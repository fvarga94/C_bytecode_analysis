ex_cfile	CALL,12:ELSE,1:DO,0:WHILE,0:FOR,0:SWITCH,1:IF,11:functions,0	218
0x40063f0	            0x4157	                                push r15	      4146	quickfix.c	FUNCTION_71
0x40063f2	            0x4156	                                push r14	      4146	quickfix.c	FUNCTION_71
0x40063f4	            0x4155	                                push r13	      4146	quickfix.c	FUNCTION_71
0x40063f6	            0x4154	                                push r12	      4146	quickfix.c	FUNCTION_71
0x40063f8	              0x55	                                push rbp	      4146	quickfix.c	FUNCTION_71
0x40063f9	              0x53	                                push rbx	      4146	quickfix.c	FUNCTION_71
0x40063fa	          0x4889fb	                            mov rbx, rdi	      4146	quickfix.c	FUNCTION_71
0x40063fd	        0x4883ec08	                              sub rsp, 8	      4146	quickfix.c	FUNCTION_71
0x4006401	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      4154	quickfix.c	FUNCTION_71	SWITCH_1
0x4006404	          0x83f83f	                           cmp eax, 0x3f	      4154	quickfix.c	FUNCTION_71	SWITCH_1
0x4006407	     0xf8413030000	                            je 0x4006720	      4154	quickfix.c	FUNCTION_71	SWITCH_1
0x400640d	            0x7e29	                           jle 0x4006438	      4154	quickfix.c	FUNCTION_71	SWITCH_1
0x400640f	      0x3ddd000000	                           cmp eax, 0xdd	      4154	quickfix.c	FUNCTION_71	SWITCH_1
0x4006414	     0xf84c6020000	                            je 0x40066e0	      4154	quickfix.c	FUNCTION_71	SWITCH_1
0x400641a	      0x3de0000000	                           cmp eax, 0xe0	      4154	quickfix.c	FUNCTION_71	SWITCH_1
0x400641f	     0xf840b030000	                            je 0x4006730	      4154	quickfix.c	FUNCTION_71	SWITCH_1
0x4006425	      0x3dd0000000	                           cmp eax, 0xd0	      4154	quickfix.c	FUNCTION_71	SWITCH_1
0x400642a	     0xf84e0020000	                            je 0x4006710	      4154	quickfix.c	FUNCTION_71	SWITCH_1
0x4006430	            0x31ed	                            xor ebp, ebp	      4150	quickfix.c	FUNCTION_71
0x4006432	            0xeb34	                           jmp 0x4006468	      4150	quickfix.c	FUNCTION_71
0x4006434	         0xf1f4000	                         nop dword [rax]	      4150	quickfix.c	FUNCTION_71
0x4006438	          0x83f831	                           cmp eax, 0x31	      4154	quickfix.c	FUNCTION_71	SWITCH_1
0x400643b	     0xf84ff020000	                            je 0x4006740	      4154	quickfix.c	FUNCTION_71	SWITCH_1
0x4006441	          0x83f83c	                           cmp eax, 0x3c	      4154	quickfix.c	FUNCTION_71	SWITCH_1
0x4006444	      0xbd00000000	                              mov ebp, 0	      4156	quickfix.c	FUNCTION_71	SWITCH_1
0x4006449	            0x75e5	                           jne 0x4006430	      4154	quickfix.c	FUNCTION_71	SWITCH_1
0x400644b	       0xf1f440000	                   nop dword [rax + rax]	      4154	quickfix.c	FUNCTION_71	SWITCH_1
0x4006450	    0x4c8b05000000	              mov r8, qword [0x04006457]	      4165	quickfix.c	FUNCTION_71	CALL_1
0x4006457	            0x31c9	                            xor ecx, ecx	      4165	quickfix.c	FUNCTION_71	CALL_1
0x4006459	            0x31d2	                            xor edx, edx	      4165	quickfix.c	FUNCTION_71	CALL_1
0x400645b	          0x4889ee	                            mov rsi, rbp	      4165	quickfix.c	FUNCTION_71	CALL_1
0x400645e	      0xbf40000000	                           mov edi, 0x40	      4165	quickfix.c	FUNCTION_71	CALL_1
0x4006463	      0xe800000000	                          call 0x4006468	      4165	quickfix.c	FUNCTION_71	CALL_1
0x4006468	    0x488b05000000	            mov rax, qword [0x0400646f] 	      4167	quickfix.c	FUNCTION_71
0x400646f	    0x8b0d00000000	            mov ecx, dword [0x04006475] 	      4170	quickfix.c	FUNCTION_71	IF_2
0x4006475	    0x4c8ba0281500	          mov r12, qword [rax + 0x1528] 	      4167	quickfix.c	FUNCTION_71
0x400647c	      0x41803c2400	                       cmp byte [r12], 0	      4167	quickfix.c	FUNCTION_71
0x4006481	    0x4c0f44250000	           cmove r12, qword [0x04006489]	      4167	quickfix.c	FUNCTION_71
0x4006489	            0x85c9	                           test ecx, ecx	      4170	quickfix.c	FUNCTION_71	IF_2
0x400648b	     0xf858f010000	                           jne 0x4006620	      4170	quickfix.c	FUNCTION_71	IF_2
0x4006491	          0x488b13	                    mov rdx, qword [rbx]	      4182	quickfix.c	FUNCTION_71	ELSE_1	IF_4
0x4006494	          0x803a00	                       cmp byte [rdx], 0	      4182	quickfix.c	FUNCTION_71	ELSE_1	IF_4
0x4006497	     0xf8523020000	                           jne 0x40066c0	      4182	quickfix.c	FUNCTION_71	ELSE_1	IF_4
0x400649d	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      4185	quickfix.c	FUNCTION_71	IF_5
0x40064a0	    0x8d9030ffffff	                   lea edx, [rax - 0xd0]	      4187	quickfix.c	FUNCTION_71	IF_5
0x40064a6	          0x83e2ef	                     and edx, 0xffffffef	      4187	quickfix.c	FUNCTION_71	IF_5
0x40064a9	     0xf84c9000000	                            je 0x4006578	      4187	quickfix.c	FUNCTION_71	IF_5
0x40064af	      0x3ddd000000	                           cmp eax, 0xdd	      4187	quickfix.c	FUNCTION_71	IF_5
0x40064b4	     0xf84be000000	                            je 0x4006578	      4187	quickfix.c	FUNCTION_71	IF_5
0x40064ba	      0x3dd0000000	                           cmp eax, 0xd0	      4200	quickfix.c	FUNCTION_71	CALL_8
0x40064bf	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      4200	quickfix.c	FUNCTION_71	CALL_8
0x40064c3	          0x4d89e1	                             mov r9, r12	      4200	quickfix.c	FUNCTION_71	CALL_8
0x40064c6	           0xf95c2	                                setne dl	      4200	quickfix.c	FUNCTION_71	CALL_8
0x40064c9	            0x31c9	                            xor ecx, ecx	      4200	quickfix.c	FUNCTION_71	CALL_8
0x40064cb	          0x83f831	                           cmp eax, 0x31	      4200	quickfix.c	FUNCTION_71	CALL_8
0x40064ce	           0xf95c1	                                setne cl	      4200	quickfix.c	FUNCTION_71	CALL_8
0x40064d1	            0x31ff	                            xor edi, edi	      4200	quickfix.c	FUNCTION_71	CALL_8
0x40064d3	          0x4531f6	                          xor r14d, r14d	      4148	quickfix.c	FUNCTION_71
0x40064d6	            0x21d1	                            and ecx, edx	      4200	quickfix.c	FUNCTION_71	CALL_8
0x40064d8	          0x4c8b06	                     mov r8, qword [rsi]	      4200	quickfix.c	FUNCTION_71	CALL_8
0x40064db	    0x488b15000000	            mov rdx, qword [0x040064e2] 	      4200	quickfix.c	FUNCTION_71	CALL_8
0x40064e2	    0x488b35000000	            mov rsi, qword [0x040064e9] 	      4200	quickfix.c	FUNCTION_71	CALL_8
0x40064e9	    0x41bd00000000	                             mov r13d, 0	      4149	quickfix.c	FUNCTION_71
0x40064ef	      0xe800000000	                          call 0x40064f4	      4200	quickfix.c	FUNCTION_71	CALL_8
0x40064f4	          0x4189c4	                           mov r12d, eax	      4200	quickfix.c	FUNCTION_71	CALL_8
0x40064f7	          0x4585e4	                         test r12d, r12d	      4204	quickfix.c	FUNCTION_71	IF_7
0x40064fa	     0xf89f9000000	                           jns 0x40065f9	      4204	quickfix.c	FUNCTION_71	IF_7
0x4006500	        0x49634508	            movsxd rax, dword [r13 + 8] 	      4204	quickfix.c	FUNCTION_71	IF_7
0x4006504	    0x488d14c50000	                        lea rdx, [rax*8]	      4207	quickfix.c	FUNCTION_71	IF_8
0x400650c	        0x48c1e007	                              shl rax, 7	      4207	quickfix.c	FUNCTION_71	IF_8
0x4006510	          0x4829d0	                            sub rax, rdx	      4207	quickfix.c	FUNCTION_71	IF_8
0x4006513	          0x4885ed	                           test rbp, rbp	      4208	quickfix.c	FUNCTION_71	IF_9
0x4006516	      0x458b7c0510	     mov r15d, dword [r13 + rax + 0x10] 	      4207	quickfix.c	FUNCTION_71	IF_8
0x400651b	            0x741d	                            je 0x400653a	      4208	quickfix.c	FUNCTION_71	IF_9
0x400651d	    0x4c8b05000000	              mov r8, qword [0x04006524]	      4209	quickfix.c	FUNCTION_71	CALL_10
0x4006524	            0x31c9	                            xor ecx, ecx	      4209	quickfix.c	FUNCTION_71	CALL_10
0x4006526	            0x31d2	                            xor edx, edx	      4209	quickfix.c	FUNCTION_71	CALL_10
0x4006528	          0x4889ee	                            mov rsi, rbp	      4209	quickfix.c	FUNCTION_71	CALL_10
0x400652b	      0xbf3f000000	                           mov edi, 0x3f	      4209	quickfix.c	FUNCTION_71	CALL_10
0x4006530	      0xe800000000	                          call 0x4006535	      4209	quickfix.c	FUNCTION_71	CALL_10
0x4006535	          0x4d85ed	                           test r13, r13	      4213	quickfix.c	FUNCTION_71	IF_10	CALL_11
0x4006538	            0x740f	                            je 0x4006549	      4213	quickfix.c	FUNCTION_71	IF_10	CALL_11
0x400653a	          0x4489fe	                           mov esi, r15d	      4213	quickfix.c	FUNCTION_71	IF_10	CALL_11
0x400653d	          0x4c89f7	                            mov rdi, r14	      4213	quickfix.c	FUNCTION_71	IF_10	CALL_11
0x4006540	      0xe88b9bffff	                   call sym.qflist_valid	      4213	quickfix.c	FUNCTION_71	IF_10	CALL_11
0x4006545	            0x85c0	                           test eax, eax	      4213	quickfix.c	FUNCTION_71	IF_10	CALL_11
0x4006547	            0x741c	                            je 0x4006565	      4213	quickfix.c	FUNCTION_71	IF_10	CALL_11
0x4006549	          0x4585e4	                         test r12d, r12d	      4215	quickfix.c	FUNCTION_71	IF_11
0x400654c	            0x7e17	                           jle 0x4006565	      4215	quickfix.c	FUNCTION_71	IF_11
0x400654e	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      4215	quickfix.c	FUNCTION_71	IF_11
0x4006551	          0x83f83c	                           cmp eax, 0x3c	      4215	quickfix.c	FUNCTION_71	IF_11
0x4006554	     0xf8446010000	                            je 0x40066a0	      4215	quickfix.c	FUNCTION_71	IF_11
0x400655a	      0x3ddd000000	                           cmp eax, 0xdd	      4215	quickfix.c	FUNCTION_71	IF_11
0x400655f	     0xf843b010000	                            je 0x40066a0	      4215	quickfix.c	FUNCTION_71	IF_11
0x4006565	        0x4883c408	                              add rsp, 8	      4217	quickfix.c	FUNCTION_71
0x4006569	              0x5b	                                 pop rbx	      4217	quickfix.c	FUNCTION_71
0x400656a	              0x5d	                                 pop rbp	      4217	quickfix.c	FUNCTION_71
0x400656b	            0x415c	                                 pop r12	      4217	quickfix.c	FUNCTION_71
0x400656d	            0x415d	                                 pop r13	      4217	quickfix.c	FUNCTION_71
0x400656f	            0x415e	                                 pop r14	      4217	quickfix.c	FUNCTION_71
0x4006571	            0x415f	                                 pop r15	      4217	quickfix.c	FUNCTION_71
0x4006573	              0xc3	                                     ret	      4217	quickfix.c	FUNCTION_71
0x4006574	         0xf1f4000	                         nop dword [rax]	      4217	quickfix.c	FUNCTION_71
0x4006578	          0x83f831	                           cmp eax, 0x31	      4200	quickfix.c	FUNCTION_71	CALL_8
0x400657b	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      4200	quickfix.c	FUNCTION_71	CALL_8
0x400657f	    0x4c8b35000000	            mov r14, qword [0x04006586] 	      4188	quickfix.c	FUNCTION_71	IF_5
0x4006586	           0xf95c2	                                setne dl	      4200	quickfix.c	FUNCTION_71	CALL_8
0x4006589	            0x31c9	                            xor ecx, ecx	      4200	quickfix.c	FUNCTION_71	CALL_8
0x400658b	      0x3dd0000000	                           cmp eax, 0xd0	      4200	quickfix.c	FUNCTION_71	CALL_8
0x4006590	           0xf95c1	                                setne cl	      4200	quickfix.c	FUNCTION_71	CALL_8
0x4006593	          0x4d89e1	                             mov r9, r12	      4200	quickfix.c	FUNCTION_71	CALL_8
0x4006596	            0x21d1	                            and ecx, edx	      4200	quickfix.c	FUNCTION_71	CALL_8
0x4006598	          0x4c8b06	                     mov r8, qword [rsi]	      4200	quickfix.c	FUNCTION_71	CALL_8
0x400659b	    0x488b15000000	            mov rdx, qword [0x040065a2] 	      4200	quickfix.c	FUNCTION_71	CALL_8
0x40065a2	    0x488b35000000	            mov rsi, qword [0x040065a9] 	      4200	quickfix.c	FUNCTION_71	CALL_8
0x40065a9	          0x4c89f7	                            mov rdi, r14	      4200	quickfix.c	FUNCTION_71	CALL_8
0x40065ac	      0xe800000000	                          call 0x40065b1	      4200	quickfix.c	FUNCTION_71	CALL_8
0x40065b1	          0x4d85f6	                           test r14, r14	      4202	quickfix.c	FUNCTION_71	IF_6
0x40065b4	          0x4189c4	                           mov r12d, eax	      4200	quickfix.c	FUNCTION_71	CALL_8
0x40065b7	     0xf848d010000	                            je 0x400674a	      4202	quickfix.c	FUNCTION_71	IF_6
0x40065bd	        0x498b7e08	                mov rdi, qword [r14 + 8]	      4203	quickfix.c	FUNCTION_71	IF_6
0x40065c1	      0xe800000000	                          call 0x40065c6	      4203	quickfix.c	FUNCTION_71	IF_6
0x40065c6	            0x85c0	                           test eax, eax	      4203	quickfix.c	FUNCTION_71	IF_6
0x40065c8	            0x7416	                            je 0x40065e0	      4203	quickfix.c	FUNCTION_71	IF_6
0x40065ca	    0x4d8bae501900	          mov r13, qword [r14 + 0x1950] 	      4203	quickfix.c	FUNCTION_71	IF_6
0x40065d1	          0x4d85ed	                           test r13, r13	      4203	quickfix.c	FUNCTION_71	IF_6
0x40065d4	     0xf851dffffff	                           jne 0x40064f7	      4203	quickfix.c	FUNCTION_71	IF_6
0x40065da	    0x660f1f440000	                    nop word [rax + rax]	      4203	quickfix.c	FUNCTION_71	IF_6
0x40065e0	          0x4585e4	                         test r12d, r12d	      4204	quickfix.c	FUNCTION_71	IF_7
0x40065e3	    0x4d8bae481900	          mov r13, qword [r14 + 0x1948] 	      4203	quickfix.c	FUNCTION_71	IF_6
0x40065ea	     0xf8800010000	                            js 0x40066f0	      4204	quickfix.c	FUNCTION_71	IF_7
0x40065f0	          0x4d85ed	                           test r13, r13	      4204	quickfix.c	FUNCTION_71	IF_7
0x40065f3	     0xf84f7000000	                            je 0x40066f0	      4204	quickfix.c	FUNCTION_71	IF_7
0x40065f9	        0x49634508	            movsxd rax, dword [r13 + 8] 	      3701	quickfix.c	FUNCTION_61
0x40065fd	    0x488d0cc50000	                        lea rcx, [rax*8]	      3701	quickfix.c	FUNCTION_61
0x4006605	          0x4889c2	                            mov rdx, rax	      3701	quickfix.c	FUNCTION_61
0x4006608	        0x48c1e207	                              shl rdx, 7	      3701	quickfix.c	FUNCTION_61
0x400660c	          0x4829ca	                            sub rdx, rcx	      3701	quickfix.c	FUNCTION_61
0x400660f	    0x498384158000	         add qword [r13 + rdx + 0x80], 1	      3701	quickfix.c	FUNCTION_61
0x4006618	      0xe9e7feffff	                           jmp 0x4006504	      3701	quickfix.c	FUNCTION_61
0x400661d	           0xf1f00	                         nop dword [rax]	      3701	quickfix.c	FUNCTION_61
0x4006620	            0x31ff	                            xor edi, edi	      4174	quickfix.c	FUNCTION_71	IF_2	CALL_4
0x4006622	      0xba05000000	                              mov edx, 5	      4174	quickfix.c	FUNCTION_71	IF_2	CALL_4
0x4006627	      0xbe00000000	                              mov esi, 0	      4174	quickfix.c	FUNCTION_71	IF_2	CALL_4
0x400662c	      0xe800000000	                          call 0x4006631	      4174	quickfix.c	FUNCTION_71	IF_2	CALL_4
0x4006631	          0x4c8b2b	                    mov r13, qword [rbx]	      4172	quickfix.c	FUNCTION_71	IF_2	CALL_3
0x4006634	            0x31ff	                            xor edi, edi	      4172	quickfix.c	FUNCTION_71	IF_2	CALL_3
0x4006636	      0xba05000000	                              mov edx, 5	      4172	quickfix.c	FUNCTION_71	IF_2	CALL_3
0x400663b	      0xbe00000000	                              mov esi, 0	      4172	quickfix.c	FUNCTION_71	IF_2	CALL_3
0x4006640	          0x4989c6	                            mov r14, rax	      4174	quickfix.c	FUNCTION_71	IF_2	CALL_4
0x4006643	      0xe800000000	                          call 0x4006648	      4172	quickfix.c	FUNCTION_71	IF_2	CALL_3
0x4006648	        0x4883ec08	                              sub rsp, 8	      4172	quickfix.c	FUNCTION_71	IF_2	CALL_3
0x400664c	          0x4c89ea	                            mov rdx, r13	      4172	quickfix.c	FUNCTION_71	IF_2	CALL_3
0x400664f	          0x4531c0	                            xor r8d, r8d	      4172	quickfix.c	FUNCTION_71	IF_2	CALL_3
0x4006652	            0x6a00	                                  push 0	      4172	quickfix.c	FUNCTION_71	IF_2	CALL_3
0x4006654	            0x31c9	                            xor ecx, ecx	      4172	quickfix.c	FUNCTION_71	IF_2	CALL_3
0x4006656	            0x31ff	                            xor edi, edi	      4172	quickfix.c	FUNCTION_71	IF_2	CALL_3
0x4006658	          0x4d89f1	                             mov r9, r14	      4172	quickfix.c	FUNCTION_71	IF_2	CALL_3
0x400665b	          0x4889c6	                            mov rsi, rax	      4172	quickfix.c	FUNCTION_71	IF_2	CALL_3
0x400665e	      0xe800000000	                          call 0x4006663	      4172	quickfix.c	FUNCTION_71	IF_2	CALL_3
0x4006663	          0x4989c5	                            mov r13, rax	      4172	quickfix.c	FUNCTION_71	IF_2	CALL_3
0x4006666	          0x4d85ed	                           test r13, r13	      4175	quickfix.c	FUNCTION_71	IF_2	IF_3
0x4006669	              0x58	                                 pop rax	      4175	quickfix.c	FUNCTION_71	IF_2	IF_3
0x400666a	              0x5a	                                 pop rdx	      4175	quickfix.c	FUNCTION_71	IF_2	IF_3
0x400666b	     0xf84f4feffff	                            je 0x4006565	      4175	quickfix.c	FUNCTION_71	IF_2	IF_3
0x4006671	          0x4531c0	                            xor r8d, r8d	      4177	quickfix.c	FUNCTION_71	IF_2	CALL_5
0x4006674	      0xb901000000	                              mov ecx, 1	      4177	quickfix.c	FUNCTION_71	IF_2	CALL_5
0x4006679	          0x4c89ea	                            mov rdx, r13	      4177	quickfix.c	FUNCTION_71	IF_2	CALL_5
0x400667c	      0xbeffffffff	                     mov esi, 0xffffffff	      4177	quickfix.c	FUNCTION_71	IF_2	CALL_5
0x4006681	      0xbf00000000	                              mov edi, 0	      4177	quickfix.c	FUNCTION_71	IF_2	CALL_5
0x4006686	      0xe800000000	                          call 0x400668b	      4177	quickfix.c	FUNCTION_71	IF_2	CALL_5
0x400668b	          0x4c89ef	                            mov rdi, r13	      4178	quickfix.c	FUNCTION_71	IF_2	CALL_6
0x400668e	      0xe800000000	                          call 0x4006693	      4178	quickfix.c	FUNCTION_71	IF_2	CALL_6
0x4006693	      0xe905feffff	                           jmp 0x400649d	      4178	quickfix.c	FUNCTION_71	IF_2	CALL_6
0x4006698	     0xf1f84000000	                   nop dword [rax + rax]	      4178	quickfix.c	FUNCTION_71	IF_2	CALL_6
0x40066a0	          0x8b4b34	            mov ecx, dword [rbx + 0x34] 	      4216	quickfix.c	FUNCTION_71	CALL_12
0x40066a3	        0x4883c408	                              add rsp, 8	      4217	quickfix.c	FUNCTION_71
0x40066a7	          0x4c89ef	                            mov rdi, r13	      4216	quickfix.c	FUNCTION_71	CALL_12
0x40066aa	              0x5b	                                 pop rbx	      4217	quickfix.c	FUNCTION_71
0x40066ab	              0x5d	                                 pop rbp	      4217	quickfix.c	FUNCTION_71
0x40066ac	            0x415c	                                 pop r12	      4217	quickfix.c	FUNCTION_71
0x40066ae	            0x415d	                                 pop r13	      4217	quickfix.c	FUNCTION_71
0x40066b0	            0x415e	                                 pop r14	      4217	quickfix.c	FUNCTION_71
0x40066b2	            0x415f	                                 pop r15	      4217	quickfix.c	FUNCTION_71
0x40066b4	            0x31d2	                            xor edx, edx	      4216	quickfix.c	FUNCTION_71	CALL_12
0x40066b6	            0x31f6	                            xor esi, esi	      4216	quickfix.c	FUNCTION_71	CALL_12
0x40066b8	      0xe983d8ffff	                         jmp sym.qf_jump	      4216	quickfix.c	FUNCTION_71	CALL_12
0x40066bd	           0xf1f00	                         nop dword [rax]	      4216	quickfix.c	FUNCTION_71	CALL_12
0x40066c0	          0x4531c0	                            xor r8d, r8d	      4183	quickfix.c	FUNCTION_71	ELSE_1	IF_4
0x40066c3	      0xb901000000	                              mov ecx, 1	      4183	quickfix.c	FUNCTION_71	ELSE_1	IF_4
0x40066c8	      0xbeffffffff	                     mov esi, 0xffffffff	      4183	quickfix.c	FUNCTION_71	ELSE_1	IF_4
0x40066cd	      0xbf00000000	                              mov edi, 0	      4183	quickfix.c	FUNCTION_71	ELSE_1	IF_4
0x40066d2	      0xe800000000	                          call 0x40066d7	      4183	quickfix.c	FUNCTION_71	ELSE_1	IF_4
0x40066d7	      0xe9c1fdffff	                           jmp 0x400649d	      4183	quickfix.c	FUNCTION_71	ELSE_1	IF_4
0x40066dc	         0xf1f4000	                         nop dword [rax]	      4183	quickfix.c	FUNCTION_71	ELSE_1	IF_4
0x40066e0	      0xbd00000000	                              mov ebp, 0	      4159	quickfix.c	FUNCTION_71	SWITCH_1
0x40066e5	      0xe966fdffff	                           jmp 0x4006450	      4159	quickfix.c	FUNCTION_71	SWITCH_1
0x40066ea	    0x660f1f440000	                    nop word [rax + rax]	      4159	quickfix.c	FUNCTION_71	SWITCH_1
0x40066f0	          0x4d85ed	                           test r13, r13	      4206	quickfix.c	FUNCTION_71	IF_8
0x40066f3	     0xf8507feffff	                           jne 0x4006500	      4206	quickfix.c	FUNCTION_71	IF_8
0x40066f9	          0x4531ff	                          xor r15d, r15d	      4151	quickfix.c	FUNCTION_71
0x40066fc	          0x4885ed	                           test rbp, rbp	      4208	quickfix.c	FUNCTION_71	IF_9
0x40066ff	     0xf8518feffff	                           jne 0x400651d	      4208	quickfix.c	FUNCTION_71	IF_9
0x4006705	      0xe93ffeffff	                           jmp 0x4006549	      4208	quickfix.c	FUNCTION_71	IF_9
0x400670a	    0x660f1f440000	                    nop word [rax + rax]	      4208	quickfix.c	FUNCTION_71	IF_9
0x4006710	      0xbd00000000	                              mov ebp, 0	      4161	quickfix.c	FUNCTION_71	SWITCH_1
0x4006715	      0xe936fdffff	                           jmp 0x4006450	      4161	quickfix.c	FUNCTION_71	SWITCH_1
0x400671a	    0x660f1f440000	                    nop word [rax + rax]	      4161	quickfix.c	FUNCTION_71	SWITCH_1
0x4006720	      0xbd00000000	                              mov ebp, 0	      4157	quickfix.c	FUNCTION_71	SWITCH_1
0x4006725	      0xe926fdffff	                           jmp 0x4006450	      4157	quickfix.c	FUNCTION_71	SWITCH_1
0x400672a	    0x660f1f440000	                    nop word [rax + rax]	      4157	quickfix.c	FUNCTION_71	SWITCH_1
0x4006730	      0xbd00000000	                              mov ebp, 0	      4160	quickfix.c	FUNCTION_71	SWITCH_1
0x4006735	      0xe916fdffff	                           jmp 0x4006450	      4160	quickfix.c	FUNCTION_71	SWITCH_1
0x400673a	    0x660f1f440000	                    nop word [rax + rax]	      4160	quickfix.c	FUNCTION_71	SWITCH_1
0x4006740	      0xbd00000000	                              mov ebp, 0	      4158	quickfix.c	FUNCTION_71	SWITCH_1
0x4006745	      0xe906fdffff	                           jmp 0x4006450	      4158	quickfix.c	FUNCTION_71	SWITCH_1
0x400674a	    0x41bd00000000	                             mov r13d, 0	      4149	quickfix.c	FUNCTION_71
0x4006750	      0xe9a2fdffff	                           jmp 0x40064f7	      4149	quickfix.c	FUNCTION_71
qf_fmt_text	CALL,1:ELSE,1:DO,0:WHILE,1:FOR,1:SWITCH,0:IF,2:functions,0	47
0x4000040	           0xfb607	                   movzx eax, byte [rdi]	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4000043	            0x84c0	                             test al, al	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4000045	     0xf8481000000	                            je 0x40000cc	      2864	quickfix.c	FUNCTION_39	FOR_1
0x400004b	          0x83fa01	                              cmp edx, 1	      2864	quickfix.c	FUNCTION_39	FOR_1
0x400004e	            0x7e7c	                           jle 0x40000cc	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4000050	          0x4989f1	                             mov r9, rsi	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4000053	          0x83ea01	                              sub edx, 1	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4000056	          0x4531c0	                            xor r8d, r8d	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4000059	            0xeb24	                           jmp 0x400007f	      2864	quickfix.c	FUNCTION_39	FOR_1
0x400005b	       0xf1f440000	                   nop dword [rax + rax]	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4000060	          0x418801	                       mov byte [r9], al	      2874	quickfix.c	FUNCTION_39	FOR_1	ELSE_1
0x4000063	         0xfb64701	               movzx eax, byte [rdi + 1]	      2874	quickfix.c	FUNCTION_39	FOR_1	ELSE_1
0x4000067	        0x4183c001	                              add r8d, 1	      2864	quickfix.c	FUNCTION_39	FOR_1
0x400006b	        0x488d4f01	                      lea rcx, [rdi + 1]	      2874	quickfix.c	FUNCTION_39	FOR_1	ELSE_1
0x400006f	            0x84c0	                             test al, al	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4000071	            0x7451	                            je 0x40000c4	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4000073	        0x4983c101	                               add r9, 1	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4000077	          0x4439c2	                            cmp edx, r8d	      2864	quickfix.c	FUNCTION_39	FOR_1
0x400007a	          0x4889cf	                            mov rdi, rcx	      2874	quickfix.c	FUNCTION_39	FOR_1	ELSE_1
0x400007d	            0x7435	                            je 0x40000b4	      2864	quickfix.c	FUNCTION_39	FOR_1
0x400007f	            0x3c0a	                             cmp al, 0xa	      2866	quickfix.c	FUNCTION_39	FOR_1	IF_1
0x4000081	            0x75dd	                           jne 0x4000060	      2866	quickfix.c	FUNCTION_39	FOR_1	IF_1
0x4000083	        0x41c60120	                     mov byte [r9], 0x20	      2868	quickfix.c	FUNCTION_39	FOR_1	IF_1
0x4000087	    0x660f1f840000	                    nop word [rax + rax]	      2868	quickfix.c	FUNCTION_39	FOR_1	IF_1
0x4000090	        0x4883c701	                              add rdi, 1	      2869	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1
0x4000094	           0xfb607	                   movzx eax, byte [rdi]	      2869	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1
0x4000097	            0x84c0	                             test al, al	      2869	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1
0x4000099	            0x7425	                            je 0x40000c0	      2869	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1
0x400009b	          0x8d48f7	                      lea ecx, [rax - 9]	      2870	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x400009e	          0x80f901	                               cmp cl, 1	      2870	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x40000a1	            0x76ed	                           jbe 0x4000090	      2870	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x40000a3	            0x3c20	                            cmp al, 0x20	      2870	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x40000a5	            0x74e9	                            je 0x4000090	      2870	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x40000a7	        0x4183c001	                              add r8d, 1	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40000ab	        0x4983c101	                               add r9, 1	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40000af	          0x4439c2	                            cmp edx, r8d	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40000b2	            0x75cb	                           jne 0x400007f	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40000b4	          0x4863d2	                         movsxd rdx, edx	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40000b7	        0xc6041600	                 mov byte [rsi + rdx], 0	      2876	quickfix.c	FUNCTION_39	ELSE_1
0x40000bb	              0xc3	                                     ret	      2876	quickfix.c	FUNCTION_39	ELSE_1
0x40000bc	         0xf1f4000	                         nop dword [rax]	      2876	quickfix.c	FUNCTION_39	ELSE_1
0x40000c0	        0x4183c001	                              add r8d, 1	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40000c4	          0x4963d0	                         movsxd rdx, r8d	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40000c7	        0xc6041600	                 mov byte [rsi + rdx], 0	      2876	quickfix.c	FUNCTION_39	ELSE_1
0x40000cb	              0xc3	                                     ret	      2876	quickfix.c	FUNCTION_39	ELSE_1
0x40000cc	            0x31d2	                            xor edx, edx	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40000ce	            0xebe7	                           jmp 0x40000b7	      2864	quickfix.c	FUNCTION_39	FOR_1
restore_start_dir	CALL,5:ELSE,0:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,2:functions,0	41
0x4001070	              0x55	                                push rbp	      4753	quickfix.c	FUNCTION_81
0x4001071	              0x53	                                push rbx	      4753	quickfix.c	FUNCTION_81
0x4001072	          0x4889fd	                            mov rbp, rdi	      4753	quickfix.c	FUNCTION_81
0x4001075	      0xbf00100000	                         mov edi, 0x1000	      4754	quickfix.c	FUNCTION_81	CALL_1
0x400107a	    0x4881ecc80000	                           sub rsp, 0xc8	      4753	quickfix.c	FUNCTION_81
0x4001081	    0x64488b042528	                mov rax, qword fs:[0x28]	      4753	quickfix.c	FUNCTION_81
0x400108a	    0x48898424b800	             mov qword [rsp + 0xb8], rax	      4753	quickfix.c	FUNCTION_81
0x4001092	            0x31c0	                            xor eax, eax	      4753	quickfix.c	FUNCTION_81
0x4001094	      0xe800000000	                          call 0x4001099	      4754	quickfix.c	FUNCTION_81	CALL_1
0x4001099	          0x4885c0	                           test rax, rax	      4756	quickfix.c	FUNCTION_81	IF_1
0x400109c	            0x7427	                            je 0x40010c5	      4756	quickfix.c	FUNCTION_81	IF_1
0x400109e	          0x4889c3	                            mov rbx, rax	      4756	quickfix.c	FUNCTION_81	IF_1
0x40010a1	      0xbe00100000	                         mov esi, 0x1000	      4758	quickfix.c	FUNCTION_81	IF_1	CALL_2
0x40010a6	          0x4889c7	                            mov rdi, rax	      4758	quickfix.c	FUNCTION_81	IF_1	CALL_2
0x40010a9	      0xe800000000	                          call 0x40010ae	      4758	quickfix.c	FUNCTION_81	IF_1	CALL_2
0x40010ae	          0x4889de	                            mov rsi, rbx	      4759	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_3
0x40010b1	          0x4889ef	                            mov rdi, rbp	      4759	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_3
0x40010b4	      0xe800000000	                          call 0x40010b9	      4759	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_3
0x40010b9	            0x85c0	                           test eax, eax	      4759	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_3
0x40010bb	            0x752b	                           jne 0x40010e8	      4759	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_3
0x40010bd	          0x4889df	                            mov rdi, rbx	      4769	quickfix.c	FUNCTION_81	IF_1	CALL_5
0x40010c0	      0xe800000000	                          call 0x40010c5	      4769	quickfix.c	FUNCTION_81	IF_1	CALL_5
0x40010c5	    0x488b8424b800	            mov rax, qword [rsp + 0xb8] 	      4771	quickfix.c	FUNCTION_81
0x40010cd	    0x644833042528	                xor rax, qword fs:[0x28]	      4771	quickfix.c	FUNCTION_81
0x40010d6	            0x753a	                           jne 0x4001112	      4771	quickfix.c	FUNCTION_81
0x40010d8	    0x4881c4c80000	                           add rsp, 0xc8	      4771	quickfix.c	FUNCTION_81
0x40010df	              0x5b	                                 pop rbx	      4771	quickfix.c	FUNCTION_81
0x40010e0	              0x5d	                                 pop rbp	      4771	quickfix.c	FUNCTION_81
0x40010e1	              0xc3	                                     ret	      4771	quickfix.c	FUNCTION_81
0x40010e2	    0x660f1f440000	                    nop word [rax + rax]	      4771	quickfix.c	FUNCTION_81
0x40010e8	    0x488b05000000	            mov rax, qword [0x040010ef] 	      4766	quickfix.c	FUNCTION_81	IF_1	IF_2
0x40010ef	          0x4889e7	                            mov rdi, rsp	      4767	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_4
0x40010f2	        0x48892c24	                    mov qword [rsp], rbp	      4765	quickfix.c	FUNCTION_81	IF_1	IF_2
0x40010f6	    0x4883b8900100	              cmp qword [rax + 0x190], 1	      4766	quickfix.c	FUNCTION_81	IF_1	IF_2
0x40010fe	            0x19c0	                            sbb eax, eax	      4766	quickfix.c	FUNCTION_81	IF_1	IF_2
0x4001100	            0x2464	                            and al, 0x64	      4766	quickfix.c	FUNCTION_81	IF_1	IF_2
0x4001102	       0x5d4000000	                           add eax, 0xd4	      4766	quickfix.c	FUNCTION_81	IF_1	IF_2
0x4001107	        0x89442420	             mov dword [rsp + 0x20], eax	      4766	quickfix.c	FUNCTION_81	IF_1	IF_2
0x400110b	      0xe800000000	                          call 0x4001110	      4767	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_4
0x4001110	            0xebab	                           jmp 0x40010bd	      4767	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_4
0x4001112	      0xe800000000	                          call 0x4001117	      4771	quickfix.c	FUNCTION_81
copy_loclist	CALL,6:ELSE,3:DO,0:WHILE,0:FOR,2:SWITCH,0:IF,10:functions,0	195
0x4003c30	            0x4157	                                push r15	      1596	quickfix.c	FUNCTION_20
0x4003c32	            0x4156	                                push r14	      1596	quickfix.c	FUNCTION_20
0x4003c34	          0x4989f7	                            mov r15, rsi	      1596	quickfix.c	FUNCTION_20
0x4003c37	            0x4155	                                push r13	      1596	quickfix.c	FUNCTION_20
0x4003c39	            0x4154	                                push r12	      1596	quickfix.c	FUNCTION_20
0x4003c3b	              0x55	                                push rbp	      1596	quickfix.c	FUNCTION_20
0x4003c3c	              0x53	                                push rbx	      1596	quickfix.c	FUNCTION_20
0x4003c3d	          0x4889fb	                            mov rbx, rdi	      1596	quickfix.c	FUNCTION_20
0x4003c40	        0x4883ec28	                           sub rsp, 0x28	      1596	quickfix.c	FUNCTION_20
0x4003c44	        0x488b7f08	                mov rdi, qword [rdi + 8]	      1606	quickfix.c	FUNCTION_20	IF_1
0x4003c48	      0xe800000000	                          call 0x4003c4d	      1606	quickfix.c	FUNCTION_20	IF_1
0x4003c4d	            0x85c0	                           test eax, eax	      1606	quickfix.c	FUNCTION_20	IF_1
0x4003c4f	     0xf848b020000	                            je 0x4003ee0	      1606	quickfix.c	FUNCTION_20	IF_1
0x4003c55	    0x4c8bb3501900	          mov r14, qword [rbx + 0x1950] 	      1606	quickfix.c	FUNCTION_20	IF_1
0x4003c5c	          0x4d85f6	                           test r14, r14	      1606	quickfix.c	FUNCTION_20	IF_1
0x4003c5f	     0xf847b020000	                            je 0x4003ee0	      1606	quickfix.c	FUNCTION_20	IF_1
0x4003c65	      0xe8b6c7ffff	                    call sym.ll_new_list	      1615	quickfix.c	FUNCTION_20	IF_3	CALL_1
0x4003c6a	          0x4885c0	                           test rax, rax	      1615	quickfix.c	FUNCTION_20	IF_3	CALL_1
0x4003c6d	          0x4889c1	                            mov rcx, rax	      1615	quickfix.c	FUNCTION_20	IF_3	CALL_1
0x4003c70	      0x4889442408	                mov qword [rsp + 8], rax	      1615	quickfix.c	FUNCTION_20	IF_3	CALL_1
0x4003c75	    0x498987481900	          mov qword [r15 + 0x1948], rax 	      1615	quickfix.c	FUNCTION_20	IF_3	CALL_1
0x4003c7c	     0xf8447020000	                            je 0x4003ec9	      1615	quickfix.c	FUNCTION_20	IF_3	CALL_1
0x4003c82	        0x418b4604	                mov eax, dword [r14 + 4]	      1618	quickfix.c	FUNCTION_20
0x4003c86	          0x894104	                mov dword [rcx + 4], eax	      1618	quickfix.c	FUNCTION_20
0x4003c89	        0x418b5604	                mov edx, dword [r14 + 4]	      1621	quickfix.c	FUNCTION_20	FOR_1
0x4003c8d	            0x85d2	                           test edx, edx	      1621	quickfix.c	FUNCTION_20	FOR_1
0x4003c8f	     0xf8e28020000	                           jle 0x4003ebd	      1621	quickfix.c	FUNCTION_20	FOR_1
0x4003c95	    0xc74424140000	               mov dword [rsp + 0x14], 0	      1621	quickfix.c	FUNCTION_20	FOR_1
0x4003c9d	      0x48636c2414	         movsxd rbp, dword [rsp + 0x14] 	      1626	quickfix.c	FUNCTION_20	FOR_1
0x4003ca2	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1626	quickfix.c	FUNCTION_20	FOR_1
0x4003ca7	          0x4889c8	                            mov rax, rcx	      1626	quickfix.c	FUNCTION_20	FOR_1
0x4003caa	          0x896808	                mov dword [rax + 8], ebp	      1626	quickfix.c	FUNCTION_20	FOR_1
0x4003cad	          0x4889eb	                            mov rbx, rbp	      1632	quickfix.c	FUNCTION_20	FOR_1
0x4003cb0	    0x488d04ed0000	                        lea rax, [rbp*8]	      1632	quickfix.c	FUNCTION_20	FOR_1
0x4003cb8	        0x48c1e307	                              shl rbx, 7	      1632	quickfix.c	FUNCTION_20	FOR_1
0x4003cbc	          0x4829c3	                            sub rbx, rax	      1632	quickfix.c	FUNCTION_20	FOR_1
0x4003cbf	        0x498d041e	                    lea rax, [r14 + rbx]	      1632	quickfix.c	FUNCTION_20	FOR_1
0x4003cc3	          0x4801cb	                            add rbx, rcx	      1632	quickfix.c	FUNCTION_20	FOR_1
0x4003cc6	          0x8b5038	            mov edx, dword [rax + 0x38] 	      1632	quickfix.c	FUNCTION_20	FOR_1
0x4003cc9	    0xc74330000000	               mov dword [rbx + 0x30], 0	      1633	quickfix.c	FUNCTION_20	FOR_1
0x4003cd0	    0xc74334000000	               mov dword [rbx + 0x34], 0	      1634	quickfix.c	FUNCTION_20	FOR_1
0x4003cd7	    0x48c743180000	               mov qword [rbx + 0x18], 0	      1635	quickfix.c	FUNCTION_20	FOR_1
0x4003cdf	    0x48c743200000	               mov qword [rbx + 0x20], 0	      1636	quickfix.c	FUNCTION_20	FOR_1
0x4003ce7	    0x48c743280000	               mov qword [rbx + 0x28], 0	      1637	quickfix.c	FUNCTION_20	FOR_1
0x4003cef	          0x895338	             mov dword [rbx + 0x38], edx	      1632	quickfix.c	FUNCTION_20	FOR_1
0x4003cf2	        0x488b7840	            mov rdi, qword [rax + 0x40] 	      1638	quickfix.c	FUNCTION_20	FOR_1	IF_4
0x4003cf6	          0x4885ff	                           test rdi, rdi	      1638	quickfix.c	FUNCTION_20	FOR_1	IF_4
0x4003cf9	     0xf8419020000	                            je 0x4003f18	      1638	quickfix.c	FUNCTION_20	FOR_1	IF_4
0x4003cff	      0xe800000000	                          call 0x4003d04	      1639	quickfix.c	FUNCTION_20	FOR_1	CALL_2
0x4003d04	        0x48894340	             mov qword [rbx + 0x40], rax	      1639	quickfix.c	FUNCTION_20	FOR_1	CALL_2
0x4003d08	    0x488d04ed0000	                        lea rax, [rbp*8]	      1642	quickfix.c	FUNCTION_20	FOR_1	ELSE_2	IF_5
0x4003d10	          0x4889eb	                            mov rbx, rbp	      1642	quickfix.c	FUNCTION_20	FOR_1	ELSE_2	IF_5
0x4003d13	        0x48c1e307	                              shl rbx, 7	      1642	quickfix.c	FUNCTION_20	FOR_1	ELSE_2	IF_5
0x4003d17	          0x4829c3	                            sub rbx, rax	      1642	quickfix.c	FUNCTION_20	FOR_1	ELSE_2	IF_5
0x4003d1a	        0x4d8d241e	                    lea r12, [r14 + rbx]	      1642	quickfix.c	FUNCTION_20	FOR_1	ELSE_2	IF_5
0x4003d1e	    0x49837c244800	               cmp qword [r12 + 0x48], 0	      1642	quickfix.c	FUNCTION_20	FOR_1	ELSE_2	IF_5
0x4003d24	     0xf84d6010000	                            je 0x4003f00	      1642	quickfix.c	FUNCTION_20	FOR_1	ELSE_2	IF_5
0x4003d2a	      0xe800000000	                          call 0x4003d2f	      1644	quickfix.c	FUNCTION_20	FOR_1	ELSE_2	IF_5	CALL_3
0x4003d2f	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1644	quickfix.c	FUNCTION_20	FOR_1	ELSE_2	IF_5	CALL_3
0x4003d34	          0x4885c0	                           test rax, rax	      1645	quickfix.c	FUNCTION_20	FOR_1	ELSE_2	IF_5	IF_6
0x4003d37	      0x4889441948	       mov qword [rcx + rbx + 0x48], rax	      1644	quickfix.c	FUNCTION_20	FOR_1	ELSE_2	IF_5	CALL_3
0x4003d3c	            0x740d	                            je 0x4003d4b	      1645	quickfix.c	FUNCTION_20	FOR_1	ELSE_2	IF_5	IF_6
0x4003d3e	      0x498b7c2448	            mov rdi, qword [r12 + 0x48] 	      1646	quickfix.c	FUNCTION_20	FOR_1	ELSE_2	IF_5	CALL_4
0x4003d43	          0x4889c6	                            mov rsi, rax	      1646	quickfix.c	FUNCTION_20	FOR_1	ELSE_2	IF_5	CALL_4
0x4003d46	      0xe800000000	                          call 0x4003d4b	      1646	quickfix.c	FUNCTION_20	FOR_1	ELSE_2	IF_5	CALL_4
0x4003d4b	    0x488d14ed0000	                        lea rdx, [rbp*8]	      1651	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7
0x4003d53	          0x4889e8	                            mov rax, rbp	      1651	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7
0x4003d56	        0x48c1e007	                              shl rax, 7	      1651	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7
0x4003d5a	          0x4829d0	                            sub rax, rdx	      1651	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7
0x4003d5d	        0x4d8d1406	                    lea r10, [r14 + rax]	      1651	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7
0x4003d61	        0x418b5230	            mov edx, dword [r10 + 0x30] 	      1651	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7
0x4003d65	            0x85d2	                           test edx, edx	      1651	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7
0x4003d67	     0xf84db000000	                            je 0x4003e48	      1651	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7
0x4003d6d	        0x498b5a18	            mov rbx, qword [r10 + 0x18] 	      1657	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4003d71	          0x4885db	                           test rbx, rbx	      1658	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4003d74	     0xf84ce000000	                            je 0x4003e48	      1658	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4003d7a	            0x85d2	                           test edx, edx	      1658	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4003d7c	     0xf8ec6000000	                           jle 0x4003e48	      1658	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4003d82	          0x4531e4	                          xor r12d, r12d	      1658	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4003d85	      0x4889442418	             mov qword [rsp + 0x18], rax	      1687	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_9
0x4003d8a	          0x4d89d5	                            mov r13, r10	      1687	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_9
0x4003d8d	            0xeb1b	                           jmp 0x4003daa	      1687	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_9
0x4003d8f	              0x90	                                     nop	      1687	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_9
0x4003d90	        0x4183c401	                             add r12d, 1	      1659	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4003d94	        0x45396530	           cmp dword [r13 + 0x30], r12d 	      1658	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4003d98	          0x488b1b	                    mov rbx, qword [rbx]	      1659	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4003d9b	     0xf8ea7000000	                           jle 0x4003e48	      1658	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4003da1	          0x4885db	                           test rbx, rbx	      1658	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4003da4	     0xf849e000000	                            je 0x4003e48	      1658	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4003daa	         0xfb64343	           movzx eax, byte [rbx + 0x43] 	      1661	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_5
0x4003dae	    0x498bbf481900	          mov rdi, qword [r15 + 0x1948] 	      1662	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8
0x4003db5	          0x4531c9	                            xor r9d, r9d	      1661	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_5
0x4003db8	            0x31c9	                            xor ecx, ecx	      1661	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_5
0x4003dba	            0x31d2	                            xor edx, edx	      1661	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_5
0x4003dbc	          0x8b7708	                mov esi, dword [rdi + 8]	      1661	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_5
0x4003dbf	              0x50	                                push rax	      1661	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_5
0x4003dc0	            0x6a00	                                  push 0	      1661	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_5
0x4003dc2	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      1661	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_5
0x4003dc5	              0x50	                                push rax	      1661	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_5
0x4003dc6	          0xff7330	                 push qword [rbx + 0x30]	      1661	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_5
0x4003dc9	         0xfb64340	           movzx eax, byte [rbx + 0x40] 	      1661	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_5
0x4003dcd	              0x50	                                push rax	      1661	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_5
0x4003dce	          0x8b431c	            mov eax, dword [rbx + 0x1c] 	      1661	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_5
0x4003dd1	              0x50	                                push rax	      1661	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_5
0x4003dd2	          0xff7310	                 push qword [rbx + 0x10]	      1661	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_5
0x4003dd5	          0xff7338	                 push qword [rbx + 0x38]	      1661	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_5
0x4003dd8	        0x4c8b4328	              mov r8, qword [rbx + 0x28]	      1661	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_5
0x4003ddc	      0xe8bfd8ffff	                   call sym.qf_add_entry	      1661	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_5
0x4003de1	        0x4883c440	                           add rsp, 0x40	      1661	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_5
0x4003de5	            0x85c0	                           test eax, eax	      1661	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_5
0x4003de7	     0xf843b010000	                            je 0x4003f28	      1661	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_5
0x4003ded	    0x498b97481900	          mov rdx, qword [r15 + 0x1948] 	      1684	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4003df4	        0x48634208	            movsxd rax, dword [rdx + 8] 	      1684	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4003df8	    0x488d0cc50000	                        lea rcx, [rax*8]	      1684	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4003e00	        0x48c1e007	                              shl rax, 7	      1684	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4003e04	          0x4829c8	                            sub rax, rcx	      1684	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4003e07	      0x488b440220	      mov rax, qword [rdx + rax + 0x20] 	      1684	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4003e0c	          0x8b5318	            mov edx, dword [rbx + 0x18] 	      1685	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4003e0f	          0x895018	             mov dword [rax + 0x18], edx	      1685	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4003e12	         0xfb65342	           movzx edx, byte [rbx + 0x42] 	      1686	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4003e16	          0x885042	               mov byte [rax + 0x42], dl	      1686	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4003e19	        0x49395d28	            cmp qword [r13 + 0x28], rbx 	      1687	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_9
0x4003e1d	     0xf856dffffff	                           jne 0x4003d90	      1687	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_9
0x4003e23	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1688	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_9
0x4003e28	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1688	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_9
0x4003e2d	        0x4183c401	                             add r12d, 1	      1659	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4003e31	      0x4889443128	       mov qword [rcx + rsi + 0x28], rax	      1688	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_9
0x4003e36	        0x45396530	           cmp dword [r13 + 0x30], r12d 	      1658	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4003e3a	          0x488b1b	                    mov rbx, qword [rbx]	      1659	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4003e3d	     0xf8f5effffff	                            jg 0x4003da1	      1658	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4003e43	       0xf1f440000	                   nop dword [rax + rax]	      1658	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4003e48	    0x488d04ed0000	                        lea rax, [rbp*8]	      1692	quickfix.c	FUNCTION_20	FOR_1
0x4003e50	        0x48c1e507	                              shl rbp, 7	      1692	quickfix.c	FUNCTION_20	FOR_1
0x4003e54	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      1692	quickfix.c	FUNCTION_20	FOR_1
0x4003e59	          0x4829c5	                            sub rbp, rax	      1692	quickfix.c	FUNCTION_20	FOR_1
0x4003e5c	      0x418b442e34	      mov eax, dword [r14 + rbp + 0x34] 	      1692	quickfix.c	FUNCTION_20	FOR_1
0x4003e61	          0x4901ed	                            add r13, rbp	      1692	quickfix.c	FUNCTION_20	FOR_1
0x4003e64	    0x49c785800000	               mov qword [r13 + 0x80], 0	      1696	quickfix.c	FUNCTION_20	FOR_1
0x4003e6f	        0x41894534	             mov dword [r13 + 0x34], eax	      1692	quickfix.c	FUNCTION_20	FOR_1
0x4003e73	    0x8b0500000000	            mov eax, dword [0x04003e79] 	      1695	quickfix.c	FUNCTION_20	FOR_1
0x4003e79	          0x83c001	                              add eax, 1	      1695	quickfix.c	FUNCTION_20	FOR_1
0x4003e7c	    0x890500000000	            mov dword [0x04003e82], eax 	      1695	quickfix.c	FUNCTION_20	FOR_1
0x4003e82	        0x41894510	             mov dword [r13 + 0x10], eax	      1695	quickfix.c	FUNCTION_20	FOR_1
0x4003e86	        0x418b4538	            mov eax, dword [r13 + 0x38] 	      1700	quickfix.c	FUNCTION_20	FOR_1	IF_10
0x4003e8a	            0x85c0	                           test eax, eax	      1700	quickfix.c	FUNCTION_20	FOR_1	IF_10
0x4003e8c	            0x7410	                            je 0x4003e9e	      1700	quickfix.c	FUNCTION_20	FOR_1	IF_10
0x4003e8e	        0x498b4518	            mov rax, qword [r13 + 0x18] 	      1702	quickfix.c	FUNCTION_20	FOR_1	IF_10
0x4003e92	    0x41c745340100	               mov dword [r13 + 0x34], 1	      1703	quickfix.c	FUNCTION_20	FOR_1	IF_10
0x4003e9a	        0x49894528	             mov qword [r13 + 0x28], rax	      1702	quickfix.c	FUNCTION_20	FOR_1	IF_10
0x4003e9e	      0x8344241401	               add dword [rsp + 0x14], 1	      1621	quickfix.c	FUNCTION_20	FOR_1
0x4003ea3	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      1621	quickfix.c	FUNCTION_20	FOR_1
0x4003ea7	        0x41394604	                cmp dword [r14 + 4], eax	      1621	quickfix.c	FUNCTION_20	FOR_1
0x4003eab	    0x498b87481900	          mov rax, qword [r15 + 0x1948] 	      1621	quickfix.c	FUNCTION_20	FOR_1
0x4003eb2	      0x4889442408	                mov qword [rsp + 8], rax	      1621	quickfix.c	FUNCTION_20	FOR_1
0x4003eb7	     0xf8fe0fdffff	                            jg 0x4003c9d	      1621	quickfix.c	FUNCTION_20	FOR_1
0x4003ebd	        0x418b4608	                mov eax, dword [r14 + 8]	      1707	quickfix.c	FUNCTION_20
0x4003ec1	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1707	quickfix.c	FUNCTION_20
0x4003ec6	          0x894108	                mov dword [rcx + 8], eax	      1707	quickfix.c	FUNCTION_20
0x4003ec9	        0x4883c428	                           add rsp, 0x28	      1708	quickfix.c	FUNCTION_20
0x4003ecd	              0x5b	                                 pop rbx	      1708	quickfix.c	FUNCTION_20
0x4003ece	              0x5d	                                 pop rbp	      1708	quickfix.c	FUNCTION_20
0x4003ecf	            0x415c	                                 pop r12	      1708	quickfix.c	FUNCTION_20
0x4003ed1	            0x415d	                                 pop r13	      1708	quickfix.c	FUNCTION_20
0x4003ed3	            0x415e	                                 pop r14	      1708	quickfix.c	FUNCTION_20
0x4003ed5	            0x415f	                                 pop r15	      1708	quickfix.c	FUNCTION_20
0x4003ed7	              0xc3	                                     ret	      1708	quickfix.c	FUNCTION_20
0x4003ed8	     0xf1f84000000	                   nop dword [rax + rax]	      1708	quickfix.c	FUNCTION_20
0x4003ee0	    0x4c8bb3481900	          mov r14, qword [rbx + 0x1948] 	      1609	quickfix.c	FUNCTION_20	ELSE_1
0x4003ee7	          0x4d85f6	                           test r14, r14	      1611	quickfix.c	FUNCTION_20	IF_2
0x4003eea	     0xf8575fdffff	                           jne 0x4003c65	      1611	quickfix.c	FUNCTION_20	IF_2
0x4003ef0	        0x4883c428	                           add rsp, 0x28	      1708	quickfix.c	FUNCTION_20
0x4003ef4	              0x5b	                                 pop rbx	      1708	quickfix.c	FUNCTION_20
0x4003ef5	              0x5d	                                 pop rbp	      1708	quickfix.c	FUNCTION_20
0x4003ef6	            0x415c	                                 pop r12	      1708	quickfix.c	FUNCTION_20
0x4003ef8	            0x415d	                                 pop r13	      1708	quickfix.c	FUNCTION_20
0x4003efa	            0x415e	                                 pop r14	      1708	quickfix.c	FUNCTION_20
0x4003efc	            0x415f	                                 pop r15	      1708	quickfix.c	FUNCTION_20
0x4003efe	              0xc3	                                     ret	      1708	quickfix.c	FUNCTION_20
0x4003eff	              0x90	                                     nop	      1708	quickfix.c	FUNCTION_20
0x4003f00	      0x488b442408	                mov rax, qword [rsp + 8]	      1649	quickfix.c	FUNCTION_20	FOR_1	ELSE_3
0x4003f05	    0x48c744184800	         mov qword [rax + rbx + 0x48], 0	      1649	quickfix.c	FUNCTION_20	FOR_1	ELSE_3
0x4003f0e	      0xe938feffff	                           jmp 0x4003d4b	      1649	quickfix.c	FUNCTION_20	FOR_1	ELSE_3
0x4003f13	       0xf1f440000	                   nop dword [rax + rax]	      1649	quickfix.c	FUNCTION_20	FOR_1	ELSE_3
0x4003f18	    0x48c743400000	               mov qword [rbx + 0x40], 0	      1641	quickfix.c	FUNCTION_20	FOR_1	ELSE_2
0x4003f20	      0xe9e3fdffff	                           jmp 0x4003d08	      1641	quickfix.c	FUNCTION_20	FOR_1	ELSE_2
0x4003f25	           0xf1f00	                         nop dword [rax]	      1641	quickfix.c	FUNCTION_20	FOR_1	ELSE_2
0x4003f28	        0x4883c428	                           add rsp, 0x28	      1708	quickfix.c	FUNCTION_20
0x4003f2c	          0x4c89ff	                            mov rdi, r15	      1676	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_6
0x4003f2f	              0x5b	                                 pop rbx	      1708	quickfix.c	FUNCTION_20
0x4003f30	              0x5d	                                 pop rbp	      1708	quickfix.c	FUNCTION_20
0x4003f31	            0x415c	                                 pop r12	      1708	quickfix.c	FUNCTION_20
0x4003f33	            0x415d	                                 pop r13	      1708	quickfix.c	FUNCTION_20
0x4003f35	            0x415e	                                 pop r14	      1708	quickfix.c	FUNCTION_20
0x4003f37	            0x415f	                                 pop r15	      1708	quickfix.c	FUNCTION_20
0x4003f39	      0xe992fcffff	                     jmp sym.qf_free_all	      1676	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_6
ex_helpgrep	CALL,17:ELSE,3:DO,0:WHILE,0:FOR,0:SWITCH,1:IF,13:functions,0	400
0x4009330	            0x4157	                                push r15	      6222	quickfix.c	FUNCTION_114
0x4009332	            0x4156	                                push r14	      6222	quickfix.c	FUNCTION_114
0x4009334	            0x4155	                                push r13	      6222	quickfix.c	FUNCTION_114
0x4009336	            0x4154	                                push r12	      6222	quickfix.c	FUNCTION_114
0x4009338	              0x55	                                push rbp	      6222	quickfix.c	FUNCTION_114
0x4009339	              0x53	                                push rbx	      6222	quickfix.c	FUNCTION_114
0x400933a	    0x4881ec480100	                          sub rsp, 0x148	      6222	quickfix.c	FUNCTION_114
0x4009341	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      6229	quickfix.c	FUNCTION_114	SWITCH_1
0x4009344	    0x64488b1c2528	                mov rbx, qword fs:[0x28]	      6222	quickfix.c	FUNCTION_114
0x400934d	    0x48899c243801	            mov qword [rsp + 0x138], rbx	      6222	quickfix.c	FUNCTION_114
0x4009355	            0x31db	                            xor ebx, ebx	      6222	quickfix.c	FUNCTION_114
0x4009357	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      6222	quickfix.c	FUNCTION_114
0x400935c	    0x48c744244000	               mov qword [rsp + 0x40], 0	      6225	quickfix.c	FUNCTION_114
0x4009365	      0x3daa000000	                           cmp eax, 0xaa	      6229	quickfix.c	FUNCTION_114	SWITCH_1
0x400936a	     0xf845e050000	                            je 0x40098ce	      6229	quickfix.c	FUNCTION_114	SWITCH_1
0x4009370	      0x3de5000000	                           cmp eax, 0xe5	      6229	quickfix.c	FUNCTION_114	SWITCH_1
0x4009375	     0xf8416030000	                            je 0x4009691	      6229	quickfix.c	FUNCTION_114	SWITCH_1
0x400937b	    0x48c744241000	               mov qword [rsp + 0x10], 0	      6227	quickfix.c	FUNCTION_114
0x4009384	    0x488b1d000000	            mov rbx, qword [0x0400938b] 	      6245	quickfix.c	FUNCTION_114
0x400938b	    0x488b15000000	            mov rdx, qword [0x04009392] 	      6246	quickfix.c	FUNCTION_114
0x4009392	      0x3de5000000	                           cmp eax, 0xe5	      6248	quickfix.c	FUNCTION_114	IF_3
0x4009397	    0xc74424240000	               mov dword [rsp + 0x24], 0	      6226	quickfix.c	FUNCTION_114
0x400939f	      0x48895c2428	             mov qword [rsp + 0x28], rbx	      6245	quickfix.c	FUNCTION_114
0x40093a4	    0x488915000000	            mov qword [0x040093ab], rdx 	      6246	quickfix.c	FUNCTION_114
0x40093ab	     0xf843c050000	                            je 0x40098ed	      6248	quickfix.c	FUNCTION_114	IF_3
0x40093b1	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      6255	quickfix.c	FUNCTION_114	CALL_4
0x40093b6	      0xbe03000000	                              mov esi, 3	      6255	quickfix.c	FUNCTION_114	CALL_4
0x40093bb	          0x488b3b	                    mov rdi, qword [rbx]	      6255	quickfix.c	FUNCTION_114	CALL_4
0x40093be	      0xe800000000	                          call 0x40093c3	      6255	quickfix.c	FUNCTION_114	CALL_4
0x40093c3	          0x4885c0	                           test rax, rax	      6257	quickfix.c	FUNCTION_114	IF_5
0x40093c6	    0x488984248000	             mov qword [rsp + 0x80], rax	      6255	quickfix.c	FUNCTION_114	CALL_4
0x40093ce	    0xc78424280100	              mov dword [rsp + 0x128], 0	      6256	quickfix.c	FUNCTION_114
0x40093d9	     0xf84f5030000	                            je 0x40097d4	      6257	quickfix.c	FUNCTION_114	IF_5
0x40093df	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      6260	quickfix.c	FUNCTION_114	IF_5	CALL_5
0x40093e3	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      6260	quickfix.c	FUNCTION_114	IF_5	CALL_5
0x40093e8	          0x488b30	                    mov rsi, qword [rax]	      6260	quickfix.c	FUNCTION_114	IF_5	CALL_5
0x40093eb	      0xe8d071ffff	                    call sym.qf_new_list	      6260	quickfix.c	FUNCTION_114	IF_5	CALL_5
0x40093f0	    0x448b0d000000	            mov r9d, dword [0x040093f7] 	      6186	quickfix.c	FUNCTION_113	IF_1
0x40093f7	          0x488b1b	                    mov rbx, qword [rbx]	      6262	quickfix.c	FUNCTION_114	IF_5	CALL_6
0x40093fa	      0x488b6c2440	            mov rbp, qword [rsp + 0x40] 	      6262	quickfix.c	FUNCTION_114	IF_5	CALL_6
0x40093ff	    0xc74424600000	               mov dword [rsp + 0x60], 0	      6185	quickfix.c	FUNCTION_113
0x4009407	          0x4585c9	                           test r9d, r9d	      6186	quickfix.c	FUNCTION_113	IF_1
0x400940a	     0xf84a0050000	                            je 0x40099b0	      6186	quickfix.c	FUNCTION_113	IF_1
0x4009410	          0x4889df	                            mov rdi, rbx	      6192	quickfix.c	FUNCTION_113	CALL_2
0x4009413	      0xe800000000	                          call 0x4009418	      6192	quickfix.c	FUNCTION_113	CALL_2
0x4009418	      0x4889442408	                mov qword [rsp + 8], rax	      6192	quickfix.c	FUNCTION_113	CALL_2
0x400941d	    0x488b05000000	            mov rax, qword [0x04009424] 	      6196	quickfix.c	FUNCTION_113
0x4009424	      0x4889442448	             mov qword [rsp + 0x48], rax	      6196	quickfix.c	FUNCTION_113
0x4009429	          0x803800	                       cmp byte [rax], 0	      6197	quickfix.c	FUNCTION_113	WHILE_1
0x400942c	            0x7518	                           jne 0x4009446	      6197	quickfix.c	FUNCTION_113	WHILE_1
0x400942e	      0xe948030000	                           jmp 0x400977b	      6197	quickfix.c	FUNCTION_113	WHILE_1
0x4009433	       0xf1f440000	                   nop dword [rax + rax]	      6197	quickfix.c	FUNCTION_113	WHILE_1
0x4009438	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      6197	quickfix.c	FUNCTION_113	WHILE_1
0x400943d	          0x803800	                       cmp byte [rax], 0	      6197	quickfix.c	FUNCTION_113	WHILE_1
0x4009440	     0xf8435030000	                            je 0x400977b	      6197	quickfix.c	FUNCTION_113	WHILE_1
0x4009446	    0x8b0500000000	            mov eax, dword [0x0400944c] 	      6197	quickfix.c	FUNCTION_113	WHILE_1
0x400944c	            0x85c0	                           test eax, eax	      6197	quickfix.c	FUNCTION_113	WHILE_1
0x400944e	     0xf8527030000	                           jne 0x400977b	      6197	quickfix.c	FUNCTION_113	WHILE_1
0x4009454	    0x488b35000000	            mov rsi, qword [0x0400945b] 	      6199	quickfix.c	FUNCTION_113	WHILE_1	CALL_3
0x400945b	      0x488d7c2448	                   lea rdi, [rsp + 0x48]	      6199	quickfix.c	FUNCTION_113	WHILE_1	CALL_3
0x4009460	      0xb900000000	                              mov ecx, 0	      6199	quickfix.c	FUNCTION_113	WHILE_1	CALL_3
0x4009465	      0xba00100000	                         mov edx, 0x1000	      6199	quickfix.c	FUNCTION_113	WHILE_1	CALL_3
0x400946a	      0xe800000000	                          call 0x400946f	      6199	quickfix.c	FUNCTION_113	WHILE_1	CALL_3
0x400946f	    0x488b3d000000	            mov rdi, qword [0x04009476] 	      6201	quickfix.c	FUNCTION_113	WHILE_1	CALL_4
0x4009476	      0x48897c2450	             mov qword [rsp + 0x50], rdi	      6201	quickfix.c	FUNCTION_113	WHILE_1	CALL_4
0x400947b	      0xe800000000	                          call 0x4009480	      6140	quickfix.c	FUNCTION_112	CALL_1
0x4009480	      0x488b5c2450	            mov rbx, qword [rsp + 0x50] 	      6141	quickfix.c	FUNCTION_112	CALL_2
0x4009485	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_125	CALL_3
0x4009488	      0xe800000000	                          call 0x400948d	       148	string3.h	FUNCTION_125	CALL_3
0x400948d	          0x4801d8	                            add rax, rbx	       148	string3.h	FUNCTION_125	CALL_3
0x4009490	    0x48bb646f632f	          movabs rbx, 0x285c2e2a2f636f64	       148	string3.h	FUNCTION_125	CALL_3
0x400949a	      0xbf5c290000	                         mov edi, 0x295c	       148	string3.h	FUNCTION_125	CALL_3
0x400949f	          0x488918	                    mov qword [rax], rbx	       148	string3.h	FUNCTION_125	CALL_3
0x40094a2	      0x488d4c2458	                   lea rcx, [rsp + 0x58]	      6142	quickfix.c	FUNCTION_112	IF_1	CALL_3
0x40094a7	    0x48bb7478745c	          movabs rbx, 0x783f3f7c5c747874	       148	string3.h	FUNCTION_125	CALL_3
0x40094b1	      0x488d54243c	                   lea rdx, [rsp + 0x3c]	      6142	quickfix.c	FUNCTION_112	IF_1	CALL_3
0x40094b6	      0x488d742450	                   lea rsi, [rsp + 0x50]	      6142	quickfix.c	FUNCTION_112	IF_1	CALL_3
0x40094bb	        0x66897810	               mov word [rax + 0x10], di	       148	string3.h	FUNCTION_125	CALL_3
0x40094bf	        0x48895808	                mov qword [rax + 8], rbx	       148	string3.h	FUNCTION_125	CALL_3
0x40094c3	        0xc6401200	                mov byte [rax + 0x12], 0	       148	string3.h	FUNCTION_125	CALL_3
0x40094c7	    0x41b822000000	                           mov r8d, 0x22	      6142	quickfix.c	FUNCTION_112	IF_1	CALL_3
0x40094cd	      0xbf01000000	                              mov edi, 1	      6142	quickfix.c	FUNCTION_112	IF_1	CALL_3
0x40094d2	      0xe800000000	                          call 0x40094d7	      6142	quickfix.c	FUNCTION_112	IF_1	CALL_3
0x40094d7	          0x83f801	                              cmp eax, 1	      6142	quickfix.c	FUNCTION_112	IF_1	CALL_3
0x40094da	     0xf8558ffffff	                           jne 0x4009438	      6142	quickfix.c	FUNCTION_112	IF_1	CALL_3
0x40094e0	      0x448b74243c	           mov r14d, dword [rsp + 0x3c] 	      6144	quickfix.c	FUNCTION_112	IF_1
0x40094e5	          0x4585f6	                         test r14d, r14d	      6144	quickfix.c	FUNCTION_112	IF_1
0x40094e8	     0xf8e4affffff	                           jle 0x4009438	      6144	quickfix.c	FUNCTION_112	IF_1
0x40094ee	    0x8b0500000000	            mov eax, dword [0x040094f4] 	      6146	quickfix.c	FUNCTION_112	IF_1	FOR_1
0x40094f4	      0x4c8b7c2458	            mov r15, qword [rsp + 0x58] 	      6146	quickfix.c	FUNCTION_112	IF_1	FOR_1
0x40094f9	            0x85c0	                           test eax, eax	      6146	quickfix.c	FUNCTION_112	IF_1	FOR_1
0x40094fb	     0xf8561020000	                           jne 0x4009762	      6146	quickfix.c	FUNCTION_112	IF_1	FOR_1
0x4009501	          0x4531e4	                          xor r12d, r12d	      6146	quickfix.c	FUNCTION_112	IF_1	FOR_1
0x4009504	    0xc74424200000	               mov dword [rsp + 0x20], 0	      6146	quickfix.c	FUNCTION_112	IF_1	FOR_1
0x400950c	         0xf1f4000	                         nop dword [rax]	      6146	quickfix.c	FUNCTION_112	IF_1	FOR_1
0x4009510	    0x48837c240800	                  cmp qword [rsp + 8], 0	      6150	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2
0x4009516	        0x4b8b1c27	              mov rbx, qword [r15 + r12]	      6151	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_4
0x400951a	            0x745c	                            je 0x4009578	      6150	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2
0x400951c	          0x4889df	                            mov rdi, rbx	      6151	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_4
0x400951f	      0xe800000000	                          call 0x4009524	      6151	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_4
0x4009524	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      6151	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_4
0x4009529	      0x4c8d6c03fd	                lea r13, [rbx + rax - 3]	      6151	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_4
0x400952e	      0xba02000000	                              mov edx, 2	      6151	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_4
0x4009533	          0x4c89ee	                            mov rsi, r13	      6151	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_4
0x4009536	      0xe800000000	                          call 0x400953b	      6151	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_4
0x400953b	            0x85c0	                           test eax, eax	      6151	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_4
0x400953d	            0x7439	                            je 0x4009578	      6151	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_4
0x400953f	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      6153	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_6
0x4009544	      0xba02000000	                              mov edx, 2	      6153	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_6
0x4009549	      0xbe00000000	                              mov esi, 0	      6153	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_6
0x400954e	      0xe800000000	                          call 0x4009553	      6153	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_6
0x4009553	            0x85c0	                           test eax, eax	      6153	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_6
0x4009555	     0xf85e7010000	                           jne 0x4009742	      6153	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_6
0x400955b	      0xba03000000	                              mov edx, 3	      6154	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_7
0x4009560	          0x4c89ee	                            mov rsi, r13	      6154	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_7
0x4009563	      0xbf00000000	                              mov edi, 0	      6154	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_7
0x4009568	      0xe800000000	                          call 0x400956d	      6154	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_7
0x400956d	            0x85c0	                           test eax, eax	      6153	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_6
0x400956f	     0xf85cd010000	                           jne 0x4009742	      6153	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_6
0x4009575	           0xf1f00	                         nop dword [rax]	      6153	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_6
0x4009578	      0xbe00000000	                              mov esi, 0	      6055	quickfix.c	FUNCTION_111	CALL_1
0x400957d	          0x4889df	                            mov rdi, rbx	      6055	quickfix.c	FUNCTION_111	CALL_1
0x4009580	      0xe800000000	                          call 0x4009585	      6055	quickfix.c	FUNCTION_111	CALL_1
0x4009585	          0x4885c0	                           test rax, rax	      6056	quickfix.c	FUNCTION_111	IF_1
0x4009588	          0x4989c6	                            mov r14, rax	      6055	quickfix.c	FUNCTION_111	CALL_1
0x400958b	     0xf84a7010000	                            je 0x4009738	      6056	quickfix.c	FUNCTION_111	IF_1
0x4009591	    0x41bd01000000	                             mov r13d, 1	      6056	quickfix.c	FUNCTION_111	IF_1
0x4009597	    0x660f1f840000	                    nop word [rax + rax]	      6056	quickfix.c	FUNCTION_111	IF_1
0x40095a0	    0x488b3d000000	            mov rdi, qword [0x040095a7] 	      6060	quickfix.c	FUNCTION_111	WHILE_1	CALL_2
0x40095a7	          0x4c89f2	                            mov rdx, r14	      6060	quickfix.c	FUNCTION_111	WHILE_1	CALL_2
0x40095aa	      0xbe01040000	                          mov esi, 0x401	      6060	quickfix.c	FUNCTION_111	WHILE_1	CALL_2
0x40095af	      0xe800000000	                          call 0x40095b4	      6060	quickfix.c	FUNCTION_111	WHILE_1	CALL_2
0x40095b4	            0x85c0	                           test eax, eax	      6060	quickfix.c	FUNCTION_111	WHILE_1	CALL_2
0x40095b6	     0xf8574010000	                           jne 0x4009730	      6060	quickfix.c	FUNCTION_111	WHILE_1	CALL_2
0x40095bc	    0x8b0500000000	            mov eax, dword [0x040095c2] 	      6060	quickfix.c	FUNCTION_111	WHILE_1	CALL_2
0x40095c2	            0x85c0	                           test eax, eax	      6060	quickfix.c	FUNCTION_111	WHILE_1	CALL_2
0x40095c4	     0xf8566010000	                           jne 0x4009730	      6060	quickfix.c	FUNCTION_111	WHILE_1	CALL_2
0x40095ca	        0x8b742460	            mov esi, dword [rsp + 0x60] 	      6066	quickfix.c	FUNCTION_111	WHILE_1	IF_2
0x40095ce	    0x4c8b3d000000	            mov r15, qword [0x040095d5] 	      6062	quickfix.c	FUNCTION_111	WHILE_1
0x40095d5	            0x85f6	                           test esi, esi	      6066	quickfix.c	FUNCTION_111	WHILE_1	IF_2
0x40095d7	     0xf85fb000000	                           jne 0x40096d8	      6066	quickfix.c	FUNCTION_111	WHILE_1	IF_2
0x40095dd	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	      6075	quickfix.c	FUNCTION_111	WHILE_1	IF_4	CALL_5
0x40095e5	            0x31d2	                            xor edx, edx	      6075	quickfix.c	FUNCTION_111	WHILE_1	IF_4	CALL_5
0x40095e7	          0x4c89fe	                            mov rsi, r15	      6075	quickfix.c	FUNCTION_111	WHILE_1	IF_4	CALL_5
0x40095ea	      0xe800000000	                          call 0x40095ef	      6075	quickfix.c	FUNCTION_111	WHILE_1	IF_4	CALL_5
0x40095ef	            0x85c0	                           test eax, eax	      6075	quickfix.c	FUNCTION_111	WHILE_1	IF_4	CALL_5
0x40095f1	            0x747f	                            je 0x4009672	      6075	quickfix.c	FUNCTION_111	WHILE_1	IF_4	CALL_5
0x40095f3	          0x4c89ff	                            mov rdi, r15	      6077	quickfix.c	FUNCTION_111	WHILE_1	IF_4	CALL_6
0x40095f6	      0xe800000000	                          call 0x40095fb	      6077	quickfix.c	FUNCTION_111	WHILE_1	IF_4	CALL_6
0x40095fb	            0x85c0	                           test eax, eax	      6080	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x40095fd	            0x7e34	                           jle 0x4009633	      6080	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x40095ff	          0x4863c8	                         movsxd rcx, eax	      6080	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x4009602	    0x41807c0fff20	         cmp byte [r15 + rcx - 1], 0x20 	      6080	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x4009608	            0x7729	                            ja 0x4009633	      6080	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x400960a	          0x83e801	                              sub eax, 1	      6080	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x400960d	        0x498d140f	                    lea rdx, [r15 + rcx]	      6080	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x4009611	          0x4829c1	                            sub rcx, rax	      6080	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x4009614	        0x498d040f	                    lea rax, [r15 + rcx]	      6080	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x4009618	            0xeb10	                           jmp 0x400962a	      6080	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x400961a	    0x660f1f440000	                    nop word [rax + rax]	      6080	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x4009620	        0x4883ea01	                              sub rdx, 1	      6080	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x4009624	        0x807aff20	                cmp byte [rdx - 1], 0x20	      6080	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x4009628	            0x7709	                            ja 0x4009633	      6080	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x400962a	          0x4839d0	                            cmp rax, rdx	      6080	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x400962d	        0xc642ff00	                   mov byte [rdx - 1], 0	      6081	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x4009631	            0x75ed	                           jne 0x4009620	      6080	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x4009633	          0x8b7508	                mov esi, dword [rbp + 8]	      6083	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	CALL_7
0x4009636	            0x6a01	                                  push 1	      6083	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	CALL_7
0x4009638	          0x4531c9	                            xor r9d, r9d	      6083	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	CALL_7
0x400963b	            0x6a01	                                  push 1	      6083	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	CALL_7
0x400963d	            0x6a00	                                  push 0	      6083	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	CALL_7
0x400963f	          0x4531c0	                            xor r8d, r8d	      6083	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	CALL_7
0x4009642	            0x6a00	                                  push 0	      6083	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	CALL_7
0x4009644	            0x6a00	                                  push 0	      6083	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	CALL_7
0x4009646	            0x31d2	                            xor edx, edx	      6083	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	CALL_7
0x4009648	    0x488b8424b000	            mov rax, qword [rsp + 0xb0] 	      6083	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	CALL_7
0x4009650	          0x4889d9	                            mov rcx, rbx	      6083	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	CALL_7
0x4009653	          0x4889ef	                            mov rdi, rbp	      6083	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	CALL_7
0x4009656	          0x4c29f8	                            sub rax, r15	      6083	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	CALL_7
0x4009659	          0x83c001	                              add eax, 1	      6083	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	CALL_7
0x400965c	              0x50	                                push rax	      6083	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	CALL_7
0x400965d	            0x4155	                                push r13	      6083	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	CALL_7
0x400965f	            0x4157	                                push r15	      6083	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	CALL_7
0x4009661	      0xe83a80ffff	                   call sym.qf_add_entry	      6083	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	CALL_7
0x4009666	        0x4883c440	                           add rsp, 0x40	      6083	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	CALL_7
0x400966a	            0x85c0	                           test eax, eax	      6083	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	CALL_7
0x400966c	     0xf849c000000	                            je 0x400970e	      6083	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	CALL_7
0x4009672	    0x4c3b3d000000	            cmp r15, qword [0x04009679] 	      6109	quickfix.c	FUNCTION_111	WHILE_1	IF_7
0x4009679	            0x7408	                            je 0x4009683	      6109	quickfix.c	FUNCTION_111	WHILE_1	IF_7
0x400967b	          0x4c89ff	                            mov rdi, r15	      6110	quickfix.c	FUNCTION_111	WHILE_1	CALL_9
0x400967e	      0xe800000000	                          call 0x4009683	      6110	quickfix.c	FUNCTION_111	WHILE_1	CALL_9
0x4009683	        0x4983c501	                              add r13, 1	      6112	quickfix.c	FUNCTION_111	WHILE_1
0x4009687	      0xe800000000	                          call 0x400968c	      6113	quickfix.c	FUNCTION_111	WHILE_1	CALL_10
0x400968c	      0xe90fffffff	                           jmp 0x40095a0	      6113	quickfix.c	FUNCTION_111	WHILE_1	CALL_10
0x4009691	    0x48c744241000	               mov qword [rsp + 0x10], 0	      6232	quickfix.c	FUNCTION_114	SWITCH_1
0x400969a	    0x4c8b05000000	              mov r8, qword [0x040096a1]	      6236	quickfix.c	FUNCTION_114	IF_1
0x40096a1	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      6235	quickfix.c	FUNCTION_114	IF_1	CALL_1
0x40096a6	      0xb901000000	                              mov ecx, 1	      6235	quickfix.c	FUNCTION_114	IF_1	CALL_1
0x40096ab	      0xbf40000000	                           mov edi, 0x40	      6235	quickfix.c	FUNCTION_114	IF_1	CALL_1
0x40096b0	    0x498b90980000	              mov rdx, qword [r8 + 0x98]	      6235	quickfix.c	FUNCTION_114	IF_1	CALL_1
0x40096b7	      0xe800000000	                          call 0x40096bc	      6235	quickfix.c	FUNCTION_114	IF_1	CALL_1
0x40096bc	            0x85c0	                           test eax, eax	      6235	quickfix.c	FUNCTION_114	IF_1	CALL_1
0x40096be	     0xf8507030000	                           jne 0x40099cb	      6235	quickfix.c	FUNCTION_114	IF_1	CALL_1
0x40096c4	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      6235	quickfix.c	FUNCTION_114	IF_1	CALL_1
0x40096c9	          0x8b4020	            mov eax, dword [rax + 0x20] 	      6235	quickfix.c	FUNCTION_114	IF_1	CALL_1
0x40096cc	      0xe9b3fcffff	                           jmp 0x4009384	      6235	quickfix.c	FUNCTION_114	IF_1	CALL_1
0x40096d1	     0xf1f80000000	                         nop dword [rax]	      6235	quickfix.c	FUNCTION_114	IF_1	CALL_1
0x40096d8	          0x4c89ff	                            mov rdi, r15	      6067	quickfix.c	FUNCTION_111	WHILE_1	IF_2	CALL_3
0x40096db	      0xe800000000	                          call 0x40096e0	      6067	quickfix.c	FUNCTION_111	WHILE_1	IF_2	CALL_3
0x40096e0	            0x85c0	                           test eax, eax	      6067	quickfix.c	FUNCTION_111	WHILE_1	IF_2	CALL_3
0x40096e2	     0xf84f5feffff	                            je 0x40095dd	      6067	quickfix.c	FUNCTION_111	WHILE_1	IF_2	CALL_3
0x40096e8	    0x488b35000000	            mov rsi, qword [0x040096ef] 	      6069	quickfix.c	FUNCTION_111	WHILE_1	IF_2	CALL_4
0x40096ef	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      6069	quickfix.c	FUNCTION_111	WHILE_1	IF_2	CALL_4
0x40096f4	            0x31d2	                            xor edx, edx	      6069	quickfix.c	FUNCTION_111	WHILE_1	IF_2	CALL_4
0x40096f6	      0xe800000000	                          call 0x40096fb	      6069	quickfix.c	FUNCTION_111	WHILE_1	IF_2	CALL_4
0x40096fb	          0x4989c7	                            mov r15, rax	      6069	quickfix.c	FUNCTION_111	WHILE_1	IF_2	CALL_4
0x40096fe	          0x4885c0	                           test rax, rax	      6071	quickfix.c	FUNCTION_111	WHILE_1	IF_2	IF_3
0x4009701	    0x4c0f443d0000	           cmove r15, qword [0x04009709]	      6071	quickfix.c	FUNCTION_111	WHILE_1	IF_2	IF_3
0x4009709	      0xe9cffeffff	                           jmp 0x40095dd	      6071	quickfix.c	FUNCTION_111	WHILE_1	IF_2	IF_3
0x400970e	    0x4c3b3d000000	            cmp r15, qword [0x04009715] 	      6102	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	IF_6
0x4009715	    0xc70500000000	               mov dword [0x0400971f], 1	      6100	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5
0x400971f	            0x740f	                            je 0x4009730	      6102	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	IF_6
0x4009721	          0x4c89ff	                            mov rdi, r15	      6103	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	CALL_8
0x4009724	      0xe800000000	                          call 0x4009729	      6103	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	CALL_8
0x4009729	     0xf1f80000000	                         nop dword [rax]	      6103	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	CALL_8
0x4009730	          0x4c89f7	                            mov rdi, r14	      6115	quickfix.c	FUNCTION_111	CALL_11
0x4009733	      0xe800000000	                          call 0x4009738	      6115	quickfix.c	FUNCTION_111	CALL_11
0x4009738	      0x4c8b7c2458	            mov r15, qword [rsp + 0x58] 	      6115	quickfix.c	FUNCTION_111	CALL_11
0x400973d	      0x448b74243c	           mov r14d, dword [rsp + 0x3c] 	      6115	quickfix.c	FUNCTION_111	CALL_11
0x4009742	      0x8344242001	               add dword [rsp + 0x20], 1	      6146	quickfix.c	FUNCTION_112	IF_1	FOR_1
0x4009747	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      6146	quickfix.c	FUNCTION_112	IF_1	FOR_1
0x400974b	          0x4439f0	                           cmp eax, r14d	      6146	quickfix.c	FUNCTION_112	IF_1	FOR_1
0x400974e	            0x7d12	                           jge 0x4009762	      6146	quickfix.c	FUNCTION_112	IF_1	FOR_1
0x4009750	    0x8b0500000000	            mov eax, dword [0x04009756] 	      6146	quickfix.c	FUNCTION_112	IF_1	FOR_1
0x4009756	        0x4983c408	                              add r12, 8	      6146	quickfix.c	FUNCTION_112	IF_1	FOR_1
0x400975a	            0x85c0	                           test eax, eax	      6146	quickfix.c	FUNCTION_112	IF_1	FOR_1
0x400975c	     0xf84aefdffff	                            je 0x4009510	      6146	quickfix.c	FUNCTION_112	IF_1	FOR_1
0x4009762	          0x4c89fe	                            mov rsi, r15	      6165	quickfix.c	FUNCTION_112	IF_1	CALL_10
0x4009765	          0x4489f7	                           mov edi, r14d	      6165	quickfix.c	FUNCTION_112	IF_1	CALL_10
0x4009768	      0xe800000000	                          call 0x400976d	      6165	quickfix.c	FUNCTION_112	IF_1	CALL_10
0x400976d	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      6197	quickfix.c	FUNCTION_113	WHILE_1
0x4009772	          0x803800	                       cmp byte [rax], 0	      6197	quickfix.c	FUNCTION_113	WHILE_1
0x4009775	     0xf85cbfcffff	                           jne 0x4009446	      6197	quickfix.c	FUNCTION_113	WHILE_1
0x400977b	      0x448b442460	            mov r8d, dword [rsp + 0x60] 	      6212	quickfix.c	FUNCTION_113	IF_2
0x4009780	          0x4585c0	                           test r8d, r8d	      6212	quickfix.c	FUNCTION_113	IF_2
0x4009783	            0x740e	                            je 0x4009793	      6212	quickfix.c	FUNCTION_113	IF_2
0x4009785	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      6213	quickfix.c	FUNCTION_113	CALL_5
0x400978a	            0x31d2	                            xor edx, edx	      6213	quickfix.c	FUNCTION_113	CALL_5
0x400978c	            0x31f6	                            xor esi, esi	      6213	quickfix.c	FUNCTION_113	CALL_5
0x400978e	      0xe800000000	                          call 0x4009793	      6213	quickfix.c	FUNCTION_113	CALL_5
0x4009793	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	      6264	quickfix.c	FUNCTION_114	IF_5	CALL_7
0x400979b	      0xe800000000	                          call 0x40097a0	      6264	quickfix.c	FUNCTION_114	IF_5	CALL_7
0x40097a0	      0x488b4c2440	            mov rcx, qword [rsp + 0x40] 	      6266	quickfix.c	FUNCTION_114	IF_5
0x40097a5	        0x48635108	            movsxd rdx, dword [rcx + 8] 	      6266	quickfix.c	FUNCTION_114	IF_5
0x40097a9	    0x488d34d50000	                        lea rsi, [rdx*8]	      6266	quickfix.c	FUNCTION_114	IF_5
0x40097b1	          0x4889d0	                            mov rax, rdx	      6266	quickfix.c	FUNCTION_114	IF_5
0x40097b4	        0x48c1e007	                              shl rax, 7	      6266	quickfix.c	FUNCTION_114	IF_5
0x40097b8	          0x4829f0	                            sub rax, rsi	      6266	quickfix.c	FUNCTION_114	IF_5
0x40097bb	          0x4801c8	                            add rax, rcx	      6266	quickfix.c	FUNCTION_114	IF_5
0x40097be	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      6268	quickfix.c	FUNCTION_114	IF_5
0x40097c2	    0xc74038000000	               mov dword [rax + 0x38], 0	      6266	quickfix.c	FUNCTION_114	IF_5
0x40097c9	    0xc74034010000	               mov dword [rax + 0x34], 1	      6269	quickfix.c	FUNCTION_114	IF_5
0x40097d0	        0x48895028	             mov qword [rax + 0x28], rdx	      6267	quickfix.c	FUNCTION_114	IF_5
0x40097d4	    0x488b05000000	            mov rax, qword [0x040097db] 	      6272	quickfix.c	FUNCTION_114	IF_6
0x40097db	    0x483905000000	            cmp qword [0x040097e2], rax 	      6272	quickfix.c	FUNCTION_114	IF_6
0x40097e2	     0xf84f4000000	                            je 0x40098dc	      6272	quickfix.c	FUNCTION_114	IF_6
0x40097e8	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      6276	quickfix.c	FUNCTION_114	CALL_8
0x40097ed	      0xe800000000	                          call 0x40097f2	      6276	quickfix.c	FUNCTION_114	CALL_8
0x40097f2	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      6278	quickfix.c	FUNCTION_114	CALL_9
0x40097f7	            0x31f6	                            xor esi, esi	      6279	quickfix.c	FUNCTION_114	CALL_10
0x40097f9	        0x48634708	            movsxd rax, dword [rdi + 8] 	      3701	quickfix.c	FUNCTION_61
0x40097fd	    0x488d14c50000	                        lea rdx, [rax*8]	      3701	quickfix.c	FUNCTION_61
0x4009805	        0x48c1e007	                              shl rax, 7	      3701	quickfix.c	FUNCTION_61
0x4009809	          0x4829d0	                            sub rax, rdx	      3701	quickfix.c	FUNCTION_61
0x400980c	    0x488384078000	         add qword [rdi + rax + 0x80], 1	      3701	quickfix.c	FUNCTION_61
0x4009815	      0xe89681ffff	               call sym.qf_update_buffer	      6279	quickfix.c	FUNCTION_114	CALL_10
0x400981a	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      6281	quickfix.c	FUNCTION_114	IF_7
0x4009820	            0x7442	                            je 0x4009864	      6281	quickfix.c	FUNCTION_114	IF_7
0x4009822	    0x4c8b05000000	              mov r8, qword [0x04009829]	      6284	quickfix.c	FUNCTION_114	IF_7
0x4009829	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      6283	quickfix.c	FUNCTION_114	IF_7	CALL_11
0x400982e	      0xb901000000	                              mov ecx, 1	      6283	quickfix.c	FUNCTION_114	IF_7	CALL_11
0x4009833	      0xbf3f000000	                           mov edi, 0x3f	      6283	quickfix.c	FUNCTION_114	IF_7	CALL_11
0x4009838	    0x498b90980000	              mov rdx, qword [r8 + 0x98]	      6283	quickfix.c	FUNCTION_114	IF_7	CALL_11
0x400983f	      0xe800000000	                          call 0x4009844	      6283	quickfix.c	FUNCTION_114	IF_7	CALL_11
0x4009844	        0x8b4c2424	            mov ecx, dword [rsp + 0x24] 	      6285	quickfix.c	FUNCTION_114	IF_7	IF_8	CALL_12
0x4009848	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      6285	quickfix.c	FUNCTION_114	IF_7	IF_8	CALL_12
0x400984d	            0x85c9	                           test ecx, ecx	      6285	quickfix.c	FUNCTION_114	IF_7	IF_8	CALL_12
0x400984f	            0x7518	                           jne 0x4009869	      6285	quickfix.c	FUNCTION_114	IF_7	IF_8	CALL_12
0x4009851	    0x4881ff000000	                              cmp rdi, 0	      6285	quickfix.c	FUNCTION_114	IF_7	IF_8	CALL_12
0x4009858	            0x740f	                            je 0x4009869	      6285	quickfix.c	FUNCTION_114	IF_7	IF_8	CALL_12
0x400985a	      0xe8c180ffff	                    call sym.qf_find_buf	      6285	quickfix.c	FUNCTION_114	IF_7	IF_8	CALL_12
0x400985f	          0x4885c0	                           test rax, rax	      6285	quickfix.c	FUNCTION_114	IF_7	IF_8	CALL_12
0x4009862	            0x7441	                            je 0x40098a5	      6285	quickfix.c	FUNCTION_114	IF_7	IF_8	CALL_12
0x4009864	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      6285	quickfix.c	FUNCTION_114	IF_7	IF_8	CALL_12
0x4009869	        0x48634708	            movsxd rax, dword [rdi + 8] 	      6291	quickfix.c	FUNCTION_114	IF_9
0x400986d	    0x488d14c50000	                        lea rdx, [rax*8]	      6291	quickfix.c	FUNCTION_114	IF_9
0x4009875	        0x48c1e007	                              shl rax, 7	      6291	quickfix.c	FUNCTION_114	IF_9
0x4009879	          0x4829d0	                            sub rax, rdx	      6291	quickfix.c	FUNCTION_114	IF_9
0x400987c	        0x8b540730	      mov edx, dword [rdi + rax + 0x30] 	      6291	quickfix.c	FUNCTION_114	IF_9
0x4009880	            0x85d2	                           test edx, edx	      6291	quickfix.c	FUNCTION_114	IF_9
0x4009882	     0xf8eaf000000	                           jle 0x4009937	      6291	quickfix.c	FUNCTION_114	IF_9
0x4009888	            0x31c9	                            xor ecx, ecx	      6292	quickfix.c	FUNCTION_114	CALL_13
0x400988a	            0x31d2	                            xor edx, edx	      6292	quickfix.c	FUNCTION_114	CALL_13
0x400988c	            0x31f6	                            xor esi, esi	      6292	quickfix.c	FUNCTION_114	CALL_13
0x400988e	      0xe800000000	                          call 0x4009893	      6292	quickfix.c	FUNCTION_114	CALL_13
0x4009893	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      6296	quickfix.c	FUNCTION_114	IF_10
0x4009898	    0x817820e50000	           cmp dword [rax + 0x20], 0xe5 	      6296	quickfix.c	FUNCTION_114	IF_10
0x400989f	     0xf84c8000000	                            je 0x400996d	      6296	quickfix.c	FUNCTION_114	IF_10
0x40098a5	    0x488b84243801	           mov rax, qword [rsp + 0x138] 	      6308	quickfix.c	FUNCTION_114
0x40098ad	    0x644833042528	                xor rax, qword fs:[0x28]	      6308	quickfix.c	FUNCTION_114
0x40098b6	     0xf858f010000	                           jne 0x4009a4b	      6308	quickfix.c	FUNCTION_114
0x40098bc	    0x4881c4480100	                          add rsp, 0x148	      6308	quickfix.c	FUNCTION_114
0x40098c3	              0x5b	                                 pop rbx	      6308	quickfix.c	FUNCTION_114
0x40098c4	              0x5d	                                 pop rbp	      6308	quickfix.c	FUNCTION_114
0x40098c5	            0x415c	                                 pop r12	      6308	quickfix.c	FUNCTION_114
0x40098c7	            0x415d	                                 pop r13	      6308	quickfix.c	FUNCTION_114
0x40098c9	            0x415e	                                 pop r14	      6308	quickfix.c	FUNCTION_114
0x40098cb	            0x415f	                                 pop r15	      6308	quickfix.c	FUNCTION_114
0x40098cd	              0xc3	                                     ret	      6308	quickfix.c	FUNCTION_114
0x40098ce	    0x48c744241000	               mov qword [rsp + 0x10], 0	      6231	quickfix.c	FUNCTION_114	SWITCH_1
0x40098d7	      0xe9befdffff	                           jmp 0x400969a	      6231	quickfix.c	FUNCTION_114	SWITCH_1
0x40098dc	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      6273	quickfix.c	FUNCTION_114	IF_6
0x40098e1	    0x488905000000	            mov qword [0x040098e8], rax 	      6273	quickfix.c	FUNCTION_114	IF_6
0x40098e8	      0xe905ffffff	                           jmp 0x40097f2	      6273	quickfix.c	FUNCTION_114	IF_6
0x40098ed	    0x488b05000000	            mov rax, qword [0x040098f4] 	      6016	quickfix.c	FUNCTION_110	IF_1	CALL_1
0x40098f4	        0x488b7808	                mov rdi, qword [rax + 8]	      6016	quickfix.c	FUNCTION_110	IF_1	CALL_1
0x40098f8	      0xe800000000	                          call 0x40098fd	      6016	quickfix.c	FUNCTION_110	IF_1	CALL_1
0x40098fd	            0x85c0	                           test eax, eax	      6016	quickfix.c	FUNCTION_110	IF_1	CALL_1
0x40098ff	     0xf8416010000	                            je 0x4009a1b	      6016	quickfix.c	FUNCTION_110	IF_1	CALL_1
0x4009905	    0x488b1d000000	            mov rbx, qword [0x0400990c] 	      6017	quickfix.c	FUNCTION_110	IF_1
0x400990c	          0x4885db	                           test rbx, rbx	      6024	quickfix.c	FUNCTION_110	IF_3
0x400990f	     0xf84eb000000	                            je 0x4009a00	      6024	quickfix.c	FUNCTION_110	IF_3
0x4009915	    0x488b83481900	          mov rax, qword [rbx + 0x1948] 	      6027	quickfix.c	FUNCTION_110	ELSE_2
0x400991c	          0x4885c0	                           test rax, rax	      6029	quickfix.c	FUNCTION_110	ELSE_2	IF_4
0x400991f	     0xf84db000000	                            je 0x4009a00	      6029	quickfix.c	FUNCTION_110	ELSE_2	IF_4
0x4009925	    0xc74424240000	               mov dword [rsp + 0x24], 0	      6226	quickfix.c	FUNCTION_114
0x400992d	      0x4889442440	             mov qword [rsp + 0x40], rax	      6250	quickfix.c	FUNCTION_114	IF_3	CALL_3
0x4009932	      0xe97afaffff	                           jmp 0x40093b1	      6250	quickfix.c	FUNCTION_114	IF_3	CALL_3
0x4009937	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      6294	quickfix.c	FUNCTION_114	CALL_15
0x400993c	            0x31ff	                            xor edi, edi	      6294	quickfix.c	FUNCTION_114	CALL_15
0x400993e	      0xba05000000	                              mov edx, 5	      6294	quickfix.c	FUNCTION_114	CALL_15
0x4009943	      0xbe00000000	                              mov esi, 0	      6294	quickfix.c	FUNCTION_114	CALL_15
0x4009948	          0x488b18	                    mov rbx, qword [rax]	      6294	quickfix.c	FUNCTION_114	CALL_15
0x400994b	      0xe800000000	                          call 0x4009950	      6294	quickfix.c	FUNCTION_114	CALL_15
0x4009950	          0x4889c7	                            mov rdi, rax	      6294	quickfix.c	FUNCTION_114	CALL_15
0x4009953	          0x4889de	                            mov rsi, rbx	      6294	quickfix.c	FUNCTION_114	CALL_15
0x4009956	      0xe800000000	                          call 0x400995b	      6294	quickfix.c	FUNCTION_114	CALL_15
0x400995b	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      6296	quickfix.c	FUNCTION_114	IF_10
0x4009960	    0x817820e50000	           cmp dword [rax + 0x20], 0xe5 	      6296	quickfix.c	FUNCTION_114	IF_10
0x4009967	     0xf8538ffffff	                           jne 0x40098a5	      6296	quickfix.c	FUNCTION_114	IF_10
0x400996d	    0x488b05000000	            mov rax, qword [0x04009974] 	      6300	quickfix.c	FUNCTION_114	IF_10	IF_11	CALL_16
0x4009974	        0x488b7808	                mov rdi, qword [rax + 8]	      6300	quickfix.c	FUNCTION_114	IF_10	IF_11	CALL_16
0x4009978	      0xe800000000	                          call 0x400997d	      6300	quickfix.c	FUNCTION_114	IF_10	IF_11	CALL_16
0x400997d	            0x85c0	                           test eax, eax	      6300	quickfix.c	FUNCTION_114	IF_10	IF_11	CALL_16
0x400997f	            0x745c	                            je 0x40099dd	      6300	quickfix.c	FUNCTION_114	IF_10	IF_11	CALL_16
0x4009981	    0x488b05000000	            mov rax, qword [0x04009988] 	      6300	quickfix.c	FUNCTION_114	IF_10	IF_11	CALL_16
0x4009988	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	      6300	quickfix.c	FUNCTION_114	IF_10	IF_11	CALL_16
0x400998d	    0x488b88481900	          mov rcx, qword [rax + 0x1948] 	      6300	quickfix.c	FUNCTION_114	IF_10	IF_11	CALL_16
0x4009994	          0x4839d1	                            cmp rcx, rdx	      6300	quickfix.c	FUNCTION_114	IF_10	IF_11	CALL_16
0x4009997	            0x7444	                            je 0x40099dd	      6300	quickfix.c	FUNCTION_114	IF_10	IF_11	CALL_16
0x4009999	          0x4885c9	                           test rcx, rcx	      6305	quickfix.c	FUNCTION_114	IF_10	ELSE_3	IF_13
0x400999c	     0xf8503ffffff	                           jne 0x40098a5	      6305	quickfix.c	FUNCTION_114	IF_10	ELSE_3	IF_13
0x40099a2	    0x488990481900	          mov qword [rax + 0x1948], rdx 	      6306	quickfix.c	FUNCTION_114	IF_10	ELSE_3	IF_13
0x40099a9	      0xe9f7feffff	                           jmp 0x40098a5	      6306	quickfix.c	FUNCTION_114	IF_10	ELSE_3	IF_13
0x40099ae	            0x6690	                                     nop	      6306	quickfix.c	FUNCTION_114	IF_10	ELSE_3	IF_13
0x40099b0	    0x488b15000000	            mov rdx, qword [0x040099b7] 	      6187	quickfix.c	FUNCTION_113	CALL_1
0x40099b7	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      6187	quickfix.c	FUNCTION_113	CALL_1
0x40099bc	      0xbe00000000	                              mov esi, 0	      6187	quickfix.c	FUNCTION_113	CALL_1
0x40099c1	      0xe800000000	                          call 0x40099c6	      6187	quickfix.c	FUNCTION_113	CALL_1
0x40099c6	      0xe945faffff	                           jmp 0x4009410	      6187	quickfix.c	FUNCTION_113	CALL_1
0x40099cb	      0xe800000000	                          call 0x40099d0	      6239	quickfix.c	FUNCTION_114	IF_1	IF_2	CALL_2
0x40099d0	            0x85c0	                           test eax, eax	      6239	quickfix.c	FUNCTION_114	IF_1	IF_2	CALL_2
0x40099d2	     0xf85cdfeffff	                           jne 0x40098a5	      6239	quickfix.c	FUNCTION_114	IF_1	IF_2	CALL_2
0x40099d8	      0xe9e7fcffff	                           jmp 0x40096c4	      6239	quickfix.c	FUNCTION_114	IF_1	IF_2	CALL_2
0x40099dd	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      6302	quickfix.c	FUNCTION_114	IF_10	IF_11	IF_12
0x40099e1	            0x85c0	                           test eax, eax	      6302	quickfix.c	FUNCTION_114	IF_10	IF_11	IF_12
0x40099e3	     0xf84bcfeffff	                            je 0x40098a5	      6302	quickfix.c	FUNCTION_114	IF_10	IF_11	IF_12
0x40099e9	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      6303	quickfix.c	FUNCTION_114	IF_10	IF_11	CALL_17
0x40099ee	      0xe8cd69ffff	                    call sym.ll_free_all	      6303	quickfix.c	FUNCTION_114	IF_10	IF_11	CALL_17
0x40099f3	      0xe9adfeffff	                           jmp 0x40098a5	      6303	quickfix.c	FUNCTION_114	IF_10	IF_11	CALL_17
0x40099f8	     0xf1f84000000	                   nop dword [rax + rax]	      6303	quickfix.c	FUNCTION_114	IF_10	IF_11	CALL_17
0x4009a00	      0xe81b6affff	                    call sym.ll_new_list	      6032	quickfix.c	FUNCTION_110	ELSE_2	IF_4	IF_5	CALL_4
0x4009a05	          0x4885c0	                           test rax, rax	      6032	quickfix.c	FUNCTION_110	ELSE_2	IF_4	IF_5	CALL_4
0x4009a08	     0xf8497feffff	                            je 0x40098a5	      6032	quickfix.c	FUNCTION_110	ELSE_2	IF_4	IF_5	CALL_4
0x4009a0e	    0xc74424240100	               mov dword [rsp + 0x24], 1	      6034	quickfix.c	FUNCTION_110	ELSE_2	IF_4
0x4009a16	      0xe912ffffff	                           jmp 0x400992d	      6034	quickfix.c	FUNCTION_110	ELSE_2	IF_4
0x4009a1b	    0x488b1d000000	            mov rbx, qword [0x04009a22] 	      6020	quickfix.c	FUNCTION_110	ELSE_1	CALL_2
0x4009a22	          0x4885db	                           test rbx, rbx	      6020	quickfix.c	FUNCTION_110	ELSE_1	CALL_2
0x4009a25	            0x7512	                           jne 0x4009a39	      6020	quickfix.c	FUNCTION_110	ELSE_1	CALL_2
0x4009a27	            0xebd7	                           jmp 0x4009a00	      6020	quickfix.c	FUNCTION_110	ELSE_1	CALL_2
0x4009a29	     0xf1f80000000	                         nop dword [rax]	      6020	quickfix.c	FUNCTION_110	ELSE_1	CALL_2
0x4009a30	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      6020	quickfix.c	FUNCTION_110	ELSE_1	CALL_2
0x4009a34	          0x4885db	                           test rbx, rbx	      6020	quickfix.c	FUNCTION_110	ELSE_1	CALL_2
0x4009a37	            0x74c7	                            je 0x4009a00	      6020	quickfix.c	FUNCTION_110	ELSE_1	CALL_2
0x4009a39	        0x488b7b08	                mov rdi, qword [rbx + 8]	      6021	quickfix.c	FUNCTION_110	ELSE_1	IF_2	CALL_3
0x4009a3d	      0xe800000000	                          call 0x4009a42	      6021	quickfix.c	FUNCTION_110	ELSE_1	IF_2	CALL_3
0x4009a42	            0x85c0	                           test eax, eax	      6021	quickfix.c	FUNCTION_110	ELSE_1	IF_2	CALL_3
0x4009a44	            0x74ea	                            je 0x4009a30	      6021	quickfix.c	FUNCTION_110	ELSE_1	IF_2	CALL_3
0x4009a46	      0xe9cafeffff	                           jmp 0x4009915	      6021	quickfix.c	FUNCTION_110	ELSE_1	IF_2	CALL_3
0x4009a4b	      0xe800000000	                    call obj.start.72258	      6308	quickfix.c	FUNCTION_114
mark_quickfix_ctx	CALL,1:ELSE,0:DO,0:WHILE,0:FOR,1:SWITCH,0:IF,1:functions,0	41
0x4001190	            0x4154	                                push r12	      5790	quickfix.c	FUNCTION_106
0x4001192	          0x4989fc	                            mov r12, rdi	      5790	quickfix.c	FUNCTION_106
0x4001195	              0x55	                                push rbp	      5790	quickfix.c	FUNCTION_106
0x4001196	            0x89f5	                            mov ebp, esi	      5790	quickfix.c	FUNCTION_106
0x4001198	              0x53	                                push rbx	      5790	quickfix.c	FUNCTION_106
0x4001199	            0x31db	                            xor ebx, ebx	      5790	quickfix.c	FUNCTION_106
0x400119b	            0xeb24	                           jmp 0x40011c1	      5790	quickfix.c	FUNCTION_106
0x400119d	           0xf1f00	                         nop dword [rax]	      5790	quickfix.c	FUNCTION_106
0x40011a0	          0x83f807	                              cmp eax, 7	      5799	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x40011a3	            0x7442	                            je 0x40011e7	      5799	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x40011a5	            0x31d2	                            xor edx, edx	      5800	quickfix.c	FUNCTION_106	FOR_1	CALL_1
0x40011a7	            0x31c9	                            xor ecx, ecx	      5800	quickfix.c	FUNCTION_106	FOR_1	CALL_1
0x40011a9	            0x89ee	                            mov esi, ebp	      5800	quickfix.c	FUNCTION_106	FOR_1	CALL_1
0x40011ab	      0xe800000000	                          call 0x40011b0	      5800	quickfix.c	FUNCTION_106	FOR_1	CALL_1
0x40011b0	            0x85c0	                           test eax, eax	      5800	quickfix.c	FUNCTION_106	FOR_1	CALL_1
0x40011b2	           0xf94c2	                                 sete dl	      5800	quickfix.c	FUNCTION_106	FOR_1	CALL_1
0x40011b5	          0x83c301	                              add ebx, 1	      5795	quickfix.c	FUNCTION_106	FOR_1
0x40011b8	          0x83fb09	                              cmp ebx, 9	      5795	quickfix.c	FUNCTION_106	FOR_1
0x40011bb	            0x7f39	                            jg 0x40011f6	      5795	quickfix.c	FUNCTION_106	FOR_1
0x40011bd	            0x84d2	                             test dl, dl	      5795	quickfix.c	FUNCTION_106	FOR_1
0x40011bf	            0x7435	                            je 0x40011f6	      5795	quickfix.c	FUNCTION_106	FOR_1
0x40011c1	          0x4863c3	                         movsxd rax, ebx	      5797	quickfix.c	FUNCTION_106	FOR_1
0x40011c4	    0x488d14c50000	                        lea rdx, [rax*8]	      5797	quickfix.c	FUNCTION_106	FOR_1
0x40011cc	        0x48c1e007	                              shl rax, 7	      5797	quickfix.c	FUNCTION_106	FOR_1
0x40011d0	          0x4829d0	                            sub rax, rdx	      5797	quickfix.c	FUNCTION_106	FOR_1
0x40011d3	      0x498b7c0448	      mov rdi, qword [r12 + rax + 0x48] 	      5797	quickfix.c	FUNCTION_106	FOR_1
0x40011d8	          0x4885ff	                           test rdi, rdi	      5798	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x40011db	            0x740a	                            je 0x40011e7	      5798	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x40011dd	            0x8b07	                    mov eax, dword [rdi]	      5798	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x40011df	          0x8d50ff	                      lea edx, [rax - 1]	      5799	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x40011e2	          0x83fa01	                              cmp edx, 1	      5799	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x40011e5	            0x77b9	                            ja 0x40011a0	      5799	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x40011e7	          0x83c301	                              add ebx, 1	      5795	quickfix.c	FUNCTION_106	FOR_1
0x40011ea	            0x31c0	                            xor eax, eax	      5795	quickfix.c	FUNCTION_106	FOR_1
0x40011ec	      0xba01000000	                              mov edx, 1	      5795	quickfix.c	FUNCTION_106	FOR_1
0x40011f1	          0x83fb09	                              cmp ebx, 9	      5795	quickfix.c	FUNCTION_106	FOR_1
0x40011f4	            0x7ec7	                           jle 0x40011bd	      5795	quickfix.c	FUNCTION_106	FOR_1
0x40011f6	              0x5b	                                 pop rbx	      5804	quickfix.c	FUNCTION_106
0x40011f7	              0x5d	                                 pop rbp	      5804	quickfix.c	FUNCTION_106
0x40011f8	            0x415c	                                 pop r12	      5804	quickfix.c	FUNCTION_106
0x40011fa	              0xc3	                                     ret	      5804	quickfix.c	FUNCTION_106
ex_cnext	CALL,3:ELSE,1:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,3:functions,0	97
0x4006250	              0x53	                                push rbx	      4099	quickfix.c	FUNCTION_70
0x4006251	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      4103	quickfix.c	FUNCTION_70	IF_1
0x4006254	          0x4889fb	                            mov rbx, rdi	      4099	quickfix.c	FUNCTION_70
0x4006257	    0x8d9036ffffff	                   lea edx, [rax - 0xca]	      4104	quickfix.c	FUNCTION_70	IF_1
0x400625d	          0x83fa2e	                           cmp edx, 0x2e	      4104	quickfix.c	FUNCTION_70	IF_1
0x4006260	     0xf8742010000	                            ja 0x40063a8	      4104	quickfix.c	FUNCTION_70	IF_1
0x4006266	    0x48b903401000	              movabs rcx, 0x605000104003	      4110	quickfix.c	FUNCTION_70	IF_1
0x4006270	        0x480fa3d1	                             bt rcx, rdx	      4110	quickfix.c	FUNCTION_70	IF_1
0x4006274	     0xf832e010000	                           jae 0x40063a8	      4110	quickfix.c	FUNCTION_70	IF_1
0x400627a	    0x488b05000000	            mov rax, qword [0x04006281] 	      4112	quickfix.c	FUNCTION_70	IF_1
0x4006281	        0x488b7808	                mov rdi, qword [rax + 8]	      4112	quickfix.c	FUNCTION_70	IF_1
0x4006285	      0xe800000000	                          call 0x400628a	      4112	quickfix.c	FUNCTION_70	IF_1
0x400628a	            0x85c0	                           test eax, eax	      4112	quickfix.c	FUNCTION_70	IF_1
0x400628c	    0x488b05000000	            mov rax, qword [0x04006293] 	      4112	quickfix.c	FUNCTION_70	IF_1
0x4006293	     0xf84df000000	                            je 0x4006378	      4112	quickfix.c	FUNCTION_70	IF_1
0x4006299	    0x488bb8501900	          mov rdi, qword [rax + 0x1950] 	      4112	quickfix.c	FUNCTION_70	IF_1
0x40062a0	          0x4885ff	                           test rdi, rdi	      4112	quickfix.c	FUNCTION_70	IF_1
0x40062a3	     0xf84cf000000	                            je 0x4006378	      4112	quickfix.c	FUNCTION_70	IF_1
0x40062a9	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      4112	quickfix.c	FUNCTION_70	IF_1
0x40062ac	          0x8b5338	            mov edx, dword [rbx + 0x38] 	      4120	quickfix.c	FUNCTION_70	IF_3
0x40062af	      0x3dd8000000	                           cmp eax, 0xd8	      4121	quickfix.c	FUNCTION_70	IF_3
0x40062b4	        0x410f95c0	                               setne r8b	      4121	quickfix.c	FUNCTION_70	IF_3
0x40062b8	            0x85d2	                           test edx, edx	      4120	quickfix.c	FUNCTION_70	IF_3
0x40062ba	     0xf8e01010000	                           jle 0x40063c1	      4120	quickfix.c	FUNCTION_70	IF_3
0x40062c0	            0x89c2	                            mov edx, eax	      4122	quickfix.c	FUNCTION_70	IF_3
0x40062c2	          0x83e2fb	                     and edx, 0xfffffffb	      4122	quickfix.c	FUNCTION_70	IF_3
0x40062c5	          0x83fa39	                           cmp edx, 0x39	      4122	quickfix.c	FUNCTION_70	IF_3
0x40062c8	     0xf84f3000000	                            je 0x40063c1	      4122	quickfix.c	FUNCTION_70	IF_3
0x40062ce	      0x3dde000000	                           cmp eax, 0xde	      4122	quickfix.c	FUNCTION_70	IF_3
0x40062d3	           0xf95c2	                                setne dl	      4122	quickfix.c	FUNCTION_70	IF_3
0x40062d6	          0x4484c2	                            test dl, r8b	      4122	quickfix.c	FUNCTION_70	IF_3
0x40062d9	     0xf84e2000000	                            je 0x40063c1	      4122	quickfix.c	FUNCTION_70	IF_3
0x40062df	          0x8b5348	            mov edx, dword [rbx + 0x48] 	      4123	quickfix.c	FUNCTION_70	IF_3
0x40062e2	          0x83f84e	                           cmp eax, 0x4e	      4128	quickfix.c	FUNCTION_70
0x40062e5	          0x8b4b34	            mov ecx, dword [rbx + 0x34] 	      4127	quickfix.c	FUNCTION_70	CALL_3
0x40062e8	        0x410f95c1	                               setne r9b	      4128	quickfix.c	FUNCTION_70
0x40062ec	      0x3dee000000	                           cmp eax, 0xee	      4128	quickfix.c	FUNCTION_70
0x40062f1	        0x400f95c6	                               setne sil	      4128	quickfix.c	FUNCTION_70
0x40062f5	          0x4421ce	                            and esi, r9d	      4128	quickfix.c	FUNCTION_70
0x40062f8	          0x83f839	                           cmp eax, 0x39	      4128	quickfix.c	FUNCTION_70
0x40062fb	        0x410f95c1	                               setne r9b	      4128	quickfix.c	FUNCTION_70
0x40062ff	          0x4484ce	                           test sil, r9b	      4128	quickfix.c	FUNCTION_70
0x4006302	     0xf84c8000000	                            je 0x40063d0	      4128	quickfix.c	FUNCTION_70
0x4006308	          0x4584c0	                           test r8b, r8b	      4128	quickfix.c	FUNCTION_70
0x400630b	     0xf84bf000000	                            je 0x40063d0	      4128	quickfix.c	FUNCTION_70
0x4006311	          0x83f850	                           cmp eax, 0x50	      4131	quickfix.c	FUNCTION_70
0x4006314	        0x410f95c0	                               setne r8b	      4131	quickfix.c	FUNCTION_70
0x4006318	      0x3df0000000	                           cmp eax, 0xf0	      4131	quickfix.c	FUNCTION_70
0x400631d	        0x400f95c6	                               setne sil	      4131	quickfix.c	FUNCTION_70
0x4006321	          0x4421c6	                            and esi, r8d	      4131	quickfix.c	FUNCTION_70
0x4006324	          0x83f83d	                           cmp eax, 0x3d	      4131	quickfix.c	FUNCTION_70
0x4006327	        0x410f95c0	                               setne r8b	      4131	quickfix.c	FUNCTION_70
0x400632b	          0x4484c6	                           test sil, r8b	      4131	quickfix.c	FUNCTION_70
0x400632e	     0xf84ac000000	                            je 0x40063e0	      4131	quickfix.c	FUNCTION_70
0x4006334	      0x3dde000000	                           cmp eax, 0xde	      4131	quickfix.c	FUNCTION_70
0x4006339	     0xf84a1000000	                            je 0x40063e0	      4131	quickfix.c	FUNCTION_70
0x400633f	          0x83f85e	                           cmp eax, 0x5e	      4134	quickfix.c	FUNCTION_70
0x4006342	        0x410f94c0	                                sete r8b	      4134	quickfix.c	FUNCTION_70
0x4006346	      0x3df8000000	                           cmp eax, 0xf8	      4134	quickfix.c	FUNCTION_70
0x400634b	        0x400f94c6	                                sete sil	      4134	quickfix.c	FUNCTION_70
0x400634f	          0x4409c6	                             or esi, r8d	      4134	quickfix.c	FUNCTION_70
0x4006352	          0x83f82c	                           cmp eax, 0x2c	      4134	quickfix.c	FUNCTION_70
0x4006355	        0x410f94c0	                                sete r8b	      4134	quickfix.c	FUNCTION_70
0x4006359	          0x4408c6	                             or sil, r8b	      4134	quickfix.c	FUNCTION_70
0x400635c	            0x750c	                           jne 0x400636a	      4134	quickfix.c	FUNCTION_70
0x400635e	      0x3dcb000000	                           cmp eax, 0xcb	      4134	quickfix.c	FUNCTION_70
0x4006363	      0xbeffffffff	                     mov esi, 0xffffffff	      4136	quickfix.c	FUNCTION_70
0x4006368	            0x756b	                           jne 0x40063d5	      4134	quickfix.c	FUNCTION_70
0x400636a	      0xbefdffffff	                     mov esi, 0xfffffffd	      4136	quickfix.c	FUNCTION_70
0x400636f	            0xeb64	                           jmp 0x40063d5	      4136	quickfix.c	FUNCTION_70
0x4006371	     0xf1f80000000	                         nop dword [rax]	      4136	quickfix.c	FUNCTION_70
0x4006378	    0x488bb8481900	          mov rdi, qword [rax + 0x1948] 	      4112	quickfix.c	FUNCTION_70	IF_1
0x400637f	          0x4885ff	                           test rdi, rdi	      4113	quickfix.c	FUNCTION_70	IF_1	IF_2
0x4006382	     0xf8521ffffff	                           jne 0x40062a9	      4113	quickfix.c	FUNCTION_70	IF_1	IF_2
0x4006388	            0x31ff	                            xor edi, edi	      4115	quickfix.c	FUNCTION_70	IF_1	IF_2	CALL_2
0x400638a	      0xba05000000	                              mov edx, 5	      4115	quickfix.c	FUNCTION_70	IF_1	IF_2	CALL_2
0x400638f	      0xbe00000000	                              mov esi, 0	      4115	quickfix.c	FUNCTION_70	IF_1	IF_2	CALL_2
0x4006394	      0xe800000000	                          call 0x4006399	      4115	quickfix.c	FUNCTION_70	IF_1	IF_2	CALL_2
0x4006399	              0x5b	                                 pop rbx	      4138	quickfix.c	FUNCTION_70
0x400639a	          0x4889c7	                            mov rdi, rax	      4115	quickfix.c	FUNCTION_70	IF_1	IF_2	CALL_2
0x400639d	      0xe900000000	                           jmp 0x40063a2	      4115	quickfix.c	FUNCTION_70	IF_1	IF_2	CALL_2
0x40063a2	    0x660f1f440000	                    nop word [rax + rax]	      4115	quickfix.c	FUNCTION_70	IF_1	IF_2	CALL_2
0x40063a8	          0x8b5338	            mov edx, dword [rbx + 0x38] 	      4120	quickfix.c	FUNCTION_70	IF_3
0x40063ab	      0x3dd8000000	                           cmp eax, 0xd8	      4121	quickfix.c	FUNCTION_70	IF_3
0x40063b0	      0xbf00000000	                              mov edi, 0	      4100	quickfix.c	FUNCTION_70
0x40063b5	        0x410f95c0	                               setne r8b	      4121	quickfix.c	FUNCTION_70	IF_3
0x40063b9	            0x85d2	                           test edx, edx	      4120	quickfix.c	FUNCTION_70	IF_3
0x40063bb	     0xf8ffffeffff	                            jg 0x40062c0	      4120	quickfix.c	FUNCTION_70	IF_3
0x40063c1	      0xba01000000	                              mov edx, 1	      4125	quickfix.c	FUNCTION_70	ELSE_1
0x40063c6	      0xe917ffffff	                           jmp 0x40062e2	      4125	quickfix.c	FUNCTION_70	ELSE_1
0x40063cb	       0xf1f440000	                   nop dword [rax + rax]	      4125	quickfix.c	FUNCTION_70	ELSE_1
0x40063d0	      0xbe01000000	                              mov esi, 1	      4127	quickfix.c	FUNCTION_70	CALL_3
0x40063d5	              0x5b	                                 pop rbx	      4138	quickfix.c	FUNCTION_70
0x40063d6	      0xe965dbffff	                         jmp sym.qf_jump	      4127	quickfix.c	FUNCTION_70	CALL_3
0x40063db	       0xf1f440000	                   nop dword [rax + rax]	      4127	quickfix.c	FUNCTION_70	CALL_3
0x40063e0	      0xbe03000000	                              mov esi, 3	      4133	quickfix.c	FUNCTION_70
0x40063e5	            0xebee	                           jmp 0x40063d5	      4133	quickfix.c	FUNCTION_70
qf_find_buf	CALL,2:ELSE,0:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,1:functions,0	40
0x4001920	            0x4154	                                push r12	      3469	quickfix.c	FUNCTION_56
0x4001922	    0x4c8b25000000	            mov r12, qword [0x04001929] 	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4001929	              0x55	                                push rbp	      3469	quickfix.c	FUNCTION_56
0x400192a	          0x4889fd	                            mov rbp, rdi	      3469	quickfix.c	FUNCTION_56
0x400192d	              0x53	                                push rbx	      3469	quickfix.c	FUNCTION_56
0x400192e	          0x4d85e4	                           test r12, r12	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4001931	            0x7466	                            je 0x4001999	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4001933	    0x4c3925000000	            cmp qword [0x0400193a], r12 	      3473	quickfix.c	FUNCTION_56	CALL_1
0x400193a	            0x7464	                            je 0x40019a0	      3473	quickfix.c	FUNCTION_56	CALL_1
0x400193c	      0x498b5c2420	            mov rbx, qword [r12 + 0x20] 	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4001941	            0xeb12	                           jmp 0x4001955	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4001943	       0xf1f440000	                   nop dword [rax + rax]	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4001948	    0x483bab501900	          cmp rbp, qword [rbx + 0x1950] 	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x400194f	            0x742f	                            je 0x4001980	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4001951	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4001955	          0x4885db	                           test rbx, rbx	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4001958	            0x7436	                            je 0x4001990	      3473	quickfix.c	FUNCTION_56	CALL_1
0x400195a	        0x488b7b08	                mov rdi, qword [rbx + 8]	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400195e	      0xe800000000	                          call 0x4001963	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4001963	            0x85c0	                           test eax, eax	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4001965	            0x74ea	                            je 0x4001951	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4001967	    0x4881fd000000	                              cmp rbp, 0	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x400196e	            0x75d8	                           jne 0x4001948	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4001970	    0x4883bb501900	             cmp qword [rbx + 0x1950], 0	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4001978	            0x75d7	                           jne 0x4001951	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x400197a	    0x660f1f440000	                    nop word [rax + rax]	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4001980	        0x488b4308	                mov rax, qword [rbx + 8]	      3475	quickfix.c	FUNCTION_56	IF_1
0x4001984	              0x5b	                                 pop rbx	      3478	quickfix.c	FUNCTION_56
0x4001985	              0x5d	                                 pop rbp	      3478	quickfix.c	FUNCTION_56
0x4001986	            0x415c	                                 pop r12	      3478	quickfix.c	FUNCTION_56
0x4001988	              0xc3	                                     ret	      3478	quickfix.c	FUNCTION_56
0x4001989	     0xf1f80000000	                         nop dword [rax]	      3478	quickfix.c	FUNCTION_56
0x4001990	        0x4d8b2424	                    mov r12, qword [r12]	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4001994	          0x4d85e4	                           test r12, r12	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4001997	            0x759a	                           jne 0x4001933	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4001999	            0x31c0	                            xor eax, eax	      3477	quickfix.c	FUNCTION_56
0x400199b	            0xebe7	                           jmp 0x4001984	      3477	quickfix.c	FUNCTION_56
0x400199d	           0xf1f00	                         nop dword [rax]	      3477	quickfix.c	FUNCTION_56
0x40019a0	    0x488b1d000000	            mov rbx, qword [0x040019a7] 	      3473	quickfix.c	FUNCTION_56	CALL_1
0x40019a7	            0xebac	                           jmp 0x4001955	      3473	quickfix.c	FUNCTION_56	CALL_1
qf_win_pos_update	CALL,2:ELSE,1:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,2:functions,0	36
0x40012d0	            0x4154	                                push r12	      3399	quickfix.c	FUNCTION_53
0x40012d2	              0x55	                                push rbp	      3399	quickfix.c	FUNCTION_53
0x40012d3	          0x4863ee	                         movsxd rbp, esi	      3399	quickfix.c	FUNCTION_53
0x40012d6	              0x53	                                push rbx	      3399	quickfix.c	FUNCTION_53
0x40012d7	        0x48634708	            movsxd rax, dword [rdi + 8] 	      3401	quickfix.c	FUNCTION_53
0x40012db	    0x488d14c50000	                        lea rdx, [rax*8]	      3401	quickfix.c	FUNCTION_53
0x40012e3	        0x48c1e007	                              shl rax, 7	      3401	quickfix.c	FUNCTION_53
0x40012e7	          0x4829d0	                            sub rax, rdx	      3401	quickfix.c	FUNCTION_53
0x40012ea	      0x448b640734	     mov r12d, dword [rdi + rax + 0x34] 	      3401	quickfix.c	FUNCTION_53
0x40012ef	      0xe80cffffff	                    call sym.qf_find_win	      3407	quickfix.c	FUNCTION_53	CALL_1
0x40012f4	          0x4885c0	                           test rax, rax	      3408	quickfix.c	FUNCTION_53	IF_1
0x40012f7	          0x4889c3	                            mov rbx, rax	      3407	quickfix.c	FUNCTION_53	CALL_1
0x40012fa	            0x742c	                            je 0x4001328	      3408	quickfix.c	FUNCTION_53	IF_1
0x40012fc	        0x488b4008	                mov rax, qword [rax + 8]	      3409	quickfix.c	FUNCTION_53	IF_1
0x4001300	          0x4963f4	                        movsxd rsi, r12d	      3409	quickfix.c	FUNCTION_53	IF_1
0x4001303	          0x483b30	                    cmp rsi, qword [rax]	      3410	quickfix.c	FUNCTION_53	IF_1
0x4001306	            0x7f20	                            jg 0x4001328	      3410	quickfix.c	FUNCTION_53	IF_1
0x4001308	          0x4139ec	                           cmp r12d, ebp	      3410	quickfix.c	FUNCTION_53	IF_1
0x400130b	            0x741b	                            je 0x4001328	      3410	quickfix.c	FUNCTION_53	IF_1
0x400130d	          0x4139ec	                           cmp r12d, ebp	      3412	quickfix.c	FUNCTION_53	IF_1	IF_2
0x4001310	            0x7f26	                            jg 0x4001338	      3412	quickfix.c	FUNCTION_53	IF_1	IF_2
0x4001312	    0x4889b3300100	            mov qword [rbx + 0x130], rsi	      3419	quickfix.c	FUNCTION_53	IF_1	ELSE_1
0x4001319	    0x4889ab380100	            mov qword [rbx + 0x138], rbp	      3420	quickfix.c	FUNCTION_53	IF_1	ELSE_1
0x4001320	          0x4889df	                            mov rdi, rbx	      3422	quickfix.c	FUNCTION_53	IF_1	CALL_2
0x4001323	      0xe808fbffff	                    call sym.qf_win_goto	      3422	quickfix.c	FUNCTION_53	IF_1	CALL_2
0x4001328	            0x31c0	                            xor eax, eax	      3424	quickfix.c	FUNCTION_53
0x400132a	          0x4885db	                           test rbx, rbx	      3424	quickfix.c	FUNCTION_53
0x400132d	           0xf95c0	                                setne al	      3424	quickfix.c	FUNCTION_53
0x4001330	              0x5b	                                 pop rbx	      3425	quickfix.c	FUNCTION_53
0x4001331	              0x5d	                                 pop rbp	      3425	quickfix.c	FUNCTION_53
0x4001332	            0x415c	                                 pop r12	      3425	quickfix.c	FUNCTION_53
0x4001334	              0xc3	                                     ret	      3425	quickfix.c	FUNCTION_53
0x4001335	           0xf1f00	                         nop dword [rax]	      3425	quickfix.c	FUNCTION_53
0x4001338	    0x4889ab300100	            mov qword [rbx + 0x130], rbp	      3414	quickfix.c	FUNCTION_53	IF_1	IF_2
0x400133f	    0x4889b3380100	            mov qword [rbx + 0x138], rsi	      3415	quickfix.c	FUNCTION_53	IF_1	IF_2
0x4001346	            0xebd8	                           jmp 0x4001320	      3415	quickfix.c	FUNCTION_53	IF_1	IF_2
ll_new_list	CALL,2:ELSE,0:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,1:functions,0	20
0x4000420	        0x4883ec08	                              sub rsp, 8	      1556	quickfix.c	FUNCTION_18
0x4000424	      0xbfc0040000	                          mov edi, 0x4c0	      1559	quickfix.c	FUNCTION_18	CALL_1
0x4000429	      0xe800000000	                          call 0x400042e	      1559	quickfix.c	FUNCTION_18	CALL_1
0x400042e	          0x4885c0	                           test rax, rax	      1560	quickfix.c	FUNCTION_18	IF_1
0x4000431	          0x4889c2	                            mov rdx, rax	      1559	quickfix.c	FUNCTION_18	CALL_1
0x4000434	            0x7431	                            je 0x4000467	      1560	quickfix.c	FUNCTION_18	IF_1
0x4000436	        0x488d7808	                      lea rdi, [rax + 8]	        90	string3.h	FUNCTION_118	CALL_6
0x400043a	          0x4889c1	                            mov rcx, rax	        90	string3.h	FUNCTION_118	CALL_6
0x400043d	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_118	CALL_6
0x4000444	    0x48c780b80400	              mov qword [rax + 0x4b8], 0	        90	string3.h	FUNCTION_118	CALL_6
0x400044f	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_118	CALL_6
0x4000451	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_118	CALL_6
0x4000455	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_118	CALL_6
0x4000458	    0x81c1c0040000	                          add ecx, 0x4c0	        90	string3.h	FUNCTION_118	CALL_6
0x400045e	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_118	CALL_6
0x4000461	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_118	CALL_6
0x4000464	          0x830201	                      add dword [rdx], 1	      1563	quickfix.c	FUNCTION_18	IF_1
0x4000467	          0x4889d0	                            mov rax, rdx	      1567	quickfix.c	FUNCTION_18
0x400046a	        0x4883c408	                              add rsp, 8	      1567	quickfix.c	FUNCTION_18
0x400046e	              0xc3	                                     ret	      1567	quickfix.c	FUNCTION_18
ex_cexpr	CALL,11:ELSE,1:DO,0:WHILE,0:FOR,0:SWITCH,1:IF,9:functions,0	153
0x40090d0	            0x4156	                                push r14	      5943	quickfix.c	FUNCTION_109
0x40090d2	            0x4155	                                push r13	      5943	quickfix.c	FUNCTION_109
0x40090d4	            0x4154	                                push r12	      5943	quickfix.c	FUNCTION_109
0x40090d6	              0x55	                                push rbp	      5943	quickfix.c	FUNCTION_109
0x40090d7	              0x53	                                push rbx	      5943	quickfix.c	FUNCTION_109
0x40090d8	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      5949	quickfix.c	FUNCTION_109	SWITCH_1
0x40090db	          0x4889fb	                            mov rbx, rdi	      5943	quickfix.c	FUNCTION_109
0x40090de	          0x83f841	                           cmp eax, 0x41	      5949	quickfix.c	FUNCTION_109	SWITCH_1
0x40090e1	     0xf8439020000	                            je 0x4009320	      5949	quickfix.c	FUNCTION_109	SWITCH_1
0x40090e7	            0x7e47	                           jle 0x4009130	      5949	quickfix.c	FUNCTION_109	SWITCH_1
0x40090e9	      0x3ddc000000	                           cmp eax, 0xdc	      5949	quickfix.c	FUNCTION_109	SWITCH_1
0x40090ee	     0xf84ec010000	                            je 0x40092e0	      5949	quickfix.c	FUNCTION_109	SWITCH_1
0x40090f4	      0x3de2000000	                           cmp eax, 0xe2	      5949	quickfix.c	FUNCTION_109	SWITCH_1
0x40090f9	     0xf8411020000	                            je 0x4009310	      5949	quickfix.c	FUNCTION_109	SWITCH_1
0x40090ff	      0x3dce000000	                           cmp eax, 0xce	      5949	quickfix.c	FUNCTION_109	SWITCH_1
0x4009104	     0xf84e6010000	                            je 0x40092f0	      5949	quickfix.c	FUNCTION_109	SWITCH_1
0x400910a	      0x2dce000000	                           sub eax, 0xce	      5970	quickfix.c	FUNCTION_109	IF_3
0x400910f	          0x4531ed	                          xor r13d, r13d	      5946	quickfix.c	FUNCTION_109
0x4009112	          0x83f814	                           cmp eax, 0x14	      5970	quickfix.c	FUNCTION_109	IF_3
0x4009115	            0x7666	                           jbe 0x400917d	      5970	quickfix.c	FUNCTION_109	IF_3
0x4009117	    0x660f1f840000	                    nop word [rax + rax]	      5970	quickfix.c	FUNCTION_109	IF_3
0x4009120	    0x41bc00000000	                             mov r12d, 0	      5945	quickfix.c	FUNCTION_109
0x4009126	            0xeb78	                           jmp 0x40091a0	      5945	quickfix.c	FUNCTION_109
0x4009128	     0xf1f84000000	                   nop dword [rax + rax]	      5945	quickfix.c	FUNCTION_109
0x4009130	          0x83f830	                           cmp eax, 0x30	      5949	quickfix.c	FUNCTION_109	SWITCH_1
0x4009133	     0xf84c7010000	                            je 0x4009300	      5949	quickfix.c	FUNCTION_109	SWITCH_1
0x4009139	          0x83f83b	                           cmp eax, 0x3b	      5949	quickfix.c	FUNCTION_109	SWITCH_1
0x400913c	    0x41bd00000000	                             mov r13d, 0	      5951	quickfix.c	FUNCTION_109	SWITCH_1
0x4009142	            0x75c6	                           jne 0x400910a	      5949	quickfix.c	FUNCTION_109	SWITCH_1
0x4009144	         0xf1f4000	                         nop dword [rax]	      5949	quickfix.c	FUNCTION_109	SWITCH_1
0x4009148	    0x4c8b05000000	              mov r8, qword [0x0400914f]	      5960	quickfix.c	FUNCTION_109	IF_1
0x400914f	      0xb901000000	                              mov ecx, 1	      5959	quickfix.c	FUNCTION_109	IF_1	CALL_1
0x4009154	          0x4c89ee	                            mov rsi, r13	      5959	quickfix.c	FUNCTION_109	IF_1	CALL_1
0x4009157	      0xbf40000000	                           mov edi, 0x40	      5959	quickfix.c	FUNCTION_109	IF_1	CALL_1
0x400915c	    0x498b90980000	              mov rdx, qword [r8 + 0x98]	      5959	quickfix.c	FUNCTION_109	IF_1	CALL_1
0x4009163	      0xe800000000	                          call 0x4009168	      5959	quickfix.c	FUNCTION_109	IF_1	CALL_1
0x4009168	            0x85c0	                           test eax, eax	      5959	quickfix.c	FUNCTION_109	IF_1	CALL_1
0x400916a	     0xf8550010000	                           jne 0x40092c0	      5959	quickfix.c	FUNCTION_109	IF_1	CALL_1
0x4009170	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      5959	quickfix.c	FUNCTION_109	IF_1	CALL_1
0x4009173	      0x2dce000000	                           sub eax, 0xce	      5970	quickfix.c	FUNCTION_109	IF_3
0x4009178	          0x83f814	                           cmp eax, 0x14	      5970	quickfix.c	FUNCTION_109	IF_3
0x400917b	            0x77a3	                            ja 0x4009120	      5970	quickfix.c	FUNCTION_109	IF_3
0x400917d	      0xba01401000	                       mov edx, 0x104001	      5970	quickfix.c	FUNCTION_109	IF_3
0x4009182	        0x480fa3c2	                             bt rdx, rax	      5970	quickfix.c	FUNCTION_109	IF_3
0x4009186	            0x7398	                           jae 0x4009120	      5970	quickfix.c	FUNCTION_109	IF_3
0x4009188	    0x488b3d000000	            mov rdi, qword [0x0400918f] 	      5972	quickfix.c	FUNCTION_109	IF_3	CALL_3
0x400918f	      0xe8bc81ffff	           call sym.ll_get_or_alloc_list	      5972	quickfix.c	FUNCTION_109	IF_3	CALL_3
0x4009194	          0x4885c0	                           test rax, rax	      5973	quickfix.c	FUNCTION_109	IF_3	IF_4
0x4009197	          0x4989c4	                            mov r12, rax	      5972	quickfix.c	FUNCTION_109	IF_3	CALL_3
0x400919a	     0xf842d010000	                            je 0x40092cd	      5973	quickfix.c	FUNCTION_109	IF_3	IF_4
0x40091a0	          0x488b3b	                    mov rdi, qword [rbx]	      5979	quickfix.c	FUNCTION_109	CALL_4
0x40091a3	            0x31f6	                            xor esi, esi	      5979	quickfix.c	FUNCTION_109	CALL_4
0x40091a5	      0xe800000000	                          call 0x40091aa	      5979	quickfix.c	FUNCTION_109	CALL_4
0x40091aa	          0x4885c0	                           test rax, rax	      5980	quickfix.c	FUNCTION_109	IF_5
0x40091ad	          0x4889c5	                            mov rbp, rax	      5979	quickfix.c	FUNCTION_109	CALL_4
0x40091b0	     0xf8417010000	                            je 0x40092cd	      5980	quickfix.c	FUNCTION_109	IF_5
0x40091b6	            0x8b00	                    mov eax, dword [rax]	      5982	quickfix.c	FUNCTION_109	IF_5	IF_6
0x40091b8	          0x83f802	                              cmp eax, 2	      5982	quickfix.c	FUNCTION_109	IF_5	IF_6
0x40091bb	            0x7433	                            je 0x40091f0	      5982	quickfix.c	FUNCTION_109	IF_5	IF_6
0x40091bd	          0x83f805	                              cmp eax, 5	      5983	quickfix.c	FUNCTION_109	IF_5	IF_6
0x40091c0	            0x742e	                            je 0x40091f0	      5983	quickfix.c	FUNCTION_109	IF_5	IF_6
0x40091c2	            0x31ff	                            xor edi, edi	      6000	quickfix.c	FUNCTION_109	IF_5	CALL_10
0x40091c4	      0xba05000000	                              mov edx, 5	      6000	quickfix.c	FUNCTION_109	IF_5	CALL_10
0x40091c9	      0xbe00000000	                              mov esi, 0	      6000	quickfix.c	FUNCTION_109	IF_5	CALL_10
0x40091ce	      0xe800000000	                          call 0x40091d3	      6000	quickfix.c	FUNCTION_109	IF_5	CALL_10
0x40091d3	          0x4889c7	                            mov rdi, rax	      6000	quickfix.c	FUNCTION_109	IF_5	CALL_10
0x40091d6	      0xe800000000	                          call 0x40091db	      6000	quickfix.c	FUNCTION_109	IF_5	CALL_10
0x40091db	              0x5b	                                 pop rbx	      6003	quickfix.c	FUNCTION_109
0x40091dc	          0x4889ef	                            mov rdi, rbp	      6001	quickfix.c	FUNCTION_109	IF_5	CALL_11
0x40091df	              0x5d	                                 pop rbp	      6003	quickfix.c	FUNCTION_109
0x40091e0	            0x415c	                                 pop r12	      6003	quickfix.c	FUNCTION_109
0x40091e2	            0x415d	                                 pop r13	      6003	quickfix.c	FUNCTION_109
0x40091e4	            0x415e	                                 pop r14	      6003	quickfix.c	FUNCTION_109
0x40091e6	      0xe900000000	                           jmp 0x40091eb	      6001	quickfix.c	FUNCTION_109	IF_5	CALL_11
0x40091eb	       0xf1f440000	                   nop dword [rax + rax]	      6001	quickfix.c	FUNCTION_109	IF_5	CALL_11
0x40091f0	      0x48837d0800	                  cmp qword [rbp + 8], 0	      5983	quickfix.c	FUNCTION_109	IF_5	IF_6
0x40091f5	            0x74cb	                            je 0x40091c2	      5983	quickfix.c	FUNCTION_109	IF_5	IF_6
0x40091f7	          0x8b5320	            mov edx, dword [rbx + 0x20] 	      5986	quickfix.c	FUNCTION_109	IF_5	IF_6
0x40091fa	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x40091fe	        0x4883ec08	                              sub rsp, 8	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x4009202	      0x418b742408	                mov esi, dword [r12 + 8]	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x4009207	            0x6a00	                                  push 0	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x4009209	          0x4989e8	                             mov r8, rbp	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x400920c	    0x4c8b0d000000	              mov r9, qword [0x04009213]	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x4009213	          0x4c89e7	                            mov rdi, r12	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x4009216	          0x83fa30	                           cmp edx, 0x30	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x4009219	            0xff30	                        push qword [rax]	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x400921b	            0x6a00	                                  push 0	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x400921d	           0xf95c0	                                setne al	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x4009220	    0x81face000000	                           cmp edx, 0xce	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x4009226	            0x6a00	                                  push 0	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x4009228	           0xf95c2	                                setne dl	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x400922b	            0x31c9	                            xor ecx, ecx	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x400922d	           0xfb6d2	                           movzx edx, dl	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x4009230	            0x21d0	                            and eax, edx	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x4009232	            0x31d2	                            xor edx, edx	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x4009234	              0x50	                                push rax	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x4009235	      0xe86688ffff	                    call sym.qf_init_ext	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x400923a	        0x4883c430	                           add rsp, 0x30	      5990	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_7
0x400923e	            0x85c0	                           test eax, eax	      5990	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_7
0x4009240	          0x4189c6	                           mov r14d, eax	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x4009243	            0x781d	                            js 0x4009262	      5990	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_7
0x4009245	      0x4963442408	            movsxd rax, dword [r12 + 8] 	      3701	quickfix.c	FUNCTION_61
0x400924a	    0x488d14c50000	                        lea rdx, [rax*8]	      3701	quickfix.c	FUNCTION_61
0x4009252	        0x48c1e007	                              shl rax, 7	      3701	quickfix.c	FUNCTION_61
0x4009256	          0x4829d0	                            sub rax, rdx	      3701	quickfix.c	FUNCTION_61
0x4009259	    0x498384048000	         add qword [r12 + rax + 0x80], 1	      3701	quickfix.c	FUNCTION_61
0x4009262	          0x4d85ed	                           test r13, r13	      5992	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_8
0x4009265	            0x7420	                            je 0x4009287	      5992	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_8
0x4009267	    0x4c8b05000000	              mov r8, qword [0x0400926e]	      5994	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_8
0x400926e	      0xb901000000	                              mov ecx, 1	      5993	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_8	CALL_7
0x4009273	          0x4c89ee	                            mov rsi, r13	      5993	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_8	CALL_7
0x4009276	      0xbf3f000000	                           mov edi, 0x3f	      5993	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_8	CALL_7
0x400927b	    0x498b90980000	              mov rdx, qword [r8 + 0x98]	      5993	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_8	CALL_7
0x4009282	      0xe800000000	                          call 0x4009287	      5993	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_8	CALL_7
0x4009287	          0x4585f6	                         test r14d, r14d	      5995	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_9
0x400928a	     0xf8e4bffffff	                           jle 0x40091db	      5995	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_9
0x4009290	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      5995	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_9
0x4009293	          0x83f83b	                           cmp eax, 0x3b	      5995	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_9
0x4009296	            0x740b	                            je 0x40092a3	      5995	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_9
0x4009298	      0x3ddc000000	                           cmp eax, 0xdc	      5995	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_9
0x400929d	     0xf8538ffffff	                           jne 0x40091db	      5995	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_9
0x40092a3	          0x8b4b34	            mov ecx, dword [rbx + 0x34] 	      5997	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_8
0x40092a6	            0x31d2	                            xor edx, edx	      5997	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_8
0x40092a8	            0x31f6	                            xor esi, esi	      5997	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_8
0x40092aa	          0x4c89e7	                            mov rdi, r12	      5997	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_8
0x40092ad	      0xe800000000	                          call 0x40092b2	      5997	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_8
0x40092b2	      0xe924ffffff	                           jmp 0x40091db	      5997	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_8
0x40092b7	    0x660f1f840000	                    nop word [rax + rax]	      5997	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_8
0x40092c0	      0xe800000000	                          call 0x40092c5	      5963	quickfix.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x40092c5	            0x85c0	                           test eax, eax	      5963	quickfix.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x40092c7	     0xf84a3feffff	                            je 0x4009170	      5963	quickfix.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x40092cd	              0x5b	                                 pop rbx	      6003	quickfix.c	FUNCTION_109
0x40092ce	              0x5d	                                 pop rbp	      6003	quickfix.c	FUNCTION_109
0x40092cf	            0x415c	                                 pop r12	      6003	quickfix.c	FUNCTION_109
0x40092d1	            0x415d	                                 pop r13	      6003	quickfix.c	FUNCTION_109
0x40092d3	            0x415e	                                 pop r14	      6003	quickfix.c	FUNCTION_109
0x40092d5	              0xc3	                                     ret	      6003	quickfix.c	FUNCTION_109
0x40092d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6003	quickfix.c	FUNCTION_109
0x40092e0	    0x41bd00000000	                             mov r13d, 0	      5954	quickfix.c	FUNCTION_109	SWITCH_1
0x40092e6	      0xe95dfeffff	                           jmp 0x4009148	      5954	quickfix.c	FUNCTION_109	SWITCH_1
0x40092eb	       0xf1f440000	                   nop dword [rax + rax]	      5954	quickfix.c	FUNCTION_109	SWITCH_1
0x40092f0	    0x41bd00000000	                             mov r13d, 0	      5956	quickfix.c	FUNCTION_109	SWITCH_1
0x40092f6	      0xe94dfeffff	                           jmp 0x4009148	      5956	quickfix.c	FUNCTION_109	SWITCH_1
0x40092fb	       0xf1f440000	                   nop dword [rax + rax]	      5956	quickfix.c	FUNCTION_109	SWITCH_1
0x4009300	    0x41bd00000000	                             mov r13d, 0	      5953	quickfix.c	FUNCTION_109	SWITCH_1
0x4009306	      0xe93dfeffff	                           jmp 0x4009148	      5953	quickfix.c	FUNCTION_109	SWITCH_1
0x400930b	       0xf1f440000	                   nop dword [rax + rax]	      5953	quickfix.c	FUNCTION_109	SWITCH_1
0x4009310	    0x41bd00000000	                             mov r13d, 0	      5955	quickfix.c	FUNCTION_109	SWITCH_1
0x4009316	      0xe92dfeffff	                           jmp 0x4009148	      5955	quickfix.c	FUNCTION_109	SWITCH_1
0x400931b	       0xf1f440000	                   nop dword [rax + rax]	      5955	quickfix.c	FUNCTION_109	SWITCH_1
0x4009320	    0x41bd00000000	                             mov r13d, 0	      5952	quickfix.c	FUNCTION_109	SWITCH_1
0x4009326	      0xe91dfeffff	                           jmp 0x4009148	      5952	quickfix.c	FUNCTION_109	SWITCH_1
qf_init	CALL,2:ELSE,0:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,2:functions,0	41
0x4003b50	          0x4885ff	                           test rdi, rdi	       195	quickfix.c	FUNCTION_1	IF_1
0x4003b53	            0x4156	                                push r14	       192	quickfix.c	FUNCTION_1
0x4003b55	          0x4d89ce	                             mov r14, r9	       192	quickfix.c	FUNCTION_1
0x4003b58	            0x4155	                                push r13	       192	quickfix.c	FUNCTION_1
0x4003b5a	          0x4d89c5	                             mov r13, r8	       192	quickfix.c	FUNCTION_1
0x4003b5d	            0x4154	                                push r12	       192	quickfix.c	FUNCTION_1
0x4003b5f	          0x4189cc	                           mov r12d, ecx	       192	quickfix.c	FUNCTION_1
0x4003b62	              0x55	                                push rbp	       192	quickfix.c	FUNCTION_1
0x4003b63	          0x4889d5	                            mov rbp, rdx	       192	quickfix.c	FUNCTION_1
0x4003b66	              0x53	                                push rbx	       192	quickfix.c	FUNCTION_1
0x4003b67	          0x4889f3	                            mov rbx, rsi	       192	quickfix.c	FUNCTION_1
0x4003b6a	            0x7444	                            je 0x4003bb0	       195	quickfix.c	FUNCTION_1	IF_1
0x4003b6c	      0xe8dfd7ffff	           call sym.ll_get_or_alloc_list	       197	quickfix.c	FUNCTION_1	IF_1	CALL_1
0x4003b71	          0x4885c0	                           test rax, rax	       198	quickfix.c	FUNCTION_1	IF_1	IF_2
0x4003b74	          0x4889c7	                            mov rdi, rax	       197	quickfix.c	FUNCTION_1	IF_1	CALL_1
0x4003b77	            0x7447	                            je 0x4003bc0	       198	quickfix.c	FUNCTION_1	IF_1	IF_2
0x4003b79	        0x4883ec08	                              sub rsp, 8	       202	quickfix.c	FUNCTION_1	CALL_2
0x4003b7d	          0x8b7708	                mov esi, dword [rdi + 8]	       202	quickfix.c	FUNCTION_1	CALL_2
0x4003b80	    0x488b0d000000	            mov rcx, qword [0x04003b87] 	       202	quickfix.c	FUNCTION_1	CALL_2
0x4003b87	            0x4156	                                push r14	       202	quickfix.c	FUNCTION_1	CALL_2
0x4003b89	            0x4155	                                push r13	       202	quickfix.c	FUNCTION_1	CALL_2
0x4003b8b	          0x4989e9	                             mov r9, rbp	       202	quickfix.c	FUNCTION_1	CALL_2
0x4003b8e	            0x6a00	                                  push 0	       202	quickfix.c	FUNCTION_1	CALL_2
0x4003b90	            0x6a00	                                  push 0	       202	quickfix.c	FUNCTION_1	CALL_2
0x4003b92	          0x4531c0	                            xor r8d, r8d	       202	quickfix.c	FUNCTION_1	CALL_2
0x4003b95	            0x4154	                                push r12	       202	quickfix.c	FUNCTION_1	CALL_2
0x4003b97	          0x4889da	                            mov rdx, rbx	       202	quickfix.c	FUNCTION_1	CALL_2
0x4003b9a	      0xe801dfffff	                    call sym.qf_init_ext	       202	quickfix.c	FUNCTION_1	CALL_2
0x4003b9f	        0x4883c430	                           add rsp, 0x30	       202	quickfix.c	FUNCTION_1	CALL_2
0x4003ba3	              0x5b	                                 pop rbx	       204	quickfix.c	FUNCTION_1
0x4003ba4	              0x5d	                                 pop rbp	       204	quickfix.c	FUNCTION_1
0x4003ba5	            0x415c	                                 pop r12	       204	quickfix.c	FUNCTION_1
0x4003ba7	            0x415d	                                 pop r13	       204	quickfix.c	FUNCTION_1
0x4003ba9	            0x415e	                                 pop r14	       204	quickfix.c	FUNCTION_1
0x4003bab	              0xc3	                                     ret	       204	quickfix.c	FUNCTION_1
0x4003bac	         0xf1f4000	                         nop dword [rax]	       204	quickfix.c	FUNCTION_1
0x4003bb0	      0xbf00000000	                              mov edi, 0	       193	quickfix.c	FUNCTION_1
0x4003bb5	            0xebc2	                           jmp 0x4003b79	       193	quickfix.c	FUNCTION_1
0x4003bb7	    0x660f1f840000	                    nop word [rax + rax]	       193	quickfix.c	FUNCTION_1
0x4003bc0	            0x31c0	                            xor eax, eax	       199	quickfix.c	FUNCTION_1	IF_1	IF_2
0x4003bc2	            0xebdf	                           jmp 0x4003ba3	       199	quickfix.c	FUNCTION_1	IF_1	IF_2
ex_cc	CALL,4:ELSE,3:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,6:functions,0	149
0x4006020	              0x53	                                push rbx	      4048	quickfix.c	ELSE_2	FUNCTION_69
0x4006021	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      4052	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x4006024	          0x4889fb	                            mov rbx, rdi	      4048	quickfix.c	ELSE_2	FUNCTION_69
0x4006027	    0x8d9028ffffff	                   lea edx, [rax - 0xd8]	      4056	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x400602d	          0x83fa21	                           cmp edx, 0x21	      4056	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x4006030	     0xf87ca000000	                            ja 0x4006100	      4056	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x4006036	    0x48b9c1800100	                 movabs rcx, 0x2000180c1	      4057	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x4006040	        0x480fa3d1	                             bt rcx, rdx	      4057	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x4006044	     0xf83b6000000	                           jae 0x4006100	      4057	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x400604a	    0x488b05000000	            mov rax, qword [0x04006051] 	      4059	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x4006051	        0x488b7808	                mov rdi, qword [rax + 8]	      4059	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x4006055	      0xe800000000	                          call 0x400605a	      4059	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x400605a	            0x85c0	                           test eax, eax	      4059	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x400605c	    0x488b05000000	            mov rax, qword [0x04006063] 	      4059	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x4006063	     0xf8587010000	                           jne 0x40061f0	      4059	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x4006069	    0x488bb8481900	          mov rdi, qword [rax + 0x1948] 	      4059	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x4006070	          0x4885ff	                           test rdi, rdi	      4060	quickfix.c	ELSE_2	FUNCTION_69	IF_1	IF_2
0x4006073	     0xf84b1010000	                            je 0x400622a	      4060	quickfix.c	ELSE_2	FUNCTION_69	IF_1	IF_2
0x4006079	          0x8b7338	            mov esi, dword [rbx + 0x38] 	      4067	quickfix.c	ELSE_2	FUNCTION_69	IF_3
0x400607c	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      4067	quickfix.c	ELSE_2	FUNCTION_69	IF_3
0x400607f	            0x85f6	                           test esi, esi	      4067	quickfix.c	ELSE_2	FUNCTION_69	IF_3
0x4006081	     0xf8f89000000	                            jg 0x4006110	      4067	quickfix.c	ELSE_2	FUNCTION_69	IF_3
0x4006087	          0x83f836	                           cmp eax, 0x36	      4071	quickfix.c	ELSE_2	FUNCTION_69	ELSE_1	IF_4
0x400608a	     0xf8478010000	                            je 0x4006208	      4071	quickfix.c	ELSE_2	FUNCTION_69	ELSE_1	IF_4
0x4006090	      0x3de7000000	                           cmp eax, 0xe7	      4071	quickfix.c	ELSE_2	FUNCTION_69	ELSE_1	IF_4
0x4006095	     0xf846d010000	                            je 0x4006208	      4071	quickfix.c	ELSE_2	FUNCTION_69	ELSE_1	IF_4
0x400609b	          0x83f860	                           cmp eax, 0x60	      4074	quickfix.c	FUNCTION_69	ELSE_1	IF_5
0x400609e	           0xf94c1	                                 sete cl	      4074	quickfix.c	FUNCTION_69	ELSE_1	IF_5
0x40060a1	      0x3df9000000	                           cmp eax, 0xf9	      4074	quickfix.c	FUNCTION_69	ELSE_1	IF_5
0x40060a6	           0xf94c2	                                 sete dl	      4074	quickfix.c	FUNCTION_69	ELSE_1	IF_5
0x40060a9	             0x9ca	                             or edx, ecx	      4074	quickfix.c	FUNCTION_69	ELSE_1	IF_5
0x40060ab	          0x83f83e	                           cmp eax, 0x3e	      4074	quickfix.c	FUNCTION_69	ELSE_1	IF_5
0x40060ae	           0xf94c1	                                 sete cl	      4074	quickfix.c	FUNCTION_69	ELSE_1	IF_5
0x40060b1	             0x8ca	                               or dl, cl	      4074	quickfix.c	FUNCTION_69	ELSE_1	IF_5
0x40060b3	     0xf8567010000	                           jne 0x4006220	      4074	quickfix.c	FUNCTION_69	ELSE_1	IF_5
0x40060b9	      0x3ddf000000	                           cmp eax, 0xdf	      4074	quickfix.c	FUNCTION_69	ELSE_1	IF_5
0x40060be	      0xbaff7f0000	                         mov edx, 0x7fff	      4077	quickfix.c	FUNCTION_69	ELSE_1	ELSE_2	ELSE_3
0x40060c3	     0xf8457010000	                            je 0x4006220	      4074	quickfix.c	FUNCTION_69	ELSE_1	IF_5
0x40060c9	          0x83f83d	                           cmp eax, 0x3d	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x40060cc	        0x410f94c0	                                sete r8b	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x40060d0	      0x3dde000000	                           cmp eax, 0xde	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x40060d5	           0xf94c1	                                 sete cl	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x40060d8	      0x3dd8000000	                           cmp eax, 0xd8	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x40060dd	        0x400f94c6	                                sete sil	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x40060e1	          0x4008ce	                              or sil, cl	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x40060e4	            0x7508	                           jne 0x40060ee	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x40060e6	          0x83e0fb	                     and eax, 0xfffffffb	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x40060e9	          0x83f839	                           cmp eax, 0x39	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x40060ec	            0x7545	                           jne 0x4006133	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x40060ee	          0x4109c8	                             or r8d, ecx	      4085	quickfix.c	FUNCTION_69	ELSE_2	IF_6	CALL_3
0x40060f1	    0x41b901000000	                              mov r9d, 1	      4085	quickfix.c	FUNCTION_69	ELSE_2	IF_6	CALL_3
0x40060f7	            0xeb55	                           jmp 0x400614e	      4085	quickfix.c	FUNCTION_69	ELSE_2	IF_6	CALL_3
0x40060f9	     0xf1f80000000	                         nop dword [rax]	      4085	quickfix.c	FUNCTION_69	ELSE_2	IF_6	CALL_3
0x4006100	          0x8b7338	            mov esi, dword [rbx + 0x38] 	      4067	quickfix.c	ELSE_2	FUNCTION_69	IF_3
0x4006103	      0xbf00000000	                              mov edi, 0	      4049	quickfix.c	ELSE_2	FUNCTION_69
0x4006108	            0x85f6	                           test esi, esi	      4067	quickfix.c	ELSE_2	FUNCTION_69	IF_3
0x400610a	     0xf8e77ffffff	                           jle 0x4006087	      4067	quickfix.c	ELSE_2	FUNCTION_69	IF_3
0x4006110	      0x3dde000000	                           cmp eax, 0xde	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x4006115	          0x8b5348	            mov edx, dword [rbx + 0x48] 	      4068	quickfix.c	ELSE_2	FUNCTION_69	IF_3
0x4006118	           0xf94c1	                                 sete cl	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x400611b	      0x3dd8000000	                           cmp eax, 0xd8	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x4006120	        0x400f94c6	                                sete sil	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x4006124	          0x4008ce	                              or sil, cl	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x4006127	            0x7517	                           jne 0x4006140	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x4006129	            0x89c6	                            mov esi, eax	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x400612b	          0x83e6fb	                     and esi, 0xfffffffb	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x400612e	          0x83fe39	                           cmp esi, 0x39	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x4006131	            0x740d	                            je 0x4006140	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x4006133	          0x8b4b34	            mov ecx, dword [rbx + 0x34] 	      4089	quickfix.c	FUNCTION_69	ELSE_2	CALL_4
0x4006136	            0x31f6	                            xor esi, esi	      4089	quickfix.c	FUNCTION_69	ELSE_2	CALL_4
0x4006138	              0x5b	                                 pop rbx	      4090	quickfix.c	FUNCTION_69	ELSE_2
0x4006139	      0xe902deffff	                         jmp sym.qf_jump	      4089	quickfix.c	FUNCTION_69	ELSE_2	CALL_4
0x400613e	            0x6690	                                     nop	      4089	quickfix.c	FUNCTION_69	ELSE_2	CALL_4
0x4006140	          0x83f83d	                           cmp eax, 0x3d	      4085	quickfix.c	FUNCTION_69	ELSE_2	IF_6	CALL_3
0x4006143	        0x448b4b40	            mov r9d, dword [rbx + 0x40] 	      4085	quickfix.c	FUNCTION_69	ELSE_2	IF_6	CALL_3
0x4006147	        0x410f94c0	                                sete r8b	      4085	quickfix.c	FUNCTION_69	ELSE_2	IF_6	CALL_3
0x400614b	          0x4109c8	                             or r8d, ecx	      4085	quickfix.c	FUNCTION_69	ELSE_2	IF_6	CALL_3
0x400614e	        0x48634708	            movsxd rax, dword [rdi + 8] 	      4010	quickfix.c	ELSE_1	FUNCTION_68	IF_1
0x4006152	    0x488d14c50000	                        lea rdx, [rax*8]	      4010	quickfix.c	ELSE_1	FUNCTION_68	IF_1
0x400615a	        0x48c1e007	                              shl rax, 7	      4010	quickfix.c	ELSE_1	FUNCTION_68	IF_1
0x400615e	          0x4829d0	                            sub rax, rdx	      4010	quickfix.c	ELSE_1	FUNCTION_68	IF_1
0x4006161	      0xba01000000	                              mov edx, 1	      4038	quickfix.c	FUNCTION_68	ELSE_1	ELSE_2
0x4006166	          0x4801f8	                            add rax, rdi	      4010	quickfix.c	ELSE_1	FUNCTION_68	IF_1
0x4006169	          0x8b7030	            mov esi, dword [rax + 0x30] 	      4010	quickfix.c	ELSE_1	FUNCTION_68	IF_1
0x400616c	            0x85f6	                           test esi, esi	      4010	quickfix.c	ELSE_1	FUNCTION_68	IF_1
0x400616e	            0x7ec3	                           jle 0x4006133	      4010	quickfix.c	ELSE_1	FUNCTION_68	IF_1
0x4006170	          0x8b4838	            mov ecx, dword [rax + 0x38] 	      4010	quickfix.c	ELSE_1	FUNCTION_68	IF_1
0x4006173	            0x85c9	                           test ecx, ecx	      4010	quickfix.c	ELSE_1	FUNCTION_68	IF_1
0x4006175	            0x75bc	                           jne 0x4006133	      4010	quickfix.c	ELSE_1	FUNCTION_68	IF_1
0x4006177	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4005	quickfix.c	ELSE_1	FUNCTION_68
0x400617b	          0x4531db	                          xor r11d, r11d	      4013	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x400617e	            0x31c9	                            xor ecx, ecx	      4013	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x4006180	          0x4885c0	                           test rax, rax	      4013	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x4006183	            0x753b	                           jne 0x40061c0	      4013	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x4006185	            0xebac	                           jmp 0x4006133	      4013	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x4006187	    0x660f1f840000	                    nop word [rax + rax]	      4013	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x4006190	        0x448b5018	           mov r10d, dword [rax + 0x18] 	      4020	quickfix.c	ELSE_1	FUNCTION_68	FOR_1	IF_2	IF_3	IF_4
0x4006194	          0x4539da	                          cmp r10d, r11d	      4020	quickfix.c	ELSE_1	FUNCTION_68	FOR_1	IF_2	IF_3	IF_4
0x4006197	            0x740f	                            je 0x40061a8	      4020	quickfix.c	ELSE_1	FUNCTION_68	FOR_1	IF_2	IF_3	IF_4
0x4006199	          0x4585d2	                         test r10d, r10d	      4020	quickfix.c	ELSE_1	FUNCTION_68	FOR_1	IF_2	IF_3	IF_4
0x400619c	            0x7e0a	                           jle 0x40061a8	      4020	quickfix.c	ELSE_1	FUNCTION_68	FOR_1	IF_2	IF_3	IF_4
0x400619e	          0x83c101	                              add ecx, 1	      4023	quickfix.c	ELSE_1	FUNCTION_68	FOR_1	IF_2	IF_3	IF_4
0x40061a1	          0x4589d3	                          mov r11d, r10d	      4023	quickfix.c	ELSE_1	FUNCTION_68	FOR_1	IF_2	IF_3	IF_4
0x40061a4	         0xf1f4000	                         nop dword [rax]	      4023	quickfix.c	ELSE_1	FUNCTION_68	FOR_1	IF_2	IF_3	IF_4
0x40061a8	          0x4139c9	                            cmp r9d, ecx	      4031	quickfix.c	FUNCTION_68	FOR_1	ELSE_1	IF_5
0x40061ab	            0x7426	                            je 0x40061d3	      4031	quickfix.c	FUNCTION_68	FOR_1	ELSE_1	IF_5
0x40061ad	          0x83c201	                              add edx, 1	      4014	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x40061b0	          0x488b00	                    mov rax, qword [rax]	      4014	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x40061b3	            0x39d6	                            cmp esi, edx	      4013	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x40061b5	            0x7c59	                            jl 0x4006210	      4013	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x40061b7	          0x4885c0	                           test rax, rax	      4013	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x40061ba	     0xf8473ffffff	                            je 0x4006133	      4013	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x40061c0	        0x80784300	                cmp byte [rax + 0x43], 0	      4016	quickfix.c	ELSE_1	FUNCTION_68	FOR_1	IF_2
0x40061c4	            0x74e2	                            je 0x40061a8	      4016	quickfix.c	ELSE_1	FUNCTION_68	FOR_1	IF_2
0x40061c6	          0x4584c0	                           test r8b, r8b	      4018	quickfix.c	ELSE_1	FUNCTION_68	FOR_1	IF_2	IF_3
0x40061c9	            0x75c5	                           jne 0x4006190	      4018	quickfix.c	ELSE_1	FUNCTION_68	FOR_1	IF_2	IF_3
0x40061cb	          0x83c101	                              add ecx, 1	      4028	quickfix.c	FUNCTION_68	FOR_1	IF_2	ELSE_1
0x40061ce	          0x4139c9	                            cmp r9d, ecx	      4031	quickfix.c	FUNCTION_68	FOR_1	ELSE_1	IF_5
0x40061d1	            0x75da	                           jne 0x40061ad	      4031	quickfix.c	FUNCTION_68	FOR_1	ELSE_1	IF_5
0x40061d3	          0x8b4b34	            mov ecx, dword [rbx + 0x34] 	      4089	quickfix.c	FUNCTION_69	ELSE_2	CALL_4
0x40061d6	            0x39d6	                            cmp esi, edx	      4038	quickfix.c	FUNCTION_68	ELSE_1	ELSE_2
0x40061d8	      0xb801000000	                              mov eax, 1	      4038	quickfix.c	FUNCTION_68	ELSE_1	ELSE_2
0x40061dd	              0x5b	                                 pop rbx	      4090	quickfix.c	FUNCTION_69	ELSE_2
0x40061de	           0xf4cd0	                          cmovl edx, eax	      4038	quickfix.c	FUNCTION_68	ELSE_1	ELSE_2
0x40061e1	            0x31f6	                            xor esi, esi	      4089	quickfix.c	FUNCTION_69	ELSE_2	CALL_4
0x40061e3	      0xe958ddffff	                         jmp sym.qf_jump	      4089	quickfix.c	FUNCTION_69	ELSE_2	CALL_4
0x40061e8	     0xf1f84000000	                   nop dword [rax + rax]	      4089	quickfix.c	FUNCTION_69	ELSE_2	CALL_4
0x40061f0	    0x488bb8501900	          mov rdi, qword [rax + 0x1950] 	      4059	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x40061f7	          0x4885ff	                           test rdi, rdi	      4059	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x40061fa	     0xf8579feffff	                           jne 0x4006079	      4059	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x4006200	      0xe964feffff	                           jmp 0x4006069	      4059	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x4006205	           0xf1f00	                         nop dword [rax]	      4059	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x4006208	            0x31d2	                            xor edx, edx	      4072	quickfix.c	ELSE_2	FUNCTION_69	ELSE_1	IF_4
0x400620a	      0xe9bafeffff	                           jmp 0x40060c9	      4072	quickfix.c	ELSE_2	FUNCTION_69	ELSE_1	IF_4
0x400620f	              0x90	                                     nop	      4072	quickfix.c	ELSE_2	FUNCTION_69	ELSE_1	IF_4
0x4006210	          0x8b4b34	            mov ecx, dword [rbx + 0x34] 	      4089	quickfix.c	FUNCTION_69	ELSE_2	CALL_4
0x4006213	      0xba01000000	                              mov edx, 1	      4038	quickfix.c	FUNCTION_68	ELSE_1	ELSE_2
0x4006218	            0x31f6	                            xor esi, esi	      4089	quickfix.c	FUNCTION_69	ELSE_2	CALL_4
0x400621a	              0x5b	                                 pop rbx	      4090	quickfix.c	FUNCTION_69	ELSE_2
0x400621b	      0xe920ddffff	                         jmp sym.qf_jump	      4089	quickfix.c	FUNCTION_69	ELSE_2	CALL_4
0x4006220	      0xba01000000	                              mov edx, 1	      4075	quickfix.c	FUNCTION_69	ELSE_1	IF_5	ELSE_2
0x4006225	      0xe99ffeffff	                           jmp 0x40060c9	      4075	quickfix.c	FUNCTION_69	ELSE_1	IF_5	ELSE_2
0x400622a	            0x31ff	                            xor edi, edi	      4062	quickfix.c	ELSE_2	FUNCTION_69	IF_1	IF_2	CALL_2
0x400622c	      0xba05000000	                              mov edx, 5	      4062	quickfix.c	ELSE_2	FUNCTION_69	IF_1	IF_2	CALL_2
0x4006231	      0xbe00000000	                              mov esi, 0	      4062	quickfix.c	ELSE_2	FUNCTION_69	IF_1	IF_2	CALL_2
0x4006236	      0xe800000000	                          call 0x400623b	      4062	quickfix.c	ELSE_2	FUNCTION_69	IF_1	IF_2	CALL_2
0x400623b	              0x5b	                                 pop rbx	      4090	quickfix.c	FUNCTION_69	ELSE_2
0x400623c	          0x4889c7	                            mov rdi, rax	      4062	quickfix.c	ELSE_2	FUNCTION_69	IF_1	IF_2	CALL_2
0x400623f	      0xe900000000	                           jmp 0x4006244	      4062	quickfix.c	ELSE_2	FUNCTION_69	IF_1	IF_2	CALL_2
qf_get_properties	CALL,15:ELSE,0:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,13:functions,0	541
0x4007e10	            0x4157	                                push r15	      5295	quickfix.c	FUNCTION_95
0x4007e12	            0x4156	                                push r14	      5295	quickfix.c	FUNCTION_95
0x4007e14	            0x4155	                                push r13	      5295	quickfix.c	FUNCTION_95
0x4007e16	            0x4154	                                push r12	      5295	quickfix.c	FUNCTION_95
0x4007e18	          0x4989fd	                            mov r13, rdi	      5295	quickfix.c	FUNCTION_95
0x4007e1b	              0x55	                                push rbp	      5295	quickfix.c	FUNCTION_95
0x4007e1c	              0x53	                                push rbx	      5295	quickfix.c	FUNCTION_95
0x4007e1d	          0x4889f5	                            mov rbp, rsi	      5295	quickfix.c	FUNCTION_95
0x4007e20	          0x4989d4	                            mov r12, rdx	      5295	quickfix.c	FUNCTION_95
0x4007e23	      0xbe00000000	                              mov esi, 0	      5302	quickfix.c	FUNCTION_95	IF_1	CALL_1
0x4007e28	      0xbaffffffff	                     mov edx, 0xffffffff	      5302	quickfix.c	FUNCTION_95	IF_1	CALL_1
0x4007e2d	        0x4883ec18	                           sub rsp, 0x18	      5295	quickfix.c	FUNCTION_95
0x4007e31	          0x4889ef	                            mov rdi, rbp	      5302	quickfix.c	FUNCTION_95	IF_1	CALL_1
0x4007e34	      0xe800000000	                          call 0x4007e39	      5302	quickfix.c	FUNCTION_95	IF_1	CALL_1
0x4007e39	          0x4885c0	                           test rax, rax	      5302	quickfix.c	FUNCTION_95	IF_1	CALL_1
0x4007e3c	     0xf840e010000	                            je 0x4007f50	      5302	quickfix.c	FUNCTION_95	IF_1	CALL_1
0x4007e42	          0x833805	                      cmp dword [rax], 5	      5024	quickfix.c	FUNCTION_86	IF_1
0x4007e45	          0x4889c3	                            mov rbx, rax	      5024	quickfix.c	FUNCTION_86	IF_1
0x4007e48	            0x7416	                            je 0x4007e60	      5024	quickfix.c	FUNCTION_86	IF_1
0x4007e4a	            0x31c0	                            xor eax, eax	      5267	quickfix.c	FUNCTION_93	IF_1	ELSE_1
0x4007e4c	        0x4883c418	                           add rsp, 0x18	      5340	quickfix.c	FUNCTION_95
0x4007e50	              0x5b	                                 pop rbx	      5340	quickfix.c	FUNCTION_95
0x4007e51	              0x5d	                                 pop rbp	      5340	quickfix.c	FUNCTION_95
0x4007e52	            0x415c	                                 pop r12	      5340	quickfix.c	FUNCTION_95
0x4007e54	            0x415d	                                 pop r13	      5340	quickfix.c	FUNCTION_95
0x4007e56	            0x415e	                                 pop r14	      5340	quickfix.c	FUNCTION_95
0x4007e58	            0x415f	                                 pop r15	      5340	quickfix.c	FUNCTION_95
0x4007e5a	              0xc3	                                     ret	      5340	quickfix.c	FUNCTION_95
0x4007e5b	       0xf1f440000	                   nop dword [rax + rax]	      5340	quickfix.c	FUNCTION_95
0x4007e60	      0x4883780800	                  cmp qword [rax + 8], 0	      5024	quickfix.c	FUNCTION_86	IF_1
0x4007e65	            0x74e3	                            je 0x4007e4a	      5024	quickfix.c	FUNCTION_86	IF_1
0x4007e67	      0xbaffffffff	                     mov edx, 0xffffffff	      5029	quickfix.c	FUNCTION_86	IF_1	IF_2	CALL_1
0x4007e6c	      0xbe00000000	                              mov esi, 0	      5029	quickfix.c	FUNCTION_86	IF_1	IF_2	CALL_1
0x4007e71	          0x4889ef	                            mov rdi, rbp	      5029	quickfix.c	FUNCTION_86	IF_1	IF_2	CALL_1
0x4007e74	    0x4c8b2d000000	            mov r13, qword [0x04007e7b] 	      5019	quickfix.c	FUNCTION_86
0x4007e7b	      0xe800000000	                          call 0x4007e80	      5029	quickfix.c	FUNCTION_86	IF_1	IF_2	CALL_1
0x4007e80	          0x4885c0	                           test rax, rax	      5029	quickfix.c	FUNCTION_86	IF_1	IF_2	CALL_1
0x4007e83	            0x740e	                            je 0x4007e93	      5029	quickfix.c	FUNCTION_86	IF_1	IF_2	CALL_1
0x4007e85	          0x833802	                      cmp dword [rax], 2	      5031	quickfix.c	FUNCTION_86	IF_1	IF_2	IF_3
0x4007e88	            0x75c0	                           jne 0x4007e4a	      5031	quickfix.c	FUNCTION_86	IF_1	IF_2	IF_3
0x4007e8a	        0x4c8b6808	                mov r13, qword [rax + 8]	      5032	quickfix.c	FUNCTION_86	IF_1	IF_2	IF_3
0x4007e8e	          0x4d85ed	                           test r13, r13	      5031	quickfix.c	FUNCTION_86	IF_1	IF_2	IF_3
0x4007e91	            0x74b7	                            je 0x4007e4a	      5031	quickfix.c	FUNCTION_86	IF_1	IF_2	IF_3
0x4007e93	      0xe800000000	                          call 0x4007e98	      5037	quickfix.c	FUNCTION_86	IF_1	CALL_2
0x4007e98	          0x4885c0	                           test rax, rax	      5038	quickfix.c	FUNCTION_86	IF_1	IF_4
0x4007e9b	          0x4989c6	                            mov r14, rax	      5037	quickfix.c	FUNCTION_86	IF_1	CALL_2
0x4007e9e	            0x74aa	                            je 0x4007e4a	      5038	quickfix.c	FUNCTION_86	IF_1	IF_4
0x4007ea0	      0xbfc0040000	                          mov edi, 0x4c0	      5041	quickfix.c	FUNCTION_86	IF_1	CALL_3
0x4007ea5	      0xe800000000	                          call 0x4007eaa	      5041	quickfix.c	FUNCTION_86	IF_1	CALL_3
0x4007eaa	          0x4885c0	                           test rax, rax	      5042	quickfix.c	FUNCTION_86	IF_1	IF_5
0x4007ead	          0x4889c5	                            mov rbp, rax	      5041	quickfix.c	FUNCTION_86	IF_1	CALL_3
0x4007eb0	            0x747b	                            je 0x4007f2d	      5042	quickfix.c	FUNCTION_86	IF_1	IF_5
0x4007eb2	        0x488d7808	                      lea rdi, [rax + 8]	        90	string3.h	FUNCTION_118	CALL_6
0x4007eb6	          0x4889c1	                            mov rcx, rax	        90	string3.h	FUNCTION_118	CALL_6
0x4007eb9	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_118	CALL_6
0x4007ec0	    0x48c780b80400	              mov qword [rax + 0x4b8], 0	        90	string3.h	FUNCTION_118	CALL_6
0x4007ecb	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_118	CALL_6
0x4007ecd	        0x4883ec08	                              sub rsp, 8	      5047	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_5
0x4007ed1	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_118	CALL_6
0x4007ed5	            0x31d2	                            xor edx, edx	      5047	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_5
0x4007ed7	            0x31f6	                            xor esi, esi	      5047	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_5
0x4007ed9	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_118	CALL_6
0x4007edc	          0x4d89e9	                             mov r9, r13	      5047	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_5
0x4007edf	          0x4989d8	                             mov r8, rbx	      5047	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_5
0x4007ee2	    0x81c1c0040000	                          add ecx, 0x4c0	        90	string3.h	FUNCTION_118	CALL_6
0x4007ee8	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_118	CALL_6
0x4007eeb	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_118	CALL_6
0x4007eee	          0x4889ef	                            mov rdi, rbp	      5047	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_5
0x4007ef1	        0x83450001	                      add dword [rbp], 1	      5045	quickfix.c	FUNCTION_86	IF_1	IF_5
0x4007ef5	            0x6a00	                                  push 0	      5047	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_5
0x4007ef7	            0x6a00	                                  push 0	      5047	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_5
0x4007ef9	            0x6a00	                                  push 0	      5047	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_5
0x4007efb	            0x6a00	                                  push 0	      5047	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_5
0x4007efd	            0x6a01	                                  push 1	      5047	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_5
0x4007eff	      0xe89c9bffff	                    call sym.qf_init_ext	      5047	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_5
0x4007f04	        0x4883c430	                           add rsp, 0x30	      5047	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_5
0x4007f08	            0x85c0	                           test eax, eax	      5047	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_5
0x4007f0a	            0x7e19	                           jle 0x4007f25	      5047	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_5
0x4007f0c	            0x31f6	                            xor esi, esi	      5050	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_6
0x4007f0e	          0x4889ef	                            mov rdi, rbp	      5050	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_6
0x4007f11	          0x4c89f1	                            mov rcx, r14	      5050	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_6
0x4007f14	            0x31d2	                            xor edx, edx	      5050	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_6
0x4007f16	      0xe800000000	                          call 0x4007f1b	      5050	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_6
0x4007f1b	            0x31f6	                            xor esi, esi	      5051	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_7
0x4007f1d	          0x4889ef	                            mov rdi, rbp	      5051	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_7
0x4007f20	      0xe81b84ffff	                        call sym.qf_free	      5051	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_7
0x4007f25	          0x4889ef	                            mov rdi, rbp	      5053	quickfix.c	FUNCTION_86	IF_1	IF_5	CALL_8
0x4007f28	      0xe800000000	                          call 0x4007f2d	      5053	quickfix.c	FUNCTION_86	IF_1	IF_5	CALL_8
0x4007f2d	          0x4c89f2	                            mov rdx, r14	      5055	quickfix.c	FUNCTION_86	IF_1	CALL_9
0x4007f30	      0xbe00000000	                              mov esi, 0	      5055	quickfix.c	FUNCTION_86	IF_1	CALL_9
0x4007f35	          0x4c89e7	                            mov rdi, r12	      5055	quickfix.c	FUNCTION_86	IF_1	CALL_9
0x4007f38	      0xe800000000	                          call 0x4007f3d	      5055	quickfix.c	FUNCTION_86	IF_1	CALL_9
0x4007f3d	      0xb801000000	                              mov eax, 1	      5056	quickfix.c	FUNCTION_86	IF_1
0x4007f42	      0xe905ffffff	                           jmp 0x4007e4c	      5056	quickfix.c	FUNCTION_86	IF_1
0x4007f47	    0x660f1f840000	                    nop word [rax + rax]	      5056	quickfix.c	FUNCTION_86	IF_1
0x4007f50	          0x4d85ed	                           test r13, r13	      5305	quickfix.c	FUNCTION_95	IF_2
0x4007f53	    0x41be00000000	                             mov r14d, 0	      5296	quickfix.c	FUNCTION_95
0x4007f59	            0x7421	                            je 0x4007f7c	      5305	quickfix.c	FUNCTION_95	IF_2
0x4007f5b	        0x498b7d08	                mov rdi, qword [r13 + 8]	      5306	quickfix.c	FUNCTION_95	IF_2
0x4007f5f	      0xe800000000	                          call 0x4007f64	      5306	quickfix.c	FUNCTION_95	IF_2
0x4007f64	            0x85c0	                           test eax, eax	      5306	quickfix.c	FUNCTION_95	IF_2
0x4007f66	     0xf84d4010000	                            je 0x4008140	      5306	quickfix.c	FUNCTION_95	IF_2
0x4007f6c	    0x4d8bb5501900	          mov r14, qword [r13 + 0x1950] 	      5306	quickfix.c	FUNCTION_95	IF_2
0x4007f73	          0x4d85f6	                           test r14, r14	      5306	quickfix.c	FUNCTION_95	IF_2
0x4007f76	     0xf84c4010000	                            je 0x4008140	      5306	quickfix.c	FUNCTION_95	IF_2
0x4007f7c	      0xbaffffffff	                     mov edx, 0xffffffff	      5088	quickfix.c	FUNCTION_88	IF_1	CALL_1
0x4007f81	      0xbe00000000	                              mov esi, 0	      5088	quickfix.c	FUNCTION_88	IF_1	CALL_1
0x4007f86	          0x4889ef	                            mov rdi, rbp	      5088	quickfix.c	FUNCTION_88	IF_1	CALL_1
0x4007f89	      0xe800000000	                          call 0x4007f8e	      5088	quickfix.c	FUNCTION_88	IF_1	CALL_1
0x4007f8e	        0x4883f801	                              cmp rax, 1	      5086	quickfix.c	FUNCTION_88
0x4007f92	      0xbaffffffff	                     mov edx, 0xffffffff	      5091	quickfix.c	FUNCTION_88	IF_2	CALL_2
0x4007f97	      0xbe00000000	                              mov esi, 0	      5091	quickfix.c	FUNCTION_88	IF_2	CALL_2
0x4007f9c	            0x19db	                            sbb ebx, ebx	      5086	quickfix.c	FUNCTION_88
0x4007f9e	          0x4889ef	                            mov rdi, rbp	      5091	quickfix.c	FUNCTION_88	IF_2	CALL_2
0x4007fa1	            0xf7d3	                                 not ebx	      5086	quickfix.c	FUNCTION_88
0x4007fa3	    0x81e3ff010000	                          and ebx, 0x1ff	      5086	quickfix.c	FUNCTION_88
0x4007fa9	      0xe800000000	                          call 0x4007fae	      5091	quickfix.c	FUNCTION_88	IF_2	CALL_2
0x4007fae	            0x89da	                            mov edx, ebx	      5092	quickfix.c	FUNCTION_88	IF_2
0x4007fb0	      0xbe00000000	                              mov esi, 0	      5094	quickfix.c	FUNCTION_88	IF_3	CALL_3
0x4007fb5	          0x4889ef	                            mov rdi, rbp	      5094	quickfix.c	FUNCTION_88	IF_3	CALL_3
0x4007fb8	          0x83ca01	                               or edx, 1	      5092	quickfix.c	FUNCTION_88	IF_2
0x4007fbb	          0x4885c0	                           test rax, rax	      5092	quickfix.c	FUNCTION_88	IF_2
0x4007fbe	           0xf45da	                         cmovne ebx, edx	      5092	quickfix.c	FUNCTION_88	IF_2
0x4007fc1	      0xbaffffffff	                     mov edx, 0xffffffff	      5094	quickfix.c	FUNCTION_88	IF_3	CALL_3
0x4007fc6	      0xe800000000	                          call 0x4007fcb	      5094	quickfix.c	FUNCTION_88	IF_3	CALL_3
0x4007fcb	            0x89da	                            mov edx, ebx	      5095	quickfix.c	FUNCTION_88	IF_3
0x4007fcd	      0xbe00000000	                              mov esi, 0	      5097	quickfix.c	FUNCTION_88	IF_4	CALL_4
0x4007fd2	          0x4889ef	                            mov rdi, rbp	      5097	quickfix.c	FUNCTION_88	IF_4	CALL_4
0x4007fd5	          0x83ca04	                               or edx, 4	      5095	quickfix.c	FUNCTION_88	IF_3
0x4007fd8	          0x4885c0	                           test rax, rax	      5095	quickfix.c	FUNCTION_88	IF_3
0x4007fdb	           0xf45da	                         cmovne ebx, edx	      5095	quickfix.c	FUNCTION_88	IF_3
0x4007fde	      0xbaffffffff	                     mov edx, 0xffffffff	      5097	quickfix.c	FUNCTION_88	IF_4	CALL_4
0x4007fe3	      0xe800000000	                          call 0x4007fe8	      5097	quickfix.c	FUNCTION_88	IF_4	CALL_4
0x4007fe8	            0x89da	                            mov edx, ebx	      5098	quickfix.c	FUNCTION_88	IF_4
0x4007fea	      0xbe00000000	                              mov esi, 0	      5100	quickfix.c	FUNCTION_88	IF_5	CALL_5
0x4007fef	          0x4889ef	                            mov rdi, rbp	      5100	quickfix.c	FUNCTION_88	IF_5	CALL_5
0x4007ff2	          0x83ca08	                               or edx, 8	      5098	quickfix.c	FUNCTION_88	IF_4
0x4007ff5	          0x4885c0	                           test rax, rax	      5098	quickfix.c	FUNCTION_88	IF_4
0x4007ff8	           0xf45da	                         cmovne ebx, edx	      5098	quickfix.c	FUNCTION_88	IF_4
0x4007ffb	      0xbaffffffff	                     mov edx, 0xffffffff	      5100	quickfix.c	FUNCTION_88	IF_5	CALL_5
0x4008000	      0xe800000000	                          call 0x4008005	      5100	quickfix.c	FUNCTION_88	IF_5	CALL_5
0x4008005	            0x89da	                            mov edx, ebx	      5101	quickfix.c	FUNCTION_88	IF_5
0x4008007	      0xbe00000000	                              mov esi, 0	      5103	quickfix.c	FUNCTION_88	IF_6	CALL_6
0x400800c	          0x4889ef	                            mov rdi, rbp	      5103	quickfix.c	FUNCTION_88	IF_6	CALL_6
0x400800f	          0x83ca10	                            or edx, 0x10	      5101	quickfix.c	FUNCTION_88	IF_5
0x4008012	          0x4885c0	                           test rax, rax	      5101	quickfix.c	FUNCTION_88	IF_5
0x4008015	           0xf45da	                         cmovne ebx, edx	      5101	quickfix.c	FUNCTION_88	IF_5
0x4008018	      0xbaffffffff	                     mov edx, 0xffffffff	      5103	quickfix.c	FUNCTION_88	IF_6	CALL_6
0x400801d	      0xe800000000	                          call 0x4008022	      5103	quickfix.c	FUNCTION_88	IF_6	CALL_6
0x4008022	            0x89da	                            mov edx, ebx	      5104	quickfix.c	FUNCTION_88	IF_6
0x4008024	      0xbe00000000	                              mov esi, 0	      5106	quickfix.c	FUNCTION_88	IF_7	CALL_7
0x4008029	          0x4889ef	                            mov rdi, rbp	      5106	quickfix.c	FUNCTION_88	IF_7	CALL_7
0x400802c	          0x83ca20	                            or edx, 0x20	      5104	quickfix.c	FUNCTION_88	IF_6
0x400802f	          0x4885c0	                           test rax, rax	      5104	quickfix.c	FUNCTION_88	IF_6
0x4008032	           0xf45da	                         cmovne ebx, edx	      5104	quickfix.c	FUNCTION_88	IF_6
0x4008035	      0xbaffffffff	                     mov edx, 0xffffffff	      5106	quickfix.c	FUNCTION_88	IF_7	CALL_7
0x400803a	      0xe800000000	                          call 0x400803f	      5106	quickfix.c	FUNCTION_88	IF_7	CALL_7
0x400803f	            0x89da	                            mov edx, ebx	      5107	quickfix.c	FUNCTION_88	IF_7
0x4008041	      0xbe00000000	                              mov esi, 0	      5109	quickfix.c	FUNCTION_88	IF_8	CALL_8
0x4008046	          0x4889ef	                            mov rdi, rbp	      5109	quickfix.c	FUNCTION_88	IF_8	CALL_8
0x4008049	          0x83ca02	                               or edx, 2	      5107	quickfix.c	FUNCTION_88	IF_7
0x400804c	          0x4885c0	                           test rax, rax	      5107	quickfix.c	FUNCTION_88	IF_7
0x400804f	           0xf45da	                         cmovne ebx, edx	      5107	quickfix.c	FUNCTION_88	IF_7
0x4008052	      0xbaffffffff	                     mov edx, 0xffffffff	      5109	quickfix.c	FUNCTION_88	IF_8	CALL_8
0x4008057	      0xe800000000	                          call 0x400805c	      5109	quickfix.c	FUNCTION_88	IF_8	CALL_8
0x400805c	            0x89da	                            mov edx, ebx	      5110	quickfix.c	FUNCTION_88	IF_8
0x400805e	      0xbe00000000	                              mov esi, 0	      5112	quickfix.c	FUNCTION_88	IF_9	CALL_9
0x4008063	          0x4889ef	                            mov rdi, rbp	      5112	quickfix.c	FUNCTION_88	IF_9	CALL_9
0x4008066	          0x83ca40	                            or edx, 0x40	      5110	quickfix.c	FUNCTION_88	IF_8
0x4008069	          0x4885c0	                           test rax, rax	      5110	quickfix.c	FUNCTION_88	IF_8
0x400806c	           0xf45da	                         cmovne ebx, edx	      5110	quickfix.c	FUNCTION_88	IF_8
0x400806f	      0xbaffffffff	                     mov edx, 0xffffffff	      5112	quickfix.c	FUNCTION_88	IF_9	CALL_9
0x4008074	      0xe800000000	                          call 0x4008079	      5112	quickfix.c	FUNCTION_88	IF_9	CALL_9
0x4008079	            0x89da	                            mov edx, ebx	      5113	quickfix.c	FUNCTION_88	IF_9
0x400807b	      0xbe00000000	                              mov esi, 0	      5115	quickfix.c	FUNCTION_88	IF_10	CALL_10
0x4008080	          0x4889ef	                            mov rdi, rbp	      5115	quickfix.c	FUNCTION_88	IF_10	CALL_10
0x4008083	          0x80ca80	                             or dl, 0x80	      5113	quickfix.c	FUNCTION_88	IF_9
0x4008086	          0x4885c0	                           test rax, rax	      5113	quickfix.c	FUNCTION_88	IF_9
0x4008089	           0xf45da	                         cmovne ebx, edx	      5113	quickfix.c	FUNCTION_88	IF_9
0x400808c	      0xbaffffffff	                     mov edx, 0xffffffff	      5115	quickfix.c	FUNCTION_88	IF_10	CALL_10
0x4008091	      0xe800000000	                          call 0x4008096	      5115	quickfix.c	FUNCTION_88	IF_10	CALL_10
0x4008096	            0x89da	                            mov edx, ebx	      5116	quickfix.c	FUNCTION_88	IF_10
0x4008098	          0x80ce01	                                or dh, 1	      5116	quickfix.c	FUNCTION_88	IF_10
0x400809b	          0x4885c0	                           test rax, rax	      5116	quickfix.c	FUNCTION_88	IF_10
0x400809e	           0xf45da	                         cmovne ebx, edx	      5116	quickfix.c	FUNCTION_88	IF_10
0x40080a1	          0x4d85f6	                           test r14, r14	      5310	quickfix.c	FUNCTION_95	IF_3
0x40080a4	            0x740c	                            je 0x40080b2	      5310	quickfix.c	FUNCTION_95	IF_3
0x40080a6	        0x418b5604	                mov edx, dword [r14 + 4]	      5310	quickfix.c	FUNCTION_95	IF_3
0x40080aa	            0x85d2	                           test edx, edx	      5310	quickfix.c	FUNCTION_95	IF_3
0x40080ac	     0xf859e000000	                           jne 0x4008150	      5310	quickfix.c	FUNCTION_95	IF_3
0x40080b2	          0xf6c301	                              test bl, 1	      5186	quickfix.c	ELSE_3	FUNCTION_90	IF_1
0x40080b5	     0xf8545010000	                           jne 0x4008200	      5186	quickfix.c	ELSE_3	FUNCTION_90	IF_1
0x40080bb	          0xf6c302	                              test bl, 2	      5188	quickfix.c	ELSE_3	FUNCTION_90	IF_2
0x40080be	     0xf8564010000	                           jne 0x4008228	      5188	quickfix.c	ELSE_3	FUNCTION_90	IF_2
0x40080c4	          0xf6c304	                              test bl, 4	      5196	quickfix.c	ELSE_3	FUNCTION_90	IF_4
0x40080c7	     0xf857b030000	                           jne 0x4008448	      5196	quickfix.c	ELSE_3	FUNCTION_90	IF_4
0x40080cd	          0xf6c308	                              test bl, 8	      5198	quickfix.c	ELSE_3	FUNCTION_90	IF_5
0x40080d0	            0x7435	                            je 0x4008107	      5198	quickfix.c	ELSE_3	FUNCTION_90	IF_5
0x40080d2	          0x4d85f6	                           test r14, r14	      5072	quickfix.c	FUNCTION_87	IF_1
0x40080d5	     0xf843d050000	                            je 0x4008618	      5072	quickfix.c	FUNCTION_87	IF_1
0x40080db	          0x4c89f7	                            mov rdi, r14	      5074	quickfix.c	FUNCTION_87	CALL_1
0x40080de	      0xe81d91ffff	                    call sym.qf_find_win	      5074	quickfix.c	FUNCTION_87	CALL_1
0x40080e3	          0x4885c0	                           test rax, rax	      5075	quickfix.c	FUNCTION_87	IF_2
0x40080e6	     0xf842c050000	                            je 0x4008618	      5075	quickfix.c	FUNCTION_87	IF_2
0x40080ec	          0x486310	                 movsxd rdx, dword [rax]	      5075	quickfix.c	FUNCTION_87	IF_2
0x40080ef	            0x31c9	                            xor ecx, ecx	      5199	quickfix.c	ELSE_3	FUNCTION_90	CALL_6
0x40080f1	      0xbe00000000	                              mov esi, 0	      5199	quickfix.c	ELSE_3	FUNCTION_90	CALL_6
0x40080f6	          0x4c89e7	                            mov rdi, r12	      5199	quickfix.c	ELSE_3	FUNCTION_90	CALL_6
0x40080f9	      0xe800000000	                          call 0x40080fe	      5199	quickfix.c	ELSE_3	FUNCTION_90	CALL_6
0x40080fe	          0x83f801	                              cmp eax, 1	      5200	quickfix.c	ELSE_3	FUNCTION_90	IF_6
0x4008101	     0xf8545fdffff	                           jne 0x4007e4c	      5200	quickfix.c	ELSE_3	FUNCTION_90	IF_6
0x4008107	          0xf6c310	                           test bl, 0x10	      5200	quickfix.c	ELSE_3	FUNCTION_90	IF_6
0x400810a	     0xf8510030000	                           jne 0x4008420	      5200	quickfix.c	ELSE_3	FUNCTION_90	IF_6
0x4008110	          0xf6c320	                           test bl, 0x20	      5202	quickfix.c	ELSE_3	FUNCTION_90	IF_7
0x4008113	     0xf85e7020000	                           jne 0x4008400	      5202	quickfix.c	ELSE_3	FUNCTION_90	IF_7
0x4008119	          0xf6c340	                           test bl, 0x40	      5204	quickfix.c	ELSE_3	FUNCTION_90	IF_8
0x400811c	     0xf85be020000	                           jne 0x40083e0	      5204	quickfix.c	ELSE_3	FUNCTION_90	IF_8
0x4008122	          0xf6c380	                           test bl, 0x80	      5206	quickfix.c	ELSE_3	FUNCTION_90	IF_9
0x4008125	     0xf8595020000	                           jne 0x40083c0	      5206	quickfix.c	ELSE_3	FUNCTION_90	IF_9
0x400812b	          0x80e701	                               and bh, 1	      5208	quickfix.c	ELSE_3	FUNCTION_90	IF_10
0x400812e	     0xf8524010000	                           jne 0x4008258	      5208	quickfix.c	ELSE_3	FUNCTION_90	IF_10
0x4008134	      0xb801000000	                              mov eax, 1	      5208	quickfix.c	ELSE_3	FUNCTION_90	IF_10
0x4008139	      0xe90efdffff	                           jmp 0x4007e4c	      5208	quickfix.c	ELSE_3	FUNCTION_90	IF_10
0x400813e	            0x6690	                                     nop	      5208	quickfix.c	ELSE_3	FUNCTION_90	IF_10
0x4008140	    0x4d8bb5481900	          mov r14, qword [r13 + 0x1948] 	      5306	quickfix.c	FUNCTION_95	IF_2
0x4008147	      0xe930feffff	                           jmp 0x4007f7c	      5306	quickfix.c	FUNCTION_95	IF_2
0x400814c	         0xf1f4000	                         nop dword [rax]	      5306	quickfix.c	FUNCTION_95	IF_2
0x4008150	      0xbaffffffff	                     mov edx, 0xffffffff	      5138	quickfix.c	FUNCTION_89	IF_1	CALL_1
0x4008155	      0xbe00000000	                              mov esi, 0	      5138	quickfix.c	FUNCTION_89	IF_1	CALL_1
0x400815a	          0x4889ef	                            mov rdi, rbp	      5138	quickfix.c	FUNCTION_89	IF_1	CALL_1
0x400815d	        0x458b6e08	               mov r13d, dword [r14 + 8]	      5137	quickfix.c	FUNCTION_89
0x4008161	      0xe800000000	                          call 0x4008166	      5138	quickfix.c	FUNCTION_89	IF_1	CALL_1
0x4008166	          0x4885c0	                           test rax, rax	      5138	quickfix.c	FUNCTION_89	IF_1	CALL_1
0x4008169	     0xf8441010000	                            je 0x40082b0	      5138	quickfix.c	FUNCTION_89	IF_1	CALL_1
0x400816f	            0x8b10	                    mov edx, dword [rax]	      5141	quickfix.c	FUNCTION_89	IF_1	IF_2
0x4008171	          0x83fa01	                              cmp edx, 1	      5141	quickfix.c	FUNCTION_89	IF_1	IF_2
0x4008174	     0xf8436030000	                            je 0x40084b0	      5141	quickfix.c	FUNCTION_89	IF_1	IF_2
0x400817a	          0x83fa02	                              cmp edx, 2	      5151	quickfix.c	FUNCTION_89	IF_1	ELSE_1	IF_5
0x400817d	     0xf84fd000000	                            je 0x4008280	      5151	quickfix.c	FUNCTION_89	IF_1	ELSE_1	IF_5
0x4008183	      0xbaffffffff	                     mov edx, 0xffffffff	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x4008188	      0xbe00000000	                              mov esi, 0	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x400818d	          0x4889ef	                            mov rdi, rbp	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x4008190	      0xe800000000	                          call 0x4008195	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x4008195	          0x4885c0	                           test rax, rax	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x4008198	    0x41bdffffffff	                    mov r13d, 0xffffffff	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x400819e	     0xf840effffff	                            je 0x40080b2	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x40081a4	          0x833801	                      cmp dword [rax], 1	      5163	quickfix.c	FUNCTION_89	ELSE_2	IF_6	IF_7
0x40081a7	     0xf8505ffffff	                           jne 0x40080b2	      5163	quickfix.c	FUNCTION_89	ELSE_2	IF_6	IF_7
0x40081ad	        0x488b4008	                mov rax, qword [rax + 8]	      5168	quickfix.c	FUNCTION_89	ELSE_2	IF_6	IF_7	IF_8
0x40081b1	          0x4885c0	                           test rax, rax	      5168	quickfix.c	FUNCTION_89	ELSE_2	IF_6	IF_7	IF_8
0x40081b4	     0xf8416010000	                            je 0x40082d0	      5168	quickfix.c	FUNCTION_89	ELSE_2	IF_6	IF_7	IF_8
0x40081ba	        0x418b5604	                mov edx, dword [r14 + 4]	      4228	quickfix.c	FUNCTION_72	FOR_1
0x40081be	            0x89c1	                            mov ecx, eax	      5169	quickfix.c	FUNCTION_89	ELSE_2	IF_6	IF_7	CALL_4
0x40081c0	            0x85d2	                           test edx, edx	      4228	quickfix.c	FUNCTION_72	FOR_1
0x40081c2	     0xf8eeafeffff	                           jle 0x40080b2	      4228	quickfix.c	FUNCTION_72	FOR_1
0x40081c8	        0x41394610	            cmp dword [r14 + 0x10], eax 	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x40081cc	     0xf848d040000	                            je 0x400865f	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x40081d2	    0x498d86880000	                   lea rax, [r14 + 0x88]	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x40081d9	          0x4531ed	                          xor r13d, r13d	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x40081dc	         0xf1f4000	                         nop dword [rax]	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x40081e0	        0x4183c501	                             add r13d, 1	      4228	quickfix.c	FUNCTION_72	FOR_1
0x40081e4	          0x4439ea	                           cmp edx, r13d	      4228	quickfix.c	FUNCTION_72	FOR_1
0x40081e7	     0xf84c5feffff	                            je 0x40080b2	      4228	quickfix.c	FUNCTION_72	FOR_1
0x40081ed	        0x4883c078	                           add rax, 0x78	      4228	quickfix.c	FUNCTION_72	FOR_1
0x40081f1	          0x3b4888	             cmp ecx, dword [rax - 0x78]	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x40081f4	            0x75ea	                           jne 0x40081e0	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x40081f6	      0xe9d9000000	                           jmp 0x40082d4	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x40081fb	       0xf1f440000	                   nop dword [rax + rax]	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x4008200	            0x31d2	                            xor edx, edx	      5187	quickfix.c	ELSE_3	FUNCTION_90	CALL_1
0x4008202	      0xb900000000	                              mov ecx, 0	      5187	quickfix.c	ELSE_3	FUNCTION_90	CALL_1
0x4008207	      0xbe00000000	                              mov esi, 0	      5187	quickfix.c	ELSE_3	FUNCTION_90	CALL_1
0x400820c	          0x4c89e7	                            mov rdi, r12	      5187	quickfix.c	ELSE_3	FUNCTION_90	CALL_1
0x400820f	      0xe800000000	                          call 0x4008214	      5187	quickfix.c	ELSE_3	FUNCTION_90	CALL_1
0x4008214	          0x83f801	                              cmp eax, 1	      5188	quickfix.c	ELSE_3	FUNCTION_90	IF_2
0x4008217	     0xf852ffcffff	                           jne 0x4007e4c	      5188	quickfix.c	ELSE_3	FUNCTION_90	IF_2
0x400821d	      0xe999feffff	                           jmp 0x40080bb	      5188	quickfix.c	ELSE_3	FUNCTION_90	IF_2
0x4008222	    0x660f1f440000	                    nop word [rax + rax]	      5188	quickfix.c	ELSE_3	FUNCTION_90	IF_2
0x4008228	      0xe800000000	                          call 0x400822d	      5190	quickfix.c	ELSE_3	FUNCTION_90	IF_2	CALL_2
0x400822d	          0x4885c0	                           test rax, rax	      5191	quickfix.c	ELSE_3	FUNCTION_90	IF_2	IF_3
0x4008230	     0xf8414fcffff	                            je 0x4007e4a	      5191	quickfix.c	ELSE_3	FUNCTION_90	IF_2	IF_3
0x4008236	          0x4889c2	                            mov rdx, rax	      5192	quickfix.c	ELSE_3	FUNCTION_90	IF_2	CALL_3
0x4008239	      0xbe00000000	                              mov esi, 0	      5192	quickfix.c	ELSE_3	FUNCTION_90	IF_2	CALL_3
0x400823e	          0x4c89e7	                            mov rdi, r12	      5192	quickfix.c	ELSE_3	FUNCTION_90	IF_2	CALL_3
0x4008241	      0xe800000000	                          call 0x4008246	      5192	quickfix.c	ELSE_3	FUNCTION_90	IF_2	CALL_3
0x4008246	          0x83f801	                              cmp eax, 1	      5196	quickfix.c	ELSE_3	FUNCTION_90	IF_4
0x4008249	     0xf8475feffff	                            je 0x40080c4	      5196	quickfix.c	ELSE_3	FUNCTION_90	IF_4
0x400824f	      0xe9f8fbffff	                           jmp 0x4007e4c	      5196	quickfix.c	ELSE_3	FUNCTION_90	IF_4
0x4008254	         0xf1f4000	                         nop dword [rax]	      5196	quickfix.c	ELSE_3	FUNCTION_90	IF_4
0x4008258	            0x31c9	                            xor ecx, ecx	      5209	quickfix.c	ELSE_3	FUNCTION_90	CALL_11
0x400825a	            0x31d2	                            xor edx, edx	      5209	quickfix.c	ELSE_3	FUNCTION_90	CALL_11
0x400825c	        0x4883c418	                           add rsp, 0x18	      5340	quickfix.c	FUNCTION_95
0x4008260	          0x4c89e7	                            mov rdi, r12	      5336	quickfix.c	FUNCTION_95	IF_13	CALL_15
0x4008263	      0xbe00000000	                              mov esi, 0	      5336	quickfix.c	FUNCTION_95	IF_13	CALL_15
0x4008268	              0x5b	                                 pop rbx	      5340	quickfix.c	FUNCTION_95
0x4008269	              0x5d	                                 pop rbp	      5340	quickfix.c	FUNCTION_95
0x400826a	            0x415c	                                 pop r12	      5340	quickfix.c	FUNCTION_95
0x400826c	            0x415d	                                 pop r13	      5340	quickfix.c	FUNCTION_95
0x400826e	            0x415e	                                 pop r14	      5340	quickfix.c	FUNCTION_95
0x4008270	            0x415f	                                 pop r15	      5340	quickfix.c	FUNCTION_95
0x4008272	      0xe900000000	                           jmp 0x4008277	      5336	quickfix.c	FUNCTION_95	IF_13	CALL_15
0x4008277	    0x660f1f840000	                    nop word [rax + rax]	      5336	quickfix.c	FUNCTION_95	IF_13	CALL_15
0x4008280	        0x488b4008	                mov rax, qword [rax + 8]	      5152	quickfix.c	FUNCTION_89	IF_1	ELSE_1	IF_5
0x4008284	          0x4885c0	                           test rax, rax	      5152	quickfix.c	FUNCTION_89	IF_1	ELSE_1	IF_5
0x4008287	     0xf84f6feffff	                            je 0x4008183	      5152	quickfix.c	FUNCTION_89	IF_1	ELSE_1	IF_5
0x400828d	          0x803824	                    cmp byte [rax], 0x24	      5153	quickfix.c	FUNCTION_89	IF_1	ELSE_1	IF_5	CALL_2
0x4008290	     0xf8589030000	                           jne 0x400861f	      5153	quickfix.c	FUNCTION_89	IF_1	ELSE_1	IF_5	CALL_2
0x4008296	        0x80780100	                   cmp byte [rax + 1], 0	      5153	quickfix.c	FUNCTION_89	IF_1	ELSE_1	IF_5	CALL_2
0x400829a	     0xf85e3feffff	                           jne 0x4008183	      5153	quickfix.c	FUNCTION_89	IF_1	ELSE_1	IF_5	CALL_2
0x40082a0	        0x418b4604	                mov eax, dword [r14 + 4]	      5155	quickfix.c	FUNCTION_89	IF_1	ELSE_1	IF_5
0x40082a4	        0x448d68ff	                     lea r13d, [rax - 1]	      5155	quickfix.c	FUNCTION_89	IF_1	ELSE_1	IF_5
0x40082a8	     0xf1f84000000	                   nop dword [rax + rax]	      5155	quickfix.c	FUNCTION_89	IF_1	ELSE_1	IF_5
0x40082b0	      0xbaffffffff	                     mov edx, 0xffffffff	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x40082b5	      0xbe00000000	                              mov esi, 0	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x40082ba	          0x4889ef	                            mov rdi, rbp	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x40082bd	      0xe800000000	                          call 0x40082c2	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x40082c2	          0x4885c0	                           test rax, rax	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x40082c5	     0xf85d9feffff	                           jne 0x40081a4	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x40082cb	       0xf1f440000	                   nop dword [rax + rax]	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x40082d0	        0x418b5604	                mov edx, dword [r14 + 4]	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x40082d4	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x40082d8	           0xf94c0	                                 sete al	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x40082db	            0x85d2	                           test edx, edx	      5314	quickfix.c	FUNCTION_95	IF_4
0x40082dd	     0xf84cffdffff	                            je 0x40080b2	      5314	quickfix.c	FUNCTION_95	IF_4
0x40082e3	            0x84c0	                             test al, al	      5314	quickfix.c	FUNCTION_95	IF_4
0x40082e5	     0xf85c7fdffff	                           jne 0x40080b2	      5314	quickfix.c	FUNCTION_95	IF_4
0x40082eb	          0xf6c301	                              test bl, 1	      5317	quickfix.c	FUNCTION_95	IF_5
0x40082ee	     0xf857c010000	                           jne 0x4008470	      5317	quickfix.c	FUNCTION_95	IF_5
0x40082f4	          0xf6c304	                              test bl, 4	      5319	quickfix.c	FUNCTION_95	IF_6
0x40082f7	     0xf85f3020000	                           jne 0x40085f0	      5319	quickfix.c	FUNCTION_95	IF_6
0x40082fd	          0xf6c308	                              test bl, 8	      5321	quickfix.c	FUNCTION_95	IF_7
0x4008300	            0x742c	                            je 0x400832e	      5321	quickfix.c	FUNCTION_95	IF_7
0x4008302	          0x4c89f7	                            mov rdi, r14	      5074	quickfix.c	FUNCTION_87	CALL_1
0x4008305	      0xe8f68effff	                    call sym.qf_find_win	      5074	quickfix.c	FUNCTION_87	CALL_1
0x400830a	          0x4885c0	                           test rax, rax	      5075	quickfix.c	FUNCTION_87	IF_2
0x400830d	     0xf842c030000	                            je 0x400863f	      5075	quickfix.c	FUNCTION_87	IF_2
0x4008313	          0x486310	                 movsxd rdx, dword [rax]	      5075	quickfix.c	FUNCTION_87	IF_2
0x4008316	            0x31c9	                            xor ecx, ecx	      5322	quickfix.c	FUNCTION_95	CALL_9
0x4008318	      0xbe00000000	                              mov esi, 0	      5322	quickfix.c	FUNCTION_95	CALL_9
0x400831d	          0x4c89e7	                            mov rdi, r12	      5322	quickfix.c	FUNCTION_95	CALL_9
0x4008320	      0xe800000000	                          call 0x4008325	      5322	quickfix.c	FUNCTION_95	CALL_9
0x4008325	          0x83f801	                              cmp eax, 1	      5323	quickfix.c	FUNCTION_95	IF_8
0x4008328	     0xf851efbffff	                           jne 0x4007e4c	      5323	quickfix.c	FUNCTION_95	IF_8
0x400832e	          0xf6c302	                              test bl, 2	      5323	quickfix.c	FUNCTION_95	IF_8
0x4008331	     0xf8581020000	                           jne 0x40085b8	      5323	quickfix.c	FUNCTION_95	IF_8
0x4008337	          0xf6c310	                           test bl, 0x10	      5325	quickfix.c	FUNCTION_95	IF_9
0x400833a	     0xf8510020000	                           jne 0x4008550	      5325	quickfix.c	FUNCTION_95	IF_9
0x4008340	          0xf6c320	                           test bl, 0x20	      5327	quickfix.c	FUNCTION_95	IF_10
0x4008343	     0xf85cf010000	                           jne 0x4008518	      5327	quickfix.c	FUNCTION_95	IF_10
0x4008349	          0xf6c340	                           test bl, 0x40	      5330	quickfix.c	FUNCTION_95	IF_11
0x400834c	            0x743f	                            je 0x400838d	      5330	quickfix.c	FUNCTION_95	IF_11
0x400834e	          0x4963c5	                        movsxd rax, r13d	      5281	quickfix.c	FUNCTION_94
0x4008351	      0xbe00000000	                              mov esi, 0	      5285	quickfix.c	FUNCTION_94	CALL_1
0x4008356	          0x4c89e7	                            mov rdi, r12	      5285	quickfix.c	FUNCTION_94	CALL_1
0x4008359	    0x488d14c50000	                        lea rdx, [rax*8]	      5281	quickfix.c	FUNCTION_94
0x4008361	        0x48c1e007	                              shl rax, 7	      5281	quickfix.c	FUNCTION_94
0x4008365	          0x4829d0	                            sub rax, rdx	      5281	quickfix.c	FUNCTION_94
0x4008368	          0x4c01f0	                            add rax, r14	      5281	quickfix.c	FUNCTION_94
0x400836b	        0x48635034	         movsxd rdx, dword [rax + 0x34] 	      5281	quickfix.c	FUNCTION_94
0x400836f	          0x8b4030	            mov eax, dword [rax + 0x30] 	      5281	quickfix.c	FUNCTION_94
0x4008372	            0x85c0	                           test eax, eax	      5281	quickfix.c	FUNCTION_94
0x4008374	      0xb800000000	                              mov eax, 0	      5281	quickfix.c	FUNCTION_94
0x4008379	        0x480f44d0	                          cmove rdx, rax	      5281	quickfix.c	FUNCTION_94
0x400837d	            0x31c9	                            xor ecx, ecx	      5285	quickfix.c	FUNCTION_94	CALL_1
0x400837f	      0xe800000000	                          call 0x4008384	      5285	quickfix.c	FUNCTION_94	CALL_1
0x4008384	          0x83f801	                              cmp eax, 1	      5332	quickfix.c	FUNCTION_95	IF_12
0x4008387	     0xf85bffaffff	                           jne 0x4007e4c	      5332	quickfix.c	FUNCTION_95	IF_12
0x400838d	          0xf6c380	                           test bl, 0x80	      5332	quickfix.c	FUNCTION_95	IF_12
0x4008390	     0xf854a010000	                           jne 0x40084e0	      5332	quickfix.c	FUNCTION_95	IF_12
0x4008396	          0x80e701	                               and bh, 1	      5335	quickfix.c	FUNCTION_95	IF_13
0x4008399	     0xf8495fdffff	                            je 0x4008134	      5335	quickfix.c	FUNCTION_95	IF_13
0x400839f	          0x4d63ed	                        movsxd r13, r13d	      5336	quickfix.c	FUNCTION_95	IF_13	CALL_15
0x40083a2	            0x31c9	                            xor ecx, ecx	      5336	quickfix.c	FUNCTION_95	IF_13	CALL_15
0x40083a4	    0x4a8d04ed0000	                        lea rax, [r13*8]	      5336	quickfix.c	FUNCTION_95	IF_13	CALL_15
0x40083ac	        0x49c1e507	                              shl r13, 7	      5336	quickfix.c	FUNCTION_95	IF_13	CALL_15
0x40083b0	          0x4929c5	                            sub r13, rax	      5336	quickfix.c	FUNCTION_95	IF_13	CALL_15
0x40083b3	    0x4b8b942e8000	      mov rdx, qword [r14 + r13 + 0x80] 	      5336	quickfix.c	FUNCTION_95	IF_13	CALL_15
0x40083bb	      0xe99cfeffff	                           jmp 0x400825c	      5336	quickfix.c	FUNCTION_95	IF_13	CALL_15
0x40083c0	            0x31c9	                            xor ecx, ecx	      5207	quickfix.c	ELSE_3	FUNCTION_90	CALL_10
0x40083c2	            0x31d2	                            xor edx, edx	      5207	quickfix.c	ELSE_3	FUNCTION_90	CALL_10
0x40083c4	      0xbe00000000	                              mov esi, 0	      5207	quickfix.c	ELSE_3	FUNCTION_90	CALL_10
0x40083c9	          0x4c89e7	                            mov rdi, r12	      5207	quickfix.c	ELSE_3	FUNCTION_90	CALL_10
0x40083cc	      0xe800000000	                          call 0x40083d1	      5207	quickfix.c	ELSE_3	FUNCTION_90	CALL_10
0x40083d1	          0x83f801	                              cmp eax, 1	      5208	quickfix.c	ELSE_3	FUNCTION_90	IF_10
0x40083d4	     0xf8451fdffff	                            je 0x400812b	      5208	quickfix.c	ELSE_3	FUNCTION_90	IF_10
0x40083da	      0xe96dfaffff	                           jmp 0x4007e4c	      5208	quickfix.c	ELSE_3	FUNCTION_90	IF_10
0x40083df	              0x90	                                     nop	      5208	quickfix.c	ELSE_3	FUNCTION_90	IF_10
0x40083e0	            0x31c9	                            xor ecx, ecx	      5205	quickfix.c	ELSE_3	FUNCTION_90	CALL_9
0x40083e2	            0x31d2	                            xor edx, edx	      5205	quickfix.c	ELSE_3	FUNCTION_90	CALL_9
0x40083e4	      0xbe00000000	                              mov esi, 0	      5205	quickfix.c	ELSE_3	FUNCTION_90	CALL_9
0x40083e9	          0x4c89e7	                            mov rdi, r12	      5205	quickfix.c	ELSE_3	FUNCTION_90	CALL_9
0x40083ec	      0xe800000000	                          call 0x40083f1	      5205	quickfix.c	ELSE_3	FUNCTION_90	CALL_9
0x40083f1	          0x83f801	                              cmp eax, 1	      5206	quickfix.c	ELSE_3	FUNCTION_90	IF_9
0x40083f4	     0xf8428fdffff	                            je 0x4008122	      5206	quickfix.c	ELSE_3	FUNCTION_90	IF_9
0x40083fa	      0xe94dfaffff	                           jmp 0x4007e4c	      5206	quickfix.c	ELSE_3	FUNCTION_90	IF_9
0x40083ff	              0x90	                                     nop	      5206	quickfix.c	ELSE_3	FUNCTION_90	IF_9
0x4008400	            0x31c9	                            xor ecx, ecx	      5203	quickfix.c	ELSE_3	FUNCTION_90	CALL_8
0x4008402	            0x31d2	                            xor edx, edx	      5203	quickfix.c	ELSE_3	FUNCTION_90	CALL_8
0x4008404	      0xbe00000000	                              mov esi, 0	      5203	quickfix.c	ELSE_3	FUNCTION_90	CALL_8
0x4008409	          0x4c89e7	                            mov rdi, r12	      5203	quickfix.c	ELSE_3	FUNCTION_90	CALL_8
0x400840c	      0xe800000000	                          call 0x4008411	      5203	quickfix.c	ELSE_3	FUNCTION_90	CALL_8
0x4008411	          0x83f801	                              cmp eax, 1	      5204	quickfix.c	ELSE_3	FUNCTION_90	IF_8
0x4008414	     0xf84fffcffff	                            je 0x4008119	      5204	quickfix.c	ELSE_3	FUNCTION_90	IF_8
0x400841a	      0xe92dfaffff	                           jmp 0x4007e4c	      5204	quickfix.c	ELSE_3	FUNCTION_90	IF_8
0x400841f	              0x90	                                     nop	      5204	quickfix.c	ELSE_3	FUNCTION_90	IF_8
0x4008420	            0x31d2	                            xor edx, edx	      5201	quickfix.c	ELSE_3	FUNCTION_90	CALL_7
0x4008422	      0xb900000000	                              mov ecx, 0	      5201	quickfix.c	ELSE_3	FUNCTION_90	CALL_7
0x4008427	      0xbe00000000	                              mov esi, 0	      5201	quickfix.c	ELSE_3	FUNCTION_90	CALL_7
0x400842c	          0x4c89e7	                            mov rdi, r12	      5201	quickfix.c	ELSE_3	FUNCTION_90	CALL_7
0x400842f	      0xe800000000	                          call 0x4008434	      5201	quickfix.c	ELSE_3	FUNCTION_90	CALL_7
0x4008434	          0x83f801	                              cmp eax, 1	      5202	quickfix.c	ELSE_3	FUNCTION_90	IF_7
0x4008437	     0xf84d3fcffff	                            je 0x4008110	      5202	quickfix.c	ELSE_3	FUNCTION_90	IF_7
0x400843d	      0xe90afaffff	                           jmp 0x4007e4c	      5202	quickfix.c	ELSE_3	FUNCTION_90	IF_7
0x4008442	    0x660f1f440000	                    nop word [rax + rax]	      5202	quickfix.c	ELSE_3	FUNCTION_90	IF_7
0x4008448	            0x31c9	                            xor ecx, ecx	      5197	quickfix.c	ELSE_3	FUNCTION_90	CALL_4
0x400844a	            0x31d2	                            xor edx, edx	      5197	quickfix.c	ELSE_3	FUNCTION_90	CALL_4
0x400844c	      0xbe00000000	                              mov esi, 0	      5197	quickfix.c	ELSE_3	FUNCTION_90	CALL_4
0x4008451	          0x4c89e7	                            mov rdi, r12	      5197	quickfix.c	ELSE_3	FUNCTION_90	CALL_4
0x4008454	      0xe800000000	                          call 0x4008459	      5197	quickfix.c	ELSE_3	FUNCTION_90	CALL_4
0x4008459	          0x83f801	                              cmp eax, 1	      5198	quickfix.c	ELSE_3	FUNCTION_90	IF_5
0x400845c	     0xf846bfcffff	                            je 0x40080cd	      5198	quickfix.c	ELSE_3	FUNCTION_90	IF_5
0x4008462	      0xe9e5f9ffff	                           jmp 0x4007e4c	      5198	quickfix.c	ELSE_3	FUNCTION_90	IF_5
0x4008467	    0x660f1f840000	                    nop word [rax + rax]	      5198	quickfix.c	ELSE_3	FUNCTION_90	IF_5
0x4008470	          0x4963c5	                        movsxd rax, r13d	      5222	quickfix.c	FUNCTION_91
0x4008473	      0xbe00000000	                              mov esi, 0	      5225	quickfix.c	FUNCTION_91	CALL_1
0x4008478	          0x4c89e7	                            mov rdi, r12	      5225	quickfix.c	FUNCTION_91	CALL_1
0x400847b	    0x488d14c50000	                        lea rdx, [rax*8]	      5222	quickfix.c	FUNCTION_91
0x4008483	        0x48c1e007	                              shl rax, 7	      5222	quickfix.c	FUNCTION_91
0x4008487	          0x4829d0	                            sub rax, rdx	      5222	quickfix.c	FUNCTION_91
0x400848a	      0x498b4c0640	      mov rcx, qword [r14 + rax + 0x40] 	      5222	quickfix.c	FUNCTION_91
0x400848f	      0xb800000000	                              mov eax, 0	      5224	quickfix.c	FUNCTION_91	IF_1
0x4008494	          0x4885c9	                           test rcx, rcx	      5224	quickfix.c	FUNCTION_91	IF_1
0x4008497	        0x480f44c8	                          cmove rcx, rax	      5224	quickfix.c	FUNCTION_91	IF_1
0x400849b	            0x31d2	                            xor edx, edx	      5225	quickfix.c	FUNCTION_91	CALL_1
0x400849d	      0xe800000000	                          call 0x40084a2	      5225	quickfix.c	FUNCTION_91	CALL_1
0x40084a2	          0x83f801	                              cmp eax, 1	      5319	quickfix.c	FUNCTION_95	IF_6
0x40084a5	     0xf85a1f9ffff	                           jne 0x4007e4c	      5319	quickfix.c	FUNCTION_95	IF_6
0x40084ab	      0xe944feffff	                           jmp 0x40082f4	      5319	quickfix.c	FUNCTION_95	IF_6
0x40084b0	        0x488b4008	                mov rax, qword [rax + 8]	      5144	quickfix.c	FUNCTION_89	IF_1	IF_2	IF_3
0x40084b4	          0x4885c0	                           test rax, rax	      5144	quickfix.c	FUNCTION_89	IF_1	IF_2	IF_3
0x40084b7	     0xf84f3fdffff	                            je 0x40082b0	      5144	quickfix.c	FUNCTION_89	IF_1	IF_2	IF_3
0x40084bd	          0x4189c5	                           mov r13d, eax	      5147	quickfix.c	FUNCTION_89	IF_1	IF_2	IF_3	IF_4
0x40084c0	        0x4183ed01	                             sub r13d, 1	      5147	quickfix.c	FUNCTION_89	IF_1	IF_2	IF_3	IF_4
0x40084c4	     0xf88b9fcffff	                            js 0x4008183	      5147	quickfix.c	FUNCTION_89	IF_1	IF_2	IF_3	IF_4
0x40084ca	        0x453b6e04	               cmp r13d, dword [r14 + 4]	      5147	quickfix.c	FUNCTION_89	IF_1	IF_2	IF_3	IF_4
0x40084ce	     0xf8daffcffff	                           jge 0x4008183	      5147	quickfix.c	FUNCTION_89	IF_1	IF_2	IF_3	IF_4
0x40084d4	      0xe9d7fdffff	                           jmp 0x40082b0	      5147	quickfix.c	FUNCTION_89	IF_1	IF_2	IF_3	IF_4
0x40084d9	     0xf1f80000000	                         nop dword [rax]	      5147	quickfix.c	FUNCTION_89	IF_1	IF_2	IF_3	IF_4
0x40084e0	          0x4963c5	                        movsxd rax, r13d	      5334	quickfix.c	FUNCTION_95	IF_12
0x40084e3	            0x31c9	                            xor ecx, ecx	      5333	quickfix.c	FUNCTION_95	IF_12	CALL_14
0x40084e5	      0xbe00000000	                              mov esi, 0	      5333	quickfix.c	FUNCTION_95	IF_12	CALL_14
0x40084ea	    0x488d14c50000	                        lea rdx, [rax*8]	      5334	quickfix.c	FUNCTION_95	IF_12
0x40084f2	        0x48c1e007	                              shl rax, 7	      5334	quickfix.c	FUNCTION_95	IF_12
0x40084f6	          0x4c89e7	                            mov rdi, r12	      5333	quickfix.c	FUNCTION_95	IF_12	CALL_14
0x40084f9	          0x4829d0	                            sub rax, rdx	      5334	quickfix.c	FUNCTION_95	IF_12
0x40084fc	      0x4963540630	   movsxd rdx, dword [r14 + rax + 0x30] 	      5333	quickfix.c	FUNCTION_95	IF_12	CALL_14
0x4008501	      0xe800000000	                          call 0x4008506	      5333	quickfix.c	FUNCTION_95	IF_12	CALL_14
0x4008506	          0x83f801	                              cmp eax, 1	      5335	quickfix.c	FUNCTION_95	IF_13
0x4008509	     0xf8487feffff	                            je 0x4008396	      5335	quickfix.c	FUNCTION_95	IF_13
0x400850f	      0xe938f9ffff	                           jmp 0x4007e4c	      5335	quickfix.c	FUNCTION_95	IF_13
0x4008514	         0xf1f4000	                         nop dword [rax]	      5335	quickfix.c	FUNCTION_95	IF_13
0x4008518	          0x4963c5	                        movsxd rax, r13d	      5328	quickfix.c	FUNCTION_95	IF_10	CALL_12
0x400851b	            0x31c9	                            xor ecx, ecx	      5328	quickfix.c	FUNCTION_95	IF_10	CALL_12
0x400851d	      0xbe00000000	                              mov esi, 0	      5328	quickfix.c	FUNCTION_95	IF_10	CALL_12
0x4008522	    0x488d14c50000	                        lea rdx, [rax*8]	      5328	quickfix.c	FUNCTION_95	IF_10	CALL_12
0x400852a	        0x48c1e007	                              shl rax, 7	      5328	quickfix.c	FUNCTION_95	IF_10	CALL_12
0x400852e	          0x4c89e7	                            mov rdi, r12	      5328	quickfix.c	FUNCTION_95	IF_10	CALL_12
0x4008531	          0x4829d0	                            sub rax, rdx	      5328	quickfix.c	FUNCTION_95	IF_10	CALL_12
0x4008534	      0x418b540610	      mov edx, dword [r14 + rax + 0x10] 	      5328	quickfix.c	FUNCTION_95	IF_10	CALL_12
0x4008539	      0xe800000000	                          call 0x400853e	      5328	quickfix.c	FUNCTION_95	IF_10	CALL_12
0x400853e	          0x83f801	                              cmp eax, 1	      5330	quickfix.c	FUNCTION_95	IF_11
0x4008541	     0xf8402feffff	                            je 0x4008349	      5330	quickfix.c	FUNCTION_95	IF_11
0x4008547	      0xe900f9ffff	                           jmp 0x4007e4c	      5330	quickfix.c	FUNCTION_95	IF_11
0x400854c	         0xf1f4000	                         nop dword [rax]	      5330	quickfix.c	FUNCTION_95	IF_11
0x4008550	          0x4963c5	                        movsxd rax, r13d	      5256	quickfix.c	ELSE_1	FUNCTION_93	IF_1
0x4008553	    0x488d14c50000	                        lea rdx, [rax*8]	      5256	quickfix.c	ELSE_1	FUNCTION_93	IF_1
0x400855b	        0x48c1e007	                              shl rax, 7	      5256	quickfix.c	ELSE_1	FUNCTION_93	IF_1
0x400855f	          0x4829d0	                            sub rax, rdx	      5256	quickfix.c	ELSE_1	FUNCTION_93	IF_1
0x4008562	        0x498d2c06	                    lea rbp, [r14 + rax]	      5256	quickfix.c	ELSE_1	FUNCTION_93	IF_1
0x4008566	      0x48837d4800	               cmp qword [rbp + 0x48], 0	      5256	quickfix.c	ELSE_1	FUNCTION_93	IF_1
0x400856b	     0xf84d5000000	                            je 0x4008646	      5256	quickfix.c	ELSE_1	FUNCTION_93	IF_1
0x4008571	      0xbf00000000	                              mov edi, 0	      5258	quickfix.c	ELSE_1	FUNCTION_93	IF_1	CALL_1
0x4008576	      0xe800000000	                          call 0x400857b	      5258	quickfix.c	ELSE_1	FUNCTION_93	IF_1	CALL_1
0x400857b	          0x4885c0	                           test rax, rax	      5259	quickfix.c	ELSE_1	FUNCTION_93	IF_1	IF_2
0x400857e	          0x4989c7	                            mov r15, rax	      5258	quickfix.c	ELSE_1	FUNCTION_93	IF_1	CALL_1
0x4008581	     0xf84c3f8ffff	                            je 0x4007e4a	      5259	quickfix.c	ELSE_1	FUNCTION_93	IF_1	IF_2
0x4008587	        0x488b7d48	            mov rdi, qword [rbp + 0x48] 	      5261	quickfix.c	ELSE_1	FUNCTION_93	IF_1	IF_2	CALL_2
0x400858b	          0x4889c6	                            mov rsi, rax	      5261	quickfix.c	ELSE_1	FUNCTION_93	IF_1	IF_2	CALL_2
0x400858e	      0xe800000000	                          call 0x4008593	      5261	quickfix.c	ELSE_1	FUNCTION_93	IF_1	IF_2	CALL_2
0x4008593	          0x4c89fe	                            mov rsi, r15	      5262	quickfix.c	ELSE_1	FUNCTION_93	IF_1	IF_2	CALL_3
0x4008596	          0x4c89e7	                            mov rdi, r12	      5262	quickfix.c	ELSE_1	FUNCTION_93	IF_1	IF_2	CALL_3
0x4008599	      0xe800000000	                          call 0x400859e	      5262	quickfix.c	ELSE_1	FUNCTION_93	IF_1	IF_2	CALL_3
0x400859e	            0x85c0	                           test eax, eax	      5263	quickfix.c	ELSE_1	FUNCTION_93	IF_1	IF_2	IF_3
0x40085a0	     0xf8484000000	                            je 0x400862a	      5263	quickfix.c	ELSE_1	FUNCTION_93	IF_1	IF_2	IF_3
0x40085a6	          0x83f801	                              cmp eax, 1	      5327	quickfix.c	FUNCTION_95	IF_10
0x40085a9	     0xf8491fdffff	                            je 0x4008340	      5327	quickfix.c	FUNCTION_95	IF_10
0x40085af	      0xe998f8ffff	                           jmp 0x4007e4c	      5327	quickfix.c	FUNCTION_95	IF_10
0x40085b4	         0xf1f4000	                         nop dword [rax]	      5327	quickfix.c	FUNCTION_95	IF_10
0x40085b8	      0xe800000000	                          call 0x40085bd	      5235	quickfix.c	FUNCTION_92	CALL_1
0x40085bd	          0x4885c0	                           test rax, rax	      5236	quickfix.c	FUNCTION_92	IF_1
0x40085c0	          0x4889c5	                            mov rbp, rax	      5235	quickfix.c	FUNCTION_92	CALL_1
0x40085c3	     0xf8481f8ffff	                            je 0x4007e4a	      5236	quickfix.c	FUNCTION_92	IF_1
0x40085c9	          0x4489ea	                           mov edx, r13d	      5238	quickfix.c	FUNCTION_92	IF_1	CALL_2
0x40085cc	            0x31f6	                            xor esi, esi	      5238	quickfix.c	FUNCTION_92	IF_1	CALL_2
0x40085ce	          0x4c89f7	                            mov rdi, r14	      5238	quickfix.c	FUNCTION_92	IF_1	CALL_2
0x40085d1	          0x4889c1	                            mov rcx, rax	      5238	quickfix.c	FUNCTION_92	IF_1	CALL_2
0x40085d4	      0xe800000000	                          call 0x40085d9	      5238	quickfix.c	FUNCTION_92	IF_1	CALL_2
0x40085d9	          0x4889ea	                            mov rdx, rbp	      5239	quickfix.c	FUNCTION_92	IF_1	CALL_3
0x40085dc	      0xbe00000000	                              mov esi, 0	      5239	quickfix.c	FUNCTION_92	IF_1	CALL_3
0x40085e1	          0x4c89e7	                            mov rdi, r12	      5239	quickfix.c	FUNCTION_92	IF_1	CALL_3
0x40085e4	      0xe800000000	                          call 0x40085e9	      5239	quickfix.c	FUNCTION_92	IF_1	CALL_3
0x40085e9	      0xe949fdffff	                           jmp 0x4008337	      5239	quickfix.c	FUNCTION_92	IF_1	CALL_3
0x40085ee	            0x6690	                                     nop	      5239	quickfix.c	FUNCTION_92	IF_1	CALL_3
0x40085f0	        0x418d5501	                      lea edx, [r13 + 1]	      5320	quickfix.c	FUNCTION_95	CALL_7
0x40085f4	            0x31c9	                            xor ecx, ecx	      5320	quickfix.c	FUNCTION_95	CALL_7
0x40085f6	      0xbe00000000	                              mov esi, 0	      5320	quickfix.c	FUNCTION_95	CALL_7
0x40085fb	          0x4c89e7	                            mov rdi, r12	      5320	quickfix.c	FUNCTION_95	CALL_7
0x40085fe	          0x4863d2	                         movsxd rdx, edx	      5320	quickfix.c	FUNCTION_95	CALL_7
0x4008601	      0xe800000000	                          call 0x4008606	      5320	quickfix.c	FUNCTION_95	CALL_7
0x4008606	          0x83f801	                              cmp eax, 1	      5321	quickfix.c	FUNCTION_95	IF_7
0x4008609	     0xf84eefcffff	                            je 0x40082fd	      5321	quickfix.c	FUNCTION_95	IF_7
0x400860f	      0xe938f8ffff	                           jmp 0x4007e4c	      5321	quickfix.c	FUNCTION_95	IF_7
0x4008614	         0xf1f4000	                         nop dword [rax]	      5321	quickfix.c	FUNCTION_95	IF_7
0x4008618	            0x31d2	                            xor edx, edx	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x400861a	      0xe9d0faffff	                           jmp 0x40080ef	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x400861f	    0x41bdffffffff	                    mov r13d, 0xffffffff	      5157	quickfix.c	FUNCTION_89	IF_1	ELSE_2
0x4008625	      0xe986fcffff	                           jmp 0x40082b0	      5157	quickfix.c	FUNCTION_89	IF_1	ELSE_2
0x400862a	          0x4c89ff	                            mov rdi, r15	      5264	quickfix.c	ELSE_1	FUNCTION_93	IF_1	IF_2	CALL_4
0x400862d	        0x8944240c	              mov dword [rsp + 0xc], eax	      5264	quickfix.c	ELSE_1	FUNCTION_93	IF_1	IF_2	CALL_4
0x4008631	      0xe800000000	                          call 0x4008636	      5264	quickfix.c	ELSE_1	FUNCTION_93	IF_1	IF_2	CALL_4
0x4008636	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      5264	quickfix.c	ELSE_1	FUNCTION_93	IF_1	IF_2	CALL_4
0x400863a	      0xe90df8ffff	                           jmp 0x4007e4c	      5264	quickfix.c	ELSE_1	FUNCTION_93	IF_1	IF_2	CALL_4
0x400863f	            0x31d2	                            xor edx, edx	      5075	quickfix.c	FUNCTION_87	IF_2
0x4008641	      0xe9d0fcffff	                           jmp 0x4008316	      5075	quickfix.c	FUNCTION_87	IF_2
0x4008646	      0xb900000000	                              mov ecx, 0	      5270	quickfix.c	FUNCTION_93	ELSE_1	CALL_5
0x400864b	            0x31d2	                            xor edx, edx	      5270	quickfix.c	FUNCTION_93	ELSE_1	CALL_5
0x400864d	      0xbe00000000	                              mov esi, 0	      5270	quickfix.c	FUNCTION_93	ELSE_1	CALL_5
0x4008652	          0x4c89e7	                            mov rdi, r12	      5270	quickfix.c	FUNCTION_93	ELSE_1	CALL_5
0x4008655	      0xe800000000	                          call 0x400865a	      5270	quickfix.c	FUNCTION_93	ELSE_1	CALL_5
0x400865a	      0xe947ffffff	                           jmp 0x40085a6	      5270	quickfix.c	FUNCTION_93	ELSE_1	CALL_5
0x400865f	          0x4531ed	                          xor r13d, r13d	      4228	quickfix.c	FUNCTION_72	FOR_1
0x4008662	      0xe984fcffff	                           jmp 0x40082eb	      4228	quickfix.c	FUNCTION_72	FOR_1
qf_mark_adjust	CALL,0:ELSE,2:DO,0:WHILE,0:FOR,2:SWITCH,0:IF,9:functions,0	87
0x40055b0	          0x4885ff	                           test rdi, rdi	      3056	quickfix.c	FUNCTION_45
0x40055b3	            0x4156	                                push r14	      3050	quickfix.c	FUNCTION_45
0x40055b5	    0x4c8b1d000000	            mov r11, qword [0x040055bc] 	      3058	quickfix.c	FUNCTION_45	IF_1
0x40055bc	            0x4154	                                push r12	      3050	quickfix.c	FUNCTION_45
0x40055be	              0x55	                                push rbp	      3050	quickfix.c	FUNCTION_45
0x40055bf	              0x53	                                push rbx	      3050	quickfix.c	FUNCTION_45
0x40055c0	     0xf8409010000	                            je 0x40056cf	      3056	quickfix.c	FUNCTION_45
0x40055c6	    0x41f683201400	            test byte [r11 + 0x1420], 2 	      3058	quickfix.c	FUNCTION_45	IF_1
0x40055ce	     0xf84af000000	                            je 0x4005683	      3058	quickfix.c	FUNCTION_45	IF_1
0x40055d4	    0x488baf481900	          mov rbp, qword [rdi + 0x1948] 	      3062	quickfix.c	FUNCTION_45	IF_2	IF_3
0x40055db	          0x4885ed	                           test rbp, rbp	      3062	quickfix.c	FUNCTION_45	IF_2	IF_3
0x40055de	     0xf849f000000	                            je 0x4005683	      3062	quickfix.c	FUNCTION_45	IF_2	IF_3
0x40055e4	    0x41bc02000000	                             mov r12d, 2	      3062	quickfix.c	FUNCTION_45	IF_2	IF_3
0x40055ea	          0x8b4504	                mov eax, dword [rbp + 4]	      3067	quickfix.c	FUNCTION_45	FOR_1
0x40055ed	          0x4531d2	                          xor r10d, r10d	      3067	quickfix.c	FUNCTION_45	FOR_1
0x40055f0	            0x31db	                            xor ebx, ebx	      3067	quickfix.c	FUNCTION_45	FOR_1
0x40055f2	        0x4c8d4d30	                    lea r9, [rbp + 0x30]	      3067	quickfix.c	FUNCTION_45	FOR_1
0x40055f6	            0x85c0	                           test eax, eax	      3067	quickfix.c	FUNCTION_45	FOR_1
0x40055f8	            0x7e7f	                           jle 0x4005679	      3067	quickfix.c	FUNCTION_45	FOR_1
0x40055fa	    0x660f1f440000	                    nop word [rax + rax]	      3067	quickfix.c	FUNCTION_45	FOR_1
0x4005600	        0x41833900	                       cmp dword [r9], 0	      3068	quickfix.c	FUNCTION_45	FOR_1	IF_4
0x4005604	            0x7462	                            je 0x4005668	      3068	quickfix.c	FUNCTION_45	FOR_1	IF_4
0x4005606	        0x498b41e8	              mov rax, qword [r9 - 0x18]	      3069	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x400560a	            0x7e5c	                           jle 0x4005668	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x400560c	          0x4885c0	                           test rax, rax	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x400560f	            0x7457	                            je 0x4005668	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x4005611	            0x31ff	                            xor edi, edi	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x4005613	            0xeb13	                           jmp 0x4005628	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x4005615	           0xf1f00	                         nop dword [rax]	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x4005618	          0x83c701	                              add edi, 1	      3071	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x400561b	          0x413939	                     cmp dword [r9], edi	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x400561e	          0x488b00	                    mov rax, qword [rax]	      3071	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x4005621	            0x7e45	                           jle 0x4005668	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x4005623	          0x4885c0	                           test rax, rax	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x4005626	            0x7440	                            je 0x4005668	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x4005628	    0x458bb3b80000	           mov r14d, dword [r11 + 0xb8] 	      3072	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5
0x400562f	        0x44397018	           cmp dword [rax + 0x18], r14d 	      3072	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5
0x4005633	            0x75e3	                           jne 0x4005618	      3072	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5
0x4005635	        0x4c8b5010	            mov r10, qword [rax + 0x10] 	      3075	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	IF_6
0x4005639	          0x4939d2	                            cmp r10, rdx	      3075	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	IF_6
0x400563c	            0x7f52	                            jg 0x4005690	      3075	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	IF_6
0x400563e	          0x4939f2	                            cmp r10, rsi	      3075	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	IF_6
0x4005641	            0x7c4d	                            jl 0x4005690	      3075	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	IF_6
0x4005643	    0x4881f9ffffff	                     cmp rcx, 0x7fffffff	      3077	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	IF_6	IF_7
0x400564a	            0x7474	                            je 0x40056c0	      3077	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	IF_6	IF_7
0x400564c	          0x4901ca	                            add r10, rcx	      3080	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	IF_6	ELSE_1
0x400564f	          0x83c701	                              add edi, 1	      3071	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x4005652	          0x413939	                     cmp dword [r9], edi	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x4005655	        0x4c895010	             mov qword [rax + 0x10], r10	      3080	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	IF_6	ELSE_1
0x4005659	    0x41ba01000000	                             mov r10d, 1	      3074	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5
0x400565f	          0x488b00	                    mov rax, qword [rax]	      3071	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x4005662	            0x7fbf	                            jg 0x4005623	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x4005664	         0xf1f4000	                         nop dword [rax]	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x4005668	          0x83c301	                              add ebx, 1	      3067	quickfix.c	FUNCTION_45	FOR_1
0x400566b	        0x4983c178	                            add r9, 0x78	      3067	quickfix.c	FUNCTION_45	FOR_1
0x400566f	          0x395d04	                cmp dword [rbp + 4], ebx	      3067	quickfix.c	FUNCTION_45	FOR_1
0x4005672	            0x7f8c	                            jg 0x4005600	      3067	quickfix.c	FUNCTION_45	FOR_1
0x4005674	          0x4585d2	                         test r10d, r10d	      3086	quickfix.c	FUNCTION_45	IF_9
0x4005677	            0x750a	                           jne 0x4005683	      3086	quickfix.c	FUNCTION_45	IF_9
0x4005679	          0x41f7d4	                                not r12d	      3087	quickfix.c	FUNCTION_45	IF_9
0x400567c	    0x4521a3201400	          and dword [r11 + 0x1420], r12d	      3087	quickfix.c	FUNCTION_45	IF_9
0x4005683	              0x5b	                                 pop rbx	      3088	quickfix.c	FUNCTION_45
0x4005684	              0x5d	                                 pop rbp	      3088	quickfix.c	FUNCTION_45
0x4005685	            0x415c	                                 pop r12	      3088	quickfix.c	FUNCTION_45
0x4005687	            0x415e	                                 pop r14	      3088	quickfix.c	FUNCTION_45
0x4005689	              0xc3	                                     ret	      3088	quickfix.c	FUNCTION_45
0x400568a	    0x660f1f440000	                    nop word [rax + rax]	      3088	quickfix.c	FUNCTION_45
0x4005690	          0x4d85c0	                             test r8, r8	      3082	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	ELSE_2	IF_8
0x4005693	            0x741b	                            je 0x40056b0	      3082	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	ELSE_2	IF_8
0x4005695	          0x4939d2	                            cmp r10, rdx	      3082	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	ELSE_2	IF_8
0x4005698	            0x7e16	                           jle 0x40056b0	      3082	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	ELSE_2	IF_8
0x400569a	          0x4d01c2	                             add r10, r8	      3083	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	ELSE_2	IF_8
0x400569d	        0x4c895010	             mov qword [rax + 0x10], r10	      3083	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	ELSE_2	IF_8
0x40056a1	    0x41ba01000000	                             mov r10d, 1	      3074	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5
0x40056a7	      0xe96cffffff	                           jmp 0x4005618	      3074	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5
0x40056ac	         0xf1f4000	                         nop dword [rax]	      3074	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5
0x40056b0	    0x41ba01000000	                             mov r10d, 1	      3074	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5
0x40056b6	      0xe95dffffff	                           jmp 0x4005618	      3074	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5
0x40056bb	       0xf1f440000	                   nop dword [rax + rax]	      3074	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5
0x40056c0	        0xc6404101	                mov byte [rax + 0x41], 1	      3078	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	IF_6	IF_7
0x40056c4	    0x41ba01000000	                             mov r10d, 1	      3074	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5
0x40056ca	      0xe949ffffff	                           jmp 0x4005618	      3074	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5
0x40056cf	    0x41f683201400	            test byte [r11 + 0x1420], 1 	      3058	quickfix.c	FUNCTION_45	IF_1
0x40056d7	    0x41bc01000000	                             mov r12d, 1	      3056	quickfix.c	FUNCTION_45
0x40056dd	      0xbd00000000	                              mov ebp, 0	      3054	quickfix.c	FUNCTION_45
0x40056e2	     0xf8502ffffff	                           jne 0x40055ea	      3058	quickfix.c	FUNCTION_45	IF_1
0x40056e8	            0xeb99	                           jmp 0x4005683	      3058	quickfix.c	FUNCTION_45	IF_1
qf_age	CALL,8:ELSE,2:DO,0:WHILE,1:FOR,0:SWITCH,0:IF,6:functions,0	82
0x4005390	              0x55	                                push rbp	      2915	quickfix.c	FUNCTION_41
0x4005391	              0x53	                                push rbx	      2915	quickfix.c	FUNCTION_41
0x4005392	          0x4889fd	                            mov rbp, rdi	      2915	quickfix.c	FUNCTION_41
0x4005395	        0x4883ec08	                              sub rsp, 8	      2915	quickfix.c	FUNCTION_41
0x4005399	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      2919	quickfix.c	FUNCTION_41	IF_1
0x400539c	      0x3df5000000	                           cmp eax, 0xf5	      2919	quickfix.c	FUNCTION_41	IF_1
0x40053a1	     0xf84b9000000	                            je 0x4005460	      2919	quickfix.c	FUNCTION_41	IF_1
0x40053a7	      0x3def000000	                           cmp eax, 0xef	      2919	quickfix.c	FUNCTION_41	IF_1
0x40053ac	      0xbb00000000	                              mov ebx, 0	      2916	quickfix.c	FUNCTION_41
0x40053b1	     0xf84a9000000	                            je 0x4005460	      2919	quickfix.c	FUNCTION_41	IF_1
0x40053b7	          0x8b5538	            mov edx, dword [rbp + 0x38] 	      2929	quickfix.c	FUNCTION_41	IF_3
0x40053ba	      0xb801000000	                              mov eax, 1	      2932	quickfix.c	FUNCTION_41	ELSE_1
0x40053bf	            0x85d2	                           test edx, edx	      2929	quickfix.c	FUNCTION_41	IF_3
0x40053c1	     0xf8589000000	                           jne 0x4005450	      2929	quickfix.c	FUNCTION_41	IF_3
0x40053c7	          0x8b7308	                mov esi, dword [rbx + 8]	      2929	quickfix.c	FUNCTION_41	IF_3
0x40053ca	            0xeb23	                           jmp 0x40053ef	      2929	quickfix.c	FUNCTION_41	IF_3
0x40053cc	         0xf1f4000	                         nop dword [rax]	      2929	quickfix.c	FUNCTION_41	IF_3
0x40053d0	    0x81faf5000000	                           cmp edx, 0xf5	      2935	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	IF_4
0x40053d6	            0x7423	                            je 0x40053fb	      2935	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	IF_4
0x40053d8	          0x8b4b04	                mov ecx, dword [rbx + 4]	      2946	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	ELSE_2	IF_6
0x40053db	          0x8d51ff	                      lea edx, [rcx - 1]	      2946	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	ELSE_2	IF_6
0x40053de	            0x39f2	                            cmp edx, esi	      2946	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	ELSE_2	IF_6
0x40053e0	     0xf8eda000000	                           jle 0x40054c0	      2946	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	ELSE_2	IF_6
0x40053e6	          0x83c601	                              add esi, 1	      2951	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	ELSE_2
0x40053e9	          0x897308	                mov dword [rbx + 8], esi	      2951	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	ELSE_2
0x40053ec	          0x83e801	                              sub eax, 1	      2951	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	ELSE_2
0x40053ef	            0x85c0	                           test eax, eax	      2933	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1
0x40053f1	            0x7439	                            je 0x400542c	      2933	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1
0x40053f3	          0x8b5520	            mov edx, dword [rbp + 0x20] 	      2935	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	IF_4
0x40053f6	          0x83fa55	                           cmp edx, 0x55	      2935	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	IF_4
0x40053f9	            0x75d5	                           jne 0x40053d0	      2935	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	IF_4
0x40053fb	            0x85f6	                           test esi, esi	      2937	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	IF_4	IF_5
0x40053fd	            0x7411	                            je 0x4005410	      2937	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	IF_4	IF_5
0x40053ff	          0x83ee01	                              sub esi, 1	      2942	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	IF_4
0x4005402	          0x897308	                mov dword [rbx + 8], esi	      2942	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	IF_4
0x4005405	            0xebe5	                           jmp 0x40053ec	      2942	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	IF_4
0x4005407	    0x660f1f840000	                    nop word [rax + rax]	      2942	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	IF_4
0x4005410	      0xba05000000	                              mov edx, 5	      2939	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	IF_4	IF_5	CALL_4
0x4005415	      0xbe00000000	                              mov esi, 0	      2939	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	IF_4	IF_5	CALL_4
0x400541a	            0x31ff	                            xor edi, edi	      2948	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	ELSE_2	IF_6	CALL_6
0x400541c	      0xe800000000	                          call 0x4005421	      2948	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	ELSE_2	IF_6	CALL_6
0x4005421	          0x4889c7	                            mov rdi, rax	      2948	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	ELSE_2	IF_6	CALL_6
0x4005424	      0xe800000000	                          call 0x4005429	      2948	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	ELSE_2	IF_6	CALL_6
0x4005429	          0x8b7308	                mov esi, dword [rbx + 8]	      2948	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	ELSE_2	IF_6	CALL_6
0x400542c	          0x4889df	                            mov rdi, rbx	      2954	quickfix.c	FUNCTION_41	CALL_7
0x400542f	      0xba00000000	                              mov edx, 0	      2954	quickfix.c	FUNCTION_41	CALL_7
0x4005434	      0xe867baffff	                         call sym.qf_msg	      2954	quickfix.c	FUNCTION_41	CALL_7
0x4005439	        0x4883c408	                              add rsp, 8	      2956	quickfix.c	FUNCTION_41
0x400543d	          0x4889df	                            mov rdi, rbx	      2955	quickfix.c	FUNCTION_41	CALL_8
0x4005440	            0x31f6	                            xor esi, esi	      2955	quickfix.c	FUNCTION_41	CALL_8
0x4005442	              0x5b	                                 pop rbx	      2956	quickfix.c	FUNCTION_41
0x4005443	              0x5d	                                 pop rbp	      2956	quickfix.c	FUNCTION_41
0x4005444	      0xe967c5ffff	                jmp sym.qf_update_buffer	      2955	quickfix.c	FUNCTION_41	CALL_8
0x4005449	     0xf1f80000000	                         nop dword [rax]	      2955	quickfix.c	FUNCTION_41	CALL_8
0x4005450	          0x8b4548	            mov eax, dword [rbp + 0x48] 	      2930	quickfix.c	FUNCTION_41	IF_3
0x4005453	      0xe96fffffff	                           jmp 0x40053c7	      2930	quickfix.c	FUNCTION_41	IF_3
0x4005458	     0xf1f84000000	                   nop dword [rax + rax]	      2930	quickfix.c	FUNCTION_41	IF_3
0x4005460	    0x488b05000000	            mov rax, qword [0x04005467] 	      2921	quickfix.c	FUNCTION_41	IF_1
0x4005467	        0x488b7808	                mov rdi, qword [rax + 8]	      2921	quickfix.c	FUNCTION_41	IF_1
0x400546b	      0xe800000000	                          call 0x4005470	      2921	quickfix.c	FUNCTION_41	IF_1
0x4005470	            0x85c0	                           test eax, eax	      2921	quickfix.c	FUNCTION_41	IF_1
0x4005472	    0x488b05000000	            mov rax, qword [0x04005479] 	      2921	quickfix.c	FUNCTION_41	IF_1
0x4005479	            0x7410	                            je 0x400548b	      2921	quickfix.c	FUNCTION_41	IF_1
0x400547b	    0x488b98501900	          mov rbx, qword [rax + 0x1950] 	      2921	quickfix.c	FUNCTION_41	IF_1
0x4005482	          0x4885db	                           test rbx, rbx	      2921	quickfix.c	FUNCTION_41	IF_1
0x4005485	     0xf852cffffff	                           jne 0x40053b7	      2921	quickfix.c	FUNCTION_41	IF_1
0x400548b	    0x488b98481900	          mov rbx, qword [rax + 0x1948] 	      2921	quickfix.c	FUNCTION_41	IF_1
0x4005492	          0x4885db	                           test rbx, rbx	      2922	quickfix.c	FUNCTION_41	IF_1	IF_2
0x4005495	     0xf851cffffff	                           jne 0x40053b7	      2922	quickfix.c	FUNCTION_41	IF_1	IF_2
0x400549b	            0x31ff	                            xor edi, edi	      2924	quickfix.c	FUNCTION_41	IF_1	IF_2	CALL_2
0x400549d	      0xba05000000	                              mov edx, 5	      2924	quickfix.c	FUNCTION_41	IF_1	IF_2	CALL_2
0x40054a2	      0xbe00000000	                              mov esi, 0	      2924	quickfix.c	FUNCTION_41	IF_1	IF_2	CALL_2
0x40054a7	      0xe800000000	                          call 0x40054ac	      2924	quickfix.c	FUNCTION_41	IF_1	IF_2	CALL_2
0x40054ac	        0x4883c408	                              add rsp, 8	      2956	quickfix.c	FUNCTION_41
0x40054b0	          0x4889c7	                            mov rdi, rax	      2924	quickfix.c	FUNCTION_41	IF_1	IF_2	CALL_2
0x40054b3	              0x5b	                                 pop rbx	      2956	quickfix.c	FUNCTION_41
0x40054b4	              0x5d	                                 pop rbp	      2956	quickfix.c	FUNCTION_41
0x40054b5	      0xe900000000	                           jmp 0x40054ba	      2924	quickfix.c	FUNCTION_41	IF_1	IF_2	CALL_2
0x40054ba	    0x660f1f440000	                    nop word [rax + rax]	      2924	quickfix.c	FUNCTION_41	IF_1	IF_2	CALL_2
0x40054c0	      0xba05000000	                              mov edx, 5	      2948	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	ELSE_2	IF_6	CALL_6
0x40054c5	      0xbe00000000	                              mov esi, 0	      2948	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	ELSE_2	IF_6	CALL_6
0x40054ca	      0xe94bffffff	                           jmp 0x400541a	      2948	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	ELSE_2	IF_6	CALL_6
get_errorlist	CALL,13:ELSE,0:DO,0:WHILE,0:FOR,1:SWITCH,0:IF,10:functions,0	180
0x4007b50	            0x4157	                                push r15	      4930	quickfix.c	FUNCTION_85
0x4007b52	            0x4156	                                push r14	      4930	quickfix.c	FUNCTION_85
0x4007b54	            0x4155	                                push r13	      4930	quickfix.c	FUNCTION_85
0x4007b56	            0x4154	                                push r12	      4930	quickfix.c	FUNCTION_85
0x4007b58	          0x4989cc	                            mov r12, rcx	      4930	quickfix.c	FUNCTION_85
0x4007b5b	              0x55	                                push rbp	      4930	quickfix.c	FUNCTION_85
0x4007b5c	              0x53	                                push rbx	      4930	quickfix.c	FUNCTION_85
0x4007b5d	        0x4883ec28	                           sub rsp, 0x28	      4930	quickfix.c	FUNCTION_85
0x4007b61	    0x64488b042528	                mov rax, qword fs:[0x28]	      4930	quickfix.c	FUNCTION_85
0x4007b6a	      0x4889442418	             mov qword [rsp + 0x18], rax	      4930	quickfix.c	FUNCTION_85
0x4007b6f	            0x31c0	                            xor eax, eax	      4930	quickfix.c	FUNCTION_85
0x4007b71	          0x4885ff	                           test rdi, rdi	      4938	quickfix.c	FUNCTION_85	IF_1
0x4007b74	     0xf84e6010000	                            je 0x4007d60	      4938	quickfix.c	FUNCTION_85	IF_1
0x4007b7a	          0x83faff	             cmp edx, 0xffffffffffffffff	      4949	quickfix.c	FUNCTION_85	IF_4
0x4007b7d	     0xf846d020000	                            je 0x4007df0	      4949	quickfix.c	FUNCTION_85	IF_4
0x4007b83	          0x3b5704	                cmp edx, dword [rdi + 4]	      4952	quickfix.c	FUNCTION_85	IF_5
0x4007b86	     0xf8d24020000	                           jge 0x4007db0	      4952	quickfix.c	FUNCTION_85	IF_5
0x4007b8c	          0x4863d2	                         movsxd rdx, edx	      4953	quickfix.c	FUNCTION_85	IF_5
0x4007b8f	    0x488d04d50000	                        lea rax, [rdx*8]	      4953	quickfix.c	FUNCTION_85	IF_5
0x4007b97	        0x48c1e207	                              shl rdx, 7	      4953	quickfix.c	FUNCTION_85	IF_5
0x4007b9b	          0x4829c2	                            sub rdx, rax	      4953	quickfix.c	FUNCTION_85	IF_5
0x4007b9e	          0x4801d7	                            add rdi, rdx	      4953	quickfix.c	FUNCTION_85	IF_5
0x4007ba1	          0x8b4730	            mov eax, dword [rdi + 0x30] 	      4953	quickfix.c	FUNCTION_85	IF_5
0x4007ba4	            0x85c0	                           test eax, eax	      4953	quickfix.c	FUNCTION_85	IF_5
0x4007ba6	     0xf8404020000	                            je 0x4007db0	      4953	quickfix.c	FUNCTION_85	IF_5
0x4007bac	    0x8b1500000000	            mov edx, dword [0x04007bb2] 	      4957	quickfix.c	FUNCTION_85	FOR_1
0x4007bb2	        0x488b6f18	            mov rbp, qword [rdi + 0x18] 	      4956	quickfix.c	FUNCTION_85
0x4007bb6	            0x85d2	                           test edx, edx	      4957	quickfix.c	FUNCTION_85	FOR_1
0x4007bb8	     0xf8598010000	                           jne 0x4007d56	      4957	quickfix.c	FUNCTION_85	FOR_1
0x4007bbe	            0x85c0	                           test eax, eax	      4957	quickfix.c	FUNCTION_85	FOR_1
0x4007bc0	     0xf8e90010000	                           jle 0x4007d56	      4957	quickfix.c	FUNCTION_85	FOR_1
0x4007bc6	    0x41be01000000	                             mov r14d, 1	      4957	quickfix.c	FUNCTION_85	FOR_1
0x4007bcc	          0x4989fd	                            mov r13, rdi	      4957	quickfix.c	FUNCTION_85	FOR_1
0x4007bcf	        0x448b7d18	           mov r15d, dword [rbp + 0x18] 	      4960	quickfix.c	FUNCTION_85	FOR_1
0x4007bd3	          0x4585ff	                         test r15d, r15d	      4961	quickfix.c	FUNCTION_85	FOR_1	IF_6	CALL_1
0x4007bd6	     0xf85fc010000	                           jne 0x4007dd8	      4961	quickfix.c	FUNCTION_85	FOR_1	IF_6	CALL_1
0x4007bdc	          0x4531ff	                          xor r15d, r15d	      4962	quickfix.c	FUNCTION_85	FOR_1	IF_6
0x4007bdf	      0xe800000000	                          call 0x4007be4	      4964	quickfix.c	FUNCTION_85	FOR_1	IF_7	CALL_2
0x4007be4	          0x4885c0	                           test rax, rax	      4964	quickfix.c	FUNCTION_85	FOR_1	IF_7	CALL_2
0x4007be7	          0x4889c3	                            mov rbx, rax	      4964	quickfix.c	FUNCTION_85	FOR_1	IF_7	CALL_2
0x4007bea	     0xf84c0010000	                            je 0x4007db0	      4964	quickfix.c	FUNCTION_85	FOR_1	IF_7	CALL_2
0x4007bf0	          0x4889c6	                            mov rsi, rax	      4966	quickfix.c	FUNCTION_85	FOR_1	IF_8	CALL_3
0x4007bf3	          0x4c89e7	                            mov rdi, r12	      4966	quickfix.c	FUNCTION_85	FOR_1	IF_8	CALL_3
0x4007bf6	      0xe800000000	                          call 0x4007bfb	      4966	quickfix.c	FUNCTION_85	FOR_1	IF_8	CALL_3
0x4007bfb	            0x85c0	                           test eax, eax	      4966	quickfix.c	FUNCTION_85	FOR_1	IF_8	CALL_3
0x4007bfd	     0xf84ad010000	                            je 0x4007db0	      4966	quickfix.c	FUNCTION_85	FOR_1	IF_8	CALL_3
0x4007c03	         0xfb64542	           movzx eax, byte [rbp + 0x42] 	      4969	quickfix.c	FUNCTION_85	FOR_1
0x4007c07	            0x31c9	                            xor ecx, ecx	      4971	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_4
0x4007c09	          0x4963d7	                        movsxd rdx, r15d	      4971	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_4
0x4007c0c	      0xbe00000000	                              mov esi, 0	      4971	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_4
0x4007c11	          0x4889df	                            mov rdi, rbx	      4971	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_4
0x4007c14	      0xc644241100	                mov byte [rsp + 0x11], 0	      4970	quickfix.c	FUNCTION_85	FOR_1
0x4007c19	        0x88442410	               mov byte [rsp + 0x10], al	      4969	quickfix.c	FUNCTION_85	FOR_1
0x4007c1d	      0xe800000000	                          call 0x4007c22	      4971	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_4
0x4007c22	            0x85c0	                           test eax, eax	      4971	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_4
0x4007c24	     0xf8486010000	                            je 0x4007db0	      4971	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_4
0x4007c2a	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      4972	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_5
0x4007c2e	            0x31c9	                            xor ecx, ecx	      4972	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_5
0x4007c30	      0xbe00000000	                              mov esi, 0	      4972	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_5
0x4007c35	          0x4889df	                            mov rdi, rbx	      4972	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_5
0x4007c38	      0xe800000000	                          call 0x4007c3d	      4972	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_5
0x4007c3d	            0x85c0	                           test eax, eax	      4972	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_5
0x4007c3f	     0xf846b010000	                            je 0x4007db0	      4972	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_5
0x4007c45	        0x4863551c	         movsxd rdx, dword [rbp + 0x1c] 	      4973	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_6
0x4007c49	            0x31c9	                            xor ecx, ecx	      4973	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_6
0x4007c4b	      0xbe00000000	                              mov esi, 0	      4973	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_6
0x4007c50	          0x4889df	                            mov rdi, rbx	      4973	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_6
0x4007c53	      0xe800000000	                          call 0x4007c58	      4973	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_6
0x4007c58	            0x85c0	                           test eax, eax	      4973	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_6
0x4007c5a	     0xf8450010000	                            je 0x4007db0	      4973	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_6
0x4007c60	         0xfb65540	           movzx edx, byte [rbp + 0x40] 	      4974	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_7
0x4007c64	            0x31c9	                            xor ecx, ecx	      4974	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_7
0x4007c66	      0xbe00000000	                              mov esi, 0	      4974	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_7
0x4007c6b	          0x4889df	                            mov rdi, rbx	      4974	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_7
0x4007c6e	      0xe800000000	                          call 0x4007c73	      4974	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_7
0x4007c73	            0x85c0	                           test eax, eax	      4974	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_7
0x4007c75	     0xf8435010000	                            je 0x4007db0	      4974	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_7
0x4007c7b	        0x48635520	         movsxd rdx, dword [rbp + 0x20] 	      4975	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_8
0x4007c7f	            0x31c9	                            xor ecx, ecx	      4975	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_8
0x4007c81	      0xbe00000000	                              mov esi, 0	      4975	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_8
0x4007c86	          0x4889df	                            mov rdi, rbx	      4975	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_8
0x4007c89	      0xe800000000	                          call 0x4007c8e	      4975	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_8
0x4007c8e	            0x85c0	                           test eax, eax	      4975	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_8
0x4007c90	     0xf841a010000	                            je 0x4007db0	      4975	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_8
0x4007c96	        0x488b4d28	            mov rcx, qword [rbp + 0x28] 	      4977	quickfix.c	FUNCTION_85	FOR_1	IF_9
0x4007c9a	    0x41bf00000000	                             mov r15d, 0	      4976	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_9
0x4007ca0	      0xbe00000000	                              mov esi, 0	      4976	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_9
0x4007ca5	          0x4889df	                            mov rdi, rbx	      4976	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_9
0x4007ca8	          0x4885c9	                           test rcx, rcx	      4976	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_9
0x4007cab	        0x490f44cf	                          cmove rcx, r15	      4976	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_9
0x4007caf	            0x31d2	                            xor edx, edx	      4976	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_9
0x4007cb1	      0xe800000000	                          call 0x4007cb6	      4976	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_9
0x4007cb6	            0x85c0	                           test eax, eax	      4976	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_9
0x4007cb8	     0xf84f2000000	                            je 0x4007db0	      4976	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_9
0x4007cbe	        0x488b4d30	            mov rcx, qword [rbp + 0x30] 	      4979	quickfix.c	FUNCTION_85	FOR_1	IF_9
0x4007cc2	      0xbe00000000	                              mov esi, 0	      4978	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_10
0x4007cc7	          0x4889df	                            mov rdi, rbx	      4978	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_10
0x4007cca	          0x4885c9	                           test rcx, rcx	      4978	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_10
0x4007ccd	        0x490f44cf	                          cmove rcx, r15	      4978	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_10
0x4007cd1	            0x31d2	                            xor edx, edx	      4978	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_10
0x4007cd3	      0xe800000000	                          call 0x4007cd8	      4978	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_10
0x4007cd8	            0x85c0	                           test eax, eax	      4978	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_10
0x4007cda	     0xf84d0000000	                            je 0x4007db0	      4978	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_10
0x4007ce0	        0x488b4d38	            mov rcx, qword [rbp + 0x38] 	      4981	quickfix.c	FUNCTION_85	FOR_1	IF_9
0x4007ce4	      0xbe00000000	                              mov esi, 0	      4980	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_11
0x4007ce9	          0x4889df	                            mov rdi, rbx	      4980	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_11
0x4007cec	          0x4885c9	                           test rcx, rcx	      4980	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_11
0x4007cef	        0x490f44cf	                          cmove rcx, r15	      4980	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_11
0x4007cf3	            0x31d2	                            xor edx, edx	      4980	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_11
0x4007cf5	      0xe800000000	                          call 0x4007cfa	      4980	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_11
0x4007cfa	            0x85c0	                           test eax, eax	      4980	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_11
0x4007cfc	     0xf84ae000000	                            je 0x4007db0	      4980	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_11
0x4007d02	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      4982	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_12
0x4007d07	            0x31d2	                            xor edx, edx	      4982	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_12
0x4007d09	      0xbe00000000	                              mov esi, 0	      4982	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_12
0x4007d0e	          0x4889df	                            mov rdi, rbx	      4982	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_12
0x4007d11	      0xe800000000	                          call 0x4007d16	      4982	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_12
0x4007d16	            0x85c0	                           test eax, eax	      4982	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_12
0x4007d18	     0xf8492000000	                            je 0x4007db0	      4982	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_12
0x4007d1e	         0xfb65543	           movzx edx, byte [rbp + 0x43] 	      4983	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_13
0x4007d22	            0x31c9	                            xor ecx, ecx	      4983	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_13
0x4007d24	      0xbe00000000	                              mov esi, 0	      4983	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_13
0x4007d29	          0x4889df	                            mov rdi, rbx	      4983	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_13
0x4007d2c	      0xe800000000	                          call 0x4007d31	      4983	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_13
0x4007d31	            0x85c0	                           test eax, eax	      4983	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_13
0x4007d33	            0x747b	                            je 0x4007db0	      4983	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_13
0x4007d35	        0x488b6d00	                    mov rbp, qword [rbp]	      4986	quickfix.c	FUNCTION_85	FOR_1
0x4007d39	          0x4885ed	                           test rbp, rbp	      4987	quickfix.c	FUNCTION_85	FOR_1	IF_10
0x4007d3c	            0x7418	                            je 0x4007d56	      4987	quickfix.c	FUNCTION_85	FOR_1	IF_10
0x4007d3e	    0x8b0500000000	            mov eax, dword [0x04007d44] 	      4957	quickfix.c	FUNCTION_85	FOR_1
0x4007d44	        0x4183c601	                             add r14d, 1	      4957	quickfix.c	FUNCTION_85	FOR_1
0x4007d48	            0x85c0	                           test eax, eax	      4957	quickfix.c	FUNCTION_85	FOR_1
0x4007d4a	            0x750a	                           jne 0x4007d56	      4957	quickfix.c	FUNCTION_85	FOR_1
0x4007d4c	        0x45397530	           cmp dword [r13 + 0x30], r14d 	      4957	quickfix.c	FUNCTION_85	FOR_1
0x4007d50	     0xf8d79feffff	                           jge 0x4007bcf	      4957	quickfix.c	FUNCTION_85	FOR_1
0x4007d56	      0xb801000000	                              mov eax, 1	      4990	quickfix.c	FUNCTION_85
0x4007d5b	            0xeb55	                           jmp 0x4007db2	      4990	quickfix.c	FUNCTION_85
0x4007d5d	           0xf1f00	                         nop dword [rax]	      4990	quickfix.c	FUNCTION_85
0x4007d60	          0x4885f6	                           test rsi, rsi	      4941	quickfix.c	FUNCTION_85	IF_1	IF_2
0x4007d63	     0xf8497000000	                            je 0x4007e00	      4941	quickfix.c	FUNCTION_85	IF_1	IF_2
0x4007d69	        0x488b7e08	                mov rdi, qword [rsi + 8]	      4943	quickfix.c	FUNCTION_85	IF_1	IF_2
0x4007d6d	        0x8954240c	              mov dword [rsp + 0xc], edx	      4943	quickfix.c	FUNCTION_85	IF_1	IF_2
0x4007d71	        0x48893424	                    mov qword [rsp], rsi	      4943	quickfix.c	FUNCTION_85	IF_1	IF_2
0x4007d75	      0xe800000000	                          call 0x4007d7a	      4943	quickfix.c	FUNCTION_85	IF_1	IF_2
0x4007d7a	            0x85c0	                           test eax, eax	      4943	quickfix.c	FUNCTION_85	IF_1	IF_2
0x4007d7c	        0x488b3424	                    mov rsi, qword [rsp]	      4943	quickfix.c	FUNCTION_85	IF_1	IF_2
0x4007d80	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      4943	quickfix.c	FUNCTION_85	IF_1	IF_2
0x4007d84	            0x741a	                            je 0x4007da0	      4943	quickfix.c	FUNCTION_85	IF_1	IF_2
0x4007d86	    0x488bbe501900	          mov rdi, qword [rsi + 0x1950] 	      4943	quickfix.c	FUNCTION_85	IF_1	IF_2
0x4007d8d	          0x4885ff	                           test rdi, rdi	      4943	quickfix.c	FUNCTION_85	IF_1	IF_2
0x4007d90	     0xf85e4fdffff	                           jne 0x4007b7a	      4943	quickfix.c	FUNCTION_85	IF_1	IF_2
0x4007d96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4943	quickfix.c	FUNCTION_85	IF_1	IF_2
0x4007da0	    0x488bbe481900	          mov rdi, qword [rsi + 0x1948] 	      4943	quickfix.c	FUNCTION_85	IF_1	IF_2
0x4007da7	          0x4885ff	                           test rdi, rdi	      4944	quickfix.c	FUNCTION_85	IF_1	IF_2	IF_3
0x4007daa	     0xf85cafdffff	                           jne 0x4007b7a	      4944	quickfix.c	FUNCTION_85	IF_1	IF_2	IF_3
0x4007db0	            0x31c0	                            xor eax, eax	      4945	quickfix.c	FUNCTION_85	IF_1	IF_2	IF_3
0x4007db2	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      4991	quickfix.c	FUNCTION_85
0x4007db7	    0x644833342528	                xor rsi, qword fs:[0x28]	      4991	quickfix.c	FUNCTION_85
0x4007dc0	            0x7548	                           jne 0x4007e0a	      4991	quickfix.c	FUNCTION_85
0x4007dc2	        0x4883c428	                           add rsp, 0x28	      4991	quickfix.c	FUNCTION_85
0x4007dc6	              0x5b	                                 pop rbx	      4991	quickfix.c	FUNCTION_85
0x4007dc7	              0x5d	                                 pop rbp	      4991	quickfix.c	FUNCTION_85
0x4007dc8	            0x415c	                                 pop r12	      4991	quickfix.c	FUNCTION_85
0x4007dca	            0x415d	                                 pop r13	      4991	quickfix.c	FUNCTION_85
0x4007dcc	            0x415e	                                 pop r14	      4991	quickfix.c	FUNCTION_85
0x4007dce	            0x415f	                                 pop r15	      4991	quickfix.c	FUNCTION_85
0x4007dd0	              0xc3	                                     ret	      4991	quickfix.c	FUNCTION_85
0x4007dd1	     0xf1f80000000	                         nop dword [rax]	      4991	quickfix.c	FUNCTION_85
0x4007dd8	          0x4489ff	                           mov edi, r15d	      4961	quickfix.c	FUNCTION_85	FOR_1	IF_6	CALL_1
0x4007ddb	      0xe800000000	                          call 0x4007de0	      4961	quickfix.c	FUNCTION_85	FOR_1	IF_6	CALL_1
0x4007de0	          0x4885c0	                           test rax, rax	      4961	quickfix.c	FUNCTION_85	FOR_1	IF_6	CALL_1
0x4007de3	     0xf85f6fdffff	                           jne 0x4007bdf	      4961	quickfix.c	FUNCTION_85	FOR_1	IF_6	CALL_1
0x4007de9	      0xe9eefdffff	                           jmp 0x4007bdc	      4961	quickfix.c	FUNCTION_85	FOR_1	IF_6	CALL_1
0x4007dee	            0x6690	                                     nop	      4961	quickfix.c	FUNCTION_85	FOR_1	IF_6	CALL_1
0x4007df0	          0x8b5708	                mov edx, dword [rdi + 8]	      4950	quickfix.c	FUNCTION_85	IF_4
0x4007df3	      0xe98bfdffff	                           jmp 0x4007b83	      4950	quickfix.c	FUNCTION_85	IF_4
0x4007df8	     0xf1f84000000	                   nop dword [rax + rax]	      4950	quickfix.c	FUNCTION_85	IF_4
0x4007e00	      0xbf00000000	                              mov edi, 0	      4940	quickfix.c	FUNCTION_85	IF_1
0x4007e05	      0xe970fdffff	                           jmp 0x4007b7a	      4940	quickfix.c	FUNCTION_85	IF_1
0x4007e0a	      0xe800000000	                          call 0x4007e0f	      4991	quickfix.c	FUNCTION_85
qf_current_entry	CALL,0:ELSE,0:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,1:functions,0	18
0x4005cf0	              0x53	                                push rbx	      3381	quickfix.c	FUNCTION_52
0x4005cf1	          0x4889fb	                            mov rbx, rdi	      3381	quickfix.c	FUNCTION_52
0x4005cf4	        0x488b7f08	                mov rdi, qword [rdi + 8]	      3384	quickfix.c	FUNCTION_52	IF_1
0x4005cf8	      0xe800000000	                          call 0x4005cfd	      3384	quickfix.c	FUNCTION_52	IF_1
0x4005cfd	            0x85c0	                           test eax, eax	      3384	quickfix.c	FUNCTION_52	IF_1
0x4005cff	      0xba00000000	                              mov edx, 0	      3384	quickfix.c	FUNCTION_52	IF_1
0x4005d04	            0x7413	                            je 0x4005d19	      3384	quickfix.c	FUNCTION_52	IF_1
0x4005d06	    0x488b93501900	          mov rdx, qword [rbx + 0x1950] 	      3384	quickfix.c	FUNCTION_52	IF_1
0x4005d0d	      0xb800000000	                              mov eax, 0	      3382	quickfix.c	FUNCTION_52
0x4005d12	          0x4885d2	                           test rdx, rdx	      3382	quickfix.c	FUNCTION_52
0x4005d15	        0x480f44d0	                          cmove rdx, rax	      3382	quickfix.c	FUNCTION_52
0x4005d19	        0x48634208	            movsxd rax, dword [rdx + 8] 	      3388	quickfix.c	FUNCTION_52
0x4005d1d	              0x5b	                                 pop rbx	      3389	quickfix.c	FUNCTION_52
0x4005d1e	    0x488d0cc50000	                        lea rcx, [rax*8]	      3388	quickfix.c	FUNCTION_52
0x4005d26	        0x48c1e007	                              shl rax, 7	      3388	quickfix.c	FUNCTION_52
0x4005d2a	          0x4829c8	                            sub rax, rcx	      3388	quickfix.c	FUNCTION_52
0x4005d2d	      0x4863440234	   movsxd rax, dword [rdx + rax + 0x34] 	      3388	quickfix.c	FUNCTION_52
0x4005d32	              0xc3	                                     ret	      3389	quickfix.c	FUNCTION_52
qf_find_win	CALL,2:ELSE,0:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,1:functions,0	33
0x4001200	              0x55	                                push rbp	      3454	quickfix.c	FUNCTION_55
0x4001201	              0x53	                                push rbx	      3454	quickfix.c	FUNCTION_55
0x4001202	          0x4889fd	                            mov rbp, rdi	      3454	quickfix.c	FUNCTION_55
0x4001205	        0x4883ec08	                              sub rsp, 8	      3454	quickfix.c	FUNCTION_55
0x4001209	    0x488b1d000000	            mov rbx, qword [0x04001210] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4001210	          0x4885db	                           test rbx, rbx	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4001213	            0x751d	                           jne 0x4001232	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4001215	            0xeb49	                           jmp 0x4001260	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4001217	    0x660f1f840000	                    nop word [rax + rax]	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4001220	    0x483bab501900	          cmp rbp, qword [rbx + 0x1950] 	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4001227	            0x7429	                            je 0x4001252	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4001229	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400122d	          0x4885db	                           test rbx, rbx	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4001230	            0x742e	                            je 0x4001260	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4001232	        0x488b7b08	                mov rdi, qword [rbx + 8]	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4001236	      0xe800000000	                          call 0x400123b	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400123b	            0x85c0	                           test eax, eax	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400123d	            0x74ea	                            je 0x4001229	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400123f	    0x4881fd000000	                              cmp rbp, 0	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4001246	            0x75d8	                           jne 0x4001220	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4001248	    0x4883bb501900	             cmp qword [rbx + 0x1950], 0	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4001250	            0x75d7	                           jne 0x4001229	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4001252	        0x4883c408	                              add rsp, 8	      3461	quickfix.c	FUNCTION_55
0x4001256	          0x4889d8	                            mov rax, rbx	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4001259	              0x5b	                                 pop rbx	      3461	quickfix.c	FUNCTION_55
0x400125a	              0x5d	                                 pop rbp	      3461	quickfix.c	FUNCTION_55
0x400125b	              0xc3	                                     ret	      3461	quickfix.c	FUNCTION_55
0x400125c	         0xf1f4000	                         nop dword [rax]	      3461	quickfix.c	FUNCTION_55
0x4001260	        0x4883c408	                              add rsp, 8	      3461	quickfix.c	FUNCTION_55
0x4001264	            0x31c0	                            xor eax, eax	      3460	quickfix.c	FUNCTION_55
0x4001266	              0x5b	                                 pop rbx	      3461	quickfix.c	FUNCTION_55
0x4001267	              0x5d	                                 pop rbp	      3461	quickfix.c	FUNCTION_55
0x4001268	              0xc3	                                     ret	      3461	quickfix.c	FUNCTION_55
qf_msg	CALL,7:ELSE,0:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,2:functions,0	128
0x4000ea0	            0x4157	                                push r15	      2881	quickfix.c	ELSE_1	FUNCTION_40
0x4000ea2	            0x4156	                                push r14	      2881	quickfix.c	ELSE_1	FUNCTION_40
0x4000ea4	            0x4155	                                push r13	      2881	quickfix.c	ELSE_1	FUNCTION_40
0x4000ea6	            0x4154	                                push r12	      2881	quickfix.c	ELSE_1	FUNCTION_40
0x4000ea8	          0x4989d4	                            mov r12, rdx	      2881	quickfix.c	ELSE_1	FUNCTION_40
0x4000eab	              0x55	                                push rbp	      2881	quickfix.c	ELSE_1	FUNCTION_40
0x4000eac	              0x53	                                push rbx	      2881	quickfix.c	ELSE_1	FUNCTION_40
0x4000ead	          0x4189f5	                           mov r13d, esi	      2881	quickfix.c	ELSE_1	FUNCTION_40
0x4000eb0	    0x4881ec180400	                          sub rsp, 0x418	      2881	quickfix.c	ELSE_1	FUNCTION_40
0x4000eb7	        0x448b7704	               mov r14d, dword [rdi + 4]	      2886	quickfix.c	ELSE_1	FUNCTION_40	CALL_2
0x4000ebb	    0x64488b042528	                mov rax, qword fs:[0x28]	      2881	quickfix.c	ELSE_1	FUNCTION_40
0x4000ec4	    0x488984240804	            mov qword [rsp + 0x408], rax	      2881	quickfix.c	ELSE_1	FUNCTION_40
0x4000ecc	            0x31c0	                            xor eax, eax	      2881	quickfix.c	ELSE_1	FUNCTION_40
0x4000ece	          0x4863c6	                         movsxd rax, esi	      2882	quickfix.c	ELSE_1	FUNCTION_40
0x4000ed1	      0xbe00000000	                              mov esi, 0	      2886	quickfix.c	ELSE_1	FUNCTION_40	CALL_2
0x4000ed6	          0x4889e5	                            mov rbp, rsp	      2886	quickfix.c	ELSE_1	FUNCTION_40	CALL_2
0x4000ed9	    0x488d14c50000	                        lea rdx, [rax*8]	      2882	quickfix.c	ELSE_1	FUNCTION_40
0x4000ee1	        0x48c1e007	                              shl rax, 7	      2882	quickfix.c	ELSE_1	FUNCTION_40
0x4000ee5	          0x4829d0	                            sub rax, rdx	      2882	quickfix.c	ELSE_1	FUNCTION_40
0x4000ee8	      0xba05000000	                              mov edx, 5	      2886	quickfix.c	ELSE_1	FUNCTION_40	CALL_2
0x4000eed	          0x4801f8	                            add rax, rdi	      2882	quickfix.c	ELSE_1	FUNCTION_40
0x4000ef0	            0x31ff	                            xor edi, edi	      2886	quickfix.c	ELSE_1	FUNCTION_40	CALL_2
0x4000ef2	        0x448b7830	           mov r15d, dword [rax + 0x30] 	      2883	quickfix.c	ELSE_1	FUNCTION_40
0x4000ef6	        0x488b5840	            mov rbx, qword [rax + 0x40] 	      2882	quickfix.c	ELSE_1	FUNCTION_40
0x4000efa	      0xe800000000	                          call 0x4000eff	      2886	quickfix.c	ELSE_1	FUNCTION_40	CALL_2
0x4000eff	        0x4883ec08	                              sub rsp, 8	      2886	quickfix.c	ELSE_1	FUNCTION_40	CALL_2
0x4000f03	        0x458d4501	                      lea r8d, [r13 + 1]	      2886	quickfix.c	ELSE_1	FUNCTION_40	CALL_2
0x4000f07	          0x4889c2	                            mov rdx, rax	      2886	quickfix.c	ELSE_1	FUNCTION_40	CALL_2
0x4000f0a	            0x4157	                                push r15	      2886	quickfix.c	ELSE_1	FUNCTION_40	CALL_2
0x4000f0c	      0xbe01040000	                          mov esi, 0x401	      2886	quickfix.c	ELSE_1	FUNCTION_40	CALL_2
0x4000f11	          0x4889ef	                            mov rdi, rbp	      2886	quickfix.c	ELSE_1	FUNCTION_40	CALL_2
0x4000f14	            0x31c0	                            xor eax, eax	      2886	quickfix.c	ELSE_1	FUNCTION_40	CALL_2
0x4000f16	          0x4589f1	                           mov r9d, r14d	      2886	quickfix.c	ELSE_1	FUNCTION_40	CALL_2
0x4000f19	          0x4c89e1	                            mov rcx, r12	      2886	quickfix.c	ELSE_1	FUNCTION_40	CALL_2
0x4000f1c	      0xe800000000	                          call 0x4000f21	      2886	quickfix.c	ELSE_1	FUNCTION_40	CALL_2
0x4000f21	          0x4885db	                           test rbx, rbx	      2892	quickfix.c	ELSE_1	FUNCTION_40	IF_1
0x4000f24	              0x5e	                                 pop rsi	      2892	quickfix.c	ELSE_1	FUNCTION_40	IF_1
0x4000f25	              0x5f	                                 pop rdi	      2892	quickfix.c	ELSE_1	FUNCTION_40	IF_1
0x4000f26	            0x7453	                            je 0x4000f7b	      2892	quickfix.c	ELSE_1	FUNCTION_40	IF_1
0x4000f28	          0x4889e8	                            mov rax, rbp	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x4000f2b	            0x8b08	                    mov ecx, dword [rax]	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x4000f2d	        0x4883c004	                              add rax, 4	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x4000f31	    0x8d91fffefefe	              lea edx, [rcx - 0x1010101]	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x4000f37	            0xf7d1	                                 not ecx	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x4000f39	            0x21ca	                            and edx, ecx	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x4000f3b	    0x81e280808080	                     and edx, 0x80808080	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x4000f41	            0x74e8	                            je 0x4000f2b	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x4000f43	            0x89d1	                            mov ecx, edx	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x4000f45	          0xc1e910	                           shr ecx, 0x10	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x4000f48	    0xf7c280800000	                        test edx, 0x8080	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x4000f4e	           0xf44d1	                          cmove edx, ecx	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x4000f51	        0x488d4802	                      lea rcx, [rax + 2]	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x4000f55	            0x89d6	                            mov esi, edx	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x4000f57	        0x480f44c1	                          cmove rax, rcx	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x4000f5b	          0x4000d6	                             add sil, dl	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x4000f5e	        0x4883d803	                              sbb rax, 3	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x4000f62	          0x4829e8	                            sub rax, rbp	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x4000f65	        0x4883f821	                           cmp rax, 0x21	      2896	quickfix.c	ELSE_1	FUNCTION_40	IF_1	IF_2
0x4000f69	            0x765d	                           jbe 0x4000fc8	      2896	quickfix.c	ELSE_1	FUNCTION_40	IF_1	IF_2
0x4000f6b	      0xba01040000	                          mov edx, 0x401	      2901	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_5
0x4000f70	          0x4889de	                            mov rsi, rbx	      2901	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_5
0x4000f73	          0x4889ef	                            mov rdi, rbp	      2901	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_5
0x4000f76	      0xe800000000	                          call 0x4000f7b	      2901	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_5
0x4000f7b	    0x8b0500000000	            mov eax, dword [0x04000f81] 	      2903	quickfix.c	ELSE_1	FUNCTION_40	CALL_6
0x4000f81	      0xb901040000	                          mov ecx, 0x401	      2903	quickfix.c	ELSE_1	FUNCTION_40	CALL_6
0x4000f86	          0x4889ee	                            mov rsi, rbp	      2903	quickfix.c	ELSE_1	FUNCTION_40	CALL_6
0x4000f89	          0x4889ef	                            mov rdi, rbp	      2903	quickfix.c	ELSE_1	FUNCTION_40	CALL_6
0x4000f8c	          0x8d50ff	                      lea edx, [rax - 1]	      2903	quickfix.c	ELSE_1	FUNCTION_40	CALL_6
0x4000f8f	      0xe800000000	                          call 0x4000f94	      2903	quickfix.c	ELSE_1	FUNCTION_40	CALL_6
0x4000f94	          0x4889ef	                            mov rdi, rbp	      2904	quickfix.c	ELSE_1	FUNCTION_40	CALL_7
0x4000f97	      0xe800000000	                          call 0x4000f9c	      2904	quickfix.c	ELSE_1	FUNCTION_40	CALL_7
0x4000f9c	    0x488b84240804	           mov rax, qword [rsp + 0x408] 	      2905	quickfix.c	ELSE_1	FUNCTION_40
0x4000fa4	    0x644833042528	                xor rax, qword fs:[0x28]	      2905	quickfix.c	ELSE_1	FUNCTION_40
0x4000fad	     0xf85ad000000	                           jne 0x4001060	      2905	quickfix.c	ELSE_1	FUNCTION_40
0x4000fb3	    0x4881c4180400	                          add rsp, 0x418	      2905	quickfix.c	ELSE_1	FUNCTION_40
0x4000fba	              0x5b	                                 pop rbx	      2905	quickfix.c	ELSE_1	FUNCTION_40
0x4000fbb	              0x5d	                                 pop rbp	      2905	quickfix.c	ELSE_1	FUNCTION_40
0x4000fbc	            0x415c	                                 pop r12	      2905	quickfix.c	ELSE_1	FUNCTION_40
0x4000fbe	            0x415d	                                 pop r13	      2905	quickfix.c	ELSE_1	FUNCTION_40
0x4000fc0	            0x415e	                                 pop r14	      2905	quickfix.c	ELSE_1	FUNCTION_40
0x4000fc2	            0x415f	                                 pop r15	      2905	quickfix.c	ELSE_1	FUNCTION_40
0x4000fc4	              0xc3	                                     ret	      2905	quickfix.c	ELSE_1	FUNCTION_40
0x4000fc5	           0xf1f00	                         nop dword [rax]	      2905	quickfix.c	ELSE_1	FUNCTION_40
0x4000fc8	      0xba22000000	                           mov edx, 0x22	        90	string3.h	FUNCTION_118	CALL_6
0x4000fcd	          0x4829c2	                            sub rdx, rax	        90	string3.h	FUNCTION_118	CALL_6
0x4000fd0	          0x4801e8	                            add rax, rbp	        90	string3.h	FUNCTION_118	CALL_6
0x4000fd3	          0x83fa08	                              cmp edx, 8	        90	string3.h	FUNCTION_118	CALL_6
0x4000fd6	            0x7320	                           jae 0x4000ff8	        90	string3.h	FUNCTION_118	CALL_6
0x4000fd8	          0xf6c204	                              test dl, 4	        90	string3.h	FUNCTION_118	CALL_6
0x4000fdb	            0x7563	                           jne 0x4001040	        90	string3.h	FUNCTION_118	CALL_6
0x4000fdd	            0x85d2	                           test edx, edx	        90	string3.h	FUNCTION_118	CALL_6
0x4000fdf	            0x7408	                            je 0x4000fe9	        90	string3.h	FUNCTION_118	CALL_6
0x4000fe1	          0xf6c202	                              test dl, 2	        90	string3.h	FUNCTION_118	CALL_6
0x4000fe4	          0xc60020	                    mov byte [rax], 0x20	        90	string3.h	FUNCTION_118	CALL_6
0x4000fe7	            0x7569	                           jne 0x4001052	        90	string3.h	FUNCTION_118	CALL_6
0x4000fe9	      0xc644242200	                mov byte [rsp + 0x22], 0	      2899	quickfix.c	ELSE_1	FUNCTION_40	IF_1	IF_2
0x4000fee	      0xe978ffffff	                           jmp 0x4000f6b	      2899	quickfix.c	ELSE_1	FUNCTION_40	IF_1	IF_2
0x4000ff3	       0xf1f440000	                   nop dword [rax + rax]	      2899	quickfix.c	ELSE_1	FUNCTION_40	IF_1	IF_2
0x4000ff8	    0x48be20202020	          movabs rsi, 0x2020202020202020	        90	string3.h	FUNCTION_118	CALL_6
0x4001002	            0x89d1	                            mov ecx, edx	        90	string3.h	FUNCTION_118	CALL_6
0x4001004	          0x488930	                    mov qword [rax], rsi	        90	string3.h	FUNCTION_118	CALL_6
0x4001007	      0x48897408f8	          mov qword [rax + rcx - 8], rsi	        90	string3.h	FUNCTION_118	CALL_6
0x400100c	        0x488d4808	                      lea rcx, [rax + 8]	        90	string3.h	FUNCTION_118	CALL_6
0x4001010	        0x4883e1f8	             and rcx, 0xfffffffffffffff8	        90	string3.h	FUNCTION_118	CALL_6
0x4001014	          0x4829c8	                            sub rax, rcx	        90	string3.h	FUNCTION_118	CALL_6
0x4001017	             0x1d0	                            add eax, edx	        90	string3.h	FUNCTION_118	CALL_6
0x4001019	          0x83e0f8	                     and eax, 0xfffffff8	        90	string3.h	FUNCTION_118	CALL_6
0x400101c	          0x83f808	                              cmp eax, 8	        90	string3.h	FUNCTION_118	CALL_6
0x400101f	            0x72c8	                            jb 0x4000fe9	        90	string3.h	FUNCTION_118	CALL_6
0x4001021	          0x83e0f8	                     and eax, 0xfffffff8	        90	string3.h	FUNCTION_118	CALL_6
0x4001024	            0x31d2	                            xor edx, edx	        90	string3.h	FUNCTION_118	CALL_6
0x4001026	            0x89d6	                            mov esi, edx	        90	string3.h	FUNCTION_118	CALL_6
0x4001028	          0x83c208	                              add edx, 8	        90	string3.h	FUNCTION_118	CALL_6
0x400102b	    0x48bf20202020	          movabs rdi, 0x2020202020202020	        90	string3.h	FUNCTION_118	CALL_6
0x4001035	            0x39c2	                            cmp edx, eax	        90	string3.h	FUNCTION_118	CALL_6
0x4001037	        0x48893c31	              mov qword [rcx + rsi], rdi	        90	string3.h	FUNCTION_118	CALL_6
0x400103b	            0x72e9	                            jb 0x4001026	        90	string3.h	FUNCTION_118	CALL_6
0x400103d	            0xebaa	                           jmp 0x4000fe9	        90	string3.h	FUNCTION_118	CALL_6
0x400103f	              0x90	                                     nop	        90	string3.h	FUNCTION_118	CALL_6
0x4001040	            0x89d2	                            mov edx, edx	        90	string3.h	FUNCTION_118	CALL_6
0x4001042	    0xc70020202020	            mov dword [rax], 0x20202020 	        90	string3.h	FUNCTION_118	CALL_6
0x4001048	    0xc74410fc2020	  mov dword [rax + rdx - 4], 0x20202020 	        90	string3.h	FUNCTION_118	CALL_6
0x4001050	            0xeb97	                           jmp 0x4000fe9	        90	string3.h	FUNCTION_118	CALL_6
0x4001052	            0x89d2	                            mov edx, edx	        90	string3.h	FUNCTION_118	CALL_6
0x4001054	      0xb920200000	                         mov ecx, 0x2020	        90	string3.h	FUNCTION_118	CALL_6
0x4001059	      0x66894c10fe	            mov word [rax + rdx - 2], cx	        90	string3.h	FUNCTION_118	CALL_6
0x400105e	            0xeb89	                           jmp 0x4000fe9	        90	string3.h	FUNCTION_118	CALL_6
0x4001060	      0xe800000000	                          call 0x4001065	      2905	quickfix.c	ELSE_1	FUNCTION_40
qflist_valid	CALL,0:ELSE,0:DO,0:WHILE,0:FOR,1:SWITCH,0:IF,3:functions,0	51
0x40000d0	              0x55	                                push rbp	      1958	quickfix.c	FUNCTION_26
0x40000d1	              0x53	                                push rbx	      1958	quickfix.c	FUNCTION_26
0x40000d2	            0x89f3	                            mov ebx, esi	      1958	quickfix.c	FUNCTION_26
0x40000d4	        0x4883ec08	                              sub rsp, 8	      1958	quickfix.c	FUNCTION_26
0x40000d8	          0x4885ff	                           test rdi, rdi	      1962	quickfix.c	FUNCTION_26	IF_1
0x40000db	     0xf848f000000	                            je 0x4000170	      1962	quickfix.c	FUNCTION_26	IF_1
0x40000e1	          0x4889fd	                            mov rbp, rdi	      1962	quickfix.c	FUNCTION_26	IF_1
0x40000e4	        0x488b7f08	                mov rdi, qword [rdi + 8]	      1964	quickfix.c	FUNCTION_26	IF_1
0x40000e8	      0xe800000000	                          call 0x40000ed	      1964	quickfix.c	FUNCTION_26	IF_1
0x40000ed	            0x85c0	                           test eax, eax	      1964	quickfix.c	FUNCTION_26	IF_1
0x40000ef	            0x755f	                           jne 0x4000150	      1964	quickfix.c	FUNCTION_26	IF_1
0x40000f1	    0x488b8d481900	          mov rcx, qword [rbp + 0x1948] 	      1964	quickfix.c	FUNCTION_26	IF_1
0x40000f8	          0x4885c9	                           test rcx, rcx	      1965	quickfix.c	FUNCTION_26	IF_1	IF_2
0x40000fb	            0x7441	                            je 0x400013e	      1965	quickfix.c	FUNCTION_26	IF_1	IF_2
0x40000fd	          0x8b5104	                mov edx, dword [rcx + 4]	      1969	quickfix.c	FUNCTION_26	FOR_1
0x4000100	            0x85d2	                           test edx, edx	      1969	quickfix.c	FUNCTION_26	FOR_1
0x4000102	            0x7e3a	                           jle 0x400013e	      1969	quickfix.c	FUNCTION_26	FOR_1
0x4000104	          0x3b5910	            cmp ebx, dword [rcx + 0x10] 	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4000107	            0x7457	                            je 0x4000160	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4000109	          0x83ea01	                              sub edx, 1	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x400010c	    0x488d81880000	                   lea rax, [rcx + 0x88]	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4000113	    0x488d34d50000	                        lea rsi, [rdx*8]	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x400011b	        0x48c1e207	                              shl rdx, 7	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x400011f	          0x4829f2	                            sub rdx, rsi	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4000122	    0x488d94118800	            lea rdx, [rcx + rdx + 0x88] 	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x400012a	            0xeb0d	                           jmp 0x4000139	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x400012c	         0xf1f4000	                         nop dword [rax]	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4000130	        0x4883c078	                           add rax, 0x78	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4000134	          0x395888	            cmp dword [rax - 0x78], ebx 	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4000137	            0x7427	                            je 0x4000160	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4000139	          0x4839d0	                            cmp rax, rdx	      1969	quickfix.c	FUNCTION_26	FOR_1
0x400013c	            0x75f2	                           jne 0x4000130	      1969	quickfix.c	FUNCTION_26	FOR_1
0x400013e	        0x4883c408	                              add rsp, 8	      1974	quickfix.c	FUNCTION_26
0x4000142	            0x31c0	                            xor eax, eax	      1966	quickfix.c	FUNCTION_26	IF_1	IF_2
0x4000144	              0x5b	                                 pop rbx	      1974	quickfix.c	FUNCTION_26
0x4000145	              0x5d	                                 pop rbp	      1974	quickfix.c	FUNCTION_26
0x4000146	              0xc3	                                     ret	      1974	quickfix.c	FUNCTION_26
0x4000147	    0x660f1f840000	                    nop word [rax + rax]	      1974	quickfix.c	FUNCTION_26
0x4000150	    0x488b8d501900	          mov rcx, qword [rbp + 0x1950] 	      1964	quickfix.c	FUNCTION_26	IF_1
0x4000157	          0x4885c9	                           test rcx, rcx	      1964	quickfix.c	FUNCTION_26	IF_1
0x400015a	            0x75a1	                           jne 0x40000fd	      1964	quickfix.c	FUNCTION_26	IF_1
0x400015c	            0xeb93	                           jmp 0x40000f1	      1964	quickfix.c	FUNCTION_26	IF_1
0x400015e	            0x6690	                                     nop	      1964	quickfix.c	FUNCTION_26	IF_1
0x4000160	        0x4883c408	                              add rsp, 8	      1974	quickfix.c	FUNCTION_26
0x4000164	      0xb801000000	                              mov eax, 1	      1971	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4000169	              0x5b	                                 pop rbx	      1974	quickfix.c	FUNCTION_26
0x400016a	              0x5d	                                 pop rbp	      1974	quickfix.c	FUNCTION_26
0x400016b	              0xc3	                                     ret	      1974	quickfix.c	FUNCTION_26
0x400016c	         0xf1f4000	                         nop dword [rax]	      1974	quickfix.c	FUNCTION_26
0x4000170	      0xb900000000	                              mov ecx, 0	      1959	quickfix.c	FUNCTION_26
0x4000175	            0xeb86	                           jmp 0x40000fd	      1959	quickfix.c	FUNCTION_26
qf_get_size	CALL,0:ELSE,1:DO,0:WHILE,0:FOR,1:SWITCH,0:IF,5:functions,0	69
0x4005d80	              0x53	                                push rbx	      3892	quickfix.c	FUNCTION_65
0x4005d81	          0x8b5720	            mov edx, dword [rdi + 0x20] 	      3898	quickfix.c	FUNCTION_65	IF_1
0x4005d84	          0x4889fb	                            mov rbx, rdi	      3892	quickfix.c	FUNCTION_65
0x4005d87	    0x81fad8000000	                           cmp edx, 0xd8	      3898	quickfix.c	FUNCTION_65	IF_1
0x4005d8d	     0xf849d000000	                            je 0x4005e30	      3898	quickfix.c	FUNCTION_65	IF_1
0x4005d93	    0x81fade000000	                           cmp edx, 0xde	      3898	quickfix.c	FUNCTION_65	IF_1
0x4005d99	      0xb800000000	                              mov eax, 0	      3893	quickfix.c	FUNCTION_65
0x4005d9e	     0xf848c000000	                            je 0x4005e30	      3898	quickfix.c	FUNCTION_65	IF_1
0x4005da4	        0x48635008	            movsxd rdx, dword [rax + 8] 	      3906	quickfix.c	FUNCTION_65	FOR_1
0x4005da8	    0x488d0cd50000	                        lea rcx, [rdx*8]	      3906	quickfix.c	FUNCTION_65	FOR_1
0x4005db0	        0x48c1e207	                              shl rdx, 7	      3906	quickfix.c	FUNCTION_65	FOR_1
0x4005db4	          0x4829ca	                            sub rdx, rcx	      3906	quickfix.c	FUNCTION_65	FOR_1
0x4005db7	          0x4801d0	                            add rax, rdx	      3906	quickfix.c	FUNCTION_65	FOR_1
0x4005dba	          0x8b7830	            mov edi, dword [rax + 0x30] 	      3907	quickfix.c	FUNCTION_65	FOR_1
0x4005dbd	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      3906	quickfix.c	FUNCTION_65	FOR_1
0x4005dc1	            0x85ff	                           test edi, edi	      3907	quickfix.c	FUNCTION_65	FOR_1
0x4005dc3	     0xf8ea7000000	                           jle 0x4005e70	      3907	quickfix.c	FUNCTION_65	FOR_1
0x4005dc9	          0x4885d2	                           test rdx, rdx	      3907	quickfix.c	FUNCTION_65	FOR_1
0x4005dcc	     0xf849e000000	                            je 0x4005e70	      3907	quickfix.c	FUNCTION_65	FOR_1
0x4005dd2	          0x4531c0	                            xor r8d, r8d	      3907	quickfix.c	FUNCTION_65	FOR_1
0x4005dd5	            0x31c0	                            xor eax, eax	      3907	quickfix.c	FUNCTION_65	FOR_1
0x4005dd7	            0x31c9	                            xor ecx, ecx	      3907	quickfix.c	FUNCTION_65	FOR_1
0x4005dd9	            0xeb34	                           jmp 0x4005e0f	      3907	quickfix.c	FUNCTION_65	FOR_1
0x4005ddb	       0xf1f440000	                   nop dword [rax + rax]	      3907	quickfix.c	FUNCTION_65	FOR_1
0x4005de0	    0x81fed8000000	                           cmp esi, 0xd8	      3912	quickfix.c	FUNCTION_65	FOR_1	IF_3	IF_4
0x4005de6	            0x7435	                            je 0x4005e1d	      3912	quickfix.c	FUNCTION_65	FOR_1	IF_3	IF_4
0x4005de8	          0x8b7218	            mov esi, dword [rdx + 0x18] 	      3914	quickfix.c	FUNCTION_65	FOR_1	IF_3	ELSE_1	IF_5
0x4005deb	          0x4439c6	                            cmp esi, r8d	      3914	quickfix.c	FUNCTION_65	FOR_1	IF_3	ELSE_1	IF_5
0x4005dee	            0x7410	                            je 0x4005e00	      3914	quickfix.c	FUNCTION_65	FOR_1	IF_3	ELSE_1	IF_5
0x4005df0	            0x85f6	                           test esi, esi	      3914	quickfix.c	FUNCTION_65	FOR_1	IF_3	ELSE_1	IF_5
0x4005df2	            0x7e0c	                           jle 0x4005e00	      3914	quickfix.c	FUNCTION_65	FOR_1	IF_3	ELSE_1	IF_5
0x4005df4	          0x83c001	                              add eax, 1	      3917	quickfix.c	FUNCTION_65	FOR_1	IF_3	ELSE_1	IF_5
0x4005df7	          0x4189f0	                            mov r8d, esi	      3917	quickfix.c	FUNCTION_65	FOR_1	IF_3	ELSE_1	IF_5
0x4005dfa	    0x660f1f440000	                    nop word [rax + rax]	      3917	quickfix.c	FUNCTION_65	FOR_1	IF_3	ELSE_1	IF_5
0x4005e00	          0x83c101	                              add ecx, 1	      3908	quickfix.c	FUNCTION_65	FOR_1
0x4005e03	          0x488b12	                    mov rdx, qword [rdx]	      3908	quickfix.c	FUNCTION_65	FOR_1
0x4005e06	            0x39f9	                            cmp ecx, edi	      3907	quickfix.c	FUNCTION_65	FOR_1
0x4005e08	            0x7d20	                           jge 0x4005e2a	      3907	quickfix.c	FUNCTION_65	FOR_1
0x4005e0a	          0x4885d2	                           test rdx, rdx	      3907	quickfix.c	FUNCTION_65	FOR_1
0x4005e0d	            0x741b	                            je 0x4005e2a	      3907	quickfix.c	FUNCTION_65	FOR_1
0x4005e0f	        0x807a4300	                cmp byte [rdx + 0x43], 0	      3910	quickfix.c	FUNCTION_65	FOR_1	IF_3
0x4005e13	            0x74eb	                            je 0x4005e00	      3910	quickfix.c	FUNCTION_65	FOR_1	IF_3
0x4005e15	          0x8b7320	            mov esi, dword [rbx + 0x20] 	      3912	quickfix.c	FUNCTION_65	FOR_1	IF_3	IF_4
0x4005e18	          0x83fe39	                           cmp esi, 0x39	      3912	quickfix.c	FUNCTION_65	FOR_1	IF_3	IF_4
0x4005e1b	            0x75c3	                           jne 0x4005de0	      3912	quickfix.c	FUNCTION_65	FOR_1	IF_3	IF_4
0x4005e1d	          0x83c101	                              add ecx, 1	      3908	quickfix.c	FUNCTION_65	FOR_1
0x4005e20	          0x83c001	                              add eax, 1	      3913	quickfix.c	FUNCTION_65	FOR_1	IF_3	IF_4
0x4005e23	          0x488b12	                    mov rdx, qword [rdx]	      3908	quickfix.c	FUNCTION_65	FOR_1
0x4005e26	            0x39f9	                            cmp ecx, edi	      3907	quickfix.c	FUNCTION_65	FOR_1
0x4005e28	            0x7ce0	                            jl 0x4005e0a	      3907	quickfix.c	FUNCTION_65	FOR_1
0x4005e2a	              0x5b	                                 pop rbx	      3924	quickfix.c	FUNCTION_65
0x4005e2b	              0xc3	                                     ret	      3924	quickfix.c	FUNCTION_65
0x4005e2c	         0xf1f4000	                         nop dword [rax]	      3924	quickfix.c	FUNCTION_65
0x4005e30	    0x488b05000000	            mov rax, qword [0x04005e37] 	      3901	quickfix.c	FUNCTION_65	IF_1
0x4005e37	        0x488b7808	                mov rdi, qword [rax + 8]	      3901	quickfix.c	FUNCTION_65	IF_1
0x4005e3b	      0xe800000000	                          call 0x4005e40	      3901	quickfix.c	FUNCTION_65	IF_1
0x4005e40	            0x85c0	                           test eax, eax	      3901	quickfix.c	FUNCTION_65	IF_1
0x4005e42	    0x488b15000000	            mov rdx, qword [0x04005e49] 	      3901	quickfix.c	FUNCTION_65	IF_1
0x4005e49	            0x7415	                            je 0x4005e60	      3901	quickfix.c	FUNCTION_65	IF_1
0x4005e4b	    0x488b82501900	          mov rax, qword [rdx + 0x1950] 	      3901	quickfix.c	FUNCTION_65	IF_1
0x4005e52	          0x4885c0	                           test rax, rax	      3901	quickfix.c	FUNCTION_65	IF_1
0x4005e55	     0xf8549ffffff	                           jne 0x4005da4	      3901	quickfix.c	FUNCTION_65	IF_1
0x4005e5b	       0xf1f440000	                   nop dword [rax + rax]	      3901	quickfix.c	FUNCTION_65	IF_1
0x4005e60	    0x488b82481900	          mov rax, qword [rdx + 0x1948] 	      3901	quickfix.c	FUNCTION_65	IF_1
0x4005e67	          0x4885c0	                           test rax, rax	      3902	quickfix.c	FUNCTION_65	IF_1	IF_2
0x4005e6a	     0xf8534ffffff	                           jne 0x4005da4	      3902	quickfix.c	FUNCTION_65	IF_1	IF_2
0x4005e70	            0x31c0	                            xor eax, eax	      3903	quickfix.c	FUNCTION_65	IF_1	IF_2
0x4005e72	              0x5b	                                 pop rbx	      3924	quickfix.c	FUNCTION_65
0x4005e73	              0xc3	                                     ret	      3924	quickfix.c	FUNCTION_65
qf_add_entry	CALL,13:ELSE,4:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,11:functions,0	161
0x40016a0	            0x4157	                                push r15	      1474	quickfix.c	FUNCTION_17
0x40016a2	            0x4156	                                push r14	      1474	quickfix.c	FUNCTION_17
0x40016a4	          0x4589cf	                           mov r15d, r9d	      1474	quickfix.c	FUNCTION_17
0x40016a7	            0x4155	                                push r13	      1474	quickfix.c	FUNCTION_17
0x40016a9	            0x4154	                                push r12	      1474	quickfix.c	FUNCTION_17
0x40016ab	          0x4d89c5	                             mov r13, r8	      1474	quickfix.c	FUNCTION_17
0x40016ae	              0x55	                                push rbp	      1474	quickfix.c	FUNCTION_17
0x40016af	              0x53	                                push rbx	      1474	quickfix.c	FUNCTION_17
0x40016b0	          0x4889fd	                            mov rbp, rdi	      1474	quickfix.c	FUNCTION_17
0x40016b3	      0xbf48000000	                           mov edi, 0x48	      1478	quickfix.c	FUNCTION_17	IF_1	CALL_1
0x40016b8	          0x4863de	                         movsxd rbx, esi	      1474	quickfix.c	FUNCTION_17
0x40016bb	          0x4989cc	                            mov r12, rcx	      1474	quickfix.c	FUNCTION_17
0x40016be	        0x4883ec18	                           sub rsp, 0x18	      1474	quickfix.c	FUNCTION_17
0x40016c2	      0x4889542408	                mov qword [rsp + 8], rdx	      1474	quickfix.c	FUNCTION_17
0x40016c7	      0xe800000000	                          call 0x40016cc	      1478	quickfix.c	FUNCTION_17	IF_1	CALL_1
0x40016cc	          0x4885c0	                           test rax, rax	      1478	quickfix.c	FUNCTION_17	IF_1	CALL_1
0x40016cf	     0xf842b020000	                            je 0x4001900	      1478	quickfix.c	FUNCTION_17	IF_1	CALL_1
0x40016d5	          0x4585ff	                         test r15d, r15d	      1480	quickfix.c	FUNCTION_17	IF_2
0x40016d8	          0x4989c6	                            mov r14, rax	      1480	quickfix.c	FUNCTION_17	IF_2
0x40016db	     0xf855f010000	                           jne 0x4001840	      1480	quickfix.c	FUNCTION_17	IF_2
0x40016e1	            0x31c0	                            xor eax, eax	      1722	quickfix.c	FUNCTION_21	IF_1
0x40016e3	          0x4d85e4	                           test r12, r12	      1721	quickfix.c	FUNCTION_21	IF_1
0x40016e6	            0x740b	                            je 0x40016f3	      1721	quickfix.c	FUNCTION_21	IF_1
0x40016e8	      0x41803c2400	                       cmp byte [r12], 0	      1721	quickfix.c	FUNCTION_21	IF_1
0x40016ed	     0xf85ed010000	                           jne 0x40018e0	      1721	quickfix.c	FUNCTION_21	IF_1
0x40016f3	        0x41894618	             mov dword [r14 + 0x18], eax	      1490	quickfix.c	FUNCTION_17	CALL_3
0x40016f7	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      1491	quickfix.c	FUNCTION_17	IF_4	CALL_4
0x40016fc	      0xe800000000	                          call 0x4001701	      1491	quickfix.c	FUNCTION_17	IF_4	CALL_4
0x4001701	          0x4885c0	                           test rax, rax	      1491	quickfix.c	FUNCTION_17	IF_4	CALL_4
0x4001704	        0x49894638	             mov qword [r14 + 0x38], rax	      1491	quickfix.c	FUNCTION_17	IF_4	CALL_4
0x4001708	     0xf84c2010000	                            je 0x40018d0	      1491	quickfix.c	FUNCTION_17	IF_4	CALL_4
0x400170e	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      1496	quickfix.c	FUNCTION_17
0x4001713	    0x48837c247000	               cmp qword [rsp + 0x70], 0	      1499	quickfix.c	FUNCTION_17	IF_5
0x4001719	        0x49894610	             mov qword [r14 + 0x10], rax	      1496	quickfix.c	FUNCTION_17
0x400171d	        0x8b442460	            mov eax, dword [rsp + 0x60] 	      1497	quickfix.c	FUNCTION_17
0x4001721	        0x4189461c	             mov dword [r14 + 0x1c], eax	      1497	quickfix.c	FUNCTION_17
0x4001725	        0x8b442468	            mov eax, dword [rsp + 0x68] 	      1498	quickfix.c	FUNCTION_17
0x4001729	        0x41884640	               mov byte [r14 + 0x40], al	      1498	quickfix.c	FUNCTION_17
0x400172d	            0x740e	                            je 0x400173d	      1499	quickfix.c	FUNCTION_17	IF_5
0x400172f	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      1499	quickfix.c	FUNCTION_17	IF_5
0x4001734	          0x803800	                       cmp byte [rax], 0	      1499	quickfix.c	FUNCTION_17	IF_5
0x4001737	     0xf8533010000	                           jne 0x4001870	      1499	quickfix.c	FUNCTION_17	IF_5
0x400173d	    0x49c746300000	               mov qword [r14 + 0x30], 0	      1500	quickfix.c	FUNCTION_17	IF_5
0x4001745	          0x4d85ed	                           test r13, r13	      1507	quickfix.c	FUNCTION_17	IF_7
0x4001748	            0x740b	                            je 0x4001755	      1507	quickfix.c	FUNCTION_17	IF_7
0x400174a	      0x41807d0000	                       cmp byte [r13], 0	      1507	quickfix.c	FUNCTION_17	IF_7
0x400174f	     0xf854b010000	                           jne 0x40018a0	      1507	quickfix.c	FUNCTION_17	IF_7
0x4001755	    0x49c746280000	               mov qword [r14 + 0x28], 0	      1508	quickfix.c	FUNCTION_17	IF_7
0x400175d	    0x83bc24800000	               cmp dword [rsp + 0x80], 1	      1517	quickfix.c	FUNCTION_17	IF_9	CALL_13
0x4001765	        0x8b442478	            mov eax, dword [rsp + 0x78] 	      1516	quickfix.c	FUNCTION_17
0x4001769	        0x41894620	             mov dword [r14 + 0x20], eax	      1516	quickfix.c	FUNCTION_17
0x400176d	      0xb801000000	                              mov eax, 1	      1516	quickfix.c	FUNCTION_17
0x4001772	            0x741e	                            je 0x4001792	      1517	quickfix.c	FUNCTION_17	IF_9	CALL_13
0x4001774	    0x8bbc24800000	            mov edi, dword [rsp + 0x80] 	      1517	quickfix.c	FUNCTION_17	IF_9	CALL_13
0x400177b	      0xe800000000	                          call 0x4001780	      1517	quickfix.c	FUNCTION_17	IF_9	CALL_13
0x4001780	     0xfb68c248000	           movzx ecx, byte [rsp + 0x80] 	      1517	quickfix.c	FUNCTION_17	IF_9	CALL_13
0x4001788	            0x85c0	                           test eax, eax	      1517	quickfix.c	FUNCTION_17	IF_9	CALL_13
0x400178a	      0xb800000000	                              mov eax, 0	      1517	quickfix.c	FUNCTION_17	IF_9	CALL_13
0x400178f	           0xf45c1	                         cmovne eax, ecx	      1517	quickfix.c	FUNCTION_17	IF_9	CALL_13
0x4001792	        0x41884642	               mov byte [r14 + 0x42], al	      1519	quickfix.c	FUNCTION_17
0x4001796	    0x8b8424880000	            mov eax, dword [rsp + 0x88] 	      1520	quickfix.c	FUNCTION_17
0x400179d	    0x488d14dd0000	                        lea rdx, [rbx*8]	      1523	quickfix.c	FUNCTION_17	IF_10
0x40017a5	        0x41884643	               mov byte [r14 + 0x43], al	      1520	quickfix.c	FUNCTION_17
0x40017a9	          0x4889d8	                            mov rax, rbx	      1523	quickfix.c	FUNCTION_17	IF_10
0x40017ac	        0x48c1e007	                              shl rax, 7	      1523	quickfix.c	FUNCTION_17	IF_10
0x40017b0	          0x4829d0	                            sub rax, rdx	      1523	quickfix.c	FUNCTION_17	IF_10
0x40017b3	          0x4801e8	                            add rax, rbp	      1523	quickfix.c	FUNCTION_17	IF_10
0x40017b6	          0x8b7030	            mov esi, dword [rax + 0x30] 	      1523	quickfix.c	FUNCTION_17	IF_10
0x40017b9	            0x85f6	                           test esi, esi	      1523	quickfix.c	FUNCTION_17	IF_10
0x40017bb	            0x7463	                            je 0x4001820	      1523	quickfix.c	FUNCTION_17	IF_10
0x40017bd	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1533	quickfix.c	FUNCTION_17	ELSE_4
0x40017c1	        0x49895608	                mov qword [r14 + 8], rdx	      1533	quickfix.c	FUNCTION_17	ELSE_4
0x40017c5	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1534	quickfix.c	FUNCTION_17	ELSE_4
0x40017c9	          0x4c8930	                    mov qword [rax], r14	      1534	quickfix.c	FUNCTION_17	ELSE_4
0x40017cc	    0x488d04dd0000	                        lea rax, [rbx*8]	      1538	quickfix.c	FUNCTION_17
0x40017d4	        0x48c1e307	                              shl rbx, 7	      1538	quickfix.c	FUNCTION_17
0x40017d8	      0x41c6464100	                mov byte [r14 + 0x41], 0	      1537	quickfix.c	FUNCTION_17
0x40017dd	    0x49c706000000	                      mov qword [r14], 0	      1536	quickfix.c	FUNCTION_17
0x40017e4	          0x4829c3	                            sub rbx, rax	      1538	quickfix.c	FUNCTION_17
0x40017e7	          0x4801dd	                            add rbp, rbx	      1538	quickfix.c	FUNCTION_17
0x40017ea	          0x8b4530	            mov eax, dword [rbp + 0x30] 	      1539	quickfix.c	FUNCTION_17
0x40017ed	          0x8b4d34	            mov ecx, dword [rbp + 0x34] 	      1540	quickfix.c	FUNCTION_17	IF_11
0x40017f0	        0x4c897520	            mov qword [rbp + 0x20], r14 	      1538	quickfix.c	FUNCTION_17
0x40017f4	          0x8d5001	                      lea edx, [rax + 1]	      1539	quickfix.c	FUNCTION_17
0x40017f7	            0x85c9	                           test ecx, ecx	      1540	quickfix.c	FUNCTION_17	IF_11
0x40017f9	      0xb801000000	                              mov eax, 1	      1548	quickfix.c	FUNCTION_17
0x40017fe	          0x895530	            mov dword [rbp + 0x30], edx 	      1539	quickfix.c	FUNCTION_17
0x4001801	            0x750e	                           jne 0x4001811	      1540	quickfix.c	FUNCTION_17	IF_11
0x4001803	      0x41807e4300	                cmp byte [r14 + 0x43], 0	      1540	quickfix.c	FUNCTION_17	IF_11
0x4001808	            0x7407	                            je 0x4001811	      1540	quickfix.c	FUNCTION_17	IF_11
0x400180a	          0x895534	            mov dword [rbp + 0x34], edx 	      1543	quickfix.c	FUNCTION_17	IF_11
0x400180d	        0x4c897528	            mov qword [rbp + 0x28], r14 	      1545	quickfix.c	FUNCTION_17	IF_11
0x4001811	        0x4883c418	                           add rsp, 0x18	      1549	quickfix.c	FUNCTION_17
0x4001815	              0x5b	                                 pop rbx	      1549	quickfix.c	FUNCTION_17
0x4001816	              0x5d	                                 pop rbp	      1549	quickfix.c	FUNCTION_17
0x4001817	            0x415c	                                 pop r12	      1549	quickfix.c	FUNCTION_17
0x4001819	            0x415d	                                 pop r13	      1549	quickfix.c	FUNCTION_17
0x400181b	            0x415e	                                 pop r14	      1549	quickfix.c	FUNCTION_17
0x400181d	            0x415f	                                 pop r15	      1549	quickfix.c	FUNCTION_17
0x400181f	              0xc3	                                     ret	      1549	quickfix.c	FUNCTION_17
0x4001820	        0x4c897018	             mov qword [rax + 0x18], r14	      1526	quickfix.c	FUNCTION_17	IF_10
0x4001824	        0x4c897028	             mov qword [rax + 0x28], r14	      1527	quickfix.c	FUNCTION_17	IF_10
0x4001828	    0xc74034000000	               mov dword [rax + 0x34], 0	      1528	quickfix.c	FUNCTION_17	IF_10
0x400182f	    0x49c746080000	                  mov qword [r14 + 8], 0	      1529	quickfix.c	FUNCTION_17	IF_10
0x4001837	            0xeb93	                           jmp 0x40017cc	      1529	quickfix.c	FUNCTION_17	IF_10
0x4001839	     0xf1f80000000	                         nop dword [rax]	      1529	quickfix.c	FUNCTION_17	IF_10
0x4001840	          0x4489ff	                           mov edi, r15d	      1482	quickfix.c	FUNCTION_17	IF_2	CALL_2
0x4001843	      0xe800000000	                          call 0x4001848	      1482	quickfix.c	FUNCTION_17	IF_2	CALL_2
0x4001848	          0x4885c0	                           test rax, rax	      1485	quickfix.c	FUNCTION_17	IF_2	IF_3
0x400184b	        0x45897e18	            mov dword [r14 + 0x18], r15d	      1484	quickfix.c	FUNCTION_17	IF_2
0x400184f	     0xf84a2feffff	                            je 0x40016f7	      1485	quickfix.c	FUNCTION_17	IF_2	IF_3
0x4001855	            0x31d2	                            xor edx, edx	      1487	quickfix.c	FUNCTION_17	IF_2	IF_3
0x4001857	    0x4881fd000000	                              cmp rbp, 0	      1487	quickfix.c	FUNCTION_17	IF_2	IF_3
0x400185e	           0xf95c2	                                setne dl	      1487	quickfix.c	FUNCTION_17	IF_2	IF_3
0x4001861	          0x83c201	                              add edx, 1	      1487	quickfix.c	FUNCTION_17	IF_2	IF_3
0x4001864	     0x99020140000	            or dword [rax + 0x1420], edx	      1486	quickfix.c	FUNCTION_17	IF_2	IF_3
0x400186a	      0xe988feffff	                           jmp 0x40016f7	      1486	quickfix.c	FUNCTION_17	IF_2	IF_3
0x400186f	              0x90	                                     nop	      1486	quickfix.c	FUNCTION_17	IF_2	IF_3
0x4001870	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	      1501	quickfix.c	FUNCTION_17	ELSE_2	IF_6	CALL_6
0x4001875	      0xe800000000	                          call 0x400187a	      1501	quickfix.c	FUNCTION_17	ELSE_2	IF_6	CALL_6
0x400187a	          0x4885c0	                           test rax, rax	      1501	quickfix.c	FUNCTION_17	ELSE_2	IF_6	CALL_6
0x400187d	        0x49894630	             mov qword [r14 + 0x30], rax	      1501	quickfix.c	FUNCTION_17	ELSE_2	IF_6	CALL_6
0x4001881	     0xf85befeffff	                           jne 0x4001745	      1501	quickfix.c	FUNCTION_17	ELSE_2	IF_6	CALL_6
0x4001887	        0x498b7e38	            mov rdi, qword [r14 + 0x38] 	      1503	quickfix.c	FUNCTION_17	ELSE_2	IF_6	CALL_7
0x400188b	      0xe800000000	                          call 0x4001890	      1503	quickfix.c	FUNCTION_17	ELSE_2	IF_6	CALL_7
0x4001890	          0x4c89f7	                            mov rdi, r14	      1504	quickfix.c	FUNCTION_17	ELSE_2	IF_6	CALL_8
0x4001893	      0xe800000000	                          call 0x4001898	      1504	quickfix.c	FUNCTION_17	ELSE_2	IF_6	CALL_8
0x4001898	            0x31c0	                            xor eax, eax	      1505	quickfix.c	FUNCTION_17	ELSE_2	IF_6
0x400189a	      0xe972ffffff	                           jmp 0x4001811	      1505	quickfix.c	FUNCTION_17	ELSE_2	IF_6
0x400189f	              0x90	                                     nop	      1505	quickfix.c	FUNCTION_17	ELSE_2	IF_6
0x40018a0	          0x4c89ef	                            mov rdi, r13	      1509	quickfix.c	FUNCTION_17	ELSE_3	IF_8	CALL_9
0x40018a3	      0xe800000000	                          call 0x40018a8	      1509	quickfix.c	FUNCTION_17	ELSE_3	IF_8	CALL_9
0x40018a8	          0x4885c0	                           test rax, rax	      1509	quickfix.c	FUNCTION_17	ELSE_3	IF_8	CALL_9
0x40018ab	        0x49894628	             mov qword [r14 + 0x28], rax	      1509	quickfix.c	FUNCTION_17	ELSE_3	IF_8	CALL_9
0x40018af	     0xf85a8feffff	                           jne 0x400175d	      1509	quickfix.c	FUNCTION_17	ELSE_3	IF_8	CALL_9
0x40018b5	        0x498b7e38	            mov rdi, qword [r14 + 0x38] 	      1511	quickfix.c	FUNCTION_17	ELSE_3	IF_8	CALL_10
0x40018b9	      0xe800000000	                          call 0x40018be	      1511	quickfix.c	FUNCTION_17	ELSE_3	IF_8	CALL_10
0x40018be	        0x498b7e30	            mov rdi, qword [r14 + 0x30] 	      1512	quickfix.c	FUNCTION_17	ELSE_3	IF_8	CALL_11
0x40018c2	      0xe800000000	                          call 0x40018c7	      1512	quickfix.c	FUNCTION_17	ELSE_3	IF_8	CALL_11
0x40018c7	    0x660f1f840000	                    nop word [rax + rax]	      1512	quickfix.c	FUNCTION_17	ELSE_3	IF_8	CALL_11
0x40018d0	          0x4c89f7	                            mov rdi, r14	      1513	quickfix.c	FUNCTION_17	ELSE_3	IF_8	CALL_12
0x40018d3	      0xe800000000	                          call 0x40018d8	      1513	quickfix.c	FUNCTION_17	ELSE_3	IF_8	CALL_12
0x40018d8	            0x31c0	                            xor eax, eax	      1514	quickfix.c	FUNCTION_17	ELSE_3	IF_8
0x40018da	      0xe932ffffff	                           jmp 0x4001811	      1514	quickfix.c	FUNCTION_17	ELSE_3	IF_8
0x40018df	              0x90	                                     nop	      1514	quickfix.c	FUNCTION_17	ELSE_3	IF_8
0x40018e0	      0x488b542408	                mov rdx, qword [rsp + 8]	      1514	quickfix.c	FUNCTION_17	ELSE_3	IF_8
0x40018e5	          0x4c89e1	                            mov rcx, r12	      1514	quickfix.c	FUNCTION_17	ELSE_3	IF_8
0x40018e8	            0x89de	                            mov esi, ebx	      1514	quickfix.c	FUNCTION_17	ELSE_3	IF_8
0x40018ea	          0x4889ef	                            mov rdi, rbp	      1514	quickfix.c	FUNCTION_17	ELSE_3	IF_8
0x40018ed	      0xe8aefaffff	             call sym.qf_get_fnum.part.2	      1514	quickfix.c	FUNCTION_17	ELSE_3	IF_8
0x40018f2	      0xe9fcfdffff	                           jmp 0x40016f3	      1514	quickfix.c	FUNCTION_17	ELSE_3	IF_8
0x40018f7	    0x660f1f840000	                    nop word [rax + rax]	      1514	quickfix.c	FUNCTION_17	ELSE_3	IF_8
0x4001900	        0x4883c418	                           add rsp, 0x18	      1549	quickfix.c	FUNCTION_17
0x4001904	            0x31c0	                            xor eax, eax	      1479	quickfix.c	FUNCTION_17	IF_1
0x4001906	              0x5b	                                 pop rbx	      1549	quickfix.c	FUNCTION_17
0x4001907	              0x5d	                                 pop rbp	      1549	quickfix.c	FUNCTION_17
0x4001908	            0x415c	                                 pop r12	      1549	quickfix.c	FUNCTION_17
0x400190a	            0x415d	                                 pop r13	      1549	quickfix.c	FUNCTION_17
0x400190c	            0x415e	                                 pop r14	      1549	quickfix.c	FUNCTION_17
0x400190e	            0x415f	                                 pop r15	      1549	quickfix.c	FUNCTION_17
0x4001910	              0xc3	                                     ret	      1549	quickfix.c	FUNCTION_17
wipe_dummy_buffer	CALL,4:ELSE,0:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,1:functions,0	27
0x4001120	              0x55	                                push rbp	      4882	quickfix.c	FUNCTION_83
0x4001121	              0x53	                                push rbx	      4882	quickfix.c	FUNCTION_83
0x4001122	        0x4883ec28	                           sub rsp, 0x28	      4882	quickfix.c	FUNCTION_83
0x4001126	    0x64488b042528	                mov rax, qword fs:[0x28]	      4882	quickfix.c	FUNCTION_83
0x400112f	      0x4889442418	             mov qword [rsp + 0x18], rax	      4882	quickfix.c	FUNCTION_83
0x4001134	            0x31c0	                            xor eax, eax	      4882	quickfix.c	FUNCTION_83
0x4001136	    0x48393d000000	            cmp qword [0x0400113d], rdi 	      4883	quickfix.c	FUNCTION_83	IF_1
0x400113d	            0x7428	                            je 0x4001167	      4883	quickfix.c	FUNCTION_83	IF_1
0x400113f	          0x4889fb	                            mov rbx, rdi	      4883	quickfix.c	FUNCTION_83	IF_1
0x4001142	          0x4889e7	                            mov rdi, rsp	      4891	quickfix.c	FUNCTION_83	IF_1	CALL_1
0x4001145	          0x4889f5	                            mov rbp, rsi	      4891	quickfix.c	FUNCTION_83	IF_1	CALL_1
0x4001148	      0xe800000000	                          call 0x400114d	      4891	quickfix.c	FUNCTION_83	IF_1	CALL_1
0x400114d	            0x31f6	                            xor esi, esi	      4894	quickfix.c	FUNCTION_83	IF_1	CALL_2
0x400114f	          0x4889df	                            mov rdi, rbx	      4894	quickfix.c	FUNCTION_83	IF_1	CALL_2
0x4001152	      0xe800000000	                          call 0x4001157	      4894	quickfix.c	FUNCTION_83	IF_1	CALL_2
0x4001157	          0x4889e7	                            mov rdi, rsp	      4899	quickfix.c	FUNCTION_83	IF_1	CALL_3
0x400115a	      0xe800000000	                          call 0x400115f	      4899	quickfix.c	FUNCTION_83	IF_1	CALL_3
0x400115f	          0x4889ef	                            mov rdi, rbp	      4902	quickfix.c	FUNCTION_83	IF_1	CALL_4
0x4001162	      0xe809ffffff	              call sym.restore_start_dir	      4902	quickfix.c	FUNCTION_83	IF_1	CALL_4
0x4001167	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4904	quickfix.c	FUNCTION_83
0x400116c	    0x644833042528	                xor rax, qword fs:[0x28]	      4904	quickfix.c	FUNCTION_83
0x4001175	            0x7507	                           jne 0x400117e	      4904	quickfix.c	FUNCTION_83
0x4001177	        0x4883c428	                           add rsp, 0x28	      4904	quickfix.c	FUNCTION_83
0x400117b	              0x5b	                                 pop rbx	      4904	quickfix.c	FUNCTION_83
0x400117c	              0x5d	                                 pop rbp	      4904	quickfix.c	FUNCTION_83
0x400117d	              0xc3	                                     ret	      4904	quickfix.c	FUNCTION_83
0x400117e	      0xe800000000	                          call 0x4001183	      4904	quickfix.c	FUNCTION_83
free_efm_list	CALL,2:ELSE,0:DO,0:WHILE,0:FOR,1:SWITCH,0:IF,0:functions,0	22
0x4000760	              0x55	                                push rbp	       406	quickfix.c	FUNCTION_3
0x4000761	              0x53	                                push rbx	       406	quickfix.c	FUNCTION_3
0x4000762	          0x4889fd	                            mov rbp, rdi	       406	quickfix.c	FUNCTION_3
0x4000765	        0x4883ec08	                              sub rsp, 8	       406	quickfix.c	FUNCTION_3
0x4000769	          0x488b1f	                    mov rbx, qword [rdi]	       409	quickfix.c	FUNCTION_3	FOR_1
0x400076c	          0x4885db	                           test rbx, rbx	       409	quickfix.c	FUNCTION_3	FOR_1
0x400076f	            0x7428	                            je 0x4000799	       409	quickfix.c	FUNCTION_3	FOR_1
0x4000771	     0xf1f80000000	                         nop dword [rax]	       409	quickfix.c	FUNCTION_3	FOR_1
0x4000778	        0x488b4308	                mov rax, qword [rbx + 8]	       411	quickfix.c	FUNCTION_3	FOR_1
0x400077c	        0x48894500	                    mov qword [rbp], rax	       411	quickfix.c	FUNCTION_3	FOR_1
0x4000780	          0x488b3b	                    mov rdi, qword [rbx]	       412	quickfix.c	FUNCTION_3	FOR_1	CALL_1
0x4000783	      0xe800000000	                          call 0x4000788	       412	quickfix.c	FUNCTION_3	FOR_1	CALL_1
0x4000788	          0x4889df	                            mov rdi, rbx	       413	quickfix.c	FUNCTION_3	FOR_1	CALL_2
0x400078b	      0xe800000000	                          call 0x4000790	       413	quickfix.c	FUNCTION_3	FOR_1	CALL_2
0x4000790	        0x488b5d00	                    mov rbx, qword [rbp]	       409	quickfix.c	FUNCTION_3	FOR_1
0x4000794	          0x4885db	                           test rbx, rbx	       409	quickfix.c	FUNCTION_3	FOR_1
0x4000797	            0x75df	                           jne 0x4000778	       409	quickfix.c	FUNCTION_3	FOR_1
0x4000799	    0x48c705000000	               mov qword [0x040007a4], 0	       415	quickfix.c	FUNCTION_3
0x40007a4	        0x4883c408	                              add rsp, 8	       416	quickfix.c	FUNCTION_3
0x40007a8	              0x5b	                                 pop rbx	       416	quickfix.c	FUNCTION_3
0x40007a9	              0x5d	                                 pop rbp	       416	quickfix.c	FUNCTION_3
0x40007aa	              0xc3	                                     ret	       416	quickfix.c	FUNCTION_3
qf_fill_buffer	CALL,28:ELSE,5:DO,0:WHILE,2:FOR,0:SWITCH,0:IF,16:functions,0	257
0x40009a0	            0x4157	                                push r15	      3558	quickfix.c	FUNCTION_60
0x40009a2	            0x4156	                                push r14	      3558	quickfix.c	FUNCTION_60
0x40009a4	            0x4155	                                push r13	      3558	quickfix.c	FUNCTION_60
0x40009a6	            0x4154	                                push r12	      3558	quickfix.c	FUNCTION_60
0x40009a8	          0x4989fc	                            mov r12, rdi	      3558	quickfix.c	FUNCTION_60
0x40009ab	              0x55	                                push rbp	      3558	quickfix.c	FUNCTION_60
0x40009ac	              0x53	                                push rbx	      3558	quickfix.c	FUNCTION_60
0x40009ad	    0x4881ec381000	                         sub rsp, 0x1038	      3558	quickfix.c	FUNCTION_60
0x40009b4	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      3558	quickfix.c	FUNCTION_60
0x40009bd	    0x48898c242810	          mov qword [rsp + 0x1028], rcx 	      3558	quickfix.c	FUNCTION_60
0x40009c5	            0x31c9	                            xor ecx, ecx	      3558	quickfix.c	FUNCTION_60
0x40009c7	    0x8b0d00000000	            mov ecx, dword [0x040009cd] 	      3563	quickfix.c	FUNCTION_60
0x40009cd	          0x4885d2	                           test rdx, rdx	      3565	quickfix.c	FUNCTION_60	IF_1
0x40009d0	        0x48893424	                    mov qword [rsp], rsi	      3558	quickfix.c	FUNCTION_60
0x40009d4	      0x4889542410	             mov qword [rsp + 0x10], rdx	      3558	quickfix.c	FUNCTION_60
0x40009d9	        0x894c241c	             mov dword [rsp + 0x1c], ecx	      3563	quickfix.c	FUNCTION_60
0x40009dd	     0xf848d030000	                            je 0x4000d70	      3565	quickfix.c	FUNCTION_60	IF_1
0x40009e3	        0x48634708	            movsxd rax, dword [rdi + 8] 	      3579	quickfix.c	FUNCTION_60	IF_3
0x40009e7	          0x3b4704	                cmp eax, dword [rdi + 4]	      3579	quickfix.c	FUNCTION_60	IF_3
0x40009ea	            0x7c44	                            jl 0x4000a30	      3579	quickfix.c	FUNCTION_60	IF_3
0x40009ec	      0xbf01000000	                              mov edi, 1	      3671	quickfix.c	FUNCTION_60	CALL_24
0x40009f1	      0xe800000000	                          call 0x40009f6	      3671	quickfix.c	FUNCTION_60	CALL_24
0x40009f6	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      3695	quickfix.c	FUNCTION_60
0x40009fa	    0x890500000000	            mov dword [0x04000a00], eax 	      3695	quickfix.c	FUNCTION_60
0x4000a00	    0x488b84242810	          mov rax, qword [rsp + 0x1028] 	      3696	quickfix.c	FUNCTION_60
0x4000a08	    0x644833042528	                xor rax, qword fs:[0x28]	      3696	quickfix.c	FUNCTION_60
0x4000a11	     0xf85fe030000	                           jne 0x4000e15	      3696	quickfix.c	FUNCTION_60
0x4000a17	    0x4881c4381000	                         add rsp, 0x1038	      3696	quickfix.c	FUNCTION_60
0x4000a1e	              0x5b	                                 pop rbx	      3696	quickfix.c	FUNCTION_60
0x4000a1f	              0x5d	                                 pop rbp	      3696	quickfix.c	FUNCTION_60
0x4000a20	            0x415c	                                 pop r12	      3696	quickfix.c	FUNCTION_60
0x4000a22	            0x415d	                                 pop r13	      3696	quickfix.c	FUNCTION_60
0x4000a24	            0x415e	                                 pop r14	      3696	quickfix.c	FUNCTION_60
0x4000a26	            0x415f	                                 pop r15	      3696	quickfix.c	FUNCTION_60
0x4000a28	              0xc3	                                     ret	      3696	quickfix.c	FUNCTION_60
0x4000a29	     0xf1f80000000	                         nop dword [rax]	      3696	quickfix.c	FUNCTION_60
0x4000a30	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      3593	quickfix.c	FUNCTION_60	IF_3	ELSE_1
0x4000a35	      0xc644242000	                mov byte [rsp + 0x20], 0	      3583	quickfix.c	FUNCTION_60	IF_3
0x4000a3a	          0x4c8b39	                    mov r15, qword [rcx]	      3593	quickfix.c	FUNCTION_60	IF_3	ELSE_1
0x4000a3d	        0x488b0c24	                    mov rcx, qword [rsp]	      3594	quickfix.c	FUNCTION_60	IF_3	ELSE_1
0x4000a41	          0x488b29	                    mov rbp, qword [rcx]	      3594	quickfix.c	FUNCTION_60	IF_3	ELSE_1
0x4000a44	      0xe92d010000	                           jmp 0x4000b76	      3594	quickfix.c	FUNCTION_60	IF_3	ELSE_1
0x4000a49	     0xf1f80000000	                         nop dword [rax]	      3594	quickfix.c	FUNCTION_60	IF_3	ELSE_1
0x4000a50	          0x4c89f7	                            mov rdi, r14	        33	stdio2.h	FUNCTION_127	CALL_1
0x4000a53	    0x48033d000000	             add rdi, qword [0x04000a5a]	        33	stdio2.h	FUNCTION_127	CALL_1
0x4000a5a	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_127	CALL_1
0x4000a5f	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_127	CALL_1
0x4000a66	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_127	CALL_1
0x4000a6b	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_127	CALL_1
0x4000a6d	      0xe800000000	                          call 0x4000a72	        33	stdio2.h	FUNCTION_127	CALL_1
0x4000a72	    0x4c8b2d000000	            mov r13, qword [0x04000a79] 	      3630	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10	CALL_13
0x4000a79	      0x4b8d7c3500	                    lea rdi, [r13 + r14]	      3630	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10	CALL_13
0x4000a7e	      0xe800000000	                          call 0x4000a83	      3630	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10	CALL_13
0x4000a83	        0x458b471c	            mov r8d, dword [r15 + 0x1c] 	      3632	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10	IF_11
0x4000a87	             0x1c3	                            add ebx, eax	      3630	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10	CALL_13
0x4000a89	          0x4585c0	                           test r8d, r8d	      3632	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10	IF_11
0x4000a8c	            0x7e31	                           jle 0x4000abf	      3632	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10	IF_11
0x4000a8e	          0x4c63f3	                         movsxd r14, ebx	      3634	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10	IF_11
0x4000a91	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_127	CALL_1
0x4000a96	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_127	CALL_1
0x4000a9d	      0x4b8d7c3500	                    lea rdi, [r13 + r14]	        33	stdio2.h	FUNCTION_127	CALL_1
0x4000aa2	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_127	CALL_1
0x4000aa7	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_127	CALL_1
0x4000aa9	      0xe800000000	                          call 0x4000aae	        33	stdio2.h	FUNCTION_127	CALL_1
0x4000aae	          0x4c89f7	                            mov rdi, r14	      3635	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10	IF_11	CALL_14
0x4000ab1	    0x48033d000000	             add rdi, qword [0x04000ab8]	      3635	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10	IF_11	CALL_14
0x4000ab8	      0xe800000000	                          call 0x4000abd	      3635	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10	IF_11	CALL_14
0x4000abd	             0x1c3	                            add ebx, eax	      3635	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10	IF_11	CALL_14
0x4000abf	      0x410fb67f42	           movzx edi, byte [r15 + 0x42] 	      3639	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10	CALL_15
0x4000ac4	        0x418b7720	            mov esi, dword [r15 + 0x20] 	      3639	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10	CALL_15
0x4000ac8	          0x4c63f3	                         movsxd r14, ebx	      3638	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10
0x4000acb	      0xe8a0f9ffff	                       call sym.qf_types	      3639	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10	CALL_15
0x4000ad0	          0x4c89f7	                            mov rdi, r14	        33	stdio2.h	FUNCTION_127	CALL_1
0x4000ad3	    0x48033d000000	             add rdi, qword [0x04000ada]	        33	stdio2.h	FUNCTION_127	CALL_1
0x4000ada	          0x4889c6	                            mov rsi, rax	        33	stdio2.h	FUNCTION_127	CALL_1
0x4000add	      0xe800000000	                          call 0x4000ae2	        33	stdio2.h	FUNCTION_127	CALL_1
0x4000ae2	    0x4c8b2d000000	            mov r13, qword [0x04000ae9] 	      3645	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_5	IF_12	CALL_18
0x4000ae9	      0x4b8d7c3500	                    lea rdi, [r13 + r14]	      3645	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_5	IF_12	CALL_18
0x4000aee	      0xe800000000	                          call 0x4000af3	      3645	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_5	IF_12	CALL_18
0x4000af3	             0x1c3	                            add ebx, eax	      3645	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_5	IF_12	CALL_18
0x4000af5	          0x4c63f3	                         movsxd r14, ebx	      3645	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_5	IF_12	CALL_18
0x4000af8	    0x43c64435007c	              mov byte [r13 + r14], 0x7c	      3647	quickfix.c	FUNCTION_60	IF_3	WHILE_2
0x4000afe	    0x488b15000000	            mov rdx, qword [0x04000b05] 	      3648	quickfix.c	FUNCTION_60	IF_3	WHILE_2
0x4000b05	          0x8d4302	                      lea eax, [rbx + 2]	      3648	quickfix.c	FUNCTION_60	IF_3	WHILE_2
0x4000b08	          0x83c301	                              add ebx, 1	      3648	quickfix.c	FUNCTION_60	IF_3	WHILE_2
0x4000b0b	          0x4863db	                         movsxd rbx, ebx	      3648	quickfix.c	FUNCTION_60	IF_3	WHILE_2
0x4000b0e	          0x4863f0	                         movsxd rsi, eax	      3653	quickfix.c	FUNCTION_60	IF_3	WHILE_2	CALL_20
0x4000b11	        0xc6041a20	              mov byte [rdx + rbx], 0x20	      3648	quickfix.c	FUNCTION_60	IF_3	WHILE_2
0x4000b15	      0xba01040000	                          mov edx, 0x401	      3653	quickfix.c	FUNCTION_60	IF_3	WHILE_2	CALL_20
0x4000b1a	    0x480335000000	             add rsi, qword [0x04000b21]	      3653	quickfix.c	FUNCTION_60	IF_3	WHILE_2	CALL_20
0x4000b21	            0x29c2	                            sub edx, eax	      3653	quickfix.c	FUNCTION_60	IF_3	WHILE_2	CALL_20
0x4000b23	          0x83f803	                              cmp eax, 3	      3653	quickfix.c	FUNCTION_60	IF_3	WHILE_2	CALL_20
0x4000b26	     0xf8f04010000	                            jg 0x4000c30	      3653	quickfix.c	FUNCTION_60	IF_3	WHILE_2	CALL_20
0x4000b2c	        0x498b7f38	            mov rdi, qword [r15 + 0x38] 	      3653	quickfix.c	FUNCTION_60	IF_3	WHILE_2	CALL_20
0x4000b30	      0xe80bf5ffff	                    call sym.qf_fmt_text	      3653	quickfix.c	FUNCTION_60	IF_3	WHILE_2	CALL_20
0x4000b35	    0x488b1d000000	            mov rbx, qword [0x04000b3c] 	      3657	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_13	CALL_22
0x4000b3c	          0x4889df	                            mov rdi, rbx	      3657	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_13	CALL_22
0x4000b3f	      0xe800000000	                          call 0x4000b44	      3657	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_13	CALL_22
0x4000b44	        0x488b3c24	                    mov rdi, qword [rsp]	      3656	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_13	CALL_21
0x4000b48	          0x8d4801	                      lea ecx, [rax + 1]	      3656	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_13	CALL_21
0x4000b4b	          0x4531c0	                            xor r8d, r8d	      3656	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_13	CALL_21
0x4000b4e	          0x4889da	                            mov rdx, rbx	      3656	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_13	CALL_21
0x4000b51	          0x4889ee	                            mov rsi, rbp	      3656	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_13	CALL_21
0x4000b54	      0xe800000000	                          call 0x4000b59	      3656	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_13	CALL_21
0x4000b59	            0x85c0	                           test eax, eax	      3656	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_13	CALL_21
0x4000b5b	     0xf84f7000000	                            je 0x4000c58	      3656	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_13	CALL_21
0x4000b61	          0x4d8b3f	                    mov r15, qword [r15]	      3660	quickfix.c	FUNCTION_60	IF_3	WHILE_2
0x4000b64	        0x4883c501	                              add rbp, 1	      3659	quickfix.c	FUNCTION_60	IF_3	WHILE_2
0x4000b68	          0x4d85ff	                           test r15, r15	      3661	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_14
0x4000b6b	     0xf84e7000000	                            je 0x4000c58	      3661	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_14
0x4000b71	      0x4963442408	            movsxd rax, dword [r12 + 8] 	      3661	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_14
0x4000b76	    0x488d14c50000	                        lea rdx, [rax*8]	      3596	quickfix.c	FUNCTION_60	IF_3	WHILE_2
0x4000b7e	        0x48c1e007	                              shl rax, 7	      3596	quickfix.c	FUNCTION_60	IF_3	WHILE_2
0x4000b82	          0x4829d0	                            sub rax, rdx	      3596	quickfix.c	FUNCTION_60	IF_3	WHILE_2
0x4000b85	      0x4963440430	   movsxd rax, dword [r12 + rax + 0x30] 	      3596	quickfix.c	FUNCTION_60	IF_3	WHILE_2
0x4000b8a	          0x4839c5	                            cmp rbp, rax	      3596	quickfix.c	FUNCTION_60	IF_3	WHILE_2
0x4000b8d	     0xf8dc5000000	                           jge 0x4000c58	      3596	quickfix.c	FUNCTION_60	IF_3	WHILE_2
0x4000b93	        0x498b7728	            mov rsi, qword [r15 + 0x28] 	      3598	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_5
0x4000b97	          0x4885f6	                           test rsi, rsi	      3598	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_5
0x4000b9a	            0x746c	                            je 0x4000c08	      3598	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_5
0x4000b9c	    0x488b3d000000	            mov rdi, qword [0x04000ba3] 	       110	string3.h	FUNCTION_121	CALL_3
0x4000ba3	      0xe800000000	                          call 0x4000ba8	       110	string3.h	FUNCTION_121	CALL_3
0x4000ba8	    0x4c8b2d000000	            mov r13, qword [0x04000baf] 	      3621	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	CALL_12
0x4000baf	          0x4c89ef	                            mov rdi, r13	      3621	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	CALL_12
0x4000bb2	      0xe800000000	                          call 0x4000bb7	      3621	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	CALL_12
0x4000bb7	          0x8d5801	                      lea ebx, [rax + 1]	      3621	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	CALL_12
0x4000bba	          0x4863d0	                         movsxd rdx, eax	      3621	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	CALL_12
0x4000bbd	          0x4c63f3	                         movsxd r14, ebx	      3621	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	CALL_12
0x4000bc0	    0x41c64415007c	              mov byte [r13 + rdx], 0x7c	      3625	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4
0x4000bc6	        0x4d8b4710	              mov r8, qword [r15 + 0x10]	      3627	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10
0x4000bca	          0x4d85c0	                             test r8, r8	      3627	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10
0x4000bcd	     0xf8f7dfeffff	                            jg 0x4000a50	      3627	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10
0x4000bd3	        0x498b7f30	            mov rdi, qword [r15 + 0x30] 	      3642	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_5	IF_12
0x4000bd7	    0x4c8b2d000000	            mov r13, qword [0x04000bde] 	      3642	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_5	IF_12
0x4000bde	          0x4885ff	                           test rdi, rdi	      3642	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_5	IF_12
0x4000be1	     0xf8411ffffff	                            je 0x4000af8	      3642	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_5	IF_12
0x4000be7	          0x4c89f6	                            mov rsi, r14	      3644	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_5	IF_12	CALL_17
0x4000bea	    0x480335000000	             add rsi, qword [0x04000bf1]	      3644	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_5	IF_12	CALL_17
0x4000bf1	      0xba01040000	                          mov edx, 0x401	      3644	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_5	IF_12	CALL_17
0x4000bf6	            0x29da	                            sub edx, ebx	      3644	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_5	IF_12	CALL_17
0x4000bf8	      0xe843f4ffff	                    call sym.qf_fmt_text	      3644	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_5	IF_12	CALL_17
0x4000bfd	      0xe9e0feffff	                           jmp 0x4000ae2	      3644	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_5	IF_12	CALL_17
0x4000c02	    0x660f1f440000	                    nop word [rax + rax]	      3644	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_5	IF_12	CALL_17
0x4000c08	        0x418b7f18	            mov edi, dword [r15 + 0x18] 	      3603	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6
0x4000c0c	            0x85ff	                           test edi, edi	      3603	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6
0x4000c0e	     0xf85ec000000	                           jne 0x4000d00	      3603	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6
0x4000c14	    0x4c8b2d000000	            mov r13, qword [0x04000c1b] 	      3603	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6
0x4000c1b	    0x41be01000000	                             mov r14d, 1	      3621	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	CALL_12
0x4000c21	            0x31d2	                            xor edx, edx	      3621	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	CALL_12
0x4000c23	      0xbb01000000	                              mov ebx, 1	      3621	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	CALL_12
0x4000c28	            0xeb96	                           jmp 0x4000bc0	      3621	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	CALL_12
0x4000c2a	    0x660f1f440000	                    nop word [rax + rax]	      3621	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	CALL_12
0x4000c30	        0x498b7f38	            mov rdi, qword [r15 + 0x38] 	      3653	quickfix.c	FUNCTION_60	IF_3	WHILE_2	CALL_20
0x4000c34	      0x4889742408	                mov qword [rsp + 8], rsi	      3653	quickfix.c	FUNCTION_60	IF_3	WHILE_2	CALL_20
0x4000c39	        0x89542418	             mov dword [rsp + 0x18], edx	      3653	quickfix.c	FUNCTION_60	IF_3	WHILE_2	CALL_20
0x4000c3d	      0xe800000000	                          call 0x4000c42	      3653	quickfix.c	FUNCTION_60	IF_3	WHILE_2	CALL_20
0x4000c42	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      3653	quickfix.c	FUNCTION_60	IF_3	WHILE_2	CALL_20
0x4000c46	          0x4889c7	                            mov rdi, rax	      3653	quickfix.c	FUNCTION_60	IF_3	WHILE_2	CALL_20
0x4000c49	      0x488b742408	                mov rsi, qword [rsp + 8]	      3653	quickfix.c	FUNCTION_60	IF_3	WHILE_2	CALL_20
0x4000c4e	      0xe9ddfeffff	                           jmp 0x4000b30	      3653	quickfix.c	FUNCTION_60	IF_3	WHILE_2	CALL_20
0x4000c53	       0xf1f440000	                   nop dword [rax + rax]	      3653	quickfix.c	FUNCTION_60	IF_3	WHILE_2	CALL_20
0x4000c58	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      3665	quickfix.c	FUNCTION_60	IF_3	IF_15
0x4000c5e	     0xf84a1010000	                            je 0x4000e05	      3665	quickfix.c	FUNCTION_60	IF_3	IF_15
0x4000c64	      0xbf01000000	                              mov edi, 1	      3671	quickfix.c	FUNCTION_60	CALL_24
0x4000c69	      0xe800000000	                          call 0x4000c6e	      3671	quickfix.c	FUNCTION_60	CALL_24
0x4000c6e	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      3673	quickfix.c	FUNCTION_60	IF_16
0x4000c74	     0xf857cfdffff	                           jne 0x40009f6	      3673	quickfix.c	FUNCTION_60	IF_16
0x4000c7a	            0x31f6	                            xor esi, esi	      3679	quickfix.c	FUNCTION_60	IF_16	CALL_25
0x4000c7c	      0xb904000000	                              mov ecx, 4	      3679	quickfix.c	FUNCTION_60	IF_16	CALL_25
0x4000c81	      0xba00000000	                              mov edx, 0	      3679	quickfix.c	FUNCTION_60	IF_16	CALL_25
0x4000c86	      0xbf00000000	                              mov edi, 0	      3679	quickfix.c	FUNCTION_60	IF_16	CALL_25
0x4000c8b	    0x830500000000	               add dword [0x04000c92], 1	      3678	quickfix.c	FUNCTION_60	IF_16
0x4000c92	      0xe800000000	                          call 0x4000c97	      3679	quickfix.c	FUNCTION_60	IF_16	CALL_25
0x4000c97	    0x4c8b05000000	              mov r8, qword [0x04000c9e]	      3680	quickfix.c	FUNCTION_60	IF_16
0x4000c9e	            0x31c9	                            xor ecx, ecx	      3683	quickfix.c	FUNCTION_60	IF_16	CALL_26
0x4000ca0	            0x31d2	                            xor edx, edx	      3683	quickfix.c	FUNCTION_60	IF_16	CALL_26
0x4000ca2	      0xbe00000000	                              mov esi, 0	      3683	quickfix.c	FUNCTION_60	IF_16	CALL_26
0x4000ca7	      0xbf0a000000	                            mov edi, 0xa	      3683	quickfix.c	FUNCTION_60	IF_16	CALL_26
0x4000cac	    0xc70500000000	               mov dword [0x04000cb6], 1	      3682	quickfix.c	FUNCTION_60	IF_16
0x4000cb6	    0x41c780401500	              mov dword [r8 + 0x1540], 0	      3680	quickfix.c	FUNCTION_60	IF_16
0x4000cc1	      0xe800000000	                          call 0x4000cc6	      3683	quickfix.c	FUNCTION_60	IF_16	CALL_26
0x4000cc6	    0x4c8b05000000	              mov r8, qword [0x04000ccd]	      3685	quickfix.c	FUNCTION_60	IF_16	CALL_27
0x4000ccd	            0x31c9	                            xor ecx, ecx	      3685	quickfix.c	FUNCTION_60	IF_16	CALL_27
0x4000ccf	            0x31d2	                            xor edx, edx	      3685	quickfix.c	FUNCTION_60	IF_16	CALL_27
0x4000cd1	      0xbe00000000	                              mov esi, 0	      3685	quickfix.c	FUNCTION_60	IF_16	CALL_27
0x4000cd6	      0xbf0d000000	                            mov edi, 0xd	      3685	quickfix.c	FUNCTION_60	IF_16	CALL_27
0x4000cdb	      0xe800000000	                          call 0x4000ce0	      3685	quickfix.c	FUNCTION_60	IF_16	CALL_27
0x4000ce0	      0xbf28000000	                           mov edi, 0x28	      3691	quickfix.c	FUNCTION_60	IF_16	CALL_28
0x4000ce5	    0x832d00000000	               sub dword [0x04000cec], 1	      3688	quickfix.c	FUNCTION_60	IF_16
0x4000cec	    0xc70500000000	               mov dword [0x04000cf6], 0	      3687	quickfix.c	FUNCTION_60	IF_16
0x4000cf6	      0xe800000000	                          call 0x4000cfb	      3691	quickfix.c	FUNCTION_60	IF_16	CALL_28
0x4000cfb	      0xe9f6fcffff	                           jmp 0x40009f6	      3691	quickfix.c	FUNCTION_60	IF_16	CALL_28
0x4000d00	      0xe800000000	                          call 0x4000d05	      3604	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	CALL_5
0x4000d05	          0x4885c0	                           test rax, rax	      3604	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	CALL_5
0x4000d08	          0x4889c3	                            mov rbx, rax	      3604	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	CALL_5
0x4000d0b	     0xf8403ffffff	                            je 0x4000c14	      3604	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	CALL_5
0x4000d11	    0x488bb8980000	            mov rdi, qword [rax + 0x98] 	      3605	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6
0x4000d18	          0x4885ff	                           test rdi, rdi	      3605	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6
0x4000d1b	     0xf84f3feffff	                            je 0x4000c14	      3605	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6
0x4000d21	      0x41807f4201	                cmp byte [r15 + 0x42], 1	      3607	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	IF_7
0x4000d26	     0xf84c0000000	                            je 0x4000dec	      3607	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	IF_7
0x4000d2c	    0x488bb8900000	            mov rdi, qword [rax + 0x90] 	      3612	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	ELSE_3	IF_8
0x4000d33	          0x4885ff	                           test rdi, rdi	      3612	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	ELSE_3	IF_8
0x4000d36	            0x7409	                            je 0x4000d41	      3612	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	ELSE_3	IF_8
0x4000d38	      0xe800000000	                          call 0x4000d3d	      3613	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	ELSE_3	IF_8	CALL_8
0x4000d3d	            0x85c0	                           test eax, eax	      3613	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	ELSE_3	IF_8	CALL_8
0x4000d3f	            0x741a	                            je 0x4000d5b	      3613	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	ELSE_3	IF_8	CALL_8
0x4000d41	      0x807c242000	                cmp byte [rsp + 0x20], 0	      3615	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	ELSE_3	IF_8	IF_9
0x4000d46	     0xf848c000000	                            je 0x4000dd8	      3615	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	ELSE_3	IF_8	IF_9
0x4000d4c	      0x488d742420	                   lea rsi, [rsp + 0x20]	      3617	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	ELSE_3	IF_8	CALL_10
0x4000d51	            0x31d2	                            xor edx, edx	      3617	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	ELSE_3	IF_8	CALL_10
0x4000d53	          0x4889df	                            mov rdi, rbx	      3617	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	ELSE_3	IF_8	CALL_10
0x4000d56	      0xe800000000	                          call 0x4000d5b	      3617	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	ELSE_3	IF_8	CALL_10
0x4000d5b	    0x488bb3980000	            mov rsi, qword [rbx + 0x98] 	       110	string3.h	FUNCTION_121	CALL_3
0x4000d62	      0xe935feffff	                           jmp 0x4000b9c	       110	string3.h	FUNCTION_121	CALL_3
0x4000d67	    0x660f1f840000	                    nop word [rax + rax]	       110	string3.h	FUNCTION_121	CALL_3
0x4000d70	    0x483935000000	            cmp qword [0x04000d77], rsi 	      3567	quickfix.c	FUNCTION_60	IF_1	IF_2
0x4000d77	          0x4889f0	                            mov rax, rsi	      3567	quickfix.c	FUNCTION_60	IF_1	IF_2
0x4000d7a	            0x7427	                            je 0x4000da3	      3567	quickfix.c	FUNCTION_60	IF_1	IF_2
0x4000d7c	      0xbf00000000	                              mov edi, 0	      3569	quickfix.c	FUNCTION_60	IF_1	IF_2	CALL_1
0x4000d81	      0xe800000000	                          call 0x4000d86	      3569	quickfix.c	FUNCTION_60	IF_1	IF_2	CALL_1
0x4000d86	      0xe975fcffff	                           jmp 0x4000a00	      3570	quickfix.c	FUNCTION_60	IF_1	IF_2
0x4000d8b	       0xf1f440000	                   nop dword [rax + rax]	      3570	quickfix.c	FUNCTION_60	IF_1	IF_2
0x4000d90	            0x31f6	                            xor esi, esi	      3575	quickfix.c	FUNCTION_60	IF_1	CALL_2
0x4000d92	      0xbf01000000	                              mov edi, 1	      3575	quickfix.c	FUNCTION_60	IF_1	CALL_2
0x4000d97	      0xe800000000	                          call 0x4000d9c	      3575	quickfix.c	FUNCTION_60	IF_1	CALL_2
0x4000d9c	    0x488b05000000	            mov rax, qword [0x04000da3] 	      3574	quickfix.c	FUNCTION_60	IF_1	WHILE_1
0x4000da3	        0xf6401001	               test byte [rax + 0x10], 1	      3574	quickfix.c	FUNCTION_60	IF_1	WHILE_1
0x4000da7	            0x74e7	                            je 0x4000d90	      3574	quickfix.c	FUNCTION_60	IF_1	WHILE_1
0x4000da9	      0x4963442408	            movsxd rax, dword [r12 + 8] 	      3579	quickfix.c	FUNCTION_60	IF_3
0x4000dae	      0x413b442404	                cmp eax, dword [r12 + 4]	      3579	quickfix.c	FUNCTION_60	IF_3
0x4000db3	            0x7d65	                           jge 0x4000e1a	      3579	quickfix.c	FUNCTION_60	IF_3
0x4000db5	    0x488d0cc50000	                        lea rcx, [rax*8]	      3588	quickfix.c	FUNCTION_60	IF_3	IF_4
0x4000dbd	          0x4889c2	                            mov rdx, rax	      3588	quickfix.c	FUNCTION_60	IF_3	IF_4
0x4000dc0	      0xc644242000	                mov byte [rsp + 0x20], 0	      3583	quickfix.c	FUNCTION_60	IF_3
0x4000dc5	        0x48c1e207	                              shl rdx, 7	      3588	quickfix.c	FUNCTION_60	IF_3	IF_4
0x4000dc9	            0x31ed	                            xor ebp, ebp	      3589	quickfix.c	FUNCTION_60	IF_3	IF_4
0x4000dcb	          0x4829ca	                            sub rdx, rcx	      3588	quickfix.c	FUNCTION_60	IF_3	IF_4
0x4000dce	      0x4d8b7c1418	      mov r15, qword [r12 + rdx + 0x18] 	      3588	quickfix.c	FUNCTION_60	IF_3	IF_4
0x4000dd3	      0xe99efdffff	                           jmp 0x4000b76	      3588	quickfix.c	FUNCTION_60	IF_3	IF_4
0x4000dd8	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3616	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	ELSE_3	IF_8	CALL_9
0x4000ddd	      0xbe00100000	                         mov esi, 0x1000	      3616	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	ELSE_3	IF_8	CALL_9
0x4000de2	      0xe800000000	                          call 0x4000de7	      3616	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	ELSE_3	IF_8	CALL_9
0x4000de7	      0xe960ffffff	                           jmp 0x4000d4c	      3616	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	ELSE_3	IF_8	CALL_9
0x4000dec	      0xe800000000	                          call 0x4000df1	      3608	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	CALL_7
0x4000df1	    0x488b3d000000	            mov rdi, qword [0x04000df8] 	       110	string3.h	FUNCTION_121	CALL_3
0x4000df8	          0x4889c6	                            mov rsi, rax	       110	string3.h	FUNCTION_121	CALL_3
0x4000dfb	      0xe800000000	                          call 0x4000e00	       110	string3.h	FUNCTION_121	CALL_3
0x4000e00	      0xe9a3fdffff	                           jmp 0x4000ba8	       110	string3.h	FUNCTION_121	CALL_3
0x4000e05	        0x488d7d01	                      lea rdi, [rbp + 1]	      3667	quickfix.c	FUNCTION_60	IF_3	CALL_23
0x4000e09	            0x31f6	                            xor esi, esi	      3667	quickfix.c	FUNCTION_60	IF_3	CALL_23
0x4000e0b	      0xe800000000	                          call 0x4000e10	      3667	quickfix.c	FUNCTION_60	IF_3	CALL_23
0x4000e10	      0xe94ffeffff	                           jmp 0x4000c64	      3667	quickfix.c	FUNCTION_60	IF_3	CALL_23
0x4000e15	      0xe800000000	                          call 0x4000e1a	      3696	quickfix.c	FUNCTION_60
0x4000e1a	      0xbf01000000	                              mov edi, 1	      3671	quickfix.c	FUNCTION_60	CALL_24
0x4000e1f	      0xe800000000	                          call 0x4000e24	      3671	quickfix.c	FUNCTION_60	CALL_24
0x4000e24	      0xe951feffff	                           jmp 0x4000c7a	      3671	quickfix.c	FUNCTION_60	CALL_24
qf_free_items	CALL,6:ELSE,0:DO,0:WHILE,1:FOR,0:SWITCH,0:IF,2:functions,0	76
0x40001c0	            0x4157	                                push r15	      2980	quickfix.c	FUNCTION_43
0x40001c2	            0x4156	                                push r14	      2980	quickfix.c	FUNCTION_43
0x40001c4	            0x4155	                                push r13	      2980	quickfix.c	FUNCTION_43
0x40001c6	            0x4154	                                push r12	      2980	quickfix.c	FUNCTION_43
0x40001c8	          0x4989fc	                            mov r12, rdi	      2980	quickfix.c	FUNCTION_43
0x40001cb	              0x55	                                push rbp	      2980	quickfix.c	FUNCTION_43
0x40001cc	          0x4863ee	                         movsxd rbp, esi	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x40001cf	              0x53	                                push rbx	      2980	quickfix.c	FUNCTION_43
0x40001d0	    0x488d04ed0000	                        lea rax, [rbp*8]	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x40001d8	          0x4889eb	                            mov rbx, rbp	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x40001db	        0x48c1e307	                              shl rbx, 7	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x40001df	        0x4883ec08	                              sub rsp, 8	      2980	quickfix.c	FUNCTION_43
0x40001e3	          0x4829c3	                            sub rbx, rax	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x40001e6	          0x4801fb	                            add rbx, rdi	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x40001e9	          0x8b4330	            mov eax, dword [rbx + 0x30] 	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x40001ec	            0x85c0	                           test eax, eax	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x40001ee	            0x7474	                            je 0x4000264	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x40001f0	        0x4c8b6b18	            mov r13, qword [rbx + 0x18] 	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x40001f4	          0x4d85ed	                           test r13, r13	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x40001f7	            0x746b	                            je 0x4000264	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x40001f9	          0x4531ff	                          xor r15d, r15d	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x40001fc	            0xeb1a	                           jmp 0x4000218	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x40001fe	            0x6690	                                     nop	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x4000200	    0x41bf01000000	                             mov r15d, 1	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x4000206	        0x836b3001	               sub dword [rbx + 0x30], 1	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x400020a	        0x4c897318	             mov qword [rbx + 0x18], r14	      3003	quickfix.c	FUNCTION_43	WHILE_1
0x400020e	            0x7454	                            je 0x4000264	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x4000210	          0x4d85f6	                           test r14, r14	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x4000213	          0x4d89f5	                            mov r13, r14	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x4000216	            0x744c	                            je 0x4000264	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x4000218	          0x4585ff	                         test r15d, r15d	      2990	quickfix.c	FUNCTION_43	WHILE_1	IF_1
0x400021b	        0x4d8b7500	                    mov r14, qword [r13]	      2989	quickfix.c	FUNCTION_43	WHILE_1
0x400021f	            0x75df	                           jne 0x4000200	      2990	quickfix.c	FUNCTION_43	WHILE_1	IF_1
0x4000221	        0x498b7d28	            mov rdi, qword [r13 + 0x28] 	      2992	quickfix.c	FUNCTION_43	WHILE_1	IF_1	CALL_1
0x4000225	          0x4531ff	                          xor r15d, r15d	      2995	quickfix.c	FUNCTION_43	WHILE_1	IF_1
0x4000228	      0xe800000000	                          call 0x400022d	      2992	quickfix.c	FUNCTION_43	WHILE_1	IF_1	CALL_1
0x400022d	        0x498b7d38	            mov rdi, qword [r13 + 0x38] 	      2993	quickfix.c	FUNCTION_43	WHILE_1	IF_1	CALL_2
0x4000231	      0xe800000000	                          call 0x4000236	      2993	quickfix.c	FUNCTION_43	WHILE_1	IF_1	CALL_2
0x4000236	        0x498b7d30	            mov rdi, qword [r13 + 0x30] 	      2994	quickfix.c	FUNCTION_43	WHILE_1	IF_1	CALL_3
0x400023a	      0xe800000000	                          call 0x400023f	      2994	quickfix.c	FUNCTION_43	WHILE_1	IF_1	CALL_3
0x400023f	          0x4d39ee	                            cmp r14, r13	      2995	quickfix.c	FUNCTION_43	WHILE_1	IF_1
0x4000242	          0x4c89ef	                            mov rdi, r13	      2996	quickfix.c	FUNCTION_43	WHILE_1	IF_1	CALL_4
0x4000245	        0x410f94c7	                               sete r15b	      2995	quickfix.c	FUNCTION_43	WHILE_1	IF_1
0x4000249	      0xe800000000	                          call 0x400024e	      2996	quickfix.c	FUNCTION_43	WHILE_1	IF_1	CALL_4
0x400024e	          0x4d39ee	                            cmp r14, r13	      2997	quickfix.c	FUNCTION_43	WHILE_1	IF_1	IF_2
0x4000251	            0x75b3	                           jne 0x4000206	      2997	quickfix.c	FUNCTION_43	WHILE_1	IF_1	IF_2
0x4000253	    0xc74330010000	               mov dword [rbx + 0x30], 1	      3001	quickfix.c	FUNCTION_43	WHILE_1	IF_1	IF_2
0x400025a	        0x836b3001	               sub dword [rbx + 0x30], 1	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x400025e	        0x4c897318	             mov qword [rbx + 0x18], r14	      3003	quickfix.c	FUNCTION_43	WHILE_1
0x4000262	            0x75ac	                           jne 0x4000210	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x4000264	    0x488d04ed0000	                        lea rax, [rbp*8]	      3007	quickfix.c	FUNCTION_43
0x400026c	        0x48c1e507	                              shl rbp, 7	      3007	quickfix.c	FUNCTION_43
0x4000270	          0x4829c5	                            sub rbp, rax	      3007	quickfix.c	FUNCTION_43
0x4000273	        0x498d1c2c	                    lea rbx, [r12 + rbp]	      3007	quickfix.c	FUNCTION_43
0x4000277	      0x498d7c2c50	            lea rdi, [r12 + rbp + 0x50] 	      3013	quickfix.c	FUNCTION_43	CALL_5
0x400027c	    0xc74334000000	               mov dword [rbx + 0x34], 0	      3007	quickfix.c	FUNCTION_43
0x4000283	    0x48c743180000	               mov qword [rbx + 0x18], 0	      3008	quickfix.c	FUNCTION_43
0x400028b	    0x48c743200000	               mov qword [rbx + 0x20], 0	      3009	quickfix.c	FUNCTION_43
0x4000293	    0x48c743280000	               mov qword [rbx + 0x28], 0	      3010	quickfix.c	FUNCTION_43
0x400029b	    0xc74338010000	               mov dword [rbx + 0x38], 1	      3011	quickfix.c	FUNCTION_43
0x40002a2	      0xe8d9feffff	             call sym.qf_clean_dir_stack	      3013	quickfix.c	FUNCTION_43	CALL_5
0x40002a7	      0x498d7c2c60	            lea rdi, [r12 + rbp + 0x60] 	      3015	quickfix.c	FUNCTION_43	CALL_6
0x40002ac	    0x48c743580000	               mov qword [rbx + 0x58], 0	      3014	quickfix.c	FUNCTION_43
0x40002b4	      0xe8c7feffff	             call sym.qf_clean_dir_stack	      3015	quickfix.c	FUNCTION_43	CALL_6
0x40002b9	    0x48c743680000	               mov qword [rbx + 0x68], 0	      3016	quickfix.c	FUNCTION_43
0x40002c1	    0xc74370000000	               mov dword [rbx + 0x70], 0	      3017	quickfix.c	FUNCTION_43
0x40002c8	    0xc74374000000	               mov dword [rbx + 0x74], 0	      3018	quickfix.c	FUNCTION_43
0x40002cf	    0xc74378000000	               mov dword [rbx + 0x78], 0	      3019	quickfix.c	FUNCTION_43
0x40002d6	        0x4883c408	                              add rsp, 8	      3020	quickfix.c	FUNCTION_43
0x40002da	              0x5b	                                 pop rbx	      3020	quickfix.c	FUNCTION_43
0x40002db	              0x5d	                                 pop rbp	      3020	quickfix.c	FUNCTION_43
0x40002dc	            0x415c	                                 pop r12	      3020	quickfix.c	FUNCTION_43
0x40002de	            0x415d	                                 pop r13	      3020	quickfix.c	FUNCTION_43
0x40002e0	            0x415e	                                 pop r14	      3020	quickfix.c	FUNCTION_43
0x40002e2	            0x415f	                                 pop r15	      3020	quickfix.c	FUNCTION_43
0x40002e4	              0xc3	                                     ret	      3020	quickfix.c	FUNCTION_43
set_errorlist	CALL,5:ELSE,2:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,5:functions,0	416
0x4008670	            0x4157	                                push r15	      5760	quickfix.c	FUNCTION_105
0x4008672	            0x4156	                                push r14	      5760	quickfix.c	FUNCTION_105
0x4008674	          0x4989f7	                            mov r15, rsi	      5760	quickfix.c	FUNCTION_105
0x4008677	            0x4155	                                push r13	      5760	quickfix.c	FUNCTION_105
0x4008679	            0x4154	                                push r12	      5760	quickfix.c	FUNCTION_105
0x400867b	          0x4189d6	                           mov r14d, edx	      5760	quickfix.c	FUNCTION_105
0x400867e	              0x55	                                push rbp	      5760	quickfix.c	FUNCTION_105
0x400867f	              0x53	                                push rbx	      5760	quickfix.c	FUNCTION_105
0x4008680	          0x4989cd	                            mov r13, rcx	      5760	quickfix.c	FUNCTION_105
0x4008683	          0x4889fb	                            mov rbx, rdi	      5760	quickfix.c	FUNCTION_105
0x4008686	          0x4d89c4	                             mov r12, r8	      5760	quickfix.c	FUNCTION_105
0x4008689	        0x4883ec18	                           sub rsp, 0x18	      5760	quickfix.c	FUNCTION_105
0x400868d	          0x4885ff	                           test rdi, rdi	      5764	quickfix.c	FUNCTION_105	IF_1
0x4008690	     0xf84ba020000	                            je 0x4008950	      5764	quickfix.c	FUNCTION_105	IF_1
0x4008696	      0xe8b58cffff	           call sym.ll_get_or_alloc_list	      5766	quickfix.c	FUNCTION_105	IF_1	CALL_1
0x400869b	          0x4885c0	                           test rax, rax	      5767	quickfix.c	FUNCTION_105	IF_1	IF_2
0x400869e	          0x4889c5	                            mov rbp, rax	      5766	quickfix.c	FUNCTION_105	IF_1	CALL_1
0x40086a1	     0xf84e1000000	                            je 0x4008788	      5767	quickfix.c	FUNCTION_105	IF_1	IF_2
0x40086a7	        0x4183fe66	                          cmp r14d, 0x66	      5771	quickfix.c	FUNCTION_105	IF_3
0x40086ab	     0xf84ef030000	                            je 0x4008aa0	      5771	quickfix.c	FUNCTION_105	IF_3
0x40086b1	          0x4d85e4	                           test r12, r12	      5776	quickfix.c	FUNCTION_105	ELSE_1	IF_4
0x40086b4	     0xf84b6020000	                            je 0x4008970	      5776	quickfix.c	FUNCTION_105	ELSE_1	IF_4
0x40086ba	        0x4183fe20	                          cmp r14d, 0x20	      5650	quickfix.c	FUNCTION_102	IF_1
0x40086be	          0x8b5d08	                mov ebx, dword [rbp + 8]	      5650	quickfix.c	FUNCTION_102	IF_1
0x40086c1	     0xf84d9000000	                            je 0x40087a0	      5650	quickfix.c	FUNCTION_102	IF_1
0x40086c7	          0x3b5d04	                cmp ebx, dword [rbp + 4]	      5650	quickfix.c	FUNCTION_102	IF_1
0x40086ca	     0xf84d0000000	                            je 0x40087a0	      5650	quickfix.c	FUNCTION_102	IF_1
0x40086d0	      0xbaffffffff	                     mov edx, 0xffffffff	      5484	quickfix.c	FUNCTION_97	IF_1	CALL_1
0x40086d5	      0xbe00000000	                              mov esi, 0	      5484	quickfix.c	FUNCTION_97	IF_1	CALL_1
0x40086da	          0x4c89e7	                            mov rdi, r12	      5484	quickfix.c	FUNCTION_97	IF_1	CALL_1
0x40086dd	      0xe800000000	                          call 0x40086e2	      5484	quickfix.c	FUNCTION_97	IF_1	CALL_1
0x40086e2	            0x31c9	                            xor ecx, ecx	      5648	quickfix.c	FUNCTION_102
0x40086e4	          0x4885c0	                           test rax, rax	      5484	quickfix.c	FUNCTION_97	IF_1	CALL_1
0x40086e7	            0x7442	                            je 0x400872b	      5484	quickfix.c	FUNCTION_97	IF_1	CALL_1
0x40086e9	            0x8b10	                    mov edx, dword [rax]	      5487	quickfix.c	FUNCTION_97	IF_1	IF_2
0x40086eb	          0x83fa01	                              cmp edx, 1	      5487	quickfix.c	FUNCTION_97	IF_1	IF_2
0x40086ee	     0xf84d7000000	                            je 0x40087cb	      5487	quickfix.c	FUNCTION_97	IF_1	IF_2
0x40086f4	          0x83fa02	                              cmp edx, 2	      5508	quickfix.c	FUNCTION_97	IF_1	ELSE_3	IF_7
0x40086f7	     0xf858b000000	                           jne 0x4008788	      5508	quickfix.c	FUNCTION_97	IF_1	ELSE_3	IF_7
0x40086fd	        0x488b4008	                mov rax, qword [rax + 8]	      5509	quickfix.c	FUNCTION_97	IF_1	ELSE_3	IF_7
0x4008701	          0x4885c0	                           test rax, rax	      5509	quickfix.c	FUNCTION_97	IF_1	ELSE_3	IF_7
0x4008704	     0xf847e000000	                            je 0x4008788	      5509	quickfix.c	FUNCTION_97	IF_1	ELSE_3	IF_7
0x400870a	          0x803824	                    cmp byte [rax], 0x24	      5510	quickfix.c	FUNCTION_97	IF_1	ELSE_3	IF_7	CALL_2
0x400870d	            0x7579	                           jne 0x4008788	      5510	quickfix.c	FUNCTION_97	IF_1	ELSE_3	IF_7	CALL_2
0x400870f	        0x80780100	                   cmp byte [rax + 1], 0	      5510	quickfix.c	FUNCTION_97	IF_1	ELSE_3	IF_7	CALL_2
0x4008713	            0x7573	                           jne 0x4008788	      5510	quickfix.c	FUNCTION_97	IF_1	ELSE_3	IF_7	CALL_2
0x4008715	          0x8b5d04	                mov ebx, dword [rbp + 4]	      5512	quickfix.c	FUNCTION_97	IF_1	ELSE_3	IF_7	IF_8
0x4008718	            0x85db	                           test ebx, ebx	      5512	quickfix.c	FUNCTION_97	IF_1	ELSE_3	IF_7	IF_8
0x400871a	     0xf8e60030000	                           jle 0x4008a80	      5512	quickfix.c	FUNCTION_97	IF_1	ELSE_3	IF_7	IF_8
0x4008720	          0x83eb01	                              sub ebx, 1	      5513	quickfix.c	FUNCTION_97	IF_1	ELSE_3	IF_7	IF_8
0x4008723	            0x85c9	                           test ecx, ecx	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x4008725	     0xf853d020000	                           jne 0x4008968	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x400872b	      0xbaffffffff	                     mov edx, 0xffffffff	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x4008730	      0xbe00000000	                              mov esi, 0	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x4008735	          0x4c89e7	                            mov rdi, r12	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x4008738	      0xe800000000	                          call 0x400873d	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x400873d	          0x4885c0	                           test rax, rax	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x4008740	     0xf8422030000	                            je 0x4008a68	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x4008746	          0x833801	                      cmp dword [rax], 1	      5526	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	IF_11
0x4008749	            0x753d	                           jne 0x4008788	      5526	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	IF_11
0x400874b	          0x8b5504	                mov edx, dword [rbp + 4]	      4228	quickfix.c	FUNCTION_72	FOR_1
0x400874e	        0x488b4008	                mov rax, qword [rax + 8]	      5529	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_4
0x4008752	            0x85d2	                           test edx, edx	      4228	quickfix.c	FUNCTION_72	FOR_1
0x4008754	            0x89c1	                            mov ecx, eax	      5529	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_4
0x4008756	            0x7e30	                           jle 0x4008788	      4228	quickfix.c	FUNCTION_72	FOR_1
0x4008758	          0x3b4510	            cmp eax, dword [rbp + 0x10] 	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x400875b	     0xf8467050000	                            je 0x4008cc8	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x4008761	    0x488d85880000	                   lea rax, [rbp + 0x88]	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x4008768	            0x31db	                            xor ebx, ebx	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x400876a	            0xeb11	                           jmp 0x400877d	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x400876c	         0xf1f4000	                         nop dword [rax]	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x4008770	        0x4883c078	                           add rax, 0x78	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x4008774	          0x3b4888	             cmp ecx, dword [rax - 0x78]	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x4008777	     0xf84eb020000	                            je 0x4008a68	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x400877d	          0x83c301	                              add ebx, 1	      4228	quickfix.c	FUNCTION_72	FOR_1
0x4008780	            0x39d3	                            cmp ebx, edx	      4228	quickfix.c	FUNCTION_72	FOR_1
0x4008782	            0x75ec	                           jne 0x4008770	      4228	quickfix.c	FUNCTION_72	FOR_1
0x4008784	         0xf1f4000	                         nop dword [rax]	      4228	quickfix.c	FUNCTION_72	FOR_1
0x4008788	            0x31c0	                            xor eax, eax	      5655	quickfix.c	FUNCTION_102	IF_2
0x400878a	        0x4883c418	                           add rsp, 0x18	      5786	quickfix.c	FUNCTION_105
0x400878e	              0x5b	                                 pop rbx	      5786	quickfix.c	FUNCTION_105
0x400878f	              0x5d	                                 pop rbp	      5786	quickfix.c	FUNCTION_105
0x4008790	            0x415c	                                 pop r12	      5786	quickfix.c	FUNCTION_105
0x4008792	            0x415d	                                 pop r13	      5786	quickfix.c	FUNCTION_105
0x4008794	            0x415e	                                 pop r14	      5786	quickfix.c	FUNCTION_105
0x4008796	            0x415f	                                 pop r15	      5786	quickfix.c	FUNCTION_105
0x4008798	              0xc3	                                     ret	      5786	quickfix.c	FUNCTION_105
0x4008799	     0xf1f80000000	                         nop dword [rax]	      5786	quickfix.c	FUNCTION_105
0x40087a0	      0xbaffffffff	                     mov edx, 0xffffffff	      5484	quickfix.c	FUNCTION_97	IF_1	CALL_1
0x40087a5	      0xbe00000000	                              mov esi, 0	      5484	quickfix.c	FUNCTION_97	IF_1	CALL_1
0x40087aa	          0x4c89e7	                            mov rdi, r12	      5484	quickfix.c	FUNCTION_97	IF_1	CALL_1
0x40087ad	      0xe800000000	                          call 0x40087b2	      5484	quickfix.c	FUNCTION_97	IF_1	CALL_1
0x40087b2	          0x4885c0	                           test rax, rax	      5484	quickfix.c	FUNCTION_97	IF_1	CALL_1
0x40087b5	     0xf849f010000	                            je 0x400895a	      5484	quickfix.c	FUNCTION_97	IF_1	CALL_1
0x40087bb	            0x8b10	                    mov edx, dword [rax]	      5487	quickfix.c	FUNCTION_97	IF_1	IF_2
0x40087bd	      0xb901000000	                              mov ecx, 1	      5484	quickfix.c	FUNCTION_97	IF_1	CALL_1
0x40087c2	          0x83fa01	                              cmp edx, 1	      5487	quickfix.c	FUNCTION_97	IF_1	IF_2
0x40087c5	     0xf8529ffffff	                           jne 0x40086f4	      5487	quickfix.c	FUNCTION_97	IF_1	IF_2
0x40087cb	        0x488b4008	                mov rax, qword [rax + 8]	      5490	quickfix.c	FUNCTION_97	IF_1	IF_2	IF_3
0x40087cf	          0x8d50ff	                      lea edx, [rax - 1]	      5491	quickfix.c	FUNCTION_97	IF_1	IF_2	IF_3
0x40087d2	          0x4885c0	                           test rax, rax	      5491	quickfix.c	FUNCTION_97	IF_1	IF_2	IF_3
0x40087d5	           0xf45da	                         cmovne ebx, edx	      5491	quickfix.c	FUNCTION_97	IF_1	IF_2	IF_3
0x40087d8	        0x4183fe20	                          cmp r14d, 0x20	      5493	quickfix.c	FUNCTION_97	IF_1	IF_2	IF_4
0x40087dc	     0xf84be030000	                            je 0x4008ba0	      5493	quickfix.c	FUNCTION_97	IF_1	IF_2	IF_4
0x40087e2	        0x4183fe61	                          cmp r14d, 0x61	      5493	quickfix.c	FUNCTION_97	IF_1	IF_2	IF_4
0x40087e6	     0xf84b4030000	                            je 0x4008ba0	      5493	quickfix.c	FUNCTION_97	IF_1	IF_2	IF_4
0x40087ec	            0x85db	                           test ebx, ebx	      5503	quickfix.c	FUNCTION_97	IF_1	IF_2	ELSE_1	IF_5
0x40087ee	            0x7898	                            js 0x4008788	      5503	quickfix.c	FUNCTION_97	IF_1	IF_2	ELSE_1	IF_5
0x40087f0	          0x3b5d04	                cmp ebx, dword [rbp + 4]	      5503	quickfix.c	FUNCTION_97	IF_1	IF_2	ELSE_1	IF_5
0x40087f3	            0x7d93	                           jge 0x4008788	      5503	quickfix.c	FUNCTION_97	IF_1	IF_2	ELSE_1	IF_5
0x40087f5	        0x4183fe20	                          cmp r14d, 0x20	      5505	quickfix.c	FUNCTION_97	IF_1	IF_2	ELSE_2	IF_6
0x40087f9	     0xf8424ffffff	                            je 0x4008723	      5505	quickfix.c	FUNCTION_97	IF_1	IF_2	ELSE_2	IF_6
0x40087ff	      0xbaffffffff	                     mov edx, 0xffffffff	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x4008804	      0xbe00000000	                              mov esi, 0	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x4008809	          0x4c89e7	                            mov rdi, r12	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x400880c	      0xe800000000	                          call 0x4008811	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x4008811	          0x4885c0	                           test rax, rax	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x4008814	     0xf852cffffff	                           jne 0x4008746	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x400881a	    0x660f1f440000	                    nop word [rax + rax]	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x4008820	      0xbaffffffff	                     mov edx, 0xffffffff	      5664	quickfix.c	FUNCTION_102	IF_4	CALL_3
0x4008825	      0xbe00000000	                              mov esi, 0	      5664	quickfix.c	FUNCTION_102	IF_4	CALL_3
0x400882a	          0x4c89e7	                            mov rdi, r12	      5664	quickfix.c	FUNCTION_102	IF_4	CALL_3
0x400882d	      0xe800000000	                          call 0x4008832	      5664	quickfix.c	FUNCTION_102	IF_4	CALL_3
0x4008832	          0x4531ff	                          xor r15d, r15d	      5646	quickfix.c	FUNCTION_102
0x4008835	          0x4885c0	                           test rax, rax	      5664	quickfix.c	FUNCTION_102	IF_4	CALL_3
0x4008838	            0x7409	                            je 0x4008843	      5664	quickfix.c	FUNCTION_102	IF_4	CALL_3
0x400883a	          0x833802	                      cmp dword [rax], 2	      5541	quickfix.c	FUNCTION_98	IF_1
0x400883d	     0xf847d030000	                            je 0x4008bc0	      5541	quickfix.c	FUNCTION_98	IF_1
0x4008843	      0xbaffffffff	                     mov edx, 0xffffffff	      5666	quickfix.c	FUNCTION_102	IF_5	CALL_5
0x4008848	      0xbe00000000	                              mov esi, 0	      5666	quickfix.c	FUNCTION_102	IF_5	CALL_5
0x400884d	          0x4c89e7	                            mov rdi, r12	      5666	quickfix.c	FUNCTION_102	IF_5	CALL_5
0x4008850	      0xe800000000	                          call 0x4008855	      5666	quickfix.c	FUNCTION_102	IF_5	CALL_5
0x4008855	          0x4885c0	                           test rax, rax	      5666	quickfix.c	FUNCTION_102	IF_5	CALL_5
0x4008858	            0x740c	                            je 0x4008866	      5666	quickfix.c	FUNCTION_102	IF_5	CALL_5
0x400885a	          0x4531ff	                          xor r15d, r15d	      5563	quickfix.c	FUNCTION_99	IF_1
0x400885d	          0x833805	                      cmp dword [rax], 5	      5562	quickfix.c	FUNCTION_99	IF_1
0x4008860	     0xf84aa030000	                            je 0x4008c10	      5562	quickfix.c	FUNCTION_99	IF_1
0x4008866	      0xbaffffffff	                     mov edx, 0xffffffff	      5668	quickfix.c	FUNCTION_102	IF_6	CALL_7
0x400886b	      0xbe00000000	                              mov esi, 0	      5668	quickfix.c	FUNCTION_102	IF_6	CALL_7
0x4008870	          0x4c89e7	                            mov rdi, r12	      5668	quickfix.c	FUNCTION_102	IF_6	CALL_7
0x4008873	      0xe800000000	                          call 0x4008878	      5668	quickfix.c	FUNCTION_102	IF_6	CALL_7
0x4008878	          0x4885c0	                           test rax, rax	      5668	quickfix.c	FUNCTION_102	IF_6	CALL_7
0x400887b	          0x4989c5	                            mov r13, rax	      5668	quickfix.c	FUNCTION_102	IF_6	CALL_7
0x400887e	     0xf84b4010000	                            je 0x4008a38	      5668	quickfix.c	FUNCTION_102	IF_6	CALL_7
0x4008884	      0xbaffffffff	                     mov edx, 0xffffffff	      5599	quickfix.c	FUNCTION_100	IF_1	CALL_1
0x4008889	      0xbe00000000	                              mov esi, 0	      5599	quickfix.c	FUNCTION_100	IF_1	CALL_1
0x400888e	          0x4c89e7	                            mov rdi, r12	      5599	quickfix.c	FUNCTION_100	IF_1	CALL_1
0x4008891	    0x4c8b3d000000	            mov r15, qword [0x04008898] 	      5594	quickfix.c	FUNCTION_100
0x4008898	      0xe800000000	                          call 0x400889d	      5599	quickfix.c	FUNCTION_100	IF_1	CALL_1
0x400889d	          0x4885c0	                           test rax, rax	      5599	quickfix.c	FUNCTION_100	IF_1	CALL_1
0x40088a0	     0xf8417010000	                            je 0x40089bd	      5599	quickfix.c	FUNCTION_100	IF_1	CALL_1
0x40088a6	          0x833802	                      cmp dword [rax], 2	      5601	quickfix.c	FUNCTION_100	IF_1	IF_2
0x40088a9	     0xf8401010000	                            je 0x40089b0	      5601	quickfix.c	FUNCTION_100	IF_1	IF_2
0x40088af	          0x4c89e7	                            mov rdi, r12	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x40088b2	      0xbaffffffff	                     mov edx, 0xffffffff	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x40088b7	      0xbe00000000	                              mov esi, 0	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x40088bc	      0xe800000000	                          call 0x40088c1	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x40088c1	          0x4885c0	                           test rax, rax	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x40088c4	          0x4989c4	                            mov r12, rax	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x40088c7	     0xf84bbfeffff	                            je 0x4008788	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x40088cd	          0x4c63eb	                         movsxd r13, ebx	      5628	quickfix.c	FUNCTION_101	CALL_1
0x40088d0	    0x4a8d14ed0000	                        lea rdx, [r13*8]	      5628	quickfix.c	FUNCTION_101	CALL_1
0x40088d8	          0x4c89e8	                            mov rax, r13	      5628	quickfix.c	FUNCTION_101	CALL_1
0x40088db	        0x48c1e007	                              shl rax, 7	      5628	quickfix.c	FUNCTION_101	CALL_1
0x40088df	          0x4829d0	                            sub rax, rdx	      5628	quickfix.c	FUNCTION_101	CALL_1
0x40088e2	      0x488b7c0548	      mov rdi, qword [rbp + rax + 0x48] 	      5628	quickfix.c	FUNCTION_101	CALL_1
0x40088e7	      0xe800000000	                          call 0x40088ec	      5628	quickfix.c	FUNCTION_101	CALL_1
0x40088ec	      0xe800000000	                          call 0x40088f1	      5629	quickfix.c	FUNCTION_101	CALL_2
0x40088f1	          0x4885c0	                           test rax, rax	      5630	quickfix.c	FUNCTION_101	IF_1
0x40088f4	          0x4889c3	                            mov rbx, rax	      5629	quickfix.c	FUNCTION_101	CALL_2
0x40088f7	            0x740b	                            je 0x4008904	      5630	quickfix.c	FUNCTION_101	IF_1
0x40088f9	          0x4889c6	                            mov rsi, rax	      5631	quickfix.c	FUNCTION_101	CALL_3
0x40088fc	          0x4c89e7	                            mov rdi, r12	      5631	quickfix.c	FUNCTION_101	CALL_3
0x40088ff	      0xe800000000	                          call 0x4008904	      5631	quickfix.c	FUNCTION_101	CALL_3
0x4008904	    0x4a8d04ed0000	                        lea rax, [r13*8]	      5632	quickfix.c	FUNCTION_101
0x400890c	          0x4c89ea	                            mov rdx, r13	      5632	quickfix.c	FUNCTION_101
0x400890f	        0x48c1e207	                              shl rdx, 7	      5632	quickfix.c	FUNCTION_101
0x4008913	          0x4829c2	                            sub rdx, rax	      5632	quickfix.c	FUNCTION_101
0x4008916	      0x48895c1548	      mov qword [rbp + rdx + 0x48], rbx 	      5632	quickfix.c	FUNCTION_101
0x400891b	    0x4a8d04ed0000	                        lea rax, [r13*8]	      3701	quickfix.c	FUNCTION_61
0x4008923	        0x49c1e507	                              shl r13, 7	      3701	quickfix.c	FUNCTION_61
0x4008927	          0x4929c5	                            sub r13, rax	      3701	quickfix.c	FUNCTION_61
0x400892a	      0xb801000000	                              mov eax, 1	      3701	quickfix.c	FUNCTION_61
0x400892f	    0x4a83842d8000	         add qword [rbp + r13 + 0x80], 1	      3701	quickfix.c	FUNCTION_61
0x4008938	        0x4883c418	                           add rsp, 0x18	      5786	quickfix.c	FUNCTION_105
0x400893c	              0x5b	                                 pop rbx	      5786	quickfix.c	FUNCTION_105
0x400893d	              0x5d	                                 pop rbp	      5786	quickfix.c	FUNCTION_105
0x400893e	            0x415c	                                 pop r12	      5786	quickfix.c	FUNCTION_105
0x4008940	            0x415d	                                 pop r13	      5786	quickfix.c	FUNCTION_105
0x4008942	            0x415e	                                 pop r14	      5786	quickfix.c	FUNCTION_105
0x4008944	            0x415f	                                 pop r15	      5786	quickfix.c	FUNCTION_105
0x4008946	              0xc3	                                     ret	      5786	quickfix.c	FUNCTION_105
0x4008947	    0x660f1f840000	                    nop word [rax + rax]	      5786	quickfix.c	FUNCTION_105
0x4008950	      0xbd00000000	                              mov ebp, 0	      5761	quickfix.c	FUNCTION_105
0x4008955	      0xe94dfdffff	                           jmp 0x40086a7	      5761	quickfix.c	FUNCTION_105
0x400895a	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      5654	quickfix.c	FUNCTION_102	IF_2
0x400895d	     0xf8425feffff	                            je 0x4008788	      5654	quickfix.c	FUNCTION_102	IF_2
0x4008963	       0xf1f440000	                   nop dword [rax + rax]	      5654	quickfix.c	FUNCTION_102	IF_2
0x4008968	            0x89d8	                            mov eax, ebx	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x400896a	      0xe91b010000	                           jmp 0x4008a8a	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x400896f	              0x90	                                     nop	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x4008970	          0x8b7508	                mov esi, dword [rbp + 8]	      5780	quickfix.c	FUNCTION_105	ELSE_2	CALL_4
0x4008973	          0x4589f0	                           mov r8d, r14d	      5780	quickfix.c	FUNCTION_105	ELSE_2	CALL_4
0x4008976	          0x4c89e9	                            mov rcx, r13	      5780	quickfix.c	FUNCTION_105	ELSE_2	CALL_4
0x4008979	          0x4c89fa	                            mov rdx, r15	      5780	quickfix.c	FUNCTION_105	ELSE_2	CALL_4
0x400897c	          0x4889ef	                            mov rdi, rbp	      5780	quickfix.c	FUNCTION_105	ELSE_2	CALL_4
0x400897f	      0xe8ccadffff	          call sym.qf_add_entries.isra.4	      5780	quickfix.c	FUNCTION_105	ELSE_2	CALL_4
0x4008984	          0x83f801	                              cmp eax, 1	      5781	quickfix.c	FUNCTION_105	ELSE_2	IF_5
0x4008987	     0xf85fdfdffff	                           jne 0x400878a	      5781	quickfix.c	FUNCTION_105	ELSE_2	IF_5
0x400898d	        0x48635508	            movsxd rdx, dword [rbp + 8] 	      3701	quickfix.c	FUNCTION_61
0x4008991	    0x488d0cd50000	                        lea rcx, [rdx*8]	      3701	quickfix.c	FUNCTION_61
0x4008999	        0x48c1e207	                              shl rdx, 7	      3701	quickfix.c	FUNCTION_61
0x400899d	          0x4829ca	                            sub rdx, rcx	      3701	quickfix.c	FUNCTION_61
0x40089a0	    0x488384158000	         add qword [rbp + rdx + 0x80], 1	      3701	quickfix.c	FUNCTION_61
0x40089a9	      0xe9dcfdffff	                           jmp 0x400878a	      3701	quickfix.c	FUNCTION_61
0x40089ae	            0x6690	                                     nop	      3701	quickfix.c	FUNCTION_61
0x40089b0	        0x4c8b7808	                mov r15, qword [rax + 8]	      5602	quickfix.c	FUNCTION_100	IF_1	IF_2
0x40089b4	          0x4d85ff	                           test r15, r15	      5601	quickfix.c	FUNCTION_100	IF_1	IF_2
0x40089b7	     0xf84f2feffff	                            je 0x40088af	      5601	quickfix.c	FUNCTION_100	IF_1	IF_2
0x40089bd	      0x41837d0005	                      cmp dword [r13], 5	      5608	quickfix.c	FUNCTION_100	IF_3
0x40089c2	     0xf85e7feffff	                           jne 0x40088af	      5608	quickfix.c	FUNCTION_100	IF_3
0x40089c8	      0x49837d0800	                  cmp qword [r13 + 8], 0	      5608	quickfix.c	FUNCTION_100	IF_3
0x40089cd	     0xf84dcfeffff	                            je 0x40088af	      5608	quickfix.c	FUNCTION_100	IF_3
0x40089d3	        0x4183fe72	                          cmp r14d, 0x72	      5611	quickfix.c	FUNCTION_100	IF_4
0x40089d7	     0xf84b4020000	                            je 0x4008c91	      5611	quickfix.c	FUNCTION_100	IF_4
0x40089dd	        0x4883ec08	                              sub rsp, 8	      5613	quickfix.c	FUNCTION_100	IF_5	CALL_3
0x40089e1	            0x31c9	                            xor ecx, ecx	      5613	quickfix.c	FUNCTION_100	IF_5	CALL_3
0x40089e3	            0x31d2	                            xor edx, edx	      5613	quickfix.c	FUNCTION_100	IF_5	CALL_3
0x40089e5	            0x6a00	                                  push 0	      5613	quickfix.c	FUNCTION_100	IF_5	CALL_3
0x40089e7	            0x6a00	                                  push 0	      5613	quickfix.c	FUNCTION_100	IF_5	CALL_3
0x40089e9	          0x4d89f9	                             mov r9, r15	      5613	quickfix.c	FUNCTION_100	IF_5	CALL_3
0x40089ec	            0x6a00	                                  push 0	      5613	quickfix.c	FUNCTION_100	IF_5	CALL_3
0x40089ee	            0x6a00	                                  push 0	      5613	quickfix.c	FUNCTION_100	IF_5	CALL_3
0x40089f0	          0x4d89e8	                             mov r8, r13	      5613	quickfix.c	FUNCTION_100	IF_5	CALL_3
0x40089f3	            0x6a00	                                  push 0	      5613	quickfix.c	FUNCTION_100	IF_5	CALL_3
0x40089f5	            0x89de	                            mov esi, ebx	      5613	quickfix.c	FUNCTION_100	IF_5	CALL_3
0x40089f7	          0x4889ef	                            mov rdi, rbp	      5613	quickfix.c	FUNCTION_100	IF_5	CALL_3
0x40089fa	      0xe8a190ffff	                    call sym.qf_init_ext	      5613	quickfix.c	FUNCTION_100	IF_5	CALL_3
0x40089ff	        0x4883c430	                           add rsp, 0x30	      5613	quickfix.c	FUNCTION_100	IF_5	CALL_3
0x4008a03	            0x85c0	                           test eax, eax	      5613	quickfix.c	FUNCTION_100	IF_5	CALL_3
0x4008a05	     0xf8ea4feffff	                           jle 0x40088af	      5613	quickfix.c	FUNCTION_100	IF_5	CALL_3
0x4008a0b	          0x4c89e7	                            mov rdi, r12	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x4008a0e	      0xbaffffffff	                     mov edx, 0xffffffff	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x4008a13	      0xbe00000000	                              mov esi, 0	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x4008a18	      0xe800000000	                          call 0x4008a1d	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x4008a1d	          0x4885c0	                           test rax, rax	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x4008a20	          0x4989c4	                            mov r12, rax	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x4008a23	     0xf85a4feffff	                           jne 0x40088cd	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x4008a29	          0x4c63eb	                         movsxd r13, ebx	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x4008a2c	      0xe9eafeffff	                           jmp 0x400891b	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x4008a31	     0xf1f80000000	                         nop dword [rax]	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x4008a38	          0x4c89e7	                            mov rdi, r12	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x4008a3b	      0xbaffffffff	                     mov edx, 0xffffffff	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x4008a40	      0xbe00000000	                              mov esi, 0	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x4008a45	      0xe800000000	                          call 0x4008a4a	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x4008a4a	          0x4885c0	                           test rax, rax	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x4008a4d	          0x4989c4	                            mov r12, rax	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x4008a50	     0xf8577feffff	                           jne 0x40088cd	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x4008a56	        0x4183ff01	                             cmp r15d, 1	      5673	quickfix.c	FUNCTION_102	IF_8
0x4008a5a	          0x4489f8	                           mov eax, r15d	      5673	quickfix.c	FUNCTION_102	IF_8
0x4008a5d	     0xf8527fdffff	                           jne 0x400878a	      5673	quickfix.c	FUNCTION_102	IF_8
0x4008a63	            0xebc4	                           jmp 0x4008a29	      5673	quickfix.c	FUNCTION_102	IF_8
0x4008a65	           0xf1f00	                         nop dword [rax]	      5673	quickfix.c	FUNCTION_102	IF_8
0x4008a68	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      5654	quickfix.c	FUNCTION_102	IF_2
0x4008a6b	     0xf85affdffff	                           jne 0x4008820	      5654	quickfix.c	FUNCTION_102	IF_2
0x4008a71	      0xe912fdffff	                           jmp 0x4008788	      5654	quickfix.c	FUNCTION_102	IF_2
0x4008a76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5654	quickfix.c	FUNCTION_102	IF_2
0x4008a80	            0x31c0	                            xor eax, eax	      5514	quickfix.c	FUNCTION_97	IF_1	ELSE_3	IF_7	ELSE_4	IF_9
0x4008a82	            0x85c9	                           test ecx, ecx	      5514	quickfix.c	FUNCTION_97	IF_1	ELSE_3	IF_7	ELSE_4	IF_9
0x4008a84	     0xf84fefcffff	                            je 0x4008788	      5514	quickfix.c	FUNCTION_97	IF_1	ELSE_3	IF_7	ELSE_4	IF_9
0x4008a8a	          0x894508	                mov dword [rbp + 8], eax	      5659	quickfix.c	FUNCTION_102	IF_3
0x4008a8d	          0x4c89ee	                            mov rsi, r13	      5660	quickfix.c	FUNCTION_102	IF_3	CALL_2
0x4008a90	          0x4889ef	                            mov rdi, rbp	      5660	quickfix.c	FUNCTION_102	IF_3	CALL_2
0x4008a93	      0xe8287bffff	                    call sym.qf_new_list	      5660	quickfix.c	FUNCTION_102	IF_3	CALL_2
0x4008a98	          0x8b5d08	                mov ebx, dword [rbp + 8]	      5661	quickfix.c	FUNCTION_102	IF_3
0x4008a9b	      0xe980fdffff	                           jmp 0x4008820	      5661	quickfix.c	FUNCTION_102	IF_3
0x4008aa0	          0x4889ef	                            mov rdi, rbp	      5701	quickfix.c	FUNCTION_104	CALL_1
0x4008aa3	      0xe85887ffff	                    call sym.qf_find_win	      5701	quickfix.c	FUNCTION_104	CALL_1
0x4008aa8	          0x4885c0	                           test rax, rax	      5705	quickfix.c	FUNCTION_104	IF_1
0x4008aab	            0x7416	                            je 0x4008ac3	      5705	quickfix.c	FUNCTION_104	IF_1
0x4008aad	          0x8b7508	                mov esi, dword [rbp + 8]	      5708	quickfix.c	FUNCTION_104	IF_1	IF_2
0x4008ab0	          0x3b7504	                cmp esi, dword [rbp + 4]	      5708	quickfix.c	FUNCTION_104	IF_1	IF_2
0x4008ab3	     0xf8ce7010000	                            jl 0x4008ca0	      5708	quickfix.c	FUNCTION_104	IF_1	IF_2
0x4008ab9	            0x31f6	                            xor esi, esi	      5710	quickfix.c	FUNCTION_104	IF_1	CALL_3
0x4008abb	          0x4889ef	                            mov rdi, rbp	      5710	quickfix.c	FUNCTION_104	IF_1	CALL_3
0x4008abe	      0xe8ed8effff	               call sym.qf_update_buffer	      5710	quickfix.c	FUNCTION_104	IF_1	CALL_3
0x4008ac3	          0x4885db	                           test rbx, rbx	      5713	quickfix.c	FUNCTION_104	IF_3
0x4008ac6	     0xf84b4000000	                            je 0x4008b80	      5713	quickfix.c	FUNCTION_104	IF_3
0x4008acc	        0x488b7b08	                mov rdi, qword [rbx + 8]	      5713	quickfix.c	FUNCTION_104	IF_3
0x4008ad0	      0xe800000000	                          call 0x4008ad5	      5713	quickfix.c	FUNCTION_104	IF_3
0x4008ad5	            0x85c0	                           test eax, eax	      5713	quickfix.c	FUNCTION_104	IF_3
0x4008ad7	            0x7447	                            je 0x4008b20	      5713	quickfix.c	FUNCTION_104	IF_3
0x4008ad9	    0x4883bb501900	             cmp qword [rbx + 0x1950], 0	      5713	quickfix.c	FUNCTION_104	IF_3
0x4008ae1	            0x743d	                            je 0x4008b20	      5713	quickfix.c	FUNCTION_104	IF_3
0x4008ae3	    0x4c8b25000000	            mov r12, qword [0x04008aea] 	      5687	quickfix.c	FUNCTION_103	CALL_1
0x4008aea	          0x4d85e4	                           test r12, r12	      5687	quickfix.c	FUNCTION_103	CALL_1
0x4008aed	            0x7513	                           jne 0x4008b02	      5687	quickfix.c	FUNCTION_103	CALL_1
0x4008aef	            0xeb2f	                           jmp 0x4008b20	      5687	quickfix.c	FUNCTION_103	CALL_1
0x4008af1	     0xf1f80000000	                         nop dword [rax]	      5687	quickfix.c	FUNCTION_103	CALL_1
0x4008af8	      0x4d8b642420	            mov r12, qword [r12 + 0x20] 	      5687	quickfix.c	FUNCTION_103	CALL_1
0x4008afd	          0x4d85e4	                           test r12, r12	      5687	quickfix.c	FUNCTION_103	CALL_1
0x4008b00	            0x741e	                            je 0x4008b20	      5687	quickfix.c	FUNCTION_103	CALL_1
0x4008b02	    0x493bac244819	          cmp rbp, qword [r12 + 0x1948] 	      5688	quickfix.c	FUNCTION_103	IF_1	CALL_2
0x4008b0a	            0x75ec	                           jne 0x4008af8	      5688	quickfix.c	FUNCTION_103	IF_1	CALL_2
0x4008b0c	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      5688	quickfix.c	FUNCTION_103	IF_1	CALL_2
0x4008b11	      0xe800000000	                          call 0x4008b16	      5688	quickfix.c	FUNCTION_103	IF_1	CALL_2
0x4008b16	            0x85c0	                           test eax, eax	      5688	quickfix.c	FUNCTION_103	IF_1	CALL_2
0x4008b18	            0x75de	                           jne 0x4008af8	      5688	quickfix.c	FUNCTION_103	IF_1	CALL_2
0x4008b1a	          0x4d89e5	                            mov r13, r12	      5688	quickfix.c	FUNCTION_103	IF_1	CALL_2
0x4008b1d	            0xeb07	                           jmp 0x4008b26	      5688	quickfix.c	FUNCTION_103	IF_1	CALL_2
0x4008b1f	              0x90	                                     nop	      5688	quickfix.c	FUNCTION_103	IF_1	CALL_2
0x4008b20	          0x4989dc	                            mov r12, rbx	      5688	quickfix.c	FUNCTION_103	IF_1	CALL_2
0x4008b23	          0x4531ed	                          xor r13d, r13d	      5702	quickfix.c	FUNCTION_104
0x4008b26	          0x4c89e7	                            mov rdi, r12	      5723	quickfix.c	FUNCTION_104	CALL_5
0x4008b29	      0xe800000000	                          call 0x4008b2e	      5723	quickfix.c	FUNCTION_104	CALL_5
0x4008b2e	        0x488b7b08	                mov rdi, qword [rbx + 8]	      5730	quickfix.c	FUNCTION_104	ELSE_1	IF_6
0x4008b32	      0xe800000000	                          call 0x4008b37	      5730	quickfix.c	FUNCTION_104	ELSE_1	IF_6
0x4008b37	            0x85c0	                           test eax, eax	      5730	quickfix.c	FUNCTION_104	ELSE_1	IF_6
0x4008b39	            0x745a	                            je 0x4008b95	      5730	quickfix.c	FUNCTION_104	ELSE_1	IF_6
0x4008b3b	    0x4883bb501900	             cmp qword [rbx + 0x1950], 0	      5730	quickfix.c	FUNCTION_104	ELSE_1	IF_6
0x4008b43	            0x7450	                            je 0x4008b95	      5730	quickfix.c	FUNCTION_104	ELSE_1	IF_6
0x4008b45	      0xe8d678ffff	                    call sym.ll_new_list	      5734	quickfix.c	FUNCTION_104	ELSE_1	IF_6	CALL_6
0x4008b4a	    0x488dbb501900	                 lea rdi, [rbx + 0x1950]	      5737	quickfix.c	FUNCTION_104	ELSE_1	IF_6	CALL_7
0x4008b51	          0x4889c5	                            mov rbp, rax	      5734	quickfix.c	FUNCTION_104	ELSE_1	IF_6	CALL_6
0x4008b54	      0xe86778ffff	                    call sym.ll_free_all	      5737	quickfix.c	FUNCTION_104	ELSE_1	IF_6	CALL_7
0x4008b59	          0x4d85ed	                           test r13, r13	      5740	quickfix.c	FUNCTION_104	ELSE_1	IF_6	IF_7
0x4008b5c	    0x4889ab501900	          mov qword [rbx + 0x1950], rbp 	      5739	quickfix.c	FUNCTION_104	ELSE_1	IF_6
0x4008b63	            0x7430	                            je 0x4008b95	      5740	quickfix.c	FUNCTION_104	ELSE_1	IF_6	IF_7
0x4008b65	    0x4989ad481900	          mov qword [r13 + 0x1948], rbp 	      5742	quickfix.c	FUNCTION_104	ELSE_1	IF_6	IF_7
0x4008b6c	      0xb801000000	                              mov eax, 1	      5762	quickfix.c	FUNCTION_105
0x4008b71	        0x83450001	                      add dword [rbp], 1	      5743	quickfix.c	FUNCTION_104	ELSE_1	IF_6	IF_7
0x4008b75	      0xe910fcffff	                           jmp 0x400878a	      5743	quickfix.c	FUNCTION_104	ELSE_1	IF_6	IF_7
0x4008b7a	    0x660f1f440000	                    nop word [rax + rax]	      5743	quickfix.c	FUNCTION_104	ELSE_1	IF_6	IF_7
0x4008b80	            0x31ff	                            xor edi, edi	      5723	quickfix.c	FUNCTION_104	CALL_5
0x4008b82	      0xe800000000	                          call 0x4008b87	      5723	quickfix.c	FUNCTION_104	CALL_5
0x4008b87	    0xc74508000000	                  mov dword [rbp + 8], 0	      5727	quickfix.c	FUNCTION_104	IF_5
0x4008b8e	    0xc74504000000	                  mov dword [rbp + 4], 0	      5728	quickfix.c	FUNCTION_104	IF_5
0x4008b95	      0xb801000000	                              mov eax, 1	      5762	quickfix.c	FUNCTION_105
0x4008b9a	      0xe9ebfbffff	                           jmp 0x400878a	      5762	quickfix.c	FUNCTION_105
0x4008b9f	              0x90	                                     nop	      5762	quickfix.c	FUNCTION_105
0x4008ba0	          0x395d04	                cmp dword [rbp + 4], ebx	      5493	quickfix.c	FUNCTION_97	IF_1	IF_2	IF_4
0x4008ba3	     0xf8543fcffff	                           jne 0x40087ec	      5493	quickfix.c	FUNCTION_97	IF_1	IF_2	IF_4
0x4008ba9	          0x8d43ff	                      lea eax, [rbx - 1]	      5501	quickfix.c	FUNCTION_97	IF_1	IF_2	IF_4
0x4008bac	            0x85db	                           test ebx, ebx	      5501	quickfix.c	FUNCTION_97	IF_1	IF_2	IF_4
0x4008bae	      0xba00000000	                              mov edx, 0	      5501	quickfix.c	FUNCTION_97	IF_1	IF_2	IF_4
0x4008bb3	           0xf4ec2	                         cmovle eax, edx	      5501	quickfix.c	FUNCTION_97	IF_1	IF_2	IF_4
0x4008bb6	      0xe9cffeffff	                           jmp 0x4008a8a	      5501	quickfix.c	FUNCTION_97	IF_1	IF_2	IF_4
0x4008bbb	       0xf1f440000	                   nop dword [rax + rax]	      5501	quickfix.c	FUNCTION_97	IF_1	IF_2	IF_4
0x4008bc0	          0x4c63eb	                         movsxd r13, ebx	      5544	quickfix.c	FUNCTION_98	CALL_1
0x4008bc3	    0x41bf01000000	                             mov r15d, 1	      5550	quickfix.c	FUNCTION_98
0x4008bc9	    0x4a8d04ed0000	                        lea rax, [r13*8]	      5544	quickfix.c	FUNCTION_98	CALL_1
0x4008bd1	        0x49c1e507	                              shl r13, 7	      5544	quickfix.c	FUNCTION_98	CALL_1
0x4008bd5	          0x4929c5	                            sub r13, rax	      5544	quickfix.c	FUNCTION_98	CALL_1
0x4008bd8	          0x4901ed	                            add r13, rbp	      5544	quickfix.c	FUNCTION_98	CALL_1
0x4008bdb	        0x498b7d40	            mov rdi, qword [r13 + 0x40] 	      5544	quickfix.c	FUNCTION_98	CALL_1
0x4008bdf	      0xe800000000	                          call 0x4008be4	      5544	quickfix.c	FUNCTION_98	CALL_1
0x4008be4	      0xba01000000	                              mov edx, 1	      5546	quickfix.c	FUNCTION_98	CALL_2
0x4008be9	      0xbe00000000	                              mov esi, 0	      5546	quickfix.c	FUNCTION_98	CALL_2
0x4008bee	          0x4c89e7	                            mov rdi, r12	      5546	quickfix.c	FUNCTION_98	CALL_2
0x4008bf1	      0xe800000000	                          call 0x4008bf6	      5546	quickfix.c	FUNCTION_98	CALL_2
0x4008bf6	          0x3b5d08	                cmp ebx, dword [rbp + 8]	      5547	quickfix.c	FUNCTION_98	IF_2
0x4008bf9	        0x49894540	             mov qword [r13 + 0x40], rax	      5545	quickfix.c	FUNCTION_98
0x4008bfd	     0xf8540fcffff	                           jne 0x4008843	      5547	quickfix.c	FUNCTION_98	IF_2
0x4008c03	          0x4889ef	                            mov rdi, rbp	      5548	quickfix.c	FUNCTION_98	CALL_3
0x4008c06	      0xe86586ffff	         call sym.qf_update_win_titlevar	      5548	quickfix.c	FUNCTION_98	CALL_3
0x4008c0b	      0xe933fcffff	                           jmp 0x4008843	      5548	quickfix.c	FUNCTION_98	CALL_3
0x4008c10	          0x4c63eb	                         movsxd r13, ebx	      5565	quickfix.c	FUNCTION_99	CALL_1
0x4008c13	        0x48890424	                    mov qword [rsp], rax	      5565	quickfix.c	FUNCTION_99	CALL_1
0x4008c17	    0x4a8d04ed0000	                        lea rax, [r13*8]	      5565	quickfix.c	FUNCTION_99	CALL_1
0x4008c1f	        0x49c1e507	                              shl r13, 7	      5565	quickfix.c	FUNCTION_99	CALL_1
0x4008c23	          0x4929c5	                            sub r13, rax	      5565	quickfix.c	FUNCTION_99	CALL_1
0x4008c26	      0x4a8d442d00	                    lea rax, [rbp + r13]	      5565	quickfix.c	FUNCTION_99	CALL_1
0x4008c2b	        0x488b7840	            mov rdi, qword [rax + 0x40] 	      5565	quickfix.c	FUNCTION_99	CALL_1
0x4008c2f	      0x4889442408	                mov qword [rsp + 8], rax	      5565	quickfix.c	FUNCTION_99	CALL_1
0x4008c34	      0xe800000000	                          call 0x4008c39	      5565	quickfix.c	FUNCTION_99	CALL_1
0x4008c39	        0x488b1424	                    mov rdx, qword [rsp]	      5566	quickfix.c	FUNCTION_99	CALL_2
0x4008c3d	        0x4183fe20	                          cmp r14d, 0x20	      5566	quickfix.c	FUNCTION_99	CALL_2
0x4008c41	          0x4989c5	                            mov r13, rax	      5565	quickfix.c	FUNCTION_99	CALL_1
0x4008c44	        0x488b5208	                mov rdx, qword [rdx + 8]	      5566	quickfix.c	FUNCTION_99	CALL_2
0x4008c48	            0x7466	                            je 0x4008cb0	      5566	quickfix.c	FUNCTION_99	CALL_2
0x4008c4a	          0x4589f0	                           mov r8d, r14d	      5566	quickfix.c	FUNCTION_99	CALL_2
0x4008c4d	          0x4889c1	                            mov rcx, rax	      5566	quickfix.c	FUNCTION_99	CALL_2
0x4008c50	            0x89de	                            mov esi, ebx	      5566	quickfix.c	FUNCTION_99	CALL_2
0x4008c52	          0x4889ef	                            mov rdi, rbp	      5566	quickfix.c	FUNCTION_99	CALL_2
0x4008c55	      0xe8f6aaffff	          call sym.qf_add_entries.isra.4	      5566	quickfix.c	FUNCTION_99	CALL_2
0x4008c5a	        0x4183fe72	                          cmp r14d, 0x72	      5568	quickfix.c	FUNCTION_99	IF_2
0x4008c5e	          0x4189c7	                           mov r15d, eax	      5566	quickfix.c	FUNCTION_99	CALL_2
0x4008c61	            0x740d	                            je 0x4008c70	      5568	quickfix.c	FUNCTION_99	IF_2
0x4008c63	          0x4c89ef	                            mov rdi, r13	      5578	quickfix.c	FUNCTION_99	CALL_5
0x4008c66	      0xe800000000	                          call 0x4008c6b	      5578	quickfix.c	FUNCTION_99	CALL_5
0x4008c6b	      0xe9f6fbffff	                           jmp 0x4008866	      5578	quickfix.c	FUNCTION_99	CALL_5
0x4008c70	      0x488b442408	                mov rax, qword [rsp + 8]	      5575	quickfix.c	FUNCTION_99	IF_2	CALL_3
0x4008c75	        0x488b7840	            mov rdi, qword [rax + 0x40] 	      5575	quickfix.c	FUNCTION_99	IF_2	CALL_3
0x4008c79	      0xe800000000	                          call 0x4008c7e	      5575	quickfix.c	FUNCTION_99	IF_2	CALL_3
0x4008c7e	          0x4c89ef	                            mov rdi, r13	      5576	quickfix.c	FUNCTION_99	IF_2	CALL_4
0x4008c81	      0xe800000000	                          call 0x4008c86	      5576	quickfix.c	FUNCTION_99	IF_2	CALL_4
0x4008c86	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5576	quickfix.c	FUNCTION_99	IF_2	CALL_4
0x4008c8b	        0x48894140	             mov qword [rcx + 0x40], rax	      5576	quickfix.c	FUNCTION_99	IF_2	CALL_4
0x4008c8f	            0xebd2	                           jmp 0x4008c63	      5576	quickfix.c	FUNCTION_99	IF_2	CALL_4
0x4008c91	            0x89de	                            mov esi, ebx	      5612	quickfix.c	FUNCTION_100	CALL_2
0x4008c93	          0x4889ef	                            mov rdi, rbp	      5612	quickfix.c	FUNCTION_100	CALL_2
0x4008c96	      0xe82575ffff	                  call sym.qf_free_items	      5612	quickfix.c	FUNCTION_100	CALL_2
0x4008c9b	      0xe93dfdffff	                           jmp 0x40089dd	      5612	quickfix.c	FUNCTION_100	CALL_2
0x4008ca0	          0x4889ef	                            mov rdi, rbp	      5709	quickfix.c	FUNCTION_104	IF_1	CALL_2
0x4008ca3	      0xe89876ffff	                        call sym.qf_free	      5709	quickfix.c	FUNCTION_104	IF_1	CALL_2
0x4008ca8	      0xe90cfeffff	                           jmp 0x4008ab9	      5709	quickfix.c	FUNCTION_104	IF_1	CALL_2
0x4008cad	           0xf1f00	                         nop dword [rax]	      5709	quickfix.c	FUNCTION_104	IF_1	CALL_2
0x4008cb0	    0x41b861000000	                           mov r8d, 0x61	      5566	quickfix.c	FUNCTION_99	CALL_2
0x4008cb6	          0x4889c1	                            mov rcx, rax	      5566	quickfix.c	FUNCTION_99	CALL_2
0x4008cb9	            0x89de	                            mov esi, ebx	      5566	quickfix.c	FUNCTION_99	CALL_2
0x4008cbb	          0x4889ef	                            mov rdi, rbp	      5566	quickfix.c	FUNCTION_99	CALL_2
0x4008cbe	      0xe88daaffff	          call sym.qf_add_entries.isra.4	      5566	quickfix.c	FUNCTION_99	CALL_2
0x4008cc3	          0x4189c7	                           mov r15d, eax	      5566	quickfix.c	FUNCTION_99	CALL_2
0x4008cc6	            0xeb9b	                           jmp 0x4008c63	      5566	quickfix.c	FUNCTION_99	CALL_2
0x4008cc8	            0x31db	                            xor ebx, ebx	      4228	quickfix.c	FUNCTION_72	FOR_1
0x4008cca	      0xe951fbffff	                           jmp 0x4008820	      4228	quickfix.c	FUNCTION_72	FOR_1
qf_history	CALL,3:ELSE,1:DO,0:WHILE,0:FOR,1:SWITCH,0:IF,2:functions,0	57
0x40054d0	            0x4154	                                push r12	      2960	quickfix.c	FUNCTION_42
0x40054d2	              0x55	                                push rbp	      2960	quickfix.c	FUNCTION_42
0x40054d3	      0xbd00000000	                              mov ebp, 0	      2961	quickfix.c	FUNCTION_42
0x40054d8	              0x53	                                push rbx	      2960	quickfix.c	FUNCTION_42
0x40054d9	    0x817f20e60000	           cmp dword [rdi + 0x20], 0xe6 	      2964	quickfix.c	FUNCTION_42	IF_1
0x40054e0	            0x747e	                            je 0x4005560	      2964	quickfix.c	FUNCTION_42	IF_1
0x40054e2	        0x837d0400	                  cmp dword [rbp + 4], 0	      2966	quickfix.c	FUNCTION_42	IF_2
0x40054e6	            0x7438	                            je 0x4005520	      2966	quickfix.c	FUNCTION_42	IF_2
0x40054e8	            0x7e2c	                           jle 0x4005516	      2970	quickfix.c	FUNCTION_42	ELSE_1	FOR_1
0x40054ea	            0x31db	                            xor ebx, ebx	      2970	quickfix.c	FUNCTION_42	ELSE_1	FOR_1
0x40054ec	    0x41bc00000000	                             mov r12d, 0	      2971	quickfix.c	FUNCTION_42	ELSE_1	FOR_1
0x40054f2	    0x660f1f440000	                    nop word [rax + rax]	      2971	quickfix.c	FUNCTION_42	ELSE_1	FOR_1
0x40054f8	          0x395d08	                cmp dword [rbp + 8], ebx	      2971	quickfix.c	FUNCTION_42	ELSE_1	FOR_1
0x40054fb	      0xba00000000	                              mov edx, 0	      2971	quickfix.c	FUNCTION_42	ELSE_1	FOR_1
0x4005500	            0x89de	                            mov esi, ebx	      2971	quickfix.c	FUNCTION_42	ELSE_1	FOR_1
0x4005502	          0x4889ef	                            mov rdi, rbp	      2971	quickfix.c	FUNCTION_42	ELSE_1	FOR_1
0x4005505	        0x490f45d4	                         cmovne rdx, r12	      2971	quickfix.c	FUNCTION_42	ELSE_1	FOR_1
0x4005509	          0x83c301	                              add ebx, 1	      2970	quickfix.c	FUNCTION_42	ELSE_1	FOR_1
0x400550c	      0xe88fb9ffff	                         call sym.qf_msg	      2971	quickfix.c	FUNCTION_42	ELSE_1	FOR_1
0x4005511	          0x395d04	                cmp dword [rbp + 4], ebx	      2970	quickfix.c	FUNCTION_42	ELSE_1	FOR_1
0x4005514	            0x7fe2	                            jg 0x40054f8	      2970	quickfix.c	FUNCTION_42	ELSE_1	FOR_1
0x4005516	              0x5b	                                 pop rbx	      2972	quickfix.c	FUNCTION_42
0x4005517	              0x5d	                                 pop rbp	      2972	quickfix.c	FUNCTION_42
0x4005518	            0x415c	                                 pop r12	      2972	quickfix.c	FUNCTION_42
0x400551a	              0xc3	                                     ret	      2972	quickfix.c	FUNCTION_42
0x400551b	       0xf1f440000	                   nop dword [rax + rax]	      2972	quickfix.c	FUNCTION_42
0x4005520	        0x48634508	            movsxd rax, dword [rbp + 8] 	      2967	quickfix.c	FUNCTION_42	IF_2
0x4005524	    0x488d14c50000	                        lea rdx, [rax*8]	      2967	quickfix.c	FUNCTION_42	IF_2
0x400552c	        0x48c1e007	                              shl rax, 7	      2967	quickfix.c	FUNCTION_42	IF_2
0x4005530	          0x4829d0	                            sub rax, rdx	      2967	quickfix.c	FUNCTION_42	IF_2
0x4005533	        0x8b440530	      mov eax, dword [rbp + rax + 0x30] 	      2967	quickfix.c	FUNCTION_42	IF_2
0x4005537	            0x85c0	                           test eax, eax	      2967	quickfix.c	FUNCTION_42	IF_2
0x4005539	            0x75db	                           jne 0x4005516	      2967	quickfix.c	FUNCTION_42	IF_2
0x400553b	            0x31ff	                            xor edi, edi	      2968	quickfix.c	FUNCTION_42	CALL_2
0x400553d	      0xba05000000	                              mov edx, 5	      2968	quickfix.c	FUNCTION_42	CALL_2
0x4005542	      0xbe00000000	                              mov esi, 0	      2968	quickfix.c	FUNCTION_42	CALL_2
0x4005547	      0xe800000000	                          call 0x400554c	      2968	quickfix.c	FUNCTION_42	CALL_2
0x400554c	              0x5b	                                 pop rbx	      2972	quickfix.c	FUNCTION_42
0x400554d	              0x5d	                                 pop rbp	      2972	quickfix.c	FUNCTION_42
0x400554e	            0x415c	                                 pop r12	      2972	quickfix.c	FUNCTION_42
0x4005550	          0x4889c7	                            mov rdi, rax	      2968	quickfix.c	FUNCTION_42	CALL_2
0x4005553	      0xe900000000	                           jmp 0x4005558	      2968	quickfix.c	FUNCTION_42	CALL_2
0x4005558	     0xf1f84000000	                   nop dword [rax + rax]	      2968	quickfix.c	FUNCTION_42	CALL_2
0x4005560	    0x488b05000000	            mov rax, qword [0x04005567] 	      2965	quickfix.c	FUNCTION_42	IF_1
0x4005567	        0x488b7808	                mov rdi, qword [rax + 8]	      2965	quickfix.c	FUNCTION_42	IF_1
0x400556b	      0xe800000000	                          call 0x4005570	      2965	quickfix.c	FUNCTION_42	IF_1
0x4005570	            0x85c0	                           test eax, eax	      2965	quickfix.c	FUNCTION_42	IF_1
0x4005572	    0x488b05000000	            mov rax, qword [0x04005579] 	      2965	quickfix.c	FUNCTION_42	IF_1
0x4005579	            0x7415	                            je 0x4005590	      2965	quickfix.c	FUNCTION_42	IF_1
0x400557b	    0x488ba8501900	          mov rbp, qword [rax + 0x1950] 	      2965	quickfix.c	FUNCTION_42	IF_1
0x4005582	          0x4885ed	                           test rbp, rbp	      2965	quickfix.c	FUNCTION_42	IF_1
0x4005585	     0xf8557ffffff	                           jne 0x40054e2	      2965	quickfix.c	FUNCTION_42	IF_1
0x400558b	       0xf1f440000	                   nop dword [rax + rax]	      2965	quickfix.c	FUNCTION_42	IF_1
0x4005590	    0x488ba8481900	          mov rbp, qword [rax + 0x1948] 	      2965	quickfix.c	FUNCTION_42	IF_1
0x4005597	          0x4885ed	                           test rbp, rbp	      2966	quickfix.c	FUNCTION_42	IF_2
0x400559a	            0x749f	                            je 0x400553b	      2966	quickfix.c	FUNCTION_42	IF_2
0x400559c	      0xe941ffffff	                           jmp 0x40054e2	      2966	quickfix.c	FUNCTION_42	IF_2
ex_vimgrep	CALL,55:ELSE,6:DO,0:WHILE,0:FOR,1:SWITCH,0:IF,30:functions,0	757
0x4006760	            0x4157	                                push r15	      4482	quickfix.c	FUNCTION_80
0x4006762	            0x4156	                                push r14	      4482	quickfix.c	FUNCTION_80
0x4006764	            0x4155	                                push r13	      4482	quickfix.c	FUNCTION_80
0x4006766	            0x4154	                                push r12	      4482	quickfix.c	FUNCTION_80
0x4006768	              0x55	                                push rbp	      4482	quickfix.c	FUNCTION_80
0x4006769	              0x53	                                push rbx	      4482	quickfix.c	FUNCTION_80
0x400676a	    0x4881ec180300	                          sub rsp, 0x318	      4482	quickfix.c	FUNCTION_80
0x4006771	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      4509	quickfix.c	FUNCTION_80	CALL_1
0x4006774	    0x64488b142528	                mov rdx, qword fs:[0x28]	      4482	quickfix.c	FUNCTION_80
0x400677d	    0x488994240803	            mov qword [rsp + 0x308], rdx	      4482	quickfix.c	FUNCTION_80
0x4006785	            0x31d2	                            xor edx, edx	      4482	quickfix.c	FUNCTION_80
0x4006787	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      4482	quickfix.c	FUNCTION_80
0x400678c	    0xc784248c0000	               mov dword [rsp + 0x8c], 0	      4502	quickfix.c	FUNCTION_80
0x4006797	      0x3de4000000	                           cmp eax, 0xe4	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x400679c	     0xf84960a0000	                            je 0x4007238	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x40067a2	     0xf8e9b000000	                           jle 0x4006843	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x40067a8	      0x3d00010000	                          cmp eax, 0x100	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x40067ad	     0xf8404030000	                            je 0x4006ab7	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x40067b3	     0xf8e53030000	                           jle 0x4006b0c	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x40067b9	      0x3dee010000	                          cmp eax, 0x1ee	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x40067be	     0xf84d7020000	                            je 0x4006a9b	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x40067c4	      0x3def010000	                          cmp eax, 0x1ef	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x40067c9	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4244	quickfix.c	FUNCTION_73	SWITCH_1
0x40067d2	     0xf858c000000	                           jne 0x4006864	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x40067d8	     0xf1f84000000	                   nop dword [rax + rax]	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x40067e0	    0x4c8b05000000	              mov r8, qword [0x040067e7]	      4511	quickfix.c	FUNCTION_80	IF_1
0x40067e7	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	      4510	quickfix.c	FUNCTION_80	IF_1	CALL_2
0x40067ec	      0xb901000000	                              mov ecx, 1	      4510	quickfix.c	FUNCTION_80	IF_1	CALL_2
0x40067f1	      0xbf40000000	                           mov edi, 0x40	      4510	quickfix.c	FUNCTION_80	IF_1	CALL_2
0x40067f6	    0x498b90980000	              mov rdx, qword [r8 + 0x98]	      4510	quickfix.c	FUNCTION_80	IF_1	CALL_2
0x40067fd	      0xe800000000	                          call 0x4006802	      4510	quickfix.c	FUNCTION_80	IF_1	CALL_2
0x4006802	            0x85c0	                           test eax, eax	      4510	quickfix.c	FUNCTION_80	IF_1	CALL_2
0x4006804	     0xf85ce020000	                           jne 0x4006ad8	      4510	quickfix.c	FUNCTION_80	IF_1	CALL_2
0x400680a	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4510	quickfix.c	FUNCTION_80	IF_1	CALL_2
0x400680f	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4510	quickfix.c	FUNCTION_80	IF_1	CALL_2
0x4006812	    0x8d9001ffffff	                   lea edx, [rax - 0xff]	      4522	quickfix.c	FUNCTION_80	IF_3
0x4006818	          0x83fa01	                              cmp edx, 1	      4522	quickfix.c	FUNCTION_80	IF_3
0x400681b	            0x7763	                            ja 0x4006880	      4522	quickfix.c	FUNCTION_80	IF_3
0x400681d	    0x488b3d000000	            mov rdi, qword [0x04006824] 	      4524	quickfix.c	FUNCTION_80	IF_3	CALL_4
0x4006824	      0xe827abffff	           call sym.ll_get_or_alloc_list	      4524	quickfix.c	FUNCTION_80	IF_3	CALL_4
0x4006829	          0x4885c0	                           test rax, rax	      4525	quickfix.c	FUNCTION_80	IF_3	IF_4
0x400682c	          0x4989c7	                            mov r15, rax	      4524	quickfix.c	FUNCTION_80	IF_3	CALL_4
0x400682f	     0xf843d020000	                            je 0x4006a72	      4525	quickfix.c	FUNCTION_80	IF_3	IF_4
0x4006835	    0x488b05000000	            mov rax, qword [0x0400683c] 	      4527	quickfix.c	FUNCTION_80	IF_3
0x400683c	      0x4889442430	             mov qword [rsp + 0x30], rax	      4527	quickfix.c	FUNCTION_80	IF_3
0x4006841	            0xeb56	                           jmp 0x4006899	      4527	quickfix.c	FUNCTION_80	IF_3
0x4006843	      0x3da4000000	                           cmp eax, 0xa4	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x4006848	     0xf84f8090000	                            je 0x4007246	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x400684e	      0x3de3000000	                           cmp eax, 0xe3	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x4006853	     0xf8450020000	                            je 0x4006aa9	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x4006859	      0x3da3000000	                           cmp eax, 0xa3	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x400685e	     0xf84f0090000	                            je 0x4007254	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x4006864	    0x8d9001ffffff	                   lea edx, [rax - 0xff]	      4522	quickfix.c	FUNCTION_80	IF_3
0x400686a	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4250	quickfix.c	FUNCTION_73	SWITCH_1
0x4006873	          0x83fa01	                              cmp edx, 1	      4522	quickfix.c	FUNCTION_80	IF_3
0x4006876	            0x76a5	                           jbe 0x400681d	      4522	quickfix.c	FUNCTION_80	IF_3
0x4006878	     0xf1f84000000	                   nop dword [rax + rax]	      4522	quickfix.c	FUNCTION_80	IF_3
0x4006880	      0x2de3000000	                           sub eax, 0xe3	      4522	quickfix.c	FUNCTION_80	IF_3
0x4006885	    0x48c744243000	               mov qword [rsp + 0x30], 0	      4493	quickfix.c	FUNCTION_80
0x400688e	    0x41bf00000000	                             mov r15d, 0	      4491	quickfix.c	FUNCTION_80
0x4006894	          0x83f801	                              cmp eax, 1	      4522	quickfix.c	FUNCTION_80	IF_3
0x4006897	            0x7684	                           jbe 0x400681d	      4522	quickfix.c	FUNCTION_80	IF_3
0x4006899	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4530	quickfix.c	FUNCTION_80	IF_5
0x400689e	    0x48c7442438ff	     mov qword [rsp + 0x38], 0x7fffffff 	      4533	quickfix.c	FUNCTION_80	ELSE_1
0x40068a7	        0x448b4038	            mov r8d, dword [rax + 0x38] 	      4530	quickfix.c	FUNCTION_80	IF_5
0x40068ab	          0x4585c0	                           test r8d, r8d	      4530	quickfix.c	FUNCTION_80	IF_5
0x40068ae	            0x7e09	                           jle 0x40068b9	      4530	quickfix.c	FUNCTION_80	IF_5
0x40068b0	        0x488b4048	            mov rax, qword [rax + 0x48] 	      4531	quickfix.c	FUNCTION_80	IF_5
0x40068b4	      0x4889442438	             mov qword [rsp + 0x38], rax	      4531	quickfix.c	FUNCTION_80	IF_5
0x40068b9	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      4537	quickfix.c	FUNCTION_80	CALL_5
0x40068be	    0x48c78424b001	              mov qword [rsp + 0x1b0], 0	      4536	quickfix.c	FUNCTION_80
0x40068ca	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      4537	quickfix.c	FUNCTION_80	CALL_5
0x40068ce	          0x488b38	                    mov rdi, qword [rax]	      4537	quickfix.c	FUNCTION_80	CALL_5
0x40068d1	      0xe800000000	                          call 0x40068d6	      4537	quickfix.c	FUNCTION_80	CALL_5
0x40068d6	          0x488b3b	                    mov rdi, qword [rbx]	      4538	quickfix.c	FUNCTION_80	CALL_6
0x40068d9	    0x488d94248c00	                   lea rdx, [rsp + 0x8c]	      4538	quickfix.c	FUNCTION_80	CALL_6
0x40068e1	    0x488db4249800	                   lea rsi, [rsp + 0x98]	      4538	quickfix.c	FUNCTION_80	CALL_6
0x40068e9	      0x4889442448	             mov qword [rsp + 0x48], rax	      4537	quickfix.c	FUNCTION_80	CALL_5
0x40068ee	      0xe800000000	                          call 0x40068f3	      4538	quickfix.c	FUNCTION_80	CALL_6
0x40068f3	          0x4885c0	                           test rax, rax	      4539	quickfix.c	FUNCTION_80	IF_6
0x40068f6	          0x4889c3	                            mov rbx, rax	      4538	quickfix.c	FUNCTION_80	CALL_6
0x40068f9	      0xba05000000	                              mov edx, 5	      4541	quickfix.c	FUNCTION_80	IF_6	CALL_8
0x40068fe	      0xbe00000000	                              mov esi, 0	      4541	quickfix.c	FUNCTION_80	IF_6	CALL_8
0x4006903	     0xf840a010000	                            je 0x4006a13	      4539	quickfix.c	FUNCTION_80	IF_6
0x4006909	    0x488bbc249800	            mov rdi, qword [rsp + 0x98] 	      4545	quickfix.c	FUNCTION_80	CALL_9
0x4006911	    0x48c78424b001	              mov qword [rsp + 0x1b0], 0	      4261	quickfix.c	FUNCTION_74
0x400691d	          0x4885ff	                           test rdi, rdi	      4263	quickfix.c	FUNCTION_74	IF_1
0x4006920	            0x7409	                            je 0x400692b	      4263	quickfix.c	FUNCTION_74	IF_1
0x4006922	          0x803f00	                       cmp byte [rdi], 0	      4263	quickfix.c	FUNCTION_74	IF_1
0x4006925	     0xf85bb010000	                           jne 0x4006ae6	      4263	quickfix.c	FUNCTION_74	IF_1
0x400692b	      0xe800000000	                          call 0x4006930	      4266	quickfix.c	FUNCTION_74	IF_1	IF_2	CALL_1
0x4006930	          0x4885c0	                           test rax, rax	      4266	quickfix.c	FUNCTION_74	IF_1	IF_2	CALL_1
0x4006933	     0xf845d090000	                            je 0x4007296	      4266	quickfix.c	FUNCTION_74	IF_1	IF_2	CALL_1
0x4006939	      0xe800000000	                          call 0x400693e	      4271	quickfix.c	FUNCTION_74	IF_1	CALL_5
0x400693e	      0xbe01000000	                              mov esi, 1	      4271	quickfix.c	FUNCTION_74	IF_1	CALL_5
0x4006943	          0x4889c7	                            mov rdi, rax	      4271	quickfix.c	FUNCTION_74	IF_1	CALL_5
0x4006946	      0xe800000000	                          call 0x400694b	      4271	quickfix.c	FUNCTION_74	IF_1	CALL_5
0x400694b	    0x48898424b001	            mov qword [rsp + 0x1b0], rax	      4271	quickfix.c	FUNCTION_74	IF_1	CALL_5
0x4006953	    0x8b1500000000	            mov edx, dword [0x04006959] 	      4276	quickfix.c	FUNCTION_74
0x4006959	    0xc78424fc0200	              mov dword [rsp + 0x2fc], 0	      4277	quickfix.c	FUNCTION_74
0x4006964	    0x899424f80200	            mov dword [rsp + 0x2f8], edx	      4276	quickfix.c	FUNCTION_74
0x400696b	          0x4885c0	                           test rax, rax	      4546	quickfix.c	FUNCTION_80	IF_7
0x400696e	     0xf84ae000000	                            je 0x4006a22	      4546	quickfix.c	FUNCTION_80	IF_7
0x4006974	          0x4889df	                            mov rdi, rbx	      4549	quickfix.c	FUNCTION_80	CALL_10
0x4006977	      0xe800000000	                          call 0x400697c	      4549	quickfix.c	FUNCTION_80	CALL_10
0x400697c	          0x803800	                       cmp byte [rax], 0	      4550	quickfix.c	FUNCTION_80	IF_8
0x400697f	     0xf8478010000	                            je 0x4006afd	      4550	quickfix.c	FUNCTION_80	IF_8
0x4006985	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      4556	quickfix.c	FUNCTION_80	IF_9
0x400698a	          0x8b5220	            mov edx, dword [rdx + 0x20] 	      4556	quickfix.c	FUNCTION_80	IF_9
0x400698d	    0x81fa00010000	                          cmp edx, 0x100	      4558	quickfix.c	FUNCTION_80	IF_9
0x4006993	        0x400f95c6	                               setne sil	      4558	quickfix.c	FUNCTION_80	IF_9
0x4006997	    0x81faef010000	                          cmp edx, 0x1ef	      4558	quickfix.c	FUNCTION_80	IF_9
0x400699d	           0xf95c1	                                setne cl	      4558	quickfix.c	FUNCTION_80	IF_9
0x40069a0	          0x4084ce	                            test sil, cl	      4558	quickfix.c	FUNCTION_80	IF_9
0x40069a3	     0xf841c010000	                            je 0x4006ac5	      4558	quickfix.c	FUNCTION_80	IF_9
0x40069a9	          0x83e2bf	                     and edx, 0xffffffbf	      4558	quickfix.c	FUNCTION_80	IF_9
0x40069ac	    0x81faa4000000	                           cmp edx, 0xa4	      4558	quickfix.c	FUNCTION_80	IF_9
0x40069b2	     0xf840d010000	                            je 0x4006ac5	      4558	quickfix.c	FUNCTION_80	IF_9
0x40069b8	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	      4558	quickfix.c	FUNCTION_80	IF_9
0x40069bd	          0x4885d2	                           test rdx, rdx	      4561	quickfix.c	FUNCTION_80	CALL_13
0x40069c0	          0x4889d6	                            mov rsi, rdx	      4561	quickfix.c	FUNCTION_80	CALL_13
0x40069c3	     0xf84550a0000	                            je 0x400741e	      4561	quickfix.c	FUNCTION_80	CALL_13
0x40069c9	          0x4c89ff	                            mov rdi, r15	      4561	quickfix.c	FUNCTION_80	CALL_13
0x40069cc	        0x48890424	                    mov qword [rsp], rax	      4561	quickfix.c	FUNCTION_80	CALL_13
0x40069d0	      0xe8eb9bffff	                    call sym.qf_new_list	      4561	quickfix.c	FUNCTION_80	CALL_13
0x40069d5	        0x488b0424	                    mov rax, qword [rsp]	      4561	quickfix.c	FUNCTION_80	CALL_13
0x40069d9	    0x488d94249000	                   lea rdx, [rsp + 0x90]	      4564	quickfix.c	FUNCTION_80	IF_10	CALL_14
0x40069e1	    0x488db4248800	                   lea rsi, [rsp + 0x88]	      4564	quickfix.c	FUNCTION_80	IF_10	CALL_14
0x40069e9	      0xb901000000	                              mov ecx, 1	      4564	quickfix.c	FUNCTION_80	IF_10	CALL_14
0x40069ee	          0x4889c7	                            mov rdi, rax	      4564	quickfix.c	FUNCTION_80	IF_10	CALL_14
0x40069f1	      0xe800000000	                          call 0x40069f6	      4564	quickfix.c	FUNCTION_80	IF_10	CALL_14
0x40069f6	            0x85c0	                           test eax, eax	      4564	quickfix.c	FUNCTION_80	IF_10	CALL_14
0x40069f8	            0x7428	                            je 0x4006a22	      4564	quickfix.c	FUNCTION_80	IF_10	CALL_14
0x40069fa	    0x8bbc24880000	            mov edi, dword [rsp + 0x88] 	      4566	quickfix.c	FUNCTION_80	IF_11
0x4006a01	            0x85ff	                           test edi, edi	      4566	quickfix.c	FUNCTION_80	IF_11
0x4006a03	     0xf851c010000	                           jne 0x4006b25	      4566	quickfix.c	FUNCTION_80	IF_11
0x4006a09	      0xba05000000	                              mov edx, 5	      4568	quickfix.c	FUNCTION_80	IF_11	CALL_16
0x4006a0e	      0xbe00000000	                              mov esi, 0	      4568	quickfix.c	FUNCTION_80	IF_11	CALL_16
0x4006a13	            0x31ff	                            xor edi, edi	      4552	quickfix.c	FUNCTION_80	IF_8	CALL_12
0x4006a15	      0xe800000000	                          call 0x4006a1a	      4552	quickfix.c	FUNCTION_80	IF_8	CALL_12
0x4006a1a	          0x4889c7	                            mov rdi, rax	      4552	quickfix.c	FUNCTION_80	IF_8	CALL_12
0x4006a1d	      0xe800000000	                          call 0x4006a22	      4552	quickfix.c	FUNCTION_80	IF_8	CALL_12
0x4006a22	    0x48c744242000	               mov qword [rsp + 0x20], 0	      4506	quickfix.c	FUNCTION_80
0x4006a2b	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4505	quickfix.c	FUNCTION_80
0x4006a34	    0x48c744242800	               mov qword [rsp + 0x28], 0	      4504	quickfix.c	FUNCTION_80
0x4006a3d	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      4740	quickfix.c	FUNCTION_80	CALL_51
0x4006a42	      0xe800000000	                          call 0x4006a47	      4740	quickfix.c	FUNCTION_80	CALL_51
0x4006a47	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      4741	quickfix.c	FUNCTION_80	CALL_52
0x4006a4c	      0xe800000000	                          call 0x4006a51	      4741	quickfix.c	FUNCTION_80	CALL_52
0x4006a51	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      4742	quickfix.c	FUNCTION_80	CALL_53
0x4006a56	      0xe800000000	                          call 0x4006a5b	      4742	quickfix.c	FUNCTION_80	CALL_53
0x4006a5b	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      4743	quickfix.c	FUNCTION_80	CALL_54
0x4006a60	      0xe800000000	                          call 0x4006a65	      4743	quickfix.c	FUNCTION_80	CALL_54
0x4006a65	    0x488bbc24b001	           mov rdi, qword [rsp + 0x1b0] 	      4744	quickfix.c	FUNCTION_80	CALL_55
0x4006a6d	      0xe800000000	                          call 0x4006a72	      4744	quickfix.c	FUNCTION_80	CALL_55
0x4006a72	    0x488b84240803	           mov rax, qword [rsp + 0x308] 	      4745	quickfix.c	FUNCTION_80
0x4006a7a	    0x644833042528	                xor rax, qword fs:[0x28]	      4745	quickfix.c	FUNCTION_80
0x4006a83	     0xf85e30a0000	                           jne 0x400756c	      4745	quickfix.c	FUNCTION_80
0x4006a89	    0x4881c4180300	                          add rsp, 0x318	      4745	quickfix.c	FUNCTION_80
0x4006a90	              0x5b	                                 pop rbx	      4745	quickfix.c	FUNCTION_80
0x4006a91	              0x5d	                                 pop rbp	      4745	quickfix.c	FUNCTION_80
0x4006a92	            0x415c	                                 pop r12	      4745	quickfix.c	FUNCTION_80
0x4006a94	            0x415d	                                 pop r13	      4745	quickfix.c	FUNCTION_80
0x4006a96	            0x415e	                                 pop r14	      4745	quickfix.c	FUNCTION_80
0x4006a98	            0x415f	                                 pop r15	      4745	quickfix.c	FUNCTION_80
0x4006a9a	              0xc3	                                     ret	      4745	quickfix.c	FUNCTION_80
0x4006a9b	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4242	quickfix.c	FUNCTION_73	SWITCH_1
0x4006aa4	      0xe937fdffff	                           jmp 0x40067e0	      4242	quickfix.c	FUNCTION_73	SWITCH_1
0x4006aa9	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4247	quickfix.c	FUNCTION_73	SWITCH_1
0x4006ab2	      0xe929fdffff	                           jmp 0x40067e0	      4247	quickfix.c	FUNCTION_73	SWITCH_1
0x4006ab7	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4245	quickfix.c	FUNCTION_73	SWITCH_1
0x4006ac0	      0xe91bfdffff	                           jmp 0x40067e0	      4245	quickfix.c	FUNCTION_73	SWITCH_1
0x4006ac5	        0x418b4f04	                mov ecx, dword [r15 + 4]	      4559	quickfix.c	FUNCTION_80	IF_9
0x4006ac9	        0x41394f08	                cmp dword [r15 + 8], ecx	      4559	quickfix.c	FUNCTION_80	IF_9
0x4006acd	     0xf8506ffffff	                           jne 0x40069d9	      4559	quickfix.c	FUNCTION_80	IF_9
0x4006ad3	      0xe9e0feffff	                           jmp 0x40069b8	      4559	quickfix.c	FUNCTION_80	IF_9
0x4006ad8	      0xe800000000	                          call 0x4006add	      4514	quickfix.c	FUNCTION_80	IF_1	IF_2	CALL_3
0x4006add	            0x85c0	                           test eax, eax	      4514	quickfix.c	FUNCTION_80	IF_1	IF_2	CALL_3
0x4006adf	            0x7591	                           jne 0x4006a72	      4514	quickfix.c	FUNCTION_80	IF_1	IF_2	CALL_3
0x4006ae1	      0xe924fdffff	                           jmp 0x400680a	      4514	quickfix.c	FUNCTION_80	IF_1	IF_2	CALL_3
0x4006ae6	      0xbe01000000	                              mov esi, 1	      4274	quickfix.c	FUNCTION_74	CALL_6
0x4006aeb	      0xe800000000	                          call 0x4006af0	      4274	quickfix.c	FUNCTION_74	CALL_6
0x4006af0	    0x48898424b001	            mov qword [rsp + 0x1b0], rax	      4274	quickfix.c	FUNCTION_74	CALL_6
0x4006af8	      0xe956feffff	                           jmp 0x4006953	      4274	quickfix.c	FUNCTION_74	CALL_6
0x4006afd	      0xba05000000	                              mov edx, 5	      4552	quickfix.c	FUNCTION_80	IF_8	CALL_12
0x4006b02	      0xbe00000000	                              mov esi, 0	      4552	quickfix.c	FUNCTION_80	IF_8	CALL_12
0x4006b07	      0xe907ffffff	                           jmp 0x4006a13	      4552	quickfix.c	FUNCTION_80	IF_8	CALL_12
0x4006b0c	      0x3dff000000	                           cmp eax, 0xff	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x4006b11	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4243	quickfix.c	FUNCTION_73	SWITCH_1
0x4006b1a	     0xf84c0fcffff	                            je 0x40067e0	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x4006b20	      0xe93ffdffff	                           jmp 0x4006864	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x4006b25	      0xbe01000000	                              mov esi, 1	      4572	quickfix.c	FUNCTION_80	CALL_17
0x4006b2a	      0xbf00100000	                         mov edi, 0x1000	      4572	quickfix.c	FUNCTION_80	CALL_17
0x4006b2f	      0xe800000000	                          call 0x4006b34	      4572	quickfix.c	FUNCTION_80	CALL_17
0x4006b34	      0xbe02000000	                              mov esi, 2	      4573	quickfix.c	FUNCTION_80	CALL_18
0x4006b39	          0x4889c3	                            mov rbx, rax	      4572	quickfix.c	FUNCTION_80	CALL_17
0x4006b3c	      0xbf00100000	                         mov edi, 0x1000	      4573	quickfix.c	FUNCTION_80	CALL_18
0x4006b41	      0x4889442428	             mov qword [rsp + 0x28], rax	      4572	quickfix.c	FUNCTION_80	CALL_17
0x4006b46	      0xe800000000	                          call 0x4006b4b	      4573	quickfix.c	FUNCTION_80	CALL_18
0x4006b4b	          0x4885db	                           test rbx, rbx	      4574	quickfix.c	FUNCTION_80	IF_12
0x4006b4e	      0x4889442450	             mov qword [rsp + 0x50], rax	      4573	quickfix.c	FUNCTION_80	CALL_18
0x4006b53	     0xf841b070000	                            je 0x4007274	      4574	quickfix.c	FUNCTION_80	IF_12
0x4006b59	          0x4885c0	                           test rax, rax	      4574	quickfix.c	FUNCTION_80	IF_12
0x4006b5c	     0xf8412070000	                            je 0x4007274	      4574	quickfix.c	FUNCTION_80	IF_12
0x4006b62	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      4582	quickfix.c	FUNCTION_80	CALL_20
0x4006b67	      0xbe00100000	                         mov esi, 0x1000	      4582	quickfix.c	FUNCTION_80	CALL_20
0x4006b6c	      0xe800000000	                          call 0x4006b71	      4582	quickfix.c	FUNCTION_80	CALL_20
0x4006b71	        0x49634708	            movsxd rax, dword [r15 + 8] 	      4586	quickfix.c	FUNCTION_80
0x4006b75	    0x8bbc24880000	            mov edi, dword [rsp + 0x88] 	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4006b7c	    0x488d14c50000	                        lea rdx, [rax*8]	      4586	quickfix.c	FUNCTION_80
0x4006b84	        0x48c1e007	                              shl rax, 7	      4586	quickfix.c	FUNCTION_80
0x4006b88	          0x4829d0	                            sub rax, rdx	      4586	quickfix.c	FUNCTION_80
0x4006b8b	            0x85ff	                           test edi, edi	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4006b8d	      0x418b440710	      mov eax, dword [r15 + rax + 0x10] 	      4586	quickfix.c	FUNCTION_80
0x4006b92	        0x89442464	             mov dword [rsp + 0x64], eax	      4586	quickfix.c	FUNCTION_80
0x4006b96	     0xf8ed5090000	                           jle 0x4007571	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4006b9c	    0x8b0500000000	            mov eax, dword [0x04006ba2] 	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4006ba2	            0x85c0	                           test eax, eax	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4006ba4	     0xf85c7090000	                           jne 0x4007571	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4006baa	    0x48837c243800	               cmp qword [rsp + 0x38], 0	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4006bb0	     0xf8ebb090000	                           jle 0x4007571	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4006bb6	    0x48c744244000	               mov qword [rsp + 0x40], 0	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4006bbf	    0xc744247c0000	               mov dword [rsp + 0x7c], 0	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4006bc7	    0x48c744242000	               mov qword [rsp + 0x20], 0	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4006bd0	    0x48c744246800	               mov qword [rsp + 0x68], 0	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4006bd9	    0x48c744247000	               mov qword [rsp + 0x70], 0	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4006be2	    0xc74424080000	                  mov dword [rsp + 8], 0	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4006bea	    0x660f1f440000	                    nop word [rax + rax]	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4006bf0	      0x488b4c2440	            mov rcx, qword [rsp + 0x40] 	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4006bf5	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	      4591	quickfix.c	FUNCTION_80	FOR_1	CALL_21
0x4006bfd	        0x488b3cc8	            mov rdi, qword [rax + rcx*8]	      4591	quickfix.c	FUNCTION_80	FOR_1	CALL_21
0x4006c01	    0x488d1ccd0000	                        lea rbx, [rcx*8]	      4591	quickfix.c	FUNCTION_80	FOR_1	CALL_21
0x4006c09	      0xe800000000	                          call 0x4006c0e	      4591	quickfix.c	FUNCTION_80	FOR_1	CALL_21
0x4006c0e	            0x31ff	                            xor edi, edi	      4592	quickfix.c	FUNCTION_80	FOR_1	IF_13	CALL_22
0x4006c10	        0x48890424	                    mov qword [rsp], rax	      4591	quickfix.c	FUNCTION_80	FOR_1	CALL_21
0x4006c14	      0xe800000000	                          call 0x4006c19	      4592	quickfix.c	FUNCTION_80	FOR_1	IF_13	CALL_22
0x4006c19	      0x483b442468	            cmp rax, qword [rsp + 0x68] 	      4592	quickfix.c	FUNCTION_80	FOR_1	IF_13	CALL_22
0x4006c1e	     0xf8f9e040000	                            jg 0x40070c2	      4592	quickfix.c	FUNCTION_80	FOR_1	IF_13	CALL_22
0x4006c24	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	      4600	quickfix.c	FUNCTION_80	FOR_1	CALL_25
0x4006c2c	        0x488b3c18	              mov rdi, qword [rax + rbx]	      4600	quickfix.c	FUNCTION_80	FOR_1	CALL_25
0x4006c30	      0xe800000000	                          call 0x4006c35	      4600	quickfix.c	FUNCTION_80	FOR_1	CALL_25
0x4006c35	          0x4885c0	                           test rax, rax	      4601	quickfix.c	FUNCTION_80	FOR_1	IF_14
0x4006c38	          0x4889c5	                            mov rbp, rax	      4600	quickfix.c	FUNCTION_80	FOR_1	CALL_25
0x4006c3b	     0xf84e9040000	                            je 0x400712a	      4601	quickfix.c	FUNCTION_80	FOR_1	IF_14
0x4006c41	      0x4883780800	                  cmp qword [rax + 8], 0	      4601	quickfix.c	FUNCTION_80	FOR_1	IF_14
0x4006c46	    0xc74424780000	               mov dword [rsp + 0x78], 0	      4612	quickfix.c	FUNCTION_80	FOR_1	ELSE_2
0x4006c4e	     0xf84d6040000	                            je 0x400712a	      4601	quickfix.c	FUNCTION_80	FOR_1	IF_14
0x4006c54	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4616	quickfix.c	FUNCTION_80	FOR_1	ELSE_2	IF_15	CALL_27
0x4006c59	      0x4c8b742430	            mov r14, qword [rsp + 0x30] 	      4353	quickfix.c	FUNCTION_77	IF_1	CALL_1
0x4006c5e	        0x8b742464	            mov esi, dword [rsp + 0x64] 	      4353	quickfix.c	FUNCTION_77	IF_1	CALL_1
0x4006c62	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4616	quickfix.c	FUNCTION_80	FOR_1	ELSE_2	IF_15	CALL_27
0x4006c66	          0x4c89f7	                            mov rdi, r14	      4353	quickfix.c	FUNCTION_77	IF_1	CALL_1
0x4006c69	          0x488b18	                    mov rbx, qword [rax]	      4616	quickfix.c	FUNCTION_80	FOR_1	ELSE_2	IF_15	CALL_27
0x4006c6c	      0xe85f94ffff	                   call sym.qflist_valid	      4353	quickfix.c	FUNCTION_77	IF_1	CALL_1
0x4006c71	            0x85c0	                           test eax, eax	      4353	quickfix.c	FUNCTION_77	IF_1	CALL_1
0x4006c73	            0x753b	                           jne 0x4006cb0	      4353	quickfix.c	FUNCTION_77	IF_1	CALL_1
0x4006c75	          0x4d85f6	                           test r14, r14	      4355	quickfix.c	FUNCTION_77	IF_1	IF_2
0x4006c78	     0xf843e060000	                            je 0x40072bc	      4355	quickfix.c	FUNCTION_77	IF_1	IF_2
0x4006c7e	      0xba05000000	                              mov edx, 5	      4358	quickfix.c	FUNCTION_77	IF_1	IF_2	CALL_3
0x4006c83	      0xbe00000000	                              mov esi, 0	      4358	quickfix.c	FUNCTION_77	IF_1	IF_2	CALL_3
0x4006c88	            0x31ff	                            xor edi, edi	      4358	quickfix.c	FUNCTION_77	IF_1	IF_2	CALL_3
0x4006c8a	      0xe800000000	                          call 0x4006c8f	      4358	quickfix.c	FUNCTION_77	IF_1	IF_2	CALL_3
0x4006c8f	          0x4889c7	                            mov rdi, rax	      4358	quickfix.c	FUNCTION_77	IF_1	IF_2	CALL_3
0x4006c92	      0xe800000000	                          call 0x4006c97	      4358	quickfix.c	FUNCTION_77	IF_1	IF_2	CALL_3
0x4006c97	    0x488bb4249000	            mov rsi, qword [rsp + 0x90] 	      4618	quickfix.c	FUNCTION_80	FOR_1	ELSE_2	IF_15	CALL_28
0x4006c9f	    0x8bbc24880000	            mov edi, dword [rsp + 0x88] 	      4618	quickfix.c	FUNCTION_80	FOR_1	ELSE_2	IF_15	CALL_28
0x4006ca6	      0xe800000000	                          call 0x4006cab	      4618	quickfix.c	FUNCTION_80	FOR_1	ELSE_2	IF_15	CALL_28
0x4006cab	      0xe98dfdffff	                           jmp 0x4006a3d	      4619	quickfix.c	FUNCTION_80	FOR_1	ELSE_2	IF_15
0x4006cb0	        0x49634708	            movsxd rax, dword [r15 + 8] 	      4369	quickfix.c	FUNCTION_77	IF_3
0x4006cb4	        0x8b4c2464	            mov ecx, dword [rsp + 0x64] 	      4369	quickfix.c	FUNCTION_77	IF_3
0x4006cb8	    0x488d14c50000	                        lea rdx, [rax*8]	      4369	quickfix.c	FUNCTION_77	IF_3
0x4006cc0	        0x48c1e007	                              shl rax, 7	      4369	quickfix.c	FUNCTION_77	IF_3
0x4006cc4	          0x4829d0	                            sub rax, rdx	      4369	quickfix.c	FUNCTION_77	IF_3
0x4006cc7	      0x41394c0710	      cmp dword [r15 + rax + 0x10], ecx 	      4369	quickfix.c	FUNCTION_77	IF_3
0x4006ccc	            0x744d	                            je 0x4006d1b	      4369	quickfix.c	FUNCTION_77	IF_3
0x4006cce	        0x418b7704	                mov esi, dword [r15 + 4]	      4228	quickfix.c	FUNCTION_72	FOR_1
0x4006cd2	            0x85f6	                           test esi, esi	      4228	quickfix.c	FUNCTION_72	FOR_1
0x4006cd4	            0x7e34	                           jle 0x4006d0a	      4228	quickfix.c	FUNCTION_72	FOR_1
0x4006cd6	        0x418b4f10	            mov ecx, dword [r15 + 0x10] 	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x4006cda	        0x394c2464	            cmp dword [rsp + 0x64], ecx 	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x4006cde	     0xf8472070000	                            je 0x4007456	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x4006ce4	    0x498d97880000	                   lea rdx, [r15 + 0x88]	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x4006ceb	            0x31c0	                            xor eax, eax	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x4006ced	        0x8b7c2464	            mov edi, dword [rsp + 0x64] 	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x4006cf1	            0xeb10	                           jmp 0x4006d03	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x4006cf3	       0xf1f440000	                   nop dword [rax + rax]	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x4006cf8	        0x4883c278	                           add rdx, 0x78	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x4006cfc	          0x8b4a88	             mov ecx, dword [rdx - 0x78]	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x4006cff	            0x39f9	                            cmp ecx, edi	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x4006d01	            0x7410	                            je 0x4006d13	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x4006d03	          0x83c001	                              add eax, 1	      4228	quickfix.c	FUNCTION_72	FOR_1
0x4006d06	            0x39f0	                            cmp eax, esi	      4228	quickfix.c	FUNCTION_72	FOR_1
0x4006d08	            0x75ee	                           jne 0x4006cf8	      4228	quickfix.c	FUNCTION_72	FOR_1
0x4006d0a	        0x418b4f98	             mov ecx, dword [r15 - 0x68]	      4228	quickfix.c	FUNCTION_72	FOR_1
0x4006d0e	      0xb8ffffffff	                     mov eax, 0xffffffff	      4231	quickfix.c	FUNCTION_72
0x4006d13	        0x41894708	                mov dword [r15 + 8], eax	      4372	quickfix.c	FUNCTION_77	CALL_5
0x4006d17	        0x894c2464	             mov dword [rsp + 0x64], ecx	      4372	quickfix.c	FUNCTION_77	CALL_5
0x4006d1b	          0x4885ed	                           test rbp, rbp	      4623	quickfix.c	FUNCTION_80	FOR_1	IF_16
0x4006d1e	     0xf846c030000	                            je 0x4007090	      4623	quickfix.c	FUNCTION_80	FOR_1	IF_16
0x4006d24	      0x48837d0000	                      cmp qword [rbp], 0	      4395	quickfix.c	FUNCTION_78	FOR_1
0x4006d29	    0x8b84248c0000	            mov eax, dword [rsp + 0x8c] 	      4632	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	CALL_31
0x4006d30	     0xf8e07070000	                           jle 0x400743d	      4395	quickfix.c	FUNCTION_78	FOR_1
0x4006d36	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      4395	quickfix.c	FUNCTION_78	FOR_1
0x4006d3b	          0x83e001	                              and eax, 1	      4427	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_3
0x4006d3e	    0x41bc01000000	                             mov r12d, 1	      4395	quickfix.c	FUNCTION_78	FOR_1
0x4006d44	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      4395	quickfix.c	FUNCTION_78	FOR_1
0x4006d4c	        0x89442460	             mov dword [rsp + 0x60], eax	      4427	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_3
0x4006d50	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      4395	quickfix.c	FUNCTION_78	FOR_1
0x4006d55	           0xf1f00	                         nop dword [rax]	      4395	quickfix.c	FUNCTION_78	FOR_1
0x4006d58	            0x31db	                            xor ebx, ebx	      4395	quickfix.c	FUNCTION_78	FOR_1
0x4006d5a	      0xe9c2000000	                           jmp 0x4006e21	      4395	quickfix.c	FUNCTION_78	FOR_1
0x4006d5f	              0x90	                                     nop	      4395	quickfix.c	FUNCTION_78	FOR_1
0x4006d60	          0x4d89e6	                            mov r14, r12	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4006d63	    0x4c03b424b801	            add r14, qword [rsp + 0x1b8]	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4006d6b	    0x8b8424c00100	           mov eax, dword [rsp + 0x1c0] 	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4006d72	            0x31d2	                            xor edx, edx	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4006d74	          0x4889ef	                            mov rdi, rbp	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4006d77	        0x448d6801	                     lea r13d, [rax + 1]	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4006d7b	          0x4c89f6	                            mov rsi, r14	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4006d7e	      0xe800000000	                          call 0x4006d83	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4006d83	        0x8b542408	                mov edx, dword [rsp + 8]	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4006d87	          0x4531c9	                            xor r9d, r9d	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4006d8a	            0x85d2	                           test edx, edx	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4006d8c	            0x7507	                           jne 0x4006d95	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4006d8e	    0x448b8db80000	            mov r9d, dword [rbp + 0xb8] 	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4006d95	        0x418b7708	                mov esi, dword [r15 + 8]	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4006d99	            0x6a01	                                  push 1	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4006d9b	          0x4531c0	                            xor r8d, r8d	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4006d9e	            0x6a00	                                  push 0	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4006da0	            0x6a00	                                  push 0	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4006da2	            0x31d2	                            xor edx, edx	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4006da4	            0x6a00	                                  push 0	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4006da6	            0x6a00	                                  push 0	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4006da8	          0x4c89ff	                            mov rdi, r15	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4006dab	            0x4155	                                push r13	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4006dad	            0x4156	                                push r14	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4006daf	              0x50	                                push rax	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4006db0	      0x488b4c2440	            mov rcx, qword [rsp + 0x40] 	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4006db5	      0xe8e6a8ffff	                   call sym.qf_add_entry	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4006dba	        0x4883c440	                           add rsp, 0x40	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4006dbe	            0x85c0	                           test eax, eax	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4006dc0	     0xf84c2000000	                            je 0x4006e88	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4006dc6	    0x48836c241001	               sub qword [rsp + 0x10], 1	      4425	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_2
0x4006dcc	     0xf84c6000000	                            je 0x4006e98	      4425	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_2
0x4006dd2	      0x448b742460	           mov r14d, dword [rsp + 0x60] 	      4427	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_3
0x4006dd7	          0x4585f6	                         test r14d, r14d	      4427	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_3
0x4006dda	     0xf8498000000	                            je 0x4006e78	      4427	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_3
0x4006de0	    0x4883bc245802	              cmp qword [rsp + 0x258], 0	      4428	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_3
0x4006de9	     0xf8f89000000	                            jg 0x4006e78	      4428	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_3
0x4006def	    0x8b8424600200	           mov eax, dword [rsp + 0x260] 	      4431	quickfix.c	FUNCTION_78	FOR_1	WHILE_1
0x4006df6	          0x4c89e6	                            mov rsi, r12	      4432	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_4	CALL_5
0x4006df9	          0x4889ef	                            mov rdi, rbp	      4432	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_4	CALL_5
0x4006dfc	            0x39d8	                            cmp eax, ebx	      4431	quickfix.c	FUNCTION_78	FOR_1	WHILE_1
0x4006dfe	           0xf94c3	                                 sete bl	      4431	quickfix.c	FUNCTION_78	FOR_1	WHILE_1
0x4006e01	            0x31d2	                            xor edx, edx	      4432	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_4	CALL_5
0x4006e03	           0xfb6db	                           movzx ebx, bl	      4431	quickfix.c	FUNCTION_78	FOR_1	WHILE_1
0x4006e06	             0x1c3	                            add ebx, eax	      4430	quickfix.c	FUNCTION_78	FOR_1	WHILE_1
0x4006e08	      0xe800000000	                          call 0x4006e0d	      4432	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_4	CALL_5
0x4006e0d	          0x4889c7	                            mov rdi, rax	      4432	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_4	CALL_5
0x4006e10	      0xe800000000	                          call 0x4006e15	      4432	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_4	CALL_5
0x4006e15	            0x39c3	                            cmp ebx, eax	      4432	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_4	CALL_5
0x4006e17	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      4424	quickfix.c	FUNCTION_78	FOR_1	WHILE_1
0x4006e1f	            0x7f33	                            jg 0x4006e54	      4432	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_4	CALL_5
0x4006e21	        0x4883ec08	                              sub rsp, 8	      4398	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	CALL_1
0x4006e25	    0x488b35000000	            mov rsi, qword [0x04006e2c] 	      4398	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	CALL_1
0x4006e2c	          0x4531c9	                            xor r9d, r9d	      4398	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	CALL_1
0x4006e2f	            0x6a00	                                  push 0	      4398	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	CALL_1
0x4006e31	          0x4189d8	                            mov r8d, ebx	      4398	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	CALL_1
0x4006e34	          0x4c89e1	                            mov rcx, r12	      4398	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	CALL_1
0x4006e37	          0x4889ea	                            mov rdx, rbp	      4398	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	CALL_1
0x4006e3a	    0x488dbc24c001	                  lea rdi, [rsp + 0x1c0]	      4398	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	CALL_1
0x4006e42	      0xe800000000	                          call 0x4006e47	      4398	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	CALL_1
0x4006e47	          0x4885c0	                           test rax, rax	      4398	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	CALL_1
0x4006e4a	            0x415b	                                 pop r11	      4398	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	CALL_1
0x4006e4c	            0x415d	                                 pop r13	      4398	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	CALL_1
0x4006e4e	     0xf8f0cffffff	                            jg 0x4006d60	      4398	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	CALL_1
0x4006e54	      0xe800000000	                          call 0x4006e59	      4435	quickfix.c	FUNCTION_78	FOR_1	CALL_6
0x4006e59	    0x8b0500000000	            mov eax, dword [0x04006e5f] 	      4436	quickfix.c	FUNCTION_78	FOR_1	IF_5
0x4006e5f	            0x85c0	                           test eax, eax	      4436	quickfix.c	FUNCTION_78	FOR_1	IF_5
0x4006e61	            0x7548	                           jne 0x4006eab	      4436	quickfix.c	FUNCTION_78	FOR_1	IF_5
0x4006e63	        0x4983c401	                              add r12, 1	      4395	quickfix.c	FUNCTION_78	FOR_1
0x4006e67	        0x4c3b6500	                    cmp r12, qword [rbp]	      4395	quickfix.c	FUNCTION_78	FOR_1
0x4006e6b	     0xf8ee7feffff	                           jle 0x4006d58	      4395	quickfix.c	FUNCTION_78	FOR_1
0x4006e71	            0xeb38	                           jmp 0x4006eab	      4395	quickfix.c	FUNCTION_78	FOR_1
0x4006e73	       0xf1f440000	                   nop dword [rax + rax]	      4395	quickfix.c	FUNCTION_78	FOR_1
0x4006e78	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      4424	quickfix.c	FUNCTION_78	FOR_1	WHILE_1
0x4006e80	            0xebd2	                           jmp 0x4006e54	      4424	quickfix.c	FUNCTION_78	FOR_1	WHILE_1
0x4006e82	    0x660f1f440000	                    nop word [rax + rax]	      4424	quickfix.c	FUNCTION_78	FOR_1	WHILE_1
0x4006e88	    0xc70500000000	               mov dword [0x04006e92], 1	      4421	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1
0x4006e92	            0xebc0	                           jmp 0x4006e54	      4421	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1
0x4006e94	         0xf1f4000	                         nop dword [rax]	      4421	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1
0x4006e98	      0xe800000000	                          call 0x4006e9d	      4435	quickfix.c	FUNCTION_78	FOR_1	CALL_6
0x4006e9d	    0x8b0500000000	            mov eax, dword [0x04006ea3] 	      4436	quickfix.c	FUNCTION_78	FOR_1	IF_5
0x4006ea3	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      4424	quickfix.c	FUNCTION_78	FOR_1	WHILE_1
0x4006eab	      0x448b542478	           mov r10d, dword [rsp + 0x78] 	      4635	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18
0x4006eb0	          0x4585d2	                         test r10d, r10d	      4635	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18
0x4006eb3	     0xf84d4000000	                            je 0x4006f8d	      4635	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18
0x4006eb9	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      4637	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_19
0x4006ebe	          0x4885c0	                           test rax, rax	      4637	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_19
0x4006ec1	            0x7511	                           jne 0x4006ed4	      4637	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_19
0x4006ec3	      0x448b4c240c	              mov r9d, dword [rsp + 0xc]	      4637	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_19
0x4006ec8	          0x4585c9	                           test r9d, r9d	      4637	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_19
0x4006ecb	        0x480f45c5	                         cmovne rax, rbp	      4637	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_19
0x4006ecf	      0x4889442470	             mov qword [rsp + 0x70], rax	      4637	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_19
0x4006ed4	      0x448b442408	                mov r8d, dword [rsp + 8]	      4639	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_20
0x4006ed9	          0x4585c0	                           test r8d, r8d	      4639	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_20
0x4006edc	     0xf8580030000	                           jne 0x4007262	      4639	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_20
0x4006ee2	    0x8b3d00000000	            mov edi, dword [0x04006ee8] 	      4646	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21
0x4006ee8	            0x85ff	                           test edi, edi	      4646	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21
0x4006eea	     0xf8405030000	                            je 0x40071f5	      4646	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21
0x4006ef0	    0x488b85101400	          mov rax, qword [rbp + 0x1410] 	      4647	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21
0x4006ef7	           0xfb600	                   movzx eax, byte [rax]	      4647	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21
0x4006efa	            0x89c2	                            mov edx, eax	      4649	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21
0x4006efc	          0x83e2fd	                     and edx, 0xfffffffd	      4649	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21
0x4006eff	          0x80fa75	                            cmp dl, 0x75	      4649	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21
0x4006f02	     0xf84ed020000	                            je 0x40071f5	      4649	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21
0x4006f08	            0x3c64	                            cmp al, 0x64	      4649	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21
0x4006f0a	     0xf84e5020000	                            je 0x40071f5	      4649	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21
0x4006f10	    0x81657c7fffff	      and dword [rbp + 0x7c], 0xffffff7f	      4674	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24
0x4006f17	      0x483b6c2470	            cmp rbp, qword [rsp + 0x70] 	      4678	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	IF_25
0x4006f1c	            0x7528	                           jne 0x4006f46	      4678	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	IF_25
0x4006f1e	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      4678	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	IF_25
0x4006f24	            0x7520	                           jne 0x4006f46	      4678	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	IF_25
0x4006f26	      0x488b742450	            mov rsi, qword [rsp + 0x50] 	      4680	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	IF_25	CALL_35
0x4006f2b	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      4680	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	IF_25	CALL_35
0x4006f30	      0xe800000000	                          call 0x4006f35	      4680	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	IF_25	CALL_35
0x4006f35	            0x85c0	                           test eax, eax	      4680	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	IF_25	CALL_35
0x4006f37	    0x48c744242000	               mov qword [rsp + 0x20], 0	      4680	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	IF_25	CALL_35
0x4006f40	     0xf85c4040000	                           jne 0x400740a	      4680	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	IF_25	CALL_35
0x4006f46	    0x488dbc24c000	                   lea rdi, [rsp + 0xc0]	      4687	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_37
0x4006f4e	          0x4889ee	                            mov rsi, rbp	      4687	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_37
0x4006f51	      0xe800000000	                          call 0x4006f56	      4687	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_37
0x4006f56	    0x488b95980000	            mov rdx, qword [rbp + 0x98] 	      4689	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_38
0x4006f5d	    0x488bb5981400	          mov rsi, qword [rbp + 0x1498] 	      4689	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_38
0x4006f64	          0x4989e8	                             mov r8, rbp	      4689	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_38
0x4006f67	      0xb901000000	                              mov ecx, 1	      4689	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_38
0x4006f6c	      0xbf2c000000	                           mov edi, 0x2c	      4689	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_38
0x4006f71	      0xe800000000	                          call 0x4006f76	      4689	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_38
0x4006f76	      0xbf20000000	                           mov edi, 0x20	      4692	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_39
0x4006f7b	      0xe800000000	                          call 0x4006f80	      4692	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_39
0x4006f80	    0x488dbc24c000	                   lea rdi, [rsp + 0xc0]	      4693	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_40
0x4006f88	      0xe800000000	                          call 0x4006f8d	      4693	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_40
0x4006f8d	      0x488b4c2440	            mov rcx, qword [rsp + 0x40] 	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4006f92	    0x8bbc24880000	            mov edi, dword [rsp + 0x88] 	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4006f99	            0x89c8	                            mov eax, ecx	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4006f9b	          0x83c001	                              add eax, 1	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4006f9e	            0x39c7	                            cmp edi, eax	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4006fa0	            0x7e17	                           jle 0x4006fb9	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4006fa2	    0x8b0500000000	            mov eax, dword [0x04006fa8] 	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4006fa8	        0x4883c101	                              add rcx, 1	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4006fac	      0x48894c2440	             mov qword [rsp + 0x40], rcx	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4006fb1	            0x85c0	                           test eax, eax	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4006fb3	     0xf8437fcffff	                            je 0x4006bf0	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4006fb9	    0x488bb4249000	            mov rsi, qword [rsp + 0x90] 	      4699	quickfix.c	FUNCTION_80	CALL_41
0x4006fc1	      0xe800000000	                          call 0x4006fc6	      4699	quickfix.c	FUNCTION_80	CALL_41
0x4006fc6	        0x49634708	            movsxd rax, dword [r15 + 8] 	      4701	quickfix.c	FUNCTION_80
0x4006fca	            0x31f6	                            xor esi, esi	      4706	quickfix.c	FUNCTION_80	CALL_43
0x4006fcc	          0x4c89ff	                            mov rdi, r15	      4706	quickfix.c	FUNCTION_80	CALL_43
0x4006fcf	    0x488d14c50000	                        lea rdx, [rax*8]	      4701	quickfix.c	FUNCTION_80
0x4006fd7	        0x48c1e007	                              shl rax, 7	      4701	quickfix.c	FUNCTION_80
0x4006fdb	          0x4829d0	                            sub rax, rdx	      4701	quickfix.c	FUNCTION_80
0x4006fde	          0x4c01f8	                            add rax, r15	      4701	quickfix.c	FUNCTION_80
0x4006fe1	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      4702	quickfix.c	FUNCTION_80
0x4006fe5	    0x488380800000	               add qword [rax + 0x80], 1	      3701	quickfix.c	FUNCTION_61
0x4006fed	    0xc74038000000	               mov dword [rax + 0x38], 0	      4701	quickfix.c	FUNCTION_80
0x4006ff4	    0xc74034010000	               mov dword [rax + 0x34], 1	      4703	quickfix.c	FUNCTION_80
0x4006ffb	        0x48895028	             mov qword [rax + 0x28], rdx	      4702	quickfix.c	FUNCTION_80
0x4006fff	      0xe8aca9ffff	               call sym.qf_update_buffer	      4706	quickfix.c	FUNCTION_80	CALL_43
0x4007004	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      4708	quickfix.c	FUNCTION_80	IF_26
0x4007009	          0x4885c0	                           test rax, rax	      4708	quickfix.c	FUNCTION_80	IF_26
0x400700c	            0x7420	                            je 0x400702e	      4708	quickfix.c	FUNCTION_80	IF_26
0x400700e	    0x4c8b05000000	              mov r8, qword [0x04007015]	      4710	quickfix.c	FUNCTION_80	IF_26
0x4007015	      0xb901000000	                              mov ecx, 1	      4709	quickfix.c	FUNCTION_80	IF_26	CALL_44
0x400701a	          0x4889c6	                            mov rsi, rax	      4709	quickfix.c	FUNCTION_80	IF_26	CALL_44
0x400701d	      0xbf3f000000	                           mov edi, 0x3f	      4709	quickfix.c	FUNCTION_80	IF_26	CALL_44
0x4007022	    0x498b90980000	              mov rdx, qword [r8 + 0x98]	      4709	quickfix.c	FUNCTION_80	IF_26	CALL_44
0x4007029	      0xe800000000	                          call 0x400702e	      4709	quickfix.c	FUNCTION_80	IF_26	CALL_44
0x400702e	        0x8b742464	            mov esi, dword [rsp + 0x64] 	      4715	quickfix.c	FUNCTION_80	IF_27	CALL_45
0x4007032	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      4715	quickfix.c	FUNCTION_80	IF_27	CALL_45
0x4007037	      0xe89490ffff	                   call sym.qflist_valid	      4715	quickfix.c	FUNCTION_80	IF_27	CALL_45
0x400703c	            0x85c0	                           test eax, eax	      4715	quickfix.c	FUNCTION_80	IF_27	CALL_45
0x400703e	     0xf84f9f9ffff	                            je 0x4006a3d	      4715	quickfix.c	FUNCTION_80	IF_27	CALL_45
0x4007044	        0x49634708	            movsxd rax, dword [r15 + 8] 	      4719	quickfix.c	FUNCTION_80	IF_28
0x4007048	    0x488d14c50000	                        lea rdx, [rax*8]	      4719	quickfix.c	FUNCTION_80	IF_28
0x4007050	        0x48c1e007	                              shl rax, 7	      4719	quickfix.c	FUNCTION_80	IF_28
0x4007054	          0x4829d0	                            sub rax, rdx	      4719	quickfix.c	FUNCTION_80	IF_28
0x4007057	      0x418b4c0730	      mov ecx, dword [r15 + rax + 0x30] 	      4719	quickfix.c	FUNCTION_80	IF_28
0x400705c	            0x85c9	                           test ecx, ecx	      4719	quickfix.c	FUNCTION_80	IF_28
0x400705e	     0xf8e74040000	                           jle 0x40074d8	      4719	quickfix.c	FUNCTION_80	IF_28
0x4007064	    0xf684248c0000	               test byte [rsp + 0x8c], 2	      4721	quickfix.c	FUNCTION_80	IF_28	IF_29
0x400706c	     0xf84eb030000	                            je 0x400745d	      4721	quickfix.c	FUNCTION_80	IF_28	IF_29
0x4007072	        0x8b54247c	            mov edx, dword [rsp + 0x7c] 	      4730	quickfix.c	FUNCTION_80	IF_30
0x4007076	            0x85d2	                           test edx, edx	      4730	quickfix.c	FUNCTION_80	IF_30
0x4007078	     0xf84bff9ffff	                            je 0x4006a3d	      4730	quickfix.c	FUNCTION_80	IF_30
0x400707e	    0x488b3d000000	            mov rdi, qword [0x04007085] 	      4733	quickfix.c	FUNCTION_80	IF_30	CALL_49
0x4007085	      0xe800000000	                          call 0x400708a	      4733	quickfix.c	FUNCTION_80	IF_30	CALL_49
0x400708a	      0xe9aef9ffff	                           jmp 0x4006a3d	      4733	quickfix.c	FUNCTION_80	IF_30	CALL_49
0x400708f	              0x90	                                     nop	      4733	quickfix.c	FUNCTION_80	IF_30	CALL_49
0x4007090	    0x8b0500000000	            mov eax, dword [0x04007096] 	      4625	quickfix.c	FUNCTION_80	FOR_1	IF_16	IF_17
0x4007096	            0x85c0	                           test eax, eax	      4625	quickfix.c	FUNCTION_80	FOR_1	IF_16	IF_17
0x4007098	     0xf85effeffff	                           jne 0x4006f8d	      4625	quickfix.c	FUNCTION_80	FOR_1	IF_16	IF_17
0x400709e	            0x31ff	                            xor edi, edi	      4626	quickfix.c	FUNCTION_80	FOR_1	IF_16	CALL_30
0x40070a0	      0xba05000000	                              mov edx, 5	      4626	quickfix.c	FUNCTION_80	FOR_1	IF_16	CALL_30
0x40070a5	      0xbe00000000	                              mov esi, 0	      4626	quickfix.c	FUNCTION_80	FOR_1	IF_16	CALL_30
0x40070aa	      0xe800000000	                          call 0x40070af	      4626	quickfix.c	FUNCTION_80	FOR_1	IF_16	CALL_30
0x40070af	        0x488b3424	                    mov rsi, qword [rsp]	      4626	quickfix.c	FUNCTION_80	FOR_1	IF_16	CALL_30
0x40070b3	          0x4889c7	                            mov rdi, rax	      4626	quickfix.c	FUNCTION_80	FOR_1	IF_16	CALL_30
0x40070b6	            0x31c0	                            xor eax, eax	      4626	quickfix.c	FUNCTION_80	FOR_1	IF_16	CALL_30
0x40070b8	      0xe800000000	                          call 0x40070bd	      4626	quickfix.c	FUNCTION_80	FOR_1	IF_16	CALL_30
0x40070bd	      0xe9cbfeffff	                           jmp 0x4006f8d	      4626	quickfix.c	FUNCTION_80	FOR_1	IF_16	CALL_30
0x40070c2	            0x31ff	                            xor edi, edi	      4596	quickfix.c	FUNCTION_80	FOR_1	IF_13	CALL_23
0x40070c4	      0xe800000000	                          call 0x40070c9	      4596	quickfix.c	FUNCTION_80	FOR_1	IF_13	CALL_23
0x40070c9	      0x4889442468	             mov qword [rsp + 0x68], rax	      4596	quickfix.c	FUNCTION_80	FOR_1	IF_13	CALL_23
0x40070ce	      0xe800000000	                          call 0x40070d3	      4288	quickfix.c	FUNCTION_75	CALL_1
0x40070d3	        0x488b3c24	                    mov rdi, qword [rsp]	      4289	quickfix.c	FUNCTION_75	CALL_2
0x40070d7	      0xbe01000000	                              mov esi, 1	      4289	quickfix.c	FUNCTION_75	CALL_2
0x40070dc	      0xe800000000	                          call 0x40070e1	      4289	quickfix.c	FUNCTION_75	CALL_2
0x40070e1	          0x4885c0	                           test rax, rax	      4290	quickfix.c	FUNCTION_75	IF_1
0x40070e4	          0x4889c5	                            mov rbp, rax	      4289	quickfix.c	FUNCTION_75	CALL_2
0x40070e7	     0xf8442030000	                            je 0x400742f	      4290	quickfix.c	FUNCTION_75	IF_1
0x40070ed	          0x4889c7	                            mov rdi, rax	      4294	quickfix.c	FUNCTION_75	ELSE_1	CALL_4
0x40070f0	      0xe800000000	                          call 0x40070f5	      4294	quickfix.c	FUNCTION_75	ELSE_1	CALL_4
0x40070f5	          0x4889ef	                            mov rdi, rbp	      4295	quickfix.c	FUNCTION_75	ELSE_1	CALL_5
0x40070f8	      0xe800000000	                          call 0x40070fd	      4295	quickfix.c	FUNCTION_75	ELSE_1	CALL_5
0x40070fd	      0xe800000000	                          call 0x4007102	      4297	quickfix.c	FUNCTION_75	CALL_6
0x4007102	    0xc70500000000	               mov dword [0x0400710c], 0	      4298	quickfix.c	FUNCTION_75
0x400710c	    0xc70500000000	               mov dword [0x04007116], 1	      4299	quickfix.c	FUNCTION_75
0x4007116	    0xc70500000000	               mov dword [0x04007120], 0	      4300	quickfix.c	FUNCTION_75
0x4007120	      0xe800000000	                          call 0x4007125	      4301	quickfix.c	FUNCTION_75	CALL_7
0x4007125	      0xe9fafaffff	                           jmp 0x4006c24	      4301	quickfix.c	FUNCTION_75	CALL_7
0x400712a	            0x31c0	                            xor eax, eax	      4604	quickfix.c	FUNCTION_80	FOR_1	IF_14
0x400712c	          0x4885ed	                           test rbp, rbp	      4604	quickfix.c	FUNCTION_80	FOR_1	IF_14
0x400712f	      0xbf00000000	                              mov edi, 0	      4322	quickfix.c	FUNCTION_76	CALL_1
0x4007134	           0xf95c0	                                setne al	      4604	quickfix.c	FUNCTION_80	FOR_1	IF_14
0x4007137	        0x89442408	                mov dword [rsp + 8], eax	      4604	quickfix.c	FUNCTION_80	FOR_1	IF_14
0x400713b	      0xe800000000	                          call 0x4007140	      4322	quickfix.c	FUNCTION_76	CALL_1
0x4007140	            0x31f6	                            xor esi, esi	      4799	quickfix.c	FUNCTION_82	CALL_1
0x4007142	            0x31ff	                            xor edi, edi	      4799	quickfix.c	FUNCTION_82	CALL_1
0x4007144	      0xb904000000	                              mov ecx, 4	      4799	quickfix.c	FUNCTION_82	CALL_1
0x4007149	      0xba01000000	                              mov edx, 1	      4799	quickfix.c	FUNCTION_82	CALL_1
0x400714e	    0x488b1d000000	            mov rbx, qword [0x04007155] 	      4325	quickfix.c	FUNCTION_76
0x4007155	          0x4989c4	                            mov r12, rax	      4322	quickfix.c	FUNCTION_76	CALL_1
0x4007158	    0x48c705000000	               mov qword [0x04007163], 0	      4326	quickfix.c	FUNCTION_76
0x4007163	      0xe800000000	                          call 0x4007168	      4799	quickfix.c	FUNCTION_82	CALL_1
0x4007168	          0x4885c0	                           test rax, rax	      4800	quickfix.c	FUNCTION_82	IF_1
0x400716b	          0x4889c5	                            mov rbp, rax	      4799	quickfix.c	FUNCTION_82	CALL_1
0x400716e	            0x745c	                            je 0x40071cc	      4800	quickfix.c	FUNCTION_82	IF_1
0x4007170	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      4802	quickfix.c	FUNCTION_82	CALL_2
0x4007178	          0x4889c6	                            mov rsi, rax	      4802	quickfix.c	FUNCTION_82	CALL_2
0x400717b	      0xe800000000	                          call 0x4007180	      4802	quickfix.c	FUNCTION_82	CALL_2
0x4007180	      0xbe05000000	                              mov esi, 5	      4805	quickfix.c	FUNCTION_82	CALL_3
0x4007185	          0x4889ef	                            mov rdi, rbp	      4805	quickfix.c	FUNCTION_82	CALL_3
0x4007188	      0xe800000000	                          call 0x400718d	      4805	quickfix.c	FUNCTION_82	CALL_3
0x400718d	          0x4889ef	                            mov rdi, rbp	      4808	quickfix.c	FUNCTION_82	IF_2	CALL_4
0x4007190	      0xe800000000	                          call 0x4007195	      4808	quickfix.c	FUNCTION_82	IF_2	CALL_4
0x4007195	          0x83f801	                              cmp eax, 1	      4808	quickfix.c	FUNCTION_82	IF_2	CALL_4
0x4007198	     0xf844a010000	                            je 0x40072e8	      4808	quickfix.c	FUNCTION_82	IF_2	CALL_4
0x400719e	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      4862	quickfix.c	FUNCTION_82	CALL_13
0x40071a3	      0xbe00100000	                         mov esi, 0x1000	      4862	quickfix.c	FUNCTION_82	CALL_13
0x40071a8	      0xe800000000	                          call 0x40071ad	      4862	quickfix.c	FUNCTION_82	CALL_13
0x40071ad	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      4863	quickfix.c	FUNCTION_82	CALL_14
0x40071b2	      0xe8b99effff	              call sym.restore_start_dir	      4863	quickfix.c	FUNCTION_82	CALL_14
0x40071b7	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      4865	quickfix.c	FUNCTION_82	IF_6	CALL_15
0x40071bf	      0xe800000000	                          call 0x40071c4	      4865	quickfix.c	FUNCTION_82	IF_6	CALL_15
0x40071c4	            0x85c0	                           test eax, eax	      4865	quickfix.c	FUNCTION_82	IF_6	CALL_15
0x40071c6	     0xf8519020000	                           jne 0x40073e5	      4865	quickfix.c	FUNCTION_82	IF_6	CALL_15
0x40071cc	            0x31ed	                            xor ebp, ebp	      4870	quickfix.c	FUNCTION_82	IF_7
0x40071ce	          0x4863db	                         movsxd rbx, ebx	      4332	quickfix.c	FUNCTION_76
0x40071d1	          0x4c89e7	                            mov rdi, r12	      4334	quickfix.c	FUNCTION_76	CALL_3
0x40071d4	    0x48891d000000	            mov qword [0x040071db], rbx 	      4332	quickfix.c	FUNCTION_76
0x40071db	      0xe800000000	                          call 0x40071e0	      4334	quickfix.c	FUNCTION_76	CALL_3
0x40071e0	    0xc744247c0100	               mov dword [rsp + 0x7c], 1	      4606	quickfix.c	FUNCTION_80	FOR_1	IF_14
0x40071e8	    0xc74424780100	               mov dword [rsp + 0x78], 1	      4605	quickfix.c	FUNCTION_80	FOR_1	IF_14
0x40071f0	      0xe95ffaffff	                           jmp 0x4006c54	      4608	quickfix.c	FUNCTION_80	FOR_1	IF_14	CALL_26
0x40071f5	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      4657	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21	IF_22
0x40071f9	            0x85f6	                           test esi, esi	      4657	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21	IF_22
0x40071fb	            0x7465	                            je 0x4007262	      4657	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21	IF_22
0x40071fd	      0x483b6c2470	            cmp rbp, qword [rsp + 0x70] 	      4662	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21	ELSE_5	IF_23
0x4007202	     0xf84ef010000	                            je 0x40073f7	      4662	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21	ELSE_5	IF_23
0x4007208	    0x483b2d000000	            cmp rbp, qword [0x0400720f] 	      4914	quickfix.c	FUNCTION_84	IF_1
0x400720f	            0x741b	                            je 0x400722c	      4914	quickfix.c	FUNCTION_84	IF_1
0x4007211	            0x31ff	                            xor edi, edi	      4916	quickfix.c	FUNCTION_84	IF_1	CALL_1
0x4007213	            0x31c9	                            xor ecx, ecx	      4916	quickfix.c	FUNCTION_84	IF_1	CALL_1
0x4007215	      0xba02000000	                              mov edx, 2	      4916	quickfix.c	FUNCTION_84	IF_1	CALL_1
0x400721a	          0x4889ee	                            mov rsi, rbp	      4916	quickfix.c	FUNCTION_84	IF_1	CALL_1
0x400721d	      0xe800000000	                          call 0x4007222	      4916	quickfix.c	FUNCTION_84	IF_1	CALL_1
0x4007222	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      4919	quickfix.c	FUNCTION_84	IF_1	CALL_2
0x4007227	      0xe8449effff	              call sym.restore_start_dir	      4919	quickfix.c	FUNCTION_84	IF_1	CALL_2
0x400722c	    0x81657c7fffff	      and dword [rbp + 0x7c], 0xffffff7f	      4666	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21	ELSE_5	IF_23
0x4007233	      0xe955fdffff	                           jmp 0x4006f8d	      4666	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21	ELSE_5	IF_23
0x4007238	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4249	quickfix.c	FUNCTION_73	SWITCH_1
0x4007241	      0xe99af5ffff	                           jmp 0x40067e0	      4249	quickfix.c	FUNCTION_73	SWITCH_1
0x4007246	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4248	quickfix.c	FUNCTION_73	SWITCH_1
0x400724f	      0xe98cf5ffff	                           jmp 0x40067e0	      4248	quickfix.c	FUNCTION_73	SWITCH_1
0x4007254	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4246	quickfix.c	FUNCTION_73	SWITCH_1
0x400725d	      0xe97ef5ffff	                           jmp 0x40067e0	      4246	quickfix.c	FUNCTION_73	SWITCH_1
0x4007262	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      4659	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21	IF_22	CALL_33
0x4007267	          0x4889ef	                            mov rdi, rbp	      4659	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21	IF_22	CALL_33
0x400726a	      0xe8b19effff	              call sym.wipe_dummy_buffer	      4659	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21	IF_22	CALL_33
0x400726f	      0xe919fdffff	                           jmp 0x4006f8d	      4659	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21	IF_22	CALL_33
0x4007274	    0x488bb4249000	            mov rsi, qword [rsp + 0x90] 	      4576	quickfix.c	FUNCTION_80	IF_12	CALL_19
0x400727c	    0x8bbc24880000	            mov edi, dword [rsp + 0x88] 	      4576	quickfix.c	FUNCTION_80	IF_12	CALL_19
0x4007283	      0xe800000000	                          call 0x4007288	      4576	quickfix.c	FUNCTION_80	IF_12	CALL_19
0x4007288	    0x48c744242000	               mov qword [rsp + 0x20], 0	      4506	quickfix.c	FUNCTION_80
0x4007291	      0xe9a7f7ffff	                           jmp 0x4006a3d	      4577	quickfix.c	FUNCTION_80	IF_12
0x4007296	      0xba05000000	                              mov edx, 5	      4268	quickfix.c	FUNCTION_74	IF_1	IF_2	CALL_3
0x400729b	      0xbe00000000	                              mov esi, 0	      4268	quickfix.c	FUNCTION_74	IF_1	IF_2	CALL_3
0x40072a0	            0x31ff	                            xor edi, edi	      4268	quickfix.c	FUNCTION_74	IF_1	IF_2	CALL_3
0x40072a2	      0xe800000000	                          call 0x40072a7	      4268	quickfix.c	FUNCTION_74	IF_1	IF_2	CALL_3
0x40072a7	          0x4889c7	                            mov rdi, rax	      4268	quickfix.c	FUNCTION_74	IF_1	IF_2	CALL_3
0x40072aa	      0xe800000000	                          call 0x40072af	      4268	quickfix.c	FUNCTION_74	IF_1	IF_2	CALL_3
0x40072af	    0x488b8424b001	           mov rax, qword [rsp + 0x1b0] 	      4268	quickfix.c	FUNCTION_74	IF_1	IF_2	CALL_3
0x40072b7	      0xe9aff6ffff	                           jmp 0x400696b	      4268	quickfix.c	FUNCTION_74	IF_1	IF_2	CALL_3
0x40072bc	          0x4889de	                            mov rsi, rbx	      4364	quickfix.c	FUNCTION_77	IF_1	ELSE_1	CALL_4
0x40072bf	          0x4c89ff	                            mov rdi, r15	      4364	quickfix.c	FUNCTION_77	IF_1	ELSE_1	CALL_4
0x40072c2	      0xe8f992ffff	                    call sym.qf_new_list	      4364	quickfix.c	FUNCTION_77	IF_1	ELSE_1	CALL_4
0x40072c7	        0x49634708	            movsxd rax, dword [r15 + 8] 	      4364	quickfix.c	FUNCTION_77	IF_1	ELSE_1	CALL_4
0x40072cb	    0x488d14c50000	                        lea rdx, [rax*8]	      4364	quickfix.c	FUNCTION_77	IF_1	ELSE_1	CALL_4
0x40072d3	        0x48c1e007	                              shl rax, 7	      4364	quickfix.c	FUNCTION_77	IF_1	ELSE_1	CALL_4
0x40072d7	          0x4829d0	                            sub rax, rdx	      4364	quickfix.c	FUNCTION_77	IF_1	ELSE_1	CALL_4
0x40072da	      0x418b440710	      mov eax, dword [r15 + rax + 0x10] 	      4364	quickfix.c	FUNCTION_77	IF_1	ELSE_1	CALL_4
0x40072df	        0x89442464	             mov dword [rsp + 0x64], eax	      4364	quickfix.c	FUNCTION_77	IF_1	ELSE_1	CALL_4
0x40072e3	      0xe933faffff	                           jmp 0x4006d1b	      4364	quickfix.c	FUNCTION_77	IF_1	ELSE_1	CALL_4
0x40072e8	    0x838580000000	               add dword [rbp + 0x80], 1	      4811	quickfix.c	FUNCTION_82	IF_2
0x40072ef	    0x488dbc240001	                  lea rdi, [rsp + 0x100]	      4814	quickfix.c	FUNCTION_82	IF_2	CALL_5
0x40072f7	          0x4889ee	                            mov rsi, rbp	      4814	quickfix.c	FUNCTION_82	IF_2	CALL_5
0x40072fa	    0x41bd01000000	                             mov r13d, 1	      4794	quickfix.c	FUNCTION_82
0x4007300	      0xe800000000	                          call 0x4007305	      4814	quickfix.c	FUNCTION_82	IF_2	CALL_5
0x4007305	        0x4c8b3424	                    mov r14, qword [rsp]	      4817	quickfix.c	FUNCTION_82	IF_2	CALL_6
0x4007309	    0x488b3d000000	            mov rdi, qword [0x04007310] 	      4817	quickfix.c	FUNCTION_82	IF_2	CALL_6
0x4007310	            0x31c9	                            xor ecx, ecx	      4817	quickfix.c	FUNCTION_82	IF_2	CALL_6
0x4007312	            0x31d2	                            xor edx, edx	      4817	quickfix.c	FUNCTION_82	IF_2	CALL_6
0x4007314	          0x4c89f6	                            mov rsi, r14	      4817	quickfix.c	FUNCTION_82	IF_2	CALL_6
0x4007317	      0xe800000000	                          call 0x400731c	      4817	quickfix.c	FUNCTION_82	IF_2	CALL_6
0x400731c	      0xbf01000000	                              mov edi, 1	      4820	quickfix.c	FUNCTION_82	IF_2	CALL_7
0x4007321	      0xe800000000	                          call 0x4007326	      4820	quickfix.c	FUNCTION_82	IF_2	CALL_7
0x4007326	    0x488b05000000	            mov rax, qword [0x0400732d] 	      4824	quickfix.c	FUNCTION_82	IF_2
0x400732d	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	      4826	quickfix.c	FUNCTION_82	IF_2
0x4007339	        0x4883ec08	                              sub rsp, 8	      4827	quickfix.c	FUNCTION_82	IF_2	CALL_8
0x400733d	            0x31c9	                            xor ecx, ecx	      4827	quickfix.c	FUNCTION_82	IF_2	CALL_8
0x400733f	            0x31f6	                            xor esi, esi	      4827	quickfix.c	FUNCTION_82	IF_2	CALL_8
0x4007341	          0x4531c9	                            xor r9d, r9d	      4827	quickfix.c	FUNCTION_82	IF_2	CALL_8
0x4007344	            0x31d2	                            xor edx, edx	      4827	quickfix.c	FUNCTION_82	IF_2	CALL_8
0x4007346	    0x41b8ffffff7f	                     mov r8d, 0x7fffffff	      4827	quickfix.c	FUNCTION_82	IF_2	CALL_8
0x400734c	          0x4c89f7	                            mov rdi, r14	      4827	quickfix.c	FUNCTION_82	IF_2	CALL_8
0x400734f	    0x81607c7fffff	      and dword [rax + 0x7c], 0xffffff7f	      4824	quickfix.c	FUNCTION_82	IF_2
0x4007356	            0x6a11	                               push 0x11	      4827	quickfix.c	FUNCTION_82	IF_2	CALL_8
0x4007358	      0xe800000000	                          call 0x400735d	      4827	quickfix.c	FUNCTION_82	IF_2	CALL_8
0x400735d	    0x83ad80000000	               sub dword [rbp + 0x80], 1	      4830	quickfix.c	FUNCTION_82	IF_2
0x4007364	          0x83f801	                              cmp eax, 1	      4831	quickfix.c	FUNCTION_82	IF_2	IF_3
0x4007367	              0x59	                                 pop rcx	      4831	quickfix.c	FUNCTION_82	IF_2	IF_3
0x4007368	              0x5e	                                 pop rsi	      4831	quickfix.c	FUNCTION_82	IF_2	IF_3
0x4007369	     0xf8492010000	                            je 0x4007501	      4831	quickfix.c	FUNCTION_82	IF_2	IF_3
0x400736f	    0x488dbc240001	                  lea rdi, [rsp + 0x100]	      4848	quickfix.c	FUNCTION_82	IF_2	CALL_10
0x4007377	      0xe800000000	                          call 0x400737c	      4848	quickfix.c	FUNCTION_82	IF_2	CALL_10
0x400737c	    0x4883bc24b000	               cmp qword [rsp + 0xb0], 0	      4849	quickfix.c	FUNCTION_82	IF_2	IF_5	CALL_11
0x4007385	            0x7420	                            je 0x40073a7	      4849	quickfix.c	FUNCTION_82	IF_2	IF_5	CALL_11
0x4007387	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      4849	quickfix.c	FUNCTION_82	IF_2	IF_5	CALL_11
0x400738f	      0xe800000000	                          call 0x4007394	      4849	quickfix.c	FUNCTION_82	IF_2	IF_5	CALL_11
0x4007394	            0x85c0	                           test eax, eax	      4849	quickfix.c	FUNCTION_82	IF_2	IF_5	CALL_11
0x4007396	            0x740f	                            je 0x40073a7	      4849	quickfix.c	FUNCTION_82	IF_2	IF_5	CALL_11
0x4007398	    0x488bbc24b000	            mov rdi, qword [rsp + 0xb0] 	      4850	quickfix.c	FUNCTION_82	IF_2	CALL_12
0x40073a0	            0x31f6	                            xor esi, esi	      4850	quickfix.c	FUNCTION_82	IF_2	CALL_12
0x40073a2	      0xe800000000	                          call 0x40073a7	      4850	quickfix.c	FUNCTION_82	IF_2	CALL_12
0x40073a7	    0x814d7c800000	             or dword [rbp + 0x7c], 0x80	      4854	quickfix.c	FUNCTION_82	IF_2
0x40073ae	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      4862	quickfix.c	FUNCTION_82	CALL_13
0x40073b3	      0xbe00100000	                         mov esi, 0x1000	      4862	quickfix.c	FUNCTION_82	CALL_13
0x40073b8	      0xe800000000	                          call 0x40073bd	      4862	quickfix.c	FUNCTION_82	CALL_13
0x40073bd	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      4863	quickfix.c	FUNCTION_82	CALL_14
0x40073c2	      0xe8a99cffff	              call sym.restore_start_dir	      4863	quickfix.c	FUNCTION_82	CALL_14
0x40073c7	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      4865	quickfix.c	FUNCTION_82	IF_6	CALL_15
0x40073cf	      0xe800000000	                          call 0x40073d4	      4865	quickfix.c	FUNCTION_82	IF_6	CALL_15
0x40073d4	            0x85c0	                           test eax, eax	      4865	quickfix.c	FUNCTION_82	IF_6	CALL_15
0x40073d6	     0xf84f0fdffff	                            je 0x40071cc	      4865	quickfix.c	FUNCTION_82	IF_6	CALL_15
0x40073dc	          0x4585ed	                         test r13d, r13d	      4867	quickfix.c	FUNCTION_82	IF_7
0x40073df	     0xf84e9fdffff	                            je 0x40071ce	      4867	quickfix.c	FUNCTION_82	IF_7
0x40073e5	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      4869	quickfix.c	FUNCTION_82	IF_7	CALL_16
0x40073ea	          0x4889ef	                            mov rdi, rbp	      4869	quickfix.c	FUNCTION_82	IF_7	CALL_16
0x40073ed	      0xe82e9dffff	              call sym.wipe_dummy_buffer	      4869	quickfix.c	FUNCTION_82	IF_7	CALL_16
0x40073f2	      0xe9d5fdffff	                           jmp 0x40071cc	      4869	quickfix.c	FUNCTION_82	IF_7	CALL_16
0x40073f7	    0xf684248c0000	               test byte [rsp + 0x8c], 2	      4662	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21	ELSE_5	IF_23
0x40073ff	     0xf840bfbffff	                            je 0x4006f10	      4662	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21	ELSE_5	IF_23
0x4007405	      0xe9fefdffff	                           jmp 0x4007208	      4662	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21	ELSE_5	IF_23
0x400740a	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      4681	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_36
0x400740f	      0xe800000000	                          call 0x4007414	      4681	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_36
0x4007414	      0x4889442420	             mov qword [rsp + 0x20], rax	      4681	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_36
0x4007419	      0xe928fbffff	                           jmp 0x4006f46	      4681	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_36
0x400741e	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4561	quickfix.c	FUNCTION_80	CALL_13
0x4007423	        0x488b5118	            mov rdx, qword [rcx + 0x18] 	      4561	quickfix.c	FUNCTION_80	CALL_13
0x4007427	          0x488b32	                    mov rsi, qword [rdx]	      4561	quickfix.c	FUNCTION_80	CALL_13
0x400742a	      0xe99af5ffff	                           jmp 0x40069c9	      4561	quickfix.c	FUNCTION_80	CALL_13
0x400742f	        0x488b3c24	                    mov rdi, qword [rsp]	      4291	quickfix.c	FUNCTION_75	CALL_3
0x4007433	      0xe800000000	                          call 0x4007438	      4291	quickfix.c	FUNCTION_75	CALL_3
0x4007438	      0xe9c0fcffff	                           jmp 0x40070fd	      4291	quickfix.c	FUNCTION_75	CALL_3
0x400743d	        0x8b442478	            mov eax, dword [rsp + 0x78] 	      4635	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18
0x4007441	            0x85c0	                           test eax, eax	      4635	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18
0x4007443	     0xf8444fbffff	                            je 0x4006f8d	      4635	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18
0x4007449	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      4391	quickfix.c	FUNCTION_78
0x4007451	      0xe97efaffff	                           jmp 0x4006ed4	      4391	quickfix.c	FUNCTION_78
0x4007456	            0x31c0	                            xor eax, eax	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x4007458	      0xe9b6f8ffff	                           jmp 0x4006d13	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x400745d	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4457	quickfix.c	FUNCTION_79	CALL_1
0x4007462	            0x31d2	                            xor edx, edx	      4457	quickfix.c	FUNCTION_79	CALL_1
0x4007464	            0x31f6	                            xor esi, esi	      4457	quickfix.c	FUNCTION_79	CALL_1
0x4007466	          0x4c89ff	                            mov rdi, r15	      4457	quickfix.c	FUNCTION_79	CALL_1
0x4007469	    0x488b1d000000	            mov rbx, qword [0x04007470] 	      4456	quickfix.c	FUNCTION_79
0x4007470	          0x8b4834	            mov ecx, dword [rax + 0x34] 	      4457	quickfix.c	FUNCTION_79	CALL_1
0x4007473	      0xe800000000	                          call 0x4007478	      4457	quickfix.c	FUNCTION_79	CALL_1
0x4007478	    0x488b05000000	            mov rax, qword [0x0400747f] 	      4458	quickfix.c	FUNCTION_79	IF_1
0x400747f	          0x4839c3	                            cmp rbx, rax	      4458	quickfix.c	FUNCTION_79	IF_1
0x4007482	     0xf84c8000000	                            je 0x4007550	      4458	quickfix.c	FUNCTION_79	IF_1
0x4007488	      0x483b442470	            cmp rax, qword [rsp + 0x70] 	      4464	quickfix.c	FUNCTION_79	IF_2
0x400748d	     0xf85aaf5ffff	                           jne 0x4006a3d	      4464	quickfix.c	FUNCTION_79	IF_2
0x4007493	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      4464	quickfix.c	FUNCTION_79	IF_2
0x4007499	    0xc744247c0000	               mov dword [rsp + 0x7c], 0	      4461	quickfix.c	FUNCTION_79	IF_1
0x40074a1	     0xf8496f5ffff	                            je 0x4006a3d	      4464	quickfix.c	FUNCTION_79	IF_2
0x40074a7	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4468	quickfix.c	FUNCTION_79	IF_2
0x40074ac	    0x488dbc240001	                  lea rdi, [rsp + 0x100]	      4470	quickfix.c	FUNCTION_79	IF_2	CALL_2
0x40074b4	    0xc78424200100	          mov dword [rsp + 0x120], 0xd4 	      4469	quickfix.c	FUNCTION_79	IF_2
0x40074bf	    0x488984240001	            mov qword [rsp + 0x100], rax	      4468	quickfix.c	FUNCTION_79	IF_2
0x40074c7	      0xe800000000	                          call 0x40074cc	      4470	quickfix.c	FUNCTION_79	IF_2	CALL_2
0x40074cc	      0xe9a1fbffff	                           jmp 0x4007072	      4470	quickfix.c	FUNCTION_79	IF_2	CALL_2
0x40074d1	     0xf1f80000000	                         nop dword [rax]	      4470	quickfix.c	FUNCTION_79	IF_2	CALL_2
0x40074d8	    0x488b9c249800	            mov rbx, qword [rsp + 0x98] 	      4726	quickfix.c	FUNCTION_80	CALL_48
0x40074e0	            0x31ff	                            xor edi, edi	      4726	quickfix.c	FUNCTION_80	CALL_48
0x40074e2	      0xba05000000	                              mov edx, 5	      4726	quickfix.c	FUNCTION_80	CALL_48
0x40074e7	      0xbe00000000	                              mov esi, 0	      4726	quickfix.c	FUNCTION_80	CALL_48
0x40074ec	      0xe800000000	                          call 0x40074f1	      4726	quickfix.c	FUNCTION_80	CALL_48
0x40074f1	          0x4889de	                            mov rsi, rbx	      4726	quickfix.c	FUNCTION_80	CALL_48
0x40074f4	          0x4889c7	                            mov rdi, rax	      4726	quickfix.c	FUNCTION_80	CALL_48
0x40074f7	      0xe800000000	                          call 0x40074fc	      4726	quickfix.c	FUNCTION_80	CALL_48
0x40074fc	      0xe971fbffff	                           jmp 0x4007072	      4726	quickfix.c	FUNCTION_80	CALL_48
0x4007501	    0x8b0500000000	            mov eax, dword [0x04007507] 	      4832	quickfix.c	FUNCTION_82	IF_2	IF_3
0x4007507	            0x85c0	                           test eax, eax	      4832	quickfix.c	FUNCTION_82	IF_2	IF_3
0x4007509	     0xf8560feffff	                           jne 0x400736f	      4832	quickfix.c	FUNCTION_82	IF_2	IF_3
0x400750f	    0x488b05000000	            mov rax, qword [0x04007516] 	      4833	quickfix.c	FUNCTION_82	IF_2	IF_3
0x4007516	        0xf6407c10	           test byte [rax + 0x7c], 0x10 	      4833	quickfix.c	FUNCTION_82	IF_2	IF_3
0x400751a	     0xf854ffeffff	                           jne 0x400736f	      4833	quickfix.c	FUNCTION_82	IF_2	IF_3
0x4007520	          0x4531ed	                          xor r13d, r13d	      4835	quickfix.c	FUNCTION_82	IF_2	IF_3
0x4007523	          0x4839c5	                            cmp rbp, rax	      4836	quickfix.c	FUNCTION_82	IF_2	IF_3	IF_4
0x4007526	     0xf8443feffff	                            je 0x400736f	      4836	quickfix.c	FUNCTION_82	IF_2	IF_3	IF_4
0x400752c	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      4842	quickfix.c	FUNCTION_82	IF_2	IF_3	IF_4	CALL_9
0x4007534	          0x4889ee	                            mov rsi, rbp	      4842	quickfix.c	FUNCTION_82	IF_2	IF_3	IF_4	CALL_9
0x4007537	      0xe800000000	                          call 0x400753c	      4842	quickfix.c	FUNCTION_82	IF_2	IF_3	IF_4	CALL_9
0x400753c	    0x488b2d000000	            mov rbp, qword [0x04007543] 	      4843	quickfix.c	FUNCTION_82	IF_2	IF_3	IF_4
0x4007543	      0xe927feffff	                           jmp 0x400736f	      4843	quickfix.c	FUNCTION_82	IF_2	IF_3	IF_4
0x4007548	     0xf1f84000000	                   nop dword [rax + rax]	      4843	quickfix.c	FUNCTION_82	IF_2	IF_3	IF_4
0x4007550	      0x483b5c2470	            cmp rbx, qword [rsp + 0x70] 	      4464	quickfix.c	FUNCTION_79	IF_2
0x4007555	     0xf8517fbffff	                           jne 0x4007072	      4464	quickfix.c	FUNCTION_79	IF_2
0x400755b	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      4464	quickfix.c	FUNCTION_79	IF_2
0x4007561	     0xf8540ffffff	                           jne 0x40074a7	      4464	quickfix.c	FUNCTION_79	IF_2
0x4007567	      0xe906fbffff	                           jmp 0x4007072	      4464	quickfix.c	FUNCTION_79	IF_2
0x400756c	      0xe800000000	                          call 0x4007571	      4745	quickfix.c	FUNCTION_80
0x4007571	    0xc744247c0000	               mov dword [rsp + 0x7c], 0	      4497	quickfix.c	FUNCTION_80
0x4007579	    0x48c744242000	               mov qword [rsp + 0x20], 0	      4506	quickfix.c	FUNCTION_80
0x4007582	    0x48c744247000	               mov qword [rsp + 0x70], 0	      4499	quickfix.c	FUNCTION_80
0x400758b	      0xe929faffff	                           jmp 0x4006fb9	      4499	quickfix.c	FUNCTION_80
ex_cbottom	CALL,4:ELSE,0:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,3:functions,0	39
0x4005c50	        0x4883ec08	                              sub rsp, 8	      3356	quickfix.c	FUNCTION_51
0x4005c54	    0x817f20d30000	           cmp dword [rdi + 0x20], 0xd3 	      3360	quickfix.c	FUNCTION_51	IF_1
0x4005c5b	      0xb800000000	                              mov eax, 0	      3357	quickfix.c	FUNCTION_51
0x4005c60	            0x7436	                            je 0x4005c98	      3360	quickfix.c	FUNCTION_51	IF_1
0x4005c62	          0x4889c7	                            mov rdi, rax	      3370	quickfix.c	FUNCTION_51	CALL_3
0x4005c65	      0xe896b5ffff	                    call sym.qf_find_win	      3370	quickfix.c	FUNCTION_51	CALL_3
0x4005c6a	          0x4885c0	                           test rax, rax	      3371	quickfix.c	FUNCTION_51	IF_3
0x4005c6d	            0x7421	                            je 0x4005c90	      3371	quickfix.c	FUNCTION_51	IF_3
0x4005c6f	        0x488b5008	                mov rdx, qword [rax + 8]	      3371	quickfix.c	FUNCTION_51	IF_3
0x4005c73	          0x488b32	                    mov rsi, qword [rdx]	      3371	quickfix.c	FUNCTION_51	IF_3
0x4005c76	        0x48397038	            cmp qword [rax + 0x38], rsi 	      3371	quickfix.c	FUNCTION_51	IF_3
0x4005c7a	            0x7414	                            je 0x4005c90	      3371	quickfix.c	FUNCTION_51	IF_3
0x4005c7c	          0x4889c7	                            mov rdi, rax	      3372	quickfix.c	FUNCTION_51	CALL_4
0x4005c7f	        0x4883c408	                              add rsp, 8	      3373	quickfix.c	FUNCTION_51
0x4005c83	      0xe9a8b1ffff	                     jmp sym.qf_win_goto	      3372	quickfix.c	FUNCTION_51	CALL_4
0x4005c88	     0xf1f84000000	                   nop dword [rax + rax]	      3372	quickfix.c	FUNCTION_51	CALL_4
0x4005c90	        0x4883c408	                              add rsp, 8	      3373	quickfix.c	FUNCTION_51
0x4005c94	              0xc3	                                     ret	      3373	quickfix.c	FUNCTION_51
0x4005c95	           0xf1f00	                         nop dword [rax]	      3373	quickfix.c	FUNCTION_51
0x4005c98	    0x488b05000000	            mov rax, qword [0x04005c9f] 	      3362	quickfix.c	FUNCTION_51	IF_1
0x4005c9f	        0x488b7808	                mov rdi, qword [rax + 8]	      3362	quickfix.c	FUNCTION_51	IF_1
0x4005ca3	      0xe800000000	                          call 0x4005ca8	      3362	quickfix.c	FUNCTION_51	IF_1
0x4005ca8	            0x85c0	                           test eax, eax	      3362	quickfix.c	FUNCTION_51	IF_1
0x4005caa	    0x488b15000000	            mov rdx, qword [0x04005cb1] 	      3362	quickfix.c	FUNCTION_51	IF_1
0x4005cb1	            0x740d	                            je 0x4005cc0	      3362	quickfix.c	FUNCTION_51	IF_1
0x4005cb3	    0x488b82501900	          mov rax, qword [rdx + 0x1950] 	      3362	quickfix.c	FUNCTION_51	IF_1
0x4005cba	          0x4885c0	                           test rax, rax	      3362	quickfix.c	FUNCTION_51	IF_1
0x4005cbd	            0x75a3	                           jne 0x4005c62	      3362	quickfix.c	FUNCTION_51	IF_1
0x4005cbf	              0x90	                                     nop	      3362	quickfix.c	FUNCTION_51	IF_1
0x4005cc0	    0x488b82481900	          mov rax, qword [rdx + 0x1948] 	      3362	quickfix.c	FUNCTION_51	IF_1
0x4005cc7	          0x4885c0	                           test rax, rax	      3363	quickfix.c	FUNCTION_51	IF_1	IF_2
0x4005cca	            0x7596	                           jne 0x4005c62	      3363	quickfix.c	FUNCTION_51	IF_1	IF_2
0x4005ccc	            0x31ff	                            xor edi, edi	      3365	quickfix.c	FUNCTION_51	IF_1	IF_2	CALL_2
0x4005cce	      0xba05000000	                              mov edx, 5	      3365	quickfix.c	FUNCTION_51	IF_1	IF_2	CALL_2
0x4005cd3	      0xbe00000000	                              mov esi, 0	      3365	quickfix.c	FUNCTION_51	IF_1	IF_2	CALL_2
0x4005cd8	      0xe800000000	                          call 0x4005cdd	      3365	quickfix.c	FUNCTION_51	IF_1	IF_2	CALL_2
0x4005cdd	        0x4883c408	                              add rsp, 8	      3373	quickfix.c	FUNCTION_51
0x4005ce1	          0x4889c7	                            mov rdi, rax	      3365	quickfix.c	FUNCTION_51	IF_1	IF_2	CALL_2
0x4005ce4	      0xe900000000	                           jmp 0x4005ce9	      3365	quickfix.c	FUNCTION_51	IF_1	IF_2	CALL_2
grep_internal	CALL,1:ELSE,0:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0	15
0x4005d40	          0x83e7bf	                     and edi, 0xffffffbf	      3714	quickfix.c	FUNCTION_62	CALL_1
0x4005d43	            0x31c0	                            xor eax, eax	      3714	quickfix.c	FUNCTION_62	CALL_1
0x4005d45	    0x81efa3000000	                           sub edi, 0xa3	      3714	quickfix.c	FUNCTION_62	CALL_1
0x4005d4b	          0x83ff01	                              cmp edi, 1	      3714	quickfix.c	FUNCTION_62	CALL_1
0x4005d4e	            0x772b	                            ja 0x4005d7b	      3714	quickfix.c	FUNCTION_62	CALL_1
0x4005d50	    0x488b05000000	            mov rax, qword [0x04005d57] 	      3714	quickfix.c	FUNCTION_62	CALL_1
0x4005d57	      0xbe00000000	                              mov esi, 0	      3714	quickfix.c	FUNCTION_62	CALL_1
0x4005d5c	      0xb909000000	                              mov ecx, 9	      3714	quickfix.c	FUNCTION_62	CALL_1
0x4005d61	    0x488bb8f01500	          mov rdi, qword [rax + 0x15f0] 	      3714	quickfix.c	FUNCTION_62	CALL_1
0x4005d68	          0x803f00	                       cmp byte [rdi], 0	      3714	quickfix.c	FUNCTION_62	CALL_1
0x4005d6b	    0x480f443d0000	           cmove rdi, qword [0x04005d73]	      3714	quickfix.c	FUNCTION_62	CALL_1
0x4005d73	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3714	quickfix.c	FUNCTION_62	CALL_1
0x4005d75	           0xf94c0	                                 sete al	      3714	quickfix.c	FUNCTION_62	CALL_1
0x4005d78	           0xfb6c0	                           movzx eax, al	      3714	quickfix.c	FUNCTION_62	CALL_1
0x4005d7b	            0xf3c3	                                     ret	      3716	quickfix.c	FUNCTION_62
qf_list	CALL,35:ELSE,5:DO,0:WHILE,0:FOR,1:SWITCH,0:IF,23:functions,0	326
0x4004e00	            0x4157	                                push r15	      2710	quickfix.c	FUNCTION_38
0x4004e02	            0x4156	                                push r14	      2710	quickfix.c	FUNCTION_38
0x4004e04	    0x41bf00000000	                             mov r15d, 0	      2724	quickfix.c	FUNCTION_38
0x4004e0a	            0x4155	                                push r13	      2710	quickfix.c	FUNCTION_38
0x4004e0c	            0x4154	                                push r12	      2710	quickfix.c	FUNCTION_38
0x4004e0e	              0x55	                                push rbp	      2710	quickfix.c	FUNCTION_38
0x4004e0f	              0x53	                                push rbx	      2710	quickfix.c	FUNCTION_38
0x4004e10	        0x4883ec48	                           sub rsp, 0x48	      2710	quickfix.c	FUNCTION_38
0x4004e14	          0x8b5f34	            mov ebx, dword [rdi + 0x34] 	      2722	quickfix.c	FUNCTION_38
0x4004e17	    0x64488b042528	                mov rax, qword fs:[0x28]	      2710	quickfix.c	FUNCTION_38
0x4004e20	      0x4889442438	             mov qword [rsp + 0x38], rax	      2710	quickfix.c	FUNCTION_38
0x4004e25	            0x31c0	                            xor eax, eax	      2710	quickfix.c	FUNCTION_38
0x4004e27	    0x817f20e90000	           cmp dword [rdi + 0x20], 0xe9 	      2726	quickfix.c	FUNCTION_38	IF_1
0x4004e2e	          0x488b07	                    mov rax, qword [rdi]	      2717	quickfix.c	FUNCTION_38
0x4004e31	    0xc74424280100	               mov dword [rsp + 0x28], 1	      2715	quickfix.c	FUNCTION_38
0x4004e39	    0xc744242cffff	     mov dword [rsp + 0x2c], 0xffffffff 	      2716	quickfix.c	FUNCTION_38
0x4004e41	      0x4889442430	             mov qword [rsp + 0x30], rax	      2717	quickfix.c	FUNCTION_38
0x4004e46	     0xf8464030000	                            je 0x40051b0	      2726	quickfix.c	FUNCTION_38	IF_1
0x4004e4c	        0x49634708	            movsxd rax, dword [r15 + 8] 	      2736	quickfix.c	FUNCTION_38	IF_3
0x4004e50	        0x413b4704	                cmp eax, dword [r15 + 4]	      2736	quickfix.c	FUNCTION_38	IF_3
0x4004e54	            0x7d18	                           jge 0x4004e6e	      2736	quickfix.c	FUNCTION_38	IF_3
0x4004e56	    0x488d14c50000	                        lea rdx, [rax*8]	      2737	quickfix.c	FUNCTION_38	IF_3
0x4004e5e	        0x48c1e007	                              shl rax, 7	      2737	quickfix.c	FUNCTION_38	IF_3
0x4004e62	          0x4829d0	                            sub rax, rdx	      2737	quickfix.c	FUNCTION_38	IF_3
0x4004e65	      0x418b4c0730	      mov ecx, dword [r15 + rax + 0x30] 	      2737	quickfix.c	FUNCTION_38	IF_3
0x4004e6a	            0x85c9	                           test ecx, ecx	      2737	quickfix.c	FUNCTION_38	IF_3
0x4004e6c	            0x7542	                           jne 0x4004eb0	      2737	quickfix.c	FUNCTION_38	IF_3
0x4004e6e	            0x31ff	                            xor edi, edi	      2739	quickfix.c	FUNCTION_38	IF_3	CALL_4
0x4004e70	      0xba05000000	                              mov edx, 5	      2739	quickfix.c	FUNCTION_38	IF_3	CALL_4
0x4004e75	      0xbe00000000	                              mov esi, 0	      2739	quickfix.c	FUNCTION_38	IF_3	CALL_4
0x4004e7a	      0xe800000000	                          call 0x4004e7f	      2739	quickfix.c	FUNCTION_38	IF_3	CALL_4
0x4004e7f	          0x4889c7	                            mov rdi, rax	      2739	quickfix.c	FUNCTION_38	IF_3	CALL_4
0x4004e82	      0xe800000000	                          call 0x4004e87	      2739	quickfix.c	FUNCTION_38	IF_3	CALL_4
0x4004e87	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2852	quickfix.c	FUNCTION_38
0x4004e8c	    0x644833042528	                xor rax, qword fs:[0x28]	      2852	quickfix.c	FUNCTION_38
0x4004e95	     0xf85e7040000	                           jne 0x4005382	      2852	quickfix.c	FUNCTION_38
0x4004e9b	        0x4883c448	                           add rsp, 0x48	      2852	quickfix.c	FUNCTION_38
0x4004e9f	              0x5b	                                 pop rbx	      2852	quickfix.c	FUNCTION_38
0x4004ea0	              0x5d	                                 pop rbp	      2852	quickfix.c	FUNCTION_38
0x4004ea1	            0x415c	                                 pop r12	      2852	quickfix.c	FUNCTION_38
0x4004ea3	            0x415d	                                 pop r13	      2852	quickfix.c	FUNCTION_38
0x4004ea5	            0x415e	                                 pop r14	      2852	quickfix.c	FUNCTION_38
0x4004ea7	            0x415f	                                 pop r15	      2852	quickfix.c	FUNCTION_38
0x4004ea9	              0xc3	                                     ret	      2852	quickfix.c	FUNCTION_38
0x4004eaa	    0x660f1f440000	                    nop word [rax + rax]	      2852	quickfix.c	FUNCTION_38
0x4004eb0	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      2742	quickfix.c	FUNCTION_38	IF_4
0x4004eb5	            0x31ed	                            xor ebp, ebp	      2718	quickfix.c	FUNCTION_38
0x4004eb7	          0x80382b	                    cmp byte [rax], 0x2b	      2742	quickfix.c	FUNCTION_38	IF_4
0x4004eba	     0xf8450030000	                            je 0x4005210	      2742	quickfix.c	FUNCTION_38	IF_4
0x4004ec0	      0x488d54242c	                   lea rdx, [rsp + 0x2c]	      2747	quickfix.c	FUNCTION_38	IF_5	CALL_5
0x4004ec5	      0x488d742428	                   lea rsi, [rsp + 0x28]	      2747	quickfix.c	FUNCTION_38	IF_5	CALL_5
0x4004eca	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2747	quickfix.c	FUNCTION_38	IF_5	CALL_5
0x4004ecf	      0xe800000000	                          call 0x4004ed4	      2747	quickfix.c	FUNCTION_38	IF_5	CALL_5
0x4004ed4	            0x85c0	                           test eax, eax	      2747	quickfix.c	FUNCTION_38	IF_5	CALL_5
0x4004ed6	     0xf84b4020000	                            je 0x4005190	      2747	quickfix.c	FUNCTION_38	IF_5	CALL_5
0x4004edc	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      2747	quickfix.c	FUNCTION_38	IF_5	CALL_5
0x4004ee1	          0x803800	                       cmp byte [rax], 0	      2747	quickfix.c	FUNCTION_38	IF_5	CALL_5
0x4004ee4	     0xf85a6020000	                           jne 0x4005190	      2747	quickfix.c	FUNCTION_38	IF_5	CALL_5
0x4004eea	        0x49634708	            movsxd rax, dword [r15 + 8] 	      2754	quickfix.c	FUNCTION_38	IF_6
0x4004eee	    0x488d14c50000	                        lea rdx, [rax*8]	      2754	quickfix.c	FUNCTION_38	IF_6
0x4004ef6	        0x48c1e007	                              shl rax, 7	      2754	quickfix.c	FUNCTION_38	IF_6
0x4004efa	          0x4829d0	                            sub rax, rdx	      2754	quickfix.c	FUNCTION_38	IF_6
0x4004efd	            0x85ed	                           test ebp, ebp	      2752	quickfix.c	FUNCTION_38	IF_6
0x4004eff	     0xf8423030000	                            je 0x4005228	      2752	quickfix.c	FUNCTION_38	IF_6
0x4004f05	      0x418b440734	      mov eax, dword [r15 + rax + 0x34] 	      2754	quickfix.c	FUNCTION_38	IF_6
0x4004f0a	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      2755	quickfix.c	FUNCTION_38	IF_6
0x4004f0e	             0x1c2	                            add edx, eax	      2755	quickfix.c	FUNCTION_38	IF_6
0x4004f10	        0x89442428	             mov dword [rsp + 0x28], eax	      2756	quickfix.c	FUNCTION_38	IF_6
0x4004f14	        0x8954242c	             mov dword [rsp + 0x2c], edx	      2755	quickfix.c	FUNCTION_38	IF_6
0x4004f18	            0x31ff	                            xor edi, edi	      2768	quickfix.c	FUNCTION_38	CALL_8
0x4004f1a	      0xe800000000	                          call 0x4004f1f	      2768	quickfix.c	FUNCTION_38	CALL_8
0x4004f1f	      0xbf00000000	                              mov edi, 0	      2774	quickfix.c	FUNCTION_38	CALL_9
0x4004f24	      0xe800000000	                          call 0x4004f29	      2774	quickfix.c	FUNCTION_38	CALL_9
0x4004f29	      0xbf00000000	                              mov edi, 0	      2777	quickfix.c	FUNCTION_38	CALL_11
0x4004f2e	            0x85c0	                           test eax, eax	      2776	quickfix.c	FUNCTION_38	CALL_10
0x4004f30	          0x4189c5	                           mov r13d, eax	      2774	quickfix.c	FUNCTION_38	CALL_9
0x4004f33	    0x440f442d0000	          cmove r13d, dword [0x04004f3b]	      2776	quickfix.c	FUNCTION_38	CALL_10
0x4004f3b	      0xe800000000	                          call 0x4004f40	      2777	quickfix.c	FUNCTION_38	CALL_11
0x4004f40	      0xbf00000000	                              mov edi, 0	      2780	quickfix.c	FUNCTION_38	CALL_13
0x4004f45	            0x85c0	                           test eax, eax	      2779	quickfix.c	FUNCTION_38	CALL_12
0x4004f47	          0x4189c4	                           mov r12d, eax	      2777	quickfix.c	FUNCTION_38	CALL_11
0x4004f4a	    0x440f44250000	          cmove r12d, dword [0x04004f52]	      2779	quickfix.c	FUNCTION_38	CALL_12
0x4004f52	      0xe800000000	                          call 0x4004f57	      2780	quickfix.c	FUNCTION_38	CALL_13
0x4004f57	            0x85c0	                           test eax, eax	      2782	quickfix.c	FUNCTION_38	CALL_14
0x4004f59	     0xf4405000000	           cmove eax, dword [0x04004f60]	      2782	quickfix.c	FUNCTION_38	CALL_14
0x4004f60	        0x8944241c	             mov dword [rsp + 0x1c], eax	      2782	quickfix.c	FUNCTION_38	CALL_14
0x4004f64	        0x49634708	            movsxd rax, dword [r15 + 8] 	      2784	quickfix.c	FUNCTION_38	IF_12
0x4004f68	    0x488d14c50000	                        lea rdx, [rax*8]	      2784	quickfix.c	FUNCTION_38	IF_12
0x4004f70	        0x48c1e007	                              shl rax, 7	      2784	quickfix.c	FUNCTION_38	IF_12
0x4004f74	          0x4829d0	                            sub rax, rdx	      2784	quickfix.c	FUNCTION_38	IF_12
0x4004f77	          0x4c01f8	                            add rax, r15	      2784	quickfix.c	FUNCTION_38	IF_12
0x4004f7a	          0x8b5038	            mov edx, dword [rax + 0x38] 	      2785	quickfix.c	FUNCTION_38	IF_12
0x4004f7d	        0x4c8b7018	            mov r14, qword [rax + 0x18] 	      2786	quickfix.c	FUNCTION_38
0x4004f81	            0x85d2	                           test edx, edx	      2785	quickfix.c	FUNCTION_38	IF_12
0x4004f83	      0xba01000000	                              mov edx, 1	      2785	quickfix.c	FUNCTION_38	IF_12
0x4004f88	           0xf45da	                         cmovne ebx, edx	      2785	quickfix.c	FUNCTION_38	IF_12
0x4004f8b	    0x8b1500000000	            mov edx, dword [0x04004f91] 	      2787	quickfix.c	FUNCTION_38	FOR_1
0x4004f91	            0x85d2	                           test edx, edx	      2787	quickfix.c	FUNCTION_38	FOR_1
0x4004f93	     0xf85eefeffff	                           jne 0x4004e87	      2787	quickfix.c	FUNCTION_38	FOR_1
0x4004f99	          0x8b4030	            mov eax, dword [rax + 0x30] 	      2787	quickfix.c	FUNCTION_38	FOR_1
0x4004f9c	            0x85c0	                           test eax, eax	      2787	quickfix.c	FUNCTION_38	FOR_1
0x4004f9e	     0xf8ee3feffff	                           jle 0x4004e87	      2787	quickfix.c	FUNCTION_38	FOR_1
0x4004fa4	            0x85db	                           test ebx, ebx	      2787	quickfix.c	FUNCTION_38	FOR_1
0x4004fa6	      0xbb01000000	                              mov ebx, 1	      2787	quickfix.c	FUNCTION_38	FOR_1
0x4004fab	        0x400f95c5	                               setne bpl	      2787	quickfix.c	FUNCTION_38	FOR_1
0x4004faf	            0xeb4c	                           jmp 0x4004ffd	      2787	quickfix.c	FUNCTION_38	FOR_1
0x4004fb1	     0xf1f80000000	                         nop dword [rax]	      2787	quickfix.c	FUNCTION_38	FOR_1
0x4004fb8	          0x4084ed	                           test bpl, bpl	      2789	quickfix.c	FUNCTION_38	FOR_1	IF_13
0x4004fbb	            0x7547	                           jne 0x4005004	      2789	quickfix.c	FUNCTION_38	FOR_1	IF_13
0x4004fbd	          0x4d8b36	                    mov r14, qword [r14]	      2846	quickfix.c	FUNCTION_38	FOR_1
0x4004fc0	          0x4d85f6	                           test r14, r14	      2847	quickfix.c	FUNCTION_38	FOR_1	IF_23
0x4004fc3	     0xf84befeffff	                            je 0x4004e87	      2847	quickfix.c	FUNCTION_38	FOR_1	IF_23
0x4004fc9	      0xe800000000	                          call 0x4004fce	      2850	quickfix.c	FUNCTION_38	FOR_1	CALL_35
0x4004fce	    0x8b0500000000	            mov eax, dword [0x04004fd4] 	      2787	quickfix.c	FUNCTION_38	FOR_1
0x4004fd4	          0x83c301	                              add ebx, 1	      2849	quickfix.c	FUNCTION_38	FOR_1
0x4004fd7	            0x85c0	                           test eax, eax	      2787	quickfix.c	FUNCTION_38	FOR_1
0x4004fd9	     0xf85a8feffff	                           jne 0x4004e87	      2787	quickfix.c	FUNCTION_38	FOR_1
0x4004fdf	        0x49634708	            movsxd rax, dword [r15 + 8] 	      2787	quickfix.c	FUNCTION_38	FOR_1
0x4004fe3	    0x488d14c50000	                        lea rdx, [rax*8]	      2787	quickfix.c	FUNCTION_38	FOR_1
0x4004feb	        0x48c1e007	                              shl rax, 7	      2787	quickfix.c	FUNCTION_38	FOR_1
0x4004fef	          0x4829d0	                            sub rax, rdx	      2787	quickfix.c	FUNCTION_38	FOR_1
0x4004ff2	      0x41395c0730	      cmp dword [r15 + rax + 0x30], ebx 	      2787	quickfix.c	FUNCTION_38	FOR_1
0x4004ff7	     0xf8c8afeffff	                            jl 0x4004e87	      2787	quickfix.c	FUNCTION_38	FOR_1
0x4004ffd	      0x41807e4300	                cmp byte [r14 + 0x43], 0	      2789	quickfix.c	FUNCTION_38	FOR_1	IF_13
0x4005002	            0x74b4	                            je 0x4004fb8	      2789	quickfix.c	FUNCTION_38	FOR_1	IF_13
0x4005004	        0x395c2428	            cmp dword [rsp + 0x28], ebx 	      2789	quickfix.c	FUNCTION_38	FOR_1	IF_13
0x4005008	            0x7fb3	                            jg 0x4004fbd	      2789	quickfix.c	FUNCTION_38	FOR_1	IF_13
0x400500a	        0x395c242c	            cmp dword [rsp + 0x2c], ebx 	      2789	quickfix.c	FUNCTION_38	FOR_1	IF_13
0x400500e	            0x7cad	                            jl 0x4004fbd	      2789	quickfix.c	FUNCTION_38	FOR_1	IF_13
0x4005010	      0xbf0a000000	                            mov edi, 0xa	      2791	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_15
0x4005015	      0xe800000000	                          call 0x400501a	      2791	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_15
0x400501a	    0x8b0500000000	            mov eax, dword [0x04005020] 	      2792	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_14
0x4005020	            0x85c0	                           test eax, eax	      2792	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_14
0x4005022	     0xf855ffeffff	                           jne 0x4004e87	      2792	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_14
0x4005028	        0x4d8b4628	              mov r8, qword [r14 + 0x28]	      2796	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_15
0x400502c	          0x4d85c0	                             test r8, r8	      2796	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_15
0x400502f	            0x740a	                            je 0x400503b	      2796	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_15
0x4005031	        0x41803800	                        cmp byte [r8], 0	      2796	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_15
0x4005035	     0xf85c5020000	                           jne 0x4005300	      2796	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_15
0x400503b	        0x418b7e18	            mov edi, dword [r14 + 0x18] 	      2799	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_16
0x400503f	            0x85ff	                           test edi, edi	      2799	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_16
0x4005041	     0xf85e1020000	                           jne 0x4005328	      2799	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_16
0x4005047	    0x488b3d000000	            mov rdi, qword [0x0400504e] 	        33	stdio2.h	FUNCTION_127	CALL_1
0x400504e	          0x4189d8	                            mov r8d, ebx	        33	stdio2.h	FUNCTION_127	CALL_1
0x4005051	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_127	CALL_1
0x4005056	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_127	CALL_1
0x400505d	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_127	CALL_1
0x4005062	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_127	CALL_1
0x4005064	      0xe800000000	                          call 0x4005069	        33	stdio2.h	FUNCTION_127	CALL_1
0x4005069	    0x48c704240000	                      mov qword [rsp], 0	        33	stdio2.h	FUNCTION_127	CALL_1
0x4005071	        0x49634708	            movsxd rax, dword [r15 + 8] 	      2812	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_20
0x4005075	          0x4489ee	                           mov esi, r13d	      2812	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_20
0x4005078	    0x488b3d000000	            mov rdi, qword [0x0400507f] 	      2812	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_20
0x400507f	    0x488d14c50000	                        lea rdx, [rax*8]	      2812	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_20
0x4005087	        0x48c1e007	                              shl rax, 7	      2812	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_20
0x400508b	          0x4829d0	                            sub rax, rdx	      2812	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_20
0x400508e	      0x41395c0734	      cmp dword [r15 + rax + 0x34], ebx 	      2812	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_20
0x4005093	     0xf4435000000	           cmove esi, dword [0x0400509a]	      2812	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_20
0x400509a	      0xe800000000	                          call 0x400509f	      2812	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_20
0x400509f	      0x49837e1000	               cmp qword [r14 + 0x10], 0	      2815	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_19
0x40050a4	     0xf85ce010000	                           jne 0x4005278	      2815	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_19
0x40050aa	    0x488b05000000	            mov rax, qword [0x040050b1] 	      2818	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_20
0x40050b1	          0xc60000	                       mov byte [rax], 0	      2818	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_20
0x40050b4	      0x410fb67e42	           movzx edi, byte [r14 + 0x42] 	      2825	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_24
0x40050b9	        0x418b7620	            mov esi, dword [r14 + 0x20] 	      2825	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_24
0x40050bd	      0xe8aeb3ffff	                       call sym.qf_types	      2825	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_24
0x40050c2	    0x488b15000000	            mov rdx, qword [0x040050c9] 	      2824	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_23
0x40050c9	      0x4889442410	             mov qword [rsp + 0x10], rax	      2825	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_24
0x40050ce	          0x4889d7	                            mov rdi, rdx	      2824	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_23
0x40050d1	      0x4889542408	                mov qword [rsp + 8], rdx	      2824	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_23
0x40050d6	      0xe800000000	                          call 0x40050db	      2824	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_23
0x40050db	      0x488b542408	                mov rdx, qword [rsp + 8]	        33	stdio2.h	FUNCTION_127	CALL_1
0x40050e0	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        33	stdio2.h	FUNCTION_127	CALL_1
0x40050e5	        0x488d3c02	                    lea rdi, [rdx + rax]	        33	stdio2.h	FUNCTION_127	CALL_1
0x40050e9	      0xe800000000	                          call 0x40050ee	        33	stdio2.h	FUNCTION_127	CALL_1
0x40050ee	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      2826	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_25
0x40050f2	    0x488b3d000000	            mov rdi, qword [0x040050f9] 	      2826	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_25
0x40050f9	      0xe800000000	                          call 0x40050fe	      2826	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_25
0x40050fe	      0xbf00000000	                              mov edi, 0	      2827	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_26
0x4005103	          0x4489e6	                           mov esi, r12d	      2827	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_26
0x4005106	      0xe800000000	                          call 0x400510b	      2827	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_26
0x400510b	        0x498b7e30	            mov rdi, qword [r14 + 0x30] 	      2828	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_22
0x400510f	          0x4885ff	                           test rdi, rdi	      2828	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_22
0x4005112	            0x742a	                            je 0x400513e	      2828	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_22
0x4005114	    0x488b35000000	            mov rsi, qword [0x0400511b] 	      2830	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_22	CALL_27
0x400511b	      0xba01040000	                          mov edx, 0x401	      2830	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_22	CALL_27
0x4005120	      0xe81bafffff	                    call sym.qf_fmt_text	      2830	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_22	CALL_27
0x4005125	    0x488b3d000000	            mov rdi, qword [0x0400512c] 	      2831	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_22	CALL_28
0x400512c	      0xe800000000	                          call 0x4005131	      2831	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_22	CALL_28
0x4005131	          0x4489e6	                           mov esi, r12d	      2832	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_22	CALL_29
0x4005134	      0xbf00000000	                              mov edi, 0	      2832	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_22	CALL_29
0x4005139	      0xe800000000	                          call 0x400513e	      2832	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_22	CALL_29
0x400513e	      0xbf00000000	                              mov edi, 0	      2834	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_30
0x4005143	      0xe800000000	                          call 0x4005148	      2834	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_30
0x4005148	      0x48833c2400	                      cmp qword [rsp], 0	      2839	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_31
0x400514d	    0x488b35000000	            mov rsi, qword [0x04005154] 	      2839	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_31
0x4005154	     0xf8406010000	                            je 0x4005260	      2839	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_31
0x400515a	        0x498b7e38	            mov rdi, qword [r14 + 0x38] 	      2839	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_31
0x400515e	        0x48893424	                    mov qword [rsp], rsi	      2839	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_31
0x4005162	      0xe800000000	                          call 0x4005167	      2839	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_31
0x4005167	        0x488b3424	                    mov rsi, qword [rsp]	      2839	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_31
0x400516b	          0x4889c7	                            mov rdi, rax	      2839	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_31
0x400516e	      0xba01040000	                          mov edx, 0x401	      2839	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_31
0x4005173	      0xe8c8aeffff	                    call sym.qf_fmt_text	      2839	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_31
0x4005178	    0x488b3d000000	            mov rdi, qword [0x0400517f] 	      2842	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_33
0x400517f	            0x31f6	                            xor esi, esi	      2842	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_33
0x4005181	      0xe800000000	                          call 0x4005186	      2842	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_33
0x4005186	      0xe800000000	                          call 0x400518b	      2843	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_34
0x400518b	      0xe92dfeffff	                           jmp 0x4004fbd	      2843	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_34
0x4005190	            0x31ff	                            xor edi, edi	      2749	quickfix.c	FUNCTION_38	IF_5	CALL_7
0x4005192	      0xba05000000	                              mov edx, 5	      2749	quickfix.c	FUNCTION_38	IF_5	CALL_7
0x4005197	      0xbe00000000	                              mov esi, 0	      2749	quickfix.c	FUNCTION_38	IF_5	CALL_7
0x400519c	      0xe800000000	                          call 0x40051a1	      2749	quickfix.c	FUNCTION_38	IF_5	CALL_7
0x40051a1	          0x4889c7	                            mov rdi, rax	      2749	quickfix.c	FUNCTION_38	IF_5	CALL_7
0x40051a4	      0xe800000000	                          call 0x40051a9	      2749	quickfix.c	FUNCTION_38	IF_5	CALL_7
0x40051a9	      0xe9d9fcffff	                           jmp 0x4004e87	      2750	quickfix.c	FUNCTION_38	IF_5
0x40051ae	            0x6690	                                     nop	      2750	quickfix.c	FUNCTION_38	IF_5
0x40051b0	    0x488b05000000	            mov rax, qword [0x040051b7] 	      2728	quickfix.c	FUNCTION_38	IF_1
0x40051b7	        0x488b7808	                mov rdi, qword [rax + 8]	      2728	quickfix.c	FUNCTION_38	IF_1
0x40051bb	      0xe800000000	                          call 0x40051c0	      2728	quickfix.c	FUNCTION_38	IF_1
0x40051c0	            0x85c0	                           test eax, eax	      2728	quickfix.c	FUNCTION_38	IF_1
0x40051c2	    0x488b05000000	            mov rax, qword [0x040051c9] 	      2728	quickfix.c	FUNCTION_38	IF_1
0x40051c9	            0x7415	                            je 0x40051e0	      2728	quickfix.c	FUNCTION_38	IF_1
0x40051cb	    0x4c8bb8501900	          mov r15, qword [rax + 0x1950] 	      2728	quickfix.c	FUNCTION_38	IF_1
0x40051d2	          0x4d85ff	                           test r15, r15	      2728	quickfix.c	FUNCTION_38	IF_1
0x40051d5	     0xf8571fcffff	                           jne 0x4004e4c	      2728	quickfix.c	FUNCTION_38	IF_1
0x40051db	       0xf1f440000	                   nop dword [rax + rax]	      2728	quickfix.c	FUNCTION_38	IF_1
0x40051e0	    0x4c8bb8481900	          mov r15, qword [rax + 0x1948] 	      2728	quickfix.c	FUNCTION_38	IF_1
0x40051e7	          0x4d85ff	                           test r15, r15	      2729	quickfix.c	FUNCTION_38	IF_1	IF_2
0x40051ea	     0xf855cfcffff	                           jne 0x4004e4c	      2729	quickfix.c	FUNCTION_38	IF_1	IF_2
0x40051f0	            0x31ff	                            xor edi, edi	      2731	quickfix.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x40051f2	      0xba05000000	                              mov edx, 5	      2731	quickfix.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x40051f7	      0xbe00000000	                              mov esi, 0	      2731	quickfix.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x40051fc	      0xe800000000	                          call 0x4005201	      2731	quickfix.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x4005201	          0x4889c7	                            mov rdi, rax	      2731	quickfix.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x4005204	      0xe800000000	                          call 0x4005209	      2731	quickfix.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x4005209	      0xe979fcffff	                           jmp 0x4004e87	      2732	quickfix.c	FUNCTION_38	IF_1	IF_2
0x400520e	            0x6690	                                     nop	      2732	quickfix.c	FUNCTION_38	IF_1	IF_2
0x4005210	        0x4883c001	                              add rax, 1	      2744	quickfix.c	FUNCTION_38	IF_4
0x4005214	      0xbd01000000	                              mov ebp, 1	      2745	quickfix.c	FUNCTION_38	IF_4
0x4005219	      0x4889442430	             mov qword [rsp + 0x30], rax	      2744	quickfix.c	FUNCTION_38	IF_4
0x400521e	      0xe99dfcffff	                           jmp 0x4004ec0	      2744	quickfix.c	FUNCTION_38	IF_4
0x4005223	       0xf1f440000	                   nop dword [rax + rax]	      2744	quickfix.c	FUNCTION_38	IF_4
0x4005228	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      2761	quickfix.c	FUNCTION_38	ELSE_1	IF_7
0x400522c	      0x418b440730	      mov eax, dword [r15 + rax + 0x30] 	      2760	quickfix.c	FUNCTION_38	ELSE_1
0x4005231	            0x85d2	                           test edx, edx	      2761	quickfix.c	FUNCTION_38	ELSE_1	IF_7
0x4005233	     0xf88ab000000	                            js 0x40052e4	      2761	quickfix.c	FUNCTION_38	ELSE_1	IF_7
0x4005239	        0x8b54242c	            mov edx, dword [rsp + 0x2c] 	      2763	quickfix.c	FUNCTION_38	ELSE_1	IF_8
0x400523d	            0x85d2	                           test edx, edx	      2763	quickfix.c	FUNCTION_38	ELSE_1	IF_8
0x400523f	     0xf89d3fcffff	                           jns 0x4004f18	      2763	quickfix.c	FUNCTION_38	ELSE_1	IF_8
0x4005245	            0x89d6	                            mov esi, edx	      2764	quickfix.c	FUNCTION_38	ELSE_1	IF_8
0x4005247	        0x8d541001	                lea edx, [rax + rdx + 1]	      2764	quickfix.c	FUNCTION_38	ELSE_1	IF_8
0x400524b	      0xb900000000	                              mov ecx, 0	      2764	quickfix.c	FUNCTION_38	ELSE_1	IF_8
0x4005250	            0xf7de	                                 neg esi	      2764	quickfix.c	FUNCTION_38	ELSE_1	IF_8
0x4005252	            0x39f0	                            cmp eax, esi	      2764	quickfix.c	FUNCTION_38	ELSE_1	IF_8
0x4005254	           0xf4dca	                         cmovge ecx, edx	      2764	quickfix.c	FUNCTION_38	ELSE_1	IF_8
0x4005257	        0x894c242c	             mov dword [rsp + 0x2c], ecx	      2764	quickfix.c	FUNCTION_38	ELSE_1	IF_8
0x400525b	      0xe9b8fcffff	                           jmp 0x4004f18	      2764	quickfix.c	FUNCTION_38	ELSE_1	IF_8
0x4005260	      0x49837e1000	               cmp qword [r14 + 0x10], 0	      2839	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_31
0x4005265	     0xf85effeffff	                           jne 0x400515a	      2839	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_31
0x400526b	        0x498b7e38	            mov rdi, qword [r14 + 0x38] 	      2839	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_31
0x400526f	      0xe9fafeffff	                           jmp 0x400516e	      2839	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_31
0x4005274	         0xf1f4000	                         nop dword [rax]	      2839	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_31
0x4005278	          0x4489e6	                           mov esi, r12d	      2816	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_22
0x400527b	      0xbf00000000	                              mov edi, 0	      2816	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_22
0x4005280	      0xe800000000	                          call 0x4005285	      2816	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_22
0x4005285	        0x4d8b4610	              mov r8, qword [r14 + 0x10]	      2817	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_20
0x4005289	          0x4d85c0	                             test r8, r8	      2817	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_20
0x400528c	     0xf8418feffff	                            je 0x40050aa	      2817	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_20
0x4005292	        0x458b4e1c	            mov r9d, dword [r14 + 0x1c] 	      2819	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_4	IF_21
0x4005296	          0x4585c9	                           test r9d, r9d	      2819	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_4	IF_21
0x4005299	            0x7525	                           jne 0x40052c0	      2819	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_4	IF_21
0x400529b	    0x488b3d000000	            mov rdi, qword [0x040052a2] 	        33	stdio2.h	FUNCTION_127	CALL_1
0x40052a2	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_127	CALL_1
0x40052a7	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_127	CALL_1
0x40052ae	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_127	CALL_1
0x40052b3	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_127	CALL_1
0x40052b5	      0xe800000000	                          call 0x40052ba	        33	stdio2.h	FUNCTION_127	CALL_1
0x40052ba	      0xe9f5fdffff	                           jmp 0x40050b4	        33	stdio2.h	FUNCTION_127	CALL_1
0x40052bf	              0x90	                                     nop	        33	stdio2.h	FUNCTION_127	CALL_1
0x40052c0	    0x488b3d000000	            mov rdi, qword [0x040052c7] 	        33	stdio2.h	FUNCTION_127	CALL_1
0x40052c7	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_127	CALL_1
0x40052cc	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_127	CALL_1
0x40052d3	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_127	CALL_1
0x40052d8	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_127	CALL_1
0x40052da	      0xe800000000	                          call 0x40052df	        33	stdio2.h	FUNCTION_127	CALL_1
0x40052df	      0xe9d0fdffff	                           jmp 0x40050b4	        33	stdio2.h	FUNCTION_127	CALL_1
0x40052e4	            0x89d6	                            mov esi, edx	      2762	quickfix.c	FUNCTION_38	ELSE_1	IF_7
0x40052e6	        0x8d541001	                lea edx, [rax + rdx + 1]	      2762	quickfix.c	FUNCTION_38	ELSE_1	IF_7
0x40052ea	      0xb900000000	                              mov ecx, 0	      2762	quickfix.c	FUNCTION_38	ELSE_1	IF_7
0x40052ef	            0xf7de	                                 neg esi	      2762	quickfix.c	FUNCTION_38	ELSE_1	IF_7
0x40052f1	            0x39f0	                            cmp eax, esi	      2762	quickfix.c	FUNCTION_38	ELSE_1	IF_7
0x40052f3	           0xf4dca	                         cmovge ecx, edx	      2762	quickfix.c	FUNCTION_38	ELSE_1	IF_7
0x40052f6	        0x894c2428	             mov dword [rsp + 0x28], ecx	      2762	quickfix.c	FUNCTION_38	ELSE_1	IF_7
0x40052fa	      0xe93affffff	                           jmp 0x4005239	      2762	quickfix.c	FUNCTION_38	ELSE_1	IF_7
0x40052ff	              0x90	                                     nop	      2762	quickfix.c	FUNCTION_38	ELSE_1	IF_7
0x4005300	    0x488b3d000000	            mov rdi, qword [0x04005307] 	      2797	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_16
0x4005307	            0x89d9	                            mov ecx, ebx	      2797	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_16
0x4005309	      0xba00000000	                              mov edx, 0	      2797	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_16
0x400530e	      0xbe01040000	                          mov esi, 0x401	      2797	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_16
0x4005313	      0xe800000000	                          call 0x4005318	      2797	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_16
0x4005318	    0x48c704240000	                      mov qword [rsp], 0	      2795	quickfix.c	FUNCTION_38	FOR_1	IF_13
0x4005320	      0xe94cfdffff	                           jmp 0x4005071	      2797	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_16
0x4005325	           0xf1f00	                         nop dword [rax]	      2797	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_16
0x4005328	      0xe800000000	                          call 0x400532d	      2800	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_16	CALL_17
0x400532d	          0x4885c0	                           test rax, rax	      2800	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_16	CALL_17
0x4005330	     0xf8411fdffff	                            je 0x4005047	      2800	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_16	CALL_17
0x4005336	      0x41807e4201	                cmp byte [r14 + 0x42], 1	      2803	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_16	IF_17
0x400533b	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2802	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_16
0x4005342	        0x48890424	                    mov qword [rsp], rax	      2802	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_16
0x4005346	            0x742c	                            je 0x4005374	      2803	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_16	IF_17
0x4005348	        0x4c8b0424	                     mov r8, qword [rsp]	      2806	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_18
0x400534c	          0x4d85c0	                             test r8, r8	      2806	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_18
0x400534f	     0xf84f2fcffff	                            je 0x4005047	      2806	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_18
0x4005355	    0x488b3d000000	            mov rdi, qword [0x0400535c] 	      2809	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	ELSE_3	CALL_19
0x400535c	            0x89d9	                            mov ecx, ebx	      2809	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	ELSE_3	CALL_19
0x400535e	      0xba00000000	                              mov edx, 0	      2809	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	ELSE_3	CALL_19
0x4005363	      0xbe01040000	                          mov esi, 0x401	      2809	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	ELSE_3	CALL_19
0x4005368	            0x31c0	                            xor eax, eax	      2809	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	ELSE_3	CALL_19
0x400536a	      0xe800000000	                          call 0x400536f	      2809	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	ELSE_3	CALL_19
0x400536f	      0xe9fdfcffff	                           jmp 0x4005071	      2809	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	ELSE_3	CALL_19
0x4005374	          0x4889c7	                            mov rdi, rax	      2804	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_16	CALL_18
0x4005377	      0xe800000000	                          call 0x400537c	      2804	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_16	CALL_18
0x400537c	        0x48890424	                    mov qword [rsp], rax	      2804	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_16	CALL_18
0x4005380	            0xebc6	                           jmp 0x4005348	      2804	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_16	CALL_18
0x4005382	      0xe800000000	                          call 0x4005387	      2852	quickfix.c	FUNCTION_38
qf_store_title	CALL,3:ELSE,0:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,2:functions,0	49
0x4000510	            0x4155	                                push r13	      1363	quickfix.c	FUNCTION_13
0x4000512	            0x4154	                                push r12	      1363	quickfix.c	FUNCTION_13
0x4000514	          0x4989fc	                            mov r12, rdi	      1363	quickfix.c	FUNCTION_13
0x4000517	              0x55	                                push rbp	      1363	quickfix.c	FUNCTION_13
0x4000518	              0x53	                                push rbx	      1363	quickfix.c	FUNCTION_13
0x4000519	          0x4863de	                         movsxd rbx, esi	      1364	quickfix.c	FUNCTION_13	CALL_1
0x400051c	    0x488d04dd0000	                        lea rax, [rbx*8]	      1364	quickfix.c	FUNCTION_13	CALL_1
0x4000524	          0x4889dd	                            mov rbp, rbx	      1364	quickfix.c	FUNCTION_13	CALL_1
0x4000527	          0x4989d5	                            mov r13, rdx	      1363	quickfix.c	FUNCTION_13
0x400052a	        0x48c1e507	                              shl rbp, 7	      1364	quickfix.c	FUNCTION_13	CALL_1
0x400052e	        0x4883ec08	                              sub rsp, 8	      1363	quickfix.c	FUNCTION_13
0x4000532	          0x4829c5	                            sub rbp, rax	      1364	quickfix.c	FUNCTION_13	CALL_1
0x4000535	          0x4801fd	                            add rbp, rdi	      1364	quickfix.c	FUNCTION_13	CALL_1
0x4000538	        0x488b7d40	            mov rdi, qword [rbp + 0x40] 	      1364	quickfix.c	FUNCTION_13	CALL_1
0x400053c	          0x4885ff	                           test rdi, rdi	      1364	quickfix.c	FUNCTION_13	CALL_1
0x400053f	            0x740d	                            je 0x400054e	      1364	quickfix.c	FUNCTION_13	CALL_1
0x4000541	      0xe800000000	                          call 0x4000546	      1364	quickfix.c	FUNCTION_13	CALL_1
0x4000546	    0x48c745400000	               mov qword [rbp + 0x40], 0	      1364	quickfix.c	FUNCTION_13	CALL_1
0x400054e	          0x4d85ed	                           test r13, r13	      1366	quickfix.c	FUNCTION_13	IF_1
0x4000551	            0x7455	                            je 0x40005a8	      1366	quickfix.c	FUNCTION_13	IF_1
0x4000553	          0x4c89ef	                            mov rdi, r13	      1368	quickfix.c	FUNCTION_13	IF_1	CALL_3
0x4000556	      0xe800000000	                          call 0x400055b	      1368	quickfix.c	FUNCTION_13	IF_1	CALL_3
0x400055b	          0x8d7802	                      lea edi, [rax + 2]	      1368	quickfix.c	FUNCTION_13	IF_1	CALL_3
0x400055e	      0xe800000000	                          call 0x4000563	      1368	quickfix.c	FUNCTION_13	IF_1	CALL_3
0x4000563	    0x488d14dd0000	                        lea rdx, [rbx*8]	      1370	quickfix.c	FUNCTION_13	IF_1
0x400056b	        0x48c1e307	                              shl rbx, 7	      1370	quickfix.c	FUNCTION_13	IF_1
0x400056f	          0x4829d3	                            sub rbx, rdx	      1370	quickfix.c	FUNCTION_13	IF_1
0x4000572	          0x4885c0	                           test rax, rax	      1371	quickfix.c	FUNCTION_13	IF_1	IF_2
0x4000575	      0x4989441c40	       mov qword [r12 + rbx + 0x40], rax	      1370	quickfix.c	FUNCTION_13	IF_1
0x400057a	            0x742c	                            je 0x40005a8	      1371	quickfix.c	FUNCTION_13	IF_1	IF_2
0x400057c	        0x4883c408	                              add rsp, 8	      1374	quickfix.c	FUNCTION_13
0x4000580	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_127	CALL_1
0x4000583	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_127	CALL_1
0x4000586	              0x5b	                                 pop rbx	      1374	quickfix.c	FUNCTION_13
0x4000587	              0x5d	                                 pop rbp	      1374	quickfix.c	FUNCTION_13
0x4000588	            0x415c	                                 pop r12	      1374	quickfix.c	FUNCTION_13
0x400058a	            0x415d	                                 pop r13	      1374	quickfix.c	FUNCTION_13
0x400058c	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_127	CALL_1
0x4000591	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_127	CALL_1
0x4000598	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_127	CALL_1
0x400059d	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_127	CALL_1
0x400059f	      0xe900000000	                           jmp 0x40005a4	        33	stdio2.h	FUNCTION_127	CALL_1
0x40005a4	         0xf1f4000	                         nop dword [rax]	        33	stdio2.h	FUNCTION_127	CALL_1
0x40005a8	        0x4883c408	                              add rsp, 8	      1374	quickfix.c	FUNCTION_13
0x40005ac	              0x5b	                                 pop rbx	      1374	quickfix.c	FUNCTION_13
0x40005ad	              0x5d	                                 pop rbp	      1374	quickfix.c	FUNCTION_13
0x40005ae	            0x415c	                                 pop r12	      1374	quickfix.c	FUNCTION_13
0x40005b0	            0x415d	                                 pop r13	      1374	quickfix.c	FUNCTION_13
0x40005b2	              0xc3	                                     ret	      1374	quickfix.c	FUNCTION_13
qf_update_buffer	CALL,9:ELSE,0:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,4:functions,0	62
0x40019b0	            0x4155	                                push r13	      3503	quickfix.c	FUNCTION_58
0x40019b2	            0x4154	                                push r12	      3503	quickfix.c	FUNCTION_58
0x40019b4	          0x4989f4	                            mov r12, rsi	      3503	quickfix.c	FUNCTION_58
0x40019b7	              0x55	                                push rbp	      3503	quickfix.c	FUNCTION_58
0x40019b8	              0x53	                                push rbx	      3503	quickfix.c	FUNCTION_58
0x40019b9	          0x4889fd	                            mov rbp, rdi	      3503	quickfix.c	FUNCTION_58
0x40019bc	        0x4883ec48	                           sub rsp, 0x48	      3503	quickfix.c	FUNCTION_58
0x40019c0	    0x64488b042528	                mov rax, qword fs:[0x28]	      3503	quickfix.c	FUNCTION_58
0x40019c9	      0x4889442438	             mov qword [rsp + 0x38], rax	      3503	quickfix.c	FUNCTION_58
0x40019ce	            0x31c0	                            xor eax, eax	      3503	quickfix.c	FUNCTION_58
0x40019d0	      0xe84bffffff	                    call sym.qf_find_buf	      3509	quickfix.c	FUNCTION_58	CALL_1
0x40019d5	          0x4885c0	                           test rax, rax	      3510	quickfix.c	FUNCTION_58	IF_1
0x40019d8	            0x743f	                            je 0x4001a19	      3510	quickfix.c	FUNCTION_58	IF_1
0x40019da	          0x4d85e4	                           test r12, r12	      3514	quickfix.c	FUNCTION_58	IF_1	IF_2
0x40019dd	          0x4889c3	                            mov rbx, rax	      3514	quickfix.c	FUNCTION_58	IF_1	IF_2
0x40019e0	          0x4c8b28	                    mov r13, qword [rax]	      3512	quickfix.c	FUNCTION_58	IF_1
0x40019e3	            0x746b	                            je 0x4001a50	      3514	quickfix.c	FUNCTION_58	IF_1	IF_2
0x40019e5	          0x4889ef	                            mov rdi, rbp	      3518	quickfix.c	FUNCTION_58	IF_1	CALL_3
0x40019e8	      0xe883f8ffff	         call sym.qf_update_win_titlevar	      3518	quickfix.c	FUNCTION_58	IF_1	CALL_3
0x40019ed	          0x4c89e2	                            mov rdx, r12	      3520	quickfix.c	FUNCTION_58	IF_1	CALL_4
0x40019f0	          0x4889de	                            mov rsi, rbx	      3520	quickfix.c	FUNCTION_58	IF_1	CALL_4
0x40019f3	          0x4889ef	                            mov rdi, rbp	      3520	quickfix.c	FUNCTION_58	IF_1	CALL_4
0x40019f6	      0xe8a5efffff	                 call sym.qf_fill_buffer	      3520	quickfix.c	FUNCTION_58	IF_1	CALL_4
0x40019fb	    0x488383d80000	               add qword [rbx + 0xd8], 1	      3521	quickfix.c	FUNCTION_58	IF_1	CALL_5
0x4001a03	          0x4889ef	                            mov rdi, rbp	      3533	quickfix.c	FUNCTION_58	IF_1	IF_4	CALL_8
0x4001a06	      0xe8f5f7ffff	                    call sym.qf_find_win	      3533	quickfix.c	FUNCTION_58	IF_1	IF_4	CALL_8
0x4001a0b	          0x4885c0	                           test rax, rax	      3533	quickfix.c	FUNCTION_58	IF_1	IF_4	CALL_8
0x4001a0e	            0x7409	                            je 0x4001a19	      3533	quickfix.c	FUNCTION_58	IF_1	IF_4	CALL_8
0x4001a10	    0x4c3ba8e80000	            cmp r13, qword [rax + 0xe8] 	      3533	quickfix.c	FUNCTION_58	IF_1	IF_4	CALL_8
0x4001a17	            0x7c1f	                            jl 0x4001a38	      3533	quickfix.c	FUNCTION_58	IF_1	IF_4	CALL_8
0x4001a19	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      3536	quickfix.c	FUNCTION_58
0x4001a1e	    0x644833042528	                xor rax, qword fs:[0x28]	      3536	quickfix.c	FUNCTION_58
0x4001a27	            0x7566	                           jne 0x4001a8f	      3536	quickfix.c	FUNCTION_58
0x4001a29	        0x4883c448	                           add rsp, 0x48	      3536	quickfix.c	FUNCTION_58
0x4001a2d	              0x5b	                                 pop rbx	      3536	quickfix.c	FUNCTION_58
0x4001a2e	              0x5d	                                 pop rbp	      3536	quickfix.c	FUNCTION_58
0x4001a2f	            0x415c	                                 pop r12	      3536	quickfix.c	FUNCTION_58
0x4001a31	            0x415d	                                 pop r13	      3536	quickfix.c	FUNCTION_58
0x4001a33	              0xc3	                                     ret	      3536	quickfix.c	FUNCTION_58
0x4001a34	         0xf1f4000	                         nop dword [rax]	      3536	quickfix.c	FUNCTION_58
0x4001a38	      0xbe28000000	                           mov esi, 0x28	      3534	quickfix.c	FUNCTION_58	IF_1	CALL_9
0x4001a3d	          0x4889df	                            mov rdi, rbx	      3534	quickfix.c	FUNCTION_58	IF_1	CALL_9
0x4001a40	      0xe800000000	                          call 0x4001a45	      3534	quickfix.c	FUNCTION_58	IF_1	CALL_9
0x4001a45	            0xebd2	                           jmp 0x4001a19	      3536	quickfix.c	FUNCTION_58
0x4001a47	    0x660f1f840000	                    nop word [rax + rax]	      3536	quickfix.c	FUNCTION_58
0x4001a50	          0x4889c6	                            mov rsi, rax	      3516	quickfix.c	FUNCTION_58	IF_1	CALL_2
0x4001a53	          0x4889e7	                            mov rdi, rsp	      3516	quickfix.c	FUNCTION_58	IF_1	CALL_2
0x4001a56	      0xe800000000	                          call 0x4001a5b	      3516	quickfix.c	FUNCTION_58	IF_1	CALL_2
0x4001a5b	          0x4889ef	                            mov rdi, rbp	      3518	quickfix.c	FUNCTION_58	IF_1	CALL_3
0x4001a5e	      0xe80df8ffff	         call sym.qf_update_win_titlevar	      3518	quickfix.c	FUNCTION_58	IF_1	CALL_3
0x4001a63	            0x31d2	                            xor edx, edx	      3520	quickfix.c	FUNCTION_58	IF_1	CALL_4
0x4001a65	          0x4889de	                            mov rsi, rbx	      3520	quickfix.c	FUNCTION_58	IF_1	CALL_4
0x4001a68	          0x4889ef	                            mov rdi, rbp	      3520	quickfix.c	FUNCTION_58	IF_1	CALL_4
0x4001a6b	      0xe830efffff	                 call sym.qf_fill_buffer	      3520	quickfix.c	FUNCTION_58	IF_1	CALL_4
0x4001a70	    0x488383d80000	               add qword [rbx + 0xd8], 1	      3521	quickfix.c	FUNCTION_58	IF_1	CALL_5
0x4001a78	          0x4889ef	                            mov rdi, rbp	      3525	quickfix.c	FUNCTION_58	IF_1	IF_3	CALL_6
0x4001a7b	            0x31f6	                            xor esi, esi	      3525	quickfix.c	FUNCTION_58	IF_1	IF_3	CALL_6
0x4001a7d	      0xe84ef8ffff	              call sym.qf_win_pos_update	      3525	quickfix.c	FUNCTION_58	IF_1	IF_3	CALL_6
0x4001a82	          0x4889e7	                            mov rdi, rsp	      3528	quickfix.c	FUNCTION_58	IF_1	IF_3	CALL_7
0x4001a85	      0xe800000000	                          call 0x4001a8a	      3528	quickfix.c	FUNCTION_58	IF_1	IF_3	CALL_7
0x4001a8a	      0xe974ffffff	                           jmp 0x4001a03	      3528	quickfix.c	FUNCTION_58	IF_1	IF_3	CALL_7
0x4001a8f	      0xe800000000	                          call 0x4001a94	      3536	quickfix.c	FUNCTION_58
qf_get_cur_idx	CALL,0:ELSE,0:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,2:functions,0	30
0x4005e80	        0x4883ec08	                              sub rsp, 8	      3932	quickfix.c	FUNCTION_66
0x4005e84	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      3935	quickfix.c	FUNCTION_66	IF_1
0x4005e87	      0x3dd8000000	                           cmp eax, 0xd8	      3935	quickfix.c	FUNCTION_66	IF_1
0x4005e8c	            0x7432	                            je 0x4005ec0	      3935	quickfix.c	FUNCTION_66	IF_1
0x4005e8e	      0x3dde000000	                           cmp eax, 0xde	      3935	quickfix.c	FUNCTION_66	IF_1
0x4005e93	      0xba00000000	                              mov edx, 0	      3933	quickfix.c	FUNCTION_66
0x4005e98	            0x7426	                            je 0x4005ec0	      3935	quickfix.c	FUNCTION_66	IF_1
0x4005e9a	        0x48634208	            movsxd rax, dword [rdx + 8] 	      3943	quickfix.c	FUNCTION_66
0x4005e9e	    0x488d0cc50000	                        lea rcx, [rax*8]	      3943	quickfix.c	FUNCTION_66
0x4005ea6	        0x48c1e007	                              shl rax, 7	      3943	quickfix.c	FUNCTION_66
0x4005eaa	          0x4829c8	                            sub rax, rcx	      3943	quickfix.c	FUNCTION_66
0x4005ead	        0x8b440234	      mov eax, dword [rdx + rax + 0x34] 	      3943	quickfix.c	FUNCTION_66
0x4005eb1	        0x4883c408	                              add rsp, 8	      3944	quickfix.c	FUNCTION_66
0x4005eb5	              0xc3	                                     ret	      3944	quickfix.c	FUNCTION_66
0x4005eb6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3944	quickfix.c	FUNCTION_66
0x4005ec0	    0x488b05000000	            mov rax, qword [0x04005ec7] 	      3938	quickfix.c	FUNCTION_66	IF_1
0x4005ec7	        0x488b7808	                mov rdi, qword [rax + 8]	      3938	quickfix.c	FUNCTION_66	IF_1
0x4005ecb	      0xe800000000	                          call 0x4005ed0	      3938	quickfix.c	FUNCTION_66	IF_1
0x4005ed0	            0x85c0	                           test eax, eax	      3938	quickfix.c	FUNCTION_66	IF_1
0x4005ed2	    0x488b05000000	            mov rax, qword [0x04005ed9] 	      3938	quickfix.c	FUNCTION_66	IF_1
0x4005ed9	            0x7415	                            je 0x4005ef0	      3938	quickfix.c	FUNCTION_66	IF_1
0x4005edb	    0x488b90501900	          mov rdx, qword [rax + 0x1950] 	      3938	quickfix.c	FUNCTION_66	IF_1
0x4005ee2	          0x4885d2	                           test rdx, rdx	      3938	quickfix.c	FUNCTION_66	IF_1
0x4005ee5	            0x75b3	                           jne 0x4005e9a	      3938	quickfix.c	FUNCTION_66	IF_1
0x4005ee7	    0x660f1f840000	                    nop word [rax + rax]	      3938	quickfix.c	FUNCTION_66	IF_1
0x4005ef0	    0x488b90481900	          mov rdx, qword [rax + 0x1948] 	      3938	quickfix.c	FUNCTION_66	IF_1
0x4005ef7	          0x4885d2	                           test rdx, rdx	      3939	quickfix.c	FUNCTION_66	IF_1	IF_2
0x4005efa	            0x759e	                           jne 0x4005e9a	      3939	quickfix.c	FUNCTION_66	IF_1	IF_2
0x4005efc	            0x31c0	                            xor eax, eax	      3940	quickfix.c	FUNCTION_66	IF_1	IF_2
0x4005efe	            0xebb1	                           jmp 0x4005eb1	      3940	quickfix.c	FUNCTION_66	IF_1	IF_2
ex_cclose	CALL,2:ELSE,0:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,3:functions,0	30
0x40056f0	        0x4883ec08	                              sub rsp, 8	      3179	quickfix.c	FUNCTION_48
0x40056f4	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      3183	quickfix.c	FUNCTION_48	IF_1
0x40056f7	      0x3dd6000000	                           cmp eax, 0xd6	      3183	quickfix.c	FUNCTION_48	IF_1
0x40056fc	            0x742a	                            je 0x4005728	      3183	quickfix.c	FUNCTION_48	IF_1
0x40056fe	      0x3d01010000	                          cmp eax, 0x101	      3183	quickfix.c	FUNCTION_48	IF_1
0x4005703	      0xbf00000000	                              mov edi, 0	      3181	quickfix.c	FUNCTION_48
0x4005708	            0x741e	                            je 0x4005728	      3183	quickfix.c	FUNCTION_48	IF_1
0x400570a	      0xe8f1baffff	                    call sym.qf_find_win	      3191	quickfix.c	FUNCTION_48	CALL_1
0x400570f	          0x4885c0	                           test rax, rax	      3192	quickfix.c	FUNCTION_48	IF_3
0x4005712	            0x7448	                            je 0x400575c	      3192	quickfix.c	FUNCTION_48	IF_3
0x4005714	            0x31f6	                            xor esi, esi	      3193	quickfix.c	FUNCTION_48	CALL_2
0x4005716	          0x4889c7	                            mov rdi, rax	      3193	quickfix.c	FUNCTION_48	CALL_2
0x4005719	        0x4883c408	                              add rsp, 8	      3194	quickfix.c	FUNCTION_48
0x400571d	      0xe900000000	                           jmp 0x4005722	      3193	quickfix.c	FUNCTION_48	CALL_2
0x4005722	    0x660f1f440000	                    nop word [rax + rax]	      3193	quickfix.c	FUNCTION_48	CALL_2
0x4005728	    0x488b05000000	            mov rax, qword [0x0400572f] 	      3185	quickfix.c	FUNCTION_48	IF_1
0x400572f	        0x488b7808	                mov rdi, qword [rax + 8]	      3185	quickfix.c	FUNCTION_48	IF_1
0x4005733	      0xe800000000	                          call 0x4005738	      3185	quickfix.c	FUNCTION_48	IF_1
0x4005738	            0x85c0	                           test eax, eax	      3185	quickfix.c	FUNCTION_48	IF_1
0x400573a	    0x488b05000000	            mov rax, qword [0x04005741] 	      3185	quickfix.c	FUNCTION_48	IF_1
0x4005741	            0x740d	                            je 0x4005750	      3185	quickfix.c	FUNCTION_48	IF_1
0x4005743	    0x488bb8501900	          mov rdi, qword [rax + 0x1950] 	      3185	quickfix.c	FUNCTION_48	IF_1
0x400574a	          0x4885ff	                           test rdi, rdi	      3185	quickfix.c	FUNCTION_48	IF_1
0x400574d	            0x75bb	                           jne 0x400570a	      3185	quickfix.c	FUNCTION_48	IF_1
0x400574f	              0x90	                                     nop	      3185	quickfix.c	FUNCTION_48	IF_1
0x4005750	    0x488bb8481900	          mov rdi, qword [rax + 0x1948] 	      3185	quickfix.c	FUNCTION_48	IF_1
0x4005757	          0x4885ff	                           test rdi, rdi	      3186	quickfix.c	FUNCTION_48	IF_1	IF_2
0x400575a	            0x75ae	                           jne 0x400570a	      3186	quickfix.c	FUNCTION_48	IF_1	IF_2
0x400575c	        0x4883c408	                              add rsp, 8	      3194	quickfix.c	FUNCTION_48
0x4005760	              0xc3	                                     ret	      3194	quickfix.c	FUNCTION_48
qf_win_goto	CALL,2:ELSE,0:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0	19
0x4000e30	              0x53	                                push rbx	      3333	quickfix.c	FUNCTION_50
0x4000e31	        0x488b4708	                mov rax, qword [rdi + 8]	      3337	quickfix.c	FUNCTION_50
0x4000e35	        0x48897738	             mov qword [rdi + 0x38], rsi	      3338	quickfix.c	FUNCTION_50
0x4000e39	    0xc74740000000	               mov dword [rdi + 0x40], 0	      3339	quickfix.c	FUNCTION_50
0x4000e40	    0xc74744000000	               mov dword [rdi + 0x44], 0	      3341	quickfix.c	FUNCTION_50
0x4000e47	    0xc74748000000	               mov dword [rdi + 0x48], 0	      3343	quickfix.c	FUNCTION_50
0x4000e4e	    0x488b1d000000	            mov rbx, qword [0x04000e55] 	      3334	quickfix.c	FUNCTION_50
0x4000e55	    0x488905000000	            mov qword [0x04000e5c], rax 	      3337	quickfix.c	FUNCTION_50
0x4000e5c	    0x48893d000000	            mov qword [0x04000e63], rdi 	      3336	quickfix.c	FUNCTION_50
0x4000e63	      0xe800000000	                          call 0x4000e68	      3344	quickfix.c	FUNCTION_50	CALL_1
0x4000e68	      0xbf0a000000	                            mov edi, 0xa	      3345	quickfix.c	FUNCTION_50	CALL_2
0x4000e6d	      0xe800000000	                          call 0x4000e72	      3345	quickfix.c	FUNCTION_50	CALL_2
0x4000e72	    0x488b05000000	            mov rax, qword [0x04000e79] 	      3346	quickfix.c	FUNCTION_50
0x4000e79	    0x48891d000000	            mov qword [0x04000e80], rbx 	      3347	quickfix.c	FUNCTION_50
0x4000e80	    0xc78040010000	              mov dword [rax + 0x140], 1	      3346	quickfix.c	FUNCTION_50
0x4000e8a	        0x488b4308	                mov rax, qword [rbx + 8]	      3348	quickfix.c	FUNCTION_50
0x4000e8e	              0x5b	                                 pop rbx	      3349	quickfix.c	FUNCTION_50
0x4000e8f	    0x488905000000	            mov qword [0x04000e96], rax 	      3348	quickfix.c	FUNCTION_50
0x4000e96	              0xc3	                                     ret	      3349	quickfix.c	FUNCTION_50
qf_clean_dir_stack	CALL,2:ELSE,0:DO,0:WHILE,1:FOR,0:SWITCH,0:IF,0:functions,0	21
0x4000180	              0x55	                                push rbp	      1880	quickfix.c	FUNCTION_24
0x4000181	              0x53	                                push rbx	      1880	quickfix.c	FUNCTION_24
0x4000182	        0x4883ec08	                              sub rsp, 8	      1880	quickfix.c	FUNCTION_24
0x4000186	          0x488b1f	                    mov rbx, qword [rdi]	      1883	quickfix.c	FUNCTION_24	WHILE_1
0x4000189	          0x4885db	                           test rbx, rbx	      1883	quickfix.c	FUNCTION_24	WHILE_1
0x400018c	            0x742b	                            je 0x40001b9	      1883	quickfix.c	FUNCTION_24	WHILE_1
0x400018e	          0x4889fd	                            mov rbp, rdi	      1883	quickfix.c	FUNCTION_24	WHILE_1
0x4000191	     0xf1f80000000	                         nop dword [rax]	      1883	quickfix.c	FUNCTION_24	WHILE_1
0x4000198	          0x488b03	                    mov rax, qword [rbx]	      1885	quickfix.c	FUNCTION_24	WHILE_1
0x400019b	        0x48894500	                    mov qword [rbp], rax	      1885	quickfix.c	FUNCTION_24	WHILE_1
0x400019f	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1886	quickfix.c	FUNCTION_24	WHILE_1	CALL_1
0x40001a3	      0xe800000000	                          call 0x40001a8	      1886	quickfix.c	FUNCTION_24	WHILE_1	CALL_1
0x40001a8	          0x4889df	                            mov rdi, rbx	      1887	quickfix.c	FUNCTION_24	WHILE_1	CALL_2
0x40001ab	      0xe800000000	                          call 0x40001b0	      1887	quickfix.c	FUNCTION_24	WHILE_1	CALL_2
0x40001b0	        0x488b5d00	                    mov rbx, qword [rbp]	      1883	quickfix.c	FUNCTION_24	WHILE_1
0x40001b4	          0x4885db	                           test rbx, rbx	      1883	quickfix.c	FUNCTION_24	WHILE_1
0x40001b7	            0x75df	                           jne 0x4000198	      1883	quickfix.c	FUNCTION_24	WHILE_1
0x40001b9	        0x4883c408	                              add rsp, 8	      1889	quickfix.c	FUNCTION_24
0x40001bd	              0x5b	                                 pop rbx	      1889	quickfix.c	FUNCTION_24
0x40001be	              0x5d	                                 pop rbp	      1889	quickfix.c	FUNCTION_24
0x40001bf	              0xc3	                                     ret	      1889	quickfix.c	FUNCTION_24
qf_get_cur_valid_idx	CALL,0:ELSE,1:DO,0:WHILE,0:FOR,1:SWITCH,0:IF,6:functions,0	78
0x4005f00	              0x53	                                push rbx	      3952	quickfix.c	FUNCTION_67
0x4005f01	          0x8b5720	            mov edx, dword [rdi + 0x20] 	      3959	quickfix.c	FUNCTION_67	IF_1
0x4005f04	          0x4889fb	                            mov rbx, rdi	      3952	quickfix.c	FUNCTION_67
0x4005f07	    0x81fad8000000	                           cmp edx, 0xd8	      3959	quickfix.c	FUNCTION_67	IF_1
0x4005f0d	     0xf84bd000000	                            je 0x4005fd0	      3959	quickfix.c	FUNCTION_67	IF_1
0x4005f13	    0x81fade000000	                           cmp edx, 0xde	      3959	quickfix.c	FUNCTION_67	IF_1
0x4005f19	      0xb800000000	                              mov eax, 0	      3953	quickfix.c	FUNCTION_67
0x4005f1e	     0xf84ac000000	                            je 0x4005fd0	      3959	quickfix.c	FUNCTION_67	IF_1
0x4005f24	        0x48635008	            movsxd rdx, dword [rax + 8] 	      3971	quickfix.c	FUNCTION_67	IF_3
0x4005f28	    0x488d0cd50000	                        lea rcx, [rdx*8]	      3971	quickfix.c	FUNCTION_67	IF_3
0x4005f30	        0x48c1e207	                              shl rdx, 7	      3971	quickfix.c	FUNCTION_67	IF_3
0x4005f34	          0x4829ca	                            sub rdx, rcx	      3971	quickfix.c	FUNCTION_67	IF_3
0x4005f37	          0x4801d0	                            add rax, rdx	      3971	quickfix.c	FUNCTION_67	IF_3
0x4005f3a	          0x8b4830	            mov ecx, dword [rax + 0x30] 	      3971	quickfix.c	FUNCTION_67	IF_3
0x4005f3d	            0x85c9	                           test ecx, ecx	      3971	quickfix.c	FUNCTION_67	IF_3
0x4005f3f	     0xf8eb6000000	                           jle 0x4005ffb	      3971	quickfix.c	FUNCTION_67	IF_3
0x4005f45	          0x8b5038	            mov edx, dword [rax + 0x38] 	      3971	quickfix.c	FUNCTION_67	IF_3
0x4005f48	            0x85d2	                           test edx, edx	      3971	quickfix.c	FUNCTION_67	IF_3
0x4005f4a	     0xf85ab000000	                           jne 0x4005ffb	      3971	quickfix.c	FUNCTION_67	IF_3
0x4005f50	          0x8b7834	            mov edi, dword [rax + 0x34] 	      3974	quickfix.c	FUNCTION_67	FOR_1
0x4005f53	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      3968	quickfix.c	FUNCTION_67
0x4005f57	            0x85ff	                           test edi, edi	      3974	quickfix.c	FUNCTION_67	FOR_1
0x4005f59	     0xf8e9c000000	                           jle 0x4005ffb	      3974	quickfix.c	FUNCTION_67	FOR_1
0x4005f5f	          0x4885d2	                           test rdx, rdx	      3974	quickfix.c	FUNCTION_67	FOR_1
0x4005f62	     0xf8493000000	                            je 0x4005ffb	      3974	quickfix.c	FUNCTION_67	FOR_1
0x4005f68	          0x4531c0	                            xor r8d, r8d	      3974	quickfix.c	FUNCTION_67	FOR_1
0x4005f6b	            0x31c0	                            xor eax, eax	      3974	quickfix.c	FUNCTION_67	FOR_1
0x4005f6d	      0xb901000000	                              mov ecx, 1	      3974	quickfix.c	FUNCTION_67	FOR_1
0x4005f72	            0xeb1e	                           jmp 0x4005f92	      3974	quickfix.c	FUNCTION_67	FOR_1
0x4005f74	         0xf1f4000	                         nop dword [rax]	      3974	quickfix.c	FUNCTION_67	FOR_1
0x4005f78	    0x81fede000000	                           cmp esi, 0xde	      3978	quickfix.c	FUNCTION_67	FOR_1	IF_4	IF_5
0x4005f7e	            0x7420	                            je 0x4005fa0	      3978	quickfix.c	FUNCTION_67	FOR_1	IF_4	IF_5
0x4005f80	          0x83c001	                              add eax, 1	      3988	quickfix.c	FUNCTION_67	FOR_1	IF_4	ELSE_1
0x4005f83	          0x83c101	                              add ecx, 1	      3974	quickfix.c	FUNCTION_67	FOR_1
0x4005f86	          0x488b12	                    mov rdx, qword [rdx]	      3974	quickfix.c	FUNCTION_67	FOR_1
0x4005f89	            0x39f9	                            cmp ecx, edi	      3974	quickfix.c	FUNCTION_67	FOR_1
0x4005f8b	            0x7f33	                            jg 0x4005fc0	      3974	quickfix.c	FUNCTION_67	FOR_1
0x4005f8d	          0x4885d2	                           test rdx, rdx	      3974	quickfix.c	FUNCTION_67	FOR_1
0x4005f90	            0x742e	                            je 0x4005fc0	      3974	quickfix.c	FUNCTION_67	FOR_1
0x4005f92	        0x807a4300	                cmp byte [rdx + 0x43], 0	      3976	quickfix.c	FUNCTION_67	FOR_1	IF_4
0x4005f96	            0x74eb	                            je 0x4005f83	      3976	quickfix.c	FUNCTION_67	FOR_1	IF_4
0x4005f98	          0x8b7320	            mov esi, dword [rbx + 0x20] 	      3978	quickfix.c	FUNCTION_67	FOR_1	IF_4	IF_5
0x4005f9b	          0x83fe3d	                           cmp esi, 0x3d	      3978	quickfix.c	FUNCTION_67	FOR_1	IF_4	IF_5
0x4005f9e	            0x75d8	                           jne 0x4005f78	      3978	quickfix.c	FUNCTION_67	FOR_1	IF_4	IF_5
0x4005fa0	          0x8b7218	            mov esi, dword [rdx + 0x18] 	      3980	quickfix.c	FUNCTION_67	FOR_1	IF_4	IF_5	IF_6
0x4005fa3	          0x4439c6	                            cmp esi, r8d	      3980	quickfix.c	FUNCTION_67	FOR_1	IF_4	IF_5	IF_6
0x4005fa6	            0x74db	                            je 0x4005f83	      3980	quickfix.c	FUNCTION_67	FOR_1	IF_4	IF_5	IF_6
0x4005fa8	            0x85f6	                           test esi, esi	      3980	quickfix.c	FUNCTION_67	FOR_1	IF_4	IF_5	IF_6
0x4005faa	            0x7ed7	                           jle 0x4005f83	      3980	quickfix.c	FUNCTION_67	FOR_1	IF_4	IF_5	IF_6
0x4005fac	          0x83c101	                              add ecx, 1	      3974	quickfix.c	FUNCTION_67	FOR_1
0x4005faf	          0x83c001	                              add eax, 1	      3983	quickfix.c	FUNCTION_67	FOR_1	IF_4	IF_5	IF_6
0x4005fb2	          0x4189f0	                            mov r8d, esi	      3983	quickfix.c	FUNCTION_67	FOR_1	IF_4	IF_5	IF_6
0x4005fb5	            0x39f9	                            cmp ecx, edi	      3974	quickfix.c	FUNCTION_67	FOR_1
0x4005fb7	          0x488b12	                    mov rdx, qword [rdx]	      3974	quickfix.c	FUNCTION_67	FOR_1
0x4005fba	            0x7ed1	                           jle 0x4005f8d	      3974	quickfix.c	FUNCTION_67	FOR_1
0x4005fbc	         0xf1f4000	                         nop dword [rax]	      3974	quickfix.c	FUNCTION_67	FOR_1
0x4005fc0	            0x85c0	                           test eax, eax	      3992	quickfix.c	FUNCTION_67	ELSE_1
0x4005fc2	            0x7437	                            je 0x4005ffb	      3992	quickfix.c	FUNCTION_67	ELSE_1
0x4005fc4	              0x5b	                                 pop rbx	      3993	quickfix.c	FUNCTION_67	ELSE_1
0x4005fc5	              0xc3	                                     ret	      3993	quickfix.c	FUNCTION_67	ELSE_1
0x4005fc6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3993	quickfix.c	FUNCTION_67	ELSE_1
0x4005fd0	    0x488b05000000	            mov rax, qword [0x04005fd7] 	      3962	quickfix.c	FUNCTION_67	IF_1
0x4005fd7	        0x488b7808	                mov rdi, qword [rax + 8]	      3962	quickfix.c	FUNCTION_67	IF_1
0x4005fdb	      0xe800000000	                          call 0x4005fe0	      3962	quickfix.c	FUNCTION_67	IF_1
0x4005fe0	            0x85c0	                           test eax, eax	      3962	quickfix.c	FUNCTION_67	IF_1
0x4005fe2	    0x488b15000000	            mov rdx, qword [0x04005fe9] 	      3962	quickfix.c	FUNCTION_67	IF_1
0x4005fe9	            0x751d	                           jne 0x4006008	      3962	quickfix.c	FUNCTION_67	IF_1
0x4005feb	    0x488b82481900	          mov rax, qword [rdx + 0x1948] 	      3962	quickfix.c	FUNCTION_67	IF_1
0x4005ff2	          0x4885c0	                           test rax, rax	      3963	quickfix.c	FUNCTION_67	IF_1	IF_2
0x4005ff5	     0xf8529ffffff	                           jne 0x4005f24	      3963	quickfix.c	FUNCTION_67	IF_1	IF_2
0x4005ffb	      0xb801000000	                              mov eax, 1	      3992	quickfix.c	FUNCTION_67	ELSE_1
0x4006000	              0x5b	                                 pop rbx	      3993	quickfix.c	FUNCTION_67	ELSE_1
0x4006001	              0xc3	                                     ret	      3993	quickfix.c	FUNCTION_67	ELSE_1
0x4006002	    0x660f1f440000	                    nop word [rax + rax]	      3993	quickfix.c	FUNCTION_67	ELSE_1
0x4006008	    0x488b82501900	          mov rax, qword [rdx + 0x1950] 	      3962	quickfix.c	FUNCTION_67	IF_1
0x400600f	          0x4885c0	                           test rax, rax	      3962	quickfix.c	FUNCTION_67	IF_1
0x4006012	     0xf850cffffff	                           jne 0x4005f24	      3962	quickfix.c	FUNCTION_67	IF_1
0x4006018	            0xebd1	                           jmp 0x4005feb	      3962	quickfix.c	FUNCTION_67	IF_1
ll_free_all	CALL,2:ELSE,0:DO,0:WHILE,0:FOR,1:SWITCH,0:IF,2:functions,0	33
0x40003c0	              0x55	                                push rbp	      1417	quickfix.c	FUNCTION_15
0x40003c1	              0x53	                                push rbx	      1417	quickfix.c	FUNCTION_15
0x40003c2	        0x4883ec08	                              sub rsp, 8	      1417	quickfix.c	FUNCTION_15
0x40003c6	          0x488b2f	                    mov rbp, qword [rdi]	      1421	quickfix.c	FUNCTION_15
0x40003c9	          0x4885ed	                           test rbp, rbp	      1422	quickfix.c	FUNCTION_15	IF_1
0x40003cc	            0x7414	                            je 0x40003e2	      1422	quickfix.c	FUNCTION_15	IF_1
0x40003ce	          0x8b4500	                    mov eax, dword [rbp]	      1426	quickfix.c	FUNCTION_15
0x40003d1	    0x48c707000000	                      mov qword [rdi], 0	      1424	quickfix.c	FUNCTION_15
0x40003d8	          0x83e801	                              sub eax, 1	      1426	quickfix.c	FUNCTION_15
0x40003db	            0x85c0	                           test eax, eax	      1427	quickfix.c	FUNCTION_15	IF_2
0x40003dd	          0x894500	                    mov dword [rbp], eax	      1426	quickfix.c	FUNCTION_15
0x40003e0	            0x7e0e	                           jle 0x40003f0	      1427	quickfix.c	FUNCTION_15	IF_2
0x40003e2	        0x4883c408	                              add rsp, 8	      1434	quickfix.c	FUNCTION_15
0x40003e6	              0x5b	                                 pop rbx	      1434	quickfix.c	FUNCTION_15
0x40003e7	              0x5d	                                 pop rbp	      1434	quickfix.c	FUNCTION_15
0x40003e8	              0xc3	                                     ret	      1434	quickfix.c	FUNCTION_15
0x40003e9	     0xf1f80000000	                         nop dword [rax]	      1434	quickfix.c	FUNCTION_15
0x40003f0	          0x8b4504	                mov eax, dword [rbp + 4]	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x40003f3	            0x31db	                            xor ebx, ebx	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x40003f5	            0x85c0	                           test eax, eax	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x40003f7	            0x7e19	                           jle 0x4000412	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x40003f9	     0xf1f80000000	                         nop dword [rax]	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x4000400	            0x89de	                            mov esi, ebx	      1431	quickfix.c	FUNCTION_15	IF_2	CALL_1
0x4000402	          0x4889ef	                            mov rdi, rbp	      1431	quickfix.c	FUNCTION_15	IF_2	CALL_1
0x4000405	          0x83c301	                              add ebx, 1	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x4000408	      0xe833ffffff	                        call sym.qf_free	      1431	quickfix.c	FUNCTION_15	IF_2	CALL_1
0x400040d	          0x395d04	                cmp dword [rbp + 4], ebx	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x4000410	            0x7fee	                            jg 0x4000400	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x4000412	        0x4883c408	                              add rsp, 8	      1434	quickfix.c	FUNCTION_15
0x4000416	          0x4889ef	                            mov rdi, rbp	      1432	quickfix.c	FUNCTION_15	IF_2	CALL_2
0x4000419	              0x5b	                                 pop rbx	      1434	quickfix.c	FUNCTION_15
0x400041a	              0x5d	                                 pop rbp	      1434	quickfix.c	FUNCTION_15
0x400041b	      0xe900000000	                     jmp sym.ll_new_list	      1432	quickfix.c	FUNCTION_15	IF_2	CALL_2
qf_push_dir	CALL,11:ELSE,2:DO,0:WHILE,2:FOR,0:SWITCH,0:IF,5:functions,0	102
0x4000820	            0x4156	                                push r14	      1786	quickfix.c	FUNCTION_22
0x4000822	            0x4155	                                push r13	      1786	quickfix.c	FUNCTION_22
0x4000824	          0x4989fd	                            mov r13, rdi	      1786	quickfix.c	FUNCTION_22
0x4000827	            0x4154	                                push r12	      1786	quickfix.c	FUNCTION_22
0x4000829	              0x55	                                push rbp	      1786	quickfix.c	FUNCTION_22
0x400082a	      0xbf10000000	                           mov edi, 0x10	      1791	quickfix.c	FUNCTION_22	CALL_1
0x400082f	              0x53	                                push rbx	      1786	quickfix.c	FUNCTION_22
0x4000830	          0x4189d6	                           mov r14d, edx	      1786	quickfix.c	FUNCTION_22
0x4000833	          0x4889f3	                            mov rbx, rsi	      1786	quickfix.c	FUNCTION_22
0x4000836	        0x4883ec10	                           sub rsp, 0x10	      1786	quickfix.c	FUNCTION_22
0x400083a	      0xe800000000	                          call 0x400083f	      1791	quickfix.c	FUNCTION_22	CALL_1
0x400083f	          0x4885c0	                           test rax, rax	      1792	quickfix.c	FUNCTION_22	IF_1
0x4000842	     0xf8430010000	                            je 0x4000978	      1792	quickfix.c	FUNCTION_22	IF_1
0x4000848	          0x488b13	                    mov rdx, qword [rbx]	      1795	quickfix.c	FUNCTION_22
0x400084b	          0x4c89ef	                            mov rdi, r13	      1799	quickfix.c	FUNCTION_22	IF_2	CALL_2
0x400084e	          0x488910	                    mov qword [rax], rdx	      1795	quickfix.c	FUNCTION_22
0x4000851	          0x488903	                    mov qword [rbx], rax	      1796	quickfix.c	FUNCTION_22
0x4000854	      0xe800000000	                          call 0x4000859	      1799	quickfix.c	FUNCTION_22	IF_2	CALL_2
0x4000859	            0x85c0	                           test eax, eax	      1799	quickfix.c	FUNCTION_22	IF_2	CALL_2
0x400085b	          0x4c8b23	                    mov r12, qword [rbx]	      1799	quickfix.c	FUNCTION_22	IF_2	CALL_2
0x400085e	     0xf85cc000000	                           jne 0x4000930	      1799	quickfix.c	FUNCTION_22	IF_2	CALL_2
0x4000864	        0x498b2c24	                    mov rbp, qword [r12]	      1800	quickfix.c	FUNCTION_22	IF_2
0x4000868	          0x4885ed	                           test rbp, rbp	      1801	quickfix.c	FUNCTION_22	IF_2
0x400086b	     0xf84bf000000	                            je 0x4000930	      1801	quickfix.c	FUNCTION_22	IF_2
0x4000871	          0x4585f6	                         test r14d, r14d	      1801	quickfix.c	FUNCTION_22	IF_2
0x4000874	     0xf85b6000000	                           jne 0x4000930	      1801	quickfix.c	FUNCTION_22	IF_2
0x400087a	    0x49c744240800	                  mov qword [r12 + 8], 0	      1810	quickfix.c	FUNCTION_22	ELSE_1
0x4000883	       0xf1f440000	                   nop dword [rax + rax]	      1810	quickfix.c	FUNCTION_22	ELSE_1
0x4000888	          0x488b03	                    mov rax, qword [rbx]	      1813	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1	CALL_4
0x400088b	        0x488b7808	                mov rdi, qword [rax + 8]	      1813	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1	CALL_4
0x400088f	      0xe800000000	                          call 0x4000894	      1813	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1	CALL_4
0x4000894	          0x4c8b23	                    mov r12, qword [rbx]	      1814	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1	CALL_5
0x4000897	        0x488b7d08	                mov rdi, qword [rbp + 8]	      1814	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1	CALL_5
0x400089b	      0xba01000000	                              mov edx, 1	      1814	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1	CALL_5
0x40008a0	          0x4c89ee	                            mov rsi, r13	      1814	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1	CALL_5
0x40008a3	      0xe800000000	                          call 0x40008a8	      1814	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1	CALL_5
0x40008a8	      0x4989442408	                mov qword [r12 + 8], rax	      1814	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1	CALL_5
0x40008ad	          0x488b03	                    mov rax, qword [rbx]	      1816	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1	IF_3	CALL_6
0x40008b0	        0x488b7808	                mov rdi, qword [rax + 8]	      1816	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1	IF_3	CALL_6
0x40008b4	      0xe800000000	                          call 0x40008b9	      1816	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1	IF_3	CALL_6
0x40008b9	          0x83f801	                              cmp eax, 1	      1816	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1	IF_3	CALL_6
0x40008bc	     0xf849e000000	                            je 0x4000960	      1816	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1	IF_3	CALL_6
0x40008c2	        0x488b6d00	                    mov rbp, qword [rbp]	      1819	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1
0x40008c6	          0x4885ed	                           test rbp, rbp	      1811	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1
0x40008c9	            0x75bd	                           jne 0x4000888	      1811	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1
0x40008cb	          0x488b03	                    mov rax, qword [rbx]	      1823	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x40008ce	          0x4c8b20	                    mov r12, qword [rax]	      1823	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x40008d1	          0x4d85e4	                           test r12, r12	      1823	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x40008d4	            0x7436	                            je 0x400090c	      1823	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x40008d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1823	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x40008e0	        0x498b1424	                    mov rdx, qword [r12]	      1826	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x40008e4	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      1827	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2	CALL_7
0x40008e9	          0x488910	                    mov qword [rax], rdx	      1826	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x40008ec	      0xe800000000	                          call 0x40008f1	      1827	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2	CALL_7
0x40008f1	          0x4c89e7	                            mov rdi, r12	      1828	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2	CALL_8
0x40008f4	      0xe800000000	                          call 0x40008f9	      1828	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2	CALL_8
0x40008f9	          0x488b03	                    mov rax, qword [rbx]	      1823	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x40008fc	          0x4c8b20	                    mov r12, qword [rax]	      1823	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x40008ff	          0x4889c7	                            mov rdi, rax	      1823	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x4000902	          0x4939ec	                            cmp r12, rbp	      1823	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x4000905	            0x75d9	                           jne 0x40008e0	      1823	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x4000907	          0x4d85e4	                           test r12, r12	      1832	quickfix.c	FUNCTION_22	ELSE_1	IF_4
0x400090a	            0x7534	                           jne 0x4000940	      1832	quickfix.c	FUNCTION_22	ELSE_1	IF_4
0x400090c	        0x488b7808	                mov rdi, qword [rax + 8]	      1834	quickfix.c	FUNCTION_22	ELSE_1	IF_4	CALL_9
0x4000910	      0xe800000000	                          call 0x4000915	      1834	quickfix.c	FUNCTION_22	ELSE_1	IF_4	CALL_9
0x4000915	          0x488b2b	                    mov rbp, qword [rbx]	      1835	quickfix.c	FUNCTION_22	ELSE_1	IF_4	CALL_10
0x4000918	          0x4c89ef	                            mov rdi, r13	      1835	quickfix.c	FUNCTION_22	ELSE_1	IF_4	CALL_10
0x400091b	      0xe800000000	                          call 0x4000920	      1835	quickfix.c	FUNCTION_22	ELSE_1	IF_4	CALL_10
0x4000920	        0x48894508	                mov qword [rbp + 8], rax	      1835	quickfix.c	FUNCTION_22	ELSE_1	IF_4	CALL_10
0x4000924	          0x488b3b	                    mov rdi, qword [rbx]	      1835	quickfix.c	FUNCTION_22	ELSE_1	IF_4	CALL_10
0x4000927	            0xeb17	                           jmp 0x4000940	      1835	quickfix.c	FUNCTION_22	ELSE_1	IF_4	CALL_10
0x4000929	     0xf1f80000000	                         nop dword [rax]	      1835	quickfix.c	FUNCTION_22	ELSE_1	IF_4	CALL_10
0x4000930	          0x4c89ef	                            mov rdi, r13	      1802	quickfix.c	FUNCTION_22	CALL_3
0x4000933	      0xe800000000	                          call 0x4000938	      1802	quickfix.c	FUNCTION_22	CALL_3
0x4000938	      0x4989442408	                mov qword [r12 + 8], rax	      1802	quickfix.c	FUNCTION_22	CALL_3
0x400093d	          0x488b3b	                    mov rdi, qword [rbx]	      1802	quickfix.c	FUNCTION_22	CALL_3
0x4000940	        0x488b4708	                mov rax, qword [rdi + 8]	      1839	quickfix.c	FUNCTION_22	IF_5
0x4000944	          0x4885c0	                           test rax, rax	      1839	quickfix.c	FUNCTION_22	IF_5
0x4000947	            0x7433	                            je 0x400097c	      1839	quickfix.c	FUNCTION_22	IF_5
0x4000949	        0x4883c410	                           add rsp, 0x10	      1848	quickfix.c	FUNCTION_22
0x400094d	              0x5b	                                 pop rbx	      1848	quickfix.c	FUNCTION_22
0x400094e	              0x5d	                                 pop rbp	      1848	quickfix.c	FUNCTION_22
0x400094f	            0x415c	                                 pop r12	      1848	quickfix.c	FUNCTION_22
0x4000951	            0x415d	                                 pop r13	      1848	quickfix.c	FUNCTION_22
0x4000953	            0x415e	                                 pop r14	      1848	quickfix.c	FUNCTION_22
0x4000955	              0xc3	                                     ret	      1848	quickfix.c	FUNCTION_22
0x4000956	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1848	quickfix.c	FUNCTION_22
0x4000960	          0x488b3b	                    mov rdi, qword [rbx]	      1823	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x4000963	          0x4c8b27	                    mov r12, qword [rdi]	      1823	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x4000966	          0x4889f8	                            mov rax, rdi	      1823	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x4000969	          0x4939ec	                            cmp r12, rbp	      1823	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x400096c	     0xf856effffff	                           jne 0x40008e0	      1823	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x4000972	            0xebcc	                           jmp 0x4000940	      1823	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x4000974	         0xf1f4000	                         nop dword [rax]	      1823	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x4000978	            0x31c0	                            xor eax, eax	      1793	quickfix.c	FUNCTION_22	IF_1
0x400097a	            0xebcd	                           jmp 0x4000949	      1793	quickfix.c	FUNCTION_22	IF_1
0x400097c	          0x488b17	                    mov rdx, qword [rdi]	      1844	quickfix.c	FUNCTION_22	ELSE_2
0x400097f	      0x4889442408	                mov qword [rsp + 8], rax	      1844	quickfix.c	FUNCTION_22	ELSE_2
0x4000984	          0x488913	                    mov qword [rbx], rdx	      1844	quickfix.c	FUNCTION_22	ELSE_2
0x4000987	      0xe800000000	                          call 0x400098c	      1845	quickfix.c	FUNCTION_22	ELSE_2	CALL_11
0x400098c	      0x488b442408	                mov rax, qword [rsp + 8]	      1846	quickfix.c	FUNCTION_22	ELSE_2
0x4000991	            0xebb6	                           jmp 0x4000949	      1846	quickfix.c	FUNCTION_22	ELSE_2
qf_pop_dir	CALL,2:ELSE,0:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,1:functions,0	27
0x40002f0	              0x55	                                push rbp	      1856	quickfix.c	FUNCTION_23
0x40002f1	              0x53	                                push rbx	      1856	quickfix.c	FUNCTION_23
0x40002f2	        0x4883ec08	                              sub rsp, 8	      1856	quickfix.c	FUNCTION_23
0x40002f6	          0x488b2f	                    mov rbp, qword [rdi]	      1863	quickfix.c	FUNCTION_23	IF_1
0x40002f9	          0x4885ed	                           test rbp, rbp	      1863	quickfix.c	FUNCTION_23	IF_1
0x40002fc	            0x7432	                            je 0x4000330	      1863	quickfix.c	FUNCTION_23	IF_1
0x40002fe	        0x488b4500	                    mov rax, qword [rbp]	      1866	quickfix.c	FUNCTION_23	IF_1
0x4000302	          0x4889fb	                            mov rbx, rdi	      1866	quickfix.c	FUNCTION_23	IF_1
0x4000305	          0x488907	                    mov qword [rdi], rax	      1866	quickfix.c	FUNCTION_23	IF_1
0x4000308	        0x488b7d08	                mov rdi, qword [rbp + 8]	      1867	quickfix.c	FUNCTION_23	IF_1	CALL_1
0x400030c	      0xe800000000	                          call 0x4000311	      1867	quickfix.c	FUNCTION_23	IF_1	CALL_1
0x4000311	          0x4889ef	                            mov rdi, rbp	      1868	quickfix.c	FUNCTION_23	IF_1	CALL_2
0x4000314	      0xe800000000	                          call 0x4000319	      1868	quickfix.c	FUNCTION_23	IF_1	CALL_2
0x4000319	          0x488b03	                    mov rax, qword [rbx]	      1872	quickfix.c	FUNCTION_23
0x400031c	          0x4885c0	                           test rax, rax	      1872	quickfix.c	FUNCTION_23
0x400031f	            0x740f	                            je 0x4000330	      1872	quickfix.c	FUNCTION_23
0x4000321	        0x488b4008	                mov rax, qword [rax + 8]	      1872	quickfix.c	FUNCTION_23
0x4000325	        0x4883c408	                              add rsp, 8	      1873	quickfix.c	FUNCTION_23
0x4000329	              0x5b	                                 pop rbx	      1873	quickfix.c	FUNCTION_23
0x400032a	              0x5d	                                 pop rbp	      1873	quickfix.c	FUNCTION_23
0x400032b	              0xc3	                                     ret	      1873	quickfix.c	FUNCTION_23
0x400032c	         0xf1f4000	                         nop dword [rax]	      1873	quickfix.c	FUNCTION_23
0x4000330	        0x4883c408	                              add rsp, 8	      1873	quickfix.c	FUNCTION_23
0x4000334	            0x31c0	                            xor eax, eax	      1872	quickfix.c	FUNCTION_23
0x4000336	              0x5b	                                 pop rbx	      1873	quickfix.c	FUNCTION_23
0x4000337	              0x5d	                                 pop rbp	      1873	quickfix.c	FUNCTION_23
0x4000338	              0xc3	                                     ret	      1873	quickfix.c	FUNCTION_23
ex_copen	CALL,24:ELSE,4:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,16:functions,0	232
0x4005770	            0x4157	                                push r15	      3202	quickfix.c	FUNCTION_49
0x4005772	            0x4156	                                push r14	      3202	quickfix.c	FUNCTION_49
0x4005774	            0x4155	                                push r13	      3202	quickfix.c	FUNCTION_49
0x4005776	            0x4154	                                push r12	      3202	quickfix.c	FUNCTION_49
0x4005778	              0x55	                                push rbp	      3202	quickfix.c	FUNCTION_49
0x4005779	              0x53	                                push rbx	      3202	quickfix.c	FUNCTION_49
0x400577a	          0x4889fd	                            mov rbp, rdi	      3202	quickfix.c	FUNCTION_49
0x400577d	        0x4883ec18	                           sub rsp, 0x18	      3202	quickfix.c	FUNCTION_49
0x4005781	    0x488b05000000	            mov rax, qword [0x04005788] 	      3206	quickfix.c	FUNCTION_49
0x4005788	    0x4c8b25000000	            mov r12, qword [0x0400578f] 	      3208	quickfix.c	FUNCTION_49
0x400578f	      0x4889442408	                mov qword [rsp + 8], rax	      3206	quickfix.c	FUNCTION_49
0x4005794	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      3210	quickfix.c	FUNCTION_49	IF_1
0x4005797	      0x3df6000000	                           cmp eax, 0xf6	      3210	quickfix.c	FUNCTION_49	IF_1
0x400579c	     0xf8406020000	                            je 0x40059a8	      3210	quickfix.c	FUNCTION_49	IF_1
0x40057a2	      0x3d01010000	                          cmp eax, 0x101	      3210	quickfix.c	FUNCTION_49	IF_1
0x40057a7	      0xbb00000000	                              mov ebx, 0	      3203	quickfix.c	FUNCTION_49
0x40057ac	     0xf84f6010000	                            je 0x40059a8	      3210	quickfix.c	FUNCTION_49	IF_1
0x40057b2	        0x448b5d38	           mov r11d, dword [rbp + 0x38] 	      3220	quickfix.c	FUNCTION_49	IF_3
0x40057b6	    0x41bd0a000000	                           mov r13d, 0xa	      3223	quickfix.c	FUNCTION_49	ELSE_1
0x40057bc	          0x4585db	                         test r11d, r11d	      3220	quickfix.c	FUNCTION_49	IF_3
0x40057bf	     0xf859b010000	                           jne 0x4005960	      3220	quickfix.c	FUNCTION_49	IF_3
0x40057c5	      0xe800000000	                          call 0x40057ca	      3225	quickfix.c	FUNCTION_49	CALL_3
0x40057ca	          0x4889df	                            mov rdi, rbx	      3233	quickfix.c	FUNCTION_49	CALL_4
0x40057cd	    0xc70500000000	               mov dword [0x040057d7], 1	      3227	quickfix.c	FUNCTION_49
0x40057d7	      0xe824baffff	                    call sym.qf_find_win	      3233	quickfix.c	FUNCTION_49	CALL_4
0x40057dc	          0x4885c0	                           test rax, rax	      3235	quickfix.c	FUNCTION_49	IF_4
0x40057df	            0x7410	                            je 0x40057f1	      3235	quickfix.c	FUNCTION_49	IF_4
0x40057e1	    0x448b15000000	           mov r10d, dword [0x040057e8] 	      3235	quickfix.c	FUNCTION_49	IF_4
0x40057e8	          0x4585d2	                         test r10d, r10d	      3235	quickfix.c	FUNCTION_49	IF_4
0x40057eb	     0xf841f020000	                            je 0x4005a10	      3235	quickfix.c	FUNCTION_49	IF_4
0x40057f1	          0x4889df	                            mov rdi, rbx	      3253	quickfix.c	FUNCTION_49	ELSE_3	CALL_8
0x40057f4	      0xe827c1ffff	                    call sym.qf_find_buf	      3253	quickfix.c	FUNCTION_49	ELSE_3	CALL_8
0x40057f9	          0x4989c7	                            mov r15, rax	      3253	quickfix.c	FUNCTION_49	ELSE_3	CALL_8
0x40057fc	          0x8b4520	            mov eax, dword [rbp + 0x20] 	      3258	quickfix.c	FUNCTION_49	ELSE_3	IF_9
0x40057ff	    0x4c8b35000000	            mov r14, qword [0x04005806] 	      3256	quickfix.c	FUNCTION_49	ELSE_3
0x4005806	          0x83f85c	                           cmp eax, 0x5c	      3258	quickfix.c	FUNCTION_49	ELSE_3	IF_9
0x4005809	     0xf8461010000	                            je 0x4005970	      3258	quickfix.c	FUNCTION_49	ELSE_3	IF_9
0x400580f	          0x83f866	                           cmp eax, 0x66	      3258	quickfix.c	FUNCTION_49	ELSE_3	IF_9
0x4005812	     0xf8458010000	                            je 0x4005970	      3258	quickfix.c	FUNCTION_49	ELSE_3	IF_9
0x4005818	    0x8b3d00000000	            mov edi, dword [0x0400581e] 	      3264	quickfix.c	FUNCTION_49	ELSE_3	IF_10
0x400581e	            0x85ff	                           test edi, edi	      3264	quickfix.c	FUNCTION_49	ELSE_3	IF_10
0x4005820	     0xf855a010000	                           jne 0x4005980	      3264	quickfix.c	FUNCTION_49	ELSE_3	IF_10
0x4005826	      0xbea0000000	                           mov esi, 0xa0	      3264	quickfix.c	FUNCTION_49	ELSE_3	IF_10
0x400582b	          0x4489ef	                           mov edi, r13d	      3267	quickfix.c	FUNCTION_49	ELSE_3	IF_11	CALL_10
0x400582e	      0xe800000000	                          call 0x4005833	      3267	quickfix.c	FUNCTION_49	ELSE_3	IF_11	CALL_10
0x4005833	            0x85c0	                           test eax, eax	      3267	quickfix.c	FUNCTION_49	ELSE_3	IF_11	CALL_10
0x4005835	     0xf845a010000	                            je 0x4005995	      3267	quickfix.c	FUNCTION_49	ELSE_3	IF_11	CALL_10
0x400583b	          0x8b5520	            mov edx, dword [rbp + 0x20] 	      3271	quickfix.c	FUNCTION_49	ELSE_3	IF_12
0x400583e	    0x488b05000000	            mov rax, qword [0x04005845] 	      3269	quickfix.c	FUNCTION_49	ELSE_3	CALL_11
0x4005845	    0x81faf6000000	                           cmp edx, 0xf6	      3271	quickfix.c	FUNCTION_49	ELSE_3	IF_12
0x400584b	    0xc78088020000	              mov dword [rax + 0x288], 0	      3269	quickfix.c	FUNCTION_49	ELSE_3	CALL_11
0x4005855	    0xc780b0020000	              mov dword [rax + 0x2b0], 0	      3269	quickfix.c	FUNCTION_49	ELSE_3	CALL_11
0x400585f	     0xf84f3010000	                            je 0x4005a58	      3271	quickfix.c	FUNCTION_49	ELSE_3	IF_12
0x4005865	    0x81fa01010000	                          cmp edx, 0x101	      3271	quickfix.c	FUNCTION_49	ELSE_3	IF_12
0x400586b	     0xf84e7010000	                            je 0x4005a58	      3271	quickfix.c	FUNCTION_49	ELSE_3	IF_12
0x4005871	          0x4939c4	                            cmp r12, rax	      3282	quickfix.c	FUNCTION_49	ELSE_3	IF_13
0x4005874	      0xb800000000	                              mov eax, 0	      3282	quickfix.c	FUNCTION_49	ELSE_3	IF_13
0x4005879	        0x4c0f45e0	                         cmovne r12, rax	      3282	quickfix.c	FUNCTION_49	ELSE_3	IF_13
0x400587d	          0x4d85ff	                           test r15, r15	      3283	quickfix.c	FUNCTION_49	ELSE_3	IF_14
0x4005880	     0xf8422020000	                            je 0x4005aa8	      3283	quickfix.c	FUNCTION_49	ELSE_3	IF_14
0x4005886	        0x4883ec08	                              sub rsp, 8	      3285	quickfix.c	FUNCTION_49	ELSE_3	IF_14	CALL_12
0x400588a	    0x418bbfb80000	            mov edi, dword [r15 + 0xb8] 	      3285	quickfix.c	FUNCTION_49	ELSE_3	IF_14	CALL_12
0x4005891	            0x31c9	                            xor ecx, ecx	      3285	quickfix.c	FUNCTION_49	ELSE_3	IF_14	CALL_12
0x4005893	            0x4154	                                push r12	      3285	quickfix.c	FUNCTION_49	ELSE_3	IF_14	CALL_12
0x4005895	            0x31f6	                            xor esi, esi	      3285	quickfix.c	FUNCTION_49	ELSE_3	IF_14	CALL_12
0x4005897	    0x41b905000000	                              mov r9d, 5	      3285	quickfix.c	FUNCTION_49	ELSE_3	IF_14	CALL_12
0x400589d	    0x41b801000000	                              mov r8d, 1	      3285	quickfix.c	FUNCTION_49	ELSE_3	IF_14	CALL_12
0x40058a3	            0x31d2	                            xor edx, edx	      3285	quickfix.c	FUNCTION_49	ELSE_3	IF_14	CALL_12
0x40058a5	      0xe800000000	                          call 0x40058aa	      3285	quickfix.c	FUNCTION_49	ELSE_3	IF_14	CALL_12
0x40058aa	              0x59	                                 pop rcx	      3285	quickfix.c	FUNCTION_49	ELSE_3	IF_14	CALL_12
0x40058ab	              0x5e	                                 pop rsi	      3285	quickfix.c	FUNCTION_49	ELSE_3	IF_14	CALL_12
0x40058ac	      0x488b442408	                mov rax, qword [rsp + 8]	      3308	quickfix.c	FUNCTION_49	ELSE_3	IF_15
0x40058b1	    0x483b05000000	            cmp rax, qword [0x040058b8] 	      3308	quickfix.c	FUNCTION_49	ELSE_3	IF_15
0x40058b8	    0x488b05000000	            mov rax, qword [0x040058bf] 	      3308	quickfix.c	FUNCTION_49	ELSE_3	IF_15
0x40058bf	     0xf848b020000	                            je 0x4005b50	      3308	quickfix.c	FUNCTION_49	ELSE_3	IF_15
0x40058c5	    0xc78048020000	              mov dword [rax + 0x248], 1	      3310	quickfix.c	FUNCTION_49	ELSE_3
0x40058cf	          0x4c89f7	                            mov rdi, r14	      3311	quickfix.c	FUNCTION_49	ELSE_3	IF_16	CALL_20
0x40058d2	      0xe800000000	                          call 0x40058d7	      3311	quickfix.c	FUNCTION_49	ELSE_3	IF_16	CALL_20
0x40058d7	            0x85c0	                           test eax, eax	      3311	quickfix.c	FUNCTION_49	ELSE_3	IF_16	CALL_20
0x40058d9	            0x7407	                            je 0x40058e2	      3311	quickfix.c	FUNCTION_49	ELSE_3	IF_16	CALL_20
0x40058db	    0x4c8935000000	            mov qword [0x040058e2], r14 	      3312	quickfix.c	FUNCTION_49	ELSE_3	IF_16
0x40058e2	        0x48634308	            movsxd rax, dword [rbx + 8] 	      3544	quickfix.c	FUNCTION_59	IF_1
0x40058e6	    0x488d14c50000	                        lea rdx, [rax*8]	      3544	quickfix.c	FUNCTION_59	IF_1
0x40058ee	        0x48c1e007	                              shl rax, 7	      3544	quickfix.c	FUNCTION_59	IF_1
0x40058f2	          0x4829d0	                            sub rax, rdx	      3544	quickfix.c	FUNCTION_59	IF_1
0x40058f5	      0x488b740340	      mov rsi, qword [rbx + rax + 0x40] 	      3544	quickfix.c	FUNCTION_59	IF_1
0x40058fa	          0x4885f6	                           test rsi, rsi	      3544	quickfix.c	FUNCTION_59	IF_1
0x40058fd	            0x740a	                            je 0x4005909	      3544	quickfix.c	FUNCTION_59	IF_1
0x40058ff	      0xbf00000000	                              mov edi, 0	      3545	quickfix.c	FUNCTION_59	IF_1	CALL_1
0x4005904	      0xe800000000	                          call 0x4005909	      3545	quickfix.c	FUNCTION_59	IF_1	CALL_1
0x4005909	    0x488b35000000	            mov rsi, qword [0x04005910] 	      3320	quickfix.c	FUNCTION_49	CALL_22
0x4005910	          0x4889df	                            mov rdi, rbx	      3320	quickfix.c	FUNCTION_49	CALL_22
0x4005913	            0x31d2	                            xor edx, edx	      3320	quickfix.c	FUNCTION_49	CALL_22
0x4005915	      0xe886b0ffff	                 call sym.qf_fill_buffer	      3320	quickfix.c	FUNCTION_49	CALL_22
0x400591a	        0x48634308	            movsxd rax, dword [rbx + 8] 	      3322	quickfix.c	FUNCTION_49
0x400591e	    0x488b15000000	            mov rdx, qword [0x04005925] 	      3322	quickfix.c	FUNCTION_49
0x4005925	    0x488d0cc50000	                        lea rcx, [rax*8]	      3322	quickfix.c	FUNCTION_49
0x400592d	        0x48c1e007	                              shl rax, 7	      3322	quickfix.c	FUNCTION_49
0x4005931	          0x4829c8	                            sub rax, rcx	      3322	quickfix.c	FUNCTION_49
0x4005934	      0x4863440334	   movsxd rax, dword [rbx + rax + 0x34] 	      3322	quickfix.c	FUNCTION_49
0x4005939	    0xc74240000000	               mov dword [rdx + 0x40], 0	      3323	quickfix.c	FUNCTION_49
0x4005940	        0x48894238	             mov qword [rdx + 0x38], rax	      3322	quickfix.c	FUNCTION_49
0x4005944	      0xe800000000	                          call 0x4005949	      3324	quickfix.c	FUNCTION_49	CALL_23
0x4005949	        0x4883c418	                           add rsp, 0x18	      3326	quickfix.c	FUNCTION_49
0x400594d	              0x5b	                                 pop rbx	      3326	quickfix.c	FUNCTION_49
0x400594e	              0x5d	                                 pop rbp	      3326	quickfix.c	FUNCTION_49
0x400594f	            0x415c	                                 pop r12	      3326	quickfix.c	FUNCTION_49
0x4005951	            0x415d	                                 pop r13	      3326	quickfix.c	FUNCTION_49
0x4005953	            0x415e	                                 pop r14	      3326	quickfix.c	FUNCTION_49
0x4005955	            0x415f	                                 pop r15	      3326	quickfix.c	FUNCTION_49
0x4005957	      0xe900000000	                           jmp 0x400595c	      3325	quickfix.c	FUNCTION_49	CALL_24
0x400595c	         0xf1f4000	                         nop dword [rax]	      3325	quickfix.c	FUNCTION_49	CALL_24
0x4005960	        0x448b6d48	           mov r13d, dword [rbp + 0x48] 	      3221	quickfix.c	FUNCTION_49	IF_3
0x4005964	      0xe95cfeffff	                           jmp 0x40057c5	      3221	quickfix.c	FUNCTION_49	IF_3
0x4005969	     0xf1f80000000	                         nop dword [rax]	      3221	quickfix.c	FUNCTION_49	IF_3
0x4005970	    0x448b05000000	            mov r8d, dword [0x04005977] 	      3259	quickfix.c	FUNCTION_49	ELSE_3	IF_9
0x4005977	          0x4585c0	                           test r8d, r8d	      3259	quickfix.c	FUNCTION_49	ELSE_3	IF_9
0x400597a	     0xf84f0000000	                            je 0x4005a70	      3259	quickfix.c	FUNCTION_49	ELSE_3	IF_9
0x4005980	      0xbe80000000	                           mov esi, 0x80	      3223	quickfix.c	FUNCTION_49	ELSE_1
0x4005985	          0x4489ef	                           mov edi, r13d	      3267	quickfix.c	FUNCTION_49	ELSE_3	IF_11	CALL_10
0x4005988	      0xe800000000	                          call 0x400598d	      3267	quickfix.c	FUNCTION_49	ELSE_3	IF_11	CALL_10
0x400598d	            0x85c0	                           test eax, eax	      3267	quickfix.c	FUNCTION_49	ELSE_3	IF_11	CALL_10
0x400598f	     0xf85a6feffff	                           jne 0x400583b	      3267	quickfix.c	FUNCTION_49	ELSE_3	IF_11	CALL_10
0x4005995	        0x4883c418	                           add rsp, 0x18	      3326	quickfix.c	FUNCTION_49
0x4005999	              0x5b	                                 pop rbx	      3326	quickfix.c	FUNCTION_49
0x400599a	              0x5d	                                 pop rbp	      3326	quickfix.c	FUNCTION_49
0x400599b	            0x415c	                                 pop r12	      3326	quickfix.c	FUNCTION_49
0x400599d	            0x415d	                                 pop r13	      3326	quickfix.c	FUNCTION_49
0x400599f	            0x415e	                                 pop r14	      3326	quickfix.c	FUNCTION_49
0x40059a1	            0x415f	                                 pop r15	      3326	quickfix.c	FUNCTION_49
0x40059a3	              0xc3	                                     ret	      3326	quickfix.c	FUNCTION_49
0x40059a4	         0xf1f4000	                         nop dword [rax]	      3326	quickfix.c	FUNCTION_49
0x40059a8	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      3212	quickfix.c	FUNCTION_49	IF_1
0x40059ad	      0xe800000000	                          call 0x40059b2	      3212	quickfix.c	FUNCTION_49	IF_1
0x40059b2	            0x85c0	                           test eax, eax	      3212	quickfix.c	FUNCTION_49	IF_1
0x40059b4	    0x488b05000000	            mov rax, qword [0x040059bb] 	      3212	quickfix.c	FUNCTION_49	IF_1
0x40059bb	            0x7413	                            je 0x40059d0	      3212	quickfix.c	FUNCTION_49	IF_1
0x40059bd	    0x488b98501900	          mov rbx, qword [rax + 0x1950] 	      3212	quickfix.c	FUNCTION_49	IF_1
0x40059c4	          0x4885db	                           test rbx, rbx	      3212	quickfix.c	FUNCTION_49	IF_1
0x40059c7	     0xf85e5fdffff	                           jne 0x40057b2	      3212	quickfix.c	FUNCTION_49	IF_1
0x40059cd	           0xf1f00	                         nop dword [rax]	      3212	quickfix.c	FUNCTION_49	IF_1
0x40059d0	    0x488b98481900	          mov rbx, qword [rax + 0x1948] 	      3212	quickfix.c	FUNCTION_49	IF_1
0x40059d7	          0x4885db	                           test rbx, rbx	      3213	quickfix.c	FUNCTION_49	IF_1	IF_2
0x40059da	     0xf85d2fdffff	                           jne 0x40057b2	      3213	quickfix.c	FUNCTION_49	IF_1	IF_2
0x40059e0	            0x31ff	                            xor edi, edi	      3215	quickfix.c	FUNCTION_49	IF_1	IF_2	CALL_2
0x40059e2	      0xba05000000	                              mov edx, 5	      3215	quickfix.c	FUNCTION_49	IF_1	IF_2	CALL_2
0x40059e7	      0xbe00000000	                              mov esi, 0	      3215	quickfix.c	FUNCTION_49	IF_1	IF_2	CALL_2
0x40059ec	      0xe800000000	                          call 0x40059f1	      3215	quickfix.c	FUNCTION_49	IF_1	IF_2	CALL_2
0x40059f1	        0x4883c418	                           add rsp, 0x18	      3326	quickfix.c	FUNCTION_49
0x40059f5	          0x4889c7	                            mov rdi, rax	      3215	quickfix.c	FUNCTION_49	IF_1	IF_2	CALL_2
0x40059f8	              0x5b	                                 pop rbx	      3326	quickfix.c	FUNCTION_49
0x40059f9	              0x5d	                                 pop rbp	      3326	quickfix.c	FUNCTION_49
0x40059fa	            0x415c	                                 pop r12	      3326	quickfix.c	FUNCTION_49
0x40059fc	            0x415d	                                 pop r13	      3326	quickfix.c	FUNCTION_49
0x40059fe	            0x415e	                                 pop r14	      3326	quickfix.c	FUNCTION_49
0x4005a00	            0x415f	                                 pop r15	      3326	quickfix.c	FUNCTION_49
0x4005a02	      0xe900000000	                           jmp 0x4005a07	      3215	quickfix.c	FUNCTION_49	IF_1	IF_2	CALL_2
0x4005a07	    0x660f1f840000	                    nop word [rax + rax]	      3215	quickfix.c	FUNCTION_49	IF_1	IF_2	CALL_2
0x4005a10	          0x4889c7	                            mov rdi, rax	      3237	quickfix.c	FUNCTION_49	IF_4	CALL_5
0x4005a13	      0x4889442408	                mov qword [rsp + 8], rax	      3237	quickfix.c	FUNCTION_49	IF_4	CALL_5
0x4005a18	      0xe800000000	                          call 0x4005a1d	      3237	quickfix.c	FUNCTION_49	IF_4	CALL_5
0x4005a1d	        0x448b4d38	            mov r9d, dword [rbp + 0x38] 	      3238	quickfix.c	FUNCTION_49	IF_4	IF_5
0x4005a21	          0x4585c9	                           test r9d, r9d	      3238	quickfix.c	FUNCTION_49	IF_4	IF_5
0x4005a24	     0xf84b8feffff	                            je 0x40058e2	      3238	quickfix.c	FUNCTION_49	IF_4	IF_5
0x4005a2a	    0xf60500000000	               test byte [0x04005a31], 2	      3240	quickfix.c	FUNCTION_49	IF_4	IF_5	IF_6
0x4005a31	      0x488b442408	                mov rax, qword [rsp + 8]	      3240	quickfix.c	FUNCTION_49	IF_4	IF_5	IF_6
0x4005a36	            0x7450	                            je 0x4005a88	      3240	quickfix.c	FUNCTION_49	IF_4	IF_5	IF_6
0x4005a38	    0x443ba8ac0000	           cmp r13d, dword [rax + 0xac] 	      3242	quickfix.c	FUNCTION_49	IF_4	IF_5	IF_6	IF_7
0x4005a3f	     0xf849dfeffff	                            je 0x40058e2	      3242	quickfix.c	FUNCTION_49	IF_4	IF_5	IF_6	IF_7
0x4005a45	          0x4489ef	                           mov edi, r13d	      3243	quickfix.c	FUNCTION_49	IF_4	IF_5	IF_6	CALL_6
0x4005a48	      0xe800000000	                          call 0x4005a4d	      3243	quickfix.c	FUNCTION_49	IF_4	IF_5	IF_6	CALL_6
0x4005a4d	      0xe990feffff	                           jmp 0x40058e2	      3243	quickfix.c	FUNCTION_49	IF_4	IF_5	IF_6	CALL_6
0x4005a52	    0x660f1f440000	                    nop word [rax + rax]	      3243	quickfix.c	FUNCTION_49	IF_4	IF_5	IF_6	CALL_6
0x4005a58	    0x498b96481900	          mov rdx, qword [r14 + 0x1948] 	      3277	quickfix.c	FUNCTION_49	ELSE_3	IF_12
0x4005a5f	    0x488990501900	          mov qword [rax + 0x1950], rdx 	      3277	quickfix.c	FUNCTION_49	ELSE_3	IF_12
0x4005a66	          0x830201	                      add dword [rdx], 1	      3278	quickfix.c	FUNCTION_49	ELSE_3	IF_12
0x4005a69	      0xe903feffff	                           jmp 0x4005871	      3278	quickfix.c	FUNCTION_49	ELSE_3	IF_12
0x4005a6e	            0x6690	                                     nop	      3278	quickfix.c	FUNCTION_49	ELSE_3	IF_12
0x4005a70	    0x488b3d000000	            mov rdi, qword [0x04005a77] 	      3262	quickfix.c	FUNCTION_49	ELSE_3	CALL_9
0x4005a77	      0xe800000000	                          call 0x4005a7c	      3262	quickfix.c	FUNCTION_49	ELSE_3	CALL_9
0x4005a7c	      0xe997fdffff	                           jmp 0x4005818	      3262	quickfix.c	FUNCTION_49	ELSE_3	CALL_9
0x4005a81	     0xf1f80000000	                         nop dword [rax]	      3262	quickfix.c	FUNCTION_49	ELSE_3	CALL_9
0x4005a88	    0x443ba8a00000	           cmp r13d, dword [rax + 0xa0] 	      3245	quickfix.c	FUNCTION_49	IF_4	IF_5	ELSE_2	IF_8
0x4005a8f	     0xf844dfeffff	                            je 0x40058e2	      3245	quickfix.c	FUNCTION_49	IF_4	IF_5	ELSE_2	IF_8
0x4005a95	          0x4489ef	                           mov edi, r13d	      3246	quickfix.c	FUNCTION_49	IF_4	IF_5	ELSE_2	IF_8
0x4005a98	      0xe800000000	                          call 0x4005a9d	      3246	quickfix.c	FUNCTION_49	IF_4	IF_5	ELSE_2	IF_8
0x4005a9d	      0xe940feffff	                           jmp 0x40058e2	      3246	quickfix.c	FUNCTION_49	IF_4	IF_5	ELSE_2	IF_8
0x4005aa2	    0x660f1f440000	                    nop word [rax + rax]	      3246	quickfix.c	FUNCTION_49	IF_4	IF_5	ELSE_2	IF_8
0x4005aa8	        0x4883ec08	                              sub rsp, 8	      3290	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_13
0x4005aac	    0x41b901000000	                              mov r9d, 1	      3290	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_13
0x4005ab2	    0x41b801000000	                              mov r8d, 1	      3290	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_13
0x4005ab8	            0x4154	                                push r12	      3290	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_13
0x4005aba	            0x31c9	                            xor ecx, ecx	      3290	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_13
0x4005abc	            0x31d2	                            xor edx, edx	      3290	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_13
0x4005abe	            0x31f6	                            xor esi, esi	      3290	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_13
0x4005ac0	            0x31ff	                            xor edi, edi	      3290	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_13
0x4005ac2	      0xe800000000	                          call 0x4005ac7	      3290	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_13
0x4005ac7	      0xb904000000	                              mov ecx, 4	      3292	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_14
0x4005acc	            0x31d2	                            xor edx, edx	      3292	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_14
0x4005ace	            0x31f6	                            xor esi, esi	      3292	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_14
0x4005ad0	      0xbf00000000	                              mov edi, 0	      3292	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_14
0x4005ad5	      0xe800000000	                          call 0x4005ada	      3292	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_14
0x4005ada	      0xb904000000	                              mov ecx, 4	      3293	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_15
0x4005adf	      0xba00000000	                              mov edx, 0	      3293	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_15
0x4005ae4	            0x31f6	                            xor esi, esi	      3293	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_15
0x4005ae6	      0xbf00000000	                              mov edi, 0	      3293	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_15
0x4005aeb	      0xe800000000	                          call 0x4005af0	      3293	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_15
0x4005af0	      0xb904000000	                              mov ecx, 4	      3295	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_16
0x4005af5	      0xba00000000	                              mov edx, 0	      3295	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_16
0x4005afa	            0x31f6	                            xor esi, esi	      3295	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_16
0x4005afc	      0xbf00000000	                              mov edi, 0	      3295	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_16
0x4005b01	      0xe800000000	                          call 0x4005b06	      3295	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_16
0x4005b06	    0x488b05000000	            mov rax, qword [0x04005b0d] 	      3296	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_17
0x4005b0d	      0xba00000000	                              mov edx, 0	      3301	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_18
0x4005b12	      0xb904000000	                              mov ecx, 4	      3301	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_18
0x4005b17	            0x31f6	                            xor esi, esi	      3301	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_18
0x4005b19	      0xbf00000000	                              mov edi, 0	      3301	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_18
0x4005b1e	    0xc78088020000	              mov dword [rax + 0x288], 0	      3296	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_17
0x4005b28	    0xc780b0020000	              mov dword [rax + 0x2b0], 0	      3296	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_17
0x4005b32	    0xc780c0010000	              mov dword [rax + 0x1c0], 0	      3298	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4
0x4005b3c	      0xe800000000	                          call 0x4005b41	      3301	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_18
0x4005b41	              0x58	                                 pop rax	      3301	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_18
0x4005b42	              0x5a	                                 pop rdx	      3301	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_18
0x4005b43	      0xe964fdffff	                           jmp 0x40058ac	      3301	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_18
0x4005b48	     0xf1f84000000	                   nop dword [rax + rax]	      3301	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_18
0x4005b50	    0x486390ac0000	         movsxd rdx, dword [rax + 0xac] 	      3308	quickfix.c	FUNCTION_49	ELSE_3	IF_15
0x4005b57	    0x483b15000000	            cmp rdx, qword [0x04005b5e] 	      3308	quickfix.c	FUNCTION_49	ELSE_3	IF_15
0x4005b5e	     0xf8561fdffff	                           jne 0x40058c5	      3308	quickfix.c	FUNCTION_49	ELSE_3	IF_15
0x4005b64	          0x4489ef	                           mov edi, r13d	      3309	quickfix.c	FUNCTION_49	ELSE_3	CALL_19
0x4005b67	      0xe800000000	                          call 0x4005b6c	      3309	quickfix.c	FUNCTION_49	ELSE_3	CALL_19
0x4005b6c	    0x488b05000000	            mov rax, qword [0x04005b73] 	      3309	quickfix.c	FUNCTION_49	ELSE_3	CALL_19
0x4005b73	      0xe94dfdffff	                           jmp 0x40058c5	      3309	quickfix.c	FUNCTION_49	ELSE_3	CALL_19
qf_update_win_titlevar	CALL,2:ELSE,0:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,1:functions,0	23
0x4001270	              0x55	                                push rbp	      3485	quickfix.c	FUNCTION_57
0x4001271	              0x53	                                push rbx	      3485	quickfix.c	FUNCTION_57
0x4001272	          0x4889fb	                            mov rbx, rdi	      3485	quickfix.c	FUNCTION_57
0x4001275	        0x4883ec08	                              sub rsp, 8	      3485	quickfix.c	FUNCTION_57
0x4001279	      0xe882ffffff	                    call sym.qf_find_win	      3489	quickfix.c	FUNCTION_57	IF_1	CALL_1
0x400127e	          0x4885c0	                           test rax, rax	      3489	quickfix.c	FUNCTION_57	IF_1	CALL_1
0x4001281	            0x743c	                            je 0x40012bf	      3489	quickfix.c	FUNCTION_57	IF_1	CALL_1
0x4001283	    0x488b2d000000	            mov rbp, qword [0x0400128a] 	      3491	quickfix.c	FUNCTION_57	IF_1
0x400128a	    0x488905000000	            mov qword [0x04001291], rax 	      3492	quickfix.c	FUNCTION_57	IF_1
0x4001291	        0x48634308	            movsxd rax, dword [rbx + 8] 	      3544	quickfix.c	FUNCTION_59	IF_1
0x4001295	    0x488d14c50000	                        lea rdx, [rax*8]	      3544	quickfix.c	FUNCTION_59	IF_1
0x400129d	        0x48c1e007	                              shl rax, 7	      3544	quickfix.c	FUNCTION_59	IF_1
0x40012a1	          0x4829d0	                            sub rax, rdx	      3544	quickfix.c	FUNCTION_59	IF_1
0x40012a4	      0x488b740340	      mov rsi, qword [rbx + rax + 0x40] 	      3544	quickfix.c	FUNCTION_59	IF_1
0x40012a9	          0x4885f6	                           test rsi, rsi	      3544	quickfix.c	FUNCTION_59	IF_1
0x40012ac	            0x740a	                            je 0x40012b8	      3544	quickfix.c	FUNCTION_59	IF_1
0x40012ae	      0xbf00000000	                              mov edi, 0	      3545	quickfix.c	FUNCTION_59	IF_1	CALL_1
0x40012b3	      0xe800000000	                          call 0x40012b8	      3545	quickfix.c	FUNCTION_59	IF_1	CALL_1
0x40012b8	    0x48892d000000	            mov qword [0x040012bf], rbp 	      3494	quickfix.c	FUNCTION_57	IF_1
0x40012bf	        0x4883c408	                              add rsp, 8	      3496	quickfix.c	FUNCTION_57
0x40012c3	              0x5b	                                 pop rbx	      3496	quickfix.c	FUNCTION_57
0x40012c4	              0x5d	                                 pop rbp	      3496	quickfix.c	FUNCTION_57
0x40012c5	              0xc3	                                     ret	      3496	quickfix.c	FUNCTION_57
qf_new_list	CALL,4:ELSE,1:DO,0:WHILE,1:FOR,1:SWITCH,0:IF,1:functions,0	97
0x40005c0	              0x55	                                push rbp	      1383	quickfix.c	FUNCTION_14
0x40005c1	              0x53	                                push rbx	      1383	quickfix.c	FUNCTION_14
0x40005c2	          0x4889f3	                            mov rbx, rsi	      1383	quickfix.c	FUNCTION_14
0x40005c5	          0x4889fd	                            mov rbp, rdi	      1383	quickfix.c	FUNCTION_14
0x40005c8	        0x4883ec08	                              sub rsp, 8	      1383	quickfix.c	FUNCTION_14
0x40005cc	        0x48637704	            movsxd rsi, dword [rdi + 4] 	      1391	quickfix.c	FUNCTION_14	WHILE_1
0x40005d0	          0x8b4708	                mov eax, dword [rdi + 8]	      1391	quickfix.c	FUNCTION_14	WHILE_1
0x40005d3	          0x83c001	                              add eax, 1	      1391	quickfix.c	FUNCTION_14	WHILE_1
0x40005d6	            0x39c6	                            cmp esi, eax	      1391	quickfix.c	FUNCTION_14	WHILE_1
0x40005d8	            0x7e22	                           jle 0x40005fc	      1391	quickfix.c	FUNCTION_14	WHILE_1
0x40005da	    0x660f1f440000	                    nop word [rax + rax]	      1391	quickfix.c	FUNCTION_14	WHILE_1
0x40005e0	          0x83ee01	                              sub esi, 1	      1392	quickfix.c	FUNCTION_14	CALL_1
0x40005e3	          0x4889ef	                            mov rdi, rbp	      1392	quickfix.c	FUNCTION_14	CALL_1
0x40005e6	          0x897504	                mov dword [rbp + 4], esi	      1392	quickfix.c	FUNCTION_14	CALL_1
0x40005e9	      0xe852fdffff	                        call sym.qf_free	      1392	quickfix.c	FUNCTION_14	CALL_1
0x40005ee	        0x48637504	            movsxd rsi, dword [rbp + 4] 	      1391	quickfix.c	FUNCTION_14	WHILE_1
0x40005f2	          0x8b4508	                mov eax, dword [rbp + 8]	      1391	quickfix.c	FUNCTION_14	WHILE_1
0x40005f5	          0x83c001	                              add eax, 1	      1391	quickfix.c	FUNCTION_14	WHILE_1
0x40005f8	            0x39c6	                            cmp esi, eax	      1391	quickfix.c	FUNCTION_14	WHILE_1
0x40005fa	            0x7fe4	                            jg 0x40005e0	      1391	quickfix.c	FUNCTION_14	WHILE_1
0x40005fc	          0x83fe0a	                            cmp esi, 0xa	      1398	quickfix.c	FUNCTION_14	IF_1
0x40005ff	            0x747f	                            je 0x4000680	      1398	quickfix.c	FUNCTION_14	IF_1
0x4000601	          0x8d4601	                      lea eax, [rsi + 1]	      1406	quickfix.c	FUNCTION_14	ELSE_1
0x4000604	          0x897508	                mov dword [rbp + 8], esi	      1406	quickfix.c	FUNCTION_14	ELSE_1
0x4000607	          0x894504	                mov dword [rbp + 4], eax	      1406	quickfix.c	FUNCTION_14	ELSE_1
0x400060a	    0x488d04f50000	                        lea rax, [rsi*8]	        90	string3.h	FUNCTION_118	CALL_6
0x4000612	        0x48c1e607	                              shl rsi, 7	        90	string3.h	FUNCTION_118	CALL_6
0x4000616	          0x4889da	                            mov rdx, rbx	      1408	quickfix.c	FUNCTION_14	CALL_4
0x4000619	          0x4829c6	                            sub rsi, rax	        90	string3.h	FUNCTION_118	CALL_6
0x400061c	      0x488d443510	            lea rax, [rbp + rsi + 0x10] 	        90	string3.h	FUNCTION_118	CALL_6
0x4000621	        0x488d7808	                      lea rdi, [rax + 8]	        90	string3.h	FUNCTION_118	CALL_6
0x4000625	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_118	CALL_6
0x400062c	    0x48c740700000	               mov qword [rax + 0x70], 0	        90	string3.h	FUNCTION_118	CALL_6
0x4000634	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_118	CALL_6
0x4000638	          0x4829f8	                            sub rax, rdi	        90	string3.h	FUNCTION_118	CALL_6
0x400063b	          0x8d4878	                   lea ecx, [rax + 0x78]	        90	string3.h	FUNCTION_118	CALL_6
0x400063e	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_118	CALL_6
0x4000640	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_118	CALL_6
0x4000643	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_118	CALL_6
0x4000646	          0x4889ef	                            mov rdi, rbp	      1408	quickfix.c	FUNCTION_14	CALL_4
0x4000649	          0x8b7508	                mov esi, dword [rbp + 8]	      1408	quickfix.c	FUNCTION_14	CALL_4
0x400064c	      0xe8bffeffff	                 call sym.qf_store_title	      1408	quickfix.c	FUNCTION_14	CALL_4
0x4000651	    0x8b0500000000	            mov eax, dword [0x04000657] 	      1409	quickfix.c	FUNCTION_14
0x4000657	          0x8d5001	                      lea edx, [rax + 1]	      1409	quickfix.c	FUNCTION_14
0x400065a	        0x48634508	            movsxd rax, dword [rbp + 8] 	      1409	quickfix.c	FUNCTION_14
0x400065e	    0x891500000000	            mov dword [0x04000664], edx 	      1409	quickfix.c	FUNCTION_14
0x4000664	    0x488d0cc50000	                        lea rcx, [rax*8]	      1409	quickfix.c	FUNCTION_14
0x400066c	        0x48c1e007	                              shl rax, 7	      1409	quickfix.c	FUNCTION_14
0x4000670	          0x4829c8	                            sub rax, rcx	      1409	quickfix.c	FUNCTION_14
0x4000673	        0x89540510	      mov dword [rbp + rax + 0x10], edx 	      1409	quickfix.c	FUNCTION_14
0x4000677	        0x4883c408	                              add rsp, 8	      1410	quickfix.c	FUNCTION_14
0x400067b	              0x5b	                                 pop rbx	      1410	quickfix.c	FUNCTION_14
0x400067c	              0x5d	                                 pop rbp	      1410	quickfix.c	FUNCTION_14
0x400067d	              0xc3	                                     ret	      1410	quickfix.c	FUNCTION_14
0x400067e	            0x6690	                                     nop	      1410	quickfix.c	FUNCTION_14
0x4000680	            0x31f6	                            xor esi, esi	      1400	quickfix.c	FUNCTION_14	IF_1	CALL_2
0x4000682	          0x4889ef	                            mov rdi, rbp	      1400	quickfix.c	FUNCTION_14	IF_1	CALL_2
0x4000685	      0xe8b6fcffff	                        call sym.qf_free	      1400	quickfix.c	FUNCTION_14	IF_1	CALL_2
0x400068a	    0x488d85880000	                   lea rax, [rbp + 0x88]	      1400	quickfix.c	FUNCTION_14	IF_1	CALL_2
0x4000691	    0x488d8dc00400	                  lea rcx, [rbp + 0x4c0]	      1400	quickfix.c	FUNCTION_14	IF_1	CALL_2
0x4000698	     0xf1f84000000	                   nop dword [rax + rax]	      1400	quickfix.c	FUNCTION_14	IF_1	CALL_2
0x40006a0	          0x488b10	                    mov rdx, qword [rax]	      1402	quickfix.c	FUNCTION_14	IF_1	FOR_1
0x40006a3	        0x4883c078	                           add rax, 0x78	      1402	quickfix.c	FUNCTION_14	IF_1	FOR_1
0x40006a7	    0x48899010ffff	             mov qword [rax - 0xf0], rdx	      1402	quickfix.c	FUNCTION_14	IF_1	FOR_1
0x40006ae	        0x488b5090	             mov rdx, qword [rax - 0x70]	      1402	quickfix.c	FUNCTION_14	IF_1	FOR_1
0x40006b2	    0x48899018ffff	             mov qword [rax - 0xe8], rdx	      1402	quickfix.c	FUNCTION_14	IF_1	FOR_1
0x40006b9	        0x488b5098	             mov rdx, qword [rax - 0x68]	      1402	quickfix.c	FUNCTION_14	IF_1	FOR_1
0x40006bd	    0x48899020ffff	             mov qword [rax - 0xe0], rdx	      1402	quickfix.c	FUNCTION_14	IF_1	FOR_1
0x40006c4	        0x488b50a0	             mov rdx, qword [rax - 0x60]	      1402	quickfix.c	FUNCTION_14	IF_1	FOR_1
0x40006c8	    0x48899028ffff	             mov qword [rax - 0xd8], rdx	      1402	quickfix.c	FUNCTION_14	IF_1	FOR_1
0x40006cf	        0x488b50a8	             mov rdx, qword [rax - 0x58]	      1402	quickfix.c	FUNCTION_14	IF_1	FOR_1
0x40006d3	    0x48899030ffff	             mov qword [rax - 0xd0], rdx	      1402	quickfix.c	FUNCTION_14	IF_1	FOR_1
0x40006da	        0x488b50b0	             mov rdx, qword [rax - 0x50]	      1402	quickfix.c	FUNCTION_14	IF_1	FOR_1
0x40006de	    0x48899038ffff	             mov qword [rax - 0xc8], rdx	      1402	quickfix.c	FUNCTION_14	IF_1	FOR_1
0x40006e5	        0x488b50b8	             mov rdx, qword [rax - 0x48]	      1402	quickfix.c	FUNCTION_14	IF_1	FOR_1
0x40006e9	    0x48899040ffff	             mov qword [rax - 0xc0], rdx	      1402	quickfix.c	FUNCTION_14	IF_1	FOR_1
0x40006f0	        0x488b50c0	             mov rdx, qword [rax - 0x40]	      1402	quickfix.c	FUNCTION_14	IF_1	FOR_1
0x40006f4	    0x48899048ffff	             mov qword [rax - 0xb8], rdx	      1402	quickfix.c	FUNCTION_14	IF_1	FOR_1
0x40006fb	        0x488b50c8	             mov rdx, qword [rax - 0x38]	      1402	quickfix.c	FUNCTION_14	IF_1	FOR_1
0x40006ff	    0x48899050ffff	             mov qword [rax - 0xb0], rdx	      1402	quickfix.c	FUNCTION_14	IF_1	FOR_1
0x4000706	        0x488b50d0	             mov rdx, qword [rax - 0x30]	      1402	quickfix.c	FUNCTION_14	IF_1	FOR_1
0x400070a	    0x48899058ffff	             mov qword [rax - 0xa8], rdx	      1402	quickfix.c	FUNCTION_14	IF_1	FOR_1
0x4000711	        0x488b50d8	             mov rdx, qword [rax - 0x28]	      1402	quickfix.c	FUNCTION_14	IF_1	FOR_1
0x4000715	    0x48899060ffff	             mov qword [rax - 0xa0], rdx	      1402	quickfix.c	FUNCTION_14	IF_1	FOR_1
0x400071c	        0x488b50e0	             mov rdx, qword [rax - 0x20]	      1402	quickfix.c	FUNCTION_14	IF_1	FOR_1
0x4000720	    0x48899068ffff	             mov qword [rax - 0x98], rdx	      1402	quickfix.c	FUNCTION_14	IF_1	FOR_1
0x4000727	        0x488b50e8	             mov rdx, qword [rax - 0x18]	      1402	quickfix.c	FUNCTION_14	IF_1	FOR_1
0x400072b	    0x48899070ffff	             mov qword [rax - 0x90], rdx	      1402	quickfix.c	FUNCTION_14	IF_1	FOR_1
0x4000732	        0x488b50f0	             mov rdx, qword [rax - 0x10]	      1402	quickfix.c	FUNCTION_14	IF_1	FOR_1
0x4000736	    0x48899078ffff	             mov qword [rax - 0x88], rdx	      1402	quickfix.c	FUNCTION_14	IF_1	FOR_1
0x400073d	        0x488b50f8	                mov rdx, qword [rax - 8]	      1402	quickfix.c	FUNCTION_14	IF_1	FOR_1
0x4000741	        0x48895080	             mov qword [rax - 0x80], rdx	      1402	quickfix.c	FUNCTION_14	IF_1	FOR_1
0x4000745	          0x4839c8	                            cmp rax, rcx	      1401	quickfix.c	FUNCTION_14	IF_1	FOR_1
0x4000748	     0xf8552ffffff	                           jne 0x40006a0	      1401	quickfix.c	FUNCTION_14	IF_1	FOR_1
0x400074e	    0xc74508090000	                  mov dword [rbp + 8], 9	      1403	quickfix.c	FUNCTION_14	IF_1
0x4000755	      0xbe09000000	                              mov esi, 9	      1403	quickfix.c	FUNCTION_14	IF_1
0x400075a	      0xe9abfeffff	                           jmp 0x400060a	      1403	quickfix.c	FUNCTION_14	IF_1
qf_jump	CALL,16:ELSE,3:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,22:functions,0	886
0x4003f40	            0x4157	                                push r15	      2559	quickfix.c	FUNCTION_37
0x4003f42	            0x4156	                                push r14	      2559	quickfix.c	FUNCTION_37
0x4003f44	      0xb800000000	                              mov eax, 0	      2577	quickfix.c	FUNCTION_37	IF_1
0x4003f49	            0x4155	                                push r13	      2559	quickfix.c	FUNCTION_37
0x4003f4b	            0x4154	                                push r12	      2559	quickfix.c	FUNCTION_37
0x4003f4d	          0x4989fd	                            mov r13, rdi	      2559	quickfix.c	FUNCTION_37
0x4003f50	              0x55	                                push rbp	      2559	quickfix.c	FUNCTION_37
0x4003f51	              0x53	                                push rbx	      2559	quickfix.c	FUNCTION_37
0x4003f52	        0x4883ec48	                           sub rsp, 0x48	      2559	quickfix.c	FUNCTION_37
0x4003f56	          0x4885ff	                           test rdi, rdi	      2577	quickfix.c	FUNCTION_37	IF_1
0x4003f59	        0x4c0f44e8	                          cmove r13, rax	      2577	quickfix.c	FUNCTION_37	IF_1
0x4003f5d	        0x894c2410	             mov dword [rsp + 0x10], ecx	      2559	quickfix.c	FUNCTION_37
0x4003f61	        0x4d634508	              movsxd r8, dword [r13 + 8]	      2579	quickfix.c	FUNCTION_37	IF_2
0x4003f65	        0x453b4504	                cmp r8d, dword [r13 + 4]	      2579	quickfix.c	FUNCTION_37	IF_2
0x4003f69	     0xf8de9010000	                           jge 0x4004158	      2579	quickfix.c	FUNCTION_37	IF_2
0x4003f6f	    0x4a8d04c50000	                         lea rax, [r8*8]	      2580	quickfix.c	FUNCTION_37	IF_2
0x4003f77	          0x4d89c1	                              mov r9, r8	      2580	quickfix.c	FUNCTION_37	IF_2
0x4003f7a	        0x49c1e107	                               shl r9, 7	      2580	quickfix.c	FUNCTION_37	IF_2
0x4003f7e	          0x4929c1	                             sub r9, rax	      2580	quickfix.c	FUNCTION_37	IF_2
0x4003f81	          0x4d01e9	                             add r9, r13	      2580	quickfix.c	FUNCTION_37	IF_2
0x4003f84	        0x418b7930	              mov edi, dword [r9 + 0x30]	      2580	quickfix.c	FUNCTION_37	IF_2
0x4003f88	            0x85ff	                           test edi, edi	      2580	quickfix.c	FUNCTION_37	IF_2
0x4003f8a	     0xf84c8010000	                            je 0x4004158	      2580	quickfix.c	FUNCTION_37	IF_2
0x4003f90	    0x488b05000000	            mov rax, qword [0x04003f97] 	      2566	quickfix.c	FUNCTION_37
0x4003f97	            0x85f6	                           test esi, esi	      2590	quickfix.c	FUNCTION_37	IF_3
0x4003f99	        0x418b6934	              mov ebp, dword [r9 + 0x34]	      2588	quickfix.c	FUNCTION_37
0x4003f9d	      0x4889442408	                mov qword [rsp + 8], rax	      2566	quickfix.c	FUNCTION_37
0x4003fa2	    0x8b0500000000	            mov eax, dword [0x04003fa8] 	      2567	quickfix.c	FUNCTION_37
0x4003fa8	        0x89442420	             mov dword [rsp + 0x20], eax	      2567	quickfix.c	FUNCTION_37
0x4003fac	        0x498b4128	              mov rax, qword [r9 + 0x28]	      2586	quickfix.c	FUNCTION_37
0x4003fb0	        0x48890424	                    mov qword [rsp], rax	      2586	quickfix.c	FUNCTION_37
0x4003fb4	     0xf8576020000	                           jne 0x4004230	      2590	quickfix.c	FUNCTION_37	IF_3
0x4003fba	            0x85d2	                           test edx, edx	      2600	quickfix.c	FUNCTION_37	ELSE_1	IF_5
0x4003fbc	     0xf85be010000	                           jne 0x4004180	      2600	quickfix.c	FUNCTION_37	ELSE_1	IF_5
0x4003fc2	        0x4c8b2424	                    mov r12, qword [rsp]	      2586	quickfix.c	FUNCTION_37
0x4003fc6	            0x89eb	                            mov ebx, ebp	      2588	quickfix.c	FUNCTION_37
0x4003fc8	     0xf1f84000000	                   nop dword [rax + rax]	      2588	quickfix.c	FUNCTION_37
0x4003fd0	    0x488b05000000	            mov rax, qword [0x04003fd7] 	      2569	quickfix.c	FUNCTION_37
0x4003fd7	            0x89ee	                            mov esi, ebp	      2604	quickfix.c	FUNCTION_37	IF_6	CALL_5
0x4003fd9	          0x4c89ef	                            mov rdi, r13	      2604	quickfix.c	FUNCTION_37	IF_6	CALL_5
0x4003fdc	      0x4889442418	             mov qword [rsp + 0x18], rax	      2569	quickfix.c	FUNCTION_37
0x4003fe1	    0x8b0500000000	            mov eax, dword [0x04003fe7] 	      2572	quickfix.c	FUNCTION_37
0x4003fe7	        0x89442424	             mov dword [rsp + 0x24], eax	      2572	quickfix.c	FUNCTION_37
0x4003feb	    0x4a8d04c50000	                         lea rax, [r8*8]	      2603	quickfix.c	FUNCTION_37
0x4003ff3	        0x49c1e007	                               shl r8, 7	      2603	quickfix.c	FUNCTION_37
0x4003ff7	          0x4929c0	                             sub r8, rax	      2603	quickfix.c	FUNCTION_37
0x4003ffa	      0x43895c0534	        mov dword [r13 + r8 + 0x34], ebx	      2603	quickfix.c	FUNCTION_37
0x4003fff	      0xe8ccd2ffff	              call sym.qf_win_pos_update	      2604	quickfix.c	FUNCTION_37	IF_6	CALL_5
0x4004004	    0x41807c244201	                cmp byte [r12 + 0x42], 1	      2612	quickfix.c	FUNCTION_37	IF_7	CALL_6
0x400400a	        0x89442414	             mov dword [rsp + 0x14], eax	      2604	quickfix.c	FUNCTION_37	IF_6	CALL_5
0x400400e	     0xf840c030000	                            je 0x4004320	      2612	quickfix.c	FUNCTION_37	IF_7	CALL_6
0x4004014	    0x488b3d000000	            mov rdi, qword [0x0400401b] 	      2620	quickfix.c	FUNCTION_37	IF_9	CALL_8
0x400401b	      0xe800000000	                          call 0x4004020	      2620	quickfix.c	FUNCTION_37	IF_9	CALL_8
0x4004020	            0x85c0	                           test eax, eax	      2620	quickfix.c	FUNCTION_37	IF_9	CALL_8
0x4004022	     0xf85e0030000	                           jne 0x4004408	      2620	quickfix.c	FUNCTION_37	IF_9	CALL_8
0x4004028	    0x488b05000000	            mov rax, qword [0x0400402f] 	      2620	quickfix.c	FUNCTION_37	IF_9	CALL_8
0x400402f	          0x4531ff	                          xor r15d, r15d	      2620	quickfix.c	FUNCTION_37	IF_9	CALL_8
0x4004032	      0x418b7c2418	            mov edi, dword [r12 + 0x18] 	      2640	quickfix.c	FUNCTION_37	IF_12
0x4004037	    0x488b15000000	            mov rdx, qword [0x0400403e] 	      2637	quickfix.c	FUNCTION_37
0x400403e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2638	quickfix.c	FUNCTION_37
0x4004042	            0x85ff	                           test edi, edi	      2640	quickfix.c	FUNCTION_37	IF_12
0x4004044	      0x4889542428	             mov qword [rsp + 0x28], rdx	      2637	quickfix.c	FUNCTION_37
0x4004049	      0x4889442430	             mov qword [rsp + 0x30], rax	      2638	quickfix.c	FUNCTION_37
0x400404e	     0xf85dc030000	                           jne 0x4004430	      2640	quickfix.c	FUNCTION_37	IF_12
0x4004054	      0xe800000000	                          call 0x4004059	      2657	quickfix.c	FUNCTION_37	IF_14	CALL_11
0x4004059	      0x498b542430	            mov rdx, qword [r12 + 0x30] 	      2659	quickfix.c	FUNCTION_37	IF_14	CALL_12
0x400405e	          0x4885d2	                           test rdx, rdx	      2448	quickfix.c	FUNCTION_35	IF_1
0x4004061	     0xf8487070000	                            je 0x40047ee	      2448	quickfix.c	FUNCTION_35	IF_1
0x4004067	    0x488b05000000	            mov rax, qword [0x0400406e] 	      2499	quickfix.c	FUNCTION_35	ELSE_3
0x400406e	        0x4883ec08	                              sub rsp, 8	      2501	quickfix.c	FUNCTION_35	ELSE_3	IF_8	CALL_4
0x4004072	          0x4531c9	                            xor r9d, r9d	      2501	quickfix.c	FUNCTION_35	ELSE_3	IF_8	CALL_4
0x4004075	      0xb901000000	                              mov ecx, 1	      2501	quickfix.c	FUNCTION_35	ELSE_3	IF_8	CALL_4
0x400407a	            0x31ff	                            xor edi, edi	      2501	quickfix.c	FUNCTION_35	ELSE_3	IF_8	CALL_4
0x400407c	    0x41b800040000	                          mov r8d, 0x400	      2501	quickfix.c	FUNCTION_35	ELSE_3	IF_8	CALL_4
0x4004082	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      2499	quickfix.c	FUNCTION_35	ELSE_3
0x4004086	        0x448b7040	           mov r14d, dword [rax + 0x40] 	      2499	quickfix.c	FUNCTION_35	ELSE_3
0x400408a	          0x8b6844	            mov ebp, dword [rax + 0x44] 	      2499	quickfix.c	FUNCTION_35	ELSE_3
0x400408d	    0x48c740380000	               mov qword [rax + 0x38], 0	      2500	quickfix.c	FUNCTION_35	ELSE_3
0x4004095	      0x4889742408	                mov qword [rsp + 8], rsi	      2499	quickfix.c	FUNCTION_35	ELSE_3
0x400409a	            0x6a00	                                  push 0	      2501	quickfix.c	FUNCTION_35	ELSE_3	IF_8	CALL_4
0x400409c	      0xbe2f000000	                           mov esi, 0x2f	      2501	quickfix.c	FUNCTION_35	ELSE_3	IF_8	CALL_4
0x40040a1	      0xe800000000	                          call 0x40040a6	      2501	quickfix.c	FUNCTION_35	ELSE_3	IF_8	CALL_4
0x40040a6	            0x85c0	                           test eax, eax	      2501	quickfix.c	FUNCTION_35	ELSE_3	IF_8	CALL_4
0x40040a8	              0x5a	                                 pop rdx	      2501	quickfix.c	FUNCTION_35	ELSE_3	IF_8	CALL_4
0x40040a9	              0x59	                                 pop rcx	      2501	quickfix.c	FUNCTION_35	ELSE_3	IF_8	CALL_4
0x40040aa	            0x7516	                           jne 0x40040c2	      2501	quickfix.c	FUNCTION_35	ELSE_3	IF_8	CALL_4
0x40040ac	    0x488b05000000	            mov rax, qword [0x040040b3] 	      2503	quickfix.c	FUNCTION_35	ELSE_3	IF_8
0x40040b3	        0x488b3424	                    mov rsi, qword [rsp]	      2503	quickfix.c	FUNCTION_35	ELSE_3	IF_8
0x40040b7	        0x44897040	            mov dword [rax + 0x40], r14d	      2503	quickfix.c	FUNCTION_35	ELSE_3	IF_8
0x40040bb	        0x48897038	             mov qword [rax + 0x38], rsi	      2503	quickfix.c	FUNCTION_35	ELSE_3	IF_8
0x40040bf	          0x896844	             mov dword [rax + 0x44], ebp	      2503	quickfix.c	FUNCTION_35	ELSE_3	IF_8
0x40040c2	    0xf60500000000	           test byte [0x040040c9], 0x20 	      2663	quickfix.c	FUNCTION_37	IF_14	IF_16
0x40040c9	            0x740c	                            je 0x40040d7	      2663	quickfix.c	FUNCTION_37	IF_14	IF_16
0x40040cb	        0x8b6c2424	            mov ebp, dword [rsp + 0x24] 	      2663	quickfix.c	FUNCTION_37	IF_14	IF_16
0x40040cf	            0x85ed	                           test ebp, ebp	      2663	quickfix.c	FUNCTION_37	IF_14	IF_16
0x40040d1	     0xf85f0030000	                           jne 0x40044c7	      2663	quickfix.c	FUNCTION_37	IF_14	IF_16
0x40040d7	      0x448b5c2414	           mov r11d, dword [rsp + 0x14] 	      2666	quickfix.c	FUNCTION_37	IF_14	IF_17
0x40040dc	          0x4585db	                         test r11d, r11d	      2666	quickfix.c	FUNCTION_37	IF_14	IF_17
0x40040df	     0xf84da070000	                            je 0x40048bf	      2666	quickfix.c	FUNCTION_37	IF_14	IF_17
0x40040e5	          0x4589fe	                          mov r14d, r15d	      2666	quickfix.c	FUNCTION_37	IF_14	IF_17
0x40040e8	            0x89dd	                            mov ebp, ebx	      2666	quickfix.c	FUNCTION_37	IF_14	IF_17
0x40040ea	        0x4c892424	                    mov qword [rsp], r12	      2666	quickfix.c	FUNCTION_37	IF_14	IF_17
0x40040ee	        0x4183e601	                             and r14d, 1	      2666	quickfix.c	FUNCTION_37	IF_14	IF_17
0x40040f2	    0x488b15000000	            mov rdx, qword [0x040040f9] 	      2666	quickfix.c	FUNCTION_37	IF_14	IF_17
0x40040f9	      0x4839542408	                cmp qword [rsp + 8], rdx	      2666	quickfix.c	FUNCTION_37	IF_14	IF_17
0x40040fe	        0x4d634508	              movsxd r8, dword [r13 + 8]	      2666	quickfix.c	FUNCTION_37	IF_14	IF_17
0x4004102	           0xf95c0	                                setne al	      2666	quickfix.c	FUNCTION_37	IF_14	IF_17
0x4004105	          0x4421f0	                           and eax, r14d	      2666	quickfix.c	FUNCTION_37	IF_14	IF_17
0x4004108	    0x4a8d0cc50000	                         lea rcx, [r8*8]	      2687	quickfix.c	FUNCTION_37	IF_20
0x4004110	        0x488b1c24	                    mov rbx, qword [rsp]	      2687	quickfix.c	FUNCTION_37	IF_20
0x4004114	        0x49c1e007	                               shl r8, 7	      2687	quickfix.c	FUNCTION_37	IF_20
0x4004118	          0x4929c8	                             sub r8, rcx	      2687	quickfix.c	FUNCTION_37	IF_20
0x400411b	          0x4d01c5	                             add r13, r8	      2687	quickfix.c	FUNCTION_37	IF_20
0x400411e	        0x49895d28	             mov qword [r13 + 0x28], rbx	      2687	quickfix.c	FUNCTION_37	IF_20
0x4004122	        0x41896d34	             mov dword [r13 + 0x34], ebp	      2688	quickfix.c	FUNCTION_37	IF_20
0x4004126	            0x84c0	                             test al, al	      2690	quickfix.c	FUNCTION_37	IF_21
0x4004128	     0xf84ec000000	                            je 0x400421a	      2690	quickfix.c	FUNCTION_37	IF_21
0x400412e	    0x483915000000	            cmp qword [0x04004135], rdx 	      2694	quickfix.c	FUNCTION_37	IF_21	IF_22
0x4004135	     0xf84c9000000	                            je 0x4004204	      2694	quickfix.c	FUNCTION_37	IF_21	IF_22
0x400413b	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2700	quickfix.c	FUNCTION_37	IF_21	CALL_16
0x4004140	        0x4883c448	                           add rsp, 0x48	      2702	quickfix.c	FUNCTION_37
0x4004144	              0x5b	                                 pop rbx	      2702	quickfix.c	FUNCTION_37
0x4004145	              0x5d	                                 pop rbp	      2702	quickfix.c	FUNCTION_37
0x4004146	            0x415c	                                 pop r12	      2702	quickfix.c	FUNCTION_37
0x4004148	            0x415d	                                 pop r13	      2702	quickfix.c	FUNCTION_37
0x400414a	            0x415e	                                 pop r14	      2702	quickfix.c	FUNCTION_37
0x400414c	            0x415f	                                 pop r15	      2702	quickfix.c	FUNCTION_37
0x400414e	      0xe900000000	                           jmp 0x4004153	      2700	quickfix.c	FUNCTION_37	IF_21	CALL_16
0x4004153	       0xf1f440000	                   nop dword [rax + rax]	      2700	quickfix.c	FUNCTION_37	IF_21	CALL_16
0x4004158	            0x31ff	                            xor edi, edi	      2582	quickfix.c	FUNCTION_37	IF_2	CALL_2
0x400415a	      0xba05000000	                              mov edx, 5	      2582	quickfix.c	FUNCTION_37	IF_2	CALL_2
0x400415f	      0xbe00000000	                              mov esi, 0	      2582	quickfix.c	FUNCTION_37	IF_2	CALL_2
0x4004164	      0xe800000000	                          call 0x4004169	      2582	quickfix.c	FUNCTION_37	IF_2	CALL_2
0x4004169	        0x4883c448	                           add rsp, 0x48	      2702	quickfix.c	FUNCTION_37
0x400416d	          0x4889c7	                            mov rdi, rax	      2582	quickfix.c	FUNCTION_37	IF_2	CALL_2
0x4004170	              0x5b	                                 pop rbx	      2702	quickfix.c	FUNCTION_37
0x4004171	              0x5d	                                 pop rbp	      2702	quickfix.c	FUNCTION_37
0x4004172	            0x415c	                                 pop r12	      2702	quickfix.c	FUNCTION_37
0x4004174	            0x415d	                                 pop r13	      2702	quickfix.c	FUNCTION_37
0x4004176	            0x415e	                                 pop r14	      2702	quickfix.c	FUNCTION_37
0x4004178	            0x415f	                                 pop r15	      2702	quickfix.c	FUNCTION_37
0x400417a	      0xe900000000	                           jmp 0x400417f	      2582	quickfix.c	FUNCTION_37	IF_2	CALL_2
0x400417f	              0x90	                                     nop	      2582	quickfix.c	FUNCTION_37	IF_2	CALL_2
0x4004180	          0x83fd01	                              cmp ebp, 1	      2125	quickfix.c	FUNCTION_31	WHILE_1
0x4004183	     0xf8eef080000	                           jle 0x4004a78	      2125	quickfix.c	FUNCTION_31	WHILE_1
0x4004189	            0x39d5	                            cmp ebp, edx	      2125	quickfix.c	FUNCTION_31	WHILE_1
0x400418b	     0xf8ee7080000	                           jle 0x4004a78	      2125	quickfix.c	FUNCTION_31	WHILE_1
0x4004191	        0x488b0424	                    mov rax, qword [rsp]	      2125	quickfix.c	FUNCTION_31	WHILE_1
0x4004195	            0x89eb	                            mov ebx, ebp	      2125	quickfix.c	FUNCTION_31	WHILE_1
0x4004197	        0x488b4808	                mov rcx, qword [rax + 8]	      2125	quickfix.c	FUNCTION_31	WHILE_1
0x400419b	          0x4885c9	                           test rcx, rcx	      2125	quickfix.c	FUNCTION_31	WHILE_1
0x400419e	            0x750b	                           jne 0x40041ab	      2125	quickfix.c	FUNCTION_31	WHILE_1
0x40041a0	      0xe9de080000	                           jmp 0x4004a83	      2125	quickfix.c	FUNCTION_31	WHILE_1
0x40041a5	           0xf1f00	                         nop dword [rax]	      2125	quickfix.c	FUNCTION_31	WHILE_1
0x40041a8	          0x4889c1	                            mov rcx, rax	      2125	quickfix.c	FUNCTION_31	WHILE_1
0x40041ab	          0x83eb01	                              sub ebx, 1	      2127	quickfix.c	FUNCTION_31	WHILE_1
0x40041ae	            0x39da	                            cmp edx, ebx	      2125	quickfix.c	FUNCTION_31	WHILE_1
0x40041b0	            0x7d0e	                           jge 0x40041c0	      2125	quickfix.c	FUNCTION_31	WHILE_1
0x40041b2	          0x83fb01	                              cmp ebx, 1	      2125	quickfix.c	FUNCTION_31	WHILE_1
0x40041b5	            0x7e09	                           jle 0x40041c0	      2125	quickfix.c	FUNCTION_31	WHILE_1
0x40041b7	        0x488b4108	                mov rax, qword [rcx + 8]	      2125	quickfix.c	FUNCTION_31	WHILE_1
0x40041bb	          0x4885c0	                           test rax, rax	      2125	quickfix.c	FUNCTION_31	WHILE_1
0x40041be	            0x75e8	                           jne 0x40041a8	      2125	quickfix.c	FUNCTION_31	WHILE_1
0x40041c0	            0x39da	                            cmp edx, ebx	      2131	quickfix.c	FUNCTION_31	WHILE_2
0x40041c2	     0xf8e64080000	                           jle 0x4004a2c	      2131	quickfix.c	FUNCTION_31	WHILE_2
0x40041c8	            0x39df	                            cmp edi, ebx	      2131	quickfix.c	FUNCTION_31	WHILE_2
0x40041ca	     0xf8e5c080000	                           jle 0x4004a2c	      2131	quickfix.c	FUNCTION_31	WHILE_2
0x40041d0	          0x4c8b21	                    mov r12, qword [rcx]	      2133	quickfix.c	FUNCTION_31	WHILE_2
0x40041d3	          0x4d85e4	                           test r12, r12	      2132	quickfix.c	FUNCTION_31	WHILE_2
0x40041d6	            0x750b	                           jne 0x40041e3	      2132	quickfix.c	FUNCTION_31	WHILE_2
0x40041d8	      0xe94f080000	                           jmp 0x4004a2c	      2132	quickfix.c	FUNCTION_31	WHILE_2
0x40041dd	           0xf1f00	                         nop dword [rax]	      2132	quickfix.c	FUNCTION_31	WHILE_2
0x40041e0	          0x4989c4	                            mov r12, rax	      2132	quickfix.c	FUNCTION_31	WHILE_2
0x40041e3	          0x83c301	                              add ebx, 1	      2135	quickfix.c	FUNCTION_31	WHILE_2
0x40041e6	            0x39da	                            cmp edx, ebx	      2131	quickfix.c	FUNCTION_31	WHILE_2
0x40041e8	     0xf8ee2fdffff	                           jle 0x4003fd0	      2131	quickfix.c	FUNCTION_31	WHILE_2
0x40041ee	            0x39df	                            cmp edi, ebx	      2131	quickfix.c	FUNCTION_31	WHILE_2
0x40041f0	     0xf8edafdffff	                           jle 0x4003fd0	      2131	quickfix.c	FUNCTION_31	WHILE_2
0x40041f6	        0x498b0424	                    mov rax, qword [r12]	      2133	quickfix.c	FUNCTION_31	WHILE_2
0x40041fa	          0x4885c0	                           test rax, rax	      2132	quickfix.c	FUNCTION_31	WHILE_2
0x40041fd	            0x75e1	                           jne 0x40041e0	      2132	quickfix.c	FUNCTION_31	WHILE_2
0x40041ff	      0xe9ccfdffff	                           jmp 0x4003fd0	      2132	quickfix.c	FUNCTION_31	WHILE_2
0x4004204	      0x488b442408	                mov rax, qword [rsp + 8]	      2696	quickfix.c	FUNCTION_37	IF_21	IF_22
0x4004209	    0x488905000000	            mov qword [0x04004210], rax 	      2696	quickfix.c	FUNCTION_37	IF_21	IF_22
0x4004210	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      2697	quickfix.c	FUNCTION_37	IF_21	IF_22
0x4004214	    0x890500000000	            mov dword [0x0400421a], eax 	      2697	quickfix.c	FUNCTION_37	IF_21	IF_22
0x400421a	        0x4883c448	                           add rsp, 0x48	      2702	quickfix.c	FUNCTION_37
0x400421e	              0x5b	                                 pop rbx	      2702	quickfix.c	FUNCTION_37
0x400421f	              0x5d	                                 pop rbp	      2702	quickfix.c	FUNCTION_37
0x4004220	            0x415c	                                 pop r12	      2702	quickfix.c	FUNCTION_37
0x4004222	            0x415d	                                 pop r13	      2702	quickfix.c	FUNCTION_37
0x4004224	            0x415e	                                 pop r14	      2702	quickfix.c	FUNCTION_37
0x4004226	            0x415f	                                 pop r15	      2702	quickfix.c	FUNCTION_37
0x4004228	              0xc3	                                     ret	      2702	quickfix.c	FUNCTION_37
0x4004229	     0xf1f80000000	                         nop dword [rax]	      2702	quickfix.c	FUNCTION_37
0x4004230	          0x4189f3	                           mov r11d, esi	      2090	quickfix.c	FUNCTION_30	WHILE_1	IF_1
0x4004233	            0x89eb	                            mov ebx, ebp	      2588	quickfix.c	FUNCTION_37
0x4004235	          0x4989c4	                            mov r12, rax	      2586	quickfix.c	FUNCTION_37
0x4004238	    0x41ba00000000	                             mov r10d, 0	      2586	quickfix.c	FUNCTION_37
0x400423e	        0x4183e3fd	                    and r11d, 0xfffffffd	      2090	quickfix.c	FUNCTION_30	WHILE_1	IF_1
0x4004242	    0x660f1f440000	                    nop word [rax + rax]	      2090	quickfix.c	FUNCTION_30	WHILE_1	IF_1
0x4004248	            0x85d2	                           test edx, edx	      2085	quickfix.c	FUNCTION_30	WHILE_1
0x400424a	     0xf84570b0000	                            je 0x4004da7	      2085	quickfix.c	FUNCTION_30	WHILE_1
0x4004250	        0x4183fb01	                             cmp r11d, 1	      2090	quickfix.c	FUNCTION_30	WHILE_1	IF_1
0x4004254	      0x458b7c2418	           mov r15d, dword [r12 + 0x18] 	      2018	quickfix.c	FUNCTION_28
0x4004259	            0x756d	                           jne 0x40042c8	      2090	quickfix.c	FUNCTION_30	WHILE_1	IF_1
0x400425b	            0x39df	                            cmp edi, ebx	      2022	quickfix.c	FUNCTION_28	DO_1	IF_1
0x400425d	            0x743a	                            je 0x4004299	      2022	quickfix.c	FUNCTION_28	DO_1	IF_1
0x400425f	        0x498b0424	                    mov rax, qword [r12]	      2023	quickfix.c	FUNCTION_28	DO_1	IF_1
0x4004263	          0x4885c0	                           test rax, rax	      2023	quickfix.c	FUNCTION_28	DO_1	IF_1
0x4004266	            0x7431	                            je 0x4004299	      2023	quickfix.c	FUNCTION_28	DO_1	IF_1
0x4004268	        0x458b7138	            mov r14d, dword [r9 + 0x38] 	      2023	quickfix.c	FUNCTION_28	DO_1	IF_1
0x400426c	            0x89d9	                            mov ecx, ebx	      2023	quickfix.c	FUNCTION_28	DO_1	IF_1
0x400426e	            0xeb08	                           jmp 0x4004278	      2023	quickfix.c	FUNCTION_28	DO_1	IF_1
0x4004270	          0x488b00	                    mov rax, qword [rax]	      2023	quickfix.c	FUNCTION_28	DO_1	IF_1
0x4004273	          0x4885c0	                           test rax, rax	      2023	quickfix.c	FUNCTION_28	DO_1	IF_1
0x4004276	            0x7421	                            je 0x4004299	      2023	quickfix.c	FUNCTION_28	DO_1	IF_1
0x4004278	          0x83c101	                              add ecx, 1	      2025	quickfix.c	FUNCTION_28	DO_1
0x400427b	          0x4585f6	                         test r14d, r14d	      2029	quickfix.c	FUNCTION_28
0x400427e	            0x7506	                           jne 0x4004286	      2029	quickfix.c	FUNCTION_28
0x4004280	        0x80784300	                cmp byte [rax + 0x43], 0	      2028	quickfix.c	FUNCTION_28
0x4004284	            0x740f	                            je 0x4004295	      2028	quickfix.c	FUNCTION_28
0x4004286	          0x83fe03	                              cmp esi, 3	      2029	quickfix.c	FUNCTION_28
0x4004289	     0xf8581000000	                           jne 0x4004310	      2029	quickfix.c	FUNCTION_28
0x400428f	        0x443b7818	           cmp r15d, dword [rax + 0x18] 	      2029	quickfix.c	FUNCTION_28
0x4004293	            0x757b	                           jne 0x4004310	      2029	quickfix.c	FUNCTION_28
0x4004295	            0x39cf	                            cmp edi, ecx	      2022	quickfix.c	FUNCTION_28	DO_1	IF_1
0x4004297	            0x75d7	                           jne 0x4004270	      2022	quickfix.c	FUNCTION_28	DO_1	IF_1
0x4004299	          0x4d85d2	                           test r10, r10	      2098	quickfix.c	FUNCTION_30	WHILE_1	IF_2	IF_3
0x400429c	     0xf842efdffff	                            je 0x4003fd0	      2098	quickfix.c	FUNCTION_30	WHILE_1	IF_2	IF_3
0x40042a2	      0xba05000000	                              mov edx, 5	      2100	quickfix.c	FUNCTION_30	WHILE_1	IF_2	IF_3	CALL_5
0x40042a7	          0x4c89d6	                            mov rsi, r10	      2100	quickfix.c	FUNCTION_30	WHILE_1	IF_2	IF_3	CALL_5
0x40042aa	            0x31ff	                            xor edi, edi	      2100	quickfix.c	FUNCTION_30	WHILE_1	IF_2	IF_3	CALL_5
0x40042ac	      0xe800000000	                          call 0x40042b1	      2100	quickfix.c	FUNCTION_30	WHILE_1	IF_2	IF_3	CALL_5
0x40042b1	          0x4889c7	                            mov rdi, rax	      2100	quickfix.c	FUNCTION_30	WHILE_1	IF_2	IF_3	CALL_5
0x40042b4	          0x4531f6	                          xor r14d, r14d	      2100	quickfix.c	FUNCTION_30	WHILE_1	IF_2	IF_3	CALL_5
0x40042b7	      0xe800000000	                          call 0x40042bc	      2100	quickfix.c	FUNCTION_30	WHILE_1	IF_2	IF_3	CALL_5
0x40042bc	      0xe931feffff	                           jmp 0x40040f2	      2100	quickfix.c	FUNCTION_30	WHILE_1	IF_2	IF_3	CALL_5
0x40042c1	     0xf1f80000000	                         nop dword [rax]	      2100	quickfix.c	FUNCTION_30	WHILE_1	IF_2	IF_3	CALL_5
0x40042c8	          0x83fb01	                              cmp ebx, 1	      2054	quickfix.c	FUNCTION_29	DO_1	IF_1
0x40042cb	            0x74cc	                            je 0x4004299	      2054	quickfix.c	FUNCTION_29	DO_1	IF_1
0x40042cd	      0x498b442408	                mov rax, qword [r12 + 8]	      2054	quickfix.c	FUNCTION_29	DO_1	IF_1
0x40042d2	          0x4885c0	                           test rax, rax	      2054	quickfix.c	FUNCTION_29	DO_1	IF_1
0x40042d5	            0x74c2	                            je 0x4004299	      2054	quickfix.c	FUNCTION_29	DO_1	IF_1
0x40042d7	        0x458b7138	            mov r14d, dword [r9 + 0x38] 	      2054	quickfix.c	FUNCTION_29	DO_1	IF_1
0x40042db	            0x89d9	                            mov ecx, ebx	      2054	quickfix.c	FUNCTION_29	DO_1	IF_1
0x40042dd	            0xeb0a	                           jmp 0x40042e9	      2054	quickfix.c	FUNCTION_29	DO_1	IF_1
0x40042df	              0x90	                                     nop	      2054	quickfix.c	FUNCTION_29	DO_1	IF_1
0x40042e0	        0x488b4008	                mov rax, qword [rax + 8]	      2054	quickfix.c	FUNCTION_29	DO_1	IF_1
0x40042e4	          0x4885c0	                           test rax, rax	      2054	quickfix.c	FUNCTION_29	DO_1	IF_1
0x40042e7	            0x74b0	                            je 0x4004299	      2054	quickfix.c	FUNCTION_29	DO_1	IF_1
0x40042e9	          0x83e901	                              sub ecx, 1	      2056	quickfix.c	FUNCTION_29	DO_1
0x40042ec	          0x4585f6	                         test r14d, r14d	      2060	quickfix.c	FUNCTION_29
0x40042ef	            0x7506	                           jne 0x40042f7	      2060	quickfix.c	FUNCTION_29
0x40042f1	        0x80784300	                cmp byte [rax + 0x43], 0	      2059	quickfix.c	FUNCTION_29
0x40042f5	            0x740b	                            je 0x4004302	      2059	quickfix.c	FUNCTION_29
0x40042f7	          0x83fefd	             cmp esi, 0xfffffffffffffffd	      2060	quickfix.c	FUNCTION_29
0x40042fa	            0x7514	                           jne 0x4004310	      2060	quickfix.c	FUNCTION_29
0x40042fc	        0x443b7818	           cmp r15d, dword [rax + 0x18] 	      2060	quickfix.c	FUNCTION_29
0x4004300	            0x750e	                           jne 0x4004310	      2060	quickfix.c	FUNCTION_29
0x4004302	          0x83f901	                              cmp ecx, 1	      2054	quickfix.c	FUNCTION_29	DO_1	IF_1
0x4004305	            0x75d9	                           jne 0x40042e0	      2054	quickfix.c	FUNCTION_29	DO_1	IF_1
0x4004307	            0xeb90	                           jmp 0x4004299	      2054	quickfix.c	FUNCTION_29	DO_1	IF_1
0x4004309	     0xf1f80000000	                         nop dword [rax]	      2054	quickfix.c	FUNCTION_29	DO_1	IF_1
0x4004310	            0x89cb	                            mov ebx, ecx	      2056	quickfix.c	FUNCTION_29	DO_1
0x4004312	          0x4989c4	                            mov r12, rax	      2060	quickfix.c	FUNCTION_29
0x4004315	          0x83ea01	                              sub edx, 1	      2085	quickfix.c	FUNCTION_30	WHILE_1
0x4004318	          0x4531d2	                          xor r10d, r10d	      2106	quickfix.c	FUNCTION_30	WHILE_1
0x400431b	      0xe928ffffff	                           jmp 0x4004248	      2106	quickfix.c	FUNCTION_30	WHILE_1
0x4004320	    0x488b05000000	            mov rax, qword [0x04004327] 	      2612	quickfix.c	FUNCTION_37	IF_7	CALL_6
0x4004327	        0x488b7808	                mov rdi, qword [rax + 8]	      2612	quickfix.c	FUNCTION_37	IF_7	CALL_6
0x400432b	      0xe800000000	                          call 0x4004330	      2612	quickfix.c	FUNCTION_37	IF_7	CALL_6
0x4004330	            0x85c0	                           test eax, eax	      2612	quickfix.c	FUNCTION_37	IF_7	CALL_6
0x4004332	     0xf8457020000	                            je 0x400458f	      2612	quickfix.c	FUNCTION_37	IF_7	CALL_6
0x4004338	    0x448b1d000000	           mov r11d, dword [0x0400433f] 	      2612	quickfix.c	FUNCTION_37	IF_7	CALL_6
0x400433f	          0x4585db	                         test r11d, r11d	      2612	quickfix.c	FUNCTION_37	IF_7	CALL_6
0x4004342	     0xf84ccfcffff	                            je 0x4004014	      2612	quickfix.c	FUNCTION_37	IF_7	CALL_6
0x4004348	    0x8b1500000000	            mov edx, dword [0x0400434e] 	      2167	quickfix.c	FUNCTION_32	ELSE_2	IF_4
0x400434e	            0x85d2	                           test edx, edx	      2167	quickfix.c	FUNCTION_32	ELSE_2	IF_4
0x4004350	            0x7521	                           jne 0x4004373	      2167	quickfix.c	FUNCTION_32	ELSE_2	IF_4
0x4004352	    0x488b05000000	            mov rax, qword [0x04004359] 	      2167	quickfix.c	FUNCTION_32	ELSE_2	IF_4
0x4004359	    0x486390ac0000	         movsxd rdx, dword [rax + 0xac] 	      2167	quickfix.c	FUNCTION_32	ELSE_2	IF_4
0x4004360	    0x483915000000	            cmp qword [0x04004367], rdx 	      2168	quickfix.c	FUNCTION_32	ELSE_2	IF_4
0x4004367	            0x740a	                            je 0x4004373	      2168	quickfix.c	FUNCTION_32	ELSE_2	IF_4
0x4004369	          0x83fa4f	                           cmp edx, 0x4f	      2168	quickfix.c	FUNCTION_32	ELSE_2	IF_4
0x400436c	      0xbe14000000	                           mov esi, 0x14	      2169	quickfix.c	FUNCTION_32	ELSE_2	IF_4
0x4004371	            0x7e05	                           jle 0x4004378	      2168	quickfix.c	FUNCTION_32	ELSE_2	IF_4
0x4004373	      0xbe10000000	                           mov esi, 0x10	      2166	quickfix.c	FUNCTION_32	ELSE_2
0x4004378	    0x4981fd000000	                              cmp r13, 0	      2170	quickfix.c	FUNCTION_32	ELSE_2	IF_5
0x400437f	     0xf84bf010000	                            je 0x4004544	      2170	quickfix.c	FUNCTION_32	ELSE_2	IF_5
0x4004385	        0x4080ce80	                            or sil, 0x80	      2173	quickfix.c	FUNCTION_32	ELSE_2	IF_6	CALL_4
0x4004389	            0x31ff	                            xor edi, edi	      2173	quickfix.c	FUNCTION_32	ELSE_2	IF_6	CALL_4
0x400438b	      0xe800000000	                          call 0x4004390	      2173	quickfix.c	FUNCTION_32	ELSE_2	IF_6	CALL_4
0x4004390	            0x85c0	                           test eax, eax	      2173	quickfix.c	FUNCTION_32	ELSE_2	IF_6	CALL_4
0x4004392	     0xf846e060000	                            je 0x4004a06	      2173	quickfix.c	FUNCTION_32	ELSE_2	IF_6	CALL_4
0x4004398	    0x488b05000000	            mov rax, qword [0x0400439f] 	      2178	quickfix.c	FUNCTION_32	ELSE_2	IF_7
0x400439f	    0x488b3d000000	            mov rdi, qword [0x040043a6] 	      2178	quickfix.c	FUNCTION_32	ELSE_2	IF_7
0x40043a6	    0x486390a00000	         movsxd rdx, dword [rax + 0xa0] 	      2178	quickfix.c	FUNCTION_32	ELSE_2	IF_7
0x40043ad	          0x4839d7	                            cmp rdi, rdx	      2178	quickfix.c	FUNCTION_32	ELSE_2	IF_7
0x40043b0	     0xf8fbb010000	                            jg 0x4004571	      2178	quickfix.c	FUNCTION_32	ELSE_2	IF_7
0x40043b6	    0x4c89a8481900	          mov qword [rax + 0x1948], r13 	      2184	quickfix.c	FUNCTION_32	ELSE_2	IF_8
0x40043bd	      0x4183450001	                      add dword [r13], 1	      2185	quickfix.c	FUNCTION_32	ELSE_2	IF_8
0x40043c2	    0x8b0500000000	            mov eax, dword [0x040043c8] 	      2189	quickfix.c	FUNCTION_32	IF_9
0x40043c8	          0x4531f6	                          xor r14d, r14d	      2189	quickfix.c	FUNCTION_32	IF_9
0x40043cb	    0x41bf01000000	                             mov r15d, 1	      2189	quickfix.c	FUNCTION_32	IF_9
0x40043d1	            0x85c0	                           test eax, eax	      2189	quickfix.c	FUNCTION_32	IF_9
0x40043d3	     0xf853b060000	                           jne 0x4004a14	      2189	quickfix.c	FUNCTION_32	IF_9
0x40043d9	    0xc70500000000	               mov dword [0x040043e3], 0	      2190	quickfix.c	FUNCTION_32	IF_9
0x40043e3	    0x488b3d000000	            mov rdi, qword [0x040043ea] 	      2620	quickfix.c	FUNCTION_37	IF_9	CALL_8
0x40043ea	      0xe800000000	                          call 0x40043ef	      2620	quickfix.c	FUNCTION_37	IF_9	CALL_8
0x40043ef	            0x85c0	                           test eax, eax	      2620	quickfix.c	FUNCTION_37	IF_9	CALL_8
0x40043f1	            0x7405	                            je 0x40043f8	      2620	quickfix.c	FUNCTION_37	IF_9	CALL_8
0x40043f3	          0x4584f6	                         test r14b, r14b	      2620	quickfix.c	FUNCTION_37	IF_9	CALL_8
0x40043f6	            0x7510	                           jne 0x4004408	      2620	quickfix.c	FUNCTION_37	IF_9	CALL_8
0x40043f8	    0x488b05000000	            mov rax, qword [0x040043ff] 	      2620	quickfix.c	FUNCTION_37	IF_9	CALL_8
0x40043ff	      0xe92efcffff	                           jmp 0x4004032	      2620	quickfix.c	FUNCTION_37	IF_9	CALL_8
0x4004404	         0xf1f4000	                         nop dword [rax]	      2620	quickfix.c	FUNCTION_37	IF_9	CALL_8
0x4004408	      0x458b7c2418	           mov r15d, dword [r12 + 0x18] 	      2626	quickfix.c	FUNCTION_37	IF_9	IF_10
0x400440d	          0x4585ff	                         test r15d, r15d	      2626	quickfix.c	FUNCTION_37	IF_9	IF_10
0x4004410	     0xf85ee010000	                           jne 0x4004604	      2626	quickfix.c	FUNCTION_37	IF_9	IF_10
0x4004416	    0x488b15000000	            mov rdx, qword [0x0400441d] 	      2626	quickfix.c	FUNCTION_37	IF_9	IF_10
0x400441d	            0x89dd	                            mov ebp, ebx	      2626	quickfix.c	FUNCTION_37	IF_9	IF_10
0x400441f	        0x4c892424	                    mov qword [rsp], r12	      2626	quickfix.c	FUNCTION_37	IF_9	IF_10
0x4004423	            0x31c0	                            xor eax, eax	      2626	quickfix.c	FUNCTION_37	IF_9	IF_10
0x4004425	        0x4d634508	              movsxd r8, dword [r13 + 8]	      2626	quickfix.c	FUNCTION_37	IF_9	IF_10
0x4004429	      0xe9dafcffff	                           jmp 0x4004108	      2626	quickfix.c	FUNCTION_37	IF_9	IF_10
0x400442e	            0x6690	                                     nop	      2626	quickfix.c	FUNCTION_37	IF_9	IF_10
0x4004430	    0x41807c244201	                cmp byte [r12 + 0x42], 1	      2375	quickfix.c	FUNCTION_34	IF_1
0x4004436	     0xf8413040000	                            je 0x400484f	      2375	quickfix.c	FUNCTION_34	IF_1
0x400443c	        0x4d637508	            movsxd r14, dword [r13 + 8] 	      2391	quickfix.c	FUNCTION_34	ELSE_2
0x4004440	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	      2394	quickfix.c	FUNCTION_34	ELSE_2	CALL_4
0x4004444	      0xba05000000	                              mov edx, 5	      2394	quickfix.c	FUNCTION_34	ELSE_2	CALL_4
0x4004449	      0xbe01000000	                              mov esi, 1	      2394	quickfix.c	FUNCTION_34	ELSE_2	CALL_4
0x400444e	    0x4a8d04f50000	                        lea rax, [r14*8]	      2392	quickfix.c	FUNCTION_34	ELSE_2
0x4004456	      0x4489742438	            mov dword [rsp + 0x38], r14d	      2392	quickfix.c	FUNCTION_34	ELSE_2
0x400445b	        0x49c1e607	                              shl r14, 7	      2392	quickfix.c	FUNCTION_34	ELSE_2
0x400445f	          0x4929c6	                            sub r14, rax	      2392	quickfix.c	FUNCTION_34	ELSE_2
0x4004462	      0x438b443510	      mov eax, dword [r13 + r14 + 0x10] 	      2392	quickfix.c	FUNCTION_34	ELSE_2
0x4004467	        0x8944243c	             mov dword [rsp + 0x3c], eax	      2392	quickfix.c	FUNCTION_34	ELSE_2
0x400446b	      0xe800000000	                          call 0x4004470	      2394	quickfix.c	FUNCTION_34	ELSE_2	CALL_4
0x4004470	    0x4981fd000000	                              cmp r13, 0	      2397	quickfix.c	FUNCTION_34	ELSE_2	IF_3
0x4004477	        0x89442410	             mov dword [rsp + 0x10], eax	      2394	quickfix.c	FUNCTION_34	ELSE_2	CALL_4
0x400447b	      0x448b442438	            mov r8d, dword [rsp + 0x38] 	      2397	quickfix.c	FUNCTION_34	ELSE_2	IF_3
0x4004480	            0x744f	                            je 0x40044d1	      2397	quickfix.c	FUNCTION_34	ELSE_2	IF_3
0x4004482	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2403	quickfix.c	FUNCTION_34	ELSE_2	IF_3	IF_4	CALL_5
0x4004487	      0xe800000000	                          call 0x400448c	      2403	quickfix.c	FUNCTION_34	ELSE_2	IF_3	IF_4	CALL_5
0x400448c	            0x85c0	                           test eax, eax	      2403	quickfix.c	FUNCTION_34	ELSE_2	IF_3	IF_4	CALL_5
0x400448e	     0xf854d050000	                           jne 0x40049e1	      2403	quickfix.c	FUNCTION_34	ELSE_2	IF_3	IF_4	CALL_5
0x4004494	      0xba05000000	                              mov edx, 5	      2405	quickfix.c	FUNCTION_34	ELSE_2	IF_3	IF_4	CALL_7
0x4004499	      0xbe00000000	                              mov esi, 0	      2405	quickfix.c	FUNCTION_34	ELSE_2	IF_3	IF_4	CALL_7
0x400449e	            0x31ff	                            xor edi, edi	      2405	quickfix.c	FUNCTION_34	ELSE_2	IF_3	IF_4	CALL_7
0x40044a0	      0xe800000000	                          call 0x40044a5	      2405	quickfix.c	FUNCTION_34	ELSE_2	IF_3	IF_4	CALL_7
0x40044a5	          0x4531f6	                          xor r14d, r14d	      2405	quickfix.c	FUNCTION_34	ELSE_2	IF_3	IF_4	CALL_7
0x40044a8	          0x4889c7	                            mov rdi, rax	      2405	quickfix.c	FUNCTION_34	ELSE_2	IF_3	IF_4	CALL_7
0x40044ab	      0xe800000000	                          call 0x40044b0	      2405	quickfix.c	FUNCTION_34	ELSE_2	IF_3	IF_4	CALL_7
0x40044b0	    0x488b15000000	            mov rdx, qword [0x040044b7] 	      2405	quickfix.c	FUNCTION_34	ELSE_2	IF_3	IF_4	CALL_7
0x40044b7	      0x4839542408	                cmp qword [rsp + 8], rdx	      2405	quickfix.c	FUNCTION_34	ELSE_2	IF_3	IF_4	CALL_7
0x40044bc	           0xf95c0	                                setne al	      2405	quickfix.c	FUNCTION_34	ELSE_2	IF_3	IF_4	CALL_7
0x40044bf	          0x4421f0	                           and eax, r14d	      2405	quickfix.c	FUNCTION_34	ELSE_2	IF_3	IF_4	CALL_7
0x40044c2	      0xe95ffcffff	                           jmp 0x4004126	      2405	quickfix.c	FUNCTION_34	ELSE_2	IF_3	IF_4	CALL_7
0x40044c7	      0xe800000000	                          call 0x40044cc	      2664	quickfix.c	FUNCTION_37	IF_14	CALL_13
0x40044cc	      0xe906fcffff	                           jmp 0x40040d7	      2664	quickfix.c	FUNCTION_37	IF_14	CALL_13
0x40044d1	    0x443b05000000	            cmp r8d, dword [0x040044d8] 	      2415	quickfix.c	FUNCTION_34	ELSE_2	ELSE_4	IF_6
0x40044d8	     0xf84d4050000	                            je 0x4004ab2	      2415	quickfix.c	FUNCTION_34	ELSE_2	ELSE_4	IF_6
0x40044de	      0xba05000000	                              mov edx, 5	      2419	quickfix.c	FUNCTION_34	ELSE_2	ELSE_4	IF_6	CALL_13
0x40044e3	      0xbe00000000	                              mov esi, 0	      2419	quickfix.c	FUNCTION_34	ELSE_2	ELSE_4	IF_6	CALL_13
0x40044e8	            0x31ff	                            xor edi, edi	      2419	quickfix.c	FUNCTION_34	ELSE_2	ELSE_4	IF_6	CALL_13
0x40044ea	          0x4589fe	                          mov r14d, r15d	      2419	quickfix.c	FUNCTION_34	ELSE_2	ELSE_4	IF_6	CALL_13
0x40044ed	      0xe800000000	                          call 0x40044f2	      2419	quickfix.c	FUNCTION_34	ELSE_2	ELSE_4	IF_6	CALL_13
0x40044f2	          0x4889c7	                            mov rdi, rax	      2419	quickfix.c	FUNCTION_34	ELSE_2	ELSE_4	IF_6	CALL_13
0x40044f5	        0x4183e601	                             and r14d, 1	      2419	quickfix.c	FUNCTION_34	ELSE_2	ELSE_4	IF_6	CALL_13
0x40044f9	      0xe800000000	                          call 0x40044fe	      2419	quickfix.c	FUNCTION_34	ELSE_2	ELSE_4	IF_6	CALL_13
0x40044fe	          0x4585ff	                         test r15d, r15d	      2671	quickfix.c	FUNCTION_37	ELSE_2	IF_18
0x4004501	            0x74ad	                            je 0x40044b0	      2671	quickfix.c	FUNCTION_37	ELSE_2	IF_18
0x4004503	          0x4531e4	                          xor r12d, r12d	      2649	quickfix.c	FUNCTION_37	IF_12	IF_13
0x4004506	          0x4531ed	                          xor r13d, r13d	      2648	quickfix.c	FUNCTION_37	IF_12	IF_13
0x4004509	    0x488b3d000000	            mov rdi, qword [0x04004510] 	      2672	quickfix.c	FUNCTION_37	ELSE_2	CALL_15
0x4004510	      0xbe01000000	                              mov esi, 1	      2672	quickfix.c	FUNCTION_37	ELSE_2	CALL_15
0x4004515	      0xe800000000	                          call 0x400451a	      2672	quickfix.c	FUNCTION_37	ELSE_2	CALL_15
0x400451a	          0x4d85e4	                           test r12, r12	      2673	quickfix.c	FUNCTION_37	ELSE_2	IF_19
0x400451d	     0xf8475080000	                            je 0x4004d98	      2673	quickfix.c	FUNCTION_37	ELSE_2	IF_19
0x4004523	      0x418b742418	            mov esi, dword [r12 + 0x18] 	      2673	quickfix.c	FUNCTION_37	ELSE_2	IF_19
0x4004528	            0x85f6	                           test esi, esi	      2673	quickfix.c	FUNCTION_37	ELSE_2	IF_19
0x400452a	      0x4c0f452424	                 cmovne r12, qword [rsp]	      2673	quickfix.c	FUNCTION_37	ELSE_2	IF_19
0x400452f	           0xf44eb	                          cmove ebp, ebx	      2673	quickfix.c	FUNCTION_37	ELSE_2	IF_19
0x4004532	        0x4c892424	                    mov qword [rsp], r12	      2673	quickfix.c	FUNCTION_37	ELSE_2	IF_19
0x4004536	          0x4d85ed	                           test r13, r13	      2685	quickfix.c	FUNCTION_37	IF_20
0x4004539	     0xf85b3fbffff	                           jne 0x40040f2	      2685	quickfix.c	FUNCTION_37	IF_20
0x400453f	      0xe96cffffff	                           jmp 0x40044b0	      2685	quickfix.c	FUNCTION_37	IF_20
0x4004544	            0x31ff	                            xor edi, edi	      2173	quickfix.c	FUNCTION_32	ELSE_2	IF_6	CALL_4
0x4004546	      0xe800000000	                          call 0x400454b	      2173	quickfix.c	FUNCTION_32	ELSE_2	IF_6	CALL_4
0x400454b	            0x85c0	                           test eax, eax	      2173	quickfix.c	FUNCTION_32	ELSE_2	IF_6	CALL_4
0x400454d	     0xf8492060000	                            je 0x4004be5	      2173	quickfix.c	FUNCTION_32	ELSE_2	IF_6	CALL_4
0x4004553	    0x488b05000000	            mov rax, qword [0x0400455a] 	      2178	quickfix.c	FUNCTION_32	ELSE_2	IF_7
0x400455a	    0x488b3d000000	            mov rdi, qword [0x04004561] 	      2178	quickfix.c	FUNCTION_32	ELSE_2	IF_7
0x4004561	    0x486380a00000	         movsxd rax, dword [rax + 0xa0] 	      2178	quickfix.c	FUNCTION_32	ELSE_2	IF_7
0x4004568	          0x4839f8	                            cmp rax, rdi	      2178	quickfix.c	FUNCTION_32	ELSE_2	IF_7
0x400456b	     0xf8d51feffff	                           jge 0x40043c2	      2178	quickfix.c	FUNCTION_32	ELSE_2	IF_7
0x4004571	      0xe800000000	                          call 0x4004576	      2179	quickfix.c	FUNCTION_32	ELSE_2	CALL_5
0x4004576	    0x4981fd000000	                              cmp r13, 0	      2181	quickfix.c	FUNCTION_32	ELSE_2	IF_8
0x400457d	     0xf843ffeffff	                            je 0x40043c2	      2181	quickfix.c	FUNCTION_32	ELSE_2	IF_8
0x4004583	    0x488b05000000	            mov rax, qword [0x0400458a] 	      2181	quickfix.c	FUNCTION_32	ELSE_2	IF_8
0x400458a	      0xe927feffff	                           jmp 0x40043b6	      2181	quickfix.c	FUNCTION_32	ELSE_2	IF_8
0x400458f	    0x448b15000000	           mov r10d, dword [0x04004596] 	      2152	quickfix.c	FUNCTION_32	IF_1
0x4004596	          0x4585d2	                         test r10d, r10d	      2152	quickfix.c	FUNCTION_32	IF_1
0x4004599	     0xf85a9fdffff	                           jne 0x4004348	      2152	quickfix.c	FUNCTION_32	IF_1
0x400459f	    0x4c8b35000000	            mov r14, qword [0x040045a6] 	      2155	quickfix.c	FUNCTION_32	ELSE_1	CALL_1
0x40045a6	          0x4d85f6	                           test r14, r14	      2155	quickfix.c	FUNCTION_32	ELSE_1	CALL_1
0x40045a9	            0x7512	                           jne 0x40045bd	      2155	quickfix.c	FUNCTION_32	ELSE_1	CALL_1
0x40045ab	      0xe998fdffff	                           jmp 0x4004348	      2155	quickfix.c	FUNCTION_32	ELSE_1	CALL_1
0x40045b0	        0x4d8b7620	            mov r14, qword [r14 + 0x20] 	      2155	quickfix.c	FUNCTION_32	ELSE_1	CALL_1
0x40045b4	          0x4d85f6	                           test r14, r14	      2155	quickfix.c	FUNCTION_32	ELSE_1	CALL_1
0x40045b7	     0xf848bfdffff	                            je 0x4004348	      2155	quickfix.c	FUNCTION_32	ELSE_1	CALL_1
0x40045bd	        0x498b7e08	                mov rdi, qword [r14 + 8]	      2156	quickfix.c	FUNCTION_32	ELSE_1	IF_2	CALL_2
0x40045c1	      0xe800000000	                          call 0x40045c6	      2156	quickfix.c	FUNCTION_32	ELSE_1	IF_2	CALL_2
0x40045c6	            0x85c0	                           test eax, eax	      2156	quickfix.c	FUNCTION_32	ELSE_1	IF_2	CALL_2
0x40045c8	            0x74e6	                            je 0x40045b0	      2156	quickfix.c	FUNCTION_32	ELSE_1	IF_2	CALL_2
0x40045ca	        0x498b4608	                mov rax, qword [r14 + 8]	      2158	quickfix.c	FUNCTION_32	IF_3
0x40045ce	          0x8b4878	            mov ecx, dword [rax + 0x78] 	      2158	quickfix.c	FUNCTION_32	IF_3
0x40045d1	            0x85c9	                           test ecx, ecx	      2158	quickfix.c	FUNCTION_32	IF_3
0x40045d3	     0xf8e6ffdffff	                           jle 0x4004348	      2158	quickfix.c	FUNCTION_32	IF_3
0x40045d9	          0x4c89f7	                            mov rdi, r14	      2159	quickfix.c	FUNCTION_32	CALL_3
0x40045dc	      0xbe01000000	                              mov esi, 1	      2159	quickfix.c	FUNCTION_32	CALL_3
0x40045e1	          0x4531ff	                          xor r15d, r15d	      2568	quickfix.c	FUNCTION_37
0x40045e4	      0xe800000000	                          call 0x40045e9	      2159	quickfix.c	FUNCTION_32	CALL_3
0x40045e9	    0x448b0d000000	            mov r9d, dword [0x040045f0] 	      2189	quickfix.c	FUNCTION_32	IF_9
0x40045f0	    0x41be01000000	                             mov r14d, 1	      2189	quickfix.c	FUNCTION_32	IF_9
0x40045f6	          0x4585c9	                           test r9d, r9d	      2189	quickfix.c	FUNCTION_32	IF_9
0x40045f9	     0xf84dafdffff	                            je 0x40043d9	      2189	quickfix.c	FUNCTION_32	IF_9
0x40045ff	      0xe9dffdffff	                           jmp 0x40043e3	      2189	quickfix.c	FUNCTION_32	IF_9
0x4004604	    0x488b05000000	            mov rax, qword [0x0400460b] 	      2211	quickfix.c	FUNCTION_33
0x400460b	    0x488b90501900	          mov rdx, qword [rax + 0x1950] 	      2211	quickfix.c	FUNCTION_33
0x4004612	          0x4885d2	                           test rdx, rdx	      2212	quickfix.c	FUNCTION_33	IF_1
0x4004615	     0xf84c4000000	                            je 0x40046df	      2212	quickfix.c	FUNCTION_33	IF_1
0x400461b	    0x4c8b35000000	            mov r14, qword [0x04004622] 	      2216	quickfix.c	FUNCTION_33	IF_1	CALL_1
0x4004622	          0x4d85f6	                           test r14, r14	      2216	quickfix.c	FUNCTION_33	IF_1	CALL_1
0x4004625	     0xf8465070000	                            je 0x4004d90	      2216	quickfix.c	FUNCTION_33	IF_1	CALL_1
0x400462b	        0x895c2428	             mov dword [rsp + 0x28], ebx	      2216	quickfix.c	FUNCTION_33	IF_1	CALL_1
0x400462f	          0x4889d3	                            mov rbx, rdx	      2216	quickfix.c	FUNCTION_33	IF_1	CALL_1
0x4004632	            0xeb11	                           jmp 0x4004645	      2216	quickfix.c	FUNCTION_33	IF_1	CALL_1
0x4004634	         0xf1f4000	                         nop dword [rax]	      2216	quickfix.c	FUNCTION_33	IF_1	CALL_1
0x4004638	        0x4d8b7620	            mov r14, qword [r14 + 0x20] 	      2216	quickfix.c	FUNCTION_33	IF_1	CALL_1
0x400463c	          0x4d85f6	                           test r14, r14	      2216	quickfix.c	FUNCTION_33	IF_1	CALL_1
0x400463f	     0xf8493000000	                            je 0x40046d8	      2216	quickfix.c	FUNCTION_33	IF_1	CALL_1
0x4004645	    0x493b9e481900	          cmp rbx, qword [r14 + 0x1948] 	      2217	quickfix.c	FUNCTION_33	IF_1	IF_2
0x400464c	            0x75ea	                           jne 0x4004638	      2217	quickfix.c	FUNCTION_33	IF_1	IF_2
0x400464e	        0x498b7e08	                mov rdi, qword [r14 + 8]	      2218	quickfix.c	FUNCTION_33	IF_1	IF_2	CALL_2
0x4004652	      0xe800000000	                          call 0x4004657	      2218	quickfix.c	FUNCTION_33	IF_1	IF_2	CALL_2
0x4004657	            0x85c0	                           test eax, eax	      2218	quickfix.c	FUNCTION_33	IF_1	IF_2	CALL_2
0x4004659	            0x75dd	                           jne 0x4004638	      2218	quickfix.c	FUNCTION_33	IF_1	IF_2	CALL_2
0x400465b	          0x4889da	                            mov rdx, rbx	      2218	quickfix.c	FUNCTION_33	IF_1	IF_2	CALL_2
0x400465e	    0x4c8b05000000	              mov r8, qword [0x04004665]	      2218	quickfix.c	FUNCTION_33	IF_1	IF_2	CALL_2
0x4004665	        0x8b5c2428	            mov ebx, dword [rsp + 0x28] 	      2218	quickfix.c	FUNCTION_33	IF_1	IF_2	CALL_2
0x4004669	    0x4c3905000000	              cmp qword [0x04004670], r8	      2261	quickfix.c	FUNCTION_33	IF_6	CALL_4
0x4004670	     0xf84a3040000	                            je 0x4004b19	      2261	quickfix.c	FUNCTION_33	IF_6	CALL_4
0x4004676	    0x488b35000000	            mov rsi, qword [0x0400467d] 	      2282	quickfix.c	FUNCTION_33	ELSE_1	IF_10
0x400467d	    0x4883be501900	             cmp qword [rsi + 0x1950], 0	      2282	quickfix.c	FUNCTION_33	ELSE_1	IF_10
0x4004685	     0xf8425060000	                            je 0x4004cb0	      2282	quickfix.c	FUNCTION_33	ELSE_1	IF_10
0x400468b	          0x4d85f6	                           test r14, r14	      2286	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11
0x400468e	     0xf84bc050000	                            je 0x4004c50	      2286	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11
0x4004694	          0x4c89f7	                            mov rdi, r14	      2307	quickfix.c	FUNCTION_33	ELSE_1	IF_10	CALL_8
0x4004697	      0x4889542428	             mov qword [rsp + 0x28], rdx	      2307	quickfix.c	FUNCTION_33	ELSE_1	IF_10	CALL_8
0x400469c	          0x4531ff	                          xor r15d, r15d	      2311	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_16
0x400469f	      0xe800000000	                          call 0x40046a4	      2307	quickfix.c	FUNCTION_33	ELSE_1	IF_10	CALL_8
0x40046a4	    0x4983be481900	             cmp qword [r14 + 0x1948], 0	      2311	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_16
0x40046ac	    0x488b05000000	            mov rax, qword [0x040046b3] 	      2311	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_16
0x40046b3	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      2311	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_16
0x40046b8	     0xf8574f9ffff	                           jne 0x4004032	      2311	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_16
0x40046be	    0x498996481900	          mov qword [r14 + 0x1948], rdx 	      2313	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_16
0x40046c5	    0x488b05000000	            mov rax, qword [0x040046cc] 	      2313	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_16
0x40046cc	          0x830201	                      add dword [rdx], 1	      2314	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_16
0x40046cf	      0xe95ef9ffff	                           jmp 0x4004032	      2314	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_16
0x40046d4	         0xf1f4000	                         nop dword [rax]	      2314	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_16
0x40046d8	          0x4889da	                            mov rdx, rbx	      2314	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_16
0x40046db	        0x8b5c2428	            mov ebx, dword [rsp + 0x28] 	      2314	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_16
0x40046df	    0x4c8b05000000	              mov r8, qword [0x040046e6]	      2228	quickfix.c	FUNCTION_33	IF_3	CALL_3
0x40046e6	          0x4d85c0	                             test r8, r8	      2228	quickfix.c	FUNCTION_33	IF_3	CALL_3
0x40046e9	            0x743a	                            je 0x4004725	      2228	quickfix.c	FUNCTION_33	IF_3	CALL_3
0x40046eb	        0x498b4008	                 mov rax, qword [r8 + 8]	      2229	quickfix.c	FUNCTION_33	IF_3	IF_4
0x40046ef	    0x488b80181400	          mov rax, qword [rax + 0x1418] 	      2229	quickfix.c	FUNCTION_33	IF_3	IF_4
0x40046f6	          0x803800	                       cmp byte [rax], 0	      2229	quickfix.c	FUNCTION_33	IF_3	IF_4
0x40046f9	     0xf84ab030000	                            je 0x4004aaa	      2229	quickfix.c	FUNCTION_33	IF_3	IF_4
0x40046ff	          0x4c89c0	                             mov rax, r8	      2229	quickfix.c	FUNCTION_33	IF_3	IF_4
0x4004702	            0xeb18	                           jmp 0x400471c	      2229	quickfix.c	FUNCTION_33	IF_3	IF_4
0x4004704	         0xf1f4000	                         nop dword [rax]	      2229	quickfix.c	FUNCTION_33	IF_3	IF_4
0x4004708	        0x488b4808	                mov rcx, qword [rax + 8]	      2229	quickfix.c	FUNCTION_33	IF_3	IF_4
0x400470c	    0x488b89181400	          mov rcx, qword [rcx + 0x1418] 	      2229	quickfix.c	FUNCTION_33	IF_3	IF_4
0x4004713	          0x803900	                       cmp byte [rcx], 0	      2229	quickfix.c	FUNCTION_33	IF_3	IF_4
0x4004716	     0xf848e030000	                            je 0x4004aaa	      2229	quickfix.c	FUNCTION_33	IF_3	IF_4
0x400471c	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2228	quickfix.c	FUNCTION_33	IF_3	CALL_3
0x4004720	          0x4885c0	                           test rax, rax	      2228	quickfix.c	FUNCTION_33	IF_3	CALL_3
0x4004723	            0x75e3	                           jne 0x4004708	      2228	quickfix.c	FUNCTION_33	IF_3	CALL_3
0x4004725	    0xf60500000000	               test byte [0x0400472c], 2	      2240	quickfix.c	FUNCTION_33	IF_5
0x400472c	            0x7444	                            je 0x4004772	      2240	quickfix.c	FUNCTION_33	IF_5
0x400472e	    0x488b3d000000	            mov rdi, qword [0x04004735] 	      2245	quickfix.c	FUNCTION_33	IF_5
0x4004735	          0x4885ff	                           test rdi, rdi	      2245	quickfix.c	FUNCTION_33	IF_5
0x4004738	            0x7438	                            je 0x4004772	      2245	quickfix.c	FUNCTION_33	IF_5
0x400473a	    0x4c8b0d000000	              mov r9, qword [0x04004741]	      2245	quickfix.c	FUNCTION_33	IF_5
0x4004741	          0x4c39cf	                             cmp rdi, r9	      2245	quickfix.c	FUNCTION_33	IF_5
0x4004744	     0xf84ec050000	                            je 0x4004d36	      2245	quickfix.c	FUNCTION_33	IF_5
0x400474a	        0x488b7720	            mov rsi, qword [rdi + 0x20] 	      2245	quickfix.c	FUNCTION_33	IF_5
0x400474e	            0xeb15	                           jmp 0x4004765	      2245	quickfix.c	FUNCTION_33	IF_5
0x4004750	        0x488b4608	                mov rax, qword [rsi + 8]	      2247	quickfix.c	FUNCTION_33	IF_5	FUNCTION_1	IF_1
0x4004754	    0x443bb8b80000	           cmp r15d, dword [rax + 0xb8] 	      2247	quickfix.c	FUNCTION_33	IF_5	FUNCTION_1	IF_1
0x400475b	     0xf842b030000	                            je 0x4004a8c	      2247	quickfix.c	FUNCTION_33	IF_5	FUNCTION_1	IF_1
0x4004761	        0x488b7620	            mov rsi, qword [rsi + 0x20] 	      2245	quickfix.c	FUNCTION_33	IF_5
0x4004765	          0x4885f6	                           test rsi, rsi	      2245	quickfix.c	FUNCTION_33	IF_5
0x4004768	            0x75e6	                           jne 0x4004750	      2245	quickfix.c	FUNCTION_33	IF_5
0x400476a	          0x488b3f	                    mov rdi, qword [rdi]	      2245	quickfix.c	FUNCTION_33	IF_5
0x400476d	          0x4885ff	                           test rdi, rdi	      2245	quickfix.c	FUNCTION_33	IF_5
0x4004770	            0x75cf	                           jne 0x4004741	      2245	quickfix.c	FUNCTION_33	IF_5
0x4004772	    0x4c3905000000	              cmp qword [0x04004779], r8	      2261	quickfix.c	FUNCTION_33	IF_6	CALL_4
0x4004779	     0xf843d060000	                            je 0x4004dbc	      2261	quickfix.c	FUNCTION_33	IF_6	CALL_4
0x400477f	          0x4885d2	                           test rdx, rdx	      2264	quickfix.c	FUNCTION_33	IF_6	IF_7
0x4004782	     0xf8476040000	                            je 0x4004bfe	      2264	quickfix.c	FUNCTION_33	IF_6	IF_7
0x4004788	            0x31ff	                            xor edi, edi	      2266	quickfix.c	FUNCTION_33	IF_6	IF_8	CALL_5
0x400478a	      0xbec0000000	                           mov esi, 0xc0	      2266	quickfix.c	FUNCTION_33	IF_6	IF_8	CALL_5
0x400478f	      0x4889542428	             mov qword [rsp + 0x28], rdx	      2266	quickfix.c	FUNCTION_33	IF_6	IF_8	CALL_5
0x4004794	      0xe800000000	                          call 0x4004799	      2266	quickfix.c	FUNCTION_33	IF_6	IF_8	CALL_5
0x4004799	            0x85c0	                           test eax, eax	      2266	quickfix.c	FUNCTION_33	IF_6	IF_8	CALL_5
0x400479b	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      2266	quickfix.c	FUNCTION_33	IF_6	IF_8	CALL_5
0x40047a0	     0xf846b030000	                            je 0x4004b11	      2266	quickfix.c	FUNCTION_33	IF_6	IF_8	CALL_5
0x40047a6	    0x488b05000000	            mov rax, qword [0x040047ad] 	      2269	quickfix.c	FUNCTION_33	IF_6
0x40047ad	    0xc70500000000	               mov dword [0x040047b7], 0	      2270	quickfix.c	FUNCTION_33	IF_6
0x40047b7	    0x41bf01000000	                             mov r15d, 1	      2268	quickfix.c	FUNCTION_33	IF_6
0x40047bd	    0x488905000000	            mov qword [0x040047c4], rax 	      2269	quickfix.c	FUNCTION_33	IF_6
0x40047c4	    0x488b05000000	            mov rax, qword [0x040047cb] 	      2271	quickfix.c	FUNCTION_33	IF_6	CALL_6
0x40047cb	    0xc78088020000	              mov dword [rax + 0x288], 0	      2271	quickfix.c	FUNCTION_33	IF_6	CALL_6
0x40047d5	    0xc780b0020000	              mov dword [rax + 0x2b0], 0	      2271	quickfix.c	FUNCTION_33	IF_6	CALL_6
0x40047df	    0x488990481900	          mov qword [rax + 0x1948], rdx 	      2276	quickfix.c	FUNCTION_33	IF_6	IF_9
0x40047e6	          0x830201	                      add dword [rdx], 1	      2277	quickfix.c	FUNCTION_33	IF_6	IF_9
0x40047e9	      0xe944f8ffff	                           jmp 0x4004032	      2277	quickfix.c	FUNCTION_33	IF_6	IF_9
0x40047ee	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      2659	quickfix.c	FUNCTION_37	IF_14	CALL_12
0x40047f3	    0x410fb6742440	           movzx esi, byte [r12 + 0x40] 	      2659	quickfix.c	FUNCTION_37	IF_14	CALL_12
0x40047f9	      0x418b54241c	            mov edx, dword [r12 + 0x1c] 	      2659	quickfix.c	FUNCTION_37	IF_14	CALL_12
0x40047fe	          0x4885c0	                           test rax, rax	      2454	quickfix.c	FUNCTION_35	IF_1	IF_2
0x4004801	            0x7e1c	                           jle 0x400481f	      2454	quickfix.c	FUNCTION_35	IF_1	IF_2
0x4004803	    0x488b0d000000	            mov rcx, qword [0x0400480a] 	      2456	quickfix.c	FUNCTION_35	IF_1	IF_2	IF_3
0x400480a	          0x488b09	                    mov rcx, qword [rcx]	      2456	quickfix.c	FUNCTION_35	IF_1	IF_2	IF_3
0x400480d	          0x4839c8	                            cmp rax, rcx	      2458	quickfix.c	FUNCTION_35	IF_1	IF_2
0x4004810	        0x480f4fc1	                          cmovg rax, rcx	      2458	quickfix.c	FUNCTION_35	IF_1	IF_2
0x4004814	    0x488b0d000000	            mov rcx, qword [0x0400481b] 	      2458	quickfix.c	FUNCTION_35	IF_1	IF_2
0x400481b	        0x48894138	             mov qword [rcx + 0x38], rax	      2458	quickfix.c	FUNCTION_35	IF_1	IF_2
0x400481f	            0x85d2	                           test edx, edx	      2460	quickfix.c	FUNCTION_35	IF_1	IF_4
0x4004821	     0xf8e00050000	                           jle 0x4004d27	      2460	quickfix.c	FUNCTION_35	IF_1	IF_4
0x4004827	    0x488b05000000	            mov rax, qword [0x0400482e] 	      2462	quickfix.c	FUNCTION_35	IF_1	IF_4
0x400482e	          0x83ea01	                              sub edx, 1	      2462	quickfix.c	FUNCTION_35	IF_1	IF_4
0x4004831	        0x4080fe01	                              cmp sil, 1	      2466	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5
0x4004835	          0x895040	             mov dword [rax + 0x40], edx	      2462	quickfix.c	FUNCTION_35	IF_1	IF_4
0x4004838	    0xc74044000000	               mov dword [rax + 0x44], 0	      2464	quickfix.c	FUNCTION_35	IF_1	IF_4
0x400483f	     0xf84fb020000	                            je 0x4004b40	      2466	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5
0x4004845	      0xe800000000	                          call 0x400484a	      2489	quickfix.c	FUNCTION_35	IF_1	IF_4	CALL_2
0x400484a	      0xe973f8ffff	                           jmp 0x40040c2	      2489	quickfix.c	FUNCTION_35	IF_1	IF_4	CALL_2
0x400484f	        0x8b742410	            mov esi, dword [rsp + 0x10] 	      2379	quickfix.c	FUNCTION_34	IF_1	IF_2	CALL_1
0x4004853	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      2379	quickfix.c	FUNCTION_34	IF_1	IF_2	CALL_1
0x4004858	      0xe800000000	                          call 0x400485d	      2379	quickfix.c	FUNCTION_34	IF_1	IF_2	CALL_1
0x400485d	            0x85c0	                           test eax, eax	      2379	quickfix.c	FUNCTION_34	IF_1	IF_2	CALL_1
0x400485f	     0xf849b020000	                            je 0x4004b00	      2379	quickfix.c	FUNCTION_34	IF_1	IF_2	CALL_1
0x4004865	    0x488b05000000	            mov rax, qword [0x0400486c] 	      2387	quickfix.c	FUNCTION_34	IF_1	ELSE_1
0x400486c	      0x4839442418	            cmp qword [rsp + 0x18], rax 	      2385	quickfix.c	FUNCTION_34	IF_1	ELSE_1	CALL_3
0x4004871	      0xba00000000	                              mov edx, 0	      2385	quickfix.c	FUNCTION_34	IF_1	ELSE_1	CALL_3
0x4004876	      0x418b7c2418	            mov edi, dword [r12 + 0x18] 	      2385	quickfix.c	FUNCTION_34	IF_1	ELSE_1	CALL_3
0x400487b	    0x41b903000000	                              mov r9d, 3	      2385	quickfix.c	FUNCTION_34	IF_1	ELSE_1	CALL_3
0x4004881	    0x41b801000000	                              mov r8d, 1	      2385	quickfix.c	FUNCTION_34	IF_1	ELSE_1	CALL_3
0x4004887	        0x480f45c2	                         cmovne rax, rdx	      2385	quickfix.c	FUNCTION_34	IF_1	ELSE_1	CALL_3
0x400488b	        0x4883ec08	                              sub rsp, 8	      2385	quickfix.c	FUNCTION_34	IF_1	ELSE_1	CALL_3
0x400488f	            0x31f6	                            xor esi, esi	      2385	quickfix.c	FUNCTION_34	IF_1	ELSE_1	CALL_3
0x4004891	              0x50	                                push rax	      2385	quickfix.c	FUNCTION_34	IF_1	ELSE_1	CALL_3
0x4004892	            0x31c9	                            xor ecx, ecx	      2385	quickfix.c	FUNCTION_34	IF_1	ELSE_1	CALL_3
0x4004894	      0xe800000000	                          call 0x4004899	      2385	quickfix.c	FUNCTION_34	IF_1	ELSE_1	CALL_3
0x4004899	        0x89442420	             mov dword [rsp + 0x20], eax	      2385	quickfix.c	FUNCTION_34	IF_1	ELSE_1	CALL_3
0x400489d	              0x5e	                                 pop rsi	      2385	quickfix.c	FUNCTION_34	IF_1	ELSE_1	CALL_3
0x400489e	              0x5f	                                 pop rdi	      2385	quickfix.c	FUNCTION_34	IF_1	ELSE_1	CALL_3
0x400489f	      0x837c241001	               cmp dword [rsp + 0x10], 1	      2653	quickfix.c	FUNCTION_37	IF_14
0x40048a4	     0xf842d050000	                            je 0x4004dd7	      2653	quickfix.c	FUNCTION_37	IF_14
0x40048aa	          0x4589fe	                          mov r14d, r15d	      2653	quickfix.c	FUNCTION_37	IF_14
0x40048ad	        0x4183e601	                             and r14d, 1	      2653	quickfix.c	FUNCTION_37	IF_14
0x40048b1	          0x4585ff	                         test r15d, r15d	      2671	quickfix.c	FUNCTION_37	ELSE_2	IF_18
0x40048b4	     0xf8469fcffff	                            je 0x4004523	      2671	quickfix.c	FUNCTION_37	ELSE_2	IF_18
0x40048ba	      0xe94afcffff	                           jmp 0x4004509	      2671	quickfix.c	FUNCTION_37	ELSE_2	IF_18
0x40048bf	    0x448b15000000	           mov r10d, dword [0x040048c6] 	      2523	quickfix.c	FUNCTION_36	IF_1
0x40048c6	          0x4585d2	                         test r10d, r10d	      2523	quickfix.c	FUNCTION_36	IF_1
0x40048c9	     0xf849f010000	                            je 0x4004a6e	      2523	quickfix.c	FUNCTION_36	IF_1
0x40048cf	    0x410fb67c2442	           movzx edi, byte [r12 + 0x42] 	      2528	quickfix.c	FUNCTION_36	CALL_4
0x40048d5	      0x418b742420	            mov esi, dword [r12 + 0x20] 	      2528	quickfix.c	FUNCTION_36	CALL_4
0x40048da	    0x41be00000000	                             mov r14d, 0	      2525	quickfix.c	FUNCTION_36	CALL_2
0x40048e0	      0xe88bbbffff	                       call sym.qf_types	      2528	quickfix.c	FUNCTION_36	CALL_4
0x40048e5	    0x41807c244100	                cmp byte [r12 + 0x41], 0	      2525	quickfix.c	FUNCTION_36	CALL_2
0x40048eb	          0x4889c5	                            mov rbp, rax	      2528	quickfix.c	FUNCTION_36	CALL_4
0x40048ee	     0xf8561010000	                           jne 0x4004a55	      2525	quickfix.c	FUNCTION_36	CALL_2
0x40048f4	        0x49634508	            movsxd rax, dword [r13 + 8] 	      2525	quickfix.c	FUNCTION_36	CALL_2
0x40048f8	            0x31ff	                            xor edi, edi	      2525	quickfix.c	FUNCTION_36	CALL_2
0x40048fa	      0xbe00000000	                              mov esi, 0	      2525	quickfix.c	FUNCTION_36	CALL_2
0x40048ff	    0x488d14c50000	                        lea rdx, [rax*8]	      2525	quickfix.c	FUNCTION_36	CALL_2
0x4004907	        0x48c1e007	                              shl rax, 7	      2525	quickfix.c	FUNCTION_36	CALL_2
0x400490b	          0x4829d0	                            sub rax, rdx	      2525	quickfix.c	FUNCTION_36	CALL_2
0x400490e	      0xba05000000	                              mov edx, 5	      2525	quickfix.c	FUNCTION_36	CALL_2
0x4004913	      0x458b4c0530	      mov r9d, dword [r13 + rax + 0x30] 	      2525	quickfix.c	FUNCTION_36	CALL_2
0x4004918	        0x44890c24	                    mov dword [rsp], r9d	      2525	quickfix.c	FUNCTION_36	CALL_2
0x400491c	      0xe800000000	                          call 0x4004921	      2525	quickfix.c	FUNCTION_36	CALL_2
0x4004921	              0x55	                                push rbp	        33	stdio2.h	FUNCTION_127	CALL_1
0x4004922	    0x488b3d000000	            mov rdi, qword [0x04004929] 	        33	stdio2.h	FUNCTION_127	CALL_1
0x4004929	          0x4189d8	                            mov r8d, ebx	        33	stdio2.h	FUNCTION_127	CALL_1
0x400492c	            0x4156	                                push r14	        33	stdio2.h	FUNCTION_127	CALL_1
0x400492e	      0x448b4c2410	            mov r9d, dword [rsp + 0x10] 	        33	stdio2.h	FUNCTION_127	CALL_1
0x4004933	          0x4889c1	                            mov rcx, rax	        33	stdio2.h	FUNCTION_127	CALL_1
0x4004936	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_127	CALL_1
0x400493d	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_127	CALL_1
0x4004942	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_127	CALL_1
0x4004944	      0xe800000000	                          call 0x4004949	        33	stdio2.h	FUNCTION_127	CALL_1
0x4004949	    0x488b2d000000	            mov rbp, qword [0x04004950] 	      2530	quickfix.c	FUNCTION_36	CALL_5
0x4004950	          0x4889ef	                            mov rdi, rbp	      2530	quickfix.c	FUNCTION_36	CALL_5
0x4004953	      0xe800000000	                          call 0x4004958	      2530	quickfix.c	FUNCTION_36	CALL_5
0x4004958	      0x498b7c2438	            mov rdi, qword [r12 + 0x38] 	      2531	quickfix.c	FUNCTION_36	CALL_7
0x400495d	          0x4989c6	                            mov r14, rax	      2530	quickfix.c	FUNCTION_36	CALL_5
0x4004960	            0x4898	                                    cdqe	      2531	quickfix.c	FUNCTION_36	CALL_7
0x4004962	          0x4801c5	                            add rbp, rax	      2531	quickfix.c	FUNCTION_36	CALL_7
0x4004965	      0xe800000000	                          call 0x400496a	      2531	quickfix.c	FUNCTION_36	CALL_7
0x400496a	      0xba01040000	                          mov edx, 0x401	      2531	quickfix.c	FUNCTION_36	CALL_7
0x400496f	          0x4889ee	                            mov rsi, rbp	      2531	quickfix.c	FUNCTION_36	CALL_7
0x4004972	          0x4889c7	                            mov rdi, rax	      2531	quickfix.c	FUNCTION_36	CALL_7
0x4004975	          0x4429f2	                           sub edx, r14d	      2531	quickfix.c	FUNCTION_36	CALL_7
0x4004978	      0xe8c3b6ffff	                    call sym.qf_fmt_text	      2531	quickfix.c	FUNCTION_36	CALL_7
0x400497d	            0x4158	                                  pop r8	      2537	quickfix.c	FUNCTION_36	IF_2
0x400497f	            0x4159	                                  pop r9	      2537	quickfix.c	FUNCTION_36	IF_2
0x4004981	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2537	quickfix.c	FUNCTION_36	IF_2
0x4004986	    0x483b05000000	            cmp rax, qword [0x0400498d] 	      2537	quickfix.c	FUNCTION_36	IF_2
0x400498d	    0x8b2d00000000	            mov ebp, dword [0x04004993] 	      2536	quickfix.c	FUNCTION_36
0x4004993	     0xf8427020000	                            je 0x4004bc0	      2537	quickfix.c	FUNCTION_36	IF_2
0x4004999	    0x8b3d00000000	            mov edi, dword [0x0400499f] 	      2539	quickfix.c	FUNCTION_36	ELSE_1	IF_3	CALL_8
0x400499f	            0x85ff	                           test edi, edi	      2539	quickfix.c	FUNCTION_36	ELSE_1	IF_3	CALL_8
0x40049a1	     0xf848d000000	                            je 0x4004a34	      2539	quickfix.c	FUNCTION_36	ELSE_1	IF_3	CALL_8
0x40049a7	    0x488b3d000000	            mov rdi, qword [0x040049ae] 	      2541	quickfix.c	FUNCTION_36	CALL_9
0x40049ae	      0xba01000000	                              mov edx, 1	      2541	quickfix.c	FUNCTION_36	CALL_9
0x40049b3	            0x31f6	                            xor esi, esi	      2541	quickfix.c	FUNCTION_36	CALL_9
0x40049b5	      0xe800000000	                          call 0x40049ba	      2541	quickfix.c	FUNCTION_36	CALL_9
0x40049ba	    0x488b15000000	            mov rdx, qword [0x040049c1] 	      2541	quickfix.c	FUNCTION_36	CALL_9
0x40049c1	      0x4839542408	                cmp qword [rsp + 8], rdx	      2541	quickfix.c	FUNCTION_36	CALL_9
0x40049c6	    0x892d00000000	            mov dword [0x040049cc], ebp 	      2542	quickfix.c	FUNCTION_36
0x40049cc	        0x4c892424	                    mov qword [rsp], r12	      2542	quickfix.c	FUNCTION_36
0x40049d0	            0x89dd	                            mov ebp, ebx	      2542	quickfix.c	FUNCTION_36
0x40049d2	        0x4d634508	              movsxd r8, dword [r13 + 8]	      2542	quickfix.c	FUNCTION_36
0x40049d6	           0xf95c0	                                setne al	      2542	quickfix.c	FUNCTION_36
0x40049d9	          0x4421f8	                           and eax, r15d	      2542	quickfix.c	FUNCTION_36
0x40049dc	      0xe927f7ffff	                           jmp 0x4004108	      2542	quickfix.c	FUNCTION_36
0x40049e1	        0x8b74243c	            mov esi, dword [rsp + 0x3c] 	      2409	quickfix.c	FUNCTION_34	ELSE_2	IF_3	ELSE_3	IF_5	CALL_8
0x40049e5	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2409	quickfix.c	FUNCTION_34	ELSE_2	IF_3	ELSE_3	IF_5	CALL_8
0x40049ea	      0xe8e1b6ffff	                   call sym.qflist_valid	      2409	quickfix.c	FUNCTION_34	ELSE_2	IF_3	ELSE_3	IF_5	CALL_8
0x40049ef	            0x85c0	                           test eax, eax	      2409	quickfix.c	FUNCTION_34	ELSE_2	IF_3	ELSE_3	IF_5	CALL_8
0x40049f1	      0xba05000000	                              mov edx, 5	      2411	quickfix.c	FUNCTION_34	ELSE_2	IF_3	ELSE_3	IF_5	CALL_10
0x40049f6	      0xbe00000000	                              mov esi, 0	      2411	quickfix.c	FUNCTION_34	ELSE_2	IF_3	ELSE_3	IF_5	CALL_10
0x40049fb	     0xf859efeffff	                           jne 0x400489f	      2409	quickfix.c	FUNCTION_34	ELSE_2	IF_3	ELSE_3	IF_5	CALL_8
0x4004a01	      0xe9e2faffff	                           jmp 0x40044e8	      2409	quickfix.c	FUNCTION_34	ELSE_2	IF_3	ELSE_3	IF_5	CALL_8
0x4004a06	            0x89dd	                            mov ebp, ebx	      2173	quickfix.c	FUNCTION_32	ELSE_2	IF_6	CALL_4
0x4004a08	        0x4c892424	                    mov qword [rsp], r12	      2173	quickfix.c	FUNCTION_32	ELSE_2	IF_6	CALL_4
0x4004a0c	          0x4531f6	                          xor r14d, r14d	      2173	quickfix.c	FUNCTION_32	ELSE_2	IF_6	CALL_4
0x4004a0f	      0xe9def6ffff	                           jmp 0x40040f2	      2173	quickfix.c	FUNCTION_32	ELSE_2	IF_6	CALL_4
0x4004a14	    0x488b3d000000	            mov rdi, qword [0x04004a1b] 	      2620	quickfix.c	FUNCTION_37	IF_9	CALL_8
0x4004a1b	      0xe800000000	                          call 0x4004a20	      2620	quickfix.c	FUNCTION_37	IF_9	CALL_8
0x4004a20	    0x488b05000000	            mov rax, qword [0x04004a27] 	      2620	quickfix.c	FUNCTION_37	IF_9	CALL_8
0x4004a27	      0xe906f6ffff	                           jmp 0x4004032	      2620	quickfix.c	FUNCTION_37	IF_9	CALL_8
0x4004a2c	          0x4989cc	                            mov r12, rcx	      2131	quickfix.c	FUNCTION_31	WHILE_2
0x4004a2f	      0xe99cf5ffff	                           jmp 0x4003fd0	      2131	quickfix.c	FUNCTION_31	WHILE_2
0x4004a34	      0xbf4f000000	                           mov edi, 0x4f	      2539	quickfix.c	FUNCTION_36	ELSE_1	IF_3	CALL_8
0x4004a39	      0xe800000000	                          call 0x4004a3e	      2539	quickfix.c	FUNCTION_36	ELSE_1	IF_3	CALL_8
0x4004a3e	            0x85c0	                           test eax, eax	      2539	quickfix.c	FUNCTION_36	ELSE_1	IF_3	CALL_8
0x4004a40	     0xf8461ffffff	                            je 0x40049a7	      2539	quickfix.c	FUNCTION_36	ELSE_1	IF_3	CALL_8
0x4004a46	    0xc70500000000	               mov dword [0x04004a50], 0	      2540	quickfix.c	FUNCTION_36	ELSE_1	IF_3
0x4004a50	      0xe952ffffff	                           jmp 0x40049a7	      2540	quickfix.c	FUNCTION_36	ELSE_1	IF_3
0x4004a55	      0xba05000000	                              mov edx, 5	      2525	quickfix.c	FUNCTION_36	CALL_2
0x4004a5a	      0xbe00000000	                              mov esi, 0	      2525	quickfix.c	FUNCTION_36	CALL_2
0x4004a5f	            0x31ff	                            xor edi, edi	      2525	quickfix.c	FUNCTION_36	CALL_2
0x4004a61	      0xe800000000	                          call 0x4004a66	      2525	quickfix.c	FUNCTION_36	CALL_2
0x4004a66	          0x4989c6	                            mov r14, rax	      2525	quickfix.c	FUNCTION_36	CALL_2
0x4004a69	      0xe986feffff	                           jmp 0x40048f4	      2525	quickfix.c	FUNCTION_36	CALL_2
0x4004a6e	      0xe800000000	                          call 0x4004a73	      2524	quickfix.c	FUNCTION_36	CALL_1
0x4004a73	      0xe957feffff	                           jmp 0x40048cf	      2524	quickfix.c	FUNCTION_36	CALL_1
0x4004a78	            0x89eb	                            mov ebx, ebp	      2588	quickfix.c	FUNCTION_37
0x4004a7a	        0x488b0c24	                    mov rcx, qword [rsp]	      2586	quickfix.c	FUNCTION_37
0x4004a7e	      0xe93df7ffff	                           jmp 0x40041c0	      2586	quickfix.c	FUNCTION_37
0x4004a83	        0x488b0c24	                    mov rcx, qword [rsp]	      2125	quickfix.c	FUNCTION_31	WHILE_1
0x4004a87	      0xe934f7ffff	                           jmp 0x40041c0	      2125	quickfix.c	FUNCTION_31	WHILE_1
0x4004a8c	      0x4889542428	             mov qword [rsp + 0x28], rdx	      2125	quickfix.c	FUNCTION_31	WHILE_1
0x4004a91	          0x4531f6	                          xor r14d, r14d	      2249	quickfix.c	FUNCTION_33	IF_5	FUNCTION_1	IF_1	CALL_1
0x4004a94	      0xe800000000	                          call 0x4004a99	      2249	quickfix.c	FUNCTION_33	IF_5	FUNCTION_1	IF_1	CALL_1
0x4004a99	    0x4c8b05000000	              mov r8, qword [0x04004aa0]	      2249	quickfix.c	FUNCTION_33	IF_5	FUNCTION_1	IF_1	CALL_1
0x4004aa0	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      2249	quickfix.c	FUNCTION_33	IF_5	FUNCTION_1	IF_1	CALL_1
0x4004aa5	      0xe9bffbffff	                           jmp 0x4004669	      2249	quickfix.c	FUNCTION_33	IF_5	FUNCTION_1	IF_1	CALL_1
0x4004aaa	          0x4531f6	                          xor r14d, r14d	      2229	quickfix.c	FUNCTION_33	IF_3	IF_4
0x4004aad	      0xe9b7fbffff	                           jmp 0x4004669	      2229	quickfix.c	FUNCTION_33	IF_3	IF_4
0x4004ab2	    0x418b8e000000	                    mov ecx, dword [r14]	      1992	quickfix.c	FUNCTION_27	FOR_1
0x4004ab9	    0x498b86000000	                    mov rax, qword [r14]	      1992	quickfix.c	FUNCTION_27	FOR_1
0x4004ac0	          0x83f900	                              cmp ecx, 0	      1992	quickfix.c	FUNCTION_27	FOR_1
0x4004ac3	     0xf8e25030000	                           jle 0x4004dee	      1992	quickfix.c	FUNCTION_27	FOR_1
0x4004ac9	          0x4939c4	                            cmp r12, rax	      1994	quickfix.c	FUNCTION_27	FOR_1	IF_1
0x4004acc	     0xf84cdfdffff	                            je 0x400489f	      1994	quickfix.c	FUNCTION_27	FOR_1	IF_1
0x4004ad2	          0x4885c0	                           test rax, rax	      1994	quickfix.c	FUNCTION_27	FOR_1	IF_1
0x4004ad5	     0xf84c4fdffff	                            je 0x400489f	      1994	quickfix.c	FUNCTION_27	FOR_1	IF_1
0x4004adb	            0x31d2	                            xor edx, edx	      1994	quickfix.c	FUNCTION_27	FOR_1	IF_1
0x4004add	            0xeb12	                           jmp 0x4004af1	      1994	quickfix.c	FUNCTION_27	FOR_1	IF_1
0x4004adf	          0x4885c0	                           test rax, rax	      1994	quickfix.c	FUNCTION_27	FOR_1	IF_1
0x4004ae2	     0xf84b7fdffff	                            je 0x400489f	      1994	quickfix.c	FUNCTION_27	FOR_1	IF_1
0x4004ae8	          0x4939c4	                            cmp r12, rax	      1994	quickfix.c	FUNCTION_27	FOR_1	IF_1
0x4004aeb	     0xf84aefdffff	                            je 0x400489f	      1994	quickfix.c	FUNCTION_27	FOR_1	IF_1
0x4004af1	          0x83c201	                              add edx, 1	      1993	quickfix.c	FUNCTION_27	FOR_1
0x4004af4	          0x488b00	                    mov rax, qword [rax]	      1993	quickfix.c	FUNCTION_27	FOR_1
0x4004af7	            0x39ca	                            cmp edx, ecx	      1992	quickfix.c	FUNCTION_27	FOR_1
0x4004af9	            0x75e4	                           jne 0x4004adf	      1992	quickfix.c	FUNCTION_27	FOR_1
0x4004afb	      0xe9def9ffff	                           jmp 0x40044de	      1992	quickfix.c	FUNCTION_27	FOR_1
0x4004b00	          0x4589fe	                          mov r14d, r15d	      1992	quickfix.c	FUNCTION_27	FOR_1
0x4004b03	      0xe800000000	                          call 0x4004b08	      2381	quickfix.c	FUNCTION_34	IF_1	IF_2	CALL_2
0x4004b08	        0x4183e601	                             and r14d, 1	      2381	quickfix.c	FUNCTION_34	IF_1	IF_2	CALL_2
0x4004b0c	      0xe9a0fdffff	                           jmp 0x40048b1	      2381	quickfix.c	FUNCTION_34	IF_1	IF_2	CALL_2
0x4004b11	          0x4531f6	                          xor r14d, r14d	      2266	quickfix.c	FUNCTION_33	IF_6	IF_8	CALL_5
0x4004b14	      0xe9d9f5ffff	                           jmp 0x40040f2	      2266	quickfix.c	FUNCTION_33	IF_6	IF_8	CALL_5
0x4004b19	    0x488b3d000000	            mov rdi, qword [0x04004b20] 	      2261	quickfix.c	FUNCTION_33	IF_6	CALL_4
0x4004b20	      0x4889542428	             mov qword [rsp + 0x28], rdx	      2261	quickfix.c	FUNCTION_33	IF_6	CALL_4
0x4004b25	      0xe800000000	                          call 0x4004b2a	      2261	quickfix.c	FUNCTION_33	IF_6	CALL_4
0x4004b2a	            0x85c0	                           test eax, eax	      2261	quickfix.c	FUNCTION_33	IF_6	CALL_4
0x4004b2c	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      2261	quickfix.c	FUNCTION_33	IF_6	CALL_4
0x4004b31	     0xf8548fcffff	                           jne 0x400477f	      2261	quickfix.c	FUNCTION_33	IF_6	CALL_4
0x4004b37	      0xe93afbffff	                           jmp 0x4004676	      2261	quickfix.c	FUNCTION_33	IF_6	CALL_4
0x4004b3c	         0xf1f4000	                         nop dword [rax]	      2261	quickfix.c	FUNCTION_33	IF_6	CALL_4
0x4004b40	      0xe800000000	                          call 0x4004b45	      2474	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	CALL_1
0x4004b45	    0x4c8b05000000	              mov r8, qword [0x04004b4c]	      2476	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1
0x4004b4c	        0x418b4840	              mov ecx, dword [r8 + 0x40]	      2476	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1
0x4004b50	            0x85c9	                           test ecx, ecx	      2476	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1
0x4004b52	     0xf8eedfcffff	                           jle 0x4004845	      2476	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1
0x4004b58	           0xfb638	                   movzx edi, byte [rax]	      2478	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_6
0x4004b5b	          0x4084ff	                           test dil, dil	      2478	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_6
0x4004b5e	     0xf84e1fcffff	                            je 0x4004845	      2478	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_6
0x4004b64	            0x31d2	                            xor edx, edx	      2478	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_6
0x4004b66	            0x31f6	                            xor esi, esi	      2478	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_6
0x4004b68	    0x41ba08000000	                             mov r10d, 8	      2483	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x4004b6e	            0xeb1e	                           jmp 0x4004b8e	      2483	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x4004b70	        0x418b4840	              mov ecx, dword [r8 + 0x40]	      2483	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x4004b74	          0x83c601	                              add esi, 1	      2486	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	ELSE_1
0x4004b77	          0x83c201	                              add edx, 1	      2476	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1
0x4004b7a	            0x39d1	                            cmp ecx, edx	      2476	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1
0x4004b7c	     0xf8ec3fcffff	                           jle 0x4004845	      2476	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1
0x4004b82	           0xfb638	                   movzx edi, byte [rax]	      2478	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_6
0x4004b85	          0x4084ff	                           test dil, dil	      2478	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_6
0x4004b88	     0xf84b7fcffff	                            je 0x4004845	      2478	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_6
0x4004b8e	        0x4883c001	                              add rax, 1	      2480	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x4004b92	        0x4080ff09	                              cmp dil, 9	      2480	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x4004b96	            0x75d8	                           jne 0x4004b70	      2480	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x4004b98	          0x4189f1	                            mov r9d, esi	      2482	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x4004b9b	          0x4589d3	                          mov r11d, r10d	      2483	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x4004b9e	        0x41c1f91f	                           sar r9d, 0x1f	      2482	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x4004ba2	        0x41c1e91d	                           shr r9d, 0x1d	      2482	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x4004ba6	        0x428d3c0e	                     lea edi, [rsi + r9]	      2482	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x4004baa	          0x83e707	                              and edi, 7	      2482	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x4004bad	          0x4429cf	                            sub edi, r9d	      2482	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x4004bb0	        0x8d4c39f9	                lea ecx, [rcx + rdi - 7]	      2482	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x4004bb4	          0x4129fb	                           sub r11d, edi	      2483	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x4004bb7	          0x4401de	                           add esi, r11d	      2483	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x4004bba	        0x41894840	              mov dword [r8 + 0x40], ecx	      2482	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x4004bbe	            0xebb7	                           jmp 0x4004b77	      2482	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x4004bc0	    0x488b05000000	            mov rax, qword [0x04004bc7] 	      2537	quickfix.c	FUNCTION_36	IF_2
0x4004bc7	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      2537	quickfix.c	FUNCTION_36	IF_2
0x4004bcc	        0x483b5038	            cmp rdx, qword [rax + 0x38] 	      2537	quickfix.c	FUNCTION_36	IF_2
0x4004bd0	     0xf85c3fdffff	                           jne 0x4004999	      2537	quickfix.c	FUNCTION_36	IF_2
0x4004bd6	    0xc70500000000	               mov dword [0x04004be0], 1	      2538	quickfix.c	FUNCTION_36	IF_2
0x4004be0	      0xe9c2fdffff	                           jmp 0x40049a7	      2538	quickfix.c	FUNCTION_36	IF_2
0x4004be5	    0x488b15000000	            mov rdx, qword [0x04004bec] 	      2538	quickfix.c	FUNCTION_36	IF_2
0x4004bec	            0x89dd	                            mov ebp, ebx	      2173	quickfix.c	FUNCTION_32	ELSE_2	IF_6	CALL_4
0x4004bee	        0x4c892424	                    mov qword [rsp], r12	      2173	quickfix.c	FUNCTION_32	ELSE_2	IF_6	CALL_4
0x4004bf2	    0x4c6305000000	          movsxd r8, dword [0x04004bf9] 	      2173	quickfix.c	FUNCTION_32	ELSE_2	IF_6	CALL_4
0x4004bf9	      0xe90af5ffff	                           jmp 0x4004108	      2173	quickfix.c	FUNCTION_32	ELSE_2	IF_6	CALL_4
0x4004bfe	            0x31ff	                            xor edi, edi	      2266	quickfix.c	FUNCTION_33	IF_6	IF_8	CALL_5
0x4004c00	      0xbe40000000	                           mov esi, 0x40	      2266	quickfix.c	FUNCTION_33	IF_6	IF_8	CALL_5
0x4004c05	      0xe800000000	                          call 0x4004c0a	      2266	quickfix.c	FUNCTION_33	IF_6	IF_8	CALL_5
0x4004c0a	            0x85c0	                           test eax, eax	      2266	quickfix.c	FUNCTION_33	IF_6	IF_8	CALL_5
0x4004c0c	     0xf84fffeffff	                            je 0x4004b11	      2266	quickfix.c	FUNCTION_33	IF_6	IF_8	CALL_5
0x4004c12	    0x488b05000000	            mov rax, qword [0x04004c19] 	      2269	quickfix.c	FUNCTION_33	IF_6
0x4004c19	    0xc70500000000	               mov dword [0x04004c23], 0	      2270	quickfix.c	FUNCTION_33	IF_6
0x4004c23	    0x41bf01000000	                             mov r15d, 1	      2268	quickfix.c	FUNCTION_33	IF_6
0x4004c29	    0x488905000000	            mov qword [0x04004c30], rax 	      2269	quickfix.c	FUNCTION_33	IF_6
0x4004c30	    0x488b05000000	            mov rax, qword [0x04004c37] 	      2271	quickfix.c	FUNCTION_33	IF_6	CALL_6
0x4004c37	    0xc78088020000	              mov dword [rax + 0x288], 0	      2271	quickfix.c	FUNCTION_33	IF_6	CALL_6
0x4004c41	    0xc780b0020000	              mov dword [rax + 0x2b0], 0	      2271	quickfix.c	FUNCTION_33	IF_6	CALL_6
0x4004c4b	      0xe9e2f3ffff	                           jmp 0x4004032	      2271	quickfix.c	FUNCTION_33	IF_6	CALL_6
0x4004c50	    0x4c8b35000000	            mov r14, qword [0x04004c57] 	      2289	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	CALL_7
0x4004c57	          0x4d85f6	                           test r14, r14	      2289	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	CALL_7
0x4004c5a	            0x741a	                            je 0x4004c76	      2289	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	CALL_7
0x4004c5c	        0x498b4608	                mov rax, qword [r14 + 8]	      2290	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_12
0x4004c60	    0x443bb8b80000	           cmp r15d, dword [rax + 0xb8] 	      2290	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_12
0x4004c67	     0xf8427faffff	                            je 0x4004694	      2290	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_12
0x4004c6d	        0x4d8b7620	            mov r14, qword [r14 + 0x20] 	      2289	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	CALL_7
0x4004c71	          0x4d85f6	                           test r14, r14	      2289	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	CALL_7
0x4004c74	            0x75e6	                           jne 0x4004c5c	      2289	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	CALL_7
0x4004c76	    0x488b05000000	            mov rax, qword [0x04004c7d] 	      2301	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_13	DO_1	IF_15
0x4004c7d	          0x4989f6	                            mov r14, rsi	      2301	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_13	DO_1	IF_15
0x4004c80	            0xeb14	                           jmp 0x4004c96	      2301	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_13	DO_1	IF_15
0x4004c82	        0x4d8b7618	            mov r14, qword [r14 + 0x18] 	      2300	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_13	DO_1	IF_15
0x4004c86	          0x4d85f6	                           test r14, r14	      2301	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_13	DO_1	IF_15
0x4004c89	        0x4c0f44f0	                          cmove r14, rax	      2301	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_13	DO_1	IF_15
0x4004c8d	          0x4c39f6	                            cmp rsi, r14	      2304	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_13	DO_1
0x4004c90	     0xf84fef9ffff	                            je 0x4004694	      2304	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_13	DO_1
0x4004c96	        0x498b4e08	                mov rcx, qword [r14 + 8]	      2298	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_13	DO_1	IF_14
0x4004c9a	    0x488b89181400	          mov rcx, qword [rcx + 0x1418] 	      2298	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_13	DO_1	IF_14
0x4004ca1	          0x803900	                       cmp byte [rcx], 0	      2298	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_13	DO_1	IF_14
0x4004ca4	            0x75dc	                           jne 0x4004c82	      2298	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_13	DO_1	IF_14
0x4004ca6	      0xe9e9f9ffff	                           jmp 0x4004694	      2298	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_13	DO_1	IF_14
0x4004cab	       0xf1f440000	                   nop dword [rax + rax]	      2298	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_13	DO_1	IF_14
0x4004cb0	          0x4531f6	                          xor r14d, r14d	      2282	quickfix.c	FUNCTION_33	ELSE_1	IF_10
0x4004cb3	          0x4c89ea	                            mov rdx, r13	      2282	quickfix.c	FUNCTION_33	ELSE_1	IF_10
0x4004cb6	        0x895c2428	             mov dword [rsp + 0x28], ebx	      2282	quickfix.c	FUNCTION_33	ELSE_1	IF_10
0x4004cba	          0x4189ed	                           mov r13d, ebp	      2282	quickfix.c	FUNCTION_33	ELSE_1	IF_10
0x4004cbd	        0x488b4608	                mov rax, qword [rsi + 8]	      2282	quickfix.c	FUNCTION_33	ELSE_1	IF_10
0x4004cc1	          0x4489fd	                           mov ebp, r15d	      2282	quickfix.c	FUNCTION_33	ELSE_1	IF_10
0x4004cc4	          0x4889f3	                            mov rbx, rsi	      2282	quickfix.c	FUNCTION_33	ELSE_1	IF_10
0x4004cc7	          0x4d89f7	                            mov r15, r14	      2282	quickfix.c	FUNCTION_33	ELSE_1	IF_10
0x4004cca	          0x4989d6	                            mov r14, rdx	      2282	quickfix.c	FUNCTION_33	ELSE_1	IF_10
0x4004ccd	            0xeb05	                           jmp 0x4004cd4	      2282	quickfix.c	FUNCTION_33	ELSE_1	IF_10
0x4004ccf	              0x90	                                     nop	      2282	quickfix.c	FUNCTION_33	ELSE_1	IF_10
0x4004cd0	        0x488b4308	                mov rax, qword [rbx + 8]	      2282	quickfix.c	FUNCTION_33	ELSE_1	IF_10
0x4004cd4	    0x3ba8b8000000	            cmp ebp, dword [rax + 0xb8] 	      2328	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	IF_17
0x4004cda	            0x7462	                            je 0x4004d3e	      2328	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	IF_17
0x4004cdc	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      2330	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	IF_18
0x4004ce0	          0x4885db	                           test rbx, rbx	      2331	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	IF_18
0x4004ce3	    0x480f441d0000	           cmove rbx, qword [0x04004ceb]	      2331	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	IF_18
0x4004ceb	        0x488b7b08	                mov rdi, qword [rbx + 8]	      2335	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	ELSE_4	IF_19
0x4004cef	      0xe800000000	                          call 0x4004cf4	      2335	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	ELSE_4	IF_19
0x4004cf4	            0x85c0	                           test eax, eax	      2335	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	ELSE_4	IF_19
0x4004cf6	            0x740a	                            je 0x4004d02	      2335	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	ELSE_4	IF_19
0x4004cf8	    0x4883bb501900	             cmp qword [rbx + 0x1950], 0	      2335	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	ELSE_4	IF_19
0x4004d00	            0x7460	                            je 0x4004d62	      2335	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	ELSE_4	IF_19
0x4004d02	          0x4d85ff	                           test r15, r15	      2349	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	IF_22
0x4004d05	            0x75c9	                           jne 0x4004cd0	      2349	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	IF_22
0x4004d07	    0x448b83500200	           mov r8d, dword [rbx + 0x250] 	      2349	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	IF_22
0x4004d0e	          0x4585c0	                           test r8d, r8d	      2349	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	IF_22
0x4004d11	            0x75bd	                           jne 0x4004cd0	      2349	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	IF_22
0x4004d13	        0x488b4308	                mov rax, qword [rbx + 8]	      2350	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	IF_22
0x4004d17	    0x488b88181400	          mov rcx, qword [rax + 0x1418] 	      2350	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	IF_22
0x4004d1e	          0x803900	                       cmp byte [rcx], 0	      2350	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	IF_22
0x4004d21	        0x4c0f44fb	                          cmove r15, rbx	      2350	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	IF_22
0x4004d25	            0xebad	                           jmp 0x4004cd4	      2350	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	IF_22
0x4004d27	      0xbf05000000	                              mov edi, 5	      2492	quickfix.c	FUNCTION_35	IF_1	CALL_3
0x4004d2c	      0xe800000000	                          call 0x4004d31	      2492	quickfix.c	FUNCTION_35	IF_1	CALL_3
0x4004d31	      0xe98cf3ffff	                           jmp 0x40040c2	      2492	quickfix.c	FUNCTION_35	IF_1	CALL_3
0x4004d36	          0x4c89c6	                             mov rsi, r8	      2245	quickfix.c	FUNCTION_33	IF_5
0x4004d39	      0xe927faffff	                           jmp 0x4004765	      2245	quickfix.c	FUNCTION_33	IF_5
0x4004d3e	          0x4889de	                            mov rsi, rbx	      2245	quickfix.c	FUNCTION_33	IF_5
0x4004d41	        0x8b5c2428	            mov ebx, dword [rsp + 0x28] 	      2245	quickfix.c	FUNCTION_33	IF_5
0x4004d45	          0x4489ed	                           mov ebp, r13d	      2245	quickfix.c	FUNCTION_33	IF_5
0x4004d48	          0x4d89f5	                            mov r13, r14	      2245	quickfix.c	FUNCTION_33	IF_5
0x4004d4b	          0x4889f7	                            mov rdi, rsi	      2354	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	CALL_9
0x4004d4e	          0x4531ff	                          xor r15d, r15d	      2354	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	CALL_9
0x4004d51	      0xe800000000	                          call 0x4004d56	      2354	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	CALL_9
0x4004d56	    0x488b05000000	            mov rax, qword [0x04004d5d] 	      2354	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	CALL_9
0x4004d5d	      0xe9d0f2ffff	                           jmp 0x4004032	      2354	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	CALL_9
0x4004d62	          0x4d85ff	                           test r15, r15	      2339	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	ELSE_4	IF_19	IF_20
0x4004d65	          0x4489ed	                           mov ebp, r13d	      2339	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	ELSE_4	IF_19	IF_20
0x4004d68	        0x8b5c2428	            mov ebx, dword [rsp + 0x28] 	      2339	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	ELSE_4	IF_19	IF_20
0x4004d6c	          0x4d89f5	                            mov r13, r14	      2339	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	ELSE_4	IF_19	IF_20
0x4004d6f	          0x4c89fe	                            mov rsi, r15	      2339	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	ELSE_4	IF_19	IF_20
0x4004d72	            0x75d7	                           jne 0x4004d4b	      2339	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	ELSE_4	IF_19	IF_20
0x4004d74	    0x488b05000000	            mov rax, qword [0x04004d7b] 	      2341	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	ELSE_4	IF_19	ELSE_5	IF_21
0x4004d7b	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      2341	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	ELSE_4	IF_19	ELSE_5	IF_21
0x4004d7f	          0x4885f6	                           test rsi, rsi	      2341	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	ELSE_4	IF_19	ELSE_5	IF_21
0x4004d82	            0x75c7	                           jne 0x4004d4b	      2341	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	ELSE_4	IF_19	ELSE_5	IF_21
0x4004d84	        0x488b7020	            mov rsi, qword [rax + 0x20] 	      2344	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	ELSE_4	IF_19	ELSE_6
0x4004d88	            0xebc1	                           jmp 0x4004d4b	      2344	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	ELSE_4	IF_19	ELSE_6
0x4004d8a	    0x660f1f440000	                    nop word [rax + rax]	      2344	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	ELSE_4	IF_19	ELSE_6
0x4004d90	          0x4531c0	                            xor r8d, r8d	      2228	quickfix.c	FUNCTION_33	IF_3	CALL_3
0x4004d93	      0xe98df9ffff	                           jmp 0x4004725	      2228	quickfix.c	FUNCTION_33	IF_3	CALL_3
0x4004d98	            0x89dd	                            mov ebp, ebx	      2228	quickfix.c	FUNCTION_33	IF_3	CALL_3
0x4004d9a	    0x48c704240000	                      mov qword [rsp], 0	      2228	quickfix.c	FUNCTION_33	IF_3	CALL_3
0x4004da2	      0xe98ff7ffff	                           jmp 0x4004536	      2228	quickfix.c	FUNCTION_33	IF_3	CALL_3
0x4004da7	            0x31c0	                            xor eax, eax	      2228	quickfix.c	FUNCTION_33	IF_3	CALL_3
0x4004da9	          0x4d85e4	                           test r12, r12	      2593	quickfix.c	FUNCTION_37	IF_3	IF_4
0x4004dac	      0x488b542408	                mov rdx, qword [rsp + 8]	      2593	quickfix.c	FUNCTION_37	IF_3	IF_4
0x4004db1	     0xf8451f3ffff	                            je 0x4004108	      2593	quickfix.c	FUNCTION_37	IF_3	IF_4
0x4004db7	      0xe914f2ffff	                           jmp 0x4003fd0	      2593	quickfix.c	FUNCTION_37	IF_3	IF_4
0x4004dbc	    0x488b3d000000	            mov rdi, qword [0x04004dc3] 	      2261	quickfix.c	FUNCTION_33	IF_6	CALL_4
0x4004dc3	      0x4889542428	             mov qword [rsp + 0x28], rdx	      2261	quickfix.c	FUNCTION_33	IF_6	CALL_4
0x4004dc8	      0xe800000000	                          call 0x4004dcd	      2261	quickfix.c	FUNCTION_33	IF_6	CALL_4
0x4004dcd	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      2261	quickfix.c	FUNCTION_33	IF_6	CALL_4
0x4004dd2	      0xe9a8f9ffff	                           jmp 0x400477f	      2261	quickfix.c	FUNCTION_33	IF_6	CALL_4
0x4004dd7	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2656	quickfix.c	FUNCTION_37	IF_14	IF_15
0x4004ddc	    0x483b05000000	            cmp rax, qword [0x04004de3] 	      2656	quickfix.c	FUNCTION_37	IF_14	IF_15
0x4004de3	     0xf8570f2ffff	                           jne 0x4004059	      2656	quickfix.c	FUNCTION_37	IF_14	IF_15
0x4004de9	      0xe966f2ffff	                           jmp 0x4004054	      2656	quickfix.c	FUNCTION_37	IF_14	IF_15
0x4004dee	     0xf85abfaffff	                           jne 0x400489f	      1997	quickfix.c	FUNCTION_27	IF_2
0x4004df4	      0xe9e5f6ffff	                           jmp 0x40044de	      1997	quickfix.c	FUNCTION_27	IF_2
qf_grow_linebuf	CALL,2:ELSE,1:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,4:functions,0	34
0x40007b0	              0x53	                                push rbx	       527	quickfix.c	FUNCTION_5
0x40007b1	          0x4889fb	                            mov rbx, rdi	       527	quickfix.c	FUNCTION_5
0x40007b4	    0x81fe01100000	                         cmp esi, 0x1001	       532	quickfix.c	FUNCTION_5
0x40007ba	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       533	quickfix.c	FUNCTION_5	IF_1
0x40007be	      0xbfff0f0000	                          mov edi, 0xfff	       532	quickfix.c	FUNCTION_5
0x40007c3	           0xf4df7	                         cmovge esi, edi	       532	quickfix.c	FUNCTION_5
0x40007c6	          0x897308	                mov dword [rbx + 8], esi	       532	quickfix.c	FUNCTION_5
0x40007c9	          0x4885c0	                           test rax, rax	       533	quickfix.c	FUNCTION_5	IF_1
0x40007cc	            0x7432	                            je 0x4000800	       533	quickfix.c	FUNCTION_5	IF_1
0x40007ce	          0x3b7318	            cmp esi, dword [rbx + 0x18] 	       540	quickfix.c	FUNCTION_5	ELSE_1	IF_3
0x40007d1	            0x7f05	                            jg 0x40007d8	       540	quickfix.c	FUNCTION_5	ELSE_1	IF_3
0x40007d3	              0x5b	                                 pop rbx	       548	quickfix.c	FUNCTION_5
0x40007d4	              0xc3	                                     ret	       548	quickfix.c	FUNCTION_5
0x40007d5	           0xf1f00	                         nop dword [rax]	       548	quickfix.c	FUNCTION_5
0x40007d8	          0x83c601	                              add esi, 1	       542	quickfix.c	FUNCTION_5	ELSE_1	IF_3	CALL_2
0x40007db	          0x4889c7	                            mov rdi, rax	       542	quickfix.c	FUNCTION_5	ELSE_1	IF_3	CALL_2
0x40007de	          0x4863f6	                         movsxd rsi, esi	       542	quickfix.c	FUNCTION_5	ELSE_1	IF_3	CALL_2
0x40007e1	      0xe800000000	                          call 0x40007e6	       542	quickfix.c	FUNCTION_5	ELSE_1	IF_3	CALL_2
0x40007e6	          0x4885c0	                           test rax, rax	       543	quickfix.c	FUNCTION_5	ELSE_1	IF_3	IF_4
0x40007e9	        0x48894310	             mov qword [rbx + 0x10], rax	       542	quickfix.c	FUNCTION_5	ELSE_1	IF_3	CALL_2
0x40007ed	            0x7422	                            je 0x4000811	       543	quickfix.c	FUNCTION_5	ELSE_1	IF_3	IF_4
0x40007ef	          0x8b5308	                mov edx, dword [rbx + 8]	       545	quickfix.c	FUNCTION_5	ELSE_1	IF_3
0x40007f2	          0x895318	             mov dword [rbx + 0x18], edx	       545	quickfix.c	FUNCTION_5	ELSE_1	IF_3
0x40007f5	              0x5b	                                 pop rbx	       548	quickfix.c	FUNCTION_5
0x40007f6	              0xc3	                                     ret	       548	quickfix.c	FUNCTION_5
0x40007f7	    0x660f1f840000	                    nop word [rax + rax]	       548	quickfix.c	FUNCTION_5
0x4000800	          0x8d7e01	                      lea edi, [rsi + 1]	       535	quickfix.c	FUNCTION_5	IF_1	CALL_1
0x4000803	      0xe800000000	                          call 0x4000808	       535	quickfix.c	FUNCTION_5	IF_1	CALL_1
0x4000808	          0x4885c0	                           test rax, rax	       536	quickfix.c	FUNCTION_5	IF_1	IF_2
0x400080b	        0x48894310	             mov qword [rbx + 0x10], rax	       535	quickfix.c	FUNCTION_5	IF_1	CALL_1
0x400080f	            0x75de	                           jne 0x40007ef	       536	quickfix.c	FUNCTION_5	IF_1	IF_2
0x4000811	            0x31c0	                            xor eax, eax	       537	quickfix.c	FUNCTION_5	IF_1	IF_2
0x4000813	              0x5b	                                 pop rbx	       548	quickfix.c	FUNCTION_5
0x4000814	              0xc3	                                     ret	       548	quickfix.c	FUNCTION_5
set_ref_in_quickfix	CALL,1:ELSE,0:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,1:functions,1	52
0x4008cd0	            0x4154	                                push r12	      5812	quickfix.c	FUNCTION_107
0x4008cd2	              0x55	                                push rbp	      5812	quickfix.c	FUNCTION_107
0x4008cd3	            0x89fe	                            mov esi, edi	      5817	quickfix.c	FUNCTION_107	CALL_1
0x4008cd5	              0x53	                                push rbx	      5812	quickfix.c	FUNCTION_107
0x4008cd6	            0x89fd	                            mov ebp, edi	      5812	quickfix.c	FUNCTION_107
0x4008cd8	      0xbf00000000	                              mov edi, 0	      5817	quickfix.c	FUNCTION_107	CALL_1
0x4008cdd	      0xe8ae84ffff	              call sym.mark_quickfix_ctx	      5817	quickfix.c	FUNCTION_107	CALL_1
0x4008ce2	            0x85c0	                           test eax, eax	      5818	quickfix.c	FUNCTION_107	IF_1
0x4008ce4	            0x756b	                           jne 0x4008d51	      5818	quickfix.c	FUNCTION_107	IF_1
0x4008ce6	    0x4c8b25000000	            mov r12, qword [0x04008ced] 	      5821	quickfix.c	FUNCTION_107
0x4008ced	          0x4d85e4	                           test r12, r12	      5821	quickfix.c	FUNCTION_107
0x4008cf0	            0x7477	                            je 0x4008d69	      5821	quickfix.c	FUNCTION_107
0x4008cf2	    0x4c3b25000000	            cmp r12, qword [0x04008cf9] 	      5821	quickfix.c	FUNCTION_107
0x4008cf9	            0x7472	                            je 0x4008d6d	      5821	quickfix.c	FUNCTION_107
0x4008cfb	      0x498b5c2420	            mov rbx, qword [r12 + 0x20] 	      5821	quickfix.c	FUNCTION_107
0x4008d00	            0xeb0a	                           jmp 0x4008d0c	      5821	quickfix.c	FUNCTION_107
0x4008d02	    0x660f1f440000	                    nop word [rax + rax]	      5821	quickfix.c	FUNCTION_107
0x4008d08	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      5821	quickfix.c	FUNCTION_107
0x4008d0c	          0x4885db	                           test rbx, rbx	      5821	quickfix.c	FUNCTION_107
0x4008d0f	            0x744f	                            je 0x4008d60	      5821	quickfix.c	FUNCTION_107
0x4008d11	    0x488bbb481900	          mov rdi, qword [rbx + 0x1948] 	      5823	quickfix.c	FUNCTION_107	FUNCTION_1	IF_1
0x4008d18	          0x4885ff	                           test rdi, rdi	      5823	quickfix.c	FUNCTION_107	FUNCTION_1	IF_1
0x4008d1b	            0x740b	                            je 0x4008d28	      5823	quickfix.c	FUNCTION_107	FUNCTION_1	IF_1
0x4008d1d	            0x89ee	                            mov esi, ebp	      5825	quickfix.c	FUNCTION_107	FUNCTION_1	IF_1	CALL_1
0x4008d1f	      0xe86c84ffff	              call sym.mark_quickfix_ctx	      5825	quickfix.c	FUNCTION_107	FUNCTION_1	IF_1	CALL_1
0x4008d24	            0x85c0	                           test eax, eax	      5826	quickfix.c	FUNCTION_107	FUNCTION_1	IF_1	IF_2
0x4008d26	            0x7529	                           jne 0x4008d51	      5826	quickfix.c	FUNCTION_107	FUNCTION_1	IF_1	IF_2
0x4008d28	        0x488b7b08	                mov rdi, qword [rbx + 8]	      5829	quickfix.c	FUNCTION_107	FUNCTION_1	IF_3
0x4008d2c	      0xe800000000	                          call 0x4008d31	      5829	quickfix.c	FUNCTION_107	FUNCTION_1	IF_3
0x4008d31	            0x85c0	                           test eax, eax	      5829	quickfix.c	FUNCTION_107	FUNCTION_1	IF_3
0x4008d33	            0x74d3	                            je 0x4008d08	      5829	quickfix.c	FUNCTION_107	FUNCTION_1	IF_3
0x4008d35	    0x488bbb501900	          mov rdi, qword [rbx + 0x1950] 	      5829	quickfix.c	FUNCTION_107	FUNCTION_1	IF_3
0x4008d3c	          0x4885ff	                           test rdi, rdi	      5829	quickfix.c	FUNCTION_107	FUNCTION_1	IF_3
0x4008d3f	            0x74c7	                            je 0x4008d08	      5829	quickfix.c	FUNCTION_107	FUNCTION_1	IF_3
0x4008d41	          0x833f01	                      cmp dword [rdi], 1	      5829	quickfix.c	FUNCTION_107	FUNCTION_1	IF_3
0x4008d44	            0x75c2	                           jne 0x4008d08	      5829	quickfix.c	FUNCTION_107	FUNCTION_1	IF_3
0x4008d46	            0x89ee	                            mov esi, ebp	      5835	quickfix.c	FUNCTION_107	FUNCTION_1	IF_3	CALL_2
0x4008d48	      0xe84384ffff	              call sym.mark_quickfix_ctx	      5835	quickfix.c	FUNCTION_107	FUNCTION_1	IF_3	CALL_2
0x4008d4d	            0x85c0	                           test eax, eax	      5836	quickfix.c	FUNCTION_107	FUNCTION_1	IF_3	IF_4
0x4008d4f	            0x74b7	                            je 0x4008d08	      5836	quickfix.c	FUNCTION_107	FUNCTION_1	IF_3	IF_4
0x4008d51	              0x5b	                                 pop rbx	      5842	quickfix.c	FUNCTION_107
0x4008d52	              0x5d	                                 pop rbp	      5842	quickfix.c	FUNCTION_107
0x4008d53	            0x415c	                                 pop r12	      5842	quickfix.c	FUNCTION_107
0x4008d55	              0xc3	                                     ret	      5842	quickfix.c	FUNCTION_107
0x4008d56	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5842	quickfix.c	FUNCTION_107
0x4008d60	        0x4d8b2424	                    mov r12, qword [r12]	      5821	quickfix.c	FUNCTION_107
0x4008d64	          0x4d85e4	                           test r12, r12	      5821	quickfix.c	FUNCTION_107
0x4008d67	            0x7589	                           jne 0x4008cf2	      5821	quickfix.c	FUNCTION_107
0x4008d69	            0x31c0	                            xor eax, eax	      5841	quickfix.c	FUNCTION_107
0x4008d6b	            0xebe4	                           jmp 0x4008d51	      5841	quickfix.c	FUNCTION_107
0x4008d6d	    0x488b1d000000	            mov rbx, qword [0x04008d74] 	      5821	quickfix.c	FUNCTION_107
0x4008d74	            0xeb96	                           jmp 0x4008d0c	      5821	quickfix.c	FUNCTION_107
qf_types	CALL,0:ELSE,4:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,5:functions,0	43
0x4000470	            0x89f8	                            mov eax, edi	      3112	quickfix.c	FUNCTION_46	IF_1
0x4000472	        0x4883ec08	                              sub rsp, 8	      3107	quickfix.c	FUNCTION_46
0x4000476	          0x83e0df	                     and eax, 0xffffffdf	      3112	quickfix.c	FUNCTION_46	IF_1
0x4000479	          0x83f857	                           cmp eax, 0x57	      3112	quickfix.c	FUNCTION_46	IF_1
0x400047c	            0x7412	                            je 0x4000490	      3112	quickfix.c	FUNCTION_46	IF_1
0x400047e	          0x83f849	                           cmp eax, 0x49	      3114	quickfix.c	FUNCTION_46	ELSE_1	IF_2
0x4000481	            0x7545	                           jne 0x40004c8	      3114	quickfix.c	FUNCTION_46	ELSE_1	IF_2
0x4000483	    0x41b800000000	                              mov r8d, 0	      3115	quickfix.c	FUNCTION_46	ELSE_1	IF_2
0x4000489	            0xeb0b	                           jmp 0x4000496	      3115	quickfix.c	FUNCTION_46	ELSE_1	IF_2
0x400048b	       0xf1f440000	                   nop dword [rax + rax]	      3115	quickfix.c	FUNCTION_46	ELSE_1	IF_2
0x4000490	    0x41b800000000	                              mov r8d, 0	      3113	quickfix.c	FUNCTION_46	IF_1
0x4000496	            0x85f6	                           test esi, esi	      3128	quickfix.c	FUNCTION_46	IF_5
0x4000498	          0x4c89c0	                             mov rax, r8	      3128	quickfix.c	FUNCTION_46	IF_5
0x400049b	            0x7e23	                           jle 0x40004c0	      3128	quickfix.c	FUNCTION_46	IF_5
0x400049d	          0x4189f1	                            mov r9d, esi	      3128	quickfix.c	FUNCTION_46	IF_5
0x40004a0	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_127	CALL_1
0x40004a5	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_127	CALL_1
0x40004aa	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_127	CALL_1
0x40004af	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_127	CALL_1
0x40004b4	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_127	CALL_1
0x40004b6	      0xe800000000	                          call 0x40004bb	        33	stdio2.h	FUNCTION_127	CALL_1
0x40004bb	      0xb800000000	                              mov eax, 0	      3132	quickfix.c	FUNCTION_46
0x40004c0	        0x4883c408	                              add rsp, 8	      3133	quickfix.c	FUNCTION_46
0x40004c4	              0xc3	                                     ret	      3133	quickfix.c	FUNCTION_46
0x40004c5	           0xf1f00	                         nop dword [rax]	      3133	quickfix.c	FUNCTION_46
0x40004c8	          0x83f845	                           cmp eax, 0x45	      3116	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x40004cb	            0x743b	                            je 0x4000508	      3116	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x40004cd	            0x85ff	                           test edi, edi	      3116	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x40004cf	            0x750a	                           jne 0x40004db	      3116	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x40004d1	            0x85f6	                           test esi, esi	      3116	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x40004d3	    0x41b800000000	                              mov r8d, 0	      3117	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x40004d9	            0x7fc2	                            jg 0x400049d	      3116	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x40004db	          0x83ff01	                              cmp edi, 1	      3118	quickfix.c	FUNCTION_46	ELSE_3	IF_4
0x40004de	    0x41b800000000	                              mov r8d, 0	      3119	quickfix.c	FUNCTION_46	ELSE_3	IF_4
0x40004e4	            0x76b0	                           jbe 0x4000496	      3118	quickfix.c	FUNCTION_46	ELSE_3	IF_4
0x40004e6	    0xc60500000000	            mov byte [0x040004ed], 0x20 	      3122	quickfix.c	FUNCTION_46	ELSE_4
0x40004ed	    0x40883d000000	              mov byte [0x040004f4], dil	      3123	quickfix.c	FUNCTION_46	ELSE_4
0x40004f4	    0x41b800000000	                              mov r8d, 0	      3125	quickfix.c	FUNCTION_46	ELSE_4
0x40004fa	    0xc60500000000	                mov byte [0x04000501], 0	      3124	quickfix.c	FUNCTION_46	ELSE_4
0x4000501	            0xeb93	                           jmp 0x4000496	      3124	quickfix.c	FUNCTION_46	ELSE_4
0x4000503	       0xf1f440000	                   nop dword [rax + rax]	      3124	quickfix.c	FUNCTION_46	ELSE_4
0x4000508	    0x41b800000000	                              mov r8d, 0	      3117	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x400050e	            0xeb86	                           jmp 0x4000496	      3117	quickfix.c	FUNCTION_46	ELSE_2	IF_3
ex_cwindow	CALL,3:ELSE,1:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,5:functions,0	57
0x4005b80	              0x55	                                push rbp	      3143	quickfix.c	FUNCTION_47
0x4005b81	              0x53	                                push rbx	      3143	quickfix.c	FUNCTION_47
0x4005b82	          0x4889fd	                            mov rbp, rdi	      3143	quickfix.c	FUNCTION_47
0x4005b85	      0xbb00000000	                              mov ebx, 0	      3144	quickfix.c	FUNCTION_47
0x4005b8a	        0x4883ec08	                              sub rsp, 8	      3143	quickfix.c	FUNCTION_47
0x4005b8e	    0x817f20010100	          cmp dword [rdi + 0x20], 0x101 	      3147	quickfix.c	FUNCTION_47	IF_1
0x4005b95	            0x7459	                            je 0x4005bf0	      3147	quickfix.c	FUNCTION_47	IF_1
0x4005b97	          0x4889df	                            mov rdi, rbx	      3155	quickfix.c	FUNCTION_47	CALL_1
0x4005b9a	      0xe861b6ffff	                    call sym.qf_find_win	      3155	quickfix.c	FUNCTION_47	CALL_1
0x4005b9f	        0x48635308	            movsxd rdx, dword [rbx + 8] 	      3162	quickfix.c	FUNCTION_47	IF_3
0x4005ba3	    0x488d34d50000	                        lea rsi, [rdx*8]	      3162	quickfix.c	FUNCTION_47	IF_3
0x4005bab	          0x4889d1	                            mov rcx, rdx	      3162	quickfix.c	FUNCTION_47	IF_3
0x4005bae	        0x48c1e207	                              shl rdx, 7	      3162	quickfix.c	FUNCTION_47	IF_3
0x4005bb2	          0x4829f2	                            sub rdx, rsi	      3162	quickfix.c	FUNCTION_47	IF_3
0x4005bb5	          0x4801da	                            add rdx, rbx	      3162	quickfix.c	FUNCTION_47	IF_3
0x4005bb8	          0x8b7238	            mov esi, dword [rdx + 0x38] 	      3162	quickfix.c	FUNCTION_47	IF_3
0x4005bbb	            0x85f6	                           test esi, esi	      3162	quickfix.c	FUNCTION_47	IF_3
0x4005bbd	            0x7419	                            je 0x4005bd8	      3162	quickfix.c	FUNCTION_47	IF_3
0x4005bbf	          0x4885c0	                           test rax, rax	      3166	quickfix.c	FUNCTION_47	IF_3	IF_4
0x4005bc2	            0x7425	                            je 0x4005be9	      3166	quickfix.c	FUNCTION_47	IF_3	IF_4
0x4005bc4	        0x4883c408	                              add rsp, 8	      3171	quickfix.c	FUNCTION_47
0x4005bc8	          0x4889ef	                            mov rdi, rbp	      3167	quickfix.c	FUNCTION_47	IF_3	CALL_2
0x4005bcb	              0x5b	                                 pop rbx	      3171	quickfix.c	FUNCTION_47
0x4005bcc	              0x5d	                                 pop rbp	      3171	quickfix.c	FUNCTION_47
0x4005bcd	      0xe91efbffff	                       jmp sym.ex_cclose	      3167	quickfix.c	FUNCTION_47	IF_3	CALL_2
0x4005bd2	    0x660f1f440000	                    nop word [rax + rax]	      3167	quickfix.c	FUNCTION_47	IF_3	CALL_2
0x4005bd8	          0x8b5230	            mov edx, dword [rdx + 0x30] 	      3163	quickfix.c	FUNCTION_47	IF_3
0x4005bdb	            0x85d2	                           test edx, edx	      3163	quickfix.c	FUNCTION_47	IF_3
0x4005bdd	            0x74e0	                            je 0x4005bbf	      3163	quickfix.c	FUNCTION_47	IF_3
0x4005bdf	          0x3b4b04	                cmp ecx, dword [rbx + 4]	      3164	quickfix.c	FUNCTION_47	IF_3
0x4005be2	            0x7ddb	                           jge 0x4005bbf	      3164	quickfix.c	FUNCTION_47	IF_3
0x4005be4	          0x4885c0	                           test rax, rax	      3169	quickfix.c	FUNCTION_47	ELSE_1	IF_5
0x4005be7	            0x744f	                            je 0x4005c38	      3169	quickfix.c	FUNCTION_47	ELSE_1	IF_5
0x4005be9	        0x4883c408	                              add rsp, 8	      3171	quickfix.c	FUNCTION_47
0x4005bed	              0x5b	                                 pop rbx	      3171	quickfix.c	FUNCTION_47
0x4005bee	              0x5d	                                 pop rbp	      3171	quickfix.c	FUNCTION_47
0x4005bef	              0xc3	                                     ret	      3171	quickfix.c	FUNCTION_47
0x4005bf0	    0x488b05000000	            mov rax, qword [0x04005bf7] 	      3149	quickfix.c	FUNCTION_47	IF_1
0x4005bf7	        0x488b7808	                mov rdi, qword [rax + 8]	      3149	quickfix.c	FUNCTION_47	IF_1
0x4005bfb	      0xe800000000	                          call 0x4005c00	      3149	quickfix.c	FUNCTION_47	IF_1
0x4005c00	            0x85c0	                           test eax, eax	      3149	quickfix.c	FUNCTION_47	IF_1
0x4005c02	    0x488b05000000	            mov rax, qword [0x04005c09] 	      3149	quickfix.c	FUNCTION_47	IF_1
0x4005c09	            0x7415	                            je 0x4005c20	      3149	quickfix.c	FUNCTION_47	IF_1
0x4005c0b	    0x488b98501900	          mov rbx, qword [rax + 0x1950] 	      3149	quickfix.c	FUNCTION_47	IF_1
0x4005c12	          0x4885db	                           test rbx, rbx	      3149	quickfix.c	FUNCTION_47	IF_1
0x4005c15	            0x7580	                           jne 0x4005b97	      3149	quickfix.c	FUNCTION_47	IF_1
0x4005c17	    0x660f1f840000	                    nop word [rax + rax]	      3149	quickfix.c	FUNCTION_47	IF_1
0x4005c20	    0x488b98481900	          mov rbx, qword [rax + 0x1948] 	      3149	quickfix.c	FUNCTION_47	IF_1
0x4005c27	          0x4885db	                           test rbx, rbx	      3150	quickfix.c	FUNCTION_47	IF_1	IF_2
0x4005c2a	     0xf8567ffffff	                           jne 0x4005b97	      3150	quickfix.c	FUNCTION_47	IF_1	IF_2
0x4005c30	            0xebb7	                           jmp 0x4005be9	      3150	quickfix.c	FUNCTION_47	IF_1	IF_2
0x4005c32	    0x660f1f440000	                    nop word [rax + rax]	      3150	quickfix.c	FUNCTION_47	IF_1	IF_2
0x4005c38	        0x4883c408	                              add rsp, 8	      3171	quickfix.c	FUNCTION_47
0x4005c3c	          0x4889ef	                            mov rdi, rbp	      3170	quickfix.c	FUNCTION_47	ELSE_1	IF_5
0x4005c3f	              0x5b	                                 pop rbx	      3171	quickfix.c	FUNCTION_47
0x4005c40	              0x5d	                                 pop rbp	      3171	quickfix.c	FUNCTION_47
0x4005c41	      0xe92afbffff	                        jmp sym.ex_copen	      3170	quickfix.c	FUNCTION_47	ELSE_1	IF_5
qf_free	CALL,3:ELSE,0:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0	30
0x4000340	            0x4154	                                push r12	      3028	quickfix.c	FUNCTION_44
0x4000342	              0x55	                                push rbp	      3028	quickfix.c	FUNCTION_44
0x4000343	          0x4863ee	                         movsxd rbp, esi	      3028	quickfix.c	FUNCTION_44
0x4000346	              0x53	                                push rbx	      3028	quickfix.c	FUNCTION_44
0x4000347	            0x89ee	                            mov esi, ebp	      3031	quickfix.c	FUNCTION_44	CALL_1
0x4000349	          0x4889fb	                            mov rbx, rdi	      3028	quickfix.c	FUNCTION_44
0x400034c	          0x4989ec	                            mov r12, rbp	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400034f	      0xe86cfeffff	                  call sym.qf_free_items	      3031	quickfix.c	FUNCTION_44	CALL_1
0x4000354	    0x488d04ed0000	                        lea rax, [rbp*8]	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400035c	        0x49c1e407	                              shl r12, 7	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4000360	          0x4929c4	                            sub r12, rax	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4000363	          0x4901dc	                            add r12, rbx	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4000366	      0x498b7c2440	            mov rdi, qword [r12 + 0x40] 	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400036b	          0x4885ff	                           test rdi, rdi	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400036e	            0x740e	                            je 0x400037e	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4000370	      0xe800000000	                          call 0x4000375	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4000375	    0x49c744244000	               mov qword [r12 + 0x40], 0	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400037e	    0x488d04ed0000	                        lea rax, [rbp*8]	      3034	quickfix.c	FUNCTION_44	CALL_3
0x4000386	        0x48c1e507	                              shl rbp, 7	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400038a	          0x4829c5	                            sub rbp, rax	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400038d	          0x4801eb	                            add rbx, rbp	      3034	quickfix.c	FUNCTION_44	CALL_3
0x4000390	        0x488b7b48	            mov rdi, qword [rbx + 0x48] 	      3034	quickfix.c	FUNCTION_44	CALL_3
0x4000394	      0xe800000000	                          call 0x4000399	      3034	quickfix.c	FUNCTION_44	CALL_3
0x4000399	    0x48c743480000	               mov qword [rbx + 0x48], 0	      3035	quickfix.c	FUNCTION_44
0x40003a1	    0xc74310000000	               mov dword [rbx + 0x10], 0	      3036	quickfix.c	FUNCTION_44
0x40003a8	    0x48c783800000	               mov qword [rbx + 0x80], 0	      3037	quickfix.c	FUNCTION_44
0x40003b3	              0x5b	                                 pop rbx	      3038	quickfix.c	FUNCTION_44
0x40003b4	              0x5d	                                 pop rbp	      3038	quickfix.c	FUNCTION_44
0x40003b5	            0x415c	                                 pop r12	      3038	quickfix.c	FUNCTION_44
0x40003b7	              0xc3	                                     ret	      3038	quickfix.c	FUNCTION_44
