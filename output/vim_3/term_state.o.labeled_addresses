vterm_obtain_state	DO,0:SWITCH,0:CALL,6:WHILE,0:ELSE,0:functions,0:IF,2:FOR,0	65
0x4001240	    0x488b87180100	           mov rax, qword [rdi + 0x118] 	      1699	state.c	FUNCTION_30	IF_1
0x4001247	          0x4885c0	                           test rax, rax	      1699	state.c	FUNCTION_30	IF_1
0x400124a	            0x7404	                            je 0x4001250	      1699	state.c	FUNCTION_30	IF_1
0x400124c	              0xc3	                                     ret	      1719	state.c	FUNCTION_30
0x400124d	           0xf1f00	                         nop dword [rax]	      1719	state.c	FUNCTION_30
0x4001250	              0x55	                                push rbp	      1697	state.c	FUNCTION_30
0x4001251	              0x53	                                push rbx	      1697	state.c	FUNCTION_30
0x4001252	          0x4889fd	                            mov rbp, rdi	      1697	state.c	FUNCTION_30
0x4001255	      0xbe98010000	                          mov esi, 0x198	        54	state.c	FUNCTION_4	CALL_1
0x400125a	        0x4883ec08	                              sub rsp, 8	      1697	state.c	FUNCTION_30
0x400125e	      0xe800000000	                          call 0x4001263	        54	state.c	FUNCTION_4	CALL_1
0x4001263	          0x4889c3	                            mov rbx, rax	        54	state.c	FUNCTION_4	CALL_1
0x4001266	          0x488928	                    mov qword [rax], rbp	        56	state.c	FUNCTION_4
0x4001269	          0x8b4510	            mov eax, dword [rbp + 0x10] 	        58	state.c	FUNCTION_4
0x400126c	          0x4889df	                            mov rdi, rbx	        70	state.c	FUNCTION_4	CALL_2
0x400126f	          0x894328	             mov dword [rbx + 0x28], eax	        58	state.c	FUNCTION_4
0x4001272	          0x8b4514	            mov eax, dword [rbp + 0x14] 	        59	state.c	FUNCTION_4
0x4001275	    0xc74360000000	               mov dword [rbx + 0x60], 0	        61	state.c	FUNCTION_4
0x400127c	    0xc74364000000	               mov dword [rbx + 0x64], 0	        62	state.c	FUNCTION_4
0x4001283	    0xc74368000000	               mov dword [rbx + 0x68], 0	        63	state.c	FUNCTION_4
0x400128a	    0xc74370000000	               mov dword [rbx + 0x70], 0	        65	state.c	FUNCTION_4
0x4001291	          0x89432c	             mov dword [rbx + 0x2c], eax	        59	state.c	FUNCTION_4
0x4001294	    0x48c743080000	                  mov qword [rbx + 8], 0	        67	state.c	FUNCTION_4
0x400129c	    0x48c743100000	               mov qword [rbx + 0x10], 0	        68	state.c	FUNCTION_4
0x40012a4	      0xe800000000	                          call 0x40012a9	        70	state.c	FUNCTION_4	CALL_2
0x40012a9	          0x488b3b	                    mov rdi, qword [rbx]	      1706	state.c	FUNCTION_30	CALL_2
0x40012ac	    0xc78378010000	              mov dword [rbx + 0x178], 0	        72	state.c	FUNCTION_4
0x40012b6	      0xbe40000000	                           mov esi, 0x40	      1706	state.c	FUNCTION_30	CALL_2
0x40012bb	    0x48899d180100	           mov qword [rbp + 0x118], rbx 	      1703	state.c	FUNCTION_30
0x40012c2	    0x48c783800000	           mov qword [rbx + 0x80], 0x10 	      1705	state.c	FUNCTION_30
0x40012cd	      0xe800000000	                          call 0x40012d2	      1706	state.c	FUNCTION_30	CALL_2
0x40012d2	          0x8b732c	            mov esi, dword [rbx + 0x2c] 	      1708	state.c	FUNCTION_30	CALL_3
0x40012d5	        0x48894378	             mov qword [rbx + 0x78], rax	      1706	state.c	FUNCTION_30	CALL_2
0x40012d9	          0x488b3b	                    mov rdi, qword [rbx]	      1708	state.c	FUNCTION_30	CALL_3
0x40012dc	          0x8d460e	                    lea eax, [rsi + 0xe]	      1708	state.c	FUNCTION_30	CALL_3
0x40012df	          0x83c607	                              add esi, 7	      1708	state.c	FUNCTION_30	CALL_3
0x40012e2	           0xf48f0	                          cmovs esi, eax	      1708	state.c	FUNCTION_30	CALL_3
0x40012e5	          0xc1fe03	                              sar esi, 3	      1708	state.c	FUNCTION_30	CALL_3
0x40012e8	          0x4863f6	                         movsxd rsi, esi	      1708	state.c	FUNCTION_30	CALL_3
0x40012eb	      0xe800000000	                          call 0x40012f0	      1708	state.c	FUNCTION_30	CALL_3
0x40012f0	        0x48637328	         movsxd rsi, dword [rbx + 0x28] 	      1710	state.c	FUNCTION_30	CALL_4
0x40012f4	          0x488b3b	                    mov rdi, qword [rbx]	      1710	state.c	FUNCTION_30	CALL_4
0x40012f7	        0x48894350	             mov qword [rbx + 0x50], rax	      1708	state.c	FUNCTION_30	CALL_3
0x40012fb	        0x48c1e602	                              shl rsi, 2	      1710	state.c	FUNCTION_30	CALL_4
0x40012ff	      0xe800000000	                          call 0x4001304	      1710	state.c	FUNCTION_30	CALL_4
0x4001304	            0x31ff	                            xor edi, edi	      1712	state.c	FUNCTION_30	CALL_5
0x4001306	        0x48894358	             mov qword [rbx + 0x58], rax	      1710	state.c	FUNCTION_30	CALL_4
0x400130a	      0xbe75000000	                           mov esi, 0x75	      1712	state.c	FUNCTION_30	CALL_5
0x400130f	      0xe800000000	                          call 0x4001314	      1712	state.c	FUNCTION_30	CALL_5
0x4001314	          0x488b10	                    mov rdx, qword [rax]	      1713	state.c	FUNCTION_30	IF_2
0x4001317	    0x488983f80000	             mov qword [rbx + 0xf8], rax	      1712	state.c	FUNCTION_30	CALL_5
0x400131e	          0x4885d2	                           test rdx, rdx	      1713	state.c	FUNCTION_30	IF_2
0x4001321	            0x740c	                            je 0x400132f	      1713	state.c	FUNCTION_30	IF_2
0x4001323	    0x488db3000100	                  lea rsi, [rbx + 0x100]	      1714	state.c	FUNCTION_30	IF_2
0x400132a	          0x4889c7	                            mov rdi, rax	      1714	state.c	FUNCTION_30	IF_2
0x400132d	            0xffd2	                                call rdx	      1714	state.c	FUNCTION_30	IF_2
0x400132f	          0x4889da	                            mov rdx, rbx	      1716	state.c	FUNCTION_30	CALL_6
0x4001332	          0x4889ef	                            mov rdi, rbp	      1716	state.c	FUNCTION_30	CALL_6
0x4001335	      0xbe00000000	                              mov esi, 0	      1716	state.c	FUNCTION_30	CALL_6
0x400133a	      0xe800000000	                          call 0x400133f	      1716	state.c	FUNCTION_30	CALL_6
0x400133f	        0x4883c408	                              add rsp, 8	      1719	state.c	FUNCTION_30
0x4001343	          0x4889d8	                            mov rax, rbx	      1718	state.c	FUNCTION_30
0x4001346	              0x5b	                                 pop rbx	      1719	state.c	FUNCTION_30
0x4001347	              0x5d	                                 pop rbp	      1719	state.c	FUNCTION_30
0x4001348	              0xc3	                                     ret	      1719	state.c	FUNCTION_30
on_control	DO,0:SWITCH,1:CALL,12:WHILE,0:ELSE,1:functions,0:IF,8:FOR,0	135
0x4000fe0	              0x53	                                push rbx	       419	state.c	FUNCTION_16
0x4000fe1	          0x4889f3	                            mov rbx, rsi	       419	state.c	FUNCTION_16
0x4000fe4	        0x4883ec10	                           sub rsp, 0x10	       419	state.c	FUNCTION_16
0x4000fe8	    0x64488b042528	                mov rax, qword fs:[0x28]	       419	state.c	FUNCTION_16
0x4000ff1	      0x4889442408	                mov qword [rsp + 8], rax	       419	state.c	FUNCTION_16
0x4000ff6	            0x31c0	                            xor eax, eax	       419	state.c	FUNCTION_16
0x4000ff8	        0x488b4630	            mov rax, qword [rsi + 0x30] 	       422	state.c	FUNCTION_16
0x4000ffc	        0x48890424	                    mov qword [rsp], rax	       422	state.c	FUNCTION_16
0x4001000	          0x8d47f9	                      lea eax, [rdi - 7]	       424	state.c	FUNCTION_16	SWITCH_1
0x4001003	            0x3c88	                            cmp al, 0x88	       424	state.c	FUNCTION_16	SWITCH_1
0x4001005	     0xf875d010000	                            ja 0x4001168	       424	state.c	FUNCTION_16	SWITCH_1
0x400100b	           0xfb6c0	                           movzx eax, al	       424	state.c	FUNCTION_16	SWITCH_1
0x400100e	    0xff24c5000000	                       jmp qword [rax*8]	       424	state.c	FUNCTION_16	SWITCH_1
0x4001015	           0xf1f00	                         nop dword [rax]	       424	state.c	FUNCTION_16	SWITCH_1
0x4001018	          0x4889f7	                            mov rdi, rsi	       464	state.c	FUNCTION_16	SWITCH_1	CALL_4
0x400101b	      0xe8d0f5ffff	                       call sym.linefeed	       464	state.c	FUNCTION_16	SWITCH_1	CALL_4
0x4001020	    0xc74334000000	               mov dword [rbx + 0x34], 0	       465	state.c	FUNCTION_16	SWITCH_1
0x4001027	    0x660f1f840000	                    nop word [rax + rax]	       465	state.c	FUNCTION_16	SWITCH_1
0x4001030	      0xba01000000	                              mov edx, 1	       502	state.c	FUNCTION_16	CALL_10
0x4001035	          0x4889e6	                            mov rsi, rsp	       502	state.c	FUNCTION_16	CALL_10
0x4001038	          0x4889df	                            mov rdi, rbx	       502	state.c	FUNCTION_16	CALL_10
0x400103b	      0xe8a0f0ffff	                   call sym.updatecursor	       502	state.c	FUNCTION_16	CALL_10
0x4001040	      0xb801000000	                              mov eax, 1	       513	state.c	FUNCTION_16
0x4001045	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       514	state.c	FUNCTION_16
0x400104a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       514	state.c	FUNCTION_16
0x4001053	     0xf8597010000	                           jne 0x40011f0	       514	state.c	FUNCTION_16
0x4001059	        0x4883c410	                           add rsp, 0x10	       514	state.c	FUNCTION_16
0x400105d	              0x5b	                                 pop rbx	       514	state.c	FUNCTION_16
0x400105e	              0xc3	                                     ret	       514	state.c	FUNCTION_16
0x400105f	              0x90	                                     nop	       514	state.c	FUNCTION_16
0x4001060	    0xc78610010000	              mov dword [rsi + 0x110], 1	       452	state.c	FUNCTION_16	SWITCH_1
0x400106a	            0xebc4	                           jmp 0x4001030	       453	state.c	FUNCTION_16	SWITCH_1
0x400106c	         0xf1f4000	                         nop dword [rax]	       453	state.c	FUNCTION_16	SWITCH_1
0x4001070	    0xc78610010000	              mov dword [rsi + 0x110], 0	       456	state.c	FUNCTION_16	SWITCH_1
0x400107a	            0xebb4	                           jmp 0x4001030	       457	state.c	FUNCTION_16	SWITCH_1
0x400107c	         0xf1f4000	                         nop dword [rax]	       457	state.c	FUNCTION_16	SWITCH_1
0x4001080	          0x4889f7	                            mov rdi, rsi	       460	state.c	FUNCTION_16	SWITCH_1	CALL_3
0x4001083	      0xe868f5ffff	                       call sym.linefeed	       460	state.c	FUNCTION_16	SWITCH_1	CALL_3
0x4001088	            0xeba6	                           jmp 0x4001030	       461	state.c	FUNCTION_16	SWITCH_1
0x400108a	    0x660f1f440000	                    nop word [rax + rax]	       461	state.c	FUNCTION_16	SWITCH_1
0x4001090	          0x8b4e34	            mov ecx, dword [rsi + 0x34] 	       469	state.c	FUNCTION_16	SWITCH_1	CALL_5
0x4001093	      0xba01000000	                              mov edx, 1	       158	state.c	FUNCTION_9
0x4001098	            0x89c8	                            mov eax, ecx	       158	state.c	FUNCTION_9
0x400109a	          0x83e107	                              and ecx, 7	       158	state.c	FUNCTION_9
0x400109d	          0xc1f803	                              sar eax, 3	       158	state.c	FUNCTION_9
0x40010a0	            0xd3e2	                             shl edx, cl	       158	state.c	FUNCTION_9
0x40010a2	            0x4898	                                    cdqe	       158	state.c	FUNCTION_9
0x40010a4	        0x48034650	             add rax, qword [rsi + 0x50]	       158	state.c	FUNCTION_9
0x40010a8	             0x810	                       or byte [rax], dl	       158	state.c	FUNCTION_9
0x40010aa	            0xeb84	                           jmp 0x4001030	       158	state.c	FUNCTION_9
0x40010ac	         0xf1f4000	                         nop dword [rax]	       158	state.c	FUNCTION_9
0x40010b0	          0x8b4630	            mov eax, dword [rsi + 0x30] 	       473	state.c	FUNCTION_16	SWITCH_1	IF_4
0x40010b3	          0x3b463c	            cmp eax, dword [rsi + 0x3c] 	       473	state.c	FUNCTION_16	SWITCH_1	IF_4
0x40010b6	     0xf84e4000000	                            je 0x40011a0	       473	state.c	FUNCTION_16	SWITCH_1	IF_4
0x40010bc	            0x85c0	                           test eax, eax	       482	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x40010be	     0xf8e6cffffff	                           jle 0x4001030	       482	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x40010c4	          0x83e801	                              sub eax, 1	       483	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x40010c7	          0x894630	             mov dword [rsi + 0x30], eax	       483	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x40010ca	      0xe961ffffff	                           jmp 0x4001030	       483	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x40010cf	              0x90	                                     nop	       483	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x40010d0	    0xc78618010000	              mov dword [rsi + 0x118], 2	       487	state.c	FUNCTION_16	SWITCH_1
0x40010da	      0xe951ffffff	                           jmp 0x4001030	       488	state.c	FUNCTION_16	SWITCH_1
0x40010df	              0x90	                                     nop	       488	state.c	FUNCTION_16	SWITCH_1
0x40010e0	    0xc78618010000	              mov dword [rsi + 0x118], 3	       491	state.c	FUNCTION_16	SWITCH_1
0x40010ea	      0xe941ffffff	                           jmp 0x4001030	       492	state.c	FUNCTION_16	SWITCH_1
0x40010ef	              0x90	                                     nop	       492	state.c	FUNCTION_16	SWITCH_1
0x40010f0	        0x488b4608	                mov rax, qword [rsi + 8]	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x40010f4	          0x4885c0	                           test rax, rax	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x40010f7	     0xf8433ffffff	                            je 0x4001030	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x40010fd	        0x488b4040	            mov rax, qword [rax + 0x40] 	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x4001101	          0x4885c0	                           test rax, rax	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x4001104	     0xf8426ffffff	                            je 0x4001030	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x400110a	        0x488b7e10	            mov rdi, qword [rsi + 0x10] 	       427	state.c	FUNCTION_16	SWITCH_1	IF_1
0x400110e	            0xffd0	                                call rax	       427	state.c	FUNCTION_16	SWITCH_1	IF_1
0x4001110	      0xe91bffffff	                           jmp 0x4001030	       427	state.c	FUNCTION_16	SWITCH_1	IF_1
0x4001115	           0xf1f00	                         nop dword [rax]	       427	state.c	FUNCTION_16	SWITCH_1	IF_1
0x4001118	          0x8b4634	            mov eax, dword [rsi + 0x34] 	       431	state.c	FUNCTION_16	SWITCH_1	IF_2
0x400111b	            0x85c0	                           test eax, eax	       431	state.c	FUNCTION_16	SWITCH_1	IF_2
0x400111d	     0xf8e0dffffff	                           jle 0x4001030	       431	state.c	FUNCTION_16	SWITCH_1	IF_2
0x4001123	          0x83e801	                              sub eax, 1	       432	state.c	FUNCTION_16	SWITCH_1	IF_2
0x4001126	          0x894634	             mov dword [rsi + 0x34], eax	       432	state.c	FUNCTION_16	SWITCH_1	IF_2
0x4001129	      0xe902ffffff	                           jmp 0x4001030	       432	state.c	FUNCTION_16	SWITCH_1	IF_2
0x400112e	            0x6690	                                     nop	       432	state.c	FUNCTION_16	SWITCH_1	IF_2
0x4001130	      0xbe01000000	                              mov esi, 1	       436	state.c	FUNCTION_16	SWITCH_1	CALL_1
0x4001135	          0x4889df	                            mov rdi, rbx	       436	state.c	FUNCTION_16	SWITCH_1	CALL_1
0x4001138	      0xe833feffff	                call sym.tab.constprop.8	       436	state.c	FUNCTION_16	SWITCH_1	CALL_1
0x400113d	      0xe9eefeffff	                           jmp 0x4001030	       437	state.c	FUNCTION_16	SWITCH_1
0x4001142	    0x660f1f440000	                    nop word [rax + rax]	       437	state.c	FUNCTION_16	SWITCH_1
0x4001148	          0x4889f7	                            mov rdi, rsi	       442	state.c	FUNCTION_16	SWITCH_1	CALL_2
0x400114b	      0xe8a0f4ffff	                       call sym.linefeed	       442	state.c	FUNCTION_16	SWITCH_1	CALL_2
0x4001150	    0xf68394000000	           test byte [rbx + 0x94], 0x10 	       443	state.c	FUNCTION_16	SWITCH_1	IF_3
0x4001157	     0xf84d3feffff	                            je 0x4001030	       443	state.c	FUNCTION_16	SWITCH_1	IF_3
0x400115d	      0xe9befeffff	                           jmp 0x4001020	       443	state.c	FUNCTION_16	SWITCH_1	IF_3
0x4001162	    0x660f1f440000	                    nop word [rax + rax]	       443	state.c	FUNCTION_16	SWITCH_1	IF_3
0x4001168	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x400116c	          0x4885c0	                           test rax, rax	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x400116f	            0x7473	                            je 0x40011e4	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x4001171	        0x488b5008	                mov rdx, qword [rax + 8]	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x4001175	            0x31c0	                            xor eax, eax	       499	state.c	FUNCTION_16	SWITCH_1
0x4001177	          0x4885d2	                           test rdx, rdx	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x400117a	     0xf84c5feffff	                            je 0x4001045	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x4001180	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	       496	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x4001184	        0x400fb6ff	                          movzx edi, dil	       496	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x4001188	            0xffd2	                                call rdx	       496	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x400118a	            0x85c0	                           test eax, eax	       497	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x400118c	           0xf95c0	                                setne al	       497	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x400118f	           0xfb6c0	                           movzx eax, al	       497	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x4001192	      0xe9aefeffff	                           jmp 0x4001045	       497	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x4001197	    0x660f1f840000	                    nop word [rax + rax]	       497	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x40011a0	          0x8b7640	            mov esi, dword [rsi + 0x40] 	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x40011a3	            0x85f6	                           test esi, esi	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x40011a5	            0x7844	                            js 0x40011eb	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x40011a7	        0x48c1e620	                           shl rsi, 0x20	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x40011ab	          0x4809c6	                             or rsi, rax	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x40011ae	    0xf68395000000	           test byte [rbx + 0x95], 0x10 	       477	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_7
0x40011b5	            0x7426	                            je 0x40011dd	       477	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_7
0x40011b7	          0x8b4b48	            mov ecx, dword [rbx + 0x48] 	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x40011ba	          0x8b5344	            mov edx, dword [rbx + 0x44] 	       477	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_7
0x40011bd	            0x85c9	                           test ecx, ecx	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x40011bf	            0x781e	                            js 0x40011df	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x40011c1	        0x48c1e120	                           shl rcx, 0x20	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x40011c5	          0x4531c0	                            xor r8d, r8d	       480	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_9
0x40011c8	          0x4889df	                            mov rdi, rbx	       480	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_9
0x40011cb	          0x4809ca	                             or rdx, rcx	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x40011ce	      0xb9ffffffff	                     mov ecx, 0xffffffff	       480	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_9
0x40011d3	      0xe8c8f2ffff	                         call sym.scroll	       480	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_9
0x40011d8	      0xe953feffff	                           jmp 0x4001030	       480	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_9
0x40011dd	            0x31d2	                            xor edx, edx	       477	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_7
0x40011df	          0x8b4b2c	            mov ecx, dword [rbx + 0x2c] 	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x40011e2	            0xebdd	                           jmp 0x40011c1	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x40011e4	            0x31c0	                            xor eax, eax	       499	state.c	FUNCTION_16	SWITCH_1
0x40011e6	      0xe95afeffff	                           jmp 0x4001045	       499	state.c	FUNCTION_16	SWITCH_1
0x40011eb	          0x8b7328	            mov esi, dword [rbx + 0x28] 	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x40011ee	            0xebb7	                           jmp 0x40011a7	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x40011f0	      0xe800000000	                          call 0x40011f5	       514	state.c	FUNCTION_16
linefeed	DO,0:SWITCH,0:CALL,5:WHILE,0:ELSE,1:functions,0:IF,2:FOR,0	41
0x40005f0	        0x4883ec08	                              sub rsp, 8	       128	state.c	FUNCTION_7
0x40005f4	          0x8b4740	            mov eax, dword [rdi + 0x40] 	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x40005f7	          0x8b5730	            mov edx, dword [rdi + 0x30] 	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x40005fa	            0x85c0	                           test eax, eax	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x40005fc	            0x7822	                            js 0x4000620	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x40005fe	          0x8d48ff	                      lea ecx, [rax - 1]	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4000601	            0x39ca	                            cmp edx, ecx	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4000603	            0x7425	                            je 0x400062a	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4000605	          0x8b4728	            mov eax, dword [rdi + 0x28] 	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4000608	          0x8d48ff	                      lea ecx, [rax - 1]	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x400060b	            0x39ca	                            cmp edx, ecx	       138	state.c	FUNCTION_7	ELSE_1	IF_2
0x400060d	            0x7d06	                           jge 0x4000615	       138	state.c	FUNCTION_7	ELSE_1	IF_2
0x400060f	          0x83c201	                              add edx, 1	       139	state.c	FUNCTION_7	ELSE_1	IF_2
0x4000612	          0x895730	             mov dword [rdi + 0x30], edx	       139	state.c	FUNCTION_7	ELSE_1	IF_2
0x4000615	        0x4883c408	                              add rsp, 8	       140	state.c	FUNCTION_7
0x4000619	              0xc3	                                     ret	       140	state.c	FUNCTION_7
0x400061a	    0x660f1f440000	                    nop word [rax + rax]	       140	state.c	FUNCTION_7
0x4000620	          0x8b4728	            mov eax, dword [rdi + 0x28] 	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4000623	          0x8d48ff	                      lea ecx, [rax - 1]	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4000626	            0x39ca	                            cmp edx, ecx	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4000628	            0x75e1	                           jne 0x400060b	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x400062a	          0x8b773c	            mov esi, dword [rdi + 0x3c] 	       131	state.c	FUNCTION_7	IF_1
0x400062d	        0x48c1e020	                           shl rax, 0x20	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x4000631	          0x4809c6	                             or rsi, rax	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x4000634	    0xf68795000000	           test byte [rdi + 0x95], 0x10 	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x400063b	            0x7523	                           jne 0x4000660	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x400063d	            0x31d2	                            xor edx, edx	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x400063f	          0x8b472c	            mov eax, dword [rdi + 0x2c] 	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4000642	        0x48c1e020	                           shl rax, 0x20	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4000646	          0x4531c0	                            xor r8d, r8d	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x4000649	      0xb901000000	                              mov ecx, 1	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x400064e	          0x4809c2	                             or rdx, rax	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4000651	      0xe84afeffff	                         call sym.scroll	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x4000656	        0x4883c408	                              add rsp, 8	       140	state.c	FUNCTION_7
0x400065a	              0xc3	                                     ret	       140	state.c	FUNCTION_7
0x400065b	       0xf1f440000	                   nop dword [rax + rax]	       140	state.c	FUNCTION_7
0x4000660	          0x8b4748	            mov eax, dword [rdi + 0x48] 	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4000663	          0x8b5744	            mov edx, dword [rdi + 0x44] 	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x4000666	            0x85c0	                           test eax, eax	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4000668	            0x79d8	                           jns 0x4000642	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x400066a	            0xebd3	                           jmp 0x400063f	       134	state.c	FUNCTION_7	IF_1	CALL_4
vterm_state_get_mousestate	DO,0:SWITCH,0:CALL,0:WHILE,0:ELSE,0:functions,0:IF,0:FOR,0	9
0x4001360	          0x8b4760	            mov eax, dword [rdi + 0x60] 	      1807	state.c	FUNCTION_33
0x4001363	          0x894604	                mov dword [rsi + 4], eax	      1807	state.c	FUNCTION_33
0x4001366	          0x8b4764	            mov eax, dword [rdi + 0x64] 	      1808	state.c	FUNCTION_33
0x4001369	            0x8906	                    mov dword [rsi], eax	      1808	state.c	FUNCTION_33
0x400136b	          0x8b4768	            mov eax, dword [rdi + 0x68] 	      1809	state.c	FUNCTION_33
0x400136e	          0x894608	                mov dword [rsi + 8], eax	      1809	state.c	FUNCTION_33
0x4001371	          0x8b476c	            mov eax, dword [rdi + 0x6c] 	      1810	state.c	FUNCTION_33
0x4001374	          0x89460c	              mov dword [rsi + 0xc], eax	      1810	state.c	FUNCTION_33
0x4001377	              0xc3	                                     ret	      1810	state.c	FUNCTION_33
vterm_state_focus_in	DO,0:SWITCH,0:CALL,1:WHILE,0:ELSE,0:functions,0:IF,1:FOR,0	9
0x4003b80	    0xf68795000000	           test byte [rdi + 0x95], 0x40 	      1904	state.c	FUNCTION_39	IF_1
0x4003b87	            0x7507	                           jne 0x4003b90	      1904	state.c	FUNCTION_39	IF_1
0x4003b89	            0xf3c3	                                     ret	      1904	state.c	FUNCTION_39	IF_1
0x4003b8b	       0xf1f440000	                   nop dword [rax + rax]	      1904	state.c	FUNCTION_39	IF_1
0x4003b90	          0x488b3f	                    mov rdi, qword [rdi]	      1905	state.c	FUNCTION_39	CALL_1
0x4003b93	      0xba00000000	                              mov edx, 0	      1905	state.c	FUNCTION_39	CALL_1
0x4003b98	      0xbe9b000000	                           mov esi, 0x9b	      1905	state.c	FUNCTION_39	CALL_1
0x4003b9d	            0x31c0	                            xor eax, eax	      1905	state.c	FUNCTION_39	CALL_1
0x4003b9f	      0xe900000000	                           jmp 0x4003ba4	      1905	state.c	FUNCTION_39	CALL_1
on_escape	DO,0:SWITCH,3:CALL,10:WHILE,0:ELSE,0:functions,0:IF,10:FOR,2	223
0x4001eb0	            0x4156	                                push r14	       571	state.c	FUNCTION_21
0x4001eb2	            0x4155	                                push r13	       571	state.c	FUNCTION_21
0x4001eb4	            0x4154	                                push r12	       571	state.c	FUNCTION_21
0x4001eb6	              0x55	                                push rbp	       571	state.c	FUNCTION_21
0x4001eb7	              0x53	                                push rbx	       571	state.c	FUNCTION_21
0x4001eb8	        0x4883ec10	                           sub rsp, 0x10	       571	state.c	FUNCTION_21
0x4001ebc	           0xfb62f	                   movzx ebp, byte [rdi]	       577	state.c	FUNCTION_21	SWITCH_1
0x4001ebf	    0x64488b042528	                mov rax, qword fs:[0x28]	       571	state.c	FUNCTION_21
0x4001ec8	      0x4889442408	                mov qword [rsp + 8], rax	       571	state.c	FUNCTION_21
0x4001ecd	            0x31c0	                            xor eax, eax	       571	state.c	FUNCTION_21
0x4001ecf	          0x8d45e0	                   lea eax, [rbp - 0x20]	       577	state.c	FUNCTION_21	SWITCH_1
0x4001ed2	            0x3c5e	                            cmp al, 0x5e	       577	state.c	FUNCTION_21	SWITCH_1
0x4001ed4	     0xf8756020000	                            ja 0x4002130	       577	state.c	FUNCTION_21	SWITCH_1
0x4001eda	           0xfb6c0	                           movzx eax, al	       577	state.c	FUNCTION_21	SWITCH_1
0x4001edd	          0x4889d3	                            mov rbx, rdx	       577	state.c	FUNCTION_21	SWITCH_1
0x4001ee0	    0xff24c5000000	                       jmp qword [rax*8]	       577	state.c	FUNCTION_21	SWITCH_1
0x4001ee7	    0x660f1f840000	                    nop word [rax + rax]	       577	state.c	FUNCTION_21	SWITCH_1
0x4001ef0	    0xc78214010000	              mov dword [rdx + 0x114], 3	       703	state.c	FUNCTION_21	SWITCH_1
0x4001efa	      0xb801000000	                              mov eax, 1	       704	state.c	FUNCTION_21	SWITCH_1
0x4001eff	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       709	state.c	FUNCTION_21
0x4001f04	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       709	state.c	FUNCTION_21
0x4001f0d	     0xf8535030000	                           jne 0x4002248	       709	state.c	FUNCTION_21
0x4001f13	        0x4883c410	                           add rsp, 0x10	       709	state.c	FUNCTION_21
0x4001f17	              0x5b	                                 pop rbx	       709	state.c	FUNCTION_21
0x4001f18	              0x5d	                                 pop rbp	       709	state.c	FUNCTION_21
0x4001f19	            0x415c	                                 pop r12	       709	state.c	FUNCTION_21
0x4001f1b	            0x415d	                                 pop r13	       709	state.c	FUNCTION_21
0x4001f1d	            0x415e	                                 pop r14	       709	state.c	FUNCTION_21
0x4001f1f	              0xc3	                                     ret	       709	state.c	FUNCTION_21
0x4001f20	            0x31f6	                            xor esi, esi	       663	state.c	FUNCTION_21	SWITCH_1	CALL_9
0x4001f22	          0x4889d7	                            mov rdi, rdx	       663	state.c	FUNCTION_21	SWITCH_1	CALL_9
0x4001f25	      0xe8f6f8ffff	                     call sym.savecursor	       663	state.c	FUNCTION_21	SWITCH_1	CALL_9
0x4001f2a	      0xb801000000	                              mov eax, 1	       664	state.c	FUNCTION_21	SWITCH_1
0x4001f2f	            0xebce	                           jmp 0x4001eff	       664	state.c	FUNCTION_21	SWITCH_1
0x4001f31	     0xf1f80000000	                         nop dword [rax]	       664	state.c	FUNCTION_21	SWITCH_1
0x4001f38	    0x808a94000000	                 or byte [rdx + 0x94], 1	       670	state.c	FUNCTION_21	SWITCH_1
0x4001f3f	      0xb801000000	                              mov eax, 1	       671	state.c	FUNCTION_21	SWITCH_1
0x4001f44	            0xebb9	                           jmp 0x4001eff	       671	state.c	FUNCTION_21	SWITCH_1
0x4001f46	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       671	state.c	FUNCTION_21	SWITCH_1
0x4001f50	    0x80a294000000	             and byte [rdx + 0x94], 0xfe	       674	state.c	FUNCTION_21	SWITCH_1
0x4001f57	      0xb801000000	                              mov eax, 1	       675	state.c	FUNCTION_21	SWITCH_1
0x4001f5c	            0xeba1	                           jmp 0x4001eff	       675	state.c	FUNCTION_21	SWITCH_1
0x4001f5e	            0x6690	                                     nop	       675	state.c	FUNCTION_21	SWITCH_1
0x4001f60	      0xbe01000000	                              mov esi, 1	       680	state.c	FUNCTION_21	SWITCH_1	CALL_10
0x4001f65	          0x4889d7	                            mov rdi, rdx	       680	state.c	FUNCTION_21	SWITCH_1	CALL_10
0x4001f68	        0x488b6a30	            mov rbp, qword [rdx + 0x30] 	       679	state.c	FUNCTION_21	SWITCH_1
0x4001f6c	      0xe800000000	                          call 0x4001f71	       680	state.c	FUNCTION_21	SWITCH_1	CALL_10
0x4001f71	        0x488b4308	                mov rax, qword [rbx + 8]	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001f75	          0x4885c0	                           test rax, rax	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001f78	            0x7480	                            je 0x4001efa	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001f7a	        0x488b4008	                mov rax, qword [rax + 8]	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001f7e	          0x4885c0	                           test rax, rax	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001f81	     0xf8473ffffff	                            je 0x4001efa	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001f87	     0xfb693940000	           movzx edx, byte [rbx + 0x94] 	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001f8e	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001f92	          0x4889ee	                            mov rsi, rbp	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001f95	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001f99	          0xc0ea05	                               shr dl, 5	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001f9c	          0x83e201	                              and edx, 1	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001f9f	            0xffd0	                                call rax	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001fa1	      0xe954ffffff	                           jmp 0x4001efa	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001fa6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001fb0	    0xc78210010000	              mov dword [rdx + 0x110], 2	       687	state.c	FUNCTION_21	SWITCH_1
0x4001fba	      0xb801000000	                              mov eax, 1	       688	state.c	FUNCTION_21	SWITCH_1
0x4001fbf	      0xe93bffffff	                           jmp 0x4001eff	       688	state.c	FUNCTION_21	SWITCH_1
0x4001fc4	         0xf1f4000	                         nop dword [rax]	       688	state.c	FUNCTION_21	SWITCH_1
0x4001fc8	    0xc78210010000	              mov dword [rdx + 0x110], 3	       691	state.c	FUNCTION_21	SWITCH_1
0x4001fd2	      0xb801000000	                              mov eax, 1	       692	state.c	FUNCTION_21	SWITCH_1
0x4001fd7	      0xe923ffffff	                           jmp 0x4001eff	       692	state.c	FUNCTION_21	SWITCH_1
0x4001fdc	         0xf1f4000	                         nop dword [rax]	       692	state.c	FUNCTION_21	SWITCH_1
0x4001fe0	    0xc78214010000	              mov dword [rdx + 0x114], 2	       699	state.c	FUNCTION_21	SWITCH_1
0x4001fea	      0xb801000000	                              mov eax, 1	       700	state.c	FUNCTION_21	SWITCH_1
0x4001fef	      0xe90bffffff	                           jmp 0x4001eff	       700	state.c	FUNCTION_21	SWITCH_1
0x4001ff4	         0xf1f4000	                         nop dword [rax]	       700	state.c	FUNCTION_21	SWITCH_1
0x4001ff8	    0xc78214010000	              mov dword [rdx + 0x114], 1	       695	state.c	FUNCTION_21	SWITCH_1
0x4002002	      0xb801000000	                              mov eax, 1	       696	state.c	FUNCTION_21	SWITCH_1
0x4002007	      0xe9f3feffff	                           jmp 0x4001eff	       696	state.c	FUNCTION_21	SWITCH_1
0x400200c	         0xf1f4000	                         nop dword [rax]	       696	state.c	FUNCTION_21	SWITCH_1
0x4002010	            0x31c0	                            xor eax, eax	       580	state.c	FUNCTION_21	SWITCH_1	IF_1
0x4002012	        0x4883fe02	                              cmp rsi, 2	       579	state.c	FUNCTION_21	SWITCH_1	IF_1
0x4002016	     0xf85e3feffff	                           jne 0x4001eff	       579	state.c	FUNCTION_21	SWITCH_1	IF_1
0x400201c	         0xfb65701	               movzx edx, byte [rdi + 1]	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4002020	          0x80fa46	                            cmp dl, 0x46	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4002023	     0xf840e020000	                            je 0x4002237	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4002029	          0x80fa47	                            cmp dl, 0x47	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x400202c	     0xf85cdfeffff	                           jne 0x4001eff	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4002032	          0x488b03	                    mov rax, qword [rbx]	       588	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4002035	        0x80481802	                 or byte [rax + 0x18], 2	       588	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4002039	      0xb802000000	                              mov eax, 2	       594	state.c	FUNCTION_21	SWITCH_1
0x400203e	      0xe9bcfeffff	                           jmp 0x4001eff	       589	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4002043	       0xf1f440000	                   nop dword [rax + rax]	       589	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4002048	            0x31c0	                            xor eax, eax	       580	state.c	FUNCTION_21	SWITCH_1	IF_1
0x400204a	        0x4883fe02	                              cmp rsi, 2	       597	state.c	FUNCTION_21	SWITCH_1	IF_2
0x400204e	     0xf85abfeffff	                           jne 0x4001eff	       597	state.c	FUNCTION_21	SWITCH_1	IF_2
0x4002054	         0xfb64701	               movzx eax, byte [rdi + 1]	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x4002058	          0x83e833	                           sub eax, 0x33	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x400205b	            0x3c05	                               cmp al, 5	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x400205d	     0xf87cd000000	                            ja 0x4002130	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x4002063	           0xfb6c0	                           movzx eax, al	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x4002066	    0xff24c5000000	                       jmp qword [rax*8]	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x400206d	           0xf1f00	                         nop dword [rax]	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x4002070	            0x31c0	                            xor eax, eax	       580	state.c	FUNCTION_21	SWITCH_1	IF_1
0x4002072	        0x4883fe02	                              cmp rsi, 2	       641	state.c	FUNCTION_21	SWITCH_1	IF_7
0x4002076	     0xf8583feffff	                           jne 0x4001eff	       641	state.c	FUNCTION_21	SWITCH_1	IF_7
0x400207c	         0xfbe7701	               movsx esi, byte [rdi + 1]	       646	state.c	FUNCTION_21	SWITCH_1	CALL_7
0x4002080	      0xbf01000000	                              mov edi, 1	       646	state.c	FUNCTION_21	SWITCH_1	CALL_7
0x4002085	      0xe800000000	                          call 0x400208a	       646	state.c	FUNCTION_21	SWITCH_1	CALL_7
0x400208a	          0x4885c0	                           test rax, rax	       648	state.c	FUNCTION_21	SWITCH_1	IF_8
0x400208d	     0xf842d010000	                            je 0x40021c0	       648	state.c	FUNCTION_21	SWITCH_1	IF_8
0x4002093	        0x400fbed5	                          movsx edx, bpl	       645	state.c	FUNCTION_21	SWITCH_1
0x4002097	          0x488b08	                    mov rcx, qword [rax]	       651	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x400209a	          0x83ea28	                           sub edx, 0x28	       645	state.c	FUNCTION_21	SWITCH_1
0x400209d	          0x4863d2	                         movsxd rdx, edx	       649	state.c	FUNCTION_21	SWITCH_1	IF_8
0x40020a0	        0x488d1452	                  lea rdx, [rdx + rdx*2]	       649	state.c	FUNCTION_21	SWITCH_1	IF_8
0x40020a4	        0x48c1e203	                              shl rdx, 3	       649	state.c	FUNCTION_21	SWITCH_1	IF_8
0x40020a8	          0x4885c9	                           test rcx, rcx	       651	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x40020ab	    0x488984139800	       mov qword [rbx + rdx + 0x98], rax	       649	state.c	FUNCTION_21	SWITCH_1	IF_8
0x40020b3	     0xf8407010000	                            je 0x40021c0	       651	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x40020b9	          0x4889c7	                            mov rdi, rax	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x40020bc	    0x488db413a000	            lea rsi, [rbx + rdx + 0xa0] 	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x40020c4	            0xffd1	                                call rcx	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x40020c6	      0xb802000000	                              mov eax, 2	       656	state.c	FUNCTION_21	SWITCH_1
0x40020cb	      0xe92ffeffff	                           jmp 0x4001eff	       656	state.c	FUNCTION_21	SWITCH_1
0x40020d0	        0x488b4230	            mov rax, qword [rdx + 0x30] 	       548	state.c	FUNCTION_20	IF_1
0x40020d4	     0xfb6b2940100	          movzx esi, byte [rdx + 0x194] 	       549	state.c	FUNCTION_20	IF_1
0x40020db	          0x4889df	                            mov rdi, rbx	       553	state.c	FUNCTION_20	IF_1	CALL_1
0x40020de	    0x488982800100	            mov qword [rdx + 0x180], rax	       548	state.c	FUNCTION_20	IF_1
0x40020e5	     0xfb682940000	           movzx eax, byte [rdx + 0x94] 	       549	state.c	FUNCTION_20	IF_1
0x40020ec	          0x83e6fc	                     and esi, 0xfffffffc	       549	state.c	FUNCTION_20	IF_1
0x40020ef	            0x89c1	                            mov ecx, eax	       549	state.c	FUNCTION_20	IF_1
0x40020f1	          0xc0e805	                               shr al, 5	       550	state.c	FUNCTION_20	IF_1
0x40020f4	          0x83e002	                              and eax, 2	       550	state.c	FUNCTION_20	IF_1
0x40020f7	          0xc0e905	                               shr cl, 5	       549	state.c	FUNCTION_20	IF_1
0x40020fa	            0x89c2	                            mov edx, eax	       550	state.c	FUNCTION_20	IF_1
0x40020fc	          0x83e101	                              and ecx, 1	       549	state.c	FUNCTION_20	IF_1
0x40020ff	            0x89f0	                            mov eax, esi	       550	state.c	FUNCTION_20	IF_1
0x4002101	             0x9c8	                             or eax, ecx	       550	state.c	FUNCTION_20	IF_1
0x4002103	      0xbe01000000	                              mov esi, 1	       553	state.c	FUNCTION_20	IF_1	CALL_1
0x4002108	             0x9d0	                             or eax, edx	       550	state.c	FUNCTION_20	IF_1
0x400210a	     0xfb793940000	           movzx edx, word [rbx + 0x94] 	       551	state.c	FUNCTION_20	IF_1
0x4002111	          0x83e0f3	                     and eax, 0xfffffff3	       551	state.c	FUNCTION_20	IF_1
0x4002114	        0x66c1ea07	                               shr dx, 7	       551	state.c	FUNCTION_20	IF_1
0x4002118	          0x83e203	                              and edx, 3	       551	state.c	FUNCTION_20	IF_1
0x400211b	          0xc1e202	                              shl edx, 2	       551	state.c	FUNCTION_20	IF_1
0x400211e	             0x9d0	                             or eax, edx	       551	state.c	FUNCTION_20	IF_1
0x4002120	    0x888394010000	              mov byte [rbx + 0x194], al	       551	state.c	FUNCTION_20	IF_1
0x4002126	      0xe800000000	                          call 0x400212b	       553	state.c	FUNCTION_20	IF_1	CALL_1
0x400212b	      0xe9cafdffff	                           jmp 0x4001efa	       553	state.c	FUNCTION_20	IF_1	CALL_1
0x4002130	            0x31c0	                            xor eax, eax	       636	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x4002132	      0xe9c8fdffff	                           jmp 0x4001eff	       636	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x4002137	          0x8b4228	            mov eax, dword [rdx + 0x28] 	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x400213a	    0xc70424450000	                   mov dword [rsp], 0x45	       628	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x4002141	    0xc74424040000	                  mov dword [rsp + 4], 0	       628	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x4002149	            0x85c0	                           test eax, eax	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x400214b	            0x7e73	                           jle 0x40021c0	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x400214d	        0x488b7258	            mov rsi, qword [rdx + 0x58] 	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x4002151	          0x8b522c	            mov edx, dword [rdx + 0x2c] 	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x4002154	            0x31ed	                            xor ebp, ebp	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x4002156	          0x4531ed	                          xor r13d, r13d	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x4002159	     0xf1f80000000	                         nop dword [rax]	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x4002160	          0x4531f6	                          xor r14d, r14d	       571	state.c	FUNCTION_21
0x4002163	          0x4589ec	                          mov r12d, r13d	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x4002166	            0xeb26	                           jmp 0x400218e	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x4002168	     0xf1f84000000	                   nop dword [rax + rax]	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x4002170	        0x48c1e120	                           shl rcx, 0x20	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x4002174	      0xba01000000	                              mov edx, 1	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x4002179	          0x4889e6	                            mov rsi, rsp	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x400217c	          0x4c09e1	                             or rcx, r12	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x400217f	          0x4889df	                            mov rdi, rbx	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x4002182	      0xe8b9deffff	                       call sym.putglyph	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x4002187	        0x488b7358	            mov rsi, qword [rbx + 0x58] 	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x400218b	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x400218e	        0xf6042e01	                test byte [rsi + rbp], 1	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4002192	          0x4489f1	                           mov ecx, r14d	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4002195	            0x89d0	                            mov eax, edx	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4002197	            0x7407	                            je 0x40021a0	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4002199	          0xc1e81f	                           shr eax, 0x1f	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x400219c	             0x1d0	                            add eax, edx	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x400219e	            0xd1f8	                              sar eax, 1	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x40021a0	        0x4183c601	                             add r14d, 1	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x40021a4	            0x39c8	                            cmp eax, ecx	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x40021a6	            0x7fc8	                            jg 0x4002170	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x40021a8	        0x4183c501	                             add r13d, 1	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x40021ac	        0x4883c504	                              add rbp, 4	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x40021b0	        0x44396b28	           cmp dword [rbx + 0x28], r13d 	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x40021b4	            0x7faa	                            jg 0x4002160	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x40021b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x40021c0	      0xb802000000	                              mov eax, 2	       638	state.c	FUNCTION_21	SWITCH_1
0x40021c5	      0xe935fdffff	                           jmp 0x4001eff	       605	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x40021ca	    0xf68295000000	           test byte [rdx + 0x95], 0x10 	       620	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_6
0x40021d1	            0x75ed	                           jne 0x40021c0	       620	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_6
0x40021d3	          0x8b7230	            mov esi, dword [rdx + 0x30] 	       622	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_4
0x40021d6	          0x4531c0	                            xor r8d, r8d	       622	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_4
0x40021d9	      0xb901000000	                              mov ecx, 1	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x40021de	            0x31d2	                            xor edx, edx	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x40021e0	          0x4889df	                            mov rdi, rbx	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x40021e3	      0xe858dfffff	                   call sym.set_lineinfo	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x40021e8	            0xebd6	                           jmp 0x40021c0	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x40021ea	    0xf68295000000	           test byte [rdx + 0x95], 0x10 	       614	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_5
0x40021f1	            0x75cd	                           jne 0x40021c0	       614	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_5
0x40021f3	          0x8b7230	            mov esi, dword [rdx + 0x30] 	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x40021f6	          0x4531c0	                            xor r8d, r8d	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x40021f9	            0x31c9	                            xor ecx, ecx	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x40021fb	            0x31d2	                            xor edx, edx	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x40021fd	          0x4889df	                            mov rdi, rbx	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x4002200	      0xe83bdfffff	                   call sym.set_lineinfo	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x4002205	      0xb802000000	                              mov eax, 2	       638	state.c	FUNCTION_21	SWITCH_1
0x400220a	      0xe9f0fcffff	                           jmp 0x4001eff	       617	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x400220f	    0xf68295000000	           test byte [rdx + 0x95], 0x10 	       608	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_4
0x4002216	            0x75a8	                           jne 0x40021c0	       608	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_4
0x4002218	          0x8b7230	            mov esi, dword [rdx + 0x30] 	       610	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_2
0x400221b	    0x41b802000000	                              mov r8d, 2	       610	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_2
0x4002221	            0xebb6	                           jmp 0x40021d9	       610	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_2
0x4002223	    0xf68295000000	           test byte [rdx + 0x95], 0x10 	       602	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_3
0x400222a	            0x7594	                           jne 0x40021c0	       602	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_3
0x400222c	          0x8b7230	            mov esi, dword [rdx + 0x30] 	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x400222f	    0x41b801000000	                              mov r8d, 1	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x4002235	            0xeba2	                           jmp 0x40021d9	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x4002237	          0x488b03	                    mov rax, qword [rbx]	       584	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x400223a	        0x806018fd	             and byte [rax + 0x18], 0xfd	       584	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x400223e	      0xb802000000	                              mov eax, 2	       594	state.c	FUNCTION_21	SWITCH_1
0x4002243	      0xe9b7fcffff	                           jmp 0x4001eff	       585	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4002248	      0xe800000000	                          call 0x400224d	       709	state.c	FUNCTION_21
on_resize	DO,0:SWITCH,0:CALL,5:WHILE,0:ELSE,2:functions,0:IF,10:FOR,4	191
0x4000220	            0x4155	                                push r13	      1610	state.c	FUNCTION_29
0x4000222	            0x4154	                                push r12	      1610	state.c	FUNCTION_29
0x4000224	          0x4189fd	                           mov r13d, edi	      1610	state.c	FUNCTION_29
0x4000227	              0x55	                                push rbp	      1610	state.c	FUNCTION_29
0x4000228	              0x53	                                push rbx	      1610	state.c	FUNCTION_29
0x4000229	          0x4189f4	                           mov r12d, esi	      1610	state.c	FUNCTION_29
0x400022c	          0x4889d3	                            mov rbx, rdx	      1610	state.c	FUNCTION_29
0x400022f	        0x4883ec28	                           sub rsp, 0x28	      1610	state.c	FUNCTION_29
0x4000233	    0x64488b042528	                mov rax, qword fs:[0x28]	      1610	state.c	FUNCTION_29
0x400023c	      0x4889442418	             mov qword [rsp + 0x18], rax	      1610	state.c	FUNCTION_29
0x4000241	            0x31c0	                            xor eax, eax	      1610	state.c	FUNCTION_29
0x4000243	          0x39722c	            cmp dword [rdx + 0x2c], esi 	      1615	state.c	FUNCTION_29	IF_1
0x4000246	        0x488b4230	            mov rax, qword [rdx + 0x30] 	      1612	state.c	FUNCTION_29
0x400024a	    0xc74424100000	               mov dword [rsp + 0x10], 0	      1613	state.c	FUNCTION_29
0x4000252	    0xc74424140000	               mov dword [rsp + 0x14], 0	      1613	state.c	FUNCTION_29
0x400025a	        0x48890424	                    mov qword [rsp], rax	      1612	state.c	FUNCTION_29
0x400025e	     0xf84c9000000	                            je 0x400032d	      1615	state.c	FUNCTION_29	IF_1
0x4000264	          0x8d460e	                    lea eax, [rsi + 0xe]	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4000267	          0x83c607	                              add esi, 7	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x400026a	          0x488b3a	                    mov rdi, qword [rdx]	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x400026d	           0xf48f0	                          cmovs esi, eax	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4000270	          0xc1fe03	                              sar esi, 3	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4000273	          0x4863f6	                         movsxd rsi, esi	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4000276	      0xe800000000	                          call 0x400027b	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x400027b	          0x8b4b2c	            mov ecx, dword [rbx + 0x2c] 	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x400027e	            0x31d2	                            xor edx, edx	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x4000280	          0x4889c5	                            mov rbp, rax	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4000283	            0x85c9	                           test ecx, ecx	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x4000285	            0x7e52	                           jle 0x40002d9	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x4000287	          0x4585e4	                         test r12d, r12d	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x400028a	      0xbf01000000	                              mov edi, 1	      1621	state.c	FUNCTION_29	IF_1	FOR_1
0x400028f	            0x7f20	                            jg 0x40002b1	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x4000291	      0xe987000000	                           jmp 0x400031d	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x4000296	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x40002a0	         0x8440d00	                 or byte [rbp + rcx], al	      1623	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x40002a4	          0x83c201	                              add edx, 1	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x40002a7	          0x39532c	            cmp dword [rbx + 0x2c], edx 	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x40002aa	            0x7e2d	                           jle 0x40002d9	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x40002ac	          0x4139d4	                           cmp r12d, edx	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x40002af	            0x746c	                            je 0x400031d	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x40002b1	            0x89d1	                            mov ecx, edx	      1621	state.c	FUNCTION_29	IF_1	FOR_1
0x40002b3	            0x89f8	                            mov eax, edi	      1621	state.c	FUNCTION_29	IF_1	FOR_1
0x40002b5	        0x488b7350	            mov rsi, qword [rbx + 0x50] 	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x40002b9	          0x83e107	                              and ecx, 7	      1621	state.c	FUNCTION_29	IF_1	FOR_1
0x40002bc	            0xd3e0	                             shl eax, cl	      1621	state.c	FUNCTION_29	IF_1	FOR_1
0x40002be	            0x89d1	                            mov ecx, edx	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x40002c0	          0xc1f903	                              sar ecx, 3	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x40002c3	          0x4863c9	                         movsxd rcx, ecx	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x40002c6	          0x84040e	               test byte [rsi + rcx], al	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x40002c9	            0x75d5	                           jne 0x40002a0	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x40002cb	            0xf7d0	                                 not eax	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x40002cd	        0x20440d00	                and byte [rbp + rcx], al	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x40002d1	          0x83c201	                              add edx, 1	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x40002d4	          0x39532c	            cmp dword [rbx + 0x2c], edx 	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x40002d7	            0x7fd3	                            jg 0x40002ac	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x40002d9	          0x4139d4	                           cmp r12d, edx	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x40002dc	      0xbe01000000	                              mov esi, 1	      1629	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x40002e1	            0x7f17	                            jg 0x40002fa	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x40002e3	            0xeb38	                           jmp 0x400031d	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x40002e5	           0xf1f00	                         nop dword [rax]	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x40002e8	          0xc1f903	                              sar ecx, 3	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x40002eb	          0x83c201	                              add edx, 1	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x40002ee	          0x4863c9	                         movsxd rcx, ecx	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x40002f1	         0x8440d00	                 or byte [rbp + rcx], al	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x40002f5	          0x4139d4	                           cmp r12d, edx	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x40002f8	            0x7423	                            je 0x400031d	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x40002fa	            0x89d1	                            mov ecx, edx	      1629	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x40002fc	            0x89f0	                            mov eax, esi	      1629	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x40002fe	          0x83e107	                              and ecx, 7	      1629	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4000301	            0xd3e0	                             shl eax, cl	      1629	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4000303	            0x85c9	                           test ecx, ecx	      1630	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4000305	            0x89d1	                            mov ecx, edx	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4000307	            0x74df	                            je 0x40002e8	      1630	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4000309	          0xc1f903	                              sar ecx, 3	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x400030c	          0x83c201	                              add edx, 1	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x400030f	            0xf7d0	                                 not eax	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4000311	          0x4863c9	                         movsxd rcx, ecx	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4000314	        0x20440d00	                and byte [rbp + rcx], al	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4000318	          0x4139d4	                           cmp r12d, edx	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x400031b	            0x75dd	                           jne 0x40002fa	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x400031d	        0x488b7350	            mov rsi, qword [rbx + 0x50] 	      1636	state.c	FUNCTION_29	IF_1	CALL_2
0x4000321	          0x488b3b	                    mov rdi, qword [rbx]	      1636	state.c	FUNCTION_29	IF_1	CALL_2
0x4000324	      0xe800000000	                          call 0x4000329	      1636	state.c	FUNCTION_29	IF_1	CALL_2
0x4000329	        0x48896b50	             mov qword [rbx + 0x50], rbp	      1637	state.c	FUNCTION_29	IF_1
0x400032d	        0x44396b28	           cmp dword [rbx + 0x28], r13d 	      1640	state.c	FUNCTION_29	IF_4
0x4000331	     0xf8481000000	                            je 0x40003b8	      1640	state.c	FUNCTION_29	IF_4
0x4000337	          0x488b3b	                    mov rdi, qword [rbx]	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x400033a	          0x4963f5	                        movsxd rsi, r13d	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x400033d	        0x48c1e602	                              shl rsi, 2	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x4000341	      0xe800000000	                          call 0x4000346	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x4000346	        0x448b4328	            mov r8d, dword [rbx + 0x28] 	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x400034a	          0x4889c5	                            mov rbp, rax	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x400034d	        0x488b7358	            mov rsi, qword [rbx + 0x58] 	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x4000351	          0x4585c0	                           test r8d, r8d	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4000354	     0xf8e2a010000	                           jle 0x4000484	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x400035a	          0x4585ed	                         test r13d, r13d	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x400035d	            0x7e4d	                           jle 0x40003ac	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x400035f	            0x31c9	                            xor ecx, ecx	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4000361	            0x31d2	                            xor edx, edx	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4000363	            0xeb0c	                           jmp 0x4000371	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4000365	           0xf1f00	                         nop dword [rax]	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4000368	        0x4883c104	                              add rcx, 4	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x400036c	          0x4139d5	                           cmp r13d, edx	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x400036f	            0x743b	                            je 0x40003ac	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4000371	          0x8b3c0e	              mov edi, dword [rsi + rcx]	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x4000374	          0x83c201	                              add edx, 1	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4000377	          0x4439c2	                            cmp edx, r8d	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x400037a	        0x897c0d00	              mov dword [rbp + rcx], edi	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x400037e	            0x75e8	                           jne 0x4000368	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4000380	          0x4539c5	                           cmp r13d, r8d	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x4000383	            0x7e27	                           jle 0x40003ac	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x4000385	        0x418d45ff	                      lea eax, [r13 - 1]	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x4000389	          0x4963c8	                         movsxd rcx, r8d	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x400038c	      0x488d548d00	                  lea rdx, [rbp + rcx*4]	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x4000391	          0x4429c0	                            sub eax, r8d	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x4000394	      0x488d440101	                lea rax, [rcx + rax + 1]	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x4000399	      0x488d448500	                  lea rax, [rbp + rax*4]	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x400039e	            0x6690	                                     nop	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x40003a0	          0x8022f8	                    and byte [rdx], 0xf8	      1650	state.c	FUNCTION_29	IF_4	FOR_4
0x40003a3	        0x4883c204	                              add rdx, 4	      1650	state.c	FUNCTION_29	IF_4	FOR_4
0x40003a7	          0x4839d0	                            cmp rax, rdx	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x40003aa	            0x75f4	                           jne 0x40003a0	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x40003ac	          0x488b3b	                    mov rdi, qword [rbx]	      1653	state.c	FUNCTION_29	IF_4	CALL_4
0x40003af	      0xe800000000	                          call 0x40003b4	      1653	state.c	FUNCTION_29	IF_4	CALL_4
0x40003b4	        0x48896b58	             mov qword [rbx + 0x58], rbp	      1654	state.c	FUNCTION_29	IF_4
0x40003b8	          0x8b4340	            mov eax, dword [rbx + 0x40] 	      1660	state.c	FUNCTION_29	IF_5
0x40003bb	        0x44896b28	            mov dword [rbx + 0x28], r13d	      1657	state.c	FUNCTION_29
0x40003bf	        0x4489632c	            mov dword [rbx + 0x2c], r12d	      1658	state.c	FUNCTION_29
0x40003c3	          0x4139c5	                           cmp r13d, eax	      1661	state.c	FUNCTION_29	IF_5
0x40003c6	            0x7d08	                           jge 0x40003d0	      1661	state.c	FUNCTION_29	IF_5
0x40003c8	            0x85c0	                           test eax, eax	      1661	state.c	FUNCTION_29	IF_5
0x40003ca	            0x7804	                            js 0x40003d0	      1661	state.c	FUNCTION_29	IF_5
0x40003cc	        0x44896b40	            mov dword [rbx + 0x40], r13d	      1661	state.c	FUNCTION_29	IF_5
0x40003d0	          0x8b4348	            mov eax, dword [rbx + 0x48] 	      1662	state.c	FUNCTION_29	IF_6
0x40003d3	            0x85c0	                           test eax, eax	      1663	state.c	FUNCTION_29	IF_6
0x40003d5	            0x7809	                            js 0x40003e0	      1663	state.c	FUNCTION_29	IF_6
0x40003d7	          0x4139c4	                           cmp r12d, eax	      1663	state.c	FUNCTION_29	IF_6
0x40003da	            0x7d04	                           jge 0x40003e0	      1663	state.c	FUNCTION_29	IF_6
0x40003dc	        0x44896348	            mov dword [rbx + 0x48], r12d	      1663	state.c	FUNCTION_29	IF_6
0x40003e0	        0x488b4308	                mov rax, qword [rbx + 8]	      1665	state.c	FUNCTION_29	IF_7
0x40003e4	          0x4885c0	                           test rax, rax	      1665	state.c	FUNCTION_29	IF_7
0x40003e7	            0x741a	                            je 0x4000403	      1665	state.c	FUNCTION_29	IF_7
0x40003e9	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1665	state.c	FUNCTION_29	IF_7
0x40003ed	          0x4885c0	                           test rax, rax	      1665	state.c	FUNCTION_29	IF_7
0x40003f0	            0x7411	                            je 0x4000403	      1665	state.c	FUNCTION_29	IF_7
0x40003f2	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      1666	state.c	FUNCTION_29	IF_7
0x40003f6	      0x488d542410	                   lea rdx, [rsp + 0x10]	      1666	state.c	FUNCTION_29	IF_7
0x40003fb	          0x4489e6	                           mov esi, r12d	      1666	state.c	FUNCTION_29	IF_7
0x40003fe	          0x4489ef	                           mov edi, r13d	      1666	state.c	FUNCTION_29	IF_7
0x4000401	            0xffd0	                                call rax	      1666	state.c	FUNCTION_29	IF_7
0x4000403	          0x8b4338	            mov eax, dword [rbx + 0x38] 	      1668	state.c	FUNCTION_29	IF_8
0x4000406	            0x85c0	                           test eax, eax	      1668	state.c	FUNCTION_29	IF_8
0x4000408	          0x8b4334	            mov eax, dword [rbx + 0x34] 	      1668	state.c	FUNCTION_29	IF_8
0x400040b	            0x7409	                            je 0x4000416	      1668	state.c	FUNCTION_29	IF_8
0x400040d	      0x418d5424ff	                      lea edx, [r12 - 1]	      1668	state.c	FUNCTION_29	IF_8
0x4000412	            0x39d0	                            cmp eax, edx	      1668	state.c	FUNCTION_29	IF_8
0x4000414	            0x7c62	                            jl 0x4000478	      1668	state.c	FUNCTION_29	IF_8
0x4000416	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      1673	state.c	FUNCTION_29
0x400041a	           0x35330	             add edx, dword [rbx + 0x30]	      1673	state.c	FUNCTION_29
0x400041d	         0x3442414	             add eax, dword [rsp + 0x14]	      1674	state.c	FUNCTION_29
0x4000421	          0x4139d5	                           cmp r13d, edx	      1676	state.c	FUNCTION_29	IF_9
0x4000424	          0x895330	             mov dword [rbx + 0x30], edx	      1673	state.c	FUNCTION_29
0x4000427	          0x894334	             mov dword [rbx + 0x34], eax	      1674	state.c	FUNCTION_29
0x400042a	            0x7f08	                            jg 0x4000434	      1676	state.c	FUNCTION_29	IF_9
0x400042c	        0x4183ed01	                             sub r13d, 1	      1677	state.c	FUNCTION_29	IF_9
0x4000430	        0x44896b30	            mov dword [rbx + 0x30], r13d	      1677	state.c	FUNCTION_29	IF_9
0x4000434	          0x4139c4	                           cmp r12d, eax	      1678	state.c	FUNCTION_29	IF_10
0x4000437	            0x7f08	                            jg 0x4000441	      1678	state.c	FUNCTION_29	IF_10
0x4000439	        0x4183ec01	                             sub r12d, 1	      1679	state.c	FUNCTION_29	IF_10
0x400043d	        0x44896334	            mov dword [rbx + 0x34], r12d	      1679	state.c	FUNCTION_29	IF_10
0x4000441	          0x4889df	                            mov rdi, rbx	      1681	state.c	FUNCTION_29	CALL_5
0x4000444	      0xba01000000	                              mov edx, 1	      1681	state.c	FUNCTION_29	CALL_5
0x4000449	          0x4889e6	                            mov rsi, rsp	      1681	state.c	FUNCTION_29	CALL_5
0x400044c	      0xe88ffcffff	                   call sym.updatecursor	      1681	state.c	FUNCTION_29	CALL_5
0x4000451	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1684	state.c	FUNCTION_29
0x4000456	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1684	state.c	FUNCTION_29
0x400045f	      0xb801000000	                              mov eax, 1	      1684	state.c	FUNCTION_29
0x4000464	            0x7526	                           jne 0x400048c	      1684	state.c	FUNCTION_29
0x4000466	        0x4883c428	                           add rsp, 0x28	      1684	state.c	FUNCTION_29
0x400046a	              0x5b	                                 pop rbx	      1684	state.c	FUNCTION_29
0x400046b	              0x5d	                                 pop rbp	      1684	state.c	FUNCTION_29
0x400046c	            0x415c	                                 pop r12	      1684	state.c	FUNCTION_29
0x400046e	            0x415d	                                 pop r13	      1684	state.c	FUNCTION_29
0x4000470	              0xc3	                                     ret	      1684	state.c	FUNCTION_29
0x4000471	     0xf1f80000000	                         nop dword [rax]	      1684	state.c	FUNCTION_29
0x4000478	    0xc74338000000	               mov dword [rbx + 0x38], 0	      1669	state.c	FUNCTION_29	IF_8
0x400047f	          0x83c001	                              add eax, 1	      1670	state.c	FUNCTION_29	IF_8
0x4000482	            0xeb92	                           jmp 0x4000416	      1670	state.c	FUNCTION_29	IF_8
0x4000484	          0x4531c0	                            xor r8d, r8d	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4000487	      0xe9f4feffff	                           jmp 0x4000380	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x400048c	      0xe800000000	                          call 0x4000491	      1684	state.c	FUNCTION_29
vterm_state_reset	DO,0:SWITCH,0:CALL,10:WHILE,0:ELSE,1:functions,0:IF,4:FOR,3	145
0x4001c90	            0x4156	                                push r14	      1722	state.c	FUNCTION_31
0x4001c92	            0x4155	                                push r13	      1722	state.c	FUNCTION_31
0x4001c94	            0x4154	                                push r12	      1722	state.c	FUNCTION_31
0x4001c96	              0x55	                                push rbp	      1722	state.c	FUNCTION_31
0x4001c97	          0x4189f4	                           mov r12d, esi	      1722	state.c	FUNCTION_31
0x4001c9a	              0x53	                                push rbx	      1722	state.c	FUNCTION_31
0x4001c9b	      0xbe01000000	                              mov esi, 1	      1722	state.c	FUNCTION_31
0x4001ca0	          0x4889fb	                            mov rbx, rdi	      1722	state.c	FUNCTION_31
0x4001ca3	        0x4883ec10	                           sub rsp, 0x10	      1722	state.c	FUNCTION_31
0x4001ca7	          0x8b572c	            mov edx, dword [rdi + 0x2c] 	      1745	state.c	FUNCTION_31	FOR_1
0x4001caa	    0xc7473c000000	               mov dword [rdi + 0x3c], 0	      1725	state.c	FUNCTION_31
0x4001cb1	    0x64488b042528	                mov rax, qword fs:[0x28]	      1722	state.c	FUNCTION_31
0x4001cba	      0x4889442408	                mov qword [rsp + 8], rax	      1722	state.c	FUNCTION_31
0x4001cbf	            0x31c0	                            xor eax, eax	      1722	state.c	FUNCTION_31
0x4001cc1	     0xfb687940000	           movzx eax, byte [rdi + 0x94] 	      1732	state.c	FUNCTION_31
0x4001cc8	    0x80a795000000	             and byte [rdi + 0x95], 0x89	      1739	state.c	FUNCTION_31
0x4001ccf	    0xc74740ffffff	     mov dword [rdi + 0x40], 0xffffffff 	      1726	state.c	FUNCTION_31
0x4001cd6	    0xc74744000000	               mov dword [rdi + 0x44], 0	      1727	state.c	FUNCTION_31
0x4001cdd	    0xc74748ffffff	     mov dword [rdi + 0x48], 0xffffffff 	      1728	state.c	FUNCTION_31
0x4001ce4	          0x83e0e0	                     and eax, 0xffffffe0	      1732	state.c	FUNCTION_31
0x4001ce7	          0x83c804	                               or eax, 4	      1734	state.c	FUNCTION_31
0x4001cea	    0x888794000000	               mov byte [rdi + 0x94], al	      1734	state.c	FUNCTION_31
0x4001cf0	          0x488b07	                    mov rax, qword [rdi]	      1741	state.c	FUNCTION_31
0x4001cf3	        0x806018fd	             and byte [rax + 0x18], 0xfd	      1741	state.c	FUNCTION_31
0x4001cf7	            0x31c0	                            xor eax, eax	      1741	state.c	FUNCTION_31
0x4001cf9	            0x85d2	                           test edx, edx	      1745	state.c	FUNCTION_31	FOR_1
0x4001cfb	            0x7f0e	                            jg 0x4001d0b	      1745	state.c	FUNCTION_31	FOR_1
0x4001cfd	            0xeb31	                           jmp 0x4001d30	      1745	state.c	FUNCTION_31	FOR_1
0x4001cff	              0x90	                                     nop	      1745	state.c	FUNCTION_31	FOR_1
0x4001d00	          0x800a01	                        or byte [rdx], 1	       158	state.c	FUNCTION_9
0x4001d03	          0x83c001	                              add eax, 1	      1745	state.c	FUNCTION_31	FOR_1
0x4001d06	          0x39432c	            cmp dword [rbx + 0x2c], eax 	      1745	state.c	FUNCTION_31	FOR_1
0x4001d09	            0x7e25	                           jle 0x4001d30	      1745	state.c	FUNCTION_31	FOR_1
0x4001d0b	            0x89c2	                            mov edx, eax	       158	state.c	FUNCTION_9
0x4001d0d	            0x89c1	                            mov ecx, eax	      1746	state.c	FUNCTION_31	FOR_1	IF_1
0x4001d0f	          0xc1fa03	                              sar edx, 3	       158	state.c	FUNCTION_9
0x4001d12	          0x4863d2	                         movsxd rdx, edx	       158	state.c	FUNCTION_9
0x4001d15	        0x48035350	             add rdx, qword [rbx + 0x50]	       158	state.c	FUNCTION_9
0x4001d19	          0x83e107	                              and ecx, 7	      1746	state.c	FUNCTION_31	FOR_1	IF_1
0x4001d1c	            0x74e2	                            je 0x4001d00	      1746	state.c	FUNCTION_31	FOR_1	IF_1
0x4001d1e	            0x89f7	                            mov edi, esi	       164	state.c	FUNCTION_10
0x4001d20	          0x83c001	                              add eax, 1	      1745	state.c	FUNCTION_31	FOR_1
0x4001d23	            0xd3e7	                             shl edi, cl	       164	state.c	FUNCTION_10
0x4001d25	            0x89f9	                            mov ecx, edi	       164	state.c	FUNCTION_10
0x4001d27	            0xf7d1	                                 not ecx	       164	state.c	FUNCTION_10
0x4001d29	            0x200a	                      and byte [rdx], cl	       164	state.c	FUNCTION_10
0x4001d2b	          0x39432c	            cmp dword [rbx + 0x2c], eax 	      1745	state.c	FUNCTION_31	FOR_1
0x4001d2e	            0x7fdb	                            jg 0x4001d0b	      1745	state.c	FUNCTION_31	FOR_1
0x4001d30	          0x8b4328	            mov eax, dword [rbx + 0x28] 	      1754	state.c	FUNCTION_31	FOR_2
0x4001d33	            0x31ed	                            xor ebp, ebp	      1754	state.c	FUNCTION_31	FOR_2
0x4001d35	            0x85c0	                           test eax, eax	      1754	state.c	FUNCTION_31	FOR_2
0x4001d37	            0x7e23	                           jle 0x4001d5c	      1754	state.c	FUNCTION_31	FOR_2
0x4001d39	     0xf1f80000000	                         nop dword [rax]	      1754	state.c	FUNCTION_31	FOR_2
0x4001d40	          0x4531c0	                            xor r8d, r8d	      1755	state.c	FUNCTION_31	CALL_3
0x4001d43	            0x31c9	                            xor ecx, ecx	      1755	state.c	FUNCTION_31	CALL_3
0x4001d45	            0x89ee	                            mov esi, ebp	      1755	state.c	FUNCTION_31	CALL_3
0x4001d47	      0xba01000000	                              mov edx, 1	      1755	state.c	FUNCTION_31	CALL_3
0x4001d4c	          0x4889df	                            mov rdi, rbx	      1755	state.c	FUNCTION_31	CALL_3
0x4001d4f	          0x83c501	                              add ebp, 1	      1754	state.c	FUNCTION_31	FOR_2
0x4001d52	      0xe8e9e3ffff	                   call sym.set_lineinfo	      1755	state.c	FUNCTION_31	CALL_3
0x4001d57	          0x396b28	            cmp dword [rbx + 0x28], ebp 	      1754	state.c	FUNCTION_31	FOR_2
0x4001d5a	            0x7fe4	                            jg 0x4001d40	      1754	state.c	FUNCTION_31	FOR_2
0x4001d5c	        0x488b4308	                mov rax, qword [rbx + 8]	      1758	state.c	FUNCTION_31	IF_2
0x4001d60	          0x4885c0	                           test rax, rax	      1758	state.c	FUNCTION_31	IF_2
0x4001d63	            0x740f	                            je 0x4001d74	      1758	state.c	FUNCTION_31	IF_2
0x4001d65	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1758	state.c	FUNCTION_31	IF_2
0x4001d69	          0x4885c0	                           test rax, rax	      1758	state.c	FUNCTION_31	IF_2
0x4001d6c	            0x7406	                            je 0x4001d74	      1758	state.c	FUNCTION_31	IF_2
0x4001d6e	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1759	state.c	FUNCTION_31	IF_2
0x4001d72	            0xffd0	                                call rax	      1759	state.c	FUNCTION_31	IF_2
0x4001d74	          0x4889df	                            mov rdi, rbx	      1761	state.c	FUNCTION_31	CALL_4
0x4001d77	      0xe800000000	                          call 0x4001d7c	      1761	state.c	FUNCTION_31	CALL_4
0x4001d7c	          0x488b03	                    mov rax, qword [rbx]	      1763	state.c	FUNCTION_31
0x4001d7f	        0xf6401801	               test byte [rax + 0x18], 1	      1764	state.c	FUNCTION_31	CALL_5
0x4001d83	     0xf8407010000	                            je 0x4001e90	      1764	state.c	FUNCTION_31	CALL_5
0x4001d89	      0xbe75000000	                           mov esi, 0x75	      1764	state.c	FUNCTION_31	CALL_5
0x4001d8e	            0x31ff	                            xor edi, edi	      1764	state.c	FUNCTION_31	CALL_5
0x4001d90	      0xe800000000	                          call 0x4001d95	      1764	state.c	FUNCTION_31	CALL_5
0x4001d95	          0x4989c5	                            mov r13, rax	      1764	state.c	FUNCTION_31	CALL_5
0x4001d98	    0x488daba00000	                   lea rbp, [rbx + 0xa0]	      1764	state.c	FUNCTION_31	CALL_5
0x4001d9f	    0x4c8db3000100	                  lea r14, [rbx + 0x100]	      1764	state.c	FUNCTION_31	CALL_5
0x4001da6	        0x4c896df8	                mov qword [rbp - 8], r13	      1770	state.c	FUNCTION_31	FOR_3
0x4001daa	        0x498b4500	                    mov rax, qword [r13]	      1771	state.c	FUNCTION_31	FOR_3	IF_3
0x4001dae	          0x4885c0	                           test rax, rax	      1771	state.c	FUNCTION_31	FOR_3	IF_3
0x4001db1	            0x7408	                            je 0x4001dbb	      1771	state.c	FUNCTION_31	FOR_3	IF_3
0x4001db3	          0x4889ee	                            mov rsi, rbp	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x4001db6	          0x4c89ef	                            mov rdi, r13	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x4001db9	            0xffd0	                                call rax	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x4001dbb	        0x4883c518	                           add rbp, 0x18	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x4001dbf	          0x4c39f5	                            cmp rbp, r14	      1769	state.c	FUNCTION_31	FOR_3
0x4001dc2	            0x75e2	                           jne 0x4001da6	      1769	state.c	FUNCTION_31	FOR_3
0x4001dc4	    0x80a37c010000	            and byte [rbx + 0x17c], 0xfe	      1780	state.c	FUNCTION_31
0x4001dcb	          0x4889e2	                            mov rdx, rsp	       520	state.c	FUNCTION_17	CALL_1
0x4001dce	      0xbe01000000	                              mov esi, 1	       520	state.c	FUNCTION_17	CALL_1
0x4001dd3	          0x4889df	                            mov rdi, rbx	       520	state.c	FUNCTION_17	CALL_1
0x4001dd6	    0xc78310010000	              mov dword [rbx + 0x110], 0	      1776	state.c	FUNCTION_31
0x4001de0	    0xc78314010000	              mov dword [rbx + 0x114], 1	      1777	state.c	FUNCTION_31
0x4001dea	    0xc78318010000	              mov dword [rbx + 0x118], 0	      1778	state.c	FUNCTION_31
0x4001df4	    0xc70424010000	                      mov dword [rsp], 1	       519	state.c	FUNCTION_17
0x4001dfb	      0xe800000000	                          call 0x4001e00	       520	state.c	FUNCTION_17	CALL_1
0x4001e00	          0x4889e2	                            mov rdx, rsp	       520	state.c	FUNCTION_17	CALL_1
0x4001e03	      0xbe02000000	                              mov esi, 2	       520	state.c	FUNCTION_17	CALL_1
0x4001e08	          0x4889df	                            mov rdi, rbx	       520	state.c	FUNCTION_17	CALL_1
0x4001e0b	    0xc70424010000	                      mov dword [rsp], 1	       519	state.c	FUNCTION_17
0x4001e12	      0xe800000000	                          call 0x4001e17	       520	state.c	FUNCTION_17	CALL_1
0x4001e17	          0x4889e2	                            mov rdx, rsp	       527	state.c	FUNCTION_18	CALL_1
0x4001e1a	      0xbe07000000	                              mov esi, 7	       527	state.c	FUNCTION_18	CALL_1
0x4001e1f	          0x4889df	                            mov rdi, rbx	       527	state.c	FUNCTION_18	CALL_1
0x4001e22	    0xc70424010000	                      mov dword [rsp], 1	       526	state.c	FUNCTION_18
0x4001e29	      0xe800000000	                          call 0x4001e2e	       527	state.c	FUNCTION_18	CALL_1
0x4001e2e	          0x4585e4	                         test r12d, r12d	      1787	state.c	FUNCTION_31	IF_4
0x4001e31	            0x743d	                            je 0x4001e70	      1787	state.c	FUNCTION_31	IF_4
0x4001e33	          0x8b7b28	            mov edi, dword [rbx + 0x28] 	      1787	state.c	FUNCTION_31	IF_4
0x4001e36	          0x8b732c	            mov esi, dword [rbx + 0x2c] 	      1787	state.c	FUNCTION_31	IF_4
0x4001e39	        0x488b4308	                mov rax, qword [rbx + 8]	      1787	state.c	FUNCTION_31	IF_4
0x4001e3d	    0xc74330000000	               mov dword [rbx + 0x30], 0	      1790	state.c	FUNCTION_31	IF_4
0x4001e44	    0xc74334000000	               mov dword [rbx + 0x34], 0	      1791	state.c	FUNCTION_31	IF_4
0x4001e4b	    0xc74338000000	               mov dword [rbx + 0x38], 0	      1792	state.c	FUNCTION_31	IF_4
0x4001e52	        0x48c1e720	                           shl rdi, 0x20	      1792	state.c	FUNCTION_31	IF_4
0x4001e56	        0x48c1e620	                           shl rsi, 0x20	      1792	state.c	FUNCTION_31	IF_4
0x4001e5a	          0x4885c0	                           test rax, rax	        47	state.c	FUNCTION_3	IF_1
0x4001e5d	            0x7411	                            je 0x4001e70	        47	state.c	FUNCTION_3	IF_1
0x4001e5f	        0x488b4020	            mov rax, qword [rax + 0x20] 	        47	state.c	FUNCTION_3	IF_1
0x4001e63	          0x4885c0	                           test rax, rax	        47	state.c	FUNCTION_3	IF_1
0x4001e66	            0x7408	                            je 0x4001e70	        47	state.c	FUNCTION_3	IF_1
0x4001e68	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4001e6c	            0x31d2	                            xor edx, edx	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4001e6e	            0xffd0	                                call rax	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4001e70	      0x488b442408	                mov rax, qword [rsp + 8]	      1798	state.c	FUNCTION_31
0x4001e75	    0x644833042528	                xor rax, qword fs:[0x28]	      1798	state.c	FUNCTION_31
0x4001e7e	            0x7527	                           jne 0x4001ea7	      1798	state.c	FUNCTION_31
0x4001e80	        0x4883c410	                           add rsp, 0x10	      1798	state.c	FUNCTION_31
0x4001e84	              0x5b	                                 pop rbx	      1798	state.c	FUNCTION_31
0x4001e85	              0x5d	                                 pop rbp	      1798	state.c	FUNCTION_31
0x4001e86	            0x415c	                                 pop r12	      1798	state.c	FUNCTION_31
0x4001e88	            0x415d	                                 pop r13	      1798	state.c	FUNCTION_31
0x4001e8a	            0x415e	                                 pop r14	      1798	state.c	FUNCTION_31
0x4001e8c	              0xc3	                                     ret	      1798	state.c	FUNCTION_31
0x4001e8d	           0xf1f00	                         nop dword [rax]	      1798	state.c	FUNCTION_31
0x4001e90	      0xbe42000000	                           mov esi, 0x42	      1764	state.c	FUNCTION_31	CALL_5
0x4001e95	      0xbf01000000	                              mov edi, 1	      1764	state.c	FUNCTION_31	CALL_5
0x4001e9a	      0xe800000000	                          call 0x4001e9f	      1764	state.c	FUNCTION_31	CALL_5
0x4001e9f	          0x4989c5	                            mov r13, rax	      1764	state.c	FUNCTION_31	CALL_5
0x4001ea2	      0xe9f1feffff	                           jmp 0x4001d98	      1764	state.c	FUNCTION_31	CALL_5
0x4001ea7	      0xe800000000	                          call 0x4001eac	      1798	state.c	FUNCTION_31
vterm_state_focus_out	DO,0:SWITCH,0:CALL,1:WHILE,0:ELSE,0:functions,0:IF,1:FOR,0	9
0x4003bb0	    0xf68795000000	           test byte [rdi + 0x95], 0x40 	      1910	state.c	FUNCTION_40	IF_1
0x4003bb7	            0x7507	                           jne 0x4003bc0	      1910	state.c	FUNCTION_40	IF_1
0x4003bb9	            0xf3c3	                                     ret	      1910	state.c	FUNCTION_40	IF_1
0x4003bbb	       0xf1f440000	                   nop dword [rax + rax]	      1910	state.c	FUNCTION_40	IF_1
0x4003bc0	          0x488b3f	                    mov rdi, qword [rdi]	      1911	state.c	FUNCTION_40	CALL_1
0x4003bc3	      0xba00000000	                              mov edx, 0	      1911	state.c	FUNCTION_40	CALL_1
0x4003bc8	      0xbe9b000000	                           mov esi, 0x9b	      1911	state.c	FUNCTION_40	CALL_1
0x4003bcd	            0x31c0	                            xor eax, eax	      1911	state.c	FUNCTION_40	CALL_1
0x4003bcf	      0xe900000000	                           jmp 0x4003bd4	      1911	state.c	FUNCTION_40	CALL_1
scroll	DO,0:SWITCH,0:CALL,4:WHILE,0:ELSE,3:functions,0:IF,10:FOR,0	104
0x40004a0	            0x89c8	                            mov eax, ecx	        89	state.c	FUNCTION_6	IF_1
0x40004a2	          0x4409c0	                             or eax, r8d	        89	state.c	FUNCTION_6	IF_1
0x40004a5	     0xf84e9000000	                            je 0x4000594	        89	state.c	FUNCTION_6	IF_1
0x40004ab	          0x4889f0	                            mov rax, rsi	        89	state.c	FUNCTION_6	IF_1
0x40004ae	            0x4156	                                push r14	        86	state.c	FUNCTION_6
0x40004b0	            0x4155	                                push r13	        86	state.c	FUNCTION_6
0x40004b2	        0x48c1f820	                           sar rax, 0x20	        86	state.c	FUNCTION_6
0x40004b6	            0x4154	                                push r12	        86	state.c	FUNCTION_6
0x40004b8	              0x55	                                push rbp	        86	state.c	FUNCTION_6
0x40004b9	            0x29f0	                            sub eax, esi	        92	state.c	FUNCTION_6
0x40004bb	              0x53	                                push rbx	        86	state.c	FUNCTION_6
0x40004bc	            0x39c1	                            cmp ecx, eax	        93	state.c	FUNCTION_6	IF_2
0x40004be	          0x4189c4	                           mov r12d, eax	        93	state.c	FUNCTION_6	IF_2
0x40004c1	     0xf8ed9000000	                           jle 0x40005a0	        93	state.c	FUNCTION_6	IF_2
0x40004c7	          0x4889d1	                            mov rcx, rdx	        93	state.c	FUNCTION_6	IF_2
0x40004ca	        0x48c1f920	                           sar rcx, 0x20	        93	state.c	FUNCTION_6	IF_2
0x40004ce	          0x4189cd	                           mov r13d, ecx	        98	state.c	FUNCTION_6
0x40004d1	          0x4129d5	                           sub r13d, edx	        98	state.c	FUNCTION_6
0x40004d4	          0x4539e8	                           cmp r8d, r13d	        99	state.c	FUNCTION_6	IF_4
0x40004d7	     0xf8ed3000000	                           jle 0x40005b0	        99	state.c	FUNCTION_6	IF_4
0x40004dd	            0x85d2	                           test edx, edx	       105	state.c	FUNCTION_6	IF_6
0x40004df	          0x4989d6	                            mov r14, rdx	       105	state.c	FUNCTION_6	IF_6
0x40004e2	          0x4889f3	                            mov rbx, rsi	       105	state.c	FUNCTION_6	IF_6
0x40004e5	          0x4889fd	                            mov rbp, rdi	       105	state.c	FUNCTION_6	IF_6
0x40004e8	            0x754e	                           jne 0x4000538	       105	state.c	FUNCTION_6	IF_6
0x40004ea	          0x394f2c	            cmp dword [rdi + 0x2c], ecx 	       105	state.c	FUNCTION_6	IF_6
0x40004ed	            0x7549	                           jne 0x4000538	       105	state.c	FUNCTION_6	IF_6
0x40004ef	          0x4585ed	                         test r13d, r13d	       105	state.c	FUNCTION_6	IF_6
0x40004f2	            0x7544	                           jne 0x4000538	       105	state.c	FUNCTION_6	IF_6
0x40004f4	          0x4489e1	                           mov ecx, r12d	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x40004f7	        0x488b7f58	            mov rdi, qword [rdi + 0x58] 	       110	state.c	FUNCTION_6	IF_6	IF_7
0x40004fb	          0xc1f91f	                           sar ecx, 0x1f	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x40004fe	            0x89ca	                            mov edx, ecx	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x4000500	          0x4431e2	                           xor edx, r12d	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x4000503	            0x29ca	                            sub edx, ecx	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x4000505	          0x4863ce	                         movsxd rcx, esi	       110	state.c	FUNCTION_6	IF_6	IF_7
0x4000508	            0x29d0	                            sub eax, edx	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x400050a	          0x4585e4	                         test r12d, r12d	       108	state.c	FUNCTION_6	IF_6	IF_7
0x400050d	            0x4898	                                    cdqe	        59	string3.h	FUNCTION_43	CALL_3
0x400050f	    0x488d14850000	                        lea rdx, [rax*4]	        59	string3.h	FUNCTION_43	CALL_3
0x4000517	     0xf8eb3000000	                           jle 0x40005d0	       108	state.c	FUNCTION_6	IF_6	IF_7
0x400051d	          0x4963f4	                        movsxd rsi, r12d	        59	string3.h	FUNCTION_43	CALL_3
0x4000520	          0x4889c8	                            mov rax, rcx	        59	string3.h	FUNCTION_43	CALL_3
0x4000523	        0x488d0c0e	                    lea rcx, [rsi + rcx]	        59	string3.h	FUNCTION_43	CALL_3
0x4000527	        0x488d348f	                  lea rsi, [rdi + rcx*4]	        59	string3.h	FUNCTION_43	CALL_3
0x400052b	        0x488d3c87	                  lea rdi, [rdi + rax*4]	        59	string3.h	FUNCTION_43	CALL_3
0x400052f	      0xe800000000	                          call 0x4000534	        59	string3.h	FUNCTION_43	CALL_3
0x4000534	         0xf1f4000	                         nop dword [rax]	        59	string3.h	FUNCTION_43	CALL_3
0x4000538	        0x488b4508	                mov rax, qword [rbp + 8]	       118	state.c	FUNCTION_6	IF_8
0x400053c	          0x4885c0	                           test rax, rax	       118	state.c	FUNCTION_6	IF_8
0x400053f	            0x744b	                            je 0x400058c	       118	state.c	FUNCTION_6	IF_8
0x4000541	        0x4c8b4810	              mov r9, qword [rax + 0x10]	       118	state.c	FUNCTION_6	IF_8
0x4000545	          0x4d85c9	                             test r9, r9	       118	state.c	FUNCTION_6	IF_8
0x4000548	            0x7420	                            je 0x400056a	       118	state.c	FUNCTION_6	IF_8
0x400054a	        0x4c8b4510	              mov r8, qword [rbp + 0x10]	       119	state.c	FUNCTION_6	IF_8	IF_9
0x400054e	          0x4489e9	                           mov ecx, r13d	       119	state.c	FUNCTION_6	IF_8	IF_9
0x4000551	          0x4489e2	                           mov edx, r12d	       119	state.c	FUNCTION_6	IF_8	IF_9
0x4000554	          0x4889df	                            mov rdi, rbx	       119	state.c	FUNCTION_6	IF_8	IF_9
0x4000557	          0x4c89f6	                            mov rsi, r14	       119	state.c	FUNCTION_6	IF_8	IF_9
0x400055a	          0x41ffd1	                                 call r9	       119	state.c	FUNCTION_6	IF_8	IF_9
0x400055d	            0x85c0	                           test eax, eax	       119	state.c	FUNCTION_6	IF_8	IF_9
0x400055f	            0x752b	                           jne 0x400058c	       119	state.c	FUNCTION_6	IF_8	IF_9
0x4000561	        0x488b4508	                mov rax, qword [rbp + 8]	       122	state.c	FUNCTION_6	IF_10
0x4000565	          0x4885c0	                           test rax, rax	       122	state.c	FUNCTION_6	IF_10
0x4000568	            0x7422	                            je 0x400058c	       122	state.c	FUNCTION_6	IF_10
0x400056a	        0x4883ec08	                              sub rsp, 8	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x400056e	          0xff7510	                 push qword [rbp + 0x10]	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x4000571	        0x4c8b4820	              mov r9, qword [rax + 0x20]	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x4000575	        0x4c8b4018	              mov r8, qword [rax + 0x18]	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x4000579	          0x4489e2	                           mov edx, r12d	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x400057c	          0x4489e9	                           mov ecx, r13d	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x400057f	          0x4889df	                            mov rdi, rbx	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x4000582	          0x4c89f6	                            mov rsi, r14	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x4000585	      0xe800000000	                          call 0x400058a	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x400058a	              0x58	                                 pop rax	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x400058b	              0x5a	                                 pop rdx	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x400058c	              0x5b	                                 pop rbx	       125	state.c	FUNCTION_6
0x400058d	              0x5d	                                 pop rbp	       125	state.c	FUNCTION_6
0x400058e	            0x415c	                                 pop r12	       125	state.c	FUNCTION_6
0x4000590	            0x415d	                                 pop r13	       125	state.c	FUNCTION_6
0x4000592	            0x415e	                                 pop r14	       125	state.c	FUNCTION_6
0x4000594	            0xf3c3	                                     ret	       125	state.c	FUNCTION_6
0x4000596	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       125	state.c	FUNCTION_6
0x40005a0	          0x41f7dc	                                neg r12d	        95	state.c	FUNCTION_6	ELSE_1	IF_3
0x40005a3	          0x4439e1	                           cmp ecx, r12d	        95	state.c	FUNCTION_6	ELSE_1	IF_3
0x40005a6	        0x440f4de1	                        cmovge r12d, ecx	        95	state.c	FUNCTION_6	ELSE_1	IF_3
0x40005aa	      0xe918ffffff	                           jmp 0x40004c7	        95	state.c	FUNCTION_6	ELSE_1	IF_3
0x40005af	              0x90	                                     nop	        95	state.c	FUNCTION_6	ELSE_1	IF_3
0x40005b0	          0x41f7dd	                                neg r13d	       101	state.c	FUNCTION_6	ELSE_2	IF_5
0x40005b3	          0x4989d6	                            mov r14, rdx	       101	state.c	FUNCTION_6	ELSE_2	IF_5
0x40005b6	          0x4889f3	                            mov rbx, rsi	       101	state.c	FUNCTION_6	ELSE_2	IF_5
0x40005b9	          0x4539e8	                           cmp r8d, r13d	       101	state.c	FUNCTION_6	ELSE_2	IF_5
0x40005bc	          0x4889fd	                            mov rbp, rdi	       101	state.c	FUNCTION_6	ELSE_2	IF_5
0x40005bf	        0x450f4de8	                        cmovge r13d, r8d	       101	state.c	FUNCTION_6	ELSE_2	IF_5
0x40005c3	            0x85d2	                           test edx, edx	       105	state.c	FUNCTION_6	IF_6
0x40005c5	     0xf856dffffff	                           jne 0x4000538	       105	state.c	FUNCTION_6	IF_6
0x40005cb	      0xe91affffff	                           jmp 0x40004ea	       105	state.c	FUNCTION_6	IF_6
0x40005d0	        0x488d348f	                  lea rsi, [rdi + rcx*4]	        59	string3.h	FUNCTION_43	CALL_3
0x40005d4	          0x4889c8	                            mov rax, rcx	        59	string3.h	FUNCTION_43	CALL_3
0x40005d7	          0x4963cc	                        movsxd rcx, r12d	        59	string3.h	FUNCTION_43	CALL_3
0x40005da	          0x4829c8	                            sub rax, rcx	        59	string3.h	FUNCTION_43	CALL_3
0x40005dd	        0x488d3c87	                  lea rdi, [rdi + rax*4]	        59	string3.h	FUNCTION_43	CALL_3
0x40005e1	      0xe800000000	                          call 0x40005e6	        59	string3.h	FUNCTION_43	CALL_3
0x40005e6	      0xe94dffffff	                           jmp 0x4000538	        59	string3.h	FUNCTION_43	CALL_3
on_csi	DO,0:SWITCH,10:CALL,150:WHILE,0:ELSE,5:functions,0:IF,36:FOR,4	1542
0x4002250	            0x4157	                                push r15	       901	state.c	FUNCTION_25
0x4002252	            0x4156	                                push r14	       901	state.c	FUNCTION_25
0x4002254	            0x4155	                                push r13	       901	state.c	FUNCTION_25
0x4002256	            0x4154	                                push r12	       901	state.c	FUNCTION_25
0x4002258	              0x55	                                push rbp	       901	state.c	FUNCTION_25
0x4002259	              0x53	                                push rbx	       901	state.c	FUNCTION_25
0x400225a	          0x4c89cb	                             mov rbx, r9	       901	state.c	FUNCTION_25
0x400225d	        0x4883ec28	                           sub rsp, 0x28	       901	state.c	FUNCTION_25
0x4002261	        0x4d8b5130	              mov r10, qword [r9 + 0x30]	       905	state.c	FUNCTION_25
0x4002265	    0x64488b042528	                mov rax, qword fs:[0x28]	       901	state.c	FUNCTION_25
0x400226e	      0x4889442418	             mov qword [rsp + 0x18], rax	       901	state.c	FUNCTION_25
0x4002273	            0x31c0	                            xor eax, eax	       901	state.c	FUNCTION_25
0x4002275	          0x4885ff	                           test rdi, rdi	       913	state.c	FUNCTION_25	IF_1
0x4002278	        0x4c891424	                    mov qword [rsp], r10	       905	state.c	FUNCTION_25
0x400227c	            0x740d	                            je 0x400228b	       913	state.c	FUNCTION_25	IF_1
0x400227e	        0x440fb60f	                   movzx r9d, byte [rdi]	       913	state.c	FUNCTION_25	IF_1
0x4002282	          0x4584c9	                           test r9b, r9b	       913	state.c	FUNCTION_25	IF_1
0x4002285	     0xf85fd000000	                           jne 0x4002388	       913	state.c	FUNCTION_25	IF_1
0x400228b	          0x4531db	                          xor r11d, r11d	       903	state.c	FUNCTION_25
0x400228e	          0x4885c9	                           test rcx, rcx	       927	state.c	FUNCTION_25	IF_3
0x4002291	            0x740b	                            je 0x400229e	       927	state.c	FUNCTION_25	IF_3
0x4002293	           0xfbe01	                   movsx eax, byte [rcx]	       927	state.c	FUNCTION_25	IF_3
0x4002296	            0x84c0	                             test al, al	       927	state.c	FUNCTION_25	IF_3
0x4002298	     0xf850a010000	                           jne 0x40023a8	       927	state.c	FUNCTION_25	IF_3
0x400229e	          0x4531c9	                            xor r9d, r9d	       927	state.c	FUNCTION_25	IF_3
0x40022a1	          0x4489d8	                           mov eax, r11d	       951	state.c	FUNCTION_25	SWITCH_3
0x40022a4	        0x450fbec0	                          movsx r8d, r8b	       951	state.c	FUNCTION_25	SWITCH_3
0x40022a8	        0x4c891424	                    mov qword [rsp], r10	       943	state.c	FUNCTION_25
0x40022ac	          0xc1e008	                              shl eax, 8	       951	state.c	FUNCTION_25	SWITCH_3
0x40022af	          0x4409c0	                             or eax, r8d	       951	state.c	FUNCTION_25	SWITCH_3
0x40022b2	          0x4409c8	                             or eax, r9d	       951	state.c	FUNCTION_25	SWITCH_3
0x40022b5	          0x83f865	                           cmp eax, 0x65	       951	state.c	FUNCTION_25	SWITCH_3
0x40022b8	     0xf8412040000	                            je 0x40026d0	       951	state.c	FUNCTION_25	SWITCH_3
0x40022be	     0xf8f44010000	                            jg 0x4002408	       951	state.c	FUNCTION_25	SWITCH_3
0x40022c4	          0x83f84b	                           cmp eax, 0x4b	       951	state.c	FUNCTION_25	SWITCH_3
0x40022c7	     0xf84430a0000	                            je 0x4002d10	       951	state.c	FUNCTION_25	SWITCH_3
0x40022cd	     0xf8eed010000	                           jle 0x40024c0	       951	state.c	FUNCTION_25	SWITCH_3
0x40022d3	          0x83f858	                           cmp eax, 0x58	       951	state.c	FUNCTION_25	SWITCH_3
0x40022d6	     0xf8494090000	                            je 0x4002c70	       951	state.c	FUNCTION_25	SWITCH_3
0x40022dc	     0xf8f26030000	                            jg 0x4002608	       951	state.c	FUNCTION_25	SWITCH_3
0x40022e2	          0x83f850	                           cmp eax, 0x50	       951	state.c	FUNCTION_25	SWITCH_3
0x40022e5	     0xf8475040000	                            je 0x4002760	       951	state.c	FUNCTION_25	SWITCH_3
0x40022eb	     0xf8f47080000	                            jg 0x4002b38	       951	state.c	FUNCTION_25	SWITCH_3
0x40022f1	          0x83f84c	                           cmp eax, 0x4c	       951	state.c	FUNCTION_25	SWITCH_3
0x40022f4	     0xf84b60a0000	                            je 0x4002db0	       951	state.c	FUNCTION_25	SWITCH_3
0x40022fa	          0x83f84d	                           cmp eax, 0x4d	       951	state.c	FUNCTION_25	SWITCH_3
0x40022fd	     0xf856e060000	                           jne 0x4002971	       951	state.c	FUNCTION_25	SWITCH_3
0x4002303	          0x488b0e	                    mov rcx, qword [rsi]	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x4002306	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x400230c	    0x4881f9ffffff	                     cmp rcx, 0x3fffffff	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x4002313	     0xf84f2130000	                            je 0x400370b	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x4002319	          0x4885c9	                           test rcx, rcx	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x400231c	          0x4189ce	                           mov r14d, ecx	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x400231f	     0xf84e6130000	                            je 0x400370b	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x4002325	          0x4889df	                            mov rdi, rbx	      1116	state.c	FUNCTION_25	SWITCH_3	IF_14	CALL_39
0x4002328	      0xe813e9ffff	      call sym.is_cursor_in_scrollregion	      1116	state.c	FUNCTION_25	SWITCH_3	IF_14	CALL_39
0x400232d	            0x85c0	                           test eax, eax	      1116	state.c	FUNCTION_25	SWITCH_3	IF_14	CALL_39
0x400232f	     0xf846b020000	                            je 0x40025a0	      1116	state.c	FUNCTION_25	SWITCH_3	IF_14	CALL_39
0x4002335	          0x8b4340	            mov eax, dword [rbx + 0x40] 	      1120	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x4002338	          0x8b7330	            mov esi, dword [rbx + 0x30] 	      1119	state.c	FUNCTION_25	SWITCH_3
0x400233b	            0x85c0	                           test eax, eax	      1120	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x400233d	     0xf88bb160000	                            js 0x40039fe	      1120	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x4002343	    0xf68395000000	           test byte [rbx + 0x95], 0x10 	      1121	state.c	FUNCTION_25	SWITCH_3	CALL_41
0x400234a	     0xf8453140000	                            je 0x40037a3	      1121	state.c	FUNCTION_25	SWITCH_3	CALL_41
0x4002350	          0x8b5348	            mov edx, dword [rbx + 0x48] 	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x4002353	          0x8b4b44	            mov ecx, dword [rbx + 0x44] 	      1121	state.c	FUNCTION_25	SWITCH_3	CALL_41
0x4002356	            0x85d2	                           test edx, edx	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x4002358	     0xf8847140000	                            js 0x40037a5	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x400235e	        0x48c1e020	                           shl rax, 0x20	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x4002362	        0x48c1e220	                           shl rdx, 0x20	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x4002366	          0x4531c0	                            xor r8d, r8d	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x4002369	          0x4809c6	                             or rsi, rax	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x400236c	            0x89c8	                            mov eax, ecx	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x400236e	          0x4889df	                            mov rdi, rbx	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x4002371	          0x4809c2	                             or rdx, rax	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x4002374	          0x4489f1	                           mov ecx, r14d	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x4002377	      0xe824e1ffff	                         call sym.scroll	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x400237c	      0xe91f020000	                           jmp 0x40025a0	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x4002381	     0xf1f80000000	                         nop dword [rax]	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x4002388	        0x807f0100	                   cmp byte [rdi + 1], 0	       914	state.c	FUNCTION_25	IF_1	IF_2
0x400238c	            0x7552	                           jne 0x40023e0	       914	state.c	FUNCTION_25	IF_1	IF_2
0x400238e	        0x458d59c2	                   lea r11d, [r9 - 0x3e]	       917	state.c	FUNCTION_25	IF_1	SWITCH_1
0x4002392	            0x31c0	                            xor eax, eax	       923	state.c	FUNCTION_25	IF_1	SWITCH_1
0x4002394	        0x4180fb01	                             cmp r11b, 1	       917	state.c	FUNCTION_25	IF_1	SWITCH_1
0x4002398	            0x7748	                            ja 0x40023e2	       917	state.c	FUNCTION_25	IF_1	SWITCH_1
0x400239a	        0x450fbed9	                         movsx r11d, r9b	       920	state.c	FUNCTION_25	IF_1	SWITCH_1
0x400239e	      0xe9ebfeffff	                           jmp 0x400228e	       921	state.c	FUNCTION_25	IF_1	SWITCH_1
0x40023a3	       0xf1f440000	                   nop dword [rax + rax]	       921	state.c	FUNCTION_25	IF_1	SWITCH_1
0x40023a8	        0x80790100	                   cmp byte [rcx + 1], 0	       928	state.c	FUNCTION_25	IF_3	IF_4
0x40023ac	            0x7532	                           jne 0x40023e0	       928	state.c	FUNCTION_25	IF_3	IF_4
0x40023ae	            0x3c27	                            cmp al, 0x27	       928	state.c	FUNCTION_25	IF_3	IF_4
0x40023b0	            0x772e	                            ja 0x40023e0	       928	state.c	FUNCTION_25	IF_3	IF_4
0x40023b2	    0x49b900000000	                 movabs r9, 0x9500000000	       928	state.c	FUNCTION_25	IF_3	IF_4
0x40023bc	        0x490fa3c1	                              bt r9, rax	       928	state.c	FUNCTION_25	IF_3	IF_4
0x40023c0	            0x731e	                           jae 0x40023e0	       928	state.c	FUNCTION_25	IF_3	IF_4
0x40023c2	          0xc1e010	                           shl eax, 0x10	       928	state.c	FUNCTION_25	IF_3	IF_4
0x40023c5	          0x4189c1	                            mov r9d, eax	       928	state.c	FUNCTION_25	IF_3	IF_4
0x40023c8	      0xe9d4feffff	                           jmp 0x40022a1	       937	state.c	FUNCTION_25	IF_3	SWITCH_2
0x40023cd	            0xa816	                           test al, 0x16	       937	state.c	FUNCTION_25	IF_3	SWITCH_2
0x40023cf	     0xf85cb010000	                           jne 0x40025a0	       937	state.c	FUNCTION_25	IF_3	SWITCH_2
0x40023d5	            0x85c9	                           test ecx, ecx	       937	state.c	FUNCTION_25	IF_3	SWITCH_2
0x40023d7	     0xf845e160000	                            je 0x4003a3b	       937	state.c	FUNCTION_25	IF_3	SWITCH_2
0x40023dd	           0xf1f00	                         nop dword [rax]	       937	state.c	FUNCTION_25	IF_3	SWITCH_2
0x40023e0	            0x31c0	                            xor eax, eax	      1090	state.c	FUNCTION_25	SWITCH_3	SWITCH_5
0x40023e2	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1495	state.c	FUNCTION_25
0x40023e7	    0x644833342528	                xor rsi, qword fs:[0x28]	      1495	state.c	FUNCTION_25
0x40023f0	     0xf8577170000	                           jne 0x4003b6d	      1495	state.c	FUNCTION_25
0x40023f6	        0x4883c428	                           add rsp, 0x28	      1495	state.c	FUNCTION_25
0x40023fa	              0x5b	                                 pop rbx	      1495	state.c	FUNCTION_25
0x40023fb	              0x5d	                                 pop rbp	      1495	state.c	FUNCTION_25
0x40023fc	            0x415c	                                 pop r12	      1495	state.c	FUNCTION_25
0x40023fe	            0x415d	                                 pop r13	      1495	state.c	FUNCTION_25
0x4002400	            0x415e	                                 pop r14	      1495	state.c	FUNCTION_25
0x4002402	            0x415f	                                 pop r15	      1495	state.c	FUNCTION_25
0x4002404	              0xc3	                                     ret	      1495	state.c	FUNCTION_25
0x4002405	           0xf1f00	                         nop dword [rax]	      1495	state.c	FUNCTION_25
0x4002408	      0x3d70210000	                         cmp eax, 0x2170	       951	state.c	FUNCTION_25	SWITCH_3
0x400240d	     0xf84ed080000	                            je 0x4002d00	       951	state.c	FUNCTION_25	SWITCH_3
0x4002413	     0xf8f1f010000	                            jg 0x4002538	       951	state.c	FUNCTION_25	SWITCH_3
0x4002419	          0x83f86c	                           cmp eax, 0x6c	       951	state.c	FUNCTION_25	SWITCH_3
0x400241c	     0xf84d60f0000	                            je 0x40033f8	       951	state.c	FUNCTION_25	SWITCH_3
0x4002422	     0xf8fc8040000	                            jg 0x40028f0	       951	state.c	FUNCTION_25	SWITCH_3
0x4002428	          0x83f868	                           cmp eax, 0x68	       951	state.c	FUNCTION_25	SWITCH_3
0x400242b	     0xf84f7020000	                            je 0x4002728	       951	state.c	FUNCTION_25	SWITCH_3
0x4002431	     0xf8f81070000	                            jg 0x4002bb8	       951	state.c	FUNCTION_25	SWITCH_3
0x4002437	          0x83f866	                           cmp eax, 0x66	       951	state.c	FUNCTION_25	SWITCH_3
0x400243a	     0xf84000a0000	                            je 0x4002e40	       951	state.c	FUNCTION_25	SWITCH_3
0x4002440	          0x83f867	                           cmp eax, 0x67	       951	state.c	FUNCTION_25	SWITCH_3
0x4002443	     0xf8528050000	                           jne 0x4002971	       951	state.c	FUNCTION_25	SWITCH_3
0x4002449	          0x488b0e	                    mov rcx, qword [rsi]	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x400244c	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x4002452	    0x4881f9ffffff	                     cmp rcx, 0x3fffffff	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x4002459	     0xf84dc150000	                            je 0x4003a3b	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x400245f	          0x83f905	                              cmp ecx, 5	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x4002462	     0xf8f78ffffff	                            jg 0x40023e0	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x4002468	      0xb801000000	                              mov eax, 1	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x400246d	          0x48d3e0	                             shl rax, cl	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x4002470	            0xa828	                           test al, 0x28	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x4002472	     0xf8455ffffff	                            je 0x40023cd	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x4002478	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x400247b	            0x31d2	                            xor edx, edx	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x400247d	      0xbe01000000	                              mov esi, 1	       164	state.c	FUNCTION_10
0x4002482	            0x85c0	                           test eax, eax	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x4002484	     0xf8e16010000	                           jle 0x40025a0	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x400248a	    0x660f1f440000	                    nop word [rax + rax]	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x4002490	            0x89d0	                            mov eax, edx	       164	state.c	FUNCTION_10
0x4002492	            0x89d1	                            mov ecx, edx	       164	state.c	FUNCTION_10
0x4002494	            0x89f7	                            mov edi, esi	       164	state.c	FUNCTION_10
0x4002496	          0xc1f803	                              sar eax, 3	       164	state.c	FUNCTION_10
0x4002499	          0x83e107	                              and ecx, 7	       164	state.c	FUNCTION_10
0x400249c	          0x83c201	                              add edx, 1	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x400249f	            0x4898	                                    cdqe	       164	state.c	FUNCTION_10
0x40024a1	        0x48034350	             add rax, qword [rbx + 0x50]	       164	state.c	FUNCTION_10
0x40024a5	            0xd3e7	                             shl edi, cl	       164	state.c	FUNCTION_10
0x40024a7	            0x89f9	                            mov ecx, edi	       164	state.c	FUNCTION_10
0x40024a9	            0xf7d1	                                 not ecx	       164	state.c	FUNCTION_10
0x40024ab	            0x2008	                      and byte [rax], cl	       164	state.c	FUNCTION_10
0x40024ad	          0x39532c	            cmp dword [rbx + 0x2c], edx 	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x40024b0	            0x7fde	                            jg 0x4002490	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x40024b2	      0xe9e9000000	                           jmp 0x40025a0	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x40024b7	    0x660f1f840000	                    nop word [rax + rax]	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x40024c0	          0x83f845	                           cmp eax, 0x45	       951	state.c	FUNCTION_25	SWITCH_3
0x40024c3	     0xf84770d0000	                            je 0x4003240	       951	state.c	FUNCTION_25	SWITCH_3
0x40024c9	     0xf8f81040000	                            jg 0x4002950	       951	state.c	FUNCTION_25	SWITCH_3
0x40024cf	          0x83f842	                           cmp eax, 0x42	       951	state.c	FUNCTION_25	SWITCH_3
0x40024d2	     0xf84f8010000	                            je 0x40026d0	       951	state.c	FUNCTION_25	SWITCH_3
0x40024d8	     0xf8f82050000	                            jg 0x4002a60	       951	state.c	FUNCTION_25	SWITCH_3
0x40024de	          0x83f840	                           cmp eax, 0x40	       951	state.c	FUNCTION_25	SWITCH_3
0x40024e1	     0xf84810b0000	                            je 0x4003068	       951	state.c	FUNCTION_25	SWITCH_3
0x40024e7	          0x83f841	                           cmp eax, 0x41	       951	state.c	FUNCTION_25	SWITCH_3
0x40024ea	     0xf8581040000	                           jne 0x4002971	       951	state.c	FUNCTION_25	SWITCH_3
0x40024f0	          0x488b06	                    mov rax, qword [rsi]	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x40024f3	      0x25ffffff7f	                     and eax, 0x7fffffff	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x40024f8	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x40024fe	     0xf840c0a0000	                            je 0x4002f10	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x4002504	          0x4885c0	                           test rax, rax	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x4002507	     0xf84030a0000	                            je 0x4002f10	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x400250d	          0x8b7330	            mov esi, dword [rbx + 0x30] 	      1278	state.c	FUNCTION_25	SWITCH_3
0x4002510	            0x29c6	                            sub esi, eax	      1278	state.c	FUNCTION_25	SWITCH_3
0x4002512	            0x89f0	                            mov eax, esi	      1278	state.c	FUNCTION_25	SWITCH_3
0x4002514	          0x894330	             mov dword [rbx + 0x30], eax	       978	state.c	FUNCTION_25	SWITCH_3
0x4002517	    0xc74338000000	               mov dword [rbx + 0x38], 0	       979	state.c	FUNCTION_25	SWITCH_3
0x400251e	     0xfb693950000	           movzx edx, byte [rbx + 0x95] 	       979	state.c	FUNCTION_25	SWITCH_3
0x4002525	        0x448b4334	            mov r8d, dword [rbx + 0x34] 	       979	state.c	FUNCTION_25	SWITCH_3
0x4002529	            0x89d1	                            mov ecx, edx	       979	state.c	FUNCTION_25	SWITCH_3
0x400252b	          0x83e104	                              and ecx, 4	       979	state.c	FUNCTION_25	SWITCH_3
0x400252e	      0xe92b010000	                           jmp 0x400265e	       980	state.c	FUNCTION_25	SWITCH_3
0x4002533	       0xf1f440000	                   nop dword [rax + rax]	       980	state.c	FUNCTION_25	SWITCH_3
0x4002538	      0x3d6e3f0000	                         cmp eax, 0x3f6e	       951	state.c	FUNCTION_25	SWITCH_3
0x400253d	     0xf84910a0000	                            je 0x4002fd4	       951	state.c	FUNCTION_25	SWITCH_3
0x4002543	     0xf8e57040000	                           jle 0x40029a0	       951	state.c	FUNCTION_25	SWITCH_3
0x4002549	      0x3d703f2400	                       cmp eax, 0x243f70	       951	state.c	FUNCTION_25	SWITCH_3
0x400254e	     0xf848c020000	                            je 0x40027e0	       951	state.c	FUNCTION_25	SWITCH_3
0x4002554	     0xf8f46050000	                            jg 0x4002aa0	       951	state.c	FUNCTION_25	SWITCH_3
0x400255a	      0x3d71002000	                       cmp eax, 0x200071	       951	state.c	FUNCTION_25	SWITCH_3
0x400255f	     0xf848b0b0000	                            je 0x40030f0	       951	state.c	FUNCTION_25	SWITCH_3
0x4002565	      0x3d71002200	                       cmp eax, 0x220071	       951	state.c	FUNCTION_25	SWITCH_3
0x400256a	     0xf8501040000	                           jne 0x4002971	       951	state.c	FUNCTION_25	SWITCH_3
0x4002570	          0x488b06	                    mov rax, qword [rsi]	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_112
0x4002573	      0x25ffffff7f	                     and eax, 0x7fffffff	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_112
0x4002578	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_112
0x400257e	     0xf8403120000	                            je 0x4003787	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_112
0x4002584	          0x83f801	                              cmp eax, 1	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4002587	     0xf84ee110000	                            je 0x400377b	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x400258d	          0x83f802	                              cmp eax, 2	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4002590	     0xf84f1110000	                            je 0x4003787	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4002596	            0x85c0	                           test eax, eax	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4002598	     0xf84e9110000	                            je 0x4003787	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x400259e	            0x6690	                                     nop	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x40025a0	     0xfb693950000	           movzx edx, byte [rbx + 0x95] 	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x40025a7	          0x8b4330	            mov eax, dword [rbx + 0x30] 	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x40025aa	        0x448b4334	            mov r8d, dword [rbx + 0x34] 	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x40025ae	            0x89d1	                            mov ecx, edx	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x40025b0	          0x83e104	                              and ecx, 4	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x40025b3	            0x84c9	                             test cl, cl	      1458	state.c	FUNCTION_25	IF_33
0x40025b5	     0xf85ab000000	                           jne 0x4002666	      1458	state.c	FUNCTION_25	IF_33
0x40025bb	            0x85c0	                           test eax, eax	      1465	state.c	FUNCTION_25	ELSE_5
0x40025bd	     0xf8815030000	                            js 0x40028d8	      1465	state.c	FUNCTION_25	ELSE_5
0x40025c3	          0x8b5328	            mov edx, dword [rbx + 0x28] 	      1466	state.c	FUNCTION_25	ELSE_5
0x40025c6	            0x39c2	                            cmp edx, eax	      1466	state.c	FUNCTION_25	ELSE_5
0x40025c8	            0x7f06	                            jg 0x40025d0	      1466	state.c	FUNCTION_25	ELSE_5
0x40025ca	          0x8d42ff	                      lea eax, [rdx - 1]	      1466	state.c	FUNCTION_25	ELSE_5
0x40025cd	          0x894330	             mov dword [rbx + 0x30], eax	      1466	state.c	FUNCTION_25	ELSE_5
0x40025d0	          0x4585c0	                           test r8d, r8d	      1467	state.c	FUNCTION_25	ELSE_5
0x40025d3	     0xf88d7020000	                            js 0x40028b0	      1467	state.c	FUNCTION_25	ELSE_5
0x40025d9	        0x488b5358	            mov rdx, qword [rbx + 0x58] 	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40025dd	            0x4898	                                    cdqe	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40025df	        0xf6048201	              test byte [rdx + rax*4], 1	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40025e3	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40025e6	     0xf848c020000	                            je 0x4002878	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40025ec	            0x89c2	                            mov edx, eax	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40025ee	          0xc1ea1f	                           shr edx, 0x1f	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40025f1	             0x1d0	                            add eax, edx	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40025f3	            0xd1f8	                              sar eax, 1	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40025f5	          0x4439c0	                            cmp eax, r8d	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40025f8	     0xf8fb8000000	                            jg 0x40026b6	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40025fe	      0xe9ad000000	                           jmp 0x40026b0	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x4002603	       0xf1f440000	                   nop dword [rax + rax]	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x4002608	          0x83f861	                           cmp eax, 0x61	       951	state.c	FUNCTION_25	SWITCH_3
0x400260b	     0xf84e7000000	                            je 0x40026f8	       951	state.c	FUNCTION_25	SWITCH_3
0x4002611	     0xf8ff1030000	                            jg 0x4002a08	       951	state.c	FUNCTION_25	SWITCH_3
0x4002617	          0x83f85a	                           cmp eax, 0x5a	       951	state.c	FUNCTION_25	SWITCH_3
0x400261a	     0xf8430090000	                            je 0x4002f50	       951	state.c	FUNCTION_25	SWITCH_3
0x4002620	          0x83f860	                           cmp eax, 0x60	       951	state.c	FUNCTION_25	SWITCH_3
0x4002623	     0xf8548030000	                           jne 0x4002971	       951	state.c	FUNCTION_25	SWITCH_3
0x4002629	          0x488b06	                    mov rax, qword [rsi]	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x400262c	      0x25ffffff7f	                     and eax, 0x7fffffff	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x4002631	        0x448d40ff	                      lea r8d, [rax - 1]	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x4002635	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x400263b	      0xb800000000	                              mov eax, 0	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x4002640	        0x440f44c0	                          cmove r8d, eax	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x4002644	        0x44894334	             mov dword [rbx + 0x34], r8d	       990	state.c	FUNCTION_25	SWITCH_3
0x4002648	    0xc74338000000	               mov dword [rbx + 0x38], 0	       991	state.c	FUNCTION_25	SWITCH_3
0x400264f	     0xfb693950000	           movzx edx, byte [rbx + 0x95] 	       991	state.c	FUNCTION_25	SWITCH_3
0x4002656	          0x8b4330	            mov eax, dword [rbx + 0x30] 	       991	state.c	FUNCTION_25	SWITCH_3
0x4002659	            0x89d1	                            mov ecx, edx	       991	state.c	FUNCTION_25	SWITCH_3
0x400265b	          0x83e104	                              and ecx, 4	       991	state.c	FUNCTION_25	SWITCH_3
0x400265e	            0x84c9	                             test cl, cl	      1458	state.c	FUNCTION_25	IF_33
0x4002660	     0xf8455ffffff	                            je 0x40025bb	      1458	state.c	FUNCTION_25	IF_33
0x4002666	          0x8b4b3c	            mov ecx, dword [rbx + 0x3c] 	      1459	state.c	FUNCTION_25	IF_33
0x4002669	            0x39c1	                            cmp ecx, eax	      1459	state.c	FUNCTION_25	IF_33
0x400266b	            0x7e05	                           jle 0x4002672	      1459	state.c	FUNCTION_25	IF_33
0x400266d	          0x894b30	             mov dword [rbx + 0x30], ecx	      1459	state.c	FUNCTION_25	IF_33
0x4002670	            0x89c8	                            mov eax, ecx	      1459	state.c	FUNCTION_25	IF_33
0x4002672	          0x8b4b40	            mov ecx, dword [rbx + 0x40] 	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x4002675	            0x85c9	                           test ecx, ecx	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x4002677	     0xf8843020000	                            js 0x40028c0	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x400267d	            0x39c1	                            cmp ecx, eax	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x400267f	            0x7f06	                            jg 0x4002687	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x4002681	          0x83e901	                              sub ecx, 1	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x4002684	          0x894b30	             mov dword [rbx + 0x30], ecx	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x4002687	          0x83e210	                           and edx, 0x10	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x400268a	     0xf84e0010000	                            je 0x4002870	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x4002690	          0x8b4b44	            mov ecx, dword [rbx + 0x44] 	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x4002693	          0x4439c1	                            cmp ecx, r8d	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x4002696	     0xf8ff6010000	                            jg 0x4002892	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x400269c	          0x4489c1	                            mov ecx, r8d	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x400269f	          0x8b4348	            mov eax, dword [rbx + 0x48] 	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40026a2	            0x85c0	                           test eax, eax	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40026a4	     0xf8846030000	                            js 0x40029f0	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40026aa	            0x39c8	                            cmp eax, ecx	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40026ac	            0x7f08	                            jg 0x40026b6	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40026ae	            0x6690	                                     nop	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40026b0	          0x83e801	                              sub eax, 1	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40026b3	          0x894334	             mov dword [rbx + 0x34], eax	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40026b6	      0xba01000000	                              mov edx, 1	      1471	state.c	FUNCTION_25	CALL_138
0x40026bb	          0x4889e6	                            mov rsi, rsp	      1471	state.c	FUNCTION_25	CALL_138
0x40026be	          0x4889df	                            mov rdi, rbx	      1471	state.c	FUNCTION_25	CALL_138
0x40026c1	      0xe81adaffff	                   call sym.updatecursor	      1471	state.c	FUNCTION_25	CALL_138
0x40026c6	      0xb801000000	                              mov eax, 1	      1494	state.c	FUNCTION_25
0x40026cb	      0xe912fdffff	                           jmp 0x40023e2	      1494	state.c	FUNCTION_25
0x40026d0	          0x488b06	                    mov rax, qword [rsi]	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x40026d3	      0x25ffffff7f	                     and eax, 0x7fffffff	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x40026d8	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x40026de	     0xf841c080000	                            je 0x4002f00	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x40026e4	          0x4885c0	                           test rax, rax	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x40026e7	     0xf8413080000	                            je 0x4002f00	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x40026ed	           0x34330	             add eax, dword [rbx + 0x30]	       978	state.c	FUNCTION_25	SWITCH_3
0x40026f0	      0xe91ffeffff	                           jmp 0x4002514	       978	state.c	FUNCTION_25	SWITCH_3
0x40026f5	           0xf1f00	                         nop dword [rax]	       978	state.c	FUNCTION_25	SWITCH_3
0x40026f8	          0x4c8b06	                     mov r8, qword [rsi]	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x40026fb	    0x4181e0ffffff	                     and r8d, 0x7fffffff	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x4002702	    0x4981f8ffffff	                      cmp r8, 0x3fffffff	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x4002709	     0xf84240b0000	                            je 0x4003233	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x400270f	          0x4d85c0	                             test r8, r8	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x4002712	     0xf841b0b0000	                            je 0x4003233	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x4002718	        0x44034334	             add r8d, dword [rbx + 0x34]	      1195	state.c	FUNCTION_25	SWITCH_3
0x400271c	      0xe923ffffff	                           jmp 0x4002644	      1195	state.c	FUNCTION_25	SWITCH_3
0x4002721	     0xf1f80000000	                         nop dword [rax]	      1195	state.c	FUNCTION_25	SWITCH_3
0x4002728	          0x488b06	                    mov rax, qword [rsi]	      1261	state.c	FUNCTION_25	SWITCH_3	IF_20	CALL_78
0x400272b	      0x25ffffff7f	                     and eax, 0x7fffffff	      1261	state.c	FUNCTION_25	SWITCH_3	IF_20	CALL_78
0x4002730	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1261	state.c	FUNCTION_25	SWITCH_3	IF_20	CALL_78
0x4002736	     0xf8464feffff	                            je 0x40025a0	      1261	state.c	FUNCTION_25	SWITCH_3	IF_20	CALL_78
0x400273c	          0x83f804	                              cmp eax, 4	       713	state.c	FUNCTION_22	SWITCH_1
0x400273f	     0xf844b120000	                            je 0x4003990	       713	state.c	FUNCTION_22	SWITCH_1
0x4002745	          0x83f814	                           cmp eax, 0x14	       713	state.c	FUNCTION_22	SWITCH_1
0x4002748	     0xf8552feffff	                           jne 0x40025a0	       713	state.c	FUNCTION_22	SWITCH_1
0x400274e	    0x808b94000000	              or byte [rbx + 0x94], 0x10	       719	state.c	FUNCTION_22	SWITCH_1
0x4002755	      0xe946feffff	                           jmp 0x40025a0	       719	state.c	FUNCTION_22	SWITCH_1
0x400275a	    0x660f1f440000	                    nop word [rax + rax]	       719	state.c	FUNCTION_22	SWITCH_1
0x4002760	          0x4c8b06	                     mov r8, qword [rsi]	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x4002763	    0x4181e0ffffff	                     and r8d, 0x7fffffff	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x400276a	    0x4981f8ffffff	                      cmp r8, 0x3fffffff	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x4002771	     0xf843e0f0000	                            je 0x40036b5	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x4002777	          0x4d85c0	                             test r8, r8	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x400277a	          0x4589c6	                           mov r14d, r8d	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x400277d	     0xf84320f0000	                            je 0x40036b5	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x4002783	          0x4889df	                            mov rdi, rbx	      1131	state.c	FUNCTION_25	SWITCH_3	IF_15	CALL_45
0x4002786	      0xe8b5e4ffff	      call sym.is_cursor_in_scrollregion	      1131	state.c	FUNCTION_25	SWITCH_3	IF_15	CALL_45
0x400278b	            0x85c0	                           test eax, eax	      1131	state.c	FUNCTION_25	SWITCH_3	IF_15	CALL_45
0x400278d	     0xf840dfeffff	                            je 0x40025a0	      1131	state.c	FUNCTION_25	SWITCH_3	IF_15	CALL_45
0x4002793	    0xf68395000000	           test byte [rbx + 0x95], 0x10 	      1137	state.c	FUNCTION_25	SWITCH_3	IF_16
0x400279a	          0x8b4b30	            mov ecx, dword [rbx + 0x30] 	      1134	state.c	FUNCTION_25	SWITCH_3
0x400279d	          0x8b7b34	            mov edi, dword [rbx + 0x34] 	      1136	state.c	FUNCTION_25	SWITCH_3
0x40027a0	          0x8d7101	                      lea esi, [rcx + 1]	      1135	state.c	FUNCTION_25	SWITCH_3
0x40027a3	     0xf8470100000	                            je 0x4003819	      1137	state.c	FUNCTION_25	SWITCH_3	IF_16
0x40027a9	          0x8b4348	            mov eax, dword [rbx + 0x48] 	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x40027ac	            0x85c0	                           test eax, eax	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x40027ae	     0xf8803100000	                            js 0x40037b7	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x40027b4	          0x4889f2	                            mov rdx, rsi	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x40027b7	            0x89ce	                            mov esi, ecx	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x40027b9	        0x48c1e020	                           shl rax, 0x20	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x40027bd	        0x48c1e220	                           shl rdx, 0x20	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x40027c1	          0x4589f0	                           mov r8d, r14d	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x40027c4	            0x31c9	                            xor ecx, ecx	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x40027c6	          0x4809d6	                             or rsi, rdx	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x40027c9	            0x89fa	                            mov edx, edi	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x40027cb	          0x4889df	                            mov rdi, rbx	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x40027ce	          0x4809c2	                             or rdx, rax	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x40027d1	      0xe8cadcffff	                         call sym.scroll	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x40027d6	      0xe9c5fdffff	                           jmp 0x40025a0	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x40027db	       0xf1f440000	                   nop dword [rax + rax]	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x40027e0	          0x488b0e	                    mov rcx, qword [rsi]	      1323	state.c	FUNCTION_25	SWITCH_3	CALL_98
0x40027e3	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      1323	state.c	FUNCTION_25	SWITCH_3	CALL_98
0x40027e9	    0x81f9e8030000	                          cmp ecx, 0x3e8	       827	state.c	FUNCTION_24	SWITCH_1
0x40027ef	     0xf840e130000	                            je 0x4003b03	       827	state.c	FUNCTION_24	SWITCH_1
0x40027f5	     0xf8e1b0f0000	                           jle 0x4003716	       827	state.c	FUNCTION_24	SWITCH_1
0x40027fb	    0x81f9ed030000	                          cmp ecx, 0x3ed	       827	state.c	FUNCTION_24	SWITCH_1
0x4002801	     0xf84ad120000	                            je 0x4003ab4	       827	state.c	FUNCTION_24	SWITCH_1
0x4002807	     0xf8eb2110000	                           jle 0x40039bf	       827	state.c	FUNCTION_24	SWITCH_1
0x400280d	    0x81f9f7030000	                          cmp ecx, 0x3f7	       827	state.c	FUNCTION_24	SWITCH_1
0x4002813	     0xf8461120000	                            je 0x4003a7a	       827	state.c	FUNCTION_24	SWITCH_1
0x4002819	     0xf8e3f120000	                           jle 0x4003a5e	       827	state.c	FUNCTION_24	SWITCH_1
0x400281f	    0x81f917040000	                          cmp ecx, 0x417	       827	state.c	FUNCTION_24	SWITCH_1
0x4002825	     0xf84fd120000	                            je 0x4003b28	       827	state.c	FUNCTION_24	SWITCH_1
0x400282b	    0x81f9d4070000	                          cmp ecx, 0x7d4	       827	state.c	FUNCTION_24	SWITCH_1
0x4002831	     0xf8580110000	                           jne 0x40039b7	       827	state.c	FUNCTION_24	SWITCH_1
0x4002837	    0x440fb6839500	           movzx r8d, byte [rbx + 0x95] 	       889	state.c	FUNCTION_24	SWITCH_1
0x400283f	        0x41c0e805	                              shr r8b, 5	       889	state.c	FUNCTION_24	SWITCH_1
0x4002843	        0x4183e001	                              and r8d, 1	       889	state.c	FUNCTION_24	SWITCH_1
0x4002847	          0x41f7d8	                                 neg r8d	       897	state.c	FUNCTION_24	CALL_2
0x400284a	        0x4183c002	                              add r8d, 2	       897	state.c	FUNCTION_24	CALL_2
0x400284e	          0x488b3b	                    mov rdi, qword [rbx]	       897	state.c	FUNCTION_24	CALL_2
0x4002851	      0xba00000000	                              mov edx, 0	       897	state.c	FUNCTION_24	CALL_2
0x4002856	      0xbe9b000000	                           mov esi, 0x9b	       897	state.c	FUNCTION_24	CALL_2
0x400285b	            0x31c0	                            xor eax, eax	       897	state.c	FUNCTION_24	CALL_2
0x400285d	      0xe800000000	                          call 0x4002862	       897	state.c	FUNCTION_24	CALL_2
0x4002862	      0xe939fdffff	                           jmp 0x40025a0	       897	state.c	FUNCTION_24	CALL_2
0x4002867	    0x660f1f840000	                    nop word [rax + rax]	       897	state.c	FUNCTION_24	CALL_2
0x4002870	          0x4585c0	                           test r8d, r8d	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x4002873	            0x781b	                            js 0x4002890	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x4002875	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x4002878	          0x4439c0	                            cmp eax, r8d	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x400287b	     0xf8e2ffeffff	                           jle 0x40026b0	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x4002881	      0xe930feffff	                           jmp 0x40026b6	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x4002886	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x4002890	            0x31c9	                            xor ecx, ecx	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x4002892	            0x84d2	                             test dl, dl	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x4002894	          0x894b34	             mov dword [rbx + 0x34], ecx	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x4002897	     0xf8502feffff	                           jne 0x400269f	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x400289d	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40028a0	            0x39c1	                            cmp ecx, eax	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40028a2	     0xf8d08feffff	                           jge 0x40026b0	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40028a8	      0xe909feffff	                           jmp 0x40026b6	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40028ad	           0xf1f00	                         nop dword [rax]	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40028b0	    0xc74334000000	               mov dword [rbx + 0x34], 0	      1467	state.c	FUNCTION_25	ELSE_5
0x40028b7	          0x4531c0	                            xor r8d, r8d	      1467	state.c	FUNCTION_25	ELSE_5
0x40028ba	      0xe91afdffff	                           jmp 0x40025d9	      1467	state.c	FUNCTION_25	ELSE_5
0x40028bf	              0x90	                                     nop	      1467	state.c	FUNCTION_25	ELSE_5
0x40028c0	          0x8b7328	            mov esi, dword [rbx + 0x28] 	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x40028c3	            0x39c6	                            cmp esi, eax	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x40028c5	          0x8d4eff	                      lea ecx, [rsi - 1]	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x40028c8	     0xf8eb6fdffff	                           jle 0x4002684	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x40028ce	      0xe9b4fdffff	                           jmp 0x4002687	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x40028d3	       0xf1f440000	                   nop dword [rax + rax]	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x40028d8	    0xc74330000000	               mov dword [rbx + 0x30], 0	      1465	state.c	FUNCTION_25	ELSE_5
0x40028df	            0x31c0	                            xor eax, eax	      1465	state.c	FUNCTION_25	ELSE_5
0x40028e1	      0xe9ddfcffff	                           jmp 0x40025c3	      1465	state.c	FUNCTION_25	ELSE_5
0x40028e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1465	state.c	FUNCTION_25	ELSE_5
0x40028f0	          0x83f872	                           cmp eax, 0x72	       951	state.c	FUNCTION_25	SWITCH_3
0x40028f3	     0xf846f0a0000	                            je 0x4003368	       951	state.c	FUNCTION_25	SWITCH_3
0x40028f9	     0xf8e01030000	                           jle 0x4002c00	       951	state.c	FUNCTION_25	SWITCH_3
0x40028ff	          0x83f873	                           cmp eax, 0x73	       951	state.c	FUNCTION_25	SWITCH_3
0x4002902	     0xf8480090000	                            je 0x4003288	       951	state.c	FUNCTION_25	SWITCH_3
0x4002908	          0x83f874	                           cmp eax, 0x74	       951	state.c	FUNCTION_25	SWITCH_3
0x400290b	            0x7564	                           jne 0x4002971	       951	state.c	FUNCTION_25	SWITCH_3
0x400290d	          0x488b06	                    mov rax, qword [rsi]	      1413	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_120
0x4002910	      0x25ffffff7f	                     and eax, 0x7fffffff	      1413	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_120
0x4002915	        0x4883f808	                              cmp rax, 8	      1413	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_120
0x4002919	     0xf8581fcffff	                           jne 0x40025a0	      1413	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_120
0x400291f	          0x83fa03	                              cmp edx, 3	      1415	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	IF_28
0x4002922	     0xf8578fcffff	                           jne 0x40025a0	      1415	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	IF_28
0x4002928	          0x8b4610	            mov eax, dword [rsi + 0x10] 	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_123
0x400292b	        0x488b7e08	                mov rdi, qword [rsi + 8]	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_123
0x400292f	          0x4889da	                            mov rdx, rbx	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_123
0x4002932	      0x25ffffff7f	                     and eax, 0x7fffffff	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_123
0x4002937	    0x81e7ffffff7f	                     and edi, 0x7fffffff	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_123
0x400293d	            0x89c6	                            mov esi, eax	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_123
0x400293f	      0xe8dcd8ffff	                      call sym.on_resize	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_123
0x4002944	      0xe957fcffff	                           jmp 0x40025a0	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_123
0x4002949	     0xf1f80000000	                         nop dword [rax]	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_123
0x4002950	          0x83f848	                           cmp eax, 0x48	       951	state.c	FUNCTION_25	SWITCH_3
0x4002953	     0xf84c7050000	                            je 0x4002f20	       951	state.c	FUNCTION_25	SWITCH_3
0x4002959	     0xf8fc1020000	                            jg 0x4002c20	       951	state.c	FUNCTION_25	SWITCH_3
0x400295f	          0x83f846	                           cmp eax, 0x46	       951	state.c	FUNCTION_25	SWITCH_3
0x4002962	     0xf84c0090000	                            je 0x4003328	       951	state.c	FUNCTION_25	SWITCH_3
0x4002968	          0x83f847	                           cmp eax, 0x47	       951	state.c	FUNCTION_25	SWITCH_3
0x400296b	     0xf84b8fcffff	                            je 0x4002629	       951	state.c	FUNCTION_25	SWITCH_3
0x4002971	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x4002975	          0x4885c0	                           test rax, rax	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x4002978	     0xf8462faffff	                            je 0x40023e0	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x400297e	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x4002982	          0x4885c0	                           test rax, rax	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x4002985	     0xf8455faffff	                            je 0x40023e0	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x400298b	        0x4c8b4b20	              mov r9, qword [rbx + 0x20]	      1452	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x400298f	            0xffd0	                                call rax	      1452	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x4002991	            0x85c0	                           test eax, eax	       915	state.c	FUNCTION_25	IF_1	IF_2
0x4002993	           0xf95c0	                                setne al	       915	state.c	FUNCTION_25	IF_1	IF_2
0x4002996	           0xfb6c0	                           movzx eax, al	       915	state.c	FUNCTION_25	IF_1	IF_2
0x4002999	      0xe944faffff	                           jmp 0x40023e2	       915	state.c	FUNCTION_25	IF_1	IF_2
0x400299e	            0x6690	                                     nop	       915	state.c	FUNCTION_25	IF_1	IF_2
0x40029a0	      0x3d4b3f0000	                         cmp eax, 0x3f4b	       951	state.c	FUNCTION_25	SWITCH_3
0x40029a5	     0xf8465030000	                            je 0x4002d10	       951	state.c	FUNCTION_25	SWITCH_3
0x40029ab	     0xf8e1f020000	                           jle 0x4002bd0	       951	state.c	FUNCTION_25	SWITCH_3
0x40029b1	      0x3d683f0000	                         cmp eax, 0x3f68	       951	state.c	FUNCTION_25	SWITCH_3
0x40029b6	     0xf8424080000	                            je 0x40031e0	       951	state.c	FUNCTION_25	SWITCH_3
0x40029bc	      0x3d6c3f0000	                         cmp eax, 0x3f6c	       951	state.c	FUNCTION_25	SWITCH_3
0x40029c1	            0x75ae	                           jne 0x4002971	       951	state.c	FUNCTION_25	SWITCH_3
0x40029c3	          0x488b36	                    mov rsi, qword [rsi]	      1288	state.c	FUNCTION_25	SWITCH_3	IF_23	CALL_89
0x40029c6	    0x81e6ffffff7f	                     and esi, 0x7fffffff	      1288	state.c	FUNCTION_25	SWITCH_3	IF_23	CALL_89
0x40029cc	    0x4881feffffff	                     cmp rsi, 0x3fffffff	      1288	state.c	FUNCTION_25	SWITCH_3	IF_23	CALL_89
0x40029d3	     0xf84c7fbffff	                            je 0x40025a0	      1288	state.c	FUNCTION_25	SWITCH_3	IF_23	CALL_89
0x40029d9	            0x31d2	                            xor edx, edx	      1289	state.c	FUNCTION_25	SWITCH_3	CALL_91
0x40029db	          0x4889df	                            mov rdi, rbx	      1289	state.c	FUNCTION_25	SWITCH_3	CALL_91
0x40029de	      0xe86defffff	                   call sym.set_dec_mode	      1289	state.c	FUNCTION_25	SWITCH_3	CALL_91
0x40029e3	      0xe9b8fbffff	                           jmp 0x40025a0	      1289	state.c	FUNCTION_25	SWITCH_3	CALL_91
0x40029e8	     0xf1f84000000	                   nop dword [rax + rax]	      1289	state.c	FUNCTION_25	SWITCH_3	CALL_91
0x40029f0	          0x3b4b2c	            cmp ecx, dword [rbx + 0x2c] 	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40029f3	     0xf8cbdfcffff	                            jl 0x40026b6	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40029f9	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40029fc	      0xe9affcffff	                           jmp 0x40026b0	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x4002a01	     0xf1f80000000	                         nop dword [rax]	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x4002a08	          0x83f863	                           cmp eax, 0x63	       951	state.c	FUNCTION_25	SWITCH_3
0x4002a0b	     0xf84af040000	                            je 0x4002ec0	       951	state.c	FUNCTION_25	SWITCH_3
0x4002a11	          0x83f864	                           cmp eax, 0x64	       951	state.c	FUNCTION_25	SWITCH_3
0x4002a14	     0xf8557ffffff	                           jne 0x4002971	       951	state.c	FUNCTION_25	SWITCH_3
0x4002a1a	          0x488b16	                    mov rdx, qword [rsi]	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x4002a1d	      0xb800000000	                              mov eax, 0	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x4002a22	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x4002a28	          0x8d4aff	                      lea ecx, [rdx - 1]	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x4002a2b	    0x4881faffffff	                     cmp rdx, 0x3fffffff	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x4002a32	     0xfb693950000	           movzx edx, byte [rbx + 0x95] 	      1214	state.c	FUNCTION_25	SWITCH_3	IF_18
0x4002a39	           0xf45c1	                         cmovne eax, ecx	      1214	state.c	FUNCTION_25	SWITCH_3	IF_18
0x4002a3c	          0x894330	             mov dword [rbx + 0x30], eax	      1213	state.c	FUNCTION_25	SWITCH_3
0x4002a3f	            0x89d1	                            mov ecx, edx	      1214	state.c	FUNCTION_25	SWITCH_3	IF_18
0x4002a41	          0x83e104	                              and ecx, 4	      1214	state.c	FUNCTION_25	SWITCH_3	IF_18
0x4002a44	            0x7406	                            je 0x4002a4c	      1214	state.c	FUNCTION_25	SWITCH_3	IF_18
0x4002a46	           0x3433c	             add eax, dword [rbx + 0x3c]	      1215	state.c	FUNCTION_25	SWITCH_3	IF_18
0x4002a49	          0x894330	             mov dword [rbx + 0x30], eax	      1215	state.c	FUNCTION_25	SWITCH_3	IF_18
0x4002a4c	    0xc74338000000	               mov dword [rbx + 0x38], 0	      1216	state.c	FUNCTION_25	SWITCH_3
0x4002a53	        0x448b4334	            mov r8d, dword [rbx + 0x34] 	      1216	state.c	FUNCTION_25	SWITCH_3
0x4002a57	      0xe902fcffff	                           jmp 0x400265e	      1217	state.c	FUNCTION_25	SWITCH_3
0x4002a5c	         0xf1f4000	                         nop dword [rax]	      1217	state.c	FUNCTION_25	SWITCH_3
0x4002a60	          0x83f843	                           cmp eax, 0x43	       951	state.c	FUNCTION_25	SWITCH_3
0x4002a63	     0xf84a7070000	                            je 0x4003210	       951	state.c	FUNCTION_25	SWITCH_3
0x4002a69	          0x83f844	                           cmp eax, 0x44	       951	state.c	FUNCTION_25	SWITCH_3
0x4002a6c	     0xf85fffeffff	                           jne 0x4002971	       951	state.c	FUNCTION_25	SWITCH_3
0x4002a72	          0x488b06	                    mov rax, qword [rsi]	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4002a75	      0x25ffffff7f	                     and eax, 0x7fffffff	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4002a7a	    0x483dffffff3f	                     cmp rax, 0x3fffffff	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4002a80	     0xf84d5050000	                            je 0x400305b	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4002a86	          0x4885c0	                           test rax, rax	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4002a89	     0xf84cc050000	                            je 0x400305b	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4002a8f	        0x448b4334	            mov r8d, dword [rbx + 0x34] 	       990	state.c	FUNCTION_25	SWITCH_3
0x4002a93	          0x4129c0	                            sub r8d, eax	       990	state.c	FUNCTION_25	SWITCH_3
0x4002a96	      0xe9a9fbffff	                           jmp 0x4002644	       990	state.c	FUNCTION_25	SWITCH_3
0x4002a9b	       0xf1f440000	                   nop dword [rax + rax]	       990	state.c	FUNCTION_25	SWITCH_3
0x4002aa0	      0x3d7d002700	                       cmp eax, 0x27007d	       951	state.c	FUNCTION_25	SWITCH_3
0x4002aa5	     0xf8485090000	                            je 0x4003430	       951	state.c	FUNCTION_25	SWITCH_3
0x4002aab	      0x3d7e002700	                       cmp eax, 0x27007e	       951	state.c	FUNCTION_25	SWITCH_3
0x4002ab0	     0xf85bbfeffff	                           jne 0x4002971	       951	state.c	FUNCTION_25	SWITCH_3
0x4002ab6	          0x4c8b06	                     mov r8, qword [rsi]	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x4002ab9	    0x4181e0ffffff	                     and r8d, 0x7fffffff	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x4002ac0	    0x4981f8ffffff	                      cmp r8, 0x3fffffff	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x4002ac7	     0xf84180b0000	                            je 0x40035e5	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x4002acd	          0x4d85c0	                             test r8, r8	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x4002ad0	          0x4589c7	                           mov r15d, r8d	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x4002ad3	     0xf840c0b0000	                            je 0x40035e5	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x4002ad9	          0x4889df	                            mov rdi, rbx	      1438	state.c	FUNCTION_25	SWITCH_3	IF_30	CALL_130
0x4002adc	      0xe85fe1ffff	      call sym.is_cursor_in_scrollregion	      1438	state.c	FUNCTION_25	SWITCH_3	IF_30	CALL_130
0x4002ae1	            0x85c0	                           test eax, eax	      1438	state.c	FUNCTION_25	SWITCH_3	IF_30	CALL_130
0x4002ae3	     0xf84b7faffff	                            je 0x40025a0	      1438	state.c	FUNCTION_25	SWITCH_3	IF_30	CALL_130
0x4002ae9	          0x8b4340	            mov eax, dword [rbx + 0x40] 	      1442	state.c	FUNCTION_25	SWITCH_3	CALL_131
0x4002aec	          0x8b733c	            mov esi, dword [rbx + 0x3c] 	      1441	state.c	FUNCTION_25	SWITCH_3
0x4002aef	            0x85c0	                           test eax, eax	      1442	state.c	FUNCTION_25	SWITCH_3	CALL_131
0x4002af1	     0xf88ff0e0000	                            js 0x40039f6	      1442	state.c	FUNCTION_25	SWITCH_3	CALL_131
0x4002af7	    0xf68395000000	           test byte [rbx + 0x95], 0x10 	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x4002afe	          0x8b4b34	            mov ecx, dword [rbx + 0x34] 	      1443	state.c	FUNCTION_25	SWITCH_3
0x4002b01	     0xf84940c0000	                            je 0x400379b	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x4002b07	          0x8b5348	            mov edx, dword [rbx + 0x48] 	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x4002b0a	            0x85d2	                           test edx, edx	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x4002b0c	     0xf88890c0000	                            js 0x400379b	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x4002b12	        0x48c1e020	                           shl rax, 0x20	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4002b16	        0x48c1e220	                           shl rdx, 0x20	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4002b1a	          0x4589f8	                           mov r8d, r15d	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4002b1d	          0x4809c6	                             or rsi, rax	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4002b20	            0x89c8	                            mov eax, ecx	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4002b22	          0x4889df	                            mov rdi, rbx	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4002b25	          0x4809c2	                             or rdx, rax	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4002b28	            0x31c9	                            xor ecx, ecx	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4002b2a	      0xe871d9ffff	                         call sym.scroll	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4002b2f	      0xe96cfaffff	                           jmp 0x40025a0	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4002b34	         0xf1f4000	                         nop dword [rax]	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4002b38	          0x83f853	                           cmp eax, 0x53	       951	state.c	FUNCTION_25	SWITCH_3
0x4002b3b	     0xf8467090000	                            je 0x40034a8	       951	state.c	FUNCTION_25	SWITCH_3
0x4002b41	          0x83f854	                           cmp eax, 0x54	       951	state.c	FUNCTION_25	SWITCH_3
0x4002b44	     0xf8527feffff	                           jne 0x4002971	       951	state.c	FUNCTION_25	SWITCH_3
0x4002b4a	          0x488b0e	                    mov rcx, qword [rsi]	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x4002b4d	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x4002b53	    0x4881f9ffffff	                     cmp rcx, 0x3fffffff	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x4002b5a	     0xf844b0b0000	                            je 0x40036ab	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x4002b60	          0x4885c9	                           test rcx, rcx	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x4002b63	     0xf84420b0000	                            je 0x40036ab	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x4002b69	            0xf7d9	                                 neg ecx	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x4002b6b	          0x8b7340	            mov esi, dword [rbx + 0x40] 	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x4002b6e	          0x8b7b3c	            mov edi, dword [rbx + 0x3c] 	      1161	state.c	FUNCTION_25	SWITCH_3
0x4002b71	            0x85f6	                           test esi, esi	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x4002b73	     0xf88640a0000	                            js 0x40035dd	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x4002b79	    0xf68395000000	           test byte [rbx + 0x95], 0x10 	      1163	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x4002b80	     0xf84da000000	                            je 0x4002c60	      1163	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x4002b86	          0x8b5348	            mov edx, dword [rbx + 0x48] 	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x4002b89	          0x8b4344	            mov eax, dword [rbx + 0x44] 	      1163	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x4002b8c	            0x85d2	                           test edx, edx	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x4002b8e	     0xf88ce000000	                            js 0x4002c62	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x4002b94	        0x48c1e620	                           shl rsi, 0x20	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x4002b98	        0x48c1e220	                           shl rdx, 0x20	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x4002b9c	          0x4531c0	                            xor r8d, r8d	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x4002b9f	          0x4809fe	                             or rsi, rdi	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x4002ba2	          0x4809c2	                             or rdx, rax	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x4002ba5	          0x4889df	                            mov rdi, rbx	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x4002ba8	      0xe8f3d8ffff	                         call sym.scroll	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x4002bad	      0xe9eef9ffff	                           jmp 0x40025a0	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x4002bb2	    0x660f1f440000	                    nop word [rax + rax]	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x4002bb8	          0x83f86a	                           cmp eax, 0x6a	       951	state.c	FUNCTION_25	SWITCH_3
0x4002bbb	     0xf8477040000	                            je 0x4003038	       951	state.c	FUNCTION_25	SWITCH_3
0x4002bc1	          0x83f86b	                           cmp eax, 0x6b	       951	state.c	FUNCTION_25	SWITCH_3
0x4002bc4	     0xf8426f9ffff	                            je 0x40024f0	       951	state.c	FUNCTION_25	SWITCH_3
0x4002bca	      0xe9a2fdffff	                           jmp 0x4002971	       951	state.c	FUNCTION_25	SWITCH_3
0x4002bcf	              0x90	                                     nop	       951	state.c	FUNCTION_25	SWITCH_3
0x4002bd0	      0x3d633e0000	                         cmp eax, 0x3e63	       951	state.c	FUNCTION_25	SWITCH_3
0x4002bd5	     0xf85f9080000	                           jne 0x40034d4	       951	state.c	FUNCTION_25	SWITCH_3
0x4002bdb	          0x488b3b	                    mov rdi, qword [rbx]	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x4002bde	          0x4531c9	                            xor r9d, r9d	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x4002be1	    0x41b864000000	                           mov r8d, 0x64	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x4002be7	            0x31c9	                            xor ecx, ecx	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x4002be9	      0xba00000000	                              mov edx, 0	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x4002bee	      0xbe9b000000	                           mov esi, 0x9b	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x4002bf3	            0x31c0	                            xor eax, eax	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x4002bf5	      0xe800000000	                          call 0x4002bfa	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x4002bfa	      0xe9a1f9ffff	                           jmp 0x40025a0	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x4002bff	              0x90	                                     nop	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x4002c00	          0x83f86d	                           cmp eax, 0x6d	       951	state.c	FUNCTION_25	SWITCH_3
0x4002c03	     0xf85c2030000	                           jne 0x4002fcb	       951	state.c	FUNCTION_25	SWITCH_3
0x4002c09	          0x4889df	                            mov rdi, rbx	      1293	state.c	FUNCTION_25	SWITCH_3	CALL_92
0x4002c0c	      0xe800000000	                          call 0x4002c11	      1293	state.c	FUNCTION_25	SWITCH_3	CALL_92
0x4002c11	      0xe98af9ffff	                           jmp 0x40025a0	      1293	state.c	FUNCTION_25	SWITCH_3	CALL_92
0x4002c16	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1293	state.c	FUNCTION_25	SWITCH_3	CALL_92
0x4002c20	          0x83f849	                           cmp eax, 0x49	       951	state.c	FUNCTION_25	SWITCH_3
0x4002c23	     0xf85a6090000	                           jne 0x40035cf	       951	state.c	FUNCTION_25	SWITCH_3
0x4002c29	          0x488b36	                    mov rsi, qword [rsi]	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x4002c2c	          0x4889f0	                            mov rax, rsi	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x4002c2f	      0x25ffffff7f	                     and eax, 0x7fffffff	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x4002c34	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x4002c3a	     0xf84960a0000	                            je 0x40036d6	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x4002c40	    0x81e6ffffff7f	                     and esi, 0x7fffffff	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x4002c46	          0x4885c0	                           test rax, rax	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x4002c49	     0xf84870a0000	                            je 0x40036d6	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x4002c4f	          0x4889df	                            mov rdi, rbx	      1029	state.c	FUNCTION_25	SWITCH_3	CALL_18
0x4002c52	      0xe819e3ffff	                call sym.tab.constprop.8	      1029	state.c	FUNCTION_25	SWITCH_3	CALL_18
0x4002c57	      0xe944f9ffff	                           jmp 0x40025a0	      1029	state.c	FUNCTION_25	SWITCH_3	CALL_18
0x4002c5c	         0xf1f4000	                         nop dword [rax]	      1029	state.c	FUNCTION_25	SWITCH_3	CALL_18
0x4002c60	            0x31c0	                            xor eax, eax	      1163	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x4002c62	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x4002c65	      0xe92affffff	                           jmp 0x4002b94	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x4002c6a	    0x660f1f440000	                    nop word [rax + rax]	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x4002c70	          0x488b06	                    mov rax, qword [rsi]	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x4002c73	      0x25ffffff7f	                     and eax, 0x7fffffff	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x4002c78	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x4002c7e	     0xf84680a0000	                            je 0x40036ec	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x4002c84	          0x4885c0	                           test rax, rax	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x4002c87	            0x89c2	                            mov edx, eax	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x4002c89	     0xf845d0a0000	                            je 0x40036ec	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x4002c8f	        0x48637b30	         movsxd rdi, dword [rbx + 0x30] 	      1173	state.c	FUNCTION_25	SWITCH_3
0x4002c93	        0x448b4334	            mov r8d, dword [rbx + 0x34] 	      1175	state.c	FUNCTION_25	SWITCH_3
0x4002c97	        0x488b7358	            mov rsi, qword [rbx + 0x58] 	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4002c9b	          0x4401c2	                            add edx, r8d	      1176	state.c	FUNCTION_25	SWITCH_3
0x4002c9e	        0xf604be01	              test byte [rsi + rdi*4], 1	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4002ca2	          0x4889f8	                            mov rax, rdi	      1173	state.c	FUNCTION_25	SWITCH_3
0x4002ca5	          0x8d4f01	                      lea ecx, [rdi + 1]	      1174	state.c	FUNCTION_25	SWITCH_3
0x4002ca8	     0xf84320a0000	                            je 0x40036e0	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4002cae	          0x8b732c	            mov esi, dword [rbx + 0x2c] 	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4002cb1	            0x89f7	                            mov edi, esi	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4002cb3	          0xc1ef1f	                           shr edi, 0x1f	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4002cb6	             0x1fe	                            add esi, edi	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4002cb8	            0xd1fe	                              sar esi, 1	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4002cba	            0x39d6	                            cmp esi, edx	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4002cbc	           0xf4ed6	                         cmovle edx, esi	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4002cbf	        0x4c8b4b08	                 mov r9, qword [rbx + 8]	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4002cc3	        0x48c1e120	                           shl rcx, 0x20	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4002cc7	        0x48c1e220	                           shl rdx, 0x20	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4002ccb	            0x89c7	                            mov edi, eax	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4002ccd	          0x4489c6	                            mov esi, r8d	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4002cd0	          0x4809cf	                             or rdi, rcx	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4002cd3	          0x4809d6	                             or rsi, rdx	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4002cd6	          0x4d85c9	                             test r9, r9	        47	state.c	FUNCTION_3	IF_1
0x4002cd9	     0xf84720a0000	                            je 0x4003751	        47	state.c	FUNCTION_3	IF_1
0x4002cdf	        0x4d8b4920	               mov r9, qword [r9 + 0x20]	        47	state.c	FUNCTION_3	IF_1
0x4002ce3	          0x4d85c9	                             test r9, r9	        47	state.c	FUNCTION_3	IF_1
0x4002ce6	     0xf84650a0000	                            je 0x4003751	        47	state.c	FUNCTION_3	IF_1
0x4002cec	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4002cf0	            0x31d2	                            xor edx, edx	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4002cf2	          0x41ffd1	                                 call r9	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4002cf5	      0xe9a6f8ffff	                           jmp 0x40025a0	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4002cfa	    0x660f1f440000	                    nop word [rax + rax]	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4002d00	            0x31f6	                            xor esi, esi	      1319	state.c	FUNCTION_25	SWITCH_3	CALL_96
0x4002d02	          0x4889df	                            mov rdi, rbx	      1319	state.c	FUNCTION_25	SWITCH_3	CALL_96
0x4002d05	      0xe800000000	                          call 0x4002d0a	      1319	state.c	FUNCTION_25	SWITCH_3	CALL_96
0x4002d0a	      0xe991f8ffff	                           jmp 0x40025a0	      1319	state.c	FUNCTION_25	SWITCH_3	CALL_96
0x4002d0f	              0x90	                                     nop	      1319	state.c	FUNCTION_25	SWITCH_3	CALL_96
0x4002d10	          0x488b16	                    mov rdx, qword [rsi]	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4002d13	          0x8b4330	            mov eax, dword [rbx + 0x30] 	      1078	state.c	FUNCTION_25	SWITCH_3
0x4002d16	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4002d1c	        0x4883fa01	                              cmp rdx, 1	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4002d20	     0xf841f0b0000	                            je 0x4003845	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4002d26	     0xf8e0b0b0000	                           jle 0x4003837	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4002d2c	        0x4883fa02	                              cmp rdx, 2	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4002d30	     0xf84bf0a0000	                            je 0x40037f5	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4002d36	    0x4881faffffff	                     cmp rdx, 0x3fffffff	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4002d3d	     0xf859df6ffff	                           jne 0x40023e0	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4002d43	        0x488b7358	            mov rsi, qword [rbx + 0x58] 	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002d47	          0x4863d0	                         movsxd rdx, eax	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002d4a	          0x8b4b34	            mov ecx, dword [rbx + 0x34] 	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002d4d	        0xf6049601	              test byte [rsi + rdx*4], 1	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002d51	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002d54	            0x7409	                            je 0x4002d5f	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002d56	            0x89d6	                            mov esi, edx	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002d58	          0xc1ee1f	                           shr esi, 0x1f	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002d5b	             0x1f2	                            add edx, esi	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002d5d	            0xd1fa	                              sar edx, 1	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002d5f	            0x39ca	                            cmp edx, ecx	      1093	state.c	FUNCTION_25	SWITCH_3	IF_12
0x4002d61	     0xf8eb7f7ffff	                           jle 0x400251e	      1093	state.c	FUNCTION_25	SWITCH_3	IF_12
0x4002d67	          0x8d7001	                      lea esi, [rax + 1]	      1093	state.c	FUNCTION_25	SWITCH_3	IF_12
0x4002d6a	        0x4c8b4308	                 mov r8, qword [rbx + 8]	      1093	state.c	FUNCTION_25	SWITCH_3	IF_12
0x4002d6e	            0x89c7	                            mov edi, eax	      1093	state.c	FUNCTION_25	SWITCH_3	IF_12
0x4002d70	        0x48c1e220	                           shl rdx, 0x20	      1093	state.c	FUNCTION_25	SWITCH_3	IF_12
0x4002d74	        0x48c1e620	                           shl rsi, 0x20	      1093	state.c	FUNCTION_25	SWITCH_3	IF_12
0x4002d78	          0x4809f7	                             or rdi, rsi	      1093	state.c	FUNCTION_25	SWITCH_3	IF_12
0x4002d7b	            0x89ce	                            mov esi, ecx	      1093	state.c	FUNCTION_25	SWITCH_3	IF_12
0x4002d7d	          0x4809d6	                             or rsi, rdx	      1093	state.c	FUNCTION_25	SWITCH_3	IF_12
0x4002d80	          0x4d85c0	                             test r8, r8	        47	state.c	FUNCTION_3	IF_1
0x4002d83	     0xf8495f7ffff	                            je 0x400251e	        47	state.c	FUNCTION_3	IF_1
0x4002d89	        0x4d8b4020	               mov r8, qword [r8 + 0x20]	        47	state.c	FUNCTION_3	IF_1
0x4002d8d	          0x4d85c0	                             test r8, r8	        47	state.c	FUNCTION_3	IF_1
0x4002d90	     0xf8488f7ffff	                            je 0x400251e	        47	state.c	FUNCTION_3	IF_1
0x4002d96	            0x31d2	                            xor edx, edx	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4002d98	        0x4183fb3f	                          cmp r11d, 0x3f	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4002d9c	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4002da0	           0xf94c2	                                 sete dl	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4002da3	          0x41ffd0	                                 call r8	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4002da6	      0xe9f5f7ffff	                           jmp 0x40025a0	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4002dab	       0xf1f440000	                   nop dword [rax + rax]	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4002db0	          0x488b0e	                    mov rcx, qword [rsi]	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x4002db3	          0x4889c8	                            mov rax, rcx	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x4002db6	      0x25ffffff7f	                     and eax, 0x7fffffff	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x4002dbb	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x4002dc1	     0xf842f090000	                            je 0x40036f6	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x4002dc7	          0x4885c0	                           test rax, rax	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x4002dca	     0xf8426090000	                            je 0x40036f6	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x4002dd0	          0x4189c8	                            mov r8d, ecx	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x4002dd3	    0x4181e0ffffff	                     and r8d, 0x7fffffff	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x4002dda	          0x4589c6	                           mov r14d, r8d	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x4002ddd	          0x4889df	                            mov rdi, rbx	      1101	state.c	FUNCTION_25	SWITCH_3	IF_13	CALL_33
0x4002de0	      0xe85bdeffff	      call sym.is_cursor_in_scrollregion	      1101	state.c	FUNCTION_25	SWITCH_3	IF_13	CALL_33
0x4002de5	            0x85c0	                           test eax, eax	      1101	state.c	FUNCTION_25	SWITCH_3	IF_13	CALL_33
0x4002de7	     0xf84b3f7ffff	                            je 0x40025a0	      1101	state.c	FUNCTION_25	SWITCH_3	IF_13	CALL_33
0x4002ded	          0x8b4340	            mov eax, dword [rbx + 0x40] 	      1105	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x4002df0	          0x8b7330	            mov esi, dword [rbx + 0x30] 	      1104	state.c	FUNCTION_25	SWITCH_3
0x4002df3	            0x85c0	                           test eax, eax	      1105	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x4002df5	     0xf880b0c0000	                            js 0x4003a06	      1105	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x4002dfb	    0xf68395000000	           test byte [rbx + 0x95], 0x10 	      1106	state.c	FUNCTION_25	SWITCH_3	CALL_35
0x4002e02	     0xf84a5090000	                            je 0x40037ad	      1106	state.c	FUNCTION_25	SWITCH_3	CALL_35
0x4002e08	          0x8b5348	            mov edx, dword [rbx + 0x48] 	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x4002e0b	          0x8b4b44	            mov ecx, dword [rbx + 0x44] 	      1106	state.c	FUNCTION_25	SWITCH_3	CALL_35
0x4002e0e	            0x85d2	                           test edx, edx	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x4002e10	     0xf8899090000	                            js 0x40037af	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x4002e16	        0x48c1e020	                           shl rax, 0x20	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x4002e1a	        0x48c1e220	                           shl rdx, 0x20	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x4002e1e	          0x4531c0	                            xor r8d, r8d	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x4002e21	          0x4809c6	                             or rsi, rax	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x4002e24	            0x89c8	                            mov eax, ecx	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x4002e26	          0x4489f1	                           mov ecx, r14d	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x4002e29	          0x4809c2	                             or rdx, rax	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x4002e2c	            0xf7d9	                                 neg ecx	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x4002e2e	          0x4889df	                            mov rdi, rbx	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x4002e31	      0xe86ad6ffff	                         call sym.scroll	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x4002e36	      0xe965f7ffff	                           jmp 0x40025a0	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x4002e3b	       0xf1f440000	                   nop dword [rax + rax]	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x4002e40	          0x488b0e	                    mov rcx, qword [rsi]	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_71
0x4002e43	            0x31c0	                            xor eax, eax	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_71
0x4002e45	          0x4889cf	                            mov rdi, rcx	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_71
0x4002e48	    0x81e7ffffff7f	                     and edi, 0x7fffffff	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_71
0x4002e4e	    0x4881ffffffff	                     cmp rdi, 0x3fffffff	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_71
0x4002e55	            0x7409	                            je 0x4002e60	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_71
0x4002e57	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_71
0x4002e5d	          0x8d41ff	                      lea eax, [rcx - 1]	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_71
0x4002e60	          0x4531c0	                            xor r8d, r8d	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_71
0x4002e63	          0x83fa01	                              cmp edx, 1	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x4002e66	            0x7e18	                           jle 0x4002e80	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x4002e68	        0x488b5608	                mov rdx, qword [rsi + 8]	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x4002e6c	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x4002e72	          0x8d4aff	                      lea ecx, [rdx - 1]	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x4002e75	    0x4881faffffff	                     cmp rdx, 0x3fffffff	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x4002e7c	        0x440f45c1	                         cmovne r8d, ecx	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x4002e80	     0xfb693950000	           movzx edx, byte [rbx + 0x95] 	      1231	state.c	FUNCTION_25	SWITCH_3	IF_19
0x4002e87	          0x894330	             mov dword [rbx + 0x30], eax	      1229	state.c	FUNCTION_25	SWITCH_3
0x4002e8a	        0x44894334	             mov dword [rbx + 0x34], r8d	      1230	state.c	FUNCTION_25	SWITCH_3
0x4002e8e	            0x89d1	                            mov ecx, edx	      1231	state.c	FUNCTION_25	SWITCH_3	IF_19
0x4002e90	          0x83e104	                              and ecx, 4	      1231	state.c	FUNCTION_25	SWITCH_3	IF_19
0x4002e93	            0x7417	                            je 0x4002eac	      1231	state.c	FUNCTION_25	SWITCH_3	IF_19
0x4002e95	           0x3433c	             add eax, dword [rbx + 0x3c]	      1232	state.c	FUNCTION_25	SWITCH_3	IF_19
0x4002e98	            0x31f6	                            xor esi, esi	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_74
0x4002e9a	          0xf6c210	                           test dl, 0x10	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_74
0x4002e9d	          0x894330	             mov dword [rbx + 0x30], eax	      1232	state.c	FUNCTION_25	SWITCH_3	IF_19
0x4002ea0	            0x7403	                            je 0x4002ea5	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_74
0x4002ea2	          0x8b7344	            mov esi, dword [rbx + 0x44] 	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_74
0x4002ea5	          0x4101f0	                            add r8d, esi	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_74
0x4002ea8	        0x44894334	             mov dword [rbx + 0x34], r8d	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_74
0x4002eac	    0xc74338000000	               mov dword [rbx + 0x38], 0	      1235	state.c	FUNCTION_25	SWITCH_3
0x4002eb3	      0xe9a6f7ffff	                           jmp 0x400265e	      1236	state.c	FUNCTION_25	SWITCH_3
0x4002eb8	     0xf1f84000000	                   nop dword [rax + rax]	      1236	state.c	FUNCTION_25	SWITCH_3
0x4002ec0	          0x488b06	                    mov rax, qword [rsi]	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_66
0x4002ec3	          0x4889c2	                            mov rdx, rax	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_66
0x4002ec6	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_66
0x4002ecc	    0x4881faffffff	                     cmp rdx, 0x3fffffff	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_66
0x4002ed3	            0x740b	                            je 0x4002ee0	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_66
0x4002ed5	      0xa9ffffff7f	                    test eax, 0x7fffffff	      1201	state.c	FUNCTION_25	SWITCH_3	IF_17
0x4002eda	     0xf85c0f6ffff	                           jne 0x40025a0	      1201	state.c	FUNCTION_25	SWITCH_3	IF_17
0x4002ee0	          0x488b3b	                    mov rdi, qword [rbx]	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x4002ee3	      0xba00000000	                              mov edx, 0	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x4002ee8	      0xbe9b000000	                           mov esi, 0x9b	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x4002eed	            0x31c0	                            xor eax, eax	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x4002eef	      0xe800000000	                          call 0x4002ef4	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x4002ef4	      0xe9a7f6ffff	                           jmp 0x40025a0	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x4002ef9	     0xf1f80000000	                         nop dword [rax]	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x4002f00	      0xb801000000	                              mov eax, 1	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x4002f05	      0xe9e3f7ffff	                           jmp 0x40026ed	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x4002f0a	    0x660f1f440000	                    nop word [rax + rax]	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x4002f10	      0xb801000000	                              mov eax, 1	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x4002f15	      0xe9f3f5ffff	                           jmp 0x400250d	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x4002f1a	    0x660f1f440000	                    nop word [rax + rax]	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x4002f20	          0x488b0e	                    mov rcx, qword [rsi]	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x4002f23	      0xb800000000	                              mov eax, 0	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x4002f28	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x4002f2e	          0x8d79ff	                      lea edi, [rcx - 1]	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x4002f31	    0x4881f9ffffff	                     cmp rcx, 0x3fffffff	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x4002f38	           0xf45c7	                         cmovne eax, edi	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x4002f3b	          0x4531c0	                            xor r8d, r8d	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x4002f3e	          0x83fa01	                              cmp edx, 1	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x4002f41	     0xf8f21ffffff	                            jg 0x4002e68	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x4002f47	      0xe934ffffff	                           jmp 0x4002e80	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x4002f4c	         0xf1f4000	                         nop dword [rax]	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x4002f50	          0x488b36	                    mov rsi, qword [rsi]	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x4002f53	          0x4889f0	                            mov rax, rsi	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x4002f56	      0x25ffffff7f	                     and eax, 0x7fffffff	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x4002f5b	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x4002f61	     0xf849a070000	                            je 0x4003701	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x4002f67	          0x4885c0	                           test rax, rax	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x4002f6a	     0xf8491070000	                            je 0x4003701	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x4002f70	    0x81e6ffffff7f	                     and esi, 0x7fffffff	       187	state.c	FUNCTION_13	WHILE_1
0x4002f76	     0xf8424f6ffff	                            je 0x40025a0	       187	state.c	FUNCTION_13	WHILE_1
0x4002f7c	        0x448b4334	            mov r8d, dword [rbx + 0x34] 	       195	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3	IF_4
0x4002f80	          0x4585c0	                           test r8d, r8d	       195	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3	IF_4
0x4002f83	     0xf8ec6f6ffff	                           jle 0x400264f	       195	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3	IF_4
0x4002f89	        0x4c8b4b50	              mov r9, qword [rbx + 0x50]	       195	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3	IF_4
0x4002f8d	      0xbf01000000	                              mov edi, 1	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x4002f92	            0xeb0d	                           jmp 0x4002fa1	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x4002f94	         0xf1f4000	                         nop dword [rax]	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x4002f98	          0x4585c0	                           test r8d, r8d	       195	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3	IF_4
0x4002f9b	     0xf84aef6ffff	                            je 0x400264f	       195	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3	IF_4
0x4002fa1	        0x4183e801	                              sub r8d, 1	       198	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3
0x4002fa5	            0x89fa	                            mov edx, edi	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x4002fa7	          0x4489c0	                            mov eax, r8d	       170	state.c	FUNCTION_11
0x4002faa	          0x4489c1	                            mov ecx, r8d	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x4002fad	        0x44894334	             mov dword [rbx + 0x34], r8d	       198	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3
0x4002fb1	          0xc1f803	                              sar eax, 3	       170	state.c	FUNCTION_11
0x4002fb4	          0x83e107	                              and ecx, 7	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x4002fb7	            0x4898	                                    cdqe	       170	state.c	FUNCTION_11
0x4002fb9	            0xd3e2	                             shl edx, cl	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x4002fbb	        0x41841401	                test byte [r9 + rax], dl	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x4002fbf	            0x74d7	                            je 0x4002f98	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x4002fc1	          0x83ee01	                              sub esi, 1	       187	state.c	FUNCTION_13	WHILE_1
0x4002fc4	            0x75d2	                           jne 0x4002f98	       187	state.c	FUNCTION_13	WHILE_1
0x4002fc6	      0xe984f6ffff	                           jmp 0x400264f	       187	state.c	FUNCTION_13	WHILE_1
0x4002fcb	          0x83f86e	                           cmp eax, 0x6e	       951	state.c	FUNCTION_25	SWITCH_3
0x4002fce	     0xf859df9ffff	                           jne 0x4002971	       951	state.c	FUNCTION_25	SWITCH_3
0x4002fd4	          0x488b06	                    mov rax, qword [rsi]	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_93
0x4002fd7	      0x25ffffff7f	                     and eax, 0x7fffffff	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_93
0x4002fdc	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_93
0x4002fe2	     0xf84b8f5ffff	                            je 0x40025a0	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_93
0x4002fe8	        0x4183fb3f	                          cmp r11d, 0x3f	      1301	state.c	FUNCTION_25	SWITCH_3
0x4002fec	      0xb900000000	                              mov ecx, 0	      1301	state.c	FUNCTION_25	SWITCH_3
0x4002ff1	      0xba00000000	                              mov edx, 0	      1301	state.c	FUNCTION_25	SWITCH_3
0x4002ff6	        0x480f45ca	                         cmovne rcx, rdx	      1301	state.c	FUNCTION_25	SWITCH_3
0x4002ffa	          0x83f805	                              cmp eax, 5	      1303	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x4002ffd	     0xf845f070000	                            je 0x4003762	      1303	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x4003003	          0x83f806	                              cmp eax, 6	      1303	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x4003006	     0xf8594f5ffff	                           jne 0x40025a0	      1303	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x400300c	          0x8b5334	            mov edx, dword [rbx + 0x34] 	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x400300f	          0x8b4330	            mov eax, dword [rbx + 0x30] 	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x4003012	      0xbe9b000000	                           mov esi, 0x9b	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x4003017	          0x488b3b	                    mov rdi, qword [rbx]	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x400301a	        0x448d4a01	                      lea r9d, [rdx + 1]	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x400301e	        0x448d4001	                      lea r8d, [rax + 1]	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x4003022	      0xba00000000	                              mov edx, 0	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x4003027	            0x31c0	                            xor eax, eax	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x4003029	      0xe800000000	                          call 0x400302e	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x400302e	      0xe96df5ffff	                           jmp 0x40025a0	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x4003033	       0xf1f440000	                   nop dword [rax + rax]	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x4003038	          0x488b06	                    mov rax, qword [rsi]	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x400303b	          0x4889c2	                            mov rdx, rax	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x400303e	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x4003044	    0x4881faffffff	                     cmp rdx, 0x3fffffff	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x400304b	            0x740e	                            je 0x400305b	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x400304d	      0x25ffffff7f	                     and eax, 0x7fffffff	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x4003052	          0x4885d2	                           test rdx, rdx	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x4003055	     0xf8534faffff	                           jne 0x4002a8f	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x400305b	      0xb801000000	                              mov eax, 1	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4003060	      0xe92afaffff	                           jmp 0x4002a8f	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4003065	           0xf1f00	                         nop dword [rax]	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4003068	          0x4c8b06	                     mov r8, qword [rsi]	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x400306b	          0x4c89c0	                             mov rax, r8	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x400306e	      0x25ffffff7f	                     and eax, 0x7fffffff	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x4003073	    0x483dffffff3f	                     cmp rax, 0x3fffffff	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x4003079	     0xf8441060000	                            je 0x40036c0	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x400307f	          0x4885c0	                           test rax, rax	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x4003082	     0xf8438060000	                            je 0x40036c0	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x4003088	          0x4589c6	                           mov r14d, r8d	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x400308b	    0x4181e6ffffff	                    and r14d, 0x7fffffff	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x4003092	          0x4889df	                            mov rdi, rbx	       955	state.c	FUNCTION_25	SWITCH_3	IF_5	CALL_2
0x4003095	      0xe8a6dbffff	      call sym.is_cursor_in_scrollregion	       955	state.c	FUNCTION_25	SWITCH_3	IF_5	CALL_2
0x400309a	            0x85c0	                           test eax, eax	       955	state.c	FUNCTION_25	SWITCH_3	IF_5	CALL_2
0x400309c	     0xf84fef4ffff	                            je 0x40025a0	       955	state.c	FUNCTION_25	SWITCH_3	IF_5	CALL_2
0x40030a2	    0xf68395000000	           test byte [rbx + 0x95], 0x10 	       961	state.c	FUNCTION_25	SWITCH_3	IF_6
0x40030a9	          0x8b4b30	            mov ecx, dword [rbx + 0x30] 	       958	state.c	FUNCTION_25	SWITCH_3
0x40030ac	          0x8b7b34	            mov edi, dword [rbx + 0x34] 	       960	state.c	FUNCTION_25	SWITCH_3
0x40030af	          0x8d7101	                      lea esi, [rcx + 1]	       959	state.c	FUNCTION_25	SWITCH_3
0x40030b2	     0xf849a070000	                            je 0x4003852	       961	state.c	FUNCTION_25	SWITCH_3	IF_6
0x40030b8	          0x8b4348	            mov eax, dword [rbx + 0x48] 	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x40030bb	            0x85c0	                           test eax, eax	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x40030bd	     0xf88fc060000	                            js 0x40037bf	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x40030c3	          0x4889f2	                            mov rdx, rsi	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x40030c6	            0x89ce	                            mov esi, ecx	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x40030c8	        0x48c1e020	                           shl rax, 0x20	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x40030cc	        0x48c1e220	                           shl rdx, 0x20	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x40030d0	          0x4809d6	                             or rsi, rdx	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x40030d3	            0x89fa	                            mov edx, edi	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x40030d5	          0x41f7de	                                neg r14d	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x40030d8	          0x4809c2	                             or rdx, rax	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x40030db	            0x31c9	                            xor ecx, ecx	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x40030dd	          0x4589f0	                           mov r8d, r14d	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x40030e0	          0x4889df	                            mov rdi, rbx	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x40030e3	      0xe8b8d3ffff	                         call sym.scroll	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x40030e8	      0xe9b3f4ffff	                           jmp 0x40025a0	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x40030ed	           0xf1f00	                         nop dword [rax]	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x40030f0	          0x488b06	                    mov rax, qword [rsi]	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_99
0x40030f3	          0x4889c2	                            mov rdx, rax	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_99
0x40030f6	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_99
0x40030fc	    0x4881faffffff	                     cmp rdx, 0x3fffffff	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_99
0x4003103	     0xf84e0080000	                            je 0x40039e9	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_99
0x4003109	      0x25ffffff7f	                     and eax, 0x7fffffff	      1329	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x400310e	          0x83f806	                              cmp eax, 6	      1329	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x4003111	     0xf8789f4ffff	                            ja 0x40025a0	      1329	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x4003117	    0xff24c5000000	                       jmp qword [rax*8]	      1329	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x400311e	    0xc74424100100	               mov dword [rsp + 0x10], 1	       519	state.c	FUNCTION_17
0x4003126	      0x488d542410	                   lea rdx, [rsp + 0x10]	       520	state.c	FUNCTION_17	CALL_1
0x400312b	          0x4889df	                            mov rdi, rbx	       520	state.c	FUNCTION_17	CALL_1
0x400312e	      0xbe02000000	                              mov esi, 2	       520	state.c	FUNCTION_17	CALL_1
0x4003133	      0xe800000000	                          call 0x4003138	       520	state.c	FUNCTION_17	CALL_1
0x4003138	      0x488d542410	                   lea rdx, [rsp + 0x10]	       527	state.c	FUNCTION_18	CALL_1
0x400313d	      0xbe07000000	                              mov esi, 7	       527	state.c	FUNCTION_18	CALL_1
0x4003142	          0x4889df	                            mov rdi, rbx	       527	state.c	FUNCTION_18	CALL_1
0x4003145	    0xc74424100300	               mov dword [rsp + 0x10], 3	       526	state.c	FUNCTION_18
0x400314d	      0xe800000000	                          call 0x4003152	       527	state.c	FUNCTION_18	CALL_1
0x4003152	      0xe949f4ffff	                           jmp 0x40025a0	       527	state.c	FUNCTION_18	CALL_1
0x4003157	    0xc74424100000	               mov dword [rsp + 0x10], 0	       519	state.c	FUNCTION_17
0x400315f	      0x488d542410	                   lea rdx, [rsp + 0x10]	       520	state.c	FUNCTION_17	CALL_1
0x4003164	          0x4889df	                            mov rdi, rbx	       520	state.c	FUNCTION_17	CALL_1
0x4003167	      0xbe02000000	                              mov esi, 2	       520	state.c	FUNCTION_17	CALL_1
0x400316c	      0xe800000000	                          call 0x4003171	       520	state.c	FUNCTION_17	CALL_1
0x4003171	      0x488d542410	                   lea rdx, [rsp + 0x10]	       527	state.c	FUNCTION_18	CALL_1
0x4003176	      0xbe07000000	                              mov esi, 7	       527	state.c	FUNCTION_18	CALL_1
0x400317b	          0x4889df	                            mov rdi, rbx	       527	state.c	FUNCTION_18	CALL_1
0x400317e	    0xc74424100200	               mov dword [rsp + 0x10], 2	       526	state.c	FUNCTION_18
0x4003186	      0xe800000000	                          call 0x400318b	       527	state.c	FUNCTION_18	CALL_1
0x400318b	      0xe910f4ffff	                           jmp 0x40025a0	       527	state.c	FUNCTION_18	CALL_1
0x4003190	    0xc74424100100	               mov dword [rsp + 0x10], 1	       519	state.c	FUNCTION_17
0x4003198	            0xebc5	                           jmp 0x400315f	       519	state.c	FUNCTION_17
0x400319a	    0xc74424100000	               mov dword [rsp + 0x10], 0	       519	state.c	FUNCTION_17
0x40031a2	      0x488d542410	                   lea rdx, [rsp + 0x10]	       520	state.c	FUNCTION_17	CALL_1
0x40031a7	          0x4889df	                            mov rdi, rbx	       520	state.c	FUNCTION_17	CALL_1
0x40031aa	      0xbe02000000	                              mov esi, 2	       520	state.c	FUNCTION_17	CALL_1
0x40031af	      0xe800000000	                          call 0x40031b4	       520	state.c	FUNCTION_17	CALL_1
0x40031b4	      0x488d542410	                   lea rdx, [rsp + 0x10]	       527	state.c	FUNCTION_18	CALL_1
0x40031b9	      0xbe07000000	                              mov esi, 7	       527	state.c	FUNCTION_18	CALL_1
0x40031be	          0x4889df	                            mov rdi, rbx	       527	state.c	FUNCTION_18	CALL_1
0x40031c1	    0xc74424100100	               mov dword [rsp + 0x10], 1	       526	state.c	FUNCTION_18
0x40031c9	      0xe800000000	                          call 0x40031ce	       527	state.c	FUNCTION_18	CALL_1
0x40031ce	      0xe9cdf3ffff	                           jmp 0x40025a0	       527	state.c	FUNCTION_18	CALL_1
0x40031d3	    0xc74424100000	               mov dword [rsp + 0x10], 0	       519	state.c	FUNCTION_17
0x40031db	      0xe946ffffff	                           jmp 0x4003126	       519	state.c	FUNCTION_17
0x40031e0	          0x488b36	                    mov rsi, qword [rsi]	      1266	state.c	FUNCTION_25	SWITCH_3	IF_21	CALL_81
0x40031e3	          0x4889f0	                            mov rax, rsi	      1266	state.c	FUNCTION_25	SWITCH_3	IF_21	CALL_81
0x40031e6	      0x25ffffff7f	                     and eax, 0x7fffffff	      1266	state.c	FUNCTION_25	SWITCH_3	IF_21	CALL_81
0x40031eb	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1266	state.c	FUNCTION_25	SWITCH_3	IF_21	CALL_81
0x40031f1	     0xf84a9f3ffff	                            je 0x40025a0	      1266	state.c	FUNCTION_25	SWITCH_3	IF_21	CALL_81
0x40031f7	    0x81e6ffffff7f	                     and esi, 0x7fffffff	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_83
0x40031fd	      0xba01000000	                              mov edx, 1	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_83
0x4003202	          0x4889df	                            mov rdi, rbx	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_83
0x4003205	      0xe846e7ffff	                   call sym.set_dec_mode	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_83
0x400320a	      0xe991f3ffff	                           jmp 0x40025a0	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_83
0x400320f	              0x90	                                     nop	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_83
0x4003210	          0x4c8b06	                     mov r8, qword [rsi]	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x4003213	          0x4c89c0	                             mov rax, r8	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x4003216	      0x25ffffff7f	                     and eax, 0x7fffffff	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x400321b	    0x483dffffff3f	                     cmp rax, 0x3fffffff	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x4003221	            0x7410	                            je 0x4003233	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x4003223	    0x4181e0ffffff	                     and r8d, 0x7fffffff	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x400322a	          0x4885c0	                           test rax, rax	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x400322d	     0xf85e5f4ffff	                           jne 0x4002718	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x4003233	    0x41b801000000	                              mov r8d, 1	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x4003239	      0xe9daf4ffff	                           jmp 0x4002718	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x400323e	            0x6690	                                     nop	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x4003240	          0x488b06	                    mov rax, qword [rsi]	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4003243	      0x25ffffff7f	                     and eax, 0x7fffffff	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4003248	    0x483dffffff3f	                     cmp rax, 0x3fffffff	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x400324e	     0xf84f7030000	                            je 0x400364b	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4003254	          0x4885c0	                           test rax, rax	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4003257	     0xf84ee030000	                            je 0x400364b	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x400325d	           0x34330	             add eax, dword [rbx + 0x30]	       997	state.c	FUNCTION_25	SWITCH_3
0x4003260	    0xc74334000000	               mov dword [rbx + 0x34], 0	       996	state.c	FUNCTION_25	SWITCH_3
0x4003267	     0xfb693950000	           movzx edx, byte [rbx + 0x95] 	       996	state.c	FUNCTION_25	SWITCH_3
0x400326e	          0x894330	             mov dword [rbx + 0x30], eax	      1004	state.c	FUNCTION_25	SWITCH_3
0x4003271	          0x4531c0	                            xor r8d, r8d	      1006	state.c	FUNCTION_25	SWITCH_3
0x4003274	    0xc74338000000	               mov dword [rbx + 0x38], 0	      1005	state.c	FUNCTION_25	SWITCH_3
0x400327b	            0x89d1	                            mov ecx, edx	      1005	state.c	FUNCTION_25	SWITCH_3
0x400327d	          0x83e104	                              and ecx, 4	      1005	state.c	FUNCTION_25	SWITCH_3
0x4003280	      0xe9d9f3ffff	                           jmp 0x400265e	      1006	state.c	FUNCTION_25	SWITCH_3
0x4003285	           0xf1f00	                         nop dword [rax]	      1006	state.c	FUNCTION_25	SWITCH_3
0x4003288	          0x488b06	                    mov rax, qword [rsi]	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x400328b	          0x4889c1	                            mov rcx, rax	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x400328e	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x4003294	    0x4881f9ffffff	                     cmp rcx, 0x3fffffff	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x400329b	     0xf844f030000	                            je 0x40035f0	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x40032a1	      0x25ffffff7f	                     and eax, 0x7fffffff	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x40032a6	      0xb9ffffffff	                     mov ecx, 0xffffffff	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x40032ab	          0x83e801	                              sub eax, 1	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x40032ae	          0x83fa01	                              cmp edx, 1	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x40032b1	          0x894344	             mov dword [rbx + 0x44], eax	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x40032b4	            0x7e1e	                           jle 0x40032d4	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x40032b6	        0x488b5608	                mov rdx, qword [rsi + 8]	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x40032ba	          0x4889d6	                            mov rsi, rdx	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x40032bd	    0x81e6ffffff7f	                     and esi, 0x7fffffff	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x40032c3	    0x4881feffffff	                     cmp rsi, 0x3fffffff	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x40032ca	            0x7408	                            je 0x40032d4	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x40032cc	            0x89d1	                            mov ecx, edx	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x40032ce	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x40032d4	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1395	state.c	FUNCTION_25	SWITCH_3
0x40032d7	          0x894b48	             mov dword [rbx + 0x48], ecx	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x40032da	     0xf84e7040000	                            je 0x40037c7	      1395	state.c	FUNCTION_25	SWITCH_3
0x40032e0	          0x8b5344	            mov edx, dword [rbx + 0x44] 	      1396	state.c	FUNCTION_25	SWITCH_3
0x40032e3	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1396	state.c	FUNCTION_25	SWITCH_3
0x40032e6	            0x39c2	                            cmp edx, eax	      1396	state.c	FUNCTION_25	SWITCH_3
0x40032e8	            0x7e05	                           jle 0x40032ef	      1396	state.c	FUNCTION_25	SWITCH_3
0x40032ea	          0x894344	             mov dword [rbx + 0x44], eax	      1396	state.c	FUNCTION_25	SWITCH_3
0x40032ed	            0x89c2	                            mov edx, eax	      1396	state.c	FUNCTION_25	SWITCH_3
0x40032ef	            0x85d2	                           test edx, edx	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x40032f1	     0xf843b030000	                            je 0x4003632	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x40032f7	            0x39c8	                            cmp eax, ecx	      1401	state.c	FUNCTION_25	SWITCH_3	ELSE_4
0x40032f9	            0x7d05	                           jge 0x4003300	      1401	state.c	FUNCTION_25	SWITCH_3	ELSE_4
0x40032fb	          0x894348	             mov dword [rbx + 0x48], eax	      1401	state.c	FUNCTION_25	SWITCH_3	ELSE_4
0x40032fe	            0x89c1	                            mov ecx, eax	      1401	state.c	FUNCTION_25	SWITCH_3	ELSE_4
0x4003300	            0x85c9	                           test ecx, ecx	      1403	state.c	FUNCTION_25	SWITCH_3	IF_27
0x4003302	     0xf8898f2ffff	                            js 0x40025a0	      1403	state.c	FUNCTION_25	SWITCH_3	IF_27
0x4003308	            0x39ca	                            cmp edx, ecx	      1403	state.c	FUNCTION_25	SWITCH_3	IF_27
0x400330a	     0xf8c90f2ffff	                            jl 0x40025a0	      1403	state.c	FUNCTION_25	SWITCH_3	IF_27
0x4003310	    0xc74344000000	               mov dword [rbx + 0x44], 0	      1406	state.c	FUNCTION_25	SWITCH_3	IF_27
0x4003317	    0xc74348ffffff	     mov dword [rbx + 0x48], 0xffffffff 	      1407	state.c	FUNCTION_25	SWITCH_3	IF_27
0x400331e	      0xe97df2ffff	                           jmp 0x40025a0	      1407	state.c	FUNCTION_25	SWITCH_3	IF_27
0x4003323	       0xf1f440000	                   nop dword [rax + rax]	      1407	state.c	FUNCTION_25	SWITCH_3	IF_27
0x4003328	          0x488b06	                    mov rax, qword [rsi]	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x400332b	          0x4889c2	                            mov rdx, rax	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x400332e	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x4003334	    0x4881faffffff	                     cmp rdx, 0x3fffffff	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x400333b	     0xf8400030000	                            je 0x4003641	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x4003341	      0x25ffffff7f	                     and eax, 0x7fffffff	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x4003346	          0x4885d2	                           test rdx, rdx	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x4003349	     0xf84f2020000	                            je 0x4003641	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x400334f	          0x8b7330	            mov esi, dword [rbx + 0x30] 	      1004	state.c	FUNCTION_25	SWITCH_3
0x4003352	    0xc74334000000	               mov dword [rbx + 0x34], 0	      1003	state.c	FUNCTION_25	SWITCH_3
0x4003359	            0x29c6	                            sub esi, eax	      1004	state.c	FUNCTION_25	SWITCH_3
0x400335b	            0x89f0	                            mov eax, esi	      1004	state.c	FUNCTION_25	SWITCH_3
0x400335d	      0xe905ffffff	                           jmp 0x4003267	      1004	state.c	FUNCTION_25	SWITCH_3
0x4003362	    0x660f1f440000	                    nop word [rax + rax]	      1004	state.c	FUNCTION_25	SWITCH_3
0x4003368	          0x488b06	                    mov rax, qword [rsi]	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_113
0x400336b	      0x25ffffff7f	                     and eax, 0x7fffffff	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_113
0x4003370	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_113
0x4003376	     0xf84d9020000	                            je 0x4003655	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_113
0x400337c	          0x8d48ff	                      lea ecx, [rax - 1]	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_113
0x400337f	          0x83fa01	                              cmp edx, 1	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003382	      0xb8ffffffff	                     mov eax, 0xffffffff	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003387	          0x894b3c	             mov dword [rbx + 0x3c], ecx	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_113
0x400338a	            0x7e1d	                           jle 0x40033a9	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x400338c	        0x488b5608	                mov rdx, qword [rsi + 8]	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003390	          0x4889d6	                            mov rsi, rdx	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003393	    0x81e6ffffff7f	                     and esi, 0x7fffffff	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003399	    0x4881feffffff	                     cmp rsi, 0x3fffffff	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x40033a0	            0x7407	                            je 0x40033a9	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x40033a2	            0x89d0	                            mov eax, edx	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x40033a4	      0x25ffffff7f	                     and eax, 0x7fffffff	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x40033a9	          0x83f9ff	             cmp ecx, 0xffffffffffffffff	      1375	state.c	FUNCTION_25	SWITCH_3
0x40033ac	          0x894340	             mov dword [rbx + 0x40], eax	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x40033af	     0xf8429040000	                            je 0x40037de	      1375	state.c	FUNCTION_25	SWITCH_3
0x40033b5	          0x8b4b3c	            mov ecx, dword [rbx + 0x3c] 	      1376	state.c	FUNCTION_25	SWITCH_3
0x40033b8	          0x8b5328	            mov edx, dword [rbx + 0x28] 	      1376	state.c	FUNCTION_25	SWITCH_3
0x40033bb	            0x39d1	                            cmp ecx, edx	      1376	state.c	FUNCTION_25	SWITCH_3
0x40033bd	            0x7e05	                           jle 0x40033c4	      1376	state.c	FUNCTION_25	SWITCH_3
0x40033bf	          0x89533c	             mov dword [rbx + 0x3c], edx	      1376	state.c	FUNCTION_25	SWITCH_3
0x40033c2	            0x89d1	                            mov ecx, edx	      1376	state.c	FUNCTION_25	SWITCH_3
0x40033c4	            0x85c9	                           test ecx, ecx	      1378	state.c	FUNCTION_25	SWITCH_3	IF_24
0x40033c6	     0xf84c9020000	                            je 0x4003695	      1378	state.c	FUNCTION_25	SWITCH_3	IF_24
0x40033cc	            0x39c2	                            cmp edx, eax	      1381	state.c	FUNCTION_25	SWITCH_3	ELSE_3
0x40033ce	            0x7d05	                           jge 0x40033d5	      1381	state.c	FUNCTION_25	SWITCH_3	ELSE_3
0x40033d0	          0x895340	             mov dword [rbx + 0x40], edx	      1381	state.c	FUNCTION_25	SWITCH_3	ELSE_3
0x40033d3	            0x89d0	                            mov eax, edx	      1381	state.c	FUNCTION_25	SWITCH_3	ELSE_3
0x40033d5	            0x85c0	                           test eax, eax	      1381	state.c	FUNCTION_25	SWITCH_3	ELSE_3
0x40033d7	           0xf48c2	                          cmovs eax, edx	      1381	state.c	FUNCTION_25	SWITCH_3	ELSE_3
0x40033da	            0x39c8	                            cmp eax, ecx	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_116
0x40033dc	     0xf8fbef1ffff	                            jg 0x40025a0	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_116
0x40033e2	    0xc7433c000000	               mov dword [rbx + 0x3c], 0	      1385	state.c	FUNCTION_25	SWITCH_3	IF_25
0x40033e9	    0xc74340ffffff	     mov dword [rbx + 0x40], 0xffffffff 	      1386	state.c	FUNCTION_25	SWITCH_3	IF_25
0x40033f0	      0xe9abf1ffff	                           jmp 0x40025a0	      1386	state.c	FUNCTION_25	SWITCH_3	IF_25
0x40033f5	           0xf1f00	                         nop dword [rax]	      1386	state.c	FUNCTION_25	SWITCH_3	IF_25
0x40033f8	          0x488b06	                    mov rax, qword [rsi]	      1283	state.c	FUNCTION_25	SWITCH_3	IF_22	CALL_86
0x40033fb	      0x25ffffff7f	                     and eax, 0x7fffffff	      1283	state.c	FUNCTION_25	SWITCH_3	IF_22	CALL_86
0x4003400	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1283	state.c	FUNCTION_25	SWITCH_3	IF_22	CALL_86
0x4003406	     0xf8494f1ffff	                            je 0x40025a0	      1283	state.c	FUNCTION_25	SWITCH_3	IF_22	CALL_86
0x400340c	          0x83f804	                              cmp eax, 4	       713	state.c	FUNCTION_22	SWITCH_1
0x400340f	     0xf846f050000	                            je 0x4003984	       713	state.c	FUNCTION_22	SWITCH_1
0x4003415	          0x83f814	                           cmp eax, 0x14	       713	state.c	FUNCTION_22	SWITCH_1
0x4003418	     0xf8582f1ffff	                           jne 0x40025a0	       713	state.c	FUNCTION_22	SWITCH_1
0x400341e	    0x80a394000000	             and byte [rbx + 0x94], 0xef	       719	state.c	FUNCTION_22	SWITCH_1
0x4003425	      0xe976f1ffff	                           jmp 0x40025a0	       719	state.c	FUNCTION_22	SWITCH_1
0x400342a	    0x660f1f440000	                    nop word [rax + rax]	       719	state.c	FUNCTION_22	SWITCH_1
0x4003430	          0x4c8b06	                     mov r8, qword [rsi]	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x4003433	          0x4c89c0	                             mov rax, r8	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x4003436	      0x25ffffff7f	                     and eax, 0x7fffffff	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x400343b	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x4003441	     0xf8484020000	                            je 0x40036cb	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x4003447	          0x4885c0	                           test rax, rax	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x400344a	     0xf847b020000	                            je 0x40036cb	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x4003450	          0x4589c6	                           mov r14d, r8d	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x4003453	    0x4181e6ffffff	                    and r14d, 0x7fffffff	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x400345a	          0x4889df	                            mov rdi, rbx	      1423	state.c	FUNCTION_25	SWITCH_3	IF_29	CALL_125
0x400345d	      0xe8ded7ffff	      call sym.is_cursor_in_scrollregion	      1423	state.c	FUNCTION_25	SWITCH_3	IF_29	CALL_125
0x4003462	            0x85c0	                           test eax, eax	      1423	state.c	FUNCTION_25	SWITCH_3	IF_29	CALL_125
0x4003464	     0xf8436f1ffff	                            je 0x40025a0	      1423	state.c	FUNCTION_25	SWITCH_3	IF_29	CALL_125
0x400346a	          0x8b4340	            mov eax, dword [rbx + 0x40] 	      1427	state.c	FUNCTION_25	SWITCH_3	CALL_126
0x400346d	          0x8b733c	            mov esi, dword [rbx + 0x3c] 	      1426	state.c	FUNCTION_25	SWITCH_3
0x4003470	            0x85c0	                           test eax, eax	      1427	state.c	FUNCTION_25	SWITCH_3	CALL_126
0x4003472	     0xf8896050000	                            js 0x4003a0e	      1427	state.c	FUNCTION_25	SWITCH_3	CALL_126
0x4003478	    0xf68395000000	           test byte [rbx + 0x95], 0x10 	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x400347f	          0x8b4b34	            mov ecx, dword [rbx + 0x34] 	      1428	state.c	FUNCTION_25	SWITCH_3
0x4003482	     0xf840b030000	                            je 0x4003793	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x4003488	          0x8b5348	            mov edx, dword [rbx + 0x48] 	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x400348b	            0x85d2	                           test edx, edx	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x400348d	     0xf8800030000	                            js 0x4003793	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x4003493	        0x48c1e020	                           shl rax, 0x20	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x4003497	        0x48c1e220	                           shl rdx, 0x20	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x400349b	          0x4809c6	                             or rsi, rax	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x400349e	            0x89c8	                            mov eax, ecx	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x40034a0	      0xe930fcffff	                           jmp 0x40030d5	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x40034a5	           0xf1f00	                         nop dword [rax]	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x40034a8	          0x488b0e	                    mov rcx, qword [rsi]	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x40034ab	          0x4889c8	                            mov rax, rcx	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x40034ae	      0x25ffffff7f	                     and eax, 0x7fffffff	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x40034b3	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x40034b9	            0x740f	                            je 0x40034ca	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x40034bb	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x40034c1	          0x4885c0	                           test rax, rax	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x40034c4	     0xf85a1f6ffff	                           jne 0x4002b6b	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x40034ca	      0xb901000000	                              mov ecx, 1	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x40034cf	      0xe997f6ffff	                           jmp 0x4002b6b	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x40034d4	      0x3d4a3f0000	                         cmp eax, 0x3f4a	       951	state.c	FUNCTION_25	SWITCH_3
0x40034d9	     0xf8592f4ffff	                           jne 0x4002971	       951	state.c	FUNCTION_25	SWITCH_3
0x40034df	          0x488b06	                    mov rax, qword [rsi]	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x40034e2	          0x4531e4	                          xor r12d, r12d	      1034	state.c	FUNCTION_25	SWITCH_3
0x40034e5	        0x4183fb3f	                          cmp r11d, 0x3f	      1034	state.c	FUNCTION_25	SWITCH_3
0x40034e9	        0x410f94c4	                               sete r12b	      1034	state.c	FUNCTION_25	SWITCH_3
0x40034ed	      0x25ffffff7f	                     and eax, 0x7fffffff	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x40034f2	        0x4883f801	                              cmp rax, 1	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x40034f6	     0xf8486030000	                            je 0x4003882	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x40034fc	     0xf8e72030000	                           jle 0x4003874	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x4003502	        0x4883f802	                              cmp rax, 2	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x4003506	     0xf8429040000	                            je 0x4003935	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x400350c	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x4003512	     0xf8588f0ffff	                           jne 0x40025a0	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x4003518	          0x8b5334	            mov edx, dword [rbx + 0x34] 	      1039	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x400351b	        0x448b732c	           mov r14d, dword [rbx + 0x2c] 	      1039	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x400351f	          0x8b4330	            mov eax, dword [rbx + 0x30] 	      1038	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4003522	          0x4439f2	                           cmp edx, r14d	      1040	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_8
0x4003525	        0x448d6801	                     lea r13d, [rax + 1]	      1040	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_8
0x4003529	            0x7d39	                           jge 0x4003564	      1040	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_8
0x400352b	        0x4c8b4308	                 mov r8, qword [rbx + 8]	      1040	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_8
0x400352f	          0x4c89e9	                            mov rcx, r13	      1040	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_8
0x4003532	          0x4c89f6	                            mov rsi, r14	      1040	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_8
0x4003535	        0x48c1e120	                           shl rcx, 0x20	      1040	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_8
0x4003539	        0x48c1e620	                           shl rsi, 0x20	      1040	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_8
0x400353d	            0x89c7	                            mov edi, eax	      1040	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_8
0x400353f	          0x4809cf	                             or rdi, rcx	      1040	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_8
0x4003542	          0x4809d6	                             or rsi, rdx	      1040	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_8
0x4003545	          0x4d85c0	                             test r8, r8	        47	state.c	FUNCTION_3	IF_1
0x4003548	            0x741a	                            je 0x4003564	        47	state.c	FUNCTION_3	IF_1
0x400354a	        0x4d8b4020	               mov r8, qword [r8 + 0x20]	        47	state.c	FUNCTION_3	IF_1
0x400354e	          0x4d85c0	                             test r8, r8	        47	state.c	FUNCTION_3	IF_1
0x4003551	            0x7411	                            je 0x4003564	        47	state.c	FUNCTION_3	IF_1
0x4003553	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4003557	          0x4489e2	                           mov edx, r12d	        48	state.c	FUNCTION_3	IF_1	IF_2
0x400355a	          0x41ffd0	                                 call r8	        48	state.c	FUNCTION_3	IF_1	IF_2
0x400355d	          0x8b4330	            mov eax, dword [rbx + 0x30] 	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4003560	        0x448d6801	                     lea r13d, [rax + 1]	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4003564	          0x8b6b28	            mov ebp, dword [rbx + 0x28] 	      1043	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4003567	          0x4589ef	                          mov r15d, r13d	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x400356a	          0x4439ed	                           cmp ebp, r13d	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x400356d	     0xf8eabefffff	                           jle 0x400251e	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x4003573	       0xf1f440000	                   nop dword [rax + rax]	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x4003578	          0x4531c0	                            xor r8d, r8d	      1046	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_21
0x400357b	            0x31c9	                            xor ecx, ecx	      1046	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_21
0x400357d	          0x4489fe	                           mov esi, r15d	      1046	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_21
0x4003580	      0xba01000000	                              mov edx, 1	      1046	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_21
0x4003585	          0x4889df	                            mov rdi, rbx	      1046	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_21
0x4003588	        0x4183c701	                             add r15d, 1	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x400358c	      0xe8afcbffff	                   call sym.set_lineinfo	      1046	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_21
0x4003591	          0x4439fd	                           cmp ebp, r15d	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x4003594	            0x75e2	                           jne 0x4003578	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x4003596	        0x488b4308	                mov rax, qword [rbx + 8]	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x400359a	        0x48c1e520	                           shl rbp, 0x20	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x400359e	          0x4c89ef	                            mov rdi, r13	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x40035a1	          0x4c89f6	                            mov rsi, r14	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x40035a4	          0x4809ef	                             or rdi, rbp	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x40035a7	        0x48c1e620	                           shl rsi, 0x20	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x40035ab	          0x4885c0	                           test rax, rax	        47	state.c	FUNCTION_3	IF_1
0x40035ae	     0xf84ecefffff	                            je 0x40025a0	        47	state.c	FUNCTION_3	IF_1
0x40035b4	        0x488b4020	            mov rax, qword [rax + 0x20] 	        47	state.c	FUNCTION_3	IF_1
0x40035b8	          0x4885c0	                           test rax, rax	        47	state.c	FUNCTION_3	IF_1
0x40035bb	     0xf84dfefffff	                            je 0x40025a0	        47	state.c	FUNCTION_3	IF_1
0x40035c1	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	        48	state.c	FUNCTION_3	IF_1	IF_2
0x40035c5	          0x4489e2	                           mov edx, r12d	        48	state.c	FUNCTION_3	IF_1	IF_2
0x40035c8	            0xffd0	                                call rax	        48	state.c	FUNCTION_3	IF_1	IF_2
0x40035ca	      0xe9d1efffff	                           jmp 0x40025a0	        48	state.c	FUNCTION_3	IF_1	IF_2
0x40035cf	          0x83f84a	                           cmp eax, 0x4a	       951	state.c	FUNCTION_25	SWITCH_3
0x40035d2	     0xf8407ffffff	                            je 0x40034df	       951	state.c	FUNCTION_25	SWITCH_3
0x40035d8	      0xe994f3ffff	                           jmp 0x4002971	       951	state.c	FUNCTION_25	SWITCH_3
0x40035dd	          0x8b7328	            mov esi, dword [rbx + 0x28] 	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x40035e0	      0xe994f5ffff	                           jmp 0x4002b79	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x40035e5	    0x41bf01000000	                             mov r15d, 1	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x40035eb	      0xe9e9f4ffff	                           jmp 0x4002ad9	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x40035f0	          0x83fa01	                              cmp edx, 1	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x40035f3	    0xc74344000000	               mov dword [rbx + 0x44], 0	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x40035fa	     0xf8e1d040000	                           jle 0x4003a1d	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4003600	        0x488b5608	                mov rdx, qword [rsi + 8]	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4003604	            0x31c0	                            xor eax, eax	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x4003606	          0x4889d1	                            mov rcx, rdx	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4003609	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x400360f	    0x4881f9ffffff	                     cmp rcx, 0x3fffffff	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4003616	     0xf85b0fcffff	                           jne 0x40032cc	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x400361c	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1396	state.c	FUNCTION_25	SWITCH_3
0x400361f	          0x83c9ff	                      or ecx, 0xffffffff	      1396	state.c	FUNCTION_25	SWITCH_3
0x4003622	    0xc74348ffffff	     mov dword [rbx + 0x48], 0xffffffff 	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4003629	          0x83f800	                              cmp eax, 0	      1396	state.c	FUNCTION_25	SWITCH_3
0x400362c	     0xf8cb8fcffff	                            jl 0x40032ea	      1396	state.c	FUNCTION_25	SWITCH_3
0x4003632	            0x31d2	                            xor edx, edx	      1396	state.c	FUNCTION_25	SWITCH_3
0x4003634	            0x39c8	                            cmp eax, ecx	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x4003636	     0xf85bbfcffff	                           jne 0x40032f7	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x400363c	      0xe9d6fcffff	                           jmp 0x4003317	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x4003641	      0xb801000000	                              mov eax, 1	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x4003646	      0xe904fdffff	                           jmp 0x400334f	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x400364b	      0xb801000000	                              mov eax, 1	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4003650	      0xe908fcffff	                           jmp 0x400325d	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4003655	          0x83fa01	                              cmp edx, 1	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003658	    0xc7433c000000	               mov dword [rbx + 0x3c], 0	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_113
0x400365f	     0xf8ec7030000	                           jle 0x4003a2c	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003665	        0x488b5608	                mov rdx, qword [rsi + 8]	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003669	            0x31c9	                            xor ecx, ecx	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_113
0x400366b	          0x4889d0	                            mov rax, rdx	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x400366e	      0x25ffffff7f	                     and eax, 0x7fffffff	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003673	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003679	     0xf8523fdffff	                           jne 0x40033a2	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x400367f	          0x8b5328	            mov edx, dword [rbx + 0x28] 	      1376	state.c	FUNCTION_25	SWITCH_3
0x4003682	          0x83c8ff	                      or eax, 0xffffffff	      1376	state.c	FUNCTION_25	SWITCH_3
0x4003685	          0x3b533c	            cmp edx, dword [rbx + 0x3c] 	      1376	state.c	FUNCTION_25	SWITCH_3
0x4003688	    0xc74340ffffff	     mov dword [rbx + 0x40], 0xffffffff 	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x400368f	     0xf8c2afdffff	                            jl 0x40033bf	      1376	state.c	FUNCTION_25	SWITCH_3
0x4003695	            0x31c9	                            xor ecx, ecx	      1376	state.c	FUNCTION_25	SWITCH_3
0x4003697	            0x39c2	                            cmp edx, eax	      1378	state.c	FUNCTION_25	SWITCH_3	IF_24
0x4003699	     0xf852dfdffff	                           jne 0x40033cc	      1378	state.c	FUNCTION_25	SWITCH_3	IF_24
0x400369f	    0xc74340ffffff	     mov dword [rbx + 0x40], 0xffffffff 	      1379	state.c	FUNCTION_25	SWITCH_3	IF_24
0x40036a6	      0xe92ffdffff	                           jmp 0x40033da	      1379	state.c	FUNCTION_25	SWITCH_3	IF_24
0x40036ab	      0xb9ffffffff	                     mov ecx, 0xffffffff	      1379	state.c	FUNCTION_25	SWITCH_3	IF_24
0x40036b0	      0xe9b6f4ffff	                           jmp 0x4002b6b	      1379	state.c	FUNCTION_25	SWITCH_3	IF_24
0x40036b5	    0x41be01000000	                             mov r14d, 1	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x40036bb	      0xe9c3f0ffff	                           jmp 0x4002783	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x40036c0	    0x41be01000000	                             mov r14d, 1	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x40036c6	      0xe9c7f9ffff	                           jmp 0x4003092	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x40036cb	    0x41be01000000	                             mov r14d, 1	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x40036d1	      0xe984fdffff	                           jmp 0x400345a	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x40036d6	      0xbe01000000	                              mov esi, 1	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x40036db	      0xe96ff5ffff	                           jmp 0x4002c4f	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x40036e0	          0x39532c	            cmp dword [rbx + 0x2c], edx 	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x40036e3	         0xf4e532c	          cmovle edx, dword [rbx + 0x2c]	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x40036e7	      0xe9d3f5ffff	                           jmp 0x4002cbf	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x40036ec	      0xba01000000	                              mov edx, 1	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x40036f1	      0xe999f5ffff	                           jmp 0x4002c8f	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x40036f6	    0x41be01000000	                             mov r14d, 1	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x40036fc	      0xe9dcf6ffff	                           jmp 0x4002ddd	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x4003701	      0xbe01000000	                              mov esi, 1	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x4003706	      0xe971f8ffff	                           jmp 0x4002f7c	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x400370b	    0x41be01000000	                             mov r14d, 1	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x4003711	      0xe90fecffff	                           jmp 0x4002325	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x4003716	          0x83f907	                              cmp ecx, 7	       827	state.c	FUNCTION_24	SWITCH_1
0x4003719	     0xf84cf030000	                            je 0x4003aee	       827	state.c	FUNCTION_24	SWITCH_1
0x400371f	     0xf8f77020000	                            jg 0x400399c	       827	state.c	FUNCTION_24	SWITCH_1
0x4003725	          0x83f905	                              cmp ecx, 5	       827	state.c	FUNCTION_24	SWITCH_1
0x4003728	     0xf8471030000	                            je 0x4003a9f	       827	state.c	FUNCTION_24	SWITCH_1
0x400372e	     0xf8f56030000	                            jg 0x4003a8a	       827	state.c	FUNCTION_24	SWITCH_1
0x4003734	          0x83f901	                              cmp ecx, 1	       827	state.c	FUNCTION_24	SWITCH_1
0x4003737	     0xf857a020000	                           jne 0x40039b7	       827	state.c	FUNCTION_24	SWITCH_1
0x400373d	    0x440fb6839400	           movzx r8d, byte [rbx + 0x94] 	       829	state.c	FUNCTION_24	SWITCH_1
0x4003745	          0x41d0e8	                              shr r8b, 1	       829	state.c	FUNCTION_24	SWITCH_1
0x4003748	        0x4183e001	                              and r8d, 1	       829	state.c	FUNCTION_24	SWITCH_1
0x400374c	      0xe9f6f0ffff	                           jmp 0x4002847	       829	state.c	FUNCTION_24	SWITCH_1
0x4003751	     0xfb693950000	           movzx edx, byte [rbx + 0x95] 	       829	state.c	FUNCTION_24	SWITCH_1
0x4003758	            0x89d1	                            mov ecx, edx	       829	state.c	FUNCTION_24	SWITCH_1
0x400375a	          0x83e104	                              and ecx, 4	       829	state.c	FUNCTION_24	SWITCH_1
0x400375d	      0xe9fceeffff	                           jmp 0x400265e	       829	state.c	FUNCTION_24	SWITCH_1
0x4003762	          0x488b3b	                    mov rdi, qword [rbx]	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_94
0x4003765	      0xba00000000	                              mov edx, 0	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_94
0x400376a	      0xbe9b000000	                           mov esi, 0x9b	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_94
0x400376f	            0x31c0	                            xor eax, eax	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_94
0x4003771	      0xe800000000	                          call 0x4003776	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_94
0x4003776	      0xe925eeffff	                           jmp 0x40025a0	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_94
0x400377b	    0x808b7c010000	                or byte [rbx + 0x17c], 1	      1366	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4003782	      0xe919eeffff	                           jmp 0x40025a0	      1366	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4003787	    0x80a37c010000	            and byte [rbx + 0x17c], 0xfe	      1363	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x400378e	      0xe90deeffff	                           jmp 0x40025a0	      1363	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4003793	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x4003796	      0xe9f8fcffff	                           jmp 0x4003493	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x400379b	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x400379e	      0xe96ff3ffff	                           jmp 0x4002b12	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x40037a3	            0x31c9	                            xor ecx, ecx	      1121	state.c	FUNCTION_25	SWITCH_3	CALL_41
0x40037a5	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x40037a8	      0xe9b1ebffff	                           jmp 0x400235e	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x40037ad	            0x31c9	                            xor ecx, ecx	      1106	state.c	FUNCTION_25	SWITCH_3	CALL_35
0x40037af	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x40037b2	      0xe95ff6ffff	                           jmp 0x4002e16	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x40037b7	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x40037ba	      0xe9f5efffff	                           jmp 0x40027b4	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x40037bf	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x40037c2	      0xe9fcf8ffff	                           jmp 0x40030c3	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x40037c7	    0xc74344000000	               mov dword [rbx + 0x44], 0	      1395	state.c	FUNCTION_25	SWITCH_3
0x40037ce	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1396	state.c	FUNCTION_25	SWITCH_3
0x40037d1	            0x85c0	                           test eax, eax	      1396	state.c	FUNCTION_25	SWITCH_3
0x40037d3	     0xf8959feffff	                           jns 0x4003632	      1396	state.c	FUNCTION_25	SWITCH_3
0x40037d9	      0xe90cfbffff	                           jmp 0x40032ea	      1396	state.c	FUNCTION_25	SWITCH_3
0x40037de	    0xc7433c000000	               mov dword [rbx + 0x3c], 0	      1375	state.c	FUNCTION_25	SWITCH_3
0x40037e5	          0x8b5328	            mov edx, dword [rbx + 0x28] 	      1376	state.c	FUNCTION_25	SWITCH_3
0x40037e8	            0x85d2	                           test edx, edx	      1376	state.c	FUNCTION_25	SWITCH_3
0x40037ea	     0xf89a5feffff	                           jns 0x4003695	      1376	state.c	FUNCTION_25	SWITCH_3
0x40037f0	      0xe9cafbffff	                           jmp 0x40033bf	      1376	state.c	FUNCTION_25	SWITCH_3
0x40037f5	        0x488b4b58	            mov rcx, qword [rbx + 0x58] 	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x40037f9	          0x4863d0	                         movsxd rdx, eax	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x40037fc	        0xf6049101	              test byte [rcx + rdx*4], 1	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4003800	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4003803	     0xf840d020000	                            je 0x4003a16	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4003809	            0x89d1	                            mov ecx, edx	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x400380b	          0xc1e91f	                           shr ecx, 0x1f	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x400380e	             0x1ca	                            add edx, ecx	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4003810	            0x31c9	                            xor ecx, ecx	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4003812	            0xd1fa	                              sar edx, 1	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4003814	      0xe946f5ffff	                           jmp 0x4002d5f	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4003819	        0x488b5358	            mov rdx, qword [rbx + 0x58] 	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x400381d	          0x4863c1	                         movsxd rax, ecx	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x4003820	        0xf6048201	              test byte [rdx + rax*4], 1	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x4003824	            0x7491	                            je 0x40037b7	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x4003826	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x4003829	            0x89c2	                            mov edx, eax	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x400382b	          0xc1ea1f	                           shr edx, 0x1f	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x400382e	             0x1d0	                            add eax, edx	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x4003830	            0xd1f8	                              sar eax, 1	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x4003832	      0xe97defffff	                           jmp 0x40027b4	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x4003837	          0x4885d2	                           test rdx, rdx	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x400383a	     0xf8403f5ffff	                            je 0x4002d43	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4003840	      0xe99bebffff	                           jmp 0x40023e0	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4003845	          0x8b7334	            mov esi, dword [rbx + 0x34] 	      1086	state.c	FUNCTION_25	SWITCH_3	SWITCH_5
0x4003848	            0x31c9	                            xor ecx, ecx	      1086	state.c	FUNCTION_25	SWITCH_3	SWITCH_5
0x400384a	          0x8d5601	                      lea edx, [rsi + 1]	      1086	state.c	FUNCTION_25	SWITCH_3	SWITCH_5
0x400384d	      0xe90df5ffff	                           jmp 0x4002d5f	      1086	state.c	FUNCTION_25	SWITCH_3	SWITCH_5
0x4003852	        0x488b5358	            mov rdx, qword [rbx + 0x58] 	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x4003856	          0x4863c1	                         movsxd rax, ecx	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x4003859	        0xf6048201	              test byte [rdx + rax*4], 1	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x400385d	     0xf845cffffff	                            je 0x40037bf	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x4003863	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x4003866	            0x89c2	                            mov edx, eax	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x4003868	          0xc1ea1f	                           shr edx, 0x1f	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x400386b	             0x1d0	                            add eax, edx	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x400386d	            0xd1f8	                              sar eax, 1	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x400386f	      0xe94ff8ffff	                           jmp 0x40030c3	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x4003874	          0x4885c0	                           test rax, rax	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x4003877	     0xf849bfcffff	                            je 0x4003518	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x400387d	      0xe91eedffff	                           jmp 0x40025a0	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x4003882	          0x8b6b30	            mov ebp, dword [rbx + 0x30] 	      1052	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4003885	          0x4531ed	                          xor r13d, r13d	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x4003888	        0x448b732c	           mov r14d, dword [rbx + 0x2c] 	      1053	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x400388c	            0x85ed	                           test ebp, ebp	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x400388e	            0x7e1e	                           jle 0x40038ae	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x4003890	          0x4531c0	                            xor r8d, r8d	      1055	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_23
0x4003893	            0x31c9	                            xor ecx, ecx	      1055	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_23
0x4003895	          0x4489ee	                           mov esi, r13d	      1055	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_23
0x4003898	      0xba01000000	                              mov edx, 1	      1055	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_23
0x400389d	          0x4889df	                            mov rdi, rbx	      1055	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_23
0x40038a0	        0x4183c501	                             add r13d, 1	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x40038a4	      0xe897c8ffff	                   call sym.set_lineinfo	      1055	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_23
0x40038a9	          0x4439ed	                           cmp ebp, r13d	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x40038ac	            0x75e2	                           jne 0x4003890	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x40038ae	          0x4585f6	                         test r14d, r14d	      1056	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_10
0x40038b1	            0x7e31	                           jle 0x40038e4	      1056	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_10
0x40038b3	        0x488b4308	                mov rax, qword [rbx + 8]	      1056	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_10
0x40038b7	          0x4889ef	                            mov rdi, rbp	      1056	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_10
0x40038ba	          0x4c89f6	                            mov rsi, r14	      1056	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_10
0x40038bd	        0x48c1e720	                           shl rdi, 0x20	      1056	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_10
0x40038c1	        0x48c1e620	                           shl rsi, 0x20	      1056	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_10
0x40038c5	          0x4885c0	                           test rax, rax	        47	state.c	FUNCTION_3	IF_1
0x40038c8	     0xf84d2ecffff	                            je 0x40025a0	        47	state.c	FUNCTION_3	IF_1
0x40038ce	        0x488b4020	            mov rax, qword [rax + 0x20] 	        47	state.c	FUNCTION_3	IF_1
0x40038d2	          0x4885c0	                           test rax, rax	        47	state.c	FUNCTION_3	IF_1
0x40038d5	     0xf8486020000	                            je 0x4003b61	        47	state.c	FUNCTION_3	IF_1
0x40038db	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	        48	state.c	FUNCTION_3	IF_1	IF_2
0x40038df	          0x4489e2	                           mov edx, r12d	        48	state.c	FUNCTION_3	IF_1	IF_2
0x40038e2	            0xffd0	                                call rax	        48	state.c	FUNCTION_3	IF_1	IF_2
0x40038e4	          0x8b7b30	            mov edi, dword [rbx + 0x30] 	      1059	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x40038e7	        0x448b4334	            mov r8d, dword [rbx + 0x34] 	      1060	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x40038eb	        0x488b4b08	                mov rcx, qword [rbx + 8]	      1060	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x40038ef	        0x418d7001	                       lea esi, [r8 + 1]	      1060	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x40038f3	          0x4589c1	                            mov r9d, r8d	      1060	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x40038f6	          0x8d5701	                      lea edx, [rdi + 1]	      1060	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x40038f9	          0x4889f8	                            mov rax, rdi	      1059	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x40038fc	            0x89fd	                            mov ebp, edi	      1059	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x40038fe	        0x48c1e620	                           shl rsi, 0x20	      1059	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4003902	        0x48c1e220	                           shl rdx, 0x20	      1059	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4003906	          0x4809d7	                             or rdi, rdx	      1059	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4003909	          0x4885c9	                           test rcx, rcx	        47	state.c	FUNCTION_3	IF_1
0x400390c	     0xf843ffeffff	                            je 0x4003751	        47	state.c	FUNCTION_3	IF_1
0x4003912	        0x488b4120	            mov rax, qword [rcx + 0x20] 	        47	state.c	FUNCTION_3	IF_1
0x4003916	          0x4885c0	                           test rax, rax	        47	state.c	FUNCTION_3	IF_1
0x4003919	     0xf85a2fcffff	                           jne 0x40035c1	        47	state.c	FUNCTION_3	IF_1
0x400391f	     0xfb693950000	           movzx edx, byte [rbx + 0x95] 	        47	state.c	FUNCTION_3	IF_1
0x4003926	            0x89e8	                            mov eax, ebp	        47	state.c	FUNCTION_3	IF_1
0x4003928	          0x4589c8	                            mov r8d, r9d	        47	state.c	FUNCTION_3	IF_1
0x400392b	            0x89d1	                            mov ecx, edx	        47	state.c	FUNCTION_3	IF_1
0x400392d	          0x83e104	                              and ecx, 4	        47	state.c	FUNCTION_3	IF_1
0x4003930	      0xe929edffff	                           jmp 0x400265e	        47	state.c	FUNCTION_3	IF_1
0x4003935	        0x448b6b28	           mov r13d, dword [rbx + 0x28] 	      1066	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4003939	            0x31ed	                            xor ebp, ebp	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x400393b	        0x448b732c	           mov r14d, dword [rbx + 0x2c] 	      1067	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x400393f	          0x4585ed	                         test r13d, r13d	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x4003942	            0x7e20	                           jle 0x4003964	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x4003944	         0xf1f4000	                         nop dword [rax]	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x4003948	          0x4531c0	                            xor r8d, r8d	      1069	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_26
0x400394b	            0x31c9	                            xor ecx, ecx	      1069	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_26
0x400394d	            0x89ee	                            mov esi, ebp	      1069	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_26
0x400394f	      0xba01000000	                              mov edx, 1	      1069	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_26
0x4003954	          0x4889df	                            mov rdi, rbx	      1069	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_26
0x4003957	          0x83c501	                              add ebp, 1	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x400395a	      0xe8e1c7ffff	                   call sym.set_lineinfo	      1069	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_26
0x400395f	          0x4139ed	                           cmp r13d, ebp	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x4003962	            0x75e4	                           jne 0x4003948	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x4003964	        0x488b4308	                mov rax, qword [rbx + 8]	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x4003968	          0x4c89ef	                            mov rdi, r13	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x400396b	          0x4c89f6	                            mov rsi, r14	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x400396e	        0x48c1e720	                           shl rdi, 0x20	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x4003972	        0x48c1e620	                           shl rsi, 0x20	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x4003976	          0x4885c0	                           test rax, rax	        47	state.c	FUNCTION_3	IF_1
0x4003979	     0xf8535fcffff	                           jne 0x40035b4	        47	state.c	FUNCTION_3	IF_1
0x400397f	      0xe91cecffff	                           jmp 0x40025a0	        47	state.c	FUNCTION_3	IF_1
0x4003984	    0x80a394000000	             and byte [rbx + 0x94], 0xf7	       715	state.c	FUNCTION_22	SWITCH_1
0x400398b	      0xe910ecffff	                           jmp 0x40025a0	       715	state.c	FUNCTION_22	SWITCH_1
0x4003990	    0x808b94000000	                 or byte [rbx + 0x94], 8	       715	state.c	FUNCTION_22	SWITCH_1
0x4003997	      0xe904ecffff	                           jmp 0x40025a0	       715	state.c	FUNCTION_22	SWITCH_1
0x400399c	          0x83f919	                           cmp ecx, 0x19	       827	state.c	FUNCTION_24	SWITCH_1
0x400399f	     0xf846e010000	                            je 0x4003b13	       827	state.c	FUNCTION_24	SWITCH_1
0x40039a5	          0x83f945	                           cmp ecx, 0x45	       827	state.c	FUNCTION_24	SWITCH_1
0x40039a8	     0xf842b010000	                            je 0x4003ad9	       827	state.c	FUNCTION_24	SWITCH_1
0x40039ae	          0x83f90c	                            cmp ecx, 0xc	       827	state.c	FUNCTION_24	SWITCH_1
0x40039b1	     0xf840d010000	                            je 0x4003ac4	       827	state.c	FUNCTION_24	SWITCH_1
0x40039b7	          0x4531c0	                            xor r8d, r8d	       893	state.c	FUNCTION_24	SWITCH_1	CALL_1
0x40039ba	      0xe98feeffff	                           jmp 0x400284e	       893	state.c	FUNCTION_24	SWITCH_1	CALL_1
0x40039bf	    0x81f9eb030000	                          cmp ecx, 0x3eb	       827	state.c	FUNCTION_24	SWITCH_1
0x40039c5	     0xf8486010000	                            je 0x4003b51	       827	state.c	FUNCTION_24	SWITCH_1
0x40039cb	     0xf8f6b010000	                            jg 0x4003b3c	       827	state.c	FUNCTION_24	SWITCH_1
0x40039d1	    0x81f9ea030000	                          cmp ecx, 0x3ea	       827	state.c	FUNCTION_24	SWITCH_1
0x40039d7	            0x75de	                           jne 0x40039b7	       827	state.c	FUNCTION_24	SWITCH_1
0x40039d9	          0x4531c0	                            xor r8d, r8d	       861	state.c	FUNCTION_24	SWITCH_1
0x40039dc	        0x837b6c03	               cmp dword [rbx + 0x6c], 3	       861	state.c	FUNCTION_24	SWITCH_1
0x40039e0	        0x410f94c0	                                sete r8b	       861	state.c	FUNCTION_24	SWITCH_1
0x40039e4	      0xe95eeeffff	                           jmp 0x4002847	       861	state.c	FUNCTION_24	SWITCH_1
0x40039e9	    0xc74424100100	               mov dword [rsp + 0x10], 1	       519	state.c	FUNCTION_17
0x40039f1	      0xe9acf7ffff	                           jmp 0x40031a2	       519	state.c	FUNCTION_17
0x40039f6	          0x8b4328	            mov eax, dword [rbx + 0x28] 	      1442	state.c	FUNCTION_25	SWITCH_3	CALL_131
0x40039f9	      0xe9f9f0ffff	                           jmp 0x4002af7	      1442	state.c	FUNCTION_25	SWITCH_3	CALL_131
0x40039fe	          0x8b4328	            mov eax, dword [rbx + 0x28] 	      1120	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x4003a01	      0xe93de9ffff	                           jmp 0x4002343	      1120	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x4003a06	          0x8b4328	            mov eax, dword [rbx + 0x28] 	      1105	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x4003a09	      0xe9edf3ffff	                           jmp 0x4002dfb	      1105	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x4003a0e	          0x8b4328	            mov eax, dword [rbx + 0x28] 	      1427	state.c	FUNCTION_25	SWITCH_3	CALL_126
0x4003a11	      0xe962faffff	                           jmp 0x4003478	      1427	state.c	FUNCTION_25	SWITCH_3	CALL_126
0x4003a16	            0x31c9	                            xor ecx, ecx	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4003a18	      0xe942f3ffff	                           jmp 0x4002d5f	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4003a1d	    0xc74348ffffff	     mov dword [rbx + 0x48], 0xffffffff 	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4003a24	          0x83c9ff	                      or ecx, 0xffffffff	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4003a27	      0xe9a2fdffff	                           jmp 0x40037ce	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4003a2c	    0xc74340ffffff	     mov dword [rbx + 0x40], 0xffffffff 	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003a33	          0x83c8ff	                      or eax, 0xffffffff	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003a36	      0xe9aafdffff	                           jmp 0x40037e5	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003a3b	          0x8b5334	            mov edx, dword [rbx + 0x34] 	      1243	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	CALL_76
0x4003a3e	            0x89d0	                            mov eax, edx	       164	state.c	FUNCTION_10
0x4003a40	          0x83e207	                              and edx, 7	       164	state.c	FUNCTION_10
0x4003a43	          0xc1f803	                              sar eax, 3	       164	state.c	FUNCTION_10
0x4003a46	            0x89d1	                            mov ecx, edx	       164	state.c	FUNCTION_10
0x4003a48	      0xba01000000	                              mov edx, 1	       164	state.c	FUNCTION_10
0x4003a4d	            0x4898	                                    cdqe	       164	state.c	FUNCTION_10
0x4003a4f	        0x48034350	             add rax, qword [rbx + 0x50]	       164	state.c	FUNCTION_10
0x4003a53	            0xd3e2	                             shl edx, cl	       164	state.c	FUNCTION_10
0x4003a55	            0xf7d2	                                 not edx	       164	state.c	FUNCTION_10
0x4003a57	            0x2010	                      and byte [rax], dl	       164	state.c	FUNCTION_10
0x4003a59	      0xe942ebffff	                           jmp 0x40025a0	       164	state.c	FUNCTION_10
0x4003a5e	    0x81f9ee030000	                          cmp ecx, 0x3ee	       827	state.c	FUNCTION_24	SWITCH_1
0x4003a64	     0xf854dffffff	                           jne 0x40039b7	       827	state.c	FUNCTION_24	SWITCH_1
0x4003a6a	          0x4531c0	                            xor r8d, r8d	       877	state.c	FUNCTION_24	SWITCH_1
0x4003a6d	        0x837b7002	               cmp dword [rbx + 0x70], 2	       877	state.c	FUNCTION_24	SWITCH_1
0x4003a71	        0x410f94c0	                                sete r8b	       877	state.c	FUNCTION_24	SWITCH_1
0x4003a75	      0xe9cdedffff	                           jmp 0x4002847	       877	state.c	FUNCTION_24	SWITCH_1
0x4003a7a	          0x4531c0	                            xor r8d, r8d	       881	state.c	FUNCTION_24	SWITCH_1
0x4003a7d	        0x837b7003	               cmp dword [rbx + 0x70], 3	       881	state.c	FUNCTION_24	SWITCH_1
0x4003a81	        0x410f94c0	                                sete r8b	       881	state.c	FUNCTION_24	SWITCH_1
0x4003a85	      0xe9bdedffff	                           jmp 0x4002847	       881	state.c	FUNCTION_24	SWITCH_1
0x4003a8a	    0x440fb6839500	           movzx r8d, byte [rbx + 0x95] 	       837	state.c	FUNCTION_24	SWITCH_1
0x4003a92	        0x41c0e802	                              shr r8b, 2	       837	state.c	FUNCTION_24	SWITCH_1
0x4003a96	        0x4183e001	                              and r8d, 1	       837	state.c	FUNCTION_24	SWITCH_1
0x4003a9a	      0xe9a8edffff	                           jmp 0x4002847	       837	state.c	FUNCTION_24	SWITCH_1
0x4003a9f	    0x440fb6839500	           movzx r8d, byte [rbx + 0x95] 	       833	state.c	FUNCTION_24	SWITCH_1
0x4003aa7	        0x41c0e803	                              shr r8b, 3	       833	state.c	FUNCTION_24	SWITCH_1
0x4003aab	        0x4183e001	                              and r8d, 1	       833	state.c	FUNCTION_24	SWITCH_1
0x4003aaf	      0xe993edffff	                           jmp 0x4002847	       833	state.c	FUNCTION_24	SWITCH_1
0x4003ab4	          0x4531c0	                            xor r8d, r8d	       873	state.c	FUNCTION_24	SWITCH_1
0x4003ab7	        0x837b7001	               cmp dword [rbx + 0x70], 1	       873	state.c	FUNCTION_24	SWITCH_1
0x4003abb	        0x410f94c0	                                sete r8b	       873	state.c	FUNCTION_24	SWITCH_1
0x4003abf	      0xe983edffff	                           jmp 0x4002847	       873	state.c	FUNCTION_24	SWITCH_1
0x4003ac4	    0x440fb6839400	           movzx r8d, byte [rbx + 0x94] 	       845	state.c	FUNCTION_24	SWITCH_1
0x4003acc	        0x41c0e806	                              shr r8b, 6	       845	state.c	FUNCTION_24	SWITCH_1
0x4003ad0	        0x4183e001	                              and r8d, 1	       845	state.c	FUNCTION_24	SWITCH_1
0x4003ad4	      0xe96eedffff	                           jmp 0x4002847	       845	state.c	FUNCTION_24	SWITCH_1
0x4003ad9	    0x440fb6839500	           movzx r8d, byte [rbx + 0x95] 	       853	state.c	FUNCTION_24	SWITCH_1
0x4003ae1	        0x41c0e804	                              shr r8b, 4	       853	state.c	FUNCTION_24	SWITCH_1
0x4003ae5	        0x4183e001	                              and r8d, 1	       853	state.c	FUNCTION_24	SWITCH_1
0x4003ae9	      0xe959edffff	                           jmp 0x4002847	       853	state.c	FUNCTION_24	SWITCH_1
0x4003aee	    0x440fb6839400	           movzx r8d, byte [rbx + 0x94] 	       841	state.c	FUNCTION_24	SWITCH_1
0x4003af6	        0x41c0e802	                              shr r8b, 2	       841	state.c	FUNCTION_24	SWITCH_1
0x4003afa	        0x4183e001	                              and r8d, 1	       841	state.c	FUNCTION_24	SWITCH_1
0x4003afe	      0xe944edffff	                           jmp 0x4002847	       841	state.c	FUNCTION_24	SWITCH_1
0x4003b03	          0x4531c0	                            xor r8d, r8d	       857	state.c	FUNCTION_24	SWITCH_1
0x4003b06	        0x837b6c01	               cmp dword [rbx + 0x6c], 1	       857	state.c	FUNCTION_24	SWITCH_1
0x4003b0a	        0x410f94c0	                                sete r8b	       857	state.c	FUNCTION_24	SWITCH_1
0x4003b0e	      0xe934edffff	                           jmp 0x4002847	       857	state.c	FUNCTION_24	SWITCH_1
0x4003b13	    0x440fb6839400	           movzx r8d, byte [rbx + 0x94] 	       849	state.c	FUNCTION_24	SWITCH_1
0x4003b1b	        0x41c0e805	                              shr r8b, 5	       849	state.c	FUNCTION_24	SWITCH_1
0x4003b1f	        0x4183e001	                              and r8d, 1	       849	state.c	FUNCTION_24	SWITCH_1
0x4003b23	      0xe91fedffff	                           jmp 0x4002847	       849	state.c	FUNCTION_24	SWITCH_1
0x4003b28	    0x440fb6839500	           movzx r8d, byte [rbx + 0x95] 	       885	state.c	FUNCTION_24	SWITCH_1
0x4003b30	          0x41d0e8	                              shr r8b, 1	       885	state.c	FUNCTION_24	SWITCH_1
0x4003b33	        0x4183e001	                              and r8d, 1	       885	state.c	FUNCTION_24	SWITCH_1
0x4003b37	      0xe90bedffff	                           jmp 0x4002847	       885	state.c	FUNCTION_24	SWITCH_1
0x4003b3c	    0x440fb6839500	           movzx r8d, byte [rbx + 0x95] 	       869	state.c	FUNCTION_24	SWITCH_1
0x4003b44	        0x41c0e806	                              shr r8b, 6	       869	state.c	FUNCTION_24	SWITCH_1
0x4003b48	        0x4183e001	                              and r8d, 1	       869	state.c	FUNCTION_24	SWITCH_1
0x4003b4c	      0xe9f6ecffff	                           jmp 0x4002847	       869	state.c	FUNCTION_24	SWITCH_1
0x4003b51	          0x4531c0	                            xor r8d, r8d	       865	state.c	FUNCTION_24	SWITCH_1
0x4003b54	        0x837b6c05	               cmp dword [rbx + 0x6c], 5	       865	state.c	FUNCTION_24	SWITCH_1
0x4003b58	        0x410f94c0	                                sete r8b	       865	state.c	FUNCTION_24	SWITCH_1
0x4003b5c	      0xe9e6ecffff	                           jmp 0x4002847	       865	state.c	FUNCTION_24	SWITCH_1
0x4003b61	          0x8b6b30	            mov ebp, dword [rbx + 0x30] 	       865	state.c	FUNCTION_24	SWITCH_1
0x4003b64	        0x448b4b34	            mov r9d, dword [rbx + 0x34] 	       865	state.c	FUNCTION_24	SWITCH_1
0x4003b68	      0xe9b2fdffff	                           jmp 0x400391f	       865	state.c	FUNCTION_24	SWITCH_1
0x4003b6d	      0xe800000000	                          call 0x4003b72	      1495	state.c	FUNCTION_25
set_lineinfo	DO,0:SWITCH,0:CALL,0:WHILE,0:ELSE,3:functions,0:IF,6:FOR,0	69
0x4000140	            0x4154	                                push r12	       217	state.c	FUNCTION_14
0x4000142	              0x55	                                push rbp	       217	state.c	FUNCTION_14
0x4000143	          0x4863ee	                         movsxd rbp, esi	       217	state.c	FUNCTION_14
0x4000146	              0x53	                                push rbx	       217	state.c	FUNCTION_14
0x4000147	          0x4889fb	                            mov rbx, rdi	       217	state.c	FUNCTION_14
0x400014a	          0x4189d4	                           mov r12d, edx	       217	state.c	FUNCTION_14
0x400014d	          0x4889ef	                            mov rdi, rbp	       217	state.c	FUNCTION_14
0x4000150	        0x4883ec10	                           sub rsp, 0x10	       217	state.c	FUNCTION_14
0x4000154	    0x64488b042528	                mov rax, qword fs:[0x28]	       217	state.c	FUNCTION_14
0x400015d	      0x4889442408	                mov qword [rsp + 8], rax	       217	state.c	FUNCTION_14
0x4000162	            0x31c0	                            xor eax, eax	       217	state.c	FUNCTION_14
0x4000164	        0x488b4358	            mov rax, qword [rbx + 0x58] 	       218	state.c	FUNCTION_14
0x4000168	            0x85c9	                           test ecx, ecx	       220	state.c	FUNCTION_14	IF_1
0x400016a	        0x488d14a8	                  lea rdx, [rax + rbp*4]	       218	state.c	FUNCTION_14
0x400016e	            0x8b02	                    mov eax, dword [rdx]	       218	state.c	FUNCTION_14
0x4000170	          0x890424	                    mov dword [rsp], eax	       218	state.c	FUNCTION_14
0x4000173	            0x757b	                           jne 0x40001f0	       220	state.c	FUNCTION_14	IF_1
0x4000175	        0x802424fe	                    and byte [rsp], 0xfe	       221	state.c	FUNCTION_14	IF_1
0x4000179	          0x4585c0	                           test r8d, r8d	       226	state.c	FUNCTION_14	IF_3
0x400017c	            0x7552	                           jne 0x40001d0	       226	state.c	FUNCTION_14	IF_3
0x400017e	        0x802424f9	                    and byte [rsp], 0xf9	       227	state.c	FUNCTION_14	IF_3
0x4000182	        0x488b4308	                mov rax, qword [rbx + 8]	       233	state.c	FUNCTION_14	IF_6
0x4000186	          0x4885c0	                           test rax, rax	       233	state.c	FUNCTION_14	IF_6
0x4000189	            0x743d	                            je 0x40001c8	       233	state.c	FUNCTION_14	IF_6
0x400018b	        0x488b4050	            mov rax, qword [rax + 0x50] 	       234	state.c	FUNCTION_14	IF_6
0x400018f	          0x4885c0	                           test rax, rax	       233	state.c	FUNCTION_14	IF_6
0x4000192	            0x7434	                            je 0x40001c8	       233	state.c	FUNCTION_14	IF_6
0x4000194	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       235	state.c	FUNCTION_14	IF_6
0x4000198	          0x4889e6	                            mov rsi, rsp	       235	state.c	FUNCTION_14	IF_6
0x400019b	            0xffd0	                                call rax	       235	state.c	FUNCTION_14	IF_6
0x400019d	            0x85c0	                           test eax, eax	       234	state.c	FUNCTION_14	IF_6
0x400019f	            0x7427	                            je 0x40001c8	       234	state.c	FUNCTION_14	IF_6
0x40001a1	        0x488b4358	            mov rax, qword [rbx + 0x58] 	       237	state.c	FUNCTION_14	IF_6
0x40001a5	          0x8b1424	                    mov edx, dword [rsp]	       237	state.c	FUNCTION_14	IF_6
0x40001a8	          0x8914a8	            mov dword [rax + rbp*4], edx	       237	state.c	FUNCTION_14	IF_6
0x40001ab	      0x488b442408	                mov rax, qword [rsp + 8]	       238	state.c	FUNCTION_14
0x40001b0	    0x644833042528	                xor rax, qword fs:[0x28]	       238	state.c	FUNCTION_14
0x40001b9	            0x7557	                           jne 0x4000212	       238	state.c	FUNCTION_14
0x40001bb	        0x4883c410	                           add rsp, 0x10	       238	state.c	FUNCTION_14
0x40001bf	              0x5b	                                 pop rbx	       238	state.c	FUNCTION_14
0x40001c0	              0x5d	                                 pop rbp	       238	state.c	FUNCTION_14
0x40001c1	            0x415c	                                 pop r12	       238	state.c	FUNCTION_14
0x40001c3	              0xc3	                                     ret	       238	state.c	FUNCTION_14
0x40001c4	         0xf1f4000	                         nop dword [rax]	       238	state.c	FUNCTION_14
0x40001c8	          0x4585e4	                         test r12d, r12d	       236	state.c	FUNCTION_14	IF_6
0x40001cb	            0x75d4	                           jne 0x40001a1	       236	state.c	FUNCTION_14	IF_6
0x40001cd	            0xebdc	                           jmp 0x40001ab	       236	state.c	FUNCTION_14	IF_6
0x40001cf	              0x90	                                     nop	       236	state.c	FUNCTION_14	IF_6
0x40001d0	        0x4183f801	                              cmp r8d, 1	       228	state.c	FUNCTION_14	ELSE_2	IF_4
0x40001d4	            0x742a	                            je 0x4000200	       228	state.c	FUNCTION_14	ELSE_2	IF_4
0x40001d6	        0x4183f802	                              cmp r8d, 2	       230	state.c	FUNCTION_14	ELSE_3	IF_5
0x40001da	            0x75a6	                           jne 0x4000182	       230	state.c	FUNCTION_14	ELSE_3	IF_5
0x40001dc	         0xfb60424	                   movzx eax, byte [rsp]	       231	state.c	FUNCTION_14	ELSE_3	IF_5
0x40001e0	          0x83e0f9	                     and eax, 0xfffffff9	       231	state.c	FUNCTION_14	ELSE_3	IF_5
0x40001e3	          0x83c804	                               or eax, 4	       231	state.c	FUNCTION_14	ELSE_3	IF_5
0x40001e6	          0x880424	                      mov byte [rsp], al	       231	state.c	FUNCTION_14	ELSE_3	IF_5
0x40001e9	            0xeb97	                           jmp 0x4000182	       231	state.c	FUNCTION_14	ELSE_3	IF_5
0x40001eb	       0xf1f440000	                   nop dword [rax + rax]	       231	state.c	FUNCTION_14	ELSE_3	IF_5
0x40001f0	          0x83f901	                              cmp ecx, 1	       222	state.c	FUNCTION_14	ELSE_1	IF_2
0x40001f3	            0x7584	                           jne 0x4000179	       222	state.c	FUNCTION_14	ELSE_1	IF_2
0x40001f5	        0x800c2401	                        or byte [rsp], 1	       223	state.c	FUNCTION_14	ELSE_1	IF_2
0x40001f9	      0xe97bffffff	                           jmp 0x4000179	       223	state.c	FUNCTION_14	ELSE_1	IF_2
0x40001fe	            0x6690	                                     nop	       223	state.c	FUNCTION_14	ELSE_1	IF_2
0x4000200	         0xfb60424	                   movzx eax, byte [rsp]	       229	state.c	FUNCTION_14	ELSE_2	IF_4
0x4000204	          0x83e0f9	                     and eax, 0xfffffff9	       229	state.c	FUNCTION_14	ELSE_2	IF_4
0x4000207	          0x83c802	                               or eax, 2	       229	state.c	FUNCTION_14	ELSE_2	IF_4
0x400020a	          0x880424	                      mov byte [rsp], al	       229	state.c	FUNCTION_14	ELSE_2	IF_4
0x400020d	      0xe970ffffff	                           jmp 0x4000182	       229	state.c	FUNCTION_14	ELSE_2	IF_4
0x4000212	      0xe800000000	                          call 0x4000217	       238	state.c	FUNCTION_14
settermprop_string	DO,0:SWITCH,0:CALL,4:WHILE,0:ELSE,0:functions,0:IF,0:FOR,0	43
0x40015a0	            0x4156	                                push r14	       531	state.c	FUNCTION_19
0x40015a2	            0x4155	                                push r13	       531	state.c	FUNCTION_19
0x40015a4	          0x4189f5	                           mov r13d, esi	       531	state.c	FUNCTION_19
0x40015a7	            0x4154	                                push r12	       531	state.c	FUNCTION_19
0x40015a9	              0x55	                                push rbp	       531	state.c	FUNCTION_19
0x40015aa	          0x4889fd	                            mov rbp, rdi	       531	state.c	FUNCTION_19
0x40015ad	              0x53	                                push rbx	       531	state.c	FUNCTION_19
0x40015ae	        0x488d7101	                      lea rsi, [rcx + 1]	       535	state.c	FUNCTION_19	CALL_1
0x40015b2	          0x4989cc	                            mov r12, rcx	       531	state.c	FUNCTION_19
0x40015b5	          0x4989d6	                            mov r14, rdx	       531	state.c	FUNCTION_19
0x40015b8	        0x4883ec10	                           sub rsp, 0x10	       531	state.c	FUNCTION_19
0x40015bc	          0x488b3f	                    mov rdi, qword [rdi]	       535	state.c	FUNCTION_19	CALL_1
0x40015bf	    0x64488b042528	                mov rax, qword fs:[0x28]	       531	state.c	FUNCTION_19
0x40015c8	      0x4889442408	                mov qword [rsp + 8], rax	       531	state.c	FUNCTION_19
0x40015cd	            0x31c0	                            xor eax, eax	       531	state.c	FUNCTION_19
0x40015cf	      0xe800000000	                          call 0x40015d4	       535	state.c	FUNCTION_19	CALL_1
0x40015d4	          0x4c89e2	                            mov rdx, r12	       126	string3.h	FUNCTION_50	CALL_3
0x40015d7	          0x4889c3	                            mov rbx, rax	       535	state.c	FUNCTION_19	CALL_1
0x40015da	          0x4c89f6	                            mov rsi, r14	       126	string3.h	FUNCTION_50	CALL_3
0x40015dd	          0x4889c7	                            mov rdi, rax	       126	string3.h	FUNCTION_50	CALL_3
0x40015e0	      0xe800000000	                          call 0x40015e5	       126	string3.h	FUNCTION_50	CALL_3
0x40015e5	      0x42c6042300	                 mov byte [rbx + r12], 0	       537	state.c	FUNCTION_19
0x40015ea	          0x4889e2	                            mov rdx, rsp	       540	state.c	FUNCTION_19	CALL_3
0x40015ed	          0x4489ee	                           mov esi, r13d	       540	state.c	FUNCTION_19	CALL_3
0x40015f0	          0x4889ef	                            mov rdi, rbp	       540	state.c	FUNCTION_19	CALL_3
0x40015f3	        0x48891c24	                    mov qword [rsp], rbx	       539	state.c	FUNCTION_19
0x40015f7	      0xe800000000	                          call 0x40015fc	       540	state.c	FUNCTION_19	CALL_3
0x40015fc	        0x488b7d00	                    mov rdi, qword [rbp]	       541	state.c	FUNCTION_19	CALL_4
0x4001600	          0x4889de	                            mov rsi, rbx	       541	state.c	FUNCTION_19	CALL_4
0x4001603	          0x4189c4	                           mov r12d, eax	       540	state.c	FUNCTION_19	CALL_3
0x4001606	      0xe800000000	                          call 0x400160b	       541	state.c	FUNCTION_19	CALL_4
0x400160b	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       543	state.c	FUNCTION_19
0x4001610	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       543	state.c	FUNCTION_19
0x4001619	            0x7510	                           jne 0x400162b	       543	state.c	FUNCTION_19
0x400161b	        0x4883c410	                           add rsp, 0x10	       543	state.c	FUNCTION_19
0x400161f	          0x4489e0	                           mov eax, r12d	       543	state.c	FUNCTION_19
0x4001622	              0x5b	                                 pop rbx	       543	state.c	FUNCTION_19
0x4001623	              0x5d	                                 pop rbp	       543	state.c	FUNCTION_19
0x4001624	            0x415c	                                 pop r12	       543	state.c	FUNCTION_19
0x4001626	            0x415d	                                 pop r13	       543	state.c	FUNCTION_19
0x4001628	            0x415e	                                 pop r14	       543	state.c	FUNCTION_19
0x400162a	              0xc3	                                     ret	       543	state.c	FUNCTION_19
0x400162b	      0xe800000000	                         call sym.on_osc	       543	state.c	FUNCTION_19
vterm_state_get_unrecognised_fbdata	DO,0:SWITCH,0:CALL,0:WHILE,0:ELSE,0:functions,0:IF,0:FOR,0	2
0x4001400	        0x488b4720	            mov rax, qword [rdi + 0x20] 	      1847	state.c	FUNCTION_37
0x4001404	              0xc3	                                     ret	      1848	state.c	FUNCTION_37
grow_combine_buffer	DO,0:SWITCH,0:CALL,3:WHILE,0:ELSE,0:functions,0:IF,0:FOR,0	24
0x4000670	            0x4154	                                push r12	       143	state.c	FUNCTION_8
0x4000672	              0x55	                                push rbp	       143	state.c	FUNCTION_8
0x4000673	              0x53	                                push rbx	       143	state.c	FUNCTION_8
0x4000674	    0x488bb7800000	            mov rsi, qword [rdi + 0x80] 	       144	state.c	FUNCTION_8
0x400067b	          0x4889fb	                            mov rbx, rdi	       143	state.c	FUNCTION_8
0x400067e	          0x488b3f	                    mov rdi, qword [rdi]	       145	state.c	FUNCTION_8	CALL_1
0x4000681	        0x4c8d2436	                    lea r12, [rsi + rsi]	       144	state.c	FUNCTION_8
0x4000685	        0x48c1e603	                              shl rsi, 3	       145	state.c	FUNCTION_8	CALL_1
0x4000689	      0xe800000000	                          call 0x400068e	       145	state.c	FUNCTION_8	CALL_1
0x400068e	          0x4889c5	                            mov rbp, rax	       145	state.c	FUNCTION_8	CALL_1
0x4000691	    0x488b83800000	            mov rax, qword [rbx + 0x80] 	        53	string3.h	FUNCTION_42	CALL_3
0x4000698	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	        53	string3.h	FUNCTION_42	CALL_3
0x400069c	          0x4889ef	                            mov rdi, rbp	        53	string3.h	FUNCTION_42	CALL_3
0x400069f	    0x488d14850000	                        lea rdx, [rax*4]	        53	string3.h	FUNCTION_42	CALL_3
0x40006a7	      0xe800000000	                          call 0x40006ac	        53	string3.h	FUNCTION_42	CALL_3
0x40006ac	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	       149	state.c	FUNCTION_8	CALL_3
0x40006b0	          0x488b3b	                    mov rdi, qword [rbx]	       149	state.c	FUNCTION_8	CALL_3
0x40006b3	      0xe800000000	                          call 0x40006b8	       149	state.c	FUNCTION_8	CALL_3
0x40006b8	        0x48896b78	             mov qword [rbx + 0x78], rbp	       151	state.c	FUNCTION_8
0x40006bc	    0x4c89a3800000	             mov qword [rbx + 0x80], r12	       152	state.c	FUNCTION_8
0x40006c3	              0x5b	                                 pop rbx	       153	state.c	FUNCTION_8
0x40006c4	              0x5d	                                 pop rbp	       153	state.c	FUNCTION_8
0x40006c5	            0x415c	                                 pop r12	       153	state.c	FUNCTION_8
0x40006c7	              0xc3	                                     ret	       153	state.c	FUNCTION_8
vterm_state_get_lineinfo	DO,0:SWITCH,0:CALL,0:WHILE,0:ELSE,0:functions,0:IF,0:FOR,0	4
0x4003be0	        0x488b4758	            mov rax, qword [rdi + 0x58] 	      1916	state.c	FUNCTION_41
0x4003be4	          0x4863f6	                         movsxd rsi, esi	      1916	state.c	FUNCTION_41
0x4003be7	        0x488d04b0	                  lea rax, [rax + rsi*4]	      1916	state.c	FUNCTION_41
0x4003beb	              0xc3	                                     ret	      1917	state.c	FUNCTION_41
vterm_state_set_callbacks	DO,0:SWITCH,0:CALL,0:WHILE,0:ELSE,1:functions,0:IF,2:FOR,0	13
0x4001380	          0x4885f6	                           test rsi, rsi	      1815	state.c	FUNCTION_34	IF_1
0x4001383	            0x741b	                            je 0x40013a0	      1815	state.c	FUNCTION_34	IF_1
0x4001385	        0x488b4628	            mov rax, qword [rsi + 0x28] 	      1819	state.c	FUNCTION_34	IF_1	IF_2
0x4001389	        0x48897708	                mov qword [rdi + 8], rsi	      1816	state.c	FUNCTION_34	IF_1
0x400138d	        0x48895710	             mov qword [rdi + 0x10], rdx	      1817	state.c	FUNCTION_34	IF_1
0x4001391	          0x4885c0	                           test rax, rax	      1819	state.c	FUNCTION_34	IF_1	IF_2
0x4001394	            0x741a	                            je 0x40013b0	      1819	state.c	FUNCTION_34	IF_1	IF_2
0x4001396	          0x4889d7	                            mov rdi, rdx	      1820	state.c	FUNCTION_34	IF_1	IF_2
0x4001399	            0xffe0	                                 jmp rax	      1820	state.c	FUNCTION_34	IF_1	IF_2
0x400139b	       0xf1f440000	                   nop dword [rax + rax]	      1820	state.c	FUNCTION_34	IF_1	IF_2
0x40013a0	    0x48c747080000	                  mov qword [rdi + 8], 0	      1823	state.c	FUNCTION_34	ELSE_1
0x40013a8	    0x48c747100000	               mov qword [rdi + 0x10], 0	      1824	state.c	FUNCTION_34	ELSE_1
0x40013b0	            0xf3c3	                                     ret	      1824	state.c	FUNCTION_34	ELSE_1
vterm_state_set_unrecognised_fallbacks	DO,0:SWITCH,0:CALL,0:WHILE,0:ELSE,1:functions,0:IF,1:FOR,0	9
0x40013d0	          0x4885f6	                           test rsi, rsi	      1835	state.c	FUNCTION_36	IF_1
0x40013d3	            0x740b	                            je 0x40013e0	      1835	state.c	FUNCTION_36	IF_1
0x40013d5	        0x48897718	             mov qword [rdi + 0x18], rsi	      1836	state.c	FUNCTION_36	IF_1
0x40013d9	        0x48895720	             mov qword [rdi + 0x20], rdx	      1837	state.c	FUNCTION_36	IF_1
0x40013dd	              0xc3	                                     ret	      1837	state.c	FUNCTION_36	IF_1
0x40013de	            0x6690	                                     nop	      1837	state.c	FUNCTION_36	IF_1
0x40013e0	    0x48c747180000	               mov qword [rdi + 0x18], 0	      1840	state.c	FUNCTION_36	ELSE_1
0x40013e8	    0x48c747200000	               mov qword [rdi + 0x20], 0	      1841	state.c	FUNCTION_36	ELSE_1
0x40013f0	              0xc3	                                     ret	      1841	state.c	FUNCTION_36	ELSE_1
set_dec_mode	DO,0:SWITCH,1:CALL,12:WHILE,0:ELSE,0:functions,0:IF,1:FOR,1	207
0x4001950	              0x55	                                push rbp	       729	state.c	FUNCTION_23
0x4001951	              0x53	                                push rbx	       729	state.c	FUNCTION_23
0x4001952	          0x4889fd	                            mov rbp, rdi	       729	state.c	FUNCTION_23
0x4001955	            0x89d3	                            mov ebx, edx	       729	state.c	FUNCTION_23
0x4001957	        0x4883ec18	                           sub rsp, 0x18	       729	state.c	FUNCTION_23
0x400195b	    0x64488b042528	                mov rax, qword fs:[0x28]	       729	state.c	FUNCTION_23
0x4001964	      0x4889442408	                mov qword [rsp + 8], rax	       729	state.c	FUNCTION_23
0x4001969	            0x31c0	                            xor eax, eax	       729	state.c	FUNCTION_23
0x400196b	    0x81feeb030000	                          cmp esi, 0x3eb	       730	state.c	FUNCTION_23	SWITCH_1
0x4001971	            0x7f7d	                            jg 0x40019f0	       730	state.c	FUNCTION_23	SWITCH_1
0x4001973	    0x81feea030000	                          cmp esi, 0x3ea	       730	state.c	FUNCTION_23	SWITCH_1
0x4001979	     0xf8d39010000	                           jge 0x4001ab8	       730	state.c	FUNCTION_23	SWITCH_1
0x400197f	          0x83fe07	                              cmp esi, 7	       730	state.c	FUNCTION_23	SWITCH_1
0x4001982	     0xf8458020000	                            je 0x4001be0	       730	state.c	FUNCTION_23	SWITCH_1
0x4001988	     0xf8e62010000	                           jle 0x4001af0	       730	state.c	FUNCTION_23	SWITCH_1
0x400198e	          0x83fe19	                           cmp esi, 0x19	       730	state.c	FUNCTION_23	SWITCH_1
0x4001991	     0xf84c9000000	                            je 0x4001a60	       730	state.c	FUNCTION_23	SWITCH_1
0x4001997	     0xf8ebb010000	                           jle 0x4001b58	       730	state.c	FUNCTION_23	SWITCH_1
0x400199d	          0x83fe45	                           cmp esi, 0x45	       730	state.c	FUNCTION_23	SWITCH_1
0x40019a0	     0xf850a010000	                           jne 0x4001ab0	       730	state.c	FUNCTION_23	SWITCH_1
0x40019a6	            0x89d0	                            mov eax, edx	       763	state.c	FUNCTION_23	SWITCH_1
0x40019a8	     0xfb697950000	           movzx edx, byte [rdi + 0x95] 	       763	state.c	FUNCTION_23	SWITCH_1
0x40019af	          0x83e001	                              and eax, 1	       763	state.c	FUNCTION_23	SWITCH_1
0x40019b2	          0xc1e004	                              shl eax, 4	       763	state.c	FUNCTION_23	SWITCH_1
0x40019b5	          0x83e2ef	                     and edx, 0xffffffef	       763	state.c	FUNCTION_23	SWITCH_1
0x40019b8	             0x9d0	                             or eax, edx	       763	state.c	FUNCTION_23	SWITCH_1
0x40019ba	            0x85db	                           test ebx, ebx	       764	state.c	FUNCTION_23	SWITCH_1	IF_1
0x40019bc	    0x888795000000	               mov byte [rdi + 0x95], al	       763	state.c	FUNCTION_23	SWITCH_1
0x40019c2	            0x747c	                            je 0x4001a40	       764	state.c	FUNCTION_23	SWITCH_1	IF_1
0x40019c4	          0x8b4728	            mov eax, dword [rdi + 0x28] 	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x40019c7	            0x85c0	                           test eax, eax	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x40019c9	            0x7e75	                           jle 0x4001a40	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x40019cb	            0x31db	                            xor ebx, ebx	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x40019cd	           0xf1f00	                         nop dword [rax]	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x40019d0	          0x4531c0	                            xor r8d, r8d	       769	state.c	FUNCTION_23	SWITCH_1	IF_1	CALL_6
0x40019d3	            0x31c9	                            xor ecx, ecx	       769	state.c	FUNCTION_23	SWITCH_1	IF_1	CALL_6
0x40019d5	            0x89de	                            mov esi, ebx	       769	state.c	FUNCTION_23	SWITCH_1	IF_1	CALL_6
0x40019d7	      0xba01000000	                              mov edx, 1	       769	state.c	FUNCTION_23	SWITCH_1	IF_1	CALL_6
0x40019dc	          0x4889ef	                            mov rdi, rbp	       769	state.c	FUNCTION_23	SWITCH_1	IF_1	CALL_6
0x40019df	          0x83c301	                              add ebx, 1	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x40019e2	      0xe859e7ffff	                   call sym.set_lineinfo	       769	state.c	FUNCTION_23	SWITCH_1	IF_1	CALL_6
0x40019e7	          0x395d28	            cmp dword [rbp + 0x28], ebx 	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x40019ea	            0x7fe4	                            jg 0x40019d0	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x40019ec	            0xeb52	                           jmp 0x4001a40	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x40019ee	            0x6690	                                     nop	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x40019f0	    0x81fef7030000	                          cmp esi, 0x3f7	       730	state.c	FUNCTION_23	SWITCH_1
0x40019f6	     0xf849c000000	                            je 0x4001a98	       730	state.c	FUNCTION_23	SWITCH_1
0x40019fc	     0xf8e26010000	                           jle 0x4001b28	       730	state.c	FUNCTION_23	SWITCH_1
0x4001a02	    0x81fe18040000	                          cmp esi, 0x418	       730	state.c	FUNCTION_23	SWITCH_1
0x4001a08	            0x747e	                            je 0x4001a88	       730	state.c	FUNCTION_23	SWITCH_1
0x4001a0a	     0xf8e70010000	                           jle 0x4001b80	       730	state.c	FUNCTION_23	SWITCH_1
0x4001a10	    0x81fe19040000	                          cmp esi, 0x419	       730	state.c	FUNCTION_23	SWITCH_1
0x4001a16	            0x7460	                            je 0x4001a78	       730	state.c	FUNCTION_23	SWITCH_1
0x4001a18	    0x81fed4070000	                          cmp esi, 0x7d4	       730	state.c	FUNCTION_23	SWITCH_1
0x4001a1e	            0x7520	                           jne 0x4001a40	       730	state.c	FUNCTION_23	SWITCH_1
0x4001a20	     0xfb687950000	           movzx eax, byte [rdi + 0x95] 	       814	state.c	FUNCTION_23	SWITCH_1
0x4001a27	          0x83e301	                              and ebx, 1	       814	state.c	FUNCTION_23	SWITCH_1
0x4001a2a	          0xc1e305	                              shl ebx, 5	       814	state.c	FUNCTION_23	SWITCH_1
0x4001a2d	          0x83e0df	                     and eax, 0xffffffdf	       814	state.c	FUNCTION_23	SWITCH_1
0x4001a30	             0x9c3	                             or ebx, eax	       814	state.c	FUNCTION_23	SWITCH_1
0x4001a32	    0x889f95000000	               mov byte [rdi + 0x95], bl	       814	state.c	FUNCTION_23	SWITCH_1
0x4001a38	     0xf1f84000000	                   nop dword [rax + rax]	       814	state.c	FUNCTION_23	SWITCH_1
0x4001a40	      0x488b442408	                mov rax, qword [rsp + 8]	       821	state.c	FUNCTION_23
0x4001a45	    0x644833042528	                xor rax, qword fs:[0x28]	       821	state.c	FUNCTION_23
0x4001a4e	     0xf8529020000	                           jne 0x4001c7d	       821	state.c	FUNCTION_23
0x4001a54	        0x4883c418	                           add rsp, 0x18	       821	state.c	FUNCTION_23
0x4001a58	              0x5b	                                 pop rbx	       821	state.c	FUNCTION_23
0x4001a59	              0x5d	                                 pop rbp	       821	state.c	FUNCTION_23
0x4001a5a	              0xc3	                                     ret	       821	state.c	FUNCTION_23
0x4001a5b	       0xf1f440000	                   nop dword [rax + rax]	       821	state.c	FUNCTION_23
0x4001a60	          0x891424	                    mov dword [rsp], edx	       519	state.c	FUNCTION_17
0x4001a63	      0xbe01000000	                              mov esi, 1	       520	state.c	FUNCTION_17	CALL_1
0x4001a68	          0x4889e2	                            mov rdx, rsp	       520	state.c	FUNCTION_17	CALL_1
0x4001a6b	      0xe800000000	                          call 0x4001a70	       520	state.c	FUNCTION_17	CALL_1
0x4001a70	            0xebce	                           jmp 0x4001a40	       520	state.c	FUNCTION_17	CALL_1
0x4001a72	    0x660f1f440000	                    nop word [rax + rax]	       520	state.c	FUNCTION_17	CALL_1
0x4001a78	          0x891424	                    mov dword [rsp], edx	       519	state.c	FUNCTION_17
0x4001a7b	      0xbe03000000	                              mov esi, 3	       520	state.c	FUNCTION_17	CALL_1
0x4001a80	          0x4889e2	                            mov rdx, rsp	       520	state.c	FUNCTION_17	CALL_1
0x4001a83	      0xe800000000	                          call 0x4001a88	       520	state.c	FUNCTION_17	CALL_1
0x4001a88	            0x89de	                            mov esi, ebx	       810	state.c	FUNCTION_23	SWITCH_1	CALL_11
0x4001a8a	          0x4889ef	                            mov rdi, rbp	       810	state.c	FUNCTION_23	SWITCH_1	CALL_11
0x4001a8d	      0xe88efdffff	                     call sym.savecursor	       810	state.c	FUNCTION_23	SWITCH_1	CALL_11
0x4001a92	            0xebac	                           jmp 0x4001a40	       811	state.c	FUNCTION_23	SWITCH_1
0x4001a94	         0xf1f4000	                         nop dword [rax]	       811	state.c	FUNCTION_23	SWITCH_1
0x4001a98	          0x83fa01	                              cmp edx, 1	       797	state.c	FUNCTION_23	SWITCH_1
0x4001a9b	            0x19c0	                            sbb eax, eax	       797	state.c	FUNCTION_23	SWITCH_1
0x4001a9d	            0xf7d0	                                 not eax	       797	state.c	FUNCTION_23	SWITCH_1
0x4001a9f	          0x83e003	                              and eax, 3	       797	state.c	FUNCTION_23	SWITCH_1
0x4001aa2	          0x894770	             mov dword [rdi + 0x70], eax	       797	state.c	FUNCTION_23	SWITCH_1
0x4001aa5	            0xeb99	                           jmp 0x4001a40	       798	state.c	FUNCTION_23	SWITCH_1
0x4001aa7	    0x660f1f840000	                    nop word [rax + rax]	       798	state.c	FUNCTION_23	SWITCH_1
0x4001ab0	    0x81fee8030000	                          cmp esi, 0x3e8	       730	state.c	FUNCTION_23	SWITCH_1
0x4001ab6	            0x7588	                           jne 0x4001a40	       730	state.c	FUNCTION_23	SWITCH_1
0x4001ab8	            0x31c0	                            xor eax, eax	       777	state.c	FUNCTION_23	SWITCH_1	CALL_7
0x4001aba	            0x85db	                           test ebx, ebx	       777	state.c	FUNCTION_23	SWITCH_1	CALL_7
0x4001abc	            0x741a	                            je 0x4001ad8	       777	state.c	FUNCTION_23	SWITCH_1	CALL_7
0x4001abe	    0x81fee8030000	                          cmp esi, 0x3e8	       779	state.c	FUNCTION_23	SWITCH_1
0x4001ac4	     0xf84a9010000	                            je 0x4001c73	       779	state.c	FUNCTION_23	SWITCH_1
0x4001aca	            0x31c0	                            xor eax, eax	       780	state.c	FUNCTION_23	SWITCH_1
0x4001acc	    0x81feea030000	                          cmp esi, 0x3ea	       780	state.c	FUNCTION_23	SWITCH_1
0x4001ad2	           0xf95c0	                                setne al	       780	state.c	FUNCTION_23	SWITCH_1
0x4001ad5	          0x83c002	                              add eax, 2	       780	state.c	FUNCTION_23	SWITCH_1
0x4001ad8	          0x4889e2	                            mov rdx, rsp	       527	state.c	FUNCTION_18	CALL_1
0x4001adb	      0xbe08000000	                              mov esi, 8	       527	state.c	FUNCTION_18	CALL_1
0x4001ae0	          0x4889ef	                            mov rdi, rbp	       527	state.c	FUNCTION_18	CALL_1
0x4001ae3	          0x890424	                    mov dword [rsp], eax	       526	state.c	FUNCTION_18
0x4001ae6	      0xe800000000	                          call 0x4001aeb	       527	state.c	FUNCTION_18	CALL_1
0x4001aeb	      0xe950ffffff	                           jmp 0x4001a40	       527	state.c	FUNCTION_18	CALL_1
0x4001af0	          0x83fe05	                              cmp esi, 5	       730	state.c	FUNCTION_23	SWITCH_1
0x4001af3	     0xf8457010000	                            je 0x4001c50	       730	state.c	FUNCTION_23	SWITCH_1
0x4001af9	     0xf8f01010000	                            jg 0x4001c00	       730	state.c	FUNCTION_23	SWITCH_1
0x4001aff	          0x83fe01	                              cmp esi, 1	       730	state.c	FUNCTION_23	SWITCH_1
0x4001b02	     0xf8538ffffff	                           jne 0x4001a40	       730	state.c	FUNCTION_23	SWITCH_1
0x4001b08	     0xfb687940000	           movzx eax, byte [rdi + 0x94] 	       732	state.c	FUNCTION_23	SWITCH_1
0x4001b0f	          0x83e301	                              and ebx, 1	       732	state.c	FUNCTION_23	SWITCH_1
0x4001b12	             0x1db	                            add ebx, ebx	       732	state.c	FUNCTION_23	SWITCH_1
0x4001b14	          0x83e0fd	                     and eax, 0xfffffffd	       732	state.c	FUNCTION_23	SWITCH_1
0x4001b17	             0x9c3	                             or ebx, eax	       732	state.c	FUNCTION_23	SWITCH_1
0x4001b19	    0x889f94000000	               mov byte [rdi + 0x94], bl	       732	state.c	FUNCTION_23	SWITCH_1
0x4001b1f	      0xe91cffffff	                           jmp 0x4001a40	       733	state.c	FUNCTION_23	SWITCH_1
0x4001b24	         0xf1f4000	                         nop dword [rax]	       733	state.c	FUNCTION_23	SWITCH_1
0x4001b28	    0x81feed030000	                          cmp esi, 0x3ed	       730	state.c	FUNCTION_23	SWITCH_1
0x4001b2e	     0xf8494000000	                            je 0x4001bc8	       730	state.c	FUNCTION_23	SWITCH_1
0x4001b34	            0x7c72	                            jl 0x4001ba8	       730	state.c	FUNCTION_23	SWITCH_1
0x4001b36	    0x81feee030000	                          cmp esi, 0x3ee	       730	state.c	FUNCTION_23	SWITCH_1
0x4001b3c	     0xf85fefeffff	                           jne 0x4001a40	       730	state.c	FUNCTION_23	SWITCH_1
0x4001b42	          0x83fa01	                              cmp edx, 1	       793	state.c	FUNCTION_23	SWITCH_1
0x4001b45	            0x19c0	                            sbb eax, eax	       793	state.c	FUNCTION_23	SWITCH_1
0x4001b47	            0xf7d0	                                 not eax	       793	state.c	FUNCTION_23	SWITCH_1
0x4001b49	          0x83e002	                              and eax, 2	       793	state.c	FUNCTION_23	SWITCH_1
0x4001b4c	          0x894770	             mov dword [rdi + 0x70], eax	       793	state.c	FUNCTION_23	SWITCH_1
0x4001b4f	      0xe9ecfeffff	                           jmp 0x4001a40	       794	state.c	FUNCTION_23	SWITCH_1
0x4001b54	         0xf1f4000	                         nop dword [rax]	       794	state.c	FUNCTION_23	SWITCH_1
0x4001b58	          0x83fe0c	                            cmp esi, 0xc	       730	state.c	FUNCTION_23	SWITCH_1
0x4001b5b	     0xf85dffeffff	                           jne 0x4001a40	       730	state.c	FUNCTION_23	SWITCH_1
0x4001b61	          0x891424	                    mov dword [rsp], edx	       519	state.c	FUNCTION_17
0x4001b64	      0xbe02000000	                              mov esi, 2	       520	state.c	FUNCTION_17	CALL_1
0x4001b69	          0x4889e2	                            mov rdx, rsp	       520	state.c	FUNCTION_17	CALL_1
0x4001b6c	      0xe800000000	                          call 0x4001b71	       520	state.c	FUNCTION_17	CALL_1
0x4001b71	      0xe9cafeffff	                           jmp 0x4001a40	       520	state.c	FUNCTION_17	CALL_1
0x4001b76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       520	state.c	FUNCTION_17	CALL_1
0x4001b80	    0x81fe17040000	                          cmp esi, 0x417	       730	state.c	FUNCTION_23	SWITCH_1
0x4001b86	     0xf85b4feffff	                           jne 0x4001a40	       730	state.c	FUNCTION_23	SWITCH_1
0x4001b8c	          0x891424	                    mov dword [rsp], edx	       519	state.c	FUNCTION_17
0x4001b8f	      0xbe03000000	                              mov esi, 3	       520	state.c	FUNCTION_17	CALL_1
0x4001b94	          0x4889e2	                            mov rdx, rsp	       520	state.c	FUNCTION_17	CALL_1
0x4001b97	      0xe800000000	                          call 0x4001b9c	       520	state.c	FUNCTION_17	CALL_1
0x4001b9c	      0xe99ffeffff	                           jmp 0x4001a40	       520	state.c	FUNCTION_17	CALL_1
0x4001ba1	     0xf1f80000000	                         nop dword [rax]	       520	state.c	FUNCTION_17	CALL_1
0x4001ba8	     0xfb687950000	           movzx eax, byte [rdi + 0x95] 	       785	state.c	FUNCTION_23	SWITCH_1
0x4001baf	          0x83e301	                              and ebx, 1	       785	state.c	FUNCTION_23	SWITCH_1
0x4001bb2	          0xc1e306	                              shl ebx, 6	       785	state.c	FUNCTION_23	SWITCH_1
0x4001bb5	          0x83e0bf	                     and eax, 0xffffffbf	       785	state.c	FUNCTION_23	SWITCH_1
0x4001bb8	             0x9c3	                             or ebx, eax	       785	state.c	FUNCTION_23	SWITCH_1
0x4001bba	    0x889f95000000	               mov byte [rdi + 0x95], bl	       785	state.c	FUNCTION_23	SWITCH_1
0x4001bc0	      0xe97bfeffff	                           jmp 0x4001a40	       786	state.c	FUNCTION_23	SWITCH_1
0x4001bc5	           0xf1f00	                         nop dword [rax]	       786	state.c	FUNCTION_23	SWITCH_1
0x4001bc8	            0x31c0	                            xor eax, eax	       789	state.c	FUNCTION_23	SWITCH_1
0x4001bca	            0x85d2	                           test edx, edx	       789	state.c	FUNCTION_23	SWITCH_1
0x4001bcc	           0xf95c0	                                setne al	       789	state.c	FUNCTION_23	SWITCH_1
0x4001bcf	          0x894770	             mov dword [rdi + 0x70], eax	       789	state.c	FUNCTION_23	SWITCH_1
0x4001bd2	      0xe969feffff	                           jmp 0x4001a40	       790	state.c	FUNCTION_23	SWITCH_1
0x4001bd7	    0x660f1f840000	                    nop word [rax + rax]	       790	state.c	FUNCTION_23	SWITCH_1
0x4001be0	     0xfb687940000	           movzx eax, byte [rdi + 0x94] 	       750	state.c	FUNCTION_23	SWITCH_1
0x4001be7	          0x83e301	                              and ebx, 1	       750	state.c	FUNCTION_23	SWITCH_1
0x4001bea	          0xc1e302	                              shl ebx, 2	       750	state.c	FUNCTION_23	SWITCH_1
0x4001bed	          0x83e0fb	                     and eax, 0xfffffffb	       750	state.c	FUNCTION_23	SWITCH_1
0x4001bf0	             0x9c3	                             or ebx, eax	       750	state.c	FUNCTION_23	SWITCH_1
0x4001bf2	    0x889f94000000	               mov byte [rdi + 0x94], bl	       750	state.c	FUNCTION_23	SWITCH_1
0x4001bf8	      0xe943feffff	                           jmp 0x4001a40	       751	state.c	FUNCTION_23	SWITCH_1
0x4001bfd	           0xf1f00	                         nop dword [rax]	       751	state.c	FUNCTION_23	SWITCH_1
0x4001c00	        0x488b4730	            mov rax, qword [rdi + 0x30] 	       741	state.c	FUNCTION_23	SWITCH_1
0x4001c04	          0x83e301	                              and ebx, 1	       742	state.c	FUNCTION_23	SWITCH_1
0x4001c07	          0xc1e302	                              shl ebx, 2	       742	state.c	FUNCTION_23	SWITCH_1
0x4001c0a	        0x48890424	                    mov qword [rsp], rax	       741	state.c	FUNCTION_23	SWITCH_1
0x4001c0e	     0xfb687950000	           movzx eax, byte [rdi + 0x95] 	       742	state.c	FUNCTION_23	SWITCH_1
0x4001c15	          0x83e0fb	                     and eax, 0xfffffffb	       742	state.c	FUNCTION_23	SWITCH_1
0x4001c18	             0x9c3	                             or ebx, eax	       742	state.c	FUNCTION_23	SWITCH_1
0x4001c1a	          0xf6c304	                              test bl, 4	       743	state.c	FUNCTION_23	SWITCH_1
0x4001c1d	    0x889f95000000	               mov byte [rdi + 0x95], bl	       742	state.c	FUNCTION_23	SWITCH_1
0x4001c23	            0x7443	                            je 0x4001c68	       743	state.c	FUNCTION_23	SWITCH_1
0x4001c25	          0x8b473c	            mov eax, dword [rdi + 0x3c] 	       743	state.c	FUNCTION_23	SWITCH_1
0x4001c28	          0x894730	             mov dword [rdi + 0x30], eax	       743	state.c	FUNCTION_23	SWITCH_1
0x4001c2b	            0x31c0	                            xor eax, eax	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x4001c2d	          0x83e310	                           and ebx, 0x10	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x4001c30	            0x7403	                            je 0x4001c35	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x4001c32	          0x8b4744	            mov eax, dword [rdi + 0x44] 	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x4001c35	          0x894534	            mov dword [rbp + 0x34], eax 	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x4001c38	      0xba01000000	                              mov edx, 1	       745	state.c	FUNCTION_23	SWITCH_1	CALL_3
0x4001c3d	          0x4889e6	                            mov rsi, rsp	       745	state.c	FUNCTION_23	SWITCH_1	CALL_3
0x4001c40	          0x4889ef	                            mov rdi, rbp	       745	state.c	FUNCTION_23	SWITCH_1	CALL_3
0x4001c43	      0xe898e4ffff	                   call sym.updatecursor	       745	state.c	FUNCTION_23	SWITCH_1	CALL_3
0x4001c48	      0xe9f3fdffff	                           jmp 0x4001a40	       747	state.c	FUNCTION_23	SWITCH_1
0x4001c4d	           0xf1f00	                         nop dword [rax]	       747	state.c	FUNCTION_23	SWITCH_1
0x4001c50	          0x891424	                    mov dword [rsp], edx	       519	state.c	FUNCTION_17
0x4001c53	      0xbe06000000	                              mov esi, 6	       520	state.c	FUNCTION_17	CALL_1
0x4001c58	          0x4889e2	                            mov rdx, rsp	       520	state.c	FUNCTION_17	CALL_1
0x4001c5b	      0xe800000000	                          call 0x4001c60	       520	state.c	FUNCTION_17	CALL_1
0x4001c60	      0xe9dbfdffff	                           jmp 0x4001a40	       520	state.c	FUNCTION_17	CALL_1
0x4001c65	           0xf1f00	                         nop dword [rax]	       520	state.c	FUNCTION_17	CALL_1
0x4001c68	    0xc74730000000	               mov dword [rdi + 0x30], 0	       743	state.c	FUNCTION_23	SWITCH_1
0x4001c6f	            0x31c0	                            xor eax, eax	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x4001c71	            0xebc2	                           jmp 0x4001c35	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x4001c73	      0xb801000000	                              mov eax, 1	       779	state.c	FUNCTION_23	SWITCH_1
0x4001c78	      0xe95bfeffff	                           jmp 0x4001ad8	       779	state.c	FUNCTION_23	SWITCH_1
0x4001c7d	      0xe800000000	                          call 0x4001c82	       821	state.c	FUNCTION_23
vterm_state_free	DO,0:SWITCH,0:CALL,4:WHILE,0:ELSE,0:functions,0:IF,0:FOR,0	15
0x4001200	              0x53	                                push rbx	        78	state.c	FUNCTION_5
0x4001201	          0x4889fb	                            mov rbx, rdi	        78	state.c	FUNCTION_5
0x4001204	        0x488b7750	            mov rsi, qword [rdi + 0x50] 	        79	state.c	FUNCTION_5	CALL_1
0x4001208	          0x488b3f	                    mov rdi, qword [rdi]	        79	state.c	FUNCTION_5	CALL_1
0x400120b	      0xe800000000	                          call 0x4001210	        79	state.c	FUNCTION_5	CALL_1
0x4001210	        0x488b7358	            mov rsi, qword [rbx + 0x58] 	        80	state.c	FUNCTION_5	CALL_2
0x4001214	          0x488b3b	                    mov rdi, qword [rbx]	        80	state.c	FUNCTION_5	CALL_2
0x4001217	      0xe800000000	                          call 0x400121c	        80	state.c	FUNCTION_5	CALL_2
0x400121c	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	        81	state.c	FUNCTION_5	CALL_3
0x4001220	          0x488b3b	                    mov rdi, qword [rbx]	        81	state.c	FUNCTION_5	CALL_3
0x4001223	      0xe800000000	                          call 0x4001228	        81	state.c	FUNCTION_5	CALL_3
0x4001228	          0x4889de	                            mov rsi, rbx	        82	state.c	FUNCTION_5	CALL_4
0x400122b	          0x488b3b	                    mov rdi, qword [rbx]	        82	state.c	FUNCTION_5	CALL_4
0x400122e	              0x5b	                                 pop rbx	        83	state.c	FUNCTION_5
0x400122f	      0xe900000000	                           jmp 0x4001234	        82	state.c	FUNCTION_5	CALL_4
vterm_state_get_cbdata	DO,0:SWITCH,0:CALL,0:WHILE,0:ELSE,0:functions,0:IF,0:FOR,0	2
0x40013c0	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      1830	state.c	FUNCTION_35
0x40013c4	              0xc3	                                     ret	      1831	state.c	FUNCTION_35
on_text	DO,0:SWITCH,0:CALL,34:WHILE,2:ELSE,2:functions,0:IF,16:FOR,7	339
0x40006d0	            0x4157	                                push r15	       241	state.c	FUNCTION_15
0x40006d2	            0x4156	                                push r14	       241	state.c	FUNCTION_15
0x40006d4	            0x4155	                                push r13	       241	state.c	FUNCTION_15
0x40006d6	            0x4154	                                push r12	       241	state.c	FUNCTION_15
0x40006d8	          0x4989d4	                            mov r12, rdx	       241	state.c	FUNCTION_15
0x40006db	              0x55	                                push rbp	       241	state.c	FUNCTION_15
0x40006dc	              0x53	                                push rbx	       241	state.c	FUNCTION_15
0x40006dd	          0x4889fd	                            mov rbp, rdi	       241	state.c	FUNCTION_15
0x40006e0	          0x4889f3	                            mov rbx, rsi	       241	state.c	FUNCTION_15
0x40006e3	    0x488d34b50400	                    lea rsi, [rsi*4 + 4]	       253	state.c	FUNCTION_15	CALL_1
0x40006eb	        0x4883ec58	                           sub rsp, 0x58	       241	state.c	FUNCTION_15
0x40006ef	          0x488b3a	                    mov rdi, qword [rdx]	       253	state.c	FUNCTION_15	CALL_1
0x40006f2	    0x64488b042528	                mov rax, qword fs:[0x28]	       241	state.c	FUNCTION_15
0x40006fb	      0x4889442448	             mov qword [rsp + 0x48], rax	       241	state.c	FUNCTION_15
0x4000700	            0x31c0	                            xor eax, eax	       241	state.c	FUNCTION_15
0x4000702	        0x488b4230	            mov rax, qword [rdx + 0x30] 	       249	state.c	FUNCTION_15
0x4000706	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	       244	state.c	FUNCTION_15
0x400070e	    0x48c744244000	               mov qword [rsp + 0x40], 0	       245	state.c	FUNCTION_15
0x4000717	      0x4889442430	             mov qword [rsp + 0x30], rax	       249	state.c	FUNCTION_15
0x400071c	      0xe800000000	                          call 0x4000721	       253	state.c	FUNCTION_15	CALL_1
0x4000721	      0x4889442408	                mov qword [rsp + 8], rax	       253	state.c	FUNCTION_15	CALL_1
0x4000726	    0x496384241801	        movsxd rax, dword [r12 + 0x118] 	       256	state.c	FUNCTION_15
0x400072e	            0x85c0	                           test eax, eax	       256	state.c	FUNCTION_15
0x4000730	     0xf8476030000	                            je 0x4000aac	       256	state.c	FUNCTION_15
0x4000736	        0x488d1440	                  lea rdx, [rax + rax*2]	       256	state.c	FUNCTION_15
0x400073a	    0x41b801000000	                              mov r8d, 1	       261	state.c	FUNCTION_15
0x4000740	        0x48c1e203	                              shl rdx, 3	       256	state.c	FUNCTION_15
0x4000744	    0x498bbc149800	      mov rdi, qword [r12 + rdx + 0x98] 	       261	state.c	FUNCTION_15
0x400074c	    0x498d84149800	            lea rax, [r12 + rdx + 0x98] 	       256	state.c	FUNCTION_15
0x4000754	        0x4c8b5708	                mov r10, qword [rdi + 8]	       261	state.c	FUNCTION_15
0x4000758	              0x53	                                push rbx	       261	state.c	FUNCTION_15
0x4000759	        0x488d7008	                      lea rsi, [rax + 8]	       261	state.c	FUNCTION_15
0x400075d	          0x4989e9	                             mov r9, rbp	       261	state.c	FUNCTION_15
0x4000760	      0x488d442448	                   lea rax, [rsp + 0x48]	       261	state.c	FUNCTION_15
0x4000765	              0x50	                                push rax	       261	state.c	FUNCTION_15
0x4000766	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       261	state.c	FUNCTION_15
0x400076b	      0x488d4c243c	                   lea rcx, [rsp + 0x3c]	       261	state.c	FUNCTION_15
0x4000770	          0x41ffd2	                                call r10	       261	state.c	FUNCTION_15
0x4000773	            0x415b	                                 pop r11	       268	state.c	FUNCTION_15	IF_1
0x4000775	              0x5b	                                 pop rbx	       268	state.c	FUNCTION_15	IF_1
0x4000776	        0x8b6c242c	            mov ebp, dword [rsp + 0x2c] 	       268	state.c	FUNCTION_15	IF_1
0x400077a	            0x85ed	                           test ebp, ebp	       268	state.c	FUNCTION_15	IF_1
0x400077c	     0xf843d020000	                            je 0x40009bf	       268	state.c	FUNCTION_15	IF_1
0x4000782	    0x458b94241801	          mov r10d, dword [r12 + 0x118] 	       274	state.c	FUNCTION_15	IF_2
0x400078a	          0x4585d2	                         test r10d, r10d	       274	state.c	FUNCTION_15	IF_2
0x400078d	            0x740c	                            je 0x400079b	       274	state.c	FUNCTION_15	IF_2
0x400078f	    0x41c784241801	              mov dword [r12 + 0x118], 0	       275	state.c	FUNCTION_15	IF_2
0x400079b	      0x488b442408	                mov rax, qword [rsp + 8]	       279	state.c	FUNCTION_15	IF_3	CALL_3
0x40007a0	          0x4531f6	                          xor r14d, r14d	       247	state.c	FUNCTION_15
0x40007a3	            0x8b38	                    mov edi, dword [rax]	       279	state.c	FUNCTION_15	IF_3	CALL_3
0x40007a5	      0xe800000000	                          call 0x40007aa	       279	state.c	FUNCTION_15	IF_3	CALL_3
0x40007aa	            0x85c0	                           test eax, eax	       279	state.c	FUNCTION_15	IF_3	CALL_3
0x40007ac	     0xf852d030000	                           jne 0x4000adf	       279	state.c	FUNCTION_15	IF_3	CALL_3
0x40007b2	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	       319	state.c	FUNCTION_15	FOR_3
0x40007b6	          0x4139c6	                           cmp r14d, eax	       319	state.c	FUNCTION_15	FOR_3
0x40007b9	     0xf8df1010000	                           jge 0x40009b0	       319	state.c	FUNCTION_15	FOR_3
0x40007bf	              0x90	                                     nop	       319	state.c	FUNCTION_15	FOR_3
0x40007c0	        0x418d5e01	                      lea ebx, [r14 + 1]	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x40007c4	            0x39c3	                            cmp ebx, eax	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x40007c6	            0x7d31	                           jge 0x40007f9	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x40007c8	      0x488b742408	                mov rsi, qword [rsp + 8]	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x40007cd	          0x4863c3	                         movsxd rax, ebx	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x40007d0	        0x488d2c86	                  lea rbp, [rsi + rax*4]	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x40007d4	            0xeb17	                           jmp 0x40007ed	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x40007d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x40007e0	          0x83c301	                              add ebx, 1	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x40007e3	        0x4883c504	                              add rbp, 4	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x40007e7	        0x395c242c	            cmp dword [rsp + 0x2c], ebx 	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x40007eb	            0x7e0c	                           jle 0x40007f9	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x40007ed	          0x8b7d00	                    mov edi, dword [rbp]	       327	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7	CALL_14
0x40007f0	      0xe800000000	                          call 0x40007f5	       327	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7	CALL_14
0x40007f5	            0x85c0	                           test eax, eax	       327	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7	CALL_14
0x40007f7	            0x75e7	                           jne 0x40007e0	       327	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7	CALL_14
0x40007f9	            0x89d8	                            mov eax, ebx	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x40007fb	        0x498b3c24	                    mov rdi, qword [r12]	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x40007ff	          0x4429f0	                           sub eax, r14d	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000802	          0x8d7001	                      lea esi, [rax + 1]	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000805	        0x89442414	             mov dword [rsp + 0x14], eax	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000809	          0x4863f6	                         movsxd rsi, esi	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x400080c	        0x48c1e602	                              shl rsi, 2	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000810	      0xe800000000	                          call 0x4000815	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000815	          0x4139de	                           cmp r14d, ebx	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000818	          0x4889c2	                            mov rdx, rax	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x400081b	        0x48890424	                    mov qword [rsp], rax	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x400081f	     0xf8d76020000	                           jge 0x4000a9b	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000825	      0x488b742408	                mov rsi, qword [rsp + 8]	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x400082a	          0x4963c6	                        movsxd rax, r14d	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x400082d	          0x41f7d6	                                not r14d	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000830	          0x4989d7	                            mov r15, rdx	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000833	            0x31ed	                            xor ebp, ebp	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000835	        0x4c8d2c86	                  lea r13, [rsi + rax*4]	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000839	        0x418d041e	                    lea eax, [r14 + rbx]	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x400083d	      0x4c8d748204	              lea r14, [rdx + rax*4 + 4]	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000842	    0x660f1f440000	                    nop word [rax + rax]	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000848	        0x418b4500	                    mov eax, dword [r13]	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0x400084c	        0x4983c704	                              add r15, 4	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000850	        0x4983c504	                              add r13, 4	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000854	        0x418947fc	                mov dword [r15 - 4], eax	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000858	        0x418b7dfc	                mov edi, dword [r13 - 4]	       335	state.c	FUNCTION_15	FOR_3	FOR_5	CALL_16
0x400085c	      0xe800000000	                          call 0x4000861	       335	state.c	FUNCTION_15	FOR_3	FOR_5	CALL_16
0x4000861	             0x1c5	                            add ebp, eax	       342	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000863	          0x4d39f7	                            cmp r15, r14	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000866	            0x75e0	                           jne 0x4000848	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000868	          0x4189de	                           mov r14d, ebx	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x400086b	      0x4c637c2414	         movsxd r15, dword [rsp + 0x14] 	       345	state.c	FUNCTION_15	FOR_3
0x4000870	        0x488b0424	                    mov rax, qword [rsp]	       345	state.c	FUNCTION_15	FOR_3
0x4000874	        0x418d5eff	                      lea ebx, [r14 - 1]	       346	state.c	FUNCTION_15	FOR_3
0x4000878	    0x42c704b80000	              mov dword [rax + r15*4], 0	       345	state.c	FUNCTION_15	FOR_3
0x4000880	      0x418b742438	            mov esi, dword [r12 + 0x38] 	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000885	            0x85f6	                           test esi, esi	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000887	            0x7529	                           jne 0x40008b2	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000889	      0x49634c2430	         movsxd rcx, dword [r12 + 0x30] 	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x400088e	      0x498b442458	            mov rax, qword [r12 + 0x58] 	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000893	      0x418b542434	            mov edx, dword [r12 + 0x34] 	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000898	             0x1ea	                            add edx, ebp	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x400089a	        0xf6048801	              test byte [rax + rcx*4], 1	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x400089e	      0x418b44242c	            mov eax, dword [r12 + 0x2c] 	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x40008a3	            0x7409	                            je 0x40008ae	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x40008a5	            0x89c1	                            mov ecx, eax	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x40008a7	          0xc1e91f	                           shr ecx, 0x1f	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x40008aa	             0x1c8	                            add eax, ecx	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x40008ac	            0xd1f8	                              sar eax, 1	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x40008ae	            0x39d0	                            cmp eax, edx	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x40008b0	            0x7d1a	                           jge 0x40008cc	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x40008b2	          0x4c89e7	                            mov rdi, r12	       357	state.c	FUNCTION_15	FOR_3	IF_9	CALL_23
0x40008b5	      0xe836fdffff	                       call sym.linefeed	       357	state.c	FUNCTION_15	FOR_3	IF_9	CALL_23
0x40008ba	    0x41c744243400	               mov dword [r12 + 0x34], 0	       358	state.c	FUNCTION_15	FOR_3	IF_9
0x40008c3	    0x41c744243800	               mov dword [r12 + 0x38], 0	       359	state.c	FUNCTION_15	FOR_3	IF_9
0x40008cc	    0x41f684249400	               test byte [r12 + 0x94], 8	       362	state.c	FUNCTION_15	FOR_3	IF_10
0x40008d5	            0x7462	                            je 0x4000939	       362	state.c	FUNCTION_15	FOR_3	IF_10
0x40008d7	      0x418b542430	            mov edx, dword [r12 + 0x30] 	       368	state.c	FUNCTION_15	FOR_3	IF_10
0x40008dc	    0x48b900000000	          movabs rcx, 0xffffffff00000000	       370	state.c	FUNCTION_15	FOR_3	IF_10
0x40008e6	      0x48234c2418	             and rcx, qword [rsp + 0x18]	       370	state.c	FUNCTION_15	FOR_3	IF_10
0x40008eb	          0x8d7201	                      lea esi, [rdx + 1]	       369	state.c	FUNCTION_15	FOR_3	IF_10
0x40008ee	          0x4889d0	                            mov rax, rdx	       368	state.c	FUNCTION_15	FOR_3	IF_10
0x40008f1	            0x4898	                                    cdqe	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x40008f3	        0x48c1e620	                           shl rsi, 0x20	       369	state.c	FUNCTION_15	FOR_3	IF_10
0x40008f7	          0x4809d6	                             or rsi, rdx	       369	state.c	FUNCTION_15	FOR_3	IF_10
0x40008fa	      0x418b542434	            mov edx, dword [r12 + 0x34] 	       370	state.c	FUNCTION_15	FOR_3	IF_10
0x40008ff	          0x4809ca	                             or rdx, rcx	       370	state.c	FUNCTION_15	FOR_3	IF_10
0x4000902	      0x498b4c2458	            mov rcx, qword [r12 + 0x58] 	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000907	        0xf6048101	              test byte [rcx + rax*4], 1	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x400090b	      0x418b44242c	            mov eax, dword [r12 + 0x2c] 	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000910	            0x7409	                            je 0x400091b	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000912	            0x89c1	                            mov ecx, eax	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000914	          0xc1e91f	                           shr ecx, 0x1f	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000917	             0x1c8	                            add eax, ecx	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000919	            0xd1f8	                              sar eax, 1	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x400091b	        0x48c1e020	                           shl rax, 0x20	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x400091f	            0x89d2	                            mov edx, edx	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000921	    0x41b8ffffffff	                     mov r8d, 0xffffffff	       372	state.c	FUNCTION_15	FOR_3	IF_10	CALL_25
0x4000927	          0x4809c2	                             or rdx, rax	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x400092a	            0x31c9	                            xor ecx, ecx	       372	state.c	FUNCTION_15	FOR_3	IF_10	CALL_25
0x400092c	          0x4c89e7	                            mov rdi, r12	       372	state.c	FUNCTION_15	FOR_3	IF_10	CALL_25
0x400092f	      0x4889542418	             mov qword [rsp + 0x18], rdx	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000934	      0xe867fbffff	                         call sym.scroll	       372	state.c	FUNCTION_15	FOR_3	IF_10	CALL_25
0x4000939	      0x498b4c2430	            mov rcx, qword [r12 + 0x30] 	       375	state.c	FUNCTION_15	FOR_3	CALL_26
0x400093e	        0x488b3424	                    mov rsi, qword [rsp]	       375	state.c	FUNCTION_15	FOR_3	CALL_26
0x4000942	            0x89ea	                            mov edx, ebp	       375	state.c	FUNCTION_15	FOR_3	CALL_26
0x4000944	          0x4c89e7	                            mov rdi, r12	       375	state.c	FUNCTION_15	FOR_3	CALL_26
0x4000947	      0xe8f4f6ffff	                       call sym.putglyph	       375	state.c	FUNCTION_15	FOR_3	CALL_26
0x400094c	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	       377	state.c	FUNCTION_15	FOR_3	IF_11
0x4000950	          0x83e801	                              sub eax, 1	       377	state.c	FUNCTION_15	FOR_3	IF_11
0x4000953	            0x39c3	                            cmp ebx, eax	       377	state.c	FUNCTION_15	FOR_3	IF_11
0x4000955	     0xf84a5000000	                            je 0x4000a00	       377	state.c	FUNCTION_15	FOR_3	IF_11
0x400095b	      0x4963542430	         movsxd rdx, dword [r12 + 0x30] 	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4000960	      0x498b442458	            mov rax, qword [r12 + 0x58] 	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4000965	      0x41036c2434	             add ebp, dword [r12 + 0x34]	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x400096a	        0xf6049001	              test byte [rax + rdx*4], 1	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x400096e	      0x418b44242c	            mov eax, dword [r12 + 0x2c] 	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4000973	            0x7409	                            je 0x400097e	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4000975	            0x89c2	                            mov edx, eax	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4000977	          0xc1ea1f	                           shr edx, 0x1f	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x400097a	             0x1d0	                            add eax, edx	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x400097c	            0xd1f8	                              sar eax, 1	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x400097e	            0x39e8	                            cmp eax, ebp	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4000980	            0x7f76	                            jg 0x40009f8	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4000982	    0x41f684249400	               test byte [r12 + 0x94], 4	       394	state.c	FUNCTION_15	FOR_3	IF_14	IF_15
0x400098b	            0x7409	                            je 0x4000996	       394	state.c	FUNCTION_15	FOR_3	IF_14	IF_15
0x400098d	    0x41c744243801	               mov dword [r12 + 0x38], 1	       395	state.c	FUNCTION_15	FOR_3	IF_14	IF_15
0x4000996	        0x488b3424	                    mov rsi, qword [rsp]	       400	state.c	FUNCTION_15	FOR_3	CALL_30
0x400099a	        0x498b3c24	                    mov rdi, qword [r12]	       400	state.c	FUNCTION_15	FOR_3	CALL_30
0x400099e	      0xe800000000	                          call 0x40009a3	       400	state.c	FUNCTION_15	FOR_3	CALL_30
0x40009a3	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	       319	state.c	FUNCTION_15	FOR_3
0x40009a7	          0x4439f0	                           cmp eax, r14d	       319	state.c	FUNCTION_15	FOR_3
0x40009aa	     0xf8f10feffff	                            jg 0x40007c0	       319	state.c	FUNCTION_15	FOR_3
0x40009b0	      0x488d742430	                   lea rsi, [rsp + 0x30]	       403	state.c	FUNCTION_15	CALL_31
0x40009b5	            0x31d2	                            xor edx, edx	       403	state.c	FUNCTION_15	CALL_31
0x40009b7	          0x4c89e7	                            mov rdi, r12	       403	state.c	FUNCTION_15	CALL_31
0x40009ba	      0xe821f7ffff	                   call sym.updatecursor	       403	state.c	FUNCTION_15	CALL_31
0x40009bf	      0x488b742408	                mov rsi, qword [rsp + 8]	       414	state.c	FUNCTION_15	CALL_34
0x40009c4	        0x498b3c24	                    mov rdi, qword [r12]	       414	state.c	FUNCTION_15	CALL_34
0x40009c8	      0xe800000000	                          call 0x40009cd	       414	state.c	FUNCTION_15	CALL_34
0x40009cd	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	       416	state.c	FUNCTION_15
0x40009d2	    0x644833342528	                xor rsi, qword fs:[0x28]	       416	state.c	FUNCTION_15
0x40009db	        0x8b442440	            mov eax, dword [rsp + 0x40] 	       415	state.c	FUNCTION_15
0x40009df	     0xf8548020000	                           jne 0x4000c2d	       416	state.c	FUNCTION_15
0x40009e5	        0x4883c458	                           add rsp, 0x58	       416	state.c	FUNCTION_15
0x40009e9	              0x5b	                                 pop rbx	       416	state.c	FUNCTION_15
0x40009ea	              0x5d	                                 pop rbp	       416	state.c	FUNCTION_15
0x40009eb	            0x415c	                                 pop r12	       416	state.c	FUNCTION_15
0x40009ed	            0x415d	                                 pop r13	       416	state.c	FUNCTION_15
0x40009ef	            0x415e	                                 pop r14	       416	state.c	FUNCTION_15
0x40009f1	            0x415f	                                 pop r15	       416	state.c	FUNCTION_15
0x40009f3	              0xc3	                                     ret	       416	state.c	FUNCTION_15
0x40009f4	         0xf1f4000	                         nop dword [rax]	       416	state.c	FUNCTION_15
0x40009f8	      0x41896c2434	             mov dword [r12 + 0x34], ebp	       398	state.c	FUNCTION_15	FOR_3	ELSE_2
0x40009fd	            0xeb97	                           jmp 0x4000996	       398	state.c	FUNCTION_15	FOR_3	ELSE_2
0x40009ff	              0x90	                                     nop	       398	state.c	FUNCTION_15	FOR_3	ELSE_2
0x4000a00	        0x488b0424	                    mov rax, qword [rsp]	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000a04	            0x8b08	                    mov ecx, dword [rax]	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000a06	            0x85c9	                           test ecx, ecx	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000a08	            0x744f	                            je 0x4000a59	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000a0a	    0x498b84248000	            mov rax, qword [r12 + 0x80] 	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000a12	            0x31db	                            xor ebx, ebx	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000a14	          0x4531ff	                          xor r15d, r15d	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000a17	            0xeb25	                           jmp 0x4000a3e	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000a19	     0xf1f80000000	                         nop dword [rax]	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000a20	        0x488b3c24	                    mov rdi, qword [rsp]	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000a24	      0x498b542478	            mov rdx, qword [r12 + 0x78] 	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000a29	        0x4183c701	                             add r15d, 1	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000a2d	          0x8b0c1f	              mov ecx, dword [rdi + rbx]	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000a30	          0x890c1a	              mov dword [rdx + rbx], ecx	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000a33	        0x4883c304	                              add rbx, 4	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000a37	          0x8b141f	              mov edx, dword [rdi + rbx]	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000a3a	            0x85d2	                           test edx, edx	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000a3c	            0x7432	                            je 0x4000a70	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000a3e	          0x4439f8	                           cmp eax, r15d	       382	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7	IF_12
0x4000a41	            0x89c6	                            mov esi, eax	       382	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7	IF_12
0x4000a43	            0x7fdb	                            jg 0x4000a20	       382	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7	IF_12
0x4000a45	          0x4c89e7	                            mov rdi, r12	       383	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7	CALL_27
0x4000a48	      0xe823fcffff	            call sym.grow_combine_buffer	       383	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7	CALL_27
0x4000a4d	    0x498b84248000	            mov rax, qword [r12 + 0x80] 	       383	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7	CALL_27
0x4000a55	            0x89c6	                            mov esi, eax	       383	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7	CALL_27
0x4000a57	            0xebc7	                           jmp 0x4000a20	       383	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7	CALL_27
0x4000a59	    0x418bb4248000	            mov esi, dword [r12 + 0x80] 	       383	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7	CALL_27
0x4000a61	            0x31db	                            xor ebx, ebx	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000a63	          0x4531ff	                          xor r15d, r15d	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000a66	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000a70	          0x4139f7	                           cmp r15d, esi	       386	state.c	FUNCTION_15	FOR_3	IF_11	IF_13
0x4000a73	            0x7d2d	                           jge 0x4000aa2	       386	state.c	FUNCTION_15	FOR_3	IF_11	IF_13
0x4000a75	      0x498b442478	            mov rax, qword [r12 + 0x78] 	       388	state.c	FUNCTION_15	FOR_3	IF_11
0x4000a7a	    0xc70418000000	                mov dword [rax + rbx], 0	       388	state.c	FUNCTION_15	FOR_3	IF_11
0x4000a81	      0x498b442430	            mov rax, qword [r12 + 0x30] 	       390	state.c	FUNCTION_15	FOR_3	IF_11
0x4000a86	    0x4189ac248800	             mov dword [r12 + 0x88], ebp	       389	state.c	FUNCTION_15	FOR_3	IF_11
0x4000a8e	    0x498984248c00	             mov qword [r12 + 0x8c], rax	       390	state.c	FUNCTION_15	FOR_3	IF_11
0x4000a96	      0xe9c0feffff	                           jmp 0x400095b	       390	state.c	FUNCTION_15	FOR_3	IF_11
0x4000a9b	            0x31ed	                            xor ebp, ebp	       323	state.c	FUNCTION_15	FOR_3
0x4000a9d	      0xe9c9fdffff	                           jmp 0x400086b	       323	state.c	FUNCTION_15	FOR_3
0x4000aa2	          0x4c89e7	                            mov rdi, r12	       387	state.c	FUNCTION_15	FOR_3	IF_11	CALL_28
0x4000aa5	      0xe8c6fbffff	            call sym.grow_combine_buffer	       387	state.c	FUNCTION_15	FOR_3	IF_11	CALL_28
0x4000aaa	            0xebc9	                           jmp 0x4000a75	       387	state.c	FUNCTION_15	FOR_3	IF_11	CALL_28
0x4000aac	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       257	state.c	FUNCTION_15
0x4000ab1	      0x807c050000	                 cmp byte [rbp + rax], 0	       257	state.c	FUNCTION_15
0x4000ab6	     0xf88f6000000	                            js 0x4000bb2	       257	state.c	FUNCTION_15
0x4000abc	    0x496384241001	        movsxd rax, dword [r12 + 0x110] 	       257	state.c	FUNCTION_15
0x4000ac4	        0x488d0440	                  lea rax, [rax + rax*2]	       257	state.c	FUNCTION_15
0x4000ac8	    0x498d84c49800	          lea rax, [r12 + rax*8 + 0x98] 	       257	state.c	FUNCTION_15
0x4000ad0	          0x488b38	                    mov rdi, qword [rax]	       261	state.c	FUNCTION_15
0x4000ad3	          0x4189d8	                            mov r8d, ebx	       261	state.c	FUNCTION_15
0x4000ad6	        0x4c8b5708	                mov r10, qword [rdi + 8]	       261	state.c	FUNCTION_15
0x4000ada	      0xe979fcffff	                           jmp 0x4000758	       261	state.c	FUNCTION_15
0x4000adf	    0x418b84248c00	            mov eax, dword [r12 + 0x8c] 	       281	state.c	FUNCTION_15	IF_3	IF_4
0x4000ae7	      0x4139442430	            cmp dword [r12 + 0x30], eax 	       281	state.c	FUNCTION_15	IF_3	IF_4
0x4000aec	     0xf85c0fcffff	                           jne 0x40007b2	       281	state.c	FUNCTION_15	IF_3	IF_4
0x4000af2	    0x418b84248800	            mov eax, dword [r12 + 0x88] 	       281	state.c	FUNCTION_15	IF_3	IF_4
0x4000afa	    0x410384249000	             add eax, dword [r12 + 0x90]	       281	state.c	FUNCTION_15	IF_3	IF_4
0x4000b02	      0x4139442434	            cmp dword [r12 + 0x34], eax 	       281	state.c	FUNCTION_15	IF_3	IF_4
0x4000b07	     0xf85a5fcffff	                           jne 0x40007b2	       281	state.c	FUNCTION_15	IF_3	IF_4
0x4000b0d	      0x498b542478	            mov rdx, qword [r12 + 0x78] 	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000b12	          0x448b0a	                    mov r9d, dword [rdx]	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000b15	          0x4585c9	                           test r9d, r9d	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000b18	     0xf8406010000	                            je 0x4000c24	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000b1e	      0xbd04000000	                              mov ebp, 4	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000b23	            0x31db	                            xor ebx, ebx	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000b25	            0xeb0c	                           jmp 0x4000b33	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000b27	    0x660f1f840000	                    nop word [rax + rax]	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000b30	          0x4889c5	                            mov rbp, rax	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000b33	        0x488d4504	                      lea rax, [rbp + 4]	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000b37	          0x83c301	                              add ebx, 1	       293	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000b3a	      0x448b4402fc	          mov r8d, dword [rdx + rax - 4]	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000b3f	          0x4585c0	                           test r8d, r8d	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000b42	            0x75ec	                           jne 0x4000b30	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000b44	        0x8b7c242c	            mov edi, dword [rsp + 0x2c] 	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000b48	          0x4531f6	                          xor r14d, r14d	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000b4b	            0x85ff	                           test edi, edi	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000b4d	     0xf8e96000000	                           jle 0x4000be9	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000b53	      0x488b442408	                mov rax, qword [rsp + 8]	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000b58	          0x4863eb	                         movsxd rbp, ebx	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000b5b	          0x4531f6	                          xor r14d, r14d	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000b5e	        0x48c1e502	                              shl rbp, 2	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000b62	          0x4989c5	                            mov r13, rax	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000b65	          0x4829c5	                            sub rbp, rax	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000b68	            0xeb27	                           jmp 0x4000b91	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000b6a	    0x660f1f440000	                    nop word [rax + rax]	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000b70	          0x4c89e8	                            mov rax, r13	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4000b73	      0x4903442478	             add rax, qword [r12 + 0x78]	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4000b78	        0x418b5500	                    mov edx, dword [r13]	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4000b7c	          0x83c301	                              add ebx, 1	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4000b7f	        0x4183c601	                             add r14d, 1	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4000b83	        0x4983c504	                              add r13, 4	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4000b87	          0x891428	              mov dword [rax + rbp], edx	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4000b8a	      0x443974242c	           cmp dword [rsp + 0x2c], r14d 	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000b8f	            0x7e51	                           jle 0x4000be2	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000b91	        0x418b7d00	                    mov edi, dword [r13]	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000b95	      0xe800000000	                          call 0x4000b9a	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000b9a	            0x85c0	                           test eax, eax	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000b9c	            0x7444	                            je 0x4000be2	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000b9e	    0x413b9c248000	            cmp ebx, dword [r12 + 0x80] 	       297	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	IF_5
0x4000ba6	            0x7cc8	                            jl 0x4000b70	       297	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	IF_5
0x4000ba8	          0x4c89e7	                            mov rdi, r12	       298	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_8
0x4000bab	      0xe8c0faffff	            call sym.grow_combine_buffer	       298	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_8
0x4000bb0	            0xebbe	                           jmp 0x4000b70	       298	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_8
0x4000bb2	        0x498b0424	                    mov rax, qword [r12]	       258	state.c	FUNCTION_15
0x4000bb6	        0xf6401801	               test byte [rax + 0x18], 1	       258	state.c	FUNCTION_15
0x4000bba	            0x740d	                            je 0x4000bc9	       258	state.c	FUNCTION_15
0x4000bbc	    0x498d8424f800	                   lea rax, [r12 + 0xf8]	       258	state.c	FUNCTION_15
0x4000bc4	      0xe907ffffff	                           jmp 0x4000ad0	       258	state.c	FUNCTION_15
0x4000bc9	    0x496384241401	        movsxd rax, dword [r12 + 0x114] 	       258	state.c	FUNCTION_15
0x4000bd1	        0x488d0440	                  lea rax, [rax + rax*2]	       258	state.c	FUNCTION_15
0x4000bd5	    0x498d84c49800	          lea rax, [r12 + rax*8 + 0x98] 	       258	state.c	FUNCTION_15
0x4000bdd	      0xe9eefeffff	                           jmp 0x4000ad0	       258	state.c	FUNCTION_15
0x4000be2	          0x4863eb	                         movsxd rbp, ebx	       258	state.c	FUNCTION_15
0x4000be5	        0x48c1e502	                              shl rbp, 2	       258	state.c	FUNCTION_15
0x4000be9	    0x413b9c248000	            cmp ebx, dword [r12 + 0x80] 	       301	state.c	FUNCTION_15	IF_3	IF_4	IF_6
0x4000bf1	            0x7c08	                            jl 0x4000bfb	       301	state.c	FUNCTION_15	IF_3	IF_4	IF_6
0x4000bf3	          0x4c89e7	                            mov rdi, r12	       302	state.c	FUNCTION_15	IF_3	IF_4	CALL_9
0x4000bf6	      0xe875faffff	            call sym.grow_combine_buffer	       302	state.c	FUNCTION_15	IF_3	IF_4	CALL_9
0x4000bfb	      0x498b742478	            mov rsi, qword [r12 + 0x78] 	       303	state.c	FUNCTION_15	IF_3	IF_4
0x4000c00	          0x4c89e7	                            mov rdi, r12	       312	state.c	FUNCTION_15	IF_3	IF_4	CALL_12
0x4000c03	    0xc7042e000000	                mov dword [rsi + rbp], 0	       303	state.c	FUNCTION_15	IF_3	IF_4
0x4000c0a	    0x498b8c248c00	            mov rcx, qword [r12 + 0x8c] 	       312	state.c	FUNCTION_15	IF_3	IF_4	CALL_12
0x4000c12	    0x418b94248800	            mov edx, dword [r12 + 0x88] 	       312	state.c	FUNCTION_15	IF_3	IF_4	CALL_12
0x4000c1a	      0xe821f4ffff	                       call sym.putglyph	       312	state.c	FUNCTION_15	IF_3	IF_4	CALL_12
0x4000c1f	      0xe98efbffff	                           jmp 0x40007b2	       312	state.c	FUNCTION_15	IF_3	IF_4	CALL_12
0x4000c24	            0x31ed	                            xor ebp, ebp	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000c26	            0x31db	                            xor ebx, ebx	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000c28	      0xe917ffffff	                           jmp 0x4000b44	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000c2d	      0xe800000000	                          call 0x4000c32	       416	state.c	FUNCTION_15
updatecursor	DO,0:SWITCH,0:CALL,0:WHILE,0:ELSE,0:functions,0:IF,4:FOR,0	26
0x40000e0	          0x8b4604	                mov eax, dword [rsi + 4]	        34	state.c	FUNCTION_2	IF_1
0x40000e3	          0x394734	            cmp dword [rdi + 0x34], eax 	        34	state.c	FUNCTION_2	IF_1
0x40000e6	            0x7448	                            je 0x4000130	        34	state.c	FUNCTION_2	IF_1
0x40000e8	            0x85d2	                           test edx, edx	        37	state.c	FUNCTION_2	IF_2
0x40000ea	            0x7534	                           jne 0x4000120	        37	state.c	FUNCTION_2	IF_2
0x40000ec	        0x488b4708	                mov rax, qword [rdi + 8]	        40	state.c	FUNCTION_2	IF_3
0x40000f0	          0x4885c0	                           test rax, rax	        40	state.c	FUNCTION_2	IF_3
0x40000f3	            0x7442	                            je 0x4000137	        40	state.c	FUNCTION_2	IF_3
0x40000f5	        0x488b4008	                mov rax, qword [rax + 8]	        40	state.c	FUNCTION_2	IF_3
0x40000f9	          0x4885c0	                           test rax, rax	        40	state.c	FUNCTION_2	IF_3
0x40000fc	            0x7439	                            je 0x4000137	        40	state.c	FUNCTION_2	IF_3
0x40000fe	     0xfb697940000	           movzx edx, byte [rdi + 0x94] 	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4000105	        0x488b4f10	            mov rcx, qword [rdi + 0x10] 	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4000109	          0x488b36	                    mov rsi, qword [rsi]	        41	state.c	FUNCTION_2	IF_3	IF_4
0x400010c	        0x488b7f30	            mov rdi, qword [rdi + 0x30] 	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4000110	          0xc0ea05	                               shr dl, 5	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4000113	          0x83e201	                              and edx, 1	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4000116	            0xffe0	                                 jmp rax	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4000118	     0xf1f84000000	                   nop dword [rax + rax]	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4000120	    0xc74738000000	               mov dword [rdi + 0x38], 0	        38	state.c	FUNCTION_2	IF_2
0x4000127	            0xebc3	                           jmp 0x40000ec	        38	state.c	FUNCTION_2	IF_2
0x4000129	     0xf1f80000000	                         nop dword [rax]	        38	state.c	FUNCTION_2	IF_2
0x4000130	            0x8b06	                    mov eax, dword [rsi]	        34	state.c	FUNCTION_2	IF_1
0x4000132	          0x394730	            cmp dword [rdi + 0x30], eax 	        34	state.c	FUNCTION_2	IF_1
0x4000135	            0x75b1	                           jne 0x40000e8	        34	state.c	FUNCTION_2	IF_1
0x4000137	            0xf3c3	                                     ret	        34	state.c	FUNCTION_2	IF_1
vterm_state_get_cursorpos	DO,0:SWITCH,0:CALL,0:WHILE,0:ELSE,0:functions,0:IF,0:FOR,0	3
0x4001350	        0x488b4730	            mov rax, qword [rdi + 0x30] 	      1802	state.c	FUNCTION_32
0x4001354	          0x488906	                    mov qword [rsi], rax	      1802	state.c	FUNCTION_32
0x4001357	              0xc3	                                     ret	      1802	state.c	FUNCTION_32
putglyph	DO,0:SWITCH,0:CALL,1:WHILE,0:ELSE,0:functions,0:IF,2:FOR,0	40
0x4000040	        0x4883ec28	                           sub rsp, 0x28	        17	state.c	FUNCTION_1
0x4000044	        0x89542408	                mov dword [rsp + 8], edx	        20	state.c	FUNCTION_1
0x4000048	        0x488b5758	            mov rdx, qword [rdi + 0x58] 	        22	state.c	FUNCTION_1
0x400004c	        0x48893424	                    mov qword [rsp], rsi	        19	state.c	FUNCTION_1
0x4000050	          0x4863f1	                         movsxd rsi, ecx	        22	state.c	FUNCTION_1
0x4000053	    0x440fb644240c	            movzx r8d, byte [rsp + 0xc] 	        21	state.c	FUNCTION_1
0x4000059	    0x64488b042528	                mov rax, qword fs:[0x28]	        17	state.c	FUNCTION_1
0x4000062	      0x4889442418	             mov qword [rsp + 0x18], rax	        17	state.c	FUNCTION_1
0x4000067	            0x31c0	                            xor eax, eax	        17	state.c	FUNCTION_1
0x4000069	        0x4c8d0cb2	                   lea r9, [rdx + rsi*4]	        22	state.c	FUNCTION_1
0x400006d	     0xfb6877c0100	          movzx eax, byte [rdi + 0x17c] 	        21	state.c	FUNCTION_1
0x4000074	        0x410fb611	                    movzx edx, byte [r9]	        22	state.c	FUNCTION_1
0x4000078	        0x4183e0fc	                     and r8d, 0xfffffffc	        21	state.c	FUNCTION_1
0x400007c	          0x83e001	                              and eax, 1	        21	state.c	FUNCTION_1
0x400007f	          0x4409c0	                             or eax, r8d	        22	state.c	FUNCTION_1
0x4000082	          0x83e201	                              and edx, 1	        22	state.c	FUNCTION_1
0x4000085	             0x1d2	                            add edx, edx	        22	state.c	FUNCTION_1
0x4000087	             0x9d0	                             or eax, edx	        22	state.c	FUNCTION_1
0x4000089	        0x410fb611	                    movzx edx, byte [r9]	        23	state.c	FUNCTION_1
0x400008d	          0x83e0f3	                     and eax, 0xfffffff3	        23	state.c	FUNCTION_1
0x4000090	             0x1d2	                            add edx, edx	        23	state.c	FUNCTION_1
0x4000092	          0x83e20c	                            and edx, 0xc	        23	state.c	FUNCTION_1
0x4000095	             0x9d0	                             or eax, edx	        23	state.c	FUNCTION_1
0x4000097	        0x8844240c	                mov byte [rsp + 0xc], al	        23	state.c	FUNCTION_1
0x400009b	        0x488b4708	                mov rax, qword [rdi + 8]	        25	state.c	FUNCTION_1	IF_1
0x400009f	          0x4885c0	                           test rax, rax	        25	state.c	FUNCTION_1	IF_1
0x40000a2	            0x7414	                            je 0x40000b8	        25	state.c	FUNCTION_1	IF_1
0x40000a4	          0x488b00	                    mov rax, qword [rax]	        25	state.c	FUNCTION_1	IF_1
0x40000a7	          0x4885c0	                           test rax, rax	        25	state.c	FUNCTION_1	IF_1
0x40000aa	            0x740c	                            je 0x40000b8	        25	state.c	FUNCTION_1	IF_1
0x40000ac	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	        26	state.c	FUNCTION_1	IF_1	IF_2
0x40000b0	          0x4889ce	                            mov rsi, rcx	        26	state.c	FUNCTION_1	IF_1	IF_2
0x40000b3	          0x4889e7	                            mov rdi, rsp	        26	state.c	FUNCTION_1	IF_1	IF_2
0x40000b6	            0xffd0	                                call rax	        26	state.c	FUNCTION_1	IF_1	IF_2
0x40000b8	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        30	state.c	FUNCTION_1
0x40000bd	    0x644833042528	                xor rax, qword fs:[0x28]	        30	state.c	FUNCTION_1
0x40000c6	            0x7505	                           jne 0x40000cd	        30	state.c	FUNCTION_1
0x40000c8	        0x4883c428	                           add rsp, 0x28	        30	state.c	FUNCTION_1
0x40000cc	              0xc3	                                     ret	        30	state.c	FUNCTION_1
0x40000cd	      0xe800000000	                          call 0x40000d2	        30	state.c	FUNCTION_1
vterm_state_set_termprop	DO,0:SWITCH,1:CALL,1:WHILE,0:ELSE,0:functions,0:IF,6:FOR,0	110
0x4001410	            0x4154	                                push r12	      1851	state.c	FUNCTION_38
0x4001412	              0x55	                                push rbp	      1851	state.c	FUNCTION_38
0x4001413	          0x4989d4	                            mov r12, rdx	      1851	state.c	FUNCTION_38
0x4001416	              0x53	                                push rbx	      1851	state.c	FUNCTION_38
0x4001417	        0x488b4708	                mov rax, qword [rdi + 8]	      1854	state.c	FUNCTION_38	IF_1
0x400141b	          0x4889fd	                            mov rbp, rdi	      1851	state.c	FUNCTION_38
0x400141e	            0x89f3	                            mov ebx, esi	      1851	state.c	FUNCTION_38
0x4001420	          0x4885c0	                           test rax, rax	      1854	state.c	FUNCTION_38	IF_1
0x4001423	            0x7418	                            je 0x400143d	      1854	state.c	FUNCTION_38	IF_1
0x4001425	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1854	state.c	FUNCTION_38	IF_1
0x4001429	          0x4885c0	                           test rax, rax	      1854	state.c	FUNCTION_38	IF_1
0x400142c	            0x740f	                            je 0x400143d	      1854	state.c	FUNCTION_38	IF_1
0x400142e	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001432	          0x4c89e6	                            mov rsi, r12	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001435	            0x89df	                            mov edi, ebx	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001437	            0xffd0	                                call rax	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001439	            0x85c0	                           test eax, eax	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x400143b	            0x7434	                            je 0x4001471	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x400143d	          0x83fb09	                              cmp ebx, 9	      1858	state.c	FUNCTION_38	SWITCH_1
0x4001440	            0x777e	                            ja 0x40014c0	      1858	state.c	FUNCTION_38	SWITCH_1
0x4001442	    0xff24dd000000	                       jmp qword [rbx*8]	      1858	state.c	FUNCTION_38	SWITCH_1
0x4001449	     0xf1f80000000	                         nop dword [rax]	      1858	state.c	FUNCTION_38	SWITCH_1
0x4001450	        0x418b0424	                    mov eax, dword [r12]	      1874	state.c	FUNCTION_38	SWITCH_1
0x4001454	     0xfb695950000	           movzx edx, byte [rbp + 0x95] 	      1874	state.c	FUNCTION_38	SWITCH_1
0x400145b	          0x83e001	                              and eax, 1	      1874	state.c	FUNCTION_38	SWITCH_1
0x400145e	          0xc1e003	                              shl eax, 3	      1874	state.c	FUNCTION_38	SWITCH_1
0x4001461	          0x83e2f7	                     and edx, 0xfffffff7	      1874	state.c	FUNCTION_38	SWITCH_1
0x4001464	             0x9d0	                             or eax, edx	      1874	state.c	FUNCTION_38	SWITCH_1
0x4001466	    0x888595000000	               mov byte [rbp + 0x95], al	      1874	state.c	FUNCTION_38	SWITCH_1
0x400146c	      0xb801000000	                              mov eax, 1	      1875	state.c	FUNCTION_38	SWITCH_1
0x4001471	              0x5b	                                 pop rbx	      1900	state.c	FUNCTION_38
0x4001472	              0x5d	                                 pop rbp	      1900	state.c	FUNCTION_38
0x4001473	            0x415c	                                 pop r12	      1900	state.c	FUNCTION_38
0x4001475	              0xc3	                                     ret	      1900	state.c	FUNCTION_38
0x4001476	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1900	state.c	FUNCTION_38
0x4001480	    0xc7456c000000	               mov dword [rbp + 0x6c], 0	      1886	state.c	FUNCTION_38	SWITCH_1
0x4001487	        0x418b0424	                    mov eax, dword [r12]	      1887	state.c	FUNCTION_38	SWITCH_1	IF_4
0x400148b	            0x85c0	                           test eax, eax	      1887	state.c	FUNCTION_38	SWITCH_1	IF_4
0x400148d	            0x7424	                            je 0x40014b3	      1887	state.c	FUNCTION_38	SWITCH_1	IF_4
0x400148f	    0xc7456c010000	               mov dword [rbp + 0x6c], 1	      1888	state.c	FUNCTION_38	SWITCH_1	IF_4
0x4001496	        0x418b0424	                    mov eax, dword [r12]	      1889	state.c	FUNCTION_38	SWITCH_1	IF_5
0x400149a	          0x83f802	                              cmp eax, 2	      1889	state.c	FUNCTION_38	SWITCH_1	IF_5
0x400149d	            0x750b	                           jne 0x40014aa	      1889	state.c	FUNCTION_38	SWITCH_1	IF_5
0x400149f	    0xc7456c030000	               mov dword [rbp + 0x6c], 3	      1890	state.c	FUNCTION_38	SWITCH_1	IF_5
0x40014a6	        0x418b0424	                    mov eax, dword [r12]	      1890	state.c	FUNCTION_38	SWITCH_1	IF_5
0x40014aa	          0x83f803	                              cmp eax, 3	      1891	state.c	FUNCTION_38	SWITCH_1	IF_6
0x40014ad	            0x7504	                           jne 0x40014b3	      1891	state.c	FUNCTION_38	SWITCH_1	IF_6
0x40014af	        0x834d6c04	                or dword [rbp + 0x6c], 4	      1892	state.c	FUNCTION_38	SWITCH_1	IF_6
0x40014b3	              0x5b	                                 pop rbx	      1900	state.c	FUNCTION_38
0x40014b4	      0xb801000000	                              mov eax, 1	      1893	state.c	FUNCTION_38	SWITCH_1
0x40014b9	              0x5d	                                 pop rbp	      1900	state.c	FUNCTION_38
0x40014ba	            0x415c	                                 pop r12	      1900	state.c	FUNCTION_38
0x40014bc	              0xc3	                                     ret	      1900	state.c	FUNCTION_38
0x40014bd	           0xf1f00	                         nop dword [rax]	      1900	state.c	FUNCTION_38
0x40014c0	            0x31c0	                            xor eax, eax	      1896	state.c	FUNCTION_38	SWITCH_1
0x40014c2	            0xebad	                           jmp 0x4001471	      1896	state.c	FUNCTION_38	SWITCH_1
0x40014c4	         0xf1f4000	                         nop dword [rax]	      1896	state.c	FUNCTION_38	SWITCH_1
0x40014c8	      0x410fb60424	                   movzx eax, byte [r12]	      1871	state.c	FUNCTION_38	SWITCH_1
0x40014cd	     0xfb795940000	           movzx edx, word [rbp + 0x94] 	      1871	state.c	FUNCTION_38	SWITCH_1
0x40014d4	          0x83e003	                              and eax, 3	      1871	state.c	FUNCTION_38	SWITCH_1
0x40014d7	      0x6681e27ffe	                          and dx, 0xfe7f	      1871	state.c	FUNCTION_38	SWITCH_1
0x40014dc	          0xc1e007	                              shl eax, 7	      1871	state.c	FUNCTION_38	SWITCH_1
0x40014df	             0x9d0	                             or eax, edx	      1871	state.c	FUNCTION_38	SWITCH_1
0x40014e1	    0x668985940000	               mov word [rbp + 0x94], ax	      1871	state.c	FUNCTION_38	SWITCH_1
0x40014e8	      0xb801000000	                              mov eax, 1	      1872	state.c	FUNCTION_38	SWITCH_1
0x40014ed	            0xeb82	                           jmp 0x4001471	      1872	state.c	FUNCTION_38	SWITCH_1
0x40014ef	              0x90	                                     nop	      1872	state.c	FUNCTION_38	SWITCH_1
0x40014f0	        0x418b0424	                    mov eax, dword [r12]	      1877	state.c	FUNCTION_38	SWITCH_1
0x40014f4	     0xfb695950000	           movzx edx, byte [rbp + 0x95] 	      1877	state.c	FUNCTION_38	SWITCH_1
0x40014fb	          0x83e001	                              and eax, 1	      1877	state.c	FUNCTION_38	SWITCH_1
0x40014fe	             0x1c0	                            add eax, eax	      1877	state.c	FUNCTION_38	SWITCH_1
0x4001500	          0x83e2fd	                     and edx, 0xfffffffd	      1877	state.c	FUNCTION_38	SWITCH_1
0x4001503	             0x9d0	                             or eax, edx	      1877	state.c	FUNCTION_38	SWITCH_1
0x4001505	            0xa802	                              test al, 2	      1878	state.c	FUNCTION_38	SWITCH_1	IF_3
0x4001507	    0x888595000000	               mov byte [rbp + 0x95], al	      1877	state.c	FUNCTION_38	SWITCH_1
0x400150d	            0x74a4	                            je 0x40014b3	      1878	state.c	FUNCTION_38	SWITCH_1	IF_3
0x400150f	          0x8b7d28	            mov edi, dword [rbp + 0x28] 	      1878	state.c	FUNCTION_38	SWITCH_1	IF_3
0x4001512	          0x8b752c	            mov esi, dword [rbp + 0x2c] 	      1878	state.c	FUNCTION_38	SWITCH_1	IF_3
0x4001515	        0x488b4508	                mov rax, qword [rbp + 8]	      1878	state.c	FUNCTION_38	SWITCH_1	IF_3
0x4001519	        0x48c1e720	                           shl rdi, 0x20	      1878	state.c	FUNCTION_38	SWITCH_1	IF_3
0x400151d	        0x48c1e620	                           shl rsi, 0x20	      1878	state.c	FUNCTION_38	SWITCH_1	IF_3
0x4001521	          0x4885c0	                           test rax, rax	        47	state.c	FUNCTION_3	IF_1
0x4001524	            0x748d	                            je 0x40014b3	        47	state.c	FUNCTION_3	IF_1
0x4001526	        0x488b4020	            mov rax, qword [rax + 0x20] 	        47	state.c	FUNCTION_3	IF_1
0x400152a	          0x4885c0	                           test rax, rax	        47	state.c	FUNCTION_3	IF_1
0x400152d	            0x7484	                            je 0x40014b3	        47	state.c	FUNCTION_3	IF_1
0x400152f	        0x488b4d10	            mov rcx, qword [rbp + 0x10] 	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4001533	            0x31d2	                            xor edx, edx	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4001535	            0xffd0	                                call rax	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4001537	      0xe977ffffff	                           jmp 0x40014b3	        48	state.c	FUNCTION_3	IF_1	IF_2
0x400153c	         0xf1f4000	                         nop dword [rax]	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4001540	        0x418b0424	                    mov eax, dword [r12]	      1865	state.c	FUNCTION_38	SWITCH_1
0x4001544	     0xfb695940000	           movzx edx, byte [rbp + 0x94] 	      1865	state.c	FUNCTION_38	SWITCH_1
0x400154b	          0x83e001	                              and eax, 1	      1865	state.c	FUNCTION_38	SWITCH_1
0x400154e	          0xc1e005	                              shl eax, 5	      1865	state.c	FUNCTION_38	SWITCH_1
0x4001551	          0x83e2df	                     and edx, 0xffffffdf	      1865	state.c	FUNCTION_38	SWITCH_1
0x4001554	             0x9d0	                             or eax, edx	      1865	state.c	FUNCTION_38	SWITCH_1
0x4001556	    0x888594000000	               mov byte [rbp + 0x94], al	      1865	state.c	FUNCTION_38	SWITCH_1
0x400155c	      0xb801000000	                              mov eax, 1	      1866	state.c	FUNCTION_38	SWITCH_1
0x4001561	      0xe90bffffff	                           jmp 0x4001471	      1866	state.c	FUNCTION_38	SWITCH_1
0x4001566	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1866	state.c	FUNCTION_38	SWITCH_1
0x4001570	        0x418b0424	                    mov eax, dword [r12]	      1868	state.c	FUNCTION_38	SWITCH_1
0x4001574	     0xfb695940000	           movzx edx, byte [rbp + 0x94] 	      1868	state.c	FUNCTION_38	SWITCH_1
0x400157b	          0x83e001	                              and eax, 1	      1868	state.c	FUNCTION_38	SWITCH_1
0x400157e	          0xc1e006	                              shl eax, 6	      1868	state.c	FUNCTION_38	SWITCH_1
0x4001581	          0x83e2bf	                     and edx, 0xffffffbf	      1868	state.c	FUNCTION_38	SWITCH_1
0x4001584	             0x9d0	                             or eax, edx	      1868	state.c	FUNCTION_38	SWITCH_1
0x4001586	    0x888594000000	               mov byte [rbp + 0x94], al	      1868	state.c	FUNCTION_38	SWITCH_1
0x400158c	      0xb801000000	                              mov eax, 1	      1869	state.c	FUNCTION_38	SWITCH_1
0x4001591	      0xe9dbfeffff	                           jmp 0x4001471	      1869	state.c	FUNCTION_38	SWITCH_1
