ml_upd_block0	ELSE,3:SWITCH,0:DO,0:IF,6:FOR,0:functions,0:WHILE,0:CALL,9	93
0x40013d0	            0x4156	                                push r14	       930	memline.c	FUNCTION_14
0x40013d2	            0x4155	                                push r13	       930	memline.c	FUNCTION_14
0x40013d4	            0x4154	                                push r12	       930	memline.c	FUNCTION_14
0x40013d6	              0x55	                                push rbp	       930	memline.c	FUNCTION_14
0x40013d7	              0x53	                                push rbx	       930	memline.c	FUNCTION_14
0x40013d8	        0x4c8b6f08	                mov r13, qword [rdi + 8]	       935	memline.c	FUNCTION_14
0x40013dc	          0x4d85ed	                           test r13, r13	       936	memline.c	FUNCTION_14	IF_1
0x40013df	            0x7465	                            je 0x4001446	       936	memline.c	FUNCTION_14	IF_1
0x40013e1	          0x4189f6	                           mov r14d, esi	       936	memline.c	FUNCTION_14	IF_1
0x40013e4	          0x4889fd	                            mov rbp, rdi	       936	memline.c	FUNCTION_14	IF_1
0x40013e7	            0x31f6	                            xor esi, esi	       938	memline.c	FUNCTION_14	CALL_1
0x40013e9	      0xba01000000	                              mov edx, 1	       938	memline.c	FUNCTION_14	CALL_1
0x40013ee	          0x4c89ef	                            mov rdi, r13	       938	memline.c	FUNCTION_14	CALL_1
0x40013f1	      0xe800000000	                          call 0x40013f6	       938	memline.c	FUNCTION_14	CALL_1
0x40013f6	          0x4885c0	                           test rax, rax	       939	memline.c	FUNCTION_14	IF_2
0x40013f9	          0x4889c3	                            mov rbx, rax	       938	memline.c	FUNCTION_14	CALL_1
0x40013fc	            0x7442	                            je 0x4001440	       939	memline.c	FUNCTION_14	IF_2
0x40013fe	        0x4c8b6028	            mov r12, qword [rax + 0x28] 	       949	memline.c	FUNCTION_14
0x4001402	      0x41803c2462	                    cmp byte [r12], 0x62	       915	memline.c	FUNCTION_13	IF_1
0x4001407	            0x7447	                            je 0x4001450	       915	memline.c	FUNCTION_13	IF_1
0x4001409	            0x31ff	                            xor edi, edi	       951	memline.c	FUNCTION_14	CALL_5
0x400140b	      0xba05000000	                              mov edx, 5	       951	memline.c	FUNCTION_14	CALL_5
0x4001410	      0xbe00000000	                              mov esi, 0	       951	memline.c	FUNCTION_14	CALL_5
0x4001415	      0xe800000000	                          call 0x400141a	       951	memline.c	FUNCTION_14	CALL_5
0x400141a	          0x4889c7	                            mov rdi, rax	       951	memline.c	FUNCTION_14	CALL_5
0x400141d	      0xe800000000	                          call 0x4001422	       951	memline.c	FUNCTION_14	CALL_5
0x4001422	          0x4889de	                            mov rsi, rbx	       963	memline.c	FUNCTION_14	CALL_9
0x4001425	          0x4c89ef	                            mov rdi, r13	       963	memline.c	FUNCTION_14	CALL_9
0x4001428	            0x31c9	                            xor ecx, ecx	       963	memline.c	FUNCTION_14	CALL_9
0x400142a	              0x5b	                                 pop rbx	       964	memline.c	FUNCTION_14
0x400142b	              0x5d	                                 pop rbp	       964	memline.c	FUNCTION_14
0x400142c	            0x415c	                                 pop r12	       964	memline.c	FUNCTION_14
0x400142e	            0x415d	                                 pop r13	       964	memline.c	FUNCTION_14
0x4001430	            0x415e	                                 pop r14	       964	memline.c	FUNCTION_14
0x4001432	      0xba01000000	                              mov edx, 1	       963	memline.c	FUNCTION_14	CALL_9
0x4001437	      0xe900000000	                           jmp 0x400143c	       963	memline.c	FUNCTION_14	CALL_9
0x400143c	         0xf1f4000	                         nop dword [rax]	       963	memline.c	FUNCTION_14	CALL_9
0x4001440	        0x4183fe02	                             cmp r14d, 2	       943	memline.c	FUNCTION_14	IF_2	IF_3
0x4001444	            0x747a	                            je 0x40014c0	       943	memline.c	FUNCTION_14	IF_2	IF_3
0x4001446	              0x5b	                                 pop rbx	       964	memline.c	FUNCTION_14
0x4001447	              0x5d	                                 pop rbp	       964	memline.c	FUNCTION_14
0x4001448	            0x415c	                                 pop r12	       964	memline.c	FUNCTION_14
0x400144a	            0x415d	                                 pop r13	       964	memline.c	FUNCTION_14
0x400144c	            0x415e	                                 pop r14	       964	memline.c	FUNCTION_14
0x400144e	              0xc3	                                     ret	       964	memline.c	FUNCTION_14
0x400144f	              0x90	                                     nop	       964	memline.c	FUNCTION_14
0x4001450	      0x498d7c2401	                      lea rdi, [r12 + 1]	       964	memline.c	FUNCTION_14
0x4001455	      0xe826fcffff	   call sym.ml_check_b0_id.isra.0.part.1	       964	memline.c	FUNCTION_14
0x400145a	            0x85c0	                           test eax, eax	       950	memline.c	FUNCTION_14	IF_4	CALL_3
0x400145c	            0x74ab	                            je 0x4001409	       950	memline.c	FUNCTION_14	IF_4	CALL_3
0x400145e	          0x4585f6	                         test r14d, r14d	       954	memline.c	FUNCTION_14	ELSE_1	IF_5
0x4001461	            0x742d	                            je 0x4001490	       954	memline.c	FUNCTION_14	ELSE_1	IF_5
0x4001463	        0x4183fe02	                             cmp r14d, 2	       957	memline.c	FUNCTION_14	ELSE_1	ELSE_2	IF_6
0x4001467	            0x7447	                            je 0x40014b0	       957	memline.c	FUNCTION_14	ELSE_1	ELSE_2	IF_6
0x4001469	        0x488b4508	                mov rax, qword [rbp + 8]	      1053	memline.c	FUNCTION_16	IF_1	CALL_1
0x400146d	    0x488bb5880000	            mov rsi, qword [rbp + 0x88] 	      1053	memline.c	FUNCTION_16	IF_1	CALL_1
0x4001474	          0x488b38	                    mov rdi, qword [rax]	      1053	memline.c	FUNCTION_16	IF_1	CALL_1
0x4001477	      0xe800000000	                          call 0x400147c	      1053	memline.c	FUNCTION_16	IF_1	CALL_1
0x400147c	            0x85c0	                           test eax, eax	      1053	memline.c	FUNCTION_16	IF_1	CALL_1
0x400147e	            0x7420	                            je 0x40014a0	      1053	memline.c	FUNCTION_16	IF_1	CALL_1
0x4001480	    0x41808c24ee03	                or byte [r12 + 0x3ee], 4	      1054	memline.c	FUNCTION_16	IF_1
0x4001489	            0xeb97	                           jmp 0x4001422	      1054	memline.c	FUNCTION_16	IF_1
0x400148b	       0xf1f440000	                   nop dword [rax + rax]	      1054	memline.c	FUNCTION_16	IF_1
0x4001490	          0x4889ee	                            mov rsi, rbp	       955	memline.c	FUNCTION_14	ELSE_1	CALL_6
0x4001493	          0x4c89e7	                            mov rdi, r12	       955	memline.c	FUNCTION_14	ELSE_1	CALL_6
0x4001496	      0xe885fcffff	                   call sym.set_b0_fname	       955	memline.c	FUNCTION_14	ELSE_1	CALL_6
0x400149b	            0xeb85	                           jmp 0x4001422	       955	memline.c	FUNCTION_14	ELSE_1	CALL_6
0x400149d	           0xf1f00	                         nop dword [rax]	       955	memline.c	FUNCTION_14	ELSE_1	CALL_6
0x40014a0	    0x4180a424ee03	            and byte [r12 + 0x3ee], 0xfb	      1056	memline.c	FUNCTION_16	ELSE_1
0x40014a9	      0xe974ffffff	                           jmp 0x4001422	      1056	memline.c	FUNCTION_16	ELSE_1
0x40014ae	            0x6690	                                     nop	      1056	memline.c	FUNCTION_16	ELSE_1
0x40014b0	          0x4c89e6	                            mov rsi, r12	       958	memline.c	FUNCTION_14	ELSE_1	ELSE_2	IF_6
0x40014b3	          0x4889ef	                            mov rdi, rbp	       958	memline.c	FUNCTION_14	ELSE_1	ELSE_2	IF_6
0x40014b6	      0xe8a5feffff	                call sym.ml_set_b0_crypt	       958	memline.c	FUNCTION_14	ELSE_1	ELSE_2	IF_6
0x40014bb	      0xe962ffffff	                           jmp 0x4001422	       958	memline.c	FUNCTION_14	ELSE_1	ELSE_2	IF_6
0x40014c0	    0x488b85101500	          mov rax, qword [rbp + 0x1510] 	       434	memline.c	FUNCTION_2	IF_1
0x40014c7	          0x803800	                       cmp byte [rax], 0	       434	memline.c	FUNCTION_2	IF_1
0x40014ca	     0xf8476ffffff	                            je 0x4001446	       434	memline.c	FUNCTION_2	IF_1
0x40014d0	          0x4889ef	                            mov rdi, rbp	       436	memline.c	FUNCTION_2	IF_1	CALL_1
0x40014d3	      0xe800000000	                          call 0x40014d8	       436	memline.c	FUNCTION_2	IF_1	CALL_1
0x40014d8	            0x85c0	                           test eax, eax	       438	memline.c	FUNCTION_2	IF_1	IF_2
0x40014da	     0xf8e66ffffff	                           jle 0x4001446	       438	memline.c	FUNCTION_2	IF_1	IF_2
0x40014e0	              0x5b	                                 pop rbx	       964	memline.c	FUNCTION_14
0x40014e1	        0x488b7d08	                mov rdi, qword [rbp + 8]	       441	memline.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x40014e5	            0x31c9	                            xor ecx, ecx	       441	memline.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x40014e7	            0x31d2	                            xor edx, edx	       441	memline.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x40014e9	              0x5d	                                 pop rbp	       964	memline.c	FUNCTION_14
0x40014ea	            0x415c	                                 pop r12	       964	memline.c	FUNCTION_14
0x40014ec	            0x415d	                                 pop r13	       964	memline.c	FUNCTION_14
0x40014ee	            0x415e	                                 pop r14	       964	memline.c	FUNCTION_14
0x40014f0	    0x4881c7a80400	                          add rdi, 0x4a8	       441	memline.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x40014f7	      0xbe08000000	                              mov esi, 8	       441	memline.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x40014fc	      0xe900000000	                           jmp 0x4001501	       441	memline.c	FUNCTION_2	IF_1	IF_2	CALL_2
ml_close_notmod	ELSE,0:SWITCH,0:DO,0:IF,1:FOR,0:functions,0:WHILE,0:CALL,3	21
0x4002a50	              0x53	                                push rbx	       891	memline.c	FUNCTION_11
0x4002a51	    0x488b1d000000	            mov rbx, qword [0x04002a58] 	       894	memline.c	FUNCTION_11	CALL_1
0x4002a58	          0x4885db	                           test rbx, rbx	       894	memline.c	FUNCTION_11	CALL_1
0x4002a5b	            0x750c	                           jne 0x4002a69	       894	memline.c	FUNCTION_11	CALL_1
0x4002a5d	            0xeb2c	                           jmp 0x4002a8b	       894	memline.c	FUNCTION_11	CALL_1
0x4002a5f	              0x90	                                     nop	       894	memline.c	FUNCTION_11	CALL_1
0x4002a60	        0x488b5b68	            mov rbx, qword [rbx + 0x68] 	       894	memline.c	FUNCTION_11	CALL_1
0x4002a64	          0x4885db	                           test rbx, rbx	       894	memline.c	FUNCTION_11	CALL_1
0x4002a67	            0x7422	                            je 0x4002a8b	       894	memline.c	FUNCTION_11	CALL_1
0x4002a69	          0x4889df	                            mov rdi, rbx	       895	memline.c	FUNCTION_11	IF_1	CALL_2
0x4002a6c	      0xe800000000	                          call 0x4002a71	       895	memline.c	FUNCTION_11	IF_1	CALL_2
0x4002a71	            0x85c0	                           test eax, eax	       895	memline.c	FUNCTION_11	IF_1	CALL_2
0x4002a73	            0x75eb	                           jne 0x4002a60	       895	memline.c	FUNCTION_11	IF_1	CALL_2
0x4002a75	          0x4889df	                            mov rdi, rbx	       896	memline.c	FUNCTION_11	CALL_3
0x4002a78	      0xbe01000000	                              mov esi, 1	       896	memline.c	FUNCTION_11	CALL_3
0x4002a7d	      0xe800000000	                          call 0x4002a82	       896	memline.c	FUNCTION_11	CALL_3
0x4002a82	        0x488b5b68	            mov rbx, qword [rbx + 0x68] 	       894	memline.c	FUNCTION_11	CALL_1
0x4002a86	          0x4885db	                           test rbx, rbx	       894	memline.c	FUNCTION_11	CALL_1
0x4002a89	            0x75de	                           jne 0x4002a69	       894	memline.c	FUNCTION_11	CALL_1
0x4002a8b	              0x5b	                                 pop rbx	       897	memline.c	FUNCTION_11
0x4002a8c	              0xc3	                                     ret	       897	memline.c	FUNCTION_11
ml_append_buf	ELSE,0:SWITCH,0:DO,0:IF,2:FOR,0:functions,0:WHILE,0:CALL,2	42
0x4003a90	      0x48837f0800	                  cmp qword [rdi + 8], 0	      2557	memline.c	FUNCTION_32	IF_1
0x4003a95	            0x7461	                            je 0x4003af8	      2557	memline.c	FUNCTION_32	IF_1
0x4003a97	            0x4156	                                push r14	      2556	memline.c	FUNCTION_32
0x4003a99	            0x4155	                                push r13	      2556	memline.c	FUNCTION_32
0x4003a9b	          0x4589c6	                           mov r14d, r8d	      2556	memline.c	FUNCTION_32
0x4003a9e	            0x4154	                                push r12	      2556	memline.c	FUNCTION_32
0x4003aa0	              0x55	                                push rbp	      2556	memline.c	FUNCTION_32
0x4003aa1	          0x4189cd	                           mov r13d, ecx	      2556	memline.c	FUNCTION_32
0x4003aa4	              0x53	                                push rbx	      2556	memline.c	FUNCTION_32
0x4003aa5	      0x48837f2800	               cmp qword [rdi + 0x28], 0	      2560	memline.c	FUNCTION_32	IF_2
0x4003aaa	          0x4989d4	                            mov r12, rdx	      2560	memline.c	FUNCTION_32	IF_2
0x4003aad	          0x4889f5	                            mov rbp, rsi	      2560	memline.c	FUNCTION_32	IF_2
0x4003ab0	          0x4889fb	                            mov rbx, rdi	      2560	memline.c	FUNCTION_32	IF_2
0x4003ab3	            0x7513	                           jne 0x4003ac8	      2560	memline.c	FUNCTION_32	IF_2
0x4003ab5	          0x483b2b	                    cmp rbp, qword [rbx]	      2590	memline.c	FUNCTION_33	IF_1
0x4003ab8	            0x7e18	                           jle 0x4003ad2	      2590	memline.c	FUNCTION_33	IF_1
0x4003aba	              0x5b	                                 pop rbx	      2563	memline.c	FUNCTION_32
0x4003abb	            0x31c0	                            xor eax, eax	      2563	memline.c	FUNCTION_32
0x4003abd	              0x5d	                                 pop rbp	      2563	memline.c	FUNCTION_32
0x4003abe	            0x415c	                                 pop r12	      2563	memline.c	FUNCTION_32
0x4003ac0	            0x415d	                                 pop r13	      2563	memline.c	FUNCTION_32
0x4003ac2	            0x415e	                                 pop r14	      2563	memline.c	FUNCTION_32
0x4003ac4	              0xc3	                                     ret	      2563	memline.c	FUNCTION_32
0x4003ac5	           0xf1f00	                         nop dword [rax]	      2563	memline.c	FUNCTION_32
0x4003ac8	      0xe873f4ffff	                  call sym.ml_flush_line	      2561	memline.c	FUNCTION_32	CALL_1
0x4003acd	          0x483b2b	                    cmp rbp, qword [rbx]	      2590	memline.c	FUNCTION_33	IF_1
0x4003ad0	            0x7fe8	                            jg 0x4003aba	      2590	memline.c	FUNCTION_33	IF_1
0x4003ad2	          0x4589f0	                           mov r8d, r14d	      2590	memline.c	FUNCTION_33	IF_1
0x4003ad5	          0x4489e9	                           mov ecx, r13d	      2590	memline.c	FUNCTION_33	IF_1
0x4003ad8	          0x4c89e2	                            mov rdx, r12	      2590	memline.c	FUNCTION_33	IF_1
0x4003adb	          0x4889ee	                            mov rsi, rbp	      2590	memline.c	FUNCTION_33	IF_1
0x4003ade	          0x4889df	                            mov rdi, rbx	      2590	memline.c	FUNCTION_33	IF_1
0x4003ae1	          0x4531c9	                            xor r9d, r9d	      2590	memline.c	FUNCTION_33	IF_1
0x4003ae4	              0x5b	                                 pop rbx	      2563	memline.c	FUNCTION_32
0x4003ae5	              0x5d	                                 pop rbp	      2563	memline.c	FUNCTION_32
0x4003ae6	            0x415c	                                 pop r12	      2563	memline.c	FUNCTION_32
0x4003ae8	            0x415d	                                 pop r13	      2563	memline.c	FUNCTION_32
0x4003aea	            0x415e	                                 pop r14	      2563	memline.c	FUNCTION_32
0x4003aec	      0xe91fdaffff	            jmp sym.ml_append_int.part.6	      2563	memline.c	FUNCTION_32
0x4003af1	     0xf1f80000000	                         nop dword [rax]	      2563	memline.c	FUNCTION_32
0x4003af8	            0x31c0	                            xor eax, eax	      2563	memline.c	FUNCTION_32
0x4003afa	              0xc3	                                     ret	      2563	memline.c	FUNCTION_32
ml_find_line_or_offset	ELSE,6:SWITCH,0:DO,0:IF,17:FOR,0:functions,0:WHILE,3:CALL,3	275
0x4006cc0	            0x4157	                                push r15	      5159	memline.c	FUNCTION_61
0x4006cc2	            0x4156	                                push r14	      5159	memline.c	FUNCTION_61
0x4006cc4	          0x4989f7	                            mov r15, rsi	      5159	memline.c	FUNCTION_61
0x4006cc7	            0x4155	                                push r13	      5159	memline.c	FUNCTION_61
0x4006cc9	            0x4154	                                push r12	      5159	memline.c	FUNCTION_61
0x4006ccb	              0x55	                                push rbp	      5159	memline.c	FUNCTION_61
0x4006ccc	              0x53	                                push rbx	      5159	memline.c	FUNCTION_61
0x4006ccd	          0x4889d3	                            mov rbx, rdx	      5159	memline.c	FUNCTION_61
0x4006cd0	        0x4883ec38	                           sub rsp, 0x38	      5159	memline.c	FUNCTION_61
0x4006cd4	      0x4889542428	             mov qword [rsp + 0x28], rdx	      5159	memline.c	FUNCTION_61
0x4006cd9	      0x48897c2408	                mov qword [rsp + 8], rdi	      5171	memline.c	FUNCTION_61	CALL_1
0x4006cde	      0xe800000000	                          call 0x4006ce3	      5171	memline.c	FUNCTION_61	CALL_1
0x4006ce3	    0x488b3d000000	            mov rdi, qword [0x04006cea] 	      5175	memline.c	FUNCTION_61	CALL_2
0x4006cea	          0x4189c6	                           mov r14d, eax	      5171	memline.c	FUNCTION_61	CALL_1
0x4006ced	      0xe84ec2ffff	                  call sym.ml_flush_line	      5175	memline.c	FUNCTION_61	CALL_2
0x4006cf2	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      5177	memline.c	FUNCTION_61	IF_1
0x4006cf7	        0x418b4864	              mov ecx, dword [r8 + 0x64]	      5177	memline.c	FUNCTION_61	IF_1
0x4006cfb	          0x83f9ff	             cmp ecx, 0xffffffffffffffff	      5177	memline.c	FUNCTION_61	IF_1
0x4006cfe	     0xf8475030000	                            je 0x4007079	      5177	memline.c	FUNCTION_61	IF_1
0x4006d04	        0x498b7058	              mov rsi, qword [r8 + 0x58]	      5178	memline.c	FUNCTION_61	IF_1
0x4006d08	          0x4885f6	                           test rsi, rsi	      5179	memline.c	FUNCTION_61	IF_1
0x4006d0b	     0xf8468030000	                            je 0x4007079	      5179	memline.c	FUNCTION_61	IF_1
0x4006d11	          0x4c89f8	                            mov rax, r15	      5179	memline.c	FUNCTION_61	IF_1
0x4006d14	        0x48c1e83f	                           shr rax, 0x3f	      5179	memline.c	FUNCTION_61	IF_1
0x4006d18	            0x84c0	                             test al, al	      5179	memline.c	FUNCTION_61	IF_1
0x4006d1a	     0xf8559030000	                           jne 0x4007079	      5179	memline.c	FUNCTION_61	IF_1
0x4006d20	          0x4885db	                           test rbx, rbx	      5182	memline.c	FUNCTION_61	IF_2
0x4006d23	     0xf8466030000	                            je 0x400708f	      5182	memline.c	FUNCTION_61	IF_2
0x4006d29	          0x488b2b	                    mov rbp, qword [rbx]	      5185	memline.c	FUNCTION_61	ELSE_1
0x4006d2c	          0x4885ed	                           test rbp, rbp	      5185	memline.c	FUNCTION_61	ELSE_1
0x4006d2f	           0xf9ec2	                                setle dl	      5185	memline.c	FUNCTION_61	ELSE_1
0x4006d32	          0x4d85ff	                           test r15, r15	      5186	memline.c	FUNCTION_61	IF_3
0x4006d35	            0x7519	                           jne 0x4006d50	      5186	memline.c	FUNCTION_61	IF_3
0x4006d37	            0x84d2	                             test dl, dl	      5186	memline.c	FUNCTION_61	IF_3
0x4006d39	      0xb801000000	                              mov eax, 1	      5187	memline.c	FUNCTION_61	IF_3
0x4006d3e	            0x7410	                            je 0x4006d50	      5186	memline.c	FUNCTION_61	IF_3
0x4006d40	        0x4883c438	                           add rsp, 0x38	      5279	memline.c	FUNCTION_61
0x4006d44	              0x5b	                                 pop rbx	      5279	memline.c	FUNCTION_61
0x4006d45	              0x5d	                                 pop rbp	      5279	memline.c	FUNCTION_61
0x4006d46	            0x415c	                                 pop r12	      5279	memline.c	FUNCTION_61
0x4006d48	            0x415d	                                 pop r13	      5279	memline.c	FUNCTION_61
0x4006d4a	            0x415e	                                 pop r14	      5279	memline.c	FUNCTION_61
0x4006d4c	            0x415f	                                 pop r15	      5279	memline.c	FUNCTION_61
0x4006d4e	              0xc3	                                     ret	      5279	memline.c	FUNCTION_61
0x4006d4f	              0x90	                                     nop	      5279	memline.c	FUNCTION_61
0x4006d50	        0x4183fe01	                             cmp r14d, 1	      5171	memline.c	FUNCTION_61	CALL_1
0x4006d54	    0x41bc01000000	                             mov r12d, 1	      5194	memline.c	FUNCTION_61	WHILE_1
0x4006d5a	       0xf9444241f	                  sete byte [rsp + 0x1f]	      5171	memline.c	FUNCTION_61	CALL_1
0x4006d5f	       0xfb644241f	           movzx eax, byte [rsp + 0x1f] 	      5171	memline.c	FUNCTION_61	CALL_1
0x4006d64	            0x31db	                            xor ebx, ebx	      5194	memline.c	FUNCTION_61	WHILE_1
0x4006d66	          0x83f901	                              cmp ecx, 1	      5194	memline.c	FUNCTION_61	WHILE_1
0x4006d69	        0x89442424	             mov dword [rsp + 0x24], eax	      5171	memline.c	FUNCTION_61	CALL_1
0x4006d6d	     0xf8e8d000000	                           jle 0x4006e00	      5194	memline.c	FUNCTION_61	WHILE_1
0x4006d73	          0x8d41fe	                      lea eax, [rcx - 2]	      5194	memline.c	FUNCTION_61	WHILE_1
0x4006d76	        0x488d5608	                      lea rdx, [rsi + 8]	      5194	memline.c	FUNCTION_61	WHILE_1
0x4006d7a	            0x31db	                            xor ebx, ebx	      5194	memline.c	FUNCTION_61	WHILE_1
0x4006d7c	    0x41bc01000000	                             mov r12d, 1	      5194	memline.c	FUNCTION_61	WHILE_1
0x4006d82	    0x440fb64c241f	           movzx r9d, byte [rsp + 0x1f] 	      5194	memline.c	FUNCTION_61	WHILE_1
0x4006d88	        0x8b7c2424	            mov edi, dword [rsp + 0x24] 	      5194	memline.c	FUNCTION_61	WHILE_1
0x4006d8c	        0x48c1e004	                              shl rax, 4	      5194	memline.c	FUNCTION_61	WHILE_1
0x4006d90	      0x488d740618	            lea rsi, [rsi + rax + 0x18] 	      5194	memline.c	FUNCTION_61	WHILE_1
0x4006d95	            0xeb34	                           jmp 0x4006dcb	      5194	memline.c	FUNCTION_61	WHILE_1
0x4006d97	    0x660f1f840000	                    nop word [rax + rax]	      5194	memline.c	FUNCTION_61	WHILE_1
0x4006da0	        0x486342f8	             movsxd rax, dword [rdx - 8]	      5196	memline.c	FUNCTION_61	WHILE_1
0x4006da4	        0x4a8d0c20	                    lea rcx, [rax + r12]	      5196	memline.c	FUNCTION_61	WHILE_1
0x4006da8	          0x4939cf	                            cmp r15, rcx	      5196	memline.c	FUNCTION_61	WHILE_1
0x4006dab	            0x7c23	                            jl 0x4006dd0	      5196	memline.c	FUNCTION_61	WHILE_1
0x4006dad	          0x48031a	                    add rbx, qword [rdx]	      5196	memline.c	FUNCTION_61	WHILE_1
0x4006db0	          0x4989cc	                            mov r12, rcx	      5196	memline.c	FUNCTION_61	WHILE_1
0x4006db3	          0x4885ed	                           test rbp, rbp	      5203	memline.c	FUNCTION_61	WHILE_1	IF_4
0x4006db6	            0x740a	                            je 0x4006dc2	      5203	memline.c	FUNCTION_61	WHILE_1	IF_4
0x4006db8	          0x4801d8	                            add rax, rbx	      5204	memline.c	FUNCTION_61	WHILE_1	IF_4
0x4006dbb	          0x4584c9	                           test r9b, r9b	      5204	memline.c	FUNCTION_61	WHILE_1	IF_4
0x4006dbe	        0x480f45d8	                         cmovne rbx, rax	      5204	memline.c	FUNCTION_61	WHILE_1	IF_4
0x4006dc2	        0x4883c210	                           add rdx, 0x10	      5204	memline.c	FUNCTION_61	WHILE_1	IF_4
0x4006dc6	          0x4839d6	                            cmp rsi, rdx	      5194	memline.c	FUNCTION_61	WHILE_1
0x4006dc9	            0x7435	                            je 0x4006e00	      5194	memline.c	FUNCTION_61	WHILE_1
0x4006dcb	          0x4d85ff	                           test r15, r15	      5195	memline.c	FUNCTION_61	WHILE_1
0x4006dce	            0x75d0	                           jne 0x4006da0	      5195	memline.c	FUNCTION_61	WHILE_1
0x4006dd0	          0x4885ed	                           test rbp, rbp	      5197	memline.c	FUNCTION_61	WHILE_1
0x4006dd3	            0x742b	                            je 0x4006e00	      5197	memline.c	FUNCTION_61	WHILE_1
0x4006dd5	        0x486342f8	             movsxd rax, dword [rdx - 8]	      5199	memline.c	FUNCTION_61	WHILE_1
0x4006dd9	            0x89f9	                            mov ecx, edi	      5198	memline.c	FUNCTION_61	WHILE_1
0x4006ddb	          0x4989da	                            mov r10, rbx	      5198	memline.c	FUNCTION_61	WHILE_1
0x4006dde	          0x4c0312	                    add r10, qword [rdx]	      5198	memline.c	FUNCTION_61	WHILE_1
0x4006de1	           0xfafc8	                           imul ecx, eax	      5198	memline.c	FUNCTION_61	WHILE_1
0x4006de4	          0x4863c9	                         movsxd rcx, ecx	      5198	memline.c	FUNCTION_61	WHILE_1
0x4006de7	          0x4c01d1	                            add rcx, r10	      5198	memline.c	FUNCTION_61	WHILE_1
0x4006dea	          0x4839cd	                            cmp rbp, rcx	      5198	memline.c	FUNCTION_61	WHILE_1
0x4006ded	            0x7e11	                           jle 0x4006e00	      5198	memline.c	FUNCTION_61	WHILE_1
0x4006def	          0x4c89d3	                            mov rbx, r10	      5198	memline.c	FUNCTION_61	WHILE_1
0x4006df2	          0x4901c4	                            add r12, rax	      5198	memline.c	FUNCTION_61	WHILE_1
0x4006df5	            0xebbc	                           jmp 0x4006db3	      5198	memline.c	FUNCTION_61	WHILE_1
0x4006df7	    0x660f1f840000	                    nop word [rax + rax]	      5198	memline.c	FUNCTION_61	WHILE_1
0x4006e00	          0x4d85ff	                           test r15, r15	      5198	memline.c	FUNCTION_61	WHILE_1
0x4006e03	      0x4c897c2408	                mov qword [rsp + 8], r15	      5198	memline.c	FUNCTION_61	WHILE_1
0x4006e08	        0x418d47ff	                      lea eax, [r15 - 1]	      5225	memline.c	FUNCTION_61	WHILE_2	IF_7	IF_8
0x4006e0c	       0xf9544241e	                 setne byte [rsp + 0x1e]	      5225	memline.c	FUNCTION_61	WHILE_2	IF_7	IF_8
0x4006e11	      0x4c3b642408	                cmp r12, qword [rsp + 8]	      5208	memline.c	FUNCTION_61	WHILE_2
0x4006e16	          0x4d89c7	                             mov r15, r8	      5208	memline.c	FUNCTION_61	WHILE_2
0x4006e19	    0xc74424180000	               mov dword [rsp + 0x18], 0	      5231	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4
0x4006e21	        0x89442420	             mov dword [rsp + 0x20], eax	      5225	memline.c	FUNCTION_61	WHILE_2	IF_7	IF_8
0x4006e25	    0x440fb66c241f	          movzx r13d, byte [rsp + 0x1f] 	      5234	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4	WHILE_3
0x4006e2b	     0xf8d15010000	                           jge 0x4006f46	      5208	memline.c	FUNCTION_61	WHILE_2
0x4006e31	     0xf1f80000000	                         nop dword [rax]	      5208	memline.c	FUNCTION_61	WHILE_2
0x4006e38	      0x807c241e00	                cmp byte [rsp + 0x1e], 0	      5208	memline.c	FUNCTION_61	WHILE_2
0x4006e3d	     0xf8403010000	                            je 0x4006f46	      5208	memline.c	FUNCTION_61	WHILE_2
0x4006e43	          0x4d3b27	                    cmp r12, qword [r15]	      5210	memline.c	FUNCTION_61	WHILE_2	IF_5
0x4006e46	     0xf8f2d020000	                            jg 0x4007079	      5210	memline.c	FUNCTION_61	WHILE_2	IF_5
0x4006e4c	      0xba13000000	                           mov edx, 0x13	      5211	memline.c	FUNCTION_61	WHILE_2	IF_5	CALL_3
0x4006e51	          0x4c89e6	                            mov rsi, r12	      5211	memline.c	FUNCTION_61	WHILE_2	IF_5	CALL_3
0x4006e54	          0x4c89ff	                            mov rdi, r15	      5211	memline.c	FUNCTION_61	WHILE_2	IF_5	CALL_3
0x4006e57	      0xe8c493ffff	                   call sym.ml_find_line	      5211	memline.c	FUNCTION_61	WHILE_2	IF_5	CALL_3
0x4006e5c	          0x4885c0	                           test rax, rax	      5211	memline.c	FUNCTION_61	WHILE_2	IF_5	CALL_3
0x4006e5f	     0xf8414020000	                            je 0x4007079	      5211	memline.c	FUNCTION_61	WHILE_2	IF_5	CALL_3
0x4006e65	        0x4d8b5f48	            mov r11, qword [r15 + 0x48] 	      5214	memline.c	FUNCTION_61	WHILE_2
0x4006e69	        0x498b4f40	            mov rcx, qword [r15 + 0x40] 	      5214	memline.c	FUNCTION_61	WHILE_2
0x4006e6d	          0x4589e2	                          mov r10d, r12d	      5217	memline.c	FUNCTION_61	WHILE_2	IF_6
0x4006e70	        0x4c8b4828	              mov r9, qword [rax + 0x28]	      5213	memline.c	FUNCTION_61	WHILE_2
0x4006e74	          0x4489e2	                           mov edx, r12d	      5216	memline.c	FUNCTION_61	WHILE_2
0x4006e77	        0x458d4301	                      lea r8d, [r11 + 1]	      5214	memline.c	FUNCTION_61	WHILE_2
0x4006e7b	          0x4129c8	                            sub r8d, ecx	      5214	memline.c	FUNCTION_61	WHILE_2
0x4006e7e	          0x4129ca	                           sub r10d, ecx	      5217	memline.c	FUNCTION_61	WHILE_2	IF_6
0x4006e81	     0xf8531010000	                           jne 0x4006fb8	      5217	memline.c	FUNCTION_61	WHILE_2	IF_6
0x4006e87	    0x48837c240800	                  cmp qword [rsp + 8], 0	      5222	memline.c	FUNCTION_61	WHILE_2	IF_7
0x4006e8d	        0x418b410c	               mov eax, dword [r9 + 0xc]	      5218	memline.c	FUNCTION_61	WHILE_2	IF_6
0x4006e91	        0x89442414	             mov dword [rsp + 0x14], eax	      5218	memline.c	FUNCTION_61	WHILE_2	IF_6
0x4006e95	     0xf853d010000	                           jne 0x4006fd8	      5222	memline.c	FUNCTION_61	WHILE_2	IF_7
0x4006e9b	          0x4963c2	                        movsxd rax, r10d	      5233	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4	WHILE_3
0x4006e9e	      0x48637c2414	         movsxd rdi, dword [rsp + 0x14] 	      5233	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4	WHILE_3
0x4006ea3	        0x4183e801	                              sub r8d, 1	      5233	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4	WHILE_3
0x4006ea7	      0x418b4c8118	     mov ecx, dword [r9 + rax*4 + 0x18] 	      5233	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4	WHILE_3
0x4006eac	        0x488d143b	                    lea rdx, [rbx + rdi]	      5232	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4	WHILE_3
0x4006eb0	            0x89c8	                            mov eax, ecx	      5232	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4	WHILE_3
0x4006eb2	      0x25ffffff7f	                     and eax, 0x7fffffff	      5232	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4	WHILE_3
0x4006eb7	          0x4829c2	                            sub rdx, rax	      5232	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4	WHILE_3
0x4006eba	          0x4489d0	                           mov eax, r10d	      5216	memline.c	FUNCTION_61	WHILE_2
0x4006ebd	          0x4c01ea	                            add rdx, r13	      5232	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4	WHILE_3
0x4006ec0	          0x4839d5	                            cmp rbp, rdx	      5232	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4	WHILE_3
0x4006ec3	            0x7d31	                           jge 0x4006ef6	      5232	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4	WHILE_3
0x4006ec5	      0xe936010000	                           jmp 0x4007000	      5232	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4	WHILE_3
0x4006eca	    0x660f1f440000	                    nop word [rax + rax]	      5232	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4	WHILE_3
0x4006ed0	          0x83c001	                              add eax, 1	      5243	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4	WHILE_3
0x4006ed3	          0x4863d0	                         movsxd rdx, eax	      5233	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4	WHILE_3
0x4006ed6	      0x418b4c9118	     mov ecx, dword [r9 + rdx*4 + 0x18] 	      5233	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4	WHILE_3
0x4006edb	        0x488d143b	                    lea rdx, [rbx + rdi]	      5232	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4	WHILE_3
0x4006edf	            0x89ce	                            mov esi, ecx	      5232	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4	WHILE_3
0x4006ee1	    0x81e6ffffff7f	                     and esi, 0x7fffffff	      5232	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4	WHILE_3
0x4006ee7	          0x4829f2	                            sub rdx, rsi	      5232	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4	WHILE_3
0x4006eea	          0x4c01ea	                            add rdx, r13	      5232	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4	WHILE_3
0x4006eed	          0x4839d5	                            cmp rbp, rdx	      5232	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4	WHILE_3
0x4006ef0	     0xf8c0a010000	                            jl 0x4007000	      5232	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4	WHILE_3
0x4006ef6	            0x31d2	                            xor edx, edx	      5237	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4	WHILE_3	IF_9
0x4006ef8	        0x4183fe01	                             cmp r14d, 1	      5237	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4	WHILE_3	IF_9
0x4006efc	           0xf94c2	                                 sete dl	      5237	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4	WHILE_3	IF_9
0x4006eff	          0x4801d3	                            add rbx, rdx	      5237	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4	WHILE_3	IF_9
0x4006f02	          0x4139c0	                            cmp r8d, eax	      5238	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4	WHILE_3	IF_10
0x4006f05	            0x75c9	                           jne 0x4006ed0	      5238	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4	WHILE_3	IF_10
0x4006f07	          0x4863d0	                         movsxd rdx, eax	      5238	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4	WHILE_3	IF_10
0x4006f0a	    0xc74424180100	               mov dword [rsp + 0x18], 1	      5240	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4	WHILE_3	IF_10
0x4006f12	      0x418b4c9118	     mov ecx, dword [r9 + rdx*4 + 0x18] 	      5240	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4	WHILE_3	IF_10
0x4006f17	        0x8b542414	            mov edx, dword [rsp + 0x14] 	      5247	memline.c	FUNCTION_61	WHILE_2
0x4006f1b	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      5247	memline.c	FUNCTION_61	WHILE_2
0x4006f21	            0x29ca	                            sub edx, ecx	      5247	memline.c	FUNCTION_61	WHILE_2
0x4006f23	          0x4863d2	                         movsxd rdx, edx	      5247	memline.c	FUNCTION_61	WHILE_2
0x4006f26	          0x4801d3	                            add rbx, rdx	      5247	memline.c	FUNCTION_61	WHILE_2
0x4006f29	          0x4885ed	                           test rbp, rbp	      5248	memline.c	FUNCTION_61	WHILE_2	IF_11
0x4006f2c	            0x7409	                            je 0x4006f37	      5248	memline.c	FUNCTION_61	WHILE_2	IF_11
0x4006f2e	          0x4839dd	                            cmp rbp, rbx	      5248	memline.c	FUNCTION_61	WHILE_2	IF_11
0x4006f31	     0xf8eea000000	                           jle 0x4007021	      5248	memline.c	FUNCTION_61	WHILE_2	IF_11
0x4006f37	        0x4d8d6301	                      lea r12, [r11 + 1]	      5262	memline.c	FUNCTION_61	WHILE_2
0x4006f3b	      0x4c3b642408	                cmp r12, qword [rsp + 8]	      5208	memline.c	FUNCTION_61	WHILE_2
0x4006f40	     0xf8cf2feffff	                            jl 0x4006e38	      5208	memline.c	FUNCTION_61	WHILE_2
0x4006f46	          0x4885ed	                           test rbp, rbp	      5208	memline.c	FUNCTION_61	WHILE_2
0x4006f49	            0x7409	                            je 0x4006f54	      5208	memline.c	FUNCTION_61	WHILE_2
0x4006f4b	          0x4839eb	                            cmp rbx, rbp	      5208	memline.c	FUNCTION_61	WHILE_2
0x4006f4e	     0xf8ceffeffff	                            jl 0x4006e43	      5208	memline.c	FUNCTION_61	WHILE_2
0x4006f54	          0x4d89f8	                             mov r8, r15	      5208	memline.c	FUNCTION_61	WHILE_2
0x4006f57	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      5208	memline.c	FUNCTION_61	WHILE_2
0x4006f5c	          0x4889d8	                            mov rax, rbx	      5208	memline.c	FUNCTION_61	WHILE_2
0x4006f5f	          0x4d85ff	                           test r15, r15	      5265	memline.c	FUNCTION_61	IF_15
0x4006f62	     0xf84d8fdffff	                            je 0x4006d40	      5265	memline.c	FUNCTION_61	IF_15
0x4006f68	    0x418bb0741400	           mov esi, dword [r8 + 0x1474] 	      5273	memline.c	FUNCTION_61	IF_15	IF_17
0x4006f6f	      0x4a8d443bff	                lea rax, [rbx + r15 - 1]	      5269	memline.c	FUNCTION_61	IF_15	IF_16
0x4006f74	        0x4183fe01	                             cmp r14d, 1	      5268	memline.c	FUNCTION_61	IF_15	IF_16
0x4006f78	        0x480f44d8	                          cmove rbx, rax	      5269	memline.c	FUNCTION_61	IF_15	IF_16
0x4006f7c	            0x85f6	                           test esi, esi	      5273	memline.c	FUNCTION_61	IF_15	IF_17
0x4006f7e	     0xf8517010000	                           jne 0x400709b	      5273	memline.c	FUNCTION_61	IF_15	IF_17
0x4006f84	    0x418b90701400	           mov edx, dword [r8 + 0x1470] 	      5273	memline.c	FUNCTION_61	IF_15	IF_17
0x4006f8b	          0x4889d8	                            mov rax, rbx	      5273	memline.c	FUNCTION_61	IF_15	IF_17
0x4006f8e	            0x85d2	                           test edx, edx	      5273	memline.c	FUNCTION_61	IF_15	IF_17
0x4006f90	     0xf85aafdffff	                           jne 0x4006d40	      5273	memline.c	FUNCTION_61	IF_15	IF_17
0x4006f96	          0x4d3b38	                     cmp r15, qword [r8]	      5274	memline.c	FUNCTION_61	IF_15	IF_17
0x4006f99	     0xf85a1fdffff	                           jne 0x4006d40	      5274	memline.c	FUNCTION_61	IF_15	IF_17
0x4006f9f	        0x8b542424	            mov edx, dword [rsp + 0x24] 	      5275	memline.c	FUNCTION_61	IF_15	IF_17
0x4006fa3	          0x83c201	                              add edx, 1	      5275	memline.c	FUNCTION_61	IF_15	IF_17
0x4006fa6	          0x4863d2	                         movsxd rdx, edx	      5275	memline.c	FUNCTION_61	IF_15	IF_17
0x4006fa9	          0x4829d0	                            sub rax, rdx	      5275	memline.c	FUNCTION_61	IF_15	IF_17
0x4006fac	      0xe98ffdffff	                           jmp 0x4006d40	      5275	memline.c	FUNCTION_61	IF_15	IF_17
0x4006fb1	     0xf1f80000000	                         nop dword [rax]	      5275	memline.c	FUNCTION_61	IF_15	IF_17
0x4006fb8	        0x418d42ff	                      lea eax, [r10 - 1]	      5220	memline.c	FUNCTION_61	WHILE_2	ELSE_2
0x4006fbc	            0x4898	                                    cdqe	      5220	memline.c	FUNCTION_61	WHILE_2	ELSE_2
0x4006fbe	      0x418b448118	     mov eax, dword [r9 + rax*4 + 0x18] 	      5220	memline.c	FUNCTION_61	WHILE_2	ELSE_2
0x4006fc3	      0x25ffffff7f	                     and eax, 0x7fffffff	      5220	memline.c	FUNCTION_61	WHILE_2	ELSE_2
0x4006fc8	    0x48837c240800	                  cmp qword [rsp + 8], 0	      5222	memline.c	FUNCTION_61	WHILE_2	IF_7
0x4006fce	        0x89442414	             mov dword [rsp + 0x14], eax	      5220	memline.c	FUNCTION_61	WHILE_2	ELSE_2
0x4006fd2	     0xf84c3feffff	                            je 0x4006e9b	      5222	memline.c	FUNCTION_61	WHILE_2	IF_7
0x4006fd8	          0x4489c0	                            mov eax, r8d	      5224	memline.c	FUNCTION_61	WHILE_2	IF_7	IF_8
0x4006fdb	          0x4429d0	                           sub eax, r10d	      5224	memline.c	FUNCTION_61	WHILE_2	IF_7	IF_8
0x4006fde	            0x4898	                                    cdqe	      5224	memline.c	FUNCTION_61	WHILE_2	IF_7	IF_8
0x4006fe0	          0x4c01e0	                            add rax, r12	      5224	memline.c	FUNCTION_61	WHILE_2	IF_7	IF_8
0x4006fe3	      0x4839442408	                cmp qword [rsp + 8], rax	      5224	memline.c	FUNCTION_61	WHILE_2	IF_7	IF_8
0x4006fe8	            0x7f26	                            jg 0x4007010	      5224	memline.c	FUNCTION_61	WHILE_2	IF_7	IF_8
0x4006fea	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      5225	memline.c	FUNCTION_61	WHILE_2	IF_7	IF_8
0x4006fee	          0x4401d0	                           add eax, r10d	      5225	memline.c	FUNCTION_61	WHILE_2	IF_7	IF_8
0x4006ff1	            0x29d0	                            sub eax, edx	      5225	memline.c	FUNCTION_61	WHILE_2	IF_7	IF_8
0x4006ff3	          0x4863d0	                         movsxd rdx, eax	      5225	memline.c	FUNCTION_61	WHILE_2	IF_7	IF_8
0x4006ff6	      0x418b4c9118	     mov ecx, dword [r9 + rdx*4 + 0x18] 	      5225	memline.c	FUNCTION_61	WHILE_2	IF_7	IF_8
0x4006ffb	      0xe917ffffff	                           jmp 0x4006f17	      5225	memline.c	FUNCTION_61	WHILE_2	IF_7	IF_8
0x4007000	    0xc74424180000	               mov dword [rsp + 0x18], 0	      5231	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4
0x4007008	      0xe90affffff	                           jmp 0x4006f17	      5231	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4
0x400700d	           0xf1f00	                         nop dword [rax]	      5231	memline.c	FUNCTION_61	WHILE_2	ELSE_3	ELSE_4
0x4007010	        0x418d40ff	                       lea eax, [r8 - 1]	      5227	memline.c	FUNCTION_61	WHILE_2	IF_7	ELSE_3
0x4007014	          0x4863d0	                         movsxd rdx, eax	      5227	memline.c	FUNCTION_61	WHILE_2	IF_7	ELSE_3
0x4007017	      0x418b4c9118	     mov ecx, dword [r9 + rdx*4 + 0x18] 	      5227	memline.c	FUNCTION_61	WHILE_2	IF_7	ELSE_3
0x400701c	      0xe9f6feffff	                           jmp 0x4006f17	      5227	memline.c	FUNCTION_61	WHILE_2	IF_7	ELSE_3
0x4007021	       0xfb64c241f	           movzx ecx, byte [rsp + 0x1f] 	      5250	memline.c	FUNCTION_61	WHILE_2	IF_11	IF_12
0x4007026	          0x4489d6	                           mov esi, r10d	      5250	memline.c	FUNCTION_61	WHILE_2	IF_11	IF_12
0x4007029	          0x4d89f8	                             mov r8, r15	      5250	memline.c	FUNCTION_61	WHILE_2	IF_11	IF_12
0x400702c	          0x4801d9	                            add rcx, rbx	      5250	memline.c	FUNCTION_61	WHILE_2	IF_11	IF_12
0x400702f	          0x4839cd	                            cmp rbp, rcx	      5250	memline.c	FUNCTION_61	WHILE_2	IF_11	IF_12
0x4007032	            0x747e	                            je 0x40070b2	      5250	memline.c	FUNCTION_61	WHILE_2	IF_11	IF_12
0x4007034	          0x4829dd	                            sub rbp, rbx	      5253	memline.c	FUNCTION_61	WHILE_2	IF_11	ELSE_5	IF_13
0x4007037	          0x4439d0	                           cmp eax, r10d	      5252	memline.c	FUNCTION_61	WHILE_2	IF_11	ELSE_5	IF_13
0x400703a	     0xf8480000000	                            je 0x40070c0	      5252	memline.c	FUNCTION_61	WHILE_2	IF_11	ELSE_5	IF_13
0x4007040	          0x4801d5	                            add rbp, rdx	      5255	memline.c	FUNCTION_61	WHILE_2	IF_11	ELSE_6
0x4007043	          0x8d50ff	                      lea edx, [rax - 1]	      5256	memline.c	FUNCTION_61	WHILE_2	IF_11	ELSE_6
0x4007046	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	      5255	memline.c	FUNCTION_61	WHILE_2	IF_11	ELSE_6
0x400704a	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      5255	memline.c	FUNCTION_61	WHILE_2	IF_11	ELSE_6
0x400704f	          0x4863d2	                         movsxd rdx, edx	      5256	memline.c	FUNCTION_61	WHILE_2	IF_11	ELSE_6
0x4007052	      0x418b549118	     mov edx, dword [r9 + rdx*4 + 0x18] 	      5255	memline.c	FUNCTION_61	WHILE_2	IF_11	ELSE_6
0x4007057	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      5255	memline.c	FUNCTION_61	WHILE_2	IF_11	ELSE_6
0x400705d	            0x29d1	                            sub ecx, edx	      5255	memline.c	FUNCTION_61	WHILE_2	IF_11	ELSE_6
0x400705f	          0x4829cd	                            sub rbp, rcx	      5255	memline.c	FUNCTION_61	WHILE_2	IF_11	ELSE_6
0x4007062	          0x48892f	                    mov qword [rdi], rbp	      5255	memline.c	FUNCTION_61	WHILE_2	IF_11	ELSE_6
0x4007065	            0x29f0	                            sub eax, esi	      5257	memline.c	FUNCTION_61	WHILE_2	IF_11
0x4007067	         0x3442418	             add eax, dword [rsp + 0x18]	      5257	memline.c	FUNCTION_61	WHILE_2	IF_11
0x400706b	            0x4898	                                    cdqe	      5257	memline.c	FUNCTION_61	WHILE_2	IF_11
0x400706d	          0x4c01e0	                            add rax, r12	      5257	memline.c	FUNCTION_61	WHILE_2	IF_11
0x4007070	          0x493b00	                     cmp rax, qword [r8]	      5258	memline.c	FUNCTION_61	WHILE_2	IF_11	IF_14
0x4007073	     0xf8ec7fcffff	                           jle 0x4006d40	      5258	memline.c	FUNCTION_61	WHILE_2	IF_11	IF_14
0x4007079	        0x4883c438	                           add rsp, 0x38	      5279	memline.c	FUNCTION_61
0x400707d	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      5259	memline.c	FUNCTION_61	WHILE_2	IF_11	IF_14
0x4007084	              0x5b	                                 pop rbx	      5279	memline.c	FUNCTION_61
0x4007085	              0x5d	                                 pop rbp	      5279	memline.c	FUNCTION_61
0x4007086	            0x415c	                                 pop r12	      5279	memline.c	FUNCTION_61
0x4007088	            0x415d	                                 pop r13	      5279	memline.c	FUNCTION_61
0x400708a	            0x415e	                                 pop r14	      5279	memline.c	FUNCTION_61
0x400708c	            0x415f	                                 pop r15	      5279	memline.c	FUNCTION_61
0x400708e	              0xc3	                                     ret	      5279	memline.c	FUNCTION_61
0x400708f	      0xba01000000	                              mov edx, 1	      5279	memline.c	FUNCTION_61
0x4007094	            0x31ed	                            xor ebp, ebp	      5183	memline.c	FUNCTION_61	IF_2
0x4007096	      0xe997fcffff	                           jmp 0x4006d32	      5183	memline.c	FUNCTION_61	IF_2
0x400709b	    0x418b88081400	           mov ecx, dword [r8 + 0x1408] 	      5273	memline.c	FUNCTION_61	IF_15	IF_17
0x40070a2	          0x4889d8	                            mov rax, rbx	      5273	memline.c	FUNCTION_61	IF_15	IF_17
0x40070a5	            0x85c9	                           test ecx, ecx	      5273	memline.c	FUNCTION_61	IF_15	IF_17
0x40070a7	     0xf85d7feffff	                           jne 0x4006f84	      5273	memline.c	FUNCTION_61	IF_15	IF_17
0x40070ad	      0xe98efcffff	                           jmp 0x4006d40	      5273	memline.c	FUNCTION_61	IF_15	IF_17
0x40070b2	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      5251	memline.c	FUNCTION_61	WHILE_2	IF_11	IF_12
0x40070b7	    0x48c707000000	                      mov qword [rdi], 0	      5251	memline.c	FUNCTION_61	WHILE_2	IF_11	IF_12
0x40070be	            0xeba5	                           jmp 0x4007065	      5251	memline.c	FUNCTION_61	WHILE_2	IF_11	IF_12
0x40070c0	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      5253	memline.c	FUNCTION_61	WHILE_2	IF_11	ELSE_5	IF_13
0x40070c5	          0x4801ea	                            add rdx, rbp	      5253	memline.c	FUNCTION_61	WHILE_2	IF_11	ELSE_5	IF_13
0x40070c8	          0x488917	                    mov qword [rdi], rdx	      5253	memline.c	FUNCTION_61	WHILE_2	IF_11	ELSE_5	IF_13
0x40070cb	            0xeb98	                           jmp 0x4007065	      5253	memline.c	FUNCTION_61	WHILE_2	IF_11	ELSE_5	IF_13
get_file_in_dir	ELSE,4:SWITCH,0:DO,0:IF,6:FOR,1:functions,0:WHILE,0:CALL,10	66
0x40058b0	            0x4155	                                push r13	      3981	memline.c	FUNCTION_48
0x40058b2	            0x4154	                                push r12	      3981	memline.c	FUNCTION_48
0x40058b4	          0x4989fc	                            mov r12, rdi	      3981	memline.c	FUNCTION_48
0x40058b7	              0x55	                                push rbp	      3981	memline.c	FUNCTION_48
0x40058b8	              0x53	                                push rbx	      3981	memline.c	FUNCTION_48
0x40058b9	          0x4889f3	                            mov rbx, rsi	      3981	memline.c	FUNCTION_48
0x40058bc	        0x4883ec08	                              sub rsp, 8	      3981	memline.c	FUNCTION_48
0x40058c0	      0xe800000000	                          call 0x40058c5	      3987	memline.c	FUNCTION_48	CALL_1
0x40058c5	          0x803b2e	                    cmp byte [rbx], 0x2e	      3989	memline.c	FUNCTION_48	IF_1
0x40058c8	          0x4889c5	                            mov rbp, rax	      3987	memline.c	FUNCTION_48	CALL_1
0x40058cb	            0x7423	                            je 0x40058f0	      3989	memline.c	FUNCTION_48	IF_1
0x40058cd	      0xba01000000	                              mov edx, 1	      4011	memline.c	FUNCTION_48	CALL_8
0x40058d2	          0x4889ee	                            mov rsi, rbp	      4011	memline.c	FUNCTION_48	CALL_8
0x40058d5	          0x4889df	                            mov rdi, rbx	      4011	memline.c	FUNCTION_48	CALL_8
0x40058d8	        0x4883c408	                              add rsp, 8	      4021	memline.c	FUNCTION_48
0x40058dc	              0x5b	                                 pop rbx	      4021	memline.c	FUNCTION_48
0x40058dd	              0x5d	                                 pop rbp	      4021	memline.c	FUNCTION_48
0x40058de	            0x415c	                                 pop r12	      4021	memline.c	FUNCTION_48
0x40058e0	            0x415d	                                 pop r13	      4021	memline.c	FUNCTION_48
0x40058e2	      0xe900000000	                           jmp 0x40058e7	      4011	memline.c	FUNCTION_48	CALL_8
0x40058e7	    0x660f1f840000	                    nop word [rax + rax]	      4011	memline.c	FUNCTION_48	CALL_8
0x40058f0	         0xfb67b01	               movzx edi, byte [rbx + 1]	      3989	memline.c	FUNCTION_48	IF_1
0x40058f4	          0x4084ff	                           test dil, dil	      3989	memline.c	FUNCTION_48	IF_1
0x40058f7	            0x746f	                            je 0x4005968	      3989	memline.c	FUNCTION_48	IF_1
0x40058f9	      0xe800000000	                          call 0x40058fe	      3991	memline.c	FUNCTION_48	ELSE_1	IF_2	CALL_3
0x40058fe	            0x85c0	                           test eax, eax	      3991	memline.c	FUNCTION_48	ELSE_1	IF_2	CALL_3
0x4005900	            0x74cb	                            je 0x40058cd	      3991	memline.c	FUNCTION_48	ELSE_1	IF_2	CALL_3
0x4005902	          0x4939ec	                            cmp r12, rbp	      3993	memline.c	FUNCTION_48	ELSE_1	IF_2	IF_3
0x4005905	        0x488d7b02	                      lea rdi, [rbx + 2]	      3994	memline.c	FUNCTION_48	ELSE_1	IF_2	CALL_4
0x4005909	      0xba01000000	                              mov edx, 1	      3994	memline.c	FUNCTION_48	ELSE_1	IF_2	CALL_4
0x400590e	          0x4c89e6	                            mov rsi, r12	      3994	memline.c	FUNCTION_48	ELSE_1	IF_2	CALL_4
0x4005911	            0x74c5	                            je 0x40058d8	      3993	memline.c	FUNCTION_48	ELSE_1	IF_2	IF_3
0x4005913	      0x440fb66d00	                  movzx r13d, byte [rbp]	      3997	memline.c	FUNCTION_48	ELSE_1	IF_2	ELSE_2
0x4005918	        0x488d7302	                      lea rsi, [rbx + 2]	      3999	memline.c	FUNCTION_48	ELSE_1	IF_2	ELSE_2	CALL_5
0x400591c	        0xc6450000	                       mov byte [rbp], 0	      3998	memline.c	FUNCTION_48	ELSE_1	IF_2	ELSE_2
0x4005920	      0xba01000000	                              mov edx, 1	      3999	memline.c	FUNCTION_48	ELSE_1	IF_2	ELSE_2	CALL_5
0x4005925	          0x4c89e7	                            mov rdi, r12	      3999	memline.c	FUNCTION_48	ELSE_1	IF_2	ELSE_2	CALL_5
0x4005928	      0xe800000000	                          call 0x400592d	      3999	memline.c	FUNCTION_48	ELSE_1	IF_2	ELSE_2	CALL_5
0x400592d	          0x4885c0	                           test rax, rax	      4001	memline.c	FUNCTION_48	ELSE_1	IF_2	ELSE_2	IF_4
0x4005930	          0x4889c3	                            mov rbx, rax	      3999	memline.c	FUNCTION_48	ELSE_1	IF_2	ELSE_2	CALL_5
0x4005933	        0x44886d00	                    mov byte [rbp], r13b	      4000	memline.c	FUNCTION_48	ELSE_1	IF_2	ELSE_2
0x4005937	            0x7441	                            je 0x400597a	      4001	memline.c	FUNCTION_48	ELSE_1	IF_2	ELSE_2	IF_4
0x4005939	          0x4889ee	                            mov rsi, rbp	      4005	memline.c	FUNCTION_48	ELSE_1	IF_2	ELSE_2	ELSE_3	CALL_6
0x400593c	          0x4889c7	                            mov rdi, rax	      4005	memline.c	FUNCTION_48	ELSE_1	IF_2	ELSE_2	ELSE_3	CALL_6
0x400593f	      0xba01000000	                              mov edx, 1	      4005	memline.c	FUNCTION_48	ELSE_1	IF_2	ELSE_2	ELSE_3	CALL_6
0x4005944	      0xe800000000	                          call 0x4005949	      4005	memline.c	FUNCTION_48	ELSE_1	IF_2	ELSE_2	ELSE_3	CALL_6
0x4005949	          0x4889df	                            mov rdi, rbx	      4006	memline.c	FUNCTION_48	ELSE_1	IF_2	ELSE_2	ELSE_3	CALL_7
0x400594c	          0x4889c5	                            mov rbp, rax	      4005	memline.c	FUNCTION_48	ELSE_1	IF_2	ELSE_2	ELSE_3	CALL_6
0x400594f	      0xe800000000	                          call 0x4005954	      4006	memline.c	FUNCTION_48	ELSE_1	IF_2	ELSE_2	ELSE_3	CALL_7
0x4005954	        0x4883c408	                              add rsp, 8	      4021	memline.c	FUNCTION_48
0x4005958	          0x4889e8	                            mov rax, rbp	      4021	memline.c	FUNCTION_48
0x400595b	              0x5b	                                 pop rbx	      4021	memline.c	FUNCTION_48
0x400595c	              0x5d	                                 pop rbp	      4021	memline.c	FUNCTION_48
0x400595d	            0x415c	                                 pop r12	      4021	memline.c	FUNCTION_48
0x400595f	            0x415d	                                 pop r13	      4021	memline.c	FUNCTION_48
0x4005961	              0xc3	                                     ret	      4021	memline.c	FUNCTION_48
0x4005962	    0x660f1f440000	                    nop word [rax + rax]	      4021	memline.c	FUNCTION_48
0x4005968	        0x4883c408	                              add rsp, 8	      4021	memline.c	FUNCTION_48
0x400596c	          0x4c89e7	                            mov rdi, r12	      3990	memline.c	FUNCTION_48	CALL_2
0x400596f	              0x5b	                                 pop rbx	      4021	memline.c	FUNCTION_48
0x4005970	              0x5d	                                 pop rbp	      4021	memline.c	FUNCTION_48
0x4005971	            0x415c	                                 pop r12	      4021	memline.c	FUNCTION_48
0x4005973	            0x415d	                                 pop r13	      4021	memline.c	FUNCTION_48
0x4005975	      0xe900000000	                           jmp 0x400597a	      3990	memline.c	FUNCTION_48	CALL_2
0x400597a	            0x31ed	                            xor ebp, ebp	      4002	memline.c	FUNCTION_48	ELSE_1	IF_2	ELSE_2	IF_4
0x400597c	            0xebd6	                           jmp 0x4005954	      4002	memline.c	FUNCTION_48	ELSE_1	IF_2	ELSE_2	IF_4
ml_timestamp	ELSE,0:SWITCH,0:DO,0:IF,0:FOR,0:functions,0:WHILE,0:CALL,1	2
0x4002a90	            0x31f6	                            xor esi, esi	       906	memline.c	FUNCTION_12	CALL_1
0x4002a92	      0xe939e9ffff	                   jmp sym.ml_upd_block0	       906	memline.c	FUNCTION_12	CALL_1
make_percent_swname	ELSE,0:SWITCH,0:DO,0:IF,3:FOR,1:functions,0:WHILE,0:CALL,9	67
0x4000e40	            0x4155	                                push r13	      2017	memline.c	FUNCTION_20
0x4000e42	            0x4154	                                push r12	      2017	memline.c	FUNCTION_20
0x4000e44	          0x4989fd	                            mov r13, rdi	      2017	memline.c	FUNCTION_20
0x4000e47	              0x55	                                push rbp	      2017	memline.c	FUNCTION_20
0x4000e48	              0x53	                                push rbx	      2017	memline.c	FUNCTION_20
0x4000e49	      0xbf00000000	                              mov edi, 0	      2020	memline.c	FUNCTION_20	CALL_1
0x4000e4e	        0x4883ec08	                              sub rsp, 8	      2017	memline.c	FUNCTION_20
0x4000e52	          0x4885f6	                           test rsi, rsi	      2020	memline.c	FUNCTION_20	CALL_1
0x4000e55	        0x480f45fe	                         cmovne rdi, rsi	      2020	memline.c	FUNCTION_20	CALL_1
0x4000e59	      0xe800000000	                          call 0x4000e5e	      2020	memline.c	FUNCTION_20	CALL_1
0x4000e5e	          0x4885c0	                           test rax, rax	      2022	memline.c	FUNCTION_20	IF_1
0x4000e61	     0xf84a6000000	                            je 0x4000f0d	      2022	memline.c	FUNCTION_20	IF_1
0x4000e67	          0x4889c7	                            mov rdi, rax	      2024	memline.c	FUNCTION_20	IF_1	CALL_3
0x4000e6a	          0x4989c4	                            mov r12, rax	      2024	memline.c	FUNCTION_20	IF_1	CALL_3
0x4000e6d	            0x31db	                            xor ebx, ebx	      2021	memline.c	FUNCTION_20
0x4000e6f	      0xe800000000	                          call 0x4000e74	      2024	memline.c	FUNCTION_20	IF_1	CALL_3
0x4000e74	          0x8d7801	                      lea edi, [rax + 1]	      2024	memline.c	FUNCTION_20	IF_1	CALL_3
0x4000e77	      0xe800000000	                          call 0x4000e7c	      2024	memline.c	FUNCTION_20	IF_1	CALL_3
0x4000e7c	          0x4885c0	                           test rax, rax	      2025	memline.c	FUNCTION_20	IF_1	IF_2
0x4000e7f	          0x4889c5	                            mov rbp, rax	      2024	memline.c	FUNCTION_20	IF_1	CALL_3
0x4000e82	            0x7473	                            je 0x4000ef7	      2025	memline.c	FUNCTION_20	IF_1	IF_2
0x4000e84	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_69	CALL_3
0x4000e87	          0x4c89e6	                            mov rsi, r12	       110	string3.h	FUNCTION_69	CALL_3
0x4000e8a	          0x4889eb	                            mov rbx, rbp	      2028	memline.c	FUNCTION_20	IF_1	IF_2	FOR_1	CALL_5
0x4000e8d	      0xe800000000	                          call 0x4000e92	       110	string3.h	FUNCTION_69	CALL_3
0x4000e92	         0xfb67d00	                   movzx edi, byte [rbp]	      2028	memline.c	FUNCTION_20	IF_1	IF_2	FOR_1	CALL_5
0x4000e96	          0x4084ff	                           test dil, dil	      2028	memline.c	FUNCTION_20	IF_1	IF_2	FOR_1	CALL_5
0x4000e99	            0x7510	                           jne 0x4000eab	      2028	memline.c	FUNCTION_20	IF_1	IF_2	FOR_1	CALL_5
0x4000e9b	            0xeb3f	                           jmp 0x4000edc	      2028	memline.c	FUNCTION_20	IF_1	IF_2	FOR_1	CALL_5
0x4000e9d	           0xf1f00	                         nop dword [rax]	      2028	memline.c	FUNCTION_20	IF_1	IF_2	FOR_1	CALL_5
0x4000ea0	          0x4801c3	                            add rbx, rax	      2028	memline.c	FUNCTION_20	IF_1	IF_2	FOR_1	CALL_5
0x4000ea3	           0xfb63b	                   movzx edi, byte [rbx]	      2028	memline.c	FUNCTION_20	IF_1	IF_2	FOR_1	CALL_5
0x4000ea6	          0x4084ff	                           test dil, dil	      2028	memline.c	FUNCTION_20	IF_1	IF_2	FOR_1	CALL_5
0x4000ea9	            0x7431	                            je 0x4000edc	      2028	memline.c	FUNCTION_20	IF_1	IF_2	FOR_1	CALL_5
0x4000eab	      0xe800000000	                          call 0x4000eb0	      2029	memline.c	FUNCTION_20	IF_1	IF_2	FOR_1	IF_3	CALL_6
0x4000eb0	            0x85c0	                           test eax, eax	      2029	memline.c	FUNCTION_20	IF_1	IF_2	FOR_1	IF_3	CALL_6
0x4000eb2	            0x7403	                            je 0x4000eb7	      2029	memline.c	FUNCTION_20	IF_1	IF_2	FOR_1	IF_3	CALL_6
0x4000eb4	          0xc60325	                    mov byte [rbx], 0x25	      2030	memline.c	FUNCTION_20	IF_1	IF_2	FOR_1	IF_3
0x4000eb7	    0x8b1500000000	            mov edx, dword [0x04000ebd] 	      2028	memline.c	FUNCTION_20	IF_1	IF_2	FOR_1	CALL_5
0x4000ebd	      0xb801000000	                              mov eax, 1	      2028	memline.c	FUNCTION_20	IF_1	IF_2	FOR_1	CALL_5
0x4000ec2	            0x85d2	                           test edx, edx	      2028	memline.c	FUNCTION_20	IF_1	IF_2	FOR_1	CALL_5
0x4000ec4	            0x74da	                            je 0x4000ea0	      2028	memline.c	FUNCTION_20	IF_1	IF_2	FOR_1	CALL_5
0x4000ec6	          0x4889df	                            mov rdi, rbx	      2028	memline.c	FUNCTION_20	IF_1	IF_2	FOR_1	CALL_5
0x4000ec9	    0xff1500000000	                 call qword [0x04000ecf]	      2028	memline.c	FUNCTION_20	IF_1	IF_2	FOR_1	CALL_5
0x4000ecf	            0x4898	                                    cdqe	      2028	memline.c	FUNCTION_20	IF_1	IF_2	FOR_1	CALL_5
0x4000ed1	          0x4801c3	                            add rbx, rax	      2028	memline.c	FUNCTION_20	IF_1	IF_2	FOR_1	CALL_5
0x4000ed4	           0xfb63b	                   movzx edi, byte [rbx]	      2028	memline.c	FUNCTION_20	IF_1	IF_2	FOR_1	CALL_5
0x4000ed7	          0x4084ff	                           test dil, dil	      2028	memline.c	FUNCTION_20	IF_1	IF_2	FOR_1	CALL_5
0x4000eda	            0x75cf	                           jne 0x4000eab	      2028	memline.c	FUNCTION_20	IF_1	IF_2	FOR_1	CALL_5
0x4000edc	          0x4c89ef	                            mov rdi, r13	      2031	memline.c	FUNCTION_20	IF_1	IF_2	CALL_7
0x4000edf	      0xba01000000	                              mov edx, 1	      2031	memline.c	FUNCTION_20	IF_1	IF_2	CALL_7
0x4000ee4	          0x4889ee	                            mov rsi, rbp	      2031	memline.c	FUNCTION_20	IF_1	IF_2	CALL_7
0x4000ee7	      0xe800000000	                          call 0x4000eec	      2031	memline.c	FUNCTION_20	IF_1	IF_2	CALL_7
0x4000eec	          0x4889ef	                            mov rdi, rbp	      2032	memline.c	FUNCTION_20	IF_1	IF_2	CALL_8
0x4000eef	          0x4889c3	                            mov rbx, rax	      2031	memline.c	FUNCTION_20	IF_1	IF_2	CALL_7
0x4000ef2	      0xe800000000	                          call 0x4000ef7	      2032	memline.c	FUNCTION_20	IF_1	IF_2	CALL_8
0x4000ef7	          0x4c89e7	                            mov rdi, r12	      2034	memline.c	FUNCTION_20	IF_1	CALL_9
0x4000efa	      0xe800000000	                          call 0x4000eff	      2034	memline.c	FUNCTION_20	IF_1	CALL_9
0x4000eff	        0x4883c408	                              add rsp, 8	      2037	memline.c	FUNCTION_20
0x4000f03	          0x4889d8	                            mov rax, rbx	      2037	memline.c	FUNCTION_20
0x4000f06	              0x5b	                                 pop rbx	      2037	memline.c	FUNCTION_20
0x4000f07	              0x5d	                                 pop rbp	      2037	memline.c	FUNCTION_20
0x4000f08	            0x415c	                                 pop r12	      2037	memline.c	FUNCTION_20
0x4000f0a	            0x415d	                                 pop r13	      2037	memline.c	FUNCTION_20
0x4000f0c	              0xc3	                                     ret	      2037	memline.c	FUNCTION_20
0x4000f0d	            0x31db	                            xor ebx, ebx	      2021	memline.c	FUNCTION_20
0x4000f0f	            0xebee	                           jmp 0x4000eff	      2021	memline.c	FUNCTION_20
ml_open	ELSE,1:SWITCH,0:DO,0:IF,13:FOR,0:functions,0:WHILE,0:CALL,26	196
0x40025f0	            0x4155	                                push r13	       282	memline.c	FUNCTION_1
0x40025f2	            0x4154	                                push r12	       282	memline.c	FUNCTION_1
0x40025f4	              0x55	                                push rbp	       282	memline.c	FUNCTION_1
0x40025f5	              0x53	                                push rbx	       282	memline.c	FUNCTION_1
0x40025f6	          0x4889fb	                            mov rbx, rdi	       282	memline.c	FUNCTION_1
0x40025f9	        0x4883ec08	                              sub rsp, 8	       282	memline.c	FUNCTION_1
0x40025fd	    0x448b05000000	            mov r8d, dword [0x04002604] 	       301	memline.c	FUNCTION_1	IF_1
0x4002604	    0xc74724000000	               mov dword [rdi + 0x24], 0	       292	memline.c	FUNCTION_1
0x400260b	    0x48c747180000	               mov qword [rdi + 0x18], 0	       293	memline.c	FUNCTION_1
0x4002613	    0xc74720000000	               mov dword [rdi + 0x20], 0	       294	memline.c	FUNCTION_1
0x400261a	    0x48c747380000	               mov qword [rdi + 0x38], 0	       295	memline.c	FUNCTION_1
0x4002622	    0x48c747280000	               mov qword [rdi + 0x28], 0	       296	memline.c	FUNCTION_1
0x400262a	          0x4585c0	                           test r8d, r8d	       301	memline.c	FUNCTION_1	IF_1
0x400262d	    0x48c747580000	               mov qword [rdi + 0x58], 0	       298	memline.c	FUNCTION_1
0x4002635	     0xf84bd000000	                            je 0x40026f8	       301	memline.c	FUNCTION_1	IF_1
0x400263b	    0xc78790150000	            mov dword [rdi + 0x1590], 0 	       302	memline.c	FUNCTION_1	IF_1
0x4002645	    0xc78350170000	            mov dword [rbx + 0x1750], 0 	       310	memline.c	FUNCTION_1	ELSE_1
0x400264f	            0x31f6	                            xor esi, esi	       315	memline.c	FUNCTION_1	CALL_1
0x4002651	            0x31ff	                            xor edi, edi	       315	memline.c	FUNCTION_1	CALL_1
0x4002653	      0xe800000000	                          call 0x4002658	       315	memline.c	FUNCTION_1	CALL_1
0x4002658	          0x4885c0	                           test rax, rax	       316	memline.c	FUNCTION_1	IF_3
0x400265b	          0x4889c5	                            mov rbp, rax	       315	memline.c	FUNCTION_1	CALL_1
0x400265e	            0x747e	                            je 0x40026de	       316	memline.c	FUNCTION_1	IF_3
0x4002660	        0x48894308	                mov qword [rbx + 8], rax	       319	memline.c	FUNCTION_1
0x4002664	    0x488998a00400	            mov qword [rax + 0x4a0], rbx	       321	memline.c	FUNCTION_1
0x400266b	            0x31f6	                            xor esi, esi	       332	memline.c	FUNCTION_1	IF_4	CALL_2
0x400266d	    0x488b05000000	            mov rax, qword [0x04002674] 	       326	memline.c	FUNCTION_1
0x4002674	    0xc74310010000	               mov dword [rbx + 0x10], 1	       323	memline.c	FUNCTION_1
0x400267b	      0xba01000000	                              mov edx, 1	       332	memline.c	FUNCTION_1	IF_4	CALL_2
0x4002680	    0x48c703010000	                      mov qword [rbx], 1	       324	memline.c	FUNCTION_1
0x4002687	          0x4889ef	                            mov rdi, rbp	       332	memline.c	FUNCTION_1	IF_4	CALL_2
0x400268a	    0x48c780301900	            mov qword [rax + 0x1930], 0 	       326	memline.c	FUNCTION_1
0x4002695	      0xe800000000	                          call 0x400269a	       332	memline.c	FUNCTION_1	IF_4	CALL_2
0x400269a	          0x4885c0	                           test rax, rax	       332	memline.c	FUNCTION_1	IF_4	CALL_2
0x400269d	          0x4989c5	                            mov r13, rax	       332	memline.c	FUNCTION_1	IF_4	CALL_2
0x40026a0	            0x742f	                            je 0x40026d1	       332	memline.c	FUNCTION_1	IF_4	CALL_2
0x40026a2	      0x4883781000	               cmp qword [rax + 0x10], 0	       334	memline.c	FUNCTION_1	IF_5
0x40026a7	            0x747f	                            je 0x4002728	       334	memline.c	FUNCTION_1	IF_5
0x40026a9	            0x31ff	                            xor edi, edi	       336	memline.c	FUNCTION_1	IF_5	CALL_4
0x40026ab	      0xba05000000	                              mov edx, 5	       336	memline.c	FUNCTION_1	IF_5	CALL_4
0x40026b0	      0xbe00000000	                              mov esi, 0	       336	memline.c	FUNCTION_1	IF_5	CALL_4
0x40026b5	      0xe800000000	                          call 0x40026ba	       336	memline.c	FUNCTION_1	IF_5	CALL_4
0x40026ba	          0x4889c7	                            mov rdi, rax	       336	memline.c	FUNCTION_1	IF_5	CALL_4
0x40026bd	      0xe800000000	                          call 0x40026c2	       336	memline.c	FUNCTION_1	IF_5	CALL_4
0x40026c2	            0x31c9	                            xor ecx, ecx	       420	memline.c	FUNCTION_1	IF_12	CALL_25
0x40026c4	            0x31d2	                            xor edx, edx	       420	memline.c	FUNCTION_1	IF_12	CALL_25
0x40026c6	          0x4c89ee	                            mov rsi, r13	       420	memline.c	FUNCTION_1	IF_12	CALL_25
0x40026c9	          0x4889ef	                            mov rdi, rbp	       420	memline.c	FUNCTION_1	IF_12	CALL_25
0x40026cc	      0xe800000000	                          call 0x40026d1	       420	memline.c	FUNCTION_1	IF_12	CALL_25
0x40026d1	      0xbe01000000	                              mov esi, 1	       421	memline.c	FUNCTION_1	IF_12	CALL_26
0x40026d6	          0x4889ef	                            mov rdi, rbp	       421	memline.c	FUNCTION_1	IF_12	CALL_26
0x40026d9	      0xe800000000	                          call 0x40026de	       421	memline.c	FUNCTION_1	IF_12	CALL_26
0x40026de	    0x48c743080000	                  mov qword [rbx + 8], 0	       423	memline.c	FUNCTION_1
0x40026e6	            0x31c0	                            xor eax, eax	       424	memline.c	FUNCTION_1
0x40026e8	        0x4883c408	                              add rsp, 8	       425	memline.c	FUNCTION_1
0x40026ec	              0x5b	                                 pop rbx	       425	memline.c	FUNCTION_1
0x40026ed	              0x5d	                                 pop rbp	       425	memline.c	FUNCTION_1
0x40026ee	            0x415c	                                 pop r12	       425	memline.c	FUNCTION_1
0x40026f0	            0x415d	                                 pop r13	       425	memline.c	FUNCTION_1
0x40026f2	              0xc3	                                     ret	       425	memline.c	FUNCTION_1
0x40026f3	       0xf1f440000	                   nop dword [rax + rax]	       425	memline.c	FUNCTION_1
0x40026f8	    0x48833d000000	               cmp qword [0x04002700], 0	       307	memline.c	FUNCTION_1	IF_2
0x4002700	     0xf843fffffff	                            je 0x4002645	       307	memline.c	FUNCTION_1	IF_2
0x4002706	    0x8bbf90150000	          mov edi, dword [rdi + 0x1590] 	       307	memline.c	FUNCTION_1	IF_2
0x400270c	            0x85ff	                           test edi, edi	       307	memline.c	FUNCTION_1	IF_2
0x400270e	     0xf8431ffffff	                            je 0x4002645	       307	memline.c	FUNCTION_1	IF_2
0x4002714	    0xc78350170000	            mov dword [rbx + 0x1750], 1 	       308	memline.c	FUNCTION_1	IF_2
0x400271e	      0xe92cffffff	                           jmp 0x400264f	       308	memline.c	FUNCTION_1	IF_2
0x4002723	       0xf1f440000	                   nop dword [rax + rax]	       308	memline.c	FUNCTION_1	IF_2
0x4002728	        0x4c8b6028	            mov r12, qword [rax + 0x28] 	       339	memline.c	FUNCTION_1
0x400272c	      0xb913120000	                         mov ecx, 0x1213	       345	memline.c	FUNCTION_1
0x4002731	      0xba06000000	                              mov edx, 6	       126	string3.h	FUNCTION_71	CALL_3
0x4002736	      0x41c6042462	                    mov byte [r12], 0x62	       341	memline.c	FUNCTION_1
0x400273b	    0x41c644240130	                mov byte [r12 + 1], 0x30	       342	memline.c	FUNCTION_1
0x4002741	      0x498d7c2406	                      lea rdi, [r12 + 6]	       126	string3.h	FUNCTION_71	CALL_3
0x4002746	    0x41c744240256	        mov dword [r12 + 2], 0x204d4956 	       126	string3.h	FUNCTION_71	CALL_3
0x400274f	    0x488b35000000	            mov rsi, qword [0x04002756] 	       126	string3.h	FUNCTION_71	CALL_3
0x4002756	    0x49c78424f003	    mov qword [r12 + 0x3f0], 0x30313233 	       343	memline.c	FUNCTION_1
0x4002762	    0x41c78424f803	    mov dword [r12 + 0x3f8], 0x20212223 	       344	memline.c	FUNCTION_1
0x400276e	    0x6641898c24fc	              mov word [r12 + 0x3fc], cx	       345	memline.c	FUNCTION_1
0x4002777	    0x41c68424fe03	           mov byte [r12 + 0x3fe], 0x55 	       346	memline.c	FUNCTION_1
0x4002780	      0xe800000000	                          call 0x4002785	       126	string3.h	FUNCTION_71	CALL_3
0x4002785	    0x8b8598040000	           mov eax, dword [rbp + 0x498] 	       349	memline.c	FUNCTION_1	CALL_7
0x400278b	            0x89c2	                            mov edx, eax	      4716	memline.c	FUNCTION_54
0x400278d	      0x418844240c	                mov byte [r12 + 0xc], al	      4715	memline.c	FUNCTION_54
0x4002792	          0xc1ea08	                              shr edx, 8	      4716	memline.c	FUNCTION_54
0x4002795	      0x418854240d	                mov byte [r12 + 0xd], dl	      4717	memline.c	FUNCTION_54
0x400279a	            0x89c2	                            mov edx, eax	      4718	memline.c	FUNCTION_54
0x400279c	          0xc1e818	                           shr eax, 0x18	      4721	memline.c	FUNCTION_54
0x400279f	          0xc1ea10	                           shr edx, 0x10	      4718	memline.c	FUNCTION_54
0x40027a2	      0x418844240f	                mov byte [r12 + 0xf], al	      4721	memline.c	FUNCTION_54
0x40027a7	      0x418854240e	                mov byte [r12 + 0xe], dl	      4719	memline.c	FUNCTION_54
0x40027ac	    0x8bb35c170000	          mov esi, dword [rbx + 0x175c] 	       352	memline.c	FUNCTION_1	IF_6
0x40027b2	            0x85f6	                           test esi, esi	       352	memline.c	FUNCTION_1	IF_6
0x40027b4	            0x7462	                            je 0x4002818	       352	memline.c	FUNCTION_1	IF_6
0x40027b6	            0x31c9	                            xor ecx, ecx	       375	memline.c	FUNCTION_1	CALL_15
0x40027b8	      0xba01000000	                              mov edx, 1	       375	memline.c	FUNCTION_1	CALL_15
0x40027bd	          0x4c89ee	                            mov rsi, r13	       375	memline.c	FUNCTION_1	CALL_15
0x40027c0	          0x4889ef	                            mov rdi, rbp	       375	memline.c	FUNCTION_1	CALL_15
0x40027c3	      0xe800000000	                          call 0x40027c8	       375	memline.c	FUNCTION_1	CALL_15
0x40027c8	    0x4883bb581700	             cmp qword [rbx + 0x1758], 0	       376	memline.c	FUNCTION_1	IF_7	CALL_16
0x40027d0	     0xf845a010000	                            je 0x4002930	       376	memline.c	FUNCTION_1	IF_7	CALL_16
0x40027d6	          0x4889ef	                            mov rdi, rbp	       382	memline.c	FUNCTION_1	IF_8	CALL_18
0x40027d9	      0xe862d8ffff	                     call sym.ml_new_ptr	       382	memline.c	FUNCTION_1	IF_8	CALL_18
0x40027de	          0x4885c0	                           test rax, rax	       382	memline.c	FUNCTION_1	IF_8	CALL_18
0x40027e1	          0x4989c5	                            mov r13, rax	       382	memline.c	FUNCTION_1	IF_8	CALL_18
0x40027e4	     0xf84e7feffff	                            je 0x40026d1	       382	memline.c	FUNCTION_1	IF_8	CALL_18
0x40027ea	      0x4883781001	               cmp qword [rax + 0x10], 1	       384	memline.c	FUNCTION_1	IF_9
0x40027ef	     0xf84bb000000	                            je 0x40028b0	       384	memline.c	FUNCTION_1	IF_9
0x40027f5	            0x31ff	                            xor edi, edi	       386	memline.c	FUNCTION_1	IF_9	CALL_20
0x40027f7	      0xba05000000	                              mov edx, 5	       386	memline.c	FUNCTION_1	IF_9	CALL_20
0x40027fc	      0xbe00000000	                              mov esi, 0	       386	memline.c	FUNCTION_1	IF_9	CALL_20
0x4002801	      0xe800000000	                          call 0x4002806	       386	memline.c	FUNCTION_1	IF_9	CALL_20
0x4002806	          0x4889c7	                            mov rdi, rax	       386	memline.c	FUNCTION_1	IF_9	CALL_20
0x4002809	      0xe800000000	                          call 0x400280e	       386	memline.c	FUNCTION_1	IF_9	CALL_20
0x400280e	      0xe9affeffff	                           jmp 0x40026c2	       387	memline.c	FUNCTION_1	IF_9
0x4002813	       0xf1f440000	                   nop dword [rax + rax]	       387	memline.c	FUNCTION_1	IF_9
0x4002818	    0x83bbc8000000	               cmp dword [rbx + 0xc8], 1	       355	memline.c	FUNCTION_1	IF_6
0x400281f	          0x4889df	                            mov rdi, rbx	       356	memline.c	FUNCTION_1	IF_6	CALL_8
0x4002822	            0x19c0	                            sbb eax, eax	       355	memline.c	FUNCTION_1	IF_6
0x4002824	            0xf7d0	                                 not eax	       355	memline.c	FUNCTION_1	IF_6
0x4002826	          0x83e055	                           and eax, 0x55	       355	memline.c	FUNCTION_1	IF_6
0x4002829	    0x41888424ef03	              mov byte [r12 + 0x3ef], al	       355	memline.c	FUNCTION_1	IF_6
0x4002831	      0xe800000000	                          call 0x4002836	       356	memline.c	FUNCTION_1	IF_6	CALL_8
0x4002836	          0x83c001	                              add eax, 1	       356	memline.c	FUNCTION_1	IF_6	CALL_8
0x4002839	          0x4889de	                            mov rsi, rbx	       357	memline.c	FUNCTION_1	IF_6	CALL_9
0x400283c	          0x4c89e7	                            mov rdi, r12	       357	memline.c	FUNCTION_1	IF_6	CALL_9
0x400283f	    0x41888424ee03	              mov byte [r12 + 0x3ee], al	       356	memline.c	FUNCTION_1	IF_6	CALL_8
0x4002847	      0xe8d4e8ffff	                   call sym.set_b0_fname	       357	memline.c	FUNCTION_1	IF_6	CALL_9
0x400284c	      0x498d7c241c	                   lea rdi, [r12 + 0x1c]	       358	memline.c	FUNCTION_1	IF_6	CALL_10
0x4002851	      0xbe28000000	                           mov esi, 0x28	       358	memline.c	FUNCTION_1	IF_6	CALL_10
0x4002856	      0xe800000000	                          call 0x400285b	       358	memline.c	FUNCTION_1	IF_6	CALL_10
0x400285b	      0x498d7c2444	                   lea rdi, [r12 + 0x44]	       360	memline.c	FUNCTION_1	IF_6	CALL_11
0x4002860	      0xbe28000000	                           mov esi, 0x28	       360	memline.c	FUNCTION_1	IF_6	CALL_11
0x4002865	    0x41c644244300	                mov byte [r12 + 0x43], 0	       359	memline.c	FUNCTION_1	IF_6
0x400286b	      0xe800000000	                          call 0x4002870	       360	memline.c	FUNCTION_1	IF_6	CALL_11
0x4002870	    0x41c644246b00	                mov byte [r12 + 0x6b], 0	       361	memline.c	FUNCTION_1	IF_6
0x4002876	      0xe800000000	                          call 0x400287b	       362	memline.c	FUNCTION_1	IF_6	CALL_13
0x400287b	            0x89c2	                            mov edx, eax	      4716	memline.c	FUNCTION_54
0x400287d	      0x4188442418	               mov byte [r12 + 0x18], al	      4715	memline.c	FUNCTION_54
0x4002882	          0x4c89e6	                            mov rsi, r12	       364	memline.c	FUNCTION_1	IF_6	CALL_14
0x4002885	          0xc1ea08	                              shr edx, 8	      4716	memline.c	FUNCTION_54
0x4002888	          0x4889df	                            mov rdi, rbx	       364	memline.c	FUNCTION_1	IF_6	CALL_14
0x400288b	      0x4188542419	               mov byte [r12 + 0x19], dl	      4717	memline.c	FUNCTION_54
0x4002890	            0x89c2	                            mov edx, eax	      4718	memline.c	FUNCTION_54
0x4002892	          0xc1e818	                           shr eax, 0x18	      4721	memline.c	FUNCTION_54
0x4002895	          0xc1ea10	                           shr edx, 0x10	      4718	memline.c	FUNCTION_54
0x4002898	      0x418844241b	               mov byte [r12 + 0x1b], al	      4721	memline.c	FUNCTION_54
0x400289d	      0x418854241a	               mov byte [r12 + 0x1a], dl	      4719	memline.c	FUNCTION_54
0x40028a2	      0xe8b9eaffff	                call sym.ml_set_b0_crypt	       364	memline.c	FUNCTION_1	IF_6	CALL_14
0x40028a7	      0xe90affffff	                           jmp 0x40027b6	       364	memline.c	FUNCTION_1	IF_6	CALL_14
0x40028ac	         0xf1f4000	                         nop dword [rax]	       364	memline.c	FUNCTION_1	IF_6	CALL_14
0x40028b0	        0x488b4028	            mov rax, qword [rax + 0x28] 	       389	memline.c	FUNCTION_1
0x40028b4	      0xba01000000	                              mov edx, 1	       390	memline.c	FUNCTION_1
0x40028b9	            0x31c9	                            xor ecx, ecx	       395	memline.c	FUNCTION_1	CALL_21
0x40028bb	          0x4c89ee	                            mov rsi, r13	       395	memline.c	FUNCTION_1	CALL_21
0x40028be	          0x4889ef	                            mov rdi, rbp	       395	memline.c	FUNCTION_1	CALL_21
0x40028c1	        0x66895002	                  mov word [rax + 2], dx	       390	memline.c	FUNCTION_1
0x40028c5	    0x48c740080200	                  mov qword [rax + 8], 2	       391	memline.c	FUNCTION_1
0x40028cd	      0xba01000000	                              mov edx, 1	       395	memline.c	FUNCTION_1	CALL_21
0x40028d2	    0xc74020010000	               mov dword [rax + 0x20], 1	       392	memline.c	FUNCTION_1
0x40028d9	    0x48c740180100	               mov qword [rax + 0x18], 1	       393	memline.c	FUNCTION_1
0x40028e1	    0x48c740100100	               mov qword [rax + 0x10], 1	       394	memline.c	FUNCTION_1
0x40028e9	      0xe800000000	                          call 0x40028ee	       395	memline.c	FUNCTION_1	CALL_21
0x40028ee	            0x31f6	                            xor esi, esi	       400	memline.c	FUNCTION_1	IF_10	CALL_22
0x40028f0	      0xba01000000	                              mov edx, 1	       400	memline.c	FUNCTION_1	IF_10	CALL_22
0x40028f5	          0x4889ef	                            mov rdi, rbp	       400	memline.c	FUNCTION_1	IF_10	CALL_22
0x40028f8	      0xe883d7ffff	                    call sym.ml_new_data	       400	memline.c	FUNCTION_1	IF_10	CALL_22
0x40028fd	          0x4885c0	                           test rax, rax	       400	memline.c	FUNCTION_1	IF_10	CALL_22
0x4002900	          0x4989c5	                            mov r13, rax	       400	memline.c	FUNCTION_1	IF_10	CALL_22
0x4002903	     0xf84c8fdffff	                            je 0x40026d1	       400	memline.c	FUNCTION_1	IF_10	CALL_22
0x4002909	      0x4883781002	               cmp qword [rax + 0x10], 2	       402	memline.c	FUNCTION_1	IF_11
0x400290e	            0x7430	                            je 0x4002940	       402	memline.c	FUNCTION_1	IF_11
0x4002910	            0x31ff	                            xor edi, edi	       404	memline.c	FUNCTION_1	IF_11	CALL_24
0x4002912	      0xba05000000	                              mov edx, 5	       404	memline.c	FUNCTION_1	IF_11	CALL_24
0x4002917	      0xbe00000000	                              mov esi, 0	       404	memline.c	FUNCTION_1	IF_11	CALL_24
0x400291c	      0xe800000000	                          call 0x4002921	       404	memline.c	FUNCTION_1	IF_11	CALL_24
0x4002921	          0x4889c7	                            mov rdi, rax	       404	memline.c	FUNCTION_1	IF_11	CALL_24
0x4002924	      0xe800000000	                          call 0x4002929	       404	memline.c	FUNCTION_1	IF_11	CALL_24
0x4002929	      0xe994fdffff	                           jmp 0x40026c2	       405	memline.c	FUNCTION_1	IF_11
0x400292e	            0x6690	                                     nop	       405	memline.c	FUNCTION_1	IF_11
0x4002930	            0x31f6	                            xor esi, esi	       377	memline.c	FUNCTION_1	CALL_17
0x4002932	          0x4889ef	                            mov rdi, rbp	       377	memline.c	FUNCTION_1	CALL_17
0x4002935	      0xe800000000	                          call 0x400293a	       377	memline.c	FUNCTION_1	CALL_17
0x400293a	      0xe997feffff	                           jmp 0x40027d6	       377	memline.c	FUNCTION_1	CALL_17
0x400293f	              0x90	                                     nop	       377	memline.c	FUNCTION_1	CALL_17
0x4002940	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       408	memline.c	FUNCTION_1
0x4002944	          0x8b4208	                mov eax, dword [rdx + 8]	       409	memline.c	FUNCTION_1
0x4002947	        0x836a0405	                  sub dword [rdx + 4], 5	       410	memline.c	FUNCTION_1
0x400294b	    0x48c742100100	               mov qword [rdx + 0x10], 1	       411	memline.c	FUNCTION_1
0x4002953	          0x83e801	                              sub eax, 1	       409	memline.c	FUNCTION_1
0x4002956	          0x894208	                mov dword [rdx + 8], eax	       409	memline.c	FUNCTION_1
0x4002959	          0x894218	             mov dword [rdx + 0x18], eax	       409	memline.c	FUNCTION_1
0x400295c	        0xc6040200	                 mov byte [rdx + rax], 0	       412	memline.c	FUNCTION_1
0x4002960	      0xb801000000	                              mov eax, 1	       414	memline.c	FUNCTION_1
0x4002965	      0xe97efdffff	                           jmp 0x40026e8	       414	memline.c	FUNCTION_1
ml_get_pos	ELSE,0:SWITCH,0:DO,0:IF,0:FOR,0:functions,0:WHILE,0:CALL,1	10
0x4003980	              0x53	                                push rbx	      2405	memline.c	FUNCTION_26
0x4003981	          0x4889fb	                            mov rbx, rdi	      2405	memline.c	FUNCTION_26
0x4003984	          0x488b37	                    mov rsi, qword [rdi]	      2406	memline.c	FUNCTION_26	CALL_1
0x4003987	    0x488b3d000000	            mov rdi, qword [0x0400398e] 	      2406	memline.c	FUNCTION_26	CALL_1
0x400398e	            0x31d2	                            xor edx, edx	      2406	memline.c	FUNCTION_26	CALL_1
0x4003990	      0xe800000000	                          call 0x4003995	      2406	memline.c	FUNCTION_26	CALL_1
0x4003995	        0x48635308	            movsxd rdx, dword [rbx + 8] 	      2406	memline.c	FUNCTION_26	CALL_1
0x4003999	              0x5b	                                 pop rbx	      2407	memline.c	FUNCTION_26
0x400399a	          0x4801d0	                            add rax, rdx	      2406	memline.c	FUNCTION_26	CALL_1
0x400399d	              0xc3	                                     ret	      2407	memline.c	FUNCTION_26
recov_file_names	ELSE,3:SWITCH,0:DO,0:IF,9:FOR,0:functions,0:WHILE,0:CALL,13	110
0x4000ca0	            0x4157	                                push r15	      2164	memline.c	FUNCTION_22
0x4000ca2	            0x4156	                                push r14	      2164	memline.c	FUNCTION_22
0x4000ca4	          0x4989fe	                            mov r14, rdi	      2164	memline.c	FUNCTION_22
0x4000ca7	            0x4155	                                push r13	      2164	memline.c	FUNCTION_22
0x4000ca9	            0x4154	                                push r12	      2164	memline.c	FUNCTION_22
0x4000cab	              0x55	                                push rbp	      2164	memline.c	FUNCTION_22
0x4000cac	              0x53	                                push rbx	      2164	memline.c	FUNCTION_22
0x4000cad	          0x4889f3	                            mov rbx, rsi	      2164	memline.c	FUNCTION_22
0x4000cb0	        0x4883ec08	                              sub rsp, 8	      2164	memline.c	FUNCTION_22
0x4000cb4	    0x488b05000000	            mov rax, qword [0x04000cbb] 	      2175	memline.c	FUNCTION_22
0x4000cbb	            0x85d2	                           test edx, edx	      2186	memline.c	FUNCTION_22	IF_1
0x4000cbd	    0x448ba8601700	         mov r13d, dword [rax + 0x1760] 	      2175	memline.c	FUNCTION_22
0x4000cc4	    0xc78060170000	            mov dword [rax + 0x1760], 0 	      2177	memline.c	FUNCTION_22
0x4000cce	     0xf840c010000	                            je 0x4000de0	      2186	memline.c	FUNCTION_22	IF_1
0x4000cd4	      0xba01000000	                              mov edx, 1	      2188	memline.c	FUNCTION_22	IF_1	CALL_1
0x4000cd9	      0xbe00000000	                              mov esi, 0	      2188	memline.c	FUNCTION_22	IF_1	CALL_1
0x4000cde	          0x4889df	                            mov rdi, rbx	      2188	memline.c	FUNCTION_22	IF_1	CALL_1
0x4000ce1	      0xe800000000	                          call 0x4000ce6	      2188	memline.c	FUNCTION_22	IF_1	CALL_1
0x4000ce6	          0x4885c0	                           test rax, rax	      2189	memline.c	FUNCTION_22	IF_1	IF_2
0x4000ce9	          0x498906	                    mov qword [r14], rax	      2188	memline.c	FUNCTION_22	IF_1	CALL_1
0x4000cec	     0xf8405010000	                            je 0x4000df7	      2189	memline.c	FUNCTION_22	IF_1	IF_2
0x4000cf2	            0x31d2	                            xor edx, edx	      2200	memline.c	FUNCTION_22	CALL_3
0x4000cf4	      0xbe00000000	                              mov esi, 0	      2200	memline.c	FUNCTION_22	CALL_3
0x4000cf9	          0x4889df	                            mov rdi, rbx	      2200	memline.c	FUNCTION_22	CALL_3
0x4000cfc	      0xe800000000	                          call 0x4000d01	      2200	memline.c	FUNCTION_22	CALL_3
0x4000d01	          0x4885c0	                           test rax, rax	      2202	memline.c	FUNCTION_22	IF_3
0x4000d04	          0x4889c5	                            mov rbp, rax	      2200	memline.c	FUNCTION_22	CALL_3
0x4000d07	        0x49894608	                mov qword [r14 + 8], rax	      2200	memline.c	FUNCTION_22	CALL_3
0x4000d0b	     0xf8419010000	                            je 0x4000e2a	      2202	memline.c	FUNCTION_22	IF_3
0x4000d11	          0x4d8b3e	                    mov r15, qword [r14]	      2206	memline.c	FUNCTION_22	IF_4
0x4000d14	          0x4c89ff	                            mov rdi, r15	      2207	memline.c	FUNCTION_22	IF_4	CALL_5
0x4000d17	      0xe800000000	                          call 0x4000d1c	      2207	memline.c	FUNCTION_22	IF_4	CALL_5
0x4000d1c	          0x4889ef	                            mov rdi, rbp	      2207	memline.c	FUNCTION_22	IF_4	CALL_5
0x4000d1f	          0x4989c4	                            mov r12, rax	      2207	memline.c	FUNCTION_22	IF_4	CALL_5
0x4000d22	      0xe800000000	                          call 0x4000d27	      2207	memline.c	FUNCTION_22	IF_4	CALL_5
0x4000d27	          0x4489e1	                           mov ecx, r12d	      2207	memline.c	FUNCTION_22	IF_4	CALL_5
0x4000d2a	            0x29c1	                            sub ecx, eax	      2207	memline.c	FUNCTION_22	IF_4	CALL_5
0x4000d2c	          0x4863c1	                         movsxd rax, ecx	      2207	memline.c	FUNCTION_22	IF_4	CALL_5
0x4000d2f	            0x85c0	                           test eax, eax	      2208	memline.c	FUNCTION_22	IF_4	IF_5
0x4000d31	            0x7e03	                           jle 0x4000d36	      2208	memline.c	FUNCTION_22	IF_4	IF_5
0x4000d33	          0x4901c7	                            add r15, rax	      2209	memline.c	FUNCTION_22	IF_4	IF_5
0x4000d36	          0x4c89ff	                            mov rdi, r15	      2211	memline.c	FUNCTION_22	IF_4	IF_6	CALL_6
0x4000d39	          0x4889ee	                            mov rsi, rbp	      2211	memline.c	FUNCTION_22	IF_4	IF_6	CALL_6
0x4000d3c	    0x41bf10000000	                          mov r15d, 0x10	      2211	memline.c	FUNCTION_22	IF_4	IF_6	CALL_6
0x4000d42	      0xe800000000	                          call 0x4000d47	      2211	memline.c	FUNCTION_22	IF_4	IF_6	CALL_6
0x4000d47	            0x85c0	                           test eax, eax	      2211	memline.c	FUNCTION_22	IF_4	IF_6	CALL_6
0x4000d49	    0x41bc02000000	                             mov r12d, 2	      2212	memline.c	FUNCTION_22	IF_4	IF_6
0x4000d4f	     0xf84ab000000	                            je 0x4000e00	      2211	memline.c	FUNCTION_22	IF_4	IF_6	CALL_6
0x4000d55	    0x488b05000000	            mov rax, qword [0x04000d5c] 	      2223	memline.c	FUNCTION_22
0x4000d5c	            0x31d2	                            xor edx, edx	      2227	memline.c	FUNCTION_22	CALL_9
0x4000d5e	          0x4889df	                            mov rdi, rbx	      2227	memline.c	FUNCTION_22	CALL_9
0x4000d61	        0x4b8d2c3e	                    lea rbp, [r14 + r15]	      2227	memline.c	FUNCTION_22	CALL_9
0x4000d65	      0xbe00000000	                              mov esi, 0	      2227	memline.c	FUNCTION_22	CALL_9
0x4000d6a	    0xc78060170000	            mov dword [rax + 0x1760], 1 	      2223	memline.c	FUNCTION_22
0x4000d74	      0xe800000000	                          call 0x4000d79	      2227	memline.c	FUNCTION_22	CALL_9
0x4000d79	          0x4885c0	                           test rax, rax	      2229	memline.c	FUNCTION_22	IF_7
0x4000d7c	          0x4889c3	                            mov rbx, rax	      2227	memline.c	FUNCTION_22	CALL_9
0x4000d7f	        0x48894500	                    mov qword [rbp], rax	      2227	memline.c	FUNCTION_22	CALL_9
0x4000d83	            0x743a	                            je 0x4000dbf	      2229	memline.c	FUNCTION_22	IF_7
0x4000d85	          0x4889c7	                            mov rdi, rax	      2236	memline.c	FUNCTION_22	CALL_11
0x4000d88	      0xe800000000	                          call 0x4000d8d	      2236	memline.c	FUNCTION_22	CALL_11
0x4000d8d	      0x4f8b743ef8	          mov r14, qword [r14 + r15 - 8]	      2236	memline.c	FUNCTION_22	CALL_11
0x4000d92	          0x4889c5	                            mov rbp, rax	      2236	memline.c	FUNCTION_22	CALL_11
0x4000d95	          0x4c89f7	                            mov rdi, r14	      2236	memline.c	FUNCTION_22	CALL_11
0x4000d98	      0xe800000000	                          call 0x4000d9d	      2236	memline.c	FUNCTION_22	CALL_11
0x4000d9d	            0x89e9	                            mov ecx, ebp	      2236	memline.c	FUNCTION_22	CALL_11
0x4000d9f	          0x4889de	                            mov rsi, rbx	      2236	memline.c	FUNCTION_22	CALL_11
0x4000da2	            0x29c1	                            sub ecx, eax	      2236	memline.c	FUNCTION_22	CALL_11
0x4000da4	          0x4863c1	                         movsxd rax, ecx	      2236	memline.c	FUNCTION_22	CALL_11
0x4000da7	            0x85c0	                           test eax, eax	      2237	memline.c	FUNCTION_22	IF_8
0x4000da9	            0x7e04	                           jle 0x4000daf	      2237	memline.c	FUNCTION_22	IF_8
0x4000dab	        0x488d3403	                    lea rsi, [rbx + rax]	      2238	memline.c	FUNCTION_22	IF_8
0x4000daf	          0x4c89f7	                            mov rdi, r14	      2239	memline.c	FUNCTION_22	IF_9	CALL_12
0x4000db2	      0xe800000000	                          call 0x4000db7	      2239	memline.c	FUNCTION_22	IF_9	CALL_12
0x4000db7	            0x85c0	                           test eax, eax	      2239	memline.c	FUNCTION_22	IF_9	CALL_12
0x4000db9	            0x7465	                            je 0x4000e20	      2239	memline.c	FUNCTION_22	IF_9	CALL_12
0x4000dbb	        0x4183c401	                             add r12d, 1	      2242	memline.c	FUNCTION_22	ELSE_3
0x4000dbf	    0x488b05000000	            mov rax, qword [0x04000dc6] 	      2247	memline.c	FUNCTION_22	ELSE_3
0x4000dc6	    0x4489a8601700	         mov dword [rax + 0x1760], r13d 	      2247	memline.c	FUNCTION_22	ELSE_3
0x4000dcd	        0x4883c408	                              add rsp, 8	      2251	memline.c	FUNCTION_22	ELSE_3
0x4000dd1	          0x4489e0	                           mov eax, r12d	      2251	memline.c	FUNCTION_22	ELSE_3
0x4000dd4	              0x5b	                                 pop rbx	      2251	memline.c	FUNCTION_22	ELSE_3
0x4000dd5	              0x5d	                                 pop rbp	      2251	memline.c	FUNCTION_22	ELSE_3
0x4000dd6	            0x415c	                                 pop r12	      2251	memline.c	FUNCTION_22	ELSE_3
0x4000dd8	            0x415d	                                 pop r13	      2251	memline.c	FUNCTION_22	ELSE_3
0x4000dda	            0x415e	                                 pop r14	      2251	memline.c	FUNCTION_22	ELSE_3
0x4000ddc	            0x415f	                                 pop r15	      2251	memline.c	FUNCTION_22	ELSE_3
0x4000dde	              0xc3	                                     ret	      2251	memline.c	FUNCTION_22	ELSE_3
0x4000ddf	              0x90	                                     nop	      2251	memline.c	FUNCTION_22	ELSE_3
0x4000de0	            0x31d2	                            xor edx, edx	      2200	memline.c	FUNCTION_22	CALL_3
0x4000de2	      0xbe00000000	                              mov esi, 0	      2200	memline.c	FUNCTION_22	CALL_3
0x4000de7	          0x4889df	                            mov rdi, rbx	      2200	memline.c	FUNCTION_22	CALL_3
0x4000dea	      0xe800000000	                          call 0x4000def	      2200	memline.c	FUNCTION_22	CALL_3
0x4000def	          0x4885c0	                           test rax, rax	      2202	memline.c	FUNCTION_22	IF_3
0x4000df2	          0x498906	                    mov qword [r14], rax	      2200	memline.c	FUNCTION_22	CALL_3
0x4000df5	            0x7511	                           jne 0x4000e08	      2202	memline.c	FUNCTION_22	IF_3
0x4000df7	          0x4531e4	                          xor r12d, r12d	      2180	memline.c	FUNCTION_22
0x4000dfa	            0xebc3	                           jmp 0x4000dbf	      2180	memline.c	FUNCTION_22
0x4000dfc	         0xf1f4000	                         nop dword [rax]	      2180	memline.c	FUNCTION_22
0x4000e00	          0x4889ef	                            mov rdi, rbp	      2214	memline.c	FUNCTION_22	IF_4	CALL_7
0x4000e03	      0xe800000000	                          call 0x4000e08	      2214	memline.c	FUNCTION_22	IF_4	CALL_7
0x4000e08	    0x41bf08000000	                             mov r15d, 8	      2214	memline.c	FUNCTION_22	IF_4	CALL_7
0x4000e0e	    0x41bc01000000	                             mov r12d, 1	      2214	memline.c	FUNCTION_22	IF_4	CALL_7
0x4000e14	      0xe93cffffff	                           jmp 0x4000d55	      2214	memline.c	FUNCTION_22	IF_4	CALL_7
0x4000e19	     0xf1f80000000	                         nop dword [rax]	      2214	memline.c	FUNCTION_22	IF_4	CALL_7
0x4000e20	          0x4889df	                            mov rdi, rbx	      2240	memline.c	FUNCTION_22	CALL_13
0x4000e23	      0xe800000000	                          call 0x4000e28	      2240	memline.c	FUNCTION_22	CALL_13
0x4000e28	            0xeb95	                           jmp 0x4000dbf	      2240	memline.c	FUNCTION_22	CALL_13
0x4000e2a	    0x41bc01000000	                             mov r12d, 1	      2191	memline.c	FUNCTION_22	IF_1
0x4000e30	            0xeb8d	                           jmp 0x4000dbf	      2191	memline.c	FUNCTION_22	IF_1
ml_replace	ELSE,1:SWITCH,0:DO,0:IF,6:FOR,0:functions,0:WHILE,0:CALL,10	79
0x4002ab0	          0x4885f6	                           test rsi, rsi	      3083	memline.c	FUNCTION_34	IF_1
0x4002ab3	     0xf84e7000000	                            je 0x4002ba0	      3083	memline.c	FUNCTION_34	IF_1
0x4002ab9	    0x488b05000000	            mov rax, qword [0x04002ac0] 	      3087	memline.c	FUNCTION_34	IF_2	CALL_1
0x4002ac0	            0x4154	                                push r12	      3082	memline.c	FUNCTION_34
0x4002ac2	          0x4189d4	                           mov r12d, edx	      3082	memline.c	FUNCTION_34
0x4002ac5	              0x55	                                push rbp	      3082	memline.c	FUNCTION_34
0x4002ac6	              0x53	                                push rbx	      3082	memline.c	FUNCTION_34
0x4002ac7	          0x4889fd	                            mov rbp, rdi	      3082	memline.c	FUNCTION_34
0x4002aca	          0x4889f3	                            mov rbx, rsi	      3082	memline.c	FUNCTION_34
0x4002acd	      0x4883780800	                  cmp qword [rax + 8], 0	      3087	memline.c	FUNCTION_34	IF_2	CALL_1
0x4002ad2	     0xf84d0000000	                            je 0x4002ba8	      3087	memline.c	FUNCTION_34	IF_2	CALL_1
0x4002ad8	          0x4585e4	                         test r12d, r12d	      3090	memline.c	FUNCTION_34	IF_3	CALL_2
0x4002adb	            0x7543	                           jne 0x4002b20	      3090	memline.c	FUNCTION_34	IF_3	CALL_2
0x4002add	      0xe800000000	                          call 0x4002ae2	      3093	memline.c	FUNCTION_34	IF_4	CALL_3
0x4002ae2	            0x85c0	                           test eax, eax	      3093	memline.c	FUNCTION_34	IF_4	CALL_3
0x4002ae4	            0x7572	                           jne 0x4002b58	      3093	memline.c	FUNCTION_34	IF_4	CALL_3
0x4002ae6	    0x488b3d000000	            mov rdi, qword [0x04002aed] 	      3099	memline.c	FUNCTION_34	IF_5
0x4002aed	        0x483b6f28	            cmp rbp, qword [rdi + 0x28] 	      3099	memline.c	FUNCTION_34	IF_5
0x4002af1	            0x7445	                            je 0x4002b38	      3099	memline.c	FUNCTION_34	IF_5
0x4002af3	      0xe848040000	                  call sym.ml_flush_line	      3100	memline.c	FUNCTION_34	CALL_9
0x4002af8	    0x488b3d000000	            mov rdi, qword [0x04002aff] 	      3100	memline.c	FUNCTION_34	CALL_9
0x4002aff	          0x8b4710	            mov eax, dword [rdi + 0x10] 	      3100	memline.c	FUNCTION_34	CALL_9
0x4002b02	          0x83e0fc	                     and eax, 0xfffffffc	      3105	memline.c	FUNCTION_34
0x4002b05	        0x48895f30	             mov qword [rdi + 0x30], rbx	      3103	memline.c	FUNCTION_34
0x4002b09	        0x48896f28	             mov qword [rdi + 0x28], rbp	      3104	memline.c	FUNCTION_34
0x4002b0d	          0x83c802	                               or eax, 2	      3105	memline.c	FUNCTION_34
0x4002b10	          0x894710	             mov dword [rdi + 0x10], eax	      3105	memline.c	FUNCTION_34
0x4002b13	      0xb801000000	                              mov eax, 1	      3107	memline.c	FUNCTION_34
0x4002b18	              0x5b	                                 pop rbx	      3108	memline.c	FUNCTION_34
0x4002b19	              0x5d	                                 pop rbp	      3108	memline.c	FUNCTION_34
0x4002b1a	            0x415c	                                 pop r12	      3108	memline.c	FUNCTION_34
0x4002b1c	              0xc3	                                     ret	      3108	memline.c	FUNCTION_34
0x4002b1d	           0xf1f00	                         nop dword [rax]	      3108	memline.c	FUNCTION_34
0x4002b20	          0x4889df	                            mov rdi, rbx	      3090	memline.c	FUNCTION_34	IF_3	CALL_2
0x4002b23	      0xe800000000	                          call 0x4002b28	      3090	memline.c	FUNCTION_34	IF_3	CALL_2
0x4002b28	          0x4885c0	                           test rax, rax	      3090	memline.c	FUNCTION_34	IF_3	CALL_2
0x4002b2b	          0x4889c3	                            mov rbx, rax	      3090	memline.c	FUNCTION_34	IF_3	CALL_2
0x4002b2e	            0x75ad	                           jne 0x4002add	      3090	memline.c	FUNCTION_34	IF_3	CALL_2
0x4002b30	            0x31c0	                            xor eax, eax	      3084	memline.c	FUNCTION_34	IF_1
0x4002b32	            0xebe4	                           jmp 0x4002b18	      3084	memline.c	FUNCTION_34	IF_1
0x4002b34	         0xf1f4000	                         nop dword [rax]	      3084	memline.c	FUNCTION_34	IF_1
0x4002b38	          0x8b4710	            mov eax, dword [rdi + 0x10] 	      3101	memline.c	FUNCTION_34	ELSE_1	IF_6
0x4002b3b	            0xa802	                              test al, 2	      3101	memline.c	FUNCTION_34	ELSE_1	IF_6
0x4002b3d	            0x74c3	                            je 0x4002b02	      3101	memline.c	FUNCTION_34	ELSE_1	IF_6
0x4002b3f	        0x488b7f30	            mov rdi, qword [rdi + 0x30] 	      3102	memline.c	FUNCTION_34	ELSE_1	IF_6
0x4002b43	      0xe800000000	                          call 0x4002b48	      3102	memline.c	FUNCTION_34	ELSE_1	IF_6
0x4002b48	    0x488b3d000000	            mov rdi, qword [0x04002b4f] 	      3102	memline.c	FUNCTION_34	ELSE_1	IF_6
0x4002b4f	          0x8b4710	            mov eax, dword [rdi + 0x10] 	      3102	memline.c	FUNCTION_34	ELSE_1	IF_6
0x4002b52	            0xebae	                           jmp 0x4002b02	      3102	memline.c	FUNCTION_34	ELSE_1	IF_6
0x4002b54	         0xf1f4000	                         nop dword [rax]	      3102	memline.c	FUNCTION_34	ELSE_1	IF_6
0x4002b58	          0x4889ef	                            mov rdi, rbp	      3095	memline.c	FUNCTION_34	IF_4	CALL_6
0x4002b5b	      0xe800000000	                          call 0x4002b60	      3095	memline.c	FUNCTION_34	IF_4	CALL_6
0x4002b60	          0x4889c7	                            mov rdi, rax	      3095	memline.c	FUNCTION_34	IF_4	CALL_6
0x4002b63	      0xe800000000	                          call 0x4002b68	      3095	memline.c	FUNCTION_34	IF_4	CALL_6
0x4002b68	    0x488b3d000000	            mov rdi, qword [0x04002b6f] 	      3095	memline.c	FUNCTION_34	IF_4	CALL_6
0x4002b6f	            0x31d2	                            xor edx, edx	      3095	memline.c	FUNCTION_34	IF_4	CALL_6
0x4002b71	          0x4889ee	                            mov rsi, rbp	      3095	memline.c	FUNCTION_34	IF_4	CALL_6
0x4002b74	          0x4889c1	                            mov rcx, rax	      3095	memline.c	FUNCTION_34	IF_4	CALL_6
0x4002b77	      0xe800000000	                          call 0x4002b7c	      3095	memline.c	FUNCTION_34	IF_4	CALL_6
0x4002b7c	          0x4889df	                            mov rdi, rbx	      3096	memline.c	FUNCTION_34	IF_4	CALL_8
0x4002b7f	      0xe800000000	                          call 0x4002b84	      3096	memline.c	FUNCTION_34	IF_4	CALL_8
0x4002b84	    0x488b3d000000	            mov rdi, qword [0x04002b8b] 	      3096	memline.c	FUNCTION_34	IF_4	CALL_8
0x4002b8b	          0x4189c0	                            mov r8d, eax	      3096	memline.c	FUNCTION_34	IF_4	CALL_8
0x4002b8e	          0x4889d9	                            mov rcx, rbx	      3096	memline.c	FUNCTION_34	IF_4	CALL_8
0x4002b91	            0x31d2	                            xor edx, edx	      3096	memline.c	FUNCTION_34	IF_4	CALL_8
0x4002b93	          0x4889ee	                            mov rsi, rbp	      3096	memline.c	FUNCTION_34	IF_4	CALL_8
0x4002b96	      0xe800000000	                          call 0x4002b9b	      3096	memline.c	FUNCTION_34	IF_4	CALL_8
0x4002b9b	      0xe946ffffff	                           jmp 0x4002ae6	      3096	memline.c	FUNCTION_34	IF_4	CALL_8
0x4002ba0	            0x31c0	                            xor eax, eax	      3084	memline.c	FUNCTION_34	IF_1
0x4002ba2	              0xc3	                                     ret	      3108	memline.c	FUNCTION_34
0x4002ba3	       0xf1f440000	                   nop dword [rax + rax]	      3108	memline.c	FUNCTION_34
0x4002ba8	            0x31d2	                            xor edx, edx	      3087	memline.c	FUNCTION_34	IF_2	CALL_1
0x4002baa	            0x31f6	                            xor esi, esi	      3087	memline.c	FUNCTION_34	IF_2	CALL_1
0x4002bac	            0x31ff	                            xor edi, edi	      3087	memline.c	FUNCTION_34	IF_2	CALL_1
0x4002bae	      0xe800000000	                          call 0x4002bb3	      3087	memline.c	FUNCTION_34	IF_2	CALL_1
0x4002bb3	            0x85c0	                           test eax, eax	      3087	memline.c	FUNCTION_34	IF_2	CALL_1
0x4002bb5	     0xf851dffffff	                           jne 0x4002ad8	      3087	memline.c	FUNCTION_34	IF_2	CALL_1
0x4002bbb	            0x31c0	                            xor eax, eax	      3084	memline.c	FUNCTION_34	IF_1
0x4002bbd	      0xe956ffffff	                           jmp 0x4002b18	      3084	memline.c	FUNCTION_34	IF_1
check_need_swap	ELSE,0:SWITCH,0:DO,0:IF,1:FOR,0:functions,0:WHILE,0:CALL,1	13
0x4006880	    0x488b05000000	            mov rax, qword [0x04006887] 	       836	memline.c	FUNCTION_8	IF_1
0x4006887	    0x8b8850170000	          mov ecx, dword [rax + 0x1750] 	       836	memline.c	FUNCTION_8	IF_1
0x400688d	            0x85c9	                           test ecx, ecx	       836	memline.c	FUNCTION_8	IF_1
0x400688f	            0x740e	                            je 0x400689f	       836	memline.c	FUNCTION_8	IF_1
0x4006891	    0x8b9060150000	          mov edx, dword [rax + 0x1560] 	       836	memline.c	FUNCTION_8	IF_1
0x4006897	            0x85d2	                           test edx, edx	       836	memline.c	FUNCTION_8	IF_1
0x4006899	            0x740d	                            je 0x40068a8	       836	memline.c	FUNCTION_8	IF_1
0x400689b	            0x85ff	                           test edi, edi	       836	memline.c	FUNCTION_8	IF_1
0x400689d	            0x7409	                            je 0x40068a8	       836	memline.c	FUNCTION_8	IF_1
0x400689f	            0xf3c3	                                     ret	       836	memline.c	FUNCTION_8	IF_1
0x40068a1	     0xf1f80000000	                         nop dword [rax]	       836	memline.c	FUNCTION_8	IF_1
0x40068a8	          0x4889c7	                            mov rdi, rax	       837	memline.c	FUNCTION_8	CALL_1
0x40068ab	      0xe9f0fdffff	                    jmp sym.ml_open_file	       837	memline.c	FUNCTION_8	CALL_1
ml_encrypt_data	ELSE,0:SWITCH,0:DO,0:IF,4:FOR,0:functions,0:WHILE,0:CALL,6	66
0x4006b50	            0x4157	                                push r15	      4784	memline.c	FUNCTION_57
0x4006b52	            0x4156	                                push r14	      4784	memline.c	FUNCTION_57
0x4006b54	            0x4155	                                push r13	      4784	memline.c	FUNCTION_57
0x4006b56	            0x4154	                                push r12	      4784	memline.c	FUNCTION_57
0x4006b58	              0x55	                                push rbp	      4784	memline.c	FUNCTION_57
0x4006b59	              0x53	                                push rbx	      4784	memline.c	FUNCTION_57
0x4006b5a	          0x4889f3	                            mov rbx, rsi	      4784	memline.c	FUNCTION_57
0x4006b5d	        0x4883ec18	                           sub rsp, 0x18	      4784	memline.c	FUNCTION_57
0x4006b61	      0x66813e6164	                  cmp word [rsi], 0x6461	      4792	memline.c	FUNCTION_57	IF_1
0x4006b66	            0x7418	                            je 0x4006b80	      4792	memline.c	FUNCTION_57	IF_1
0x4006b68	        0x4883c418	                           add rsp, 0x18	      4818	memline.c	FUNCTION_57
0x4006b6c	          0x4889d8	                            mov rax, rbx	      4818	memline.c	FUNCTION_57
0x4006b6f	              0x5b	                                 pop rbx	      4818	memline.c	FUNCTION_57
0x4006b70	              0x5d	                                 pop rbp	      4818	memline.c	FUNCTION_57
0x4006b71	            0x415c	                                 pop r12	      4818	memline.c	FUNCTION_57
0x4006b73	            0x415d	                                 pop r13	      4818	memline.c	FUNCTION_57
0x4006b75	            0x415e	                                 pop r14	      4818	memline.c	FUNCTION_57
0x4006b77	            0x415f	                                 pop r15	      4818	memline.c	FUNCTION_57
0x4006b79	              0xc3	                                     ret	      4818	memline.c	FUNCTION_57
0x4006b7a	    0x660f1f440000	                    nop word [rax + rax]	      4818	memline.c	FUNCTION_57
0x4006b80	          0x4889d6	                            mov rsi, rdx	      4818	memline.c	FUNCTION_57
0x4006b83	            0x31d2	                            xor edx, edx	      4795	memline.c	FUNCTION_57	CALL_1
0x4006b85	            0x89cd	                            mov ebp, ecx	      4795	memline.c	FUNCTION_57	CALL_1
0x4006b87	      0xe894a3ffff	               call sym.ml_crypt_prepare	      4795	memline.c	FUNCTION_57	CALL_1
0x4006b8c	          0x4885c0	                           test rax, rax	      4796	memline.c	FUNCTION_57	IF_2
0x4006b8f	          0x4989c6	                            mov r14, rax	      4795	memline.c	FUNCTION_57	CALL_1
0x4006b92	            0x74d4	                            je 0x4006b68	      4796	memline.c	FUNCTION_57	IF_2
0x4006b94	            0x89ef	                            mov edi, ebp	      4799	memline.c	FUNCTION_57	CALL_2
0x4006b96	      0xe800000000	                          call 0x4006b9b	      4799	memline.c	FUNCTION_57	CALL_2
0x4006b9b	          0x4885c0	                           test rax, rax	      4800	memline.c	FUNCTION_57	IF_3
0x4006b9e	          0x4989c7	                            mov r15, rax	      4799	memline.c	FUNCTION_57	CALL_2
0x4006ba1	            0x7478	                            je 0x4006c1b	      4800	memline.c	FUNCTION_57	IF_3
0x4006ba3	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      4802	memline.c	FUNCTION_57
0x4006ba7	        0x448b6308	               mov r12d, dword [rbx + 8]	      4803	memline.c	FUNCTION_57
0x4006bab	          0x4889de	                            mov rsi, rbx	        59	string3.h	FUNCTION_64	CALL_3
0x4006bae	          0x4c89ff	                            mov rdi, r15	        59	string3.h	FUNCTION_64	CALL_3
0x4006bb1	      0x4c8d6c8318	          lea r13, [rbx + rax*4 + 0x18] 	      4802	memline.c	FUNCTION_57
0x4006bb6	      0x4489642404	               mov dword [rsp + 4], r12d	      4803	memline.c	FUNCTION_57
0x4006bbb	          0x4901dc	                            add r12, rbx	      4803	memline.c	FUNCTION_57
0x4006bbe	          0x4c89e8	                            mov rax, r13	      4807	memline.c	FUNCTION_57	CALL_3
0x4006bc1	          0x4829d8	                            sub rax, rbx	      4807	memline.c	FUNCTION_57	CALL_3
0x4006bc4	          0x4889c2	                            mov rdx, rax	        59	string3.h	FUNCTION_64	CALL_3
0x4006bc7	      0x4889442408	                mov qword [rsp + 8], rax	      4807	memline.c	FUNCTION_57	CALL_3
0x4006bcc	      0xe800000000	                          call 0x4006bd1	        59	string3.h	FUNCTION_64	CALL_3
0x4006bd1	          0x8b4b08	                mov ecx, dword [rbx + 8]	      4810	memline.c	FUNCTION_57	CALL_4
0x4006bd4	      0x448b4c2404	                mov r9d, dword [rsp + 4]	      4810	memline.c	FUNCTION_57	CALL_4
0x4006bd9	          0x4c89e6	                            mov rsi, r12	      4810	memline.c	FUNCTION_57	CALL_4
0x4006bdc	          0x4c89f7	                            mov rdi, r14	      4810	memline.c	FUNCTION_57	CALL_4
0x4006bdf	          0x4c89fb	                            mov rbx, r15	      4810	memline.c	FUNCTION_57	CALL_4
0x4006be2	          0x4429cd	                            sub ebp, r9d	      4810	memline.c	FUNCTION_57	CALL_4
0x4006be5	          0x4c01f9	                            add rcx, r15	      4810	memline.c	FUNCTION_57	CALL_4
0x4006be8	          0x4863d5	                         movsxd rdx, ebp	      4810	memline.c	FUNCTION_57	CALL_4
0x4006beb	      0xe800000000	                          call 0x4006bf0	      4810	memline.c	FUNCTION_57	CALL_4
0x4006bf0	          0x4c89f7	                            mov rdi, r14	      4811	memline.c	FUNCTION_57	CALL_5
0x4006bf3	      0xe800000000	                          call 0x4006bf8	      4811	memline.c	FUNCTION_57	CALL_5
0x4006bf8	          0x4d39e5	                            cmp r13, r12	      4814	memline.c	FUNCTION_57	IF_4
0x4006bfb	     0xf8367ffffff	                           jae 0x4006b68	      4814	memline.c	FUNCTION_57	IF_4
0x4006c01	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        90	string3.h	FUNCTION_66	CALL_6
0x4006c06	          0x4c89e2	                            mov rdx, r12	        90	string3.h	FUNCTION_66	CALL_6
0x4006c09	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_66	CALL_6
0x4006c0b	          0x4c29ea	                            sub rdx, r13	        90	string3.h	FUNCTION_66	CALL_6
0x4006c0e	          0x4c01ff	                            add rdi, r15	        90	string3.h	FUNCTION_66	CALL_6
0x4006c11	      0xe800000000	                          call 0x4006c16	        90	string3.h	FUNCTION_66	CALL_6
0x4006c16	      0xe94dffffff	                           jmp 0x4006b68	        90	string3.h	FUNCTION_66	CALL_6
0x4006c1b	            0x31db	                            xor ebx, ebx	      4801	memline.c	FUNCTION_57	IF_3
0x4006c1d	      0xe946ffffff	                           jmp 0x4006b68	      4801	memline.c	FUNCTION_57	IF_3
ml_lineadd	ELSE,0:SWITCH,0:DO,0:IF,2:FOR,1:functions,0:WHILE,0:CALL,5	72
0x40000d0	            0x4157	                                push r15	      3803	memline.c	FUNCTION_45
0x40000d2	            0x4156	                                push r14	      3803	memline.c	FUNCTION_45
0x40000d4	            0x4155	                                push r13	      3803	memline.c	FUNCTION_45
0x40000d6	            0x4154	                                push r12	      3803	memline.c	FUNCTION_45
0x40000d8	              0x55	                                push rbp	      3803	memline.c	FUNCTION_45
0x40000d9	              0x53	                                push rbx	      3803	memline.c	FUNCTION_45
0x40000da	        0x4883ec08	                              sub rsp, 8	      3803	memline.c	FUNCTION_45
0x40000de	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      3810	memline.c	FUNCTION_45	FOR_1
0x40000e1	        0x4c8b6f08	                mov r13, qword [rdi + 8]	      3807	memline.c	FUNCTION_45
0x40000e5	          0x83e801	                              sub eax, 1	      3810	memline.c	FUNCTION_45	FOR_1
0x40000e8	            0x7879	                            js 0x4000163	      3810	memline.c	FUNCTION_45	FOR_1
0x40000ea	          0x4c63f0	                         movsxd r14, eax	      3810	memline.c	FUNCTION_45	FOR_1
0x40000ed	            0x89c0	                            mov eax, eax	      3810	memline.c	FUNCTION_45	FOR_1
0x40000ef	          0x4989ff	                            mov r15, rdi	      3810	memline.c	FUNCTION_45	FOR_1
0x40000f2	          0x4c89f5	                            mov rbp, r14	      3810	memline.c	FUNCTION_45	FOR_1
0x40000f5	          0x4929c6	                            sub r14, rax	      3810	memline.c	FUNCTION_45	FOR_1
0x40000f8	          0x4c63e6	                         movsxd r12, esi	      3822	memline.c	FUNCTION_45	FOR_1
0x40000fb	        0x49c1e605	                              shl r14, 5	      3822	memline.c	FUNCTION_45	FOR_1
0x40000ff	        0x48c1e505	                              shl rbp, 5	      3822	memline.c	FUNCTION_45	FOR_1
0x4000103	        0x4983ee20	                           sub r14, 0x20	      3822	memline.c	FUNCTION_45	FOR_1
0x4000107	            0xeb3e	                           jmp 0x4000147	      3822	memline.c	FUNCTION_45	FOR_1
0x4000109	     0xf1f80000000	                         nop dword [rax]	      3822	memline.c	FUNCTION_45	FOR_1
0x4000110	        0x488b4828	            mov rcx, qword [rax + 0x28] 	      3815	memline.c	FUNCTION_45	FOR_1
0x4000114	      0x6681397470	                  cmp word [rcx], 0x7074	      3816	memline.c	FUNCTION_45	FOR_1	IF_2
0x4000119	            0x755d	                           jne 0x4000178	      3816	memline.c	FUNCTION_45	FOR_1	IF_2
0x400011b	        0x48635318	         movsxd rdx, dword [rbx + 0x18] 	      3816	memline.c	FUNCTION_45	FOR_1	IF_2
0x400011f	          0x4889c6	                            mov rsi, rax	      3824	memline.c	FUNCTION_45	FOR_1	CALL_5
0x4000122	          0x4c89ef	                            mov rdi, r13	      3824	memline.c	FUNCTION_45	FOR_1	CALL_5
0x4000125	        0x4883ed20	                           sub rbp, 0x20	      3824	memline.c	FUNCTION_45	FOR_1	CALL_5
0x4000129	        0x48c1e205	                              shl rdx, 5	      3824	memline.c	FUNCTION_45	FOR_1	CALL_5
0x400012d	      0x4c01641110	      add qword [rcx + rdx + 0x10], r12 	      3822	memline.c	FUNCTION_45	FOR_1
0x4000132	        0x4c016310	            add qword [rbx + 0x10], r12 	      3823	memline.c	FUNCTION_45	FOR_1
0x4000136	            0x31c9	                            xor ecx, ecx	      3824	memline.c	FUNCTION_45	FOR_1	CALL_5
0x4000138	      0xba01000000	                              mov edx, 1	      3824	memline.c	FUNCTION_45	FOR_1	CALL_5
0x400013d	      0xe800000000	                          call 0x4000142	      3824	memline.c	FUNCTION_45	FOR_1	CALL_5
0x4000142	          0x4c39f5	                            cmp rbp, r14	      3810	memline.c	FUNCTION_45	FOR_1
0x4000145	            0x741c	                            je 0x4000163	      3810	memline.c	FUNCTION_45	FOR_1
0x4000147	          0x4889eb	                            mov rbx, rbp	      3812	memline.c	FUNCTION_45	FOR_1
0x400014a	        0x49035f18	             add rbx, qword [r15 + 0x18]	      3812	memline.c	FUNCTION_45	FOR_1
0x400014e	      0xba01000000	                              mov edx, 1	      3813	memline.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4000153	          0x4c89ef	                            mov rdi, r13	      3813	memline.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4000156	          0x488b33	                    mov rsi, qword [rbx]	      3813	memline.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4000159	      0xe800000000	                          call 0x400015e	      3813	memline.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x400015e	          0x4885c0	                           test rax, rax	      3813	memline.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4000161	            0x75ad	                           jne 0x4000110	      3813	memline.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4000163	        0x4883c408	                              add rsp, 8	      3826	memline.c	FUNCTION_45
0x4000167	              0x5b	                                 pop rbx	      3826	memline.c	FUNCTION_45
0x4000168	              0x5d	                                 pop rbp	      3826	memline.c	FUNCTION_45
0x4000169	            0x415c	                                 pop r12	      3826	memline.c	FUNCTION_45
0x400016b	            0x415d	                                 pop r13	      3826	memline.c	FUNCTION_45
0x400016d	            0x415e	                                 pop r14	      3826	memline.c	FUNCTION_45
0x400016f	            0x415f	                                 pop r15	      3826	memline.c	FUNCTION_45
0x4000171	              0xc3	                                     ret	      3826	memline.c	FUNCTION_45
0x4000172	    0x660f1f440000	                    nop word [rax + rax]	      3826	memline.c	FUNCTION_45
0x4000178	          0x4889c6	                            mov rsi, rax	      3818	memline.c	FUNCTION_45	FOR_1	IF_2	CALL_2
0x400017b	          0x4c89ef	                            mov rdi, r13	      3818	memline.c	FUNCTION_45	FOR_1	IF_2	CALL_2
0x400017e	            0x31c9	                            xor ecx, ecx	      3818	memline.c	FUNCTION_45	FOR_1	IF_2	CALL_2
0x4000180	            0x31d2	                            xor edx, edx	      3818	memline.c	FUNCTION_45	FOR_1	IF_2	CALL_2
0x4000182	      0xe800000000	                          call 0x4000187	      3818	memline.c	FUNCTION_45	FOR_1	IF_2	CALL_2
0x4000187	            0x31ff	                            xor edi, edi	      3819	memline.c	FUNCTION_45	FOR_1	IF_2	CALL_4
0x4000189	      0xba05000000	                              mov edx, 5	      3819	memline.c	FUNCTION_45	FOR_1	IF_2	CALL_4
0x400018e	      0xbe00000000	                              mov esi, 0	      3819	memline.c	FUNCTION_45	FOR_1	IF_2	CALL_4
0x4000193	      0xe800000000	                          call 0x4000198	      3819	memline.c	FUNCTION_45	FOR_1	IF_2	CALL_4
0x4000198	        0x4883c408	                              add rsp, 8	      3826	memline.c	FUNCTION_45
0x400019c	          0x4889c7	                            mov rdi, rax	      3819	memline.c	FUNCTION_45	FOR_1	IF_2	CALL_4
0x400019f	              0x5b	                                 pop rbx	      3826	memline.c	FUNCTION_45
0x40001a0	              0x5d	                                 pop rbp	      3826	memline.c	FUNCTION_45
0x40001a1	            0x415c	                                 pop r12	      3826	memline.c	FUNCTION_45
0x40001a3	            0x415d	                                 pop r13	      3826	memline.c	FUNCTION_45
0x40001a5	            0x415e	                                 pop r14	      3826	memline.c	FUNCTION_45
0x40001a7	            0x415f	                                 pop r15	      3826	memline.c	FUNCTION_45
0x40001a9	      0xe900000000	                           jmp 0x40001ae	      3819	memline.c	FUNCTION_45	FOR_1	IF_2	CALL_4
ml_get_curline	ELSE,0:SWITCH,0:DO,0:IF,0:FOR,0:functions,0:WHILE,0:CALL,1	5
0x40039a0	    0x488b05000000	            mov rax, qword [0x040039a7] 	      2415	memline.c	FUNCTION_27	CALL_1
0x40039a7	    0x488b3d000000	            mov rdi, qword [0x040039ae] 	      2415	memline.c	FUNCTION_27	CALL_1
0x40039ae	            0x31d2	                            xor edx, edx	      2415	memline.c	FUNCTION_27	CALL_1
0x40039b0	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      2415	memline.c	FUNCTION_27	CALL_1
0x40039b4	      0xe967feffff	                      jmp sym.ml_get_buf	      2415	memline.c	FUNCTION_27	CALL_1
ml_flush_line	ELSE,3:SWITCH,0:DO,0:IF,7:FOR,1:functions,0:WHILE,0:CALL,10	172
0x4002f40	            0x4157	                                push r15	      3403	memline.c	FUNCTION_40
0x4002f42	            0x4156	                                push r14	      3403	memline.c	FUNCTION_40
0x4002f44	            0x4155	                                push r13	      3403	memline.c	FUNCTION_40
0x4002f46	            0x4154	                                push r12	      3403	memline.c	FUNCTION_40
0x4002f48	              0x55	                                push rbp	      3403	memline.c	FUNCTION_40
0x4002f49	              0x53	                                push rbx	      3403	memline.c	FUNCTION_40
0x4002f4a	        0x4883ec38	                           sub rsp, 0x38	      3403	memline.c	FUNCTION_40
0x4002f4e	        0x488b6f28	            mov rbp, qword [rdi + 0x28] 	      3418	memline.c	FUNCTION_40	IF_1
0x4002f52	          0x4885ed	                           test rbp, rbp	      3418	memline.c	FUNCTION_40	IF_1
0x4002f55	            0x741e	                            je 0x4002f75	      3418	memline.c	FUNCTION_40	IF_1
0x4002f57	      0x48837f0800	                  cmp qword [rdi + 8], 0	      3418	memline.c	FUNCTION_40	IF_1
0x4002f5c	            0x7417	                            je 0x4002f75	      3418	memline.c	FUNCTION_40	IF_1
0x4002f5e	        0xf6471002	               test byte [rdi + 0x10], 2	      3421	memline.c	FUNCTION_40	IF_2
0x4002f62	          0x4889fb	                            mov rbx, rdi	      3421	memline.c	FUNCTION_40	IF_2
0x4002f65	     0xf843c010000	                            je 0x40030a7	      3421	memline.c	FUNCTION_40	IF_2
0x4002f6b	    0x8b0500000000	            mov eax, dword [0x04002f71] 	      3425	memline.c	FUNCTION_40	IF_2	IF_3
0x4002f71	            0x85c0	                           test eax, eax	      3425	memline.c	FUNCTION_40	IF_2	IF_3
0x4002f73	            0x7413	                            je 0x4002f88	      3425	memline.c	FUNCTION_40	IF_2	IF_3
0x4002f75	        0x4883c438	                           add rsp, 0x38	      3501	memline.c	FUNCTION_40
0x4002f79	              0x5b	                                 pop rbx	      3501	memline.c	FUNCTION_40
0x4002f7a	              0x5d	                                 pop rbp	      3501	memline.c	FUNCTION_40
0x4002f7b	            0x415c	                                 pop r12	      3501	memline.c	FUNCTION_40
0x4002f7d	            0x415d	                                 pop r13	      3501	memline.c	FUNCTION_40
0x4002f7f	            0x415e	                                 pop r14	      3501	memline.c	FUNCTION_40
0x4002f81	            0x415f	                                 pop r15	      3501	memline.c	FUNCTION_40
0x4002f83	              0xc3	                                     ret	      3501	memline.c	FUNCTION_40
0x4002f84	         0xf1f4000	                         nop dword [rax]	      3501	memline.c	FUNCTION_40
0x4002f88	      0xba13000000	                           mov edx, 0x13	      3432	memline.c	FUNCTION_40	IF_2	CALL_1
0x4002f8d	          0x4889ee	                            mov rsi, rbp	      3432	memline.c	FUNCTION_40	IF_2	CALL_1
0x4002f90	    0xc70500000000	               mov dword [0x04002f9a], 1	      3427	memline.c	FUNCTION_40	IF_2
0x4002f9a	        0x4c8b7730	            mov r14, qword [rdi + 0x30] 	      3430	memline.c	FUNCTION_40	IF_2
0x4002f9e	      0xe87dd2ffff	                   call sym.ml_find_line	      3432	memline.c	FUNCTION_40	IF_2	CALL_1
0x4002fa3	          0x4885c0	                           test rax, rax	      3433	memline.c	FUNCTION_40	IF_2	IF_4
0x4002fa6	     0xf8471010000	                            je 0x400311d	      3433	memline.c	FUNCTION_40	IF_2	IF_4
0x4002fac	        0x4c8b7b40	            mov r15, qword [rbx + 0x40] 	      3438	memline.c	FUNCTION_40	IF_2	ELSE_1
0x4002fb0	        0x4c8b4028	              mov r8, qword [rax + 0x28]	      3437	memline.c	FUNCTION_40	IF_2	ELSE_1
0x4002fb4	          0x4189ea	                           mov r10d, ebp	      3438	memline.c	FUNCTION_40	IF_2	ELSE_1
0x4002fb7	          0x4529fa	                          sub r10d, r15d	      3438	memline.c	FUNCTION_40	IF_2	ELSE_1
0x4002fba	          0x4963c2	                        movsxd rax, r10d	      3438	memline.c	FUNCTION_40	IF_2	ELSE_1
0x4002fbd	        0x4d8d1c80	                   lea r11, [r8 + rax*4]	      3438	memline.c	FUNCTION_40	IF_2	ELSE_1
0x4002fc1	        0x458b6318	           mov r12d, dword [r11 + 0x18] 	      3439	memline.c	FUNCTION_40	IF_2	ELSE_1
0x4002fc5	          0x4489e0	                           mov eax, r12d	      3439	memline.c	FUNCTION_40	IF_2	ELSE_1
0x4002fc8	      0x25ffffff7f	                     and eax, 0x7fffffff	      3439	memline.c	FUNCTION_40	IF_2	ELSE_1
0x4002fcd	          0x4585d2	                         test r10d, r10d	      3441	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_5
0x4002fd0	        0x89442418	             mov dword [rsp + 0x18], eax	      3439	memline.c	FUNCTION_40	IF_2	ELSE_1
0x4002fd4	     0xf84e6000000	                            je 0x40030c0	      3441	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_5
0x4002fda	        0x458b6b14	           mov r13d, dword [r11 + 0x14] 	      3444	memline.c	FUNCTION_40	IF_2	ELSE_1	ELSE_2
0x4002fde	    0x4181e5ffffff	                    and r13d, 0x7fffffff	      3444	memline.c	FUNCTION_40	IF_2	ELSE_1	ELSE_2
0x4002fe5	      0x442b6c2418	            sub r13d, dword [rsp + 0x18]	      3444	memline.c	FUNCTION_40	IF_2	ELSE_1	ELSE_2
0x4002fea	          0x4c89f7	                            mov rdi, r14	      3445	memline.c	FUNCTION_40	IF_2	ELSE_1	CALL_4
0x4002fed	      0x4c89442408	                 mov qword [rsp + 8], r8	      3445	memline.c	FUNCTION_40	IF_2	ELSE_1	CALL_4
0x4002ff2	      0x4c895c2410	             mov qword [rsp + 0x10], r11	      3445	memline.c	FUNCTION_40	IF_2	ELSE_1	CALL_4
0x4002ff7	      0x448954241c	            mov dword [rsp + 0x1c], r10d	      3445	memline.c	FUNCTION_40	IF_2	ELSE_1	CALL_4
0x4002ffc	      0xe800000000	                          call 0x4003001	      3445	memline.c	FUNCTION_40	IF_2	ELSE_1	CALL_4
0x4003001	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      3451	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6
0x4003006	          0x8d4801	                      lea ecx, [rax + 1]	      3445	memline.c	FUNCTION_40	IF_2	ELSE_1	CALL_4
0x4003009	          0x4189c9	                            mov r9d, ecx	      3446	memline.c	FUNCTION_40	IF_2	ELSE_1
0x400300c	        0x418b4004	                 mov eax, dword [r8 + 4]	      3451	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6
0x4003010	          0x4529e9	                           sub r9d, r13d	      3446	memline.c	FUNCTION_40	IF_2	ELSE_1
0x4003013	          0x4139c1	                            cmp r9d, eax	      3451	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6
0x4003016	     0xf8fb4000000	                            jg 0x40030d0	      3451	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6
0x400301c	          0x4585c9	                           test r9d, r9d	      3455	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	IF_7
0x400301f	      0x4c8b5c2410	            mov r11, qword [rsp + 0x10] 	      3455	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	IF_7
0x4003024	     0xf84be000000	                            je 0x40030e8	      3455	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	IF_7
0x400302a	          0x8b7348	            mov esi, dword [rbx + 0x48] 	      3454	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6
0x400302d	      0x448b54241c	           mov r10d, dword [rsp + 0x1c] 	      3455	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	IF_7
0x4003032	          0x8d5601	                      lea edx, [rsi + 1]	      3454	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6
0x4003035	          0x4429fa	                           sub edx, r15d	      3454	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6
0x4003038	          0x4189d7	                           mov r15d, edx	      3454	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6
0x400303b	          0x8d52ff	                      lea edx, [rdx - 1]	      3455	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	IF_7
0x400303e	          0x4139d2	                           cmp r10d, edx	      3455	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	IF_7
0x4003041	     0xf8cf7000000	                            jl 0x400313e	      3455	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	IF_7
0x4003047	          0x4d63e9	                         movsxd r13, r9d	      3455	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	IF_7
0x400304a	          0x4489ca	                            mov edx, r9d	      3455	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	IF_7
0x400304d	      0x4c896c2408	                mov qword [rsp + 8], r13	      3455	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	IF_7
0x4003052	      0x48637c2418	         movsxd rdi, dword [rsp + 0x18] 	        59	string3.h	FUNCTION_64	CALL_3
0x4003057	          0x4489e6	                           mov esi, r12d	      3466	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6
0x400305a	            0x29d0	                            sub eax, edx	      3469	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6
0x400305c	      0x482b7c2408	                sub rdi, qword [rsp + 8]	        59	string3.h	FUNCTION_64	CALL_3
0x4003061	            0x29d6	                            sub esi, edx	      3466	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6
0x4003063	        0x41897318	             mov dword [r11 + 0x18], esi	      3466	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6
0x4003067	        0x41295008	                 sub dword [r8 + 8], edx	      3470	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6
0x400306b	          0x4c89f6	                            mov rsi, r14	        59	string3.h	FUNCTION_64	CALL_3
0x400306e	          0x4863d1	                         movsxd rdx, ecx	        59	string3.h	FUNCTION_64	CALL_3
0x4003071	        0x41894004	                 mov dword [r8 + 4], eax	      3469	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6
0x4003075	        0x498d3c38	                     lea rdi, [r8 + rdi]	        59	string3.h	FUNCTION_64	CALL_3
0x4003079	      0xe800000000	                          call 0x400307e	        59	string3.h	FUNCTION_64	CALL_3
0x400307e	        0x834b100c	              or dword [rbx + 0x10], 0xc	      3474	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6
0x4003082	      0xb903000000	                              mov ecx, 3	      3477	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	CALL_7
0x4003087	          0x4c89ea	                            mov rdx, r13	      3477	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	CALL_7
0x400308a	          0x4889ee	                            mov rsi, rbp	      3477	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	CALL_7
0x400308d	          0x4889df	                            mov rdi, rbx	      3477	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	CALL_7
0x4003090	      0xe8bbd5ffff	                 call sym.ml_updatechunk	      3477	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	CALL_7
0x4003095	          0x4c89f7	                            mov rdi, r14	      3495	memline.c	FUNCTION_40	IF_2	CALL_10
0x4003098	      0xe800000000	                          call 0x400309d	      3495	memline.c	FUNCTION_40	IF_2	CALL_10
0x400309d	    0xc70500000000	               mov dword [0x040030a7], 0	      3497	memline.c	FUNCTION_40	IF_2
0x40030a7	    0x48c743280000	               mov qword [rbx + 0x28], 0	      3500	memline.c	FUNCTION_40
0x40030af	        0x4883c438	                           add rsp, 0x38	      3501	memline.c	FUNCTION_40
0x40030b3	              0x5b	                                 pop rbx	      3501	memline.c	FUNCTION_40
0x40030b4	              0x5d	                                 pop rbp	      3501	memline.c	FUNCTION_40
0x40030b5	            0x415c	                                 pop r12	      3501	memline.c	FUNCTION_40
0x40030b7	            0x415d	                                 pop r13	      3501	memline.c	FUNCTION_40
0x40030b9	            0x415e	                                 pop r14	      3501	memline.c	FUNCTION_40
0x40030bb	            0x415f	                                 pop r15	      3501	memline.c	FUNCTION_40
0x40030bd	              0xc3	                                     ret	      3501	memline.c	FUNCTION_40
0x40030be	            0x6690	                                     nop	      3501	memline.c	FUNCTION_40
0x40030c0	        0x458b680c	              mov r13d, dword [r8 + 0xc]	      3442	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_5
0x40030c4	          0x4129c5	                           sub r13d, eax	      3442	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_5
0x40030c7	      0xe91effffff	                           jmp 0x4002fea	      3442	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_5
0x40030cc	         0xf1f4000	                         nop dword [rax]	      3442	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_5
0x40030d0	          0x483b2b	                    cmp rbp, qword [rbx]	      2590	memline.c	FUNCTION_33	IF_1
0x40030d3	            0x7e2b	                           jle 0x4003100	      2590	memline.c	FUNCTION_33	IF_1
0x40030d5	            0x31d2	                            xor edx, edx	      3492	memline.c	FUNCTION_40	IF_2	ELSE_1	ELSE_3	CALL_9
0x40030d7	          0x4889ee	                            mov rsi, rbp	      3492	memline.c	FUNCTION_40	IF_2	ELSE_1	ELSE_3	CALL_9
0x40030da	          0x4889df	                            mov rdi, rbx	      3492	memline.c	FUNCTION_40	IF_2	ELSE_1	ELSE_3	CALL_9
0x40030dd	      0xe8eefaffff	                  call sym.ml_delete_int	      3492	memline.c	FUNCTION_40	IF_2	ELSE_1	ELSE_3	CALL_9
0x40030e2	            0xebb1	                           jmp 0x4003095	      3492	memline.c	FUNCTION_40	IF_2	ELSE_1	ELSE_3	CALL_9
0x40030e4	         0xf1f4000	                         nop dword [rax]	      3492	memline.c	FUNCTION_40	IF_2	ELSE_1	ELSE_3	CALL_9
0x40030e8	            0x31d2	                            xor edx, edx	      3492	memline.c	FUNCTION_40	IF_2	ELSE_1	ELSE_3	CALL_9
0x40030ea	    0x48c744240800	                  mov qword [rsp + 8], 0	      3492	memline.c	FUNCTION_40	IF_2	ELSE_1	ELSE_3	CALL_9
0x40030f3	          0x4531ed	                          xor r13d, r13d	      3492	memline.c	FUNCTION_40	IF_2	ELSE_1	ELSE_3	CALL_9
0x40030f6	      0xe957ffffff	                           jmp 0x4003052	      3492	memline.c	FUNCTION_40	IF_2	ELSE_1	ELSE_3	CALL_9
0x40030fb	       0xf1f440000	                   nop dword [rax + rax]	      3492	memline.c	FUNCTION_40	IF_2	ELSE_1	ELSE_3	CALL_9
0x4003100	          0x4589e1	                           mov r9d, r12d	      3492	memline.c	FUNCTION_40	IF_2	ELSE_1	ELSE_3	CALL_9
0x4003103	          0x4531c0	                            xor r8d, r8d	      3492	memline.c	FUNCTION_40	IF_2	ELSE_1	ELSE_3	CALL_9
0x4003106	          0x4c89f2	                            mov rdx, r14	      3492	memline.c	FUNCTION_40	IF_2	ELSE_1	ELSE_3	CALL_9
0x4003109	    0x4181e1000000	                     and r9d, 0x80000000	      3492	memline.c	FUNCTION_40	IF_2	ELSE_1	ELSE_3	CALL_9
0x4003110	          0x4889ee	                            mov rsi, rbp	      3492	memline.c	FUNCTION_40	IF_2	ELSE_1	ELSE_3	CALL_9
0x4003113	          0x4889df	                            mov rdi, rbx	      3492	memline.c	FUNCTION_40	IF_2	ELSE_1	ELSE_3	CALL_9
0x4003116	      0xe8f5e3ffff	           call sym.ml_append_int.part.6	      3492	memline.c	FUNCTION_40	IF_2	ELSE_1	ELSE_3	CALL_9
0x400311b	            0xebb8	                           jmp 0x40030d5	      3492	memline.c	FUNCTION_40	IF_2	ELSE_1	ELSE_3	CALL_9
0x400311d	            0x31ff	                            xor edi, edi	      3434	memline.c	FUNCTION_40	IF_2	CALL_3
0x400311f	      0xba05000000	                              mov edx, 5	      3434	memline.c	FUNCTION_40	IF_2	CALL_3
0x4003124	      0xbe00000000	                              mov esi, 0	      3434	memline.c	FUNCTION_40	IF_2	CALL_3
0x4003129	      0xe800000000	                          call 0x400312e	      3434	memline.c	FUNCTION_40	IF_2	CALL_3
0x400312e	          0x4889ee	                            mov rsi, rbp	      3434	memline.c	FUNCTION_40	IF_2	CALL_3
0x4003131	          0x4889c7	                            mov rdi, rax	      3434	memline.c	FUNCTION_40	IF_2	CALL_3
0x4003134	      0xe800000000	                          call 0x4003139	      3434	memline.c	FUNCTION_40	IF_2	CALL_3
0x4003139	      0xe957ffffff	                           jmp 0x4003095	      3434	memline.c	FUNCTION_40	IF_2	CALL_3
0x400313e	        0x418b4008	                 mov eax, dword [r8 + 8]	      3458	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	IF_7	CALL_5
0x4003142	        0x894c2424	             mov dword [rsp + 0x24], ecx	      3458	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	IF_7	CALL_5
0x4003146	          0x4d63e9	                         movsxd r13, r9d	      3458	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	IF_7	CALL_5
0x4003149	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	        59	string3.h	FUNCTION_64	CALL_3
0x400314d	      0x4c895c2428	             mov qword [rsp + 0x28], r11	        59	string3.h	FUNCTION_64	CALL_3
0x4003152	      0x4489542420	            mov dword [rsp + 0x20], r10d	        59	string3.h	FUNCTION_64	CALL_3
0x4003157	      0x44894c241c	             mov dword [rsp + 0x1c], r9d	      3458	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	IF_7	CALL_5
0x400315c	      0x4c89442410	              mov qword [rsp + 0x10], r8	        59	string3.h	FUNCTION_64	CALL_3
0x4003161	      0x4c896c2408	                mov qword [rsp + 8], r13	      3458	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	IF_7	CALL_5
0x4003166	            0x29c1	                            sub ecx, eax	        59	string3.h	FUNCTION_64	CALL_3
0x4003168	        0x498d3400	                     lea rsi, [r8 + rax]	        59	string3.h	FUNCTION_64	CALL_3
0x400316c	          0x4c29e8	                            sub rax, r13	        59	string3.h	FUNCTION_64	CALL_3
0x400316f	        0x498d3c00	                     lea rdi, [r8 + rax]	        59	string3.h	FUNCTION_64	CALL_3
0x4003173	          0x4889ca	                            mov rdx, rcx	        59	string3.h	FUNCTION_64	CALL_3
0x4003176	      0xe800000000	                          call 0x400317b	        59	string3.h	FUNCTION_64	CALL_3
0x400317b	      0x448b542420	           mov r10d, dword [rsp + 0x20] 	      3463	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	IF_7	FOR_1
0x4003180	      0x448b4c241c	            mov r9d, dword [rsp + 0x1c] 	      3463	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	IF_7	FOR_1
0x4003185	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      3463	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	IF_7	FOR_1
0x400318a	        0x8b4c2424	            mov ecx, dword [rsp + 0x24] 	      3463	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	IF_7	FOR_1
0x400318e	      0x4c8b5c2428	            mov r11, qword [rsp + 0x28] 	      3463	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	IF_7	FOR_1
0x4003193	        0x4183c201	                             add r10d, 1	      3463	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	IF_7	FOR_1
0x4003197	          0x4489ca	                            mov edx, r9d	      3463	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	IF_7	FOR_1
0x400319a	          0x4539d7	                          cmp r15d, r10d	      3463	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	IF_7	FOR_1
0x400319d	            0x7e12	                           jle 0x40031b1	      3463	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	IF_7	FOR_1
0x400319f	              0x90	                                     nop	      3463	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	IF_7	FOR_1
0x40031a0	          0x4963c2	                        movsxd rax, r10d	      3463	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	IF_7	FOR_1
0x40031a3	        0x4183c201	                             add r10d, 1	      3463	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	IF_7	FOR_1
0x40031a7	      0x45294c8018	      sub dword [r8 + rax*4 + 0x18], r9d	      3464	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	IF_7	FOR_1
0x40031ac	          0x4539d7	                          cmp r15d, r10d	      3463	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	IF_7	FOR_1
0x40031af	            0x75ef	                           jne 0x40031a0	      3463	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	IF_7	FOR_1
0x40031b1	        0x458b6318	           mov r12d, dword [r11 + 0x18] 	      3463	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	IF_7	FOR_1
0x40031b5	        0x418b4004	                 mov eax, dword [r8 + 4]	      3463	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	IF_7	FOR_1
0x40031b9	      0xe994feffff	                           jmp 0x4003052	      3463	memline.c	FUNCTION_40	IF_2	ELSE_1	IF_6	IF_7	FOR_1
ml_new_ptr	ELSE,0:SWITCH,0:DO,0:IF,1:FOR,0:functions,0:WHILE,0:CALL,1	19
0x4000040	              0x53	                                push rbx	      3529	memline.c	FUNCTION_42
0x4000041	            0x31f6	                            xor esi, esi	      3533	memline.c	FUNCTION_42	IF_1	CALL_1
0x4000043	      0xba01000000	                              mov edx, 1	      3533	memline.c	FUNCTION_42	IF_1	CALL_1
0x4000048	          0x4889fb	                            mov rbx, rdi	      3529	memline.c	FUNCTION_42
0x400004b	      0xe800000000	                          call 0x4000050	      3533	memline.c	FUNCTION_42	IF_1	CALL_1
0x4000050	          0x4885c0	                           test rax, rax	      3533	memline.c	FUNCTION_42	IF_1	CALL_1
0x4000053	            0x7427	                            je 0x400007c	      3533	memline.c	FUNCTION_42	IF_1	CALL_1
0x4000055	        0x488b4828	            mov rcx, qword [rax + 0x28] 	      3536	memline.c	FUNCTION_42
0x4000059	      0xba74700000	                         mov edx, 0x7074	      3537	memline.c	FUNCTION_42
0x400005e	            0x31f6	                            xor esi, esi	      3538	memline.c	FUNCTION_42
0x4000060	          0x668911	                      mov word [rcx], dx	      3537	memline.c	FUNCTION_42
0x4000063	    0x8b9398040000	           mov edx, dword [rbx + 0x498] 	      3539	memline.c	FUNCTION_42
0x4000069	        0x66897102	                  mov word [rcx + 2], si	      3538	memline.c	FUNCTION_42
0x400006d	        0x4883ea28	                           sub rdx, 0x28	      3539	memline.c	FUNCTION_42
0x4000071	        0x48c1ea05	                              shr rdx, 5	      3539	memline.c	FUNCTION_42
0x4000075	          0x83c201	                              add edx, 1	      3539	memline.c	FUNCTION_42
0x4000078	        0x66895104	                  mov word [rcx + 4], dx	      3539	memline.c	FUNCTION_42
0x400007c	              0x5b	                                 pop rbx	      3543	memline.c	FUNCTION_42
0x400007d	              0xc3	                                     ret	      3543	memline.c	FUNCTION_42
ml_delete_int	ELSE,3:SWITCH,0:DO,0:IF,14:FOR,2:functions,0:WHILE,0:CALL,18	243
0x4002bd0	          0x4885f6	                           test rsi, rsi	      3142	memline.c	FUNCTION_36	IF_1
0x4002bd3	     0xf8e77010000	                           jle 0x4002d50	      3142	memline.c	FUNCTION_36	IF_1
0x4002bd9	          0x488b07	                    mov rax, qword [rdi]	      3142	memline.c	FUNCTION_36	IF_1
0x4002bdc	          0x4839c6	                            cmp rsi, rax	      3142	memline.c	FUNCTION_36	IF_1
0x4002bdf	     0xf8f6b010000	                            jg 0x4002d50	      3142	memline.c	FUNCTION_36	IF_1
0x4002be5	            0x4157	                                push r15	      3128	memline.c	FUNCTION_36
0x4002be7	            0x4156	                                push r14	      3128	memline.c	FUNCTION_36
0x4002be9	            0x4155	                                push r13	      3128	memline.c	FUNCTION_36
0x4002beb	            0x4154	                                push r12	      3128	memline.c	FUNCTION_36
0x4002bed	              0x55	                                push rbp	      3128	memline.c	FUNCTION_36
0x4002bee	              0x53	                                push rbx	      3128	memline.c	FUNCTION_36
0x4002bef	        0x4883ec28	                           sub rsp, 0x28	      3128	memline.c	FUNCTION_36
0x4002bf3	    0x488b0d000000	            mov rcx, qword [0x04002bfa] 	      3145	memline.c	FUNCTION_36	IF_2
0x4002bfa	          0x4839ce	                            cmp rsi, rcx	      3145	memline.c	FUNCTION_36	IF_2
0x4002bfd	            0x7d10	                           jge 0x4002c0f	      3145	memline.c	FUNCTION_36	IF_2
0x4002bff	          0x4885c9	                           test rcx, rcx	      3145	memline.c	FUNCTION_36	IF_2
0x4002c02	            0x740b	                            je 0x4002c0f	      3145	memline.c	FUNCTION_36	IF_2
0x4002c04	        0x4883e901	                              sub rcx, 1	      3146	memline.c	FUNCTION_36	IF_2
0x4002c08	    0x48890d000000	            mov qword [0x04002c0f], rcx 	      3146	memline.c	FUNCTION_36	IF_2
0x4002c0f	        0x4883f801	                              cmp rax, 1	      3151	memline.c	FUNCTION_36	IF_3
0x4002c13	        0x48893424	                    mov qword [rsp], rsi	      3151	memline.c	FUNCTION_36	IF_3
0x4002c17	          0x4889fd	                            mov rbp, rdi	      3151	memline.c	FUNCTION_36	IF_3
0x4002c1a	     0xf8490010000	                            je 0x4002db0	      3151	memline.c	FUNCTION_36	IF_3
0x4002c20	        0x4c8b6f08	                mov r13, qword [rdi + 8]	      3172	memline.c	FUNCTION_36
0x4002c24	          0x4d85ed	                           test r13, r13	      3173	memline.c	FUNCTION_36	IF_5
0x4002c27	     0xf846b010000	                            je 0x4002d98	      3173	memline.c	FUNCTION_36	IF_5
0x4002c2d	        0x488b1c24	                    mov rbx, qword [rsp]	      3176	memline.c	FUNCTION_36	IF_6	CALL_4
0x4002c31	      0xba11000000	                           mov edx, 0x11	      3176	memline.c	FUNCTION_36	IF_6	CALL_4
0x4002c36	          0x4889de	                            mov rsi, rbx	      3176	memline.c	FUNCTION_36	IF_6	CALL_4
0x4002c39	      0xe8e2d5ffff	                   call sym.ml_find_line	      3176	memline.c	FUNCTION_36	IF_6	CALL_4
0x4002c3e	          0x4885c0	                           test rax, rax	      3176	memline.c	FUNCTION_36	IF_6	CALL_4
0x4002c41	          0x4989c3	                            mov r11, rax	      3176	memline.c	FUNCTION_36	IF_6	CALL_4
0x4002c44	     0xf844e010000	                            je 0x4002d98	      3176	memline.c	FUNCTION_36	IF_6	CALL_4
0x4002c4a	        0x4c8b7828	            mov r15, qword [rax + 0x28] 	      3179	memline.c	FUNCTION_36
0x4002c4e	          0x8b7548	            mov esi, dword [rbp + 0x48] 	      3181	memline.c	FUNCTION_36
0x4002c51	        0x488b4540	            mov rax, qword [rbp + 0x40] 	      3181	memline.c	FUNCTION_36
0x4002c55	      0x48836d0001	                      sub qword [rbp], 1	      3185	memline.c	FUNCTION_36
0x4002c5a	        0x448d6602	                     lea r12d, [rsi + 2]	      3181	memline.c	FUNCTION_36
0x4002c5e	            0x29c3	                            sub ebx, eax	      3183	memline.c	FUNCTION_36
0x4002c60	          0x4c63d3	                         movsxd r10, ebx	      3183	memline.c	FUNCTION_36
0x4002c63	          0x4129c4	                           sub r12d, eax	      3181	memline.c	FUNCTION_36
0x4002c66	        0x4b8d0497	                  lea rax, [r15 + r10*4]	      3181	memline.c	FUNCTION_36
0x4002c6a	          0x8b7818	            mov edi, dword [rax + 0x18] 	      3187	memline.c	FUNCTION_36
0x4002c6d	    0x81e7ffffff7f	                     and edi, 0x7fffffff	      3187	memline.c	FUNCTION_36
0x4002c73	            0x85db	                           test ebx, ebx	      3188	memline.c	FUNCTION_36	IF_7
0x4002c75	        0x897c2408	                mov dword [rsp + 8], edi	      3187	memline.c	FUNCTION_36
0x4002c79	     0xf84d9000000	                            je 0x4002d58	      3188	memline.c	FUNCTION_36	IF_7
0x4002c7f	        0x448b7014	           mov r14d, dword [rax + 0x14] 	      3191	memline.c	FUNCTION_36	ELSE_1
0x4002c83	    0x4181e6ffffff	                    and r14d, 0x7fffffff	      3191	memline.c	FUNCTION_36	ELSE_1
0x4002c8a	      0x442b742408	               sub r14d, dword [rsp + 8]	      3191	memline.c	FUNCTION_36	ELSE_1
0x4002c8f	      0x4c89542418	             mov qword [rsp + 0x18], r10	      3191	memline.c	FUNCTION_36	ELSE_1
0x4002c94	      0x4c895c2410	             mov qword [rsp + 0x10], r11	      3191	memline.c	FUNCTION_36	ELSE_1
0x4002c99	      0xe800000000	                          call 0x4002c9e	      3194	memline.c	FUNCTION_36	IF_8	CALL_5
0x4002c9e	            0x85c0	                           test eax, eax	      3194	memline.c	FUNCTION_36	IF_8	CALL_5
0x4002ca0	      0x4c8b5c2410	            mov r11, qword [rsp + 0x10] 	      3194	memline.c	FUNCTION_36	IF_8	CALL_5
0x4002ca5	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	      3194	memline.c	FUNCTION_36	IF_8	CALL_5
0x4002caa	     0xf8550010000	                           jne 0x4002e00	      3194	memline.c	FUNCTION_36	IF_8	CALL_5
0x4002cb0	        0x4183fc01	                             cmp r12d, 1	      3206	memline.c	FUNCTION_36	IF_9
0x4002cb4	     0xf8466010000	                            je 0x4002e20	      3206	memline.c	FUNCTION_36	IF_9
0x4002cba	        0x49637f08	            movsxd rdi, dword [r15 + 8] 	      3256	memline.c	FUNCTION_36	ELSE_3
0x4002cbe	        0x8b4c2408	                mov ecx, dword [rsp + 8]	        59	string3.h	FUNCTION_64	CALL_3
0x4002cc2	        0x4183ec01	                             sub r12d, 1	      3264	memline.c	FUNCTION_36	ELSE_3	FOR_2
0x4002cc6	      0x4c89542410	             mov qword [rsp + 0x10], r10	      3264	memline.c	FUNCTION_36	ELSE_3	FOR_2
0x4002ccb	            0x29f9	                            sub ecx, edi	        59	string3.h	FUNCTION_64	CALL_3
0x4002ccd	        0x498d343f	                    lea rsi, [r15 + rdi]	        59	string3.h	FUNCTION_64	CALL_3
0x4002cd1	          0x4c01f7	                            add rdi, r14	        59	string3.h	FUNCTION_64	CALL_3
0x4002cd4	          0x4863d1	                         movsxd rdx, ecx	        59	string3.h	FUNCTION_64	CALL_3
0x4002cd7	          0x4c01ff	                            add rdi, r15	        59	string3.h	FUNCTION_64	CALL_3
0x4002cda	      0xe800000000	                          call 0x4002cdf	        59	string3.h	FUNCTION_64	CALL_3
0x4002cdf	          0x4439e3	                           cmp ebx, r12d	      3264	memline.c	FUNCTION_36	ELSE_3	FOR_2
0x4002ce2	          0x4489f1	                           mov ecx, r14d	      3264	memline.c	FUNCTION_36	ELSE_3	FOR_2
0x4002ce5	      0x4c8b542410	            mov r10, qword [rsp + 0x10] 	      3264	memline.c	FUNCTION_36	ELSE_3	FOR_2
0x4002cea	            0x7c07	                            jl 0x4002cf3	      3264	memline.c	FUNCTION_36	ELSE_3	FOR_2
0x4002cec	            0xeb19	                           jmp 0x4002d07	      3264	memline.c	FUNCTION_36	ELSE_3	FOR_2
0x4002cee	            0x6690	                                     nop	      3264	memline.c	FUNCTION_36	ELSE_3	FOR_2
0x4002cf0	          0x4c63d3	                         movsxd r10, ebx	      3264	memline.c	FUNCTION_36	ELSE_3	FOR_2
0x4002cf3	        0x4b8d0497	                  lea rax, [r15 + r10*4]	      3264	memline.c	FUNCTION_36	ELSE_3	FOR_2
0x4002cf7	          0x83c301	                              add ebx, 1	      3264	memline.c	FUNCTION_36	ELSE_3	FOR_2
0x4002cfa	          0x8b501c	            mov edx, dword [rax + 0x1c] 	      3265	memline.c	FUNCTION_36	ELSE_3	FOR_2
0x4002cfd	             0x1ca	                            add edx, ecx	      3265	memline.c	FUNCTION_36	ELSE_3	FOR_2
0x4002cff	          0x4439e3	                           cmp ebx, r12d	      3264	memline.c	FUNCTION_36	ELSE_3	FOR_2
0x4002d02	          0x895018	             mov dword [rax + 0x18], edx	      3265	memline.c	FUNCTION_36	ELSE_3	FOR_2
0x4002d05	            0x75e9	                           jne 0x4002cf0	      3264	memline.c	FUNCTION_36	ELSE_3	FOR_2
0x4002d07	        0x418b4704	                mov eax, dword [r15 + 4]	      3267	memline.c	FUNCTION_36	ELSE_3
0x4002d0b	        0x41014f08	                add dword [r15 + 8], ecx	      3268	memline.c	FUNCTION_36	ELSE_3
0x4002d0f	      0x49836f1001	               sub qword [r15 + 0x10], 1	      3269	memline.c	FUNCTION_36	ELSE_3
0x4002d14	        0x8d440104	                lea eax, [rcx + rax + 4]	      3267	memline.c	FUNCTION_36	ELSE_3
0x4002d18	        0x41894704	                mov dword [r15 + 4], eax	      3267	memline.c	FUNCTION_36	ELSE_3
0x4002d1c	        0x834d100c	              or dword [rbp + 0x10], 0xc	      3274	memline.c	FUNCTION_36	ELSE_3
0x4002d20	        0x488b3424	                    mov rsi, qword [rsp]	      3278	memline.c	FUNCTION_36	CALL_18
0x4002d24	          0x4c89f2	                            mov rdx, r14	      3278	memline.c	FUNCTION_36	CALL_18
0x4002d27	          0x4889ef	                            mov rdi, rbp	      3278	memline.c	FUNCTION_36	CALL_18
0x4002d2a	      0xb902000000	                              mov ecx, 2	      3278	memline.c	FUNCTION_36	CALL_18
0x4002d2f	      0xe81cd9ffff	                 call sym.ml_updatechunk	      3278	memline.c	FUNCTION_36	CALL_18
0x4002d34	        0x4883c428	                           add rsp, 0x28	      3281	memline.c	FUNCTION_36
0x4002d38	      0xb801000000	                              mov eax, 1	      3280	memline.c	FUNCTION_36
0x4002d3d	              0x5b	                                 pop rbx	      3281	memline.c	FUNCTION_36
0x4002d3e	              0x5d	                                 pop rbp	      3281	memline.c	FUNCTION_36
0x4002d3f	            0x415c	                                 pop r12	      3281	memline.c	FUNCTION_36
0x4002d41	            0x415d	                                 pop r13	      3281	memline.c	FUNCTION_36
0x4002d43	            0x415e	                                 pop r14	      3281	memline.c	FUNCTION_36
0x4002d45	            0x415f	                                 pop r15	      3281	memline.c	FUNCTION_36
0x4002d47	              0xc3	                                     ret	      3281	memline.c	FUNCTION_36
0x4002d48	     0xf1f84000000	                   nop dword [rax + rax]	      3281	memline.c	FUNCTION_36
0x4002d50	            0x31c0	                            xor eax, eax	      3143	memline.c	FUNCTION_36	IF_1
0x4002d52	              0xc3	                                     ret	      3281	memline.c	FUNCTION_36
0x4002d53	       0xf1f440000	                   nop dword [rax + rax]	      3281	memline.c	FUNCTION_36
0x4002d58	        0x458b770c	            mov r14d, dword [r15 + 0xc] 	      3189	memline.c	FUNCTION_36	IF_7
0x4002d5c	          0x4129fe	                           sub r14d, edi	      3189	memline.c	FUNCTION_36	IF_7
0x4002d5f	      0xe92bffffff	                           jmp 0x4002c8f	      3189	memline.c	FUNCTION_36	IF_7
0x4002d64	      0xba05000000	                              mov edx, 5	      3222	memline.c	FUNCTION_36	IF_9	FOR_1	IF_11	CALL_10
0x4002d69	      0xbe00000000	                              mov esi, 0	      3222	memline.c	FUNCTION_36	IF_9	FOR_1	IF_11	CALL_10
0x4002d6e	            0x31ff	                            xor edi, edi	      3222	memline.c	FUNCTION_36	IF_9	FOR_1	IF_11	CALL_10
0x4002d70	        0x48890424	                    mov qword [rsp], rax	      3222	memline.c	FUNCTION_36	IF_9	FOR_1	IF_11	CALL_10
0x4002d74	      0xe800000000	                          call 0x4002d79	      3222	memline.c	FUNCTION_36	IF_9	FOR_1	IF_11	CALL_10
0x4002d79	          0x4889c7	                            mov rdi, rax	      3222	memline.c	FUNCTION_36	IF_9	FOR_1	IF_11	CALL_10
0x4002d7c	      0xe800000000	                          call 0x4002d81	      3222	memline.c	FUNCTION_36	IF_9	FOR_1	IF_11	CALL_10
0x4002d81	        0x4c8b0c24	                     mov r9, qword [rsp]	      3223	memline.c	FUNCTION_36	IF_9	FOR_1	IF_11	CALL_11
0x4002d85	            0x31c9	                            xor ecx, ecx	      3223	memline.c	FUNCTION_36	IF_9	FOR_1	IF_11	CALL_11
0x4002d87	            0x31d2	                            xor edx, edx	      3223	memline.c	FUNCTION_36	IF_9	FOR_1	IF_11	CALL_11
0x4002d89	          0x4c89ef	                            mov rdi, r13	      3223	memline.c	FUNCTION_36	IF_9	FOR_1	IF_11	CALL_11
0x4002d8c	          0x4c89ce	                             mov rsi, r9	      3223	memline.c	FUNCTION_36	IF_9	FOR_1	IF_11	CALL_11
0x4002d8f	      0xe800000000	                          call 0x4002d94	      3223	memline.c	FUNCTION_36	IF_9	FOR_1	IF_11	CALL_11
0x4002d94	         0xf1f4000	                         nop dword [rax]	      3223	memline.c	FUNCTION_36	IF_9	FOR_1	IF_11	CALL_11
0x4002d98	            0x31c0	                            xor eax, eax	      3224	memline.c	FUNCTION_36	IF_9	FOR_1	IF_11
0x4002d9a	        0x4883c428	                           add rsp, 0x28	      3281	memline.c	FUNCTION_36
0x4002d9e	              0x5b	                                 pop rbx	      3281	memline.c	FUNCTION_36
0x4002d9f	              0x5d	                                 pop rbp	      3281	memline.c	FUNCTION_36
0x4002da0	            0x415c	                                 pop r12	      3281	memline.c	FUNCTION_36
0x4002da2	            0x415d	                                 pop r13	      3281	memline.c	FUNCTION_36
0x4002da4	            0x415e	                                 pop r14	      3281	memline.c	FUNCTION_36
0x4002da6	            0x415f	                                 pop r15	      3281	memline.c	FUNCTION_36
0x4002da8	              0xc3	                                     ret	      3281	memline.c	FUNCTION_36
0x4002da9	     0xf1f80000000	                         nop dword [rax]	      3281	memline.c	FUNCTION_36
0x4002db0	            0x85d2	                           test edx, edx	      3153	memline.c	FUNCTION_36	IF_3	IF_4
0x4002db2	            0x7425	                            je 0x4002dd9	      3153	memline.c	FUNCTION_36	IF_3	IF_4
0x4002db4	    0x8b0500000000	            mov eax, dword [0x04002dba] 	      3155	memline.c	FUNCTION_36	IF_3	IF_4
0x4002dba	            0x85c0	                           test eax, eax	      3155	memline.c	FUNCTION_36	IF_3	IF_4
0x4002dbc	            0x751b	                           jne 0x4002dd9	      3155	memline.c	FUNCTION_36	IF_3	IF_4
0x4002dbe	      0xbe00000000	                              mov esi, 0	      3158	memline.c	FUNCTION_36	IF_3	CALL_2
0x4002dc3	            0x31ff	                            xor edi, edi	      3158	memline.c	FUNCTION_36	IF_3	CALL_2
0x4002dc5	      0xba05000000	                              mov edx, 5	      3158	memline.c	FUNCTION_36	IF_3	CALL_2
0x4002dca	      0xe800000000	                          call 0x4002dcf	      3158	memline.c	FUNCTION_36	IF_3	CALL_2
0x4002dcf	            0x31f6	                            xor esi, esi	      3158	memline.c	FUNCTION_36	IF_3	CALL_2
0x4002dd1	          0x4889c7	                            mov rdi, rax	      3158	memline.c	FUNCTION_36	IF_3	CALL_2
0x4002dd4	      0xe800000000	                          call 0x4002dd9	      3158	memline.c	FUNCTION_36	IF_3	CALL_2
0x4002dd9	      0xba01000000	                              mov edx, 1	      3161	memline.c	FUNCTION_36	IF_3	CALL_3
0x4002dde	      0xbe00000000	                              mov esi, 0	      3161	memline.c	FUNCTION_36	IF_3	CALL_3
0x4002de3	      0xbf01000000	                              mov edi, 1	      3161	memline.c	FUNCTION_36	IF_3	CALL_3
0x4002de8	      0xe800000000	                          call 0x4002ded	      3161	memline.c	FUNCTION_36	IF_3	CALL_3
0x4002ded	        0x834d1001	                or dword [rbp + 0x10], 1	      3162	memline.c	FUNCTION_36	IF_3
0x4002df1	        0x4883c428	                           add rsp, 0x28	      3281	memline.c	FUNCTION_36
0x4002df5	              0x5b	                                 pop rbx	      3281	memline.c	FUNCTION_36
0x4002df6	              0x5d	                                 pop rbp	      3281	memline.c	FUNCTION_36
0x4002df7	            0x415c	                                 pop r12	      3281	memline.c	FUNCTION_36
0x4002df9	            0x415d	                                 pop r13	      3281	memline.c	FUNCTION_36
0x4002dfb	            0x415e	                                 pop r14	      3281	memline.c	FUNCTION_36
0x4002dfd	            0x415f	                                 pop r15	      3281	memline.c	FUNCTION_36
0x4002dff	              0xc3	                                     ret	      3281	memline.c	FUNCTION_36
0x4002e00	        0x488b3424	                    mov rsi, qword [rsp]	      3195	memline.c	FUNCTION_36	CALL_6
0x4002e04	          0x4c89f1	                            mov rcx, r14	      3195	memline.c	FUNCTION_36	CALL_6
0x4002e07	            0x31d2	                            xor edx, edx	      3195	memline.c	FUNCTION_36	CALL_6
0x4002e09	          0x4889ef	                            mov rdi, rbp	      3195	memline.c	FUNCTION_36	CALL_6
0x4002e0c	      0xe800000000	                          call 0x4002e11	      3195	memline.c	FUNCTION_36	CALL_6
0x4002e11	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	      3195	memline.c	FUNCTION_36	CALL_6
0x4002e16	      0x4c8b5c2410	            mov r11, qword [rsp + 0x10] 	      3195	memline.c	FUNCTION_36	CALL_6
0x4002e1b	      0xe990feffff	                           jmp 0x4002cb0	      3195	memline.c	FUNCTION_36	CALL_6
0x4002e20	          0x4c89de	                            mov rsi, r11	      3208	memline.c	FUNCTION_36	IF_9	CALL_7
0x4002e23	          0x4c89ef	                            mov rdi, r13	      3208	memline.c	FUNCTION_36	IF_9	CALL_7
0x4002e26	      0xe800000000	                          call 0x4002e2b	      3208	memline.c	FUNCTION_36	IF_9	CALL_7
0x4002e2b	          0x8b4520	            mov eax, dword [rbp + 0x20] 	      3211	memline.c	FUNCTION_36	IF_9	FOR_1
0x4002e2e	    0x48c745380000	               mov qword [rbp + 0x38], 0	      3209	memline.c	FUNCTION_36	IF_9
0x4002e36	          0x8d58ff	                      lea ebx, [rax - 1]	      3211	memline.c	FUNCTION_36	IF_9	FOR_1
0x4002e39	          0x4c63e3	                         movsxd r12, ebx	      3211	memline.c	FUNCTION_36	IF_9	FOR_1
0x4002e3c	        0x49c1e405	                              shl r12, 5	      3211	memline.c	FUNCTION_36	IF_9	FOR_1
0x4002e40	            0x85db	                           test ebx, ebx	      3211	memline.c	FUNCTION_36	IF_9	FOR_1
0x4002e42	            0x7946	                           jns 0x4002e8a	      3211	memline.c	FUNCTION_36	IF_9	FOR_1
0x4002e44	      0xe9d7feffff	                           jmp 0x4002d20	      3211	memline.c	FUNCTION_36	IF_9	FOR_1
0x4002e49	     0xf1f80000000	                         nop dword [rax]	      3211	memline.c	FUNCTION_36	IF_9	FOR_1
0x4002e50	        0x488b4828	            mov rcx, qword [rax + 0x28] 	      3219	memline.c	FUNCTION_36	IF_9	FOR_1
0x4002e54	      0x6681397470	                  cmp word [rcx], 0x7074	      3220	memline.c	FUNCTION_36	IF_9	FOR_1	IF_11
0x4002e59	     0xf8505ffffff	                           jne 0x4002d64	      3220	memline.c	FUNCTION_36	IF_9	FOR_1	IF_11
0x4002e5f	         0xfb74102	               movzx eax, word [rcx + 2]	      3226	memline.c	FUNCTION_36	IF_9	FOR_1
0x4002e63	          0x83e801	                              sub eax, 1	      3226	memline.c	FUNCTION_36	IF_9	FOR_1
0x4002e66	          0x6685c0	                             test ax, ax	      3227	memline.c	FUNCTION_36	IF_9	FOR_1	IF_12
0x4002e69	        0x66894102	                  mov word [rcx + 2], ax	      3226	memline.c	FUNCTION_36	IF_9	FOR_1
0x4002e6d	            0x754c	                           jne 0x4002ebb	      3227	memline.c	FUNCTION_36	IF_9	FOR_1	IF_12
0x4002e6f	          0x4c89ce	                             mov rsi, r9	      3228	memline.c	FUNCTION_36	IF_9	FOR_1	CALL_12
0x4002e72	          0x4c89ef	                            mov rdi, r13	      3228	memline.c	FUNCTION_36	IF_9	FOR_1	CALL_12
0x4002e75	          0x83eb01	                              sub ebx, 1	      3212	memline.c	FUNCTION_36	IF_9	FOR_1
0x4002e78	      0xe800000000	                          call 0x4002e7d	      3228	memline.c	FUNCTION_36	IF_9	FOR_1	CALL_12
0x4002e7d	        0x4983ec20	                           sub r12, 0x20	      3228	memline.c	FUNCTION_36	IF_9	FOR_1	CALL_12
0x4002e81	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      3211	memline.c	FUNCTION_36	IF_9	FOR_1
0x4002e84	     0xf8496feffff	                            je 0x4002d20	      3211	memline.c	FUNCTION_36	IF_9	FOR_1
0x4002e8a	          0x4c89e0	                            mov rax, r12	      3215	memline.c	FUNCTION_36	IF_9	FOR_1
0x4002e8d	        0x48034518	             add rax, qword [rbp + 0x18]	      3215	memline.c	FUNCTION_36	IF_9	FOR_1
0x4002e91	    0xc74520000000	               mov dword [rbp + 0x20], 0	      3214	memline.c	FUNCTION_36	IF_9	FOR_1
0x4002e98	      0xba01000000	                              mov edx, 1	      3217	memline.c	FUNCTION_36	IF_9	FOR_1	IF_10	CALL_8
0x4002e9d	          0x4c89ef	                            mov rdi, r13	      3217	memline.c	FUNCTION_36	IF_9	FOR_1	IF_10	CALL_8
0x4002ea0	          0x488b30	                    mov rsi, qword [rax]	      3217	memline.c	FUNCTION_36	IF_9	FOR_1	IF_10	CALL_8
0x4002ea3	        0x4c637818	         movsxd r15, dword [rax + 0x18] 	      3216	memline.c	FUNCTION_36	IF_9	FOR_1
0x4002ea7	      0xe800000000	                          call 0x4002eac	      3217	memline.c	FUNCTION_36	IF_9	FOR_1	IF_10	CALL_8
0x4002eac	          0x4885c0	                           test rax, rax	      3217	memline.c	FUNCTION_36	IF_9	FOR_1	IF_10	CALL_8
0x4002eaf	          0x4989c1	                             mov r9, rax	      3217	memline.c	FUNCTION_36	IF_9	FOR_1	IF_10	CALL_8
0x4002eb2	            0x759c	                           jne 0x4002e50	      3217	memline.c	FUNCTION_36	IF_9	FOR_1	IF_10	CALL_8
0x4002eb4	            0x31c0	                            xor eax, eax	      3224	memline.c	FUNCTION_36	IF_9	FOR_1	IF_11
0x4002eb6	      0xe9dffeffff	                           jmp 0x4002d9a	      3224	memline.c	FUNCTION_36	IF_9	FOR_1	IF_11
0x4002ebb	           0xfb7c0	                           movzx eax, ax	      3226	memline.c	FUNCTION_36	IF_9	FOR_1
0x4002ebe	          0x4139c7	                           cmp r15d, eax	      3231	memline.c	FUNCTION_36	IF_9	FOR_1	ELSE_2	IF_13
0x4002ec1	            0x7431	                            je 0x4002ef4	      3231	memline.c	FUNCTION_36	IF_9	FOR_1	ELSE_2	IF_13
0x4002ec3	          0x4429f8	                           sub eax, r15d	        59	string3.h	FUNCTION_64	CALL_3
0x4002ec6	      0x4c894c2408	                 mov qword [rsp + 8], r9	        59	string3.h	FUNCTION_64	CALL_3
0x4002ecb	          0x4863d0	                         movsxd rdx, eax	        59	string3.h	FUNCTION_64	CALL_3
0x4002ece	        0x418d4701	                      lea eax, [r15 + 1]	        59	string3.h	FUNCTION_64	CALL_3
0x4002ed2	        0x49c1e705	                              shl r15, 5	        59	string3.h	FUNCTION_64	CALL_3
0x4002ed6	      0x4a8d7c3908	                lea rdi, [rcx + r15 + 8]	        59	string3.h	FUNCTION_64	CALL_3
0x4002edb	        0x48c1e205	                              shl rdx, 5	        59	string3.h	FUNCTION_64	CALL_3
0x4002edf	            0x4898	                                    cdqe	        59	string3.h	FUNCTION_64	CALL_3
0x4002ee1	        0x48c1e005	                              shl rax, 5	        59	string3.h	FUNCTION_64	CALL_3
0x4002ee5	      0x488d740108	                lea rsi, [rcx + rax + 8]	        59	string3.h	FUNCTION_64	CALL_3
0x4002eea	      0xe800000000	                          call 0x4002eef	        59	string3.h	FUNCTION_64	CALL_3
0x4002eef	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	        59	string3.h	FUNCTION_64	CALL_3
0x4002ef4	            0x31c9	                            xor ecx, ecx	      3234	memline.c	FUNCTION_36	IF_9	FOR_1	ELSE_2	CALL_14
0x4002ef6	          0x4c89ce	                             mov rsi, r9	      3234	memline.c	FUNCTION_36	IF_9	FOR_1	ELSE_2	CALL_14
0x4002ef9	      0xba01000000	                              mov edx, 1	      3234	memline.c	FUNCTION_36	IF_9	FOR_1	ELSE_2	CALL_14
0x4002efe	          0x4c89ef	                            mov rdi, r13	      3234	memline.c	FUNCTION_36	IF_9	FOR_1	ELSE_2	CALL_14
0x4002f01	      0xe800000000	                          call 0x4002f06	      3234	memline.c	FUNCTION_36	IF_9	FOR_1	ELSE_2	CALL_14
0x4002f06	          0x8b7550	            mov esi, dword [rbp + 0x50] 	      3238	memline.c	FUNCTION_36	IF_9	FOR_1	ELSE_2	IF_14
0x4002f09	          0x895d20	            mov dword [rbp + 0x20], ebx 	      3236	memline.c	FUNCTION_36	IF_9	FOR_1	ELSE_2
0x4002f0c	            0x85f6	                           test esi, esi	      3238	memline.c	FUNCTION_36	IF_9	FOR_1	ELSE_2	IF_14
0x4002f0e	            0x750b	                           jne 0x4002f1b	      3238	memline.c	FUNCTION_36	IF_9	FOR_1	ELSE_2	IF_14
0x4002f10	          0x83c301	                              add ebx, 1	      3244	memline.c	FUNCTION_36	IF_9	FOR_1	ELSE_2
0x4002f13	          0x895d20	            mov dword [rbp + 0x20], ebx 	      3244	memline.c	FUNCTION_36	IF_9	FOR_1	ELSE_2
0x4002f16	      0xe905feffff	                           jmp 0x4002d20	      3246	memline.c	FUNCTION_36	IF_9	FOR_1	ELSE_2
0x4002f1b	          0x4889ef	                            mov rdi, rbp	      3240	memline.c	FUNCTION_36	IF_9	FOR_1	ELSE_2	IF_14	CALL_15
0x4002f1e	      0xe8add1ffff	                     call sym.ml_lineadd	      3240	memline.c	FUNCTION_36	IF_9	FOR_1	ELSE_2	IF_14	CALL_15
0x4002f23	        0x48634520	         movsxd rax, dword [rbp + 0x20] 	      3241	memline.c	FUNCTION_36	IF_9	FOR_1	ELSE_2	IF_14
0x4002f27	        0x48635550	         movsxd rdx, dword [rbp + 0x50] 	      3241	memline.c	FUNCTION_36	IF_9	FOR_1	ELSE_2	IF_14
0x4002f2b	          0x4889c3	                            mov rbx, rax	      3241	memline.c	FUNCTION_36	IF_9	FOR_1	ELSE_2	IF_14
0x4002f2e	        0x48c1e005	                              shl rax, 5	      3241	memline.c	FUNCTION_36	IF_9	FOR_1	ELSE_2	IF_14
0x4002f32	        0x48034518	             add rax, qword [rbp + 0x18]	      3241	memline.c	FUNCTION_36	IF_9	FOR_1	ELSE_2	IF_14
0x4002f36	        0x48015010	            add qword [rax + 0x10], rdx 	      3241	memline.c	FUNCTION_36	IF_9	FOR_1	ELSE_2	IF_14
0x4002f3a	            0xebd4	                           jmp 0x4002f10	      3241	memline.c	FUNCTION_36	IF_9	FOR_1	ELSE_2	IF_14
ml_setmarked	ELSE,0:SWITCH,0:DO,0:IF,3:FOR,0:functions,0:WHILE,0:CALL,1	29
0x4003b30	          0x4885ff	                           test rdi, rdi	      3292	memline.c	FUNCTION_37	IF_1
0x4003b33	            0x7e59	                           jle 0x4003b8e	      3292	memline.c	FUNCTION_37	IF_1
0x4003b35	    0x488b05000000	            mov rax, qword [0x04003b3c] 	      3292	memline.c	FUNCTION_37	IF_1
0x4003b3c	          0x483b38	                    cmp rdi, qword [rax]	      3292	memline.c	FUNCTION_37	IF_1
0x4003b3f	            0x7f4d	                            jg 0x4003b8e	      3292	memline.c	FUNCTION_37	IF_1
0x4003b41	      0x4883780800	                  cmp qword [rax + 8], 0	      3293	memline.c	FUNCTION_37	IF_1
0x4003b46	            0x7446	                            je 0x4003b8e	      3293	memline.c	FUNCTION_37	IF_1
0x4003b48	    0x488b15000000	            mov rdx, qword [0x04003b4f] 	      3296	memline.c	FUNCTION_37	IF_2
0x4003b4f	              0x53	                                push rbx	      3288	memline.c	FUNCTION_37
0x4003b50	          0x4839d7	                            cmp rdi, rdx	      3296	memline.c	FUNCTION_37	IF_2
0x4003b53	            0x7c3b	                            jl 0x4003b90	      3296	memline.c	FUNCTION_37	IF_2
0x4003b55	          0x4885d2	                           test rdx, rdx	      3296	memline.c	FUNCTION_37	IF_2
0x4003b58	            0x7436	                            je 0x4003b90	      3296	memline.c	FUNCTION_37	IF_2
0x4003b5a	          0x4889fe	                            mov rsi, rdi	      3304	memline.c	FUNCTION_37	IF_3	CALL_1
0x4003b5d	          0x4889fb	                            mov rbx, rdi	      3304	memline.c	FUNCTION_37	IF_3	CALL_1
0x4003b60	      0xba13000000	                           mov edx, 0x13	      3304	memline.c	FUNCTION_37	IF_3	CALL_1
0x4003b65	          0x4889c7	                            mov rdi, rax	      3304	memline.c	FUNCTION_37	IF_3	CALL_1
0x4003b68	      0xe8b3c6ffff	                   call sym.ml_find_line	      3304	memline.c	FUNCTION_37	IF_3	CALL_1
0x4003b6d	          0x4885c0	                           test rax, rax	      3304	memline.c	FUNCTION_37	IF_3	CALL_1
0x4003b70	            0x741b	                            je 0x4003b8d	      3304	memline.c	FUNCTION_37	IF_3	CALL_1
0x4003b72	    0x488b15000000	            mov rdx, qword [0x04003b79] 	      3308	memline.c	FUNCTION_37
0x4003b79	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3308	memline.c	FUNCTION_37
0x4003b7d	        0x482b5a40	             sub rbx, qword [rdx + 0x40]	      3308	memline.c	FUNCTION_37
0x4003b81	    0x814c98180000	or dword [rax + rbx*4 + 0x18], 0x80000000	      3308	memline.c	FUNCTION_37
0x4003b89	        0x834a1004	                or dword [rdx + 0x10], 4	      3309	memline.c	FUNCTION_37
0x4003b8d	              0x5b	                                 pop rbx	      3310	memline.c	FUNCTION_37
0x4003b8e	            0xf3c3	                                     ret	      3310	memline.c	FUNCTION_37
0x4003b90	    0x48893d000000	            mov qword [0x04003b97], rdi 	      3297	memline.c	FUNCTION_37	IF_2
0x4003b97	            0xebc1	                           jmp 0x4003b5a	      3297	memline.c	FUNCTION_37	IF_2
ml_preserve	ELSE,1:SWITCH,0:DO,0:IF,7:FOR,0:functions,0:WHILE,1:CALL,14	115
0x40031c0	            0x4157	                                push r15	      2312	memline.c	FUNCTION_24
0x40031c2	            0x4156	                                push r14	      2312	memline.c	FUNCTION_24
0x40031c4	            0x4155	                                push r13	      2312	memline.c	FUNCTION_24
0x40031c6	            0x4154	                                push r12	      2312	memline.c	FUNCTION_24
0x40031c8	          0x4189f5	                           mov r13d, esi	      2312	memline.c	FUNCTION_24
0x40031cb	              0x55	                                push rbp	      2312	memline.c	FUNCTION_24
0x40031cc	              0x53	                                push rbx	      2312	memline.c	FUNCTION_24
0x40031cd	        0x4883ec08	                              sub rsp, 8	      2312	memline.c	FUNCTION_24
0x40031d1	        0x4c8b6708	                mov r12, qword [rdi + 8]	      2315	memline.c	FUNCTION_24
0x40031d5	    0x448b35000000	           mov r14d, dword [0x040031dc] 	      2317	memline.c	FUNCTION_24
0x40031dc	          0x4d85e4	                           test r12, r12	      2319	memline.c	FUNCTION_24	IF_1
0x40031df	     0xf84ab000000	                            je 0x4003290	      2319	memline.c	FUNCTION_24	IF_1
0x40031e5	      0x49833c2400	                      cmp qword [r12], 0	      2319	memline.c	FUNCTION_24	IF_1
0x40031ea	     0xf84a0000000	                            je 0x4003290	      2319	memline.c	FUNCTION_24	IF_1
0x40031f0	          0x4889fb	                            mov rbx, rdi	      2319	memline.c	FUNCTION_24	IF_1
0x40031f3	    0xc70500000000	               mov dword [0x040031fd], 0	      2328	memline.c	FUNCTION_24
0x40031fd	      0xe83efdffff	                  call sym.ml_flush_line	      2330	memline.c	FUNCTION_24	CALL_3
0x4003202	      0xba02000000	                              mov edx, 2	      2331	memline.c	FUNCTION_24	CALL_4
0x4003207	            0x31f6	                            xor esi, esi	      2331	memline.c	FUNCTION_24	CALL_4
0x4003209	          0x4889df	                            mov rdi, rbx	      2331	memline.c	FUNCTION_24	CALL_4
0x400320c	      0xe80fd0ffff	                   call sym.ml_find_line	      2331	memline.c	FUNCTION_24	CALL_4
0x4003211	      0xbe05000000	                              mov esi, 5	      2332	memline.c	FUNCTION_24	CALL_5
0x4003216	          0x4c89e7	                            mov rdi, r12	      2332	memline.c	FUNCTION_24	CALL_5
0x4003219	      0xe800000000	                          call 0x400321e	      2332	memline.c	FUNCTION_24	CALL_5
0x400321e	    0xc74320000000	               mov dword [rbx + 0x20], 0	      2335	memline.c	FUNCTION_24
0x4003225	          0x4c89e7	                            mov rdi, r12	      2349	memline.c	FUNCTION_24	IF_3	CALL_6
0x4003228	          0x4189c7	                           mov r15d, eax	      2332	memline.c	FUNCTION_24	CALL_5
0x400322b	      0xe800000000	                          call 0x4003230	      2349	memline.c	FUNCTION_24	IF_3	CALL_6
0x4003230	            0x85c0	                           test eax, eax	      2349	memline.c	FUNCTION_24	IF_3	CALL_6
0x4003232	            0x7413	                            je 0x4003247	      2349	memline.c	FUNCTION_24	IF_3	CALL_6
0x4003234	    0x8b0500000000	            mov eax, dword [0x0400323a] 	      2349	memline.c	FUNCTION_24	IF_3	CALL_6
0x400323a	      0xbd01000000	                              mov ebp, 1	      2349	memline.c	FUNCTION_24	IF_3	CALL_6
0x400323f	            0x85c0	                           test eax, eax	      2349	memline.c	FUNCTION_24	IF_3	CALL_6
0x4003241	     0xf848b000000	                            je 0x40032d2	      2349	memline.c	FUNCTION_24	IF_3	CALL_6
0x4003247	    0x8b0500000000	            mov eax, dword [0x0400324d] 	      2370	memline.c	FUNCTION_24
0x400324d	          0x4109c6	                            or r14d, eax	      2370	memline.c	FUNCTION_24
0x4003250	          0x4585ed	                         test r13d, r13d	      2372	memline.c	FUNCTION_24	IF_6
0x4003253	    0x448935000000	           mov dword [0x0400325a], r14d 	      2370	memline.c	FUNCTION_24
0x400325a	            0x7443	                            je 0x400329f	      2372	memline.c	FUNCTION_24	IF_6
0x400325c	        0x4183ff01	                             cmp r15d, 1	      2374	memline.c	FUNCTION_24	IF_6	IF_7
0x4003260	     0xf84b2000000	                            je 0x4003318	      2374	memline.c	FUNCTION_24	IF_6	IF_7
0x4003266	      0xba05000000	                              mov edx, 5	      2377	memline.c	FUNCTION_24	IF_6	CALL_14
0x400326b	      0xbe00000000	                              mov esi, 0	      2377	memline.c	FUNCTION_24	IF_6	CALL_14
0x4003270	            0x31ff	                            xor edi, edi	      2377	memline.c	FUNCTION_24	IF_6	CALL_14
0x4003272	      0xe800000000	                          call 0x4003277	      2377	memline.c	FUNCTION_24	IF_6	CALL_14
0x4003277	        0x4883c408	                              add rsp, 8	      2379	memline.c	FUNCTION_24
0x400327b	          0x4889c7	                            mov rdi, rax	      2377	memline.c	FUNCTION_24	IF_6	CALL_14
0x400327e	              0x5b	                                 pop rbx	      2379	memline.c	FUNCTION_24
0x400327f	              0x5d	                                 pop rbp	      2379	memline.c	FUNCTION_24
0x4003280	            0x415c	                                 pop r12	      2379	memline.c	FUNCTION_24
0x4003282	            0x415d	                                 pop r13	      2379	memline.c	FUNCTION_24
0x4003284	            0x415e	                                 pop r14	      2379	memline.c	FUNCTION_24
0x4003286	            0x415f	                                 pop r15	      2379	memline.c	FUNCTION_24
0x4003288	      0xe900000000	                           jmp 0x400328d	      2377	memline.c	FUNCTION_24	IF_6	CALL_14
0x400328d	           0xf1f00	                         nop dword [rax]	      2377	memline.c	FUNCTION_24	IF_6	CALL_14
0x4003290	          0x4585ed	                         test r13d, r13d	      2321	memline.c	FUNCTION_24	IF_1	IF_2
0x4003293	      0xba05000000	                              mov edx, 5	      2322	memline.c	FUNCTION_24	IF_1	CALL_2
0x4003298	      0xbe00000000	                              mov esi, 0	      2322	memline.c	FUNCTION_24	IF_1	CALL_2
0x400329d	            0x75d1	                           jne 0x4003270	      2321	memline.c	FUNCTION_24	IF_1	IF_2
0x400329f	        0x4883c408	                              add rsp, 8	      2379	memline.c	FUNCTION_24
0x40032a3	              0x5b	                                 pop rbx	      2379	memline.c	FUNCTION_24
0x40032a4	              0x5d	                                 pop rbp	      2379	memline.c	FUNCTION_24
0x40032a5	            0x415c	                                 pop r12	      2379	memline.c	FUNCTION_24
0x40032a7	            0x415d	                                 pop r13	      2379	memline.c	FUNCTION_24
0x40032a9	            0x415e	                                 pop r14	      2379	memline.c	FUNCTION_24
0x40032ab	            0x415f	                                 pop r15	      2379	memline.c	FUNCTION_24
0x40032ad	              0xc3	                                     ret	      2379	memline.c	FUNCTION_24
0x40032ae	            0x6690	                                     nop	      2379	memline.c	FUNCTION_24
0x40032b0	          0x483b2b	                    cmp rbp, qword [rbx]	      2352	memline.c	FUNCTION_24	IF_3	WHILE_1	CALL_7
0x40032b3	            0x7f29	                            jg 0x40032de	      2352	memline.c	FUNCTION_24	IF_3	WHILE_1	CALL_7
0x40032b5	      0xba13000000	                           mov edx, 0x13	      2354	memline.c	FUNCTION_24	IF_3	WHILE_1	CALL_8
0x40032ba	          0x4889ee	                            mov rsi, rbp	      2354	memline.c	FUNCTION_24	IF_3	WHILE_1	CALL_8
0x40032bd	          0x4889df	                            mov rdi, rbx	      2354	memline.c	FUNCTION_24	IF_3	WHILE_1	CALL_8
0x40032c0	      0xe85bcfffff	                   call sym.ml_find_line	      2354	memline.c	FUNCTION_24	IF_3	WHILE_1	CALL_8
0x40032c5	          0x4885c0	                           test rax, rax	      2355	memline.c	FUNCTION_24	IF_3	WHILE_1	IF_4
0x40032c8	            0x7476	                            je 0x4003340	      2355	memline.c	FUNCTION_24	IF_3	WHILE_1	IF_4
0x40032ca	        0x488b4348	            mov rax, qword [rbx + 0x48] 	      2361	memline.c	FUNCTION_24	IF_3	WHILE_1
0x40032ce	        0x488d6801	                      lea rbp, [rax + 1]	      2361	memline.c	FUNCTION_24	IF_3	WHILE_1
0x40032d2	          0x4c89e7	                            mov rdi, r12	      2352	memline.c	FUNCTION_24	IF_3	WHILE_1	CALL_7
0x40032d5	      0xe800000000	                          call 0x40032da	      2352	memline.c	FUNCTION_24	IF_3	WHILE_1	CALL_7
0x40032da	            0x85c0	                           test eax, eax	      2352	memline.c	FUNCTION_24	IF_3	WHILE_1	CALL_7
0x40032dc	            0x75d2	                           jne 0x40032b0	      2352	memline.c	FUNCTION_24	IF_3	WHILE_1	CALL_7
0x40032de	            0x31f6	                            xor esi, esi	      2363	memline.c	FUNCTION_24	IF_3	CALL_9
0x40032e0	      0xba02000000	                              mov edx, 2	      2363	memline.c	FUNCTION_24	IF_3	CALL_9
0x40032e5	          0x4889df	                            mov rdi, rbx	      2363	memline.c	FUNCTION_24	IF_3	CALL_9
0x40032e8	      0xe833cfffff	                   call sym.ml_find_line	      2363	memline.c	FUNCTION_24	IF_3	CALL_9
0x40032ed	      0xbe05000000	                              mov esi, 5	      2365	memline.c	FUNCTION_24	IF_3	IF_5	CALL_10
0x40032f2	          0x4c89e7	                            mov rdi, r12	      2365	memline.c	FUNCTION_24	IF_3	IF_5	CALL_10
0x40032f5	      0xe800000000	                          call 0x40032fa	      2365	memline.c	FUNCTION_24	IF_3	IF_5	CALL_10
0x40032fa	            0x85c0	                           test eax, eax	      2366	memline.c	FUNCTION_24	IF_3	IF_5
0x40032fc	      0xb800000000	                              mov eax, 0	      2366	memline.c	FUNCTION_24	IF_3	IF_5
0x4003301	    0xc74320000000	               mov dword [rbx + 0x20], 0	      2367	memline.c	FUNCTION_24	IF_3
0x4003308	        0x440f44f8	                         cmove r15d, eax	      2366	memline.c	FUNCTION_24	IF_3	IF_5
0x400330c	      0xe936ffffff	                           jmp 0x4003247	      2366	memline.c	FUNCTION_24	IF_3	IF_5
0x4003311	     0xf1f80000000	                         nop dword [rax]	      2366	memline.c	FUNCTION_24	IF_3	IF_5
0x4003318	            0x31ff	                            xor edi, edi	      2375	memline.c	FUNCTION_24	IF_6	CALL_12
0x400331a	      0xba05000000	                              mov edx, 5	      2375	memline.c	FUNCTION_24	IF_6	CALL_12
0x400331f	      0xbe00000000	                              mov esi, 0	      2375	memline.c	FUNCTION_24	IF_6	CALL_12
0x4003324	      0xe800000000	                          call 0x4003329	      2375	memline.c	FUNCTION_24	IF_6	CALL_12
0x4003329	        0x4883c408	                              add rsp, 8	      2379	memline.c	FUNCTION_24
0x400332d	          0x4889c7	                            mov rdi, rax	      2375	memline.c	FUNCTION_24	IF_6	CALL_12
0x4003330	              0x5b	                                 pop rbx	      2379	memline.c	FUNCTION_24
0x4003331	              0x5d	                                 pop rbp	      2379	memline.c	FUNCTION_24
0x4003332	            0x415c	                                 pop r12	      2379	memline.c	FUNCTION_24
0x4003334	            0x415d	                                 pop r13	      2379	memline.c	FUNCTION_24
0x4003336	            0x415e	                                 pop r14	      2379	memline.c	FUNCTION_24
0x4003338	            0x415f	                                 pop r15	      2379	memline.c	FUNCTION_24
0x400333a	      0xe900000000	                           jmp 0x400333f	      2375	memline.c	FUNCTION_24	IF_6	CALL_12
0x400333f	              0x90	                                     nop	      2375	memline.c	FUNCTION_24	IF_6	CALL_12
0x4003340	    0x8b0500000000	            mov eax, dword [0x04003346] 	      2370	memline.c	FUNCTION_24
0x4003346	          0x4109c6	                            or r14d, eax	      2370	memline.c	FUNCTION_24
0x4003349	          0x4585ed	                         test r13d, r13d	      2372	memline.c	FUNCTION_24	IF_6
0x400334c	    0x448935000000	           mov dword [0x04003353], r14d 	      2370	memline.c	FUNCTION_24
0x4003353	     0xf850dffffff	                           jne 0x4003266	      2372	memline.c	FUNCTION_24	IF_6
0x4003359	      0xe941ffffff	                           jmp 0x400329f	      2372	memline.c	FUNCTION_24	IF_6
ml_find_line	ELSE,6:SWITCH,0:DO,0:IF,24:FOR,3:functions,0:WHILE,0:CALL,16	275
0x4000220	            0x4157	                                push r15	      3562	memline.c	FUNCTION_43
0x4000222	            0x4156	                                push r14	      3562	memline.c	FUNCTION_43
0x4000224	          0x4989f7	                            mov r15, rsi	      3562	memline.c	FUNCTION_43
0x4000227	            0x4155	                                push r13	      3562	memline.c	FUNCTION_43
0x4000229	            0x4154	                                push r12	      3562	memline.c	FUNCTION_43
0x400022b	          0x4989fe	                            mov r14, rdi	      3562	memline.c	FUNCTION_43
0x400022e	              0x55	                                push rbp	      3562	memline.c	FUNCTION_43
0x400022f	              0x53	                                push rbx	      3562	memline.c	FUNCTION_43
0x4000230	            0x89d5	                            mov ebp, edx	      3562	memline.c	FUNCTION_43
0x4000232	        0x4883ec48	                           sub rsp, 0x48	      3562	memline.c	FUNCTION_43
0x4000236	        0x488b4708	                mov rax, qword [rdi + 8]	      3576	memline.c	FUNCTION_43
0x400023a	      0x4889442408	                mov qword [rsp + 8], rax	      3576	memline.c	FUNCTION_43
0x400023f	        0x488b4738	            mov rax, qword [rdi + 0x38] 	      3585	memline.c	FUNCTION_43	IF_1
0x4000243	          0x4885c0	                           test rax, rax	      3585	memline.c	FUNCTION_43	IF_1
0x4000246	            0x743c	                            je 0x4000284	      3585	memline.c	FUNCTION_43	IF_1
0x4000248	          0xf6c210	                           test dl, 0x10	      3587	memline.c	FUNCTION_43	IF_1	IF_2
0x400024b	            0x740a	                            je 0x4000257	      3587	memline.c	FUNCTION_43	IF_1	IF_2
0x400024d	        0x48397740	            cmp qword [rdi + 0x40], rsi 	      3588	memline.c	FUNCTION_43	IF_1	IF_2
0x4000251	     0xf8ebf020000	                           jle 0x4000516	      3588	memline.c	FUNCTION_43	IF_1	IF_2
0x4000257	        0x418b5610	            mov edx, dword [r14 + 0x10] 	      3607	memline.c	FUNCTION_43	IF_1
0x400025b	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3606	memline.c	FUNCTION_43	IF_1	CALL_1
0x4000260	          0x4889c6	                            mov rsi, rax	      3606	memline.c	FUNCTION_43	IF_1	CALL_1
0x4000263	            0x89d1	                            mov ecx, edx	      3606	memline.c	FUNCTION_43	IF_1	CALL_1
0x4000265	          0x83e204	                              and edx, 4	      3606	memline.c	FUNCTION_43	IF_1	CALL_1
0x4000268	          0x83e108	                              and ecx, 8	      3606	memline.c	FUNCTION_43	IF_1	CALL_1
0x400026b	      0xe800000000	                          call 0x4000270	      3606	memline.c	FUNCTION_43	IF_1	CALL_1
0x4000270	        0x418b7650	            mov esi, dword [r14 + 0x50] 	      3614	memline.c	FUNCTION_43	IF_1	IF_5
0x4000274	    0x49c746380000	               mov qword [r14 + 0x38], 0	      3608	memline.c	FUNCTION_43	IF_1
0x400027c	            0x85f6	                           test esi, esi	      3614	memline.c	FUNCTION_43	IF_1	IF_5
0x400027e	     0xf852d030000	                           jne 0x40005b1	      3614	memline.c	FUNCTION_43	IF_1	IF_5
0x4000284	          0x83fd02	                              cmp ebp, 2	      3618	memline.c	FUNCTION_43	IF_6
0x4000287	     0xf84a8030000	                            je 0x4000635	      3618	memline.c	FUNCTION_43	IF_6
0x400028d	          0x83fd13	                           cmp ebp, 0x13	      3626	memline.c	FUNCTION_43	IF_7
0x4000290	          0x498b1e	                    mov rbx, qword [r14]	      3624	memline.c	FUNCTION_43
0x4000293	     0xf84c9020000	                            je 0x4000562	      3626	memline.c	FUNCTION_43	IF_7
0x4000299	    0x41c746200000	               mov dword [r14 + 0x20], 0	      3641	memline.c	FUNCTION_43	IF_7	IF_9
0x40002a1	    0x41bd01000000	                             mov r13d, 1	      3623	memline.c	FUNCTION_43
0x40002a7	    0x41bc01000000	                             mov r12d, 1	      3621	memline.c	FUNCTION_43
0x40002ad	    0xc74424100100	               mov dword [rsp + 0x10], 1	      3621	memline.c	FUNCTION_43
0x40002b5	           0xf1f00	                         nop dword [rax]	      3621	memline.c	FUNCTION_43
0x40002b8	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      3651	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_10	CALL_3
0x40002bc	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3651	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_10	CALL_3
0x40002c1	          0x4c89e6	                            mov rsi, r12	      3651	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_10	CALL_3
0x40002c4	      0xe800000000	                          call 0x40002c9	      3651	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_10	CALL_3
0x40002c9	          0x4885c0	                           test rax, rax	      3651	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_10	CALL_3
0x40002cc	          0x4989c1	                             mov r9, rax	      3651	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_10	CALL_3
0x40002cf	     0xf84fe000000	                            je 0x40003d3	      3651	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_10	CALL_3
0x40002d5	          0x83fd12	                           cmp ebp, 0x12	      3657	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_11
0x40002d8	     0xf847a010000	                            je 0x4000458	      3657	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_11
0x40002de	        0x4d8b5128	              mov r10, qword [r9 + 0x28]	      3662	memline.c	FUNCTION_43	ELSE_2	FOR_2
0x40002e2	            0x31c0	                            xor eax, eax	      3660	memline.c	FUNCTION_43	ELSE_2	FOR_2	ELSE_3	IF_12
0x40002e4	          0x83fd11	                           cmp ebp, 0x11	      3660	memline.c	FUNCTION_43	ELSE_2	FOR_2	ELSE_3	IF_12
0x40002e7	           0xf94c0	                                 sete al	      3660	memline.c	FUNCTION_43	ELSE_2	FOR_2	ELSE_3	IF_12
0x40002ea	          0x4829c3	                            sub rbx, rax	      3660	memline.c	FUNCTION_43	ELSE_2	FOR_2	ELSE_3	IF_12
0x40002ed	        0x410fb702	                   movzx eax, word [r10]	      3663	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_13
0x40002f1	        0x663d6164	                          cmp ax, 0x6461	      3663	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_13
0x40002f5	     0xf8473010000	                            je 0x400046e	      3663	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_13
0x40002fb	        0x663d7470	                          cmp ax, 0x7074	      3674	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_14
0x40002ff	     0xf85c3020000	                           jne 0x40005c8	      3674	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_14
0x4000305	          0x4c89f7	                            mov rdi, r14	      3680	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_15	CALL_6
0x4000308	      0x4c894c2410	              mov qword [rsp + 0x10], r9	      3680	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_15	CALL_6
0x400030d	      0x4c89542418	             mov qword [rsp + 0x18], r10	      3680	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_15	CALL_6
0x4000312	      0xe899feffff	                   call sym.ml_add_stack	      3680	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_15	CALL_6
0x4000317	            0x85c0	                           test eax, eax	      3680	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_15	CALL_6
0x4000319	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	      3680	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_15	CALL_6
0x400031e	     0xf889e000000	                            js 0x40003c2	      3680	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_15	CALL_6
0x4000324	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	      3689	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3
0x4000329	            0x4898	                                    cdqe	      3682	memline.c	FUNCTION_43	ELSE_2	FOR_2
0x400032b	        0x48c1e005	                              shl rax, 5	      3682	memline.c	FUNCTION_43	ELSE_2	FOR_2
0x400032f	        0x49034618	             add rax, qword [r14 + 0x18]	      3682	memline.c	FUNCTION_43	ELSE_2	FOR_2
0x4000333	      0x410fb77202	               movzx esi, word [r10 + 2]	      3689	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3
0x4000338	          0x4889c7	                            mov rdi, rax	      3682	memline.c	FUNCTION_43	ELSE_2	FOR_2
0x400033b	          0x4c8920	                    mov qword [rax], r12	      3683	memline.c	FUNCTION_43	ELSE_2	FOR_2
0x400033e	        0x4c896808	                mov qword [rax + 8], r13	      3684	memline.c	FUNCTION_43	ELSE_2	FOR_2
0x4000342	        0x48895810	             mov qword [rax + 0x10], rbx	      3685	memline.c	FUNCTION_43	ELSE_2	FOR_2
0x4000346	    0xc74018ffffff	     mov dword [rax + 0x18], 0xffffffff 	      3686	memline.c	FUNCTION_43	ELSE_2	FOR_2
0x400034d	            0x85f6	                           test esi, esi	      3689	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3
0x400034f	            0x743c	                            je 0x400038d	      3689	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3
0x4000351	          0x4c89ea	                            mov rdx, r13	      3693	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16
0x4000354	        0x49035210	             add rdx, qword [r10 + 0x10]	      3693	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16
0x4000358	            0x31c9	                            xor ecx, ecx	      3693	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16
0x400035a	        0x498d4230	                   lea rax, [r10 + 0x30]	      3693	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16
0x400035e	          0x4939d7	                            cmp r15, rdx	      3693	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16
0x4000361	            0x7d23	                           jge 0x4000386	      3693	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16
0x4000363	      0xe9f0010000	                           jmp 0x4000558	      3693	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16
0x4000368	     0xf1f84000000	                   nop dword [rax + rax]	      3693	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16
0x4000370	          0x4889d3	                            mov rbx, rdx	      3693	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16
0x4000373	          0x480318	                    add rbx, qword [rax]	      3693	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16
0x4000376	        0x4883c020	                           add rax, 0x20	      3693	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16
0x400037a	          0x4939df	                            cmp r15, rbx	      3693	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16
0x400037d	     0xf8c7d000000	                            jl 0x4000400	      3693	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16
0x4000383	          0x4889da	                            mov rdx, rbx	      3693	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16
0x4000386	          0x83c101	                              add ecx, 1	      3689	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3
0x4000389	            0x39f1	                            cmp ecx, esi	      3689	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3
0x400038b	            0x75e3	                           jne 0x4000370	      3689	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3
0x400038d	          0x498b1e	                    mov rbx, qword [r14]	      3720	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_19	IF_20
0x4000390	      0x4c894c2410	              mov qword [rsp + 0x10], r9	      3720	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_19	IF_20
0x4000395	      0xba05000000	                              mov edx, 5	      3721	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_19	IF_20	CALL_10
0x400039a	          0x4939df	                            cmp r15, rbx	      3720	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_19	IF_20
0x400039d	     0xf8e5f020000	                           jle 0x4000602	      3720	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_19	IF_20
0x40003a3	      0xbe00000000	                              mov esi, 0	      3721	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_19	IF_20	CALL_10
0x40003a8	            0x31ff	                            xor edi, edi	      3721	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_19	IF_20	CALL_10
0x40003aa	      0xe800000000	                          call 0x40003af	      3721	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_19	IF_20	CALL_10
0x40003af	          0x4c89fe	                            mov rsi, r15	      3721	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_19	IF_20	CALL_10
0x40003b2	          0x4889c7	                            mov rdi, rax	      3721	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_19	IF_20	CALL_10
0x40003b5	          0x4829de	                            sub rsi, rbx	      3721	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_19	IF_20	CALL_10
0x40003b8	      0xe800000000	                          call 0x40003bd	      3721	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_19	IF_20	CALL_10
0x40003bd	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	      3721	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_19	IF_20	CALL_10
0x40003c2	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3742	memline.c	FUNCTION_43	CALL_14
0x40003c7	            0x31c9	                            xor ecx, ecx	      3742	memline.c	FUNCTION_43	CALL_14
0x40003c9	            0x31d2	                            xor edx, edx	      3742	memline.c	FUNCTION_43	CALL_14
0x40003cb	          0x4c89ce	                             mov rsi, r9	      3742	memline.c	FUNCTION_43	CALL_14
0x40003ce	      0xe800000000	                          call 0x40003d3	      3742	memline.c	FUNCTION_43	CALL_14
0x40003d3	          0x83fd11	                           cmp ebp, 0x11	      3749	memline.c	FUNCTION_43	IF_23
0x40003d6	     0xf8414020000	                            je 0x40005f0	      3749	memline.c	FUNCTION_43	IF_23
0x40003dc	          0x83fd12	                           cmp ebp, 0x12	      3751	memline.c	FUNCTION_43	ELSE_6	IF_24
0x40003df	     0xf843e020000	                            je 0x4000623	      3751	memline.c	FUNCTION_43	ELSE_6	IF_24
0x40003e5	    0x41c746200000	               mov dword [r14 + 0x20], 0	      3753	memline.c	FUNCTION_43
0x40003ed	            0x31c0	                            xor eax, eax	      3754	memline.c	FUNCTION_43
0x40003ef	        0x4883c448	                           add rsp, 0x48	      3755	memline.c	FUNCTION_43
0x40003f3	              0x5b	                                 pop rbx	      3755	memline.c	FUNCTION_43
0x40003f4	              0x5d	                                 pop rbp	      3755	memline.c	FUNCTION_43
0x40003f5	            0x415c	                                 pop r12	      3755	memline.c	FUNCTION_43
0x40003f7	            0x415d	                                 pop r13	      3755	memline.c	FUNCTION_43
0x40003f9	            0x415e	                                 pop r14	      3755	memline.c	FUNCTION_43
0x40003fb	            0x415f	                                 pop r15	      3755	memline.c	FUNCTION_43
0x40003fd	              0xc3	                                     ret	      3755	memline.c	FUNCTION_43
0x40003fe	            0x6690	                                     nop	      3755	memline.c	FUNCTION_43
0x4000400	          0x4989d5	                            mov r13, rdx	      3755	memline.c	FUNCTION_43
0x4000403	          0x4c63d9	                         movsxd r11, ecx	      3755	memline.c	FUNCTION_43
0x4000406	        0x4883eb01	                              sub rbx, 1	      3698	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16
0x400040a	            0x31d2	                            xor edx, edx	      3688	memline.c	FUNCTION_43	ELSE_2	FOR_2
0x400040c	        0x49c1e305	                              shl r11, 5	      3688	memline.c	FUNCTION_43	ELSE_2	FOR_2
0x4000410	          0x894f18	             mov dword [rdi + 0x18], ecx	      3695	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16
0x4000413	          0x4d01d3	                            add r11, r10	      3695	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16
0x4000416	        0x4d8b6308	                mov r12, qword [r11 + 8]	      3696	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16
0x400041a	        0x418b4320	            mov eax, dword [r11 + 0x20] 	      3697	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16
0x400041e	          0x4d85e4	                           test r12, r12	      3704	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16	IF_17
0x4000421	        0x89442410	             mov dword [rsp + 0x10], eax	      3697	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16
0x4000425	     0xf8891000000	                            js 0x40004bc	      3704	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16	IF_17
0x400042b	            0x39f1	                            cmp ecx, esi	      3718	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_19
0x400042d	     0xf8d5affffff	                           jge 0x400038d	      3718	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_19
0x4000433	          0x83fd11	                           cmp ebp, 0x11	      3728	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_21
0x4000436	            0x7468	                            je 0x40004a0	      3728	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_21
0x4000438	          0x83fd12	                           cmp ebp, 0x12	      3733	memline.c	FUNCTION_43	ELSE_2	FOR_2	ELSE_5	IF_22
0x400043b	            0x7473	                            je 0x40004b0	      3733	memline.c	FUNCTION_43	ELSE_2	FOR_2	ELSE_5	IF_22
0x400043d	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3738	memline.c	FUNCTION_43	ELSE_2	FOR_2	CALL_13
0x4000442	            0x31c9	                            xor ecx, ecx	      3738	memline.c	FUNCTION_43	ELSE_2	FOR_2	CALL_13
0x4000444	          0x4c89ce	                             mov rsi, r9	      3738	memline.c	FUNCTION_43	ELSE_2	FOR_2	CALL_13
0x4000447	      0xe800000000	                          call 0x400044c	      3738	memline.c	FUNCTION_43	ELSE_2	FOR_2	CALL_13
0x400044c	      0xe967feffff	                           jmp 0x40002b8	      3739	memline.c	FUNCTION_43	ELSE_2	FOR_2
0x4000451	     0xf1f80000000	                         nop dword [rax]	      3739	memline.c	FUNCTION_43	ELSE_2	FOR_2
0x4000458	        0x4d8b5128	              mov r10, qword [r9 + 0x28]	      3662	memline.c	FUNCTION_43	ELSE_2	FOR_2
0x400045c	        0x4883c301	                              add rbx, 1	      3658	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_11
0x4000460	        0x410fb702	                   movzx eax, word [r10]	      3663	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_13
0x4000464	        0x663d6164	                          cmp ax, 0x6461	      3663	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_13
0x4000468	     0xf858dfeffff	                           jne 0x40002fb	      3663	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_13
0x400046e	        0x4d896e40	             mov qword [r14 + 0x40], r13	      3666	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_13
0x4000472	        0x49895e48	             mov qword [r14 + 0x48], rbx	      3667	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_13
0x4000476	          0x4c89c8	                             mov rax, r9	      3651	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_10	CALL_3
0x4000479	        0x4d894e38	              mov qword [r14 + 0x38], r9	      3665	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_13
0x400047d	    0x41c746500000	               mov dword [r14 + 0x50], 0	      3668	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_13
0x4000485	      0x41836610f3	      and dword [r14 + 0x10], 0xfffffff3	      3669	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_13
0x400048a	        0x4883c448	                           add rsp, 0x48	      3755	memline.c	FUNCTION_43
0x400048e	              0x5b	                                 pop rbx	      3755	memline.c	FUNCTION_43
0x400048f	              0x5d	                                 pop rbp	      3755	memline.c	FUNCTION_43
0x4000490	            0x415c	                                 pop r12	      3755	memline.c	FUNCTION_43
0x4000492	            0x415d	                                 pop r13	      3755	memline.c	FUNCTION_43
0x4000494	            0x415e	                                 pop r14	      3755	memline.c	FUNCTION_43
0x4000496	            0x415f	                                 pop r15	      3755	memline.c	FUNCTION_43
0x4000498	              0xc3	                                     ret	      3755	memline.c	FUNCTION_43
0x4000499	     0xf1f80000000	                         nop dword [rax]	      3755	memline.c	FUNCTION_43
0x40004a0	      0x49836b1001	               sub qword [r11 + 0x10], 1	      3730	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_21
0x40004a5	      0xba01000000	                              mov edx, 1	      3731	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_21
0x40004aa	            0xeb91	                           jmp 0x400043d	      3731	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_21
0x40004ac	         0xf1f4000	                         nop dword [rax]	      3731	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_21
0x40004b0	      0x4983431001	               add qword [r11 + 0x10], 1	      3735	memline.c	FUNCTION_43	ELSE_2	FOR_2	ELSE_5	IF_22
0x40004b5	      0xba01000000	                              mov edx, 1	      3736	memline.c	FUNCTION_43	ELSE_2	FOR_2	ELSE_5	IF_22
0x40004ba	            0xeb81	                           jmp 0x400043d	      3736	memline.c	FUNCTION_43	ELSE_2	FOR_2	ELSE_5	IF_22
0x40004bc	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3706	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16	IF_17	CALL_8
0x40004c1	          0x4c89e6	                            mov rsi, r12	      3706	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16	IF_17	CALL_8
0x40004c4	      0x4c895c2438	             mov qword [rsp + 0x38], r11	      3706	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16	IF_17	CALL_8
0x40004c9	        0x894c2434	             mov dword [rsp + 0x34], ecx	      3706	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16	IF_17	CALL_8
0x40004cd	      0x4c89542428	             mov qword [rsp + 0x28], r10	      3706	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16	IF_17	CALL_8
0x40004d2	      0x4c894c2420	              mov qword [rsp + 0x20], r9	      3706	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16	IF_17	CALL_8
0x40004d7	        0x89542418	             mov dword [rsp + 0x18], edx	      3706	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16	IF_17	CALL_8
0x40004db	      0xe800000000	                          call 0x40004e0	      3706	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16	IF_17	CALL_8
0x40004e0	          0x4939c4	                            cmp r12, rax	      3707	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16	IF_17	IF_18
0x40004e3	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      3707	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16	IF_17	IF_18
0x40004e7	      0x4c8b4c2420	              mov r9, qword [rsp + 0x20]	      3707	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16	IF_17	IF_18
0x40004ec	      0x4c8b542428	            mov r10, qword [rsp + 0x28] 	      3707	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16	IF_17	IF_18
0x40004f1	        0x8b4c2434	            mov ecx, dword [rsp + 0x34] 	      3707	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16	IF_17	IF_18
0x40004f5	      0x4c8b5c2438	            mov r11, qword [rsp + 0x38] 	      3707	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16	IF_17	IF_18
0x40004fa	     0xf84be000000	                            je 0x40005be	      3707	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16	IF_17	IF_18
0x4000500	        0x49894308	                mov qword [r11 + 8], rax	      3710	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16	IF_17	IF_18
0x4000504	          0x4989c4	                            mov r12, rax	      3710	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16	IF_17	IF_18
0x4000507	      0x410fb77202	               movzx esi, word [r10 + 2]	      3710	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16	IF_17	IF_18
0x400050c	      0xba01000000	                              mov edx, 1	      3711	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16	IF_17	IF_18
0x4000511	      0xe915ffffff	                           jmp 0x400042b	      3711	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16	IF_17	IF_18
0x4000516	        0x488b5748	            mov rdx, qword [rdi + 0x48] 	      3589	memline.c	FUNCTION_43	IF_1	IF_2
0x400051a	          0x4839d6	                            cmp rsi, rdx	      3589	memline.c	FUNCTION_43	IF_1	IF_2
0x400051d	     0xf8f34fdffff	                            jg 0x4000257	      3589	memline.c	FUNCTION_43	IF_1	IF_2
0x4000523	    0x8b0d00000000	            mov ecx, dword [0x04000529] 	      3590	memline.c	FUNCTION_43	IF_1	IF_2
0x4000529	            0x85c9	                           test ecx, ecx	      3590	memline.c	FUNCTION_43	IF_1	IF_2
0x400052b	     0xf8526fdffff	                           jne 0x4000257	      3590	memline.c	FUNCTION_43	IF_1	IF_2
0x4000531	          0x83fd12	                           cmp ebp, 0x12	      3593	memline.c	FUNCTION_43	IF_1	IF_2	IF_3
0x4000534	     0xf8402010000	                            je 0x400063c	      3593	memline.c	FUNCTION_43	IF_1	IF_2	IF_3
0x400053a	          0x83fd11	                           cmp ebp, 0x11	      3598	memline.c	FUNCTION_43	IF_1	IF_2	ELSE_1	IF_4
0x400053d	     0xf85acfeffff	                           jne 0x40003ef	      3598	memline.c	FUNCTION_43	IF_1	IF_2	ELSE_1	IF_4
0x4000543	        0x4883ea01	                              sub rdx, 1	      3601	memline.c	FUNCTION_43	IF_1	IF_2	ELSE_1	IF_4
0x4000547	        0x836f5001	               sub dword [rdi + 0x50], 1	      3600	memline.c	FUNCTION_43	IF_1	IF_2	ELSE_1	IF_4
0x400054b	        0x48895748	             mov qword [rdi + 0x48], rdx	      3601	memline.c	FUNCTION_43	IF_1	IF_2	ELSE_1	IF_4
0x400054f	      0xe99bfeffff	                           jmp 0x40003ef	      3601	memline.c	FUNCTION_43	IF_1	IF_2	ELSE_1	IF_4
0x4000554	         0xf1f4000	                         nop dword [rax]	      3601	memline.c	FUNCTION_43	IF_1	IF_2	ELSE_1	IF_4
0x4000558	          0x4889d3	                            mov rbx, rdx	      3693	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3	IF_16
0x400055b	            0x31c9	                            xor ecx, ecx	      3689	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3
0x400055d	      0xe9a1feffff	                           jmp 0x4000403	      3689	memline.c	FUNCTION_43	ELSE_2	FOR_2	FOR_3
0x4000562	        0x418b5620	            mov edx, dword [r14 + 0x20] 	      3628	memline.c	FUNCTION_43	IF_7	FOR_1
0x4000566	          0x83ea01	                              sub edx, 1	      3628	memline.c	FUNCTION_43	IF_7	FOR_1
0x4000569	     0xf882afdffff	                            js 0x4000299	      3628	memline.c	FUNCTION_43	IF_7	FOR_1
0x400056f	          0x4863c2	                         movsxd rax, edx	      3628	memline.c	FUNCTION_43	IF_7	FOR_1
0x4000572	        0x48c1e005	                              shl rax, 5	      3628	memline.c	FUNCTION_43	IF_7	FOR_1
0x4000576	        0x49034618	             add rax, qword [r14 + 0x18]	      3628	memline.c	FUNCTION_43	IF_7	FOR_1
0x400057a	            0xeb14	                           jmp 0x4000590	      3628	memline.c	FUNCTION_43	IF_7	FOR_1
0x400057c	         0xf1f4000	                         nop dword [rax]	      3628	memline.c	FUNCTION_43	IF_7	FOR_1
0x4000580	          0x83ea01	                              sub edx, 1	      3628	memline.c	FUNCTION_43	IF_7	FOR_1
0x4000583	        0x4883e820	                           sub rax, 0x20	      3628	memline.c	FUNCTION_43	IF_7	FOR_1
0x4000587	          0x83faff	             cmp edx, 0xffffffffffffffff	      3628	memline.c	FUNCTION_43	IF_7	FOR_1
0x400058a	     0xf8409fdffff	                            je 0x4000299	      3628	memline.c	FUNCTION_43	IF_7	FOR_1
0x4000590	        0x4c8b6808	                mov r13, qword [rax + 8]	      3631	memline.c	FUNCTION_43	IF_7	FOR_1	IF_8
0x4000594	          0x4d39ef	                            cmp r15, r13	      3631	memline.c	FUNCTION_43	IF_7	FOR_1	IF_8
0x4000597	            0x7ce7	                            jl 0x4000580	      3631	memline.c	FUNCTION_43	IF_7	FOR_1	IF_8
0x4000599	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      3631	memline.c	FUNCTION_43	IF_7	FOR_1	IF_8
0x400059d	          0x4939cf	                            cmp r15, rcx	      3631	memline.c	FUNCTION_43	IF_7	FOR_1	IF_8
0x40005a0	            0x7fde	                            jg 0x4000580	      3631	memline.c	FUNCTION_43	IF_7	FOR_1	IF_8
0x40005a2	          0x4c8b20	                    mov r12, qword [rax]	      3633	memline.c	FUNCTION_43	IF_7	FOR_1	IF_8
0x40005a5	          0x4889cb	                            mov rbx, rcx	      3631	memline.c	FUNCTION_43	IF_7	FOR_1	IF_8
0x40005a8	        0x41895620	             mov dword [r14 + 0x20], edx	      3636	memline.c	FUNCTION_43	IF_7	FOR_1	IF_8
0x40005ac	      0xe9fcfcffff	                           jmp 0x40002ad	      3636	memline.c	FUNCTION_43	IF_7	FOR_1	IF_8
0x40005b1	          0x4c89f7	                            mov rdi, r14	      3615	memline.c	FUNCTION_43	IF_1	CALL_2
0x40005b4	      0xe817fbffff	                     call sym.ml_lineadd	      3615	memline.c	FUNCTION_43	IF_1	CALL_2
0x40005b9	      0xe9c6fcffff	                           jmp 0x4000284	      3615	memline.c	FUNCTION_43	IF_1	CALL_2
0x40005be	      0x410fb77202	               movzx esi, word [r10 + 2]	      3615	memline.c	FUNCTION_43	IF_1	CALL_2
0x40005c3	      0xe963feffff	                           jmp 0x400042b	      3615	memline.c	FUNCTION_43	IF_1	CALL_2
0x40005c8	      0xba05000000	                              mov edx, 5	      3676	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_14	CALL_5
0x40005cd	      0xbe00000000	                              mov esi, 0	      3676	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_14	CALL_5
0x40005d2	            0x31ff	                            xor edi, edi	      3676	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_14	CALL_5
0x40005d4	      0x4c894c2410	              mov qword [rsp + 0x10], r9	      3676	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_14	CALL_5
0x40005d9	      0xe800000000	                          call 0x40005de	      3676	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_14	CALL_5
0x40005de	          0x4889c7	                            mov rdi, rax	      3676	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_14	CALL_5
0x40005e1	      0xe800000000	                          call 0x40005e6	      3676	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_14	CALL_5
0x40005e6	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	      3677	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_14
0x40005eb	      0xe9d2fdffff	                           jmp 0x40003c2	      3677	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_14
0x40005f0	      0xbe01000000	                              mov esi, 1	      3750	memline.c	FUNCTION_43	CALL_15
0x40005f5	          0x4c89f7	                            mov rdi, r14	      3750	memline.c	FUNCTION_43	CALL_15
0x40005f8	      0xe8d3faffff	                     call sym.ml_lineadd	      3750	memline.c	FUNCTION_43	CALL_15
0x40005fd	      0xe9e3fdffff	                           jmp 0x40003e5	      3750	memline.c	FUNCTION_43	CALL_15
0x4000602	      0xbe00000000	                              mov esi, 0	      3725	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_19	CALL_12
0x4000607	            0x31ff	                            xor edi, edi	      3725	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_19	CALL_12
0x4000609	      0xe800000000	                          call 0x400060e	      3725	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_19	CALL_12
0x400060e	          0x4c89e6	                            mov rsi, r12	      3725	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_19	CALL_12
0x4000611	          0x4889c7	                            mov rdi, rax	      3725	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_19	CALL_12
0x4000614	      0xe800000000	                          call 0x4000619	      3725	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_19	CALL_12
0x4000619	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	      3725	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_19	CALL_12
0x400061e	      0xe99ffdffff	                           jmp 0x40003c2	      3725	memline.c	FUNCTION_43	ELSE_2	FOR_2	IF_19	CALL_12
0x4000623	      0xbeffffffff	                     mov esi, 0xffffffff	      3752	memline.c	FUNCTION_43	ELSE_6	IF_24
0x4000628	          0x4c89f7	                            mov rdi, r14	      3752	memline.c	FUNCTION_43	ELSE_6	IF_24
0x400062b	      0xe8a0faffff	                     call sym.ml_lineadd	      3752	memline.c	FUNCTION_43	ELSE_6	IF_24
0x4000630	      0xe9b0fdffff	                           jmp 0x40003e5	      3752	memline.c	FUNCTION_43	ELSE_6	IF_24
0x4000635	            0x31c0	                            xor eax, eax	      3619	memline.c	FUNCTION_43	IF_6
0x4000637	      0xe9b3fdffff	                           jmp 0x40003ef	      3619	memline.c	FUNCTION_43	IF_6
0x400063c	        0x4883c201	                              add rdx, 1	      3596	memline.c	FUNCTION_43	IF_1	IF_2	IF_3
0x4000640	        0x83475001	               add dword [rdi + 0x50], 1	      3595	memline.c	FUNCTION_43	IF_1	IF_2	IF_3
0x4000644	        0x48895748	             mov qword [rdi + 0x48], rdx	      3596	memline.c	FUNCTION_43	IF_1	IF_2	IF_3
0x4000648	      0xe9a2fdffff	                           jmp 0x40003ef	      3596	memline.c	FUNCTION_43	IF_1	IF_2	IF_3
ml_close_all	ELSE,0:SWITCH,0:DO,0:IF,0:FOR,0:functions,0:WHILE,0:CALL,5	33
0x40029e0	              0x55	                                push rbp	       871	memline.c	FUNCTION_10
0x40029e1	              0x53	                                push rbx	       871	memline.c	FUNCTION_10
0x40029e2	            0x89fd	                            mov ebp, edi	       871	memline.c	FUNCTION_10
0x40029e4	        0x4883ec08	                              sub rsp, 8	       871	memline.c	FUNCTION_10
0x40029e8	    0x488b1d000000	            mov rbx, qword [0x040029ef] 	       874	memline.c	FUNCTION_10	CALL_1
0x40029ef	          0x4885db	                           test rbx, rbx	       874	memline.c	FUNCTION_10	CALL_1
0x40029f2	            0x751d	                           jne 0x4002a11	       874	memline.c	FUNCTION_10	CALL_1
0x40029f4	            0xeb4a	                           jmp 0x4002a40	       874	memline.c	FUNCTION_10	CALL_1
0x40029f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       874	memline.c	FUNCTION_10	CALL_1
0x4002a00	          0x4889df	                            mov rdi, rbx	       875	memline.c	FUNCTION_10	CALL_2
0x4002a03	      0xe800000000	                          call 0x4002a08	       875	memline.c	FUNCTION_10	CALL_2
0x4002a08	        0x488b5b68	            mov rbx, qword [rbx + 0x68] 	       874	memline.c	FUNCTION_10	CALL_1
0x4002a0c	          0x4885db	                           test rbx, rbx	       874	memline.c	FUNCTION_10	CALL_1
0x4002a0f	            0x742f	                            je 0x4002a40	       874	memline.c	FUNCTION_10	CALL_1
0x4002a11	            0x31f6	                            xor esi, esi	       875	memline.c	FUNCTION_10	CALL_2
0x4002a13	            0x85ed	                           test ebp, ebp	       875	memline.c	FUNCTION_10	CALL_2
0x4002a15	            0x74e9	                            je 0x4002a00	       875	memline.c	FUNCTION_10	CALL_2
0x4002a17	        0xf6437d01	               test byte [rbx + 0x7d], 1	       875	memline.c	FUNCTION_10	CALL_2
0x4002a1b	      0xbe01000000	                              mov esi, 1	       875	memline.c	FUNCTION_10	CALL_2
0x4002a20	            0x74de	                            je 0x4002a00	       875	memline.c	FUNCTION_10	CALL_2
0x4002a22	    0x488b3d000000	            mov rdi, qword [0x04002a29] 	       876	memline.c	FUNCTION_10	CALL_3
0x4002a29	      0xbe26000000	                           mov esi, 0x26	       876	memline.c	FUNCTION_10	CALL_3
0x4002a2e	      0xe800000000	                          call 0x4002a33	       876	memline.c	FUNCTION_10	CALL_3
0x4002a33	            0x31f6	                            xor esi, esi	       875	memline.c	FUNCTION_10	CALL_2
0x4002a35	          0x4885c0	                           test rax, rax	       875	memline.c	FUNCTION_10	CALL_2
0x4002a38	        0x400f94c6	                                sete sil	       875	memline.c	FUNCTION_10	CALL_2
0x4002a3c	            0xebc2	                           jmp 0x4002a00	       875	memline.c	FUNCTION_10	CALL_2
0x4002a3e	            0x6690	                                     nop	       875	memline.c	FUNCTION_10	CALL_2
0x4002a40	      0xe800000000	                          call 0x4002a45	       878	memline.c	FUNCTION_10	CALL_4
0x4002a45	        0x4883c408	                              add rsp, 8	       883	memline.c	FUNCTION_10
0x4002a49	              0x5b	                                 pop rbx	       883	memline.c	FUNCTION_10
0x4002a4a	              0x5d	                                 pop rbp	       883	memline.c	FUNCTION_10
0x4002a4b	      0xe900000000	                 jmp sym.ml_close_notmod	       881	memline.c	FUNCTION_10	CALL_5
ml_setflags	ELSE,0:SWITCH,0:DO,0:IF,2:FOR,1:functions,0:WHILE,0:CALL,3	51
0x4006a90	        0x488b4708	                mov rax, qword [rdi + 8]	      4752	memline.c	FUNCTION_56	IF_1
0x4006a94	          0x4885c0	                           test rax, rax	      4752	memline.c	FUNCTION_56	IF_1
0x4006a97	     0xf84a5000000	                            je 0x4006b42	      4752	memline.c	FUNCTION_56	IF_1
0x4006a9d	            0x4155	                                push r13	      4748	memline.c	FUNCTION_56
0x4006a9f	            0x4154	                                push r12	      4748	memline.c	FUNCTION_56
0x4006aa1	              0x55	                                push rbp	      4748	memline.c	FUNCTION_56
0x4006aa2	              0x53	                                push rbx	      4748	memline.c	FUNCTION_56
0x4006aa3	        0x4883ec08	                              sub rsp, 8	      4748	memline.c	FUNCTION_56
0x4006aa7	        0x488b5828	            mov rbx, qword [rax + 0x28] 	      4754	memline.c	FUNCTION_56	FOR_1
0x4006aab	          0x4885db	                           test rbx, rbx	      4754	memline.c	FUNCTION_56	FOR_1
0x4006aae	            0x7511	                           jne 0x4006ac1	      4754	memline.c	FUNCTION_56	FOR_1
0x4006ab0	      0xe983000000	                           jmp 0x4006b38	      4754	memline.c	FUNCTION_56	FOR_1
0x4006ab5	           0xf1f00	                         nop dword [rax]	      4754	memline.c	FUNCTION_56	FOR_1
0x4006ab8	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      4754	memline.c	FUNCTION_56	FOR_1
0x4006abc	          0x4885db	                           test rbx, rbx	      4754	memline.c	FUNCTION_56	FOR_1
0x4006abf	            0x7477	                            je 0x4006b38	      4754	memline.c	FUNCTION_56	FOR_1
0x4006ac1	      0x48837b1000	               cmp qword [rbx + 0x10], 0	      4756	memline.c	FUNCTION_56	FOR_1	IF_2
0x4006ac6	            0x75f0	                           jne 0x4006ab8	      4756	memline.c	FUNCTION_56	FOR_1	IF_2
0x4006ac8	    0x83bfc8000000	               cmp dword [rdi + 0xc8], 1	      4759	memline.c	FUNCTION_56	FOR_1	IF_2
0x4006acf	        0x4c8b6b28	            mov r13, qword [rbx + 0x28] 	      4758	memline.c	FUNCTION_56	FOR_1	IF_2
0x4006ad3	          0x4889fd	                            mov rbp, rdi	      4758	memline.c	FUNCTION_56	FOR_1	IF_2
0x4006ad6	    0x450fb6a5ee03	         movzx r12d, byte [r13 + 0x3ee] 	      4760	memline.c	FUNCTION_56	FOR_1	IF_2
0x4006ade	            0x19c0	                            sbb eax, eax	      4759	memline.c	FUNCTION_56	FOR_1	IF_2
0x4006ae0	            0xf7d0	                                 not eax	      4759	memline.c	FUNCTION_56	FOR_1	IF_2
0x4006ae2	          0x83e055	                           and eax, 0x55	      4759	memline.c	FUNCTION_56	FOR_1	IF_2
0x4006ae5	    0x418885ef0300	              mov byte [r13 + 0x3ef], al	      4759	memline.c	FUNCTION_56	FOR_1	IF_2
0x4006aec	        0x4183e4fc	                    and r12d, 0xfffffffc	      4760	memline.c	FUNCTION_56	FOR_1	IF_2
0x4006af0	      0xe800000000	                          call 0x4006af5	      4761	memline.c	FUNCTION_56	FOR_1	IF_2	CALL_1
0x4006af5	          0x83c001	                              add eax, 1	      4760	memline.c	FUNCTION_56	FOR_1	IF_2
0x4006af8	          0x4c89ef	                            mov rdi, r13	      4763	memline.c	FUNCTION_56	FOR_1	IF_2	CALL_2
0x4006afb	          0x4109c4	                            or r12d, eax	      4760	memline.c	FUNCTION_56	FOR_1	IF_2
0x4006afe	    0x4588a5ee0300	            mov byte [r13 + 0x3ee], r12b	      4760	memline.c	FUNCTION_56	FOR_1	IF_2
0x4006b05	    0x488bb5881400	          mov rsi, qword [rbp + 0x1488] 	      4763	memline.c	FUNCTION_56	FOR_1	IF_2	CALL_2
0x4006b0c	    0x488b95101500	          mov rdx, qword [rbp + 0x1510] 	      4763	memline.c	FUNCTION_56	FOR_1	IF_2	CALL_2
0x4006b13	      0xe888a5ffff	             call sym.add_b0_fenc.isra.3	      4763	memline.c	FUNCTION_56	FOR_1	IF_2	CALL_2
0x4006b18	        0x804b3401	                 or byte [rbx + 0x34], 1	      4765	memline.c	FUNCTION_56	FOR_1	IF_2
0x4006b1c	      0xbe08000000	                              mov esi, 8	      4766	memline.c	FUNCTION_56	FOR_1	IF_2	CALL_3
0x4006b21	        0x488b7d08	                mov rdi, qword [rbp + 8]	      4766	memline.c	FUNCTION_56	FOR_1	IF_2	CALL_3
0x4006b25	        0x4883c408	                              add rsp, 8	      4770	memline.c	FUNCTION_56
0x4006b29	              0x5b	                                 pop rbx	      4770	memline.c	FUNCTION_56
0x4006b2a	              0x5d	                                 pop rbp	      4770	memline.c	FUNCTION_56
0x4006b2b	            0x415c	                                 pop r12	      4770	memline.c	FUNCTION_56
0x4006b2d	            0x415d	                                 pop r13	      4770	memline.c	FUNCTION_56
0x4006b2f	      0xe900000000	                           jmp 0x4006b34	      4766	memline.c	FUNCTION_56	FOR_1	IF_2	CALL_3
0x4006b34	         0xf1f4000	                         nop dword [rax]	      4766	memline.c	FUNCTION_56	FOR_1	IF_2	CALL_3
0x4006b38	        0x4883c408	                              add rsp, 8	      4770	memline.c	FUNCTION_56
0x4006b3c	              0x5b	                                 pop rbx	      4770	memline.c	FUNCTION_56
0x4006b3d	              0x5d	                                 pop rbp	      4770	memline.c	FUNCTION_56
0x4006b3e	            0x415c	                                 pop r12	      4770	memline.c	FUNCTION_56
0x4006b40	            0x415d	                                 pop r13	      4770	memline.c	FUNCTION_56
0x4006b42	            0xf3c3	                                     ret	      4770	memline.c	FUNCTION_56
ml_line_alloced	ELSE,0:SWITCH,0:DO,0:IF,0:FOR,0:functions,0:WHILE,0:CALL,0	4
0x4002aa0	    0x488b05000000	            mov rax, qword [0x04002aa7] 	      2513	memline.c	FUNCTION_30
0x4002aa7	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2513	memline.c	FUNCTION_30
0x4002aaa	          0x83e002	                              and eax, 2	      2513	memline.c	FUNCTION_30
0x4002aad	              0xc3	                                     ret	      2514	memline.c	FUNCTION_30
ml_new_data	ELSE,0:SWITCH,0:DO,0:IF,1:FOR,0:functions,0:WHILE,0:CALL,1	22
0x4000080	              0x55	                                push rbp	      3508	memline.c	FUNCTION_41
0x4000081	              0x53	                                push rbx	      3508	memline.c	FUNCTION_41
0x4000082	          0x4889fd	                            mov rbp, rdi	      3508	memline.c	FUNCTION_41
0x4000085	            0x89d3	                            mov ebx, edx	      3508	memline.c	FUNCTION_41
0x4000087	        0x4883ec08	                              sub rsp, 8	      3508	memline.c	FUNCTION_41
0x400008b	      0xe800000000	                          call 0x4000090	      3512	memline.c	FUNCTION_41	IF_1	CALL_1
0x4000090	          0x4885c0	                           test rax, rax	      3512	memline.c	FUNCTION_41	IF_1	CALL_1
0x4000093	            0x7429	                            je 0x40000be	      3512	memline.c	FUNCTION_41	IF_1	CALL_1
0x4000095	     0xfaf9d980400	           imul ebx, dword [rbp + 0x498]	      3517	memline.c	FUNCTION_41
0x400009c	        0x488b4828	            mov rcx, qword [rax + 0x28] 	      3515	memline.c	FUNCTION_41
0x40000a0	      0xba61640000	                         mov edx, 0x6461	      3516	memline.c	FUNCTION_41
0x40000a5	          0x668911	                      mov word [rcx], dx	      3516	memline.c	FUNCTION_41
0x40000a8	    0x48c741100000	               mov qword [rcx + 0x10], 0	      3519	memline.c	FUNCTION_41
0x40000b0	            0x89da	                            mov edx, ebx	      3517	memline.c	FUNCTION_41
0x40000b2	          0x89590c	              mov dword [rcx + 0xc], ebx	      3517	memline.c	FUNCTION_41
0x40000b5	          0x895908	                mov dword [rcx + 8], ebx	      3517	memline.c	FUNCTION_41
0x40000b8	          0x83ea1c	                           sub edx, 0x1c	      3518	memline.c	FUNCTION_41
0x40000bb	          0x895104	                mov dword [rcx + 4], edx	      3518	memline.c	FUNCTION_41
0x40000be	        0x4883c408	                              add rsp, 8	      3522	memline.c	FUNCTION_41
0x40000c2	              0x5b	                                 pop rbx	      3522	memline.c	FUNCTION_41
0x40000c3	              0x5d	                                 pop rbp	      3522	memline.c	FUNCTION_41
0x40000c4	              0xc3	                                     ret	      3522	memline.c	FUNCTION_41
ml_close	ELSE,0:SWITCH,0:DO,0:IF,2:FOR,0:functions,0:WHILE,0:CALL,4	25
0x4002970	              0x53	                                push rbx	       846	memline.c	FUNCTION_9
0x4002971	          0x4889fb	                            mov rbx, rdi	       846	memline.c	FUNCTION_9
0x4002974	        0x488b7f08	                mov rdi, qword [rdi + 8]	       847	memline.c	FUNCTION_9	IF_1
0x4002978	          0x4885ff	                           test rdi, rdi	       847	memline.c	FUNCTION_9	IF_1
0x400297b	            0x7437	                            je 0x40029b4	       847	memline.c	FUNCTION_9	IF_1
0x400297d	      0xe800000000	                          call 0x4002982	       849	memline.c	FUNCTION_9	CALL_1
0x4002982	      0x48837b2800	               cmp qword [rbx + 0x28], 0	       850	memline.c	FUNCTION_9	IF_2
0x4002987	            0x7537	                           jne 0x40029c0	       850	memline.c	FUNCTION_9	IF_2
0x4002989	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       852	memline.c	FUNCTION_9	CALL_3
0x400298d	      0xe800000000	                          call 0x4002992	       852	memline.c	FUNCTION_9	CALL_3
0x4002992	        0x488b7b58	            mov rdi, qword [rbx + 0x58] 	       854	memline.c	FUNCTION_9	CALL_4
0x4002996	          0x4885ff	                           test rdi, rdi	       854	memline.c	FUNCTION_9	CALL_4
0x4002999	            0x740d	                            je 0x40029a8	       854	memline.c	FUNCTION_9	CALL_4
0x400299b	      0xe800000000	                          call 0x40029a0	       854	memline.c	FUNCTION_9	CALL_4
0x40029a0	    0x48c743580000	               mov qword [rbx + 0x58], 0	       854	memline.c	FUNCTION_9	CALL_4
0x40029a8	        0x83637cfe	      and dword [rbx + 0x7c], 0xfffffffe	       860	memline.c	FUNCTION_9
0x40029ac	    0x48c743080000	                  mov qword [rbx + 8], 0	       856	memline.c	FUNCTION_9
0x40029b4	              0x5b	                                 pop rbx	       861	memline.c	FUNCTION_9
0x40029b5	              0xc3	                                     ret	       861	memline.c	FUNCTION_9
0x40029b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       861	memline.c	FUNCTION_9
0x40029c0	        0xf6431002	               test byte [rbx + 0x10], 2	       850	memline.c	FUNCTION_9	IF_2
0x40029c4	            0x74c3	                            je 0x4002989	       850	memline.c	FUNCTION_9	IF_2
0x40029c6	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	       851	memline.c	FUNCTION_9	CALL_2
0x40029ca	      0xe800000000	                          call 0x40029cf	       851	memline.c	FUNCTION_9	CALL_2
0x40029cf	            0xebb8	                           jmp 0x4002989	       851	memline.c	FUNCTION_9	CALL_2
ml_clearmarked	ELSE,0:SWITCH,0:DO,0:IF,3:FOR,2:functions,0:WHILE,0:CALL,1	44
0x4003c40	    0x488b3d000000	            mov rdi, qword [0x04003c47] 	      3367	memline.c	FUNCTION_39	IF_1
0x4003c47	              0x53	                                push rbx	      3361	memline.c	FUNCTION_39
0x4003c48	    0x488b1d000000	            mov rbx, qword [0x04003c4f] 	      3373	memline.c	FUNCTION_39	FOR_1
0x4003c4f	      0x48837f0800	                  cmp qword [rdi + 8], 0	      3367	memline.c	FUNCTION_39	IF_1
0x4003c54	            0x747f	                            je 0x4003cd5	      3367	memline.c	FUNCTION_39	IF_1
0x4003c56	          0x483b1f	                    cmp rbx, qword [rdi]	      3373	memline.c	FUNCTION_39	FOR_1
0x4003c59	            0x7f6f	                            jg 0x4003cca	      3373	memline.c	FUNCTION_39	FOR_1
0x4003c5b	       0xf1f440000	                   nop dword [rax + rax]	      3373	memline.c	FUNCTION_39	FOR_1
0x4003c60	      0xba13000000	                           mov edx, 0x13	      3380	memline.c	FUNCTION_39	FOR_1	IF_2	CALL_1
0x4003c65	          0x4889de	                            mov rsi, rbx	      3380	memline.c	FUNCTION_39	FOR_1	IF_2	CALL_1
0x4003c68	      0xe8b3c5ffff	                   call sym.ml_find_line	      3380	memline.c	FUNCTION_39	FOR_1	IF_2	CALL_1
0x4003c6d	          0x4885c0	                           test rax, rax	      3380	memline.c	FUNCTION_39	FOR_1	IF_2	CALL_1
0x4003c70	            0x7463	                            je 0x4003cd5	      3380	memline.c	FUNCTION_39	FOR_1	IF_2	CALL_1
0x4003c72	    0x488b3d000000	            mov rdi, qword [0x04003c79] 	      3385	memline.c	FUNCTION_39	FOR_1	FOR_2
0x4003c79	        0x4c8b4028	              mov r8, qword [rax + 0x28]	      3383	memline.c	FUNCTION_39	FOR_1
0x4003c7d	            0x89d8	                            mov eax, ebx	      3385	memline.c	FUNCTION_39	FOR_1	FOR_2
0x4003c7f	        0x4c8b4f48	              mov r9, qword [rdi + 0x48]	      3386	memline.c	FUNCTION_39	FOR_1	FOR_2
0x4003c83	          0x2b4740	             sub eax, dword [rdi + 0x40]	      3385	memline.c	FUNCTION_39	FOR_1	FOR_2
0x4003c86	          0x4c39cb	                             cmp rbx, r9	      3385	memline.c	FUNCTION_39	FOR_1	FOR_2
0x4003c89	            0x7fcb	                            jg 0x4003c56	      3385	memline.c	FUNCTION_39	FOR_1	FOR_2
0x4003c8b	      0x428d740801	                 lea esi, [rax + r9 + 1]	      3385	memline.c	FUNCTION_39	FOR_1	FOR_2
0x4003c90	            0x29de	                            sub esi, ebx	      3385	memline.c	FUNCTION_39	FOR_1	FOR_2
0x4003c92	            0xeb0b	                           jmp 0x4003c9f	      3385	memline.c	FUNCTION_39	FOR_1	FOR_2
0x4003c94	         0xf1f4000	                         nop dword [rax]	      3385	memline.c	FUNCTION_39	FOR_1	FOR_2
0x4003c98	          0x83c001	                              add eax, 1	      3386	memline.c	FUNCTION_39	FOR_1	FOR_2
0x4003c9b	            0x39f0	                            cmp eax, esi	      3385	memline.c	FUNCTION_39	FOR_1	FOR_2
0x4003c9d	            0x7422	                            je 0x4003cc1	      3385	memline.c	FUNCTION_39	FOR_1	FOR_2
0x4003c9f	          0x4863d0	                         movsxd rdx, eax	      3385	memline.c	FUNCTION_39	FOR_1	FOR_2
0x4003ca2	        0x498d0c90	                   lea rcx, [r8 + rdx*4]	      3385	memline.c	FUNCTION_39	FOR_1	FOR_2
0x4003ca6	          0x8b5118	            mov edx, dword [rcx + 0x18] 	      3387	memline.c	FUNCTION_39	FOR_1	FOR_2	IF_3
0x4003ca9	            0x85d2	                           test edx, edx	      3387	memline.c	FUNCTION_39	FOR_1	FOR_2	IF_3
0x4003cab	            0x79eb	                           jns 0x4003c98	      3387	memline.c	FUNCTION_39	FOR_1	FOR_2	IF_3
0x4003cad	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      3389	memline.c	FUNCTION_39	FOR_1	FOR_2	IF_3
0x4003cb3	          0x83c001	                              add eax, 1	      3386	memline.c	FUNCTION_39	FOR_1	FOR_2
0x4003cb6	          0x895118	             mov dword [rcx + 0x18], edx	      3389	memline.c	FUNCTION_39	FOR_1	FOR_2	IF_3
0x4003cb9	        0x834f1004	                or dword [rdi + 0x10], 4	      3390	memline.c	FUNCTION_39	FOR_1	FOR_2	IF_3
0x4003cbd	            0x39f0	                            cmp eax, esi	      3385	memline.c	FUNCTION_39	FOR_1	FOR_2
0x4003cbf	            0x75de	                           jne 0x4003c9f	      3385	memline.c	FUNCTION_39	FOR_1	FOR_2
0x4003cc1	        0x498d5901	                       lea rbx, [r9 + 1]	      3385	memline.c	FUNCTION_39	FOR_1	FOR_2
0x4003cc5	          0x483b1f	                    cmp rbx, qword [rdi]	      3373	memline.c	FUNCTION_39	FOR_1
0x4003cc8	            0x7e96	                           jle 0x4003c60	      3373	memline.c	FUNCTION_39	FOR_1
0x4003cca	    0x48c705000000	               mov qword [0x04003cd5], 0	      3394	memline.c	FUNCTION_39
0x4003cd5	              0x5b	                                 pop rbx	      3396	memline.c	FUNCTION_39
0x4003cd6	              0xc3	                                     ret	      3396	memline.c	FUNCTION_39
ml_delete	ELSE,0:SWITCH,0:DO,0:IF,0:FOR,0:functions,0:WHILE,0:CALL,2	14
0x4003b00	              0x55	                                push rbp	      3121	memline.c	FUNCTION_35
0x4003b01	              0x53	                                push rbx	      3121	memline.c	FUNCTION_35
0x4003b02	          0x4889fb	                            mov rbx, rdi	      3121	memline.c	FUNCTION_35
0x4003b05	            0x89f5	                            mov ebp, esi	      3121	memline.c	FUNCTION_35
0x4003b07	        0x4883ec08	                              sub rsp, 8	      3121	memline.c	FUNCTION_35
0x4003b0b	    0x488b3d000000	            mov rdi, qword [0x04003b12] 	      3122	memline.c	FUNCTION_35	CALL_1
0x4003b12	      0xe829f4ffff	                  call sym.ml_flush_line	      3122	memline.c	FUNCTION_35	CALL_1
0x4003b17	    0x488b3d000000	            mov rdi, qword [0x04003b1e] 	      3123	memline.c	FUNCTION_35	CALL_2
0x4003b1e	        0x4883c408	                              add rsp, 8	      3124	memline.c	FUNCTION_35
0x4003b22	            0x89ea	                            mov edx, ebp	      3123	memline.c	FUNCTION_35	CALL_2
0x4003b24	          0x4889de	                            mov rsi, rbx	      3123	memline.c	FUNCTION_35	CALL_2
0x4003b27	              0x5b	                                 pop rbx	      3124	memline.c	FUNCTION_35
0x4003b28	              0x5d	                                 pop rbp	      3124	memline.c	FUNCTION_35
0x4003b29	      0xe9a2f0ffff	                   jmp sym.ml_delete_int	      3123	memline.c	FUNCTION_35	CALL_2
ml_updatechunk	ELSE,9:SWITCH,0:DO,0:IF,23:FOR,1:functions,0:WHILE,1:CALL,9	338
0x4000650	        0x837f64ff	cmp dword [rdi + 0x64], 0xffffffffffffffff	      4935	memline.c	FUNCTION_60	IF_1
0x4000654	     0xf84f6000000	                            je 0x4000750	      4935	memline.c	FUNCTION_60	IF_1
0x400065a	          0x4885d2	                           test rdx, rdx	      4935	memline.c	FUNCTION_60	IF_1
0x400065d	     0xf84ed000000	                            je 0x4000750	      4935	memline.c	FUNCTION_60	IF_1
0x4000663	            0x4157	                                push r15	      4921	memline.c	FUNCTION_60
0x4000665	            0x4156	                                push r14	      4921	memline.c	FUNCTION_60
0x4000667	            0x4155	                                push r13	      4921	memline.c	FUNCTION_60
0x4000669	            0x4154	                                push r12	      4921	memline.c	FUNCTION_60
0x400066b	          0x4989fd	                            mov r13, rdi	      4921	memline.c	FUNCTION_60
0x400066e	              0x55	                                push rbp	      4921	memline.c	FUNCTION_60
0x400066f	              0x53	                                push rbx	      4921	memline.c	FUNCTION_60
0x4000670	          0x4989f4	                            mov r12, rsi	      4921	memline.c	FUNCTION_60
0x4000673	        0x4883ec18	                           sub rsp, 0x18	      4921	memline.c	FUNCTION_60
0x4000677	        0x4c8b5758	            mov r10, qword [rdi + 0x58] 	      4937	memline.c	FUNCTION_60	IF_2
0x400067b	    0x488b2d000000	            mov rbp, qword [0x04000682] 	      4927	memline.c	FUNCTION_60
0x4000682	    0x448b35000000	           mov r14d, dword [0x04000689] 	      4928	memline.c	FUNCTION_60
0x4000689	          0x4d85d2	                           test r10, r10	      4937	memline.c	FUNCTION_60	IF_2
0x400068c	     0xf849e020000	                            je 0x4000930	      4937	memline.c	FUNCTION_60	IF_2
0x4000692	          0x83f903	                              cmp ecx, 3	      4952	memline.c	FUNCTION_60	IF_4
0x4000695	     0xf8495010000	                            je 0x4000830	      4952	memline.c	FUNCTION_60	IF_4
0x400069b	    0x4c3b2d000000	            cmp r13, qword [0x040006a2] 	      4968	memline.c	FUNCTION_60	IF_5
0x40006a2	     0xf84b0000000	                            je 0x4000758	      4968	memline.c	FUNCTION_60	IF_5
0x40006a8	        0x418b7d64	            mov edi, dword [r13 + 0x64] 	      4972	memline.c	FUNCTION_60	IF_5	FOR_1
0x40006ac	          0x8d47ff	                      lea eax, [rdi - 1]	      4972	memline.c	FUNCTION_60	IF_5	FOR_1
0x40006af	            0x85c0	                           test eax, eax	      4971	memline.c	FUNCTION_60	IF_5	FOR_1
0x40006b1	     0xf8ec6020000	                           jle 0x400097d	      4971	memline.c	FUNCTION_60	IF_5	FOR_1
0x40006b7	          0x49632a	                 movsxd rbp, dword [r10]	      4973	memline.c	FUNCTION_60	IF_5	FOR_1
0x40006ba	        0x4883c501	                              add rbp, 1	      4973	memline.c	FUNCTION_60	IF_5	FOR_1
0x40006be	          0x4939ec	                            cmp r12, rbp	      4973	memline.c	FUNCTION_60	IF_5	FOR_1
0x40006c1	     0xf8cb6020000	                            jl 0x400097d	      4973	memline.c	FUNCTION_60	IF_5	FOR_1
0x40006c7	        0x4d8d4a10	                    lea r9, [r10 + 0x10]	      4973	memline.c	FUNCTION_60	IF_5	FOR_1
0x40006cb	      0xbb01000000	                              mov ebx, 1	      4973	memline.c	FUNCTION_60	IF_5	FOR_1
0x40006d0	            0xeb29	                           jmp 0x40006fb	      4973	memline.c	FUNCTION_60	IF_5	FOR_1
0x40006d2	    0x660f1f440000	                    nop word [rax + rax]	      4973	memline.c	FUNCTION_60	IF_5	FOR_1
0x40006d8	          0x4d6301	                   movsxd r8, dword [r9]	      4973	memline.c	FUNCTION_60	IF_5	FOR_1
0x40006db	          0x4989df	                            mov r15, rbx	      4973	memline.c	FUNCTION_60	IF_5	FOR_1
0x40006de	          0x4c89ce	                             mov rsi, r9	      4973	memline.c	FUNCTION_60	IF_5	FOR_1
0x40006e1	        0x49c1e704	                              shl r15, 4	      4973	memline.c	FUNCTION_60	IF_5	FOR_1
0x40006e5	        0x4983c110	                            add r9, 0x10	      4973	memline.c	FUNCTION_60	IF_5	FOR_1
0x40006e9	        0x4c8d5b01	                      lea r11, [rbx + 1]	      4973	memline.c	FUNCTION_60	IF_5	FOR_1
0x40006ed	          0x4901e8	                             add r8, rbp	      4973	memline.c	FUNCTION_60	IF_5	FOR_1
0x40006f0	          0x4d39c4	                             cmp r12, r8	      4973	memline.c	FUNCTION_60	IF_5	FOR_1
0x40006f3	            0x7c1b	                            jl 0x4000710	      4973	memline.c	FUNCTION_60	IF_5	FOR_1
0x40006f5	          0x4c89db	                            mov rbx, r11	      4973	memline.c	FUNCTION_60	IF_5	FOR_1
0x40006f8	          0x4c89c5	                             mov rbp, r8	      4973	memline.c	FUNCTION_60	IF_5	FOR_1
0x40006fb	            0x39c3	                            cmp ebx, eax	      4971	memline.c	FUNCTION_60	IF_5	FOR_1
0x40006fd	          0x4189de	                           mov r14d, ebx	      4974	memline.c	FUNCTION_60	IF_5	FOR_1
0x4000700	            0x7cd6	                            jl 0x40006d8	      4971	memline.c	FUNCTION_60	IF_5	FOR_1
0x4000702	          0x4863db	                         movsxd rbx, ebx	      4971	memline.c	FUNCTION_60	IF_5	FOR_1
0x4000705	          0x4989df	                            mov r15, rbx	      4971	memline.c	FUNCTION_60	IF_5	FOR_1
0x4000708	        0x49c1e704	                              shl r15, 4	      4971	memline.c	FUNCTION_60	IF_5	FOR_1
0x400070c	        0x4b8d343a	                    lea rsi, [r10 + r15]	      4971	memline.c	FUNCTION_60	IF_5	FOR_1
0x4000710	          0x83f902	                              cmp ecx, 2	      4988	memline.c	FUNCTION_60	IF_7
0x4000713	     0xf8457010000	                            je 0x4000870	      4988	memline.c	FUNCTION_60	IF_7
0x4000719	        0x48015608	                add qword [rsi + 8], rdx	      4990	memline.c	FUNCTION_60
0x400071d	          0x83f901	                              cmp ecx, 1	      4991	memline.c	FUNCTION_60	IF_8
0x4000720	     0xf848a000000	                            je 0x40007b0	      4991	memline.c	FUNCTION_60	IF_8
0x4000726	    0x4c892d000000	            mov qword [0x0400072d], r13 	      5145	memline.c	FUNCTION_60
0x400072d	    0x4c8925000000	            mov qword [0x04000734], r12 	      5146	memline.c	FUNCTION_60
0x4000734	    0x48892d000000	            mov qword [0x0400073b], rbp 	      5147	memline.c	FUNCTION_60
0x400073b	    0x448935000000	           mov dword [0x04000742], r14d 	      5148	memline.c	FUNCTION_60
0x4000742	        0x4883c418	                           add rsp, 0x18	      5149	memline.c	FUNCTION_60
0x4000746	              0x5b	                                 pop rbx	      5149	memline.c	FUNCTION_60
0x4000747	              0x5d	                                 pop rbp	      5149	memline.c	FUNCTION_60
0x4000748	            0x415c	                                 pop r12	      5149	memline.c	FUNCTION_60
0x400074a	            0x415d	                                 pop r13	      5149	memline.c	FUNCTION_60
0x400074c	            0x415e	                                 pop r14	      5149	memline.c	FUNCTION_60
0x400074e	            0x415f	                                 pop r15	      5149	memline.c	FUNCTION_60
0x4000750	            0xf3c3	                                     ret	      5149	memline.c	FUNCTION_60
0x4000752	    0x660f1f440000	                    nop word [rax + rax]	      5149	memline.c	FUNCTION_60
0x4000758	    0x488b05000000	            mov rax, qword [0x0400075f] 	      4969	memline.c	FUNCTION_60	IF_5
0x400075f	        0x4883c001	                              add rax, 1	      4969	memline.c	FUNCTION_60	IF_5
0x4000763	          0x4c39e0	                            cmp rax, r12	      4969	memline.c	FUNCTION_60	IF_5
0x4000766	     0xf853cffffff	                           jne 0x40006a8	      4969	memline.c	FUNCTION_60	IF_5
0x400076c	          0x83f901	                              cmp ecx, 1	      4969	memline.c	FUNCTION_60	IF_5
0x400076f	     0xf8533ffffff	                           jne 0x40006a8	      4969	memline.c	FUNCTION_60	IF_5
0x4000775	          0x4963de	                        movsxd rbx, r14d	      4979	memline.c	FUNCTION_60	ELSE_1	IF_6
0x4000778	        0x418b7d64	            mov edi, dword [r13 + 0x64] 	      4980	memline.c	FUNCTION_60	ELSE_1	IF_6
0x400077c	          0x4989df	                            mov r15, rbx	      4979	memline.c	FUNCTION_60	ELSE_1	IF_6
0x400077f	        0x49c1e704	                              shl r15, 4	      4979	memline.c	FUNCTION_60	ELSE_1	IF_6
0x4000783	        0x4b8d343a	                    lea rsi, [r10 + r15]	      4979	memline.c	FUNCTION_60	ELSE_1	IF_6
0x4000787	          0x486306	                 movsxd rax, dword [rsi]	      4979	memline.c	FUNCTION_60	ELSE_1	IF_6
0x400078a	          0x4801e8	                            add rax, rbp	      4979	memline.c	FUNCTION_60	ELSE_1	IF_6
0x400078d	          0x4939c4	                            cmp r12, rax	      4979	memline.c	FUNCTION_60	ELSE_1	IF_6
0x4000790	            0x7c1a	                            jl 0x40007ac	      4979	memline.c	FUNCTION_60	ELSE_1	IF_6
0x4000792	          0x8d4fff	                      lea ecx, [rdi - 1]	      4980	memline.c	FUNCTION_60	ELSE_1	IF_6
0x4000795	          0x4139ce	                           cmp r14d, ecx	      4980	memline.c	FUNCTION_60	ELSE_1	IF_6
0x4000798	            0x7d12	                           jge 0x40007ac	      4980	memline.c	FUNCTION_60	ELSE_1	IF_6
0x400079a	        0x4983c710	                           add r15, 0x10	      4980	memline.c	FUNCTION_60	ELSE_1	IF_6
0x400079e	        0x4183c601	                             add r14d, 1	      4984	memline.c	FUNCTION_60	ELSE_1	IF_6
0x40007a2	          0x4889c5	                            mov rbp, rax	      4984	memline.c	FUNCTION_60	ELSE_1	IF_6
0x40007a5	        0x4b8d343a	                    lea rsi, [r10 + r15]	      4984	memline.c	FUNCTION_60	ELSE_1	IF_6
0x40007a9	          0x4963de	                        movsxd rbx, r14d	      4984	memline.c	FUNCTION_60	ELSE_1	IF_6
0x40007ac	        0x48015608	                add qword [rsi + 8], rdx	      4990	memline.c	FUNCTION_60
0x40007b0	        0x418b4560	            mov eax, dword [r13 + 0x60] 	      4996	memline.c	FUNCTION_60	IF_8	IF_9
0x40007b4	          0x83c701	                              add edi, 1	      4996	memline.c	FUNCTION_60	IF_8	IF_9
0x40007b7	          0x830601	                      add dword [rsi], 1	      4993	memline.c	FUNCTION_60	IF_8
0x40007ba	            0x39c7	                            cmp edi, eax	      4996	memline.c	FUNCTION_60	IF_8	IF_9
0x40007bc	     0xf8dd0010000	                           jge 0x4000992	      4996	memline.c	FUNCTION_60	IF_8	IF_9
0x40007c2	        0x4b8d343a	                    lea rsi, [r10 + r15]	      5013	memline.c	FUNCTION_60	IF_8	IF_11
0x40007c6	            0x8b06	                    mov eax, dword [rsi]	      5013	memline.c	FUNCTION_60	IF_8	IF_11
0x40007c8	      0x3d1f030000	                          cmp eax, 0x31f	      5013	memline.c	FUNCTION_60	IF_8	IF_11
0x40007cd	     0xf8ffb010000	                            jg 0x40009ce	      5013	memline.c	FUNCTION_60	IF_8	IF_11
0x40007d3	      0x3d8f010000	                          cmp eax, 0x18f	      5066	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15
0x40007d8	     0xf8e48ffffff	                           jle 0x4000726	      5066	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15
0x40007de	        0x418b4564	            mov eax, dword [r13 + 0x64] 	      5067	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15
0x40007e2	          0x8d50ff	                      lea edx, [rax - 1]	      5067	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15
0x40007e5	          0x4139d6	                           cmp r14d, edx	      5067	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15
0x40007e8	     0xf8538ffffff	                           jne 0x4000726	      5067	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15
0x40007ee	        0x498b7500	                    mov rsi, qword [r13]	      5068	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15
0x40007f2	          0x4889f2	                            mov rdx, rsi	      5068	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15
0x40007f5	          0x4c29e2	                            sub rdx, r12	      5068	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15
0x40007f8	        0x4883fa01	                              cmp rdx, 1	      5068	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15
0x40007fc	     0xf8f24ffffff	                            jg 0x4000726	      5068	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15
0x4000802	        0x4883c301	                              add rbx, 1	      5074	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15
0x4000806	          0x83c001	                              add eax, 1	      5075	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15
0x4000809	        0x48c1e304	                              shl rbx, 4	      5074	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15
0x400080d	        0x41894564	             mov dword [r13 + 0x64], eax	      5075	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15
0x4000811	          0x4c01d3	                            add rbx, r10	      5074	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15
0x4000814	          0x4939f4	                            cmp r12, rsi	      5076	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15	IF_16
0x4000817	     0xf85eb020000	                           jne 0x4000b08	      5076	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15	IF_16
0x400081d	    0xc70300000000	                      mov dword [rbx], 0	      5078	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15	IF_16
0x4000823	    0x48c743080000	                  mov qword [rbx + 8], 0	      5079	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15	IF_16
0x400082b	      0xe9f6feffff	                           jmp 0x4000726	      5079	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15	IF_16
0x4000830	      0x49837d0001	                      cmp qword [r13], 1	      4952	memline.c	FUNCTION_60	IF_4
0x4000835	     0xf856dfeffff	                           jne 0x40006a8	      4952	memline.c	FUNCTION_60	IF_4
0x400083b	        0x498b7d30	            mov rdi, qword [r13 + 0x30] 	      4960	memline.c	FUNCTION_60	IF_4	CALL_2
0x400083f	    0x41c745640100	               mov dword [r13 + 0x64], 1	      4957	memline.c	FUNCTION_60	IF_4
0x4000847	    0x41c702010000	                      mov dword [r10], 1	      4958	memline.c	FUNCTION_60	IF_4
0x400084e	        0x4c891424	                    mov qword [rsp], r10	      4958	memline.c	FUNCTION_60	IF_4
0x4000852	      0xe800000000	                          call 0x4000857	      4960	memline.c	FUNCTION_60	IF_4	CALL_2
0x4000857	        0x4c8b1424	                    mov r10, qword [rsp]	      4959	memline.c	FUNCTION_60	IF_4
0x400085b	        0x4883c001	                              add rax, 1	      4959	memline.c	FUNCTION_60	IF_4
0x400085f	        0x49894208	                mov qword [r10 + 8], rax	      4959	memline.c	FUNCTION_60	IF_4
0x4000863	      0xe9dafeffff	                           jmp 0x4000742	      4961	memline.c	FUNCTION_60	IF_4
0x4000868	     0xf1f84000000	                   nop dword [rax + rax]	      4961	memline.c	FUNCTION_60	IF_4
0x4000870	            0x8b3e	                    mov edi, dword [rsi]	      5109	memline.c	FUNCTION_60	ELSE_7	IF_19
0x4000872	        0x48295608	                sub qword [rsi + 8], rdx	      4990	memline.c	FUNCTION_60
0x4000876	          0x4139c6	                           cmp r14d, eax	      5111	memline.c	FUNCTION_60	ELSE_7	IF_19	IF_20
0x4000879	    0x48c705000000	               mov qword [0x04000884], 0	      5110	memline.c	FUNCTION_60	ELSE_7	IF_19
0x4000884	          0x8d57ff	                      lea edx, [rdi - 1]	      5109	memline.c	FUNCTION_60	ELSE_7	IF_19
0x4000887	            0x8916	                    mov dword [rsi], edx	      5109	memline.c	FUNCTION_60	ELSE_7	IF_19
0x4000889	            0x7d25	                           jge 0x40008b0	      5111	memline.c	FUNCTION_60	ELSE_7	IF_19	IF_20
0x400088b	          0x8b4e10	            mov ecx, dword [rsi + 0x10] 	      5112	memline.c	FUNCTION_60	ELSE_7	IF_19	IF_20
0x400088e	             0x1d1	                            add ecx, edx	      5112	memline.c	FUNCTION_60	ELSE_7	IF_19	IF_20
0x4000890	    0x81f990010000	                          cmp ecx, 0x190	      5112	memline.c	FUNCTION_60	ELSE_7	IF_19	IF_20
0x4000896	            0x7f18	                            jg 0x40008b0	      5112	memline.c	FUNCTION_60	ELSE_7	IF_19	IF_20
0x4000898	        0x4183c601	                             add r14d, 1	      5115	memline.c	FUNCTION_60	ELSE_7	IF_19	IF_20
0x400089c	          0x4963f6	                        movsxd rsi, r14d	      5116	memline.c	FUNCTION_60	ELSE_7	IF_19	IF_20
0x400089f	        0x48c1e604	                              shl rsi, 4	      5116	memline.c	FUNCTION_60	ELSE_7	IF_19	IF_20
0x40008a3	          0x4c01d6	                            add rsi, r10	      5116	memline.c	FUNCTION_60	ELSE_7	IF_19	IF_20
0x40008a6	          0x8b56f0	             mov edx, dword [rsi - 0x10]	      5116	memline.c	FUNCTION_60	ELSE_7	IF_19	IF_20
0x40008a9	             0x316	                    add edx, dword [rsi]	      5116	memline.c	FUNCTION_60	ELSE_7	IF_19	IF_20
0x40008ab	            0xeb14	                           jmp 0x40008c1	      5116	memline.c	FUNCTION_60	ELSE_7	IF_19	IF_20
0x40008ad	           0xf1f00	                         nop dword [rax]	      5116	memline.c	FUNCTION_60	ELSE_7	IF_19	IF_20
0x40008b0	          0x4585f6	                         test r14d, r14d	      5118	memline.c	FUNCTION_60	ELSE_7	IF_19	ELSE_8	IF_21
0x40008b3	            0x7455	                            je 0x400090a	      5118	memline.c	FUNCTION_60	ELSE_7	IF_19	ELSE_8	IF_21
0x40008b5	          0x83fa0a	                            cmp edx, 0xa	      5125	memline.c	FUNCTION_60	ELSE_7	IF_19	ELSE_9	IF_22
0x40008b8	     0xf8f21020000	                            jg 0x4000adf	      5125	memline.c	FUNCTION_60	ELSE_7	IF_19	ELSE_9	IF_22
0x40008be	           0x356f0	             add edx, dword [rsi - 0x10]	      5125	memline.c	FUNCTION_60	ELSE_7	IF_19	ELSE_9	IF_22
0x40008c1	          0x8956f0	             mov dword [rsi - 0x10], edx	      5133	memline.c	FUNCTION_60	ELSE_7	IF_19
0x40008c4	        0x488b5608	                mov rdx, qword [rsi + 8]	      5134	memline.c	FUNCTION_60	ELSE_7	IF_19
0x40008c8	        0x480156f8	                add qword [rsi - 8], rdx	      5134	memline.c	FUNCTION_60	ELSE_7	IF_19
0x40008cc	          0x4139c6	                           cmp r14d, eax	      5136	memline.c	FUNCTION_60	ELSE_7	IF_19	IF_23
0x40008cf	        0x41894564	             mov dword [r13 + 0x64], eax	      5135	memline.c	FUNCTION_60	ELSE_7	IF_19
0x40008d3	     0xf8d69feffff	                           jge 0x4000742	      5136	memline.c	FUNCTION_60	ELSE_7	IF_19	IF_23
0x40008d9	          0x4963ce	                        movsxd rcx, r14d	      5138	memline.c	FUNCTION_60	ELSE_7	IF_19	IF_23	CALL_9
0x40008dc	          0x4429f0	                           sub eax, r14d	        59	string3.h	FUNCTION_64	CALL_3
0x40008df	        0x4883c101	                              add rcx, 1	      5138	memline.c	FUNCTION_60	ELSE_7	IF_19	IF_23	CALL_9
0x40008e3	          0x4863d0	                         movsxd rdx, eax	        59	string3.h	FUNCTION_64	CALL_3
0x40008e6	        0x48c1e104	                              shl rcx, 4	      5138	memline.c	FUNCTION_60	ELSE_7	IF_19	IF_23	CALL_9
0x40008ea	        0x48c1e204	                              shl rdx, 4	        59	string3.h	FUNCTION_64	CALL_3
0x40008ee	        0x498d340a	                    lea rsi, [r10 + rcx]	        59	string3.h	FUNCTION_64	CALL_3
0x40008f2	      0x498d7c0af0	             lea rdi, [r10 + rcx - 0x10]	        59	string3.h	FUNCTION_64	CALL_3
0x40008f7	        0x4883c418	                           add rsp, 0x18	      5149	memline.c	FUNCTION_60
0x40008fb	              0x5b	                                 pop rbx	      5149	memline.c	FUNCTION_60
0x40008fc	              0x5d	                                 pop rbp	      5149	memline.c	FUNCTION_60
0x40008fd	            0x415c	                                 pop r12	      5149	memline.c	FUNCTION_60
0x40008ff	            0x415d	                                 pop r13	      5149	memline.c	FUNCTION_60
0x4000901	            0x415e	                                 pop r14	      5149	memline.c	FUNCTION_60
0x4000903	            0x415f	                                 pop r15	      5149	memline.c	FUNCTION_60
0x4000905	      0xe900000000	                           jmp 0x400090a	        59	string3.h	FUNCTION_64	CALL_3
0x400090a	            0x85d2	                           test edx, edx	      5118	memline.c	FUNCTION_60	ELSE_7	IF_19	ELSE_8	IF_21
0x400090c	     0xf8f30feffff	                            jg 0x4000742	      5118	memline.c	FUNCTION_60	ELSE_7	IF_19	ELSE_8	IF_21
0x4000912	        0x41894564	             mov dword [r13 + 0x64], eax	      5120	memline.c	FUNCTION_60	ELSE_7	IF_19	ELSE_8	IF_21
0x4000916	            0x4898	                                    cdqe	        59	string3.h	FUNCTION_64	CALL_3
0x4000918	        0x498d7210	                   lea rsi, [r10 + 0x10]	        59	string3.h	FUNCTION_64	CALL_3
0x400091c	        0x48c1e004	                              shl rax, 4	        59	string3.h	FUNCTION_64	CALL_3
0x4000920	          0x4c89d7	                            mov rdi, r10	        59	string3.h	FUNCTION_64	CALL_3
0x4000923	          0x4889c2	                            mov rdx, rax	        59	string3.h	FUNCTION_64	CALL_3
0x4000926	            0xebcf	                           jmp 0x40008f7	        59	string3.h	FUNCTION_64	CALL_3
0x4000928	     0xf1f84000000	                   nop dword [rax + rax]	        59	string3.h	FUNCTION_64	CALL_3
0x4000930	      0xbf40060000	                          mov edi, 0x640	      4940	memline.c	FUNCTION_60	IF_2	CALL_1
0x4000935	        0x894c240c	              mov dword [rsp + 0xc], ecx	      4940	memline.c	FUNCTION_60	IF_2	CALL_1
0x4000939	        0x48891424	                    mov qword [rsp], rdx	      4940	memline.c	FUNCTION_60	IF_2	CALL_1
0x400093d	      0xe800000000	                          call 0x4000942	      4940	memline.c	FUNCTION_60	IF_2	CALL_1
0x4000942	          0x4885c0	                           test rax, rax	      4941	memline.c	FUNCTION_60	IF_2	IF_3
0x4000945	        0x49894558	             mov qword [r13 + 0x58], rax	      4939	memline.c	FUNCTION_60	IF_2
0x4000949	        0x488b1424	                    mov rdx, qword [rsp]	      4941	memline.c	FUNCTION_60	IF_2	IF_3
0x400094d	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      4941	memline.c	FUNCTION_60	IF_2	IF_3
0x4000951	     0xf84a4010000	                            je 0x4000afb	      4941	memline.c	FUNCTION_60	IF_2	IF_3
0x4000957	    0x41c745606400	           mov dword [r13 + 0x60], 0x64 	      4946	memline.c	FUNCTION_60	IF_2
0x400095f	    0x41c745640100	               mov dword [r13 + 0x64], 1	      4947	memline.c	FUNCTION_60	IF_2
0x4000967	          0x4989c2	                            mov r10, rax	      4949	memline.c	FUNCTION_60	IF_2
0x400096a	    0xc70001000000	                      mov dword [rax], 1	      4948	memline.c	FUNCTION_60	IF_2
0x4000970	    0x48c740080100	                  mov qword [rax + 8], 1	      4949	memline.c	FUNCTION_60	IF_2
0x4000978	      0xe915fdffff	                           jmp 0x4000692	      4949	memline.c	FUNCTION_60	IF_2
0x400097d	          0x4c89d6	                            mov rsi, r10	      4973	memline.c	FUNCTION_60	IF_5	FOR_1
0x4000980	          0x4531ff	                          xor r15d, r15d	      4973	memline.c	FUNCTION_60	IF_5	FOR_1
0x4000983	            0x31db	                            xor ebx, ebx	      4973	memline.c	FUNCTION_60	IF_5	FOR_1
0x4000985	          0x4531f6	                          xor r14d, r14d	      4973	memline.c	FUNCTION_60	IF_5	FOR_1
0x4000988	      0xbd01000000	                              mov ebp, 1	      4973	memline.c	FUNCTION_60	IF_5	FOR_1
0x400098d	      0xe97efdffff	                           jmp 0x4000710	      4973	memline.c	FUNCTION_60	IF_5	FOR_1
0x4000992	          0x8d0440	                  lea eax, [rax + rax*2]	      5000	memline.c	FUNCTION_60	IF_8	IF_9
0x4000995	          0x4c89d7	                            mov rdi, r10	      5002	memline.c	FUNCTION_60	IF_8	IF_9	CALL_3
0x4000998	        0x4c891424	                    mov qword [rsp], r10	      5002	memline.c	FUNCTION_60	IF_8	IF_9	CALL_3
0x400099c	            0x89c2	                            mov edx, eax	      5000	memline.c	FUNCTION_60	IF_8	IF_9
0x400099e	          0xc1ea1f	                           shr edx, 0x1f	      5000	memline.c	FUNCTION_60	IF_8	IF_9
0x40009a1	             0x1d0	                            add eax, edx	      5000	memline.c	FUNCTION_60	IF_8	IF_9
0x40009a3	            0xd1f8	                              sar eax, 1	      5000	memline.c	FUNCTION_60	IF_8	IF_9
0x40009a5	          0x4863f0	                         movsxd rsi, eax	      5002	memline.c	FUNCTION_60	IF_8	IF_9	CALL_3
0x40009a8	        0x41894560	             mov dword [r13 + 0x60], eax	      5000	memline.c	FUNCTION_60	IF_8	IF_9
0x40009ac	        0x48c1e604	                              shl rsi, 4	      5002	memline.c	FUNCTION_60	IF_8	IF_9	CALL_3
0x40009b0	      0xe800000000	                          call 0x40009b5	      5002	memline.c	FUNCTION_60	IF_8	IF_9	CALL_3
0x40009b5	          0x4885c0	                           test rax, rax	      5004	memline.c	FUNCTION_60	IF_8	IF_9	IF_10
0x40009b8	        0x49894558	             mov qword [r13 + 0x58], rax	      5001	memline.c	FUNCTION_60	IF_8	IF_9
0x40009bc	        0x4c8b1424	                    mov r10, qword [rsp]	      5004	memline.c	FUNCTION_60	IF_8	IF_9	IF_10
0x40009c0	     0xf842d010000	                            je 0x4000af3	      5004	memline.c	FUNCTION_60	IF_8	IF_9	IF_10
0x40009c6	          0x4989c2	                            mov r10, rax	      5004	memline.c	FUNCTION_60	IF_8	IF_9	IF_10
0x40009c9	      0xe9f4fdffff	                           jmp 0x40007c2	      5004	memline.c	FUNCTION_60	IF_8	IF_9	IF_10
0x40009ce	        0x418b5564	            mov edx, dword [r13 + 0x64] 	        59	string3.h	FUNCTION_64	CALL_3
0x40009d2	        0x4883c301	                              add rbx, 1	      5020	memline.c	FUNCTION_60	IF_8	IF_11	CALL_5
0x40009d6	        0x48c1e304	                              shl rbx, 4	      5020	memline.c	FUNCTION_60	IF_8	IF_11	CALL_5
0x40009da	        0x498d3c1a	                    lea rdi, [r10 + rbx]	        59	string3.h	FUNCTION_64	CALL_3
0x40009de	          0x4429f2	                           sub edx, r14d	        59	string3.h	FUNCTION_64	CALL_3
0x40009e1	          0x4863d2	                         movsxd rdx, edx	        59	string3.h	FUNCTION_64	CALL_3
0x40009e4	        0x48c1e204	                              shl rdx, 4	        59	string3.h	FUNCTION_64	CALL_3
0x40009e8	      0xe800000000	                          call 0x40009ed	        59	string3.h	FUNCTION_64	CALL_3
0x40009ed	        0x49396d00	                    cmp qword [r13], rbp	      5027	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1
0x40009f1	     0xf8e56010000	                           jle 0x4000b4d	      5027	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1
0x40009f7	          0x4531f6	                          xor r14d, r14d	      5027	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1
0x40009fa	          0x4531e4	                          xor r12d, r12d	      5027	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1
0x40009fd	           0xf1f00	                         nop dword [rax]	      5027	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1
0x4000a00	      0xba13000000	                           mov edx, 0x13	      5030	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1	IF_12	CALL_6
0x4000a05	          0x4889ee	                            mov rsi, rbp	      5030	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1	IF_12	CALL_6
0x4000a08	          0x4c89ef	                            mov rdi, r13	      5030	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1	IF_12	CALL_6
0x4000a0b	      0xe810f8ffff	                   call sym.ml_find_line	      5030	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1	IF_12	CALL_6
0x4000a10	          0x4885c0	                           test rax, rax	      5030	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1	IF_12	CALL_6
0x4000a13	     0xf84e2000000	                            je 0x4000afb	      5030	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1	IF_12	CALL_6
0x4000a19	        0x488b7028	            mov rsi, qword [rax + 0x28] 	      5035	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1
0x4000a1d	        0x498b4548	            mov rax, qword [r13 + 0x48] 	      5036	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1
0x4000a21	        0x498b4d40	            mov rcx, qword [r13 + 0x40] 	      5036	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1
0x4000a25	          0x8d5001	                      lea edx, [rax + 1]	      5036	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1
0x4000a28	            0x89d7	                            mov edi, edx	      5036	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1
0x4000a2a	            0x89ea	                            mov edx, ebp	      5038	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1
0x4000a2c	        0x488d6801	                      lea rbp, [rax + 1]	      5039	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1
0x4000a30	            0x29ca	                            sub edx, ecx	      5038	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1
0x4000a32	            0x29cf	                            sub edi, ecx	      5036	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1
0x4000a34	            0x85d2	                           test edx, edx	      5040	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1	IF_13
0x4000a36	            0x7560	                           jne 0x4000a98	      5040	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1	IF_13
0x4000a38	            0x89f8	                            mov eax, edi	      5046	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1	IF_14
0x4000a3a	          0x8b4e0c	              mov ecx, dword [rsi + 0xc]	      5041	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1	IF_13
0x4000a3d	            0x29d0	                            sub eax, edx	      5046	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1	IF_14
0x4000a3f	          0x4401f0	                           add eax, r14d	      5046	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1	IF_14
0x4000a42	      0x3d90010000	                          cmp eax, 0x190	      5046	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1	IF_14
0x4000a47	            0x7e6c	                           jle 0x4000ab5	      5046	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1	IF_14
0x4000a49	          0x4429f2	                           sub edx, r14d	      5056	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1
0x4000a4c	    0x8d828f010000	                  lea eax, [rdx + 0x18f]	      5056	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1
0x4000a52	            0x4898	                                    cdqe	      5056	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1
0x4000a54	        0x8b448618	    mov eax, dword [rsi + rax*4 + 0x18] 	      5056	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1
0x4000a58	      0x25ffffff7f	                     and eax, 0x7fffffff	      5056	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1
0x4000a5d	            0x29c1	                            sub ecx, eax	      5056	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1
0x4000a5f	          0x4901cc	                            add r12, rcx	      5056	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1
0x4000a62	      0xb890010000	                          mov eax, 0x190	      5049	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1	IF_14
0x4000a67	        0x498b5558	            mov rdx, qword [r13 + 0x58] 	      5058	memline.c	FUNCTION_60	IF_8	IF_11
0x4000a6b	    0x48c705000000	               mov qword [0x04000a76], 0	      5063	memline.c	FUNCTION_60	IF_8	IF_11
0x4000a76	          0x4901d7	                            add r15, rdx	      5058	memline.c	FUNCTION_60	IF_8	IF_11
0x4000a79	          0x4801d3	                            add rbx, rdx	      5059	memline.c	FUNCTION_60	IF_8	IF_11
0x4000a7c	          0x418907	                    mov dword [r15], eax	      5058	memline.c	FUNCTION_60	IF_8	IF_11
0x4000a7f	            0x2903	                    sub dword [rbx], eax	      5059	memline.c	FUNCTION_60	IF_8	IF_11
0x4000a81	        0x4d896708	                mov qword [r15 + 8], r12	      5060	memline.c	FUNCTION_60	IF_8	IF_11
0x4000a85	        0x4c296308	                sub qword [rbx + 8], r12	      5061	memline.c	FUNCTION_60	IF_8	IF_11
0x4000a89	      0x4183456401	               add dword [r13 + 0x64], 1	      5062	memline.c	FUNCTION_60	IF_8	IF_11
0x4000a8e	      0xe9affcffff	                           jmp 0x4000742	      5064	memline.c	FUNCTION_60	IF_8	IF_11
0x4000a93	       0xf1f440000	                   nop dword [rax + rax]	      5064	memline.c	FUNCTION_60	IF_8	IF_11
0x4000a98	          0x8d42ff	                      lea eax, [rdx - 1]	      5043	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1	ELSE_2
0x4000a9b	            0x4898	                                    cdqe	      5043	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1	ELSE_2
0x4000a9d	        0x8b4c8618	    mov ecx, dword [rsi + rax*4 + 0x18] 	      5043	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1	ELSE_2
0x4000aa1	            0x89f8	                            mov eax, edi	      5046	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1	IF_14
0x4000aa3	            0x29d0	                            sub eax, edx	      5046	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1	IF_14
0x4000aa5	          0x4401f0	                           add eax, r14d	      5046	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1	IF_14
0x4000aa8	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      5043	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1	ELSE_2
0x4000aae	      0x3d90010000	                          cmp eax, 0x190	      5046	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1	IF_14
0x4000ab3	            0x7f94	                            jg 0x4000a49	      5046	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1	IF_14
0x4000ab5	          0x8d57ff	                      lea edx, [rdi - 1]	      5056	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1
0x4000ab8	          0x4863d2	                         movsxd rdx, edx	      5056	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1
0x4000abb	        0x8b549618	    mov edx, dword [rsi + rdx*4 + 0x18] 	      5056	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1
0x4000abf	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      5056	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1
0x4000ac5	            0x29d1	                            sub ecx, edx	      5056	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1
0x4000ac7	          0x4901cc	                            add r12, rcx	      5056	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1
0x4000aca	        0x49396d00	                    cmp qword [r13], rbp	      5027	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1
0x4000ace	            0x7e97	                           jle 0x4000a67	      5027	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1
0x4000ad0	      0x3d90010000	                          cmp eax, 0x190	      5028	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1
0x4000ad5	            0x748b	                            je 0x4000a62	      5028	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1
0x4000ad7	          0x4189c6	                           mov r14d, eax	      5028	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1
0x4000ada	      0xe921ffffff	                           jmp 0x4000a00	      5028	memline.c	FUNCTION_60	IF_8	IF_11	WHILE_1
0x4000adf	           0x356f0	             add edx, dword [rsi - 0x10]	      5126	memline.c	FUNCTION_60	ELSE_7	IF_19	ELSE_9	IF_22
0x4000ae2	    0x81fa90010000	                          cmp edx, 0x190	      5126	memline.c	FUNCTION_60	ELSE_7	IF_19	ELSE_9	IF_22
0x4000ae8	     0xf8ed3fdffff	                           jle 0x40008c1	      5126	memline.c	FUNCTION_60	ELSE_7	IF_19	ELSE_9	IF_22
0x4000aee	      0xe94ffcffff	                           jmp 0x4000742	      5126	memline.c	FUNCTION_60	ELSE_7	IF_19	ELSE_9	IF_22
0x4000af3	          0x4c89d7	                            mov rdi, r10	      5007	memline.c	FUNCTION_60	IF_8	IF_9	IF_10	CALL_4
0x4000af6	      0xe800000000	                          call 0x4000afb	      5007	memline.c	FUNCTION_60	IF_8	IF_9	IF_10	CALL_4
0x4000afb	    0x41c74564ffff	     mov dword [r13 + 0x64], 0xffffffff 	      5008	memline.c	FUNCTION_60	IF_8	IF_9	IF_10
0x4000b03	      0xe93afcffff	                           jmp 0x4000742	      5009	memline.c	FUNCTION_60	IF_8	IF_9	IF_10
0x4000b08	      0xba13000000	                           mov edx, 0x13	      5087	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15	ELSE_5	CALL_7
0x4000b0d	          0x4c89ef	                            mov rdi, r13	      5087	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15	ELSE_5	CALL_7
0x4000b10	      0xe80bf7ffff	                   call sym.ml_find_line	      5087	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15	ELSE_5	CALL_7
0x4000b15	          0x4885c0	                           test rax, rax	      5088	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15	ELSE_5	IF_17
0x4000b18	            0x74e1	                            je 0x4000afb	      5088	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15	ELSE_5	IF_17
0x4000b1a	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      5093	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15	ELSE_5
0x4000b1e	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      5094	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15	ELSE_5	IF_18
0x4000b22	        0x4883f801	                              cmp rax, 1	      5094	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15	ELSE_5	IF_18
0x4000b26	            0x742f	                            je 0x4000b57	      5094	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15	ELSE_5	IF_18
0x4000b28	        0x8b448210	    mov eax, dword [rdx + rax*4 + 0x10] 	      5097	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15	ELSE_5	ELSE_6
0x4000b2c	      0x25ffffff7f	                     and eax, 0x7fffffff	      5097	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15	ELSE_5	ELSE_6
0x4000b31	          0x2b4208	                sub eax, dword [rdx + 8]	      5097	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15	ELSE_5	ELSE_6
0x4000b34	            0x4898	                                    cdqe	      5100	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15	ELSE_5
0x4000b36	    0xc70301000000	                      mov dword [rbx], 1	      5101	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15	ELSE_5
0x4000b3c	        0x482943f8	                sub qword [rbx - 8], rax	      5102	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15	ELSE_5
0x4000b40	        0x48894308	                mov qword [rbx + 8], rax	      5100	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15	ELSE_5
0x4000b44	        0x836bf001	               sub dword [rbx - 0x10], 1	      5103	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15	ELSE_5
0x4000b48	      0xe9d9fbffff	                           jmp 0x4000726	      5103	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15	ELSE_5
0x4000b4d	          0x4531e4	                          xor r12d, r12d	      5025	memline.c	FUNCTION_60	IF_8	IF_11
0x4000b50	            0x31c0	                            xor eax, eax	      5026	memline.c	FUNCTION_60	IF_8	IF_11
0x4000b52	      0xe910ffffff	                           jmp 0x4000a67	      5026	memline.c	FUNCTION_60	IF_8	IF_11
0x4000b57	          0x8b420c	              mov eax, dword [rdx + 0xc]	      5095	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15	ELSE_5	IF_18
0x4000b5a	          0x2b4208	                sub eax, dword [rdx + 8]	      5095	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15	ELSE_5	IF_18
0x4000b5d	            0xebd5	                           jmp 0x4000b34	      5095	memline.c	FUNCTION_60	IF_8	ELSE_4	IF_15	ELSE_5	IF_18
ml_firstmarked	ELSE,0:SWITCH,0:DO,0:IF,3:FOR,2:functions,0:WHILE,0:CALL,1	41
0x4003ba0	    0x488b3d000000	            mov rdi, qword [0x04003ba7] 	      3323	memline.c	FUNCTION_38	IF_1
0x4003ba7	              0x53	                                push rbx	      3317	memline.c	FUNCTION_38
0x4003ba8	    0x488b1d000000	            mov rbx, qword [0x04003baf] 	      3330	memline.c	FUNCTION_38	FOR_1
0x4003baf	      0x48837f0800	                  cmp qword [rdi + 8], 0	      3323	memline.c	FUNCTION_38	IF_1
0x4003bb4	            0x747a	                            je 0x4003c30	      3323	memline.c	FUNCTION_38	IF_1
0x4003bb6	          0x483b1f	                    cmp rbx, qword [rdi]	      3330	memline.c	FUNCTION_38	FOR_1
0x4003bb9	            0x7f75	                            jg 0x4003c30	      3330	memline.c	FUNCTION_38	FOR_1
0x4003bbb	      0xba13000000	                           mov edx, 0x13	      3337	memline.c	FUNCTION_38	FOR_1	IF_2	CALL_1
0x4003bc0	          0x4889de	                            mov rsi, rbx	      3337	memline.c	FUNCTION_38	FOR_1	IF_2	CALL_1
0x4003bc3	      0xe858c6ffff	                   call sym.ml_find_line	      3337	memline.c	FUNCTION_38	FOR_1	IF_2	CALL_1
0x4003bc8	          0x4885c0	                           test rax, rax	      3337	memline.c	FUNCTION_38	FOR_1	IF_2	CALL_1
0x4003bcb	            0x7463	                            je 0x4003c30	      3337	memline.c	FUNCTION_38	FOR_1	IF_2	CALL_1
0x4003bcd	    0x488b3d000000	            mov rdi, qword [0x04003bd4] 	      3342	memline.c	FUNCTION_38	FOR_1	FOR_2
0x4003bd4	        0x4c8b4028	              mov r8, qword [rax + 0x28]	      3340	memline.c	FUNCTION_38	FOR_1
0x4003bd8	            0x89d8	                            mov eax, ebx	      3342	memline.c	FUNCTION_38	FOR_1	FOR_2
0x4003bda	        0x488b7748	            mov rsi, qword [rdi + 0x48] 	      3343	memline.c	FUNCTION_38	FOR_1	FOR_2
0x4003bde	          0x2b4740	             sub eax, dword [rdi + 0x40]	      3342	memline.c	FUNCTION_38	FOR_1	FOR_2
0x4003be1	          0x4839f3	                            cmp rbx, rsi	      3342	memline.c	FUNCTION_38	FOR_1	FOR_2
0x4003be4	            0x7e16	                           jle 0x4003bfc	      3342	memline.c	FUNCTION_38	FOR_1	FOR_2
0x4003be6	            0xebce	                           jmp 0x4003bb6	      3342	memline.c	FUNCTION_38	FOR_1	FOR_2
0x4003be8	     0xf1f84000000	                   nop dword [rax + rax]	      3342	memline.c	FUNCTION_38	FOR_1	FOR_2
0x4003bf0	        0x4883c301	                              add rbx, 1	      3343	memline.c	FUNCTION_38	FOR_1	FOR_2
0x4003bf4	          0x83c001	                              add eax, 1	      3343	memline.c	FUNCTION_38	FOR_1	FOR_2
0x4003bf7	          0x4839f3	                            cmp rbx, rsi	      3342	memline.c	FUNCTION_38	FOR_1	FOR_2
0x4003bfa	            0x7fba	                            jg 0x4003bb6	      3342	memline.c	FUNCTION_38	FOR_1	FOR_2
0x4003bfc	          0x4863c8	                         movsxd rcx, eax	      3344	memline.c	FUNCTION_38	FOR_1	FOR_2	IF_3
0x4003bff	      0x418b548818	     mov edx, dword [r8 + rcx*4 + 0x18] 	      3344	memline.c	FUNCTION_38	FOR_1	FOR_2	IF_3
0x4003c04	            0x85d2	                           test edx, edx	      3344	memline.c	FUNCTION_38	FOR_1	FOR_2	IF_3
0x4003c06	            0x79e8	                           jns 0x4003bf0	      3344	memline.c	FUNCTION_38	FOR_1	FOR_2	IF_3
0x4003c08	        0x488d4301	                      lea rax, [rbx + 1]	      3348	memline.c	FUNCTION_38	FOR_1	FOR_2	IF_3
0x4003c0c	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      3346	memline.c	FUNCTION_38	FOR_1	FOR_2	IF_3
0x4003c12	      0x4189548818	      mov dword [r8 + rcx*4 + 0x18], edx	      3346	memline.c	FUNCTION_38	FOR_1	FOR_2	IF_3
0x4003c17	        0x834f1004	                or dword [rdi + 0x10], 4	      3347	memline.c	FUNCTION_38	FOR_1	FOR_2	IF_3
0x4003c1b	    0x488905000000	            mov qword [0x04003c22], rax 	      3348	memline.c	FUNCTION_38	FOR_1	FOR_2	IF_3
0x4003c22	          0x4889d8	                            mov rax, rbx	      3349	memline.c	FUNCTION_38	FOR_1	FOR_2	IF_3
0x4003c25	              0x5b	                                 pop rbx	      3354	memline.c	FUNCTION_38
0x4003c26	              0xc3	                                     ret	      3354	memline.c	FUNCTION_38
0x4003c27	    0x660f1f840000	                    nop word [rax + rax]	      3354	memline.c	FUNCTION_38
0x4003c30	            0x31c0	                            xor eax, eax	      3324	memline.c	FUNCTION_38	IF_1
0x4003c32	              0x5b	                                 pop rbx	      3354	memline.c	FUNCTION_38
0x4003c33	              0xc3	                                     ret	      3354	memline.c	FUNCTION_38
ml_append	ELSE,0:SWITCH,0:DO,0:IF,2:FOR,0:functions,0:WHILE,0:CALL,3	48
0x40039f0	            0x4154	                                push r12	      2534	memline.c	FUNCTION_31
0x40039f2	              0x55	                                push rbp	      2534	memline.c	FUNCTION_31
0x40039f3	          0x4189d4	                           mov r12d, edx	      2534	memline.c	FUNCTION_31
0x40039f6	              0x53	                                push rbx	      2534	memline.c	FUNCTION_31
0x40039f7	          0x4889fb	                            mov rbx, rdi	      2534	memline.c	FUNCTION_31
0x40039fa	          0x4889f5	                            mov rbp, rsi	      2534	memline.c	FUNCTION_31
0x40039fd	        0x4883ec10	                           sub rsp, 0x10	      2534	memline.c	FUNCTION_31
0x4003a01	    0x488b3d000000	            mov rdi, qword [0x04003a08] 	      2536	memline.c	FUNCTION_31	IF_1	CALL_1
0x4003a08	      0x48837f0800	                  cmp qword [rdi + 8], 0	      2536	memline.c	FUNCTION_31	IF_1	CALL_1
0x4003a0d	            0x7459	                            je 0x4003a68	      2536	memline.c	FUNCTION_31	IF_1	CALL_1
0x4003a0f	      0x48837f2800	               cmp qword [rdi + 0x28], 0	      2539	memline.c	FUNCTION_31	IF_2
0x4003a14	            0x751a	                           jne 0x4003a30	      2539	memline.c	FUNCTION_31	IF_2
0x4003a16	          0x483b1f	                    cmp rbx, qword [rdi]	      2590	memline.c	FUNCTION_33	IF_1
0x4003a19	            0x7e2e	                           jle 0x4003a49	      2590	memline.c	FUNCTION_33	IF_1
0x4003a1b	        0x4883c410	                           add rsp, 0x10	      2542	memline.c	FUNCTION_31
0x4003a1f	            0x31c0	                            xor eax, eax	      2542	memline.c	FUNCTION_31
0x4003a21	              0x5b	                                 pop rbx	      2542	memline.c	FUNCTION_31
0x4003a22	              0x5d	                                 pop rbp	      2542	memline.c	FUNCTION_31
0x4003a23	            0x415c	                                 pop r12	      2542	memline.c	FUNCTION_31
0x4003a25	              0xc3	                                     ret	      2542	memline.c	FUNCTION_31
0x4003a26	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2542	memline.c	FUNCTION_31
0x4003a30	        0x894c240c	              mov dword [rsp + 0xc], ecx	      2542	memline.c	FUNCTION_31
0x4003a34	      0xe807f5ffff	                  call sym.ml_flush_line	      2540	memline.c	FUNCTION_31	CALL_2
0x4003a39	    0x488b3d000000	            mov rdi, qword [0x04003a40] 	      2540	memline.c	FUNCTION_31	CALL_2
0x4003a40	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      2540	memline.c	FUNCTION_31	CALL_2
0x4003a44	          0x483b1f	                    cmp rbx, qword [rdi]	      2590	memline.c	FUNCTION_33	IF_1
0x4003a47	            0x7fd2	                            jg 0x4003a1b	      2590	memline.c	FUNCTION_33	IF_1
0x4003a49	        0x4883c410	                           add rsp, 0x10	      2542	memline.c	FUNCTION_31
0x4003a4d	          0x4189c8	                            mov r8d, ecx	      2542	memline.c	FUNCTION_31
0x4003a50	          0x4889ea	                            mov rdx, rbp	      2542	memline.c	FUNCTION_31
0x4003a53	          0x4489e1	                           mov ecx, r12d	      2542	memline.c	FUNCTION_31
0x4003a56	          0x4889de	                            mov rsi, rbx	      2542	memline.c	FUNCTION_31
0x4003a59	          0x4531c9	                            xor r9d, r9d	      2542	memline.c	FUNCTION_31
0x4003a5c	              0x5b	                                 pop rbx	      2542	memline.c	FUNCTION_31
0x4003a5d	              0x5d	                                 pop rbp	      2542	memline.c	FUNCTION_31
0x4003a5e	            0x415c	                                 pop r12	      2542	memline.c	FUNCTION_31
0x4003a60	      0xe9abdaffff	            jmp sym.ml_append_int.part.6	      2542	memline.c	FUNCTION_31
0x4003a65	           0xf1f00	                         nop dword [rax]	      2542	memline.c	FUNCTION_31
0x4003a68	            0x31ff	                            xor edi, edi	      2536	memline.c	FUNCTION_31	IF_1	CALL_1
0x4003a6a	            0x31d2	                            xor edx, edx	      2536	memline.c	FUNCTION_31	IF_1	CALL_1
0x4003a6c	            0x31f6	                            xor esi, esi	      2536	memline.c	FUNCTION_31	IF_1	CALL_1
0x4003a6e	        0x894c240c	              mov dword [rsp + 0xc], ecx	      2536	memline.c	FUNCTION_31	IF_1	CALL_1
0x4003a72	      0xe800000000	                          call 0x4003a77	      2536	memline.c	FUNCTION_31	IF_1	CALL_1
0x4003a77	            0x85c0	                           test eax, eax	      2536	memline.c	FUNCTION_31	IF_1	CALL_1
0x4003a79	    0x488b3d000000	            mov rdi, qword [0x04003a80] 	      2536	memline.c	FUNCTION_31	IF_1	CALL_1
0x4003a80	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      2536	memline.c	FUNCTION_31	IF_1	CALL_1
0x4003a84	            0x7589	                           jne 0x4003a0f	      2536	memline.c	FUNCTION_31	IF_1	CALL_1
0x4003a86	            0xeb93	                           jmp 0x4003a1b	      2536	memline.c	FUNCTION_31	IF_1	CALL_1
ml_add_stack	ELSE,0:SWITCH,0:DO,0:IF,3:FOR,0:functions,0:WHILE,0:CALL,4	37
0x40001b0	            0x4154	                                push r12	      3764	memline.c	FUNCTION_44
0x40001b2	              0x55	                                push rbp	      3764	memline.c	FUNCTION_44
0x40001b3	          0x4889fd	                            mov rbp, rdi	      3764	memline.c	FUNCTION_44
0x40001b6	              0x53	                                push rbx	      3764	memline.c	FUNCTION_44
0x40001b7	          0x8b5f20	            mov ebx, dword [rdi + 0x20] 	      3768	memline.c	FUNCTION_44
0x40001ba	          0x3b5f24	            cmp ebx, dword [rdi + 0x24] 	      3771	memline.c	FUNCTION_44	IF_1
0x40001bd	            0x89d8	                            mov eax, ebx	      3771	memline.c	FUNCTION_44	IF_1
0x40001bf	            0x740f	                            je 0x40001d0	      3771	memline.c	FUNCTION_44	IF_1
0x40001c1	          0x83c001	                              add eax, 1	      3787	memline.c	FUNCTION_44
0x40001c4	          0x894520	            mov dword [rbp + 0x20], eax 	      3787	memline.c	FUNCTION_44
0x40001c7	            0x89d8	                            mov eax, ebx	      3768	memline.c	FUNCTION_44
0x40001c9	              0x5b	                                 pop rbx	      3789	memline.c	FUNCTION_44
0x40001ca	              0x5d	                                 pop rbp	      3789	memline.c	FUNCTION_44
0x40001cb	            0x415c	                                 pop r12	      3789	memline.c	FUNCTION_44
0x40001cd	              0xc3	                                     ret	      3789	memline.c	FUNCTION_44
0x40001ce	            0x6690	                                     nop	      3789	memline.c	FUNCTION_44
0x40001d0	          0x8d7b05	                      lea edi, [rbx + 5]	      3775	memline.c	FUNCTION_44	IF_1	CALL_2
0x40001d3	          0xc1e705	                              shl edi, 5	      3775	memline.c	FUNCTION_44	IF_1	CALL_2
0x40001d6	      0xe800000000	                          call 0x40001db	      3775	memline.c	FUNCTION_44	IF_1	CALL_2
0x40001db	          0x4885c0	                           test rax, rax	      3777	memline.c	FUNCTION_44	IF_1	IF_2
0x40001de	          0x4989c4	                            mov r12, rax	      3775	memline.c	FUNCTION_44	IF_1	CALL_2
0x40001e1	            0x742d	                            je 0x4000210	      3777	memline.c	FUNCTION_44	IF_1	IF_2
0x40001e3	            0x85db	                           test ebx, ebx	      3779	memline.c	FUNCTION_44	IF_1	IF_3
0x40001e5	            0x7e13	                           jle 0x40001fa	      3779	memline.c	FUNCTION_44	IF_1	IF_3
0x40001e7	        0x488b7518	            mov rsi, qword [rbp + 0x18] 	        59	string3.h	FUNCTION_64	CALL_3
0x40001eb	          0x4863d3	                         movsxd rdx, ebx	        59	string3.h	FUNCTION_64	CALL_3
0x40001ee	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_64	CALL_3
0x40001f1	        0x48c1e205	                              shl rdx, 5	        59	string3.h	FUNCTION_64	CALL_3
0x40001f5	      0xe800000000	                          call 0x40001fa	        59	string3.h	FUNCTION_64	CALL_3
0x40001fa	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	      3782	memline.c	FUNCTION_44	IF_1	CALL_4
0x40001fe	      0xe800000000	                          call 0x4000203	      3782	memline.c	FUNCTION_44	IF_1	CALL_4
0x4000203	        0x4c896518	            mov qword [rbp + 0x18], r12 	      3783	memline.c	FUNCTION_44	IF_1
0x4000207	        0x83452405	               add dword [rbp + 0x24], 5	      3784	memline.c	FUNCTION_44	IF_1
0x400020b	          0x8b4520	            mov eax, dword [rbp + 0x20] 	      3784	memline.c	FUNCTION_44	IF_1
0x400020e	            0xebb1	                           jmp 0x40001c1	      3784	memline.c	FUNCTION_44	IF_1
0x4000210	      0xb8ffffffff	                     mov eax, 0xffffffff	      3778	memline.c	FUNCTION_44	IF_1	IF_2
0x4000215	            0xebb2	                           jmp 0x40001c9	      3778	memline.c	FUNCTION_44	IF_1	IF_2
ml_crypt_prepare	ELSE,1:SWITCH,0:DO,0:IF,3:FOR,0:functions,0:WHILE,0:CALL,6	91
0x4000f20	            0x4156	                                push r14	      4862	memline.c	FUNCTION_59
0x4000f22	            0x4155	                                push r13	      4862	memline.c	FUNCTION_59
0x4000f24	          0x4989f6	                            mov r14, rsi	      4862	memline.c	FUNCTION_59
0x4000f27	            0x4154	                                push r12	      4862	memline.c	FUNCTION_59
0x4000f29	              0x55	                                push rbp	      4862	memline.c	FUNCTION_59
0x4000f2a	              0x53	                                push rbx	      4862	memline.c	FUNCTION_59
0x4000f2b	          0x4889fb	                            mov rbx, rdi	      4862	memline.c	FUNCTION_59
0x4000f2e	        0x4883ec40	                           sub rsp, 0x40	      4862	memline.c	FUNCTION_59
0x4000f32	    0x64488b042528	                mov rax, qword fs:[0x28]	      4862	memline.c	FUNCTION_59
0x4000f3b	      0x4889442438	             mov qword [rsp + 0x38], rax	      4862	memline.c	FUNCTION_59
0x4000f40	            0x31c0	                            xor eax, eax	      4862	memline.c	FUNCTION_59
0x4000f42	            0x85d2	                           test edx, edx	      4869	memline.c	FUNCTION_59	IF_1
0x4000f44	     0xf84be000000	                            je 0x4001008	      4869	memline.c	FUNCTION_59	IF_1
0x4000f4a	    0x488bafb00400	           mov rbp, qword [rdi + 0x4b0] 	      4869	memline.c	FUNCTION_59	IF_1
0x4000f51	          0x4885ed	                           test rbp, rbp	      4869	memline.c	FUNCTION_59	IF_1
0x4000f54	     0xf84ae000000	                            je 0x4001008	      4869	memline.c	FUNCTION_59	IF_1
0x4000f5a	    0x4881c3bc0400	                          add rbx, 0x4bc	      4874	memline.c	FUNCTION_59	IF_1
0x4000f61	        0x807d0000	                       cmp byte [rbp], 0	      4882	memline.c	FUNCTION_59	IF_2
0x4000f65	    0x448bafb80400	          mov r13d, dword [rdi + 0x4b8] 	      4872	memline.c	FUNCTION_59	IF_1
0x4000f6c	     0xf84c0000000	                            je 0x4001032	      4882	memline.c	FUNCTION_59	IF_2
0x4000f72	          0x4585ed	                         test r13d, r13d	      4885	memline.c	FUNCTION_59	IF_3
0x4000f75	     0xf84c5000000	                            je 0x4001040	      4885	memline.c	FUNCTION_59	IF_3
0x4000f7b	          0x4c89f1	                            mov rcx, r14	      4895	memline.c	FUNCTION_59	CALL_4
0x4000f7e	      0xba00000000	                              mov edx, 0	      4895	memline.c	FUNCTION_59	CALL_4
0x4000f83	      0xbe32000000	                           mov esi, 0x32	      4895	memline.c	FUNCTION_59	CALL_4
0x4000f88	          0x4889e7	                            mov rdi, rsp	      4895	memline.c	FUNCTION_59	CALL_4
0x4000f8b	            0x31c0	                            xor eax, eax	      4895	memline.c	FUNCTION_59	CALL_4
0x4000f8d	          0x4989e4	                            mov r12, rsp	      4895	memline.c	FUNCTION_59	CALL_4
0x4000f90	      0xe800000000	                          call 0x4000f95	      4895	memline.c	FUNCTION_59	CALL_4
0x4000f95	          0x4889e1	                            mov rcx, rsp	      4896	memline.c	FUNCTION_59	CALL_6
0x4000f98	            0x8b11	                    mov edx, dword [rcx]	      4896	memline.c	FUNCTION_59	CALL_6
0x4000f9a	        0x4883c104	                              add rcx, 4	      4896	memline.c	FUNCTION_59	CALL_6
0x4000f9e	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	      4896	memline.c	FUNCTION_59	CALL_6
0x4000fa4	            0xf7d2	                                 not edx	      4896	memline.c	FUNCTION_59	CALL_6
0x4000fa6	            0x21d0	                            and eax, edx	      4896	memline.c	FUNCTION_59	CALL_6
0x4000fa8	      0x2580808080	                     and eax, 0x80808080	      4896	memline.c	FUNCTION_59	CALL_6
0x4000fad	            0x74e9	                            je 0x4000f98	      4896	memline.c	FUNCTION_59	CALL_6
0x4000faf	            0x89c2	                            mov edx, eax	      4896	memline.c	FUNCTION_59	CALL_6
0x4000fb1	    0x41b908000000	                              mov r9d, 8	      4896	memline.c	FUNCTION_59	CALL_6
0x4000fb7	          0x4989d8	                             mov r8, rbx	      4896	memline.c	FUNCTION_59	CALL_6
0x4000fba	          0xc1ea10	                           shr edx, 0x10	      4896	memline.c	FUNCTION_59	CALL_6
0x4000fbd	      0xa980800000	                        test eax, 0x8080	      4896	memline.c	FUNCTION_59	CALL_6
0x4000fc2	          0x4889ee	                            mov rsi, rbp	      4896	memline.c	FUNCTION_59	CALL_6
0x4000fc5	           0xf44c2	                          cmove eax, edx	      4896	memline.c	FUNCTION_59	CALL_6
0x4000fc8	        0x488d5102	                      lea rdx, [rcx + 2]	      4896	memline.c	FUNCTION_59	CALL_6
0x4000fcc	            0x89c7	                            mov edi, eax	      4896	memline.c	FUNCTION_59	CALL_6
0x4000fce	        0x480f44ca	                          cmove rcx, rdx	      4896	memline.c	FUNCTION_59	CALL_6
0x4000fd2	          0x4000c7	                             add dil, al	      4896	memline.c	FUNCTION_59	CALL_6
0x4000fd5	          0x4c89e2	                            mov rdx, r12	      4896	memline.c	FUNCTION_59	CALL_6
0x4000fd8	        0x4883d903	                              sbb rcx, 3	      4896	memline.c	FUNCTION_59	CALL_6
0x4000fdc	          0x4489ef	                           mov edi, r13d	      4896	memline.c	FUNCTION_59	CALL_6
0x4000fdf	          0x4c29e1	                            sub rcx, r12	      4896	memline.c	FUNCTION_59	CALL_6
0x4000fe2	      0xe800000000	                          call 0x4000fe7	      4896	memline.c	FUNCTION_59	CALL_6
0x4000fe7	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      4898	memline.c	FUNCTION_59
0x4000fec	    0x644833342528	                xor rsi, qword fs:[0x28]	      4898	memline.c	FUNCTION_59
0x4000ff5	            0x757c	                           jne 0x4001073	      4898	memline.c	FUNCTION_59
0x4000ff7	        0x4883c440	                           add rsp, 0x40	      4898	memline.c	FUNCTION_59
0x4000ffb	              0x5b	                                 pop rbx	      4898	memline.c	FUNCTION_59
0x4000ffc	              0x5d	                                 pop rbp	      4898	memline.c	FUNCTION_59
0x4000ffd	            0x415c	                                 pop r12	      4898	memline.c	FUNCTION_59
0x4000fff	            0x415d	                                 pop r13	      4898	memline.c	FUNCTION_59
0x4001001	            0x415e	                                 pop r14	      4898	memline.c	FUNCTION_59
0x4001003	              0xc3	                                     ret	      4898	memline.c	FUNCTION_59
0x4001004	         0xf1f4000	                         nop dword [rax]	      4898	memline.c	FUNCTION_59
0x4001008	    0x488baba00400	           mov rbp, qword [rbx + 0x4a0] 	      4863	memline.c	FUNCTION_59
0x400100f	    0x4881c3a80400	                          add rbx, 0x4a8	      4880	memline.c	FUNCTION_59	ELSE_1
0x4001016	          0x4889ef	                            mov rdi, rbp	      4878	memline.c	FUNCTION_59	ELSE_1	CALL_1
0x4001019	      0xe800000000	                          call 0x400101e	      4878	memline.c	FUNCTION_59	ELSE_1	CALL_1
0x400101e	    0x488bad101500	          mov rbp, qword [rbp + 0x1510] 	      4879	memline.c	FUNCTION_59	ELSE_1
0x4001025	          0x4189c5	                           mov r13d, eax	      4878	memline.c	FUNCTION_59	ELSE_1	CALL_1
0x4001028	        0x807d0000	                       cmp byte [rbp], 0	      4882	memline.c	FUNCTION_59	IF_2
0x400102c	     0xf8540ffffff	                           jne 0x4000f72	      4882	memline.c	FUNCTION_59	IF_2
0x4001032	            0x31c0	                            xor eax, eax	      4883	memline.c	FUNCTION_59	IF_2
0x4001034	            0xebb1	                           jmp 0x4000fe7	      4883	memline.c	FUNCTION_59	IF_2
0x4001036	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4883	memline.c	FUNCTION_59	IF_2
0x4001040	          0x4d89f0	                             mov r8, r14	      4889	memline.c	FUNCTION_59	IF_3	CALL_2
0x4001043	          0x4889e9	                            mov rcx, rbp	      4889	memline.c	FUNCTION_59	IF_3	CALL_2
0x4001046	          0x4889e7	                            mov rdi, rsp	      4889	memline.c	FUNCTION_59	IF_3	CALL_2
0x4001049	      0xba00000000	                              mov edx, 0	      4889	memline.c	FUNCTION_59	IF_3	CALL_2
0x400104e	      0xbe32000000	                           mov esi, 0x32	      4889	memline.c	FUNCTION_59	IF_3	CALL_2
0x4001053	            0x31c0	                            xor eax, eax	      4889	memline.c	FUNCTION_59	IF_3	CALL_2
0x4001055	      0xe800000000	                          call 0x400105a	      4889	memline.c	FUNCTION_59	IF_3	CALL_2
0x400105a	          0x4531c9	                            xor r9d, r9d	      4890	memline.c	FUNCTION_59	IF_3	CALL_3
0x400105d	          0x4531c0	                            xor r8d, r8d	      4890	memline.c	FUNCTION_59	IF_3	CALL_3
0x4001060	            0x31c9	                            xor ecx, ecx	      4890	memline.c	FUNCTION_59	IF_3	CALL_3
0x4001062	            0x31d2	                            xor edx, edx	      4890	memline.c	FUNCTION_59	IF_3	CALL_3
0x4001064	          0x4889e6	                            mov rsi, rsp	      4890	memline.c	FUNCTION_59	IF_3	CALL_3
0x4001067	            0x31ff	                            xor edi, edi	      4890	memline.c	FUNCTION_59	IF_3	CALL_3
0x4001069	      0xe800000000	                          call 0x400106e	      4890	memline.c	FUNCTION_59	IF_3	CALL_3
0x400106e	      0xe974ffffff	                           jmp 0x4000fe7	      4890	memline.c	FUNCTION_59	IF_3	CALL_3
0x4001073	      0xe800000000	                          call 0x4001078	      4898	memline.c	FUNCTION_59
ml_get_cursor	ELSE,0:SWITCH,0:DO,0:IF,0:FOR,0:functions,0:WHILE,0:CALL,1	11
0x40039c0	        0x4883ec08	                              sub rsp, 8	      2423	memline.c	FUNCTION_28
0x40039c4	    0x488b05000000	            mov rax, qword [0x040039cb] 	      2424	memline.c	FUNCTION_28	CALL_1
0x40039cb	    0x488b3d000000	            mov rdi, qword [0x040039d2] 	      2424	memline.c	FUNCTION_28	CALL_1
0x40039d2	            0x31d2	                            xor edx, edx	      2424	memline.c	FUNCTION_28	CALL_1
0x40039d4	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      2424	memline.c	FUNCTION_28	CALL_1
0x40039d8	      0xe800000000	                          call 0x40039dd	      2424	memline.c	FUNCTION_28	CALL_1
0x40039dd	    0x488b15000000	            mov rdx, qword [0x040039e4] 	      2424	memline.c	FUNCTION_28	CALL_1
0x40039e4	        0x48635240	         movsxd rdx, dword [rdx + 0x40] 	      2424	memline.c	FUNCTION_28	CALL_1
0x40039e8	        0x4883c408	                              add rsp, 8	      2426	memline.c	FUNCTION_28
0x40039ec	          0x4801d0	                            add rax, rdx	      2424	memline.c	FUNCTION_28	CALL_1
0x40039ef	              0xc3	                                     ret	      2426	memline.c	FUNCTION_28
goto_byte	ELSE,1:SWITCH,0:DO,0:IF,3:FOR,0:functions,0:WHILE,0:CALL,6	45
0x40070d0	        0x4883ec18	                           sub rsp, 0x18	      5286	memline.c	FUNCTION_62
0x40070d4	        0x48893c24	                    mov qword [rsp], rdi	      5287	memline.c	FUNCTION_62
0x40070d8	    0x488b3d000000	            mov rdi, qword [0x040070df] 	      5290	memline.c	FUNCTION_62	CALL_1
0x40070df	    0x64488b042528	                mov rax, qword fs:[0x28]	      5286	memline.c	FUNCTION_62
0x40070e8	      0x4889442408	                mov qword [rsp + 8], rax	      5286	memline.c	FUNCTION_62
0x40070ed	            0x31c0	                            xor eax, eax	      5286	memline.c	FUNCTION_62
0x40070ef	      0xe84cbeffff	                  call sym.ml_flush_line	      5290	memline.c	FUNCTION_62	CALL_1
0x40070f4	      0xe800000000	                          call 0x40070f9	      5291	memline.c	FUNCTION_62	CALL_2
0x40070f9	        0x488b0424	                    mov rax, qword [rsp]	      5292	memline.c	FUNCTION_62	IF_1
0x40070fd	          0x4885c0	                           test rax, rax	      5292	memline.c	FUNCTION_62	IF_1
0x4007100	            0x7408	                            je 0x400710a	      5292	memline.c	FUNCTION_62	IF_1
0x4007102	        0x4883e801	                              sub rax, 1	      5293	memline.c	FUNCTION_62	IF_1
0x4007106	        0x48890424	                    mov qword [rsp], rax	      5293	memline.c	FUNCTION_62	IF_1
0x400710a	    0x488b3d000000	            mov rdi, qword [0x04007111] 	      5294	memline.c	FUNCTION_62	CALL_3
0x4007111	            0x31f6	                            xor esi, esi	      5294	memline.c	FUNCTION_62	CALL_3
0x4007113	          0x4889e2	                            mov rdx, rsp	      5294	memline.c	FUNCTION_62	CALL_3
0x4007116	      0xe800000000	                          call 0x400711b	      5294	memline.c	FUNCTION_62	CALL_3
0x400711b	          0x4885c0	                           test rax, rax	      5295	memline.c	FUNCTION_62	IF_2
0x400711e	            0x7e50	                           jle 0x4007170	      5295	memline.c	FUNCTION_62	IF_2
0x4007120	    0x488b15000000	            mov rdx, qword [0x04007127] 	      5303	memline.c	FUNCTION_62	ELSE_1
0x4007127	        0x48894238	             mov qword [rdx + 0x38], rax	      5303	memline.c	FUNCTION_62	ELSE_1
0x400712b	        0x488b0424	                    mov rax, qword [rsp]	      5304	memline.c	FUNCTION_62	ELSE_1
0x400712f	    0xc74244000000	               mov dword [rdx + 0x44], 0	      5306	memline.c	FUNCTION_62	ELSE_1
0x4007136	    0xc7424c010000	               mov dword [rdx + 0x4c], 1	      5308	memline.c	FUNCTION_62	ELSE_1
0x400713d	          0x894240	             mov dword [rdx + 0x40], eax	      5304	memline.c	FUNCTION_62	ELSE_1
0x4007140	      0xe800000000	                          call 0x4007145	      5310	memline.c	FUNCTION_62	CALL_5
0x4007145	    0x8b0500000000	            mov eax, dword [0x0400714b] 	      5314	memline.c	FUNCTION_62	IF_3
0x400714b	            0x85c0	                           test eax, eax	      5314	memline.c	FUNCTION_62	IF_3
0x400714d	            0x7405	                            je 0x4007154	      5314	memline.c	FUNCTION_62	IF_3
0x400714f	      0xe800000000	                          call 0x4007154	      5315	memline.c	FUNCTION_62	CALL_6
0x4007154	      0x488b442408	                mov rax, qword [rsp + 8]	      5317	memline.c	FUNCTION_62
0x4007159	    0x644833042528	                xor rax, qword fs:[0x28]	      5317	memline.c	FUNCTION_62
0x4007162	            0x7534	                           jne 0x4007198	      5317	memline.c	FUNCTION_62
0x4007164	        0x4883c418	                           add rsp, 0x18	      5317	memline.c	FUNCTION_62
0x4007168	              0xc3	                                     ret	      5317	memline.c	FUNCTION_62
0x4007169	     0xf1f80000000	                         nop dword [rax]	      5317	memline.c	FUNCTION_62
0x4007170	    0x488b15000000	            mov rdx, qword [0x04007177] 	      5297	memline.c	FUNCTION_62	IF_2
0x4007177	    0x488b05000000	            mov rax, qword [0x0400717e] 	      5297	memline.c	FUNCTION_62	IF_2
0x400717e	      0xbfffffff7f	                     mov edi, 0x7fffffff	      5299	memline.c	FUNCTION_62	IF_2	CALL_4
0x4007183	          0x488b12	                    mov rdx, qword [rdx]	      5297	memline.c	FUNCTION_62	IF_2
0x4007186	    0xc74048ffffff	     mov dword [rax + 0x48], 0x7fffffff 	      5298	memline.c	FUNCTION_62	IF_2
0x400718d	        0x48895038	             mov qword [rax + 0x38], rdx	      5297	memline.c	FUNCTION_62	IF_2
0x4007191	      0xe800000000	                          call 0x4007196	      5299	memline.c	FUNCTION_62	IF_2	CALL_4
0x4007196	            0xeba8	                           jmp 0x4007140	      5299	memline.c	FUNCTION_62	IF_2	CALL_4
0x4007198	      0xe800000000	                  call section_end..data	      5317	memline.c	FUNCTION_62
ml_open_file	ELSE,0:SWITCH,0:DO,0:IF,9:FOR,1:functions,0:WHILE,0:CALL,13	102
0x40066a0	              0x55	                                push rbp	       753	memline.c	FUNCTION_7
0x40066a1	              0x53	                                push rbx	       753	memline.c	FUNCTION_7
0x40066a2	        0x4883ec18	                           sub rsp, 0x18	       753	memline.c	FUNCTION_7
0x40066a6	        0x488b5f08	                mov rbx, qword [rdi + 8]	       758	memline.c	FUNCTION_7
0x40066aa	    0x64488b042528	                mov rax, qword fs:[0x28]	       753	memline.c	FUNCTION_7
0x40066b3	      0x4889442408	                mov qword [rsp + 8], rax	       753	memline.c	FUNCTION_7
0x40066b8	            0x31c0	                            xor eax, eax	       753	memline.c	FUNCTION_7
0x40066ba	          0x4885db	                           test rbx, rbx	       759	memline.c	FUNCTION_7	IF_1
0x40066bd	            0x7407	                            je 0x40066c6	       759	memline.c	FUNCTION_7	IF_1
0x40066bf	          0x8b7310	            mov esi, dword [rbx + 0x10] 	       759	memline.c	FUNCTION_7	IF_1
0x40066c2	            0x85f6	                           test esi, esi	       759	memline.c	FUNCTION_7	IF_1
0x40066c4	            0x7822	                            js 0x40066e8	       759	memline.c	FUNCTION_7	IF_1
0x40066c6	      0x488b442408	                mov rax, qword [rsp + 8]	       826	memline.c	FUNCTION_7
0x40066cb	    0x644833042528	                xor rax, qword fs:[0x28]	       826	memline.c	FUNCTION_7
0x40066d4	     0xf8555010000	                           jne 0x400682f	       826	memline.c	FUNCTION_7
0x40066da	        0x4883c418	                           add rsp, 0x18	       826	memline.c	FUNCTION_7
0x40066de	              0x5b	                                 pop rbx	       826	memline.c	FUNCTION_7
0x40066df	              0x5d	                                 pop rbp	       826	memline.c	FUNCTION_7
0x40066e0	              0xc3	                                     ret	       826	memline.c	FUNCTION_7
0x40066e1	     0xf1f80000000	                         nop dword [rax]	       826	memline.c	FUNCTION_7
0x40066e8	    0x8b8f90150000	          mov ecx, dword [rdi + 0x1590] 	       759	memline.c	FUNCTION_7	IF_1
0x40066ee	          0x4889fd	                            mov rbp, rdi	       759	memline.c	FUNCTION_7	IF_1
0x40066f1	            0x85c9	                           test ecx, ecx	       759	memline.c	FUNCTION_7	IF_1
0x40066f3	            0x74d1	                            je 0x40066c6	       759	memline.c	FUNCTION_7	IF_1
0x40066f5	    0x8b1500000000	            mov edx, dword [0x040066fb] 	       759	memline.c	FUNCTION_7	IF_1
0x40066fb	            0x85d2	                           test edx, edx	       759	memline.c	FUNCTION_7	IF_1
0x40066fd	            0x75c7	                           jne 0x40066c6	       759	memline.c	FUNCTION_7	IF_1
0x40066ff	    0x8b875c170000	          mov eax, dword [rdi + 0x175c] 	       764	memline.c	FUNCTION_7	IF_2
0x4006705	            0x85c0	                           test eax, eax	       764	memline.c	FUNCTION_7	IF_2
0x4006707	     0xf85ab000000	                           jne 0x40067b8	       764	memline.c	FUNCTION_7	IF_2
0x400670d	    0x488b15000000	            mov rdx, qword [0x04006714] 	       777	memline.c	FUNCTION_7
0x4006714	        0x48891424	                    mov qword [rsp], rdx	       777	memline.c	FUNCTION_7
0x4006718	     0xf1f84000000	                   nop dword [rax + rax]	       777	memline.c	FUNCTION_7
0x4006720	          0x803a00	                       cmp byte [rdx], 0	       780	memline.c	FUNCTION_7	FOR_1	IF_4
0x4006723	            0x7438	                            je 0x400675d	       780	memline.c	FUNCTION_7	FOR_1	IF_4
0x4006725	            0x31d2	                            xor edx, edx	       785	memline.c	FUNCTION_7	FOR_1	CALL_3
0x4006727	          0x4889e6	                            mov rsi, rsp	       785	memline.c	FUNCTION_7	FOR_1	CALL_3
0x400672a	          0x4889ef	                            mov rdi, rbp	       785	memline.c	FUNCTION_7	FOR_1	CALL_3
0x400672d	      0xe8aef3ffff	                   call sym.findswapname	       785	memline.c	FUNCTION_7	FOR_1	CALL_3
0x4006732	        0x488b1424	                    mov rdx, qword [rsp]	       786	memline.c	FUNCTION_7	FOR_1	IF_5
0x4006736	          0x4885d2	                           test rdx, rdx	       786	memline.c	FUNCTION_7	FOR_1	IF_5
0x4006739	            0x7422	                            je 0x400675d	       786	memline.c	FUNCTION_7	FOR_1	IF_5
0x400673b	          0x4885c0	                           test rax, rax	       788	memline.c	FUNCTION_7	FOR_1	IF_6
0x400673e	            0x74e0	                            je 0x4006720	       788	memline.c	FUNCTION_7	FOR_1	IF_6
0x4006740	          0x4889c6	                            mov rsi, rax	       790	memline.c	FUNCTION_7	FOR_1	IF_7	CALL_4
0x4006743	          0x4889df	                            mov rdi, rbx	       790	memline.c	FUNCTION_7	FOR_1	IF_7	CALL_4
0x4006746	      0xe800000000	                          call 0x400674b	       790	memline.c	FUNCTION_7	FOR_1	IF_7	CALL_4
0x400674b	          0x83f801	                              cmp eax, 1	       790	memline.c	FUNCTION_7	FOR_1	IF_7	CALL_4
0x400674e	     0xf8494000000	                            je 0x40067e8	       790	memline.c	FUNCTION_7	FOR_1	IF_7	CALL_4
0x4006754	        0x488b1424	                    mov rdx, qword [rsp]	       790	memline.c	FUNCTION_7	FOR_1	IF_7	CALL_4
0x4006758	          0x803a00	                       cmp byte [rdx], 0	       780	memline.c	FUNCTION_7	FOR_1	IF_4
0x400675b	            0x75c8	                           jne 0x4006725	       780	memline.c	FUNCTION_7	FOR_1	IF_4
0x400675d	        0x48833b00	                      cmp qword [rbx], 0	       815	memline.c	FUNCTION_7	IF_9
0x4006761	            0x7571	                           jne 0x40067d4	       815	memline.c	FUNCTION_7	IF_9
0x4006763	          0x4889ef	                            mov rdi, rbp	       819	memline.c	FUNCTION_7	IF_9	CALL_11
0x4006766	    0x830500000000	               add dword [0x0400676d], 1	       818	memline.c	FUNCTION_7	IF_9
0x400676d	    0xc70500000000	               mov dword [0x04006777], 1	       817	memline.c	FUNCTION_7	IF_9
0x4006777	      0xe800000000	                          call 0x400677c	       819	memline.c	FUNCTION_7	IF_9	CALL_11
0x400677c	          0x4885c0	                           test rax, rax	       819	memline.c	FUNCTION_7	IF_9	CALL_11
0x400677f	     0xf849e000000	                            je 0x4006823	       819	memline.c	FUNCTION_7	IF_9	CALL_11
0x4006785	          0x4889ef	                            mov rdi, rbp	       819	memline.c	FUNCTION_7	IF_9	CALL_11
0x4006788	      0xe800000000	                          call 0x400678d	       819	memline.c	FUNCTION_7	IF_9	CALL_11
0x400678d	          0x4889c3	                            mov rbx, rax	       819	memline.c	FUNCTION_7	IF_9	CALL_11
0x4006790	      0xba05000000	                              mov edx, 5	       819	memline.c	FUNCTION_7	IF_9	CALL_11
0x4006795	      0xbe00000000	                              mov esi, 0	       819	memline.c	FUNCTION_7	IF_9	CALL_11
0x400679a	            0x31ff	                            xor edi, edi	       819	memline.c	FUNCTION_7	IF_9	CALL_11
0x400679c	      0xe800000000	                          call 0x40067a1	       819	memline.c	FUNCTION_7	IF_9	CALL_11
0x40067a1	          0x4889de	                            mov rsi, rbx	       819	memline.c	FUNCTION_7	IF_9	CALL_11
0x40067a4	          0x4889c7	                            mov rdi, rax	       819	memline.c	FUNCTION_7	IF_9	CALL_11
0x40067a7	      0xe800000000	                          call 0x40067ac	       819	memline.c	FUNCTION_7	IF_9	CALL_11
0x40067ac	    0x832d00000000	               sub dword [0x040067b3], 1	       821	memline.c	FUNCTION_7	IF_9
0x40067b3	            0xeb1f	                           jmp 0x40067d4	       821	memline.c	FUNCTION_7	IF_9
0x40067b5	           0xf1f00	                         nop dword [rax]	       821	memline.c	FUNCTION_7	IF_9
0x40067b8	            0x31f6	                            xor esi, esi	       766	memline.c	FUNCTION_7	IF_2	CALL_1
0x40067ba	      0xbf73000000	                           mov edi, 0x73	       766	memline.c	FUNCTION_7	IF_2	CALL_1
0x40067bf	      0xe800000000	                          call 0x40067c4	       766	memline.c	FUNCTION_7	IF_2	CALL_1
0x40067c4	          0x4885c0	                           test rax, rax	       767	memline.c	FUNCTION_7	IF_2	IF_3
0x40067c7	            0x740b	                            je 0x40067d4	       767	memline.c	FUNCTION_7	IF_2	IF_3
0x40067c9	          0x4889c6	                            mov rsi, rax	       768	memline.c	FUNCTION_7	IF_2	CALL_2
0x40067cc	          0x4889df	                            mov rdi, rbx	       768	memline.c	FUNCTION_7	IF_2	CALL_2
0x40067cf	      0xe800000000	                          call 0x40067d4	       768	memline.c	FUNCTION_7	IF_2	CALL_2
0x40067d4	    0xc78550170000	            mov dword [rbp + 0x1750], 0 	       825	memline.c	FUNCTION_7
0x40067de	      0xe9e3feffff	                           jmp 0x40066c6	       825	memline.c	FUNCTION_7
0x40067e3	       0xf1f440000	                   nop dword [rax + rax]	       825	memline.c	FUNCTION_7
0x40067e8	      0xbe01000000	                              mov esi, 1	       799	memline.c	FUNCTION_7	FOR_1	IF_7	CALL_6
0x40067ed	          0x4889ef	                            mov rdi, rbp	       799	memline.c	FUNCTION_7	FOR_1	IF_7	CALL_6
0x40067f0	      0xe8dbabffff	                  call sym.ml_upd_block0	       799	memline.c	FUNCTION_7	FOR_1	IF_7	CALL_6
0x40067f5	      0xbe08000000	                              mov esi, 8	       802	memline.c	FUNCTION_7	FOR_1	IF_7	IF_8	CALL_7
0x40067fa	          0x4889df	                            mov rdi, rbx	       802	memline.c	FUNCTION_7	FOR_1	IF_7	IF_8	CALL_7
0x40067fd	      0xe800000000	                          call 0x4006802	       802	memline.c	FUNCTION_7	FOR_1	IF_7	IF_8	CALL_7
0x4006802	          0x83f801	                              cmp eax, 1	       802	memline.c	FUNCTION_7	FOR_1	IF_7	IF_8	CALL_7
0x4006805	            0x740f	                            je 0x4006816	       802	memline.c	FUNCTION_7	FOR_1	IF_7	IF_8	CALL_7
0x4006807	            0x31f6	                            xor esi, esi	       811	memline.c	FUNCTION_7	FOR_1	IF_7	CALL_9
0x4006809	          0x4889ef	                            mov rdi, rbp	       811	memline.c	FUNCTION_7	FOR_1	IF_7	CALL_9
0x400680c	      0xe800000000	                          call 0x4006811	       811	memline.c	FUNCTION_7	FOR_1	IF_7	CALL_9
0x4006811	      0xe93effffff	                           jmp 0x4006754	       811	memline.c	FUNCTION_7	FOR_1	IF_7	CALL_9
0x4006816	          0x4889df	                            mov rdi, rbx	       807	memline.c	FUNCTION_7	FOR_1	IF_7	IF_8	CALL_8
0x4006819	      0xe800000000	                          call 0x400681e	       807	memline.c	FUNCTION_7	FOR_1	IF_7	IF_8	CALL_8
0x400681e	      0xe93affffff	                           jmp 0x400675d	       808	memline.c	FUNCTION_7	FOR_1	IF_7	IF_8
0x4006823	    0x488b9d980000	            mov rbx, qword [rbp + 0x98] 	       819	memline.c	FUNCTION_7	IF_9	CALL_11
0x400682a	      0xe961ffffff	                           jmp 0x4006790	       819	memline.c	FUNCTION_7	IF_9	CALL_11
0x400682f	      0xe800000000	                          call 0x4006834	       826	memline.c	FUNCTION_7
ml_setname	ELSE,0:SWITCH,0:DO,0:IF,13:FOR,1:functions,0:WHILE,0:CALL,20	125
0x40068b0	            0x4154	                                push r12	       631	memline.c	FUNCTION_5
0x40068b2	              0x55	                                push rbp	       631	memline.c	FUNCTION_5
0x40068b3	          0x4989fc	                            mov r12, rdi	       631	memline.c	FUNCTION_5
0x40068b6	              0x53	                                push rbx	       631	memline.c	FUNCTION_5
0x40068b7	        0x4883ec10	                           sub rsp, 0x10	       631	memline.c	FUNCTION_5
0x40068bb	        0x488b6f08	                mov rbp, qword [rdi + 8]	       640	memline.c	FUNCTION_5
0x40068bf	    0x64488b042528	                mov rax, qword fs:[0x28]	       631	memline.c	FUNCTION_5
0x40068c8	      0x4889442408	                mov qword [rsp + 8], rax	       631	memline.c	FUNCTION_5
0x40068cd	            0x31c0	                            xor eax, eax	       631	memline.c	FUNCTION_5
0x40068cf	          0x8b5510	            mov edx, dword [rbp + 0x10] 	       641	memline.c	FUNCTION_5	IF_1
0x40068d2	            0x85d2	                           test edx, edx	       641	memline.c	FUNCTION_5	IF_1
0x40068d4	     0xf88be000000	                            js 0x4006998	       641	memline.c	FUNCTION_5	IF_1
0x40068da	    0x488b05000000	            mov rax, qword [0x040068e1] 	       655	memline.c	FUNCTION_5
0x40068e1	        0x48890424	                    mov qword [rsp], rax	       655	memline.c	FUNCTION_5
0x40068e5	          0x803800	                       cmp byte [rax], 0	       658	memline.c	FUNCTION_5	FOR_1	IF_3
0x40068e8	            0x746c	                            je 0x4006956	       658	memline.c	FUNCTION_5	FOR_1	IF_3
0x40068ea	        0x488b5500	                    mov rdx, qword [rbp]	       660	memline.c	FUNCTION_5	FOR_1	CALL_2
0x40068ee	          0x4889e6	                            mov rsi, rsp	       660	memline.c	FUNCTION_5	FOR_1	CALL_2
0x40068f1	          0x4c89e7	                            mov rdi, r12	       660	memline.c	FUNCTION_5	FOR_1	CALL_2
0x40068f4	      0xe8e7f1ffff	                   call sym.findswapname	       660	memline.c	FUNCTION_5	FOR_1	CALL_2
0x40068f9	          0x4889c3	                            mov rbx, rax	       660	memline.c	FUNCTION_5	FOR_1	CALL_2
0x40068fc	        0x488b0424	                    mov rax, qword [rsp]	       662	memline.c	FUNCTION_5	FOR_1	IF_4
0x4006900	          0x4885c0	                           test rax, rax	       662	memline.c	FUNCTION_5	FOR_1	IF_4
0x4006903	            0x7451	                            je 0x4006956	       662	memline.c	FUNCTION_5	FOR_1	IF_4
0x4006905	          0x4885db	                           test rbx, rbx	       664	memline.c	FUNCTION_5	FOR_1	IF_5
0x4006908	            0x74db	                            je 0x40068e5	       664	memline.c	FUNCTION_5	FOR_1	IF_5
0x400690a	        0x488b7500	                    mov rsi, qword [rbp]	       679	memline.c	FUNCTION_5	FOR_1	IF_7	CALL_5
0x400690e	          0x4889df	                            mov rdi, rbx	       679	memline.c	FUNCTION_5	FOR_1	IF_7	CALL_5
0x4006911	      0xe800000000	                          call 0x4006916	       679	memline.c	FUNCTION_5	FOR_1	IF_7	CALL_5
0x4006916	            0x85c0	                           test eax, eax	       679	memline.c	FUNCTION_5	FOR_1	IF_7	CALL_5
0x4006918	     0xf84e2000000	                            je 0x4006a00	       679	memline.c	FUNCTION_5	FOR_1	IF_7	CALL_5
0x400691e	          0x8b7d10	            mov edi, dword [rbp + 0x10] 	       686	memline.c	FUNCTION_5	FOR_1	IF_8
0x4006921	            0x85ff	                           test edi, edi	       686	memline.c	FUNCTION_5	FOR_1	IF_8
0x4006923	            0x780c	                            js 0x4006931	       686	memline.c	FUNCTION_5	FOR_1	IF_8
0x4006925	      0xe800000000	                          call 0x400692a	       688	memline.c	FUNCTION_5	FOR_1	IF_8	CALL_7
0x400692a	    0xc74510ffffff	     mov dword [rbp + 0x10], 0xffffffff 	       689	memline.c	FUNCTION_5	FOR_1	IF_8
0x4006931	        0x488b7d00	                    mov rdi, qword [rbp]	       693	memline.c	FUNCTION_5	FOR_1	IF_9	CALL_8
0x4006935	          0x4889de	                            mov rsi, rbx	       693	memline.c	FUNCTION_5	FOR_1	IF_9	CALL_8
0x4006938	      0xe800000000	                          call 0x400693d	       693	memline.c	FUNCTION_5	FOR_1	IF_9	CALL_8
0x400693d	            0x85c0	                           test eax, eax	       693	memline.c	FUNCTION_5	FOR_1	IF_9	CALL_8
0x400693f	     0xf84db000000	                            je 0x4006a20	       693	memline.c	FUNCTION_5	FOR_1	IF_9	CALL_8
0x4006945	          0x4889df	                            mov rdi, rbx	       707	memline.c	FUNCTION_5	FOR_1	CALL_13
0x4006948	      0xe800000000	                          call 0x400694d	       707	memline.c	FUNCTION_5	FOR_1	CALL_13
0x400694d	        0x488b0424	                    mov rax, qword [rsp]	       707	memline.c	FUNCTION_5	FOR_1	CALL_13
0x4006951	          0x803800	                       cmp byte [rax], 0	       658	memline.c	FUNCTION_5	FOR_1	IF_3
0x4006954	            0x7594	                           jne 0x40068ea	       658	memline.c	FUNCTION_5	FOR_1	IF_3
0x4006956	        0x837d10ff	cmp dword [rbp + 0x10], 0xffffffffffffffff	       710	memline.c	FUNCTION_5	IF_10
0x400695a	            0x745c	                            je 0x40069b8	       710	memline.c	FUNCTION_5	IF_10
0x400695c	            0x31ff	                            xor edi, edi	       728	memline.c	FUNCTION_5	CALL_20
0x400695e	      0xba05000000	                              mov edx, 5	       728	memline.c	FUNCTION_5	CALL_20
0x4006963	      0xbe00000000	                              mov esi, 0	       728	memline.c	FUNCTION_5	CALL_20
0x4006968	      0xe800000000	                          call 0x400696d	       728	memline.c	FUNCTION_5	CALL_20
0x400696d	          0x4889c7	                            mov rdi, rax	       728	memline.c	FUNCTION_5	CALL_20
0x4006970	      0xe800000000	                          call 0x4006975	       728	memline.c	FUNCTION_5	CALL_20
0x4006975	      0x488b442408	                mov rax, qword [rsp + 8]	       729	memline.c	FUNCTION_5
0x400697a	    0x644833042528	                xor rax, qword fs:[0x28]	       729	memline.c	FUNCTION_5
0x4006983	     0xf85f8000000	                           jne 0x4006a81	       729	memline.c	FUNCTION_5
0x4006989	        0x4883c410	                           add rsp, 0x10	       729	memline.c	FUNCTION_5
0x400698d	              0x5b	                                 pop rbx	       729	memline.c	FUNCTION_5
0x400698e	              0x5d	                                 pop rbp	       729	memline.c	FUNCTION_5
0x400698f	            0x415c	                                 pop r12	       729	memline.c	FUNCTION_5
0x4006991	              0xc3	                                     ret	       729	memline.c	FUNCTION_5
0x4006992	    0x660f1f440000	                    nop word [rax + rax]	       729	memline.c	FUNCTION_5
0x4006998	    0x48833d000000	               cmp qword [0x040069a0], 0	       647	memline.c	FUNCTION_5	IF_1	IF_2
0x40069a0	            0x74d3	                            je 0x4006975	       647	memline.c	FUNCTION_5	IF_1	IF_2
0x40069a2	    0x8b0500000000	            mov eax, dword [0x040069a8] 	       647	memline.c	FUNCTION_5	IF_1	IF_2
0x40069a8	            0x85c0	                           test eax, eax	       647	memline.c	FUNCTION_5	IF_1	IF_2
0x40069aa	            0x75c9	                           jne 0x4006975	       647	memline.c	FUNCTION_5	IF_1	IF_2
0x40069ac	      0xe800000000	                          call 0x40069b1	       648	memline.c	FUNCTION_5	IF_1	CALL_1
0x40069b1	            0xebc2	                           jmp 0x4006975	       648	memline.c	FUNCTION_5	IF_1	CALL_1
0x40069b3	       0xf1f440000	                   nop dword [rax + rax]	       648	memline.c	FUNCTION_5	IF_1	CALL_1
0x40069b8	            0x31db	                            xor ebx, ebx	       710	memline.c	FUNCTION_5	IF_10
0x40069ba	        0x488b7d00	                    mov rdi, qword [rbp]	        53	fcntl2.h	FUNCTION_75	IF_2	CALL_9
0x40069be	            0x31d2	                            xor edx, edx	        53	fcntl2.h	FUNCTION_75	IF_2	CALL_9
0x40069c0	            0x31c0	                            xor eax, eax	        53	fcntl2.h	FUNCTION_75	IF_2	CALL_9
0x40069c2	      0xbe02000000	                              mov esi, 2	        53	fcntl2.h	FUNCTION_75	IF_2	CALL_9
0x40069c7	      0xe800000000	                          call 0x40069cc	        53	fcntl2.h	FUNCTION_75	IF_2	CALL_9
0x40069cc	            0x85c0	                           test eax, eax	       713	memline.c	FUNCTION_5	IF_10	IF_11
0x40069ce	          0x894510	            mov dword [rbp + 0x10], eax 	       712	memline.c	FUNCTION_5	IF_10	CALL_14
0x40069d1	     0xf888c000000	                            js 0x4006a63	       713	memline.c	FUNCTION_5	IF_10	IF_11
0x40069d7	            0x89c7	                            mov edi, eax	       721	memline.c	FUNCTION_5	IF_10	CALL_17
0x40069d9	      0xbe01000000	                              mov esi, 1	       721	memline.c	FUNCTION_5	IF_10	CALL_17
0x40069de	            0x31c0	                            xor eax, eax	       721	memline.c	FUNCTION_5	IF_10	CALL_17
0x40069e0	      0xe800000000	                          call 0x40069e5	       721	memline.c	FUNCTION_5	IF_10	CALL_17
0x40069e5	            0x85c0	                           test eax, eax	       722	memline.c	FUNCTION_5	IF_10	IF_12
0x40069e7	            0x7804	                            js 0x40069ed	       722	memline.c	FUNCTION_5	IF_10	IF_12
0x40069e9	            0xa801	                              test al, 1	       722	memline.c	FUNCTION_5	IF_10	IF_12
0x40069eb	            0x7460	                            je 0x4006a4d	       722	memline.c	FUNCTION_5	IF_10	IF_12
0x40069ed	            0x85db	                           test ebx, ebx	       727	memline.c	FUNCTION_5	IF_13
0x40069ef	            0x7584	                           jne 0x4006975	       727	memline.c	FUNCTION_5	IF_13
0x40069f1	      0xe966ffffff	                           jmp 0x400695c	       727	memline.c	FUNCTION_5	IF_13
0x40069f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       727	memline.c	FUNCTION_5	IF_13
0x4006a00	          0x4889df	                            mov rdi, rbx	       681	memline.c	FUNCTION_5	FOR_1	IF_7	CALL_6
0x4006a03	      0xe800000000	                          call 0x4006a08	       681	memline.c	FUNCTION_5	FOR_1	IF_7	CALL_6
0x4006a08	        0x837d10ff	cmp dword [rbp + 0x10], 0xffffffffffffffff	       710	memline.c	FUNCTION_5	IF_10
0x4006a0c	     0xf8563ffffff	                           jne 0x4006975	       710	memline.c	FUNCTION_5	IF_10
0x4006a12	      0xbb01000000	                              mov ebx, 1	       710	memline.c	FUNCTION_5	IF_10
0x4006a17	            0xeba1	                           jmp 0x40069ba	       710	memline.c	FUNCTION_5	IF_10
0x4006a19	     0xf1f80000000	                         nop dword [rax]	       710	memline.c	FUNCTION_5	IF_10
0x4006a20	        0x488b7d00	                    mov rdi, qword [rbp]	       696	memline.c	FUNCTION_5	FOR_1	IF_9	CALL_9
0x4006a24	      0xe800000000	                          call 0x4006a29	       696	memline.c	FUNCTION_5	FOR_1	IF_9	CALL_9
0x4006a29	        0x488b7d08	                mov rdi, qword [rbp + 8]	       698	memline.c	FUNCTION_5	FOR_1	IF_9	CALL_10
0x4006a2d	        0x48895d00	                    mov qword [rbp], rbx	       697	memline.c	FUNCTION_5	FOR_1	IF_9
0x4006a31	      0xe800000000	                          call 0x4006a36	       698	memline.c	FUNCTION_5	FOR_1	IF_9	CALL_10
0x4006a36	          0x4889ef	                            mov rdi, rbp	       702	memline.c	FUNCTION_5	FOR_1	IF_9	CALL_11
0x4006a39	      0xe800000000	                          call 0x4006a3e	       702	memline.c	FUNCTION_5	FOR_1	IF_9	CALL_11
0x4006a3e	      0xbe01000000	                              mov esi, 1	       704	memline.c	FUNCTION_5	FOR_1	IF_9	CALL_12
0x4006a43	          0x4c89e7	                            mov rdi, r12	       704	memline.c	FUNCTION_5	FOR_1	IF_9	CALL_12
0x4006a46	      0xe885a9ffff	                  call sym.ml_upd_block0	       704	memline.c	FUNCTION_5	FOR_1	IF_9	CALL_12
0x4006a4b	            0xebbb	                           jmp 0x4006a08	       705	memline.c	FUNCTION_5	FOR_1	IF_9
0x4006a4d	          0x8b7d10	            mov edi, dword [rbp + 0x10] 	       723	memline.c	FUNCTION_5	IF_10	CALL_18
0x4006a50	          0x83c801	                               or eax, 1	       723	memline.c	FUNCTION_5	IF_10	CALL_18
0x4006a53	      0xbe02000000	                              mov esi, 2	       723	memline.c	FUNCTION_5	IF_10	CALL_18
0x4006a58	            0x89c2	                            mov edx, eax	       723	memline.c	FUNCTION_5	IF_10	CALL_18
0x4006a5a	            0x31c0	                            xor eax, eax	       723	memline.c	FUNCTION_5	IF_10	CALL_18
0x4006a5c	      0xe800000000	                          call 0x4006a61	       723	memline.c	FUNCTION_5	IF_10	CALL_18
0x4006a61	            0xeb8a	                           jmp 0x40069ed	       723	memline.c	FUNCTION_5	IF_10	CALL_18
0x4006a63	            0x31ff	                            xor edi, edi	       716	memline.c	FUNCTION_5	IF_10	IF_11	CALL_16
0x4006a65	      0xba05000000	                              mov edx, 5	       716	memline.c	FUNCTION_5	IF_10	IF_11	CALL_16
0x4006a6a	      0xbe00000000	                              mov esi, 0	       716	memline.c	FUNCTION_5	IF_10	IF_11	CALL_16
0x4006a6f	      0xe800000000	                          call 0x4006a74	       716	memline.c	FUNCTION_5	IF_10	IF_11	CALL_16
0x4006a74	          0x4889c7	                            mov rdi, rax	       716	memline.c	FUNCTION_5	IF_10	IF_11	CALL_16
0x4006a77	      0xe800000000	                          call 0x4006a7c	       716	memline.c	FUNCTION_5	IF_10	IF_11	CALL_16
0x4006a7c	      0xe9f4feffff	                           jmp 0x4006975	       717	memline.c	FUNCTION_5	IF_10	IF_11
0x4006a81	      0xe800000000	                          call 0x4006a86	       729	memline.c	FUNCTION_5
ml_decrypt_data	ELSE,0:SWITCH,0:DO,0:IF,3:FOR,0:functions,0:WHILE,0:CALL,3	48
0x4006c30	      0x66813e6164	                  cmp word [rsi], 0x6461	      4836	memline.c	FUNCTION_58	IF_1
0x4006c35	            0x7409	                            je 0x4006c40	      4836	memline.c	FUNCTION_58	IF_1
0x4006c37	              0xc3	                                     ret	      4854	memline.c	FUNCTION_58
0x4006c38	     0xf1f84000000	                   nop dword [rax + rax]	      4854	memline.c	FUNCTION_58
0x4006c40	            0x4155	                                push r13	      4829	memline.c	FUNCTION_58
0x4006c42	            0x4154	                                push r12	      4829	memline.c	FUNCTION_58
0x4006c44	              0x55	                                push rbp	      4829	memline.c	FUNCTION_58
0x4006c45	              0x53	                                push rbx	      4829	memline.c	FUNCTION_58
0x4006c46	        0x4883ec08	                              sub rsp, 8	      4829	memline.c	FUNCTION_58
0x4006c4a	          0x8b5e08	                mov ebx, dword [rsi + 8]	      4839	memline.c	FUNCTION_58	IF_1
0x4006c4d	        0x448b660c	            mov r12d, dword [rsi + 0xc] 	      4840	memline.c	FUNCTION_58	IF_1
0x4006c51	          0x4889dd	                            mov rbp, rbx	      4839	memline.c	FUNCTION_58	IF_1
0x4006c54	          0x4801f3	                            add rbx, rsi	      4839	memline.c	FUNCTION_58	IF_1
0x4006c57	          0x4139cc	                           cmp r12d, ecx	      4843	memline.c	FUNCTION_58	IF_1	IF_2
0x4006c5a	        0x410f97c0	                                seta r8b	      4843	memline.c	FUNCTION_58	IF_1	IF_2
0x4006c5e	            0x39cd	                            cmp ebp, ecx	      4843	memline.c	FUNCTION_58	IF_1	IF_2
0x4006c60	           0xf97c0	                                 seta al	      4843	memline.c	FUNCTION_58	IF_1	IF_2
0x4006c63	          0x4108c0	                              or r8b, al	      4843	memline.c	FUNCTION_58	IF_1	IF_2
0x4006c66	            0x7548	                           jne 0x4006cb0	      4843	memline.c	FUNCTION_58	IF_1	IF_2
0x4006c68	        0x488b4610	            mov rax, qword [rsi + 0x10] 	      4838	memline.c	FUNCTION_58	IF_1
0x4006c6c	      0x488d448618	          lea rax, [rsi + rax*4 + 0x18] 	      4838	memline.c	FUNCTION_58	IF_1
0x4006c71	          0x4839c3	                            cmp rbx, rax	      4843	memline.c	FUNCTION_58	IF_1	IF_2
0x4006c74	            0x723a	                            jb 0x4006cb0	      4843	memline.c	FUNCTION_58	IF_1	IF_2
0x4006c76	          0x4889d6	                            mov rsi, rdx	      4843	memline.c	FUNCTION_58	IF_1	IF_2
0x4006c79	      0xba01000000	                              mov edx, 1	      4846	memline.c	FUNCTION_58	IF_1	CALL_1
0x4006c7e	      0xe89da2ffff	               call sym.ml_crypt_prepare	      4846	memline.c	FUNCTION_58	IF_1	CALL_1
0x4006c83	          0x4885c0	                           test rax, rax	      4847	memline.c	FUNCTION_58	IF_1	IF_3
0x4006c86	          0x4989c5	                            mov r13, rax	      4846	memline.c	FUNCTION_58	IF_1	CALL_1
0x4006c89	            0x7425	                            je 0x4006cb0	      4847	memline.c	FUNCTION_58	IF_1	IF_3
0x4006c8b	          0x4129ec	                           sub r12d, ebp	      4850	memline.c	FUNCTION_58	IF_1	IF_3	CALL_2
0x4006c8e	          0x4889de	                            mov rsi, rbx	      4850	memline.c	FUNCTION_58	IF_1	IF_3	CALL_2
0x4006c91	          0x4889c7	                            mov rdi, rax	      4850	memline.c	FUNCTION_58	IF_1	IF_3	CALL_2
0x4006c94	          0x4963d4	                        movsxd rdx, r12d	      4850	memline.c	FUNCTION_58	IF_1	IF_3	CALL_2
0x4006c97	      0xe800000000	                          call 0x4006c9c	      4850	memline.c	FUNCTION_58	IF_1	IF_3	CALL_2
0x4006c9c	        0x4883c408	                              add rsp, 8	      4854	memline.c	FUNCTION_58
0x4006ca0	          0x4c89ef	                            mov rdi, r13	      4851	memline.c	FUNCTION_58	IF_1	IF_3	CALL_3
0x4006ca3	              0x5b	                                 pop rbx	      4854	memline.c	FUNCTION_58
0x4006ca4	              0x5d	                                 pop rbp	      4854	memline.c	FUNCTION_58
0x4006ca5	            0x415c	                                 pop r12	      4854	memline.c	FUNCTION_58
0x4006ca7	            0x415d	                                 pop r13	      4854	memline.c	FUNCTION_58
0x4006ca9	      0xe900000000	                           jmp 0x4006cae	      4851	memline.c	FUNCTION_58	IF_1	IF_3	CALL_3
0x4006cae	            0x6690	                                     nop	      4851	memline.c	FUNCTION_58	IF_1	IF_3	CALL_3
0x4006cb0	        0x4883c408	                              add rsp, 8	      4854	memline.c	FUNCTION_58
0x4006cb4	              0x5b	                                 pop rbx	      4854	memline.c	FUNCTION_58
0x4006cb5	              0x5d	                                 pop rbp	      4854	memline.c	FUNCTION_58
0x4006cb6	            0x415c	                                 pop r12	      4854	memline.c	FUNCTION_58
0x4006cb8	            0x415d	                                 pop r13	      4854	memline.c	FUNCTION_58
0x4006cba	              0xc3	                                     ret	      4854	memline.c	FUNCTION_58
ml_set_crypt_key	ELSE,4:SWITCH,0:DO,0:IF,15:FOR,1:functions,0:WHILE,0:CALL,15	181
0x4003360	            0x4157	                                push r15	       481	memline.c	FUNCTION_4
0x4003362	            0x4156	                                push r14	       481	memline.c	FUNCTION_4
0x4003364	            0x4155	                                push r13	       481	memline.c	FUNCTION_4
0x4003366	            0x4154	                                push r12	       481	memline.c	FUNCTION_4
0x4003368	              0x55	                                push rbp	       481	memline.c	FUNCTION_4
0x4003369	              0x53	                                push rbx	       481	memline.c	FUNCTION_4
0x400336a	        0x4883ec18	                           sub rsp, 0x18	       481	memline.c	FUNCTION_4
0x400336e	        0x488b6f08	                mov rbp, qword [rdi + 8]	       482	memline.c	FUNCTION_4
0x4003372	          0x4885ed	                           test rbp, rbp	       494	memline.c	FUNCTION_4	IF_1
0x4003375	     0xf8490000000	                            je 0x400340b	       494	memline.c	FUNCTION_4	IF_1
0x400337b	          0x4889fb	                            mov rbx, rdi	       494	memline.c	FUNCTION_4	IF_1
0x400337e	          0x4889d7	                            mov rdi, rdx	       496	memline.c	FUNCTION_4	CALL_1
0x4003381	          0x4989f4	                            mov r12, rsi	       496	memline.c	FUNCTION_4	CALL_1
0x4003384	          0x4989d5	                            mov r13, rdx	       496	memline.c	FUNCTION_4	CALL_1
0x4003387	      0xe800000000	                          call 0x400338c	       496	memline.c	FUNCTION_4	CALL_1
0x400338c	          0x4189c6	                           mov r14d, eax	       496	memline.c	FUNCTION_4	CALL_1
0x400338f	    0x488b83101500	          mov rax, qword [rbx + 0x1510] 	       501	memline.c	FUNCTION_4
0x4003396	    0x4c8bbb481700	          mov r15, qword [rbx + 0x1748] 	       502	memline.c	FUNCTION_4
0x400339d	            0x31f6	                            xor esi, esi	       506	memline.c	FUNCTION_4	CALL_2
0x400339f	    0x4c89a3101500	          mov qword [rbx + 0x1510], r12 	       504	memline.c	FUNCTION_4
0x40033a6	    0x4c89ab481700	          mov qword [rbx + 0x1748], r13 	       505	memline.c	FUNCTION_4
0x40033ad	          0x4889df	                            mov rdi, rbx	       506	memline.c	FUNCTION_4	CALL_2
0x40033b0	        0x48890424	                    mov qword [rsp], rax	       501	memline.c	FUNCTION_4
0x40033b4	      0xe800000000	                          call 0x40033b9	       506	memline.c	FUNCTION_4	CALL_2
0x40033b9	        0x488b0424	                    mov rax, qword [rsp]	       507	memline.c	FUNCTION_4
0x40033bd	          0x4585f6	                         test r14d, r14d	       515	memline.c	FUNCTION_4	IF_2
0x40033c0	    0x4c89bb481700	          mov qword [rbx + 0x1748], r15 	       508	memline.c	FUNCTION_4
0x40033c7	    0x488983101500	          mov qword [rbx + 0x1510], rax 	       507	memline.c	FUNCTION_4
0x40033ce	    0x4c89a5b00400	           mov qword [rbp + 0x4b0], r12 	       513	memline.c	FUNCTION_4
0x40033d5	    0x4489b5b80400	          mov dword [rbp + 0x4b8], r14d 	       514	memline.c	FUNCTION_4
0x40033dc	            0x7e0b	                           jle 0x40033e9	       515	memline.c	FUNCTION_4	IF_2
0x40033de	      0x41803c2400	                       cmp byte [r12], 0	       515	memline.c	FUNCTION_4	IF_2
0x40033e3	     0xf8507020000	                           jne 0x40035f0	       515	memline.c	FUNCTION_4	IF_2
0x40033e9	      0xbe02000000	                              mov esi, 2	       519	memline.c	FUNCTION_4	CALL_4
0x40033ee	          0x4889df	                            mov rdi, rbx	       519	memline.c	FUNCTION_4	CALL_4
0x40033f1	      0xe8dadfffff	                  call sym.ml_upd_block0	       519	memline.c	FUNCTION_4	CALL_4
0x40033f6	    0x4883bd900400	              cmp qword [rbp + 0x490], 2	       521	memline.c	FUNCTION_4	IF_3
0x40033fe	            0x7f20	                            jg 0x4003420	       521	memline.c	FUNCTION_4	IF_3
0x4003400	    0x48c785b00400	              mov qword [rbp + 0x4b0], 0	       621	memline.c	FUNCTION_4
0x400340b	        0x4883c418	                           add rsp, 0x18	       622	memline.c	FUNCTION_4
0x400340f	              0x5b	                                 pop rbx	       622	memline.c	FUNCTION_4
0x4003410	              0x5d	                                 pop rbp	       622	memline.c	FUNCTION_4
0x4003411	            0x415c	                                 pop r12	       622	memline.c	FUNCTION_4
0x4003413	            0x415d	                                 pop r13	       622	memline.c	FUNCTION_4
0x4003415	            0x415e	                                 pop r14	       622	memline.c	FUNCTION_4
0x4003417	            0x415f	                                 pop r15	       622	memline.c	FUNCTION_4
0x4003419	              0xc3	                                     ret	       622	memline.c	FUNCTION_4
0x400341a	    0x660f1f440000	                    nop word [rax + rax]	       622	memline.c	FUNCTION_4
0x4003420	          0x4889df	                            mov rdi, rbx	       529	memline.c	FUNCTION_4	IF_3	CALL_5
0x4003423	      0xe818fbffff	                  call sym.ml_flush_line	       529	memline.c	FUNCTION_4	IF_3	CALL_5
0x4003428	            0x31f6	                            xor esi, esi	       530	memline.c	FUNCTION_4	IF_3	CALL_6
0x400342a	          0x4889df	                            mov rdi, rbx	       530	memline.c	FUNCTION_4	IF_3	CALL_6
0x400342d	      0xba02000000	                              mov edx, 2	       530	memline.c	FUNCTION_4	IF_3	CALL_6
0x4003432	      0xe8e9cdffff	                   call sym.ml_find_line	       530	memline.c	FUNCTION_4	IF_3	CALL_6
0x4003437	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       538	memline.c	FUNCTION_4	IF_3	CALL_7
0x400343b	    0xc74320000000	               mov dword [rbx + 0x20], 0	       537	memline.c	FUNCTION_4	IF_3
0x4003442	          0x4885ff	                           test rdi, rdi	       538	memline.c	FUNCTION_4	IF_3	CALL_7
0x4003445	            0x740d	                            je 0x4003454	       538	memline.c	FUNCTION_4	IF_3	CALL_7
0x4003447	      0xe800000000	                          call 0x400344c	       538	memline.c	FUNCTION_4	IF_3	CALL_7
0x400344c	    0x48c743180000	               mov qword [rbx + 0x18], 0	       538	memline.c	FUNCTION_4	IF_3	CALL_7
0x4003454	    0x8b0500000000	            mov eax, dword [0x0400345a] 	       541	memline.c	FUNCTION_4	IF_3	FOR_1	CALL_8
0x400345a	    0xc74324000000	               mov dword [rbx + 0x24], 0	       539	memline.c	FUNCTION_4	IF_3
0x4003461	            0x85c0	                           test eax, eax	       541	memline.c	FUNCTION_4	IF_3	FOR_1	CALL_8
0x4003463	            0x759b	                           jne 0x4003400	       541	memline.c	FUNCTION_4	IF_3	FOR_1	CALL_8
0x4003465	    0x48c704240000	                      mov qword [rsp], 0	       541	memline.c	FUNCTION_4	IF_3	FOR_1	CALL_8
0x400346d	          0x4531ed	                          xor r13d, r13d	       541	memline.c	FUNCTION_4	IF_3	FOR_1	CALL_8
0x4003470	    0x41be01000000	                             mov r14d, 1	       541	memline.c	FUNCTION_4	IF_3	FOR_1	CALL_8
0x4003476	    0x41bf01000000	                             mov r15d, 1	       541	memline.c	FUNCTION_4	IF_3	FOR_1	CALL_8
0x400347c	         0xf1f4000	                         nop dword [rax]	       541	memline.c	FUNCTION_4	IF_3	FOR_1	CALL_8
0x4003480	          0x4489fa	                           mov edx, r15d	       547	memline.c	FUNCTION_4	IF_3	FOR_1	IF_5	CALL_10
0x4003483	          0x4c89f6	                            mov rsi, r14	       547	memline.c	FUNCTION_4	IF_3	FOR_1	IF_5	CALL_10
0x4003486	          0x4889ef	                            mov rdi, rbp	       547	memline.c	FUNCTION_4	IF_3	FOR_1	IF_5	CALL_10
0x4003489	      0xe800000000	                          call 0x400348e	       547	memline.c	FUNCTION_4	IF_3	FOR_1	IF_5	CALL_10
0x400348e	          0x4885c0	                           test rax, rax	       547	memline.c	FUNCTION_4	IF_3	FOR_1	IF_5	CALL_10
0x4003491	          0x4989c4	                            mov r12, rax	       547	memline.c	FUNCTION_4	IF_3	FOR_1	IF_5	CALL_10
0x4003494	     0xf8426010000	                            je 0x40035c0	       547	memline.c	FUNCTION_4	IF_3	FOR_1	IF_5	CALL_10
0x400349a	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       555	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1
0x400349e	           0xfb702	                   movzx eax, word [rdx]	       556	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	IF_7
0x40034a1	        0x663d7470	                          cmp ax, 0x7074	       556	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	IF_7
0x40034a5	            0x7469	                            je 0x4003510	       556	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	IF_7
0x40034a7	        0x663d6164	                          cmp ax, 0x6461	       594	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	ELSE_3	IF_12
0x40034ab	     0xf841f010000	                            je 0x40035d0	       594	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	ELSE_3	IF_12
0x40034b1	      0x4883042401	                      add qword [rsp], 1	       595	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	ELSE_3	IF_12
0x40034b6	          0x8b4320	            mov eax, dword [rbx + 0x20] 	       605	memline.c	FUNCTION_4	IF_3	FOR_1	IF_13
0x40034b9	            0x85c0	                           test eax, eax	       605	memline.c	FUNCTION_4	IF_3	FOR_1	IF_13
0x40034bb	     0xf8457010000	                            je 0x4003618	       605	memline.c	FUNCTION_4	IF_3	FOR_1	IF_13
0x40034c1	          0x83e801	                              sub eax, 1	       609	memline.c	FUNCTION_4	IF_3	FOR_1
0x40034c4	          0x894320	             mov dword [rbx + 0x20], eax	       609	memline.c	FUNCTION_4	IF_3	FOR_1
0x40034c7	            0x4898	                                    cdqe	       609	memline.c	FUNCTION_4	IF_3	FOR_1
0x40034c9	        0x48c1e005	                              shl rax, 5	       609	memline.c	FUNCTION_4	IF_3	FOR_1
0x40034cd	        0x48034318	             add rax, qword [rbx + 0x18]	       609	memline.c	FUNCTION_4	IF_3	FOR_1
0x40034d1	        0x448b6818	           mov r13d, dword [rax + 0x18] 	       611	memline.c	FUNCTION_4	IF_3	FOR_1
0x40034d5	          0x4c8b30	                    mov r14, qword [rax]	       610	memline.c	FUNCTION_4	IF_3	FOR_1
0x40034d8	      0xe800000000	                          call 0x40034dd	       541	memline.c	FUNCTION_4	IF_3	FOR_1	CALL_8
0x40034dd	    0x8b0500000000	            mov eax, dword [0x040034e3] 	       541	memline.c	FUNCTION_4	IF_3	FOR_1	CALL_8
0x40034e3	        0x4183c501	                             add r13d, 1	       611	memline.c	FUNCTION_4	IF_3	FOR_1
0x40034e7	            0x85c0	                           test eax, eax	       541	memline.c	FUNCTION_4	IF_3	FOR_1	CALL_8
0x40034e9	     0xf8529010000	                           jne 0x4003618	       541	memline.c	FUNCTION_4	IF_3	FOR_1	CALL_8
0x40034ef	          0x4d85e4	                           test r12, r12	       543	memline.c	FUNCTION_4	IF_3	FOR_1	IF_4
0x40034f2	    0x41bf01000000	                             mov r15d, 1	       612	memline.c	FUNCTION_4	IF_3	FOR_1
0x40034f8	            0x7486	                            je 0x4003480	       543	memline.c	FUNCTION_4	IF_3	FOR_1	IF_4
0x40034fa	            0x31c9	                            xor ecx, ecx	       544	memline.c	FUNCTION_4	IF_3	FOR_1	CALL_9
0x40034fc	            0x31d2	                            xor edx, edx	       544	memline.c	FUNCTION_4	IF_3	FOR_1	CALL_9
0x40034fe	          0x4c89e6	                            mov rsi, r12	       544	memline.c	FUNCTION_4	IF_3	FOR_1	CALL_9
0x4003501	          0x4889ef	                            mov rdi, rbp	       544	memline.c	FUNCTION_4	IF_3	FOR_1	CALL_9
0x4003504	      0xe800000000	                          call 0x4003509	       544	memline.c	FUNCTION_4	IF_3	FOR_1	CALL_9
0x4003509	      0xe972ffffff	                           jmp 0x4003480	       544	memline.c	FUNCTION_4	IF_3	FOR_1	CALL_9
0x400350e	            0x6690	                                     nop	       544	memline.c	FUNCTION_4	IF_3	FOR_1	CALL_9
0x4003510	         0xfb74202	               movzx eax, word [rdx + 2]	       558	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	IF_7	IF_8
0x4003514	          0x6685c0	                             test ax, ax	       558	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	IF_7	IF_8
0x4003517	            0x7498	                            je 0x40034b1	       558	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	IF_7	IF_8
0x4003519	          0x4439e8	                           cmp eax, r13d	       563	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	IF_7	ELSE_2	IF_9
0x400351c	            0x7e98	                           jle 0x40034b6	       563	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	IF_7	ELSE_2	IF_9
0x400351e	          0x4963c5	                        movsxd rax, r13d	       563	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	IF_7	ELSE_2	IF_9
0x4003521	        0x48c1e005	                              shl rax, 5	       563	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	IF_7	ELSE_2	IF_9
0x4003525	          0x4801c2	                            add rdx, rax	       563	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	IF_7	ELSE_2	IF_9
0x4003528	      0x48837a0800	                  cmp qword [rdx + 8], 0	       565	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	IF_7	ELSE_2	IF_9	IF_10
0x400352d	     0xf88d5000000	                            js 0x4003608	       565	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	IF_7	ELSE_2	IF_9	IF_10
0x4003533	          0x4889df	                            mov rdi, rbx	       576	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	IF_7	ELSE_2	IF_9	IF_11	CALL_11
0x4003536	      0x4889542408	                mov qword [rsp + 8], rdx	       576	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	IF_7	ELSE_2	IF_9	IF_11	CALL_11
0x400353b	      0xe870ccffff	                   call sym.ml_add_stack	       576	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	IF_7	ELSE_2	IF_9	IF_11	CALL_11
0x4003540	            0x85c0	                           test eax, eax	       576	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	IF_7	ELSE_2	IF_9	IF_11	CALL_11
0x4003542	      0x488b542408	                mov rdx, qword [rsp + 8]	       576	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	IF_7	ELSE_2	IF_9	IF_11	CALL_11
0x4003547	     0xf88e8000000	                            js 0x4003635	       576	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	IF_7	ELSE_2	IF_9	IF_11	CALL_11
0x400354d	            0x4898	                                    cdqe	       581	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	IF_7	ELSE_2	IF_9
0x400354f	        0x448b7a20	           mov r15d, dword [rdx + 0x20] 	       586	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	IF_7	ELSE_2	IF_9
0x4003553	        0x48c1e005	                              shl rax, 5	       581	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	IF_7	ELSE_2	IF_9
0x4003557	        0x48034318	             add rax, qword [rbx + 0x18]	       581	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	IF_7	ELSE_2	IF_9
0x400355b	          0x4c8930	                    mov qword [rax], r14	       582	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	IF_7	ELSE_2	IF_9
0x400355e	        0x4c8b7208	                mov r14, qword [rdx + 8]	       585	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	IF_7	ELSE_2	IF_9
0x4003562	        0x44896818	            mov dword [rax + 0x18], r13d	       583	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	IF_7	ELSE_2	IF_9
0x4003566	          0x4531ed	                          xor r13d, r13d	       587	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	IF_7	ELSE_2	IF_9
0x4003569	      0xe800000000	                          call 0x400356e	       541	memline.c	FUNCTION_4	IF_3	FOR_1	CALL_8
0x400356e	    0x8b0500000000	            mov eax, dword [0x04003574] 	       541	memline.c	FUNCTION_4	IF_3	FOR_1	CALL_8
0x4003574	            0x85c0	                           test eax, eax	       541	memline.c	FUNCTION_4	IF_3	FOR_1	CALL_8
0x4003576	            0x7482	                            je 0x40034fa	       541	memline.c	FUNCTION_4	IF_3	FOR_1	CALL_8
0x4003578	            0x31c9	                            xor ecx, ecx	       615	memline.c	FUNCTION_4	IF_3	CALL_13
0x400357a	            0x31d2	                            xor edx, edx	       615	memline.c	FUNCTION_4	IF_3	CALL_13
0x400357c	          0x4c89e6	                            mov rsi, r12	       615	memline.c	FUNCTION_4	IF_3	CALL_13
0x400357f	          0x4889ef	                            mov rdi, rbp	       615	memline.c	FUNCTION_4	IF_3	CALL_13
0x4003582	      0xe800000000	                          call 0x4003587	       615	memline.c	FUNCTION_4	IF_3	CALL_13
0x4003587	    0x660f1f840000	                    nop word [rax + rax]	       615	memline.c	FUNCTION_4	IF_3	CALL_13
0x4003590	      0x48833c2400	                      cmp qword [rsp], 0	       617	memline.c	FUNCTION_4	IF_3	IF_15
0x4003595	     0xf8465feffff	                            je 0x4003400	       617	memline.c	FUNCTION_4	IF_3	IF_15
0x400359b	            0x31ff	                            xor edi, edi	       618	memline.c	FUNCTION_4	IF_3	CALL_15
0x400359d	      0xba05000000	                              mov edx, 5	       618	memline.c	FUNCTION_4	IF_3	CALL_15
0x40035a2	      0xbe00000000	                              mov esi, 0	       618	memline.c	FUNCTION_4	IF_3	CALL_15
0x40035a7	      0xe800000000	                          call 0x40035ac	       618	memline.c	FUNCTION_4	IF_3	CALL_15
0x40035ac	          0x4889c7	                            mov rdi, rax	       618	memline.c	FUNCTION_4	IF_3	CALL_15
0x40035af	      0xe800000000	                          call 0x40035b4	       618	memline.c	FUNCTION_4	IF_3	CALL_15
0x40035b4	      0xe947feffff	                           jmp 0x4003400	       618	memline.c	FUNCTION_4	IF_3	CALL_15
0x40035b9	     0xf1f80000000	                         nop dword [rax]	       618	memline.c	FUNCTION_4	IF_3	CALL_15
0x40035c0	        0x4983fe01	                              cmp r14, 1	       549	memline.c	FUNCTION_4	IF_3	FOR_1	IF_5	IF_6
0x40035c4	     0xf85e7feffff	                           jne 0x40034b1	       549	memline.c	FUNCTION_4	IF_3	FOR_1	IF_5	IF_6
0x40035ca	            0xebc4	                           jmp 0x4003590	       549	memline.c	FUNCTION_4	IF_3	FOR_1	IF_5	IF_6
0x40035cc	         0xf1f4000	                         nop dword [rax]	       549	memline.c	FUNCTION_4	IF_3	FOR_1	IF_5	IF_6
0x40035d0	          0x4c89e6	                            mov rsi, r12	       599	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	ELSE_3	ELSE_4	CALL_12
0x40035d3	            0x31c9	                            xor ecx, ecx	       599	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	ELSE_3	ELSE_4	CALL_12
0x40035d5	      0xba01000000	                              mov edx, 1	       599	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	ELSE_3	ELSE_4	CALL_12
0x40035da	          0x4889ef	                            mov rdi, rbp	       599	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	ELSE_3	ELSE_4	CALL_12
0x40035dd	          0x4531e4	                          xor r12d, r12d	       600	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	ELSE_3	ELSE_4
0x40035e0	      0xe800000000	                          call 0x40035e5	       599	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	ELSE_3	ELSE_4	CALL_12
0x40035e5	      0xe9ccfeffff	                           jmp 0x40034b6	       599	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	ELSE_3	ELSE_4	CALL_12
0x40035ea	    0x660f1f440000	                    nop word [rax + rax]	       599	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	ELSE_3	ELSE_4	CALL_12
0x40035f0	    0x488b85a80400	           mov rax, qword [rbp + 0x4a8] 	        59	string3.h	FUNCTION_64	CALL_3
0x40035f7	    0x488985bc0400	           mov qword [rbp + 0x4bc], rax 	        59	string3.h	FUNCTION_64	CALL_3
0x40035fe	      0xe9e6fdffff	                           jmp 0x40033e9	        59	string3.h	FUNCTION_64	CALL_3
0x4003603	       0xf1f440000	                   nop dword [rax + rax]	        59	string3.h	FUNCTION_64	CALL_3
0x4003608	        0x4183c501	                             add r13d, 1	       570	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	IF_7	ELSE_2	IF_9	IF_10
0x400360c	      0xe958ffffff	                           jmp 0x4003569	       571	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	IF_7	ELSE_2	IF_9	IF_10
0x4003611	     0xf1f80000000	                         nop dword [rax]	       571	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	IF_7	ELSE_2	IF_9	IF_10
0x4003618	          0x4d85e4	                           test r12, r12	       614	memline.c	FUNCTION_4	IF_3	IF_14
0x400361b	     0xf846fffffff	                            je 0x4003590	       614	memline.c	FUNCTION_4	IF_3	IF_14
0x4003621	            0x31c9	                            xor ecx, ecx	       615	memline.c	FUNCTION_4	IF_3	CALL_13
0x4003623	            0x31d2	                            xor edx, edx	       615	memline.c	FUNCTION_4	IF_3	CALL_13
0x4003625	          0x4c89e6	                            mov rsi, r12	       615	memline.c	FUNCTION_4	IF_3	CALL_13
0x4003628	          0x4889ef	                            mov rdi, rbp	       615	memline.c	FUNCTION_4	IF_3	CALL_13
0x400362b	      0xe800000000	                          call 0x4003630	       615	memline.c	FUNCTION_4	IF_3	CALL_13
0x4003630	      0xe95bffffff	                           jmp 0x4003590	       615	memline.c	FUNCTION_4	IF_3	CALL_13
0x4003635	      0x4883042401	                      add qword [rsp], 1	       578	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	IF_7	ELSE_2	IF_9	IF_11
0x400363a	      0xe939ffffff	                           jmp 0x4003578	       578	memline.c	FUNCTION_4	IF_3	FOR_1	ELSE_1	IF_7	ELSE_2	IF_9	IF_11
ml_get_buf	ELSE,0:SWITCH,0:DO,0:IF,8:FOR,0:functions,0:WHILE,0:CALL,7	78
0x4003820	            0x4154	                                push r12	      2439	memline.c	FUNCTION_29
0x4003822	              0x55	                                push rbp	      2439	memline.c	FUNCTION_29
0x4003823	          0x4889f5	                            mov rbp, rsi	      2439	memline.c	FUNCTION_29
0x4003826	              0x53	                                push rbx	      2439	memline.c	FUNCTION_29
0x4003827	          0x483937	                    cmp qword [rdi], rsi	      2445	memline.c	FUNCTION_29	IF_1
0x400382a	            0x7d2c	                           jge 0x4003858	      2445	memline.c	FUNCTION_29	IF_1
0x400382c	    0x8b0d00000000	            mov ecx, dword [0x04003832] 	      2447	memline.c	FUNCTION_29	IF_1	IF_2
0x4003832	            0x85c9	                           test ecx, ecx	      2447	memline.c	FUNCTION_29	IF_1	IF_2
0x4003834	     0xf84a6000000	                            je 0x40038e0	      2447	memline.c	FUNCTION_29	IF_1	IF_2
0x400383a	    0x488b05000000	            mov rax, qword [0x04003841] 	       110	string3.h	FUNCTION_69	CALL_3
0x4003841	    0xc7003f3f3f00	               mov dword [rax], 0x3f3f3f	       110	string3.h	FUNCTION_69	CALL_3
0x4003847	    0x488b05000000	            mov rax, qword [0x0400384e] 	      2457	memline.c	FUNCTION_29	IF_1
0x400384e	              0x5b	                                 pop rbx	      2504	memline.c	FUNCTION_29
0x400384f	              0x5d	                                 pop rbp	      2504	memline.c	FUNCTION_29
0x4003850	            0x415c	                                 pop r12	      2504	memline.c	FUNCTION_29
0x4003852	              0xc3	                                     ret	      2504	memline.c	FUNCTION_29
0x4003853	       0xf1f440000	                   nop dword [rax + rax]	      2504	memline.c	FUNCTION_29
0x4003858	          0x4885f6	                           test rsi, rsi	      2460	memline.c	FUNCTION_29	IF_3
0x400385b	      0xb801000000	                              mov eax, 1	      2460	memline.c	FUNCTION_29	IF_3
0x4003860	          0x4889fb	                            mov rbx, rdi	      2460	memline.c	FUNCTION_29	IF_3
0x4003863	        0x480f4ee8	                         cmovle rbp, rax	      2460	memline.c	FUNCTION_29	IF_3
0x4003867	      0x48837f0800	                  cmp qword [rdi + 8], 0	      2462	memline.c	FUNCTION_29	IF_4
0x400386c	     0xf84ae000000	                            je 0x4003920	      2462	memline.c	FUNCTION_29	IF_4
0x4003872	        0x483b6f28	            cmp rbp, qword [rdi + 0x28] 	      2471	memline.c	FUNCTION_29	IF_5
0x4003876	          0x4189d4	                           mov r12d, edx	      2471	memline.c	FUNCTION_29	IF_5
0x4003879	            0x750e	                           jne 0x4003889	      2471	memline.c	FUNCTION_29	IF_5
0x400387b	    0x8b1500000000	            mov edx, dword [0x04003881] 	      2471	memline.c	FUNCTION_29	IF_5
0x4003881	            0x85d2	                           test edx, edx	      2471	memline.c	FUNCTION_29	IF_5
0x4003883	     0xf848f000000	                            je 0x4003918	      2471	memline.c	FUNCTION_29	IF_5
0x4003889	          0x4889df	                            mov rdi, rbx	      2473	memline.c	FUNCTION_29	IF_5	CALL_4
0x400388c	      0xe8aff6ffff	                  call sym.ml_flush_line	      2473	memline.c	FUNCTION_29	IF_5	CALL_4
0x4003891	      0xba13000000	                           mov edx, 0x13	      2480	memline.c	FUNCTION_29	IF_5	IF_6	CALL_5
0x4003896	          0x4889ee	                            mov rsi, rbp	      2480	memline.c	FUNCTION_29	IF_5	IF_6	CALL_5
0x4003899	          0x4889df	                            mov rdi, rbx	      2480	memline.c	FUNCTION_29	IF_5	IF_6	CALL_5
0x400389c	      0xe87fc9ffff	                   call sym.ml_find_line	      2480	memline.c	FUNCTION_29	IF_5	IF_6	CALL_5
0x40038a1	          0x4885c0	                           test rax, rax	      2480	memline.c	FUNCTION_29	IF_5	IF_6	CALL_5
0x40038a4	     0xf8486000000	                            je 0x4003930	      2480	memline.c	FUNCTION_29	IF_5	IF_6	CALL_5
0x40038aa	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2493	memline.c	FUNCTION_29	IF_5
0x40038ae	          0x4889e8	                            mov rax, rbp	      2495	memline.c	FUNCTION_29	IF_5
0x40038b1	        0x482b4340	             sub rax, qword [rbx + 0x40]	      2495	memline.c	FUNCTION_29	IF_5
0x40038b5	        0x8b448218	    mov eax, dword [rdx + rax*4 + 0x18] 	      2495	memline.c	FUNCTION_29	IF_5
0x40038b9	        0x836310fd	      and dword [rbx + 0x10], 0xfffffffd	      2498	memline.c	FUNCTION_29	IF_5
0x40038bd	        0x48896b28	             mov qword [rbx + 0x28], rbp	      2497	memline.c	FUNCTION_29	IF_5
0x40038c1	      0x25ffffff7f	                     and eax, 0x7fffffff	      2495	memline.c	FUNCTION_29	IF_5
0x40038c6	          0x4801d0	                            add rax, rdx	      2495	memline.c	FUNCTION_29	IF_5
0x40038c9	        0x48894330	             mov qword [rbx + 0x30], rax	      2496	memline.c	FUNCTION_29	IF_5
0x40038cd	          0x4585e4	                         test r12d, r12d	      2500	memline.c	FUNCTION_29	IF_8
0x40038d0	     0xf8478ffffff	                            je 0x400384e	      2500	memline.c	FUNCTION_29	IF_8
0x40038d6	        0x834b100c	              or dword [rbx + 0x10], 0xc	      2501	memline.c	FUNCTION_29	IF_8
0x40038da	              0x5b	                                 pop rbx	      2504	memline.c	FUNCTION_29
0x40038db	              0x5d	                                 pop rbp	      2504	memline.c	FUNCTION_29
0x40038dc	            0x415c	                                 pop r12	      2504	memline.c	FUNCTION_29
0x40038de	              0xc3	                                     ret	      2504	memline.c	FUNCTION_29
0x40038df	              0x90	                                     nop	      2504	memline.c	FUNCTION_29
0x40038e0	    0xc70500000000	               mov dword [0x040038ea], 1	      2451	memline.c	FUNCTION_29	IF_1	IF_2
0x40038ea	      0xba05000000	                              mov edx, 5	      2452	memline.c	FUNCTION_29	IF_1	IF_2	CALL_2
0x40038ef	      0xbe00000000	                              mov esi, 0	      2452	memline.c	FUNCTION_29	IF_1	IF_2	CALL_2
0x40038f4	            0x31ff	                            xor edi, edi	      2452	memline.c	FUNCTION_29	IF_1	IF_2	CALL_2
0x40038f6	      0xe800000000	                          call 0x40038fb	      2452	memline.c	FUNCTION_29	IF_1	IF_2	CALL_2
0x40038fb	          0x4889ee	                            mov rsi, rbp	      2452	memline.c	FUNCTION_29	IF_1	IF_2	CALL_2
0x40038fe	          0x4889c7	                            mov rdi, rax	      2452	memline.c	FUNCTION_29	IF_1	IF_2	CALL_2
0x4003901	      0xe800000000	                          call 0x4003906	      2452	memline.c	FUNCTION_29	IF_1	IF_2	CALL_2
0x4003906	    0x832d00000000	               sub dword [0x0400390d], 1	      2453	memline.c	FUNCTION_29	IF_1	IF_2
0x400390d	      0xe928ffffff	                           jmp 0x400383a	      2453	memline.c	FUNCTION_29	IF_1	IF_2
0x4003912	    0x660f1f440000	                    nop word [rax + rax]	      2453	memline.c	FUNCTION_29	IF_1	IF_2
0x4003918	        0x488b4730	            mov rax, qword [rdi + 0x30] 	      2453	memline.c	FUNCTION_29	IF_1	IF_2
0x400391c	            0xebaf	                           jmp 0x40038cd	      2453	memline.c	FUNCTION_29	IF_1	IF_2
0x400391e	            0x6690	                                     nop	      2453	memline.c	FUNCTION_29	IF_1	IF_2
0x4003920	      0xb800000000	                              mov eax, 0	      2463	memline.c	FUNCTION_29	IF_4
0x4003925	      0xe924ffffff	                           jmp 0x400384e	      2463	memline.c	FUNCTION_29	IF_4
0x400392a	    0x660f1f440000	                    nop word [rax + rax]	      2463	memline.c	FUNCTION_29	IF_4
0x4003930	    0x8b0500000000	            mov eax, dword [0x04003936] 	      2482	memline.c	FUNCTION_29	IF_5	IF_6	IF_7
0x4003936	            0x85c0	                           test eax, eax	      2482	memline.c	FUNCTION_29	IF_5	IF_6	IF_7
0x4003938	     0xf85fcfeffff	                           jne 0x400383a	      2482	memline.c	FUNCTION_29	IF_5	IF_6	IF_7
0x400393e	    0xc70500000000	               mov dword [0x04003948], 1	      2486	memline.c	FUNCTION_29	IF_5	IF_6	IF_7
0x4003948	      0xba05000000	                              mov edx, 5	      2487	memline.c	FUNCTION_29	IF_5	IF_6	IF_7	CALL_7
0x400394d	      0xbe00000000	                              mov esi, 0	      2487	memline.c	FUNCTION_29	IF_5	IF_6	IF_7	CALL_7
0x4003952	            0xeba0	                           jmp 0x40038f4	      2487	memline.c	FUNCTION_29	IF_5	IF_6	IF_7	CALL_7
makeswapname	ELSE,0:SWITCH,0:DO,0:IF,4:FOR,0:functions,0:WHILE,0:CALL,9	92
0x4005980	            0x4156	                                push r14	      3916	memline.c	FUNCTION_47
0x4005982	            0x4155	                                push r13	      3916	memline.c	FUNCTION_47
0x4005984	          0x4989d6	                            mov r14, rdx	      3916	memline.c	FUNCTION_47
0x4005987	            0x4154	                                push r12	      3916	memline.c	FUNCTION_47
0x4005989	              0x55	                                push rbp	      3916	memline.c	FUNCTION_47
0x400598a	          0x4989fc	                            mov r12, rdi	      3916	memline.c	FUNCTION_47
0x400598d	              0x53	                                push rbx	      3916	memline.c	FUNCTION_47
0x400598e	          0x4889cf	                            mov rdi, rcx	      3924	memline.c	FUNCTION_47	CALL_1
0x4005991	          0x4889cb	                            mov rbx, rcx	      3916	memline.c	FUNCTION_47
0x4005994	    0x4881ec101000	                         sub rsp, 0x1010	      3916	memline.c	FUNCTION_47
0x400599b	    0x64488b042528	                mov rax, qword fs:[0x28]	      3916	memline.c	FUNCTION_47
0x40059a4	    0x488984240810	          mov qword [rsp + 0x1008], rax 	      3916	memline.c	FUNCTION_47
0x40059ac	            0x31c0	                            xor eax, eax	      3916	memline.c	FUNCTION_47
0x40059ae	      0xe800000000	                          call 0x40059b3	      3924	memline.c	FUNCTION_47	CALL_1
0x40059b3	          0x4863e8	                         movsxd rbp, eax	      3926	memline.c	FUNCTION_47
0x40059b6	          0x4889df	                            mov rdi, rbx	      3927	memline.c	FUNCTION_47	IF_1	CALL_2
0x40059b9	          0x4989c5	                            mov r13, rax	      3924	memline.c	FUNCTION_47	CALL_1
0x40059bc	          0x4801dd	                            add rbp, rbx	      3926	memline.c	FUNCTION_47
0x40059bf	          0x4889ee	                            mov rsi, rbp	      3927	memline.c	FUNCTION_47	IF_1	CALL_2
0x40059c2	      0xe800000000	                          call 0x40059c7	      3927	memline.c	FUNCTION_47	IF_1	CALL_2
0x40059c7	            0x85c0	                           test eax, eax	      3927	memline.c	FUNCTION_47	IF_1	CALL_2
0x40059c9	            0x7413	                            je 0x40059de	      3927	memline.c	FUNCTION_47	IF_1	CALL_2
0x40059cb	        0x4183fd01	                             cmp r13d, 1	      3927	memline.c	FUNCTION_47	IF_1	CALL_2
0x40059cf	            0x7e0d	                           jle 0x40059de	      3927	memline.c	FUNCTION_47	IF_1	CALL_2
0x40059d1	         0xfb645fe	               movzx eax, byte [rbp - 2]	      3927	memline.c	FUNCTION_47	IF_1	CALL_2
0x40059d5	          0x3845ff	                  cmp byte [rbp - 1], al	      3927	memline.c	FUNCTION_47	IF_1	CALL_2
0x40059d8	     0xf84b2000000	                            je 0x4005a90	      3927	memline.c	FUNCTION_47	IF_1	CALL_2
0x40059de	          0x4c89e7	                            mov rdi, r12	      3942	memline.c	FUNCTION_47	IF_3	CALL_6
0x40059e1	          0x4889e6	                            mov rsi, rsp	      3942	memline.c	FUNCTION_47	IF_3	CALL_6
0x40059e4	      0xe800000000	                          call 0x40059e9	      3942	memline.c	FUNCTION_47	IF_3	CALL_6
0x40059e9	          0x83f801	                              cmp eax, 1	      3943	memline.c	FUNCTION_47	IF_3
0x40059ec	        0x4c0f44e4	                          cmove r12, rsp	      3943	memline.c	FUNCTION_47	IF_3
0x40059f0	            0x31c9	                            xor ecx, ecx	      3946	memline.c	FUNCTION_47	CALL_7
0x40059f2	          0x803b2e	                    cmp byte [rbx], 0x2e	      3946	memline.c	FUNCTION_47	CALL_7
0x40059f5	     0xf847d000000	                            je 0x4005a78	      3946	memline.c	FUNCTION_47	CALL_7
0x40059fb	    0x418b96701500	          mov edx, dword [r14 + 0x1570] 	      3946	memline.c	FUNCTION_47	CALL_7
0x4005a02	      0xbf01000000	                              mov edi, 1	      3946	memline.c	FUNCTION_47	CALL_7
0x4005a07	            0x85d2	                           test edx, edx	      3946	memline.c	FUNCTION_47	CALL_7
0x4005a09	            0x7455	                            je 0x4005a60	      3946	memline.c	FUNCTION_47	CALL_7
0x4005a0b	      0xba00000000	                              mov edx, 0	      3946	memline.c	FUNCTION_47	CALL_7
0x4005a10	          0x4c89e6	                            mov rsi, r12	      3946	memline.c	FUNCTION_47	CALL_7
0x4005a13	      0xe800000000	                          call 0x4005a18	      3946	memline.c	FUNCTION_47	CALL_7
0x4005a18	          0x4885c0	                           test rax, rax	      3957	memline.c	FUNCTION_47	IF_4
0x4005a1b	          0x4889c5	                            mov rbp, rax	      3946	memline.c	FUNCTION_47	CALL_7
0x4005a1e	     0xf84a4000000	                            je 0x4005ac8	      3957	memline.c	FUNCTION_47	IF_4
0x4005a24	          0x4889de	                            mov rsi, rbx	      3960	memline.c	FUNCTION_47	CALL_8
0x4005a27	          0x4889c7	                            mov rdi, rax	      3960	memline.c	FUNCTION_47	CALL_8
0x4005a2a	      0xe800000000	                          call 0x4005a2f	      3960	memline.c	FUNCTION_47	CALL_8
0x4005a2f	          0x4889ef	                            mov rdi, rbp	      3961	memline.c	FUNCTION_47	CALL_9
0x4005a32	          0x4889c3	                            mov rbx, rax	      3960	memline.c	FUNCTION_47	CALL_8
0x4005a35	      0xe800000000	                          call 0x4005a3a	      3961	memline.c	FUNCTION_47	CALL_9
0x4005a3a	          0x4889d8	                            mov rax, rbx	      3962	memline.c	FUNCTION_47
0x4005a3d	    0x488b94240810	          mov rdx, qword [rsp + 0x1008] 	      3963	memline.c	FUNCTION_47
0x4005a45	    0x644833142528	                xor rdx, qword fs:[0x28]	      3963	memline.c	FUNCTION_47
0x4005a4e	            0x757f	                           jne 0x4005acf	      3963	memline.c	FUNCTION_47
0x4005a50	    0x4881c4101000	                         add rsp, 0x1010	      3963	memline.c	FUNCTION_47
0x4005a57	              0x5b	                                 pop rbx	      3963	memline.c	FUNCTION_47
0x4005a58	              0x5d	                                 pop rbp	      3963	memline.c	FUNCTION_47
0x4005a59	            0x415c	                                 pop r12	      3963	memline.c	FUNCTION_47
0x4005a5b	            0x415d	                                 pop r13	      3963	memline.c	FUNCTION_47
0x4005a5d	            0x415e	                                 pop r14	      3963	memline.c	FUNCTION_47
0x4005a5f	              0xc3	                                     ret	      3963	memline.c	FUNCTION_47
0x4005a60	    0x418b86601700	          mov eax, dword [r14 + 0x1760] 	      3946	memline.c	FUNCTION_47	CALL_7
0x4005a67	            0x31ff	                            xor edi, edi	      3946	memline.c	FUNCTION_47	CALL_7
0x4005a69	            0x85c0	                           test eax, eax	      3946	memline.c	FUNCTION_47	CALL_7
0x4005a6b	        0x400f95c7	                               setne dil	      3946	memline.c	FUNCTION_47	CALL_7
0x4005a6f	            0xeb9a	                           jmp 0x4005a0b	      3946	memline.c	FUNCTION_47	CALL_7
0x4005a71	     0xf1f80000000	                         nop dword [rax]	      3946	memline.c	FUNCTION_47	CALL_7
0x4005a78	            0x31c9	                            xor ecx, ecx	      3946	memline.c	FUNCTION_47	CALL_7
0x4005a7a	        0x807b0100	                   cmp byte [rbx + 1], 0	      3946	memline.c	FUNCTION_47	CALL_7
0x4005a7e	           0xf94c1	                                 sete cl	      3946	memline.c	FUNCTION_47	CALL_7
0x4005a81	      0xe975ffffff	                           jmp 0x40059fb	      3946	memline.c	FUNCTION_47	CALL_7
0x4005a86	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3946	memline.c	FUNCTION_47	CALL_7
0x4005a90	          0x4c89e6	                            mov rsi, r12	      3930	memline.c	FUNCTION_47	IF_1	IF_2	CALL_3
0x4005a93	          0x4889df	                            mov rdi, rbx	      3930	memline.c	FUNCTION_47	IF_1	IF_2	CALL_3
0x4005a96	      0xe8a5b3ffff	            call sym.make_percent_swname	      3930	memline.c	FUNCTION_47	IF_1	IF_2	CALL_3
0x4005a9b	          0x4885c0	                           test rax, rax	      3930	memline.c	FUNCTION_47	IF_1	IF_2	CALL_3
0x4005a9e	          0x4889c5	                            mov rbp, rax	      3930	memline.c	FUNCTION_47	IF_1	IF_2	CALL_3
0x4005aa1	            0x7425	                            je 0x4005ac8	      3930	memline.c	FUNCTION_47	IF_1	IF_2	CALL_3
0x4005aa3	            0x31d2	                            xor edx, edx	      3932	memline.c	FUNCTION_47	IF_1	IF_2	CALL_4
0x4005aa5	      0xbe00000000	                              mov esi, 0	      3932	memline.c	FUNCTION_47	IF_1	IF_2	CALL_4
0x4005aaa	          0x4889c7	                            mov rdi, rax	      3932	memline.c	FUNCTION_47	IF_1	IF_2	CALL_4
0x4005aad	      0xe800000000	                          call 0x4005ab2	      3932	memline.c	FUNCTION_47	IF_1	IF_2	CALL_4
0x4005ab2	          0x4889ef	                            mov rdi, rbp	      3933	memline.c	FUNCTION_47	IF_1	IF_2	CALL_5
0x4005ab5	          0x4889c3	                            mov rbx, rax	      3932	memline.c	FUNCTION_47	IF_1	IF_2	CALL_4
0x4005ab8	      0xe800000000	                          call 0x4005abd	      3933	memline.c	FUNCTION_47	IF_1	IF_2	CALL_5
0x4005abd	          0x4889d8	                            mov rax, rbx	      3932	memline.c	FUNCTION_47	IF_1	IF_2	CALL_4
0x4005ac0	      0xe978ffffff	                           jmp 0x4005a3d	      3932	memline.c	FUNCTION_47	IF_1	IF_2	CALL_4
0x4005ac5	           0xf1f00	                         nop dword [rax]	      3932	memline.c	FUNCTION_47	IF_1	IF_2	CALL_4
0x4005ac8	            0x31c0	                            xor eax, eax	      3929	memline.c	FUNCTION_47	IF_1
0x4005aca	      0xe96effffff	                           jmp 0x4005a3d	      3929	memline.c	FUNCTION_47	IF_1
0x4005acf	      0xe800000000	                          call 0x4005ad4	      3963	memline.c	FUNCTION_47
ml_open_files	ELSE,0:SWITCH,0:DO,0:IF,1:FOR,0:functions,0:WHILE,0:CALL,2	18
0x4006840	              0x53	                                push rbx	       738	memline.c	FUNCTION_6
0x4006841	    0x488b1d000000	            mov rbx, qword [0x04006848] 	       741	memline.c	FUNCTION_6	CALL_1
0x4006848	          0x4885db	                           test rbx, rbx	       741	memline.c	FUNCTION_6	CALL_1
0x400684b	            0x7428	                            je 0x4006875	       741	memline.c	FUNCTION_6	CALL_1
0x400684d	           0xf1f00	                         nop dword [rax]	       741	memline.c	FUNCTION_6	CALL_1
0x4006850	    0x8b9360150000	          mov edx, dword [rbx + 0x1560] 	       742	memline.c	FUNCTION_6	IF_1
0x4006856	            0x85d2	                           test edx, edx	       742	memline.c	FUNCTION_6	IF_1
0x4006858	            0x740a	                            je 0x4006864	       742	memline.c	FUNCTION_6	IF_1
0x400685a	    0x8b83c8000000	            mov eax, dword [rbx + 0xc8] 	       742	memline.c	FUNCTION_6	IF_1
0x4006860	            0x85c0	                           test eax, eax	       742	memline.c	FUNCTION_6	IF_1
0x4006862	            0x7408	                            je 0x400686c	       742	memline.c	FUNCTION_6	IF_1
0x4006864	          0x4889df	                            mov rdi, rbx	       743	memline.c	FUNCTION_6	CALL_2
0x4006867	      0xe800000000	                          call 0x400686c	       743	memline.c	FUNCTION_6	CALL_2
0x400686c	        0x488b5b68	            mov rbx, qword [rbx + 0x68] 	       741	memline.c	FUNCTION_6	CALL_1
0x4006870	          0x4885db	                           test rbx, rbx	       741	memline.c	FUNCTION_6	CALL_1
0x4006873	            0x75db	                           jne 0x4006850	       741	memline.c	FUNCTION_6	CALL_1
0x4006875	              0x5b	                                 pop rbx	       744	memline.c	FUNCTION_6
0x4006876	              0xc3	                                     ret	       744	memline.c	FUNCTION_6
