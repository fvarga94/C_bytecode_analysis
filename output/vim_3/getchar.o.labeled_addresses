gotchars	WHILE,1:ELSE,0:functions,0:SWITCH,0:CALL,3:IF,2:DO,0:FOR,0	44
0x4001ca0	            0x4154	                                push r12	      1240	getchar.c	FUNCTION_41
0x4001ca2	              0x55	                                push rbp	      1240	getchar.c	FUNCTION_41
0x4001ca3	              0x53	                                push rbx	      1240	getchar.c	FUNCTION_41
0x4001ca4	          0x4889fb	                            mov rbx, rdi	      1240	getchar.c	FUNCTION_41
0x4001ca7	        0x4883ec10	                           sub rsp, 0x10	      1240	getchar.c	FUNCTION_41
0x4001cab	    0x8b1500000000	            mov edx, dword [0x04001cb1] 	      1247	getchar.c	FUNCTION_41	IF_1
0x4001cb1	    0x64488b042528	                mov rax, qword fs:[0x28]	      1240	getchar.c	FUNCTION_41
0x4001cba	      0x4889442408	                mov qword [rsp + 8], rax	      1240	getchar.c	FUNCTION_41
0x4001cbf	            0x31c0	                            xor eax, eax	      1240	getchar.c	FUNCTION_41
0x4001cc1	            0x85d2	                           test edx, edx	      1247	getchar.c	FUNCTION_41	IF_1
0x4001cc3	            0x7406	                            je 0x4001ccb	      1247	getchar.c	FUNCTION_41	IF_1
0x4001cc5	     0x13500000000	             add dword [0x04001ccb], esi	      1248	getchar.c	FUNCTION_41	IF_1
0x4001ccb	            0x89f6	                            mov esi, esi	      1248	getchar.c	FUNCTION_41	IF_1
0x4001ccd	      0xc644240100	                   mov byte [rsp + 1], 0	      1250	getchar.c	FUNCTION_41
0x4001cd2	        0x4c8d2433	                    lea r12, [rbx + rsi]	      1250	getchar.c	FUNCTION_41
0x4001cd6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1250	getchar.c	FUNCTION_41
0x4001ce0	          0x4c39e3	                            cmp rbx, r12	      1251	getchar.c	FUNCTION_41	WHILE_1
0x4001ce3	            0x7434	                            je 0x4001d19	      1251	getchar.c	FUNCTION_41	WHILE_1
0x4001ce5	        0x4883c301	                              add rbx, 1	      1254	getchar.c	FUNCTION_41	WHILE_1
0x4001ce9	         0xfb67bff	               movzx edi, byte [rbx - 1]	      1254	getchar.c	FUNCTION_41	WHILE_1
0x4001ced	            0x89fd	                            mov ebp, edi	      1254	getchar.c	FUNCTION_41	WHILE_1
0x4001cef	      0xe800000000	                          call 0x4001cf4	      1255	getchar.c	FUNCTION_41	WHILE_1	CALL_1
0x4001cf4	    0x8b0500000000	            mov eax, dword [0x04001cfa] 	      1257	getchar.c	FUNCTION_41	WHILE_1	IF_2
0x4001cfa	            0x85c0	                           test eax, eax	      1257	getchar.c	FUNCTION_41	WHILE_1	IF_2
0x4001cfc	            0x74e2	                            je 0x4001ce0	      1257	getchar.c	FUNCTION_41	WHILE_1	IF_2
0x4001cfe	      0xba01000000	                              mov edx, 1	      1260	getchar.c	FUNCTION_41	WHILE_1	IF_2	CALL_2
0x4001d03	          0x4889e6	                            mov rsi, rsp	      1260	getchar.c	FUNCTION_41	WHILE_1	IF_2	CALL_2
0x4001d06	      0xbf00000000	                              mov edi, 0	      1260	getchar.c	FUNCTION_41	WHILE_1	IF_2	CALL_2
0x4001d0b	        0x40882c24	                     mov byte [rsp], bpl	      1259	getchar.c	FUNCTION_41	WHILE_1	IF_2
0x4001d0f	      0xe86ce3ffff	                       call sym.add_buff	      1260	getchar.c	FUNCTION_41	WHILE_1	IF_2	CALL_2
0x4001d14	          0x4c39e3	                            cmp rbx, r12	      1251	getchar.c	FUNCTION_41	WHILE_1
0x4001d17	            0x75cc	                           jne 0x4001ce5	      1251	getchar.c	FUNCTION_41	WHILE_1
0x4001d19	      0xe862e6ffff	                  call sym.may_sync_undo	      1263	getchar.c	FUNCTION_41	CALL_3
0x4001d1e	    0x830500000000	               add dword [0x04001d25], 1	      1272	getchar.c	FUNCTION_41
0x4001d25	    0xc70500000000	               mov dword [0x04001d2f], 0	      1267	getchar.c	FUNCTION_41
0x4001d2f	      0x488b442408	                mov rax, qword [rsp + 8]	      1273	getchar.c	FUNCTION_41
0x4001d34	    0x644833042528	                xor rax, qword fs:[0x28]	      1273	getchar.c	FUNCTION_41
0x4001d3d	            0x7509	                           jne 0x4001d48	      1273	getchar.c	FUNCTION_41
0x4001d3f	        0x4883c410	                           add rsp, 0x10	      1273	getchar.c	FUNCTION_41
0x4001d43	              0x5b	                                 pop rbx	      1273	getchar.c	FUNCTION_41
0x4001d44	              0x5d	                                 pop rbp	      1273	getchar.c	FUNCTION_41
0x4001d45	            0x415c	                                 pop r12	      1273	getchar.c	FUNCTION_41
0x4001d47	              0xc3	                                     ret	      1273	getchar.c	FUNCTION_41
0x4001d48	      0xe800000000	                          call 0x4001d4d	      1273	getchar.c	FUNCTION_41
restoreRedobuff	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,2:IF,0:DO,0:FOR,0	41
0x4000c40	              0x55	                                push rbp	       548	getchar.c	FUNCTION_18
0x4000c41	              0x53	                                push rbx	       548	getchar.c	FUNCTION_18
0x4000c42	          0x4889fd	                            mov rbp, rdi	       548	getchar.c	FUNCTION_18
0x4000c45	        0x4883ec08	                              sub rsp, 8	       548	getchar.c	FUNCTION_18
0x4000c49	    0x488b3d000000	            mov rdi, qword [0x04000c50] 	       141	getchar.c	FUNCTION_1	FOR_1
0x4000c50	          0x4885ff	                           test rdi, rdi	       141	getchar.c	FUNCTION_1	FOR_1
0x4000c53	            0x7413	                            je 0x4000c68	       141	getchar.c	FUNCTION_1	FOR_1
0x4000c55	           0xf1f00	                         nop dword [rax]	       141	getchar.c	FUNCTION_1	FOR_1
0x4000c58	          0x488b1f	                    mov rbx, qword [rdi]	       143	getchar.c	FUNCTION_1	FOR_1
0x4000c5b	      0xe800000000	                          call 0x4000c60	       144	getchar.c	FUNCTION_1	FOR_1	CALL_1
0x4000c60	          0x4885db	                           test rbx, rbx	       141	getchar.c	FUNCTION_1	FOR_1
0x4000c63	          0x4889df	                            mov rdi, rbx	       141	getchar.c	FUNCTION_1	FOR_1
0x4000c66	            0x75f0	                           jne 0x4000c58	       141	getchar.c	FUNCTION_1	FOR_1
0x4000c68	        0x488b4500	                    mov rax, qword [rbp]	       550	getchar.c	FUNCTION_18
0x4000c6c	    0x488b3d000000	            mov rdi, qword [0x04000c73] 	       141	getchar.c	FUNCTION_1	FOR_1
0x4000c73	    0x488905000000	            mov qword [0x04000c7a], rax 	       550	getchar.c	FUNCTION_18
0x4000c7a	        0x488b4508	                mov rax, qword [rbp + 8]	       550	getchar.c	FUNCTION_18
0x4000c7e	          0x4885ff	                           test rdi, rdi	       141	getchar.c	FUNCTION_1	FOR_1
0x4000c81	    0x488905000000	            mov qword [0x04000c88], rax 	       550	getchar.c	FUNCTION_18
0x4000c88	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       550	getchar.c	FUNCTION_18
0x4000c8c	    0x488905000000	            mov qword [0x04000c93], rax 	       550	getchar.c	FUNCTION_18
0x4000c93	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       550	getchar.c	FUNCTION_18
0x4000c97	    0x488905000000	            mov qword [0x04000c9e], rax 	       550	getchar.c	FUNCTION_18
0x4000c9e	            0x7410	                            je 0x4000cb0	       141	getchar.c	FUNCTION_1	FOR_1
0x4000ca0	          0x488b1f	                    mov rbx, qword [rdi]	       143	getchar.c	FUNCTION_1	FOR_1
0x4000ca3	      0xe800000000	                          call 0x4000ca8	       144	getchar.c	FUNCTION_1	FOR_1	CALL_1
0x4000ca8	          0x4885db	                           test rbx, rbx	       141	getchar.c	FUNCTION_1	FOR_1
0x4000cab	          0x4889df	                            mov rdi, rbx	       141	getchar.c	FUNCTION_1	FOR_1
0x4000cae	            0x75f0	                           jne 0x4000ca0	       141	getchar.c	FUNCTION_1	FOR_1
0x4000cb0	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       552	getchar.c	FUNCTION_18
0x4000cb4	    0x488905000000	            mov qword [0x04000cbb], rax 	       552	getchar.c	FUNCTION_18
0x4000cbb	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       552	getchar.c	FUNCTION_18
0x4000cbf	    0x488905000000	            mov qword [0x04000cc6], rax 	       552	getchar.c	FUNCTION_18
0x4000cc6	        0x488b4530	            mov rax, qword [rbp + 0x30] 	       552	getchar.c	FUNCTION_18
0x4000cca	    0x488905000000	            mov qword [0x04000cd1], rax 	       552	getchar.c	FUNCTION_18
0x4000cd1	        0x488b4538	            mov rax, qword [rbp + 0x38] 	       552	getchar.c	FUNCTION_18
0x4000cd5	    0x488905000000	            mov qword [0x04000cdc], rax 	       552	getchar.c	FUNCTION_18
0x4000cdc	        0x4883c408	                              add rsp, 8	       553	getchar.c	FUNCTION_18
0x4000ce0	              0x5b	                                 pop rbx	       553	getchar.c	FUNCTION_18
0x4000ce1	              0x5d	                                 pop rbp	       553	getchar.c	FUNCTION_18
0x4000ce2	              0xc3	                                     ret	       553	getchar.c	FUNCTION_18
get_recorded	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,3:IF,2:DO,0:FOR,0	44
0x4000950	              0x55	                                push rbp	       186	getchar.c	FUNCTION_3
0x4000951	              0x53	                                push rbx	       186	getchar.c	FUNCTION_3
0x4000952	      0xbf00000000	                              mov edi, 0	       190	getchar.c	FUNCTION_3	CALL_1
0x4000957	      0xbe01000000	                              mov esi, 1	       190	getchar.c	FUNCTION_3	CALL_1
0x400095c	        0x4883ec08	                              sub rsp, 8	       186	getchar.c	FUNCTION_3
0x4000960	      0xe82bfcffff	            call sym.get_buffcont.isra.5	       190	getchar.c	FUNCTION_3	CALL_1
0x4000965	    0x488b3d000000	            mov rdi, qword [0x0400096c] 	       141	getchar.c	FUNCTION_1	FOR_1
0x400096c	          0x4889c5	                            mov rbp, rax	       190	getchar.c	FUNCTION_3	CALL_1
0x400096f	          0x4885ff	                           test rdi, rdi	       141	getchar.c	FUNCTION_1	FOR_1
0x4000972	            0x7414	                            je 0x4000988	       141	getchar.c	FUNCTION_1	FOR_1
0x4000974	         0xf1f4000	                         nop dword [rax]	       141	getchar.c	FUNCTION_1	FOR_1
0x4000978	          0x488b1f	                    mov rbx, qword [rdi]	       143	getchar.c	FUNCTION_1	FOR_1
0x400097b	      0xe800000000	                          call 0x4000980	       144	getchar.c	FUNCTION_1	FOR_1	CALL_1
0x4000980	          0x4885db	                           test rbx, rbx	       141	getchar.c	FUNCTION_1	FOR_1
0x4000983	          0x4889df	                            mov rdi, rbx	       141	getchar.c	FUNCTION_1	FOR_1
0x4000986	            0x75f0	                           jne 0x4000978	       141	getchar.c	FUNCTION_1	FOR_1
0x4000988	          0x4889ef	                            mov rdi, rbp	       197	getchar.c	FUNCTION_3	CALL_3
0x400098b	    0x48c705000000	               mov qword [0x04000996], 0	       146	getchar.c	FUNCTION_1
0x4000996	      0xe800000000	                          call 0x400099b	       197	getchar.c	FUNCTION_3	CALL_3
0x400099b	    0x486315000000	         movsxd rdx, dword [0x040009a2] 	       198	getchar.c	FUNCTION_3	IF_1
0x40009a2	            0x39c2	                            cmp edx, eax	       198	getchar.c	FUNCTION_3	IF_1
0x40009a4	            0x7f08	                            jg 0x40009ae	       198	getchar.c	FUNCTION_3	IF_1
0x40009a6	          0x4829d0	                            sub rax, rdx	       200	getchar.c	FUNCTION_3	IF_1
0x40009a9	      0xc644050000	                 mov byte [rbp + rax], 0	       201	getchar.c	FUNCTION_3	IF_1
0x40009ae	          0x4885c0	                           test rax, rax	       208	getchar.c	FUNCTION_3	IF_2
0x40009b1	            0x7414	                            je 0x40009c7	       208	getchar.c	FUNCTION_3	IF_2
0x40009b3	    0x8b1500000000	            mov edx, dword [0x040009b9] 	       208	getchar.c	FUNCTION_3	IF_2
0x40009b9	            0x85d2	                           test edx, edx	       208	getchar.c	FUNCTION_3	IF_2
0x40009bb	            0x740a	                            je 0x40009c7	       208	getchar.c	FUNCTION_3	IF_2
0x40009bd	      0x488d4405ff	                lea rax, [rbp + rax - 1]	       208	getchar.c	FUNCTION_3	IF_2
0x40009c2	          0x80380f	                     cmp byte [rax], 0xf	       208	getchar.c	FUNCTION_3	IF_2
0x40009c5	            0x7411	                            je 0x40009d8	       208	getchar.c	FUNCTION_3	IF_2
0x40009c7	        0x4883c408	                              add rsp, 8	       212	getchar.c	FUNCTION_3
0x40009cb	          0x4889e8	                            mov rax, rbp	       212	getchar.c	FUNCTION_3
0x40009ce	              0x5b	                                 pop rbx	       212	getchar.c	FUNCTION_3
0x40009cf	              0x5d	                                 pop rbp	       212	getchar.c	FUNCTION_3
0x40009d0	              0xc3	                                     ret	       212	getchar.c	FUNCTION_3
0x40009d1	     0xf1f80000000	                         nop dword [rax]	       212	getchar.c	FUNCTION_3
0x40009d8	          0xc60000	                       mov byte [rax], 0	       209	getchar.c	FUNCTION_3	IF_2
0x40009db	        0x4883c408	                              add rsp, 8	       212	getchar.c	FUNCTION_3
0x40009df	          0x4889e8	                            mov rax, rbp	       212	getchar.c	FUNCTION_3
0x40009e2	              0x5b	                                 pop rbx	       212	getchar.c	FUNCTION_3
0x40009e3	              0x5d	                                 pop rbp	       212	getchar.c	FUNCTION_3
0x40009e4	              0xc3	                                     ret	       212	getchar.c	FUNCTION_3
add_num_buff	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,1:IF,0:DO,0:FOR,0	23
0x4000320	              0x53	                                push rbx	       289	getchar.c	FUNCTION_6
0x4000321	          0x4989f0	                             mov r8, rsi	       289	getchar.c	FUNCTION_6
0x4000324	          0x4889fb	                            mov rbx, rdi	       289	getchar.c	FUNCTION_6
0x4000327	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_88	CALL_1
0x400032c	      0xba20000000	                           mov edx, 0x20	        33	stdio2.h	FUNCTION_88	CALL_1
0x4000331	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_88	CALL_1
0x4000336	        0x4883ec30	                           sub rsp, 0x30	       289	getchar.c	FUNCTION_6
0x400033a	    0x64488b042528	                mov rax, qword fs:[0x28]	       289	getchar.c	FUNCTION_6
0x4000343	      0x4889442428	             mov qword [rsp + 0x28], rax	       289	getchar.c	FUNCTION_6
0x4000348	            0x31c0	                            xor eax, eax	       289	getchar.c	FUNCTION_6
0x400034a	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_88	CALL_1
0x400034d	      0xe800000000	                          call 0x4000352	        33	stdio2.h	FUNCTION_88	CALL_1
0x4000352	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       293	getchar.c	FUNCTION_6	CALL_1
0x4000359	          0x4889e6	                            mov rsi, rsp	       293	getchar.c	FUNCTION_6	CALL_1
0x400035c	          0x4889df	                            mov rdi, rbx	       293	getchar.c	FUNCTION_6	CALL_1
0x400035f	      0xe81cfdffff	                       call sym.add_buff	       293	getchar.c	FUNCTION_6	CALL_1
0x4000364	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       294	getchar.c	FUNCTION_6
0x4000369	    0x644833042528	                xor rax, qword fs:[0x28]	       294	getchar.c	FUNCTION_6
0x4000372	            0x7506	                           jne 0x400037a	       294	getchar.c	FUNCTION_6
0x4000374	        0x4883c430	                           add rsp, 0x30	       294	getchar.c	FUNCTION_6
0x4000378	              0x5b	                                 pop rbx	       294	getchar.c	FUNCTION_6
0x4000379	              0xc3	                                     ret	       294	getchar.c	FUNCTION_6
0x400037a	      0xe800000000	                          call 0x400037f	       294	getchar.c	FUNCTION_6
restore_typeahead	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,4:IF,1:DO,0:FOR,0	64
0x4001ac0	              0x55	                                push rbp	      1389	getchar.c	FUNCTION_47
0x4001ac1	              0x53	                                push rbx	      1389	getchar.c	FUNCTION_47
0x4001ac2	          0x4889fd	                            mov rbp, rdi	      1389	getchar.c	FUNCTION_47
0x4001ac5	        0x4883ec08	                              sub rsp, 8	      1389	getchar.c	FUNCTION_47
0x4001ac9	          0x8b4730	            mov eax, dword [rdi + 0x30] 	      1390	getchar.c	FUNCTION_47	IF_1
0x4001acc	            0x85c0	                           test eax, eax	      1390	getchar.c	FUNCTION_47	IF_1
0x4001ace	     0xf85bc000000	                           jne 0x4001b90	      1390	getchar.c	FUNCTION_47	IF_1
0x4001ad4	          0x8b4534	            mov eax, dword [rbp + 0x34] 	      1396	getchar.c	FUNCTION_47
0x4001ad7	    0x488b3d000000	            mov rdi, qword [0x04001ade] 	       141	getchar.c	FUNCTION_1	FOR_1
0x4001ade	    0x890500000000	            mov dword [0x04001ae4], eax 	      1396	getchar.c	FUNCTION_47
0x4001ae4	          0x8b4538	            mov eax, dword [rbp + 0x38] 	      1397	getchar.c	FUNCTION_47
0x4001ae7	          0x4885ff	                           test rdi, rdi	       141	getchar.c	FUNCTION_1	FOR_1
0x4001aea	    0x890500000000	            mov dword [0x04001af0], eax 	      1397	getchar.c	FUNCTION_47
0x4001af0	            0x7416	                            je 0x4001b08	       141	getchar.c	FUNCTION_1	FOR_1
0x4001af2	    0x660f1f440000	                    nop word [rax + rax]	       141	getchar.c	FUNCTION_1	FOR_1
0x4001af8	          0x488b1f	                    mov rbx, qword [rdi]	       143	getchar.c	FUNCTION_1	FOR_1
0x4001afb	      0xe800000000	                          call 0x4001b00	       144	getchar.c	FUNCTION_1	FOR_1	CALL_1
0x4001b00	          0x4885db	                           test rbx, rbx	       141	getchar.c	FUNCTION_1	FOR_1
0x4001b03	          0x4889df	                            mov rdi, rbx	       141	getchar.c	FUNCTION_1	FOR_1
0x4001b06	            0x75f0	                           jne 0x4001af8	       141	getchar.c	FUNCTION_1	FOR_1
0x4001b08	        0x488b4540	            mov rax, qword [rbp + 0x40] 	      1400	getchar.c	FUNCTION_47
0x4001b0c	    0x488b3d000000	            mov rdi, qword [0x04001b13] 	       141	getchar.c	FUNCTION_1	FOR_1
0x4001b13	    0x488905000000	            mov qword [0x04001b1a], rax 	      1400	getchar.c	FUNCTION_47
0x4001b1a	        0x488b4548	            mov rax, qword [rbp + 0x48] 	      1400	getchar.c	FUNCTION_47
0x4001b1e	          0x4885ff	                           test rdi, rdi	       141	getchar.c	FUNCTION_1	FOR_1
0x4001b21	    0x488905000000	            mov qword [0x04001b28], rax 	      1400	getchar.c	FUNCTION_47
0x4001b28	        0x488b4550	            mov rax, qword [rbp + 0x50] 	      1400	getchar.c	FUNCTION_47
0x4001b2c	    0x488905000000	            mov qword [0x04001b33], rax 	      1400	getchar.c	FUNCTION_47
0x4001b33	        0x488b4558	            mov rax, qword [rbp + 0x58] 	      1400	getchar.c	FUNCTION_47
0x4001b37	    0x488905000000	            mov qword [0x04001b3e], rax 	      1400	getchar.c	FUNCTION_47
0x4001b3e	            0x7410	                            je 0x4001b50	       141	getchar.c	FUNCTION_1	FOR_1
0x4001b40	          0x488b1f	                    mov rbx, qword [rdi]	       143	getchar.c	FUNCTION_1	FOR_1
0x4001b43	      0xe800000000	                          call 0x4001b48	       144	getchar.c	FUNCTION_1	FOR_1	CALL_1
0x4001b48	          0x4885db	                           test rbx, rbx	       141	getchar.c	FUNCTION_1	FOR_1
0x4001b4b	          0x4889df	                            mov rdi, rbx	       141	getchar.c	FUNCTION_1	FOR_1
0x4001b4e	            0x75f0	                           jne 0x4001b40	       141	getchar.c	FUNCTION_1	FOR_1
0x4001b50	        0x488b4560	            mov rax, qword [rbp + 0x60] 	      1402	getchar.c	FUNCTION_47
0x4001b54	    0x488bbd800000	            mov rdi, qword [rbp + 0x80] 	      1404	getchar.c	FUNCTION_47	CALL_4
0x4001b5b	    0x488905000000	            mov qword [0x04001b62], rax 	      1402	getchar.c	FUNCTION_47
0x4001b62	        0x488b4568	            mov rax, qword [rbp + 0x68] 	      1402	getchar.c	FUNCTION_47
0x4001b66	    0x488905000000	            mov qword [0x04001b6d], rax 	      1402	getchar.c	FUNCTION_47
0x4001b6d	        0x488b4570	            mov rax, qword [rbp + 0x70] 	      1402	getchar.c	FUNCTION_47
0x4001b71	    0x488905000000	            mov qword [0x04001b78], rax 	      1402	getchar.c	FUNCTION_47
0x4001b78	        0x488b4578	            mov rax, qword [rbp + 0x78] 	      1402	getchar.c	FUNCTION_47
0x4001b7c	    0x488905000000	            mov qword [0x04001b83], rax 	      1402	getchar.c	FUNCTION_47
0x4001b83	        0x4883c408	                              add rsp, 8	      1406	getchar.c	FUNCTION_47
0x4001b87	              0x5b	                                 pop rbx	      1406	getchar.c	FUNCTION_47
0x4001b88	              0x5d	                                 pop rbp	      1406	getchar.c	FUNCTION_47
0x4001b89	      0xe900000000	                           jmp 0x4001b8e	      1404	getchar.c	FUNCTION_47	CALL_4
0x4001b8e	            0x6690	                                     nop	      1404	getchar.c	FUNCTION_47	CALL_4
0x4001b90	      0xe800000000	                          call 0x4001b95	      1392	getchar.c	FUNCTION_47	IF_1	CALL_1
0x4001b95	        0x488b4500	                    mov rax, qword [rbp]	      1393	getchar.c	FUNCTION_47	IF_1
0x4001b99	    0x488905000000	            mov qword [0x04001ba0], rax 	      1393	getchar.c	FUNCTION_47	IF_1
0x4001ba0	        0x488b4508	                mov rax, qword [rbp + 8]	      1393	getchar.c	FUNCTION_47	IF_1
0x4001ba4	    0x488905000000	            mov qword [0x04001bab], rax 	      1393	getchar.c	FUNCTION_47	IF_1
0x4001bab	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1393	getchar.c	FUNCTION_47	IF_1
0x4001baf	    0x488905000000	            mov qword [0x04001bb6], rax 	      1393	getchar.c	FUNCTION_47	IF_1
0x4001bb6	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      1393	getchar.c	FUNCTION_47	IF_1
0x4001bba	    0x488905000000	            mov qword [0x04001bc1], rax 	      1393	getchar.c	FUNCTION_47	IF_1
0x4001bc1	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1393	getchar.c	FUNCTION_47	IF_1
0x4001bc5	    0x488905000000	            mov qword [0x04001bcc], rax 	      1393	getchar.c	FUNCTION_47	IF_1
0x4001bcc	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      1393	getchar.c	FUNCTION_47	IF_1
0x4001bd0	    0x488905000000	            mov qword [0x04001bd7], rax 	      1393	getchar.c	FUNCTION_47	IF_1
0x4001bd7	      0xe9f8feffff	                           jmp 0x4001ad4	      1393	getchar.c	FUNCTION_47	IF_1
map_to_exists_mode	WHILE,0:ELSE,3:functions,0:SWITCH,0:CALL,2:IF,6:DO,0:FOR,3	78
0x4002620	            0x4157	                                push r15	      4122	getchar.c	FUNCTION_75
0x4002622	            0x4156	                                push r14	      4122	getchar.c	FUNCTION_75
0x4002624	          0x4189f7	                           mov r15d, esi	      4122	getchar.c	FUNCTION_75
0x4002627	            0x4155	                                push r13	      4122	getchar.c	FUNCTION_75
0x4002629	            0x4154	                                push r12	      4122	getchar.c	FUNCTION_75
0x400262b	              0x55	                                push rbp	      4122	getchar.c	FUNCTION_75
0x400262c	              0x53	                                push rbx	      4122	getchar.c	FUNCTION_75
0x400262d	          0x4889fb	                            mov rbx, rdi	      4122	getchar.c	FUNCTION_75
0x4002630	        0x4883ec28	                           sub rsp, 0x28	      4122	getchar.c	FUNCTION_75
0x4002634	        0x8954240c	              mov dword [rsp + 0xc], edx	      4122	getchar.c	FUNCTION_75
0x4002638	    0x8b1500000000	            mov edx, dword [0x0400263e] 	      3802	getchar.c	FUNCTION_68	IF_1
0x400263e	            0x85d2	                           test edx, edx	      3802	getchar.c	FUNCTION_68	IF_1
0x4002640	     0xf84e3000000	                            je 0x4002729	      3802	getchar.c	FUNCTION_68	IF_1
0x4002646	    0x488b05000000	            mov rax, qword [0x0400264d] 	      4142	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1	IF_3
0x400264d	          0x4531ed	                          xor r13d, r13d	      4145	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1	ELSE_1
0x4002650	      0x4889442410	             mov qword [rsp + 0x10], rax	      4142	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1	IF_3
0x4002655	    0x488b05000000	            mov rax, qword [0x0400265c] 	      4145	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1	ELSE_1
0x400265c	      0x4889442418	             mov qword [rsp + 0x18], rax	      4145	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1	ELSE_1
0x4002661	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      4136	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1
0x4002665	            0x31ed	                            xor ebp, ebp	      4163	getchar.c	FUNCTION_75	FOR_1
0x4002667	    0x41bc01000000	                             mov r12d, 1	      4163	getchar.c	FUNCTION_75	FOR_1
0x400266d	            0x85c0	                           test eax, eax	      4136	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1
0x400266f	            0x7457	                            je 0x40026c8	      4136	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1
0x4002671	          0x4885ed	                           test rbp, rbp	      4138	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1	IF_2
0x4002674	            0x756a	                           jne 0x40026e0	      4138	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1	IF_2
0x4002676	          0x4585ed	                         test r13d, r13d	      4141	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1	IF_3
0x4002679	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	      4145	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1	ELSE_1
0x400267e	     0xf8594000000	                           jne 0x4002718	      4141	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1	IF_3
0x4002684	          0x4d85f6	                           test r14, r14	      4153	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3	FOR_3
0x4002687	            0x742f	                            je 0x40026b8	      4153	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3	FOR_3
0x4002689	     0xf1f80000000	                         nop dword [rax]	      4153	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3	FOR_3
0x4002690	        0x45857e24	          test dword [r14 + 0x24], r15d 	      4155	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5
0x4002694	            0x7411	                            je 0x40026a7	      4155	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5
0x4002696	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	      4156	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	CALL_2
0x400269a	          0x4889de	                            mov rsi, rbx	      4156	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	CALL_2
0x400269d	      0xe800000000	                          call 0x40026a2	      4156	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	CALL_2
0x40026a2	          0x4885c0	                           test rax, rax	      4156	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	CALL_2
0x40026a5	            0x7559	                           jne 0x4002700	      4156	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	CALL_2
0x40026a7	          0x4d8b36	                    mov r14, qword [r14]	      4153	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3	FOR_3
0x40026aa	          0x4d85f6	                           test r14, r14	      4153	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3	FOR_3
0x40026ad	            0x75e1	                           jne 0x4002690	      4153	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3	FOR_3
0x40026af	    0x4181fc000100	                         cmp r12d, 0x100	      4134	getchar.c	FUNCTION_75	FOR_1	FOR_2
0x40026b6	            0x7428	                            je 0x40026e0	      4134	getchar.c	FUNCTION_75	FOR_1	FOR_2
0x40026b8	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      4136	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1
0x40026bc	        0x4883c501	                              add rbp, 1	      4136	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1
0x40026c0	        0x4183c401	                             add r12d, 1	      4136	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1
0x40026c4	            0x85c0	                           test eax, eax	      4136	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1
0x40026c6	            0x75a9	                           jne 0x4002671	      4136	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1
0x40026c8	          0x4585ed	                         test r13d, r13d	      4148	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_2	IF_4
0x40026cb	            0x7423	                            je 0x40026f0	      4148	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_2	IF_4
0x40026cd	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4149	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_2	IF_4
0x40026d2	    0x4c8bb4e8c009	   mov r14, qword [rax + rbp*8 + 0x9c0] 	      4149	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_2	IF_4
0x40026da	            0xebce	                           jmp 0x40026aa	      4149	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_2	IF_4
0x40026dc	         0xf1f4000	                         nop dword [rax]	      4149	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_2	IF_4
0x40026e0	          0x4585ed	                         test r13d, r13d	      4161	getchar.c	FUNCTION_75	FOR_1	IF_6
0x40026e3	            0x754e	                           jne 0x4002733	      4161	getchar.c	FUNCTION_75	FOR_1	IF_6
0x40026e5	    0x41bd01000000	                             mov r13d, 1	      4163	getchar.c	FUNCTION_75	FOR_1
0x40026eb	      0xe971ffffff	                           jmp 0x4002661	      4163	getchar.c	FUNCTION_75	FOR_1
0x40026f0	    0x4c8b34ed0000	                  mov r14, qword [rbp*8]	      4152	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3
0x40026f8	            0xebb0	                           jmp 0x40026aa	      4152	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3
0x40026fa	    0x660f1f440000	                    nop word [rax + rax]	      4152	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3
0x4002700	      0xb801000000	                              mov eax, 1	      4157	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5
0x4002705	        0x4883c428	                           add rsp, 0x28	      4168	getchar.c	FUNCTION_75
0x4002709	              0x5b	                                 pop rbx	      4168	getchar.c	FUNCTION_75
0x400270a	              0x5d	                                 pop rbp	      4168	getchar.c	FUNCTION_75
0x400270b	            0x415c	                                 pop r12	      4168	getchar.c	FUNCTION_75
0x400270d	            0x415d	                                 pop r13	      4168	getchar.c	FUNCTION_75
0x400270f	            0x415e	                                 pop r14	      4168	getchar.c	FUNCTION_75
0x4002711	            0x415f	                                 pop r15	      4168	getchar.c	FUNCTION_75
0x4002713	              0xc3	                                     ret	      4168	getchar.c	FUNCTION_75
0x4002714	         0xf1f4000	                         nop dword [rax]	      4168	getchar.c	FUNCTION_75
0x4002718	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4142	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1	IF_3
0x400271d	    0x4c8bb0c01100	          mov r14, qword [rax + 0x11c0] 	      4142	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1	IF_3
0x4002724	      0xe95bffffff	                           jmp 0x4002684	      4142	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1	IF_3
0x4002729	      0xe842deffff	        call sym.validate_maphash.part.2	      4142	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1	IF_3
0x400272e	      0xe913ffffff	                           jmp 0x4002646	      4142	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1	IF_3
0x4002733	            0x31c0	                            xor eax, eax	      4167	getchar.c	FUNCTION_75
0x4002735	            0xebce	                           jmp 0x4002705	      4167	getchar.c	FUNCTION_75
stuff_empty	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,0:IF,0:DO,0:FOR,0	9
0x4000a00	            0x31c0	                            xor eax, eax	       422	getchar.c	FUNCTION_11
0x4000a02	    0x48833d000000	               cmp qword [0x04000a0a], 0	       422	getchar.c	FUNCTION_11
0x4000a0a	            0x7404	                            je 0x4000a10	       422	getchar.c	FUNCTION_11
0x4000a0c	            0xf3c3	                                     ret	       423	getchar.c	FUNCTION_11
0x4000a0e	            0x6690	                                     nop	       423	getchar.c	FUNCTION_11
0x4000a10	            0x31c0	                            xor eax, eax	       422	getchar.c	FUNCTION_11
0x4000a12	    0x48833d000000	               cmp qword [0x04000a1a], 0	       422	getchar.c	FUNCTION_11
0x4000a1a	           0xf94c0	                                 sete al	       422	getchar.c	FUNCTION_11
0x4000a1d	              0xc3	                                     ret	       423	getchar.c	FUNCTION_11
CancelRedo	WHILE,1:ELSE,0:functions,0:SWITCH,0:CALL,3:IF,1:DO,0:FOR,0	37
0x4000ac0	    0x8b0500000000	            mov eax, dword [0x04000ac6] 	       508	getchar.c	FUNCTION_16	IF_1
0x4000ac6	            0x85c0	                           test eax, eax	       508	getchar.c	FUNCTION_16	IF_1
0x4000ac8	     0xf85b9000000	                           jne 0x4000b87	       508	getchar.c	FUNCTION_16	IF_1
0x4000ace	    0x488b3d000000	            mov rdi, qword [0x04000ad5] 	       141	getchar.c	FUNCTION_1	FOR_1
0x4000ad5	              0x53	                                push rbx	       507	getchar.c	FUNCTION_16
0x4000ad6	          0x4885ff	                           test rdi, rdi	       141	getchar.c	FUNCTION_1	FOR_1
0x4000ad9	            0x7415	                            je 0x4000af0	       141	getchar.c	FUNCTION_1	FOR_1
0x4000adb	       0xf1f440000	                   nop dword [rax + rax]	       141	getchar.c	FUNCTION_1	FOR_1
0x4000ae0	          0x488b1f	                    mov rbx, qword [rdi]	       143	getchar.c	FUNCTION_1	FOR_1
0x4000ae3	      0xe800000000	                          call 0x4000ae8	       144	getchar.c	FUNCTION_1	FOR_1	CALL_1
0x4000ae8	          0x4885db	                           test rbx, rbx	       141	getchar.c	FUNCTION_1	FOR_1
0x4000aeb	          0x4889df	                            mov rdi, rbx	       141	getchar.c	FUNCTION_1	FOR_1
0x4000aee	            0x75f0	                           jne 0x4000ae0	       141	getchar.c	FUNCTION_1	FOR_1
0x4000af0	    0x488b05000000	            mov rax, qword [0x04000af7] 	       511	getchar.c	FUNCTION_16	IF_1
0x4000af7	    0x48833d000000	               cmp qword [0x04000aff], 0	       403	getchar.c	FUNCTION_10	IF_1
0x4000aff	    0x48c705000000	               mov qword [0x04000b0a], 0	       512	getchar.c	FUNCTION_16	IF_1
0x4000b0a	    0x488905000000	            mov qword [0x04000b11], rax 	       511	getchar.c	FUNCTION_16	IF_1
0x4000b11	    0x488b05000000	            mov rax, qword [0x04000b18] 	       511	getchar.c	FUNCTION_16	IF_1
0x4000b18	    0x488905000000	            mov qword [0x04000b1f], rax 	       511	getchar.c	FUNCTION_16	IF_1
0x4000b1f	    0x488b05000000	            mov rax, qword [0x04000b26] 	       511	getchar.c	FUNCTION_16	IF_1
0x4000b26	    0x488905000000	            mov qword [0x04000b2d], rax 	       511	getchar.c	FUNCTION_16	IF_1
0x4000b2d	    0x488b05000000	            mov rax, qword [0x04000b34] 	       511	getchar.c	FUNCTION_16	IF_1
0x4000b34	    0x488905000000	            mov qword [0x04000b3b], rax 	       511	getchar.c	FUNCTION_16	IF_1
0x4000b3b	            0x7415	                            je 0x4000b52	       403	getchar.c	FUNCTION_10	IF_1
0x4000b3d	    0x48c705000000	               mov qword [0x04000b48], 0	       405	getchar.c	FUNCTION_10	IF_1
0x4000b48	    0xc70500000000	               mov dword [0x04000b52], 0	       406	getchar.c	FUNCTION_10	IF_1
0x4000b52	    0x48833d000000	               cmp qword [0x04000b5a], 0	       408	getchar.c	FUNCTION_10	IF_2
0x4000b5a	            0x741c	                            je 0x4000b78	       408	getchar.c	FUNCTION_10	IF_2
0x4000b5c	    0x48c705000000	               mov qword [0x04000b67], 0	       410	getchar.c	FUNCTION_10	IF_2
0x4000b67	    0xc70500000000	               mov dword [0x04000b71], 0	       411	getchar.c	FUNCTION_10	IF_2
0x4000b71	     0xf1f80000000	                         nop dword [rax]	       411	getchar.c	FUNCTION_10	IF_2
0x4000b78	      0xbf01000000	                              mov edi, 1	       514	getchar.c	FUNCTION_16	IF_1	WHILE_1	CALL_3
0x4000b7d	      0xe8befcffff	               call sym.read_readbuffers	       514	getchar.c	FUNCTION_16	IF_1	WHILE_1	CALL_3
0x4000b82	            0x85c0	                           test eax, eax	       514	getchar.c	FUNCTION_16	IF_1	WHILE_1	CALL_3
0x4000b84	            0x75f2	                           jne 0x4000b78	       514	getchar.c	FUNCTION_16	IF_1	WHILE_1	CALL_3
0x4000b86	              0x5b	                                 pop rbx	       517	getchar.c	FUNCTION_16
0x4000b87	            0xf3c3	                                     ret	       517	getchar.c	FUNCTION_16
save_typebuf	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,3:IF,1:DO,0:FOR,0	33
0x40018e0	        0x4883ec18	                           sub rsp, 0x18	      1340	getchar.c	FUNCTION_45
0x40018e4	    0x48833d000000	               cmp qword [0x040018ec], 0	       919	getchar.c	FUNCTION_34	IF_1
0x40018ec	     0xf8486000000	                            je 0x4001978	       919	getchar.c	FUNCTION_34	IF_1
0x40018f2	    0x486305000000	         movsxd rax, dword [0x040018f9] 	      1342	getchar.c	FUNCTION_45
0x40018f9	    0x488b0d000000	            mov rcx, qword [0x04001900] 	      1342	getchar.c	FUNCTION_45
0x4001900	        0x488d1440	                  lea rdx, [rax + rax*2]	      1342	getchar.c	FUNCTION_45
0x4001904	        0x48c1e204	                              shl rdx, 4	      1342	getchar.c	FUNCTION_45
0x4001908	    0x488d82000000	                          lea rax, [rdx]	      1342	getchar.c	FUNCTION_45
0x400190f	    0x48898a000000	                    mov qword [rdx], rcx	      1342	getchar.c	FUNCTION_45
0x4001916	    0x488b15000000	            mov rdx, qword [0x0400191d] 	      1342	getchar.c	FUNCTION_45
0x400191d	        0x48895008	                mov qword [rax + 8], rdx	      1342	getchar.c	FUNCTION_45
0x4001921	    0x488b15000000	            mov rdx, qword [0x04001928] 	      1342	getchar.c	FUNCTION_45
0x4001928	        0x48895010	             mov qword [rax + 0x10], rdx	      1342	getchar.c	FUNCTION_45
0x400192c	    0x488b15000000	            mov rdx, qword [0x04001933] 	      1342	getchar.c	FUNCTION_45
0x4001933	        0x48895018	             mov qword [rax + 0x18], rdx	      1342	getchar.c	FUNCTION_45
0x4001937	    0x488b15000000	            mov rdx, qword [0x0400193e] 	      1342	getchar.c	FUNCTION_45
0x400193e	        0x48895020	             mov qword [rax + 0x20], rdx	      1342	getchar.c	FUNCTION_45
0x4001942	    0x488b15000000	            mov rdx, qword [0x04001949] 	      1342	getchar.c	FUNCTION_45
0x4001949	        0x48895028	             mov qword [rax + 0x28], rdx	      1342	getchar.c	FUNCTION_45
0x400194d	      0xe800000000	                          call 0x4001952	      1344	getchar.c	FUNCTION_45	IF_1	CALL_2
0x4001952	            0x85c0	                           test eax, eax	      1344	getchar.c	FUNCTION_45	IF_1	CALL_2
0x4001954	            0x740a	                            je 0x4001960	      1344	getchar.c	FUNCTION_45	IF_1	CALL_2
0x4001956	      0xb801000000	                              mov eax, 1	      1349	getchar.c	FUNCTION_45
0x400195b	        0x4883c418	                           add rsp, 0x18	      1350	getchar.c	FUNCTION_45
0x400195f	              0xc3	                                     ret	      1350	getchar.c	FUNCTION_45
0x4001960	        0x8944240c	              mov dword [rsp + 0xc], eax	      1350	getchar.c	FUNCTION_45
0x4001964	      0xe827feffff	                    call sym.closescript	      1346	getchar.c	FUNCTION_45	IF_1	CALL_3
0x4001969	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      1347	getchar.c	FUNCTION_45	IF_1
0x400196d	        0x4883c418	                           add rsp, 0x18	      1350	getchar.c	FUNCTION_45
0x4001971	              0xc3	                                     ret	      1350	getchar.c	FUNCTION_45
0x4001972	    0x660f1f440000	                    nop word [rax + rax]	      1350	getchar.c	FUNCTION_45
0x4001978	      0xe8b3ebffff	            call sym.init_typebuf.part.1	      1350	getchar.c	FUNCTION_45
0x400197d	      0xe970ffffff	                           jmp 0x40018f2	      1350	getchar.c	FUNCTION_45
check_abbr	WHILE,2:ELSE,6:functions,0:SWITCH,0:CALL,26:IF,26:DO,0:FOR,2	328
0x4006210	            0x4157	                                push r15	      4422	getchar.c	FUNCTION_78
0x4006212	            0x4156	                                push r14	      4422	getchar.c	FUNCTION_78
0x4006214	            0x4155	                                push r13	      4422	getchar.c	FUNCTION_78
0x4006216	            0x4154	                                push r12	      4422	getchar.c	FUNCTION_78
0x4006218	              0x55	                                push rbp	      4422	getchar.c	FUNCTION_78
0x4006219	              0x53	                                push rbx	      4422	getchar.c	FUNCTION_78
0x400621a	        0x4883ec58	                           sub rsp, 0x58	      4422	getchar.c	FUNCTION_78
0x400621e	    0x448b05000000	            mov r8d, dword [0x04006225] 	      4438	getchar.c	FUNCTION_78	IF_1
0x4006225	    0x64488b042528	                mov rax, qword fs:[0x28]	      4422	getchar.c	FUNCTION_78
0x400622e	      0x4889442448	             mov qword [rsp + 0x48], rax	      4422	getchar.c	FUNCTION_78
0x4006233	            0x31c0	                            xor eax, eax	      4422	getchar.c	FUNCTION_78
0x4006235	        0x894c2410	             mov dword [rsp + 0x10], ecx	      4422	getchar.c	FUNCTION_78
0x4006239	          0x4585c0	                           test r8d, r8d	      4438	getchar.c	FUNCTION_78	IF_1
0x400623c	            0x7516	                           jne 0x4006254	      4438	getchar.c	FUNCTION_78	IF_1
0x400623e	    0xf60500000000	               test byte [0x04006245], 3	      4442	getchar.c	FUNCTION_78	IF_2
0x4006245	          0x4189fe	                           mov r14d, edi	      4442	getchar.c	FUNCTION_78	IF_2
0x4006248	          0x4989f4	                            mov r12, rsi	      4442	getchar.c	FUNCTION_78	IF_2
0x400624b	            0x89d3	                            mov ebx, edx	      4442	getchar.c	FUNCTION_78	IF_2
0x400624d	            0x7431	                            je 0x4006280	      4442	getchar.c	FUNCTION_78	IF_2
0x400624f	          0x83ff1d	                           cmp edi, 0x1d	      4442	getchar.c	FUNCTION_78	IF_2
0x4006252	            0x742c	                            je 0x4006280	      4442	getchar.c	FUNCTION_78	IF_2
0x4006254	            0x31c0	                            xor eax, eax	      4439	getchar.c	FUNCTION_78	IF_1
0x4006256	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      4619	getchar.c	FUNCTION_78
0x400625b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4619	getchar.c	FUNCTION_78
0x4006264	     0xf85da040000	                           jne 0x4006744	      4619	getchar.c	FUNCTION_78
0x400626a	        0x4883c458	                           add rsp, 0x58	      4619	getchar.c	FUNCTION_78
0x400626e	              0x5b	                                 pop rbx	      4619	getchar.c	FUNCTION_78
0x400626f	              0x5d	                                 pop rbp	      4619	getchar.c	FUNCTION_78
0x4006270	            0x415c	                                 pop r12	      4619	getchar.c	FUNCTION_78
0x4006272	            0x415d	                                 pop r13	      4619	getchar.c	FUNCTION_78
0x4006274	            0x415e	                                 pop r14	      4619	getchar.c	FUNCTION_78
0x4006276	            0x415f	                                 pop r15	      4619	getchar.c	FUNCTION_78
0x4006278	              0xc3	                                     ret	      4619	getchar.c	FUNCTION_78
0x4006279	     0xf1f80000000	                         nop dword [rax]	      4619	getchar.c	FUNCTION_78
0x4006280	            0x85db	                           test ebx, ebx	      4451	getchar.c	FUNCTION_78	IF_3
0x4006282	            0x74d0	                            je 0x4006254	      4451	getchar.c	FUNCTION_78	IF_3
0x4006284	    0x8b3500000000	            mov esi, dword [0x0400628a] 	      4455	getchar.c	FUNCTION_78	IF_4
0x400628a	            0x85f6	                           test esi, esi	      4455	getchar.c	FUNCTION_78	IF_4
0x400628c	     0xf84c6020000	                            je 0x4006558	      4455	getchar.c	FUNCTION_78	IF_4
0x4006292	          0x4863f3	                         movsxd rsi, ebx	      4459	getchar.c	FUNCTION_78	IF_4	CALL_1
0x4006295	          0x4c89e7	                            mov rdi, r12	      4459	getchar.c	FUNCTION_78	IF_4	CALL_1
0x4006298	          0x4c01e6	                            add rsi, r12	      4459	getchar.c	FUNCTION_78	IF_4	CALL_1
0x400629b	      0xe800000000	                          call 0x40062a0	      4459	getchar.c	FUNCTION_78	IF_4	CALL_1
0x40062a0	          0x4889c7	                            mov rdi, rax	      4460	getchar.c	FUNCTION_78	IF_4	IF_5	CALL_2
0x40062a3	          0x4989c5	                            mov r13, rax	      4459	getchar.c	FUNCTION_78	IF_4	CALL_1
0x40062a6	      0xe800000000	                          call 0x40062ab	      4460	getchar.c	FUNCTION_78	IF_4	IF_5	CALL_2
0x40062ab	            0x85c0	                           test eax, eax	      4460	getchar.c	FUNCTION_78	IF_4	IF_5	CALL_2
0x40062ad	     0xf84fd020000	                            je 0x40065b0	      4460	getchar.c	FUNCTION_78	IF_4	IF_5	CALL_2
0x40062b3	          0x4531ff	                          xor r15d, r15d	      4464	getchar.c	FUNCTION_78	IF_4	ELSE_1
0x40062b6	          0x4d39ec	                            cmp r12, r13	      4465	getchar.c	FUNCTION_78	IF_4	ELSE_1	IF_6
0x40062b9	    0xc74424180100	               mov dword [rsp + 0x18], 1	      4435	getchar.c	FUNCTION_78
0x40062c1	     0xf8275030000	                            jb 0x400663c	      4465	getchar.c	FUNCTION_78	IF_4	ELSE_1	IF_6
0x40062c7	      0x4863442410	         movsxd rax, dword [rsp + 0x10] 	      4469	getchar.c	FUNCTION_78	IF_4	WHILE_1
0x40062cc	      0xbd01000000	                              mov ebp, 1	      4469	getchar.c	FUNCTION_78	IF_4	WHILE_1
0x40062d1	          0x4c01e0	                            add rax, r12	      4469	getchar.c	FUNCTION_78	IF_4	WHILE_1
0x40062d4	          0x4939c5	                            cmp r13, rax	      4469	getchar.c	FUNCTION_78	IF_4	WHILE_1
0x40062d7	      0x4889442408	                mov qword [rsp + 8], rax	      4469	getchar.c	FUNCTION_78	IF_4	WHILE_1
0x40062dc	            0x770c	                            ja 0x40062ea	      4469	getchar.c	FUNCTION_78	IF_4	WHILE_1
0x40062de	            0xeb45	                           jmp 0x4006325	      4469	getchar.c	FUNCTION_78	IF_4	WHILE_1
0x40062e0	          0x83c501	                              add ebp, 1	      4477	getchar.c	FUNCTION_78	IF_4	WHILE_1
0x40062e3	      0x4c3b6c2408	                cmp r13, qword [rsp + 8]	      4469	getchar.c	FUNCTION_78	IF_4	WHILE_1
0x40062e8	            0x763b	                           jbe 0x4006325	      4469	getchar.c	FUNCTION_78	IF_4	WHILE_1
0x40062ea	          0x4c89ee	                            mov rsi, r13	      4471	getchar.c	FUNCTION_78	IF_4	WHILE_1	CALL_5
0x40062ed	          0x4c89e7	                            mov rdi, r12	      4471	getchar.c	FUNCTION_78	IF_4	WHILE_1	CALL_5
0x40062f0	      0xe800000000	                          call 0x40062f5	      4471	getchar.c	FUNCTION_78	IF_4	WHILE_1	CALL_5
0x40062f5	           0xfb638	                   movzx edi, byte [rax]	      4472	getchar.c	FUNCTION_78	IF_4	WHILE_1	IF_7	CALL_7
0x40062f8	          0x4989c5	                            mov r13, rax	      4471	getchar.c	FUNCTION_78	IF_4	WHILE_1	CALL_5
0x40062fb	      0xe800000000	                          call 0x4006300	      4472	getchar.c	FUNCTION_78	IF_4	WHILE_1	IF_7	CALL_7
0x4006300	            0x85c0	                           test eax, eax	      4472	getchar.c	FUNCTION_78	IF_4	WHILE_1	IF_7	CALL_7
0x4006302	            0x7513	                           jne 0x4006317	      4472	getchar.c	FUNCTION_78	IF_4	WHILE_1	IF_7	CALL_7
0x4006304	          0x4585ff	                         test r15d, r15d	      4472	getchar.c	FUNCTION_78	IF_4	WHILE_1	IF_7	CALL_7
0x4006307	            0x75d7	                           jne 0x40062e0	      4472	getchar.c	FUNCTION_78	IF_4	WHILE_1	IF_7	CALL_7
0x4006309	          0x4c89ef	                            mov rdi, r13	      4472	getchar.c	FUNCTION_78	IF_4	WHILE_1	IF_7	CALL_7
0x400630c	      0xe800000000	                          call 0x4006311	      4472	getchar.c	FUNCTION_78	IF_4	WHILE_1	IF_7	CALL_7
0x4006311	        0x39442418	            cmp dword [rsp + 0x18], eax 	      4472	getchar.c	FUNCTION_78	IF_4	WHILE_1	IF_7	CALL_7
0x4006315	            0x74c9	                            je 0x40062e0	      4472	getchar.c	FUNCTION_78	IF_4	WHILE_1	IF_7	CALL_7
0x4006317	          0x4c89ef	                            mov rdi, r13	      4474	getchar.c	FUNCTION_78	IF_4	WHILE_1	IF_7
0x400631a	    0xff1500000000	                 call qword [0x04006320]	      4474	getchar.c	FUNCTION_78	IF_4	WHILE_1	IF_7
0x4006320	            0x4898	                                    cdqe	      4474	getchar.c	FUNCTION_78	IF_4	WHILE_1	IF_7
0x4006322	          0x4901c5	                            add r13, rax	      4474	getchar.c	FUNCTION_78	IF_4	WHILE_1	IF_7
0x4006325	          0x4529e5	                          sub r13d, r12d	      4479	getchar.c	FUNCTION_78	IF_4
0x4006328	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      4479	getchar.c	FUNCTION_78	IF_4
0x400632c	          0x4139c5	                           cmp r13d, eax	      4479	getchar.c	FUNCTION_78	IF_4
0x400632f	        0x440f4ce8	                         cmovl r13d, eax	      4479	getchar.c	FUNCTION_78	IF_4
0x4006333	          0x4439eb	                           cmp ebx, r13d	      4499	getchar.c	FUNCTION_78	IF_11
0x4006336	     0xf8e18ffffff	                           jle 0x4006254	      4499	getchar.c	FUNCTION_78	IF_11
0x400633c	          0x4963c5	                        movsxd rax, r13d	      4501	getchar.c	FUNCTION_78	IF_11
0x400633f	          0x4429eb	                           sub ebx, r13d	      4502	getchar.c	FUNCTION_78	IF_11
0x4006342	          0x4c01e0	                            add rax, r12	      4501	getchar.c	FUNCTION_78	IF_11
0x4006345	      0x4889442410	             mov qword [rsp + 0x10], rax	      4501	getchar.c	FUNCTION_78	IF_11
0x400634a	    0x488b05000000	            mov rax, qword [0x04006351] 	      4504	getchar.c	FUNCTION_78	IF_11
0x4006351	    0x4c8bb8c01100	          mov r15, qword [rax + 0x11c0] 	      4504	getchar.c	FUNCTION_78	IF_11
0x4006358	    0x488b05000000	            mov rax, qword [0x0400635f] 	      4505	getchar.c	FUNCTION_78	IF_11
0x400635f	          0x4d85ff	                           test r15, r15	      4506	getchar.c	FUNCTION_78	IF_11	IF_12
0x4006362	      0x4889442408	                mov qword [rsp + 8], rax	      4505	getchar.c	FUNCTION_78	IF_11
0x4006367	     0xf84b3030000	                            je 0x4006720	      4506	getchar.c	FUNCTION_78	IF_11	IF_12
0x400636d	          0x4863c3	                         movsxd rax, ebx	      4538	getchar.c	FUNCTION_78	IF_11	FOR_2	CALL_16
0x4006370	      0x4889442418	             mov qword [rsp + 0x18], rax	      4538	getchar.c	FUNCTION_78	IF_11	FOR_2	CALL_16
0x4006375	            0xeb23	                           jmp 0x400639a	      4538	getchar.c	FUNCTION_78	IF_11	FOR_2	CALL_16
0x4006377	    0x660f1f840000	                    nop word [rax + rax]	      4538	getchar.c	FUNCTION_78	IF_11	FOR_2	CALL_16
0x4006380	        0x4d3b6f08	                cmp r13, qword [r15 + 8]	      4539	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_15
0x4006384	            0x7408	                            je 0x400638e	      4539	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_15
0x4006386	          0x4c89ef	                            mov rdi, r13	      4540	getchar.c	FUNCTION_78	IF_11	FOR_2	CALL_17
0x4006389	      0xe800000000	                          call 0x400638e	      4540	getchar.c	FUNCTION_78	IF_11	FOR_2	CALL_17
0x400638e	          0x4d8b3f	                    mov r15, qword [r15]	      4516	getchar.c	FUNCTION_78	IF_11	FOR_2
0x4006391	          0x4d85ff	                           test r15, r15	      4516	getchar.c	FUNCTION_78	IF_11	FOR_2
0x4006394	     0xf84f6010000	                            je 0x4006590	      4516	getchar.c	FUNCTION_78	IF_11	FOR_2
0x400639a	        0x4d8b6f08	                mov r13, qword [r15 + 8]	      4521	getchar.c	FUNCTION_78	IF_11	FOR_2
0x400639e	      0xbe80000000	                           mov esi, 0x80	      4524	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_13	CALL_12
0x40063a3	        0x458b6720	           mov r12d, dword [r15 + 0x20] 	      4520	getchar.c	FUNCTION_78	IF_11	FOR_2
0x40063a7	          0x4c89ef	                            mov rdi, r13	      4524	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_13	CALL_12
0x40063aa	      0xe800000000	                          call 0x40063af	      4524	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_13	CALL_12
0x40063af	          0x4885c0	                           test rax, rax	      4524	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_13	CALL_12
0x40063b2	            0x7424	                            je 0x40063d8	      4524	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_13	CALL_12
0x40063b4	        0x498b7f08	                mov rdi, qword [r15 + 8]	      4527	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_13	CALL_13
0x40063b8	      0xe800000000	                          call 0x40063bd	      4527	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_13	CALL_13
0x40063bd	          0x4885c0	                           test rax, rax	      4528	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_13	IF_14
0x40063c0	          0x4989c5	                            mov r13, rax	      4527	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_13	CALL_13
0x40063c3	            0x7413	                            je 0x40063d8	      4528	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_13	IF_14
0x40063c5	          0x4889c7	                            mov rdi, rax	      4530	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_13	IF_14	CALL_14
0x40063c8	      0xe800000000	                          call 0x40063cd	      4530	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_13	IF_14	CALL_14
0x40063cd	          0x4c89ef	                            mov rdi, r13	      4531	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_13	IF_14	CALL_15
0x40063d0	      0xe800000000	                          call 0x40063d5	      4531	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_13	IF_14	CALL_15
0x40063d5	          0x4189c4	                           mov r12d, eax	      4531	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_13	IF_14	CALL_15
0x40063d8	        0x418b4724	            mov eax, dword [r15 + 0x24] 	      4537	getchar.c	FUNCTION_78	IF_11	FOR_2
0x40063dc	    0x850500000000	           test dword [0x040063e2], eax 	      4537	getchar.c	FUNCTION_78	IF_11	FOR_2
0x40063e2	            0x749c	                            je 0x4006380	      4537	getchar.c	FUNCTION_78	IF_11	FOR_2
0x40063e4	          0x4139dc	                           cmp r12d, ebx	      4537	getchar.c	FUNCTION_78	IF_11	FOR_2
0x40063e7	            0x7597	                           jne 0x4006380	      4537	getchar.c	FUNCTION_78	IF_11	FOR_2
0x40063e9	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      4538	getchar.c	FUNCTION_78	IF_11	FOR_2	CALL_16
0x40063ee	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      4538	getchar.c	FUNCTION_78	IF_11	FOR_2	CALL_16
0x40063f3	          0x4c89ef	                            mov rdi, r13	      4538	getchar.c	FUNCTION_78	IF_11	FOR_2	CALL_16
0x40063f6	      0xe800000000	                          call 0x40063fb	      4538	getchar.c	FUNCTION_78	IF_11	FOR_2	CALL_16
0x40063fb	            0x85c0	                           test eax, eax	      4538	getchar.c	FUNCTION_78	IF_11	FOR_2	CALL_16
0x40063fd	            0x7581	                           jne 0x4006380	      4538	getchar.c	FUNCTION_78	IF_11	FOR_2	CALL_16
0x40063ff	        0x4d3b6f08	                cmp r13, qword [r15 + 8]	      4539	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_15
0x4006403	     0xf8540030000	                           jne 0x4006749	      4539	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_15
0x4006409	          0x4531ed	                          xor r13d, r13d	      4559	getchar.c	FUNCTION_78	IF_11	IF_17
0x400640c	        0x4183fe1d	                          cmp r14d, 0x1d	      4560	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18
0x4006410	     0xf84a0000000	                            je 0x40064b6	      4560	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18
0x4006416	          0x4489f0	                           mov eax, r14d	      4563	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_18
0x4006419	          0xc1e81f	                           shr eax, 0x1f	      4563	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_18
0x400641c	            0x84c0	                             test al, al	      4563	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_18
0x400641e	     0xf854c020000	                           jne 0x4006670	      4563	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_18
0x4006424	    0x4181fe800000	                          cmp r14d, 0x80	      4563	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_18
0x400642b	     0xf843f020000	                            je 0x4006670	      4563	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_18
0x4006431	        0x418d46e0	                   lea eax, [r14 - 0x20]	      4571	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_20
0x4006435	          0x83f85e	                           cmp eax, 0x5e	      4571	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_20
0x4006438	     0xf86d2020000	                           jbe 0x4006710	      4571	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_20
0x400643e	    0x4181feff0000	                          cmp r14d, 0xff	      4571	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_20
0x4006445	     0xf8fc5020000	                            jg 0x4006710	      4571	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_20
0x400644b	      0xc644242016	            mov byte [rsp + 0x20], 0x16 	      4572	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_20
0x4006450	      0xba01000000	                              mov edx, 1	      4572	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_20
0x4006455	    0x8b0d00000000	            mov ecx, dword [0x0400645b] 	      4574	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_21
0x400645b	            0x85c9	                           test ecx, ecx	      4574	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_21
0x400645d	     0xf848d020000	                            je 0x40066f0	      4574	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_21
0x4006463	    0x418d8600ffff	                  lea eax, [r14 - 0x100]	      4578	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_21	IF_22
0x400646a	    0x4181fe000100	                         cmp r14d, 0x100	      4578	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_21	IF_22
0x4006471	      0x4c8d642420	                   lea r12, [rsp + 0x20]	      4579	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_21
0x4006476	          0x4863f2	                         movsxd rsi, edx	      4579	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_21
0x4006479	        0x89542408	                mov dword [rsp + 8], edx	      4579	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_21
0x400647d	        0x440f4df0	                        cmovge r14d, eax	      4578	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_21	IF_22
0x4006481	          0x4c01e6	                            add rsi, r12	      4579	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_21
0x4006484	          0x4489f7	                           mov edi, r14d	      4579	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_21
0x4006487	    0xff1500000000	                 call qword [0x0400648d]	      4579	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_21
0x400648d	        0x8b542408	                mov edx, dword [rsp + 8]	      4579	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_21
0x4006491	        0x448d2c02	                   lea r13d, [rdx + rax]	      4579	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_21
0x4006495	      0x450fbe472c	           movsx r8d, byte [r15 + 0x2c] 	      4587	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	CALL_21
0x400649a	          0x4963c5	                        movsxd rax, r13d	      4585	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18
0x400649d	      0xb901000000	                              mov ecx, 1	      4587	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	CALL_21
0x40064a2	            0x31d2	                            xor edx, edx	      4587	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	CALL_21
0x40064a4	      0xbe01000000	                              mov esi, 1	      4587	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	CALL_21
0x40064a9	          0x4c89e7	                            mov rdi, r12	      4587	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	CALL_21
0x40064ac	      0xc644042000	          mov byte [rsp + rax + 0x20], 0	      4585	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18
0x40064b1	      0xe800000000	                          call 0x40064b6	      4587	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	CALL_21
0x40064b6	      0x41807f2e00	                cmp byte [r15 + 0x2e], 0	      4590	getchar.c	FUNCTION_78	IF_11	IF_17	IF_23
0x40064bb	     0xf85ef010000	                           jne 0x40066b0	      4590	getchar.c	FUNCTION_78	IF_11	IF_17	IF_23
0x40064c1	        0x4d8b6710	            mov r12, qword [r15 + 0x10] 	      4594	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6
0x40064c5	          0x4d85e4	                           test r12, r12	      4595	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6	IF_24
0x40064c8	            0x7436	                            je 0x4006500	      4595	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6	IF_24
0x40064ca	      0x450fbe472c	           movsx r8d, byte [r15 + 0x2c] 	      4598	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6	IF_24	CALL_23
0x40064cf	        0x418b7728	            mov esi, dword [r15 + 0x28] 	      4598	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6	IF_24	CALL_23
0x40064d3	            0x31d2	                            xor edx, edx	      4598	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6	IF_24	CALL_23
0x40064d5	      0xb901000000	                              mov ecx, 1	      4598	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6	IF_24	CALL_23
0x40064da	          0x4c89e7	                            mov rdi, r12	      4598	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6	IF_24	CALL_23
0x40064dd	      0xe800000000	                          call 0x40064e2	      4598	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6	IF_24	CALL_23
0x40064e2	          0x4c89e7	                            mov rdi, r12	      4600	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6	IF_24	CALL_24
0x40064e5	      0xe800000000	                          call 0x40064ea	      4600	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6	IF_24	CALL_24
0x40064ea	      0x418d440501	                lea eax, [r13 + rax + 1]	      4600	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6	IF_24	CALL_24
0x40064ef	     0x10500000000	             add dword [0x040064f5], eax	      4600	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6	IF_24	CALL_24
0x40064f5	      0x41807f2e00	                cmp byte [r15 + 0x2e], 0	      4602	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6	IF_24	IF_25
0x40064fa	     0xf85c8010000	                           jne 0x40066c8	      4602	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6	IF_24	IF_25
0x4006500	    0x8b0500000000	            mov eax, dword [0x04006506] 	      4610	getchar.c	FUNCTION_78	IF_11	IF_17	IF_26
0x4006506	      0xc644242008	                mov byte [rsp + 0x20], 8	      4607	getchar.c	FUNCTION_78	IF_11	IF_17
0x400650b	      0xc644242100	                mov byte [rsp + 0x21], 0	      4608	getchar.c	FUNCTION_78	IF_11	IF_17
0x4006510	            0x85c0	                           test eax, eax	      4610	getchar.c	FUNCTION_78	IF_11	IF_17	IF_26
0x4006512	     0xf8448010000	                            je 0x4006660	      4610	getchar.c	FUNCTION_78	IF_11	IF_17	IF_26
0x4006518	            0x85ed	                           test ebp, ebp	      4613	getchar.c	FUNCTION_78	IF_11	IF_17	WHILE_2
0x400651a	          0x8d5dff	                      lea ebx, [rbp - 1]	      4613	getchar.c	FUNCTION_78	IF_11	IF_17	WHILE_2
0x400651d	            0x7e2a	                           jle 0x4006549	      4613	getchar.c	FUNCTION_78	IF_11	IF_17	WHILE_2
0x400651f	      0x4c8d642420	                   lea r12, [rsp + 0x20]	      4613	getchar.c	FUNCTION_78	IF_11	IF_17	WHILE_2
0x4006524	         0xf1f4000	                         nop dword [rax]	      4613	getchar.c	FUNCTION_78	IF_11	IF_17	WHILE_2
0x4006528	      0x450fbe472c	           movsx r8d, byte [r15 + 0x2c] 	      4614	getchar.c	FUNCTION_78	IF_11	IF_17	CALL_26
0x400652d	            0x31d2	                            xor edx, edx	      4614	getchar.c	FUNCTION_78	IF_11	IF_17	CALL_26
0x400652f	      0xb901000000	                              mov ecx, 1	      4614	getchar.c	FUNCTION_78	IF_11	IF_17	CALL_26
0x4006534	      0xbe01000000	                              mov esi, 1	      4614	getchar.c	FUNCTION_78	IF_11	IF_17	CALL_26
0x4006539	          0x4c89e7	                            mov rdi, r12	      4614	getchar.c	FUNCTION_78	IF_11	IF_17	CALL_26
0x400653c	          0x83eb01	                              sub ebx, 1	      4613	getchar.c	FUNCTION_78	IF_11	IF_17	WHILE_2
0x400653f	      0xe800000000	                          call 0x4006544	      4614	getchar.c	FUNCTION_78	IF_11	IF_17	CALL_26
0x4006544	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      4613	getchar.c	FUNCTION_78	IF_11	IF_17	WHILE_2
0x4006547	            0x75df	                           jne 0x4006528	      4613	getchar.c	FUNCTION_78	IF_11	IF_17	WHILE_2
0x4006549	      0xb801000000	                              mov eax, 1	      4615	getchar.c	FUNCTION_78	IF_11	IF_17
0x400654e	      0xe903fdffff	                           jmp 0x4006256	      4615	getchar.c	FUNCTION_78	IF_11	IF_17
0x4006553	       0xf1f440000	                   nop dword [rax + rax]	      4615	getchar.c	FUNCTION_78	IF_11	IF_17
0x4006558	          0x4863eb	                         movsxd rbp, ebx	      4484	getchar.c	FUNCTION_78	ELSE_2	IF_8	CALL_8
0x400655b	    0x410fb67c2cff	         movzx edi, byte [r12 + rbp - 1]	      4484	getchar.c	FUNCTION_78	ELSE_2	IF_8	CALL_8
0x4006561	      0xe800000000	                          call 0x4006566	      4484	getchar.c	FUNCTION_78	ELSE_2	IF_8	CALL_8
0x4006566	            0x85c0	                           test eax, eax	      4484	getchar.c	FUNCTION_78	ELSE_2	IF_8	CALL_8
0x4006568	            0x745e	                            je 0x40065c8	      4484	getchar.c	FUNCTION_78	ELSE_2	IF_8	CALL_8
0x400656a	          0x83fb01	                              cmp ebx, 1	      4489	getchar.c	FUNCTION_78	ELSE_2	ELSE_3	IF_9
0x400656d	     0xf8ebd000000	                           jle 0x4006630	      4489	getchar.c	FUNCTION_78	ELSE_2	ELSE_3	IF_9
0x4006573	    0x410fb67c2cfe	         movzx edi, byte [r12 + rbp - 2]	      4490	getchar.c	FUNCTION_78	ELSE_2	ELSE_3	CALL_9
0x4006579	            0x31ed	                            xor ebp, ebp	      4488	getchar.c	FUNCTION_78	ELSE_2	ELSE_3
0x400657b	      0xe800000000	                          call 0x4006580	      4490	getchar.c	FUNCTION_78	ELSE_2	ELSE_3	CALL_9
0x4006580	        0x89442408	                mov dword [rsp + 8], eax	      4490	getchar.c	FUNCTION_78	ELSE_2	ELSE_3	CALL_9
0x4006584	            0xeb4f	                           jmp 0x40065d5	      4490	getchar.c	FUNCTION_78	ELSE_2	ELSE_3	CALL_9
0x4006586	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4490	getchar.c	FUNCTION_78	ELSE_2	ELSE_3	CALL_9
0x4006590	    0x48837c240800	                  cmp qword [rsp + 8], 0	      4514	getchar.c	FUNCTION_78	IF_11	FOR_2
0x4006596	     0xf84b8fcffff	                            je 0x4006254	      4514	getchar.c	FUNCTION_78	IF_11	FOR_2
0x400659c	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      4514	getchar.c	FUNCTION_78	IF_11	FOR_2
0x40065a1	    0x48c744240800	                  mov qword [rsp + 8], 0	      4516	getchar.c	FUNCTION_78	IF_11	FOR_2
0x40065aa	      0xe9ebfdffff	                           jmp 0x400639a	      4516	getchar.c	FUNCTION_78	IF_11	FOR_2
0x40065af	              0x90	                                     nop	      4516	getchar.c	FUNCTION_78	IF_11	FOR_2
0x40065b0	    0x41bf01000000	                             mov r15d, 1	      4461	getchar.c	FUNCTION_78	IF_4	IF_5
0x40065b6	    0xc74424180100	               mov dword [rsp + 0x18], 1	      4435	getchar.c	FUNCTION_78
0x40065be	      0xe904fdffff	                           jmp 0x40062c7	      4435	getchar.c	FUNCTION_78
0x40065c3	       0xf1f440000	                   nop dword [rax + rax]	      4435	getchar.c	FUNCTION_78
0x40065c8	      0xbd01000000	                              mov ebp, 1	      4485	getchar.c	FUNCTION_78	ELSE_2	IF_8
0x40065cd	    0xc74424080100	                  mov dword [rsp + 8], 1	      4435	getchar.c	FUNCTION_78
0x40065d5	        0x448d6bff	                     lea r13d, [rbx - 1]	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x40065d9	          0x4585ed	                         test r13d, r13d	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x40065dc	            0x7e4a	                           jle 0x4006628	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x40065de	          0x4963d5	                        movsxd rdx, r13d	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x40065e1	        0x4d8d3c14	                    lea r15, [r12 + rdx]	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x40065e5	            0xeb13	                           jmp 0x40065fa	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x40065e7	    0x660f1f840000	                    nop word [rax + rax]	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x40065f0	        0x4983ef01	                              sub r15, 1	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x40065f4	        0x4183ed01	                             sub r13d, 1	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x40065f8	            0x742e	                            je 0x4006628	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x40065fa	      0x410fb67fff	               movzx edi, byte [r15 - 1]	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x40065ff	      0xe800000000	                          call 0x4006604	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x4006604	            0x85c0	                           test eax, eax	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x4006606	            0x7520	                           jne 0x4006628	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x4006608	            0x85ed	                           test ebp, ebp	      4493	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_11
0x400660a	            0x75e4	                           jne 0x40065f0	      4493	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_11
0x400660c	      0x410fb67fff	               movzx edi, byte [r15 - 1]	      4493	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_11
0x4006611	      0xe800000000	                          call 0x4006616	      4493	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_11
0x4006616	        0x39442408	                cmp dword [rsp + 8], eax	      4493	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_11
0x400661a	            0x74d4	                            je 0x40065f0	      4493	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_11
0x400661c	      0xe907fdffff	                           jmp 0x4006328	      4493	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_11
0x4006621	     0xf1f80000000	                         nop dword [rax]	      4493	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_11
0x4006628	            0x31ed	                            xor ebp, ebp	      4433	getchar.c	FUNCTION_78
0x400662a	      0xe9f9fcffff	                           jmp 0x4006328	      4433	getchar.c	FUNCTION_78
0x400662f	              0x90	                                     nop	      4433	getchar.c	FUNCTION_78
0x4006630	            0x31ed	                            xor ebp, ebp	      4488	getchar.c	FUNCTION_78	ELSE_2	ELSE_3
0x4006632	    0xc74424080100	                  mov dword [rsp + 8], 1	      4435	getchar.c	FUNCTION_78
0x400663a	            0xeb99	                           jmp 0x40065d5	      4435	getchar.c	FUNCTION_78
0x400663c	          0x4c89ee	                            mov rsi, r13	      4466	getchar.c	FUNCTION_78	IF_4	ELSE_1	CALL_4
0x400663f	          0x4c89e7	                            mov rdi, r12	      4466	getchar.c	FUNCTION_78	IF_4	ELSE_1	CALL_4
0x4006642	      0xe800000000	                          call 0x4006647	      4466	getchar.c	FUNCTION_78	IF_4	ELSE_1	CALL_4
0x4006647	          0x4889c7	                            mov rdi, rax	      4466	getchar.c	FUNCTION_78	IF_4	ELSE_1	CALL_4
0x400664a	      0xe800000000	                          call 0x400664f	      4466	getchar.c	FUNCTION_78	IF_4	ELSE_1	CALL_4
0x400664f	        0x89442418	             mov dword [rsp + 0x18], eax	      4466	getchar.c	FUNCTION_78	IF_4	ELSE_1	CALL_4
0x4006653	      0xe96ffcffff	                           jmp 0x40062c7	      4466	getchar.c	FUNCTION_78	IF_4	ELSE_1	CALL_4
0x4006658	     0xf1f84000000	                   nop dword [rax + rax]	      4466	getchar.c	FUNCTION_78	IF_4	ELSE_1	CALL_4
0x4006660	          0x83eb01	                              sub ebx, 1	      4613	getchar.c	FUNCTION_78	IF_11	IF_17	WHILE_2
0x4006663	      0xe9b7feffff	                           jmp 0x400651f	      4613	getchar.c	FUNCTION_78	IF_11	IF_17	WHILE_2
0x4006668	     0xf1f84000000	                   nop dword [rax + rax]	      4613	getchar.c	FUNCTION_78	IF_11	IF_17	WHILE_2
0x4006670	    0x4181fe800000	                          cmp r14d, 0x80	      4566	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_19
0x4006677	      0xc644242080	            mov byte [rsp + 0x20], 0x80 	      4565	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19
0x400667c	     0xf84b8000000	                            je 0x400673a	      4566	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_19
0x4006682	          0x4585f6	                         test r14d, r14d	      4566	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_19
0x4006685	            0x754e	                           jne 0x40066d5	      4566	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_19
0x4006687	      0xb8ffffffff	                     mov eax, 0xffffffff	      4566	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_19
0x400668c	        0x88442421	               mov byte [rsp + 0x21], al	      4566	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_19
0x4006690	      0xb858000000	                           mov eax, 0x58	      4567	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_20
0x4006695	        0x88442422	               mov byte [rsp + 0x22], al	      4567	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_20
0x4006699	    0x41bd03000000	                             mov r13d, 3	      4567	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_20
0x400669f	      0x4c8d642420	                   lea r12, [rsp + 0x20]	      4567	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_20
0x40066a4	      0xe9ecfdffff	                           jmp 0x4006495	      4567	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_20
0x40066a9	     0xf1f80000000	                         nop dword [rax]	      4567	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_20
0x40066b0	        0x498b7f10	            mov rdi, qword [r15 + 0x10] 	      4591	getchar.c	FUNCTION_78	IF_11	IF_17	CALL_22
0x40066b4	          0x4489f6	                           mov esi, r14d	      4591	getchar.c	FUNCTION_78	IF_11	IF_17	CALL_22
0x40066b7	      0xe864c8ffff	                  call sym.eval_map_expr	      4591	getchar.c	FUNCTION_78	IF_11	IF_17	CALL_22
0x40066bc	          0x4989c4	                            mov r12, rax	      4591	getchar.c	FUNCTION_78	IF_11	IF_17	CALL_22
0x40066bf	      0xe901feffff	                           jmp 0x40064c5	      4591	getchar.c	FUNCTION_78	IF_11	IF_17	CALL_22
0x40066c4	         0xf1f4000	                         nop dword [rax]	      4591	getchar.c	FUNCTION_78	IF_11	IF_17	CALL_22
0x40066c8	          0x4c89e7	                            mov rdi, r12	      4603	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6	IF_24	CALL_25
0x40066cb	      0xe800000000	                          call 0x40066d0	      4603	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6	IF_24	CALL_25
0x40066d0	      0xe92bfeffff	                           jmp 0x4006500	      4603	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6	IF_24	CALL_25
0x40066d5	          0x4489f0	                           mov eax, r14d	      4566	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_19
0x40066d8	            0xf7d8	                                 neg eax	      4566	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_19
0x40066da	        0x88442421	               mov byte [rsp + 0x21], al	      4566	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_19
0x40066de	          0x4489f0	                           mov eax, r14d	      4567	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_20
0x40066e1	            0xf7d8	                                 neg eax	      4567	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_20
0x40066e3	          0xc1e808	                              shr eax, 8	      4567	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_20
0x40066e6	            0xebad	                           jmp 0x4006695	      4567	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_20
0x40066e8	     0xf1f84000000	                   nop dword [rax + rax]	      4567	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_20
0x40066f0	          0x4863c2	                         movsxd rax, edx	      4583	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	ELSE_5
0x40066f3	        0x448d6a01	                     lea r13d, [rdx + 1]	      4583	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	ELSE_5
0x40066f7	      0x4c8d642420	                   lea r12, [rsp + 0x20]	      4583	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	ELSE_5
0x40066fc	      0x4488740420	       mov byte [rsp + rax + 0x20], r14b	      4583	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	ELSE_5
0x4006701	      0xe98ffdffff	                           jmp 0x4006495	      4583	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	ELSE_5
0x4006706	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4583	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	ELSE_5
0x4006710	            0x31d2	                            xor edx, edx	      4559	getchar.c	FUNCTION_78	IF_11	IF_17
0x4006712	      0xe93efdffff	                           jmp 0x4006455	      4559	getchar.c	FUNCTION_78	IF_11	IF_17
0x4006717	    0x660f1f840000	                    nop word [rax + rax]	      4559	getchar.c	FUNCTION_78	IF_11	IF_17
0x4006720	          0x4885c0	                           test rax, rax	      4514	getchar.c	FUNCTION_78	IF_11	FOR_2
0x4006723	     0xf842bfbffff	                            je 0x4006254	      4514	getchar.c	FUNCTION_78	IF_11	FOR_2
0x4006729	          0x4989c7	                            mov r15, rax	      4514	getchar.c	FUNCTION_78	IF_11	FOR_2
0x400672c	    0x48c744240800	                  mov qword [rsp + 8], 0	      4509	getchar.c	FUNCTION_78	IF_11	IF_12
0x4006735	      0xe933fcffff	                           jmp 0x400636d	      4509	getchar.c	FUNCTION_78	IF_11	IF_12
0x400673a	      0xb8feffffff	                     mov eax, 0xfffffffe	      4566	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_19
0x400673f	      0xe948ffffff	                           jmp 0x400668c	      4566	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_19
0x4006744	      0xe800000000	                          call 0x4006749	      4619	getchar.c	FUNCTION_78
0x4006749	          0x4c89ef	                            mov rdi, r13	      4540	getchar.c	FUNCTION_78	IF_11	FOR_2	CALL_17
0x400674c	      0xe800000000	                          call 0x4006751	      4540	getchar.c	FUNCTION_78	IF_11	FOR_2	CALL_17
0x4006751	      0xe9b3fcffff	                           jmp 0x4006409	      4540	getchar.c	FUNCTION_78	IF_11	FOR_2	CALL_17
vungetc	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,0:IF,0:DO,0:FOR,0	8
0x4001d50	    0x8b0500000000	            mov eax, dword [0x04001d56] 	      1920	getchar.c	FUNCTION_61
0x4001d56	    0x893d00000000	            mov dword [0x04001d5c], edi 	      1919	getchar.c	FUNCTION_61
0x4001d5c	    0x890500000000	            mov dword [0x04001d62], eax 	      1920	getchar.c	FUNCTION_61
0x4001d62	    0x8b0500000000	            mov eax, dword [0x04001d68] 	      1922	getchar.c	FUNCTION_61
0x4001d68	    0x890500000000	            mov dword [0x04001d6e], eax 	      1922	getchar.c	FUNCTION_61
0x4001d6e	    0x8b0500000000	            mov eax, dword [0x04001d74] 	      1923	getchar.c	FUNCTION_61
0x4001d74	    0x890500000000	            mov dword [0x04001d7a], eax 	      1923	getchar.c	FUNCTION_61
0x4001d7a	              0xc3	                                     ret	      1923	getchar.c	FUNCTION_61
map_clear	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,5:IF,1:DO,0:FOR,0	36
0x4002400	        0x4883ec18	                           sub rsp, 0x18	      3862	getchar.c	ELSE_10	FUNCTION_70
0x4002404	          0x4189ca	                           mov r10d, ecx	      3862	getchar.c	ELSE_10	FUNCTION_70
0x4002407	      0xb909000000	                              mov ecx, 9	      3867	getchar.c	ELSE_10	FUNCTION_70	CALL_1
0x400240c	      0x48897c2408	                mov qword [rsp + 8], rdi	      3862	getchar.c	ELSE_10	FUNCTION_70
0x4002411	      0xbf00000000	                              mov edi, 0	      3867	getchar.c	ELSE_10	FUNCTION_70	CALL_1
0x4002416	          0x4989f0	                             mov r8, rsi	      3862	getchar.c	ELSE_10	FUNCTION_70
0x4002419	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3867	getchar.c	ELSE_10	FUNCTION_70	CALL_1
0x400241b	           0xf97c0	                                 seta al	      3867	getchar.c	ELSE_10	FUNCTION_70	CALL_1
0x400241e	           0xf92c1	                                 setb cl	      3867	getchar.c	ELSE_10	FUNCTION_70	CALL_1
0x4002421	          0x4531c9	                            xor r9d, r9d	      3867	getchar.c	ELSE_10	FUNCTION_70	CALL_1
0x4002424	            0x29c8	                            sub eax, ecx	      3867	getchar.c	ELSE_10	FUNCTION_70	CALL_1
0x4002426	           0xfbec0	                           movsx eax, al	      3867	getchar.c	ELSE_10	FUNCTION_70	CALL_1
0x4002429	            0x85c0	                           test eax, eax	      3867	getchar.c	ELSE_10	FUNCTION_70	CALL_1
0x400242b	        0x410f94c1	                                sete r9b	      3867	getchar.c	ELSE_10	FUNCTION_70	CALL_1
0x400242f	            0x7406	                            je 0x4002437	      3868	getchar.c	ELSE_10	FUNCTION_70	IF_1
0x4002431	        0x41803800	                        cmp byte [r8], 0	      3868	getchar.c	ELSE_10	FUNCTION_70	IF_1
0x4002435	            0x7529	                           jne 0x4002460	      3868	getchar.c	ELSE_10	FUNCTION_70	IF_1
0x4002437	      0x488d7c2408	                      lea rdi, [rsp + 8]	      3875	getchar.c	ELSE_10	FUNCTION_70	CALL_4
0x400243c	            0x89d6	                            mov esi, edx	      3875	getchar.c	ELSE_10	FUNCTION_70	CALL_4
0x400243e	      0xe800000000	                          call 0x4002443	      3875	getchar.c	ELSE_10	FUNCTION_70	CALL_4
0x4002443	    0x488b3d000000	            mov rdi, qword [0x0400244a] 	      3876	getchar.c	ELSE_10	FUNCTION_70	CALL_5
0x400244a	          0x4489d1	                           mov ecx, r10d	      3876	getchar.c	ELSE_10	FUNCTION_70	CALL_5
0x400244d	          0x4489ca	                            mov edx, r9d	      3876	getchar.c	ELSE_10	FUNCTION_70	CALL_5
0x4002450	            0x89c6	                            mov esi, eax	      3876	getchar.c	ELSE_10	FUNCTION_70	CALL_5
0x4002452	      0xe800000000	                          call 0x4002457	      3876	getchar.c	ELSE_10	FUNCTION_70	CALL_5
0x4002457	        0x4883c418	                           add rsp, 0x18	      3883	getchar.c	ELSE_10	FUNCTION_70
0x400245b	              0xc3	                                     ret	      3883	getchar.c	ELSE_10	FUNCTION_70
0x400245c	         0xf1f4000	                         nop dword [rax]	      3883	getchar.c	ELSE_10	FUNCTION_70
0x4002460	      0xba05000000	                              mov edx, 5	      3870	getchar.c	ELSE_10	FUNCTION_70	IF_1	CALL_3
0x4002465	      0xbe00000000	                              mov esi, 0	      3870	getchar.c	ELSE_10	FUNCTION_70	IF_1	CALL_3
0x400246a	            0x31ff	                            xor edi, edi	      3870	getchar.c	ELSE_10	FUNCTION_70	IF_1	CALL_3
0x400246c	      0xe800000000	                          call 0x4002471	      3870	getchar.c	ELSE_10	FUNCTION_70	IF_1	CALL_3
0x4002471	          0x4889c7	                            mov rdi, rax	      3870	getchar.c	ELSE_10	FUNCTION_70	IF_1	CALL_3
0x4002474	      0xe800000000	                          call 0x4002479	      3870	getchar.c	ELSE_10	FUNCTION_70	IF_1	CALL_3
0x4002479	        0x4883c418	                           add rsp, 0x18	      3883	getchar.c	ELSE_10	FUNCTION_70
0x400247d	              0xc3	                                     ret	      3883	getchar.c	ELSE_10	FUNCTION_70
init_mappings	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,1:IF,0:DO,0:FOR,1	1
0x40075e0	            0xf3c3	                                     ret	      5334	getchar.c	FUNCTION_86
readbuf1_empty	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,0:IF,0:DO,0:FOR,0	4
0x4000a20	            0x31c0	                            xor eax, eax	       432	getchar.c	FUNCTION_12
0x4000a22	    0x48833d000000	               cmp qword [0x04000a2a], 0	       432	getchar.c	FUNCTION_12
0x4000a2a	           0xf94c0	                                 sete al	       432	getchar.c	FUNCTION_12
0x4000a2d	              0xc3	                                     ret	       433	getchar.c	FUNCTION_12
fix_input_buffer	WHILE,0:ELSE,2:functions,0:SWITCH,0:CALL,4:IF,3:DO,0:FOR,1	83
0x4001d80	            0x4154	                                push r12	      3094	getchar.c	FUNCTION_64
0x4001d82	              0x55	                                push rbp	      3094	getchar.c	FUNCTION_64
0x4001d83	            0x89f5	                            mov ebp, esi	      3105	getchar.c	FUNCTION_64	FOR_1
0x4001d85	          0x83ed01	                              sub ebp, 1	      3105	getchar.c	FUNCTION_64	FOR_1
0x4001d88	              0x53	                                push rbx	      3094	getchar.c	FUNCTION_64
0x4001d89	          0x4189f4	                           mov r12d, esi	      3094	getchar.c	FUNCTION_64
0x4001d8c	          0x4889fb	                            mov rbx, rdi	      3094	getchar.c	FUNCTION_64
0x4001d8f	            0x784f	                            js 0x4001de0	      3105	getchar.c	FUNCTION_64	FOR_1
0x4001d91	            0x89f0	                            mov eax, esi	      3105	getchar.c	FUNCTION_64	FOR_1
0x4001d93	            0xeb22	                           jmp 0x4001db7	      3105	getchar.c	FUNCTION_64	FOR_1
0x4001d95	           0xf1f00	                         nop dword [rax]	      3105	getchar.c	FUNCTION_64	FOR_1
0x4001d98	          0x80fa9b	                            cmp dl, 0x9b	      3116	getchar.c	FUNCTION_64	FOR_1	ELSE_1	IF_2
0x4001d9b	     0xf84af000000	                            je 0x4001e50	      3116	getchar.c	FUNCTION_64	FOR_1	ELSE_1	IF_2
0x4001da1	            0x84d2	                             test dl, dl	      3126	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x4001da3	            0x744b	                            je 0x4001df0	      3126	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x4001da5	          0x80fa80	                            cmp dl, 0x80	      3126	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x4001da8	            0x89e8	                            mov eax, ebp	      3126	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x4001daa	            0x7474	                            je 0x4001e20	      3126	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x4001dac	            0x89c5	                            mov ebp, eax	      3105	getchar.c	FUNCTION_64	FOR_1
0x4001dae	        0x4883c301	                              add rbx, 1	      3105	getchar.c	FUNCTION_64	FOR_1
0x4001db2	          0x83ed01	                              sub ebp, 1	      3105	getchar.c	FUNCTION_64	FOR_1
0x4001db5	            0x7829	                            js 0x4001de0	      3105	getchar.c	FUNCTION_64	FOR_1
0x4001db7	    0x8b0d00000000	            mov ecx, dword [0x04001dbd] 	      3110	getchar.c	FUNCTION_64	FOR_1	IF_1
0x4001dbd	           0xfb613	                   movzx edx, byte [rbx]	      3110	getchar.c	FUNCTION_64	FOR_1	IF_1
0x4001dc0	            0x85c9	                           test ecx, ecx	      3110	getchar.c	FUNCTION_64	FOR_1	IF_1
0x4001dc2	            0x74d4	                            je 0x4001d98	      3110	getchar.c	FUNCTION_64	FOR_1	IF_1
0x4001dc4	          0x83fd01	                              cmp ebp, 1	      3110	getchar.c	FUNCTION_64	FOR_1	IF_1
0x4001dc7	            0x7ed8	                           jle 0x4001da1	      3110	getchar.c	FUNCTION_64	FOR_1	IF_1
0x4001dc9	          0x80fa9b	                            cmp dl, 0x9b	      3110	getchar.c	FUNCTION_64	FOR_1	IF_1
0x4001dcc	            0x75d3	                           jne 0x4001da1	      3110	getchar.c	FUNCTION_64	FOR_1	IF_1
0x4001dce	          0x83e803	                              sub eax, 3	      3113	getchar.c	FUNCTION_64	FOR_1	IF_1
0x4001dd1	        0x4883c302	                              add rbx, 2	      3112	getchar.c	FUNCTION_64	FOR_1	IF_1
0x4001dd5	            0x89c5	                            mov ebp, eax	      3105	getchar.c	FUNCTION_64	FOR_1
0x4001dd7	        0x4883c301	                              add rbx, 1	      3105	getchar.c	FUNCTION_64	FOR_1
0x4001ddb	          0x83ed01	                              sub ebp, 1	      3105	getchar.c	FUNCTION_64	FOR_1
0x4001dde	            0x79d7	                           jns 0x4001db7	      3105	getchar.c	FUNCTION_64	FOR_1
0x4001de0	          0x4489e0	                           mov eax, r12d	      3145	getchar.c	FUNCTION_64
0x4001de3	          0xc60300	                       mov byte [rbx], 0	      3143	getchar.c	FUNCTION_64
0x4001de6	              0x5b	                                 pop rbx	      3145	getchar.c	FUNCTION_64
0x4001de7	              0x5d	                                 pop rbp	      3145	getchar.c	FUNCTION_64
0x4001de8	            0x415c	                                 pop r12	      3145	getchar.c	FUNCTION_64
0x4001dea	              0xc3	                                     ret	      3145	getchar.c	FUNCTION_64
0x4001deb	       0xf1f440000	                   nop dword [rax + rax]	      3145	getchar.c	FUNCTION_64
0x4001df0	        0x488d7301	                      lea rsi, [rbx + 1]	        59	string3.h	FUNCTION_106	CALL_3
0x4001df4	        0x488d7b03	                      lea rdi, [rbx + 3]	        59	string3.h	FUNCTION_106	CALL_3
0x4001df8	          0x4863d5	                         movsxd rdx, ebp	        59	string3.h	FUNCTION_106	CALL_3
0x4001dfb	      0xe800000000	                          call 0x4001e00	        59	string3.h	FUNCTION_106	CALL_3
0x4001e00	        0xc6430258	                mov byte [rbx + 2], 0x58	      3136	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3	CALL_3
0x4001e04	      0xb8ffffffff	                     mov eax, 0xffffffff	      3137	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3	CALL_4
0x4001e09	          0x884301	                  mov byte [rbx + 1], al	      3137	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3	CALL_4
0x4001e0c	          0xc60380	                    mov byte [rbx], 0x80	      3138	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x4001e0f	        0x4183c402	                             add r12d, 2	      3140	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x4001e13	        0x4883c302	                              add rbx, 2	      3139	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x4001e17	            0x89e8	                            mov eax, ebp	      3140	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x4001e19	            0xeb91	                           jmp 0x4001dac	      3140	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x4001e1b	       0xf1f440000	                   nop dword [rax + rax]	      3140	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x4001e20	          0x83fd01	                              cmp ebp, 1	      3128	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x4001e23	            0x7e06	                           jle 0x4001e2b	      3128	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x4001e25	        0x807b01fd	                cmp byte [rbx + 1], 0xfd	      3128	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x4001e29	            0x7455	                            je 0x4001e80	      3128	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x4001e2b	        0x488d7301	                      lea rsi, [rbx + 1]	        59	string3.h	FUNCTION_106	CALL_3
0x4001e2f	        0x488d7b03	                      lea rdi, [rbx + 3]	        59	string3.h	FUNCTION_106	CALL_3
0x4001e33	          0x4863d5	                         movsxd rdx, ebp	        59	string3.h	FUNCTION_106	CALL_3
0x4001e36	      0xe800000000	                          call 0x4001e3b	        59	string3.h	FUNCTION_106	CALL_3
0x4001e3b	        0xc6430258	                mov byte [rbx + 2], 0x58	      3136	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3	CALL_3
0x4001e3f	      0xb8feffffff	                     mov eax, 0xfffffffe	      3137	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3	CALL_4
0x4001e44	            0xebc3	                           jmp 0x4001e09	      3137	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3	CALL_4
0x4001e46	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3137	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3	CALL_4
0x4001e50	        0x488d7301	                      lea rsi, [rbx + 1]	        59	string3.h	FUNCTION_106	CALL_3
0x4001e54	        0x488d7b03	                      lea rdi, [rbx + 3]	        59	string3.h	FUNCTION_106	CALL_3
0x4001e58	          0x4863d5	                         movsxd rdx, ebp	        59	string3.h	FUNCTION_106	CALL_3
0x4001e5b	        0x4183c402	                             add r12d, 2	      3122	getchar.c	FUNCTION_64	FOR_1	ELSE_1	IF_2
0x4001e5f	        0x4883c302	                              add rbx, 2	      3120	getchar.c	FUNCTION_64	FOR_1	ELSE_1	IF_2
0x4001e63	      0xe800000000	                          call 0x4001e68	        59	string3.h	FUNCTION_106	CALL_3
0x4001e68	        0xc643fe80	                mov byte [rbx - 2], 0x80	      3119	getchar.c	FUNCTION_64	FOR_1	ELSE_1	IF_2
0x4001e6c	        0xc643fffd	                mov byte [rbx - 1], 0xfd	      3120	getchar.c	FUNCTION_64	FOR_1	ELSE_1	IF_2
0x4001e70	            0x89e8	                            mov eax, ebp	      3122	getchar.c	FUNCTION_64	FOR_1	ELSE_1	IF_2
0x4001e72	          0xc60351	                    mov byte [rbx], 0x51	      3121	getchar.c	FUNCTION_64	FOR_1	ELSE_1	IF_2
0x4001e75	      0xe932ffffff	                           jmp 0x4001dac	      3122	getchar.c	FUNCTION_64	FOR_1	ELSE_1	IF_2
0x4001e7a	    0x660f1f440000	                    nop word [rax + rax]	      3122	getchar.c	FUNCTION_64	FOR_1	ELSE_1	IF_2
0x4001e80	        0x807b0260	                cmp byte [rbx + 2], 0x60	      3128	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x4001e84	            0x75a5	                           jne 0x4001e2b	      3128	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x4001e86	      0xe921ffffff	                           jmp 0x4001dac	      3128	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
do_map	WHILE,2:ELSE,20:functions,0:SWITCH,0:CALL,67:IF,66:DO,0:FOR,10	875
0x4005330	            0x4157	                                push r15	      3210	getchar.c	FUNCTION_66
0x4005332	            0x4156	                                push r14	      3210	getchar.c	FUNCTION_66
0x4005334	    0x41be00000000	                             mov r14d, 0	      3210	getchar.c	FUNCTION_66
0x400533a	            0x4155	                                push r13	      3210	getchar.c	FUNCTION_66
0x400533c	            0x4154	                                push r12	      3210	getchar.c	FUNCTION_66
0x400533e	          0x4189d5	                           mov r13d, edx	      3210	getchar.c	FUNCTION_66
0x4005341	              0x55	                                push rbp	      3210	getchar.c	FUNCTION_66
0x4005342	              0x53	                                push rbx	      3210	getchar.c	FUNCTION_66
0x4005343	      0xbd00000000	                              mov ebp, 0	      3210	getchar.c	FUNCTION_66
0x4005348	            0x89fb	                            mov ebx, edi	      3210	getchar.c	FUNCTION_66
0x400534a	    0x41bc00000000	                             mov r12d, 0	      3210	getchar.c	FUNCTION_66
0x4005350	    0x4881eca80000	                           sub rsp, 0xa8	      3210	getchar.c	FUNCTION_66
0x4005357	    0x64488b042528	                mov rax, qword fs:[0x28]	      3210	getchar.c	FUNCTION_66
0x4005360	    0x488984249800	             mov qword [rsp + 0x98], rax	      3210	getchar.c	FUNCTION_66
0x4005368	            0x31c0	                            xor eax, eax	      3210	getchar.c	FUNCTION_66
0x400536a	            0x31c0	                            xor eax, eax	      3248	getchar.c	FUNCTION_66	IF_1
0x400536c	          0x83ff02	                              cmp edi, 2	      3248	getchar.c	FUNCTION_66	IF_1
0x400536f	        0x894c2430	             mov dword [rsp + 0x30], ecx	      3210	getchar.c	FUNCTION_66
0x4005373	           0xf94c0	                                 sete al	      3248	getchar.c	FUNCTION_66	IF_1
0x4005376	    0x48c784248800	               mov qword [rsp + 0x88], 0	      3225	getchar.c	FUNCTION_66
0x4005382	    0x48c784249000	               mov qword [rsp + 0x90], 0	      3226	getchar.c	FUNCTION_66
0x400538e	            0xf7d8	                                 neg eax	      3248	getchar.c	FUNCTION_66	IF_1
0x4005390	    0xc74424740000	               mov dword [rsp + 0x74], 0	      3248	getchar.c	FUNCTION_66	IF_1
0x4005398	          0x4531ff	                          xor r15d, r15d	      3248	getchar.c	FUNCTION_66	IF_1
0x400539b	        0x89442470	             mov dword [rsp + 0x70], eax	      3248	getchar.c	FUNCTION_66	IF_1
0x400539f	    0xc74424640000	               mov dword [rsp + 0x64], 0	      3248	getchar.c	FUNCTION_66	IF_1
0x40053a7	          0x4889f0	                            mov rax, rsi	      3248	getchar.c	FUNCTION_66	IF_1
0x40053aa	    0xc74424600000	               mov dword [rsp + 0x60], 0	      3248	getchar.c	FUNCTION_66	IF_1
0x40053b2	    0xc744245c0000	               mov dword [rsp + 0x5c], 0	      3248	getchar.c	FUNCTION_66	IF_1
0x40053ba	    0x48c744242800	               mov qword [rsp + 0x28], 0	      3248	getchar.c	FUNCTION_66	IF_1
0x40053c3	    0x48c744245000	               mov qword [rsp + 0x50], 0	      3248	getchar.c	FUNCTION_66	IF_1
0x40053cc	         0xf1f4000	                         nop dword [rax]	      3248	getchar.c	FUNCTION_66	IF_1
0x40053d0	      0xb908000000	                              mov ecx, 8	      3261	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_2	CALL_1
0x40053d5	          0x4889c6	                            mov rsi, rax	      3261	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_2	CALL_1
0x40053d8	          0x4889ef	                            mov rdi, rbp	      3261	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_2	CALL_1
0x40053db	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3261	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_2	CALL_1
0x40053dd	     0xf840d010000	                            je 0x40054f0	      3261	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_2	CALL_1
0x40053e3	      0xb908000000	                              mov ecx, 8	      3273	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_3	CALL_3
0x40053e8	          0x4889c6	                            mov rsi, rax	      3273	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_3	CALL_3
0x40053eb	          0x4c89e7	                            mov rdi, r12	      3273	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_3	CALL_3
0x40053ee	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3273	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_3	CALL_3
0x40053f0	     0xf842a010000	                            je 0x4005520	      3273	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_3	CALL_3
0x40053f6	      0xb908000000	                              mov ecx, 8	      3283	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_4	CALL_5
0x40053fb	          0x4889c6	                            mov rsi, rax	      3283	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_4	CALL_5
0x40053fe	          0x4c89f7	                            mov rdi, r14	      3283	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_4	CALL_5
0x4005401	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3283	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_4	CALL_5
0x4005403	     0xf84b7010000	                            je 0x40055c0	      3283	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_4	CALL_5
0x4005409	      0xb909000000	                              mov ecx, 9	      3293	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_7
0x400540e	          0x4889c6	                            mov rsi, rax	      3293	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_7
0x4005411	      0xbf00000000	                              mov edi, 0	      3293	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_7
0x4005416	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3293	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_7
0x4005418	     0xf84b8010000	                            je 0x40055d6	      3293	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_7
0x400541e	      0xb908000000	                              mov ecx, 8	      3304	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_6	CALL_9
0x4005423	          0x4889c6	                            mov rsi, rax	      3304	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_6	CALL_9
0x4005426	      0xbf00000000	                              mov edi, 0	      3304	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_6	CALL_9
0x400542b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3304	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_6	CALL_9
0x400542d	     0xf84b7010000	                            je 0x40055ea	      3304	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_6	CALL_9
0x4005433	      0xb906000000	                              mov ecx, 6	      3314	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_7	CALL_11
0x4005438	          0x4889c6	                            mov rsi, rax	      3314	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_7	CALL_11
0x400543b	      0xbf00000000	                              mov edi, 0	      3314	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_7	CALL_11
0x4005440	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3314	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_7	CALL_11
0x4005442	     0xf84b8010000	                            je 0x4005600	      3314	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_7	CALL_11
0x4005448	      0xb908000000	                              mov ecx, 8	      3324	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_8	CALL_13
0x400544d	          0x4889c6	                            mov rsi, rax	      3324	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_8	CALL_13
0x4005450	      0xbf00000000	                              mov edi, 0	      3324	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_8	CALL_13
0x4005455	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3324	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_8	CALL_13
0x4005457	     0xf84d3040000	                            je 0x4005930	      3324	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_8	CALL_13
0x400545d	    0x8b3d00000000	            mov edi, dword [0x04005463] 	      3802	getchar.c	FUNCTION_68	IF_1
0x4005463	      0x4889442418	             mov qword [rsp + 0x18], rax	      3802	getchar.c	FUNCTION_68	IF_1
0x4005468	            0x85ff	                           test edi, edi	      3802	getchar.c	FUNCTION_68	IF_1
0x400546a	     0xf84d2090000	                            je 0x4005e42	      3802	getchar.c	FUNCTION_68	IF_1
0x4005470	    0x488b3d000000	            mov rdi, qword [0x04005477] 	      3341	getchar.c	FUNCTION_66	CALL_16
0x4005477	      0xbe42000000	                           mov esi, 0x42	      3341	getchar.c	FUNCTION_66	CALL_16
0x400547c	      0xe800000000	                          call 0x4005481	      3341	getchar.c	FUNCTION_66	CALL_16
0x4005481	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x4005486	           0xfb611	                   movzx edx, byte [rcx]	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x4005489	          0x4889cf	                            mov rdi, rcx	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x400548c	            0x84d2	                             test dl, dl	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x400548e	     0xf84a6000000	                            je 0x400553a	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x4005494	         0xf1f4000	                         nop dword [rax]	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x4005498	          0x83fb01	                              cmp ebx, 1	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x400549b	            0x7416	                            je 0x40054b3	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x400549d	          0x80fa20	                            cmp dl, 0x20	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x40054a0	        0x400f95c6	                               setne sil	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x40054a4	          0x80fa09	                               cmp dl, 9	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x40054a7	           0xf95c1	                                setne cl	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x40054aa	          0x4020f1	                             and cl, sil	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x40054ad	     0xf8463010000	                            je 0x4005616	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x40054b3	          0x80fa16	                            cmp dl, 0x16	      3344	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x40054b6	            0x7420	                            je 0x40054d8	      3344	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x40054b8	          0x80fa5c	                            cmp dl, 0x5c	      3344	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x40054bb	            0x7505	                           jne 0x40054c2	      3344	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x40054bd	          0x4885c0	                           test rax, rax	      3344	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x40054c0	            0x7416	                            je 0x40054d8	      3344	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x40054c2	         0xfb65701	               movzx edx, byte [rdi + 1]	      3344	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x40054c6	          0x4889f9	                            mov rcx, rdi	      3344	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x40054c9	            0x84d2	                             test dl, dl	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x40054cb	        0x488d7901	                      lea rdi, [rcx + 1]	      3347	getchar.c	FUNCTION_66	WHILE_1
0x40054cf	            0x75c7	                           jne 0x4005498	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x40054d1	            0xeb67	                           jmp 0x400553a	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x40054d3	       0xf1f440000	                   nop dword [rax + rax]	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x40054d8	        0x807f0100	                   cmp byte [rdi + 1], 0	      3344	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x40054dc	            0x7458	                            je 0x4005536	      3344	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x40054de	        0x488d4f01	                      lea rcx, [rdi + 1]	      3346	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x40054e2	         0xfb65702	               movzx edx, byte [rdi + 2]	      3346	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x40054e6	            0xebe1	                           jmp 0x40054c9	      3346	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x40054e8	     0xf1f84000000	                   nop dword [rax + rax]	      3346	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x40054f0	        0x488d7808	                      lea rdi, [rax + 8]	      3263	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_2	CALL_2
0x40054f4	      0xe800000000	                          call 0x40054f9	      3263	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_2	CALL_2
0x40054f9	    0x488b15000000	            mov rdx, qword [0x04005500] 	      3264	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_2
0x4005500	    0x488d8ac00900	                  lea rcx, [rdx + 0x9c0]	      3264	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_2
0x4005507	    0x488dbac01100	                 lea rdi, [rdx + 0x11c0]	      3265	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_2
0x400550e	      0x48894c2428	             mov qword [rsp + 0x28], rcx	      3264	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_2
0x4005513	      0x48897c2450	             mov qword [rsp + 0x50], rdi	      3265	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_2
0x4005518	      0xe9b3feffff	                           jmp 0x40053d0	      3266	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_2
0x400551d	           0xf1f00	                         nop dword [rax]	      3266	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_2
0x4005520	        0x488d7808	                      lea rdi, [rax + 8]	      3275	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_3	CALL_4
0x4005524	      0xe800000000	                          call 0x4005529	      3275	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_3	CALL_4
0x4005529	    0xc74424600100	               mov dword [rsp + 0x60], 1	      3276	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_3
0x4005531	      0xe99afeffff	                           jmp 0x40053d0	      3277	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_3
0x4005536	        0x4883c701	                              add rdi, 1	      3347	getchar.c	FUNCTION_66	WHILE_1
0x400553a	      0xe800000000	                          call 0x400553f	      3352	getchar.c	FUNCTION_66	CALL_18
0x400553f	      0x4889442468	             mov qword [rsp + 0x68], rax	      3352	getchar.c	FUNCTION_66	CALL_18
0x4005544	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3355	getchar.c	FUNCTION_66
0x4005549	          0x83fb01	                              cmp ebx, 1	      3358	getchar.c	FUNCTION_66	IF_11
0x400554c	       0xf94442448	                  sete byte [rsp + 0x48]	      3358	getchar.c	FUNCTION_66	IF_11
0x4005551	       0xfb67c2448	           movzx edi, byte [rsp + 0x48] 	      3358	getchar.c	FUNCTION_66	IF_11
0x4005556	           0xfb600	                   movzx eax, byte [rax]	      3355	getchar.c	FUNCTION_66
0x4005559	            0x84c0	                             test al, al	      3358	getchar.c	FUNCTION_66	IF_11
0x400555b	       0xf94442407	                     sete byte [rsp + 7]	      3358	getchar.c	FUNCTION_66	IF_11
0x4005560	          0x4084ff	                           test dil, dil	      3358	getchar.c	FUNCTION_66	IF_11
0x4005563	       0xfb64c2407	               movzx ecx, byte [rsp + 7]	      3358	getchar.c	FUNCTION_66	IF_11
0x4005568	     0xf84de080000	                            je 0x4005e4c	      3358	getchar.c	FUNCTION_66	IF_11
0x400556e	            0x84c9	                             test cl, cl	      3358	getchar.c	FUNCTION_66	IF_11
0x4005570	     0xf84d6080000	                            je 0x4005e4c	      3358	getchar.c	FUNCTION_66	IF_11
0x4005576	      0xbb01000000	                              mov ebx, 1	      3360	getchar.c	FUNCTION_66	IF_11
0x400557b	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      3774	getchar.c	FUNCTION_66	CALL_66
0x4005583	      0xe800000000	                          call 0x4005588	      3774	getchar.c	FUNCTION_66	CALL_66
0x4005588	    0x488bbc249000	            mov rdi, qword [rsp + 0x90] 	      3775	getchar.c	FUNCTION_66	CALL_67
0x4005590	      0xe800000000	                          call 0x4005595	      3775	getchar.c	FUNCTION_66	CALL_67
0x4005595	            0x89d8	                            mov eax, ebx	      3777	getchar.c	FUNCTION_66
0x4005597	    0x488b9c249800	            mov rbx, qword [rsp + 0x98] 	      3777	getchar.c	FUNCTION_66
0x400559f	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      3777	getchar.c	FUNCTION_66
0x40055a8	     0xf85160c0000	                           jne 0x40061c4	      3777	getchar.c	FUNCTION_66
0x40055ae	    0x4881c4a80000	                           add rsp, 0xa8	      3777	getchar.c	FUNCTION_66
0x40055b5	              0x5b	                                 pop rbx	      3777	getchar.c	FUNCTION_66
0x40055b6	              0x5d	                                 pop rbp	      3777	getchar.c	FUNCTION_66
0x40055b7	            0x415c	                                 pop r12	      3777	getchar.c	FUNCTION_66
0x40055b9	            0x415d	                                 pop r13	      3777	getchar.c	FUNCTION_66
0x40055bb	            0x415e	                                 pop r14	      3777	getchar.c	FUNCTION_66
0x40055bd	            0x415f	                                 pop r15	      3777	getchar.c	FUNCTION_66
0x40055bf	              0xc3	                                     ret	      3777	getchar.c	FUNCTION_66
0x40055c0	        0x488d7808	                      lea rdi, [rax + 8]	      3285	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_4	CALL_6
0x40055c4	      0xe800000000	                          call 0x40055c9	      3285	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_4	CALL_6
0x40055c9	    0xc74424640100	               mov dword [rsp + 0x64], 1	      3286	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_4
0x40055d1	      0xe9fafdffff	                           jmp 0x40053d0	      3287	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_4
0x40055d6	        0x488d7809	                      lea rdi, [rax + 9]	      3295	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_8
0x40055da	    0x41bf01000000	                             mov r15d, 1	      3296	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x40055e0	      0xe800000000	                          call 0x40055e5	      3295	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_8
0x40055e5	      0xe9e6fdffff	                           jmp 0x40053d0	      3297	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x40055ea	        0x488d7808	                      lea rdi, [rax + 8]	      3306	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_6	CALL_10
0x40055ee	      0xe800000000	                          call 0x40055f3	      3306	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_6	CALL_10
0x40055f3	    0xc7442470feff	     mov dword [rsp + 0x70], 0xfffffffe 	      3307	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_6
0x40055fb	      0xe9d0fdffff	                           jmp 0x40053d0	      3308	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_6
0x4005600	        0x488d7806	                      lea rdi, [rax + 6]	      3316	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_7	CALL_12
0x4005604	      0xe800000000	                          call 0x4005609	      3316	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_7	CALL_12
0x4005609	    0xc74424740100	               mov dword [rsp + 0x74], 1	      3317	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_7
0x4005611	      0xe9bafdffff	                           jmp 0x40053d0	      3318	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_7
0x4005616	          0xc60700	                       mov byte [rdi], 0	      3350	getchar.c	FUNCTION_66	IF_10
0x4005619	        0x4883c701	                              add rdi, 1	      3352	getchar.c	FUNCTION_66	CALL_18
0x400561d	        0x884c2448	               mov byte [rsp + 0x48], cl	      3352	getchar.c	FUNCTION_66	CALL_18
0x4005621	      0xe800000000	                          call 0x4005626	      3352	getchar.c	FUNCTION_66	CALL_18
0x4005626	      0x4889442468	             mov qword [rsp + 0x68], rax	      3352	getchar.c	FUNCTION_66	CALL_18
0x400562b	           0xfb600	                   movzx eax, byte [rax]	      3354	getchar.c	FUNCTION_66
0x400562e	            0x84c0	                             test al, al	      3354	getchar.c	FUNCTION_66
0x4005630	        0x88442449	               mov byte [rsp + 0x49], al	      3354	getchar.c	FUNCTION_66
0x4005634	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3355	getchar.c	FUNCTION_66
0x4005639	        0x400f95c5	                               setne bpl	      3354	getchar.c	FUNCTION_66
0x400563d	           0xfb600	                   movzx eax, byte [rax]	      3355	getchar.c	FUNCTION_66
0x4005640	            0x84c0	                             test al, al	      3355	getchar.c	FUNCTION_66
0x4005642	        0x410f95c4	                              setne r12b	      3355	getchar.c	FUNCTION_66
0x4005646	       0xf94442407	                     sete byte [rsp + 7]	      3358	getchar.c	FUNCTION_66	IF_11
0x400564b	          0x4584e4	                         test r12b, r12b	      3372	getchar.c	FUNCTION_66	IF_12
0x400564e	     0xf851b080000	                           jne 0x4005e6f	      3372	getchar.c	FUNCTION_66	IF_12
0x4005654	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      3372	getchar.c	FUNCTION_66	IF_12
0x4005659	          0x4084ed	                           test bpl, bpl	      3375	getchar.c	FUNCTION_66	IF_13
0x400565c	      0x4889442478	             mov qword [rsp + 0x78], rax	      3375	getchar.c	FUNCTION_66	IF_13
0x4005661	            0x741e	                            je 0x4005681	      3375	getchar.c	FUNCTION_66	IF_13
0x4005663	      0xbe00000000	                              mov esi, 0	      3377	getchar.c	FUNCTION_66	IF_13	IF_14	CALL_20
0x4005668	          0x4889c7	                            mov rdi, rax	      3377	getchar.c	FUNCTION_66	IF_13	IF_14	CALL_20
0x400566b	      0xe800000000	                          call 0x4005670	      3377	getchar.c	FUNCTION_66	IF_13	IF_14	CALL_20
0x4005670	            0x85c0	                           test eax, eax	      3377	getchar.c	FUNCTION_66	IF_13	IF_14	CALL_20
0x4005672	    0x48c744247800	               mov qword [rsp + 0x78], 0	      3378	getchar.c	FUNCTION_66	IF_13	IF_14
0x400567b	     0xf851e090000	                           jne 0x4005f9f	      3377	getchar.c	FUNCTION_66	IF_13	IF_14	CALL_20
0x4005681	    0x8b3500000000	            mov esi, dword [0x04005687] 	      3388	getchar.c	FUNCTION_66	IF_15
0x4005687	            0x85f6	                           test esi, esi	      3388	getchar.c	FUNCTION_66	IF_15
0x4005689	            0x7415	                            je 0x40056a0	      3388	getchar.c	FUNCTION_66	IF_15
0x400568b	    0x488b05000000	            mov rax, qword [0x04005692] 	      3388	getchar.c	FUNCTION_66	IF_15
0x4005692	    0x8b8854020000	           mov ecx, dword [rax + 0x254] 	      3388	getchar.c	FUNCTION_66	IF_15
0x4005698	            0x85c9	                           test ecx, ecx	      3388	getchar.c	FUNCTION_66	IF_15
0x400569a	     0xf85f0080000	                           jne 0x4005f90	      3388	getchar.c	FUNCTION_66	IF_15
0x40056a0	          0x4584e4	                         test r12b, r12b	      3395	getchar.c	FUNCTION_66	IF_16
0x40056a3	     0xf849d020000	                            je 0x4005946	      3395	getchar.c	FUNCTION_66	IF_16
0x40056a9	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      3397	getchar.c	FUNCTION_66	IF_16	CALL_23
0x40056ae	      0xe800000000	                          call 0x40056b3	      3397	getchar.c	FUNCTION_66	IF_16	CALL_23
0x40056b3	          0x83f832	                           cmp eax, 0x32	      3398	getchar.c	FUNCTION_66	IF_16	IF_17
0x40056b6	      0x4889442420	             mov qword [rsp + 0x20], rax	      3397	getchar.c	FUNCTION_66	IF_16	CALL_23
0x40056bb	          0x4189c4	                           mov r12d, eax	      3397	getchar.c	FUNCTION_66	IF_16	CALL_23
0x40056be	     0xf8fb2feffff	                            jg 0x4005576	      3398	getchar.c	FUNCTION_66	IF_16	IF_17
0x40056c4	        0x8b542430	            mov edx, dword [rsp + 0x30] 	      3404	getchar.c	FUNCTION_66	IF_16	IF_18
0x40056c8	          0x83fb01	                              cmp ebx, 1	      3404	getchar.c	FUNCTION_66	IF_16	IF_18
0x40056cb	       0xf95442408	                    setne byte [rsp + 8]	      3404	getchar.c	FUNCTION_66	IF_16	IF_18
0x40056d0	       0xfb6442408	               movzx eax, byte [rsp + 8]	      3404	getchar.c	FUNCTION_66	IF_16	IF_18
0x40056d5	            0x85d2	                           test edx, edx	      3404	getchar.c	FUNCTION_66	IF_16	IF_18
0x40056d7	     0xf8422010000	                            je 0x40057ff	      3404	getchar.c	FUNCTION_66	IF_16	IF_18
0x40056dd	            0x84c0	                             test al, al	      3404	getchar.c	FUNCTION_66	IF_16	IF_18
0x40056df	     0xf841a010000	                            je 0x40057ff	      3404	getchar.c	FUNCTION_66	IF_16	IF_18
0x40056e5	    0x8b0500000000	            mov eax, dword [0x040056eb] 	      3413	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19
0x40056eb	            0x85c0	                           test eax, eax	      3413	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19
0x40056ed	     0xf84d2080000	                            je 0x4005fc5	      3413	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19
0x40056f3	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      3418	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	CALL_24
0x40056f8	    0x41bf01000000	                             mov r15d, 1	      3422	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x40056fe	          0x4889df	                            mov rdi, rbx	      3418	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	CALL_24
0x4005701	      0xe800000000	                          call 0x4005706	      3418	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	CALL_24
0x4005706	          0x4889df	                            mov rdi, rbx	      3420	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19
0x4005709	        0x89442440	             mov dword [rsp + 0x40], eax	      3418	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	CALL_24
0x400570d	    0xff1500000000	                 call qword [0x04005713]	      3420	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19
0x4005713	          0x4863d0	                         movsxd rdx, eax	      3420	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19
0x4005716	      0x4863442420	         movsxd rax, dword [rsp + 0x20] 	      3422	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x400571b	          0x4889de	                            mov rsi, rbx	      3420	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19
0x400571e	        0x488d1c13	                    lea rbx, [rbx + rdx]	      3420	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19
0x4005722	    0xc7442410ffff	     mov dword [rsp + 0x10], 0xffffffff 	      3422	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x400572a	          0x4989de	                            mov r14, rbx	      3422	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x400572d	          0x4889c7	                            mov rdi, rax	      3422	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4005730	          0x4801f7	                            add rdi, rsi	      3422	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4005733	          0x4839fb	                            cmp rbx, rdi	      3422	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4005736	      0x48897c2438	             mov qword [rsp + 0x38], rdi	      3422	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x400573b	            0x7208	                            jb 0x4005745	      3422	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x400573d	            0xeb65	                           jmp 0x40057a4	      3422	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x400573f	              0x90	                                     nop	      3422	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4005740	      0x448b7c2434	           mov r15d, dword [rsp + 0x34] 	      3424	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4005745	        0x418d4701	                      lea eax, [r15 + 1]	      3424	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4005749	          0x4c89f7	                            mov rdi, r14	      3425	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2	CALL_25
0x400574c	        0x89442434	             mov dword [rsp + 0x34], eax	      3424	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4005750	      0xe800000000	                          call 0x4005755	      3425	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2	CALL_25
0x4005755	            0x89c3	                            mov ebx, eax	      3425	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2	CALL_25
0x4005757	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      3426	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2	IF_20
0x400575b	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3426	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2	IF_20
0x400575e	            0x750c	                           jne 0x400576c	      3426	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2	IF_20
0x4005760	        0x395c2440	            cmp dword [rsp + 0x40], ebx 	      3426	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2	IF_20
0x4005764	        0x410f45c7	                        cmovne eax, r15d	      3426	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2	IF_20
0x4005768	        0x89442410	             mov dword [rsp + 0x10], eax	      3426	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2	IF_20
0x400576c	          0x4c89f7	                            mov rdi, r14	      3428	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x400576f	    0xff1500000000	                 call qword [0x04005775]	      3428	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4005775	            0x4898	                                    cdqe	      3428	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4005777	          0x4901c6	                            add r14, rax	      3428	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x400577a	      0x4c3b742438	            cmp r14, qword [rsp + 0x38] 	      3422	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x400577f	            0x72bf	                            jb 0x4005740	      3422	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4005781	            0x85db	                           test ebx, ebx	      3430	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	IF_21
0x4005783	           0xf95c2	                                setne dl	      3430	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	IF_21
0x4005786	      0x837c243402	               cmp dword [rsp + 0x34], 2	      3430	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	IF_21
0x400578b	           0xf9fc0	                                 setg al	      3430	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	IF_21
0x400578e	            0x84c2	                             test dl, al	      3430	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	IF_21
0x4005790	            0x7412	                            je 0x40057a4	      3430	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	IF_21
0x4005792	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      3430	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	IF_21
0x4005796	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3430	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	IF_21
0x4005799	            0x7409	                            je 0x40057a4	      3430	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	IF_21
0x400579b	          0x4439f8	                           cmp eax, r15d	      3430	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	IF_21
0x400579e	     0xf8cd2fdffff	                            jl 0x4005576	      3430	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	IF_21
0x40057a4	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      3446	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3
0x40057a8	            0x85c0	                           test eax, eax	      3446	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3
0x40057aa	            0x7e53	                           jle 0x40057ff	      3446	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3
0x40057ac	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x40057b1	           0xfb600	                   movzx eax, byte [rax]	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x40057b4	            0x3c09	                               cmp al, 9	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x40057b6	     0xf84bafdffff	                            je 0x4005576	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x40057bc	            0x3c20	                            cmp al, 0x20	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x40057be	     0xf84b2fdffff	                            je 0x4005576	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x40057c4	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x40057c9	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x40057ce	          0x83e901	                              sub ecx, 1	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x40057d1	          0x4889d8	                            mov rax, rbx	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x40057d4	          0x4801d9	                            add rcx, rbx	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x40057d7	            0xeb21	                           jmp 0x40057fa	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x40057d9	     0xf1f80000000	                         nop dword [rax]	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x40057e0	         0xfb65001	               movzx edx, byte [rax + 1]	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x40057e4	        0x4883c001	                              add rax, 1	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x40057e8	          0x80fa20	                            cmp dl, 0x20	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x40057eb	     0xf8485fdffff	                            je 0x4005576	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x40057f1	          0x80fa09	                               cmp dl, 9	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x40057f4	     0xf847cfdffff	                            je 0x4005576	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x40057fa	          0x4839c8	                            cmp rax, rcx	      3446	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3
0x40057fd	            0x75e1	                           jne 0x40057e0	      3446	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3
0x40057ff	          0x4084ed	                           test bpl, bpl	      3455	getchar.c	FUNCTION_66	IF_25
0x4005802	     0xf84e4090000	                            je 0x40061ec	      3455	getchar.c	FUNCTION_66	IF_25
0x4005808	        0x8b442430	            mov eax, dword [rsp + 0x30] 	      3455	getchar.c	FUNCTION_66	IF_25
0x400580c	            0x85c0	                           test eax, eax	      3455	getchar.c	FUNCTION_66	IF_25
0x400580e	     0xf8451010000	                            je 0x4005965	      3455	getchar.c	FUNCTION_66	IF_25
0x4005814	      0x807c244900	                cmp byte [rsp + 0x49], 0	      3459	getchar.c	FUNCTION_66	IF_26
0x4005819	    0xc70500000000	               mov dword [0x04005823], 0	      3456	getchar.c	FUNCTION_66	IF_25
0x4005823	           0xf94c3	                                 sete bl	      3459	getchar.c	FUNCTION_66	IF_26
0x4005826	        0x225c2408	                  and bl, byte [rsp + 8]	      3459	getchar.c	FUNCTION_66	IF_26
0x400582a	     0xf8447010000	                            je 0x4005977	      3459	getchar.c	FUNCTION_66	IF_26
0x4005830	      0xe800000000	                          call 0x4005835	      3460	getchar.c	FUNCTION_66	CALL_30
0x4005835	    0x488b05000000	            mov rax, qword [0x0400583c] 	      3466	getchar.c	FUNCTION_66	IF_27
0x400583c	    0x4805c0090000	                          add rax, 0x9c0	      3466	getchar.c	FUNCTION_66	IF_27
0x4005842	      0x4839442428	            cmp qword [rsp + 0x28], rax 	      3466	getchar.c	FUNCTION_66	IF_27
0x4005847	     0xf8448080000	                            je 0x4006095	      3466	getchar.c	FUNCTION_66	IF_27
0x400584d	      0x807c244900	                cmp byte [rsp + 0x49], 0	      3503	getchar.c	FUNCTION_66	IF_32
0x4005852	     0xf8537010000	                           jne 0x400598f	      3503	getchar.c	FUNCTION_66	IF_32
0x4005858	            0x84db	                             test bl, bl	      3503	getchar.c	FUNCTION_66	IF_32
0x400585a	     0xf842f010000	                            je 0x400598f	      3503	getchar.c	FUNCTION_66	IF_32
0x4005860	       0xfb66c2407	               movzx ebp, byte [rsp + 7]	      3503	getchar.c	FUNCTION_66	IF_32
0x4005865	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	      3503	getchar.c	FUNCTION_66	IF_32
0x400586a	      0xbb01000000	                              mov ebx, 1	      3503	getchar.c	FUNCTION_66	IF_32
0x400586f	    0xc744244c0000	               mov dword [rsp + 0x4c], 0	      3503	getchar.c	FUNCTION_66	IF_32
0x4005877	    0x660f1f840000	                    nop word [rax + rax]	      3503	getchar.c	FUNCTION_66	IF_32
0x4005880	    0x8b1500000000	            mov edx, dword [0x04005886] 	      3506	getchar.c	FUNCTION_66	IF_32	FOR_6
0x4005886	          0x8d43ff	                      lea eax, [rbx - 1]	      3506	getchar.c	FUNCTION_66	IF_32	FOR_6
0x4005889	            0x85d2	                           test edx, edx	      3506	getchar.c	FUNCTION_66	IF_32	FOR_6
0x400588b	     0xf8506010000	                           jne 0x4005997	      3506	getchar.c	FUNCTION_66	IF_32	FOR_6
0x4005891	      0x448b7c2430	           mov r15d, dword [rsp + 0x30] 	      3508	getchar.c	FUNCTION_66	IF_32	FOR_6	IF_33
0x4005896	          0x4585ff	                         test r15d, r15d	      3508	getchar.c	FUNCTION_66	IF_32	FOR_6	IF_33
0x4005899	     0xf8469060000	                            je 0x4005f08	      3508	getchar.c	FUNCTION_66	IF_32	FOR_6	IF_33
0x400589f	            0x85c0	                           test eax, eax	      3510	getchar.c	FUNCTION_66	IF_32	FOR_6	IF_33	IF_34
0x40058a1	     0xf85f0000000	                           jne 0x4005997	      3510	getchar.c	FUNCTION_66	IF_32	FOR_6	IF_33	IF_34
0x40058a7	    0x488b05000000	            mov rax, qword [0x040058ae] 	      3512	getchar.c	FUNCTION_66	IF_32	FOR_6	IF_33
0x40058ae	    0x4c8bb8c01100	          mov r15, qword [rax + 0x11c0] 	      3512	getchar.c	FUNCTION_66	IF_32	FOR_6	IF_33
0x40058b5	          0x4d85ff	                           test r15, r15	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x40058b8	            0x752d	                           jne 0x40058e7	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x40058ba	            0xeb6c	                           jmp 0x4005928	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x40058bc	         0xf1f4000	                         nop dword [rax]	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x40058c0	        0x45396720	           cmp dword [r15 + 0x20], r12d 	      3529	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7	IF_35	ELSE_7	IF_37	CALL_37
0x40058c4	          0x4489e2	                           mov edx, r12d	      3529	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7	IF_35	ELSE_7	IF_37	CALL_37
0x40058c7	        0x498b7f08	                mov rdi, qword [r15 + 8]	      3529	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7	IF_35	ELSE_7	IF_37	CALL_37
0x40058cb	      0x410f4e5720	          cmovle edx, dword [r15 + 0x20]	      3529	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7	IF_35	ELSE_7	IF_37	CALL_37
0x40058d0	          0x4c89f6	                            mov rsi, r14	      3529	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7	IF_35	ELSE_7	IF_37	CALL_37
0x40058d3	          0x4863d2	                         movsxd rdx, edx	      3529	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7	IF_35	ELSE_7	IF_37	CALL_37
0x40058d6	      0xe800000000	                          call 0x40058db	      3529	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7	IF_35	ELSE_7	IF_37	CALL_37
0x40058db	            0x85c0	                           test eax, eax	      3529	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7	IF_35	ELSE_7	IF_37	CALL_37
0x40058dd	            0x741d	                            je 0x40058fc	      3529	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7	IF_35	ELSE_7	IF_37	CALL_37
0x40058df	          0x4d8b3f	                    mov r15, qword [r15]	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x40058e2	          0x4d85ff	                           test r15, r15	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x40058e5	            0x7439	                            je 0x4005920	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x40058e7	    0x8b0500000000	            mov eax, dword [0x040058ed] 	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x40058ed	            0x85c0	                           test eax, eax	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x40058ef	            0x752f	                           jne 0x4005920	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x40058f1	        0x45856f24	          test dword [r15 + 0x24], r13d 	      3519	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7	IF_35
0x40058f5	            0x74e8	                            je 0x40058df	      3519	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7	IF_35
0x40058f7	          0x4084ed	                           test bpl, bpl	      3521	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7	IF_35	IF_36
0x40058fa	            0x74c4	                            je 0x40058c0	      3521	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7	IF_35	IF_36
0x40058fc	          0x4c89ff	                            mov rdi, r15	      3532	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7	IF_35	ELSE_7	IF_37	CALL_38
0x40058ff	      0xbe01000000	                              mov esi, 1	      3532	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7	IF_35	ELSE_7	IF_37	CALL_38
0x4005904	      0xe867f8ffff	                        call sym.showmap	      3532	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7	IF_35	ELSE_7	IF_37	CALL_38
0x4005909	          0x4d8b3f	                    mov r15, qword [r15]	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x400590c	    0xc744244c0100	               mov dword [rsp + 0x4c], 1	      3533	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7	IF_35	ELSE_7	IF_37
0x4005914	          0x4d85ff	                           test r15, r15	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x4005917	            0x75ce	                           jne 0x40058e7	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x4005919	     0xf1f80000000	                         nop dword [rax]	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x4005920	    0x81fb00010000	                          cmp ebx, 0x100	      3506	getchar.c	FUNCTION_66	IF_32	FOR_6
0x4005926	            0x746f	                            je 0x4005997	      3506	getchar.c	FUNCTION_66	IF_32	FOR_6
0x4005928	          0x83c301	                              add ebx, 1	      3506	getchar.c	FUNCTION_66	IF_32	FOR_6
0x400592b	      0xe950ffffff	                           jmp 0x4005880	      3506	getchar.c	FUNCTION_66	IF_32	FOR_6
0x4005930	        0x488d7808	                      lea rdi, [rax + 8]	      3326	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_8	CALL_14
0x4005934	      0xe800000000	                          call 0x4005939	      3326	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_8	CALL_14
0x4005939	    0xc744245c0100	               mov dword [rsp + 0x5c], 1	      3327	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_8
0x4005941	      0xe98afaffff	                           jmp 0x40053d0	      3328	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_8
0x4005946	          0x83fb01	                              cmp ebx, 1	      3328	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_8
0x4005949	           0xf95c3	                                setne bl	      3328	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_8
0x400594c	          0x4531e4	                          xor r12d, r12d	      3216	getchar.c	FUNCTION_66
0x400594f	            0x31ed	                            xor ebp, ebp	      3216	getchar.c	FUNCTION_66
0x4005951	      0x807c240700	                   cmp byte [rsp + 7], 0	      3459	getchar.c	FUNCTION_66	IF_26
0x4005956	     0xf85d4feffff	                           jne 0x4005830	      3459	getchar.c	FUNCTION_66	IF_26
0x400595c	       0xfb66c2407	               movzx ebp, byte [rsp + 7]	      3459	getchar.c	FUNCTION_66	IF_26
0x4005961	        0x885c2408	                  mov byte [rsp + 8], bl	      3459	getchar.c	FUNCTION_66	IF_26
0x4005965	      0x807c244900	                cmp byte [rsp + 0x49], 0	      3459	getchar.c	FUNCTION_66	IF_26
0x400596a	           0xf94c3	                                 sete bl	      3459	getchar.c	FUNCTION_66	IF_26
0x400596d	        0x225c2408	                  and bl, byte [rsp + 8]	      3459	getchar.c	FUNCTION_66	IF_26
0x4005971	     0xf85b9feffff	                           jne 0x4005830	      3459	getchar.c	FUNCTION_66	IF_26
0x4005977	    0x488b05000000	            mov rax, qword [0x0400597e] 	      3466	getchar.c	FUNCTION_66	IF_27
0x400597e	    0x4805c0090000	                          add rax, 0x9c0	      3466	getchar.c	FUNCTION_66	IF_27
0x4005984	      0x4839442428	            cmp qword [rsp + 0x28], rax 	      3466	getchar.c	FUNCTION_66	IF_27
0x4005989	     0xf8401070000	                            je 0x4006090	      3466	getchar.c	FUNCTION_66	IF_27
0x400598f	    0xc744244c0000	               mov dword [rsp + 0x4c], 0	      3222	getchar.c	FUNCTION_66
0x4005997	    0x8b0500000000	            mov eax, dword [0x0400599d] 	      3551	getchar.c	FUNCTION_66	FOR_8
0x400599d	            0x85c0	                           test eax, eax	      3551	getchar.c	FUNCTION_66	FOR_8
0x400599f	     0xf85f3020000	                           jne 0x4005c98	      3551	getchar.c	FUNCTION_66	FOR_8
0x40059a5	          0x4489e8	                           mov eax, r13d	      3632	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15
0x40059a8	      0xc644244a00	                mov byte [rsp + 0x4a], 0	      3551	getchar.c	FUNCTION_66	FOR_8
0x40059ad	    0xc74424100000	               mov dword [rsp + 0x10], 0	      3551	getchar.c	FUNCTION_66	FOR_8
0x40059b5	            0xf7d0	                                 not eax	      3632	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15
0x40059b7	      0x4489642408	               mov dword [rsp + 8], r12d	      3632	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15
0x40059bc	        0x89442458	             mov dword [rsp + 0x58], eax	      3632	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15
0x40059c0	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      3632	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15
0x40059c5	    0xc74424340100	               mov dword [rsp + 0x34], 1	      3551	getchar.c	FUNCTION_66	FOR_8
0x40059cd	    0xc74424200000	               mov dword [rsp + 0x20], 0	      3551	getchar.c	FUNCTION_66	FOR_8
0x40059d5	      0x4889442440	             mov qword [rsp + 0x40], rax	      3551	getchar.c	FUNCTION_66	FOR_8
0x40059da	       0xfb644244a	           movzx eax, byte [rsp + 0x4a] 	      3597	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45
0x40059df	          0x83e001	                              and eax, 1	      3597	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45
0x40059e2	        0x8844244b	               mov byte [rsp + 0x4b], al	      3597	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45
0x40059e6	        0x8b442434	            mov eax, dword [rsp + 0x34] 	      3597	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45
0x40059ea	          0x83e801	                              sub eax, 1	      3597	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45
0x40059ed	        0x89442438	             mov dword [rsp + 0x38], eax	      3597	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45
0x40059f1	    0x8b0500000000	            mov eax, dword [0x040059f7] 	      3554	getchar.c	FUNCTION_66	FOR_8	FOR_9
0x40059f7	            0x85c0	                           test eax, eax	      3554	getchar.c	FUNCTION_66	FOR_8	FOR_9
0x40059f9	     0xf8551020000	                           jne 0x4005c50	      3554	getchar.c	FUNCTION_66	FOR_8	FOR_9
0x40059ff	      0x448b742430	           mov r14d, dword [rsp + 0x30] 	      3556	getchar.c	FUNCTION_66	FOR_8	FOR_9	IF_38
0x4005a04	          0x4585f6	                         test r14d, r14d	      3556	getchar.c	FUNCTION_66	FOR_8	FOR_9	IF_38
0x4005a07	     0xf8423020000	                            je 0x4005c30	      3556	getchar.c	FUNCTION_66	FOR_8	FOR_9	IF_38
0x4005a0d	      0x448b642438	           mov r12d, dword [rsp + 0x38] 	      3558	getchar.c	FUNCTION_66	FOR_8	FOR_9	IF_38	IF_39
0x4005a12	          0x4585e4	                         test r12d, r12d	      3558	getchar.c	FUNCTION_66	FOR_8	FOR_9	IF_38	IF_39
0x4005a15	     0xf8535020000	                           jne 0x4005c50	      3558	getchar.c	FUNCTION_66	FOR_8	FOR_9	IF_38	IF_39
0x4005a1b	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005a20	          0x4c8b30	                    mov r14, qword [rax]	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005a23	          0x4989c7	                            mov r15, rax	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005a26	          0x4d85f6	                           test r14, r14	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005a29	     0xf84ab010000	                            je 0x4005bda	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005a2f	    0x8b0500000000	            mov eax, dword [0x04005a35] 	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005a35	            0x85c0	                           test eax, eax	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005a37	     0xf8593010000	                           jne 0x4005bd0	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005a3d	          0x4c89f0	                            mov rax, r14	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005a40	          0x4d89fe	                            mov r14, r15	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005a43	          0x4989c7	                            mov r15, rax	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005a46	            0xeb75	                           jmp 0x4005abd	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005a48	     0xf1f84000000	                   nop dword [rax + rax]	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005a50	          0x4889df	                            mov rdi, rbx	      3581	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_42	CALL_40
0x4005a53	      0xe800000000	                          call 0x4005a58	      3581	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_42	CALL_40
0x4005a58	          0x4863e8	                         movsxd rbp, eax	      3581	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_42	CALL_40
0x4005a5b	        0x8b442408	                mov eax, dword [rsp + 8]	      3589	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	CALL_41
0x4005a5f	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      3589	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	CALL_41
0x4005a64	          0x4889df	                            mov rdi, rbx	      3589	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	CALL_41
0x4005a67	            0x39c5	                            cmp ebp, eax	      3589	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	CALL_41
0x4005a69	          0x4863d0	                         movsxd rdx, eax	      3589	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	CALL_41
0x4005a6c	        0x480f4ed5	                         cmovle rdx, rbp	      3589	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	CALL_41
0x4005a70	      0xe800000000	                          call 0x4005a75	      3589	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	CALL_41
0x4005a75	            0x85c0	                           test eax, eax	      3589	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	CALL_41
0x4005a77	            0x7527	                           jne 0x4005aa0	      3589	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	CALL_41
0x4005a79	      0x807c244800	                cmp byte [rsp + 0x48], 0	      3591	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44
0x4005a7e	     0xf8594000000	                           jne 0x4005b18	      3591	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44
0x4005a84	      0x807c244900	                cmp byte [rsp + 0x49], 0	      3610	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_11	IF_46
0x4005a89	     0xf8461010000	                            je 0x4005bf0	      3610	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_11	IF_46
0x4005a8f	        0x3b6c2408	                cmp ebp, dword [rsp + 8]	      3615	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_12	IF_47
0x4005a93	     0xf8407030000	                            je 0x4005da0	      3615	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_12	IF_47
0x4005a99	     0xf1f80000000	                         nop dword [rax]	      3615	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_12	IF_47
0x4005aa0	          0x4d89fe	                            mov r14, r15	      3676	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005aa3	          0x4d8b3e	                    mov r15, qword [r14]	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005aa6	          0x4d85ff	                           test r15, r15	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005aa9	     0xf8421010000	                            je 0x4005bd0	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005aaf	    0x8b0500000000	            mov eax, dword [0x04005ab5] 	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005ab5	            0x85c0	                           test eax, eax	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005ab7	     0xf8513010000	                           jne 0x4005bd0	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005abd	        0x458b6724	           mov r12d, dword [r15 + 0x24] 	      3567	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	IF_40
0x4005ac1	          0x4585e5	                         test r13d, r12d	      3567	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	IF_40
0x4005ac4	            0x74da	                            je 0x4005aa0	      3567	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	IF_40
0x4005ac6	      0x807c240700	                   cmp byte [rsp + 7], 0	      3572	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	IF_41
0x4005acb	            0x7523	                           jne 0x4005af0	      3572	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	IF_41
0x4005acd	        0x8b6c2410	            mov ebp, dword [rsp + 0x10] 	      3579	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_42
0x4005ad1	        0x498b4708	                mov rax, qword [r15 + 8]	      3587	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	ELSE_10
0x4005ad5	        0x498b5f10	            mov rbx, qword [r15 + 0x10] 	      3581	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_42	CALL_40
0x4005ad9	            0x85ed	                           test ebp, ebp	      3579	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_42
0x4005adb	     0xf856fffffff	                           jne 0x4005a50	      3579	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_42
0x4005ae1	        0x49636f20	         movsxd rbp, dword [r15 + 0x20] 	      3586	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	ELSE_10
0x4005ae5	          0x4889c3	                            mov rbx, rax	      3587	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	ELSE_10
0x4005ae8	      0xe96effffff	                           jmp 0x4005a5b	      3587	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	ELSE_10
0x4005aed	           0xf1f00	                         nop dword [rax]	      3587	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	ELSE_10
0x4005af0	            0x31f6	                            xor esi, esi	      3574	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	IF_41	CALL_39
0x4005af2	    0x48817c242800	               cmp qword [rsp + 0x28], 0	      3574	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	IF_41	CALL_39
0x4005afb	          0x4c89ff	                            mov rdi, r15	      3574	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	IF_41	CALL_39
0x4005afe	        0x400f95c6	                               setne sil	      3574	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	IF_41	CALL_39
0x4005b02	      0xe869f6ffff	                        call sym.showmap	      3574	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	IF_41	CALL_39
0x4005b07	    0xc74424200100	               mov dword [rsp + 0x20], 1	      3575	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	IF_41
0x4005b0f	            0xeb8f	                           jmp 0x4005aa0	      3575	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	IF_41
0x4005b11	     0xf1f80000000	                         nop dword [rax]	      3575	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	IF_41
0x4005b18	        0x8b5c2408	                mov ebx, dword [rsp + 8]	      3597	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45
0x4005b1c	            0x39dd	                            cmp ebp, ebx	      3597	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45
0x4005b1e	            0x7440	                            je 0x4005b60	      3597	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45
0x4005b20	      0x448b5c2430	           mov r11d, dword [rsp + 0x30] 	      3597	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45
0x4005b25	          0x4585db	                         test r11d, r11d	      3597	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45
0x4005b28	           0xf94c0	                                 sete al	      3597	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45
0x4005b2b	         0xa44244b	                or al, byte [rsp + 0x4b]	      3597	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45
0x4005b2f	     0xf856bffffff	                           jne 0x4005aa0	      3597	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45
0x4005b35	            0x39dd	                            cmp ebp, ebx	      3597	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45
0x4005b37	     0xf8f63ffffff	                            jg 0x4005aa0	      3597	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45
0x4005b3d	          0x4863fd	                         movsxd rdi, ebp	      3598	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45	CALL_42
0x4005b40	      0x48037c2418	             add rdi, qword [rsp + 0x18]	      3598	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45	CALL_42
0x4005b45	      0xe800000000	                          call 0x4005b4a	      3598	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45	CALL_42
0x4005b4a	          0x803800	                       cmp byte [rax], 0	      3598	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45	CALL_42
0x4005b4d	     0xf854dffffff	                           jne 0x4005aa0	      3598	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45	CALL_42
0x4005b53	        0x458b6724	           mov r12d, dword [r15 + 0x24] 	      3598	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45	CALL_42
0x4005b57	    0x660f1f840000	                    nop word [rax + rax]	      3598	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45	CALL_42
0x4005b60	      0x448b442458	            mov r8d, dword [rsp + 0x58] 	      3607	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44
0x4005b65	    0xc74424200100	               mov dword [rsp + 0x20], 1	      3608	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44
0x4005b6d	          0x4521e0	                           and r8d, r12d	      3607	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44
0x4005b70	        0x45894724	             mov dword [r15 + 0x24], r8d	      3607	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44
0x4005b74	          0x4585c0	                           test r8d, r8d	      3656	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_52
0x4005b77	     0xf849f000000	                            je 0x4005c1c	      3656	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_52
0x4005b7d	    0x4181e0073000	                         and r8d, 0x3007	      3665	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43
0x4005b84	        0x498b4708	                mov rax, qword [r15 + 8]	      3665	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43
0x4005b88	     0xf8402020000	                            je 0x4005d90	      3665	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43
0x4005b8e	           0xfb600	                   movzx eax, byte [rax]	      3665	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43
0x4005b91	      0x448b442430	            mov r8d, dword [rsp + 0x30] 	      3666	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_53
0x4005b96	          0x4585c0	                           test r8d, r8d	      3666	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_53
0x4005b99	     0xf8501ffffff	                           jne 0x4005aa0	      3666	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_53
0x4005b9f	        0x3b442438	            cmp eax, dword [rsp + 0x38] 	      3666	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_53
0x4005ba3	     0xf84f7feffff	                            je 0x4005aa0	      3666	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_53
0x4005ba9	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      3669	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_53
0x4005bae	          0x498b17	                    mov rdx, qword [r15]	      3668	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_53
0x4005bb1	        0x488d04c6	                  lea rax, [rsi + rax*8]	      3669	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_53
0x4005bb5	          0x498916	                    mov qword [r14], rdx	      3668	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_53
0x4005bb8	          0x488b10	                    mov rdx, qword [rax]	      3669	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_53
0x4005bbb	          0x498917	                    mov qword [r15], rdx	      3669	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_53
0x4005bbe	          0x4c8938	                    mov qword [rax], r15	      3670	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_53
0x4005bc1	          0x4d8b3e	                    mov r15, qword [r14]	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005bc4	          0x4d85ff	                           test r15, r15	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005bc7	     0xf85e2feffff	                           jne 0x4005aaf	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005bcd	           0xf1f00	                         nop dword [rax]	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005bd0	    0x817c24340001	          cmp dword [rsp + 0x34], 0x100 	      3554	getchar.c	FUNCTION_66	FOR_8	FOR_9
0x4005bd8	            0x7476	                            je 0x4005c50	      3554	getchar.c	FUNCTION_66	FOR_8	FOR_9
0x4005bda	      0x8344243401	               add dword [rsp + 0x34], 1	      3554	getchar.c	FUNCTION_66	FOR_8	FOR_9
0x4005bdf	    0x488344244008	               add qword [rsp + 0x40], 8	      3554	getchar.c	FUNCTION_66	FOR_8	FOR_9
0x4005be5	      0xe9fcfdffff	                           jmp 0x40059e6	      3554	getchar.c	FUNCTION_66	FOR_8	FOR_9
0x4005bea	    0x660f1f440000	                    nop word [rax + rax]	      3554	getchar.c	FUNCTION_66	FOR_8	FOR_9
0x4005bf0	            0x31f6	                            xor esi, esi	      3612	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_11	IF_46	CALL_43
0x4005bf2	    0x48817c242800	               cmp qword [rsp + 0x28], 0	      3612	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_11	IF_46	CALL_43
0x4005bfb	          0x4c89ff	                            mov rdi, r15	      3612	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_11	IF_46	CALL_43
0x4005bfe	        0x400f95c6	                               setne sil	      3612	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_11	IF_46	CALL_43
0x4005c02	      0xe869f5ffff	                        call sym.showmap	      3612	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_11	IF_46	CALL_43
0x4005c07	        0x458b4724	            mov r8d, dword [r15 + 0x24] 	      3612	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_11	IF_46	CALL_43
0x4005c0b	    0xc74424200100	               mov dword [rsp + 0x20], 1	      3613	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_11	IF_46
0x4005c13	          0x4585c0	                           test r8d, r8d	      3656	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_52
0x4005c16	     0xf8561ffffff	                           jne 0x4005b7d	      3656	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_52
0x4005c1c	          0x4c89f7	                            mov rdi, r14	      3658	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_52	CALL_52
0x4005c1f	      0xe81ca4ffff	                       call sym.map_free	      3658	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_52	CALL_52
0x4005c24	      0xe97afeffff	                           jmp 0x4005aa3	      3659	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_52
0x4005c29	     0xf1f80000000	                         nop dword [rax]	      3659	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_52
0x4005c30	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      3563	getchar.c	FUNCTION_66	FOR_8	FOR_9	ELSE_8
0x4005c35	          0x4c8b30	                    mov r14, qword [rax]	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005c38	          0x4989c7	                            mov r15, rax	      3563	getchar.c	FUNCTION_66	FOR_8	FOR_9	ELSE_8
0x4005c3b	          0x4d85f6	                           test r14, r14	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005c3e	     0xf85ebfdffff	                           jne 0x4005a2f	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005c44	    0x817c24340001	          cmp dword [rsp + 0x34], 0x100 	      3554	getchar.c	FUNCTION_66	FOR_8	FOR_9
0x4005c4c	            0x758c	                           jne 0x4005bda	      3554	getchar.c	FUNCTION_66	FOR_8	FOR_9
0x4005c4e	            0x6690	                                     nop	      3554	getchar.c	FUNCTION_66	FOR_8	FOR_9
0x4005c50	      0x8344241001	               add dword [rsp + 0x10], 1	      3551	getchar.c	FUNCTION_66	FOR_8
0x4005c55	      0x807c244800	                cmp byte [rsp + 0x48], 0	      3550	getchar.c	FUNCTION_66	FOR_8
0x4005c5a	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      3551	getchar.c	FUNCTION_66	FOR_8
0x4005c5e	     0xf8403030000	                            je 0x4005f67	      3550	getchar.c	FUNCTION_66	FOR_8
0x4005c64	          0x83f801	                              cmp eax, 1	      3551	getchar.c	FUNCTION_66	FOR_8
0x4005c67	     0xf8fef020000	                            jg 0x4005f5c	      3551	getchar.c	FUNCTION_66	FOR_8
0x4005c6d	        0x8b7c2420	            mov edi, dword [rsp + 0x20] 	      3551	getchar.c	FUNCTION_66	FOR_8
0x4005c71	            0x85ff	                           test edi, edi	      3551	getchar.c	FUNCTION_66	FOR_8
0x4005c73	     0xf85e3020000	                           jne 0x4005f5c	      3551	getchar.c	FUNCTION_66	FOR_8
0x4005c79	      0x8044244a01	                add byte [rsp + 0x4a], 1	      3551	getchar.c	FUNCTION_66	FOR_8
0x4005c7e	    0x8b0500000000	            mov eax, dword [0x04005c84] 	      3551	getchar.c	FUNCTION_66	FOR_8
0x4005c84	       0xfb65c244a	           movzx ebx, byte [rsp + 0x4a] 	      3551	getchar.c	FUNCTION_66	FOR_8
0x4005c89	          0x83e301	                              and ebx, 1	      3551	getchar.c	FUNCTION_66	FOR_8
0x4005c8c	            0x85c0	                           test eax, eax	      3551	getchar.c	FUNCTION_66	FOR_8
0x4005c8e	        0x885c244a	               mov byte [rsp + 0x4a], bl	      3551	getchar.c	FUNCTION_66	FOR_8
0x4005c92	     0xf8428fdffff	                            je 0x40059c0	      3551	getchar.c	FUNCTION_66	FOR_8
0x4005c98	      0x807c244800	                cmp byte [rsp + 0x48], 0	      3681	getchar.c	FUNCTION_66	IF_54
0x4005c9d	     0xf859d030000	                           jne 0x4006040	      3681	getchar.c	FUNCTION_66	IF_54
0x4005ca3	      0x807c244900	                cmp byte [rsp + 0x49], 0	      3698	getchar.c	FUNCTION_66	ELSE_17	IF_58
0x4005ca8	     0xf8413020000	                            je 0x4005ec1	      3698	getchar.c	FUNCTION_66	ELSE_17	IF_58
0x4005cae	      0x807c240700	                   cmp byte [rsp + 7], 0	      3698	getchar.c	FUNCTION_66	ELSE_17	IF_58
0x4005cb3	     0xf8508020000	                           jne 0x4005ec1	      3698	getchar.c	FUNCTION_66	ELSE_17	IF_58
0x4005cb9	      0xbf38000000	                           mov edi, 0x38	      3720	getchar.c	FUNCTION_66	CALL_57
0x4005cbe	      0xe800000000	                          call 0x4005cc3	      3720	getchar.c	FUNCTION_66	CALL_57
0x4005cc3	          0x4885c0	                           test rax, rax	      3721	getchar.c	FUNCTION_66	IF_62
0x4005cc6	          0x4889c3	                            mov rbx, rax	      3720	getchar.c	FUNCTION_66	CALL_57
0x4005cc9	     0xf84e8010000	                            je 0x4005eb7	      3721	getchar.c	FUNCTION_66	IF_62
0x4005ccf	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3728	getchar.c	FUNCTION_66	IF_63
0x4005cd4	          0x803803	                       cmp byte [rax], 3	      3728	getchar.c	FUNCTION_66	IF_63
0x4005cd7	     0xf84b4040000	                            je 0x4006191	      3728	getchar.c	FUNCTION_66	IF_63
0x4005cdd	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      3738	getchar.c	FUNCTION_66	CALL_58
0x4005ce2	      0xe800000000	                          call 0x4005ce7	      3738	getchar.c	FUNCTION_66	CALL_58
0x4005ce7	      0x488b7c2478	            mov rdi, qword [rsp + 0x78] 	      3739	getchar.c	FUNCTION_66	CALL_59
0x4005cec	        0x48894308	                mov qword [rbx + 8], rax	      3738	getchar.c	FUNCTION_66	CALL_58
0x4005cf0	      0xe800000000	                          call 0x4005cf5	      3739	getchar.c	FUNCTION_66	CALL_59
0x4005cf5	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      3740	getchar.c	FUNCTION_66	CALL_60
0x4005cfa	        0x48894310	             mov qword [rbx + 0x10], rax	      3739	getchar.c	FUNCTION_66	CALL_59
0x4005cfe	      0xe800000000	                          call 0x4005d03	      3740	getchar.c	FUNCTION_66	CALL_60
0x4005d03	        0x488b6b08	                mov rbp, qword [rbx + 8]	      3741	getchar.c	FUNCTION_66	IF_65
0x4005d07	        0x48894318	             mov qword [rbx + 0x18], rax	      3740	getchar.c	FUNCTION_66	CALL_60
0x4005d0b	          0x4885ed	                           test rbp, rbp	      3741	getchar.c	FUNCTION_66	IF_65
0x4005d0e	          0x4889ef	                            mov rdi, rbp	      3743	getchar.c	FUNCTION_66	IF_65	CALL_61
0x4005d11	     0xf8481010000	                            je 0x4005e98	      3741	getchar.c	FUNCTION_66	IF_65
0x4005d17	      0x48837b1000	               cmp qword [rbx + 0x10], 0	      3741	getchar.c	FUNCTION_66	IF_65
0x4005d1c	     0xf8476010000	                            je 0x4005e98	      3741	getchar.c	FUNCTION_66	IF_65
0x4005d22	      0xe800000000	                          call 0x4005d27	      3750	getchar.c	FUNCTION_66	CALL_65
0x4005d27	          0x894320	             mov dword [rbx + 0x20], eax	      3750	getchar.c	FUNCTION_66	CALL_65
0x4005d2a	        0x8b442470	            mov eax, dword [rsp + 0x70] 	      3751	getchar.c	FUNCTION_66
0x4005d2e	        0x44896b24	            mov dword [rbx + 0x24], r13d	      3754	getchar.c	FUNCTION_66
0x4005d32	          0x894328	             mov dword [rbx + 0x28], eax	      3751	getchar.c	FUNCTION_66
0x4005d35	       0xfb6442460	           movzx eax, byte [rsp + 0x60] 	      3752	getchar.c	FUNCTION_66
0x4005d3a	          0x88432d	               mov byte [rbx + 0x2d], al	      3752	getchar.c	FUNCTION_66
0x4005d3d	       0xfb6442464	           movzx eax, byte [rsp + 0x64] 	      3753	getchar.c	FUNCTION_66
0x4005d42	          0x88432c	               mov byte [rbx + 0x2c], al	      3753	getchar.c	FUNCTION_66
0x4005d45	       0xfb6442474	           movzx eax, byte [rsp + 0x74] 	      3756	getchar.c	FUNCTION_66
0x4005d4a	          0x88432e	               mov byte [rbx + 0x2e], al	      3756	getchar.c	FUNCTION_66
0x4005d4d	    0x8b0500000000	            mov eax, dword [0x04005d53] 	      3757	getchar.c	FUNCTION_66
0x4005d53	          0x894330	             mov dword [rbx + 0x30], eax	      3757	getchar.c	FUNCTION_66
0x4005d56	        0x8b442430	            mov eax, dword [rsp + 0x30] 	      3761	getchar.c	FUNCTION_66	IF_66
0x4005d5a	            0x85c0	                           test eax, eax	      3761	getchar.c	FUNCTION_66	IF_66
0x4005d5c	     0xf851a040000	                           jne 0x400617c	      3761	getchar.c	FUNCTION_66	IF_66
0x4005d62	    0x4181e5073000	                        and r13d, 0x3007	      3768	getchar.c	FUNCTION_66	ELSE_20
0x4005d69	     0xf84fe030000	                            je 0x400616d	      3768	getchar.c	FUNCTION_66	ELSE_20
0x4005d6f	         0xfb64500	                   movzx eax, byte [rbp]	      3768	getchar.c	FUNCTION_66	ELSE_20
0x4005d73	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      3769	getchar.c	FUNCTION_66	ELSE_20
0x4005d78	        0x488d04c6	                  lea rax, [rsi + rax*8]	      3769	getchar.c	FUNCTION_66	ELSE_20
0x4005d7c	          0x488b10	                    mov rdx, qword [rax]	      3769	getchar.c	FUNCTION_66	ELSE_20
0x4005d7f	          0x488913	                    mov qword [rbx], rdx	      3769	getchar.c	FUNCTION_66	ELSE_20
0x4005d82	          0x488918	                    mov qword [rax], rbx	      3770	getchar.c	FUNCTION_66	ELSE_20
0x4005d85	            0x31db	                            xor ebx, ebx	      3227	getchar.c	FUNCTION_66
0x4005d87	      0xe9eff7ffff	                           jmp 0x400557b	      3227	getchar.c	FUNCTION_66
0x4005d8c	         0xf1f4000	                         nop dword [rax]	      3227	getchar.c	FUNCTION_66
0x4005d90	           0xfb600	                   movzx eax, byte [rax]	      3665	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43
0x4005d93	          0x83c080	             add eax, 0xffffffffffffff80	      3665	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43
0x4005d96	           0xfb6c0	                           movzx eax, al	      3665	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43
0x4005d99	      0xe9f3fdffff	                           jmp 0x4005b91	      3665	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43
0x4005d9e	            0x6690	                                     nop	      3665	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43
0x4005da0	      0x448b54245c	           mov r10d, dword [rsp + 0x5c] 	      3620	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_13	IF_48
0x4005da5	          0x4585d2	                         test r10d, r10d	      3620	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_13	IF_48
0x4005da8	     0xf8579010000	                           jne 0x4005f27	      3620	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_13	IF_48
0x4005dae	      0x448b442458	            mov r8d, dword [rsp + 0x58] 	      3632	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15
0x4005db3	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      3633	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x4005db7	          0x4521e0	                           and r8d, r12d	      3632	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15
0x4005dba	          0x4409c0	                             or eax, r8d	      3633	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x4005dbd	        0x45894724	             mov dword [r15 + 0x24], r8d	      3632	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15
0x4005dc1	     0xf85adfdffff	                           jne 0x4005b74	      3633	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x4005dc7	      0x488b7c2478	            mov rdi, qword [rsp + 0x78] 	      3635	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50	CALL_48
0x4005dcc	      0xe800000000	                          call 0x4005dd1	      3635	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50	CALL_48
0x4005dd1	          0x4885c0	                           test rax, rax	      3636	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50	IF_51
0x4005dd4	          0x4889c3	                            mov rbx, rax	      3635	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50	CALL_48
0x4005dd7	     0xf84da000000	                            je 0x4005eb7	      3636	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50	IF_51
0x4005ddd	        0x498b7f10	            mov rdi, qword [r15 + 0x10] 	      3641	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50	CALL_49
0x4005de1	      0xe800000000	                          call 0x4005de6	      3641	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50	CALL_49
0x4005de6	        0x498b7f18	            mov rdi, qword [r15 + 0x18] 	      3643	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50	CALL_50
0x4005dea	        0x49895f10	             mov qword [r15 + 0x10], rbx	      3642	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x4005dee	      0xe800000000	                          call 0x4005df3	      3643	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50	CALL_50
0x4005df3	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      3644	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50	CALL_51
0x4005df8	      0xe800000000	                          call 0x4005dfd	      3644	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50	CALL_51
0x4005dfd	        0x49894718	             mov qword [r15 + 0x18], rax	      3644	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50	CALL_51
0x4005e01	        0x8b442470	            mov eax, dword [rsp + 0x70] 	      3645	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x4005e05	          0x4589e8	                           mov r8d, r13d	      3651	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x4005e08	        0x45896f24	            mov dword [r15 + 0x24], r13d	      3648	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x4005e0c	    0xc74424200100	               mov dword [rsp + 0x20], 1	      3653	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x4005e14	        0x41894728	             mov dword [r15 + 0x28], eax	      3645	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x4005e18	       0xfb6442460	           movzx eax, byte [rsp + 0x60] 	      3646	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x4005e1d	        0x4188472d	               mov byte [r15 + 0x2d], al	      3646	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x4005e21	       0xfb6442464	           movzx eax, byte [rsp + 0x64] 	      3647	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x4005e26	        0x4188472c	               mov byte [r15 + 0x2c], al	      3647	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x4005e2a	       0xfb6442474	           movzx eax, byte [rsp + 0x74] 	      3650	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x4005e2f	        0x4188472e	               mov byte [r15 + 0x2e], al	      3650	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x4005e33	    0x8b0500000000	            mov eax, dword [0x04005e39] 	      3651	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x4005e39	        0x41894730	             mov dword [r15 + 0x30], eax	      3651	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x4005e3d	      0xe93bfdffff	                           jmp 0x4005b7d	      3651	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x4005e42	      0xe829a7ffff	        call sym.validate_maphash.part.2	      3651	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x4005e47	      0xe924f6ffff	                           jmp 0x4005470	      3651	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x4005e4c	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	      3354	getchar.c	FUNCTION_66
0x4005e51	           0xfb631	                   movzx esi, byte [rcx]	      3354	getchar.c	FUNCTION_66
0x4005e54	          0x4084f6	                           test sil, sil	      3354	getchar.c	FUNCTION_66
0x4005e57	      0x4088742449	              mov byte [rsp + 0x49], sil	      3354	getchar.c	FUNCTION_66
0x4005e5c	        0x400f95c5	                               setne bpl	      3354	getchar.c	FUNCTION_66
0x4005e60	            0x84c0	                             test al, al	      3355	getchar.c	FUNCTION_66
0x4005e62	        0x410f95c4	                              setne r12b	      3355	getchar.c	FUNCTION_66
0x4005e66	          0x4584e4	                         test r12b, r12b	      3372	getchar.c	FUNCTION_66	IF_12
0x4005e69	     0xf84e5f7ffff	                            je 0x4005654	      3372	getchar.c	FUNCTION_66	IF_12
0x4005e6f	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      3373	getchar.c	FUNCTION_66	CALL_19
0x4005e74	    0x488db4248800	                   lea rsi, [rsp + 0x88]	      3373	getchar.c	FUNCTION_66	CALL_19
0x4005e7c	          0x4589f8	                           mov r8d, r15d	      3373	getchar.c	FUNCTION_66	CALL_19
0x4005e7f	      0xb901000000	                              mov ecx, 1	      3373	getchar.c	FUNCTION_66	CALL_19
0x4005e84	      0xba01000000	                              mov edx, 1	      3373	getchar.c	FUNCTION_66	CALL_19
0x4005e89	      0xe800000000	                          call 0x4005e8e	      3373	getchar.c	FUNCTION_66	CALL_19
0x4005e8e	      0x4889442418	             mov qword [rsp + 0x18], rax	      3373	getchar.c	FUNCTION_66	CALL_19
0x4005e93	      0xe9bcf7ffff	                           jmp 0x4005654	      3373	getchar.c	FUNCTION_66	CALL_19
0x4005e98	      0xe800000000	                          call 0x4005e9d	      3743	getchar.c	FUNCTION_66	IF_65	CALL_61
0x4005e9d	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3744	getchar.c	FUNCTION_66	IF_65	CALL_62
0x4005ea1	      0xe800000000	                          call 0x4005ea6	      3744	getchar.c	FUNCTION_66	IF_65	CALL_62
0x4005ea6	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      3745	getchar.c	FUNCTION_66	IF_65	CALL_63
0x4005eaa	      0xe800000000	                          call 0x4005eaf	      3745	getchar.c	FUNCTION_66	IF_65	CALL_63
0x4005eaf	          0x4889df	                            mov rdi, rbx	      3746	getchar.c	FUNCTION_66	IF_65	CALL_64
0x4005eb2	      0xe800000000	                          call 0x4005eb7	      3746	getchar.c	FUNCTION_66	IF_65	CALL_64
0x4005eb7	      0xbb04000000	                              mov ebx, 4	      3747	getchar.c	FUNCTION_66	IF_65
0x4005ebc	      0xe9baf6ffff	                           jmp 0x400557b	      3748	getchar.c	FUNCTION_66	IF_65
0x4005ec1	    0xc74424200000	               mov dword [rsp + 0x20], 0	      3698	getchar.c	FUNCTION_66	ELSE_17	IF_58
0x4005ec9	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      3700	getchar.c	FUNCTION_66	ELSE_17	IF_58	IF_59
0x4005ecd	         0xb44244c	              or eax, dword [rsp + 0x4c]	      3700	getchar.c	FUNCTION_66	ELSE_17	IF_58	IF_59
0x4005ed1	     0xf85aefeffff	                           jne 0x4005d85	      3700	getchar.c	FUNCTION_66	ELSE_17	IF_58	IF_59
0x4005ed7	        0x8b4c2430	            mov ecx, dword [rsp + 0x30] 	      3706	getchar.c	FUNCTION_66	ELSE_17	IF_58	IF_59	IF_60
0x4005edb	      0xba05000000	                              mov edx, 5	      3707	getchar.c	FUNCTION_66	ELSE_17	IF_58	IF_59	CALL_54
0x4005ee0	      0xbe00000000	                              mov esi, 0	      3707	getchar.c	FUNCTION_66	ELSE_17	IF_58	IF_59	CALL_54
0x4005ee5	            0x85c9	                           test ecx, ecx	      3706	getchar.c	FUNCTION_66	ELSE_17	IF_58	IF_59	IF_60
0x4005ee7	            0x7505	                           jne 0x4005eee	      3706	getchar.c	FUNCTION_66	ELSE_17	IF_58	IF_59	IF_60
0x4005ee9	      0xbe00000000	                              mov esi, 0	      3709	getchar.c	FUNCTION_66	ELSE_17	IF_58	IF_59	CALL_56
0x4005eee	            0x31ff	                            xor edi, edi	      3709	getchar.c	FUNCTION_66	ELSE_17	IF_58	IF_59	CALL_56
0x4005ef0	            0x31db	                            xor ebx, ebx	      3227	getchar.c	FUNCTION_66
0x4005ef2	      0xe800000000	                          call 0x4005ef7	      3709	getchar.c	FUNCTION_66	ELSE_17	IF_58	IF_59	CALL_56
0x4005ef7	          0x4889c7	                            mov rdi, rax	      3709	getchar.c	FUNCTION_66	ELSE_17	IF_58	IF_59	CALL_56
0x4005efa	      0xe800000000	                          call 0x4005eff	      3709	getchar.c	FUNCTION_66	ELSE_17	IF_58	IF_59	CALL_56
0x4005eff	      0xe977f6ffff	                           jmp 0x400557b	      3709	getchar.c	FUNCTION_66	ELSE_17	IF_58	IF_59	CALL_56
0x4005f04	         0xf1f4000	                         nop dword [rax]	      3709	getchar.c	FUNCTION_66	ELSE_17	IF_58	IF_59	CALL_56
0x4005f08	    0x488b15000000	            mov rdx, qword [0x04005f0f] 	      3515	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6
0x4005f0f	            0x4898	                                    cdqe	      3515	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6
0x4005f11	    0x4c8bbcc2c009	   mov r15, qword [rdx + rax*8 + 0x9c0] 	      3515	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6
0x4005f19	          0x4d85ff	                           test r15, r15	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x4005f1c	     0xf85c5f9ffff	                           jne 0x40058e7	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x4005f22	      0xe9f9f9ffff	                           jmp 0x4005920	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x4005f27	      0x448b4c2430	            mov r9d, dword [rsp + 0x30] 	      3622	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_13	IF_48	IF_49
0x4005f2c	      0xba05000000	                              mov edx, 5	      3623	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_13	IF_48	IF_49	CALL_45
0x4005f31	      0xbe00000000	                              mov esi, 0	      3626	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_13	IF_48	CALL_47
0x4005f36	          0x4585c9	                           test r9d, r9d	      3622	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_13	IF_48	IF_49
0x4005f39	            0x7405	                            je 0x4005f40	      3622	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_13	IF_48	IF_49
0x4005f3b	      0xbe00000000	                              mov esi, 0	      3623	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_13	IF_48	IF_49	CALL_45
0x4005f40	            0x31ff	                            xor edi, edi	      3623	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_13	IF_48	IF_49	CALL_45
0x4005f42	      0xe800000000	                          call 0x4005f47	      3623	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_13	IF_48	IF_49	CALL_45
0x4005f47	          0x4889de	                            mov rsi, rbx	      3623	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_13	IF_48	IF_49	CALL_45
0x4005f4a	          0x4889c7	                            mov rdi, rax	      3623	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_13	IF_48	IF_49	CALL_45
0x4005f4d	      0xbb05000000	                              mov ebx, 5	      3627	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_13	IF_48
0x4005f52	      0xe800000000	                          call 0x4005f57	      3623	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_13	IF_48	IF_49	CALL_45
0x4005f57	      0xe91ff6ffff	                           jmp 0x400557b	      3623	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_13	IF_48	IF_49	CALL_45
0x4005f5c	      0x807c244800	                cmp byte [rsp + 0x48], 0	      3681	getchar.c	FUNCTION_66	IF_54
0x4005f61	     0xf85e3000000	                           jne 0x400604a	      3681	getchar.c	FUNCTION_66	IF_54
0x4005f67	      0x807c244900	                cmp byte [rsp + 0x49], 0	      3698	getchar.c	FUNCTION_66	ELSE_17	IF_58
0x4005f6c	     0xf8457ffffff	                            je 0x4005ec9	      3698	getchar.c	FUNCTION_66	ELSE_17	IF_58
0x4005f72	      0x807c240700	                   cmp byte [rsp + 7], 0	      3698	getchar.c	FUNCTION_66	ELSE_17	IF_58
0x4005f77	     0xf854cffffff	                           jne 0x4005ec9	      3698	getchar.c	FUNCTION_66	ELSE_17	IF_58
0x4005f7d	        0x8b542420	            mov edx, dword [rsp + 0x20] 	      3714	getchar.c	FUNCTION_66	IF_61
0x4005f81	            0x85d2	                           test edx, edx	      3714	getchar.c	FUNCTION_66	IF_61
0x4005f83	     0xf8430fdffff	                            je 0x4005cb9	      3714	getchar.c	FUNCTION_66	IF_61
0x4005f89	            0x31db	                            xor ebx, ebx	      3227	getchar.c	FUNCTION_66
0x4005f8b	      0xe9ebf5ffff	                           jmp 0x400557b	      3227	getchar.c	FUNCTION_66
0x4005f90	      0x488b7c2478	            mov rdi, qword [rsp + 0x78] 	      3389	getchar.c	FUNCTION_66	CALL_22
0x4005f95	      0xe800000000	                          call 0x4005f9a	      3389	getchar.c	FUNCTION_66	CALL_22
0x4005f9a	      0xe901f7ffff	                           jmp 0x40056a0	      3389	getchar.c	FUNCTION_66	CALL_22
0x4005f9f	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      3380	getchar.c	FUNCTION_66	IF_13	CALL_21
0x4005fa4	    0x488db4249000	                   lea rsi, [rsp + 0x90]	      3380	getchar.c	FUNCTION_66	IF_13	CALL_21
0x4005fac	          0x4589f8	                           mov r8d, r15d	      3380	getchar.c	FUNCTION_66	IF_13	CALL_21
0x4005faf	      0xb901000000	                              mov ecx, 1	      3380	getchar.c	FUNCTION_66	IF_13	CALL_21
0x4005fb4	            0x31d2	                            xor edx, edx	      3380	getchar.c	FUNCTION_66	IF_13	CALL_21
0x4005fb6	      0xe800000000	                          call 0x4005fbb	      3380	getchar.c	FUNCTION_66	IF_13	CALL_21
0x4005fbb	      0x4889442478	             mov qword [rsp + 0x78], rax	      3380	getchar.c	FUNCTION_66	IF_13	CALL_21
0x4005fc0	      0xe9bcf6ffff	                           jmp 0x4005681	      3380	getchar.c	FUNCTION_66	IF_13	CALL_21
0x4005fc5	      0x4c8b7c2420	            mov r15, qword [rsp + 0x20] 	      3438	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	CALL_26
0x4005fca	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	      3438	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	CALL_26
0x4005fcf	          0x4963df	                        movsxd rbx, r15d	      3438	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	CALL_26
0x4005fd2	    0x410fb67c1eff	         movzx edi, byte [r14 + rbx - 1]	      3438	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	CALL_26
0x4005fd8	      0xe800000000	                          call 0x4005fdd	      3438	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	CALL_26
0x4005fdd	            0x85c0	                           test eax, eax	      3438	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	CALL_26
0x4005fdf	     0xf84bff7ffff	                            je 0x40057a4	      3438	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	CALL_26
0x4005fe5	        0x4183ff02	                             cmp r15d, 2	      3439	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2
0x4005fe9	     0xf8eb5f7ffff	                           jle 0x40057a4	      3439	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2
0x4005fef	      0x498d5c1efe	                lea rbx, [r14 + rbx - 2]	      3439	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2
0x4005ff4	          0x4c89f8	                            mov rax, r15	      3439	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2
0x4005ff7	          0x83e803	                              sub eax, 3	      3439	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2
0x4005ffa	      0x48895c2410	             mov qword [rsp + 0x10], rbx	      3439	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2
0x4005fff	          0x4c89f3	                            mov rbx, r14	      3439	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2
0x4006002	      0x4d8d740601	                lea r14, [r14 + rax + 1]	      3439	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2
0x4006007	           0xfb63b	                   movzx edi, byte [rbx]	      3440	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2	IF_23	CALL_28
0x400600a	      0xe800000000	                          call 0x400600f	      3440	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2	IF_23	CALL_28
0x400600f	          0x4189c7	                           mov r15d, eax	      3440	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2	IF_23	CALL_28
0x4006012	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3440	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2	IF_23	CALL_28
0x4006017	           0xfb638	                   movzx edi, byte [rax]	      3440	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2	IF_23	CALL_28
0x400601a	      0xe800000000	                          call 0x400601f	      3440	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2	IF_23	CALL_28
0x400601f	          0x4139c7	                           cmp r15d, eax	      3440	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2	IF_23	CALL_28
0x4006022	     0xf854ef5ffff	                           jne 0x4005576	      3440	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2	IF_23	CALL_28
0x4006028	        0x4883c301	                              add rbx, 1	      3440	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2	IF_23	CALL_28
0x400602c	          0x4c39f3	                            cmp rbx, r14	      3439	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2
0x400602f	            0x75d6	                           jne 0x4006007	      3439	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2
0x4006031	      0xe96ef7ffff	                           jmp 0x40057a4	      3439	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2
0x4006036	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3439	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2
0x4006040	      0xbb02000000	                              mov ebx, 2	      3684	getchar.c	FUNCTION_66	IF_54	IF_55
0x4006045	      0xe931f5ffff	                           jmp 0x400557b	      3684	getchar.c	FUNCTION_66	IF_54	IF_55
0x400604a	        0x8b742420	            mov esi, dword [rsp + 0x20] 	      3683	getchar.c	FUNCTION_66	IF_54	IF_55
0x400604e	            0x85f6	                           test esi, esi	      3683	getchar.c	FUNCTION_66	IF_54	IF_55
0x4006050	            0x74ee	                            je 0x4006040	      3683	getchar.c	FUNCTION_66	IF_54	IF_55
0x4006052	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3685	getchar.c	FUNCTION_66	IF_54	ELSE_16	IF_56
0x4006057	          0x803803	                       cmp byte [rax], 3	      3685	getchar.c	FUNCTION_66	IF_54	ELSE_16	IF_56
0x400605a	     0xf8525fdffff	                           jne 0x4005d85	      3685	getchar.c	FUNCTION_66	IF_54	ELSE_16	IF_56
0x4006060	    0x488b05000000	            mov rax, qword [0x04006067] 	      3689	getchar.c	FUNCTION_66	IF_54	ELSE_16	IF_56	IF_57
0x4006067	    0x488d90c00900	                  lea rdx, [rax + 0x9c0]	      3689	getchar.c	FUNCTION_66	IF_54	ELSE_16	IF_56	IF_57
0x400606e	      0x4839542428	            cmp qword [rsp + 0x28], rdx 	      3689	getchar.c	FUNCTION_66	IF_54	ELSE_16	IF_56	IF_57
0x4006073	     0xf8439010000	                            je 0x40061b2	      3689	getchar.c	FUNCTION_66	IF_54	ELSE_16	IF_56	IF_57
0x4006079	          0x4489e8	                           mov eax, r13d	      3693	getchar.c	FUNCTION_66	IF_54	ELSE_16	IF_56	ELSE_17
0x400607c	            0x31db	                            xor ebx, ebx	      3227	getchar.c	FUNCTION_66
0x400607e	            0xf7d0	                                 not eax	      3693	getchar.c	FUNCTION_66	IF_54	ELSE_16	IF_56	ELSE_17
0x4006080	    0x210500000000	             and dword [0x04006086], eax	      3693	getchar.c	FUNCTION_66	IF_54	ELSE_16	IF_56	ELSE_17
0x4006086	      0xe9f0f4ffff	                           jmp 0x400557b	      3693	getchar.c	FUNCTION_66	IF_54	ELSE_16	IF_56	ELSE_17
0x400608b	       0xf1f440000	                   nop dword [rax + rax]	      3693	getchar.c	FUNCTION_66	IF_54	ELSE_16	IF_56	ELSE_17
0x4006090	       0xfb65c2408	               movzx ebx, byte [rsp + 8]	      3466	getchar.c	FUNCTION_66	IF_27
0x4006095	            0x84db	                             test bl, bl	      3466	getchar.c	FUNCTION_66	IF_27
0x4006097	     0xf84f2f8ffff	                            je 0x400598f	      3466	getchar.c	FUNCTION_66	IF_27
0x400609d	            0x31c9	                            xor ecx, ecx	      3475	getchar.c	FUNCTION_66	IF_27	FOR_4	IF_28
0x400609f	          0x4084ed	                           test bpl, bpl	      3466	getchar.c	FUNCTION_66	IF_27
0x40060a2	    0x4c8b3d000000	            mov r15, qword [0x040060a9] 	      3475	getchar.c	FUNCTION_66	IF_27	FOR_4	IF_28
0x40060a9	          0x4d63f4	                        movsxd r14, r12d	      3485	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	CALL_31
0x40060ac	     0xf84ddf8ffff	                            je 0x400598f	      3466	getchar.c	FUNCTION_66	IF_27
0x40060b2	        0x8b5c245c	            mov ebx, dword [rsp + 0x5c] 	      3466	getchar.c	FUNCTION_66	IF_27
0x40060b6	          0x4d89f0	                             mov r8, r14	      3466	getchar.c	FUNCTION_66	IF_27
0x40060b9	    0x8b0500000000	            mov eax, dword [0x040060bf] 	      3469	getchar.c	FUNCTION_66	IF_27	FOR_4
0x40060bf	            0x85c0	                           test eax, eax	      3469	getchar.c	FUNCTION_66	IF_27	FOR_4
0x40060c1	     0xf85c8f8ffff	                           jne 0x400598f	      3469	getchar.c	FUNCTION_66	IF_27	FOR_4
0x40060c7	        0x8b442430	            mov eax, dword [rsp + 0x30] 	      3471	getchar.c	FUNCTION_66	IF_27	FOR_4	IF_28
0x40060cb	            0x85c0	                           test eax, eax	      3471	getchar.c	FUNCTION_66	IF_27	FOR_4	IF_28
0x40060cd	     0xf848d000000	                            je 0x4006160	      3471	getchar.c	FUNCTION_66	IF_27	FOR_4	IF_28
0x40060d3	          0x4885c9	                           test rcx, rcx	      3473	getchar.c	FUNCTION_66	IF_27	FOR_4	IF_28	IF_29
0x40060d6	     0xf85b3f8ffff	                           jne 0x400598f	      3473	getchar.c	FUNCTION_66	IF_27	FOR_4	IF_28	IF_29
0x40060dc	          0x4c89fd	                            mov rbp, r15	      3475	getchar.c	FUNCTION_66	IF_27	FOR_4	IF_28
0x40060df	          0x4885ed	                           test rbp, rbp	      3479	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5
0x40060e2	            0x7555	                           jne 0x4006139	      3479	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5
0x40060e4	            0xeb5d	                           jmp 0x4006143	      3479	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5
0x40060e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3479	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5
0x40060f0	        0x44856d24	          test dword [rbp + 0x24], r13d 	      3482	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30
0x40060f4	            0x743a	                            je 0x4006130	      3482	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30
0x40060f6	        0x44396520	           cmp dword [rbp + 0x20], r12d 	      3484	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30
0x40060fa	            0x7534	                           jne 0x4006130	      3484	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30
0x40060fc	            0x85db	                           test ebx, ebx	      3484	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30
0x40060fe	            0x7430	                            je 0x4006130	      3484	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30
0x4006100	        0x4c8b7508	                mov r14, qword [rbp + 8]	      3485	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	CALL_31
0x4006104	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      3485	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	CALL_31
0x4006109	          0x4c89c2	                             mov rdx, r8	      3485	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	CALL_31
0x400610c	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      3485	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	CALL_31
0x4006111	      0x4c89442408	                 mov qword [rsp + 8], r8	      3485	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	CALL_31
0x4006116	          0x4c89f7	                            mov rdi, r14	      3485	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	CALL_31
0x4006119	      0xe800000000	                          call 0x400611e	      3485	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	CALL_31
0x400611e	            0x85c0	                           test eax, eax	      3485	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	CALL_31
0x4006120	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      3485	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	CALL_31
0x4006125	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      3485	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	CALL_31
0x400612a	     0xf8499000000	                            je 0x40061c9	      3485	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	CALL_31
0x4006130	        0x488b6d00	                    mov rbp, qword [rbp]	      3479	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5
0x4006134	          0x4885ed	                           test rbp, rbp	      3479	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5
0x4006137	            0x740a	                            je 0x4006143	      3479	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5
0x4006139	    0x8b0500000000	            mov eax, dword [0x0400613f] 	      3479	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5
0x400613f	            0x85c0	                           test eax, eax	      3479	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5
0x4006141	            0x74ad	                            je 0x40060f0	      3479	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5
0x4006143	        0x4883c101	                              add rcx, 1	      3479	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5
0x4006147	    0x4881f9000100	                          cmp rcx, 0x100	      3469	getchar.c	FUNCTION_66	IF_27	FOR_4
0x400614e	     0xf8565ffffff	                           jne 0x40060b9	      3469	getchar.c	FUNCTION_66	IF_27	FOR_4
0x4006154	      0xe936f8ffff	                           jmp 0x400598f	      3469	getchar.c	FUNCTION_66	IF_27	FOR_4
0x4006159	     0xf1f80000000	                         nop dword [rax]	      3469	getchar.c	FUNCTION_66	IF_27	FOR_4
0x4006160	    0x488b2ccd0000	                  mov rbp, qword [rcx*8]	      3478	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4
0x4006168	      0xe972ffffff	                           jmp 0x40060df	      3478	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4
0x400616d	         0xfb64500	                   movzx eax, byte [rbp]	      3768	getchar.c	FUNCTION_66	ELSE_20
0x4006171	          0x83c080	             add eax, 0xffffffffffffff80	      3768	getchar.c	FUNCTION_66	ELSE_20
0x4006174	           0xfb6c0	                           movzx eax, al	      3768	getchar.c	FUNCTION_66	ELSE_20
0x4006177	      0xe9f7fbffff	                           jmp 0x4005d73	      3768	getchar.c	FUNCTION_66	ELSE_20
0x400617c	      0x488b4c2450	            mov rcx, qword [rsp + 0x50] 	      3763	getchar.c	FUNCTION_66	IF_66
0x4006181	          0x488b01	                    mov rax, qword [rcx]	      3763	getchar.c	FUNCTION_66	IF_66
0x4006184	          0x488903	                    mov qword [rbx], rax	      3763	getchar.c	FUNCTION_66	IF_66
0x4006187	          0x488919	                    mov qword [rcx], rbx	      3764	getchar.c	FUNCTION_66	IF_66
0x400618a	            0x31db	                            xor ebx, ebx	      3227	getchar.c	FUNCTION_66
0x400618c	      0xe9eaf3ffff	                           jmp 0x400557b	      3227	getchar.c	FUNCTION_66
0x4006191	    0x488b05000000	            mov rax, qword [0x04006198] 	      3731	getchar.c	FUNCTION_66	IF_63	IF_64
0x4006198	    0x488d90c00900	                  lea rdx, [rax + 0x9c0]	      3731	getchar.c	FUNCTION_66	IF_63	IF_64
0x400619f	      0x4839542428	            cmp qword [rsp + 0x28], rdx 	      3731	getchar.c	FUNCTION_66	IF_63	IF_64
0x40061a4	            0x7450	                            je 0x40061f6	      3731	getchar.c	FUNCTION_66	IF_63	IF_64
0x40061a6	    0x44092d000000	             or dword [0x040061ad], r13d	      3735	getchar.c	FUNCTION_66	IF_63	ELSE_19
0x40061ad	      0xe92bfbffff	                           jmp 0x4005cdd	      3735	getchar.c	FUNCTION_66	IF_63	ELSE_19
0x40061b2	          0x4489ea	                           mov edx, r13d	      3690	getchar.c	FUNCTION_66	IF_54	ELSE_16	IF_56	IF_57
0x40061b5	            0x31db	                            xor ebx, ebx	      3227	getchar.c	FUNCTION_66
0x40061b7	            0xf7d2	                                 not edx	      3690	getchar.c	FUNCTION_66	IF_54	ELSE_16	IF_56	IF_57
0x40061b9	    0x2190401c0000	           and dword [rax + 0x1c40], edx	      3690	getchar.c	FUNCTION_66	IF_54	ELSE_16	IF_56	IF_57
0x40061bf	      0xe9b7f3ffff	                           jmp 0x400557b	      3690	getchar.c	FUNCTION_66	IF_54	ELSE_16	IF_56	IF_57
0x40061c4	      0xe800000000	                          call 0x40061c9	      3777	getchar.c	FUNCTION_66
0x40061c9	        0x8b442430	            mov eax, dword [rsp + 0x30] 	      3487	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	IF_31
0x40061cd	          0x4c89f3	                            mov rbx, r14	      3487	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	IF_31
0x40061d0	      0xba05000000	                              mov edx, 5	      3488	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	IF_31	CALL_33
0x40061d5	      0xbe00000000	                              mov esi, 0	      3488	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	IF_31	CALL_33
0x40061da	            0x85c0	                           test eax, eax	      3487	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	IF_31
0x40061dc	     0xf855efdffff	                           jne 0x4005f40	      3487	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	IF_31
0x40061e2	      0xbe00000000	                              mov esi, 0	      3491	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	ELSE_5	CALL_35
0x40061e7	      0xe954fdffff	                           jmp 0x4005f40	      3491	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	ELSE_5	CALL_35
0x40061ec	       0xfb65c2408	               movzx ebx, byte [rsp + 8]	      3404	getchar.c	FUNCTION_66	IF_16	IF_18
0x40061f1	      0xe959f7ffff	                           jmp 0x400594f	      3404	getchar.c	FUNCTION_66	IF_16	IF_18
0x40061f6	    0x4409a8401c00	           or dword [rax + 0x1c40], r13d	      3732	getchar.c	FUNCTION_66	IF_63	IF_64
0x40061fd	      0xe9dbfaffff	                           jmp 0x4005cdd	      3732	getchar.c	FUNCTION_66	IF_63	IF_64
add_map	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,3:IF,1:DO,0:FOR,0	22
0x40075f0	            0x4154	                                push r12	      5351	getchar.c	FUNCTION_87
0x40075f2	              0x55	                                push rbp	      5351	getchar.c	FUNCTION_87
0x40075f3	          0x4189f4	                           mov r12d, esi	      5351	getchar.c	FUNCTION_87
0x40075f6	              0x53	                                push rbx	      5351	getchar.c	FUNCTION_87
0x40075f7	    0x488b2d000000	            mov rbp, qword [0x040075fe] 	      5353	getchar.c	FUNCTION_87
0x40075fe	    0x48c705000000	               mov qword [0x04007609], 0	      5355	getchar.c	FUNCTION_87
0x4007609	      0xe800000000	                          call 0x400760e	      5356	getchar.c	FUNCTION_87	CALL_1
0x400760e	          0x4885c0	                           test rax, rax	      5357	getchar.c	FUNCTION_87	IF_1
0x4007611	            0x741a	                            je 0x400762d	      5357	getchar.c	FUNCTION_87	IF_1
0x4007613	          0x4889c3	                            mov rbx, rax	      5357	getchar.c	FUNCTION_87	IF_1
0x4007616	            0x31ff	                            xor edi, edi	      5359	getchar.c	FUNCTION_87	IF_1	CALL_2
0x4007618	            0x31c9	                            xor ecx, ecx	      5359	getchar.c	FUNCTION_87	IF_1	CALL_2
0x400761a	          0x4489e2	                           mov edx, r12d	      5359	getchar.c	FUNCTION_87	IF_1	CALL_2
0x400761d	          0x4889c6	                            mov rsi, rax	      5359	getchar.c	FUNCTION_87	IF_1	CALL_2
0x4007620	      0xe800000000	                          call 0x4007625	      5359	getchar.c	FUNCTION_87	IF_1	CALL_2
0x4007625	          0x4889df	                            mov rdi, rbx	      5360	getchar.c	FUNCTION_87	IF_1	CALL_3
0x4007628	      0xe800000000	                          call 0x400762d	      5360	getchar.c	FUNCTION_87	IF_1	CALL_3
0x400762d	              0x5b	                                 pop rbx	      5363	getchar.c	FUNCTION_87
0x400762e	    0x48892d000000	            mov qword [0x04007635], rbp 	      5362	getchar.c	FUNCTION_87
0x4007635	              0x5d	                                 pop rbp	      5363	getchar.c	FUNCTION_87
0x4007636	            0x415c	                                 pop r12	      5363	getchar.c	FUNCTION_87
0x4007638	              0xc3	                                     ret	      5363	getchar.c	FUNCTION_87
char_avail	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,1:IF,1:DO,0:FOR,0	24
0x4005110	    0x8b0500000000	            mov eax, dword [0x04005116] 	      1904	getchar.c	FUNCTION_60	IF_1
0x4005116	            0x85c0	                           test eax, eax	      1904	getchar.c	FUNCTION_60	IF_1
0x4005118	            0x7536	                           jne 0x4005150	      1904	getchar.c	FUNCTION_60	IF_1
0x400511a	        0x4883ec08	                              sub rsp, 8	      1898	getchar.c	FUNCTION_60
0x400511e	    0x8b0500000000	            mov eax, dword [0x04005124] 	      1907	getchar.c	FUNCTION_60
0x4005124	          0x8d5001	                      lea edx, [rax + 1]	      1907	getchar.c	FUNCTION_60
0x4005127	    0x8b0500000000	            mov eax, dword [0x0400512d] 	      1850	getchar.c	FUNCTION_57	IF_1
0x400512d	    0x891500000000	            mov dword [0x04005133], edx 	      1907	getchar.c	FUNCTION_60
0x4005133	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1850	getchar.c	FUNCTION_57	IF_1
0x4005136	            0x7420	                            je 0x4005158	      1850	getchar.c	FUNCTION_57	IF_1
0x4005138	          0x83ea01	                              sub edx, 1	      1909	getchar.c	FUNCTION_60
0x400513b	            0x85c0	                           test eax, eax	      1910	getchar.c	FUNCTION_60
0x400513d	           0xf95c0	                                setne al	      1910	getchar.c	FUNCTION_60
0x4005140	    0x891500000000	            mov dword [0x04005146], edx 	      1909	getchar.c	FUNCTION_60
0x4005146	        0x4883c408	                              add rsp, 8	      1911	getchar.c	FUNCTION_60
0x400514a	           0xfb6c0	                           movzx eax, al	      1910	getchar.c	FUNCTION_60
0x400514d	              0xc3	                                     ret	      1911	getchar.c	FUNCTION_60
0x400514e	            0x6690	                                     nop	      1911	getchar.c	FUNCTION_60
0x4005150	            0x31c0	                            xor eax, eax	      1911	getchar.c	FUNCTION_60
0x4005152	              0xc3	                                     ret	      1911	getchar.c	FUNCTION_60
0x4005153	       0xf1f440000	                   nop dword [rax + rax]	      1911	getchar.c	FUNCTION_60
0x4005158	      0xe8c3fcffff	                 call sym.vpeekc.part.10	      1911	getchar.c	FUNCTION_60
0x400515d	    0x8b1500000000	            mov edx, dword [0x04005163] 	      1911	getchar.c	FUNCTION_60
0x4005163	            0xebd3	                           jmp 0x4005138	      1911	getchar.c	FUNCTION_60
stuffRedoReadbuff	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,1:IF,0:DO,0:FOR,0	4
0x4000f80	          0x4889fe	                            mov rsi, rdi	       664	getchar.c	FUNCTION_24
0x4000f83	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       665	getchar.c	FUNCTION_24	CALL_1
0x4000f8a	      0xbf00000000	                              mov edi, 0	       665	getchar.c	FUNCTION_24	CALL_1
0x4000f8f	      0xe9ecf0ffff	                        jmp sym.add_buff	       665	getchar.c	FUNCTION_24	CALL_1
using_script	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,0:IF,0:DO,0:FOR,0	5
0x4001be0	    0x486305000000	         movsxd rax, dword [0x04001be7] 	      1512	getchar.c	FUNCTION_51
0x4001be7	    0x48833cc50000	                    cmp qword [rax*8], 0	      1512	getchar.c	FUNCTION_51
0x4001bf0	           0xf95c0	                                setne al	      1512	getchar.c	FUNCTION_51
0x4001bf3	           0xfb6c0	                           movzx eax, al	      1512	getchar.c	FUNCTION_51
0x4001bf6	              0xc3	                                     ret	      1513	getchar.c	FUNCTION_51
ResetRedobuff	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,1:IF,1:DO,0:FOR,0	24
0x4000a40	    0x8b0500000000	            mov eax, dword [0x04000a46] 	       493	getchar.c	FUNCTION_15	IF_1
0x4000a46	            0x85c0	                           test eax, eax	       493	getchar.c	FUNCTION_15	IF_1
0x4000a48	            0x756a	                           jne 0x4000ab4	       493	getchar.c	FUNCTION_15	IF_1
0x4000a4a	    0x488b3d000000	            mov rdi, qword [0x04000a51] 	       141	getchar.c	FUNCTION_1	FOR_1
0x4000a51	              0x53	                                push rbx	       492	getchar.c	FUNCTION_15
0x4000a52	          0x4885ff	                           test rdi, rdi	       141	getchar.c	FUNCTION_1	FOR_1
0x4000a55	            0x7419	                            je 0x4000a70	       141	getchar.c	FUNCTION_1	FOR_1
0x4000a57	    0x660f1f840000	                    nop word [rax + rax]	       141	getchar.c	FUNCTION_1	FOR_1
0x4000a60	          0x488b1f	                    mov rbx, qword [rdi]	       143	getchar.c	FUNCTION_1	FOR_1
0x4000a63	      0xe800000000	                          call 0x4000a68	       144	getchar.c	FUNCTION_1	FOR_1	CALL_1
0x4000a68	          0x4885db	                           test rbx, rbx	       141	getchar.c	FUNCTION_1	FOR_1
0x4000a6b	          0x4889df	                            mov rdi, rbx	       141	getchar.c	FUNCTION_1	FOR_1
0x4000a6e	            0x75f0	                           jne 0x4000a60	       141	getchar.c	FUNCTION_1	FOR_1
0x4000a70	    0x488b05000000	            mov rax, qword [0x04000a77] 	       496	getchar.c	FUNCTION_15	IF_1
0x4000a77	    0x48c705000000	               mov qword [0x04000a82], 0	       497	getchar.c	FUNCTION_15	IF_1
0x4000a82	              0x5b	                                 pop rbx	       499	getchar.c	FUNCTION_15
0x4000a83	    0x488905000000	            mov qword [0x04000a8a], rax 	       496	getchar.c	FUNCTION_15	IF_1
0x4000a8a	    0x488b05000000	            mov rax, qword [0x04000a91] 	       496	getchar.c	FUNCTION_15	IF_1
0x4000a91	    0x488905000000	            mov qword [0x04000a98], rax 	       496	getchar.c	FUNCTION_15	IF_1
0x4000a98	    0x488b05000000	            mov rax, qword [0x04000a9f] 	       496	getchar.c	FUNCTION_15	IF_1
0x4000a9f	    0x488905000000	            mov qword [0x04000aa6], rax 	       496	getchar.c	FUNCTION_15	IF_1
0x4000aa6	    0x488b05000000	            mov rax, qword [0x04000aad] 	       496	getchar.c	FUNCTION_15	IF_1
0x4000aad	    0x488905000000	            mov qword [0x04000ab4], rax 	       496	getchar.c	FUNCTION_15	IF_1
0x4000ab4	            0xf3c3	                                     ret	       499	getchar.c	FUNCTION_15
save_typeahead	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,2:IF,1:DO,0:FOR,0	59
0x4001990	    0x488b05000000	            mov rax, qword [0x04001997] 	      1365	getchar.c	FUNCTION_46
0x4001997	              0x53	                                push rbx	      1364	getchar.c	FUNCTION_46
0x4001998	          0x4889fb	                            mov rbx, rdi	      1364	getchar.c	FUNCTION_46
0x400199b	          0x488907	                    mov qword [rdi], rax	      1365	getchar.c	FUNCTION_46
0x400199e	    0x488b05000000	            mov rax, qword [0x040019a5] 	      1365	getchar.c	FUNCTION_46
0x40019a5	        0x48894708	                mov qword [rdi + 8], rax	      1365	getchar.c	FUNCTION_46
0x40019a9	    0x488b05000000	            mov rax, qword [0x040019b0] 	      1365	getchar.c	FUNCTION_46
0x40019b0	        0x48894710	             mov qword [rdi + 0x10], rax	      1365	getchar.c	FUNCTION_46
0x40019b4	    0x488b05000000	            mov rax, qword [0x040019bb] 	      1365	getchar.c	FUNCTION_46
0x40019bb	        0x48894718	             mov qword [rdi + 0x18], rax	      1365	getchar.c	FUNCTION_46
0x40019bf	    0x488b05000000	            mov rax, qword [0x040019c6] 	      1365	getchar.c	FUNCTION_46
0x40019c6	        0x48894720	             mov qword [rdi + 0x20], rax	      1365	getchar.c	FUNCTION_46
0x40019ca	    0x488b05000000	            mov rax, qword [0x040019d1] 	      1365	getchar.c	FUNCTION_46
0x40019d1	        0x48894728	             mov qword [rdi + 0x28], rax	      1365	getchar.c	FUNCTION_46
0x40019d5	      0xe800000000	                          call 0x40019da	      1366	getchar.c	FUNCTION_46	CALL_1
0x40019da	            0x31d2	                            xor edx, edx	      1366	getchar.c	FUNCTION_46	CALL_1
0x40019dc	          0x83f801	                              cmp eax, 1	      1366	getchar.c	FUNCTION_46	CALL_1
0x40019df	           0xf94c2	                                 sete dl	      1366	getchar.c	FUNCTION_46	CALL_1
0x40019e2	          0x895330	             mov dword [rbx + 0x30], edx	      1366	getchar.c	FUNCTION_46	CALL_1
0x40019e5	            0x7441	                            je 0x4001a28	      1367	getchar.c	FUNCTION_46	IF_1
0x40019e7	          0x488b03	                    mov rax, qword [rbx]	      1368	getchar.c	FUNCTION_46	IF_1
0x40019ea	    0x488905000000	            mov qword [0x040019f1], rax 	      1368	getchar.c	FUNCTION_46	IF_1
0x40019f1	        0x488b4308	                mov rax, qword [rbx + 8]	      1368	getchar.c	FUNCTION_46	IF_1
0x40019f5	    0x488905000000	            mov qword [0x040019fc], rax 	      1368	getchar.c	FUNCTION_46	IF_1
0x40019fc	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1368	getchar.c	FUNCTION_46	IF_1
0x4001a00	    0x488905000000	            mov qword [0x04001a07], rax 	      1368	getchar.c	FUNCTION_46	IF_1
0x4001a07	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1368	getchar.c	FUNCTION_46	IF_1
0x4001a0b	    0x488905000000	            mov qword [0x04001a12], rax 	      1368	getchar.c	FUNCTION_46	IF_1
0x4001a12	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1368	getchar.c	FUNCTION_46	IF_1
0x4001a16	    0x488905000000	            mov qword [0x04001a1d], rax 	      1368	getchar.c	FUNCTION_46	IF_1
0x4001a1d	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1368	getchar.c	FUNCTION_46	IF_1
0x4001a21	    0x488905000000	            mov qword [0x04001a28], rax 	      1368	getchar.c	FUNCTION_46	IF_1
0x4001a28	    0x8b0500000000	            mov eax, dword [0x04001a2e] 	      1370	getchar.c	FUNCTION_46
0x4001a2e	    0xc70500000000	     mov dword [0x04001a38], 0xffffffff 	      1372	getchar.c	FUNCTION_46
0x4001a38	          0x894334	             mov dword [rbx + 0x34], eax	      1370	getchar.c	FUNCTION_46
0x4001a3b	    0x8b0500000000	            mov eax, dword [0x04001a41] 	      1371	getchar.c	FUNCTION_46
0x4001a41	          0x894338	             mov dword [rbx + 0x38], eax	      1371	getchar.c	FUNCTION_46
0x4001a44	    0x488b05000000	            mov rax, qword [0x04001a4b] 	      1374	getchar.c	FUNCTION_46
0x4001a4b	    0x48c705000000	               mov qword [0x04001a56], 0	      1375	getchar.c	FUNCTION_46
0x4001a56	        0x48894340	             mov qword [rbx + 0x40], rax	      1374	getchar.c	FUNCTION_46
0x4001a5a	    0x488b05000000	            mov rax, qword [0x04001a61] 	      1374	getchar.c	FUNCTION_46
0x4001a61	        0x48894348	             mov qword [rbx + 0x48], rax	      1374	getchar.c	FUNCTION_46
0x4001a65	    0x488b05000000	            mov rax, qword [0x04001a6c] 	      1374	getchar.c	FUNCTION_46
0x4001a6c	        0x48894350	             mov qword [rbx + 0x50], rax	      1374	getchar.c	FUNCTION_46
0x4001a70	    0x488b05000000	            mov rax, qword [0x04001a77] 	      1374	getchar.c	FUNCTION_46
0x4001a77	        0x48894358	             mov qword [rbx + 0x58], rax	      1374	getchar.c	FUNCTION_46
0x4001a7b	    0x488b05000000	            mov rax, qword [0x04001a82] 	      1376	getchar.c	FUNCTION_46
0x4001a82	    0x48c705000000	               mov qword [0x04001a8d], 0	      1377	getchar.c	FUNCTION_46
0x4001a8d	        0x48894360	             mov qword [rbx + 0x60], rax	      1376	getchar.c	FUNCTION_46
0x4001a91	    0x488b05000000	            mov rax, qword [0x04001a98] 	      1376	getchar.c	FUNCTION_46
0x4001a98	        0x48894368	             mov qword [rbx + 0x68], rax	      1376	getchar.c	FUNCTION_46
0x4001a9c	    0x488b05000000	            mov rax, qword [0x04001aa3] 	      1376	getchar.c	FUNCTION_46
0x4001aa3	        0x48894370	             mov qword [rbx + 0x70], rax	      1376	getchar.c	FUNCTION_46
0x4001aa7	    0x488b05000000	            mov rax, qword [0x04001aae] 	      1376	getchar.c	FUNCTION_46
0x4001aae	        0x48894378	             mov qword [rbx + 0x78], rax	      1376	getchar.c	FUNCTION_46
0x4001ab2	      0xe800000000	                          call 0x4001ab7	      1379	getchar.c	FUNCTION_46	CALL_2
0x4001ab7	    0x488983800000	             mov qword [rbx + 0x80], rax	      1379	getchar.c	FUNCTION_46	CALL_2
0x4001abe	              0x5b	                                 pop rbx	      1381	getchar.c	FUNCTION_46
0x4001abf	              0xc3	                                     ret	      1381	getchar.c	FUNCTION_46
typeahead_noflush	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,0:IF,0:DO,0:FOR,0	2
0x4000a30	    0x893d00000000	            mov dword [0x04000a36], edi 	       441	getchar.c	FUNCTION_13
0x4000a36	              0xc3	                                     ret	       441	getchar.c	FUNCTION_13
check_map_keycodes	WHILE,1:ELSE,4:functions,0:SWITCH,0:CALL,2:IF,8:DO,0:FOR,5	115
0x4007210	            0x4157	                                push r15	      5091	getchar.c	FUNCTION_84
0x4007212	            0x4156	                                push r14	      5091	getchar.c	FUNCTION_84
0x4007214	            0x4155	                                push r13	      5091	getchar.c	FUNCTION_84
0x4007216	            0x4154	                                push r12	      5091	getchar.c	FUNCTION_84
0x4007218	              0x55	                                push rbp	      5091	getchar.c	FUNCTION_84
0x4007219	              0x53	                                push rbx	      5091	getchar.c	FUNCTION_84
0x400721a	        0x4883ec28	                           sub rsp, 0x28	      5091	getchar.c	FUNCTION_84
0x400721e	    0x8b1500000000	            mov edx, dword [0x04007224] 	      3802	getchar.c	FUNCTION_68	IF_1
0x4007224	    0x64488b042528	                mov rax, qword fs:[0x28]	      5091	getchar.c	FUNCTION_84
0x400722d	      0x4889442418	             mov qword [rsp + 0x18], rax	      5091	getchar.c	FUNCTION_84
0x4007232	            0x31c0	                            xor eax, eax	      5091	getchar.c	FUNCTION_84
0x4007234	            0x85d2	                           test edx, edx	      3802	getchar.c	FUNCTION_68	IF_1
0x4007236	            0x7505	                           jne 0x400723d	      3802	getchar.c	FUNCTION_68	IF_1
0x4007238	      0xe83393ffff	        call sym.validate_maphash.part.2	      3802	getchar.c	FUNCTION_68	IF_1
0x400723d	    0x488b05000000	            mov rax, qword [0x04007244] 	      5104	getchar.c	FUNCTION_84
0x4007244	    0x4c8b2d000000	            mov r13, qword [0x0400724b] 	      5110	getchar.c	FUNCTION_84	FOR_1
0x400724b	    0x48c705000000	               mov qword [0x04007256], 0	      5105	getchar.c	FUNCTION_84
0x4007256	      0x4889442408	                mov qword [rsp + 8], rax	      5104	getchar.c	FUNCTION_84
0x400725b	    0xc74424040000	                  mov dword [rsp + 4], 0	      5117	getchar.c	FUNCTION_84	FOR_1	FOR_2
0x4007263	        0x8b442404	                mov eax, dword [rsp + 4]	      5120	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	IF_1
0x4007267	          0x4531e4	                          xor r12d, r12d	      5091	getchar.c	FUNCTION_84
0x400726a	    0x41be01000000	                             mov r14d, 1	      5091	getchar.c	FUNCTION_84
0x4007270	            0x85c0	                           test eax, eax	      5120	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	IF_1
0x4007272	     0xf84e2000000	                            je 0x400735a	      5120	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	IF_1
0x4007278	          0x4d85e4	                           test r12, r12	      5122	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	IF_1	IF_2
0x400727b	     0xf85fb000000	                           jne 0x400737c	      5122	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	IF_1	IF_2
0x4007281	          0x4d85ed	                           test r13, r13	      5125	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	IF_1	IF_3
0x4007284	     0xf84e6000000	                            je 0x4007370	      5125	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	IF_1	IF_3
0x400728a	    0x498badc01100	          mov rbp, qword [r13 + 0x11c0] 	      5126	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	IF_1	IF_3
0x4007291	          0x4885ed	                           test rbp, rbp	      5140	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4
0x4007294	     0xf84ac000000	                            je 0x4007346	      5140	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4
0x400729a	    0x660f1f440000	                    nop word [rax + rax]	      5140	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4
0x40072a0	      0xbb01000000	                              mov ebx, 1	      5091	getchar.c	FUNCTION_84
0x40072a5	          0x83fb01	                              cmp ebx, 1	      5144	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	IF_5
0x40072a8	            0x746e	                            je 0x4007318	      5144	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	IF_5
0x40072aa	        0x4c8b7d10	            mov r15, qword [rbp + 0x10] 	      5147	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4
0x40072ae	        0x410fb617	                   movzx edx, byte [r15]	      5148	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x40072b2	            0x84d2	                             test dl, dl	      5148	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x40072b4	            0x7516	                           jne 0x40072cc	      5148	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x40072b6	            0xeb53	                           jmp 0x400730b	      5148	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x40072b8	     0xf1f84000000	                   nop dword [rax + rax]	      5148	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x40072c0	         0xfb65001	               movzx edx, byte [rax + 1]	      5148	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x40072c4	        0x4c8d7801	                      lea r15, [rax + 1]	      5162	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x40072c8	            0x84d2	                             test dl, dl	      5148	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x40072ca	            0x743f	                            je 0x400730b	      5148	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x40072cc	          0x80fa80	                            cmp dl, 0x80	      5150	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1	IF_6
0x40072cf	          0x4c89f8	                            mov rax, r15	      5150	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1	IF_6
0x40072d2	            0x75ec	                           jne 0x40072c0	      5150	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1	IF_6
0x40072d4	      0x410fb64701	               movzx eax, byte [r15 + 1]	      5153	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1	IF_6	IF_7
0x40072d9	            0x84c0	                             test al, al	      5153	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1	IF_6	IF_7
0x40072db	            0x781e	                            js 0x40072fb	      5153	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1	IF_6	IF_7
0x40072dd	        0x88442410	               mov byte [rsp + 0x10], al	      5155	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1	IF_6	IF_7
0x40072e1	      0x410fb64702	               movzx eax, byte [r15 + 2]	      5156	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1	IF_6	IF_7
0x40072e6	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5158	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1	IF_6	IF_7	CALL_2
0x40072eb	            0x31f6	                            xor esi, esi	      5158	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1	IF_6	IF_7	CALL_2
0x40072ed	      0xc644241200	                mov byte [rsp + 0x12], 0	      5157	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1	IF_6	IF_7
0x40072f2	        0x88442411	               mov byte [rsp + 0x11], al	      5156	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1	IF_6	IF_7
0x40072f6	      0xe800000000	                          call 0x40072fb	      5158	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1	IF_6	IF_7	CALL_2
0x40072fb	        0x498d4702	                      lea rax, [r15 + 2]	      5160	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1	IF_6
0x40072ff	         0xfb65001	               movzx edx, byte [rax + 1]	      5148	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x4007303	        0x4c8d7801	                      lea r15, [rax + 1]	      5162	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x4007307	            0x84d2	                             test dl, dl	      5148	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x4007309	            0x75c1	                           jne 0x40072cc	      5148	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x400730b	          0x83fb02	                              cmp ebx, 2	      5142	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5
0x400730e	            0x7420	                            je 0x4007330	      5142	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5
0x4007310	          0x83c301	                              add ebx, 1	      5142	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5
0x4007313	          0x83fb01	                              cmp ebx, 1	      5144	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	IF_5
0x4007316	            0x7592	                           jne 0x40072aa	      5144	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	IF_5
0x4007318	        0x4c8b7d08	                mov r15, qword [rbp + 8]	      5145	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	IF_5
0x400731c	        0x410fb617	                   movzx edx, byte [r15]	      5148	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x4007320	            0x84d2	                             test dl, dl	      5148	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x4007322	            0x75a8	                           jne 0x40072cc	      5148	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x4007324	            0xebea	                           jmp 0x4007310	      5148	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x4007326	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5148	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x4007330	        0x488b6d00	                    mov rbp, qword [rbp]	      5140	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4
0x4007334	          0x4885ed	                           test rbp, rbp	      5140	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4
0x4007337	     0xf8563ffffff	                           jne 0x40072a0	      5140	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4
0x400733d	    0x4181fe000100	                         cmp r14d, 0x100	      5118	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3
0x4007344	            0x7436	                            je 0x400737c	      5118	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3
0x4007346	        0x8b442404	                mov eax, dword [rsp + 4]	      5120	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	IF_1
0x400734a	        0x4983c401	                              add r12, 1	      5120	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	IF_1
0x400734e	        0x4183c601	                             add r14d, 1	      5120	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	IF_1
0x4007352	            0x85c0	                           test eax, eax	      5120	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	IF_1
0x4007354	     0xf851effffff	                           jne 0x4007278	      5120	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	IF_1
0x400735a	          0x4d85ed	                           test r13, r13	      5134	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_2	IF_4
0x400735d	            0x7468	                            je 0x40073c7	      5134	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_2	IF_4
0x400735f	    0x4b8bace5c009	   mov rbp, qword [r13 + r12*8 + 0x9c0] 	      5135	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_2	IF_4
0x4007367	            0xebcb	                           jmp 0x4007334	      5135	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_2	IF_4
0x4007369	     0xf1f80000000	                         nop dword [rax]	      5135	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_2	IF_4
0x4007370	    0x488b2d000000	            mov rbp, qword [0x04007377] 	      5129	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	IF_1	ELSE_1
0x4007377	      0xe915ffffff	                           jmp 0x4007291	      5129	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	IF_1	ELSE_1
0x400737c	      0x8344240401	                  add dword [rsp + 4], 1	      5117	getchar.c	FUNCTION_84	FOR_1	FOR_2
0x4007381	        0x8b442404	                mov eax, dword [rsp + 4]	      5117	getchar.c	FUNCTION_84	FOR_1	FOR_2
0x4007385	          0x83f802	                              cmp eax, 2	      5117	getchar.c	FUNCTION_84	FOR_1	FOR_2
0x4007388	     0xf85d5feffff	                           jne 0x4007263	      5117	getchar.c	FUNCTION_84	FOR_1	FOR_2
0x400738e	          0x4d85ed	                           test r13, r13	      5168	getchar.c	FUNCTION_84	FOR_1	IF_8
0x4007391	            0x7409	                            je 0x400739c	      5168	getchar.c	FUNCTION_84	FOR_1	IF_8
0x4007393	        0x4d8b6d68	            mov r13, qword [r13 + 0x68] 	      5110	getchar.c	FUNCTION_84	FOR_1
0x4007397	      0xe9bffeffff	                           jmp 0x400725b	      5170	getchar.c	FUNCTION_84	FOR_1
0x400739c	      0x488b442408	                mov rax, qword [rsp + 8]	      5172	getchar.c	FUNCTION_84
0x40073a1	    0x488905000000	            mov qword [0x040073a8], rax 	      5172	getchar.c	FUNCTION_84
0x40073a8	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5173	getchar.c	FUNCTION_84
0x40073ad	    0x644833042528	                xor rax, qword fs:[0x28]	      5173	getchar.c	FUNCTION_84
0x40073b6	            0x751c	                           jne 0x40073d4	      5173	getchar.c	FUNCTION_84
0x40073b8	        0x4883c428	                           add rsp, 0x28	      5173	getchar.c	FUNCTION_84
0x40073bc	              0x5b	                                 pop rbx	      5173	getchar.c	FUNCTION_84
0x40073bd	              0x5d	                                 pop rbp	      5173	getchar.c	FUNCTION_84
0x40073be	            0x415c	                                 pop r12	      5173	getchar.c	FUNCTION_84
0x40073c0	            0x415d	                                 pop r13	      5173	getchar.c	FUNCTION_84
0x40073c2	            0x415e	                                 pop r14	      5173	getchar.c	FUNCTION_84
0x40073c4	            0x415f	                                 pop r15	      5173	getchar.c	FUNCTION_84
0x40073c6	              0xc3	                                     ret	      5173	getchar.c	FUNCTION_84
0x40073c7	    0x4a8b2ce50000	                  mov rbp, qword [r12*8]	      5138	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_2	ELSE_3
0x40073cf	      0xe960ffffff	                           jmp 0x4007334	      5138	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_2	ELSE_3
0x40073d4	      0xe800000000	                          call 0x40073d9	      5173	getchar.c	FUNCTION_84
start_redo_ins	WHILE,1:ELSE,0:functions,0:SWITCH,0:CALL,6:IF,3:DO,0:FOR,0	42
0x40011a0	    0x488b05000000	            mov rax, qword [0x040011a7] 	       752	getchar.c	FUNCTION_29	IF_1	ELSE_1
0x40011a7	          0x4885c0	                           test rax, rax	       753	getchar.c	FUNCTION_29	IF_1	IF_3
0x40011aa	    0x488905000000	            mov qword [0x040011b1], rax 	       752	getchar.c	FUNCTION_29	IF_1	ELSE_1
0x40011b1	     0xf84a9000000	                            je 0x4001260	       753	getchar.c	FUNCTION_29	IF_1	IF_3
0x40011b7	        0x4883c008	                              add rax, 8	       755	getchar.c	FUNCTION_29	IF_1
0x40011bb	    0x48833d000000	               cmp qword [0x040011c3], 0	       403	getchar.c	FUNCTION_10	IF_1
0x40011c3	              0x53	                                push rbx	       881	getchar.c	FUNCTION_32
0x40011c4	    0x488905000000	            mov qword [0x040011cb], rax 	       755	getchar.c	FUNCTION_29	IF_1
0x40011cb	            0x7415	                            je 0x40011e2	       403	getchar.c	FUNCTION_10	IF_1
0x40011cd	    0x48c705000000	               mov qword [0x040011d8], 0	       405	getchar.c	FUNCTION_10	IF_1
0x40011d8	    0xc70500000000	               mov dword [0x040011e2], 0	       406	getchar.c	FUNCTION_10	IF_1
0x40011e2	    0x48833d000000	               cmp qword [0x040011ea], 0	       408	getchar.c	FUNCTION_10	IF_2
0x40011ea	            0x742d	                            je 0x4001219	       408	getchar.c	FUNCTION_10	IF_2
0x40011ec	    0x48c705000000	               mov qword [0x040011f7], 0	       410	getchar.c	FUNCTION_10	IF_2
0x40011f7	    0xc70500000000	               mov dword [0x04001201], 0	       411	getchar.c	FUNCTION_10	IF_2
0x4001201	            0xeb16	                           jmp 0x4001219	       411	getchar.c	FUNCTION_10	IF_2
0x4001203	       0xf1f440000	                   nop dword [rax + rax]	       411	getchar.c	FUNCTION_10	IF_2
0x4001208	            0x89de	                            mov esi, ebx	       891	getchar.c	FUNCTION_32	WHILE_1	IF_2	CALL_4
0x400120a	      0xbf00000000	                              mov edi, 0	       891	getchar.c	FUNCTION_32	WHILE_1	IF_2	CALL_4
0x400120f	      0xe800000000	                          call 0x4001214	       891	getchar.c	FUNCTION_32	WHILE_1	IF_2	CALL_4
0x4001214	          0x4885c0	                           test rax, rax	       891	getchar.c	FUNCTION_32	WHILE_1	IF_2	CALL_4
0x4001217	            0x7527	                           jne 0x4001240	       891	getchar.c	FUNCTION_32	WHILE_1	IF_2	CALL_4
0x4001219	      0xe8a2f1ffff	               call sym.read_redo.part.0	       891	getchar.c	FUNCTION_32	WHILE_1	IF_2	CALL_4
0x400121e	            0x85c0	                           test eax, eax	       889	getchar.c	FUNCTION_32	WHILE_1	CALL_3
0x4001220	            0x89c3	                            mov ebx, eax	       889	getchar.c	FUNCTION_32	WHILE_1	CALL_3
0x4001222	            0x75e4	                           jne 0x4001208	       889	getchar.c	FUNCTION_32	WHILE_1	CALL_3
0x4001224	      0xe827f4ffff	               call sym.copy_redo.isra.6	       900	getchar.c	FUNCTION_32	CALL_6
0x4001229	      0xb801000000	                              mov eax, 1	       902	getchar.c	FUNCTION_32
0x400122e	    0xc70500000000	               mov dword [0x04001238], 1	       901	getchar.c	FUNCTION_32
0x4001238	              0x5b	                                 pop rbx	       903	getchar.c	FUNCTION_32
0x4001239	              0xc3	                                     ret	       903	getchar.c	FUNCTION_32
0x400123a	    0x660f1f440000	                    nop word [rax + rax]	       903	getchar.c	FUNCTION_32
0x4001240	          0x83e3df	                     and ebx, 0xffffffdf	       893	getchar.c	FUNCTION_32	WHILE_1	IF_2	IF_3
0x4001243	          0x83fb4f	                           cmp ebx, 0x4f	       893	getchar.c	FUNCTION_32	WHILE_1	IF_2	IF_3
0x4001246	            0x75dc	                           jne 0x4001224	       893	getchar.c	FUNCTION_32	WHILE_1	IF_2	IF_3
0x4001248	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       894	getchar.c	FUNCTION_32	WHILE_1	IF_2	CALL_5
0x400124f	      0xbe00000000	                              mov esi, 0	       894	getchar.c	FUNCTION_32	WHILE_1	IF_2	CALL_5
0x4001254	      0xbf00000000	                              mov edi, 0	       894	getchar.c	FUNCTION_32	WHILE_1	IF_2	CALL_5
0x4001259	      0xe822eeffff	                       call sym.add_buff	       894	getchar.c	FUNCTION_32	WHILE_1	IF_2	CALL_5
0x400125e	            0xebc4	                           jmp 0x4001224	       894	getchar.c	FUNCTION_32	WHILE_1	IF_2	CALL_5
0x4001260	            0x31c0	                            xor eax, eax	       885	getchar.c	FUNCTION_32	IF_1
0x4001262	              0xc3	                                     ret	       885	getchar.c	FUNCTION_32	IF_1
ExpandMappings	WHILE,1:ELSE,12:functions,0:SWITCH,0:CALL,10:IF,20:DO,0:FOR,4	218
0x4002a60	            0x4157	                                push r15	      4271	getchar.c	FUNCTION_77
0x4002a62	            0x4156	                                push r14	      4271	getchar.c	FUNCTION_77
0x4002a64	          0x4989d7	                            mov r15, rdx	      4271	getchar.c	FUNCTION_77
0x4002a67	            0x4155	                                push r13	      4271	getchar.c	FUNCTION_77
0x4002a69	            0x4154	                                push r12	      4271	getchar.c	FUNCTION_77
0x4002a6b	              0x55	                                push rbp	      4271	getchar.c	FUNCTION_77
0x4002a6c	              0x53	                                push rbx	      4271	getchar.c	FUNCTION_77
0x4002a6d	        0x4883ec28	                           sub rsp, 0x28	      4271	getchar.c	FUNCTION_77
0x4002a71	    0x8b0d00000000	            mov ecx, dword [0x04002a77] 	      3802	getchar.c	FUNCTION_68	IF_1
0x4002a77	      0x48897c2408	                mov qword [rsp + 8], rdi	      4271	getchar.c	FUNCTION_77
0x4002a7c	      0x4889742418	             mov qword [rsp + 0x18], rsi	      4271	getchar.c	FUNCTION_77
0x4002a81	            0x85c9	                           test ecx, ecx	      3802	getchar.c	FUNCTION_68	IF_1
0x4002a83	     0xf8484020000	                            je 0x4002d0d	      3802	getchar.c	FUNCTION_68	IF_1
0x4002a89	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4281	getchar.c	FUNCTION_77
0x4002a8e	    0xc74424100100	               mov dword [rsp + 0x10], 1	      4282	getchar.c	FUNCTION_77
0x4002a96	    0xc74424140200	               mov dword [rsp + 0x14], 2	      4282	getchar.c	FUNCTION_77
0x4002a9e	    0xc70000000000	                      mov dword [rax], 0	      4281	getchar.c	FUNCTION_77
0x4002aa4	    0x49c707000000	                      mov qword [r15], 0	      4282	getchar.c	FUNCTION_77
0x4002aab	      0xbd01000000	                              mov ebp, 1	      4271	getchar.c	FUNCTION_77
0x4002ab0	          0x4531e4	                          xor r12d, r12d	      4271	getchar.c	FUNCTION_77
0x4002ab3	            0x31db	                            xor ebx, ebx	      4271	getchar.c	FUNCTION_77
0x4002ab5	            0xeb19	                           jmp 0x4002ad0	      4271	getchar.c	FUNCTION_77
0x4002ab7	    0x660f1f840000	                    nop word [rax + rax]	      4271	getchar.c	FUNCTION_77
0x4002ac0	          0x83fd07	                              cmp ebp, 7	      4292	getchar.c	FUNCTION_77	FOR_1	FOR_2
0x4002ac3	     0xf8497000000	                            je 0x4002b60	      4292	getchar.c	FUNCTION_77	FOR_1	FOR_2
0x4002ac9	        0x4183c401	                             add r12d, 1	      4292	getchar.c	FUNCTION_77	FOR_1	FOR_2
0x4002acd	          0x83c501	                              add ebp, 1	      4292	getchar.c	FUNCTION_77	FOR_1	FOR_2
0x4002ad0	          0x4585e4	                         test r12d, r12d	      4294	getchar.c	FUNCTION_77	FOR_1	FOR_2	IF_1
0x4002ad3	     0xf8488020000	                            je 0x4002d61	      4294	getchar.c	FUNCTION_77	FOR_1	FOR_2	IF_1
0x4002ad9	        0x4183fc01	                             cmp r12d, 1	      4296	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_1	IF_2
0x4002add	     0xf84aa020000	                            je 0x4002d8d	      4296	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_1	IF_2
0x4002ae3	        0x4183fc02	                             cmp r12d, 2	      4299	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_2	IF_3
0x4002ae7	     0xf8498020000	                            je 0x4002d85	      4299	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_2	IF_3
0x4002aed	        0x4183fc03	                             cmp r12d, 3	      4301	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_3	IF_4
0x4002af1	     0xf8424020000	                            je 0x4002d1b	      4301	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_3	IF_4
0x4002af7	        0x4183fc04	                             cmp r12d, 4	      4305	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_4	IF_5
0x4002afb	     0xf84a7020000	                            je 0x4002da8	      4305	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_4	IF_5
0x4002b01	        0x4183fc05	                             cmp r12d, 5	      4308	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_5	IF_6
0x4002b05	     0xf8492020000	                            je 0x4002d9d	      4308	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_5	IF_6
0x4002b0b	        0x4183fc06	                             cmp r12d, 6	      4310	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_6	IF_7
0x4002b0f	            0x75af	                           jne 0x4002ac0	      4310	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_6	IF_7
0x4002b11	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x4002b16	            0x31d2	                            xor edx, edx	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x4002b18	      0xbe00000000	                              mov esi, 0	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x4002b1d	      0xe800000000	                          call 0x4002b22	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x4002b22	            0x85c0	                           test eax, eax	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x4002b24	            0x743a	                            je 0x4002b60	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x4002b26	    0x41bd00000000	                             mov r13d, 0	      4311	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_6	IF_7
0x4002b2c	      0x837c241001	               cmp dword [rsp + 0x10], 1	      4317	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	IF_9
0x4002b31	     0xf845e020000	                            je 0x4002d95	      4317	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	IF_9
0x4002b37	          0x498b07	                    mov rax, qword [r15]	      4320	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_3
0x4002b3a	        0x448d7301	                     lea r14d, [rbx + 1]	      4320	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_3
0x4002b3e	          0x4863db	                         movsxd rbx, ebx	      4320	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_3
0x4002b41	          0x4c89ef	                            mov rdi, r13	      4320	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_3
0x4002b44	        0x488d1cd8	                  lea rbx, [rax + rbx*8]	      4320	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_3
0x4002b48	      0xe800000000	                          call 0x4002b4d	      4320	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_3
0x4002b4d	          0x488903	                    mov qword [rbx], rax	      4320	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_3
0x4002b50	          0x4489f3	                           mov ebx, r14d	      4320	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_3
0x4002b53	      0xe968ffffff	                           jmp 0x4002ac0	      4320	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_3
0x4002b58	     0xf1f84000000	                   nop dword [rax + rax]	      4320	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_3
0x4002b60	    0x8b0500000000	            mov eax, dword [0x04002b66] 	      4320	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_3
0x4002b66	            0x31ed	                            xor ebp, ebp	      4320	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_3
0x4002b68	    0x41bc01000000	                             mov r12d, 1	      4320	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_3
0x4002b6e	          0x4863d5	                         movsxd rdx, ebp	      4320	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_3
0x4002b71	            0x85c0	                           test eax, eax	      4326	getchar.c	FUNCTION_77	FOR_1	FOR_3	IF_10
0x4002b73	     0xf84a1000000	                            je 0x4002c1a	      4326	getchar.c	FUNCTION_77	FOR_1	FOR_3	IF_10
0x4002b79	          0x4885ed	                           test rbp, rbp	      4328	getchar.c	FUNCTION_77	FOR_1	FOR_3	IF_10	IF_11
0x4002b7c	     0xf85be000000	                           jne 0x4002c40	      4328	getchar.c	FUNCTION_77	FOR_1	FOR_3	IF_10	IF_11
0x4002b82	    0x4c8b35000000	            mov r14, qword [0x04002b89] 	      4330	getchar.c	FUNCTION_77	FOR_1	FOR_3	IF_10
0x4002b89	          0x4d85f6	                           test r14, r14	      4338	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4
0x4002b8c	            0x750a	                           jne 0x4002b98	      4338	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4
0x4002b8e	            0xeb77	                           jmp 0x4002c07	      4338	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4
0x4002b90	          0x4d8b36	                    mov r14, qword [r14]	      4338	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4
0x4002b93	          0x4d85f6	                           test r14, r14	      4338	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4
0x4002b96	            0x7460	                            je 0x4002bf8	      4338	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4
0x4002b98	        0x418b4624	            mov eax, dword [r14 + 0x24] 	      4340	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13
0x4002b9c	    0x850500000000	           test dword [0x04002ba2], eax 	      4340	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13
0x4002ba2	            0x74ec	                            je 0x4002b90	      4340	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13
0x4002ba4	        0x498b7e08	                mov rdi, qword [r14 + 8]	      4342	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	CALL_4
0x4002ba8	      0xbe01000000	                              mov esi, 1	      4342	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	CALL_4
0x4002bad	      0xe800000000	                          call 0x4002bb2	      4342	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	CALL_4
0x4002bb2	          0x4885c0	                           test rax, rax	      4343	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	CALL_5
0x4002bb5	          0x4989c5	                            mov r13, rax	      4342	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	CALL_4
0x4002bb8	            0x742e	                            je 0x4002be8	      4343	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	CALL_5
0x4002bba	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4343	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	CALL_5
0x4002bbf	            0x31d2	                            xor edx, edx	      4343	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	CALL_5
0x4002bc1	          0x4889c6	                            mov rsi, rax	      4343	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	CALL_5
0x4002bc4	      0xe800000000	                          call 0x4002bc9	      4343	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	CALL_5
0x4002bc9	            0x85c0	                           test eax, eax	      4343	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	CALL_5
0x4002bcb	            0x741b	                            je 0x4002be8	      4343	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	CALL_5
0x4002bcd	      0x837c241001	               cmp dword [rsp + 0x10], 1	      4345	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	IF_15
0x4002bd2	     0xf8465010000	                            je 0x4002d3d	      4345	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	IF_15
0x4002bd8	          0x498b07	                    mov rax, qword [r15]	      4349	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	ELSE_11
0x4002bdb	          0x4863d3	                         movsxd rdx, ebx	      4349	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	ELSE_11
0x4002bde	          0x83c301	                              add ebx, 1	      4349	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	ELSE_11
0x4002be1	        0x4c892cd0	            mov qword [rax + rdx*8], r13	      4349	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	ELSE_11
0x4002be5	          0x4531ed	                          xor r13d, r13d	      4350	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	ELSE_11
0x4002be8	          0x4c89ef	                            mov rdi, r13	      4353	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	CALL_6
0x4002beb	      0xe800000000	                          call 0x4002bf0	      4353	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	CALL_6
0x4002bf0	            0xeb9e	                           jmp 0x4002b90	      4353	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	CALL_6
0x4002bf2	    0x660f1f440000	                    nop word [rax + rax]	      4353	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	CALL_6
0x4002bf8	    0x4181fc000100	                         cmp r12d, 0x100	      4324	getchar.c	FUNCTION_77	FOR_1	FOR_3
0x4002bff	            0x743f	                            je 0x4002c40	      4324	getchar.c	FUNCTION_77	FOR_1	FOR_3
0x4002c01	    0x8b0500000000	            mov eax, dword [0x04002c07] 	      4324	getchar.c	FUNCTION_77	FOR_1	FOR_3
0x4002c07	        0x4883c501	                              add rbp, 1	      4324	getchar.c	FUNCTION_77	FOR_1	FOR_3
0x4002c0b	        0x4183c401	                             add r12d, 1	      4324	getchar.c	FUNCTION_77	FOR_1	FOR_3
0x4002c0f	            0x85c0	                           test eax, eax	      4326	getchar.c	FUNCTION_77	FOR_1	FOR_3	IF_10
0x4002c11	          0x4863d5	                         movsxd rdx, ebp	      4326	getchar.c	FUNCTION_77	FOR_1	FOR_3	IF_10
0x4002c14	     0xf855fffffff	                           jne 0x4002b79	      4326	getchar.c	FUNCTION_77	FOR_1	FOR_3	IF_10
0x4002c1a	    0x8b0500000000	            mov eax, dword [0x04002c20] 	      4333	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_9	IF_12
0x4002c20	            0x85c0	                           test eax, eax	      4333	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_9	IF_12
0x4002c22	            0x744c	                            je 0x4002c70	      4333	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_9	IF_12
0x4002c24	    0x488b05000000	            mov rax, qword [0x04002c2b] 	      4334	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_9	IF_12
0x4002c2b	    0x4c8bb4d0c009	   mov r14, qword [rax + rdx*8 + 0x9c0] 	      4334	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_9	IF_12
0x4002c33	      0xe95bffffff	                           jmp 0x4002b93	      4334	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_9	IF_12
0x4002c38	     0xf1f84000000	                   nop dword [rax + rax]	      4334	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_9	IF_12
0x4002c40	            0x85db	                           test ebx, ebx	      4358	getchar.c	FUNCTION_77	FOR_1	IF_16
0x4002c42	     0xf84cf000000	                            je 0x4002d17	      4358	getchar.c	FUNCTION_77	FOR_1	IF_16
0x4002c48	      0x837c241001	               cmp dword [rsp + 0x10], 1	      4361	getchar.c	FUNCTION_77	FOR_1	IF_17
0x4002c4d	     0xf84f2000000	                            je 0x4002d45	      4361	getchar.c	FUNCTION_77	FOR_1	IF_17
0x4002c53	      0x837c241403	               cmp dword [rsp + 0x14], 3	      4288	getchar.c	FUNCTION_77	FOR_1
0x4002c58	            0x7426	                            je 0x4002c80	      4288	getchar.c	FUNCTION_77	FOR_1
0x4002c5a	      0x8344241401	               add dword [rsp + 0x14], 1	      4288	getchar.c	FUNCTION_77	FOR_1
0x4002c5f	      0x8344241001	               add dword [rsp + 0x10], 1	      4288	getchar.c	FUNCTION_77	FOR_1
0x4002c64	      0xe942feffff	                           jmp 0x4002aab	      4288	getchar.c	FUNCTION_77	FOR_1
0x4002c69	     0xf1f80000000	                         nop dword [rax]	      4288	getchar.c	FUNCTION_77	FOR_1
0x4002c70	    0x4c8b34ed0000	                  mov r14, qword [rbp*8]	      4337	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10
0x4002c78	      0xe916ffffff	                           jmp 0x4002b93	      4337	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10
0x4002c7d	           0xf1f00	                         nop dword [rax]	      4337	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10
0x4002c80	          0x83fb01	                              cmp ebx, 1	      4369	getchar.c	FUNCTION_77	IF_19
0x4002c83	      0xbd01000000	                              mov ebp, 1	      4369	getchar.c	FUNCTION_77	IF_19
0x4002c88	            0x746b	                            je 0x4002cf5	      4369	getchar.c	FUNCTION_77	IF_19
0x4002c8a	          0x498b3f	                    mov rdi, qword [r15]	      4376	getchar.c	FUNCTION_77	IF_19	CALL_8
0x4002c8d	            0x89de	                            mov esi, ebx	      4376	getchar.c	FUNCTION_77	IF_19	CALL_8
0x4002c8f	      0xe800000000	                          call 0x4002c94	      4376	getchar.c	FUNCTION_77	IF_19	CALL_8
0x4002c94	          0x4d8b27	                    mov r12, qword [r15]	      4379	getchar.c	FUNCTION_77	IF_19
0x4002c97	          0x4863c3	                         movsxd rax, ebx	      4381	getchar.c	FUNCTION_77	IF_19
0x4002c9a	        0x4d8d34c4	                  lea r14, [r12 + rax*8]	      4381	getchar.c	FUNCTION_77	IF_19
0x4002c9e	      0x498d442408	                      lea rax, [r12 + 8]	      4383	getchar.c	FUNCTION_77	IF_19	WHILE_1
0x4002ca3	          0x4939c6	                            cmp r14, rax	      4383	getchar.c	FUNCTION_77	IF_19	WHILE_1
0x4002ca6	            0x764d	                           jbe 0x4002cf5	      4383	getchar.c	FUNCTION_77	IF_19	WHILE_1
0x4002ca8	      0x498d6c2410	                   lea rbp, [r12 + 0x10]	      4383	getchar.c	FUNCTION_77	IF_19	WHILE_1
0x4002cad	            0xeb13	                           jmp 0x4002cc2	      4383	getchar.c	FUNCTION_77	IF_19	WHILE_1
0x4002caf	              0x90	                                     nop	      4383	getchar.c	FUNCTION_77	IF_19	WHILE_1
0x4002cb0	      0x4d897c2408	                mov qword [r12 + 8], r15	      4386	getchar.c	FUNCTION_77	IF_19	WHILE_1	IF_20
0x4002cb5	        0x4883c508	                              add rbp, 8	      4386	getchar.c	FUNCTION_77	IF_19	WHILE_1	IF_20
0x4002cb9	        0x4983c408	                              add r12, 8	      4386	getchar.c	FUNCTION_77	IF_19	WHILE_1	IF_20
0x4002cbd	          0x4d39f5	                            cmp r13, r14	      4383	getchar.c	FUNCTION_77	IF_19	WHILE_1
0x4002cc0	            0x732b	                           jae 0x4002ced	      4383	getchar.c	FUNCTION_77	IF_19	WHILE_1
0x4002cc2	        0x4c8b7df8	                mov r15, qword [rbp - 8]	      4385	getchar.c	FUNCTION_77	IF_19	WHILE_1	IF_20	CALL_9
0x4002cc6	        0x498b3c24	                    mov rdi, qword [r12]	      4385	getchar.c	FUNCTION_77	IF_19	WHILE_1	IF_20	CALL_9
0x4002cca	          0x4989ed	                            mov r13, rbp	      4385	getchar.c	FUNCTION_77	IF_19	WHILE_1	IF_20	CALL_9
0x4002ccd	          0x4c89fe	                            mov rsi, r15	      4385	getchar.c	FUNCTION_77	IF_19	WHILE_1	IF_20	CALL_9
0x4002cd0	      0xe800000000	                          call 0x4002cd5	      4385	getchar.c	FUNCTION_77	IF_19	WHILE_1	IF_20	CALL_9
0x4002cd5	            0x85c0	                           test eax, eax	      4385	getchar.c	FUNCTION_77	IF_19	WHILE_1	IF_20	CALL_9
0x4002cd7	            0x75d7	                           jne 0x4002cb0	      4385	getchar.c	FUNCTION_77	IF_19	WHILE_1	IF_20	CALL_9
0x4002cd9	          0x4c89ff	                            mov rdi, r15	      4389	getchar.c	FUNCTION_77	IF_19	WHILE_1	ELSE_12	CALL_10
0x4002cdc	          0x83eb01	                              sub ebx, 1	      4390	getchar.c	FUNCTION_77	IF_19	WHILE_1	ELSE_12
0x4002cdf	        0x4883c508	                              add rbp, 8	      4390	getchar.c	FUNCTION_77	IF_19	WHILE_1	ELSE_12
0x4002ce3	      0xe800000000	                          call 0x4002ce8	      4389	getchar.c	FUNCTION_77	IF_19	WHILE_1	ELSE_12	CALL_10
0x4002ce8	          0x4d39f5	                            cmp r13, r14	      4383	getchar.c	FUNCTION_77	IF_19	WHILE_1
0x4002ceb	            0x72d5	                            jb 0x4002cc2	      4383	getchar.c	FUNCTION_77	IF_19	WHILE_1
0x4002ced	            0x31ed	                            xor ebp, ebp	      4383	getchar.c	FUNCTION_77	IF_19	WHILE_1
0x4002cef	            0x85db	                           test ebx, ebx	      4383	getchar.c	FUNCTION_77	IF_19	WHILE_1
0x4002cf1	        0x400f95c5	                               setne bpl	      4383	getchar.c	FUNCTION_77	IF_19	WHILE_1
0x4002cf5	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4395	getchar.c	FUNCTION_77
0x4002cfa	            0x8918	                    mov dword [rax], ebx	      4395	getchar.c	FUNCTION_77
0x4002cfc	        0x4883c428	                           add rsp, 0x28	      4397	getchar.c	FUNCTION_77
0x4002d00	            0x89e8	                            mov eax, ebp	      4397	getchar.c	FUNCTION_77
0x4002d02	              0x5b	                                 pop rbx	      4397	getchar.c	FUNCTION_77
0x4002d03	              0x5d	                                 pop rbp	      4397	getchar.c	FUNCTION_77
0x4002d04	            0x415c	                                 pop r12	      4397	getchar.c	FUNCTION_77
0x4002d06	            0x415d	                                 pop r13	      4397	getchar.c	FUNCTION_77
0x4002d08	            0x415e	                                 pop r14	      4397	getchar.c	FUNCTION_77
0x4002d0a	            0x415f	                                 pop r15	      4397	getchar.c	FUNCTION_77
0x4002d0c	              0xc3	                                     ret	      4397	getchar.c	FUNCTION_77
0x4002d0d	      0xe85ed8ffff	        call sym.validate_maphash.part.2	      4397	getchar.c	FUNCTION_77
0x4002d12	      0xe972fdffff	                           jmp 0x4002a89	      4397	getchar.c	FUNCTION_77
0x4002d17	            0x31ed	                            xor ebp, ebp	      4397	getchar.c	FUNCTION_77
0x4002d19	            0xebda	                           jmp 0x4002cf5	      4397	getchar.c	FUNCTION_77
0x4002d1b	    0x41bd00000000	                             mov r13d, 0	      4302	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_3	IF_4
0x4002d21	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x4002d26	            0x31d2	                            xor edx, edx	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x4002d28	          0x4c89ee	                            mov rsi, r13	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x4002d2b	      0xe800000000	                          call 0x4002d30	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x4002d30	            0x85c0	                           test eax, eax	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x4002d32	     0xf8491fdffff	                            je 0x4002ac9	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x4002d38	      0xe9effdffff	                           jmp 0x4002b2c	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x4002d3d	          0x83c301	                              add ebx, 1	      4346	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	IF_15
0x4002d40	      0xe9a3feffff	                           jmp 0x4002be8	      4346	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	IF_15
0x4002d45	    0x8d3cdd000000	                        lea edi, [rbx*8]	      4363	getchar.c	FUNCTION_77	FOR_1	IF_17	CALL_7
0x4002d4c	      0xe800000000	                          call 0x4002d51	      4363	getchar.c	FUNCTION_77	FOR_1	IF_17	CALL_7
0x4002d51	          0x4885c0	                           test rax, rax	      4364	getchar.c	FUNCTION_77	FOR_1	IF_17	IF_18
0x4002d54	          0x498907	                    mov qword [r15], rax	      4363	getchar.c	FUNCTION_77	FOR_1	IF_17	CALL_7
0x4002d57	     0xf85fdfeffff	                           jne 0x4002c5a	      4364	getchar.c	FUNCTION_77	FOR_1	IF_17	IF_18
0x4002d5d	            0x31ed	                            xor ebp, ebp	      4365	getchar.c	FUNCTION_77	FOR_1	IF_17	IF_18
0x4002d5f	            0xeb9b	                           jmp 0x4002cfc	      4365	getchar.c	FUNCTION_77	FOR_1	IF_17	IF_18
0x4002d61	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x4002d66	            0x31d2	                            xor edx, edx	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x4002d68	      0xbe00000000	                              mov esi, 0	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x4002d6d	      0xe800000000	                          call 0x4002d72	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x4002d72	            0x85c0	                           test eax, eax	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x4002d74	     0xf844ffdffff	                            je 0x4002ac9	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x4002d7a	    0x41bd00000000	                             mov r13d, 0	      4295	getchar.c	FUNCTION_77	FOR_1	FOR_2	IF_1
0x4002d80	      0xe9a7fdffff	                           jmp 0x4002b2c	      4295	getchar.c	FUNCTION_77	FOR_1	FOR_2	IF_1
0x4002d85	    0x41bd00000000	                             mov r13d, 0	      4300	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_2	IF_3
0x4002d8b	            0xeb94	                           jmp 0x4002d21	      4300	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_2	IF_3
0x4002d8d	    0x41bd00000000	                             mov r13d, 0	      4297	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_1	IF_2
0x4002d93	            0xeb8c	                           jmp 0x4002d21	      4297	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_1	IF_2
0x4002d95	          0x83c301	                              add ebx, 1	      4318	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	IF_9
0x4002d98	      0xe923fdffff	                           jmp 0x4002ac0	      4318	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	IF_9
0x4002d9d	    0x41bd00000000	                             mov r13d, 0	      4309	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_5	IF_6
0x4002da3	      0xe979ffffff	                           jmp 0x4002d21	      4309	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_5	IF_6
0x4002da8	    0x8b1500000000	            mov edx, dword [0x04002dae] 	      4305	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_4	IF_5
0x4002dae	            0x85d2	                           test edx, edx	      4305	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_4	IF_5
0x4002db0	     0xf850afdffff	                           jne 0x4002ac0	      4305	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_4	IF_5
0x4002db6	    0x41bd00000000	                             mov r13d, 0	      4306	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_4	IF_5
0x4002dbc	      0xe960ffffff	                           jmp 0x4002d21	      4306	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_4	IF_5
set_context_in_map_cmd	WHILE,0:ELSE,2:functions,0:SWITCH,0:CALL,15:IF,10:DO,0:FOR,1	118
0x4002870	            0x4157	                                push r15	      4193	getchar.c	FUNCTION_76
0x4002872	            0x4156	                                push r14	      4193	getchar.c	FUNCTION_76
0x4002874	          0x4989fe	                            mov r14, rdi	      4193	getchar.c	FUNCTION_76
0x4002877	            0x4155	                                push r13	      4193	getchar.c	FUNCTION_76
0x4002879	            0x4154	                                push r12	      4193	getchar.c	FUNCTION_76
0x400287b	              0x55	                                push rbp	      4193	getchar.c	FUNCTION_76
0x400287c	              0x53	                                push rbx	      4193	getchar.c	FUNCTION_76
0x400287d	        0x4883ec28	                           sub rsp, 0x28	      4193	getchar.c	FUNCTION_76
0x4002881	        0x8b442460	            mov eax, dword [rsp + 0x60] 	      4193	getchar.c	FUNCTION_76
0x4002885	      0x4889742418	             mov qword [rsp + 0x18], rsi	      4193	getchar.c	FUNCTION_76
0x400288a	      0x3d06010000	                          cmp eax, 0x106	      4194	getchar.c	FUNCTION_76	IF_1
0x400288f	        0x400f95c6	                               setne sil	      4194	getchar.c	FUNCTION_76	IF_1
0x4002893	      0x3de4010000	                          cmp eax, 0x1e4	      4194	getchar.c	FUNCTION_76	IF_1
0x4002898	           0xf95c0	                                setne al	      4194	getchar.c	FUNCTION_76	IF_1
0x400289b	          0x4084c6	                            test sil, al	      4194	getchar.c	FUNCTION_76	IF_1
0x400289e	            0x7420	                            je 0x40028c0	      4194	getchar.c	FUNCTION_76	IF_1
0x40028a0	            0x85c9	                           test ecx, ecx	      4194	getchar.c	FUNCTION_76	IF_1
0x40028a2	            0x741c	                            je 0x40028c0	      4194	getchar.c	FUNCTION_76	IF_1
0x40028a4	    0xc70700000000	                      mov dword [rdi], 0	      4195	getchar.c	FUNCTION_76	IF_1
0x40028aa	        0x4883c428	                           add rsp, 0x28	      4259	getchar.c	FUNCTION_76
0x40028ae	            0x31c0	                            xor eax, eax	      4259	getchar.c	FUNCTION_76
0x40028b0	              0x5b	                                 pop rbx	      4259	getchar.c	FUNCTION_76
0x40028b1	              0x5d	                                 pop rbp	      4259	getchar.c	FUNCTION_76
0x40028b2	            0x415c	                                 pop r12	      4259	getchar.c	FUNCTION_76
0x40028b4	            0x415d	                                 pop r13	      4259	getchar.c	FUNCTION_76
0x40028b6	            0x415e	                                 pop r14	      4259	getchar.c	FUNCTION_76
0x40028b8	            0x415f	                                 pop r15	      4259	getchar.c	FUNCTION_76
0x40028ba	              0xc3	                                     ret	      4259	getchar.c	FUNCTION_76
0x40028bb	       0xf1f440000	                   nop dword [rax + rax]	      4259	getchar.c	FUNCTION_76
0x40028c0	          0x4585c9	                           test r9d, r9d	      4198	getchar.c	FUNCTION_76	ELSE_1	IF_2
0x40028c3	     0xf85e7000000	                           jne 0x40029b0	      4198	getchar.c	FUNCTION_76	ELSE_1	IF_2
0x40028c9	        0x4183f801	                              cmp r8d, 1	      4202	getchar.c	FUNCTION_76	ELSE_1	ELSE_2
0x40028cd	            0x19c0	                            sbb eax, eax	      4202	getchar.c	FUNCTION_76	ELSE_1	ELSE_2
0x40028cf	      0x2507100000	                         and eax, 0x1007	      4202	getchar.c	FUNCTION_76	ELSE_1	ELSE_2
0x40028d4	          0x83c018	                           add eax, 0x18	      4202	getchar.c	FUNCTION_76	ELSE_1	ELSE_2
0x40028d7	    0x890500000000	            mov dword [0x040028dd], eax 	      4202	getchar.c	FUNCTION_76	ELSE_1	ELSE_2
0x40028dd	    0x448905000000	            mov dword [0x040028e4], r8d 	      4206	getchar.c	FUNCTION_76	ELSE_1
0x40028e4	    0x41c706100000	                   mov dword [r14], 0x10	      4207	getchar.c	FUNCTION_76	ELSE_1
0x40028eb	      0xbb00000000	                              mov ebx, 0	      4207	getchar.c	FUNCTION_76	ELSE_1
0x40028f0	    0xc70500000000	               mov dword [0x040028fa], 0	      4209	getchar.c	FUNCTION_76	ELSE_1
0x40028fa	      0xbd00000000	                              mov ebp, 0	      4209	getchar.c	FUNCTION_76	ELSE_1
0x40028ff	    0x41bc00000000	                             mov r12d, 0	      4209	getchar.c	FUNCTION_76	ELSE_1
0x4002905	    0x41bd00000000	                             mov r13d, 0	      4209	getchar.c	FUNCTION_76	ELSE_1
0x400290b	    0x41bf00000000	                             mov r15d, 0	      4209	getchar.c	FUNCTION_76	ELSE_1
0x4002911	     0xf1f80000000	                         nop dword [rax]	      4209	getchar.c	FUNCTION_76	ELSE_1
0x4002918	      0xb908000000	                              mov ecx, 8	      4214	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_4	CALL_2
0x400291d	          0x4889d6	                            mov rsi, rdx	      4214	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_4	CALL_2
0x4002920	          0x4889df	                            mov rdi, rbx	      4214	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_4	CALL_2
0x4002923	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4214	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_4	CALL_2
0x4002925	     0xf84dc000000	                            je 0x4002a07	      4214	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_4	CALL_2
0x400292b	      0xb908000000	                              mov ecx, 8	      4221	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_5	CALL_4
0x4002930	          0x4889d6	                            mov rsi, rdx	      4221	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_5	CALL_4
0x4002933	          0x4889ef	                            mov rdi, rbp	      4221	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_5	CALL_4
0x4002936	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4221	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_5	CALL_4
0x4002938	     0xf84aa000000	                            je 0x40029e8	      4221	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_5	CALL_4
0x400293e	      0xb908000000	                              mov ecx, 8	      4226	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_6	CALL_6
0x4002943	          0x4889d6	                            mov rsi, rdx	      4226	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_6	CALL_6
0x4002946	          0x4c89e7	                            mov rdi, r12	      4226	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_6	CALL_6
0x4002949	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4226	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_6	CALL_6
0x400294b	     0xf8497000000	                            je 0x40029e8	      4226	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_6	CALL_6
0x4002951	      0xb908000000	                              mov ecx, 8	      4231	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_7	CALL_8
0x4002956	          0x4889d6	                            mov rsi, rdx	      4231	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_7	CALL_8
0x4002959	          0x4c89ef	                            mov rdi, r13	      4231	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_7	CALL_8
0x400295c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4231	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_7	CALL_8
0x400295e	     0xf8484000000	                            je 0x40029e8	      4231	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_7	CALL_8
0x4002964	      0xb909000000	                              mov ecx, 9	      4236	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_8	CALL_10
0x4002969	          0x4889d6	                            mov rsi, rdx	      4236	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_8	CALL_10
0x400296c	          0x4c89ff	                            mov rdi, r15	      4236	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_8	CALL_10
0x400296f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4236	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_8	CALL_10
0x4002971	     0xf84b1000000	                            je 0x4002a28	      4236	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_8	CALL_10
0x4002977	      0xb908000000	                              mov ecx, 8	      4242	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_9	CALL_12
0x400297c	          0x4889d6	                            mov rsi, rdx	      4242	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_9	CALL_12
0x400297f	      0xbf00000000	                              mov edi, 0	      4242	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_9	CALL_12
0x4002984	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4242	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_9	CALL_12
0x4002986	            0x7460	                            je 0x40029e8	      4242	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_9	CALL_12
0x4002988	      0xb906000000	                              mov ecx, 6	      4247	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_10	CALL_14
0x400298d	          0x4889d6	                            mov rsi, rdx	      4247	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_10	CALL_14
0x4002990	      0xbf00000000	                              mov edi, 0	      4247	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_10	CALL_14
0x4002995	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4247	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_10	CALL_14
0x4002997	     0xf84a3000000	                            je 0x4002a40	      4247	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_10	CALL_14
0x400299d	        0x49895608	                mov qword [r14 + 8], rdx	      4255	getchar.c	FUNCTION_76	ELSE_1
0x40029a1	      0xe904ffffff	                           jmp 0x40028aa	      4255	getchar.c	FUNCTION_76	ELSE_1
0x40029a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4255	getchar.c	FUNCTION_76	ELSE_1
0x40029b0	          0x4409c1	                             or ecx, r8d	      4199	getchar.c	FUNCTION_76	ELSE_1	CALL_1
0x40029b3	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      4199	getchar.c	FUNCTION_76	ELSE_1	CALL_1
0x40029b8	      0x4889542410	             mov qword [rsp + 0x10], rdx	      4199	getchar.c	FUNCTION_76	ELSE_1	CALL_1
0x40029bd	        0x400f95c6	                               setne sil	      4199	getchar.c	FUNCTION_76	ELSE_1	CALL_1
0x40029c1	      0x448944240c	              mov dword [rsp + 0xc], r8d	      4199	getchar.c	FUNCTION_76	ELSE_1	CALL_1
0x40029c6	        0x400fb6f6	                          movzx esi, sil	      4199	getchar.c	FUNCTION_76	ELSE_1	CALL_1
0x40029ca	      0xe800000000	                          call 0x40029cf	      4199	getchar.c	FUNCTION_76	ELSE_1	CALL_1
0x40029cf	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      4199	getchar.c	FUNCTION_76	ELSE_1	CALL_1
0x40029d4	    0x890500000000	            mov dword [0x040029da], eax 	      4199	getchar.c	FUNCTION_76	ELSE_1	CALL_1
0x40029da	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      4199	getchar.c	FUNCTION_76	ELSE_1	CALL_1
0x40029df	      0xe9f9feffff	                           jmp 0x40028dd	      4199	getchar.c	FUNCTION_76	ELSE_1	CALL_1
0x40029e4	         0xf1f4000	                         nop dword [rax]	      4199	getchar.c	FUNCTION_76	ELSE_1	CALL_1
0x40029e8	        0x488d7a08	                      lea rdi, [rdx + 8]	      4244	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_9	CALL_13
0x40029ec	      0xe800000000	                          call 0x40029f1	      4244	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_9	CALL_13
0x40029f1	          0x4889c2	                            mov rdx, rax	      4244	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_9	CALL_13
0x40029f4	      0xb908000000	                              mov ecx, 8	      4214	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_4	CALL_2
0x40029f9	          0x4889df	                            mov rdi, rbx	      4214	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_4	CALL_2
0x40029fc	          0x4889d6	                            mov rsi, rdx	      4214	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_4	CALL_2
0x40029ff	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4214	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_4	CALL_2
0x4002a01	     0xf8524ffffff	                           jne 0x400292b	      4214	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_4	CALL_2
0x4002a07	        0x488d7a08	                      lea rdi, [rdx + 8]	      4217	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_4	CALL_3
0x4002a0b	    0xc70500000000	               mov dword [0x04002a15], 1	      4216	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_4
0x4002a15	      0xe800000000	                          call 0x4002a1a	      4217	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_4	CALL_3
0x4002a1a	          0x4889c2	                            mov rdx, rax	      4217	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_4	CALL_3
0x4002a1d	      0xe9f6feffff	                           jmp 0x4002918	      4218	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_4
0x4002a22	    0x660f1f440000	                    nop word [rax + rax]	      4218	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_4
0x4002a28	        0x488d7a09	                      lea rdi, [rdx + 9]	      4238	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_8	CALL_11
0x4002a2c	      0xe800000000	                          call 0x4002a31	      4238	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_8	CALL_11
0x4002a31	          0x4889c2	                            mov rdx, rax	      4238	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_8	CALL_11
0x4002a34	      0xe9dffeffff	                           jmp 0x4002918	      4239	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_8
0x4002a39	     0xf1f80000000	                         nop dword [rax]	      4239	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_8
0x4002a40	        0x488d7a06	                      lea rdi, [rdx + 6]	      4249	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_10	CALL_15
0x4002a44	      0xe800000000	                          call 0x4002a49	      4249	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_10	CALL_15
0x4002a49	          0x4889c2	                            mov rdx, rax	      4249	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_10	CALL_15
0x4002a4c	      0xe9c7feffff	                           jmp 0x4002918	      4250	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_10
ins_char_typebuf	WHILE,0:ELSE,1:functions,0:SWITCH,0:CALL,4:IF,1:DO,0:FOR,0	39
0x4001630	              0x53	                                push rbx	      1093	getchar.c	FUNCTION_36
0x4001631	        0x4883ec20	                           sub rsp, 0x20	      1093	getchar.c	FUNCTION_36
0x4001635	    0x64488b042528	                mov rax, qword fs:[0x28]	      1093	getchar.c	FUNCTION_36
0x400163e	      0x4889442418	             mov qword [rsp + 0x18], rax	      1093	getchar.c	FUNCTION_36
0x4001643	            0x31c0	                            xor eax, eax	      1093	getchar.c	FUNCTION_36
0x4001645	            0x85ff	                           test edi, edi	      1099	getchar.c	FUNCTION_36	IF_1	CALL_1
0x4001647	            0x784f	                            js 0x4001698	      1099	getchar.c	FUNCTION_36	IF_1	CALL_1
0x4001649	          0x4889e6	                            mov rsi, rsp	      1109	getchar.c	FUNCTION_36	ELSE_1
0x400164c	          0x4889e3	                            mov rbx, rsp	      1109	getchar.c	FUNCTION_36	ELSE_1
0x400164f	    0xff1500000000	                 call qword [0x04001655]	      1109	getchar.c	FUNCTION_36	ELSE_1
0x4001655	            0x4898	                                    cdqe	      1109	getchar.c	FUNCTION_36	ELSE_1
0x4001657	        0xc6040400	                 mov byte [rsp + rax], 0	      1109	getchar.c	FUNCTION_36	ELSE_1
0x400165b	    0x8b0500000000	            mov eax, dword [0x04001661] 	      1115	getchar.c	FUNCTION_36	CALL_4
0x4001661	    0x448b05000000	            mov r8d, dword [0x04001668] 	      1115	getchar.c	FUNCTION_36	CALL_4
0x4001668	            0x31c9	                            xor ecx, ecx	      1115	getchar.c	FUNCTION_36	CALL_4
0x400166a	    0x8b3500000000	            mov esi, dword [0x04001670] 	      1115	getchar.c	FUNCTION_36	CALL_4
0x4001670	          0x4889df	                            mov rdi, rbx	      1115	getchar.c	FUNCTION_36	CALL_4
0x4001673	            0x85c0	                           test eax, eax	      1115	getchar.c	FUNCTION_36	CALL_4
0x4001675	           0xf94c1	                                 sete cl	      1115	getchar.c	FUNCTION_36	CALL_4
0x4001678	            0x31d2	                            xor edx, edx	      1115	getchar.c	FUNCTION_36	CALL_4
0x400167a	      0xe800000000	                          call 0x400167f	      1115	getchar.c	FUNCTION_36	CALL_4
0x400167f	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1116	getchar.c	FUNCTION_36
0x4001684	    0x644833042528	                xor rax, qword fs:[0x28]	      1116	getchar.c	FUNCTION_36
0x400168d	            0x7529	                           jne 0x40016b8	      1116	getchar.c	FUNCTION_36
0x400168f	        0x4883c420	                           add rsp, 0x20	      1116	getchar.c	FUNCTION_36
0x4001693	              0x5b	                                 pop rbx	      1116	getchar.c	FUNCTION_36
0x4001694	              0xc3	                                     ret	      1116	getchar.c	FUNCTION_36
0x4001695	           0xf1f00	                         nop dword [rax]	      1116	getchar.c	FUNCTION_36
0x4001698	            0x89f8	                            mov eax, edi	      1102	getchar.c	FUNCTION_36	IF_1	CALL_2
0x400169a	            0xf7df	                                 neg edi	      1103	getchar.c	FUNCTION_36	IF_1	CALL_3
0x400169c	        0xc6042480	                    mov byte [rsp], 0x80	      1101	getchar.c	FUNCTION_36	IF_1
0x40016a0	            0xf7d8	                                 neg eax	      1102	getchar.c	FUNCTION_36	IF_1	CALL_2
0x40016a2	          0xc1ef08	                              shr edi, 8	      1103	getchar.c	FUNCTION_36	IF_1	CALL_3
0x40016a5	      0xc644240300	                   mov byte [rsp + 3], 0	      1104	getchar.c	FUNCTION_36	IF_1
0x40016aa	        0x88442401	                  mov byte [rsp + 1], al	      1102	getchar.c	FUNCTION_36	IF_1	CALL_2
0x40016ae	      0x40887c2402	                 mov byte [rsp + 2], dil	      1103	getchar.c	FUNCTION_36	IF_1	CALL_3
0x40016b3	          0x4889e3	                            mov rbx, rsp	      1103	getchar.c	FUNCTION_36	IF_1	CALL_3
0x40016b6	            0xeba3	                           jmp 0x400165b	      1103	getchar.c	FUNCTION_36	IF_1	CALL_3
0x40016b8	      0xe800000000	                          call 0x40016bd	      1116	getchar.c	FUNCTION_36
AppendNumberToRedobuff	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,1:IF,1:DO,0:FOR,0	8
0x4000f40	    0x8b0500000000	            mov eax, dword [0x04000f46] 	       644	getchar.c	FUNCTION_22	IF_1
0x4000f46	            0x85c0	                           test eax, eax	       644	getchar.c	FUNCTION_22	IF_1
0x4000f48	            0x7406	                            je 0x4000f50	       644	getchar.c	FUNCTION_22	IF_1
0x4000f4a	            0xf3c3	                                     ret	       644	getchar.c	FUNCTION_22	IF_1
0x4000f4c	         0xf1f4000	                         nop dword [rax]	       644	getchar.c	FUNCTION_22	IF_1
0x4000f50	          0x4889fe	                            mov rsi, rdi	       645	getchar.c	FUNCTION_22	CALL_1
0x4000f53	      0xbf00000000	                              mov edi, 0	       645	getchar.c	FUNCTION_22	CALL_1
0x4000f58	      0xe9c3f3ffff	                    jmp sym.add_num_buff	       645	getchar.c	FUNCTION_22	CALL_1
map_clear_int	WHILE,1:ELSE,4:functions,0:SWITCH,0:CALL,2:IF,8:DO,0:FOR,1	98
0x4002280	            0x4157	                                push r15	      3894	getchar.c	FUNCTION_71
0x4002282	            0x4156	                                push r14	      3894	getchar.c	FUNCTION_71
0x4002284	          0x4189f6	                           mov r14d, esi	      3894	getchar.c	FUNCTION_71
0x4002287	            0x4155	                                push r13	      3894	getchar.c	FUNCTION_71
0x4002289	            0x4154	                                push r12	      3894	getchar.c	FUNCTION_71
0x400228b	              0x55	                                push rbp	      3894	getchar.c	FUNCTION_71
0x400228c	              0x53	                                push rbx	      3894	getchar.c	FUNCTION_71
0x400228d	            0x89cd	                            mov ebp, ecx	      3894	getchar.c	FUNCTION_71
0x400228f	            0x89d3	                            mov ebx, edx	      3894	getchar.c	FUNCTION_71
0x4002291	        0x4883ec28	                           sub rsp, 0x28	      3894	getchar.c	FUNCTION_71
0x4002295	    0x8b0500000000	            mov eax, dword [0x0400229b] 	      3802	getchar.c	FUNCTION_68	IF_1
0x400229b	      0x48897c2410	             mov qword [rsp + 0x10], rdi	      3894	getchar.c	FUNCTION_71
0x40022a0	            0x85c0	                           test eax, eax	      3802	getchar.c	FUNCTION_68	IF_1
0x40022a2	     0xf8449010000	                            je 0x40023f1	      3802	getchar.c	FUNCTION_68	IF_1
0x40022a8	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3802	getchar.c	FUNCTION_68	IF_1
0x40022ad	          0x4589f5	                          mov r13d, r14d	      3928	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x40022b0	    0x48c744240800	                  mov qword [rsp + 8], 0	      3928	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x40022b9	          0x4531e4	                          xor r12d, r12d	      3894	getchar.c	FUNCTION_71
0x40022bc	          0x41f7d5	                                not r13d	      3928	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x40022bf	    0x488d88c00900	                  lea rcx, [rax + 0x9c0]	      3928	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x40022c6	    0x4805c0110000	                         add rax, 0x11c0	      3909	getchar.c	FUNCTION_71	FOR_1	IF_1	IF_3
0x40022cc	      0x4889442418	             mov qword [rsp + 0x18], rax	      3909	getchar.c	FUNCTION_71	FOR_1	IF_1	IF_3
0x40022d1	        0x48890c24	                    mov qword [rsp], rcx	      3909	getchar.c	FUNCTION_71	FOR_1	IF_1	IF_3
0x40022d5	            0x85ed	                           test ebp, ebp	      3903	getchar.c	FUNCTION_71	FOR_1	IF_1
0x40022d7	     0xf8403010000	                            je 0x40023e0	      3903	getchar.c	FUNCTION_71	FOR_1	IF_1
0x40022dd	          0x4585e4	                         test r12d, r12d	      3905	getchar.c	FUNCTION_71	FOR_1	IF_1	IF_2
0x40022e0	     0xf859e000000	                           jne 0x4002384	      3905	getchar.c	FUNCTION_71	FOR_1	IF_1	IF_2
0x40022e6	            0x85db	                           test ebx, ebx	      3909	getchar.c	FUNCTION_71	FOR_1	IF_1	IF_3
0x40022e8	    0x41bf00000000	                             mov r15d, 0	      3909	getchar.c	FUNCTION_71	FOR_1	IF_1	IF_3
0x40022ee	    0x4c0f457c2418	          cmovne r15, qword [rsp + 0x18]	      3909	getchar.c	FUNCTION_71	FOR_1	IF_1	IF_3
0x40022f4	         0xf1f4000	                         nop dword [rax]	      3909	getchar.c	FUNCTION_71	FOR_1	IF_1	IF_3
0x40022f8	          0x498b07	                    mov rax, qword [r15]	      3923	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1
0x40022fb	          0x4885c0	                           test rax, rax	      3923	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1
0x40022fe	            0x7468	                            je 0x4002368	      3923	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1
0x4002300	          0x8b7824	            mov edi, dword [rax + 0x24] 	      3926	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x4002303	          0x4485f7	                          test edi, r14d	      3926	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x4002306	     0xf848c000000	                            je 0x4002398	      3926	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x400230c	          0x4421ef	                           and edi, r13d	      3928	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x400230f	            0x85ff	                           test edi, edi	      3929	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_6
0x4002311	          0x897824	             mov dword [rax + 0x24], edi	      3928	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x4002314	     0xf8496000000	                            je 0x40023b0	      3929	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_6
0x400231a	    0x81e707300000	                         and edi, 0x3007	      3937	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x4002320	        0x488b7808	                mov rdi, qword [rax + 8]	      3937	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x4002324	            0x747a	                            je 0x40023a0	      3937	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x4002326	           0xfb63f	                   movzx edi, byte [rdi]	      3937	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x4002329	            0x85ed	                           test ebp, ebp	      3938	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7
0x400232b	            0x756b	                           jne 0x4002398	      3938	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7
0x400232d	          0x4439e7	                           cmp edi, r12d	      3938	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7
0x4002330	            0x7466	                            je 0x4002398	      3938	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7
0x4002332	          0x4c8b10	                    mov r10, qword [rax]	      3940	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7
0x4002335	            0x85db	                           test ebx, ebx	      3942	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7	IF_8
0x4002337	          0x4d8917	                    mov qword [r15], r10	      3940	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7
0x400233a	     0xf8480000000	                            je 0x40023c0	      3942	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7	IF_8
0x4002340	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      3942	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7	IF_8
0x4002345	        0x488d3cfa	                  lea rdi, [rdx + rdi*8]	      3942	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7	IF_8
0x4002349	    0x4c8b97c00900	           mov r10, qword [rdi + 0x9c0] 	      3944	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7	IF_8
0x4002350	          0x4c8910	                    mov qword [rax], r10	      3944	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7	IF_8
0x4002353	    0x488987c00900	            mov qword [rdi + 0x9c0], rax	      3945	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7	IF_8
0x400235a	          0x498b07	                    mov rax, qword [r15]	      3923	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1
0x400235d	          0x4885c0	                           test rax, rax	      3923	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1
0x4002360	            0x759e	                           jne 0x4002300	      3923	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1
0x4002362	    0x660f1f440000	                    nop word [rax + rax]	      3923	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1
0x4002368	        0x4183c401	                             add r12d, 1	      3901	getchar.c	FUNCTION_71	FOR_1
0x400236c	      0x4883042408	                      add qword [rsp], 8	      3901	getchar.c	FUNCTION_71	FOR_1
0x4002371	    0x488344240808	                  add qword [rsp + 8], 8	      3901	getchar.c	FUNCTION_71	FOR_1
0x4002377	    0x4181fc000100	                         cmp r12d, 0x100	      3901	getchar.c	FUNCTION_71	FOR_1
0x400237e	     0xf8551ffffff	                           jne 0x40022d5	      3901	getchar.c	FUNCTION_71	FOR_1
0x4002384	        0x4883c428	                           add rsp, 0x28	      3959	getchar.c	FUNCTION_71
0x4002388	              0x5b	                                 pop rbx	      3959	getchar.c	FUNCTION_71
0x4002389	              0x5d	                                 pop rbp	      3959	getchar.c	FUNCTION_71
0x400238a	            0x415c	                                 pop r12	      3959	getchar.c	FUNCTION_71
0x400238c	            0x415d	                                 pop r13	      3959	getchar.c	FUNCTION_71
0x400238e	            0x415e	                                 pop r14	      3959	getchar.c	FUNCTION_71
0x4002390	            0x415f	                                 pop r15	      3959	getchar.c	FUNCTION_71
0x4002392	              0xc3	                                     ret	      3959	getchar.c	FUNCTION_71
0x4002393	       0xf1f440000	                   nop dword [rax + rax]	      3959	getchar.c	FUNCTION_71
0x4002398	          0x4989c7	                            mov r15, rax	      3956	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1
0x400239b	      0xe958ffffff	                           jmp 0x40022f8	      3956	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1
0x40023a0	           0xfb63f	                   movzx edi, byte [rdi]	      3937	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x40023a3	          0x83c780	             add edi, 0xffffffffffffff80	      3937	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x40023a6	        0x400fb6ff	                          movzx edi, dil	      3937	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x40023aa	      0xe97affffff	                           jmp 0x4002329	      3937	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x40023af	              0x90	                                     nop	      3937	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x40023b0	          0x4c89ff	                            mov rdi, r15	      3931	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_6	CALL_2
0x40023b3	      0xe888dcffff	                       call sym.map_free	      3931	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_6	CALL_2
0x40023b8	      0xe93bffffff	                           jmp 0x40022f8	      3932	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_6
0x40023bd	           0xf1f00	                         nop dword [rax]	      3932	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_6
0x40023c0	    0x4c8b14fd0000	                  mov r10, qword [rdi*8]	      3950	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7	ELSE_4
0x40023c8	          0x4c8910	                    mov qword [rax], r10	      3950	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7	ELSE_4
0x40023cb	    0x488904fd0000	                  mov qword [rdi*8], rax	      3951	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7	ELSE_4
0x40023d3	      0xe920ffffff	                           jmp 0x40022f8	      3951	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7	ELSE_4
0x40023d8	     0xf1f84000000	                   nop dword [rax + rax]	      3951	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7	ELSE_4
0x40023e0	            0x85db	                           test ebx, ebx	      3918	getchar.c	FUNCTION_71	FOR_1	ELSE_2	IF_4
0x40023e2	        0x4c8b3c24	                    mov r15, qword [rsp]	      3918	getchar.c	FUNCTION_71	FOR_1	ELSE_2	IF_4
0x40023e6	    0x4c0f447c2408	              cmove r15, qword [rsp + 8]	      3918	getchar.c	FUNCTION_71	FOR_1	ELSE_2	IF_4
0x40023ec	      0xe907ffffff	                           jmp 0x40022f8	      3918	getchar.c	FUNCTION_71	FOR_1	ELSE_2	IF_4
0x40023f1	      0xe87ae1ffff	        call sym.validate_maphash.part.2	      3918	getchar.c	FUNCTION_71	FOR_1	ELSE_2	IF_4
0x40023f6	      0xe9adfeffff	                           jmp 0x40022a8	      3918	getchar.c	FUNCTION_71	FOR_1	ELSE_2	IF_4
flush_buffers	WHILE,2:ELSE,1:functions,0:SWITCH,0:CALL,4:IF,1:DO,0:FOR,0	42
0x40020d0	    0x48833d000000	               cmp qword [0x040020d8], 0	       919	getchar.c	FUNCTION_34	IF_1
0x40020d8	              0x53	                                push rbx	       451	getchar.c	FUNCTION_14
0x40020d9	            0x89fb	                            mov ebx, edi	       451	getchar.c	FUNCTION_14
0x40020db	     0xf84cd000000	                            je 0x40021ae	       919	getchar.c	FUNCTION_34	IF_1
0x40020e1	    0x48833d000000	               cmp qword [0x040020e9], 0	       403	getchar.c	FUNCTION_10	IF_1
0x40020e9	            0x7415	                            je 0x4002100	       403	getchar.c	FUNCTION_10	IF_1
0x40020eb	    0x48c705000000	               mov qword [0x040020f6], 0	       405	getchar.c	FUNCTION_10	IF_1
0x40020f6	    0xc70500000000	               mov dword [0x04002100], 0	       406	getchar.c	FUNCTION_10	IF_1
0x4002100	    0x48833d000000	               cmp qword [0x04002108], 0	       408	getchar.c	FUNCTION_10	IF_2
0x4002108	            0x7416	                            je 0x4002120	       408	getchar.c	FUNCTION_10	IF_2
0x400210a	    0x48c705000000	               mov qword [0x04002115], 0	       410	getchar.c	FUNCTION_10	IF_2
0x4002115	    0xc70500000000	               mov dword [0x0400211f], 0	       411	getchar.c	FUNCTION_10	IF_2
0x400211f	              0x90	                                     nop	       411	getchar.c	FUNCTION_10	IF_2
0x4002120	      0xbf01000000	                              mov edi, 1	       455	getchar.c	FUNCTION_14	WHILE_1	CALL_3
0x4002125	      0xe816e7ffff	               call sym.read_readbuffers	       455	getchar.c	FUNCTION_14	WHILE_1	CALL_3
0x400212a	            0x85c0	                           test eax, eax	       455	getchar.c	FUNCTION_14	WHILE_1	CALL_3
0x400212c	            0x75f2	                           jne 0x4002120	       455	getchar.c	FUNCTION_14	WHILE_1	CALL_3
0x400212e	            0x85db	                           test ebx, ebx	       458	getchar.c	FUNCTION_14	IF_1
0x4002130	            0x753e	                           jne 0x4002170	       458	getchar.c	FUNCTION_14	IF_1
0x4002132	    0x8b0500000000	            mov eax, dword [0x04002138] 	       477	getchar.c	FUNCTION_14	ELSE_1
0x4002138	     0x10500000000	             add dword [0x0400213e], eax	       477	getchar.c	FUNCTION_14	ELSE_1
0x400213e	    0x290500000000	             sub dword [0x04002144], eax	       478	getchar.c	FUNCTION_14	ELSE_1
0x4002144	    0xc70500000000	               mov dword [0x0400214e], 0	       480	getchar.c	FUNCTION_14
0x400214e	    0xc70500000000	               mov dword [0x04002158], 0	       481	getchar.c	FUNCTION_14
0x4002158	    0xc70500000000	               mov dword [0x04002162], 0	       482	getchar.c	FUNCTION_14
0x4002162	    0xc70500000000	               mov dword [0x0400216c], 0	       483	getchar.c	FUNCTION_14
0x400216c	              0x5b	                                 pop rbx	       484	getchar.c	FUNCTION_14
0x400216d	              0xc3	                                     ret	       484	getchar.c	FUNCTION_14
0x400216e	            0x6690	                                     nop	       484	getchar.c	FUNCTION_14
0x4002170	    0x8b0500000000	            mov eax, dword [0x04002176] 	       465	getchar.c	FUNCTION_14	IF_1	WHILE_2	CALL_4
0x4002176	    0x488b3d000000	            mov rdi, qword [0x0400217d] 	       465	getchar.c	FUNCTION_14	IF_1	WHILE_2	CALL_4
0x400217d	      0xba0a000000	                            mov edx, 0xa	       465	getchar.c	FUNCTION_14	IF_1	WHILE_2	CALL_4
0x4002182	          0x8d70ff	                      lea esi, [rax - 1]	       465	getchar.c	FUNCTION_14	IF_1	WHILE_2	CALL_4
0x4002185	      0xe806fdffff	                         call sym.inchar	       465	getchar.c	FUNCTION_14	IF_1	WHILE_2	CALL_4
0x400218a	            0x85c0	                           test eax, eax	       465	getchar.c	FUNCTION_14	IF_1	WHILE_2	CALL_4
0x400218c	            0x75e2	                           jne 0x4002170	       465	getchar.c	FUNCTION_14	IF_1	WHILE_2	CALL_4
0x400218e	    0xc70500000000	           mov dword [0x04002198], 0x32 	       467	getchar.c	FUNCTION_14	IF_1
0x4002198	    0xc70500000000	               mov dword [0x040021a2], 0	       468	getchar.c	FUNCTION_14	IF_1
0x40021a2	    0xc70500000000	               mov dword [0x040021ac], 0	       472	getchar.c	FUNCTION_14	IF_1
0x40021ac	            0xeb96	                           jmp 0x4002144	       472	getchar.c	FUNCTION_14	IF_1
0x40021ae	      0xe87de3ffff	            call sym.init_typebuf.part.1	       472	getchar.c	FUNCTION_14	IF_1
0x40021b3	      0xe929ffffff	                           jmp 0x40020e1	       472	getchar.c	FUNCTION_14	IF_1
AppendToRedobuff	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,1:IF,1:DO,0:FOR,0	9
0x4000cf0	    0x8b0500000000	            mov eax, dword [0x04000cf6] 	       562	getchar.c	FUNCTION_19	IF_1
0x4000cf6	            0x85c0	                           test eax, eax	       562	getchar.c	FUNCTION_19	IF_1
0x4000cf8	            0x7406	                            je 0x4000d00	       562	getchar.c	FUNCTION_19	IF_1
0x4000cfa	            0xf3c3	                                     ret	       562	getchar.c	FUNCTION_19	IF_1
0x4000cfc	         0xf1f4000	                         nop dword [rax]	       562	getchar.c	FUNCTION_19	IF_1
0x4000d00	          0x4889fe	                            mov rsi, rdi	       563	getchar.c	FUNCTION_19	CALL_1
0x4000d03	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       563	getchar.c	FUNCTION_19	CALL_1
0x4000d0a	      0xbf00000000	                              mov edi, 0	       563	getchar.c	FUNCTION_19	CALL_1
0x4000d0f	      0xe96cf3ffff	                        jmp sym.add_buff	       563	getchar.c	FUNCTION_19	CALL_1
typebuf_typed	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,0:IF,0:DO,0:FOR,0	5
0x40016f0	    0x8b1500000000	            mov edx, dword [0x040016f6] 	      1145	getchar.c	FUNCTION_38
0x40016f6	            0x31c0	                            xor eax, eax	      1145	getchar.c	FUNCTION_38
0x40016f8	            0x85d2	                           test edx, edx	      1145	getchar.c	FUNCTION_38
0x40016fa	           0xf94c0	                                 sete al	      1145	getchar.c	FUNCTION_38
0x40016fd	              0xc3	                                     ret	      1146	getchar.c	FUNCTION_38
vpeekc_any	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,1:IF,1:DO,0:FOR,0	15
0x40050d0	        0x4883ec08	                              sub rsp, 8	      1882	getchar.c	FUNCTION_59
0x40050d4	    0x8b0500000000	            mov eax, dword [0x040050da] 	      1850	getchar.c	FUNCTION_57	IF_1
0x40050da	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1850	getchar.c	FUNCTION_57	IF_1
0x40050dd	            0x7421	                            je 0x4005100	      1850	getchar.c	FUNCTION_57	IF_1
0x40050df	            0x85c0	                           test eax, eax	      1886	getchar.c	FUNCTION_59	IF_1
0x40050e1	            0x7510	                           jne 0x40050f3	      1886	getchar.c	FUNCTION_59	IF_1
0x40050e3	    0x8b1500000000	            mov edx, dword [0x040050e9] 	      1887	getchar.c	FUNCTION_59	IF_1
0x40050e9	            0x85d2	                           test edx, edx	      1887	getchar.c	FUNCTION_59	IF_1
0x40050eb	      0xba1b000000	                           mov edx, 0x1b	      1887	getchar.c	FUNCTION_59	IF_1
0x40050f0	           0xf4fc2	                          cmovg eax, edx	      1887	getchar.c	FUNCTION_59	IF_1
0x40050f3	        0x4883c408	                              add rsp, 8	      1889	getchar.c	FUNCTION_59
0x40050f7	              0xc3	                                     ret	      1889	getchar.c	FUNCTION_59
0x40050f8	     0xf1f84000000	                   nop dword [rax + rax]	      1889	getchar.c	FUNCTION_59
0x4005100	      0xe81bfdffff	                 call sym.vpeekc.part.10	      1889	getchar.c	FUNCTION_59
0x4005105	            0xebd8	                           jmp 0x40050df	      1889	getchar.c	FUNCTION_59
get_map_mode	WHILE,0:ELSE,10:functions,0:SWITCH,0:CALL,0:IF,10:DO,0:FOR,0	42
0x40021f0	          0x488b0f	                    mov rcx, qword [rdi]	      3819	getchar.c	FUNCTION_69
0x40021f3	      0xb810000000	                           mov eax, 0x10	      3822	getchar.c	FUNCTION_69	IF_1
0x40021f8	           0xfb611	                   movzx edx, byte [rcx]	      3820	getchar.c	FUNCTION_69
0x40021fb	        0x4c8d4101	                       lea r8, [rcx + 1]	      3820	getchar.c	FUNCTION_69
0x40021ff	          0x83fa69	                           cmp edx, 0x69	      3821	getchar.c	FUNCTION_69	IF_1
0x4002202	            0x745c	                            je 0x4002260	      3821	getchar.c	FUNCTION_69	IF_1
0x4002204	          0x83fa6c	                           cmp edx, 0x6c	      3823	getchar.c	FUNCTION_69	ELSE_1	IF_2
0x4002207	      0xb820000000	                           mov eax, 0x20	      3824	getchar.c	FUNCTION_69	ELSE_1	IF_2
0x400220c	            0x7452	                            je 0x4002260	      3823	getchar.c	FUNCTION_69	ELSE_1	IF_2
0x400220e	          0x83fa63	                           cmp edx, 0x63	      3825	getchar.c	FUNCTION_69	ELSE_2	IF_3
0x4002211	      0xb808000000	                              mov eax, 8	      3826	getchar.c	FUNCTION_69	ELSE_2	IF_3
0x4002216	            0x7448	                            je 0x4002260	      3825	getchar.c	FUNCTION_69	ELSE_2	IF_3
0x4002218	          0x83fa6e	                           cmp edx, 0x6e	      3827	getchar.c	FUNCTION_69	ELSE_3	IF_4
0x400221b	            0x744b	                            je 0x4002268	      3827	getchar.c	FUNCTION_69	ELSE_3	IF_4
0x400221d	          0x83fa76	                           cmp edx, 0x76	      3829	getchar.c	FUNCTION_69	ELSE_4	IF_5
0x4002220	      0xb802100000	                         mov eax, 0x1002	      3830	getchar.c	FUNCTION_69	ELSE_4	IF_5
0x4002225	            0x7439	                            je 0x4002260	      3829	getchar.c	FUNCTION_69	ELSE_4	IF_5
0x4002227	          0x83fa78	                           cmp edx, 0x78	      3831	getchar.c	FUNCTION_69	ELSE_5	IF_6
0x400222a	      0xb802000000	                              mov eax, 2	      3832	getchar.c	FUNCTION_69	ELSE_5	IF_6
0x400222f	            0x742f	                            je 0x4002260	      3831	getchar.c	FUNCTION_69	ELSE_5	IF_6
0x4002231	          0x83fa73	                           cmp edx, 0x73	      3833	getchar.c	FUNCTION_69	ELSE_6	IF_7
0x4002234	      0xb800100000	                         mov eax, 0x1000	      3834	getchar.c	FUNCTION_69	ELSE_6	IF_7
0x4002239	            0x7425	                            je 0x4002260	      3833	getchar.c	FUNCTION_69	ELSE_6	IF_7
0x400223b	          0x83fa6f	                           cmp edx, 0x6f	      3835	getchar.c	FUNCTION_69	ELSE_7	IF_8
0x400223e	      0xb804000000	                              mov eax, 4	      3836	getchar.c	FUNCTION_69	ELSE_7	IF_8
0x4002243	            0x741b	                            je 0x4002260	      3835	getchar.c	FUNCTION_69	ELSE_7	IF_8
0x4002245	          0x83fa74	                           cmp edx, 0x74	      3837	getchar.c	FUNCTION_69	ELSE_8	IF_9
0x4002248	      0xb800200000	                         mov eax, 0x2000	      3838	getchar.c	FUNCTION_69	ELSE_8	IF_9
0x400224d	            0x7411	                            je 0x4002260	      3837	getchar.c	FUNCTION_69	ELSE_8	IF_9
0x400224f	              0x90	                                     nop	      3837	getchar.c	FUNCTION_69	ELSE_8	IF_9
0x4002250	          0x83fe01	                              cmp esi, 1	      3842	getchar.c	FUNCTION_69	ELSE_9	IF_10
0x4002253	          0x4989c8	                             mov r8, rcx	      3842	getchar.c	FUNCTION_69	ELSE_9	IF_10
0x4002256	            0x19c0	                            sbb eax, eax	      3842	getchar.c	FUNCTION_69	ELSE_9	IF_10
0x4002258	      0x25ef0f0000	                          and eax, 0xfef	      3842	getchar.c	FUNCTION_69	ELSE_9	IF_10
0x400225d	          0x83c018	                           add eax, 0x18	      3842	getchar.c	FUNCTION_69	ELSE_9	IF_10
0x4002260	          0x4c8907	                     mov qword [rdi], r8	      3848	getchar.c	FUNCTION_69	ELSE_10
0x4002263	              0xc3	                                     ret	      3850	getchar.c	FUNCTION_69	ELSE_10
0x4002264	         0xf1f4000	                         nop dword [rax]	      3850	getchar.c	FUNCTION_69	ELSE_10
0x4002268	        0x8079016f	                cmp byte [rcx + 1], 0x6f	      3827	getchar.c	FUNCTION_69	ELSE_3	IF_4
0x400226c	      0xb801000000	                              mov eax, 1	      3828	getchar.c	FUNCTION_69	ELSE_3	IF_4
0x4002271	            0x75ed	                           jne 0x4002260	      3827	getchar.c	FUNCTION_69	ELSE_3	IF_4
0x4002273	            0xebdb	                           jmp 0x4002250	      3827	getchar.c	FUNCTION_69	ELSE_3	IF_4
stuffReadbuff	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,1:IF,0:DO,0:FOR,0	4
0x4000f60	          0x4889fe	                            mov rsi, rdi	       654	getchar.c	FUNCTION_23
0x4000f63	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       655	getchar.c	FUNCTION_23	CALL_1
0x4000f6a	      0xbf00000000	                              mov edi, 0	       655	getchar.c	FUNCTION_23	CALL_1
0x4000f6f	      0xe90cf1ffff	                        jmp sym.add_buff	       655	getchar.c	FUNCTION_23	CALL_1
openscript	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,11:IF,7:DO,1:FOR,0	106
0x4004e70	            0x4157	                                push r15	      1415	getchar.c	FUNCTION_48
0x4004e72	            0x4156	                                push r14	      1415	getchar.c	FUNCTION_48
0x4004e74	            0x4155	                                push r13	      1415	getchar.c	FUNCTION_48
0x4004e76	            0x4154	                                push r12	      1415	getchar.c	FUNCTION_48
0x4004e78	              0x55	                                push rbp	      1415	getchar.c	FUNCTION_48
0x4004e79	              0x53	                                push rbx	      1415	getchar.c	FUNCTION_48
0x4004e7a	    0x4881ec980000	                           sub rsp, 0x98	      1415	getchar.c	FUNCTION_48
0x4004e81	    0x64488b042528	                mov rax, qword fs:[0x28]	      1415	getchar.c	FUNCTION_48
0x4004e8a	    0x488984248800	             mov qword [rsp + 0x88], rax	      1415	getchar.c	FUNCTION_48
0x4004e92	            0x31c0	                            xor eax, eax	      1415	getchar.c	FUNCTION_48
0x4004e94	    0x8b0500000000	            mov eax, dword [0x04004e9a] 	      1416	getchar.c	FUNCTION_48	IF_1
0x4004e9a	          0x83f80e	                            cmp eax, 0xe	      1416	getchar.c	FUNCTION_48	IF_1
0x4004e9d	     0xf84a5010000	                            je 0x4005048	      1416	getchar.c	FUNCTION_48	IF_1
0x4004ea3	    0x8b1500000000	            mov edx, dword [0x04004ea9] 	      1422	getchar.c	FUNCTION_48	IF_2
0x4004ea9	            0x85d2	                           test edx, edx	      1422	getchar.c	FUNCTION_48	IF_2
0x4004eab	     0xf8537010000	                           jne 0x4004fe8	      1422	getchar.c	FUNCTION_48	IF_2
0x4004eb1	          0x4863d0	                         movsxd rdx, eax	      1427	getchar.c	FUNCTION_48	IF_3
0x4004eb4	          0x4989fc	                            mov r12, rdi	      1427	getchar.c	FUNCTION_48	IF_3
0x4004eb7	            0x89f5	                            mov ebp, esi	      1427	getchar.c	FUNCTION_48	IF_3
0x4004eb9	    0x48833cd50000	                    cmp qword [rdx*8], 0	      1427	getchar.c	FUNCTION_48	IF_3
0x4004ec2	            0x7409	                            je 0x4004ecd	      1427	getchar.c	FUNCTION_48	IF_3
0x4004ec4	          0x83c001	                              add eax, 1	      1428	getchar.c	FUNCTION_48	IF_3
0x4004ec7	    0x890500000000	            mov dword [0x04004ecd], eax 	      1428	getchar.c	FUNCTION_48	IF_3
0x4004ecd	    0x488b35000000	            mov rsi, qword [0x04004ed4] 	      1430	getchar.c	FUNCTION_48	CALL_3
0x4004ed4	      0xba00100000	                         mov edx, 0x1000	      1430	getchar.c	FUNCTION_48	CALL_3
0x4004ed9	          0x4c89e7	                            mov rdi, r12	      1430	getchar.c	FUNCTION_48	CALL_3
0x4004edc	      0xe800000000	                          call 0x4004ee1	      1430	getchar.c	FUNCTION_48	CALL_3
0x4004ee1	    0x48631d000000	         movsxd rbx, dword [0x04004ee8] 	      1431	getchar.c	FUNCTION_48	IF_4	CALL_4
0x4004ee8	    0x488b3d000000	            mov rdi, qword [0x04004eef] 	      1431	getchar.c	FUNCTION_48	IF_4	CALL_4
0x4004eef	      0xbe00000000	                              mov esi, 0	      1431	getchar.c	FUNCTION_48	IF_4	CALL_4
0x4004ef4	      0xe800000000	                          call 0x4004ef9	      1431	getchar.c	FUNCTION_48	IF_4	CALL_4
0x4004ef9	          0x4885c0	                           test rax, rax	      1431	getchar.c	FUNCTION_48	IF_4	CALL_4
0x4004efc	    0x488904dd0000	                  mov qword [rbx*8], rax	      1431	getchar.c	FUNCTION_48	IF_4	CALL_4
0x4004f04	     0xf8406010000	                            je 0x4005010	      1431	getchar.c	FUNCTION_48	IF_4	CALL_4
0x4004f0a	      0xe800000000	                          call 0x4004f0f	      1438	getchar.c	FUNCTION_48	IF_6	CALL_7
0x4004f0f	            0x85c0	                           test eax, eax	      1447	getchar.c	FUNCTION_48	IF_7
0x4004f11	     0xf84d1000000	                            je 0x4004fe8	      1447	getchar.c	FUNCTION_48	IF_7
0x4004f17	            0x85ed	                           test ebp, ebp	      1447	getchar.c	FUNCTION_48	IF_7
0x4004f19	     0xf84c9000000	                            je 0x4004fe8	      1447	getchar.c	FUNCTION_48	IF_7
0x4004f1f	          0x4889e7	                            mov rdi, rsp	      1461	getchar.c	FUNCTION_48	IF_7	CALL_8
0x4004f22	    0x448b3d000000	           mov r15d, dword [0x04004f29] 	      1451	getchar.c	FUNCTION_48	IF_7
0x4004f29	    0x448b2d000000	           mov r13d, dword [0x04004f30] 	      1452	getchar.c	FUNCTION_48	IF_7
0x4004f30	    0x448b25000000	           mov r12d, dword [0x04004f37] 	      1453	getchar.c	FUNCTION_48	IF_7
0x4004f37	    0x448b35000000	           mov r14d, dword [0x04004f3e] 	      1455	getchar.c	FUNCTION_48	IF_7
0x4004f3e	    0x8b2d00000000	            mov ebp, dword [0x04004f44] 	      1454	getchar.c	FUNCTION_48	IF_7
0x4004f44	    0xc70500000000	               mov dword [0x04004f4e], 1	      1457	getchar.c	FUNCTION_48	IF_7
0x4004f4e	    0xc70500000000	               mov dword [0x04004f58], 0	      1458	getchar.c	FUNCTION_48	IF_7
0x4004f58	    0xc70500000000	               mov dword [0x04004f62], 0	      1459	getchar.c	FUNCTION_48	IF_7
0x4004f62	    0xc70500000000	               mov dword [0x04004f6c], 0	      1460	getchar.c	FUNCTION_48	IF_7
0x4004f6c	      0xe800000000	                          call 0x4004f71	      1461	getchar.c	FUNCTION_48	IF_7	CALL_8
0x4004f71	    0xc70500000000	               mov dword [0x04004f7b], 0	      1462	getchar.c	FUNCTION_48	IF_7
0x4004f7b	    0x48631d000000	         movsxd rbx, dword [0x04004f82] 	      1462	getchar.c	FUNCTION_48	IF_7
0x4004f82	            0xeb0f	                           jmp 0x4004f93	      1462	getchar.c	FUNCTION_48	IF_7
0x4004f84	         0xf1f4000	                         nop dword [rax]	      1462	getchar.c	FUNCTION_48	IF_7
0x4004f88	    0x48833cdd0000	                    cmp qword [rbx*8], 0	      1471	getchar.c	FUNCTION_48	IF_7
0x4004f91	            0x742d	                            je 0x4004fc0	      1471	getchar.c	FUNCTION_48	IF_7
0x4004f93	      0xe800000000	                          call 0x4004f98	      1467	getchar.c	FUNCTION_48	IF_7	DO_1	CALL_9
0x4004f98	            0x31f6	                            xor esi, esi	      1468	getchar.c	FUNCTION_48	IF_7	DO_1	CALL_10
0x4004f9a	          0x4889e7	                            mov rdi, rsp	      1468	getchar.c	FUNCTION_48	IF_7	DO_1	CALL_10
0x4004f9d	      0xe800000000	                          call 0x4004fa2	      1468	getchar.c	FUNCTION_48	IF_7	DO_1	CALL_10
0x4004fa2	    0x833d00000000	cmp dword [0x04004fa9], 0xffffffffffffffff	      1850	getchar.c	FUNCTION_57	IF_1
0x4004fa9	            0x75dd	                           jne 0x4004f88	      1850	getchar.c	FUNCTION_57	IF_1
0x4004fab	      0xe870feffff	                 call sym.vpeekc.part.10	      1850	getchar.c	FUNCTION_57	IF_1
0x4004fb0	    0x48833cdd0000	                    cmp qword [rbx*8], 0	      1471	getchar.c	FUNCTION_48	IF_7
0x4004fb9	            0x75d8	                           jne 0x4004f93	      1471	getchar.c	FUNCTION_48	IF_7
0x4004fbb	       0xf1f440000	                   nop dword [rax + rax]	      1471	getchar.c	FUNCTION_48	IF_7
0x4004fc0	    0x44893d000000	           mov dword [0x04004fc7], r15d 	      1473	getchar.c	FUNCTION_48	IF_7
0x4004fc7	    0x448935000000	           mov dword [0x04004fce], r14d 	      1474	getchar.c	FUNCTION_48	IF_7
0x4004fce	    0x44892d000000	           mov dword [0x04004fd5], r13d 	      1475	getchar.c	FUNCTION_48	IF_7
0x4004fd5	    0x448925000000	           mov dword [0x04004fdc], r12d 	      1476	getchar.c	FUNCTION_48	IF_7
0x4004fdc	    0x892d00000000	            mov dword [0x04004fe2], ebp 	      1477	getchar.c	FUNCTION_48	IF_7
0x4004fe2	    0x660f1f440000	                    nop word [rax + rax]	      1477	getchar.c	FUNCTION_48	IF_7
0x4004fe8	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      1479	getchar.c	FUNCTION_48
0x4004ff0	    0x644833042528	                xor rax, qword fs:[0x28]	      1479	getchar.c	FUNCTION_48
0x4004ff9	            0x7568	                           jne 0x4005063	      1479	getchar.c	FUNCTION_48
0x4004ffb	    0x4881c4980000	                           add rsp, 0x98	      1479	getchar.c	FUNCTION_48
0x4005002	              0x5b	                                 pop rbx	      1479	getchar.c	FUNCTION_48
0x4005003	              0x5d	                                 pop rbp	      1479	getchar.c	FUNCTION_48
0x4005004	            0x415c	                                 pop r12	      1479	getchar.c	FUNCTION_48
0x4005006	            0x415d	                                 pop r13	      1479	getchar.c	FUNCTION_48
0x4005008	            0x415e	                                 pop r14	      1479	getchar.c	FUNCTION_48
0x400500a	            0x415f	                                 pop r15	      1479	getchar.c	FUNCTION_48
0x400500c	              0xc3	                                     ret	      1479	getchar.c	FUNCTION_48
0x400500d	           0xf1f00	                         nop dword [rax]	      1479	getchar.c	FUNCTION_48
0x4005010	            0x31ff	                            xor edi, edi	      1433	getchar.c	FUNCTION_48	IF_4	CALL_6
0x4005012	      0xba05000000	                              mov edx, 5	      1433	getchar.c	FUNCTION_48	IF_4	CALL_6
0x4005017	      0xbe00000000	                              mov esi, 0	      1433	getchar.c	FUNCTION_48	IF_4	CALL_6
0x400501c	      0xe800000000	                          call 0x4005021	      1433	getchar.c	FUNCTION_48	IF_4	CALL_6
0x4005021	          0x4c89e6	                            mov rsi, r12	      1433	getchar.c	FUNCTION_48	IF_4	CALL_6
0x4005024	          0x4889c7	                            mov rdi, rax	      1433	getchar.c	FUNCTION_48	IF_4	CALL_6
0x4005027	      0xe800000000	                          call 0x400502c	      1433	getchar.c	FUNCTION_48	IF_4	CALL_6
0x400502c	    0x8b0500000000	            mov eax, dword [0x04005032] 	      1434	getchar.c	FUNCTION_48	IF_4	IF_5
0x4005032	            0x85c0	                           test eax, eax	      1434	getchar.c	FUNCTION_48	IF_4	IF_5
0x4005034	            0x74b2	                            je 0x4004fe8	      1434	getchar.c	FUNCTION_48	IF_4	IF_5
0x4005036	          0x83e801	                              sub eax, 1	      1435	getchar.c	FUNCTION_48	IF_4	IF_5
0x4005039	    0x890500000000	            mov dword [0x0400503f], eax 	      1435	getchar.c	FUNCTION_48	IF_4	IF_5
0x400503f	            0xeba7	                           jmp 0x4004fe8	      1435	getchar.c	FUNCTION_48	IF_4	IF_5
0x4005041	     0xf1f80000000	                         nop dword [rax]	      1435	getchar.c	FUNCTION_48	IF_4	IF_5
0x4005048	            0x31ff	                            xor edi, edi	      1418	getchar.c	FUNCTION_48	IF_1	CALL_2
0x400504a	      0xba05000000	                              mov edx, 5	      1418	getchar.c	FUNCTION_48	IF_1	CALL_2
0x400504f	      0xbe00000000	                              mov esi, 0	      1418	getchar.c	FUNCTION_48	IF_1	CALL_2
0x4005054	      0xe800000000	                          call 0x4005059	      1418	getchar.c	FUNCTION_48	IF_1	CALL_2
0x4005059	          0x4889c7	                            mov rdi, rax	      1418	getchar.c	FUNCTION_48	IF_1	CALL_2
0x400505c	      0xe800000000	                          call 0x4005061	      1418	getchar.c	FUNCTION_48	IF_1	CALL_2
0x4005061	            0xeb85	                           jmp 0x4004fe8	      1419	getchar.c	FUNCTION_48	IF_1
0x4005063	      0xe800000000	                          call 0x4005068	      1479	getchar.c	FUNCTION_48
alloc_typebuf	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,3:IF,2:DO,0:FOR,0	32
0x4001830	        0x4883ec08	                              sub rsp, 8	      1297	getchar.c	FUNCTION_43
0x4001834	      0xbf09010000	                          mov edi, 0x109	      1298	getchar.c	FUNCTION_43	CALL_1
0x4001839	      0xe800000000	                          call 0x400183e	      1298	getchar.c	FUNCTION_43	CALL_1
0x400183e	      0xbf09010000	                          mov edi, 0x109	      1299	getchar.c	FUNCTION_43	CALL_2
0x4001843	    0x488905000000	            mov qword [0x0400184a], rax 	      1298	getchar.c	FUNCTION_43	CALL_1
0x400184a	      0xe800000000	                          call 0x400184f	      1299	getchar.c	FUNCTION_43	CALL_2
0x400184f	    0x48833d000000	               cmp qword [0x04001857], 0	      1300	getchar.c	FUNCTION_43	IF_1
0x4001857	    0x488905000000	            mov qword [0x0400185e], rax 	      1299	getchar.c	FUNCTION_43	CALL_2
0x400185e	            0x7470	                            je 0x40018d0	      1300	getchar.c	FUNCTION_43	IF_1
0x4001860	          0x4885c0	                           test rax, rax	      1300	getchar.c	FUNCTION_43	IF_1
0x4001863	            0x746b	                            je 0x40018d0	      1300	getchar.c	FUNCTION_43	IF_1
0x4001865	    0x8b0500000000	            mov eax, dword [0x0400186b] 	      1311	getchar.c	FUNCTION_43	IF_2
0x400186b	    0xc70500000000	          mov dword [0x04001875], 0x109 	      1305	getchar.c	FUNCTION_43
0x4001875	    0xc70500000000	           mov dword [0x0400187f], 0x36 	      1306	getchar.c	FUNCTION_43
0x400187f	    0xc70500000000	               mov dword [0x04001889], 0	      1307	getchar.c	FUNCTION_43
0x4001889	    0xc70500000000	               mov dword [0x04001893], 0	      1308	getchar.c	FUNCTION_43
0x4001893	    0xc70500000000	               mov dword [0x0400189d], 0	      1309	getchar.c	FUNCTION_43
0x400189d	          0x83c001	                              add eax, 1	      1311	getchar.c	FUNCTION_43	IF_2
0x40018a0	    0xc70500000000	               mov dword [0x040018aa], 0	      1310	getchar.c	FUNCTION_43
0x40018aa	            0x7514	                           jne 0x40018c0	      1311	getchar.c	FUNCTION_43	IF_2
0x40018ac	    0xc70500000000	               mov dword [0x040018b6], 1	      1312	getchar.c	FUNCTION_43	IF_2
0x40018b6	      0xb801000000	                              mov eax, 1	      1313	getchar.c	FUNCTION_43
0x40018bb	        0x4883c408	                              add rsp, 8	      1314	getchar.c	FUNCTION_43
0x40018bf	              0xc3	                                     ret	      1314	getchar.c	FUNCTION_43
0x40018c0	    0x890500000000	            mov dword [0x040018c6], eax 	      1311	getchar.c	FUNCTION_43	IF_2
0x40018c6	      0xb801000000	                              mov eax, 1	      1313	getchar.c	FUNCTION_43
0x40018cb	        0x4883c408	                              add rsp, 8	      1314	getchar.c	FUNCTION_43
0x40018cf	              0xc3	                                     ret	      1314	getchar.c	FUNCTION_43
0x40018d0	      0xe800000000	                          call 0x40018d5	      1302	getchar.c	FUNCTION_43	IF_1	CALL_3
0x40018d5	            0x31c0	                            xor eax, eax	      1303	getchar.c	FUNCTION_43	IF_1
0x40018d7	        0x4883c408	                              add rsp, 8	      1314	getchar.c	FUNCTION_43
0x40018db	              0xc3	                                     ret	      1314	getchar.c	FUNCTION_43
AppendToRedobuffLit	WHILE,2:ELSE,2:functions,0:SWITCH,0:CALL,6:IF,7:DO,0:FOR,0	137
0x4000d20	            0x4156	                                push r14	       574	getchar.c	FUNCTION_20
0x4000d22	            0x4155	                                push r13	       574	getchar.c	FUNCTION_20
0x4000d24	            0x4154	                                push r12	       574	getchar.c	FUNCTION_20
0x4000d26	              0x55	                                push rbp	       574	getchar.c	FUNCTION_20
0x4000d27	              0x53	                                push rbx	       574	getchar.c	FUNCTION_20
0x4000d28	        0x4883ec10	                           sub rsp, 0x10	       574	getchar.c	FUNCTION_20
0x4000d2c	    0x8b1500000000	            mov edx, dword [0x04000d32] 	       579	getchar.c	FUNCTION_20	IF_1
0x4000d32	    0x64488b042528	                mov rax, qword fs:[0x28]	       574	getchar.c	FUNCTION_20
0x4000d3b	      0x4889442408	                mov qword [rsp + 8], rax	       574	getchar.c	FUNCTION_20
0x4000d40	            0x31c0	                            xor eax, eax	       574	getchar.c	FUNCTION_20
0x4000d42	        0x48893c24	                    mov qword [rsp], rdi	       575	getchar.c	FUNCTION_20
0x4000d46	            0x85d2	                           test edx, edx	       579	getchar.c	FUNCTION_20	IF_1
0x4000d48	     0xf8512010000	                           jne 0x4000e60	       579	getchar.c	FUNCTION_20	IF_1
0x4000d4e	            0x89f3	                            mov ebx, esi	       579	getchar.c	FUNCTION_20	IF_1
0x4000d50	          0x4889fd	                            mov rbp, rdi	       579	getchar.c	FUNCTION_20	IF_1
0x4000d53	          0x4889fe	                            mov rsi, rdi	       579	getchar.c	FUNCTION_20	IF_1
0x4000d56	            0x85db	                           test ebx, ebx	       582	getchar.c	FUNCTION_20	WHILE_1
0x4000d58	          0x4c63e3	                         movsxd r12, ebx	       582	getchar.c	FUNCTION_20	WHILE_1
0x4000d5b	     0xf88eb000000	                            js 0x4000e4c	       582	getchar.c	FUNCTION_20	WHILE_1
0x4000d61	     0xf1f80000000	                         nop dword [rax]	       582	getchar.c	FUNCTION_20	WHILE_1
0x4000d68	          0x4889f0	                            mov rax, rsi	       582	getchar.c	FUNCTION_20	WHILE_1
0x4000d6b	          0x4829e8	                            sub rax, rbp	       582	getchar.c	FUNCTION_20	WHILE_1
0x4000d6e	          0x4c39e0	                            cmp rax, r12	       582	getchar.c	FUNCTION_20	WHILE_1
0x4000d71	           0xf9cc0	                                 setl al	       582	getchar.c	FUNCTION_20	WHILE_1
0x4000d74	            0x84c0	                             test al, al	       582	getchar.c	FUNCTION_20	WHILE_1
0x4000d76	     0xf84e4000000	                            je 0x4000e60	       582	getchar.c	FUNCTION_20	WHILE_1
0x4000d7c	           0xfb606	                   movzx eax, byte [rsi]	       587	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4000d7f	          0x4889f2	                            mov rdx, rsi	       587	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4000d82	          0x8d48e0	                   lea ecx, [rax - 0x20]	       587	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4000d85	          0x80f95e	                            cmp cl, 0x5e	       587	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4000d88	     0xf877f010000	                            ja 0x4000f0d	       587	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4000d8e	            0x6690	                                     nop	       587	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4000d90	            0x85db	                           test ebx, ebx	       591	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4000d92	            0x780b	                            js 0x4000d9f	       591	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4000d94	          0x4889d0	                            mov rax, rdx	       591	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4000d97	          0x4829e8	                            sub rax, rbp	       591	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4000d9a	          0x4c39e0	                            cmp rax, r12	       591	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4000d9d	            0x7d2b	                           jge 0x4000dca	       591	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4000d9f	        0x4883c201	                              add rdx, 1	       592	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4000da3	        0x48891424	                    mov qword [rsp], rdx	       592	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4000da7	           0xfb602	                   movzx eax, byte [rdx]	       587	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4000daa	          0x8d48e0	                   lea ecx, [rax - 0x20]	       587	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4000dad	          0x80f95e	                            cmp cl, 0x5e	       587	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4000db0	            0x76de	                           jbe 0x4000d90	       587	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4000db2	            0x84c0	                             test al, al	       596	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4000db4	            0x7518	                           jne 0x4000dce	       596	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4000db6	         0xfb642ff	               movzx eax, byte [rdx - 1]	       596	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4000dba	            0x3c30	                            cmp al, 0x30	       596	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4000dbc	     0xf843e010000	                            je 0x4000f00	       596	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4000dc2	            0x3c5e	                            cmp al, 0x5e	       596	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4000dc4	     0xf8436010000	                            je 0x4000f00	       596	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4000dca	        0x488b1424	                    mov rdx, qword [rsp]	       596	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4000dce	          0x4839d6	                            cmp rsi, rdx	       598	getchar.c	FUNCTION_20	WHILE_1	IF_3
0x4000dd1	     0xf82f9000000	                            jb 0x4000ed0	       598	getchar.c	FUNCTION_20	WHILE_1	IF_3
0x4000dd7	           0xfb602	                   movzx eax, byte [rdx]	       598	getchar.c	FUNCTION_20	WHILE_1	IF_3
0x4000dda	            0x84c0	                             test al, al	       601	getchar.c	FUNCTION_20	WHILE_1	IF_4
0x4000ddc	     0xf847e000000	                            je 0x4000e60	       601	getchar.c	FUNCTION_20	WHILE_1	IF_4
0x4000de2	            0x85db	                           test ebx, ebx	       601	getchar.c	FUNCTION_20	WHILE_1	IF_4
0x4000de4	            0x780b	                            js 0x4000df1	       601	getchar.c	FUNCTION_20	WHILE_1	IF_4
0x4000de6	          0x4889d0	                            mov rax, rdx	       601	getchar.c	FUNCTION_20	WHILE_1	IF_4
0x4000de9	          0x4829e8	                            sub rax, rbp	       601	getchar.c	FUNCTION_20	WHILE_1	IF_4
0x4000dec	          0x4c39e0	                            cmp rax, r12	       601	getchar.c	FUNCTION_20	WHILE_1	IF_4
0x4000def	            0x7d6f	                           jge 0x4000e60	       601	getchar.c	FUNCTION_20	WHILE_1	IF_4
0x4000df1	    0x8b0500000000	            mov eax, dword [0x04000df7] 	       606	getchar.c	FUNCTION_20	WHILE_1	IF_5
0x4000df7	            0x85c0	                           test eax, eax	       606	getchar.c	FUNCTION_20	WHILE_1	IF_5
0x4000df9	     0xf85f1000000	                           jne 0x4000ef0	       606	getchar.c	FUNCTION_20	WHILE_1	IF_5
0x4000dff	        0x488d4201	                      lea rax, [rdx + 1]	       611	getchar.c	FUNCTION_20	WHILE_1	ELSE_1
0x4000e03	        0x48890424	                    mov qword [rsp], rax	       611	getchar.c	FUNCTION_20	WHILE_1	ELSE_1
0x4000e07	        0x440fb62a	                  movzx r13d, byte [rdx]	       611	getchar.c	FUNCTION_20	WHILE_1	ELSE_1
0x4000e0b	        0x4183fd1f	                          cmp r13d, 0x1f	       612	getchar.c	FUNCTION_20	WHILE_1	IF_6
0x4000e0f	            0x7e77	                           jle 0x4000e88	       612	getchar.c	FUNCTION_20	WHILE_1	IF_6
0x4000e11	        0x4183fd7f	                          cmp r13d, 0x7f	       612	getchar.c	FUNCTION_20	WHILE_1	IF_6
0x4000e15	            0x7471	                            je 0x4000e88	       612	getchar.c	FUNCTION_20	WHILE_1	IF_6
0x4000e17	        0x488b0424	                    mov rax, qword [rsp]	       612	getchar.c	FUNCTION_20	WHILE_1	IF_6
0x4000e1b	          0x803800	                       cmp byte [rax], 0	       612	getchar.c	FUNCTION_20	WHILE_1	IF_6
0x4000e1e	            0x7513	                           jne 0x4000e33	       612	getchar.c	FUNCTION_20	WHILE_1	IF_6
0x4000e20	        0x4183fd30	                          cmp r13d, 0x30	       612	getchar.c	FUNCTION_20	WHILE_1	IF_6
0x4000e24	        0x410f94c6	                               sete r14b	       612	getchar.c	FUNCTION_20	WHILE_1	IF_6
0x4000e28	        0x4183fd5e	                          cmp r13d, 0x5e	       612	getchar.c	FUNCTION_20	WHILE_1	IF_6
0x4000e2c	            0x7462	                            je 0x4000e90	       612	getchar.c	FUNCTION_20	WHILE_1	IF_6
0x4000e2e	          0x4584f6	                         test r14b, r14b	       612	getchar.c	FUNCTION_20	WHILE_1	IF_6
0x4000e31	            0x755d	                           jne 0x4000e90	       612	getchar.c	FUNCTION_20	WHILE_1	IF_6
0x4000e33	          0x4489ee	                           mov esi, r13d	       623	getchar.c	FUNCTION_20	WHILE_1	CALL_6
0x4000e36	      0xbf00000000	                              mov edi, 0	       623	getchar.c	FUNCTION_20	WHILE_1	CALL_6
0x4000e3b	      0xe8b0f3ffff	                  call sym.add_char_buff	       623	getchar.c	FUNCTION_20	WHILE_1	CALL_6
0x4000e40	            0x85db	                           test ebx, ebx	       582	getchar.c	FUNCTION_20	WHILE_1
0x4000e42	        0x488b3424	                    mov rsi, qword [rsp]	       582	getchar.c	FUNCTION_20	WHILE_1
0x4000e46	     0xf891cffffff	                           jns 0x4000d68	       582	getchar.c	FUNCTION_20	WHILE_1
0x4000e4c	          0x803e00	                       cmp byte [rsi], 0	       582	getchar.c	FUNCTION_20	WHILE_1
0x4000e4f	           0xf95c0	                                setne al	       582	getchar.c	FUNCTION_20	WHILE_1
0x4000e52	            0x84c0	                             test al, al	       582	getchar.c	FUNCTION_20	WHILE_1
0x4000e54	     0xf8522ffffff	                           jne 0x4000d7c	       582	getchar.c	FUNCTION_20	WHILE_1
0x4000e5a	    0x660f1f440000	                    nop word [rax + rax]	       582	getchar.c	FUNCTION_20	WHILE_1
0x4000e60	      0x488b442408	                mov rax, qword [rsp + 8]	       625	getchar.c	FUNCTION_20
0x4000e65	    0x644833042528	                xor rax, qword fs:[0x28]	       625	getchar.c	FUNCTION_20
0x4000e6e	     0xf85a6000000	                           jne 0x4000f1a	       625	getchar.c	FUNCTION_20
0x4000e74	        0x4883c410	                           add rsp, 0x10	       625	getchar.c	FUNCTION_20
0x4000e78	              0x5b	                                 pop rbx	       625	getchar.c	FUNCTION_20
0x4000e79	              0x5d	                                 pop rbp	       625	getchar.c	FUNCTION_20
0x4000e7a	            0x415c	                                 pop r12	       625	getchar.c	FUNCTION_20
0x4000e7c	            0x415d	                                 pop r13	       625	getchar.c	FUNCTION_20
0x4000e7e	            0x415e	                                 pop r14	       625	getchar.c	FUNCTION_20
0x4000e80	              0xc3	                                     ret	       625	getchar.c	FUNCTION_20
0x4000e81	     0xf1f80000000	                         nop dword [rax]	       625	getchar.c	FUNCTION_20
0x4000e88	        0x4183fd30	                          cmp r13d, 0x30	       625	getchar.c	FUNCTION_20
0x4000e8c	        0x410f94c6	                               sete r14b	       625	getchar.c	FUNCTION_20
0x4000e90	      0xbe16000000	                           mov esi, 0x16	       613	getchar.c	FUNCTION_20	WHILE_1	CALL_3
0x4000e95	      0xbf00000000	                              mov edi, 0	       613	getchar.c	FUNCTION_20	WHILE_1	CALL_3
0x4000e9a	      0xe851f3ffff	                  call sym.add_char_buff	       613	getchar.c	FUNCTION_20	WHILE_1	CALL_3
0x4000e9f	        0x488b0424	                    mov rax, qword [rsp]	       616	getchar.c	FUNCTION_20	WHILE_1	IF_7
0x4000ea3	          0x803800	                       cmp byte [rax], 0	       616	getchar.c	FUNCTION_20	WHILE_1	IF_7
0x4000ea6	            0x758b	                           jne 0x4000e33	       616	getchar.c	FUNCTION_20	WHILE_1	IF_7
0x4000ea8	          0x4584f6	                         test r14b, r14b	       616	getchar.c	FUNCTION_20	WHILE_1	IF_7
0x4000eab	            0x7486	                            je 0x4000e33	       616	getchar.c	FUNCTION_20	WHILE_1	IF_7
0x4000ead	      0xba03000000	                              mov edx, 3	       620	getchar.c	FUNCTION_20	WHILE_1	CALL_5
0x4000eb2	      0xbe00000000	                              mov esi, 0	       620	getchar.c	FUNCTION_20	WHILE_1	CALL_5
0x4000eb7	      0xbf00000000	                              mov edi, 0	       620	getchar.c	FUNCTION_20	WHILE_1	CALL_5
0x4000ebc	      0xe8bff1ffff	                       call sym.add_buff	       620	getchar.c	FUNCTION_20	WHILE_1	CALL_5
0x4000ec1	      0xe97affffff	                           jmp 0x4000e40	       620	getchar.c	FUNCTION_20	WHILE_1	CALL_5
0x4000ec6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       620	getchar.c	FUNCTION_20	WHILE_1	CALL_5
0x4000ed0	          0x4829f2	                            sub rdx, rsi	       599	getchar.c	FUNCTION_20	WHILE_1	CALL_1
0x4000ed3	      0xbf00000000	                              mov edi, 0	       599	getchar.c	FUNCTION_20	WHILE_1	CALL_1
0x4000ed8	      0xe8a3f1ffff	                       call sym.add_buff	       599	getchar.c	FUNCTION_20	WHILE_1	CALL_1
0x4000edd	        0x488b1424	                    mov rdx, qword [rsp]	       599	getchar.c	FUNCTION_20	WHILE_1	CALL_1
0x4000ee1	      0xe9f1feffff	                           jmp 0x4000dd7	       599	getchar.c	FUNCTION_20	WHILE_1	CALL_1
0x4000ee6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       599	getchar.c	FUNCTION_20	WHILE_1	CALL_1
0x4000ef0	          0x4889e7	                            mov rdi, rsp	       608	getchar.c	FUNCTION_20	WHILE_1	CALL_2
0x4000ef3	      0xe800000000	                          call 0x4000ef8	       608	getchar.c	FUNCTION_20	WHILE_1	CALL_2
0x4000ef8	          0x4189c5	                           mov r13d, eax	       608	getchar.c	FUNCTION_20	WHILE_1	CALL_2
0x4000efb	      0xe90bffffff	                           jmp 0x4000e0b	       608	getchar.c	FUNCTION_20	WHILE_1	CALL_2
0x4000f00	        0x4883ea01	                              sub rdx, 1	       597	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4000f04	        0x48891424	                    mov qword [rsp], rdx	       597	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4000f08	      0xe9c1feffff	                           jmp 0x4000dce	       597	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4000f0d	            0x84c0	                             test al, al	       596	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4000f0f	     0xf84a1feffff	                            je 0x4000db6	       596	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4000f15	      0xe9c8feffff	                           jmp 0x4000de2	       596	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4000f1a	      0xe800000000	                          call 0x4000f1f	       625	getchar.c	FUNCTION_20
eval_map_expr	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,10:IF,3:DO,0:FOR,0	77
0x4002f20	            0x4157	                                push r15	      4630	getchar.c	FUNCTION_79
0x4002f22	            0x4156	                                push r14	      4630	getchar.c	FUNCTION_79
0x4002f24	            0x4155	                                push r13	      4630	getchar.c	FUNCTION_79
0x4002f26	            0x4154	                                push r12	      4630	getchar.c	FUNCTION_79
0x4002f28	              0x55	                                push rbp	      4630	getchar.c	FUNCTION_79
0x4002f29	              0x53	                                push rbx	      4630	getchar.c	FUNCTION_79
0x4002f2a	            0x89f5	                            mov ebp, esi	      4630	getchar.c	FUNCTION_79
0x4002f2c	        0x4883ec18	                           sub rsp, 0x18	      4630	getchar.c	FUNCTION_79
0x4002f30	      0xe800000000	                          call 0x4002f35	      4641	getchar.c	FUNCTION_79	CALL_1
0x4002f35	          0x4885c0	                           test rax, rax	      4642	getchar.c	FUNCTION_79	IF_1
0x4002f38	     0xf84ea000000	                            je 0x4003028	      4642	getchar.c	FUNCTION_79	IF_1
0x4002f3e	          0x4889c7	                            mov rdi, rax	      4644	getchar.c	FUNCTION_79	CALL_2
0x4002f41	          0x4889c3	                            mov rbx, rax	      4644	getchar.c	FUNCTION_79	CALL_2
0x4002f44	      0xe800000000	                          call 0x4002f49	      4644	getchar.c	FUNCTION_79	CALL_2
0x4002f49	      0xe800000000	                          call 0x4002f4e	      4646	getchar.c	FUNCTION_79	CALL_3
0x4002f4e	          0x4885c0	                           test rax, rax	      4647	getchar.c	FUNCTION_79	IF_2
0x4002f51	          0x4989c4	                            mov r12, rax	      4646	getchar.c	FUNCTION_79	CALL_3
0x4002f54	     0xf84c6000000	                            je 0x4003020	      4647	getchar.c	FUNCTION_79	IF_2
0x4002f5a	            0x89ef	                            mov edi, ebp	      4657	getchar.c	FUNCTION_79	CALL_5
0x4002f5c	    0x830500000000	               add dword [0x04002f63], 1	      4655	getchar.c	FUNCTION_79
0x4002f63	    0x830500000000	               add dword [0x04002f6a], 1	      4656	getchar.c	FUNCTION_79
0x4002f6a	      0xe800000000	                          call 0x4002f6f	      4657	getchar.c	FUNCTION_79	CALL_5
0x4002f6f	    0x488b05000000	            mov rax, qword [0x04002f76] 	      4658	getchar.c	FUNCTION_79
0x4002f76	            0x31d2	                            xor edx, edx	      4661	getchar.c	FUNCTION_79	CALL_6
0x4002f78	            0x31f6	                            xor esi, esi	      4661	getchar.c	FUNCTION_79	CALL_6
0x4002f7a	          0x4889df	                            mov rdi, rbx	      4661	getchar.c	FUNCTION_79	CALL_6
0x4002f7d	        0x4c8b4038	              mov r8, qword [rax + 0x38]	      4658	getchar.c	FUNCTION_79
0x4002f81	          0x8b4840	            mov ecx, dword [rax + 0x40] 	      4658	getchar.c	FUNCTION_79
0x4002f84	        0x448b7844	           mov r15d, dword [rax + 0x44] 	      4658	getchar.c	FUNCTION_79
0x4002f88	    0x448b35000000	           mov r14d, dword [0x04002f8f] 	      4659	getchar.c	FUNCTION_79
0x4002f8f	    0x448b2d000000	           mov r13d, dword [0x04002f96] 	      4660	getchar.c	FUNCTION_79
0x4002f96	      0x4c89442408	                 mov qword [rsp + 8], r8	      4658	getchar.c	FUNCTION_79
0x4002f9b	        0x894c2404	                mov dword [rsp + 4], ecx	      4658	getchar.c	FUNCTION_79
0x4002f9f	      0xe800000000	                          call 0x4002fa4	      4661	getchar.c	FUNCTION_79	CALL_6
0x4002fa4	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      4664	getchar.c	FUNCTION_79
0x4002fa9	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      4664	getchar.c	FUNCTION_79
0x4002fad	          0x4889c5	                            mov rbp, rax	      4661	getchar.c	FUNCTION_79	CALL_6
0x4002fb0	    0x488b05000000	            mov rax, qword [0x04002fb7] 	      4664	getchar.c	FUNCTION_79
0x4002fb7	          0x4c89e7	                            mov rdi, r12	      4668	getchar.c	FUNCTION_79	CALL_7
0x4002fba	    0x832d00000000	               sub dword [0x04002fc1], 1	      4662	getchar.c	FUNCTION_79
0x4002fc1	    0x832d00000000	               sub dword [0x04002fc8], 1	      4663	getchar.c	FUNCTION_79
0x4002fc8	    0x448935000000	           mov dword [0x04002fcf], r14d 	      4665	getchar.c	FUNCTION_79
0x4002fcf	    0x44892d000000	           mov dword [0x04002fd6], r13d 	      4666	getchar.c	FUNCTION_79
0x4002fd6	        0x4c894038	              mov qword [rax + 0x38], r8	      4664	getchar.c	FUNCTION_79
0x4002fda	          0x894840	             mov dword [rax + 0x40], ecx	      4664	getchar.c	FUNCTION_79
0x4002fdd	        0x44897844	            mov dword [rax + 0x44], r15d	      4664	getchar.c	FUNCTION_79
0x4002fe1	      0xe800000000	                          call 0x4002fe6	      4668	getchar.c	FUNCTION_79	CALL_7
0x4002fe6	          0x4889df	                            mov rdi, rbx	      4669	getchar.c	FUNCTION_79	CALL_8
0x4002fe9	      0xe800000000	                          call 0x4002fee	      4669	getchar.c	FUNCTION_79	CALL_8
0x4002fee	          0x4885ed	                           test rbp, rbp	      4671	getchar.c	FUNCTION_79	IF_3
0x4002ff1	            0x7435	                            je 0x4003028	      4671	getchar.c	FUNCTION_79	IF_3
0x4002ff3	          0x4889ef	                            mov rdi, rbp	      4674	getchar.c	FUNCTION_79	CALL_9
0x4002ff6	      0xe800000000	                          call 0x4002ffb	      4674	getchar.c	FUNCTION_79	CALL_9
0x4002ffb	          0x4889ef	                            mov rdi, rbp	      4675	getchar.c	FUNCTION_79	CALL_10
0x4002ffe	          0x4889c3	                            mov rbx, rax	      4674	getchar.c	FUNCTION_79	CALL_9
0x4003001	      0xe800000000	                          call 0x4003006	      4675	getchar.c	FUNCTION_79	CALL_10
0x4003006	        0x4883c418	                           add rsp, 0x18	      4678	getchar.c	FUNCTION_79
0x400300a	          0x4889d8	                            mov rax, rbx	      4677	getchar.c	FUNCTION_79
0x400300d	              0x5b	                                 pop rbx	      4678	getchar.c	FUNCTION_79
0x400300e	              0x5d	                                 pop rbp	      4678	getchar.c	FUNCTION_79
0x400300f	            0x415c	                                 pop r12	      4678	getchar.c	FUNCTION_79
0x4003011	            0x415d	                                 pop r13	      4678	getchar.c	FUNCTION_79
0x4003013	            0x415e	                                 pop r14	      4678	getchar.c	FUNCTION_79
0x4003015	            0x415f	                                 pop r15	      4678	getchar.c	FUNCTION_79
0x4003017	              0xc3	                                     ret	      4678	getchar.c	FUNCTION_79
0x4003018	     0xf1f84000000	                   nop dword [rax + rax]	      4678	getchar.c	FUNCTION_79
0x4003020	          0x4889df	                            mov rdi, rbx	      4649	getchar.c	FUNCTION_79	IF_2	CALL_4
0x4003023	      0xe800000000	                          call 0x4003028	      4649	getchar.c	FUNCTION_79	IF_2	CALL_4
0x4003028	        0x4883c418	                           add rsp, 0x18	      4678	getchar.c	FUNCTION_79
0x400302c	            0x31c0	                            xor eax, eax	      4650	getchar.c	FUNCTION_79	IF_2
0x400302e	              0x5b	                                 pop rbx	      4678	getchar.c	FUNCTION_79
0x400302f	              0x5d	                                 pop rbp	      4678	getchar.c	FUNCTION_79
0x4003030	            0x415c	                                 pop r12	      4678	getchar.c	FUNCTION_79
0x4003032	            0x415d	                                 pop r13	      4678	getchar.c	FUNCTION_79
0x4003034	            0x415e	                                 pop r14	      4678	getchar.c	FUNCTION_79
0x4003036	            0x415f	                                 pop r15	      4678	getchar.c	FUNCTION_79
0x4003038	              0xc3	                                     ret	      4678	getchar.c	FUNCTION_79
plain_vgetc	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,2:IF,1:DO,1:FOR,0	22
0x4004dd0	        0x4883ec08	                              sub rsp, 8	      1826	getchar.c	FUNCTION_56
0x4004dd4	         0xf1f4000	                         nop dword [rax]	      1826	getchar.c	FUNCTION_56
0x4004dd8	      0xe800000000	                          call 0x4004ddd	      1814	getchar.c	FUNCTION_55	CALL_1
0x4004ddd	            0x85c0	                           test eax, eax	      1815	getchar.c	FUNCTION_55	IF_1
0x4004ddf	            0x741f	                            je 0x4004e00	      1815	getchar.c	FUNCTION_55	IF_1
0x4004de1	    0x8d90f9580000	                 lea edx, [rax + 0x58f9]	      1832	getchar.c	FUNCTION_56	DO_1
0x4004de7	          0x83fa01	                              cmp edx, 1	      1832	getchar.c	FUNCTION_56	DO_1
0x4004dea	            0x76ec	                           jbe 0x4004dd8	      1832	getchar.c	FUNCTION_56	DO_1
0x4004dec	      0x3d03caffff	                     cmp eax, 0xffffca03	      1832	getchar.c	FUNCTION_56	DO_1
0x4004df1	            0x74e5	                            je 0x4004dd8	      1832	getchar.c	FUNCTION_56	DO_1
0x4004df3	      0x3db0acffff	                     cmp eax, 0xffffacb0	      1834	getchar.c	FUNCTION_56	IF_1
0x4004df8	            0x740d	                            je 0x4004e07	      1834	getchar.c	FUNCTION_56	IF_1
0x4004dfa	        0x4883c408	                              add rsp, 8	      1840	getchar.c	FUNCTION_56
0x4004dfe	              0xc3	                                     ret	      1840	getchar.c	FUNCTION_56
0x4004dff	              0x90	                                     nop	      1840	getchar.c	FUNCTION_56
0x4004e00	      0xe800000000	                          call 0x4004e05	      1816	getchar.c	FUNCTION_55	CALL_2
0x4004e05	            0xebda	                           jmp 0x4004de1	      1816	getchar.c	FUNCTION_55	CALL_2
0x4004e07	            0x31d2	                            xor edx, edx	      1837	getchar.c	FUNCTION_56	CALL_2
0x4004e09	            0x31f6	                            xor esi, esi	      1837	getchar.c	FUNCTION_56	CALL_2
0x4004e0b	      0xbf03000000	                              mov edi, 3	      1837	getchar.c	FUNCTION_56	CALL_2
0x4004e10	        0x4883c408	                              add rsp, 8	      1840	getchar.c	FUNCTION_56
0x4004e14	      0xe900000000	                           jmp 0x4004e19	      1837	getchar.c	FUNCTION_56	CALL_2
map_free	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,4:IF,0:DO,0:FOR,0	18
0x4000040	              0x55	                                push rbp	      3785	getchar.c	FUNCTION_67
0x4000041	              0x53	                                push rbx	      3785	getchar.c	FUNCTION_67
0x4000042	          0x4889fd	                            mov rbp, rdi	      3785	getchar.c	FUNCTION_67
0x4000045	        0x4883ec08	                              sub rsp, 8	      3785	getchar.c	FUNCTION_67
0x4000049	          0x488b1f	                    mov rbx, qword [rdi]	      3788	getchar.c	FUNCTION_67
0x400004c	        0x488b7b08	                mov rdi, qword [rbx + 8]	      3789	getchar.c	FUNCTION_67	CALL_1
0x4000050	      0xe800000000	                          call 0x4000055	      3789	getchar.c	FUNCTION_67	CALL_1
0x4000055	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3790	getchar.c	FUNCTION_67	CALL_2
0x4000059	      0xe800000000	                          call 0x400005e	      3790	getchar.c	FUNCTION_67	CALL_2
0x400005e	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      3791	getchar.c	FUNCTION_67	CALL_3
0x4000062	      0xe800000000	                          call 0x4000067	      3791	getchar.c	FUNCTION_67	CALL_3
0x4000067	          0x488b03	                    mov rax, qword [rbx]	      3792	getchar.c	FUNCTION_67
0x400006a	          0x4889df	                            mov rdi, rbx	      3793	getchar.c	FUNCTION_67	CALL_4
0x400006d	        0x48894500	                    mov qword [rbp], rax	      3792	getchar.c	FUNCTION_67
0x4000071	        0x4883c408	                              add rsp, 8	      3794	getchar.c	FUNCTION_67
0x4000075	              0x5b	                                 pop rbx	      3794	getchar.c	FUNCTION_67
0x4000076	              0x5d	                                 pop rbp	      3794	getchar.c	FUNCTION_67
0x4000077	      0xe900000000	                           jmp 0x400007c	      3793	getchar.c	FUNCTION_67	CALL_4
inchar	WHILE,1:ELSE,2:functions,0:SWITCH,0:CALL,11:IF,10:DO,0:FOR,1	141
0x4001e90	            0x4157	                                push r15	      2969	getchar.c	FUNCTION_63
0x4001e92	            0x4156	                                push r14	      2969	getchar.c	FUNCTION_63
0x4001e94	          0x4989d6	                            mov r14, rdx	      2969	getchar.c	FUNCTION_63
0x4001e97	            0x4155	                                push r13	      2969	getchar.c	FUNCTION_63
0x4001e99	            0x4154	                                push r12	      2969	getchar.c	FUNCTION_63
0x4001e9b	          0x4989fd	                            mov r13, rdi	      2969	getchar.c	FUNCTION_63
0x4001e9e	              0x55	                                push rbp	      2969	getchar.c	FUNCTION_63
0x4001e9f	              0x53	                                push rbx	      2969	getchar.c	FUNCTION_63
0x4001ea0	    0x4881ecc80000	                           sub rsp, 0xc8	      2969	getchar.c	FUNCTION_63
0x4001ea7	    0x448b3d000000	           mov r15d, dword [0x04001eae] 	      2973	getchar.c	FUNCTION_63
0x4001eae	    0x64488b042528	                mov rax, qword fs:[0x28]	      2969	getchar.c	FUNCTION_63
0x4001eb7	    0x48898424b800	             mov qword [rsp + 0xb8], rax	      2969	getchar.c	FUNCTION_63
0x4001ebf	            0x31c0	                            xor eax, eax	      2969	getchar.c	FUNCTION_63
0x4001ec1	        0x4883faff	             cmp rdx, 0xffffffffffffffff	      2975	getchar.c	FUNCTION_63	IF_1
0x4001ec5	        0x8974240c	              mov dword [rsp + 0xc], esi	      2969	getchar.c	FUNCTION_63
0x4001ec9	     0xf8481010000	                            je 0x4002050	      2975	getchar.c	FUNCTION_63	IF_1
0x4001ecf	        0x4883fa64	                           cmp rdx, 0x64	      2975	getchar.c	FUNCTION_63	IF_1
0x4001ed3	     0xf8f77010000	                            jg 0x4002050	      2975	getchar.c	FUNCTION_63	IF_1
0x4001ed9	    0x813d00000000	          cmp dword [0x04001ee3], 0x201 	      2990	getchar.c	FUNCTION_63	IF_3
0x4001ee3	            0x7414	                            je 0x4001ef9	      2990	getchar.c	FUNCTION_63	IF_3
0x4001ee5	    0xc70500000000	               mov dword [0x04001eef], 0	      2992	getchar.c	FUNCTION_63	IF_3
0x4001eef	    0xc70500000000	               mov dword [0x04001ef9], 0	      2993	getchar.c	FUNCTION_63	IF_3
0x4001ef9	    0xc70500000000	               mov dword [0x04001f03], 0	      2995	getchar.c	FUNCTION_63
0x4001f03	      0xbbffffffff	                     mov ebx, 0xffffffff	      3001	getchar.c	FUNCTION_63
0x4001f08	            0x31ed	                            xor ebp, ebp	      2971	getchar.c	FUNCTION_63
0x4001f0a	          0x4531e4	                          xor r12d, r12d	      2970	getchar.c	FUNCTION_63
0x4001f0d	           0xf1f00	                         nop dword [rax]	      2970	getchar.c	FUNCTION_63
0x4001f10	    0x486305000000	         movsxd rax, dword [0x04001f17] 	      3002	getchar.c	FUNCTION_63	WHILE_1
0x4001f17	    0x48833cc50000	                    cmp qword [rax*8], 0	      3002	getchar.c	FUNCTION_63	WHILE_1
0x4001f20	            0x746e	                            je 0x4001f90	      3002	getchar.c	FUNCTION_63	WHILE_1
0x4001f22	            0x85db	                           test ebx, ebx	      3002	getchar.c	FUNCTION_63	WHILE_1
0x4001f24	     0xf89ae000000	                           jns 0x4001fd8	      3002	getchar.c	FUNCTION_63	WHILE_1
0x4001f2a	    0x8b0d00000000	            mov ecx, dword [0x04001f30] 	      3004	getchar.c	FUNCTION_63	WHILE_1
0x4001f30	            0x85c9	                           test ecx, ecx	      3004	getchar.c	FUNCTION_63	WHILE_1
0x4001f32	            0x7564	                           jne 0x4001f98	      3004	getchar.c	FUNCTION_63	WHILE_1
0x4001f34	      0xe800000000	                          call 0x4001f39	      3010	getchar.c	FUNCTION_63	WHILE_1	CALL_4
0x4001f39	    0x8b0500000000	            mov eax, dword [0x04001f3f] 	      3013	getchar.c	FUNCTION_63	WHILE_1	IF_4	CALL_5
0x4001f3f	            0x85c0	                           test eax, eax	      3013	getchar.c	FUNCTION_63	WHILE_1	IF_4	CALL_5
0x4001f41	            0x752d	                           jne 0x4001f70	      3013	getchar.c	FUNCTION_63	WHILE_1	IF_4	CALL_5
0x4001f43	    0x486305000000	         movsxd rax, dword [0x04001f4a] 	      3013	getchar.c	FUNCTION_63	WHILE_1	IF_4	CALL_5
0x4001f4a	    0x488b3cc50000	                  mov rdi, qword [rax*8]	      3013	getchar.c	FUNCTION_63	WHILE_1	IF_4	CALL_5
0x4001f52	      0xe800000000	                          call 0x4001f57	      3013	getchar.c	FUNCTION_63	WHILE_1	IF_4	CALL_5
0x4001f57	            0x85c0	                           test eax, eax	      3013	getchar.c	FUNCTION_63	WHILE_1	IF_4	CALL_5
0x4001f59	            0x89c3	                            mov ebx, eax	      3013	getchar.c	FUNCTION_63	WHILE_1	IF_4	CALL_5
0x4001f5b	            0x7813	                            js 0x4001f70	      3013	getchar.c	FUNCTION_63	WHILE_1	IF_4	CALL_5
0x4001f5d	        0x41884500	                      mov byte [r13], al	      3031	getchar.c	FUNCTION_63	WHILE_1	ELSE_1	ELSE_2
0x4001f61	    0x41bc01000000	                             mov r12d, 1	      3032	getchar.c	FUNCTION_63	WHILE_1	ELSE_1	ELSE_2
0x4001f67	            0xeba7	                           jmp 0x4001f10	      3032	getchar.c	FUNCTION_63	WHILE_1	ELSE_1	ELSE_2
0x4001f69	     0xf1f80000000	                         nop dword [rax]	      3032	getchar.c	FUNCTION_63	WHILE_1	ELSE_1	ELSE_2
0x4001f70	      0xe81bf8ffff	                    call sym.closescript	      3018	getchar.c	FUNCTION_63	WHILE_1	IF_4	CALL_6
0x4001f75	    0x8b0500000000	            mov eax, dword [0x04001f7b] 	      3024	getchar.c	FUNCTION_63	WHILE_1	IF_4	IF_5
0x4001f7b	            0x85c0	                           test eax, eax	      3024	getchar.c	FUNCTION_63	WHILE_1	IF_4	IF_5
0x4001f7d	     0xf843d010000	                            je 0x40020c0	      3024	getchar.c	FUNCTION_63	WHILE_1	IF_4	IF_5
0x4001f83	      0xbd01000000	                              mov ebp, 1	      3025	getchar.c	FUNCTION_63	WHILE_1	IF_4	IF_5
0x4001f88	            0xeb86	                           jmp 0x4001f10	      3025	getchar.c	FUNCTION_63	WHILE_1	IF_4	IF_5
0x4001f8a	    0x660f1f440000	                    nop word [rax + rax]	      3025	getchar.c	FUNCTION_63	WHILE_1	IF_4	IF_5
0x4001f90	            0x85db	                           test ebx, ebx	      3036	getchar.c	FUNCTION_63	ELSE_1	IF_6
0x4001f92	            0x7944	                           jns 0x4001fd8	      3036	getchar.c	FUNCTION_63	ELSE_1	IF_6
0x4001f94	         0xf1f4000	                         nop dword [rax]	      3036	getchar.c	FUNCTION_63	ELSE_1	IF_6
0x4001f98	    0x8b0500000000	            mov eax, dword [0x04001f9e] 	      3046	getchar.c	FUNCTION_63	ELSE_1	IF_6	IF_7
0x4001f9e	            0x85c0	                           test eax, eax	      3046	getchar.c	FUNCTION_63	ELSE_1	IF_6	IF_7
0x4001fa0	     0xf85f1000000	                           jne 0x4002097	      3046	getchar.c	FUNCTION_63	ELSE_1	IF_6	IF_7
0x4001fa6	      0xe800000000	                          call 0x4001fab	      3064	getchar.c	FUNCTION_63	ELSE_1	IF_6	CALL_8
0x4001fab	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      3070	getchar.c	FUNCTION_63	ELSE_1	IF_6	CALL_9
0x4001faf	      0xba56555555	                     mov edx, 0x55555556	      3070	getchar.c	FUNCTION_63	ELSE_1	IF_6	CALL_9
0x4001fb4	          0x4489f9	                           mov ecx, r15d	      3070	getchar.c	FUNCTION_63	ELSE_1	IF_6	CALL_9
0x4001fb7	          0x4c89ef	                            mov rdi, r13	      3070	getchar.c	FUNCTION_63	ELSE_1	IF_6	CALL_9
0x4001fba	            0xf7ea	                                imul edx	      3070	getchar.c	FUNCTION_63	ELSE_1	IF_6	CALL_9
0x4001fbc	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      3070	getchar.c	FUNCTION_63	ELSE_1	IF_6	CALL_9
0x4001fc0	            0x89d6	                            mov esi, edx	      3070	getchar.c	FUNCTION_63	ELSE_1	IF_6	CALL_9
0x4001fc2	          0xc1f81f	                           sar eax, 0x1f	      3070	getchar.c	FUNCTION_63	ELSE_1	IF_6	CALL_9
0x4001fc5	          0x4c89f2	                            mov rdx, r14	      3070	getchar.c	FUNCTION_63	ELSE_1	IF_6	CALL_9
0x4001fc8	            0x29c6	                            sub esi, eax	      3070	getchar.c	FUNCTION_63	ELSE_1	IF_6	CALL_9
0x4001fca	      0xe800000000	                          call 0x4001fcf	      3070	getchar.c	FUNCTION_63	ELSE_1	IF_6	CALL_9
0x4001fcf	          0x4189c4	                           mov r12d, eax	      3070	getchar.c	FUNCTION_63	ELSE_1	IF_6	CALL_9
0x4001fd2	    0x660f1f440000	                    nop word [rax + rax]	      3070	getchar.c	FUNCTION_63	ELSE_1	IF_6	CALL_9
0x4001fd8	          0x4585ff	                         test r15d, r15d	      1131	getchar.c	FUNCTION_37
0x4001fdb	            0x7553	                           jne 0x4002030	      1131	getchar.c	FUNCTION_37
0x4001fdd	          0x4585e4	                         test r12d, r12d	      3081	getchar.c	FUNCTION_63	IF_10
0x4001fe0	            0x7e17	                           jle 0x4001ff9	      3081	getchar.c	FUNCTION_63	IF_10
0x4001fe2	    0x8b0500000000	            mov eax, dword [0x04001fe8] 	      3081	getchar.c	FUNCTION_63	IF_10
0x4001fe8	      0xba01000000	                              mov edx, 1	      3081	getchar.c	FUNCTION_63	IF_10
0x4001fed	          0x83c001	                              add eax, 1	      3081	getchar.c	FUNCTION_63	IF_10
0x4001ff0	           0xf44c2	                          cmove eax, edx	      3081	getchar.c	FUNCTION_63	IF_10
0x4001ff3	    0x890500000000	            mov dword [0x04001ff9], eax 	      3081	getchar.c	FUNCTION_63	IF_10
0x4001ff9	          0x4489e6	                           mov esi, r12d	      3084	getchar.c	FUNCTION_63	CALL_11
0x4001ffc	          0x4c89ef	                            mov rdi, r13	      3084	getchar.c	FUNCTION_63	CALL_11
0x4001fff	      0xe800000000	                          call 0x4002004	      3084	getchar.c	FUNCTION_63	CALL_11
0x4002004	    0x488b8c24b800	            mov rcx, qword [rsp + 0xb8] 	      3085	getchar.c	FUNCTION_63
0x400200c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3085	getchar.c	FUNCTION_63
0x4002015	     0xf85af000000	                           jne 0x40020ca	      3085	getchar.c	FUNCTION_63
0x400201b	    0x4881c4c80000	                           add rsp, 0xc8	      3085	getchar.c	FUNCTION_63
0x4002022	              0x5b	                                 pop rbx	      3085	getchar.c	FUNCTION_63
0x4002023	              0x5d	                                 pop rbp	      3085	getchar.c	FUNCTION_63
0x4002024	            0x415c	                                 pop r12	      3085	getchar.c	FUNCTION_63
0x4002026	            0x415d	                                 pop r13	      3085	getchar.c	FUNCTION_63
0x4002028	            0x415e	                                 pop r14	      3085	getchar.c	FUNCTION_63
0x400202a	            0x415f	                                 pop r15	      3085	getchar.c	FUNCTION_63
0x400202c	              0xc3	                                     ret	      3085	getchar.c	FUNCTION_63
0x400202d	           0xf1f00	                         nop dword [rax]	      3085	getchar.c	FUNCTION_63
0x4002030	            0x31c0	                            xor eax, eax	      3076	getchar.c	FUNCTION_63	IF_9
0x4002032	    0x443b3d000000	           cmp r15d, dword [0x04002039] 	      1131	getchar.c	FUNCTION_37
0x4002039	            0x75c9	                           jne 0x4002004	      1131	getchar.c	FUNCTION_37
0x400203b	    0x8b1500000000	            mov edx, dword [0x04002041] 	      1133	getchar.c	FUNCTION_37
0x4002041	            0x85d2	                           test edx, edx	      1133	getchar.c	FUNCTION_37
0x4002043	            0x75bf	                           jne 0x4002004	      1133	getchar.c	FUNCTION_37
0x4002045	            0xeb96	                           jmp 0x4001fdd	      1133	getchar.c	FUNCTION_37
0x4002047	    0x660f1f840000	                    nop word [rax + rax]	      1133	getchar.c	FUNCTION_37
0x4002050	      0xe800000000	                          call 0x4002055	      2977	getchar.c	FUNCTION_63	IF_1	CALL_1
0x4002055	            0x31ff	                            xor edi, edi	      2978	getchar.c	FUNCTION_63	IF_1	CALL_2
0x4002057	            0x31f6	                            xor esi, esi	      2978	getchar.c	FUNCTION_63	IF_1	CALL_2
0x4002059	      0xe800000000	                          call 0x400205e	      2978	getchar.c	FUNCTION_63	IF_1	CALL_2
0x400205e	    0x8b3d00000000	            mov edi, dword [0x04002064] 	      2980	getchar.c	FUNCTION_63	IF_1	IF_2
0x4002064	            0x85ff	                           test edi, edi	      2980	getchar.c	FUNCTION_63	IF_1	IF_2
0x4002066	     0xf846dfeffff	                            je 0x4001ed9	      2980	getchar.c	FUNCTION_63	IF_1	IF_2
0x400206c	    0x8b3500000000	            mov esi, dword [0x04002072] 	      2980	getchar.c	FUNCTION_63	IF_1	IF_2
0x4002072	            0x85f6	                           test esi, esi	      2980	getchar.c	FUNCTION_63	IF_1	IF_2
0x4002074	     0xf845ffeffff	                            je 0x4001ed9	      2980	getchar.c	FUNCTION_63	IF_1	IF_2
0x400207a	      0xbfffffffff	                     mov edi, 0xffffffff	      2981	getchar.c	FUNCTION_63	IF_1	CALL_3
0x400207f	      0xe800000000	                          call 0x4002084	      2981	getchar.c	FUNCTION_63	IF_1	CALL_3
0x4002084	      0xe950feffff	                           jmp 0x4001ed9	      2981	getchar.c	FUNCTION_63	IF_1	CALL_3
0x4002089	     0xf1f80000000	                         nop dword [rax]	      2981	getchar.c	FUNCTION_63	IF_1	CALL_3
0x4002090	      0x807c241003	                cmp byte [rsp + 0x10], 3	      3054	getchar.c	FUNCTION_63	ELSE_1	IF_6	IF_7	FOR_1	IF_8
0x4002095	            0x7421	                            je 0x40020b8	      3054	getchar.c	FUNCTION_63	ELSE_1	IF_6	IF_7	FOR_1	IF_8
0x4002097	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3053	getchar.c	FUNCTION_63	ELSE_1	IF_6	IF_7	FOR_1	CALL_7
0x400209c	            0x31c9	                            xor ecx, ecx	      3053	getchar.c	FUNCTION_63	ELSE_1	IF_6	IF_7	FOR_1	CALL_7
0x400209e	            0x31d2	                            xor edx, edx	      3053	getchar.c	FUNCTION_63	ELSE_1	IF_6	IF_7	FOR_1	CALL_7
0x40020a0	      0xbe99000000	                           mov esi, 0x99	      3053	getchar.c	FUNCTION_63	ELSE_1	IF_6	IF_7	FOR_1	CALL_7
0x40020a5	      0xe800000000	                          call 0x40020aa	      3053	getchar.c	FUNCTION_63	ELSE_1	IF_6	IF_7	FOR_1	CALL_7
0x40020aa	            0x85c0	                           test eax, eax	      3054	getchar.c	FUNCTION_63	ELSE_1	IF_6	IF_7	FOR_1	IF_8
0x40020ac	            0x740a	                            je 0x40020b8	      3054	getchar.c	FUNCTION_63	ELSE_1	IF_6	IF_7	FOR_1	IF_8
0x40020ae	          0x83f801	                              cmp eax, 1	      3054	getchar.c	FUNCTION_63	ELSE_1	IF_6	IF_7	FOR_1	IF_8
0x40020b1	            0x75e4	                           jne 0x4002097	      3054	getchar.c	FUNCTION_63	ELSE_1	IF_6	IF_7	FOR_1	IF_8
0x40020b3	            0xebdb	                           jmp 0x4002090	      3054	getchar.c	FUNCTION_63	ELSE_1	IF_6	IF_7	FOR_1	IF_8
0x40020b5	           0xf1f00	                         nop dword [rax]	      3054	getchar.c	FUNCTION_63	ELSE_1	IF_6	IF_7	FOR_1	IF_8
0x40020b8	            0x89e8	                            mov eax, ebp	      3054	getchar.c	FUNCTION_63	ELSE_1	IF_6	IF_7	FOR_1	IF_8
0x40020ba	      0xe945ffffff	                           jmp 0x4002004	      3054	getchar.c	FUNCTION_63	ELSE_1	IF_6	IF_7	FOR_1	IF_8
0x40020bf	              0x90	                                     nop	      3054	getchar.c	FUNCTION_63	ELSE_1	IF_6	IF_7	FOR_1	IF_8
0x40020c0	      0xb8ffffffff	                     mov eax, 0xffffffff	      3027	getchar.c	FUNCTION_63	WHILE_1	IF_4	ELSE_1
0x40020c5	      0xe93affffff	                           jmp 0x4002004	      3027	getchar.c	FUNCTION_63	WHILE_1	IF_4	ELSE_1
0x40020ca	      0xe800000000	                          call 0x40020cf	      3085	getchar.c	FUNCTION_63
saveRedobuff	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,3:IF,1:DO,0:FOR,0	34
0x4000b90	    0x488b05000000	            mov rax, qword [0x04000b97] 	       528	getchar.c	FUNCTION_17
0x4000b97	              0x53	                                push rbx	       525	getchar.c	FUNCTION_17
0x4000b98	            0x31f6	                            xor esi, esi	       534	getchar.c	FUNCTION_17	CALL_1
0x4000b9a	          0x488907	                    mov qword [rdi], rax	       528	getchar.c	FUNCTION_17
0x4000b9d	    0x488b05000000	            mov rax, qword [0x04000ba4] 	       528	getchar.c	FUNCTION_17
0x4000ba4	    0x48c705000000	               mov qword [0x04000baf], 0	       529	getchar.c	FUNCTION_17
0x4000baf	        0x48894708	                mov qword [rdi + 8], rax	       528	getchar.c	FUNCTION_17
0x4000bb3	    0x488b05000000	            mov rax, qword [0x04000bba] 	       528	getchar.c	FUNCTION_17
0x4000bba	        0x48894710	             mov qword [rdi + 0x10], rax	       528	getchar.c	FUNCTION_17
0x4000bbe	    0x488b05000000	            mov rax, qword [0x04000bc5] 	       528	getchar.c	FUNCTION_17
0x4000bc5	        0x48894718	             mov qword [rdi + 0x18], rax	       528	getchar.c	FUNCTION_17
0x4000bc9	    0x488b05000000	            mov rax, qword [0x04000bd0] 	       530	getchar.c	FUNCTION_17
0x4000bd0	    0x48c705000000	               mov qword [0x04000bdb], 0	       531	getchar.c	FUNCTION_17
0x4000bdb	        0x48894720	             mov qword [rdi + 0x20], rax	       530	getchar.c	FUNCTION_17
0x4000bdf	    0x488b05000000	            mov rax, qword [0x04000be6] 	       530	getchar.c	FUNCTION_17
0x4000be6	        0x48894728	             mov qword [rdi + 0x28], rax	       530	getchar.c	FUNCTION_17
0x4000bea	    0x488b05000000	            mov rax, qword [0x04000bf1] 	       530	getchar.c	FUNCTION_17
0x4000bf1	        0x48894730	             mov qword [rdi + 0x30], rax	       530	getchar.c	FUNCTION_17
0x4000bf5	    0x488b05000000	            mov rax, qword [0x04000bfc] 	       530	getchar.c	FUNCTION_17
0x4000bfc	        0x48894738	             mov qword [rdi + 0x38], rax	       530	getchar.c	FUNCTION_17
0x4000c00	      0xe88bf9ffff	            call sym.get_buffcont.isra.5	       534	getchar.c	FUNCTION_17	CALL_1
0x4000c05	          0x4885c0	                           test rax, rax	       535	getchar.c	FUNCTION_17	IF_1
0x4000c08	            0x7426	                            je 0x4000c30	       535	getchar.c	FUNCTION_17	IF_1
0x4000c0a	          0x4889c3	                            mov rbx, rax	       535	getchar.c	FUNCTION_17	IF_1
0x4000c0d	      0xbf00000000	                              mov edi, 0	       537	getchar.c	FUNCTION_17	IF_1	CALL_2
0x4000c12	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       537	getchar.c	FUNCTION_17	IF_1	CALL_2
0x4000c19	          0x4889c6	                            mov rsi, rax	       537	getchar.c	FUNCTION_17	IF_1	CALL_2
0x4000c1c	      0xe85ff4ffff	                       call sym.add_buff	       537	getchar.c	FUNCTION_17	IF_1	CALL_2
0x4000c21	          0x4889df	                            mov rdi, rbx	       538	getchar.c	FUNCTION_17	IF_1	CALL_3
0x4000c24	              0x5b	                                 pop rbx	       540	getchar.c	FUNCTION_17
0x4000c25	      0xe900000000	                           jmp 0x4000c2a	       538	getchar.c	FUNCTION_17	IF_1	CALL_3
0x4000c2a	    0x660f1f440000	                    nop word [rax + rax]	       538	getchar.c	FUNCTION_17	IF_1	CALL_3
0x4000c30	              0x5b	                                 pop rbx	       540	getchar.c	FUNCTION_17
0x4000c31	              0xc3	                                     ret	       540	getchar.c	FUNCTION_17
put_escstr	WHILE,1:ELSE,2:functions,0:SWITCH,0:CALL,11:IF,18:DO,0:FOR,1	196
0x4006760	            0x4155	                                push r13	      4978	getchar.c	FUNCTION_83
0x4006762	            0x4154	                                push r12	      4978	getchar.c	FUNCTION_83
0x4006764	          0x4189d4	                           mov r12d, edx	      4978	getchar.c	FUNCTION_83
0x4006767	              0x55	                                push rbp	      4978	getchar.c	FUNCTION_83
0x4006768	              0x53	                                push rbx	      4978	getchar.c	FUNCTION_83
0x4006769	          0x4889fd	                            mov rbp, rdi	      4978	getchar.c	FUNCTION_83
0x400676c	        0x4883ec18	                           sub rsp, 0x18	      4978	getchar.c	FUNCTION_83
0x4006770	    0x64488b042528	                mov rax, qword fs:[0x28]	      4978	getchar.c	FUNCTION_83
0x4006779	      0x4889442408	                mov qword [rsp + 8], rax	      4978	getchar.c	FUNCTION_83
0x400677e	            0x31c0	                            xor eax, eax	      4978	getchar.c	FUNCTION_83
0x4006780	           0xfb606	                   movzx eax, byte [rsi]	      4984	getchar.c	FUNCTION_83	IF_1
0x4006783	        0x48893424	                    mov qword [rsp], rsi	      4979	getchar.c	FUNCTION_83
0x4006787	            0x84c0	                             test al, al	      4984	getchar.c	FUNCTION_83	IF_1
0x4006789	           0xf94c1	                                 sete cl	      4984	getchar.c	FUNCTION_83	IF_1
0x400678c	          0x83fa01	                              cmp edx, 1	      4984	getchar.c	FUNCTION_83	IF_1
0x400678f	           0xf94c2	                                 sete dl	      4984	getchar.c	FUNCTION_83	IF_1
0x4006792	            0x84d1	                             test cl, dl	      4984	getchar.c	FUNCTION_83	IF_1
0x4006794	     0xf856d020000	                           jne 0x4006a07	      4984	getchar.c	FUNCTION_83	IF_1
0x400679a	            0x84c0	                             test al, al	      4991	getchar.c	FUNCTION_83	FOR_1
0x400679c	          0x4989f5	                            mov r13, rsi	      4991	getchar.c	FUNCTION_83	FOR_1
0x400679f	            0x7529	                           jne 0x40067ca	      4991	getchar.c	FUNCTION_83	FOR_1
0x40067a1	      0xe96a010000	                           jmp 0x4006910	      4991	getchar.c	FUNCTION_83	FOR_1
0x40067a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4991	getchar.c	FUNCTION_83	FOR_1
0x40067b0	        0x488b0424	                    mov rax, qword [rsp]	      5004	getchar.c	FUNCTION_83	FOR_1	IF_3
0x40067b4	        0x4883e801	                              sub rax, 1	      5004	getchar.c	FUNCTION_83	FOR_1	IF_3
0x40067b8	        0x488d5001	                      lea rdx, [rax + 1]	      4991	getchar.c	FUNCTION_83	FOR_1
0x40067bc	        0x48891424	                    mov qword [rsp], rdx	      4991	getchar.c	FUNCTION_83	FOR_1
0x40067c0	        0x80780100	                   cmp byte [rax + 1], 0	      4991	getchar.c	FUNCTION_83	FOR_1
0x40067c4	     0xf8446010000	                            je 0x4006910	      4991	getchar.c	FUNCTION_83	FOR_1
0x40067ca	          0x4889e7	                            mov rdi, rsp	      4998	getchar.c	FUNCTION_83	FOR_1	CALL_1
0x40067cd	      0xe800000000	                          call 0x40067d2	      4998	getchar.c	FUNCTION_83	FOR_1	CALL_1
0x40067d2	          0x4885c0	                           test rax, rax	      4999	getchar.c	FUNCTION_83	FOR_1	IF_3
0x40067d5	          0x4889c3	                            mov rbx, rax	      4998	getchar.c	FUNCTION_83	FOR_1	CALL_1
0x40067d8	            0x743e	                            je 0x4006818	      4999	getchar.c	FUNCTION_83	FOR_1	IF_3
0x40067da	           0xfb63b	                   movzx edi, byte [rbx]	      5001	getchar.c	FUNCTION_83	FOR_1	IF_3	WHILE_1
0x40067dd	          0x4084ff	                           test dil, dil	      5001	getchar.c	FUNCTION_83	FOR_1	IF_3	WHILE_1
0x40067e0	            0x74ce	                            je 0x40067b0	      5001	getchar.c	FUNCTION_83	FOR_1	IF_3	WHILE_1
0x40067e2	          0x4889ee	                            mov rsi, rbp	      5002	getchar.c	FUNCTION_83	FOR_1	IF_3	WHILE_1	IF_4	CALL_2
0x40067e5	        0x4883c301	                              add rbx, 1	      5002	getchar.c	FUNCTION_83	FOR_1	IF_3	WHILE_1	IF_4	CALL_2
0x40067e9	      0xe800000000	                          call 0x40067ee	      5002	getchar.c	FUNCTION_83	FOR_1	IF_3	WHILE_1	IF_4	CALL_2
0x40067ee	            0x85c0	                           test eax, eax	      5002	getchar.c	FUNCTION_83	FOR_1	IF_3	WHILE_1	IF_4	CALL_2
0x40067f0	            0x79e8	                           jns 0x40067da	      5002	getchar.c	FUNCTION_83	FOR_1	IF_3	WHILE_1	IF_4	CALL_2
0x40067f2	            0x31c0	                            xor eax, eax	      5003	getchar.c	FUNCTION_83	FOR_1	IF_3	WHILE_1	IF_4
0x40067f4	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5083	getchar.c	FUNCTION_83
0x40067f9	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5083	getchar.c	FUNCTION_83
0x4006802	     0xf851a020000	                           jne 0x4006a22	      5083	getchar.c	FUNCTION_83
0x4006808	        0x4883c418	                           add rsp, 0x18	      5083	getchar.c	FUNCTION_83
0x400680c	              0x5b	                                 pop rbx	      5083	getchar.c	FUNCTION_83
0x400680d	              0x5d	                                 pop rbp	      5083	getchar.c	FUNCTION_83
0x400680e	            0x415c	                                 pop r12	      5083	getchar.c	FUNCTION_83
0x4006810	            0x415d	                                 pop r13	      5083	getchar.c	FUNCTION_83
0x4006812	              0xc3	                                     ret	      5083	getchar.c	FUNCTION_83
0x4006813	       0xf1f440000	                   nop dword [rax + rax]	      5083	getchar.c	FUNCTION_83
0x4006818	        0x488b1424	                    mov rdx, qword [rsp]	      5009	getchar.c	FUNCTION_83	FOR_1
0x400681c	        0x4183fc02	                             cmp r12d, 2	      5014	getchar.c	FUNCTION_83	FOR_1	IF_5
0x4006820	           0xf95c1	                                setne cl	      5014	getchar.c	FUNCTION_83	FOR_1	IF_5
0x4006823	           0xfb61a	                   movzx ebx, byte [rdx]	      5009	getchar.c	FUNCTION_83	FOR_1
0x4006826	    0x81fb80000000	                           cmp ebx, 0x80	      5014	getchar.c	FUNCTION_83	FOR_1	IF_5
0x400682c	           0xf94c0	                                 sete al	      5014	getchar.c	FUNCTION_83	FOR_1	IF_5
0x400682f	            0x20c8	                              and al, cl	      5014	getchar.c	FUNCTION_83	FOR_1	IF_5
0x4006831	            0x746d	                            je 0x40068a0	      5014	getchar.c	FUNCTION_83	FOR_1	IF_5
0x4006833	         0xfb67a01	               movzx edi, byte [rdx + 1]	      5017	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_6
0x4006837	          0x4531c0	                            xor r8d, r8d	      5017	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_6
0x400683a	            0x31f6	                            xor esi, esi	      5016	getchar.c	FUNCTION_83	FOR_1	IF_5
0x400683c	        0x4080fffc	                           cmp dil, 0xfc	      5017	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_6
0x4006840	     0xf847a010000	                            je 0x40069c0	      5017	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_6
0x4006846	        0x4080fffe	                           cmp dil, 0xfe	      5025	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7	CALL_3
0x400684a	      0xbb80000000	                           mov ebx, 0x80	      5025	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7	CALL_3
0x400684f	            0x741d	                            je 0x400686e	      5025	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7	CALL_3
0x4006851	        0x4080ffff	                           cmp dil, 0xff	      5025	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7	CALL_3
0x4006855	     0xf849f010000	                            je 0x40069fa	      5025	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7	CALL_3
0x400685b	         0xfb65a02	               movzx ebx, byte [rdx + 2]	      5025	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7	CALL_3
0x400685f	          0xc1e308	                              shl ebx, 8	      5025	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7	CALL_3
0x4006862	             0x1fb	                            add ebx, edi	      5025	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7	CALL_3
0x4006864	            0xf7db	                                 neg ebx	      5025	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7	CALL_3
0x4006866	            0x89d8	                            mov eax, ebx	      5025	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7	CALL_3
0x4006868	          0xc1e81f	                           shr eax, 0x1f	      5025	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7	CALL_3
0x400686b	          0x4109c0	                             or r8d, eax	      5025	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7	CALL_3
0x400686e	        0x4883c202	                              add rdx, 2	      5026	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7
0x4006872	        0x48891424	                    mov qword [rsp], rdx	      5026	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7
0x4006876	          0x4584c0	                           test r8b, r8b	      5028	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_8	CALL_4
0x4006879	            0x7425	                            je 0x40068a0	      5028	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_8	CALL_4
0x400687b	            0x89df	                            mov edi, ebx	      5030	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_8	IF_9	CALL_6
0x400687d	      0xe800000000	                          call 0x4006882	      5030	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_8	IF_9	CALL_6
0x4006882	          0x4889ee	                            mov rsi, rbp	      5030	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_8	IF_9	CALL_6
0x4006885	          0x4889c7	                            mov rdi, rax	      5030	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_8	IF_9	CALL_6
0x4006888	      0xe800000000	                          call 0x400688d	      5030	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_8	IF_9	CALL_6
0x400688d	            0x85c0	                           test eax, eax	      5030	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_8	IF_9	CALL_6
0x400688f	            0x7969	                           jns 0x40068fa	      5030	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_8	IF_9	CALL_6
0x4006891	      0xe95cffffff	                           jmp 0x40067f2	      5030	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_8	IF_9	CALL_6
0x4006896	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5030	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_8	IF_9	CALL_6
0x40068a0	          0x83fb0a	                            cmp ebx, 0xa	      5040	getchar.c	FUNCTION_83	FOR_1	IF_10
0x40068a3	            0x747b	                            je 0x4006920	      5040	getchar.c	FUNCTION_83	FOR_1	IF_10
0x40068a5	        0x4183fc02	                             cmp r12d, 2	      5066	getchar.c	FUNCTION_83	FOR_1	IF_14	CALL_8
0x40068a9	     0xf84c1000000	                            je 0x4006970	      5066	getchar.c	FUNCTION_83	FOR_1	IF_14	CALL_8
0x40068af	          0x8d43e0	                   lea eax, [rbx - 0x20]	      5071	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x40068b2	          0x83f85e	                           cmp eax, 0x5e	      5071	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x40068b5	            0x771c	                            ja 0x40068d3	      5071	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x40068b7	          0x83fb7c	                           cmp ebx, 0x7c	      5071	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x40068ba	            0x7417	                            je 0x40068d3	      5071	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x40068bc	          0x83fb20	                           cmp ebx, 0x20	      5072	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x40068bf	           0xf94c0	                                 sete al	      5072	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x40068c2	          0x4585e4	                         test r12d, r12d	      5072	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x40068c5	     0xf8585000000	                           jne 0x4006950	      5072	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x40068cb	            0x84c0	                             test al, al	      5072	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x40068cd	     0xf847d000000	                            je 0x4006950	      5072	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x40068d3	          0x4889ee	                            mov rsi, rbp	      5076	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16	IF_17	CALL_10
0x40068d6	      0xbf16000000	                           mov edi, 0x16	      5076	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16	IF_17	CALL_10
0x40068db	      0xe800000000	                          call 0x40068e0	      5076	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16	IF_17	CALL_10
0x40068e0	            0x85c0	                           test eax, eax	      5076	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16	IF_17	CALL_10
0x40068e2	     0xf880affffff	                            js 0x40067f2	      5076	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16	IF_17	CALL_10
0x40068e8	          0x4889ee	                            mov rsi, rbp	      5079	getchar.c	FUNCTION_83	FOR_1	IF_18	CALL_11
0x40068eb	            0x89df	                            mov edi, ebx	      5079	getchar.c	FUNCTION_83	FOR_1	IF_18	CALL_11
0x40068ed	      0xe800000000	                          call 0x40068f2	      5079	getchar.c	FUNCTION_83	FOR_1	IF_18	CALL_11
0x40068f2	            0x85c0	                           test eax, eax	      5079	getchar.c	FUNCTION_83	FOR_1	IF_18	CALL_11
0x40068f4	     0xf88f8feffff	                            js 0x40067f2	      5079	getchar.c	FUNCTION_83	FOR_1	IF_18	CALL_11
0x40068fa	        0x488b0424	                    mov rax, qword [rsp]	      5079	getchar.c	FUNCTION_83	FOR_1	IF_18	CALL_11
0x40068fe	        0x488d5001	                      lea rdx, [rax + 1]	      4991	getchar.c	FUNCTION_83	FOR_1
0x4006902	        0x48891424	                    mov qword [rsp], rdx	      4991	getchar.c	FUNCTION_83	FOR_1
0x4006906	        0x80780100	                   cmp byte [rax + 1], 0	      4991	getchar.c	FUNCTION_83	FOR_1
0x400690a	     0xf85bafeffff	                           jne 0x40067ca	      4991	getchar.c	FUNCTION_83	FOR_1
0x4006910	      0xb801000000	                              mov eax, 1	      5082	getchar.c	FUNCTION_83
0x4006915	      0xe9dafeffff	                           jmp 0x40067f4	      5082	getchar.c	FUNCTION_83
0x400691a	    0x660f1f440000	                    nop word [rax + rax]	      5082	getchar.c	FUNCTION_83
0x4006920	        0x4183fc02	                             cmp r12d, 2	      5042	getchar.c	FUNCTION_83	FOR_1	IF_10	IF_11
0x4006924	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_28
0x4006929	            0x7405	                            je 0x4006930	      5042	getchar.c	FUNCTION_83	FOR_1	IF_10	IF_11
0x400692b	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_28
0x4006930	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_28
0x4006932	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_28
0x4006937	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_28
0x400693a	      0xe800000000	                          call 0x400693f	        97	stdio2.h	CALL_28
0x400693f	            0x85c0	                           test eax, eax	      5049	getchar.c	FUNCTION_83	FOR_1	IF_10	ELSE_1	IF_13
0x4006941	            0x79b7	                           jns 0x40068fa	      5049	getchar.c	FUNCTION_83	FOR_1	IF_10	ELSE_1	IF_13
0x4006943	      0xe9aafeffff	                           jmp 0x40067f2	      5049	getchar.c	FUNCTION_83	FOR_1	IF_10	ELSE_1	IF_13
0x4006948	     0xf1f84000000	                   nop dword [rax + rax]	      5049	getchar.c	FUNCTION_83	FOR_1	IF_10	ELSE_1	IF_13
0x4006950	        0x4183fc01	                             cmp r12d, 1	      5073	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x4006954	     0xf8489000000	                            je 0x40069e3	      5073	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x400695a	          0x83fb3c	                           cmp ebx, 0x3c	      5074	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x400695d	            0x7589	                           jne 0x40068e8	      5074	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x400695f	            0x84c9	                             test cl, cl	      5074	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x4006961	     0xf856cffffff	                           jne 0x40068d3	      5074	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x4006967	      0xe97cffffff	                           jmp 0x40068e8	      5074	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x400696c	         0xf1f4000	                         nop dword [rax]	      5074	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x4006970	            0x89d8	                            mov eax, ebx	      5066	getchar.c	FUNCTION_83	FOR_1	IF_14	CALL_8
0x4006972	          0x83e0fd	                     and eax, 0xfffffffd	      5066	getchar.c	FUNCTION_83	FOR_1	IF_14	CALL_8
0x4006975	          0x83f820	                           cmp eax, 0x20	      5066	getchar.c	FUNCTION_83	FOR_1	IF_14	CALL_8
0x4006978	            0x7426	                            je 0x40069a0	      5066	getchar.c	FUNCTION_83	FOR_1	IF_14	CALL_8
0x400697a	          0x83fb09	                              cmp ebx, 9	      5066	getchar.c	FUNCTION_83	FOR_1	IF_14	CALL_8
0x400697d	            0x7421	                            je 0x40069a0	      5066	getchar.c	FUNCTION_83	FOR_1	IF_14	CALL_8
0x400697f	          0x83fb5c	                           cmp ebx, 0x5c	      5066	getchar.c	FUNCTION_83	FOR_1	IF_14	CALL_8
0x4006982	            0x741c	                            je 0x40069a0	      5066	getchar.c	FUNCTION_83	FOR_1	IF_14	CALL_8
0x4006984	          0x8d43e0	                   lea eax, [rbx - 0x20]	      5071	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x4006987	          0x83f85e	                           cmp eax, 0x5e	      5071	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x400698a	     0xf8743ffffff	                            ja 0x40068d3	      5071	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x4006990	          0x83fb7c	                           cmp ebx, 0x7c	      5071	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x4006993	            0x75c5	                           jne 0x400695a	      5071	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x4006995	      0xe939ffffff	                           jmp 0x40068d3	      5071	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x400699a	    0x660f1f440000	                    nop word [rax + rax]	      5071	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x40069a0	          0x4889ee	                            mov rsi, rbp	      5068	getchar.c	FUNCTION_83	FOR_1	IF_14	IF_15	CALL_9
0x40069a3	      0xbf5c000000	                           mov edi, 0x5c	      5068	getchar.c	FUNCTION_83	FOR_1	IF_14	IF_15	CALL_9
0x40069a8	      0xe800000000	                          call 0x40069ad	      5068	getchar.c	FUNCTION_83	FOR_1	IF_14	IF_15	CALL_9
0x40069ad	            0x85c0	                           test eax, eax	      5068	getchar.c	FUNCTION_83	FOR_1	IF_14	IF_15	CALL_9
0x40069af	     0xf8933ffffff	                           jns 0x40068e8	      5068	getchar.c	FUNCTION_83	FOR_1	IF_14	IF_15	CALL_9
0x40069b5	      0xe938feffff	                           jmp 0x40067f2	      5068	getchar.c	FUNCTION_83	FOR_1	IF_14	IF_15	CALL_9
0x40069ba	    0x660f1f440000	                    nop word [rax + rax]	      5068	getchar.c	FUNCTION_83	FOR_1	IF_14	IF_15	CALL_9
0x40069c0	        0x4c8d4a03	                       lea r9, [rdx + 3]	      5020	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_6
0x40069c4	         0xfb67202	               movzx esi, byte [rdx + 2]	      5019	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_6
0x40069c8	        0x4c890c24	                     mov qword [rsp], r9	      5020	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_6
0x40069cc	         0xfb65a03	               movzx ebx, byte [rdx + 3]	      5021	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_6
0x40069d0	    0x81fb80000000	                           cmp ebx, 0x80	      5023	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7
0x40069d6	            0x744f	                            je 0x4006a27	      5023	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7
0x40069d8	            0x85f6	                           test esi, esi	      5023	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7
0x40069da	        0x410f95c0	                               setne r8b	      5023	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7
0x40069de	      0xe993feffff	                           jmp 0x4006876	      5023	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7
0x40069e3	        0x4c392c24	                    cmp qword [rsp], r13	      5073	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x40069e7	     0xf856dffffff	                           jne 0x400695a	      5073	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x40069ed	            0x84c0	                             test al, al	      5073	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x40069ef	     0xf8465ffffff	                            je 0x400695a	      5073	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x40069f5	      0xe9d9feffff	                           jmp 0x40068d3	      5073	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x40069fa	          0x4189c0	                            mov r8d, eax	      5073	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x40069fd	      0xbb01a7ffff	                     mov ebx, 0xffffa701	      5025	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7	CALL_3
0x4006a02	      0xe967feffff	                           jmp 0x400686e	      5025	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7	CALL_3
0x4006a07	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_28
0x4006a0c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_28
0x4006a11	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_28
0x4006a13	      0xe800000000	                          call 0x4006a18	        97	stdio2.h	CALL_28
0x4006a18	            0xf7d0	                                 not eax	      4987	getchar.c	FUNCTION_83	IF_1	IF_2
0x4006a1a	          0xc1e81f	                           shr eax, 0x1f	      4987	getchar.c	FUNCTION_83	IF_1	IF_2
0x4006a1d	      0xe9d2fdffff	                           jmp 0x40067f4	      4987	getchar.c	FUNCTION_83	IF_1	IF_2
0x4006a22	      0xe800000000	                          call 0x4006a27	      5083	getchar.c	FUNCTION_83
0x4006a27	            0x85f6	                           test esi, esi	      5083	getchar.c	FUNCTION_83
0x4006a29	         0xfb67a04	               movzx edi, byte [rdx + 4]	      5083	getchar.c	FUNCTION_83
0x4006a2d	          0x4c89ca	                             mov rdx, r9	      5023	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7
0x4006a30	        0x410f95c0	                               setne r8b	      5023	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7
0x4006a34	      0xe90dfeffff	                           jmp 0x4006846	      5023	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7
map_to_exists	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,11:IF,8:DO,0:FOR,0	89
0x4002740	            0x4155	                                push r13	      4084	getchar.c	FUNCTION_74
0x4002742	            0x4154	                                push r12	      4084	getchar.c	FUNCTION_74
0x4002744	          0x4531c0	                            xor r8d, r8d	      4090	getchar.c	FUNCTION_74	CALL_1
0x4002747	              0x55	                                push rbp	      4084	getchar.c	FUNCTION_74
0x4002748	              0x53	                                push rbx	      4084	getchar.c	FUNCTION_74
0x4002749	      0xb901000000	                              mov ecx, 1	      4090	getchar.c	FUNCTION_74	CALL_1
0x400274e	          0x4889f5	                            mov rbp, rsi	      4084	getchar.c	FUNCTION_74
0x4002751	          0x4189d5	                           mov r13d, edx	      4084	getchar.c	FUNCTION_74
0x4002754	            0x31d2	                            xor edx, edx	      4090	getchar.c	FUNCTION_74	CALL_1
0x4002756	        0x4883ec18	                           sub rsp, 0x18	      4084	getchar.c	FUNCTION_74
0x400275a	            0x31db	                            xor ebx, ebx	      4085	getchar.c	FUNCTION_74
0x400275c	          0x4889e6	                            mov rsi, rsp	      4090	getchar.c	FUNCTION_74	CALL_1
0x400275f	    0x64488b042528	                mov rax, qword fs:[0x28]	      4084	getchar.c	FUNCTION_74
0x4002768	      0x4889442408	                mov qword [rsp + 8], rax	      4084	getchar.c	FUNCTION_74
0x400276d	            0x31c0	                            xor eax, eax	      4084	getchar.c	FUNCTION_74
0x400276f	      0xe800000000	                          call 0x4002774	      4090	getchar.c	FUNCTION_74	CALL_1
0x4002774	      0xbe6e000000	                           mov esi, 0x6e	      4092	getchar.c	FUNCTION_74	IF_1	CALL_2
0x4002779	          0x4889ef	                            mov rdi, rbp	      4092	getchar.c	FUNCTION_74	IF_1	CALL_2
0x400277c	          0x4989c4	                            mov r12, rax	      4090	getchar.c	FUNCTION_74	CALL_1
0x400277f	      0xe800000000	                          call 0x4002784	      4092	getchar.c	FUNCTION_74	IF_1	CALL_2
0x4002784	          0x4885c0	                           test rax, rax	      4085	getchar.c	FUNCTION_74
0x4002787	      0xbe76000000	                           mov esi, 0x76	      4094	getchar.c	FUNCTION_74	IF_2	CALL_3
0x400278c	          0x4889ef	                            mov rdi, rbp	      4094	getchar.c	FUNCTION_74	IF_2	CALL_3
0x400278f	           0xf95c3	                                setne bl	      4085	getchar.c	FUNCTION_74
0x4002792	      0xe800000000	                          call 0x4002797	      4094	getchar.c	FUNCTION_74	IF_2	CALL_3
0x4002797	            0x89da	                            mov edx, ebx	      4095	getchar.c	FUNCTION_74	IF_2
0x4002799	      0xbe78000000	                           mov esi, 0x78	      4096	getchar.c	FUNCTION_74	IF_3	CALL_4
0x400279e	          0x4889ef	                            mov rdi, rbp	      4096	getchar.c	FUNCTION_74	IF_3	CALL_4
0x40027a1	    0x81ca02100000	                          or edx, 0x1002	      4095	getchar.c	FUNCTION_74	IF_2
0x40027a7	          0x4885c0	                           test rax, rax	      4095	getchar.c	FUNCTION_74	IF_2
0x40027aa	           0xf45da	                         cmovne ebx, edx	      4095	getchar.c	FUNCTION_74	IF_2
0x40027ad	      0xe800000000	                          call 0x40027b2	      4096	getchar.c	FUNCTION_74	IF_3	CALL_4
0x40027b2	            0x89da	                            mov edx, ebx	      4097	getchar.c	FUNCTION_74	IF_3
0x40027b4	      0xbe73000000	                           mov esi, 0x73	      4098	getchar.c	FUNCTION_74	IF_4	CALL_5
0x40027b9	          0x4889ef	                            mov rdi, rbp	      4098	getchar.c	FUNCTION_74	IF_4	CALL_5
0x40027bc	          0x83ca02	                               or edx, 2	      4097	getchar.c	FUNCTION_74	IF_3
0x40027bf	          0x4885c0	                           test rax, rax	      4097	getchar.c	FUNCTION_74	IF_3
0x40027c2	           0xf45da	                         cmovne ebx, edx	      4097	getchar.c	FUNCTION_74	IF_3
0x40027c5	      0xe800000000	                          call 0x40027ca	      4098	getchar.c	FUNCTION_74	IF_4	CALL_5
0x40027ca	            0x89da	                            mov edx, ebx	      4099	getchar.c	FUNCTION_74	IF_4
0x40027cc	      0xbe6f000000	                           mov esi, 0x6f	      4100	getchar.c	FUNCTION_74	IF_5	CALL_6
0x40027d1	          0x4889ef	                            mov rdi, rbp	      4100	getchar.c	FUNCTION_74	IF_5	CALL_6
0x40027d4	          0x80ce10	                             or dh, 0x10	      4099	getchar.c	FUNCTION_74	IF_4
0x40027d7	          0x4885c0	                           test rax, rax	      4099	getchar.c	FUNCTION_74	IF_4
0x40027da	           0xf45da	                         cmovne ebx, edx	      4099	getchar.c	FUNCTION_74	IF_4
0x40027dd	      0xe800000000	                          call 0x40027e2	      4100	getchar.c	FUNCTION_74	IF_5	CALL_6
0x40027e2	            0x89da	                            mov edx, ebx	      4101	getchar.c	FUNCTION_74	IF_5
0x40027e4	      0xbe69000000	                           mov esi, 0x69	      4102	getchar.c	FUNCTION_74	IF_6	CALL_7
0x40027e9	          0x4889ef	                            mov rdi, rbp	      4102	getchar.c	FUNCTION_74	IF_6	CALL_7
0x40027ec	          0x83ca04	                               or edx, 4	      4101	getchar.c	FUNCTION_74	IF_5
0x40027ef	          0x4885c0	                           test rax, rax	      4101	getchar.c	FUNCTION_74	IF_5
0x40027f2	           0xf45da	                         cmovne ebx, edx	      4101	getchar.c	FUNCTION_74	IF_5
0x40027f5	      0xe800000000	                          call 0x40027fa	      4102	getchar.c	FUNCTION_74	IF_6	CALL_7
0x40027fa	            0x89da	                            mov edx, ebx	      4103	getchar.c	FUNCTION_74	IF_6
0x40027fc	      0xbe6c000000	                           mov esi, 0x6c	      4104	getchar.c	FUNCTION_74	IF_7	CALL_8
0x4002801	          0x4889ef	                            mov rdi, rbp	      4104	getchar.c	FUNCTION_74	IF_7	CALL_8
0x4002804	          0x83ca10	                            or edx, 0x10	      4103	getchar.c	FUNCTION_74	IF_6
0x4002807	          0x4885c0	                           test rax, rax	      4103	getchar.c	FUNCTION_74	IF_6
0x400280a	           0xf45da	                         cmovne ebx, edx	      4103	getchar.c	FUNCTION_74	IF_6
0x400280d	      0xe800000000	                          call 0x4002812	      4104	getchar.c	FUNCTION_74	IF_7	CALL_8
0x4002812	            0x89da	                            mov edx, ebx	      4105	getchar.c	FUNCTION_74	IF_7
0x4002814	      0xbe63000000	                           mov esi, 0x63	      4106	getchar.c	FUNCTION_74	IF_8	CALL_9
0x4002819	          0x4889ef	                            mov rdi, rbp	      4106	getchar.c	FUNCTION_74	IF_8	CALL_9
0x400281c	          0x83ca20	                            or edx, 0x20	      4105	getchar.c	FUNCTION_74	IF_7
0x400281f	          0x4885c0	                           test rax, rax	      4105	getchar.c	FUNCTION_74	IF_7
0x4002822	           0xf45da	                         cmovne ebx, edx	      4105	getchar.c	FUNCTION_74	IF_7
0x4002825	      0xe800000000	                          call 0x400282a	      4106	getchar.c	FUNCTION_74	IF_8	CALL_9
0x400282a	            0x89da	                            mov edx, ebx	      4107	getchar.c	FUNCTION_74	IF_8
0x400282c	          0x4c89e7	                            mov rdi, r12	      4109	getchar.c	FUNCTION_74	CALL_10
0x400282f	          0x83ca08	                               or edx, 8	      4107	getchar.c	FUNCTION_74	IF_8
0x4002832	          0x4885c0	                           test rax, rax	      4107	getchar.c	FUNCTION_74	IF_8
0x4002835	           0xf45da	                         cmovne ebx, edx	      4107	getchar.c	FUNCTION_74	IF_8
0x4002838	          0x4489ea	                           mov edx, r13d	      4109	getchar.c	FUNCTION_74	CALL_10
0x400283b	            0x89de	                            mov esi, ebx	      4109	getchar.c	FUNCTION_74	CALL_10
0x400283d	      0xe800000000	                          call 0x4002842	      4109	getchar.c	FUNCTION_74	CALL_10
0x4002842	        0x488b3c24	                    mov rdi, qword [rsp]	      4110	getchar.c	FUNCTION_74	CALL_11
0x4002846	            0x89c3	                            mov ebx, eax	      4109	getchar.c	FUNCTION_74	CALL_10
0x4002848	      0xe800000000	                          call 0x400284d	      4110	getchar.c	FUNCTION_74	CALL_11
0x400284d	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      4113	getchar.c	FUNCTION_74
0x4002852	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4113	getchar.c	FUNCTION_74
0x400285b	            0x750d	                           jne 0x400286a	      4113	getchar.c	FUNCTION_74
0x400285d	        0x4883c418	                           add rsp, 0x18	      4113	getchar.c	FUNCTION_74
0x4002861	            0x89d8	                            mov eax, ebx	      4113	getchar.c	FUNCTION_74
0x4002863	              0x5b	                                 pop rbx	      4113	getchar.c	FUNCTION_74
0x4002864	              0x5d	                                 pop rbp	      4113	getchar.c	FUNCTION_74
0x4002865	            0x415c	                                 pop r12	      4113	getchar.c	FUNCTION_74
0x4002867	            0x415d	                                 pop r13	      4113	getchar.c	FUNCTION_74
0x4002869	              0xc3	                                     ret	      4113	getchar.c	FUNCTION_74
0x400286a	      0xe800000000	                          call 0x400286f	      4113	getchar.c	FUNCTION_74
may_sync_undo	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,1:IF,1:DO,0:FOR,0	12
0x4000380	    0xf60500000000	           test byte [0x04000387], 0x18 	      1286	getchar.c	FUNCTION_42	IF_1
0x4000387	            0x740a	                            je 0x4000393	      1286	getchar.c	FUNCTION_42	IF_1
0x4000389	    0x8b0500000000	            mov eax, dword [0x0400038f] 	      1286	getchar.c	FUNCTION_42	IF_1
0x400038f	            0x85c0	                           test eax, eax	      1286	getchar.c	FUNCTION_42	IF_1
0x4000391	            0x7412	                            je 0x40003a5	      1286	getchar.c	FUNCTION_42	IF_1
0x4000393	    0x486305000000	         movsxd rax, dword [0x0400039a] 	      1287	getchar.c	FUNCTION_42	IF_1
0x400039a	    0x48833cc50000	                    cmp qword [rax*8], 0	      1287	getchar.c	FUNCTION_42	IF_1
0x40003a3	            0x740b	                            je 0x40003b0	      1287	getchar.c	FUNCTION_42	IF_1
0x40003a5	            0xf3c3	                                     ret	      1287	getchar.c	FUNCTION_42	IF_1
0x40003a7	    0x660f1f840000	                    nop word [rax + rax]	      1287	getchar.c	FUNCTION_42	IF_1
0x40003b0	            0x31ff	                            xor edi, edi	      1288	getchar.c	FUNCTION_42	CALL_1
0x40003b2	      0xe900000000	                           jmp 0x40003b7	      1288	getchar.c	FUNCTION_42	CALL_1
typebuf_maplen	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,0:IF,0:DO,0:FOR,0	2
0x4001700	    0x8b0500000000	            mov eax, dword [0x04001706] 	      1155	getchar.c	FUNCTION_39
0x4001706	              0xc3	                                     ret	      1155	getchar.c	FUNCTION_39
AppendCharToRedobuff	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,1:IF,1:DO,0:FOR,0	8
0x4000f20	    0x8b0500000000	            mov eax, dword [0x04000f26] 	       634	getchar.c	FUNCTION_21	IF_1
0x4000f26	            0x85c0	                           test eax, eax	       634	getchar.c	FUNCTION_21	IF_1
0x4000f28	            0x7406	                            je 0x4000f30	       634	getchar.c	FUNCTION_21	IF_1
0x4000f2a	            0xf3c3	                                     ret	       634	getchar.c	FUNCTION_21	IF_1
0x4000f2c	         0xf1f4000	                         nop dword [rax]	       634	getchar.c	FUNCTION_21	IF_1
0x4000f30	            0x89fe	                            mov esi, edi	       635	getchar.c	FUNCTION_21	CALL_1
0x4000f32	      0xbf00000000	                              mov edi, 0	       635	getchar.c	FUNCTION_21	CALL_1
0x4000f37	      0xe9b4f2ffff	                   jmp sym.add_char_buff	       635	getchar.c	FUNCTION_21	CALL_1
vim_unescape_csi	WHILE,1:ELSE,2:functions,0:SWITCH,0:CALL,0:IF,2:DO,0:FOR,0	35
0x4002ea0	        0x488d5701	                      lea rdx, [rdi + 1]	      4734	getchar.c	FUNCTION_81
0x4002ea4	            0xeb19	                           jmp 0x4002ebf	      4737	getchar.c	FUNCTION_81	WHILE_1
0x4002ea6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4737	getchar.c	FUNCTION_81	WHILE_1
0x4002eb0	            0x3c9b	                            cmp al, 0x9b	      4744	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x4002eb2	            0x743c	                            je 0x4002ef0	      4744	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x4002eb4	        0x4883c701	                              add rdi, 1	      4751	getchar.c	FUNCTION_81	WHILE_1	ELSE_2
0x4002eb8	          0x8842ff	                  mov byte [rdx - 1], al	      4751	getchar.c	FUNCTION_81	WHILE_1	ELSE_2
0x4002ebb	        0x4883c201	                              add rdx, 1	      4751	getchar.c	FUNCTION_81	WHILE_1	ELSE_2
0x4002ebf	           0xfb607	                   movzx eax, byte [rdi]	      4737	getchar.c	FUNCTION_81	WHILE_1
0x4002ec2	            0x84c0	                             test al, al	      4737	getchar.c	FUNCTION_81	WHILE_1
0x4002ec4	            0x743a	                            je 0x4002f00	      4737	getchar.c	FUNCTION_81	WHILE_1
0x4002ec6	            0x3c80	                            cmp al, 0x80	      4739	getchar.c	FUNCTION_81	WHILE_1	IF_1
0x4002ec8	            0x75e6	                           jne 0x4002eb0	      4739	getchar.c	FUNCTION_81	WHILE_1	IF_1
0x4002eca	         0xfb64f01	               movzx ecx, byte [rdi + 1]	      4739	getchar.c	FUNCTION_81	WHILE_1	IF_1
0x4002ece	          0x80f9fe	                            cmp cl, 0xfe	      4739	getchar.c	FUNCTION_81	WHILE_1	IF_1
0x4002ed1	            0x7435	                            je 0x4002f08	      4739	getchar.c	FUNCTION_81	WHILE_1	IF_1
0x4002ed3	          0x80f9fd	                            cmp cl, 0xfd	      4745	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x4002ed6	            0x75dc	                           jne 0x4002eb4	      4745	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x4002ed8	        0x807f0251	                cmp byte [rdi + 2], 0x51	      4745	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x4002edc	            0x75d6	                           jne 0x4002eb4	      4745	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x4002ede	        0xc642ff9b	                mov byte [rdx - 1], 0x9b	      4747	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x4002ee2	        0x4883c703	                              add rdi, 3	      4748	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x4002ee6	            0xebd3	                           jmp 0x4002ebb	      4748	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x4002ee8	     0xf1f84000000	                   nop dword [rax + rax]	      4748	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x4002ef0	         0xfb64f01	               movzx ecx, byte [rdi + 1]	      4748	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x4002ef4	            0xebdd	                           jmp 0x4002ed3	      4748	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x4002ef6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4748	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x4002f00	        0xc642ff00	                   mov byte [rdx - 1], 0	      4753	getchar.c	FUNCTION_81	ELSE_2
0x4002f04	              0xc3	                                     ret	      4753	getchar.c	FUNCTION_81	ELSE_2
0x4002f05	           0xf1f00	                         nop dword [rax]	      4753	getchar.c	FUNCTION_81	ELSE_2
0x4002f08	        0x807f0258	                cmp byte [rdi + 2], 0x58	      4739	getchar.c	FUNCTION_81	WHILE_1	IF_1
0x4002f0c	            0x75a6	                           jne 0x4002eb4	      4739	getchar.c	FUNCTION_81	WHILE_1	IF_1
0x4002f0e	          0x8842ff	                  mov byte [rdx - 1], al	      4741	getchar.c	FUNCTION_81	WHILE_1	IF_1
0x4002f11	        0x4883c703	                              add rdi, 3	      4742	getchar.c	FUNCTION_81	WHILE_1	IF_1
0x4002f15	            0xeba4	                           jmp 0x4002ebb	      4742	getchar.c	FUNCTION_81	WHILE_1	IF_1
stop_redo_ins	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,0:IF,0:DO,0:FOR,0	2
0x4001270	    0xc70500000000	               mov dword [0x0400127a], 0	       908	getchar.c	FUNCTION_33
0x400127a	              0xc3	                                     ret	       908	getchar.c	FUNCTION_33
add_char_buff	WHILE,0:ELSE,3:functions,0:SWITCH,0:CALL,6:IF,4:DO,0:FOR,1	83
0x40001f0	            0x4155	                                push r13	       302	getchar.c	FUNCTION_7
0x40001f2	            0x4154	                                push r12	       302	getchar.c	FUNCTION_7
0x40001f4	          0x4989fd	                            mov r13, rdi	       302	getchar.c	FUNCTION_7
0x40001f7	              0x55	                                push rbp	       302	getchar.c	FUNCTION_7
0x40001f8	              0x53	                                push rbx	       302	getchar.c	FUNCTION_7
0x40001f9	            0x89f3	                            mov ebx, esi	       302	getchar.c	FUNCTION_7
0x40001fb	        0x4883ec38	                           sub rsp, 0x38	       302	getchar.c	FUNCTION_7
0x40001ff	    0x64488b042528	                mov rax, qword fs:[0x28]	       302	getchar.c	FUNCTION_7
0x4000208	      0x4889442428	             mov qword [rsp + 0x28], rax	       302	getchar.c	FUNCTION_7
0x400020d	            0x31c0	                            xor eax, eax	       302	getchar.c	FUNCTION_7
0x400020f	            0x85f6	                           test esi, esi	       311	getchar.c	FUNCTION_7	IF_1	CALL_1
0x4000211	     0xf88f9000000	                            js 0x4000310	       311	getchar.c	FUNCTION_7	IF_1	CALL_1
0x4000217	      0x488d742410	                   lea rsi, [rsp + 0x10]	       314	getchar.c	FUNCTION_7	ELSE_1
0x400021c	            0x89df	                            mov edi, ebx	       314	getchar.c	FUNCTION_7	ELSE_1
0x400021e	    0xff1500000000	                 call qword [0x04000224]	       314	getchar.c	FUNCTION_7	ELSE_1
0x4000224	            0x85c0	                           test eax, eax	       315	getchar.c	FUNCTION_7	FOR_1
0x4000226	          0x4189c4	                           mov r12d, eax	       314	getchar.c	FUNCTION_7	ELSE_1
0x4000229	            0x7e6d	                           jle 0x4000298	       315	getchar.c	FUNCTION_7	FOR_1
0x400022b	            0x31ed	                            xor ebp, ebp	       312	getchar.c	FUNCTION_7	IF_1
0x400022d	            0xeb44	                           jmp 0x4000273	       312	getchar.c	FUNCTION_7	IF_1
0x400022f	              0x90	                                     nop	       312	getchar.c	FUNCTION_7	IF_1
0x4000230	       0xfb65c2c10	     movzx ebx, byte [rsp + rbp + 0x10] 	       318	getchar.c	FUNCTION_7	FOR_1	IF_2
0x4000235	    0x81fb80000000	                           cmp ebx, 0x80	       321	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_3
0x400023b	            0x747b	                            je 0x40002b8	       321	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_3
0x400023d	            0x85db	                           test ebx, ebx	       321	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_3
0x400023f	            0x7477	                            je 0x40002b8	       321	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_3
0x4000241	    0x81fb9b000000	                           cmp ebx, 0x9b	       330	getchar.c	FUNCTION_7	FOR_1	ELSE_2	IF_4
0x4000247	     0xf84a3000000	                            je 0x40002f0	       330	getchar.c	FUNCTION_7	FOR_1	ELSE_2	IF_4
0x400024d	          0x881c24	                      mov byte [rsp], bl	       341	getchar.c	FUNCTION_7	FOR_1	ELSE_3
0x4000250	      0xc644240100	                   mov byte [rsp + 1], 0	       342	getchar.c	FUNCTION_7	FOR_1	ELSE_3
0x4000255	           0xf1f00	                         nop dword [rax]	       342	getchar.c	FUNCTION_7	FOR_1	ELSE_3
0x4000258	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       344	getchar.c	FUNCTION_7	FOR_1	CALL_6
0x400025f	          0x4889e6	                            mov rsi, rsp	       344	getchar.c	FUNCTION_7	FOR_1	CALL_6
0x4000262	          0x4c89ef	                            mov rdi, r13	       344	getchar.c	FUNCTION_7	FOR_1	CALL_6
0x4000265	        0x4883c501	                              add rbp, 1	       344	getchar.c	FUNCTION_7	FOR_1	CALL_6
0x4000269	      0xe812feffff	                       call sym.add_buff	       344	getchar.c	FUNCTION_7	FOR_1	CALL_6
0x400026e	          0x4139ec	                           cmp r12d, ebp	       315	getchar.c	FUNCTION_7	FOR_1
0x4000271	            0x7e25	                           jle 0x4000298	       315	getchar.c	FUNCTION_7	FOR_1
0x4000273	            0x85db	                           test ebx, ebx	       317	getchar.c	FUNCTION_7	FOR_1	IF_2	CALL_2
0x4000275	            0x79b9	                           jns 0x4000230	       317	getchar.c	FUNCTION_7	FOR_1	IF_2	CALL_2
0x4000277	        0xc6042480	                    mov byte [rsp], 0x80	       324	getchar.c	FUNCTION_7	FOR_1	IF_3
0x400027b	            0x89d8	                            mov eax, ebx	       325	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_4
0x400027d	            0xf7d8	                                 neg eax	       325	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_4
0x400027f	        0x88442401	                  mov byte [rsp + 1], al	       325	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_4
0x4000283	            0x89d8	                            mov eax, ebx	       326	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_5
0x4000285	            0xf7d8	                                 neg eax	       326	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_5
0x4000287	          0xc1e808	                              shr eax, 8	       326	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_5
0x400028a	        0x88442402	                  mov byte [rsp + 2], al	       326	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_5
0x400028e	      0xc644240300	                   mov byte [rsp + 3], 0	       327	getchar.c	FUNCTION_7	FOR_1	IF_3
0x4000293	            0xebc3	                           jmp 0x4000258	       327	getchar.c	FUNCTION_7	FOR_1	IF_3
0x4000295	           0xf1f00	                         nop dword [rax]	       327	getchar.c	FUNCTION_7	FOR_1	IF_3
0x4000298	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       348	getchar.c	FUNCTION_7
0x400029d	    0x644833042528	                xor rax, qword fs:[0x28]	       348	getchar.c	FUNCTION_7
0x40002a6	            0x7573	                           jne 0x400031b	       348	getchar.c	FUNCTION_7
0x40002a8	        0x4883c438	                           add rsp, 0x38	       348	getchar.c	FUNCTION_7
0x40002ac	              0x5b	                                 pop rbx	       348	getchar.c	FUNCTION_7
0x40002ad	              0x5d	                                 pop rbp	       348	getchar.c	FUNCTION_7
0x40002ae	            0x415c	                                 pop r12	       348	getchar.c	FUNCTION_7
0x40002b0	            0x415d	                                 pop r13	       348	getchar.c	FUNCTION_7
0x40002b2	              0xc3	                                     ret	       348	getchar.c	FUNCTION_7
0x40002b3	       0xf1f440000	                   nop dword [rax + rax]	       348	getchar.c	FUNCTION_7
0x40002b8	    0x81fb80000000	                           cmp ebx, 0x80	       325	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_4
0x40002be	        0xc6042480	                    mov byte [rsp], 0x80	       324	getchar.c	FUNCTION_7	FOR_1	IF_3
0x40002c2	            0x741c	                            je 0x40002e0	       325	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_4
0x40002c4	            0x85db	                           test ebx, ebx	       325	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_4
0x40002c6	      0xb8ffffffff	                     mov eax, 0xffffffff	       325	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_4
0x40002cb	            0x75ae	                           jne 0x400027b	       325	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_4
0x40002cd	        0x88442401	                  mov byte [rsp + 1], al	       325	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_4
0x40002d1	      0xb858000000	                           mov eax, 0x58	       326	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_5
0x40002d6	            0xebb2	                           jmp 0x400028a	       326	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_5
0x40002d8	     0xf1f84000000	                   nop dword [rax + rax]	       326	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_5
0x40002e0	      0xb8feffffff	                     mov eax, 0xfffffffe	       325	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_4
0x40002e5	            0xebe6	                           jmp 0x40002cd	       325	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_4
0x40002e7	    0x660f1f840000	                    nop word [rax + rax]	       325	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_4
0x40002f0	        0xc604249b	                    mov byte [rsp], 0x9b	       333	getchar.c	FUNCTION_7	FOR_1	ELSE_2	IF_4
0x40002f4	      0xc6442401fd	                mov byte [rsp + 1], 0xfd	       334	getchar.c	FUNCTION_7	FOR_1	ELSE_2	IF_4
0x40002f9	      0xc644240251	                mov byte [rsp + 2], 0x51	       335	getchar.c	FUNCTION_7	FOR_1	ELSE_2	IF_4
0x40002fe	      0xc644240300	                   mov byte [rsp + 3], 0	       336	getchar.c	FUNCTION_7	FOR_1	ELSE_2	IF_4
0x4000303	      0xe950ffffff	                           jmp 0x4000258	       336	getchar.c	FUNCTION_7	FOR_1	ELSE_2	IF_4
0x4000308	     0xf1f84000000	                   nop dword [rax + rax]	       336	getchar.c	FUNCTION_7	FOR_1	ELSE_2	IF_4
0x4000310	    0x41bc01000000	                             mov r12d, 1	       312	getchar.c	FUNCTION_7	IF_1
0x4000316	      0xe910ffffff	                           jmp 0x400022b	       312	getchar.c	FUNCTION_7	IF_1
0x400031b	      0xe800000000	                   call sym.add_num_buff	       348	getchar.c	FUNCTION_7
free_typebuf	WHILE,0:ELSE,2:functions,0:SWITCH,0:CALL,4:IF,2:DO,0:FOR,0	18
0x4001730	        0x4883ec08	                              sub rsp, 8	      1321	getchar.c	FUNCTION_44
0x4001734	    0x488b3d000000	            mov rdi, qword [0x0400173b] 	      1322	getchar.c	FUNCTION_44	IF_1
0x400173b	    0x4881ff000000	                              cmp rdi, 0	      1322	getchar.c	FUNCTION_44	IF_1
0x4001742	            0x7424	                            je 0x4001768	      1322	getchar.c	FUNCTION_44	IF_1
0x4001744	      0xe800000000	                          call 0x4001749	      1325	getchar.c	FUNCTION_44	CALL_2
0x4001749	    0x488b3d000000	            mov rdi, qword [0x04001750] 	      1326	getchar.c	FUNCTION_44	IF_2
0x4001750	    0x4881ff000000	                              cmp rdi, 0	      1326	getchar.c	FUNCTION_44	IF_2
0x4001757	            0x741f	                            je 0x4001778	      1326	getchar.c	FUNCTION_44	IF_2
0x4001759	        0x4883c408	                              add rsp, 8	      1330	getchar.c	FUNCTION_44
0x400175d	      0xe900000000	                           jmp 0x4001762	      1329	getchar.c	FUNCTION_44	CALL_4
0x4001762	    0x660f1f440000	                    nop word [rax + rax]	      1329	getchar.c	FUNCTION_44	CALL_4
0x4001768	      0xbf00000000	                              mov edi, 0	      1323	getchar.c	FUNCTION_44	CALL_1
0x400176d	      0xe800000000	                          call 0x4001772	      1323	getchar.c	FUNCTION_44	CALL_1
0x4001772	            0xebd5	                           jmp 0x4001749	      1323	getchar.c	FUNCTION_44	CALL_1
0x4001774	         0xf1f4000	                         nop dword [rax]	      1323	getchar.c	FUNCTION_44	CALL_1
0x4001778	      0xbf00000000	                              mov edi, 0	      1327	getchar.c	FUNCTION_44	CALL_3
0x400177d	        0x4883c408	                              add rsp, 8	      1330	getchar.c	FUNCTION_44
0x4001781	      0xe900000000	                           jmp 0x4001786	      1327	getchar.c	FUNCTION_44	CALL_3
add_buff	WHILE,0:ELSE,4:functions,0:SWITCH,0:CALL,9:IF,8:DO,0:FOR,0	102
0x4000080	          0x4885d2	                           test rdx, rdx	       237	getchar.c	FUNCTION_5	IF_1
0x4000083	            0x4156	                                push r14	       233	getchar.c	FUNCTION_5
0x4000085	            0x4155	                                push r13	       233	getchar.c	FUNCTION_5
0x4000087	          0x4989f5	                            mov r13, rsi	       233	getchar.c	FUNCTION_5
0x400008a	            0x4154	                                push r12	       233	getchar.c	FUNCTION_5
0x400008c	              0x55	                                push rbp	       233	getchar.c	FUNCTION_5
0x400008d	          0x4889fd	                            mov rbp, rdi	       233	getchar.c	FUNCTION_5
0x4000090	              0x53	                                push rbx	       233	getchar.c	FUNCTION_5
0x4000091	          0x4889d3	                            mov rbx, rdx	       233	getchar.c	FUNCTION_5
0x4000094	     0xf888e000000	                            js 0x4000128	       237	getchar.c	FUNCTION_5	IF_1
0x400009a	          0x4885db	                           test rbx, rbx	       239	getchar.c	FUNCTION_5	IF_2
0x400009d	            0x747d	                            je 0x400011c	       239	getchar.c	FUNCTION_5	IF_2
0x400009f	        0x488b7d00	                    mov rdi, qword [rbp]	       242	getchar.c	FUNCTION_5	IF_3
0x40000a3	          0x4885ff	                           test rdi, rdi	       242	getchar.c	FUNCTION_5	IF_3
0x40000a6	     0xf84fc000000	                            je 0x40001a8	       242	getchar.c	FUNCTION_5	IF_3
0x40000ac	      0x48837d1000	               cmp qword [rbp + 0x10], 0	       247	getchar.c	FUNCTION_5	ELSE_1	IF_4
0x40000b1	     0xf8409010000	                            je 0x40001c0	       247	getchar.c	FUNCTION_5	ELSE_1	IF_4
0x40000b7	        0x48637518	         movsxd rsi, dword [rbp + 0x18] 	       252	getchar.c	FUNCTION_5	ELSE_2	IF_5
0x40000bb	            0x85f6	                           test esi, esi	       252	getchar.c	FUNCTION_5	ELSE_2	IF_5
0x40000bd	     0xf858d000000	                           jne 0x4000150	       252	getchar.c	FUNCTION_5	ELSE_2	IF_5
0x40000c3	          0x8b451c	            mov eax, dword [rbp + 0x1c] 	       252	getchar.c	FUNCTION_5	ELSE_2	IF_5
0x40000c6	            0x39d8	                            cmp eax, ebx	       258	getchar.c	FUNCTION_5	IF_6
0x40000c8	    0xc74518000000	               mov dword [rbp + 0x18], 0	       256	getchar.c	FUNCTION_5
0x40000cf	     0xf8da3000000	                           jge 0x4000178	       258	getchar.c	FUNCTION_5	IF_6
0x40000d5	        0x4883fb13	                           cmp rbx, 0x13	       266	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x40000d9	            0x7e65	                           jle 0x4000140	       266	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x40000db	        0x488d7b10	                   lea rdi, [rbx + 0x10]	       266	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x40000df	          0x4989de	                            mov r14, rbx	       269	getchar.c	FUNCTION_5	ELSE_3	ELSE_4
0x40000e2	      0xbe01000000	                              mov esi, 1	       270	getchar.c	FUNCTION_5	ELSE_3	CALL_8
0x40000e7	      0xe800000000	                          call 0x40000ec	       270	getchar.c	FUNCTION_5	ELSE_3	CALL_8
0x40000ec	          0x4885c0	                           test rax, rax	       272	getchar.c	FUNCTION_5	ELSE_3	IF_8
0x40000ef	          0x4989c4	                            mov r12, rax	       270	getchar.c	FUNCTION_5	ELSE_3	CALL_8
0x40000f2	            0x7428	                            je 0x400011c	       272	getchar.c	FUNCTION_5	ELSE_3	IF_8
0x40000f4	        0x488d7808	                      lea rdi, [rax + 8]	       275	getchar.c	FUNCTION_5	ELSE_3	CALL_9
0x40000f8	          0x4129de	                           sub r14d, ebx	       274	getchar.c	FUNCTION_5	ELSE_3
0x40000fb	          0x4889da	                            mov rdx, rbx	       275	getchar.c	FUNCTION_5	ELSE_3	CALL_9
0x40000fe	        0x4489751c	           mov dword [rbp + 0x1c], r14d 	       274	getchar.c	FUNCTION_5	ELSE_3
0x4000102	          0x4c89ee	                            mov rsi, r13	       275	getchar.c	FUNCTION_5	ELSE_3	CALL_9
0x4000105	      0xe800000000	                          call 0x400010a	       275	getchar.c	FUNCTION_5	ELSE_3	CALL_9
0x400010a	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       277	getchar.c	FUNCTION_5	ELSE_3
0x400010e	          0x488b10	                    mov rdx, qword [rax]	       277	getchar.c	FUNCTION_5	ELSE_3
0x4000111	        0x49891424	                    mov qword [r12], rdx	       277	getchar.c	FUNCTION_5	ELSE_3
0x4000115	          0x4c8920	                    mov qword [rax], r12	       278	getchar.c	FUNCTION_5	ELSE_3
0x4000118	        0x4c896510	            mov qword [rbp + 0x10], r12 	       279	getchar.c	FUNCTION_5	ELSE_3
0x400011c	              0x5b	                                 pop rbx	       282	getchar.c	FUNCTION_5
0x400011d	              0x5d	                                 pop rbp	       282	getchar.c	FUNCTION_5
0x400011e	            0x415c	                                 pop r12	       282	getchar.c	FUNCTION_5
0x4000120	            0x415d	                                 pop r13	       282	getchar.c	FUNCTION_5
0x4000122	            0x415e	                                 pop r14	       282	getchar.c	FUNCTION_5
0x4000124	              0xc3	                                     ret	       282	getchar.c	FUNCTION_5
0x4000125	           0xf1f00	                         nop dword [rax]	       282	getchar.c	FUNCTION_5
0x4000128	          0x4889f7	                            mov rdi, rsi	       238	getchar.c	FUNCTION_5	CALL_1
0x400012b	      0xe800000000	                          call 0x4000130	       238	getchar.c	FUNCTION_5	CALL_1
0x4000130	          0x4889c3	                            mov rbx, rax	       238	getchar.c	FUNCTION_5	CALL_1
0x4000133	      0xe962ffffff	                           jmp 0x400009a	       238	getchar.c	FUNCTION_5	CALL_1
0x4000138	     0xf1f84000000	                   nop dword [rax + rax]	       238	getchar.c	FUNCTION_5	CALL_1
0x4000140	      0xbf24000000	                           mov edi, 0x24	       238	getchar.c	FUNCTION_5	CALL_1
0x4000145	    0x41be14000000	                          mov r14d, 0x14	       267	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x400014b	            0xeb95	                           jmp 0x40000e2	       267	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x400014d	           0xf1f00	                         nop dword [rax]	       267	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x4000150	        0x4c8d7708	                      lea r14, [rdi + 8]	       253	getchar.c	FUNCTION_5	ELSE_2	IF_5	CALL_4
0x4000154	        0x4d8d2436	                    lea r12, [r14 + rsi]	       253	getchar.c	FUNCTION_5	ELSE_2	IF_5	CALL_4
0x4000158	          0x4c89e7	                            mov rdi, r12	       253	getchar.c	FUNCTION_5	ELSE_2	IF_5	CALL_4
0x400015b	      0xe800000000	                          call 0x4000160	       253	getchar.c	FUNCTION_5	ELSE_2	IF_5	CALL_4
0x4000160	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_106	CALL_3
0x4000164	          0x4c89e6	                            mov rsi, r12	        59	string3.h	FUNCTION_106	CALL_3
0x4000167	          0x4c89f7	                            mov rdi, r14	        59	string3.h	FUNCTION_106	CALL_3
0x400016a	      0xe800000000	                          call 0x400016f	        59	string3.h	FUNCTION_106	CALL_3
0x400016f	      0xe94fffffff	                           jmp 0x40000c3	        59	string3.h	FUNCTION_106	CALL_3
0x4000174	         0xf1f4000	                         nop dword [rax]	        59	string3.h	FUNCTION_106	CALL_3
0x4000178	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       260	getchar.c	FUNCTION_5	IF_6	CALL_6
0x400017c	        0x4c8d6008	                      lea r12, [rax + 8]	       260	getchar.c	FUNCTION_5	IF_6	CALL_6
0x4000180	          0x4c89e7	                            mov rdi, r12	       260	getchar.c	FUNCTION_5	IF_6	CALL_6
0x4000183	      0xe800000000	                          call 0x4000188	       260	getchar.c	FUNCTION_5	IF_6	CALL_6
0x4000188	        0x498d3c04	                    lea rdi, [r12 + rax]	       261	getchar.c	FUNCTION_5	IF_6	CALL_7
0x400018c	          0x4889da	                            mov rdx, rbx	       261	getchar.c	FUNCTION_5	IF_6	CALL_7
0x400018f	          0x4c89ee	                            mov rsi, r13	       261	getchar.c	FUNCTION_5	IF_6	CALL_7
0x4000192	      0xe800000000	                          call 0x4000197	       261	getchar.c	FUNCTION_5	IF_6	CALL_7
0x4000197	          0x295d1c	             sub dword [rbp + 0x1c], ebx	       262	getchar.c	FUNCTION_5	IF_6
0x400019a	              0x5b	                                 pop rbx	       282	getchar.c	FUNCTION_5
0x400019b	              0x5d	                                 pop rbp	       282	getchar.c	FUNCTION_5
0x400019c	            0x415c	                                 pop r12	       282	getchar.c	FUNCTION_5
0x400019e	            0x415d	                                 pop r13	       282	getchar.c	FUNCTION_5
0x40001a0	            0x415e	                                 pop r14	       282	getchar.c	FUNCTION_5
0x40001a2	              0xc3	                                     ret	       282	getchar.c	FUNCTION_5
0x40001a3	       0xf1f440000	                   nop dword [rax + rax]	       282	getchar.c	FUNCTION_5
0x40001a8	    0xc7451c000000	               mov dword [rbp + 0x1c], 0	       244	getchar.c	FUNCTION_5	IF_3
0x40001af	        0x48896d10	            mov qword [rbp + 0x10], rbp 	       245	getchar.c	FUNCTION_5	IF_3
0x40001b3	            0x31c0	                            xor eax, eax	       245	getchar.c	FUNCTION_5	IF_3
0x40001b5	      0xe90cffffff	                           jmp 0x40000c6	       245	getchar.c	FUNCTION_5	IF_3
0x40001ba	    0x660f1f440000	                    nop word [rax + rax]	       245	getchar.c	FUNCTION_5	IF_3
0x40001c0	            0x31ff	                            xor edi, edi	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x40001c2	      0xba05000000	                              mov edx, 5	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x40001c7	      0xbe00000000	                              mov esi, 0	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x40001cc	      0xe800000000	                          call 0x40001d1	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x40001d1	              0x5b	                                 pop rbx	       282	getchar.c	FUNCTION_5
0x40001d2	              0x5d	                                 pop rbp	       282	getchar.c	FUNCTION_5
0x40001d3	            0x415c	                                 pop r12	       282	getchar.c	FUNCTION_5
0x40001d5	            0x415d	                                 pop r13	       282	getchar.c	FUNCTION_5
0x40001d7	            0x415e	                                 pop r14	       282	getchar.c	FUNCTION_5
0x40001d9	          0x4889c7	                            mov rdi, rax	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x40001dc	      0xe900000000	                           jmp 0x40001e1	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
stuffnumReadbuff	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,1:IF,0:DO,0:FOR,0	3
0x4001050	          0x4889fe	                            mov rsi, rdi	       723	getchar.c	FUNCTION_28
0x4001053	      0xbf00000000	                              mov edi, 0	       724	getchar.c	FUNCTION_28	CALL_1
0x4001058	      0xe9c3f2ffff	                    jmp sym.add_num_buff	       724	getchar.c	FUNCTION_28	CALL_1
vim_strsave_escape_csi	WHILE,0:ELSE,1:functions,0:SWITCH,0:CALL,5:IF,2:DO,0:FOR,1	60
0x4002dd0	            0x4154	                                push r12	      4689	getchar.c	FUNCTION_80
0x4002dd2	              0x55	                                push rbp	      4689	getchar.c	FUNCTION_80
0x4002dd3	              0x53	                                push rbx	      4689	getchar.c	FUNCTION_80
0x4002dd4	          0x4889fb	                            mov rbx, rdi	      4689	getchar.c	FUNCTION_80
0x4002dd7	      0xe800000000	                          call 0x4002ddc	      4696	getchar.c	FUNCTION_80	CALL_2
0x4002ddc	    0x8d3c85010000	                    lea edi, [rax*4 + 1]	      4696	getchar.c	FUNCTION_80	CALL_2
0x4002de3	      0xe800000000	                          call 0x4002de8	      4696	getchar.c	FUNCTION_80	CALL_2
0x4002de8	          0x4885c0	                           test rax, rax	      4703	getchar.c	FUNCTION_80	IF_1
0x4002deb	          0x4889c5	                            mov rbp, rax	      4696	getchar.c	FUNCTION_80	CALL_2
0x4002dee	     0xf8491000000	                            je 0x4002e85	      4703	getchar.c	FUNCTION_80	IF_1
0x4002df4	          0x4989c4	                            mov r12, rax	      4703	getchar.c	FUNCTION_80	IF_1
0x4002df7	            0xeb11	                           jmp 0x4002e0a	      4703	getchar.c	FUNCTION_80	IF_1
0x4002df9	     0xf1f80000000	                         nop dword [rax]	      4703	getchar.c	FUNCTION_80	IF_1
0x4002e00	      0xe800000000	                          call 0x4002e05	      4720	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_5
0x4002e05	            0x4898	                                    cdqe	      4720	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_5
0x4002e07	          0x4801c3	                            add rbx, rax	      4720	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_5
0x4002e0a	           0xfb63b	                   movzx edi, byte [rbx]	      4706	getchar.c	FUNCTION_80	IF_1	FOR_1
0x4002e0d	          0x4084ff	                           test dil, dil	      4706	getchar.c	FUNCTION_80	IF_1	FOR_1
0x4002e10	            0x746e	                            je 0x4002e80	      4706	getchar.c	FUNCTION_80	IF_1	FOR_1
0x4002e12	        0x4080ff80	                           cmp dil, 0x80	      4708	getchar.c	FUNCTION_80	IF_1	FOR_1	IF_2
0x4002e16	            0x7430	                            je 0x4002e48	      4708	getchar.c	FUNCTION_80	IF_1	FOR_1	IF_2
0x4002e18	    0x8b1500000000	            mov edx, dword [0x04002e1e] 	      4719	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_4
0x4002e1e	            0x85d2	                           test edx, edx	      4719	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_4
0x4002e20	            0x756e	                           jne 0x4002e90	      4719	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_4
0x4002e22	          0x4c89e6	                            mov rsi, r12	      4719	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_4
0x4002e25	      0xe800000000	                          call 0x4002e2a	      4719	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_4
0x4002e2a	          0x4989c4	                            mov r12, rax	      4719	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_4
0x4002e2d	    0x8b0500000000	            mov eax, dword [0x04002e33] 	      4720	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_5
0x4002e33	          0x4889df	                            mov rdi, rbx	      4720	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_5
0x4002e36	            0x85c0	                           test eax, eax	      4720	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_5
0x4002e38	            0x75c6	                           jne 0x4002e00	      4720	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_5
0x4002e3a	    0xff1500000000	                 call qword [0x04002e40]	      4720	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_5
0x4002e40	            0xebc3	                           jmp 0x4002e05	      4720	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_5
0x4002e42	    0x660f1f440000	                    nop word [rax + rax]	      4720	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_5
0x4002e48	        0x807b0100	                   cmp byte [rbx + 1], 0	      4708	getchar.c	FUNCTION_80	IF_1	FOR_1	IF_2
0x4002e4c	            0x74ca	                            je 0x4002e18	      4708	getchar.c	FUNCTION_80	IF_1	FOR_1	IF_2
0x4002e4e	        0x807b0200	                   cmp byte [rbx + 2], 0	      4708	getchar.c	FUNCTION_80	IF_1	FOR_1	IF_2
0x4002e52	            0x74c4	                            je 0x4002e18	      4708	getchar.c	FUNCTION_80	IF_1	FOR_1	IF_2
0x4002e54	        0x41883c24	                     mov byte [r12], dil	      4711	getchar.c	FUNCTION_80	IF_1	FOR_1	IF_2
0x4002e58	         0xfb64301	               movzx eax, byte [rbx + 1]	      4712	getchar.c	FUNCTION_80	IF_1	FOR_1	IF_2
0x4002e5c	        0x4883c303	                              add rbx, 3	      4713	getchar.c	FUNCTION_80	IF_1	FOR_1	IF_2
0x4002e60	        0x4983c403	                              add r12, 3	      4713	getchar.c	FUNCTION_80	IF_1	FOR_1	IF_2
0x4002e64	      0x41884424fe	                  mov byte [r12 - 2], al	      4712	getchar.c	FUNCTION_80	IF_1	FOR_1	IF_2
0x4002e69	         0xfb643ff	               movzx eax, byte [rbx - 1]	      4713	getchar.c	FUNCTION_80	IF_1	FOR_1	IF_2
0x4002e6d	      0x41884424ff	                  mov byte [r12 - 1], al	      4713	getchar.c	FUNCTION_80	IF_1	FOR_1	IF_2
0x4002e72	           0xfb63b	                   movzx edi, byte [rbx]	      4706	getchar.c	FUNCTION_80	IF_1	FOR_1
0x4002e75	          0x4084ff	                           test dil, dil	      4706	getchar.c	FUNCTION_80	IF_1	FOR_1
0x4002e78	            0x7598	                           jne 0x4002e12	      4706	getchar.c	FUNCTION_80	IF_1	FOR_1
0x4002e7a	    0x660f1f440000	                    nop word [rax + rax]	      4706	getchar.c	FUNCTION_80	IF_1	FOR_1
0x4002e80	      0x41c6042400	                       mov byte [r12], 0	      4723	getchar.c	FUNCTION_80	IF_1
0x4002e85	          0x4889e8	                            mov rax, rbp	      4726	getchar.c	FUNCTION_80
0x4002e88	              0x5b	                                 pop rbx	      4726	getchar.c	FUNCTION_80
0x4002e89	              0x5d	                                 pop rbp	      4726	getchar.c	FUNCTION_80
0x4002e8a	            0x415c	                                 pop r12	      4726	getchar.c	FUNCTION_80
0x4002e8c	              0xc3	                                     ret	      4726	getchar.c	FUNCTION_80
0x4002e8d	           0xf1f00	                         nop dword [rax]	      4726	getchar.c	FUNCTION_80
0x4002e90	          0x4889df	                            mov rdi, rbx	      4719	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_4
0x4002e93	    0xff1500000000	                 call qword [0x04002e99]	      4719	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_4
0x4002e99	            0x89c7	                            mov edi, eax	      4719	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_4
0x4002e9b	            0xeb85	                           jmp 0x4002e22	      4719	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_4
vgetc	WHILE,0:ELSE,5:functions,0:SWITCH,1:CALL,17:IF,19:DO,0:FOR,3	368
0x40046e0	            0x4154	                                push r12	      1562	getchar.c	FUNCTION_54
0x40046e2	              0x55	                                push rbp	      1562	getchar.c	FUNCTION_54
0x40046e3	              0x53	                                push rbx	      1562	getchar.c	FUNCTION_54
0x40046e4	        0x4883ec30	                           sub rsp, 0x30	      1562	getchar.c	FUNCTION_54
0x40046e8	    0x8b0d00000000	            mov ecx, dword [0x040046ee] 	      1573	getchar.c	FUNCTION_54	IF_1
0x40046ee	    0x64488b042528	                mov rax, qword fs:[0x28]	      1562	getchar.c	FUNCTION_54
0x40046f7	      0x4889442428	             mov qword [rsp + 0x28], rax	      1562	getchar.c	FUNCTION_54
0x40046fc	            0x31c0	                            xor eax, eax	      1562	getchar.c	FUNCTION_54
0x40046fe	            0x85c9	                           test ecx, ecx	      1573	getchar.c	FUNCTION_54	IF_1
0x4004700	            0x740e	                            je 0x4004710	      1573	getchar.c	FUNCTION_54	IF_1
0x4004702	    0x8b1500000000	            mov edx, dword [0x04004708] 	      1573	getchar.c	FUNCTION_54	IF_1
0x4004708	            0x85d2	                           test edx, edx	      1573	getchar.c	FUNCTION_54	IF_1
0x400470a	     0xf85c0030000	                           jne 0x4004ad0	      1573	getchar.c	FUNCTION_54	IF_1
0x4004710	    0x8b0500000000	            mov eax, dword [0x04004716] 	      1581	getchar.c	FUNCTION_54	IF_2
0x4004716	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1581	getchar.c	FUNCTION_54	IF_2
0x4004719	     0xf84f9000000	                            je 0x4004818	      1581	getchar.c	FUNCTION_54	IF_2
0x400471f	    0x8b1500000000	            mov edx, dword [0x04004725] 	      1585	getchar.c	FUNCTION_54	IF_2
0x4004725	    0xc70500000000	     mov dword [0x0400472f], 0xffffffff 	      1584	getchar.c	FUNCTION_54	IF_2
0x400472f	    0x891500000000	            mov dword [0x04004735], edx 	      1585	getchar.c	FUNCTION_54	IF_2
0x4004735	    0x8b1500000000	            mov edx, dword [0x0400473b] 	      1587	getchar.c	FUNCTION_54	IF_2
0x400473b	    0x891500000000	            mov dword [0x04004741], edx 	      1587	getchar.c	FUNCTION_54	IF_2
0x4004741	    0x8b1500000000	            mov edx, dword [0x04004747] 	      1588	getchar.c	FUNCTION_54	IF_2
0x4004747	    0x891500000000	            mov dword [0x0400474d], edx 	      1588	getchar.c	FUNCTION_54	IF_2
0x400474d	      0x3d039bffff	                     cmp eax, 0xffff9b03	      1588	getchar.c	FUNCTION_54	IF_2
0x4004752	    0xc70500000000	               mov dword [0x0400475c], 0	      1791	getchar.c	FUNCTION_54
0x400475c	           0xf95c1	                                setne cl	      1791	getchar.c	FUNCTION_54
0x400475f	      0x3d03caffff	                     cmp eax, 0xffffca03	      1791	getchar.c	FUNCTION_54
0x4004764	           0xf95c2	                                setne dl	      1791	getchar.c	FUNCTION_54
0x4004767	            0x21ca	                            and edx, ecx	      1791	getchar.c	FUNCTION_54
0x4004769	            0x84d2	                             test dl, dl	      1794	getchar.c	FUNCTION_54	IF_19
0x400476b	     0xf8587000000	                           jne 0x40047f8	      1794	getchar.c	FUNCTION_54	IF_19
0x4004771	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      1803	getchar.c	FUNCTION_54
0x4004776	    0x644833342528	                xor rsi, qword fs:[0x28]	      1803	getchar.c	FUNCTION_54
0x400477f	     0xf8597030000	                           jne 0x4004b1c	      1803	getchar.c	FUNCTION_54
0x4004785	        0x4883c430	                           add rsp, 0x30	      1803	getchar.c	FUNCTION_54
0x4004789	              0x5b	                                 pop rbx	      1803	getchar.c	FUNCTION_54
0x400478a	              0x5d	                                 pop rbp	      1803	getchar.c	FUNCTION_54
0x400478b	            0x415c	                                 pop r12	      1803	getchar.c	FUNCTION_54
0x400478d	              0xc3	                                     ret	      1803	getchar.c	FUNCTION_54
0x400478e	      0x3db5bcffff	                     cmp eax, 0xffffbcb5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004793	     0xf84c4030000	                            je 0x4004b5d	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004799	     0xf8fc8030000	                            jg 0x4004b67	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400479f	      0x3db5b8ffff	                     cmp eax, 0xffffb8b5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x40047a4	     0xf84a9030000	                            je 0x4004b53	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x40047aa	     0xf8f86050000	                            jg 0x4004d36	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x40047b0	      0x3db5b5ffff	                     cmp eax, 0xffffb5b5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x40047b5	     0xf848e030000	                            je 0x4004b49	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x40047bb	     0xf8f2d050000	                            jg 0x4004cee	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x40047c1	      0x3db5b3ffff	                     cmp eax, 0xffffb3b5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x40047c6	     0xf8473030000	                            je 0x4004b3f	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x40047cc	      0x3db5b4ffff	                     cmp eax, 0xffffb4b5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x40047d1	     0xf850e020000	                           jne 0x40049e5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x40047d7	      0xb838000000	                           mov eax, 0x38	      1710	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x40047dc	         0xf1f4000	                         nop dword [rax]	      1710	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x40047e0	    0x8b0d00000000	            mov ecx, dword [0x040047e6] 	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x40047e6	            0x85c9	                           test ecx, ecx	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x40047e8	     0xf8512020000	                           jne 0x4004a00	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x40047ee	    0xc70500000000	               mov dword [0x040047f8], 0	      1791	getchar.c	FUNCTION_54
0x40047f8	        0x8944240c	              mov dword [rsp + 0xc], eax	      1791	getchar.c	FUNCTION_54
0x40047fc	    0xc70500000000	               mov dword [0x04004806], 0	      1797	getchar.c	FUNCTION_54	IF_19
0x4004806	      0xe800000000	                          call 0x400480b	      1798	getchar.c	FUNCTION_54	IF_19	CALL_17
0x400480b	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      1798	getchar.c	FUNCTION_54	IF_19	CALL_17
0x400480f	      0xe95dffffff	                           jmp 0x4004771	      1798	getchar.c	FUNCTION_54	IF_19	CALL_17
0x4004814	         0xf1f4000	                         nop dword [rax]	      1798	getchar.c	FUNCTION_54	IF_19	CALL_17
0x4004818	    0xc70500000000	               mov dword [0x04004822], 0	      1593	getchar.c	FUNCTION_54	ELSE_1
0x4004822	    0xc70500000000	               mov dword [0x0400482c], 0	      1594	getchar.c	FUNCTION_54	ELSE_1
0x400482c	            0x31c0	                            xor eax, eax	      1594	getchar.c	FUNCTION_54	ELSE_1
0x400482e	            0x85c0	                           test eax, eax	      1599	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_3
0x4004830	     0xf84e6000000	                            je 0x400491c	      1599	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_3
0x4004836	    0x8b0500000000	            mov eax, dword [0x0400483c] 	      1997	getchar.c	FUNCTION_62	IF_1
0x400483c	    0x830500000000	               add dword [0x04004843], 1	      1606	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_3
0x4004843	    0x830500000000	               add dword [0x0400484a], 1	      1607	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_3
0x400484a	            0x85c0	                           test eax, eax	      1997	getchar.c	FUNCTION_62	IF_1
0x400484c	            0x7e0e	                           jle 0x400485c	      1997	getchar.c	FUNCTION_62	IF_1
0x400484e	    0x8b1500000000	            mov edx, dword [0x04004854] 	      1997	getchar.c	FUNCTION_62	IF_1
0x4004854	            0x85d2	                           test edx, edx	      1997	getchar.c	FUNCTION_62	IF_1
0x4004856	     0xf8474010000	                            je 0x40049d0	      1997	getchar.c	FUNCTION_62	IF_1
0x400485c	      0xbf01000000	                              mov edi, 1	      1997	getchar.c	FUNCTION_62	IF_1
0x4004861	      0xe8dae7ffff	              call sym.vgetorpeek.part.9	      1997	getchar.c	FUNCTION_62	IF_1
0x4004866	      0x3d80000000	                           cmp eax, 0x80	      1997	getchar.c	FUNCTION_62	IF_1
0x400486b	           0xf94c1	                                 sete cl	      1997	getchar.c	FUNCTION_62	IF_1
0x400486e	      0x3d9b000000	                           cmp eax, 0x9b	      1997	getchar.c	FUNCTION_62	IF_1
0x4004873	           0xf94c2	                                 sete dl	      1997	getchar.c	FUNCTION_62	IF_1
0x4004876	             0x9ca	                             or edx, ecx	      1997	getchar.c	FUNCTION_62	IF_1
0x4004878	    0x832d00000000	               sub dword [0x0400487f], 1	      1613	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_4
0x400487f	    0x832d00000000	               sub dword [0x04004886], 1	      1614	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_4
0x4004886	            0x84d2	                             test dl, dl	      1618	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5
0x4004888	     0xf8400ffffff	                            je 0x400478e	      1618	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5
0x400488e	    0x8b0500000000	            mov eax, dword [0x04004894] 	      1997	getchar.c	FUNCTION_62	IF_1
0x4004894	    0x830500000000	               add dword [0x0400489b], 1	      1626	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5
0x400489b	    0x8b2d00000000	            mov ebp, dword [0x040048a1] 	      1624	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5
0x40048a1	    0xc70500000000	               mov dword [0x040048ab], 0	      1627	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5
0x40048ab	            0x85c0	                           test eax, eax	      1997	getchar.c	FUNCTION_62	IF_1
0x40048ad	     0xf8ead000000	                           jle 0x4004960	      1997	getchar.c	FUNCTION_62	IF_1
0x40048b3	    0x8b1d00000000	            mov ebx, dword [0x040048b9] 	      1997	getchar.c	FUNCTION_62	IF_1
0x40048b9	            0x85db	                           test ebx, ebx	      1997	getchar.c	FUNCTION_62	IF_1
0x40048bb	     0xf859f000000	                           jne 0x4004960	      1997	getchar.c	FUNCTION_62	IF_1
0x40048c1	    0x832d00000000	               sub dword [0x040048c8], 1	      1630	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5
0x40048c8	    0x892d00000000	            mov dword [0x040048ce], ebp 	      1631	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5
0x40048ce	            0x31c0	                            xor eax, eax	      1998	getchar.c	FUNCTION_62	IF_1
0x40048d0	          0xc1e008	                              shl eax, 8	      1637	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	CALL_6
0x40048d3	             0x1c3	                            add ebx, eax	      1637	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	CALL_6
0x40048d5	            0x89d8	                            mov eax, ebx	      1637	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	CALL_6
0x40048d7	            0xf7d8	                                 neg eax	      1637	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	CALL_6
0x40048d9	      0x3d95c4ffff	                     cmp eax, 0xffffc495	      1663	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_9
0x40048de	     0xf85f8010000	                           jne 0x4004adc	      1663	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_9
0x40048e4	    0x488b1d000000	            mov rbx, qword [0x040048eb] 	      1663	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_9
0x40048eb	          0x4885db	                           test rbx, rbx	      1663	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_9
0x40048ee	     0xf8459feffff	                            je 0x400474d	      1663	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_9
0x40048f4	      0xe800000000	                          call 0x40048f9	      1665	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_9	CALL_10
0x40048f9	          0x4889df	                            mov rdi, rbx	      1665	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_9	CALL_10
0x40048fc	          0x4889c6	                            mov rsi, rax	      1665	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_9	CALL_10
0x40048ff	      0xe800000000	                          call 0x4004904	      1665	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_9	CALL_10
0x4004904	            0x31f6	                            xor esi, esi	      1665	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_9	CALL_10
0x4004906	          0x4889c7	                            mov rdi, rax	      1665	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_9	CALL_10
0x4004909	      0xe800000000	                          call 0x400490e	      1665	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_9	CALL_10
0x400490e	    0x8b0500000000	            mov eax, dword [0x04004914] 	      1665	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_9	CALL_10
0x4004914	            0x85c0	                           test eax, eax	      1599	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_3
0x4004916	     0xf851affffff	                           jne 0x4004836	      1599	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_3
0x400491c	      0xe800000000	                          call 0x4004921	      1601	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_3	CALL_2
0x4004921	            0x85c0	                           test eax, eax	      1601	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_3	CALL_2
0x4004923	     0xf850dffffff	                           jne 0x4004836	      1601	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_3	CALL_2
0x4004929	    0x8b3d00000000	            mov edi, dword [0x0400492f] 	      1997	getchar.c	FUNCTION_62	IF_1
0x400492f	            0x85ff	                           test edi, edi	      1997	getchar.c	FUNCTION_62	IF_1
0x4004931	     0xf8fd0010000	                            jg 0x4004b07	      1997	getchar.c	FUNCTION_62	IF_1
0x4004937	      0xbf01000000	                              mov edi, 1	      1997	getchar.c	FUNCTION_62	IF_1
0x400493c	      0xe8ffe6ffff	              call sym.vgetorpeek.part.9	      1997	getchar.c	FUNCTION_62	IF_1
0x4004941	      0x3d80000000	                           cmp eax, 0x80	      1997	getchar.c	FUNCTION_62	IF_1
0x4004946	           0xf94c1	                                 sete cl	      1997	getchar.c	FUNCTION_62	IF_1
0x4004949	      0x3d9b000000	                           cmp eax, 0x9b	      1997	getchar.c	FUNCTION_62	IF_1
0x400494e	           0xf94c2	                                 sete dl	      1997	getchar.c	FUNCTION_62	IF_1
0x4004951	             0x9ca	                             or edx, ecx	      1997	getchar.c	FUNCTION_62	IF_1
0x4004953	      0xe92effffff	                           jmp 0x4004886	      1997	getchar.c	FUNCTION_62	IF_1
0x4004958	     0xf1f84000000	                   nop dword [rax + rax]	      1997	getchar.c	FUNCTION_62	IF_1
0x4004960	      0xbf01000000	                              mov edi, 1	      1997	getchar.c	FUNCTION_62	IF_1
0x4004965	      0xe8d6e6ffff	              call sym.vgetorpeek.part.9	      1997	getchar.c	FUNCTION_62	IF_1
0x400496a	            0x89c3	                            mov ebx, eax	      1997	getchar.c	FUNCTION_62	IF_1
0x400496c	    0x8b0500000000	            mov eax, dword [0x04004972] 	      1997	getchar.c	FUNCTION_62	IF_1
0x4004972	            0x85c0	                           test eax, eax	      1997	getchar.c	FUNCTION_62	IF_1
0x4004974	            0x7e0a	                           jle 0x4004980	      1997	getchar.c	FUNCTION_62	IF_1
0x4004976	    0x8b0500000000	            mov eax, dword [0x0400497c] 	      1997	getchar.c	FUNCTION_62	IF_1
0x400497c	            0x85c0	                           test eax, eax	      1997	getchar.c	FUNCTION_62	IF_1
0x400497e	            0x740a	                            je 0x400498a	      1997	getchar.c	FUNCTION_62	IF_1
0x4004980	      0xbf01000000	                              mov edi, 1	      1997	getchar.c	FUNCTION_62	IF_1
0x4004985	      0xe8b6e6ffff	              call sym.vgetorpeek.part.9	      1997	getchar.c	FUNCTION_62	IF_1
0x400498a	    0x832d00000000	               sub dword [0x04004991], 1	      1630	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5
0x4004991	    0x81fbfc000000	                           cmp ebx, 0xfc	      1632	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_6
0x4004997	    0x892d00000000	            mov dword [0x0400499d], ebp 	      1631	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5
0x400499d	            0x7511	                           jne 0x40049b0	      1632	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_6
0x400499f	    0x890500000000	            mov dword [0x040049a5], eax 	      1634	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_6
0x40049a5	      0xe984feffff	                           jmp 0x400482e	      1635	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_6
0x40049aa	    0x660f1f440000	                    nop word [rax + rax]	      1635	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_6
0x40049b0	    0x81fbfe000000	                           cmp ebx, 0xfe	      1637	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	CALL_6
0x40049b6	            0x7428	                            je 0x40049e0	      1637	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	CALL_6
0x40049b8	    0x81fbff000000	                           cmp ebx, 0xff	      1637	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	CALL_6
0x40049be	     0xf850cffffff	                           jne 0x40048d0	      1637	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	CALL_6
0x40049c4	      0xb801a7ffff	                     mov eax, 0xffffa701	      1637	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	CALL_6
0x40049c9	            0xeb1a	                           jmp 0x40049e5	      1637	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	CALL_6
0x40049cb	       0xf1f440000	                   nop dword [rax + rax]	      1637	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	CALL_6
0x40049d0	            0x31d2	                            xor edx, edx	      1997	getchar.c	FUNCTION_62	IF_1
0x40049d2	            0x31c0	                            xor eax, eax	      1998	getchar.c	FUNCTION_62	IF_1
0x40049d4	      0xe99ffeffff	                           jmp 0x4004878	      1998	getchar.c	FUNCTION_62	IF_1
0x40049d9	     0xf1f80000000	                         nop dword [rax]	      1998	getchar.c	FUNCTION_62	IF_1
0x40049e0	      0xb880000000	                           mov eax, 0x80	      1637	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	CALL_6
0x40049e5	    0x833d00000000	               cmp dword [0x040049ec], 0	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x40049ec	     0xf845bfdffff	                            je 0x400474d	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x40049f2	      0x3dff000000	                           cmp eax, 0xff	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x40049f7	     0xf8750fdffff	                            ja 0x400474d	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x40049fd	           0xf1f00	                         nop dword [rax]	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x4004a00	          0x4863d0	                         movsxd rdx, eax	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x4004a03	     0xfbe92000000	                   movsx edx, byte [rdx]	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x4004a0a	          0x80fa01	                               cmp dl, 1	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x4004a0d	     0xf8edbfdffff	                           jle 0x40047ee	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x4004a13	        0x88442410	               mov byte [rsp + 0x10], al	      1756	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16
0x4004a17	          0x8d42fe	                      lea eax, [rdx - 2]	      1756	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16
0x4004a1a	    0x830500000000	               add dword [0x04004a21], 1	      1755	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16
0x4004a21	      0x488d5c2410	                   lea rbx, [rsp + 0x10]	      1755	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16
0x4004a26	      0x488d6c0411	            lea rbp, [rsp + rax + 0x11] 	      1755	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16
0x4004a2b	            0xeb14	                           jmp 0x4004a41	      1755	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16
0x4004a2d	           0xf1f00	                         nop dword [rax]	      1755	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16
0x4004a30	        0xc6430100	                   mov byte [rbx + 1], 0	      1759	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	FOR_3	CALL_14
0x4004a34	        0x4883c301	                              add rbx, 1	      1759	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	FOR_3	CALL_14
0x4004a38	          0x4839dd	                            cmp rbp, rbx	      1757	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	FOR_3
0x4004a3b	     0xf84e7000000	                            je 0x4004b28	      1757	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	FOR_3
0x4004a41	    0x8b0500000000	            mov eax, dword [0x04004a47] 	      1997	getchar.c	FUNCTION_62	IF_1
0x4004a47	            0x85c0	                           test eax, eax	      1997	getchar.c	FUNCTION_62	IF_1
0x4004a49	            0x7e0a	                           jle 0x4004a55	      1997	getchar.c	FUNCTION_62	IF_1
0x4004a4b	    0x8b0500000000	            mov eax, dword [0x04004a51] 	      1997	getchar.c	FUNCTION_62	IF_1
0x4004a51	            0x85c0	                           test eax, eax	      1997	getchar.c	FUNCTION_62	IF_1
0x4004a53	            0x74db	                            je 0x4004a30	      1997	getchar.c	FUNCTION_62	IF_1
0x4004a55	      0xbf01000000	                              mov edi, 1	      1997	getchar.c	FUNCTION_62	IF_1
0x4004a5a	      0xe8e1e5ffff	              call sym.vgetorpeek.part.9	      1997	getchar.c	FUNCTION_62	IF_1
0x4004a5f	            0x3c80	                            cmp al, 0x80	      1760	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	FOR_3	IF_17
0x4004a61	          0x884301	                  mov byte [rbx + 1], al	      1759	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	FOR_3	CALL_14
0x4004a64	            0x7404	                            je 0x4004a6a	      1760	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	FOR_3	IF_17
0x4004a66	            0x3c9b	                            cmp al, 0x9b	      1760	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	FOR_3	IF_17
0x4004a68	            0x75ca	                           jne 0x4004a34	      1760	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	FOR_3	IF_17
0x4004a6a	    0x8b0500000000	            mov eax, dword [0x04004a70] 	      1997	getchar.c	FUNCTION_62	IF_1
0x4004a70	            0x85c0	                           test eax, eax	      1997	getchar.c	FUNCTION_62	IF_1
0x4004a72	            0x7e0c	                           jle 0x4004a80	      1997	getchar.c	FUNCTION_62	IF_1
0x4004a74	    0x448b25000000	           mov r12d, dword [0x04004a7b] 	      1997	getchar.c	FUNCTION_62	IF_1
0x4004a7b	          0x4585e4	                         test r12d, r12d	      1997	getchar.c	FUNCTION_62	IF_1
0x4004a7e	            0x74b4	                            je 0x4004a34	      1997	getchar.c	FUNCTION_62	IF_1
0x4004a80	      0xbf01000000	                              mov edi, 1	      1997	getchar.c	FUNCTION_62	IF_1
0x4004a85	      0xe8b6e5ffff	              call sym.vgetorpeek.part.9	      1997	getchar.c	FUNCTION_62	IF_1
0x4004a8a	    0x448b1d000000	           mov r11d, dword [0x04004a91] 	      1997	getchar.c	FUNCTION_62	IF_1
0x4004a91	          0x4189c4	                           mov r12d, eax	      1997	getchar.c	FUNCTION_62	IF_1
0x4004a94	          0x4585db	                         test r11d, r11d	      1997	getchar.c	FUNCTION_62	IF_1
0x4004a97	            0x7e0c	                           jle 0x4004aa5	      1997	getchar.c	FUNCTION_62	IF_1
0x4004a99	    0x448b15000000	           mov r10d, dword [0x04004aa0] 	      1997	getchar.c	FUNCTION_62	IF_1
0x4004aa0	          0x4585d2	                         test r10d, r10d	      1997	getchar.c	FUNCTION_62	IF_1
0x4004aa3	            0x748f	                            je 0x4004a34	      1997	getchar.c	FUNCTION_62	IF_1
0x4004aa5	      0xbf01000000	                              mov edi, 1	      1997	getchar.c	FUNCTION_62	IF_1
0x4004aaa	      0xe891e5ffff	              call sym.vgetorpeek.part.9	      1997	getchar.c	FUNCTION_62	IF_1
0x4004aaf	    0x4181fcfd0000	                          cmp r12d, 0xfd	      1772	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	FOR_3	IF_17	IF_18	CALL_16
0x4004ab6	     0xf8578ffffff	                           jne 0x4004a34	      1772	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	FOR_3	IF_17	IF_18	CALL_16
0x4004abc	          0x83f851	                           cmp eax, 0x51	      1772	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	FOR_3	IF_17	IF_18	CALL_16
0x4004abf	     0xf856fffffff	                           jne 0x4004a34	      1772	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	FOR_3	IF_17	IF_18	CALL_16
0x4004ac5	        0xc643019b	                mov byte [rbx + 1], 0x9b	      1773	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	FOR_3	IF_17	IF_18
0x4004ac9	      0xe966ffffff	                           jmp 0x4004a34	      1773	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	FOR_3	IF_17	IF_18
0x4004ace	            0x6690	                                     nop	      1773	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	FOR_3	IF_17	IF_18
0x4004ad0	            0x31ff	                            xor edi, edi	      1574	getchar.c	FUNCTION_54	CALL_1
0x4004ad2	      0xe800000000	                          call 0x4004ad7	      1574	getchar.c	FUNCTION_54	CALL_1
0x4004ad7	      0xe934fcffff	                           jmp 0x4004710	      1574	getchar.c	FUNCTION_54	CALL_1
0x4004adc	      0x3d039dffff	                     cmp eax, 0xffff9d03	      1673	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_10
0x4004ae1	        0x400f94c7	                                sete dil	      1673	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_10
0x4004ae5	          0x80e7fe	                            and bh, 0xfe	      1673	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_10
0x4004ae8	    0x81fbfd620000	                         cmp ebx, 0x62fd	      1673	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_10
0x4004aee	     0xf8520020000	                           jne 0x4004d14	      1673	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_10
0x4004af4	        0x400fb6ff	                          movzx edi, dil	      1675	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_10	CALL_11
0x4004af8	      0xe800000000	                          call 0x4004afd	      1675	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_10	CALL_11
0x4004afd	      0xb803caffff	                     mov eax, 0xffffca03	      1676	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_10
0x4004b02	      0xe9defeffff	                           jmp 0x40049e5	      1676	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_10
0x4004b07	    0x8b0500000000	            mov eax, dword [0x04004b0d] 	      1997	getchar.c	FUNCTION_62	IF_1
0x4004b0d	            0x85c0	                           test eax, eax	      1997	getchar.c	FUNCTION_62	IF_1
0x4004b0f	     0xf8522feffff	                           jne 0x4004937	      1997	getchar.c	FUNCTION_62	IF_1
0x4004b15	            0x31c0	                            xor eax, eax	      1998	getchar.c	FUNCTION_62	IF_1
0x4004b17	      0xe9c9feffff	                           jmp 0x40049e5	      1998	getchar.c	FUNCTION_62	IF_1
0x4004b1c	      0xe800000000	                          call 0x4004b21	      1803	getchar.c	FUNCTION_54
0x4004b21	     0xf1f80000000	                         nop dword [rax]	      1803	getchar.c	FUNCTION_54
0x4004b28	    0x832d00000000	               sub dword [0x04004b2f], 1	      1776	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16
0x4004b2f	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1777	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16
0x4004b34	    0xff1500000000	                 call qword [0x04004b3a]	      1777	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16
0x4004b3a	      0xe90efcffff	                           jmp 0x400474d	      1777	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16
0x4004b3f	      0xb839000000	                           mov eax, 0x39	      1711	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004b44	      0xe997fcffff	                           jmp 0x40047e0	      1711	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004b49	      0xb837000000	                           mov eax, 0x37	      1709	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004b4e	      0xe98dfcffff	                           jmp 0x40047e0	      1709	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004b53	      0xb834000000	                           mov eax, 0x34	      1706	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004b58	      0xe983fcffff	                           jmp 0x40047e0	      1706	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004b5d	      0xb830000000	                           mov eax, 0x30	      1702	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004b62	      0xe979fcffff	                           jmp 0x40047e0	      1702	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004b67	      0x3d03c0ffff	                     cmp eax, 0xffffc003	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004b6c	            0x743a	                            je 0x4004ba8	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004b6e	     0xf8fae000000	                            jg 0x4004c22	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004b74	      0x3d03beffff	                     cmp eax, 0xffffbe03	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004b79	            0x7455	                            je 0x4004bd0	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004b7b	     0xf8f58010000	                            jg 0x4004cd9	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004b81	      0x3d03bdffff	                     cmp eax, 0xffffbd03	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004b86	            0x7471	                            je 0x4004bf9	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004b88	      0x3db5bdffff	                     cmp eax, 0xffffbdb5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004b8d	     0xf8552feffff	                           jne 0x40049e5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004b93	      0xb82e000000	                           mov eax, 0x2e	      1700	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004b98	      0xe943fcffff	                           jmp 0x40047e0	      1700	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004b9d	      0x3d03bfffff	                     cmp eax, 0xffffbf03	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004ba2	     0xf853dfeffff	                           jne 0x40049e5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004ba8	    0x8b1500000000	            mov edx, dword [0x04004bae] 	      1714	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	IF_12
0x4004bae	          0x83fa02	                              cmp edx, 2	      1714	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	IF_12
0x4004bb1	            0x744d	                            je 0x4004c00	      1714	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	IF_12
0x4004bb3	          0x83fa04	                              cmp edx, 4	      1719	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_2	IF_13
0x4004bb6	      0xb89597ffff	                     mov eax, 0xffff9795	      1725	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_3
0x4004bbb	            0x7454	                            je 0x4004c11	      1719	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_2	IF_13
0x4004bbd	    0x8b3500000000	            mov esi, dword [0x04004bc3] 	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x4004bc3	            0x85f6	                           test esi, esi	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x4004bc5	     0xf8582fbffff	                           jne 0x400474d	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x4004bcb	      0xe91efcffff	                           jmp 0x40047ee	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x4004bd0	    0x448b0d000000	            mov r9d, dword [0x04004bd7] 	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x4004bd7	      0xb8958affff	                     mov eax, 0xffff8a95	      1742	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_5
0x4004bdc	          0x4585c9	                           test r9d, r9d	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x4004bdf	     0xf8409fcffff	                            je 0x40047ee	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x4004be5	    0xc70500000000	               mov dword [0x04004bef], 0	      1791	getchar.c	FUNCTION_54
0x4004bef	      0xb8958affff	                     mov eax, 0xffff8a95	      1742	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_5
0x4004bf4	      0xe9fffbffff	                           jmp 0x40047f8	      1742	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_5
0x4004bf9	      0xb8959bffff	                     mov eax, 0xffff9b95	      1743	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_5
0x4004bfe	            0xebbd	                           jmp 0x4004bbd	      1743	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_5
0x4004c00	    0xc70500000000	               mov dword [0x04004c0a], 0	      1717	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	IF_12
0x4004c0a	      0xb8ddcdffff	                     mov eax, 0xffffcddd	      1716	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	IF_12
0x4004c0f	            0xebac	                           jmp 0x4004bbd	      1716	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	IF_12
0x4004c11	    0xc70500000000	               mov dword [0x04004c1b], 0	      1722	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_2	IF_13
0x4004c1b	      0xb803a8ffff	                     mov eax, 0xffffa803	      1721	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_2	IF_13
0x4004c20	            0xeb9b	                           jmp 0x4004bbd	      1721	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_2	IF_13
0x4004c22	      0x3db5c6ffff	                     cmp eax, 0xffffc6b5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004c27	     0xf84a2000000	                            je 0x4004ccf	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004c2d	            0x7e4d	                           jle 0x4004c7c	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004c2f	      0x3db5c8ffff	                     cmp eax, 0xffffc8b5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004c34	            0x743c	                            je 0x4004c72	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004c36	      0x3db5c9ffff	                     cmp eax, 0xffffc9b5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004c3b	            0x741b	                            je 0x4004c58	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004c3d	      0x3db5c7ffff	                     cmp eax, 0xffffc7b5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004c42	     0xf859dfdffff	                           jne 0x40049e5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004c48	      0xb82f000000	                           mov eax, 0x2f	      1691	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004c4d	      0xe98efbffff	                           jmp 0x40047e0	      1691	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004c52	    0x660f1f440000	                    nop word [rax + rax]	      1691	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004c58	    0x448b05000000	            mov r8d, dword [0x04004c5f] 	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x4004c5f	      0xb82b000000	                           mov eax, 0x2b	      1689	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004c64	          0x4585c0	                           test r8d, r8d	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x4004c67	     0xf8481fbffff	                            je 0x40047ee	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x4004c6d	      0xe98efdffff	                           jmp 0x4004a00	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x4004c72	      0xb82d000000	                           mov eax, 0x2d	      1690	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004c77	      0xe964fbffff	                           jmp 0x40047e0	      1690	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004c7c	      0x3d03c1ffff	                     cmp eax, 0xffffc103	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004c81	            0x740b	                            je 0x4004c8e	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004c83	      0x3d03c2ffff	                     cmp eax, 0xffffc203	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004c88	     0xf8557fdffff	                           jne 0x40049e5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004c8e	    0x8b1500000000	            mov edx, dword [0x04004c94] 	      1728	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_3	IF_14
0x4004c94	          0x83fa02	                              cmp edx, 2	      1728	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_3	IF_14
0x4004c97	            0x7422	                            je 0x4004cbb	      1728	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_3	IF_14
0x4004c99	          0x83fa04	                              cmp edx, 4	      1733	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_4	IF_15
0x4004c9c	      0xb8c0c8ffff	                     mov eax, 0xffffc8c0	      1739	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_5
0x4004ca1	     0xf8516ffffff	                           jne 0x4004bbd	      1733	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_4	IF_15
0x4004ca7	    0xc70500000000	               mov dword [0x04004cb1], 0	      1736	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_4	IF_15
0x4004cb1	      0xb803a7ffff	                     mov eax, 0xffffa703	      1735	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_4	IF_15
0x4004cb6	      0xe902ffffff	                           jmp 0x4004bbd	      1735	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_4	IF_15
0x4004cbb	    0xc70500000000	               mov dword [0x04004cc5], 0	      1731	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_3	IF_14
0x4004cc5	      0xb8d6c8ffff	                     mov eax, 0xffffc8d6	      1730	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_3	IF_14
0x4004cca	      0xe9eefeffff	                           jmp 0x4004bbd	      1730	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_3	IF_14
0x4004ccf	      0xb82a000000	                           mov eax, 0x2a	      1692	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004cd4	      0xe907fbffff	                           jmp 0x40047e0	      1692	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004cd9	      0x3db5beffff	                     cmp eax, 0xffffbeb5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004cde	     0xf85b9feffff	                           jne 0x4004b9d	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004ce4	      0xb80d000000	                            mov eax, 0xd	      1693	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004ce9	      0xe9f2faffff	                           jmp 0x40047e0	      1693	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004cee	      0x3db5b6ffff	                     cmp eax, 0xffffb6b5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004cf3	            0x7415	                            je 0x4004d0a	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004cf5	      0x3db5b7ffff	                     cmp eax, 0xffffb7b5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004cfa	     0xf85e5fcffff	                           jne 0x40049e5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004d00	      0xb835000000	                           mov eax, 0x35	      1707	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004d05	      0xe9d6faffff	                           jmp 0x40047e0	      1707	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004d0a	      0xb836000000	                           mov eax, 0x36	      1708	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004d0f	      0xe9ccfaffff	                           jmp 0x40047e0	      1708	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004d14	      0x3d03aeffff	                     cmp eax, 0xffffae03	      1681	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_11
0x4004d19	     0xf856ffaffff	                           jne 0x400478e	      1681	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_11
0x4004d1f	    0x833d00000000	               cmp dword [0x04004d26], 0	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x4004d26	      0xb89b000000	                           mov eax, 0x9b	      1682	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_11
0x4004d2b	     0xf85cffcffff	                           jne 0x4004a00	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x4004d31	      0xe9b8faffff	                           jmp 0x40047ee	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x4004d36	      0x3d03bbffff	                     cmp eax, 0xffffbb03	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004d3b	            0x7455	                            je 0x4004d92	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004d3d	            0x7f26	                            jg 0x4004d65	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004d3f	      0x3db5b9ffff	                     cmp eax, 0xffffb9b5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004d44	            0x7415	                            je 0x4004d5b	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004d46	      0x3db5baffff	                     cmp eax, 0xffffbab5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004d4b	     0xf8594fcffff	                           jne 0x40049e5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004d51	      0xb832000000	                           mov eax, 0x32	      1704	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004d56	      0xe985faffff	                           jmp 0x40047e0	      1704	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004d5b	      0xb833000000	                           mov eax, 0x33	      1705	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004d60	      0xe97bfaffff	                           jmp 0x40047e0	      1705	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004d65	      0x3db5bbffff	                     cmp eax, 0xffffbbb5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004d6a	            0x741c	                            je 0x4004d88	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004d6c	      0x3d03bcffff	                     cmp eax, 0xffffbc03	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004d71	     0xf856efcffff	                           jne 0x40049e5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004d77	      0xb89593ffff	                     mov eax, 0xffff9395	      1744	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_5
0x4004d7c	      0xe93cfeffff	                           jmp 0x4004bbd	      1744	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_5
0x4004d81	     0xf1f80000000	                         nop dword [rax]	      1744	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_5
0x4004d88	      0xb831000000	                           mov eax, 0x31	      1703	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004d8d	      0xe94efaffff	                           jmp 0x40047e0	      1703	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x4004d92	      0xb8958dffff	                     mov eax, 0xffff8d95	      1745	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_5
0x4004d97	      0xe921feffff	                           jmp 0x4004bbd	      1745	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_5
stuffReadbuffSpec	WHILE,1:ELSE,1:functions,0:SWITCH,0:CALL,3:IF,2:DO,0:FOR,0	38
0x4000fb0	        0x4883ec18	                           sub rsp, 0x18	       682	getchar.c	FUNCTION_26
0x4000fb4	          0x4889fe	                            mov rsi, rdi	       682	getchar.c	FUNCTION_26
0x4000fb7	      0x48897c2408	                mov qword [rsp + 8], rdi	       682	getchar.c	FUNCTION_26
0x4000fbc	            0xeb47	                           jmp 0x4001005	       685	getchar.c	FUNCTION_26	WHILE_1
0x4000fbe	            0x6690	                                     nop	       685	getchar.c	FUNCTION_26	WHILE_1
0x4000fc0	            0x3c80	                            cmp al, 0x80	       687	getchar.c	FUNCTION_26	WHILE_1	IF_1
0x4000fc2	            0x750c	                           jne 0x4000fd0	       687	getchar.c	FUNCTION_26	WHILE_1	IF_1
0x4000fc4	        0x807e0100	                   cmp byte [rsi + 1], 0	       687	getchar.c	FUNCTION_26	WHILE_1	IF_1
0x4000fc8	            0x7406	                            je 0x4000fd0	       687	getchar.c	FUNCTION_26	WHILE_1	IF_1
0x4000fca	        0x807e0200	                   cmp byte [rsi + 2], 0	       687	getchar.c	FUNCTION_26	WHILE_1	IF_1
0x4000fce	            0x7548	                           jne 0x4001018	       687	getchar.c	FUNCTION_26	WHILE_1	IF_1
0x4000fd0	      0x488d7c2408	                      lea rdi, [rsp + 8]	       696	getchar.c	FUNCTION_26	WHILE_1	ELSE_1	CALL_2
0x4000fd5	      0xe800000000	                          call 0x4000fda	       696	getchar.c	FUNCTION_26	WHILE_1	ELSE_1	CALL_2
0x4000fda	          0x83f81b	                           cmp eax, 0x1b	       700	getchar.c	FUNCTION_26	WHILE_1	ELSE_1	IF_2
0x4000fdd	            0x7715	                            ja 0x4000ff4	       700	getchar.c	FUNCTION_26	WHILE_1	ELSE_1	IF_2
0x4000fdf	            0x89c1	                            mov ecx, eax	       700	getchar.c	FUNCTION_26	WHILE_1	ELSE_1	IF_2
0x4000fe1	      0xba00240008	                      mov edx, 0x8002400	       700	getchar.c	FUNCTION_26	WHILE_1	ELSE_1	IF_2
0x4000fe6	          0x48d3ea	                             shr rdx, cl	       700	getchar.c	FUNCTION_26	WHILE_1	ELSE_1	IF_2
0x4000fe9	          0x83e201	                              and edx, 1	       701	getchar.c	FUNCTION_26	WHILE_1	ELSE_1	IF_2
0x4000fec	      0xba20000000	                           mov edx, 0x20	       701	getchar.c	FUNCTION_26	WHILE_1	ELSE_1	IF_2
0x4000ff1	           0xf45c2	                         cmovne eax, edx	       701	getchar.c	FUNCTION_26	WHILE_1	ELSE_1	IF_2
0x4000ff4	            0x89c6	                            mov esi, eax	       715	getchar.c	FUNCTION_27	CALL_1
0x4000ff6	      0xbf00000000	                              mov edi, 0	       715	getchar.c	FUNCTION_27	CALL_1
0x4000ffb	      0xe8f0f1ffff	                  call sym.add_char_buff	       715	getchar.c	FUNCTION_27	CALL_1
0x4001000	      0x488b742408	                mov rsi, qword [rsp + 8]	       715	getchar.c	FUNCTION_27	CALL_1
0x4001005	           0xfb606	                   movzx eax, byte [rsi]	       685	getchar.c	FUNCTION_26	WHILE_1
0x4001008	            0x84c0	                             test al, al	       685	getchar.c	FUNCTION_26	WHILE_1
0x400100a	            0x75b4	                           jne 0x4000fc0	       685	getchar.c	FUNCTION_26	WHILE_1
0x400100c	        0x4883c418	                           add rsp, 0x18	       705	getchar.c	FUNCTION_26
0x4001010	              0xc3	                                     ret	       705	getchar.c	FUNCTION_26
0x4001011	     0xf1f80000000	                         nop dword [rax]	       705	getchar.c	FUNCTION_26
0x4001018	      0xba03000000	                              mov edx, 3	       671	getchar.c	FUNCTION_25	CALL_1
0x400101d	      0xbf00000000	                              mov edi, 0	       671	getchar.c	FUNCTION_25	CALL_1
0x4001022	      0xe859f0ffff	                       call sym.add_buff	       671	getchar.c	FUNCTION_25	CALL_1
0x4001027	      0x488b442408	                mov rax, qword [rsp + 8]	       691	getchar.c	FUNCTION_26	WHILE_1	IF_1
0x400102c	        0x488d7003	                      lea rsi, [rax + 3]	       691	getchar.c	FUNCTION_26	WHILE_1	IF_1
0x4001030	      0x4889742408	                mov qword [rsp + 8], rsi	       691	getchar.c	FUNCTION_26	WHILE_1	IF_1
0x4001035	            0xebce	                           jmp 0x4001005	       691	getchar.c	FUNCTION_26	WHILE_1	IF_1
get_inserted	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,1:IF,0:DO,0:FOR,0	3
0x40009f0	            0x31f6	                            xor esi, esi	       221	getchar.c	FUNCTION_4	CALL_1
0x40009f2	      0xbf00000000	                              mov edi, 0	       221	getchar.c	FUNCTION_4	CALL_1
0x40009f7	      0xe994fbffff	             jmp sym.get_buffcont.isra.5	       221	getchar.c	FUNCTION_4	CALL_1
makemap	WHILE,0:ELSE,5:functions,0:SWITCH,1:CALL,19:IF,25:DO,1:FOR,6	482
0x4006a40	            0x4157	                                push r15	      4764	getchar.c	ELSE_2	FUNCTION_82
0x4006a42	            0x4156	                                push r14	      4764	getchar.c	ELSE_2	FUNCTION_82
0x4006a44	          0x4989ff	                            mov r15, rdi	      4764	getchar.c	ELSE_2	FUNCTION_82
0x4006a47	            0x4155	                                push r13	      4764	getchar.c	ELSE_2	FUNCTION_82
0x4006a49	            0x4154	                                push r12	      4764	getchar.c	ELSE_2	FUNCTION_82
0x4006a4b	              0x55	                                push rbp	      4764	getchar.c	ELSE_2	FUNCTION_82
0x4006a4c	              0x53	                                push rbx	      4764	getchar.c	ELSE_2	FUNCTION_82
0x4006a4d	        0x4883ec38	                           sub rsp, 0x38	      4764	getchar.c	ELSE_2	FUNCTION_82
0x4006a51	    0x8b0d00000000	            mov ecx, dword [0x04006a57] 	      3802	getchar.c	FUNCTION_68	IF_1
0x4006a57	      0x4889742408	                mov qword [rsp + 8], rsi	      4764	getchar.c	ELSE_2	FUNCTION_82
0x4006a5c	            0x85c9	                           test ecx, ecx	      3802	getchar.c	FUNCTION_68	IF_1
0x4006a5e	     0xf8494030000	                            je 0x4006df8	      3802	getchar.c	FUNCTION_68	IF_1
0x4006a64	          0x4531f6	                          xor r14d, r14d	      3802	getchar.c	FUNCTION_68	IF_1
0x4006a67	          0x4531ed	                          xor r13d, r13d	      3802	getchar.c	FUNCTION_68	IF_1
0x4006a6a	          0x4585ed	                         test r13d, r13d	      3802	getchar.c	FUNCTION_68	IF_1
0x4006a6d	      0xb800000000	                              mov eax, 0	      3802	getchar.c	FUNCTION_68	IF_1
0x4006a72	      0xb900000000	                              mov ecx, 0	      3802	getchar.c	FUNCTION_68	IF_1
0x4006a77	        0x480f45c1	                         cmovne rax, rcx	      3802	getchar.c	FUNCTION_68	IF_1
0x4006a7b	    0xc744242c0100	               mov dword [rsp + 0x2c], 1	      4764	getchar.c	ELSE_2	FUNCTION_82
0x4006a83	    0x48c744241800	               mov qword [rsp + 0x18], 0	      4764	getchar.c	ELSE_2	FUNCTION_82
0x4006a8c	      0x4889442420	             mov qword [rsp + 0x20], rax	      4764	getchar.c	ELSE_2	FUNCTION_82
0x4006a91	          0x4585ed	                         test r13d, r13d	      4783	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2	IF_1
0x4006a94	     0xf8423070000	                            je 0x40071bd	      4783	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2	IF_1
0x4006a9a	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      4785	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2	IF_1	IF_2
0x4006aa0	            0x756e	                           jne 0x4006b10	      4785	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2	IF_1	IF_2
0x4006aa2	      0x488b442408	                mov rax, qword [rsp + 8]	      4788	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2	IF_1	IF_3
0x4006aa7	          0x4885c0	                           test rax, rax	      4788	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2	IF_1	IF_3
0x4006aaa	     0xf842c040000	                            je 0x4006edc	      4788	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2	IF_1	IF_3
0x4006ab0	    0x488b98c01100	          mov rbx, qword [rax + 0x11c0] 	      4789	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2	IF_1	IF_3
0x4006ab7	          0x4885db	                           test rbx, rbx	      4804	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x4006aba	     0xf84b7020000	                            je 0x4006d77	      4804	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x4006ac0	      0x44896c2428	            mov dword [rsp + 0x28], r13d	      4804	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x4006ac5	        0x837b28fe	cmp dword [rbx + 0x28], 0xfffffffffffffffe	      4807	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	IF_5
0x4006ac9	     0xf8489020000	                            je 0x4006d58	      4807	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	IF_5
0x4006acf	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      4812	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4
0x4006ad3	           0xfb602	                   movzx eax, byte [rdx]	      4812	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4
0x4006ad6	            0x84c0	                             test al, al	      4812	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4
0x4006ad8	            0x7516	                           jne 0x4006af0	      4812	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4
0x4006ada	      0xe9b1020000	                           jmp 0x4006d90	      4812	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4
0x4006adf	              0x90	                                     nop	      4812	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4
0x4006ae0	         0xfb64201	               movzx eax, byte [rdx + 1]	      4812	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4
0x4006ae4	        0x4883c201	                              add rdx, 1	      4812	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4
0x4006ae8	            0x84c0	                             test al, al	      4812	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4
0x4006aea	     0xf84a0020000	                            je 0x4006d90	      4812	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4
0x4006af0	            0x3c80	                            cmp al, 0x80	      4813	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4	IF_6
0x4006af2	            0x75ec	                           jne 0x4006ae0	      4813	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4	IF_6
0x4006af4	         0xfb64201	               movzx eax, byte [rdx + 1]	      4813	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4	IF_6
0x4006af8	            0x3cfd	                            cmp al, 0xfd	      4813	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4	IF_6
0x4006afa	            0x75e8	                           jne 0x4006ae4	      4813	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4	IF_6
0x4006afc	        0x807a0252	                cmp byte [rdx + 2], 0x52	      4814	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4	IF_6
0x4006b00	     0xf8452020000	                            je 0x4006d58	      4814	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4	IF_6
0x4006b06	        0x4883c201	                              add rdx, 1	      4812	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4
0x4006b0a	            0xebd4	                           jmp 0x4006ae0	      4812	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4
0x4006b0c	         0xf1f4000	                         nop dword [rax]	      4812	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4
0x4006b10	        0x4183c501	                             add r13d, 1	      4780	getchar.c	ELSE_2	FUNCTION_82	FOR_1
0x4006b14	        0x4183fd02	                             cmp r13d, 2	      4780	getchar.c	ELSE_2	FUNCTION_82	FOR_1
0x4006b18	     0xf854cffffff	                           jne 0x4006a6a	      4780	getchar.c	ELSE_2	FUNCTION_82	FOR_1
0x4006b1e	          0x4585f6	                         test r14d, r14d	      4961	getchar.c	FUNCTION_82	ELSE_2	IF_24
0x4006b21	      0xb801000000	                              mov eax, 1	      4967	getchar.c	FUNCTION_82	ELSE_2
0x4006b26	            0x750f	                           jne 0x4006b37	      4961	getchar.c	FUNCTION_82	ELSE_2	IF_24
0x4006b28	        0x4883c438	                           add rsp, 0x38	      4968	getchar.c	FUNCTION_82	ELSE_2
0x4006b2c	              0x5b	                                 pop rbx	      4968	getchar.c	FUNCTION_82	ELSE_2
0x4006b2d	              0x5d	                                 pop rbp	      4968	getchar.c	FUNCTION_82	ELSE_2
0x4006b2e	            0x415c	                                 pop r12	      4968	getchar.c	FUNCTION_82	ELSE_2
0x4006b30	            0x415d	                                 pop r13	      4968	getchar.c	FUNCTION_82	ELSE_2
0x4006b32	            0x415e	                                 pop r14	      4968	getchar.c	FUNCTION_82	ELSE_2
0x4006b34	            0x415f	                                 pop r15	      4968	getchar.c	FUNCTION_82	ELSE_2
0x4006b36	              0xc3	                                     ret	      4968	getchar.c	FUNCTION_82	ELSE_2
0x4006b37	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_28
0x4006b39	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_28
0x4006b3e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_28
0x4006b43	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_28
0x4006b46	      0xe800000000	                          call 0x4006b4b	        97	stdio2.h	CALL_28
0x4006b4b	            0x85c0	                           test eax, eax	      4962	getchar.c	FUNCTION_82	ELSE_2	IF_24	IF_25
0x4006b4d	     0xf88ed010000	                            js 0x4006d40	      4962	getchar.c	FUNCTION_82	ELSE_2	IF_24	IF_25
0x4006b53	          0x4c89ff	                            mov rdi, r15	      4963	getchar.c	FUNCTION_82	ELSE_2	IF_24	IF_25	CALL_18
0x4006b56	      0xe800000000	                          call 0x4006b5b	      4963	getchar.c	FUNCTION_82	ELSE_2	IF_24	IF_25	CALL_18
0x4006b5b	            0x85c0	                           test eax, eax	      4963	getchar.c	FUNCTION_82	ELSE_2	IF_24	IF_25	CALL_18
0x4006b5d	     0xf88dd010000	                            js 0x4006d40	      4963	getchar.c	FUNCTION_82	ELSE_2	IF_24	IF_25	CALL_18
0x4006b63	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_28
0x4006b65	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_28
0x4006b6a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_28
0x4006b6f	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_28
0x4006b72	      0xe800000000	                          call 0x4006b77	        97	stdio2.h	CALL_28
0x4006b77	            0x85c0	                           test eax, eax	      4964	getchar.c	FUNCTION_82	ELSE_2	IF_24	IF_25
0x4006b79	     0xf88c1010000	                            js 0x4006d40	      4964	getchar.c	FUNCTION_82	ELSE_2	IF_24	IF_25
0x4006b7f	          0x4c89ff	                            mov rdi, r15	      4965	getchar.c	FUNCTION_82	ELSE_2	IF_24	IF_25	CALL_19
0x4006b82	      0xe800000000	                          call 0x4006b87	      4965	getchar.c	FUNCTION_82	ELSE_2	IF_24	IF_25	CALL_19
0x4006b87	            0xf7d0	                                 not eax	      4904	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006b89	          0xc1e81f	                           shr eax, 0x1f	      4904	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006b8c	            0xeb9a	                           jmp 0x4006b28	      4904	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006b8e	      0x3d07100000	                         cmp eax, 0x1007	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006b93	     0xf851f040000	                           jne 0x4006fb8	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006b99	    0x48c744241000	               mov qword [rsp + 0x10], 0	      4826	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	IF_8
0x4006ba2	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x4006ba5	            0x31ed	                            xor ebp, ebp	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x4006ba7	          0x4531ed	                          xor r13d, r13d	      4822	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x4006baa	      0xe90a010000	                           jmp 0x4006cb9	      4822	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x4006baf	              0x90	                                     nop	      4822	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x4006bb0	          0x8b5328	            mov edx, dword [rbx + 0x28] 	      4930	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_16
0x4006bb3	            0x85d2	                           test edx, edx	      4930	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_16
0x4006bb5	            0x741c	                            je 0x4006bd3	      4930	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_16
0x4006bb7	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_28
0x4006bb9	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_28
0x4006bbe	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_28
0x4006bc3	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_28
0x4006bc6	      0xe800000000	                          call 0x4006bcb	        97	stdio2.h	CALL_28
0x4006bcb	            0x85c0	                           test eax, eax	      4930	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_16
0x4006bcd	     0xf886d010000	                            js 0x4006d40	      4930	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_16
0x4006bd3	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4932	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_17	CALL_7
0x4006bd8	          0x4c89fe	                            mov rsi, r15	      4932	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_17	CALL_7
0x4006bdb	      0xe800000000	                          call 0x4006be0	      4932	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_17	CALL_7
0x4006be0	            0x85c0	                           test eax, eax	      4932	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_17	CALL_7
0x4006be2	     0xf8858010000	                            js 0x4006d40	      4932	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_17	CALL_7
0x4006be8	    0x48837c240800	                  cmp qword [rsp + 8], 0	      4934	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_18	CALL_8
0x4006bee	            0x7415	                            je 0x4006c05	      4934	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_18	CALL_8
0x4006bf0	          0x4c89fe	                            mov rsi, r15	      4934	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_18	CALL_8
0x4006bf3	      0xbf00000000	                              mov edi, 0	      4934	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_18	CALL_8
0x4006bf8	      0xe800000000	                          call 0x4006bfd	      4934	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_18	CALL_8
0x4006bfd	            0x85c0	                           test eax, eax	      4934	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_18	CALL_8
0x4006bff	     0xf883b010000	                            js 0x4006d40	      4934	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_18	CALL_8
0x4006c05	        0x807b2d00	                cmp byte [rbx + 0x2d], 0	      4936	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_19	CALL_9
0x4006c09	     0xf85e1020000	                           jne 0x4006ef0	      4936	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_19	CALL_9
0x4006c0f	        0x807b2c00	                cmp byte [rbx + 0x2c], 0	      4938	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_20	CALL_10
0x4006c13	     0xf85f6020000	                           jne 0x4006f0f	      4938	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_20	CALL_10
0x4006c19	        0x837b28fe	cmp dword [rbx + 0x28], 0xfffffffffffffffe	      4941	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_21
0x4006c1d	     0xf840b030000	                            je 0x4006f2e	      4941	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_21
0x4006c23	        0x807b2e00	                cmp byte [rbx + 0x2e], 0	      4944	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_22	CALL_12
0x4006c27	            0x7415	                            je 0x4006c3e	      4944	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_22	CALL_12
0x4006c29	          0x4c89fe	                            mov rsi, r15	      4944	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_22	CALL_12
0x4006c2c	      0xbf00000000	                              mov edi, 0	      4944	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_22	CALL_12
0x4006c31	      0xe800000000	                          call 0x4006c36	      4944	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_22	CALL_12
0x4006c36	            0x85c0	                           test eax, eax	      4944	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_22	CALL_12
0x4006c38	     0xf8802010000	                            js 0x4006d40	      4944	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_22	CALL_12
0x4006c3e	          0x4c89fe	                            mov rsi, r15	      4948	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_13
0x4006c41	      0xbf20000000	                           mov edi, 0x20	      4948	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_13
0x4006c46	      0xe800000000	                          call 0x4006c4b	      4948	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_13
0x4006c4b	            0x85c0	                           test eax, eax	      4948	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_13
0x4006c4d	     0xf88ed000000	                            js 0x4006d40	      4948	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_13
0x4006c53	        0x488b7308	                mov rsi, qword [rbx + 8]	      4949	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_14
0x4006c57	            0x31d2	                            xor edx, edx	      4949	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_14
0x4006c59	          0x4c89ff	                            mov rdi, r15	      4949	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_14
0x4006c5c	      0xe800000000	                          call 0x4006c61	      4949	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_14
0x4006c61	            0x85c0	                           test eax, eax	      4949	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_14
0x4006c63	     0xf84d7000000	                            je 0x4006d40	      4949	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_14
0x4006c69	          0x4c89fe	                            mov rsi, r15	      4950	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_15
0x4006c6c	      0xbf20000000	                           mov edi, 0x20	      4950	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_15
0x4006c71	      0xe800000000	                          call 0x4006c76	      4950	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_15
0x4006c76	            0x85c0	                           test eax, eax	      4950	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_15
0x4006c78	     0xf88c2000000	                            js 0x4006d40	      4950	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_15
0x4006c7e	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      4951	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_16
0x4006c82	      0xba01000000	                              mov edx, 1	      4951	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_16
0x4006c87	          0x4c89ff	                            mov rdi, r15	      4951	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_16
0x4006c8a	      0xe800000000	                          call 0x4006c8f	      4951	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_16
0x4006c8f	            0x85c0	                           test eax, eax	      4951	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_16
0x4006c91	     0xf84a9000000	                            je 0x4006d40	      4951	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_16
0x4006c97	          0x4c89ff	                            mov rdi, r15	      4952	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_17
0x4006c9a	      0xe800000000	                          call 0x4006c9f	      4952	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_17
0x4006c9f	            0x85c0	                           test eax, eax	      4952	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_17
0x4006ca1	     0xf8899000000	                            js 0x4006d40	      4952	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_17
0x4006ca7	          0x4189ed	                           mov r13d, ebp	      4952	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_17
0x4006caa	          0x4489e5	                           mov ebp, r12d	      4955	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1
0x4006cad	          0x4531e4	                          xor r12d, r12d	      4956	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1
0x4006cb0	          0x4584ed	                         test r13b, r13b	      4957	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1
0x4006cb3	     0xf849f000000	                            je 0x4006d58	      4957	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1
0x4006cb9	          0x4585f6	                         test r14d, r14d	      4910	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10
0x4006cbc	            0x7562	                           jne 0x4006d20	      4910	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10
0x4006cbe	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      4912	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_11
0x4006cc2	           0xfb601	                   movzx eax, byte [rcx]	      4912	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_11
0x4006cc5	            0x84c0	                             test al, al	      4912	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_11
0x4006cc7	     0xf8583020000	                           jne 0x4006f50	      4912	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_11
0x4006ccd	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_28
0x4006ccf	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_28
0x4006cd4	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_28
0x4006cd9	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_28
0x4006cdc	      0xe800000000	                          call 0x4006ce1	        97	stdio2.h	CALL_28
0x4006ce1	            0x85c0	                           test eax, eax	      4921	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13	IF_14
0x4006ce3	            0x785b	                            js 0x4006d40	      4921	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13	IF_14
0x4006ce5	          0x4c89ff	                            mov rdi, r15	      4922	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13	IF_14	CALL_4
0x4006ce8	      0xe800000000	                          call 0x4006ced	      4922	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13	IF_14	CALL_4
0x4006ced	            0x85c0	                           test eax, eax	      4922	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13	IF_14	CALL_4
0x4006cef	            0x784f	                            js 0x4006d40	      4922	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13	IF_14	CALL_4
0x4006cf1	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_28
0x4006cf3	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_28
0x4006cf8	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_28
0x4006cfd	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_28
0x4006d00	      0xe800000000	                          call 0x4006d05	        97	stdio2.h	CALL_28
0x4006d05	            0x85c0	                           test eax, eax	      4923	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13	IF_14
0x4006d07	            0x7837	                            js 0x4006d40	      4923	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13	IF_14
0x4006d09	          0x4c89ff	                            mov rdi, r15	      4924	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13	IF_14	CALL_5
0x4006d0c	      0xe800000000	                          call 0x4006d11	      4924	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13	IF_14	CALL_5
0x4006d11	            0x85c0	                           test eax, eax	      4924	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13	IF_14	CALL_5
0x4006d13	            0x782b	                            js 0x4006d40	      4924	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13	IF_14	CALL_5
0x4006d15	    0x41be01000000	                             mov r14d, 1	      4924	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13	IF_14	CALL_5
0x4006d1b	       0xf1f440000	                   nop dword [rax + rax]	      4924	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13	IF_14	CALL_5
0x4006d20	          0x4584ed	                         test r13b, r13b	      4928	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_15	CALL_6
0x4006d23	     0xf8487feffff	                            je 0x4006bb0	      4928	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_15	CALL_6
0x4006d29	        0x410fb6fd	                         movzx edi, r13b	      4928	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_15	CALL_6
0x4006d2d	          0x4c89fe	                            mov rsi, r15	      4928	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_15	CALL_6
0x4006d30	      0xe800000000	                          call 0x4006d35	      4928	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_15	CALL_6
0x4006d35	            0x85c0	                           test eax, eax	      4928	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_15	CALL_6
0x4006d37	     0xf8973feffff	                           jns 0x4006bb0	      4928	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_15	CALL_6
0x4006d3d	           0xf1f00	                         nop dword [rax]	      4928	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_15	CALL_6
0x4006d40	            0x31c0	                            xor eax, eax	      4925	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13	IF_14
0x4006d42	        0x4883c438	                           add rsp, 0x38	      4968	getchar.c	FUNCTION_82	ELSE_2
0x4006d46	              0x5b	                                 pop rbx	      4968	getchar.c	FUNCTION_82	ELSE_2
0x4006d47	              0x5d	                                 pop rbp	      4968	getchar.c	FUNCTION_82	ELSE_2
0x4006d48	            0x415c	                                 pop r12	      4968	getchar.c	FUNCTION_82	ELSE_2
0x4006d4a	            0x415d	                                 pop r13	      4968	getchar.c	FUNCTION_82	ELSE_2
0x4006d4c	            0x415e	                                 pop r14	      4968	getchar.c	FUNCTION_82	ELSE_2
0x4006d4e	            0x415f	                                 pop r15	      4968	getchar.c	FUNCTION_82	ELSE_2
0x4006d50	              0xc3	                                     ret	      4968	getchar.c	FUNCTION_82	ELSE_2
0x4006d51	     0xf1f80000000	                         nop dword [rax]	      4968	getchar.c	FUNCTION_82	ELSE_2
0x4006d58	          0x488b1b	                    mov rbx, qword [rbx]	      4804	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x4006d5b	          0x4885db	                           test rbx, rbx	      4804	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x4006d5e	     0xf8561fdffff	                           jne 0x4006ac5	      4804	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x4006d64	      0x448b6c2428	           mov r13d, dword [rsp + 0x28] 	      4804	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x4006d69	    0x817c242c0001	          cmp dword [rsp + 0x2c], 0x100 	      4781	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2
0x4006d71	     0xf8499fdffff	                            je 0x4006b10	      4781	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2
0x4006d77	    0x488344241801	               add qword [rsp + 0x18], 1	      4781	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2
0x4006d7d	      0x8344242c01	               add dword [rsp + 0x2c], 1	      4781	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2
0x4006d82	      0xe90afdffff	                           jmp 0x4006a91	      4781	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2
0x4006d87	    0x660f1f840000	                    nop word [rax + rax]	      4781	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2
0x4006d90	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      4825	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	IF_8
0x4006d94	            0x85c0	                           test eax, eax	      4825	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	IF_8
0x4006d96	     0xf84d8030000	                            je 0x4007174	      4825	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	IF_8
0x4006d9c	          0x8b4324	            mov eax, dword [rbx + 0x24] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006d9f	          0x83f818	                           cmp eax, 0x18	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006da2	     0xf84f1fdffff	                            je 0x4006b99	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006da8	            0x7f5e	                            jg 0x4006e08	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006daa	          0x83f805	                              cmp eax, 5	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006dad	     0xf8487030000	                            je 0x400713a	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006db3	     0xf8ea7000000	                           jle 0x4006e60	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006db9	          0x83f807	                              cmp eax, 7	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006dbc	     0xf843b030000	                            je 0x40070fd	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006dc2	     0xf8c18030000	                            jl 0x40070e0	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006dc8	          0x83f808	                              cmp eax, 8	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006dcb	     0xf840c020000	                            je 0x4006fdd	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006dd1	          0x83f810	                           cmp eax, 0x10	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006dd4	     0xf85e6020000	                           jne 0x40070c0	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006dda	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006ddf	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x4006de2	            0x31ed	                            xor ebp, ebp	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x4006de4	    0x41bd69000000	                          mov r13d, 0x69	      4894	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006dea	      0x4889442410	             mov qword [rsp + 0x10], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006def	      0xe9c5feffff	                           jmp 0x4006cb9	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006df4	         0xf1f4000	                         nop dword [rax]	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006df8	      0xe87397ffff	        call sym.validate_maphash.part.2	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006dfd	      0xe962fcffff	                           jmp 0x4006a64	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006e02	    0x660f1f440000	                    nop word [rax + rax]	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006e08	      0x3d03100000	                         cmp eax, 0x1003	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006e0d	     0xf8444030000	                            je 0x4007157	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006e13	     0xf8e82000000	                           jle 0x4006e9b	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006e19	      0x3d06100000	                         cmp eax, 0x1006	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006e1e	     0xf84f9020000	                            je 0x400711d	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006e24	     0xf8f64fdffff	                            jg 0x4006b8e	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006e2a	      0x3d04100000	                         cmp eax, 0x1004	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006e2f	     0xf84c2010000	                            je 0x4006ff7	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006e35	      0x3d05100000	                         cmp eax, 0x1005	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006e3a	     0xf8580020000	                           jne 0x40070c0	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006e40	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006e45	    0x41bc6f000000	                          mov r12d, 0x6f	      4880	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006e4b	      0xbd73000000	                           mov ebp, 0x73	      4879	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006e50	    0x41bd6e000000	                          mov r13d, 0x6e	      4878	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006e56	      0x4889442410	             mov qword [rsp + 0x10], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006e5b	      0xe959feffff	                           jmp 0x4006cb9	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006e60	          0x83f802	                              cmp eax, 2	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006e63	     0xf843d020000	                            je 0x40070a6	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006e69	     0xf8efe010000	                           jle 0x400706d	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006e6f	          0x83f803	                              cmp eax, 3	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006e72	     0xf84b9010000	                            je 0x4007031	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006e78	          0x83f804	                              cmp eax, 4	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006e7b	     0xf853f020000	                           jne 0x40070c0	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006e81	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006e86	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x4006e89	            0x31ed	                            xor ebp, ebp	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x4006e8b	    0x41bd6f000000	                          mov r13d, 0x6f	      4843	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006e91	      0x4889442410	             mov qword [rsp + 0x10], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006e96	      0xe91efeffff	                           jmp 0x4006cb9	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006e9b	      0x3d00100000	                         cmp eax, 0x1000	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006ea0	     0xf84e6010000	                            je 0x400708c	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006ea6	     0xf8ea2010000	                           jle 0x400704e	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006eac	      0x3d01100000	                         cmp eax, 0x1001	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006eb1	     0xf845d010000	                            je 0x4007014	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006eb7	      0x3d02100000	                         cmp eax, 0x1002	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006ebc	     0xf85fe010000	                           jne 0x40070c0	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006ec2	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006ec7	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x4006eca	            0x31ed	                            xor ebp, ebp	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x4006ecc	    0x41bd76000000	                          mov r13d, 0x76	      4858	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006ed2	      0x4889442410	             mov qword [rsp + 0x10], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006ed7	      0xe9ddfdffff	                           jmp 0x4006cb9	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006edc	    0x488b1d000000	            mov rbx, qword [0x04006ee3] 	      4792	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2	IF_1	ELSE_1
0x4006ee3	      0xe9cffbffff	                           jmp 0x4006ab7	      4792	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2	IF_1	ELSE_1
0x4006ee8	     0xf1f84000000	                   nop dword [rax + rax]	      4792	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2	IF_1	ELSE_1
0x4006ef0	          0x4c89fe	                            mov rsi, r15	      4936	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_19	CALL_9
0x4006ef3	      0xbf00000000	                              mov edi, 0	      4936	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_19	CALL_9
0x4006ef8	      0xe800000000	                          call 0x4006efd	      4936	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_19	CALL_9
0x4006efd	            0x85c0	                           test eax, eax	      4936	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_19	CALL_9
0x4006eff	     0xf883bfeffff	                            js 0x4006d40	      4936	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_19	CALL_9
0x4006f05	        0x807b2c00	                cmp byte [rbx + 0x2c], 0	      4938	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_20	CALL_10
0x4006f09	     0xf840afdffff	                            je 0x4006c19	      4938	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_20	CALL_10
0x4006f0f	          0x4c89fe	                            mov rsi, r15	      4938	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_20	CALL_10
0x4006f12	      0xbf00000000	                              mov edi, 0	      4938	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_20	CALL_10
0x4006f17	      0xe800000000	                          call 0x4006f1c	      4938	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_20	CALL_10
0x4006f1c	            0x85c0	                           test eax, eax	      4938	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_20	CALL_10
0x4006f1e	     0xf881cfeffff	                            js 0x4006d40	      4938	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_20	CALL_10
0x4006f24	        0x837b28fe	cmp dword [rbx + 0x28], 0xfffffffffffffffe	      4941	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_21
0x4006f28	     0xf85f5fcffff	                           jne 0x4006c23	      4941	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_21
0x4006f2e	          0x4c89fe	                            mov rsi, r15	      4942	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_21	CALL_11
0x4006f31	      0xbf00000000	                              mov edi, 0	      4942	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_21	CALL_11
0x4006f36	      0xe800000000	                          call 0x4006f3b	      4942	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_21	CALL_11
0x4006f3b	            0x85c0	                           test eax, eax	      4942	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_21	CALL_11
0x4006f3d	     0xf89e0fcffff	                           jns 0x4006c23	      4942	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_21	CALL_11
0x4006f43	            0x31c0	                            xor eax, eax	      4925	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13	IF_14
0x4006f45	      0xe9f8fdffff	                           jmp 0x4006d42	      4925	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13	IF_14
0x4006f4a	    0x660f1f440000	                    nop word [rax + rax]	      4925	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13	IF_14
0x4006f50	        0x488b7308	                mov rsi, qword [rbx + 8]	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x4006f54	           0xfb616	                   movzx edx, byte [rsi]	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x4006f57	            0x84d2	                             test dl, dl	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x4006f59	            0x7515	                           jne 0x4006f70	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x4006f5b	            0xeb32	                           jmp 0x4006f8f	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x4006f5d	           0xf1f00	                         nop dword [rax]	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x4006f60	          0x80fa0a	                             cmp dl, 0xa	      4917	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6	IF_12
0x4006f63	            0x7410	                            je 0x4006f75	      4917	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6	IF_12
0x4006f65	        0x4883c601	                              add rsi, 1	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x4006f69	           0xfb616	                   movzx edx, byte [rsi]	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x4006f6c	            0x84d2	                             test dl, dl	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x4006f6e	            0x741f	                            je 0x4006f8f	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x4006f70	          0x80fa80	                            cmp dl, 0x80	      4917	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6	IF_12
0x4006f73	            0x75eb	                           jne 0x4006f60	      4917	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6	IF_12
0x4006f75	    0x41be01000000	                             mov r14d, 1	      4918	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6	IF_12
0x4006f7b	            0xebe8	                           jmp 0x4006f65	      4918	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6	IF_12
0x4006f7d	           0xf1f00	                         nop dword [rax]	      4918	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6	IF_12
0x4006f80	            0x3c0a	                             cmp al, 0xa	      4917	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6	IF_12
0x4006f82	            0x740f	                            je 0x4006f93	      4917	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6	IF_12
0x4006f84	        0x4883c101	                              add rcx, 1	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x4006f88	           0xfb601	                   movzx eax, byte [rcx]	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x4006f8b	            0x84c0	                             test al, al	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x4006f8d	            0x7415	                            je 0x4006fa4	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x4006f8f	            0x3c80	                            cmp al, 0x80	      4917	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6	IF_12
0x4006f91	            0x75ed	                           jne 0x4006f80	      4917	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6	IF_12
0x4006f93	        0x4883c101	                              add rcx, 1	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x4006f97	           0xfb601	                   movzx eax, byte [rcx]	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x4006f9a	    0x41be01000000	                             mov r14d, 1	      4918	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6	IF_12
0x4006fa0	            0x84c0	                             test al, al	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x4006fa2	            0x75eb	                           jne 0x4006f8f	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x4006fa4	          0x4585f6	                         test r14d, r14d	      4919	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13
0x4006fa7	     0xf8473fdffff	                            je 0x4006d20	      4919	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13
0x4006fad	      0xe91bfdffff	                           jmp 0x4006ccd	      4919	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13
0x4006fb2	    0x660f1f440000	                    nop word [rax + rax]	      4919	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13
0x4006fb8	      0x3d00200000	                         cmp eax, 0x2000	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006fbd	     0xf85fd000000	                           jne 0x40070c0	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006fc3	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006fc8	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x4006fcb	            0x31ed	                            xor ebp, ebp	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x4006fcd	    0x41bd74000000	                          mov r13d, 0x74	      4900	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006fd3	      0x4889442410	             mov qword [rsp + 0x10], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006fd8	      0xe9dcfcffff	                           jmp 0x4006cb9	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006fdd	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006fe2	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x4006fe5	            0x31ed	                            xor ebp, ebp	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x4006fe7	    0x41bd63000000	                          mov r13d, 0x63	      4891	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006fed	      0x4889442410	             mov qword [rsp + 0x10], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006ff2	      0xe9c2fcffff	                           jmp 0x4006cb9	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006ff7	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4006ffc	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x4006fff	      0xbd6f000000	                           mov ebp, 0x6f	      4866	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007004	    0x41bd73000000	                          mov r13d, 0x73	      4865	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400700a	      0x4889442410	             mov qword [rsp + 0x10], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400700f	      0xe9a5fcffff	                           jmp 0x4006cb9	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007014	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007019	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400701c	      0xbd73000000	                           mov ebp, 0x73	      4851	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007021	    0x41bd6e000000	                          mov r13d, 0x6e	      4850	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007027	      0x4889442410	             mov qword [rsp + 0x10], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400702c	      0xe988fcffff	                           jmp 0x4006cb9	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007031	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007036	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x4007039	      0xbd78000000	                           mov ebp, 0x78	      4847	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400703e	    0x41bd6e000000	                          mov r13d, 0x6e	      4846	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007044	      0x4889442410	             mov qword [rsp + 0x10], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007049	      0xe96bfcffff	                           jmp 0x4006cb9	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400704e	          0x83f820	                           cmp eax, 0x20	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007051	            0x756d	                           jne 0x40070c0	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007053	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007058	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400705b	            0x31ed	                            xor ebp, ebp	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400705d	    0x41bd6c000000	                          mov r13d, 0x6c	      4897	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007063	      0x4889442410	             mov qword [rsp + 0x10], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007068	      0xe94cfcffff	                           jmp 0x4006cb9	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400706d	          0x83f801	                              cmp eax, 1	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007070	            0x754e	                           jne 0x40070c0	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007072	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007077	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400707a	            0x31ed	                            xor ebp, ebp	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400707c	    0x41bd6e000000	                          mov r13d, 0x6e	      4834	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007082	      0x4889442410	             mov qword [rsp + 0x10], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007087	      0xe92dfcffff	                           jmp 0x4006cb9	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400708c	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007091	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x4007094	            0x31ed	                            xor ebp, ebp	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x4007096	    0x41bd73000000	                          mov r13d, 0x73	      4840	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400709c	      0x4889442410	             mov qword [rsp + 0x10], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x40070a1	      0xe913fcffff	                           jmp 0x4006cb9	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x40070a6	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x40070ab	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x40070ae	            0x31ed	                            xor ebp, ebp	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x40070b0	    0x41bd78000000	                          mov r13d, 0x78	      4837	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x40070b6	      0x4889442410	             mov qword [rsp + 0x10], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x40070bb	      0xe9f9fbffff	                           jmp 0x4006cb9	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x40070c0	      0xba05000000	                              mov edx, 5	      4903	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1	CALL_3
0x40070c5	      0xbe00000000	                              mov esi, 0	      4903	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1	CALL_3
0x40070ca	            0x31ff	                            xor edi, edi	      4903	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1	CALL_3
0x40070cc	      0xe800000000	                          call 0x40070d1	      4903	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1	CALL_3
0x40070d1	          0x4889c7	                            mov rdi, rax	      4903	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1	CALL_3
0x40070d4	      0xe800000000	                          call 0x40070d9	      4903	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1	CALL_3
0x40070d9	            0x31c0	                            xor eax, eax	      4904	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x40070db	      0xe948faffff	                           jmp 0x4006b28	      4904	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x40070e0	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x40070e5	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x40070e8	      0xbd6f000000	                           mov ebp, 0x6f	      4862	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x40070ed	    0x41bd78000000	                          mov r13d, 0x78	      4861	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x40070f3	      0x4889442410	             mov qword [rsp + 0x10], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x40070f8	      0xe9bcfbffff	                           jmp 0x4006cb9	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x40070fd	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007102	    0x41bc6f000000	                          mov r12d, 0x6f	      4875	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007108	      0xbd78000000	                           mov ebp, 0x78	      4874	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400710d	    0x41bd6e000000	                          mov r13d, 0x6e	      4873	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007113	      0x4889442410	             mov qword [rsp + 0x10], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007118	      0xe99cfbffff	                           jmp 0x4006cb9	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400711d	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007122	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x4007125	      0xbd6f000000	                           mov ebp, 0x6f	      4884	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400712a	    0x41bd76000000	                          mov r13d, 0x76	      4883	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007130	      0x4889442410	             mov qword [rsp + 0x10], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007135	      0xe97ffbffff	                           jmp 0x4006cb9	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400713a	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400713f	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x4007142	      0xbd6f000000	                           mov ebp, 0x6f	      4855	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007147	    0x41bd6e000000	                          mov r13d, 0x6e	      4854	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400714d	      0x4889442410	             mov qword [rsp + 0x10], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007152	      0xe962fbffff	                           jmp 0x4006cb9	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007157	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400715c	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400715f	      0xbd76000000	                           mov ebp, 0x76	      4870	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007164	    0x41bd6e000000	                          mov r13d, 0x6e	      4869	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400716a	      0x4889442410	             mov qword [rsp + 0x10], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400716f	      0xe945fbffff	                           jmp 0x4006cb9	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007174	          0x8b4324	            mov eax, dword [rbx + 0x24] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007177	          0x83f818	                           cmp eax, 0x18	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400717a	            0x7466	                            je 0x40071e2	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400717c	     0xf8e28fcffff	                           jle 0x4006daa	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007182	      0x3d03100000	                         cmp eax, 0x1003	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007187	            0x74ce	                            je 0x4007157	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007189	     0xf8e0cfdffff	                           jle 0x4006e9b	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400718f	      0x3d06100000	                         cmp eax, 0x1006	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007194	            0x7487	                            je 0x400711d	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x4007196	     0xf8e8efcffff	                           jle 0x4006e2a	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400719c	      0x3d07100000	                         cmp eax, 0x1007	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x40071a1	     0xf8511feffff	                           jne 0x4006fb8	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x40071a7	    0x48c744241000	               mov qword [rsp + 0x10], 0	      4828	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4
0x40071b0	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x40071b3	            0x31ed	                            xor ebp, ebp	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x40071b5	          0x4531ed	                          xor r13d, r13d	      4822	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x40071b8	      0xe9fcfaffff	                           jmp 0x4006cb9	      4822	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x40071bd	      0x488b442408	                mov rax, qword [rsp + 8]	      4797	getchar.c	FUNCTION_82	FOR_1	FOR_2	IF_4
0x40071c2	          0x4885c0	                           test rax, rax	      4797	getchar.c	FUNCTION_82	FOR_1	FOR_2	IF_4
0x40071c5	            0x7431	                            je 0x40071f8	      4797	getchar.c	FUNCTION_82	FOR_1	FOR_2	IF_4
0x40071c7	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4798	getchar.c	FUNCTION_82	FOR_1	FOR_2	IF_4
0x40071cc	    0x488b9cc8c009	   mov rbx, qword [rax + rcx*8 + 0x9c0] 	      4798	getchar.c	FUNCTION_82	FOR_1	FOR_2	IF_4
0x40071d4	          0x4885db	                           test rbx, rbx	      4804	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x40071d7	     0xf85e3f8ffff	                           jne 0x4006ac0	      4804	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x40071dd	      0xe987fbffff	                           jmp 0x4006d69	      4804	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x40071e2	    0x48c744241000	               mov qword [rsp + 0x10], 0	      4888	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1	IF_9
0x40071eb	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x40071ee	            0x31ed	                            xor ebp, ebp	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x40071f0	          0x4531ed	                          xor r13d, r13d	      4822	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x40071f3	      0xe9c1faffff	                           jmp 0x4006cb9	      4822	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x40071f8	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4801	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3
0x40071fd	    0x488b1cc50000	                  mov rbx, qword [rax*8]	      4801	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3
0x4007205	            0xebcd	                           jmp 0x40071d4	      4801	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3
before_blocking	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,2:IF,1:DO,0:FOR,0	14
0x4001c00	        0x4883ec08	                              sub rsp, 8	      1522	getchar.c	FUNCTION_52
0x4001c04	      0xbe01000000	                              mov esi, 1	      1546	getchar.c	FUNCTION_53	IF_2	CALL_2
0x4001c09	      0xbf01000000	                              mov edi, 1	      1546	getchar.c	FUNCTION_53	IF_2	CALL_2
0x4001c0e	      0xe800000000	                          call 0x4001c13	      1546	getchar.c	FUNCTION_53	IF_2	CALL_2
0x4001c13	    0x8b0500000000	            mov eax, dword [0x04001c19] 	      1525	getchar.c	FUNCTION_52	IF_1
0x4001c19	    0xc70500000000	               mov dword [0x04001c23], 0	      1547	getchar.c	FUNCTION_53	IF_2
0x4001c23	            0x85c0	                           test eax, eax	      1525	getchar.c	FUNCTION_52	IF_1
0x4001c25	            0x7509	                           jne 0x4001c30	      1525	getchar.c	FUNCTION_52	IF_1
0x4001c27	        0x4883c408	                              add rsp, 8	      1528	getchar.c	FUNCTION_52
0x4001c2b	              0xc3	                                     ret	      1528	getchar.c	FUNCTION_52
0x4001c2c	         0xf1f4000	                         nop dword [rax]	      1528	getchar.c	FUNCTION_52
0x4001c30	            0x31ff	                            xor edi, edi	      1526	getchar.c	FUNCTION_52	CALL_2
0x4001c32	        0x4883c408	                              add rsp, 8	      1528	getchar.c	FUNCTION_52
0x4001c36	      0xe900000000	                           jmp 0x4001c3b	      1526	getchar.c	FUNCTION_52	CALL_2
check_map	WHILE,0:ELSE,4:functions,0:SWITCH,0:CALL,3:IF,11:DO,0:FOR,3	134
0x40073e0	            0x4157	                                push r15	      5190	getchar.c	FUNCTION_85
0x40073e2	            0x4156	                                push r14	      5190	getchar.c	FUNCTION_85
0x40073e4	            0x4155	                                push r13	      5190	getchar.c	FUNCTION_85
0x40073e6	            0x4154	                                push r12	      5190	getchar.c	FUNCTION_85
0x40073e8	          0x4189f5	                           mov r13d, esi	      5190	getchar.c	FUNCTION_85
0x40073eb	              0x55	                                push rbp	      5190	getchar.c	FUNCTION_85
0x40073ec	              0x53	                                push rbx	      5190	getchar.c	FUNCTION_85
0x40073ed	          0x4889fd	                            mov rbp, rdi	      5190	getchar.c	FUNCTION_85
0x40073f0	            0x89d3	                            mov ebx, edx	      5190	getchar.c	FUNCTION_85
0x40073f2	          0x4189cc	                           mov r12d, ecx	      5190	getchar.c	FUNCTION_85
0x40073f5	        0x4883ec38	                           sub rsp, 0x38	      5190	getchar.c	FUNCTION_85
0x40073f9	    0x8b3500000000	            mov esi, dword [0x040073ff] 	      3802	getchar.c	FUNCTION_68	IF_1
0x40073ff	      0x4489442414	             mov dword [rsp + 0x14], r8d	      5190	getchar.c	FUNCTION_85
0x4007404	      0x4c894c2420	              mov qword [rsp + 0x20], r9	      5190	getchar.c	FUNCTION_85
0x4007409	            0x85f6	                           test esi, esi	      3802	getchar.c	FUNCTION_68	IF_1
0x400740b	     0xf84a0010000	                            je 0x40075b1	      3802	getchar.c	FUNCTION_68	IF_1
0x4007411	          0x4889ef	                            mov rdi, rbp	      5201	getchar.c	FUNCTION_85	CALL_2
0x4007414	      0xe800000000	                          call 0x4007419	      5201	getchar.c	FUNCTION_85	CALL_2
0x4007419	          0x4189c7	                           mov r15d, eax	      5201	getchar.c	FUNCTION_85	CALL_2
0x400741c	    0x488b05000000	            mov rax, qword [0x04007423] 	      5214	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1	IF_3
0x4007423	    0xc74424040100	                  mov dword [rsp + 4], 1	      5203	getchar.c	FUNCTION_85	FOR_1
0x400742b	      0x4889442418	             mov qword [rsp + 0x18], rax	      5214	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1	IF_3
0x4007430	    0x488b05000000	            mov rax, qword [0x04007437] 	      5217	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1	ELSE_1
0x4007437	      0x4889442428	             mov qword [rsp + 0x28], rax	      5217	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1	ELSE_1
0x400743c	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	      5208	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1
0x4007440	          0x4589ee	                          mov r14d, r13d	      5208	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1
0x4007443	    0xc74424100100	               mov dword [rsp + 0x10], 1	      5190	getchar.c	FUNCTION_85
0x400744b	    0x48c744240800	                  mov qword [rsp + 8], 0	      5190	getchar.c	FUNCTION_85
0x4007454	          0x4589fd	                          mov r13d, r15d	      5190	getchar.c	FUNCTION_85
0x4007457	            0x85c9	                           test ecx, ecx	      5208	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1
0x4007459	     0xf84d2000000	                            je 0x4007531	      5208	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1
0x400745f	    0x48837c240800	                  cmp qword [rsp + 8], 0	      5210	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1	IF_2
0x4007465	     0xf85ed000000	                           jne 0x4007558	      5210	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1	IF_2
0x400746b	        0x8b542404	                mov edx, dword [rsp + 4]	      5213	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1	IF_3
0x400746f	            0x85d2	                           test edx, edx	      5213	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1	IF_3
0x4007471	     0xf8444010000	                            je 0x40075bb	      5213	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1	IF_3
0x4007477	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5214	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1	IF_3
0x400747c	    0x4c8bb8c01100	          mov r15, qword [rax + 0x11c0] 	      5214	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1	IF_3
0x4007483	          0x4d85ff	                           test r15, r15	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x4007486	            0x7518	                           jne 0x40074a0	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x4007488	      0xe98d000000	                           jmp 0x400751a	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400748d	           0xf1f00	                         nop dword [rax]	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x4007490	          0x4139c5	                           cmp r13d, eax	      5229	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5
0x4007493	            0x7419	                            je 0x40074ae	      5229	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5
0x4007495	           0xf1f00	                         nop dword [rax]	      5229	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5
0x4007498	          0x4d8b3f	                    mov r15, qword [r15]	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400749b	          0x4d85ff	                           test r15, r15	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400749e	            0x7470	                            je 0x4007510	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x40074a0	        0x45857724	          test dword [r15 + 0x24], r14d 	      5229	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5
0x40074a4	            0x74f2	                            je 0x4007498	      5229	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5
0x40074a6	            0x85db	                           test ebx, ebx	      5229	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5
0x40074a8	        0x418b4720	            mov eax, dword [r15 + 0x20] 	      5229	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5
0x40074ac	            0x75e2	                           jne 0x4007490	      5229	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5
0x40074ae	          0x4139c5	                           cmp r13d, eax	      5229	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5
0x40074b1	            0x89c2	                            mov edx, eax	      5229	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5
0x40074b3	        0x498b7f08	                mov rdi, qword [r15 + 8]	      5235	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4
0x40074b7	        0x410f4ed5	                        cmovle edx, r13d	      5235	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4
0x40074bb	          0x4585e4	                         test r12d, r12d	      5236	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7
0x40074be	            0x7409	                            je 0x40074c9	      5236	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7
0x40074c0	          0x803f80	                    cmp byte [rdi], 0x80	      5236	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7
0x40074c3	     0xf84bf000000	                            je 0x4007588	      5236	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7
0x40074c9	          0x4863d2	                         movsxd rdx, edx	      5243	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	CALL_3
0x40074cc	          0x4889ee	                            mov rsi, rbp	      5243	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	CALL_3
0x40074cf	      0xe800000000	                          call 0x40074d4	      5243	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	CALL_3
0x40074d4	            0x85c0	                           test eax, eax	      5243	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	CALL_3
0x40074d6	            0x75c0	                           jne 0x4007498	      5243	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	CALL_3
0x40074d8	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      5245	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	IF_10
0x40074dd	          0x4d89fe	                            mov r14, r15	      5245	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	IF_10
0x40074e0	          0x4885c0	                           test rax, rax	      5245	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	IF_10
0x40074e3	            0x7403	                            je 0x40074e8	      5245	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	IF_10
0x40074e5	          0x4c8938	                    mov qword [rax], r15	      5246	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	IF_10
0x40074e8	    0x48837c247000	               cmp qword [rsp + 0x70], 0	      5247	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	IF_11
0x40074ee	            0x740b	                            je 0x40074fb	      5247	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	IF_11
0x40074f0	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      5249	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	IF_11
0x40074f5	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      5249	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	IF_11
0x40074f9	            0x8908	                    mov dword [rax], ecx	      5249	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	IF_11
0x40074fb	        0x498b4610	            mov rax, qword [r14 + 0x10] 	      5253	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9
0x40074ff	        0x4883c438	                           add rsp, 0x38	      5260	getchar.c	FUNCTION_85
0x4007503	              0x5b	                                 pop rbx	      5260	getchar.c	FUNCTION_85
0x4007504	              0x5d	                                 pop rbp	      5260	getchar.c	FUNCTION_85
0x4007505	            0x415c	                                 pop r12	      5260	getchar.c	FUNCTION_85
0x4007507	            0x415d	                                 pop r13	      5260	getchar.c	FUNCTION_85
0x4007509	            0x415e	                                 pop r14	      5260	getchar.c	FUNCTION_85
0x400750b	            0x415f	                                 pop r15	      5260	getchar.c	FUNCTION_85
0x400750d	              0xc3	                                     ret	      5260	getchar.c	FUNCTION_85
0x400750e	            0x6690	                                     nop	      5260	getchar.c	FUNCTION_85
0x4007510	    0x817c24100001	          cmp dword [rsp + 0x10], 0x100 	      5206	getchar.c	FUNCTION_85	FOR_1	FOR_2
0x4007518	            0x743e	                            je 0x4007558	      5206	getchar.c	FUNCTION_85	FOR_1	FOR_2
0x400751a	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	      5208	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1
0x400751e	    0x488344240801	                  add qword [rsp + 8], 1	      5208	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1
0x4007524	      0x8344241001	               add dword [rsp + 0x10], 1	      5208	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1
0x4007529	            0x85c9	                           test ecx, ecx	      5208	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1
0x400752b	     0xf852effffff	                           jne 0x400745f	      5208	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1
0x4007531	        0x8b442404	                mov eax, dword [rsp + 4]	      5220	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_2	IF_4
0x4007535	            0x85c0	                           test eax, eax	      5220	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_2	IF_4
0x4007537	     0xf8488000000	                            je 0x40075c5	      5220	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_2	IF_4
0x400753d	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5221	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_2	IF_4
0x4007542	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5221	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_2	IF_4
0x4007547	    0x4c8bbcc8c009	   mov r15, qword [rax + rcx*8 + 0x9c0] 	      5221	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_2	IF_4
0x400754f	      0xe947ffffff	                           jmp 0x400749b	      5221	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_2	IF_4
0x4007554	         0xf1f4000	                         nop dword [rax]	      5221	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_2	IF_4
0x4007558	      0x836c240401	                  sub dword [rsp + 4], 1	      5203	getchar.c	FUNCTION_85	FOR_1
0x400755d	          0x4589ef	                          mov r15d, r13d	      5203	getchar.c	FUNCTION_85	FOR_1
0x4007560	          0x4589f5	                          mov r13d, r14d	      5203	getchar.c	FUNCTION_85	FOR_1
0x4007563	        0x8b442404	                mov eax, dword [rsp + 4]	      5203	getchar.c	FUNCTION_85	FOR_1
0x4007567	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      5203	getchar.c	FUNCTION_85	FOR_1
0x400756a	     0xf85ccfeffff	                           jne 0x400743c	      5203	getchar.c	FUNCTION_85	FOR_1
0x4007570	        0x4883c438	                           add rsp, 0x38	      5260	getchar.c	FUNCTION_85
0x4007574	            0x31c0	                            xor eax, eax	      5259	getchar.c	FUNCTION_85
0x4007576	              0x5b	                                 pop rbx	      5260	getchar.c	FUNCTION_85
0x4007577	              0x5d	                                 pop rbp	      5260	getchar.c	FUNCTION_85
0x4007578	            0x415c	                                 pop r12	      5260	getchar.c	FUNCTION_85
0x400757a	            0x415d	                                 pop r13	      5260	getchar.c	FUNCTION_85
0x400757c	            0x415e	                                 pop r14	      5260	getchar.c	FUNCTION_85
0x400757e	            0x415f	                                 pop r15	      5260	getchar.c	FUNCTION_85
0x4007580	              0xc3	                                     ret	      5260	getchar.c	FUNCTION_85
0x4007581	     0xf1f80000000	                         nop dword [rax]	      5260	getchar.c	FUNCTION_85
0x4007588	        0x807f01fc	                cmp byte [rdi + 1], 0xfc	      5236	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7
0x400758c	     0xf8537ffffff	                           jne 0x40074c9	      5236	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7
0x4007592	        0x807f0200	                   cmp byte [rdi + 2], 0	      5237	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7
0x4007596	     0xf842dffffff	                            je 0x40074c9	      5237	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7
0x400759c	          0x8d48fe	                      lea ecx, [rax - 2]	      5240	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7	IF_8
0x400759f	        0x4883c703	                              add rdi, 3	      5239	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7
0x40075a3	          0x83e803	                              sub eax, 3	      5241	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7	IF_8
0x40075a6	          0x4139cd	                           cmp r13d, ecx	      5241	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7	IF_8
0x40075a9	           0xf4dd0	                         cmovge edx, eax	      5241	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7	IF_8
0x40075ac	      0xe918ffffff	                           jmp 0x40074c9	      5241	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7	IF_8
0x40075b1	      0xe8ba8fffff	        call sym.validate_maphash.part.2	      5241	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7	IF_8
0x40075b6	      0xe956feffff	                           jmp 0x4007411	      5241	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7	IF_8
0x40075bb	      0x4c8b7c2428	            mov r15, qword [rsp + 0x28] 	      5217	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1	ELSE_1
0x40075c0	      0xe9befeffff	                           jmp 0x4007483	      5217	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1	ELSE_1
0x40075c5	      0x488b442408	                mov rax, qword [rsp + 8]	      5224	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3
0x40075ca	    0x4c8b3cc50000	                  mov r15, qword [rax*8]	      5224	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3
0x40075d2	      0xe9c4feffff	                           jmp 0x400749b	      5224	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3
map_mode_to_chars	WHILE,0:ELSE,6:functions,0:SWITCH,0:CALL,12:IF,10:DO,0:FOR,0	96
0x4002480	              0x53	                                push rbx	      3967	getchar.c	FUNCTION_72
0x4002481	      0xba07000000	                              mov edx, 7	      3970	getchar.c	FUNCTION_72	CALL_1
0x4002486	            0x89fb	                            mov ebx, edi	      3967	getchar.c	FUNCTION_72
0x4002488	      0xbe01000000	                              mov esi, 1	      3970	getchar.c	FUNCTION_72	CALL_1
0x400248d	        0x4883ec20	                           sub rsp, 0x20	      3967	getchar.c	FUNCTION_72
0x4002491	          0x4889e7	                            mov rdi, rsp	      3970	getchar.c	FUNCTION_72	CALL_1
0x4002494	    0x64488b042528	                mov rax, qword fs:[0x28]	      3967	getchar.c	FUNCTION_72
0x400249d	      0x4889442418	             mov qword [rsp + 0x18], rax	      3967	getchar.c	FUNCTION_72
0x40024a2	            0x31c0	                            xor eax, eax	      3967	getchar.c	FUNCTION_72
0x40024a4	      0xe800000000	                          call 0x40024a9	      3970	getchar.c	FUNCTION_72	CALL_1
0x40024a9	            0x89d8	                            mov eax, ebx	      3972	getchar.c	FUNCTION_72	IF_1
0x40024ab	          0x83e018	                           and eax, 0x18	      3972	getchar.c	FUNCTION_72	IF_1
0x40024ae	          0x83f818	                           cmp eax, 0x18	      3972	getchar.c	FUNCTION_72	IF_1
0x40024b1	     0xf8421010000	                            je 0x40025d8	      3972	getchar.c	FUNCTION_72	IF_1
0x40024b7	          0xf6c310	                           test bl, 0x10	      3974	getchar.c	FUNCTION_72	ELSE_1	IF_2
0x40024ba	     0xf85b0000000	                           jne 0x4002570	      3974	getchar.c	FUNCTION_72	ELSE_1	IF_2
0x40024c0	          0xf6c320	                           test bl, 0x20	      3976	getchar.c	FUNCTION_72	ELSE_2	IF_3
0x40024c3	     0xf85b7000000	                           jne 0x4002580	      3976	getchar.c	FUNCTION_72	ELSE_2	IF_3
0x40024c9	          0xf6c308	                              test bl, 8	      3978	getchar.c	FUNCTION_72	ELSE_3	IF_4
0x40024cc	     0xf8586000000	                           jne 0x4002558	      3978	getchar.c	FUNCTION_72	ELSE_3	IF_4
0x40024d2	            0x89d8	                            mov eax, ebx	      3980	getchar.c	FUNCTION_72	ELSE_4	IF_5
0x40024d4	      0x2507100000	                         and eax, 0x1007	      3980	getchar.c	FUNCTION_72	ELSE_4	IF_5
0x40024d9	      0x3d07100000	                         cmp eax, 0x1007	      3980	getchar.c	FUNCTION_72	ELSE_4	IF_5
0x40024de	     0xf840c010000	                            je 0x40025f0	      3980	getchar.c	FUNCTION_72	ELSE_4	IF_5
0x40024e4	          0xf6c301	                              test bl, 1	      3985	getchar.c	FUNCTION_72	ELSE_5	IF_6
0x40024e7	     0xf85bb000000	                           jne 0x40025a8	      3985	getchar.c	FUNCTION_72	ELSE_5	IF_6
0x40024ed	          0xf6c304	                              test bl, 4	      3987	getchar.c	FUNCTION_72	ELSE_5	IF_7
0x40024f0	     0xf859a000000	                           jne 0x4002590	      3987	getchar.c	FUNCTION_72	ELSE_5	IF_7
0x40024f6	            0x89d8	                            mov eax, ebx	      3989	getchar.c	FUNCTION_72	ELSE_5	IF_8
0x40024f8	      0x2502100000	                         and eax, 0x1002	      3989	getchar.c	FUNCTION_72	ELSE_5	IF_8
0x40024fd	      0x3d02100000	                         cmp eax, 0x1002	      3989	getchar.c	FUNCTION_72	ELSE_5	IF_8
0x4002502	     0xf8400010000	                            je 0x4002608	      3989	getchar.c	FUNCTION_72	ELSE_5	IF_8
0x4002508	          0xf6c302	                              test bl, 2	      3993	getchar.c	FUNCTION_72	ELSE_5	ELSE_6	IF_9
0x400250b	     0xf85af000000	                           jne 0x40025c0	      3993	getchar.c	FUNCTION_72	ELSE_5	ELSE_6	IF_9
0x4002511	          0x80e710	                            and bh, 0x10	      3995	getchar.c	FUNCTION_72	ELSE_5	ELSE_6	IF_10
0x4002514	            0x7412	                            je 0x4002528	      3995	getchar.c	FUNCTION_72	ELSE_5	ELSE_6	IF_10
0x4002516	      0xbe73000000	                           mov esi, 0x73	      3996	getchar.c	FUNCTION_72	ELSE_5	ELSE_6	CALL_11
0x400251b	          0x4889e7	                            mov rdi, rsp	      3996	getchar.c	FUNCTION_72	ELSE_5	ELSE_6	CALL_11
0x400251e	      0xe800000000	                          call 0x4002523	      3996	getchar.c	FUNCTION_72	ELSE_5	ELSE_6	CALL_11
0x4002523	       0xf1f440000	                   nop dword [rax + rax]	      3996	getchar.c	FUNCTION_72	ELSE_5	ELSE_6	CALL_11
0x4002528	            0x31f6	                            xor esi, esi	      4000	getchar.c	FUNCTION_72	CALL_12
0x400252a	          0x4889e7	                            mov rdi, rsp	      4000	getchar.c	FUNCTION_72	CALL_12
0x400252d	      0xe800000000	                          call 0x4002532	      4000	getchar.c	FUNCTION_72	CALL_12
0x4002532	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4002	getchar.c	FUNCTION_72
0x4002537	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4002	getchar.c	FUNCTION_72
0x4002540	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4002	getchar.c	FUNCTION_72
0x4002545	     0xf85cf000000	                           jne 0x400261a	      4002	getchar.c	FUNCTION_72
0x400254b	        0x4883c420	                           add rsp, 0x20	      4002	getchar.c	FUNCTION_72
0x400254f	              0x5b	                                 pop rbx	      4002	getchar.c	FUNCTION_72
0x4002550	              0xc3	                                     ret	      4002	getchar.c	FUNCTION_72
0x4002551	     0xf1f80000000	                         nop dword [rax]	      4002	getchar.c	FUNCTION_72
0x4002558	      0xbe63000000	                           mov esi, 0x63	      3979	getchar.c	FUNCTION_72	ELSE_3	IF_4
0x400255d	          0x4889e7	                            mov rdi, rsp	      3979	getchar.c	FUNCTION_72	ELSE_3	IF_4
0x4002560	      0xe800000000	                          call 0x4002565	      3979	getchar.c	FUNCTION_72	ELSE_3	IF_4
0x4002565	            0xebc1	                           jmp 0x4002528	      3979	getchar.c	FUNCTION_72	ELSE_3	IF_4
0x4002567	    0x660f1f840000	                    nop word [rax + rax]	      3979	getchar.c	FUNCTION_72	ELSE_3	IF_4
0x4002570	      0xbe69000000	                           mov esi, 0x69	      3975	getchar.c	FUNCTION_72	ELSE_1	IF_2
0x4002575	          0x4889e7	                            mov rdi, rsp	      3975	getchar.c	FUNCTION_72	ELSE_1	IF_2
0x4002578	      0xe800000000	                          call 0x400257d	      3975	getchar.c	FUNCTION_72	ELSE_1	IF_2
0x400257d	            0xeba9	                           jmp 0x4002528	      3975	getchar.c	FUNCTION_72	ELSE_1	IF_2
0x400257f	              0x90	                                     nop	      3975	getchar.c	FUNCTION_72	ELSE_1	IF_2
0x4002580	      0xbe6c000000	                           mov esi, 0x6c	      3977	getchar.c	FUNCTION_72	ELSE_2	IF_3
0x4002585	          0x4889e7	                            mov rdi, rsp	      3977	getchar.c	FUNCTION_72	ELSE_2	IF_3
0x4002588	      0xe800000000	                          call 0x400258d	      3977	getchar.c	FUNCTION_72	ELSE_2	IF_3
0x400258d	            0xeb99	                           jmp 0x4002528	      3977	getchar.c	FUNCTION_72	ELSE_2	IF_3
0x400258f	              0x90	                                     nop	      3977	getchar.c	FUNCTION_72	ELSE_2	IF_3
0x4002590	      0xbe6f000000	                           mov esi, 0x6f	      3988	getchar.c	FUNCTION_72	ELSE_5	CALL_8
0x4002595	          0x4889e7	                            mov rdi, rsp	      3988	getchar.c	FUNCTION_72	ELSE_5	CALL_8
0x4002598	      0xe800000000	                          call 0x400259d	      3988	getchar.c	FUNCTION_72	ELSE_5	CALL_8
0x400259d	      0xe954ffffff	                           jmp 0x40024f6	      3988	getchar.c	FUNCTION_72	ELSE_5	CALL_8
0x40025a2	    0x660f1f440000	                    nop word [rax + rax]	      3988	getchar.c	FUNCTION_72	ELSE_5	CALL_8
0x40025a8	      0xbe6e000000	                           mov esi, 0x6e	      3986	getchar.c	FUNCTION_72	ELSE_5	CALL_7
0x40025ad	          0x4889e7	                            mov rdi, rsp	      3986	getchar.c	FUNCTION_72	ELSE_5	CALL_7
0x40025b0	      0xe800000000	                          call 0x40025b5	      3986	getchar.c	FUNCTION_72	ELSE_5	CALL_7
0x40025b5	      0xe933ffffff	                           jmp 0x40024ed	      3986	getchar.c	FUNCTION_72	ELSE_5	CALL_7
0x40025ba	    0x660f1f440000	                    nop word [rax + rax]	      3986	getchar.c	FUNCTION_72	ELSE_5	CALL_7
0x40025c0	      0xbe78000000	                           mov esi, 0x78	      3994	getchar.c	FUNCTION_72	ELSE_5	ELSE_6	CALL_10
0x40025c5	          0x4889e7	                            mov rdi, rsp	      3994	getchar.c	FUNCTION_72	ELSE_5	ELSE_6	CALL_10
0x40025c8	      0xe800000000	                          call 0x40025cd	      3994	getchar.c	FUNCTION_72	ELSE_5	ELSE_6	CALL_10
0x40025cd	      0xe93fffffff	                           jmp 0x4002511	      3994	getchar.c	FUNCTION_72	ELSE_5	ELSE_6	CALL_10
0x40025d2	    0x660f1f440000	                    nop word [rax + rax]	      3994	getchar.c	FUNCTION_72	ELSE_5	ELSE_6	CALL_10
0x40025d8	      0xbe21000000	                           mov esi, 0x21	      3973	getchar.c	FUNCTION_72	CALL_2
0x40025dd	          0x4889e7	                            mov rdi, rsp	      3973	getchar.c	FUNCTION_72	CALL_2
0x40025e0	      0xe800000000	                          call 0x40025e5	      3973	getchar.c	FUNCTION_72	CALL_2
0x40025e5	      0xe93effffff	                           jmp 0x4002528	      3973	getchar.c	FUNCTION_72	CALL_2
0x40025ea	    0x660f1f440000	                    nop word [rax + rax]	      3973	getchar.c	FUNCTION_72	CALL_2
0x40025f0	      0xbe20000000	                           mov esi, 0x20	      3982	getchar.c	FUNCTION_72	ELSE_4	IF_5
0x40025f5	          0x4889e7	                            mov rdi, rsp	      3982	getchar.c	FUNCTION_72	ELSE_4	IF_5
0x40025f8	      0xe800000000	                          call 0x40025fd	      3982	getchar.c	FUNCTION_72	ELSE_4	IF_5
0x40025fd	      0xe926ffffff	                           jmp 0x4002528	      3982	getchar.c	FUNCTION_72	ELSE_4	IF_5
0x4002602	    0x660f1f440000	                    nop word [rax + rax]	      3982	getchar.c	FUNCTION_72	ELSE_4	IF_5
0x4002608	      0xbe76000000	                           mov esi, 0x76	      3990	getchar.c	FUNCTION_72	ELSE_5	CALL_9
0x400260d	          0x4889e7	                            mov rdi, rsp	      3990	getchar.c	FUNCTION_72	ELSE_5	CALL_9
0x4002610	      0xe800000000	                          call 0x4002615	      3990	getchar.c	FUNCTION_72	ELSE_5	CALL_9
0x4002615	      0xe90effffff	                           jmp 0x4002528	      3990	getchar.c	FUNCTION_72	ELSE_5	CALL_9
0x400261a	      0xe800000000	                          call 0x400261f	      4002	getchar.c	FUNCTION_72
vpeekc_nomap	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,1:IF,0:DO,0:FOR,0	21
0x4005070	        0x4883ec08	                              sub rsp, 8	      1862	getchar.c	FUNCTION_58
0x4005074	    0x8b0500000000	            mov eax, dword [0x0400507a] 	      1865	getchar.c	FUNCTION_58
0x400507a	          0x8d4801	                      lea ecx, [rax + 1]	      1865	getchar.c	FUNCTION_58
0x400507d	    0x8b0500000000	            mov eax, dword [0x04005083] 	      1866	getchar.c	FUNCTION_58
0x4005083	    0x890d00000000	            mov dword [0x04005089], ecx 	      1865	getchar.c	FUNCTION_58
0x4005089	          0x8d5001	                      lea edx, [rax + 1]	      1866	getchar.c	FUNCTION_58
0x400508c	    0x8b0500000000	            mov eax, dword [0x04005092] 	      1850	getchar.c	FUNCTION_57	IF_1
0x4005092	    0x891500000000	            mov dword [0x04005098], edx 	      1866	getchar.c	FUNCTION_58
0x4005098	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1850	getchar.c	FUNCTION_57	IF_1
0x400509b	            0x741b	                            je 0x40050b8	      1850	getchar.c	FUNCTION_57	IF_1
0x400509d	          0x83e901	                              sub ecx, 1	      1868	getchar.c	FUNCTION_58
0x40050a0	          0x83ea01	                              sub edx, 1	      1869	getchar.c	FUNCTION_58
0x40050a3	    0x890d00000000	            mov dword [0x040050a9], ecx 	      1868	getchar.c	FUNCTION_58
0x40050a9	    0x891500000000	            mov dword [0x040050af], edx 	      1869	getchar.c	FUNCTION_58
0x40050af	        0x4883c408	                              add rsp, 8	      1871	getchar.c	FUNCTION_58
0x40050b3	              0xc3	                                     ret	      1871	getchar.c	FUNCTION_58
0x40050b4	         0xf1f4000	                         nop dword [rax]	      1871	getchar.c	FUNCTION_58
0x40050b8	      0xe863fdffff	                 call sym.vpeekc.part.10	      1871	getchar.c	FUNCTION_58
0x40050bd	    0x8b0d00000000	            mov ecx, dword [0x040050c3] 	      1871	getchar.c	FUNCTION_58
0x40050c3	    0x8b1500000000	            mov edx, dword [0x040050c9] 	      1871	getchar.c	FUNCTION_58
0x40050c9	            0xebd2	                           jmp 0x400509d	      1871	getchar.c	FUNCTION_58
start_redo	WHILE,1:ELSE,0:functions,0:SWITCH,0:CALL,12:IF,5:DO,0:FOR,0	70
0x4001060	            0x85f6	                           test esi, esi	       749	getchar.c	FUNCTION_29	IF_1	IF_2
0x4001062	            0x745c	                            je 0x40010c0	       749	getchar.c	FUNCTION_29	IF_1	IF_2
0x4001064	    0x488b05000000	            mov rax, qword [0x0400106b] 	       750	getchar.c	FUNCTION_29	IF_1	IF_2
0x400106b	          0x4885c0	                           test rax, rax	       753	getchar.c	FUNCTION_29	IF_1	IF_3
0x400106e	    0x488905000000	            mov qword [0x04001075], rax 	       750	getchar.c	FUNCTION_29	IF_1	IF_2
0x4001075	            0x745c	                            je 0x40010d3	       753	getchar.c	FUNCTION_29	IF_1	IF_3
0x4001077	              0x53	                                push rbx	       828	getchar.c	FUNCTION_31
0x4001078	        0x4883c008	                              add rax, 8	       755	getchar.c	FUNCTION_29	IF_1
0x400107c	          0x4889fb	                            mov rbx, rdi	       755	getchar.c	FUNCTION_29	IF_1
0x400107f	        0x4883ec10	                           sub rsp, 0x10	       828	getchar.c	FUNCTION_31
0x4001083	    0x488905000000	            mov qword [0x0400108a], rax 	       755	getchar.c	FUNCTION_29	IF_1
0x400108a	      0xe831f3ffff	               call sym.read_redo.part.0	       755	getchar.c	FUNCTION_29	IF_1
0x400108f	          0x83f822	                           cmp eax, 0x22	       838	getchar.c	FUNCTION_31	IF_2
0x4001092	     0xf84c8000000	                            je 0x4001160	       838	getchar.c	FUNCTION_31	IF_2
0x4001098	          0x83f876	                           cmp eax, 0x76	       850	getchar.c	FUNCTION_31	IF_4
0x400109b	            0x746b	                            je 0x4001108	       850	getchar.c	FUNCTION_31	IF_4
0x400109d	          0x4885db	                           test rbx, rbx	       861	getchar.c	FUNCTION_31	IF_5
0x40010a0	            0x7543	                           jne 0x40010e5	       861	getchar.c	FUNCTION_31	IF_5
0x40010a2	            0x89c6	                            mov esi, eax	       869	getchar.c	FUNCTION_31	CALL_11
0x40010a4	      0xbf00000000	                              mov edi, 0	       869	getchar.c	FUNCTION_31	CALL_11
0x40010a9	      0xe842f1ffff	                  call sym.add_char_buff	       869	getchar.c	FUNCTION_31	CALL_11
0x40010ae	      0xe89df5ffff	               call sym.copy_redo.isra.6	       870	getchar.c	FUNCTION_31	CALL_12
0x40010b3	        0x4883c410	                           add rsp, 0x10	       872	getchar.c	FUNCTION_31
0x40010b7	      0xb801000000	                              mov eax, 1	       871	getchar.c	FUNCTION_31
0x40010bc	              0x5b	                                 pop rbx	       872	getchar.c	FUNCTION_31
0x40010bd	              0xc3	                                     ret	       872	getchar.c	FUNCTION_31
0x40010be	            0x6690	                                     nop	       872	getchar.c	FUNCTION_31
0x40010c0	    0x488b05000000	            mov rax, qword [0x040010c7] 	       752	getchar.c	FUNCTION_29	IF_1	ELSE_1
0x40010c7	          0x4885c0	                           test rax, rax	       753	getchar.c	FUNCTION_29	IF_1	IF_3
0x40010ca	    0x488905000000	            mov qword [0x040010d1], rax 	       752	getchar.c	FUNCTION_29	IF_1	ELSE_1
0x40010d1	            0x75a4	                           jne 0x4001077	       753	getchar.c	FUNCTION_29	IF_1	IF_3
0x40010d3	            0x31c0	                            xor eax, eax	       833	getchar.c	FUNCTION_31	IF_1
0x40010d5	              0xc3	                                     ret	       833	getchar.c	FUNCTION_31	IF_1
0x40010d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       833	getchar.c	FUNCTION_31	IF_1
0x40010e0	      0xe8dbf2ffff	               call sym.read_redo.part.0	       833	getchar.c	FUNCTION_31	IF_1
0x40010e5	          0x8d50d0	                   lea edx, [rax - 0x30]	       863	getchar.c	FUNCTION_31	IF_5	WHILE_1	CALL_8
0x40010e8	          0x83fa09	                              cmp edx, 9	       863	getchar.c	FUNCTION_31	IF_5	WHILE_1	CALL_8
0x40010eb	            0x76f3	                           jbe 0x40010e0	       863	getchar.c	FUNCTION_31	IF_5	WHILE_1	CALL_8
0x40010ed	          0x4889de	                            mov rsi, rbx	       865	getchar.c	FUNCTION_31	IF_5	CALL_10
0x40010f0	      0xbf00000000	                              mov edi, 0	       865	getchar.c	FUNCTION_31	IF_5	CALL_10
0x40010f5	        0x8944240c	              mov dword [rsp + 0xc], eax	       865	getchar.c	FUNCTION_31	IF_5	CALL_10
0x40010f9	      0xe822f2ffff	                   call sym.add_num_buff	       865	getchar.c	FUNCTION_31	IF_5	CALL_10
0x40010fe	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       865	getchar.c	FUNCTION_31	IF_5	CALL_10
0x4001102	            0xeb9e	                           jmp 0x40010a2	       865	getchar.c	FUNCTION_31	IF_5	CALL_10
0x4001104	         0xf1f4000	                         nop dword [rax]	       865	getchar.c	FUNCTION_31	IF_5	CALL_10
0x4001108	    0x488b05000000	            mov rax, qword [0x0400110f] 	       852	getchar.c	FUNCTION_31	IF_4
0x400110f	    0xc70500000000	               mov dword [0x04001119], 1	       853	getchar.c	FUNCTION_31	IF_4
0x4001119	    0xc70500000000	               mov dword [0x04001123], 0	       854	getchar.c	FUNCTION_31	IF_4
0x4001123	    0xc70500000000	               mov dword [0x0400112d], 1	       855	getchar.c	FUNCTION_31	IF_4
0x400112d	    0xc70500000000	               mov dword [0x04001137], 1	       856	getchar.c	FUNCTION_31	IF_4
0x4001137	        0x488b5040	            mov rdx, qword [rax + 0x40] 	       852	getchar.c	FUNCTION_31	IF_4
0x400113b	        0x488b4038	            mov rax, qword [rax + 0x38] 	       852	getchar.c	FUNCTION_31	IF_4
0x400113f	    0x488915000000	            mov qword [0x04001146], rdx 	       852	getchar.c	FUNCTION_31	IF_4
0x4001146	    0x488905000000	            mov qword [0x0400114d], rax 	       852	getchar.c	FUNCTION_31	IF_4
0x400114d	      0xe86ef2ffff	               call sym.read_redo.part.0	       852	getchar.c	FUNCTION_31	IF_4
0x4001152	      0xe946ffffff	                           jmp 0x400109d	       852	getchar.c	FUNCTION_31	IF_4
0x4001157	    0x660f1f840000	                    nop word [rax + rax]	       852	getchar.c	FUNCTION_31	IF_4
0x4001160	      0xba01000000	                              mov edx, 1	       840	getchar.c	FUNCTION_31	IF_2	CALL_3
0x4001165	      0xbe00000000	                              mov esi, 0	       840	getchar.c	FUNCTION_31	IF_2	CALL_3
0x400116a	      0xbf00000000	                              mov edi, 0	       840	getchar.c	FUNCTION_31	IF_2	CALL_3
0x400116f	      0xe80cefffff	                       call sym.add_buff	       840	getchar.c	FUNCTION_31	IF_2	CALL_3
0x4001174	      0xe847f2ffff	               call sym.read_redo.part.0	       840	getchar.c	FUNCTION_31	IF_2	CALL_3
0x4001179	          0x8d50cf	                   lea edx, [rax - 0x31]	       844	getchar.c	FUNCTION_31	IF_2	IF_3
0x400117c	      0xbf00000000	                              mov edi, 0	       846	getchar.c	FUNCTION_31	IF_2	CALL_5
0x4001181	          0x83fa08	                              cmp edx, 8	       845	getchar.c	FUNCTION_31	IF_2	IF_3
0x4001184	          0x83d000	                              adc eax, 0	       845	getchar.c	FUNCTION_31	IF_2	IF_3
0x4001187	            0x89c6	                            mov esi, eax	       846	getchar.c	FUNCTION_31	IF_2	CALL_5
0x4001189	      0xe862f0ffff	                  call sym.add_char_buff	       846	getchar.c	FUNCTION_31	IF_2	CALL_5
0x400118e	      0xe82df2ffff	               call sym.read_redo.part.0	       846	getchar.c	FUNCTION_31	IF_2	CALL_5
0x4001193	      0xe900ffffff	                           jmp 0x4001098	       846	getchar.c	FUNCTION_31	IF_2	CALL_5
closescript	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,2:IF,1:DO,0:FOR,0	29
0x4001790	        0x4883ec08	                              sub rsp, 8	      1486	getchar.c	FUNCTION_49
0x4001794	      0xe800000000	                          call 0x4001799	      1487	getchar.c	FUNCTION_49	CALL_1
0x4001799	    0x48630d000000	         movsxd rcx, dword [0x040017a0] 	      1488	getchar.c	FUNCTION_49
0x40017a0	        0x488d1449	                  lea rdx, [rcx + rcx*2]	      1488	getchar.c	FUNCTION_49
0x40017a4	    0x488b3ccd0000	                  mov rdi, qword [rcx*8]	      1490	getchar.c	FUNCTION_49	CALL_2
0x40017ac	        0x48c1e204	                              shl rdx, 4	      1488	getchar.c	FUNCTION_49
0x40017b0	    0x488d82000000	                          lea rax, [rdx]	      1488	getchar.c	FUNCTION_49
0x40017b7	    0x488b92000000	                    mov rdx, qword [rdx]	      1488	getchar.c	FUNCTION_49
0x40017be	    0x488915000000	            mov qword [0x040017c5], rdx 	      1488	getchar.c	FUNCTION_49
0x40017c5	        0x488b5008	                mov rdx, qword [rax + 8]	      1488	getchar.c	FUNCTION_49
0x40017c9	    0x488915000000	            mov qword [0x040017d0], rdx 	      1488	getchar.c	FUNCTION_49
0x40017d0	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1488	getchar.c	FUNCTION_49
0x40017d4	    0x488915000000	            mov qword [0x040017db], rdx 	      1488	getchar.c	FUNCTION_49
0x40017db	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1488	getchar.c	FUNCTION_49
0x40017df	    0x488915000000	            mov qword [0x040017e6], rdx 	      1488	getchar.c	FUNCTION_49
0x40017e6	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1488	getchar.c	FUNCTION_49
0x40017ea	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1488	getchar.c	FUNCTION_49
0x40017ee	    0x488915000000	            mov qword [0x040017f5], rdx 	      1488	getchar.c	FUNCTION_49
0x40017f5	    0x488905000000	            mov qword [0x040017fc], rax 	      1488	getchar.c	FUNCTION_49
0x40017fc	      0xe800000000	                          call 0x4001801	      1490	getchar.c	FUNCTION_49	CALL_2
0x4001801	    0x486315000000	         movsxd rdx, dword [0x04001808] 	      1491	getchar.c	FUNCTION_49
0x4001808	            0x85d2	                           test edx, edx	      1492	getchar.c	FUNCTION_49	IF_1
0x400180a	    0x48c704d50000	                    mov qword [rdx*8], 0	      1491	getchar.c	FUNCTION_49
0x4001816	            0x7e0c	                           jle 0x4001824	      1492	getchar.c	FUNCTION_49	IF_1
0x4001818	          0x4889d0	                            mov rax, rdx	      1492	getchar.c	FUNCTION_49	IF_1
0x400181b	          0x83e801	                              sub eax, 1	      1493	getchar.c	FUNCTION_49	IF_1
0x400181e	    0x890500000000	            mov dword [0x04001824], eax 	      1493	getchar.c	FUNCTION_49	IF_1
0x4001824	        0x4883c408	                              add rsp, 8	      1494	getchar.c	FUNCTION_49
0x4001828	              0xc3	                                     ret	      1494	getchar.c	FUNCTION_49
input_available	WHILE,0:ELSE,0:functions,0:SWITCH,0:CALL,1:IF,0:DO,0:FOR,0	12
0x40021c0	        0x4883ec08	                              sub rsp, 8	      3156	getchar.c	FUNCTION_65
0x40021c4	      0xe800000000	                          call 0x40021c9	      3157	getchar.c	FUNCTION_65	CALL_1
0x40021c9	            0x85c0	                           test eax, eax	      3159	getchar.c	FUNCTION_65
0x40021cb	      0xba01000000	                              mov edx, 1	      3159	getchar.c	FUNCTION_65
0x40021d0	            0x740d	                            je 0x40021df	      3159	getchar.c	FUNCTION_65
0x40021d2	    0x8b0500000000	            mov eax, dword [0x040021d8] 	      3159	getchar.c	FUNCTION_65
0x40021d8	            0x31d2	                            xor edx, edx	      3159	getchar.c	FUNCTION_65
0x40021da	            0x85c0	                           test eax, eax	      3159	getchar.c	FUNCTION_65
0x40021dc	           0xf95c2	                                setne dl	      3159	getchar.c	FUNCTION_65
0x40021df	            0x89d0	                            mov eax, edx	      3162	getchar.c	FUNCTION_65
0x40021e1	        0x4883c408	                              add rsp, 8	      3162	getchar.c	FUNCTION_65
0x40021e5	              0xc3	                                     ret	      3162	getchar.c	FUNCTION_65
ins_typebuf	WHILE,0:ELSE,6:functions,0:SWITCH,0:CALL,17:IF,15:DO,0:FOR,1	222
0x4001280	            0x4157	                                push r15	       956	getchar.c	FUNCTION_35
0x4001282	            0x4156	                                push r14	       956	getchar.c	FUNCTION_35
0x4001284	            0x4155	                                push r13	       956	getchar.c	FUNCTION_35
0x4001286	            0x4154	                                push r12	       956	getchar.c	FUNCTION_35
0x4001288	          0x4189f4	                           mov r12d, esi	       956	getchar.c	FUNCTION_35
0x400128b	              0x55	                                push rbp	       956	getchar.c	FUNCTION_35
0x400128c	              0x53	                                push rbx	       956	getchar.c	FUNCTION_35
0x400128d	            0x89d3	                            mov ebx, edx	       956	getchar.c	FUNCTION_35
0x400128f	        0x4883ec38	                           sub rsp, 0x38	       956	getchar.c	FUNCTION_35
0x4001293	    0x48833d000000	               cmp qword [0x0400129b], 0	       919	getchar.c	FUNCTION_34	IF_1
0x400129b	      0x48897c2408	                mov qword [rsp + 8], rdi	       956	getchar.c	FUNCTION_35
0x40012a0	        0x894c2418	             mov dword [rsp + 0x18], ecx	       956	getchar.c	FUNCTION_35
0x40012a4	      0x448944241c	             mov dword [rsp + 0x1c], r8d	       956	getchar.c	FUNCTION_35
0x40012a9	     0xf8452030000	                            je 0x4001601	       919	getchar.c	FUNCTION_34	IF_1
0x40012af	    0x8b0500000000	            mov eax, dword [0x040012b5] 	       966	getchar.c	FUNCTION_35	IF_1
0x40012b5	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       969	getchar.c	FUNCTION_35	CALL_2
0x40012ba	      0xba01000000	                              mov edx, 1	       966	getchar.c	FUNCTION_35	IF_1
0x40012bf	          0x83c001	                              add eax, 1	       966	getchar.c	FUNCTION_35	IF_1
0x40012c2	           0xf44c2	                          cmove eax, edx	       966	getchar.c	FUNCTION_35	IF_1
0x40012c5	    0x890500000000	            mov dword [0x040012cb], eax 	       966	getchar.c	FUNCTION_35	IF_1
0x40012cb	      0xe800000000	                          call 0x40012d0	       969	getchar.c	FUNCTION_35	CALL_2
0x40012d0	            0x85db	                           test ebx, ebx	       971	getchar.c	FUNCTION_35	IF_2
0x40012d2	          0x4989c7	                            mov r15, rax	       969	getchar.c	FUNCTION_35	CALL_2
0x40012d5	          0x4189c6	                           mov r14d, eax	       969	getchar.c	FUNCTION_35	CALL_2
0x40012d8	            0x750f	                           jne 0x40012e9	       971	getchar.c	FUNCTION_35	IF_2
0x40012da	    0x8b0500000000	            mov eax, dword [0x040012e0] 	       971	getchar.c	FUNCTION_35	IF_2
0x40012e0	          0x4139c7	                           cmp r15d, eax	       971	getchar.c	FUNCTION_35	IF_2
0x40012e3	     0xf8e97020000	                           jle 0x4001580	       971	getchar.c	FUNCTION_35	IF_2
0x40012e9	    0x8b1500000000	            mov edx, dword [0x040012ef] 	       979	getchar.c	FUNCTION_35	ELSE_1	IF_3
0x40012ef	            0x85d2	                           test edx, edx	       979	getchar.c	FUNCTION_35	ELSE_1	IF_3
0x40012f1	     0xf8421020000	                            je 0x4001518	       979	getchar.c	FUNCTION_35	ELSE_1	IF_3
0x40012f7	    0x468dac3a0e01	          lea r13d, [rdx + r15 + 0x10e] 	       998	getchar.c	FUNCTION_35	ELSE_2
0x40012ff	          0x4585ed	                         test r13d, r13d	       999	getchar.c	FUNCTION_35	ELSE_2	IF_4
0x4001302	     0xf88c0020000	                            js 0x40015c8	       999	getchar.c	FUNCTION_35	ELSE_2	IF_4
0x4001308	          0x4489ef	                           mov edi, r13d	      1005	getchar.c	FUNCTION_35	ELSE_2	CALL_8
0x400130b	      0xe800000000	                          call 0x4001310	      1005	getchar.c	FUNCTION_35	ELSE_2	CALL_8
0x4001310	            0x31d2	                            xor edx, edx	      1007	getchar.c	FUNCTION_35	ELSE_2	IF_5
0x4001312	          0x4885c0	                           test rax, rax	      1006	getchar.c	FUNCTION_35	ELSE_2	IF_5
0x4001315	          0x4889c5	                            mov rbp, rax	      1005	getchar.c	FUNCTION_35	ELSE_2	CALL_8
0x4001318	     0xf84e4010000	                            je 0x4001502	      1006	getchar.c	FUNCTION_35	ELSE_2	IF_5
0x400131e	          0x4489ef	                           mov edi, r13d	      1008	getchar.c	FUNCTION_35	ELSE_2	CALL_9
0x4001321	        0x89542420	             mov dword [rsp + 0x20], edx	      1008	getchar.c	FUNCTION_35	ELSE_2	CALL_9
0x4001325	      0xe800000000	                          call 0x400132a	      1008	getchar.c	FUNCTION_35	ELSE_2	CALL_9
0x400132a	          0x4885c0	                           test rax, rax	      1009	getchar.c	FUNCTION_35	ELSE_2	IF_6
0x400132d	      0x4889442410	             mov qword [rsp + 0x10], rax	      1008	getchar.c	FUNCTION_35	ELSE_2	CALL_9
0x4001332	        0x8b542420	            mov edx, dword [rsp + 0x20] 	      1009	getchar.c	FUNCTION_35	ELSE_2	IF_6
0x4001336	     0xf84cf020000	                            je 0x400160b	      1009	getchar.c	FUNCTION_35	ELSE_2	IF_6
0x400133c	    0x486335000000	         movsxd rsi, dword [0x04001343] 	        59	string3.h	FUNCTION_106	CALL_3
0x4001343	    0x44892d000000	           mov dword [0x0400134a], r13d 	      1014	getchar.c	FUNCTION_35	ELSE_2
0x400134a	        0x488d7d36	                   lea rdi, [rbp + 0x36]	        59	string3.h	FUNCTION_106	CALL_3
0x400134e	    0x480335000000	             add rsi, qword [0x04001355]	        59	string3.h	FUNCTION_106	CALL_3
0x4001355	          0x4c63eb	                         movsxd r13, ebx	      1017	getchar.c	FUNCTION_35	ELSE_2	CALL_11
0x4001358	          0x4c89ea	                            mov rdx, r13	        59	string3.h	FUNCTION_106	CALL_3
0x400135b	      0xe800000000	                          call 0x4001360	        59	string3.h	FUNCTION_106	CALL_3
0x4001360	        0x4d8d5d36	                   lea r11, [r13 + 0x36]	      1020	getchar.c	FUNCTION_35	ELSE_2	CALL_12
0x4001364	      0x488b742408	                mov rsi, qword [rsp + 8]	        59	string3.h	FUNCTION_106	CALL_3
0x4001369	          0x4d63d7	                        movsxd r10, r15d	      1020	getchar.c	FUNCTION_35	ELSE_2	CALL_12
0x400136c	          0x4c89d2	                            mov rdx, r10	        59	string3.h	FUNCTION_106	CALL_3
0x400136f	      0x4c89542420	             mov qword [rsp + 0x20], r10	        59	string3.h	FUNCTION_106	CALL_3
0x4001374	      0x4a8d7c1d00	                    lea rdi, [rbp + r11]	        59	string3.h	FUNCTION_106	CALL_3
0x4001379	      0x4c895c2428	             mov qword [rsp + 0x28], r11	        59	string3.h	FUNCTION_106	CALL_3
0x400137e	      0xe800000000	                          call 0x4001383	        59	string3.h	FUNCTION_106	CALL_3
0x4001383	    0x486335000000	         movsxd rsi, dword [0x0400138a] 	        59	string3.h	FUNCTION_106	CALL_3
0x400138a	      0x4c8b542420	            mov r10, qword [rsp + 0x20] 	      1023	getchar.c	FUNCTION_35	ELSE_2	CALL_13
0x400138f	      0x4c8b5c2428	            mov r11, qword [rsp + 0x28] 	      1023	getchar.c	FUNCTION_35	ELSE_2	CALL_13
0x4001394	    0x8b1500000000	            mov edx, dword [0x0400139a] 	        59	string3.h	FUNCTION_106	CALL_3
0x400139a	        0x4b8d041a	                    lea rax, [r10 + r11]	      1023	getchar.c	FUNCTION_35	ELSE_2	CALL_13
0x400139e	          0x4c01ee	                            add rsi, r13	        59	string3.h	FUNCTION_106	CALL_3
0x40013a1	    0x480335000000	             add rsi, qword [0x040013a8]	        59	string3.h	FUNCTION_106	CALL_3
0x40013a8	            0x29da	                            sub edx, ebx	        59	string3.h	FUNCTION_106	CALL_3
0x40013aa	          0x83c201	                              add edx, 1	        59	string3.h	FUNCTION_106	CALL_3
0x40013ad	      0x488d7c0500	                    lea rdi, [rbp + rax]	        59	string3.h	FUNCTION_106	CALL_3
0x40013b2	      0x4889442408	                mov qword [rsp + 8], rax	      1023	getchar.c	FUNCTION_35	ELSE_2	CALL_13
0x40013b7	          0x4863d2	                         movsxd rdx, edx	        59	string3.h	FUNCTION_106	CALL_3
0x40013ba	      0xe800000000	                          call 0x40013bf	        59	string3.h	FUNCTION_106	CALL_3
0x40013bf	    0x488b3d000000	            mov rdi, qword [0x040013c6] 	      1026	getchar.c	FUNCTION_35	ELSE_2	IF_7
0x40013c6	    0x4881ff000000	                              cmp rdi, 0	      1026	getchar.c	FUNCTION_35	ELSE_2	IF_7
0x40013cd	            0x7405	                            je 0x40013d4	      1026	getchar.c	FUNCTION_35	ELSE_2	IF_7
0x40013cf	      0xe800000000	                          call 0x40013d4	      1027	getchar.c	FUNCTION_35	ELSE_2	CALL_14
0x40013d4	    0x48892d000000	            mov qword [0x040013db], rbp 	      1028	getchar.c	FUNCTION_35	ELSE_2
0x40013db	    0x48632d000000	         movsxd rbp, dword [0x040013e2] 	      1030	getchar.c	FUNCTION_35	ELSE_2	CALL_15
0x40013e2	          0x4c89ea	                            mov rdx, r13	        59	string3.h	FUNCTION_106	CALL_3
0x40013e5	    0x4c8b15000000	            mov r10, qword [0x040013ec] 	      1030	getchar.c	FUNCTION_35	ELSE_2	CALL_15
0x40013ec	      0x488b442410	            mov rax, qword [rsp + 0x10] 	        59	string3.h	FUNCTION_106	CALL_3
0x40013f1	        0x498d342a	                    lea rsi, [r10 + rbp]	        59	string3.h	FUNCTION_106	CALL_3
0x40013f5	        0x488d7836	                   lea rdi, [rax + 0x36]	        59	string3.h	FUNCTION_106	CALL_3
0x40013f9	      0x4c89542420	             mov qword [rsp + 0x20], r10	        59	string3.h	FUNCTION_106	CALL_3
0x40013fe	          0x4901ed	                            add r13, rbp	        59	string3.h	FUNCTION_106	CALL_3
0x4001401	      0xe800000000	                          call 0x4001406	        59	string3.h	FUNCTION_106	CALL_3
0x4001406	    0x8b1500000000	            mov edx, dword [0x0400140c] 	        59	string3.h	FUNCTION_106	CALL_3
0x400140c	      0x4c8b542420	            mov r10, qword [rsp + 0x20] 	        59	string3.h	FUNCTION_106	CALL_3
0x4001411	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        59	string3.h	FUNCTION_106	CALL_3
0x4001416	      0x48037c2410	             add rdi, qword [rsp + 0x10]	        59	string3.h	FUNCTION_106	CALL_3
0x400141b	            0x29da	                            sub edx, ebx	        59	string3.h	FUNCTION_106	CALL_3
0x400141d	        0x4b8d342a	                    lea rsi, [r10 + r13]	        59	string3.h	FUNCTION_106	CALL_3
0x4001421	          0x4863d2	                         movsxd rdx, edx	        59	string3.h	FUNCTION_106	CALL_3
0x4001424	      0xe800000000	                          call 0x4001429	        59	string3.h	FUNCTION_106	CALL_3
0x4001429	    0x488b3d000000	            mov rdi, qword [0x04001430] 	      1035	getchar.c	FUNCTION_35	ELSE_2	IF_8
0x4001430	    0x4881ff000000	                              cmp rdi, 0	      1035	getchar.c	FUNCTION_35	ELSE_2	IF_8
0x4001437	            0x7405	                            je 0x400143e	      1035	getchar.c	FUNCTION_35	ELSE_2	IF_8
0x4001439	      0xe800000000	                          call 0x400143e	      1036	getchar.c	FUNCTION_35	ELSE_2	CALL_17
0x400143e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1037	getchar.c	FUNCTION_35	ELSE_2
0x4001443	    0x44013d000000	            add dword [0x0400144a], r15d	      1041	getchar.c	FUNCTION_35
0x400144a	        0x4183fcfe	            cmp r12d, 0xfffffffffffffffe	      1044	getchar.c	FUNCTION_35	IF_9
0x400144e	    0xc70500000000	           mov dword [0x04001458], 0x36 	      1039	getchar.c	FUNCTION_35	ELSE_2
0x4001458	    0x488905000000	            mov qword [0x0400145f], rax 	      1037	getchar.c	FUNCTION_35	ELSE_2
0x400145f	     0xf844e010000	                            je 0x40015b3	      1044	getchar.c	FUNCTION_35	IF_9
0x4001465	        0x4183fcfd	            cmp r12d, 0xfffffffffffffffd	      1046	getchar.c	FUNCTION_35	ELSE_3	IF_10
0x4001469	     0xf8481010000	                            je 0x40015f0	      1046	getchar.c	FUNCTION_35	ELSE_3	IF_10
0x400146f	          0x4585e4	                         test r12d, r12d	      1061	getchar.c	FUNCTION_35	ELSE_5	IF_12
0x4001472	     0xf88a8010000	                            js 0x4001620	      1061	getchar.c	FUNCTION_35	ELSE_5	IF_12
0x4001478	    0x41ba01000000	                             mov r10d, 1	      1049	getchar.c	FUNCTION_35	ELSE_4
0x400147e	            0x31d2	                            xor edx, edx	      1065	getchar.c	FUNCTION_35	FOR_1
0x4001480	            0x31ff	                            xor edi, edi	      1066	getchar.c	FUNCTION_35	FOR_1
0x4001482	          0x4585ff	                         test r15d, r15d	      1065	getchar.c	FUNCTION_35	FOR_1
0x4001485	            0x7e31	                           jle 0x40014b8	      1065	getchar.c	FUNCTION_35	FOR_1
0x4001487	    0x660f1f840000	                    nop word [rax + rax]	      1065	getchar.c	FUNCTION_35	FOR_1
0x4001490	    0x8b0500000000	            mov eax, dword [0x04001496] 	      1066	getchar.c	FUNCTION_35	FOR_1
0x4001496	            0x89fe	                            mov esi, edi	      1066	getchar.c	FUNCTION_35	FOR_1
0x4001498	             0x1d0	                            add eax, edx	      1066	getchar.c	FUNCTION_35	FOR_1
0x400149a	             0x1d8	                            add eax, ebx	      1066	getchar.c	FUNCTION_35	FOR_1
0x400149c	            0x4898	                                    cdqe	      1066	getchar.c	FUNCTION_35	FOR_1
0x400149e	    0x480305000000	             add rax, qword [0x040014a5]	      1066	getchar.c	FUNCTION_35	FOR_1
0x40014a5	        0x4183ec01	                             sub r12d, 1	      1066	getchar.c	FUNCTION_35	FOR_1
0x40014a9	        0x410f49f2	                        cmovns esi, r10d	      1066	getchar.c	FUNCTION_35	FOR_1
0x40014ad	          0x83c201	                              add edx, 1	      1065	getchar.c	FUNCTION_35	FOR_1
0x40014b0	          0x4139d6	                           cmp r14d, edx	      1065	getchar.c	FUNCTION_35	FOR_1
0x40014b3	          0x408830	                     mov byte [rax], sil	      1066	getchar.c	FUNCTION_35	FOR_1
0x40014b6	            0x75d8	                           jne 0x4001490	      1065	getchar.c	FUNCTION_35	FOR_1
0x40014b8	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	      1072	getchar.c	FUNCTION_35	IF_13
0x40014bc	            0x85c9	                           test ecx, ecx	      1072	getchar.c	FUNCTION_35	IF_13
0x40014be	     0xf84a4000000	                            je 0x4001568	      1072	getchar.c	FUNCTION_35	IF_13
0x40014c4	    0x8b0500000000	            mov eax, dword [0x040014ca] 	      1072	getchar.c	FUNCTION_35	IF_13
0x40014ca	          0x4401f8	                           add eax, r15d	      1073	getchar.c	FUNCTION_35	IF_13
0x40014cd	    0x890500000000	            mov dword [0x040014d3], eax 	      1073	getchar.c	FUNCTION_35	IF_13
0x40014d3	        0x8b54241c	            mov edx, dword [rsp + 0x1c] 	      1074	getchar.c	FUNCTION_35	IF_14
0x40014d7	    0x8b0500000000	            mov eax, dword [0x040014dd] 	      1074	getchar.c	FUNCTION_35	IF_14
0x40014dd	            0x85d2	                           test edx, edx	      1074	getchar.c	FUNCTION_35	IF_14
0x40014df	            0x755f	                           jne 0x4001540	      1074	getchar.c	FUNCTION_35	IF_14
0x40014e1	            0x39c3	                            cmp ebx, eax	      1074	getchar.c	FUNCTION_35	IF_14
0x40014e3	            0x7c5b	                            jl 0x4001540	      1074	getchar.c	FUNCTION_35	IF_14
0x40014e5	    0x8b0500000000	            mov eax, dword [0x040014eb] 	      1079	getchar.c	FUNCTION_35	IF_15
0x40014eb	            0x85c0	                           test eax, eax	      1079	getchar.c	FUNCTION_35	IF_15
0x40014ed	            0x746e	                            je 0x400155d	      1079	getchar.c	FUNCTION_35	IF_15
0x40014ef	            0x85db	                           test ebx, ebx	      1079	getchar.c	FUNCTION_35	IF_15
0x40014f1	            0x756a	                           jne 0x400155d	      1079	getchar.c	FUNCTION_35	IF_15
0x40014f3	        0x428d0c38	                    lea ecx, [rax + r15]	      1080	getchar.c	FUNCTION_35	IF_15
0x40014f7	      0xba01000000	                              mov edx, 1	      1082	getchar.c	FUNCTION_35
0x40014fc	    0x890d00000000	            mov dword [0x04001502], ecx 	      1080	getchar.c	FUNCTION_35	IF_15
0x4001502	        0x4883c438	                           add rsp, 0x38	      1083	getchar.c	FUNCTION_35
0x4001506	            0x89d0	                            mov eax, edx	      1083	getchar.c	FUNCTION_35
0x4001508	              0x5b	                                 pop rbx	      1083	getchar.c	FUNCTION_35
0x4001509	              0x5d	                                 pop rbp	      1083	getchar.c	FUNCTION_35
0x400150a	            0x415c	                                 pop r12	      1083	getchar.c	FUNCTION_35
0x400150c	            0x415d	                                 pop r13	      1083	getchar.c	FUNCTION_35
0x400150e	            0x415e	                                 pop r14	      1083	getchar.c	FUNCTION_35
0x4001510	            0x415f	                                 pop r15	      1083	getchar.c	FUNCTION_35
0x4001512	              0xc3	                                     ret	      1083	getchar.c	FUNCTION_35
0x4001513	       0xf1f440000	                   nop dword [rax + rax]	      1083	getchar.c	FUNCTION_35
0x4001518	    0x8b0500000000	            mov eax, dword [0x0400151e] 	       979	getchar.c	FUNCTION_35	ELSE_1	IF_3
0x400151e	    0x418db7a10000	                   lea esi, [r15 + 0xa1]	       979	getchar.c	FUNCTION_35	ELSE_1	IF_3
0x4001525	            0x39c6	                            cmp esi, eax	       979	getchar.c	FUNCTION_35	ELSE_1	IF_3
0x4001527	     0xf8dcafdffff	                           jge 0x40012f7	       979	getchar.c	FUNCTION_35	ELSE_1	IF_3
0x400152d	          0x4429f8	                           sub eax, r15d	       986	getchar.c	FUNCTION_35	ELSE_1	IF_3
0x4001530	      0x2da2000000	                           sub eax, 0xa2	       986	getchar.c	FUNCTION_35	ELSE_1	IF_3
0x4001535	            0x89c2	                            mov edx, eax	       986	getchar.c	FUNCTION_35	ELSE_1	IF_3
0x4001537	          0xc1ea1f	                           shr edx, 0x1f	       986	getchar.c	FUNCTION_35	ELSE_1	IF_3
0x400153a	             0x1d0	                            add eax, edx	       986	getchar.c	FUNCTION_35	ELSE_1	IF_3
0x400153c	            0xd1f8	                              sar eax, 1	       986	getchar.c	FUNCTION_35	ELSE_1	IF_3
0x400153e	            0xeb43	                           jmp 0x4001583	       986	getchar.c	FUNCTION_35	ELSE_1	IF_3
0x4001540	          0x4401f8	                           add eax, r15d	      1076	getchar.c	FUNCTION_35	IF_14
0x4001543	    0xc70500000000	               mov dword [0x0400154d], 1	      1077	getchar.c	FUNCTION_35	IF_14
0x400154d	    0x890500000000	            mov dword [0x04001553], eax 	      1076	getchar.c	FUNCTION_35	IF_14
0x4001553	    0x8b0500000000	            mov eax, dword [0x04001559] 	      1079	getchar.c	FUNCTION_35	IF_15
0x4001559	            0x85c0	                           test eax, eax	      1079	getchar.c	FUNCTION_35	IF_15
0x400155b	            0x7592	                           jne 0x40014ef	      1079	getchar.c	FUNCTION_35	IF_15
0x400155d	      0xba01000000	                              mov edx, 1	      1082	getchar.c	FUNCTION_35
0x4001562	            0xeb9e	                           jmp 0x4001502	      1082	getchar.c	FUNCTION_35
0x4001564	         0xf1f4000	                         nop dword [rax]	      1082	getchar.c	FUNCTION_35
0x4001568	    0x8b0500000000	            mov eax, dword [0x0400156e] 	      1072	getchar.c	FUNCTION_35	IF_13
0x400156e	            0x39c3	                            cmp ebx, eax	      1072	getchar.c	FUNCTION_35	IF_13
0x4001570	     0xf8d5dffffff	                           jge 0x40014d3	      1072	getchar.c	FUNCTION_35	IF_13
0x4001576	      0xe94fffffff	                           jmp 0x40014ca	      1072	getchar.c	FUNCTION_35	IF_13
0x400157b	       0xf1f440000	                   nop dword [rax + rax]	      1072	getchar.c	FUNCTION_35	IF_13
0x4001580	          0x4429f8	                           sub eax, r15d	       976	getchar.c	FUNCTION_35	IF_2
0x4001583	    0x890500000000	            mov dword [0x04001589], eax 	       986	getchar.c	FUNCTION_35	ELSE_1	IF_3
0x4001589	            0x4898	                                    cdqe	        59	string3.h	FUNCTION_106	CALL_3
0x400158b	    0x480305000000	             add rax, qword [0x04001592]	        59	string3.h	FUNCTION_106	CALL_3
0x4001592	      0x488b742408	                mov rsi, qword [rsp + 8]	        59	string3.h	FUNCTION_106	CALL_3
0x4001597	          0x4963d7	                        movsxd rdx, r15d	        59	string3.h	FUNCTION_106	CALL_3
0x400159a	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_106	CALL_3
0x400159d	      0xe800000000	                          call 0x40015a2	        59	string3.h	FUNCTION_106	CALL_3
0x40015a2	    0x44013d000000	            add dword [0x040015a9], r15d	      1041	getchar.c	FUNCTION_35
0x40015a9	        0x4183fcfe	            cmp r12d, 0xfffffffffffffffe	      1044	getchar.c	FUNCTION_35	IF_9
0x40015ad	     0xf85b2feffff	                           jne 0x4001465	      1044	getchar.c	FUNCTION_35	IF_9
0x40015b3	          0x4589fc	                          mov r12d, r15d	       969	getchar.c	FUNCTION_35	CALL_2
0x40015b6	    0x41ba02000000	                             mov r10d, 2	      1045	getchar.c	FUNCTION_35	IF_9
0x40015bc	      0xe9bdfeffff	                           jmp 0x400147e	      1045	getchar.c	FUNCTION_35	IF_9
0x40015c1	     0xf1f80000000	                         nop dword [rax]	      1045	getchar.c	FUNCTION_35	IF_9
0x40015c8	      0xba05000000	                              mov edx, 5	      1001	getchar.c	FUNCTION_35	ELSE_2	IF_4	CALL_6
0x40015cd	      0xbe00000000	                              mov esi, 0	      1001	getchar.c	FUNCTION_35	ELSE_2	IF_4	CALL_6
0x40015d2	            0x31ff	                            xor edi, edi	      1001	getchar.c	FUNCTION_35	ELSE_2	IF_4	CALL_6
0x40015d4	      0xe800000000	                          call 0x40015d9	      1001	getchar.c	FUNCTION_35	ELSE_2	IF_4	CALL_6
0x40015d9	          0x4889c7	                            mov rdi, rax	      1001	getchar.c	FUNCTION_35	ELSE_2	IF_4	CALL_6
0x40015dc	      0xe800000000	                          call 0x40015e1	      1001	getchar.c	FUNCTION_35	ELSE_2	IF_4	CALL_6
0x40015e1	      0xe800000000	                          call 0x40015e6	      1002	getchar.c	FUNCTION_35	ELSE_2	IF_4	CALL_7
0x40015e6	            0x31d2	                            xor edx, edx	      1003	getchar.c	FUNCTION_35	ELSE_2	IF_4
0x40015e8	      0xe915ffffff	                           jmp 0x4001502	      1003	getchar.c	FUNCTION_35	ELSE_2	IF_4
0x40015ed	           0xf1f00	                         nop dword [rax]	      1003	getchar.c	FUNCTION_35	ELSE_2	IF_4
0x40015f0	    0x41ba04000000	                             mov r10d, 4	      1047	getchar.c	FUNCTION_35	ELSE_3	IF_10
0x40015f6	    0x41bc01000000	                             mov r12d, 1	      1060	getchar.c	FUNCTION_35	IF_11
0x40015fc	      0xe97dfeffff	                           jmp 0x400147e	      1060	getchar.c	FUNCTION_35	IF_11
0x4001601	      0xe82aefffff	            call sym.init_typebuf.part.1	      1060	getchar.c	FUNCTION_35	IF_11
0x4001606	      0xe9a4fcffff	                           jmp 0x40012af	      1060	getchar.c	FUNCTION_35	IF_11
0x400160b	          0x4889ef	                            mov rdi, rbp	      1011	getchar.c	FUNCTION_35	ELSE_2	IF_6	CALL_10
0x400160e	        0x89542408	                mov dword [rsp + 8], edx	      1011	getchar.c	FUNCTION_35	ELSE_2	IF_6	CALL_10
0x4001612	      0xe800000000	                          call 0x4001617	      1011	getchar.c	FUNCTION_35	ELSE_2	IF_6	CALL_10
0x4001617	        0x8b542408	                mov edx, dword [rsp + 8]	      1012	getchar.c	FUNCTION_35	ELSE_2	IF_6
0x400161b	      0xe9e2feffff	                           jmp 0x4001502	      1012	getchar.c	FUNCTION_35	ELSE_2	IF_6
0x4001620	          0x4589fc	                          mov r12d, r15d	       969	getchar.c	FUNCTION_35	CALL_2
0x4001623	    0x41ba01000000	                             mov r10d, 1	      1049	getchar.c	FUNCTION_35	ELSE_4
0x4001629	      0xe950feffff	                           jmp 0x400147e	      1049	getchar.c	FUNCTION_35	ELSE_4
