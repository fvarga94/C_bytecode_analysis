set_callback	DO,0:IF,3:FOR,0:ELSE,2:SWITCH,0:CALL,4:WHILE,0:functions,0	43
0x4000650	            0x4155	                                push r13	      1141	channel.c	FUNCTION_33
0x4000652	            0x4154	                                push r12	      1141	channel.c	FUNCTION_33
0x4000654	          0x4989fc	                            mov r12, rdi	      1141	channel.c	FUNCTION_33
0x4000657	              0x55	                                push rbp	      1141	channel.c	FUNCTION_33
0x4000658	              0x53	                                push rbx	      1141	channel.c	FUNCTION_33
0x4000659	          0x4889f5	                            mov rbp, rsi	      1141	channel.c	FUNCTION_33
0x400065c	          0x4989d5	                            mov r13, rdx	      1141	channel.c	FUNCTION_33
0x400065f	          0x4889cb	                            mov rbx, rcx	      1141	channel.c	FUNCTION_33
0x4000662	        0x4883ec08	                              sub rsp, 8	      1141	channel.c	FUNCTION_33
0x4000666	          0x488b36	                    mov rsi, qword [rsi]	      1142	channel.c	FUNCTION_33	CALL_1
0x4000669	          0x488b3f	                    mov rdi, qword [rdi]	      1142	channel.c	FUNCTION_33	CALL_1
0x400066c	      0xe800000000	                          call 0x4000671	      1142	channel.c	FUNCTION_33	CALL_1
0x4000671	          0x4d85ed	                           test r13, r13	      1143	channel.c	FUNCTION_33	IF_1
0x4000674	            0x7407	                            je 0x400067d	      1143	channel.c	FUNCTION_33	IF_1
0x4000676	      0x41807d0000	                       cmp byte [r13], 0	      1143	channel.c	FUNCTION_33	IF_1
0x400067b	            0x7523	                           jne 0x40006a0	      1143	channel.c	FUNCTION_33	IF_1
0x400067d	          0x4885db	                           test rbx, rbx	      1156	channel.c	FUNCTION_33	IF_3
0x4000680	    0x49c704240000	                      mov qword [r12], 0	      1154	channel.c	FUNCTION_33	ELSE_2
0x4000688	        0x48895d00	                    mov qword [rbp], rbx	      1155	channel.c	FUNCTION_33
0x400068c	            0x7403	                            je 0x4000691	      1156	channel.c	FUNCTION_33	IF_3
0x400068e	          0x830301	                      add dword [rbx], 1	      1157	channel.c	FUNCTION_33	IF_3
0x4000691	        0x4883c408	                              add rsp, 8	      1158	channel.c	FUNCTION_33
0x4000695	              0x5b	                                 pop rbx	      1158	channel.c	FUNCTION_33
0x4000696	              0x5d	                                 pop rbp	      1158	channel.c	FUNCTION_33
0x4000697	            0x415c	                                 pop r12	      1158	channel.c	FUNCTION_33
0x4000699	            0x415d	                                 pop r13	      1158	channel.c	FUNCTION_33
0x400069b	              0xc3	                                     ret	      1158	channel.c	FUNCTION_33
0x400069c	         0xf1f4000	                         nop dword [rax]	      1158	channel.c	FUNCTION_33
0x40006a0	          0x4885db	                           test rbx, rbx	      1145	channel.c	FUNCTION_33	IF_1	IF_2
0x40006a3	            0x741b	                            je 0x40006c0	      1145	channel.c	FUNCTION_33	IF_1	IF_2
0x40006a5	          0x4889df	                            mov rdi, rbx	      1146	channel.c	FUNCTION_33	IF_1	CALL_2
0x40006a8	      0xe800000000	                          call 0x40006ad	      1146	channel.c	FUNCTION_33	IF_1	CALL_2
0x40006ad	        0x49890424	                    mov qword [r12], rax	      1146	channel.c	FUNCTION_33	IF_1	CALL_2
0x40006b1	        0x48895d00	                    mov qword [rbp], rbx	      1155	channel.c	FUNCTION_33
0x40006b5	            0xebd7	                           jmp 0x400068e	      1155	channel.c	FUNCTION_33
0x40006b7	    0x660f1f840000	                    nop word [rax + rax]	      1155	channel.c	FUNCTION_33
0x40006c0	          0x4c89ef	                            mov rdi, r13	      1149	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x40006c3	      0xe800000000	                          call 0x40006c8	      1149	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x40006c8	        0x49890424	                    mov qword [r12], rax	      1149	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x40006cc	          0x4889c7	                            mov rdi, rax	      1150	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_4
0x40006cf	      0xe800000000	                          call 0x40006d4	      1150	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_4
0x40006d4	    0x48c745000000	                      mov qword [rbp], 0	      1155	channel.c	FUNCTION_33
0x40006dc	            0xebb3	                           jmp 0x4000691	      1155	channel.c	FUNCTION_33
ch_log	DO,0:IF,1:FOR,0:ELSE,0:SWITCH,0:CALL,6:WHILE,0:functions,0	49
0x4000e60	              0x53	                                push rbx	       164	channel.c	FUNCTION_4
0x4000e61	          0x4889f3	                            mov rbx, rsi	       164	channel.c	FUNCTION_4
0x4000e64	    0x4881ecd00000	                           sub rsp, 0xd0	       164	channel.c	FUNCTION_4
0x4000e6b	            0x84c0	                             test al, al	       164	channel.c	FUNCTION_4
0x4000e6d	      0x4889542430	             mov qword [rsp + 0x30], rdx	       164	channel.c	FUNCTION_4
0x4000e72	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       164	channel.c	FUNCTION_4
0x4000e77	      0x4c89442440	              mov qword [rsp + 0x40], r8	       164	channel.c	FUNCTION_4
0x4000e7c	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       164	channel.c	FUNCTION_4
0x4000e81	            0x7437	                            je 0x4000eba	       164	channel.c	FUNCTION_4
0x4000e83	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       164	channel.c	FUNCTION_4
0x4000e88	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       164	channel.c	FUNCTION_4
0x4000e8d	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       164	channel.c	FUNCTION_4
0x4000e92	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       164	channel.c	FUNCTION_4
0x4000e9a	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       164	channel.c	FUNCTION_4
0x4000ea2	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       164	channel.c	FUNCTION_4
0x4000eaa	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       164	channel.c	FUNCTION_4
0x4000eb2	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       164	channel.c	FUNCTION_4
0x4000eba	    0x64488b042528	                mov rax, qword fs:[0x28]	       164	channel.c	FUNCTION_4
0x4000ec3	      0x4889442418	             mov qword [rsp + 0x18], rax	       164	channel.c	FUNCTION_4
0x4000ec8	            0x31c0	                            xor eax, eax	       164	channel.c	FUNCTION_4
0x4000eca	    0x48833d000000	               cmp qword [0x04000ed2], 0	       165	channel.c	FUNCTION_4	IF_1
0x4000ed2	            0x7471	                            je 0x4000f45	       165	channel.c	FUNCTION_4	IF_1
0x4000ed4	          0x4889fe	                            mov rsi, rdi	       169	channel.c	FUNCTION_4	IF_1	CALL_1
0x4000ed7	      0xbf00000000	                              mov edi, 0	       169	channel.c	FUNCTION_4	IF_1	CALL_1
0x4000edc	      0xe85ff1ffff	                    call sym.ch_log_lead	       169	channel.c	FUNCTION_4	IF_1	CALL_1
0x4000ee1	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       170	channel.c	FUNCTION_4	IF_1	CALL_2
0x4000ee9	    0x488b3d000000	            mov rdi, qword [0x04000ef0] 	       127	stdio2.h	FUNCTION_152	CALL_1
0x4000ef0	          0x4889e1	                            mov rcx, rsp	       127	stdio2.h	FUNCTION_152	CALL_1
0x4000ef3	          0x4889da	                            mov rdx, rbx	       127	stdio2.h	FUNCTION_152	CALL_1
0x4000ef6	      0xbe01000000	                              mov esi, 1	       127	stdio2.h	FUNCTION_152	CALL_1
0x4000efb	    0xc70424100000	                   mov dword [rsp], 0x10	       170	channel.c	FUNCTION_4	IF_1	CALL_2
0x4000f02	      0x4889442408	                mov qword [rsp + 8], rax	       170	channel.c	FUNCTION_4	IF_1	CALL_2
0x4000f07	      0x488d442420	                   lea rax, [rsp + 0x20]	       170	channel.c	FUNCTION_4	IF_1	CALL_2
0x4000f0c	    0xc74424043000	               mov dword [rsp + 4], 0x30	       170	channel.c	FUNCTION_4	IF_1	CALL_2
0x4000f14	      0x4889442410	             mov qword [rsp + 0x10], rax	       170	channel.c	FUNCTION_4	IF_1	CALL_2
0x4000f19	      0xe800000000	                          call 0x4000f1e	       127	stdio2.h	FUNCTION_152	CALL_1
0x4000f1e	    0x488b35000000	            mov rsi, qword [0x04000f25] 	       173	channel.c	FUNCTION_4	IF_1	CALL_5
0x4000f25	      0xbf0a000000	                            mov edi, 0xa	       173	channel.c	FUNCTION_4	IF_1	CALL_5
0x4000f2a	      0xe800000000	                          call 0x4000f2f	       173	channel.c	FUNCTION_4	IF_1	CALL_5
0x4000f2f	    0x488b3d000000	            mov rdi, qword [0x04000f36] 	       174	channel.c	FUNCTION_4	IF_1	CALL_6
0x4000f36	      0xe800000000	                          call 0x4000f3b	       174	channel.c	FUNCTION_4	IF_1	CALL_6
0x4000f3b	    0xc70500000000	               mov dword [0x04000f45], 1	       175	channel.c	FUNCTION_4	IF_1
0x4000f45	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       177	channel.c	FUNCTION_4
0x4000f4a	    0x644833042528	                xor rax, qword fs:[0x28]	       177	channel.c	FUNCTION_4
0x4000f53	            0x7509	                           jne 0x4000f5e	       177	channel.c	FUNCTION_4
0x4000f55	    0x4881c4d00000	                           add rsp, 0xd0	       177	channel.c	FUNCTION_4
0x4000f5c	              0x5b	                                 pop rbx	       177	channel.c	FUNCTION_4
0x4000f5d	              0xc3	                                     ret	       177	channel.c	FUNCTION_4
0x4000f5e	      0xe800000000	                          call 0x4000f63	       177	channel.c	FUNCTION_4
channel_get_all	DO,1:IF,3:FOR,2:ELSE,0:SWITCH,0:CALL,5:WHILE,1:functions,0	92
0x40022e0	            0x4157	                                push r15	      1666	channel.c	FUNCTION_47
0x40022e2	            0x4156	                                push r14	      1666	channel.c	FUNCTION_47
0x40022e4	            0x4155	                                push r13	      1666	channel.c	FUNCTION_47
0x40022e6	            0x4154	                                push r12	      1666	channel.c	FUNCTION_47
0x40022e8	              0x55	                                push rbp	      1666	channel.c	FUNCTION_47
0x40022e9	            0x89f5	                            mov ebp, esi	      1674	channel.c	FUNCTION_47	IF_1
0x40022eb	              0x53	                                push rbx	      1666	channel.c	FUNCTION_47
0x40022ec	          0x4889ea	                            mov rdx, rbp	      1674	channel.c	FUNCTION_47	IF_1
0x40022ef	          0x4889e8	                            mov rax, rbp	      1674	channel.c	FUNCTION_47	IF_1
0x40022f2	        0x48c1e204	                              shl rdx, 4	      1674	channel.c	FUNCTION_47	IF_1
0x40022f6	        0x48c1e008	                              shl rax, 8	      1674	channel.c	FUNCTION_47	IF_1
0x40022fa	        0x4883ec08	                              sub rsp, 8	      1666	channel.c	FUNCTION_47
0x40022fe	          0x4801d0	                            add rax, rdx	      1674	channel.c	FUNCTION_47	IF_1
0x4002301	      0x488b540740	      mov rdx, qword [rdi + rax + 0x40] 	      1674	channel.c	FUNCTION_47	IF_1
0x4002306	          0x4885d2	                           test rdx, rdx	      1674	channel.c	FUNCTION_47	IF_1
0x4002309	     0xf84e1000000	                            je 0x40023f0	      1674	channel.c	FUNCTION_47	IF_1
0x400230f	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      1674	channel.c	FUNCTION_47	IF_1
0x4002313	          0x4885c0	                           test rax, rax	      1674	channel.c	FUNCTION_47	IF_1
0x4002316	     0xf84d4000000	                            je 0x40023f0	      1674	channel.c	FUNCTION_47	IF_1
0x400231c	            0x31db	                            xor ebx, ebx	      1674	channel.c	FUNCTION_47	IF_1
0x400231e	            0xeb07	                           jmp 0x4002327	      1674	channel.c	FUNCTION_47	IF_1
0x4002320	          0x4889c2	                            mov rdx, rax	      1674	channel.c	FUNCTION_47	IF_1
0x4002323	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1674	channel.c	FUNCTION_47	IF_1
0x4002327	        0x48035a08	                add rbx, qword [rdx + 8]	      1679	channel.c	FUNCTION_47	FOR_1
0x400232b	          0x4885c0	                           test rax, rax	      1678	channel.c	FUNCTION_47	FOR_1
0x400232e	          0x4989dc	                            mov r12, rbx	      1679	channel.c	FUNCTION_47	FOR_1
0x4002331	            0x75ed	                           jne 0x4002320	      1678	channel.c	FUNCTION_47	FOR_1
0x4002333	          0x4989fe	                            mov r14, rdi	      1678	channel.c	FUNCTION_47	FOR_1
0x4002336	        0x488d7b01	                      lea rdi, [rbx + 1]	      1680	channel.c	FUNCTION_47	CALL_2
0x400233a	          0x4189f7	                           mov r15d, esi	      1680	channel.c	FUNCTION_47	CALL_2
0x400233d	      0xbe01000000	                              mov esi, 1	      1680	channel.c	FUNCTION_47	CALL_2
0x4002342	      0xe800000000	                          call 0x4002347	      1680	channel.c	FUNCTION_47	CALL_2
0x4002347	          0x4885c0	                           test rax, rax	      1681	channel.c	FUNCTION_47	IF_2
0x400234a	          0x4989c5	                            mov r13, rax	      1680	channel.c	FUNCTION_47	CALL_2
0x400234d	     0xf84b0000000	                            je 0x4002403	      1681	channel.c	FUNCTION_47	IF_2
0x4002353	          0x4889e8	                            mov rax, rbp	      1684	channel.c	FUNCTION_47	FOR_2
0x4002356	        0x48c1e508	                              shl rbp, 8	      1684	channel.c	FUNCTION_47	FOR_2
0x400235a	          0x4c89e9	                            mov rcx, r13	      1684	channel.c	FUNCTION_47	FOR_2
0x400235d	        0x48c1e004	                              shl rax, 4	      1684	channel.c	FUNCTION_47	FOR_2
0x4002361	          0x4801c5	                            add rbp, rax	      1684	channel.c	FUNCTION_47	FOR_2
0x4002364	      0x498b6c2e40	      mov rbp, qword [r14 + rbp + 0x40] 	      1684	channel.c	FUNCTION_47	FOR_2
0x4002369	          0x4885ed	                           test rbp, rbp	      1684	channel.c	FUNCTION_47	FOR_2
0x400236c	            0x7422	                            je 0x4002390	      1684	channel.c	FUNCTION_47	FOR_2
0x400236e	            0x6690	                                     nop	      1684	channel.c	FUNCTION_47	FOR_2
0x4002370	        0x488b5508	                mov rdx, qword [rbp + 8]	        59	string3.h	FUNCTION_136	CALL_3
0x4002374	        0x488b7500	                    mov rsi, qword [rbp]	        59	string3.h	FUNCTION_136	CALL_3
0x4002378	          0x4889cf	                            mov rdi, rcx	        59	string3.h	FUNCTION_136	CALL_3
0x400237b	      0xe800000000	                          call 0x4002380	        59	string3.h	FUNCTION_136	CALL_3
0x4002380	          0x4889c1	                            mov rcx, rax	        59	string3.h	FUNCTION_136	CALL_3
0x4002383	        0x48034d08	                add rcx, qword [rbp + 8]	      1687	channel.c	FUNCTION_47	FOR_2
0x4002387	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      1684	channel.c	FUNCTION_47	FOR_2
0x400238b	          0x4885ed	                           test rbp, rbp	      1684	channel.c	FUNCTION_47	FOR_2
0x400238e	            0x75e0	                           jne 0x4002370	      1684	channel.c	FUNCTION_47	FOR_2
0x4002390	          0xc60100	                       mov byte [rcx], 0	      1689	channel.c	FUNCTION_47
0x4002393	       0xf1f440000	                   nop dword [rax + rax]	      1689	channel.c	FUNCTION_47
0x4002398	          0x4489fe	                           mov esi, r15d	      1694	channel.c	FUNCTION_47	DO_1	CALL_4
0x400239b	          0x4c89f7	                            mov rdi, r14	      1694	channel.c	FUNCTION_47	DO_1	CALL_4
0x400239e	      0xe800000000	                          call 0x40023a3	      1694	channel.c	FUNCTION_47	DO_1	CALL_4
0x40023a3	          0x4889c5	                            mov rbp, rax	      1694	channel.c	FUNCTION_47	DO_1	CALL_4
0x40023a6	          0x4889c7	                            mov rdi, rax	      1695	channel.c	FUNCTION_47	DO_1	CALL_5
0x40023a9	      0xe800000000	                          call 0x40023ae	      1695	channel.c	FUNCTION_47	DO_1	CALL_5
0x40023ae	          0x4885ed	                           test rbp, rbp	      1696	channel.c	FUNCTION_47	DO_1
0x40023b1	            0x75e5	                           jne 0x4002398	      1696	channel.c	FUNCTION_47	DO_1
0x40023b3	          0x4d85e4	                           test r12, r12	      1699	channel.c	FUNCTION_47	WHILE_1
0x40023b6	            0x741f	                            je 0x40023d7	      1699	channel.c	FUNCTION_47	WHILE_1
0x40023b8	     0xf1f84000000	                   nop dword [rax + rax]	      1699	channel.c	FUNCTION_47	WHILE_1
0x40023c0	        0x4883eb01	                              sub rbx, 1	      1701	channel.c	FUNCTION_47	WHILE_1
0x40023c4	    0x41807c1d0000	                 cmp byte [r13 + rbx], 0	      1702	channel.c	FUNCTION_47	WHILE_1	IF_3
0x40023ca	            0x7506	                           jne 0x40023d2	      1702	channel.c	FUNCTION_47	WHILE_1	IF_3
0x40023cc	    0x41c6441d000a	               mov byte [r13 + rbx], 0xa	      1703	channel.c	FUNCTION_47	WHILE_1	IF_3
0x40023d2	          0x4885db	                           test rbx, rbx	      1699	channel.c	FUNCTION_47	WHILE_1
0x40023d5	            0x75e9	                           jne 0x40023c0	      1699	channel.c	FUNCTION_47	WHILE_1
0x40023d7	          0x4c89e8	                            mov rax, r13	      1699	channel.c	FUNCTION_47	WHILE_1
0x40023da	        0x4883c408	                              add rsp, 8	      1707	channel.c	FUNCTION_47
0x40023de	              0x5b	                                 pop rbx	      1707	channel.c	FUNCTION_47
0x40023df	              0x5d	                                 pop rbp	      1707	channel.c	FUNCTION_47
0x40023e0	            0x415c	                                 pop r12	      1707	channel.c	FUNCTION_47
0x40023e2	            0x415d	                                 pop r13	      1707	channel.c	FUNCTION_47
0x40023e4	            0x415e	                                 pop r14	      1707	channel.c	FUNCTION_47
0x40023e6	            0x415f	                                 pop r15	      1707	channel.c	FUNCTION_47
0x40023e8	              0xc3	                                     ret	      1707	channel.c	FUNCTION_47
0x40023e9	     0xf1f80000000	                         nop dword [rax]	      1707	channel.c	FUNCTION_47
0x40023f0	        0x4883c408	                              add rsp, 8	      1707	channel.c	FUNCTION_47
0x40023f4	              0x5b	                                 pop rbx	      1707	channel.c	FUNCTION_47
0x40023f5	              0x5d	                                 pop rbp	      1707	channel.c	FUNCTION_47
0x40023f6	            0x415c	                                 pop r12	      1707	channel.c	FUNCTION_47
0x40023f8	            0x415d	                                 pop r13	      1707	channel.c	FUNCTION_47
0x40023fa	            0x415e	                                 pop r14	      1707	channel.c	FUNCTION_47
0x40023fc	            0x415f	                                 pop r15	      1707	channel.c	FUNCTION_47
0x40023fe	      0xe91dfaffff	                     jmp sym.channel_get	      1675	channel.c	FUNCTION_47	CALL_1
0x4002403	            0x31c0	                            xor eax, eax	      1682	channel.c	FUNCTION_47	IF_2
0x4002405	            0xebd3	                           jmp 0x40023da	      1682	channel.c	FUNCTION_47	IF_2
channel_write_in	DO,0:IF,7:FOR,1:ELSE,2:SWITCH,0:CALL,10:WHILE,0:functions,0	111
0x4003240	            0x4155	                                push r13	      1432	channel.c	FUNCTION_38
0x4003242	            0x4154	                                push r12	      1432	channel.c	FUNCTION_38
0x4003244	              0x55	                                push rbp	      1432	channel.c	FUNCTION_38
0x4003245	              0x53	                                push rbx	      1432	channel.c	FUNCTION_38
0x4003246	        0x4883ec08	                              sub rsp, 8	      1432	channel.c	FUNCTION_38
0x400324a	    0x4c8baf280400	           mov r13, qword [rdi + 0x428] 	      1435	channel.c	FUNCTION_38
0x4003251	          0x4d85ed	                           test r13, r13	      1438	channel.c	FUNCTION_38	IF_1
0x4003254	            0x740a	                            je 0x4003260	      1438	channel.c	FUNCTION_38	IF_1
0x4003256	    0x8b8740040000	           mov eax, dword [rdi + 0x440] 	      1438	channel.c	FUNCTION_38	IF_1
0x400325c	            0x85c0	                           test eax, eax	      1438	channel.c	FUNCTION_38	IF_1
0x400325e	            0x7410	                            je 0x4003270	      1438	channel.c	FUNCTION_38	IF_1
0x4003260	        0x4883c408	                              add rsp, 8	      1481	channel.c	FUNCTION_38
0x4003264	              0x5b	                                 pop rbx	      1481	channel.c	FUNCTION_38
0x4003265	              0x5d	                                 pop rbp	      1481	channel.c	FUNCTION_38
0x4003266	            0x415c	                                 pop r12	      1481	channel.c	FUNCTION_38
0x4003268	            0x415d	                                 pop r13	      1481	channel.c	FUNCTION_38
0x400326a	              0xc3	                                     ret	      1481	channel.c	FUNCTION_38
0x400326b	       0xf1f440000	                   nop dword [rax + rax]	      1481	channel.c	FUNCTION_38
0x4003270	          0x4889fd	                            mov rbp, rdi	      1481	channel.c	FUNCTION_38
0x4003273	    0x488dbf280400	                  lea rdi, [rdi + 0x428]	      1440	channel.c	FUNCTION_38	IF_2	CALL_1
0x400327a	      0xe800000000	                          call 0x400327f	      1440	channel.c	FUNCTION_38	IF_2	CALL_1
0x400327f	            0x85c0	                           test eax, eax	      1440	channel.c	FUNCTION_38	IF_2	CALL_1
0x4003281	     0xf84e1000000	                            je 0x4003368	      1440	channel.c	FUNCTION_38	IF_2	CALL_1
0x4003287	      0x49837d0800	                  cmp qword [r13 + 8], 0	      1440	channel.c	FUNCTION_38	IF_2	CALL_1
0x400328c	     0xf84d6000000	                            je 0x4003368	      1440	channel.c	FUNCTION_38	IF_2	CALL_1
0x4003292	    0x488b9d480400	           mov rbx, qword [rbp + 0x448] 	      1448	channel.c	FUNCTION_38	FOR_1
0x4003299	    0x483b9d500400	           cmp rbx, qword [rbp + 0x450] 	      1448	channel.c	FUNCTION_38	FOR_1
0x40032a0	            0x7f65	                            jg 0x4003307	      1448	channel.c	FUNCTION_38	FOR_1
0x40032a2	        0x493b5d00	                    cmp rbx, qword [r13]	      1449	channel.c	FUNCTION_38	FOR_1
0x40032a6	     0xf8f1f010000	                            jg 0x40033cb	      1449	channel.c	FUNCTION_38	FOR_1
0x40032ac	          0x4531e4	                          xor r12d, r12d	      1449	channel.c	FUNCTION_38	FOR_1
0x40032af	            0xeb2c	                           jmp 0x40032dd	      1449	channel.c	FUNCTION_38	FOR_1
0x40032b1	     0xf1f80000000	                         nop dword [rax]	      1449	channel.c	FUNCTION_38	FOR_1
0x40032b8	          0x4889de	                            mov rsi, rbx	      1453	channel.c	FUNCTION_38	FOR_1	CALL_4
0x40032bb	          0x4889ea	                            mov rdx, rbp	      1453	channel.c	FUNCTION_38	FOR_1	CALL_4
0x40032be	          0x4c89ef	                            mov rdi, r13	      1453	channel.c	FUNCTION_38	FOR_1	CALL_4
0x40032c1	      0xe89afeffff	                 call sym.write_buf_line	      1453	channel.c	FUNCTION_38	FOR_1	CALL_4
0x40032c6	        0x4183c401	                             add r12d, 1	      1454	channel.c	FUNCTION_38	FOR_1
0x40032ca	        0x4883c301	                              add rbx, 1	      1449	channel.c	FUNCTION_38	FOR_1
0x40032ce	    0x48399d500400	           cmp qword [rbp + 0x450], rbx 	      1448	channel.c	FUNCTION_38	FOR_1
0x40032d5	            0x7c12	                            jl 0x40032e9	      1448	channel.c	FUNCTION_38	FOR_1
0x40032d7	        0x49395d00	                    cmp qword [r13], rbx	      1449	channel.c	FUNCTION_38	FOR_1
0x40032db	            0x7c0c	                            jl 0x40032e9	      1449	channel.c	FUNCTION_38	FOR_1
0x40032dd	          0x4889ef	                            mov rdi, rbp	      1451	channel.c	FUNCTION_38	FOR_1	IF_3	CALL_3
0x40032e0	      0xe8dbdeffff	             call sym.can_write_buf_line	      1451	channel.c	FUNCTION_38	FOR_1	IF_3	CALL_3
0x40032e5	            0x85c0	                           test eax, eax	      1451	channel.c	FUNCTION_38	FOR_1	IF_3	CALL_3
0x40032e7	            0x75cf	                           jne 0x40032b8	      1451	channel.c	FUNCTION_38	FOR_1	IF_3	CALL_3
0x40032e9	        0x4183fc01	                             cmp r12d, 1	      1457	channel.c	FUNCTION_38	IF_4
0x40032ed	     0xf84bd000000	                            je 0x40033b0	      1457	channel.c	FUNCTION_38	IF_4
0x40032f3	            0x7e12	                           jle 0x4003307	      1459	channel.c	FUNCTION_38	ELSE_1	IF_5
0x40032f5	          0x4489e2	                           mov edx, r12d	      1460	channel.c	FUNCTION_38	ELSE_1	IF_5
0x40032f8	      0xbe00000000	                              mov esi, 0	      1460	channel.c	FUNCTION_38	ELSE_1	IF_5
0x40032fd	          0x4889ef	                            mov rdi, rbp	      1460	channel.c	FUNCTION_38	ELSE_1	IF_5
0x4003300	            0x31c0	                            xor eax, eax	      1460	channel.c	FUNCTION_38	ELSE_1	IF_5
0x4003302	      0xe800000000	                          call 0x4003307	      1460	channel.c	FUNCTION_38	ELSE_1	IF_5
0x4003307	        0x498b4500	                    mov rax, qword [r13]	      1460	channel.c	FUNCTION_38	ELSE_1	IF_5
0x400330b	          0x4839d8	                            cmp rax, rbx	      1463	channel.c	FUNCTION_38	IF_6
0x400330e	    0x48899d480400	           mov qword [rbp + 0x448], rbx 	      1462	channel.c	FUNCTION_38
0x4003315	            0x7c09	                            jl 0x4003320	      1463	channel.c	FUNCTION_38	IF_6
0x4003317	    0x48399d500400	           cmp qword [rbp + 0x450], rbx 	      1463	channel.c	FUNCTION_38	IF_6
0x400331e	            0x7d70	                           jge 0x4003390	      1463	channel.c	FUNCTION_38	IF_6
0x4003320	    0x4883bda80400	              cmp qword [rbp + 0x4a8], 0	      1467	channel.c	FUNCTION_38	IF_6	IF_7
0x4003328	            0x7408	                            je 0x4003332	      1467	channel.c	FUNCTION_38	IF_6	IF_7
0x400332a	          0x4889ef	                            mov rdi, rbp	      1468	channel.c	FUNCTION_38	IF_6	CALL_7
0x400332d	      0xe800000000	                          call 0x4003332	      1468	channel.c	FUNCTION_38	IF_6	CALL_7
0x4003332	          0x4889ef	                            mov rdi, rbp	      1473	channel.c	FUNCTION_38	IF_6	CALL_8
0x4003335	    0x48c785280400	              mov qword [rbp + 0x428], 0	      1472	channel.c	FUNCTION_38	IF_6
0x4003340	      0xbe00000000	                              mov esi, 0	      1473	channel.c	FUNCTION_38	IF_6	CALL_8
0x4003345	            0x31c0	                            xor eax, eax	      1473	channel.c	FUNCTION_38	IF_6	CALL_8
0x4003347	      0xe800000000	                          call 0x400334c	      1473	channel.c	FUNCTION_38	IF_6	CALL_8
0x400334c	        0x4883c408	                              add rsp, 8	      1481	channel.c	FUNCTION_38
0x4003350	          0x4889ef	                            mov rdi, rbp	      1476	channel.c	FUNCTION_38	IF_6	CALL_9
0x4003353	      0xbe03000000	                              mov esi, 3	      1476	channel.c	FUNCTION_38	IF_6	CALL_9
0x4003358	              0x5b	                                 pop rbx	      1481	channel.c	FUNCTION_38
0x4003359	              0x5d	                                 pop rbp	      1481	channel.c	FUNCTION_38
0x400335a	            0x415c	                                 pop r12	      1481	channel.c	FUNCTION_38
0x400335c	            0x415d	                                 pop r13	      1481	channel.c	FUNCTION_38
0x400335e	      0xe94dd2ffff	                   jmp sym.ch_close_part	      1476	channel.c	FUNCTION_38	IF_6	CALL_9
0x4003363	       0xf1f440000	                   nop dword [rax + rax]	      1476	channel.c	FUNCTION_38	IF_6	CALL_9
0x4003368	          0x4889ef	                            mov rdi, rbp	      1443	channel.c	FUNCTION_38	IF_2	CALL_2
0x400336b	      0xbe00000000	                              mov esi, 0	      1443	channel.c	FUNCTION_38	IF_2	CALL_2
0x4003370	            0x31c0	                            xor eax, eax	      1443	channel.c	FUNCTION_38	IF_2	CALL_2
0x4003372	      0xe800000000	                          call 0x4003377	      1443	channel.c	FUNCTION_38	IF_2	CALL_2
0x4003377	    0x48c785280400	              mov qword [rbp + 0x428], 0	      1444	channel.c	FUNCTION_38	IF_2
0x4003382	        0x4883c408	                              add rsp, 8	      1481	channel.c	FUNCTION_38
0x4003386	              0x5b	                                 pop rbx	      1481	channel.c	FUNCTION_38
0x4003387	              0x5d	                                 pop rbp	      1481	channel.c	FUNCTION_38
0x4003388	            0x415c	                                 pop r12	      1481	channel.c	FUNCTION_38
0x400338a	            0x415d	                                 pop r13	      1481	channel.c	FUNCTION_38
0x400338c	              0xc3	                                     ret	      1481	channel.c	FUNCTION_38
0x400338d	           0xf1f00	                         nop dword [rax]	      1481	channel.c	FUNCTION_38
0x4003390	        0x4883c408	                              add rsp, 8	      1481	channel.c	FUNCTION_38
0x4003394	          0x4829d8	                            sub rax, rbx	      1479	channel.c	FUNCTION_38	ELSE_2	CALL_10
0x4003397	          0x4889ef	                            mov rdi, rbp	      1479	channel.c	FUNCTION_38	ELSE_2	CALL_10
0x400339a	              0x5b	                                 pop rbx	      1481	channel.c	FUNCTION_38
0x400339b	              0x5d	                                 pop rbp	      1481	channel.c	FUNCTION_38
0x400339c	            0x415c	                                 pop r12	      1481	channel.c	FUNCTION_38
0x400339e	            0x415d	                                 pop r13	      1481	channel.c	FUNCTION_38
0x40033a0	        0x488d5001	                      lea rdx, [rax + 1]	      1479	channel.c	FUNCTION_38	ELSE_2	CALL_10
0x40033a4	      0xbe00000000	                              mov esi, 0	      1479	channel.c	FUNCTION_38	ELSE_2	CALL_10
0x40033a9	            0x31c0	                            xor eax, eax	      1479	channel.c	FUNCTION_38	ELSE_2	CALL_10
0x40033ab	      0xe9b0daffff	                          jmp sym.ch_log	      1479	channel.c	FUNCTION_38	ELSE_2	CALL_10
0x40033b0	          0x8d53ff	                      lea edx, [rbx - 1]	      1458	channel.c	FUNCTION_38	CALL_5
0x40033b3	            0x31c0	                            xor eax, eax	      1458	channel.c	FUNCTION_38	CALL_5
0x40033b5	      0xbe00000000	                              mov esi, 0	      1458	channel.c	FUNCTION_38	CALL_5
0x40033ba	          0x4889ef	                            mov rdi, rbp	      1458	channel.c	FUNCTION_38	CALL_5
0x40033bd	      0xe800000000	                          call 0x40033c2	      1458	channel.c	FUNCTION_38	CALL_5
0x40033c2	        0x498b4500	                    mov rax, qword [r13]	      1458	channel.c	FUNCTION_38	CALL_5
0x40033c6	      0xe940ffffff	                           jmp 0x400330b	      1458	channel.c	FUNCTION_38	CALL_5
0x40033cb	    0x48899d480400	           mov qword [rbp + 0x448], rbx 	      1462	channel.c	FUNCTION_38
0x40033d2	      0xe949ffffff	                           jmp 0x4003320	      1462	channel.c	FUNCTION_38
channel_parse_json	DO,0:IF,14:FOR,0:ELSE,10:SWITCH,0:CALL,22:WHILE,0:functions,0	201
0x4001e90	            0x4157	                                push r15	      1906	channel.c	FUNCTION_52
0x4001e92	            0x4156	                                push r14	      1906	channel.c	FUNCTION_52
0x4001e94	            0x4155	                                push r13	      1906	channel.c	FUNCTION_52
0x4001e96	            0x4154	                                push r12	      1906	channel.c	FUNCTION_52
0x4001e98	              0x55	                                push rbp	      1906	channel.c	FUNCTION_52
0x4001e99	              0x53	                                push rbx	      1906	channel.c	FUNCTION_52
0x4001e9a	            0x89f3	                            mov ebx, esi	      1906	channel.c	FUNCTION_52
0x4001e9c	          0x4989dc	                            mov r12, rbx	      1615	channel.c	FUNCTION_44
0x4001e9f	        0x4883ec78	                           sub rsp, 0x78	      1906	channel.c	FUNCTION_52
0x4001ea3	        0x49c1e404	                              shl r12, 4	      1615	channel.c	FUNCTION_44
0x4001ea7	    0x64488b042528	                mov rax, qword fs:[0x28]	      1906	channel.c	FUNCTION_52
0x4001eb0	      0x4889442468	             mov qword [rsp + 0x68], rax	      1906	channel.c	FUNCTION_52
0x4001eb5	            0x31c0	                            xor eax, eax	      1906	channel.c	FUNCTION_52
0x4001eb7	          0x4889d8	                            mov rax, rbx	      1615	channel.c	FUNCTION_44
0x4001eba	        0x48c1e008	                              shl rax, 8	      1615	channel.c	FUNCTION_44
0x4001ebe	          0x4901c4	                            add r12, rax	      1615	channel.c	FUNCTION_44
0x4001ec1	            0x31c0	                            xor eax, eax	      1615	channel.c	FUNCTION_44
0x4001ec3	        0x4e8d3427	                    lea r14, [rdi + r12]	      1615	channel.c	FUNCTION_44
0x4001ec7	      0x49837e4000	               cmp qword [r14 + 0x40], 0	      1915	channel.c	FUNCTION_52	IF_1	CALL_1
0x4001ecc	     0xf8493000000	                            je 0x4001f65	      1915	channel.c	FUNCTION_52	IF_1	CALL_1
0x4001ed2	            0x89de	                            mov esi, ebx	      1918	channel.c	FUNCTION_52	CALL_2
0x4001ed4	          0x4889fd	                            mov rbp, rdi	      1918	channel.c	FUNCTION_52	CALL_2
0x4001ed7	          0x4989dd	                            mov r13, rbx	      1918	channel.c	FUNCTION_52	CALL_2
0x4001eda	      0xe800000000	                          call 0x4001edf	      1918	channel.c	FUNCTION_52	CALL_2
0x4001edf	    0x830500000000	               add dword [0x04001ee6], 1	      1928	channel.c	FUNCTION_52
0x4001ee6	            0x31d2	                            xor edx, edx	      1929	channel.c	FUNCTION_52	CALL_3
0x4001ee8	      0x41837e2003	               cmp dword [r14 + 0x20], 3	      1929	channel.c	FUNCTION_52	CALL_3
0x4001eed	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1929	channel.c	FUNCTION_52	CALL_3
0x4001ef2	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1929	channel.c	FUNCTION_52	CALL_3
0x4001ef7	      0x4889442430	             mov qword [rsp + 0x30], rax	      1918	channel.c	FUNCTION_52	CALL_2
0x4001efc	    0xc74424400000	               mov dword [rsp + 0x40], 0	      1919	channel.c	FUNCTION_52
0x4001f04	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1920	channel.c	FUNCTION_52
0x4001f0d	      0x48896c2450	             mov qword [rsp + 0x50], rbp	      1921	channel.c	FUNCTION_52
0x4001f12	           0xf94c2	                                 sete dl	      1929	channel.c	FUNCTION_52	CALL_3
0x4001f15	        0x895c2458	             mov dword [rsp + 0x58], ebx	      1922	channel.c	FUNCTION_52
0x4001f19	      0xe800000000	                          call 0x4001f1e	      1929	channel.c	FUNCTION_52	CALL_3
0x4001f1e	    0x832d00000000	               sub dword [0x04001f25], 1	      1931	channel.c	FUNCTION_52
0x4001f25	          0x83f801	                              cmp eax, 1	      1932	channel.c	FUNCTION_52	IF_2
0x4001f28	          0x4189c7	                           mov r15d, eax	      1929	channel.c	FUNCTION_52	CALL_3
0x4001f2b	     0xf84df000000	                            je 0x4002010	      1932	channel.c	FUNCTION_52	IF_2
0x4001f31	          0x83f802	                              cmp eax, 2	      1976	channel.c	FUNCTION_52	ELSE_6	IF_9
0x4001f34	     0xf8416010000	                            je 0x4002050	      1976	channel.c	FUNCTION_52	ELSE_6	IF_9
0x4001f3a	          0x4585ff	                         test r15d, r15d	      2030	channel.c	FUNCTION_52	IF_13
0x4001f3d	     0xf8495000000	                            je 0x4001fd8	      2030	channel.c	FUNCTION_52	IF_13
0x4001f43	      0x4863542440	         movsxd rdx, dword [rsp + 0x40] 	      2036	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4001f48	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2036	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4001f4d	            0x31db	                            xor ebx, ebx	      2045	channel.c	FUNCTION_52	ELSE_10
0x4001f4f	          0x4889d0	                            mov rax, rdx	      2036	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4001f52	          0x4801fa	                            add rdx, rdi	      2036	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4001f55	          0x803a00	                       cmp byte [rdx], 0	      2036	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4001f58	     0xf850a020000	                           jne 0x4002168	      2036	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4001f5e	      0xe800000000	                          call 0x4001f63	      2047	channel.c	FUNCTION_52	CALL_22
0x4001f63	            0x89d8	                            mov eax, ebx	      2048	channel.c	FUNCTION_52
0x4001f65	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	      2049	channel.c	FUNCTION_52
0x4001f6a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2049	channel.c	FUNCTION_52
0x4001f73	     0xf8589020000	                           jne 0x4002202	      2049	channel.c	FUNCTION_52
0x4001f79	        0x4883c478	                           add rsp, 0x78	      2049	channel.c	FUNCTION_52
0x4001f7d	              0x5b	                                 pop rbx	      2049	channel.c	FUNCTION_52
0x4001f7e	              0x5d	                                 pop rbp	      2049	channel.c	FUNCTION_52
0x4001f7f	            0x415c	                                 pop r12	      2049	channel.c	FUNCTION_52
0x4001f81	            0x415d	                                 pop r13	      2049	channel.c	FUNCTION_52
0x4001f83	            0x415e	                                 pop r14	      2049	channel.c	FUNCTION_52
0x4001f85	            0x415f	                                 pop r15	      2049	channel.c	FUNCTION_52
0x4001f87	              0xc3	                                     ret	      2049	channel.c	FUNCTION_52
0x4001f88	     0xf1f84000000	                   nop dword [rax + rax]	      2049	channel.c	FUNCTION_52
0x4001f90	    0x498b86880000	            mov rax, qword [r14 + 0x88] 	      2013	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4001f97	      0x4839442428	            cmp qword [rsp + 0x28], rax 	      2013	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4001f9c	     0xf8e22020000	                           jle 0x40021c4	      2013	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4001fa2	    0x660f1f440000	                    nop word [rax + rax]	      2013	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4001fa8	          0x4889da	                            mov rdx, rbx	      2019	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12
0x4001fab	          0x4889d8	                            mov rax, rbx	      2019	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12
0x4001fae	      0xbe00000000	                              mov esi, 0	      2020	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12	CALL_18
0x4001fb3	        0x48c1e204	                              shl rdx, 4	      2019	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12
0x4001fb7	        0x48c1e008	                              shl rax, 8	      2019	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12
0x4001fbb	          0x4889ef	                            mov rdi, rbp	      2020	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12	CALL_18
0x4001fbe	          0x4801d0	                            add rax, rdx	      2019	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12
0x4001fc1	    0x48c744057800	        mov qword [rbp + rax + 0x78], 0 	      2019	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12
0x4001fca	            0x31c0	                            xor eax, eax	      2020	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12	CALL_18
0x4001fcc	      0xe800000000	                          call 0x4001fd1	      2020	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12	CALL_18
0x4001fd1	     0xf1f80000000	                         nop dword [rax]	      2020	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12	CALL_18
0x4001fd8	          0x4889ef	                            mov rdi, rbp	      2032	channel.c	FUNCTION_52	IF_13	CALL_20
0x4001fdb	            0x31c0	                            xor eax, eax	      2032	channel.c	FUNCTION_52	IF_13	CALL_20
0x4001fdd	      0xbe00000000	                              mov esi, 0	      2032	channel.c	FUNCTION_52	IF_13	CALL_20
0x4001fe2	      0xe829e1ffff	                       call sym.ch_error	      2032	channel.c	FUNCTION_52	IF_13	CALL_20
0x4001fe7	          0x4889d8	                            mov rax, rbx	      2034	channel.c	FUNCTION_52	IF_13
0x4001fea	        0x48c1e308	                              shl rbx, 8	      2034	channel.c	FUNCTION_52	IF_13
0x4001fee	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2034	channel.c	FUNCTION_52	IF_13
0x4001ff3	        0x48c1e004	                              shl rax, 4	      2034	channel.c	FUNCTION_52	IF_13
0x4001ff7	          0x4801c3	                            add rbx, rax	      2034	channel.c	FUNCTION_52	IF_13
0x4001ffa	    0x48c7441d7800	        mov qword [rbp + rbx + 0x78], 0 	      2034	channel.c	FUNCTION_52	IF_13
0x4002003	            0x31db	                            xor ebx, ebx	      2033	channel.c	FUNCTION_52	IF_13
0x4002005	      0xe954ffffff	                           jmp 0x4001f5e	      2033	channel.c	FUNCTION_52	IF_13
0x400200a	    0x660f1f440000	                    nop word [rax + rax]	      2033	channel.c	FUNCTION_52	IF_13
0x4002010	      0x837c241005	               cmp dword [rsp + 0x10], 5	      1936	channel.c	FUNCTION_52	IF_2	IF_3
0x4002015	     0xf84b5000000	                            je 0x40020d0	      1936	channel.c	FUNCTION_52	IF_2	IF_3
0x400201b	      0xbe00000000	                              mov esi, 0	      1939	channel.c	FUNCTION_52	IF_2	IF_3	CALL_4
0x4002020	          0x4889ef	                            mov rdi, rbp	      1939	channel.c	FUNCTION_52	IF_2	IF_3	CALL_4
0x4002023	            0x31c0	                            xor eax, eax	      1939	channel.c	FUNCTION_52	IF_2	IF_3	CALL_4
0x4002025	      0xe8e6e0ffff	                       call sym.ch_error	      1939	channel.c	FUNCTION_52	IF_2	IF_3	CALL_4
0x400202a	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1957	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	IF_6	CALL_11
0x400202f	      0xe800000000	                          call 0x4002034	      1957	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	IF_6	CALL_11
0x4002034	          0x4889d8	                            mov rax, rbx	      1975	channel.c	FUNCTION_52	IF_8
0x4002037	        0x48c1e308	                              shl rbx, 8	      1975	channel.c	FUNCTION_52	IF_8
0x400203b	        0x48c1e004	                              shl rax, 4	      1975	channel.c	FUNCTION_52	IF_8
0x400203f	          0x4801c3	                            add rbx, rax	      1975	channel.c	FUNCTION_52	IF_8
0x4002042	    0x48c7441d7800	        mov qword [rbp + rbx + 0x78], 0 	      1975	channel.c	FUNCTION_52	IF_8
0x400204b	      0xe9f3feffff	                           jmp 0x4001f43	      1975	channel.c	FUNCTION_52	IF_8
0x4002050	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1978	channel.c	FUNCTION_52	ELSE_6	IF_9	CALL_12
0x4002055	      0xe800000000	                          call 0x400205a	      1978	channel.c	FUNCTION_52	ELSE_6	IF_9	CALL_12
0x400205a	        0x493b4678	            cmp rax, qword [r14 + 0x78] 	      1980	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x400205e	     0xf863c010000	                           jbe 0x40021a0	      1980	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4002064	            0x89c2	                            mov edx, eax	      1984	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_13
0x4002066	      0x4889442408	                mov qword [rsp + 8], rax	      1984	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_13
0x400206b	      0xbe00000000	                              mov esi, 0	      1984	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_13
0x4002070	            0x31c0	                            xor eax, eax	      1984	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_13
0x4002072	          0x4889ef	                            mov rdi, rbp	      1984	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_13
0x4002075	      0xe800000000	                          call 0x400207a	      1984	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_13
0x400207a	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1988	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x400207f	    0x4a8dbc258000	            lea rdi, [rbp + r12 + 0x80] 	      1992	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_15
0x4002087	            0x31f6	                            xor esi, esi	      1992	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_15
0x4002089	    0xc74424400000	               mov dword [rsp + 0x40], 0	      1987	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4002091	        0x49894e78	             mov qword [r14 + 0x78], rcx	      1988	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4002095	      0xe800000000	                          call 0x400209a	      1992	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_15
0x400209a	    0x498b86880000	            mov rax, qword [r14 + 0x88] 	      1993	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x40020a1	    0x488d90a08601	                lea rdx, [rax + 0x186a0]	      1993	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x40020a8	    0x4881fa40420f	                        cmp rdx, 0xf4240	      1994	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x40020af	     0xf8e2b010000	                           jle 0x40021e0	      1994	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x40020b5	    0x482da0bb0d00	                        sub rax, 0xdbba0	      1996	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x40020bb	    0x498386800000	               add qword [r14 + 0x80], 1	      1997	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x40020c3	    0x498986880000	             mov qword [r14 + 0x88], rax	      1996	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x40020ca	      0xe974feffff	                           jmp 0x4001f43	      1996	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x40020cf	              0x90	                                     nop	      1996	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x40020d0	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1936	channel.c	FUNCTION_52	IF_2	IF_3
0x40020d5	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      1936	channel.c	FUNCTION_52	IF_2	IF_3
0x40020d8	          0x83fa01	                              cmp edx, 1	      1936	channel.c	FUNCTION_52	IF_2	IF_3
0x40020db	            0x7e73	                           jle 0x4002150	      1936	channel.c	FUNCTION_52	IF_2	IF_3
0x40020dd	      0xbf20000000	                           mov edi, 0x20	      1947	channel.c	FUNCTION_52	IF_2	ELSE_2	CALL_7
0x40020e2	      0xe800000000	                          call 0x40020e7	      1947	channel.c	FUNCTION_52	IF_2	ELSE_2	CALL_7
0x40020e7	          0x4885c0	                           test rax, rax	      1948	channel.c	FUNCTION_52	IF_2	ELSE_2	IF_5
0x40020ea	          0x4989c4	                            mov r12, rax	      1947	channel.c	FUNCTION_52	IF_2	ELSE_2	CALL_7
0x40020ed	     0xf8437ffffff	                            je 0x400202a	      1948	channel.c	FUNCTION_52	IF_2	ELSE_2	IF_5
0x40020f3	    0xc74018000000	               mov dword [rax + 0x18], 0	      1952	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3
0x40020fa	      0xe800000000	                          call 0x40020ff	      1953	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	CALL_9
0x40020ff	          0x4885c0	                           test rax, rax	      1954	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	IF_6
0x4002102	        0x49890424	                    mov qword [r12], rax	      1953	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	CALL_9
0x4002106	     0xf84e9000000	                            je 0x40021f5	      1954	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	IF_6
0x400210c	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1961	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x4002111	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1961	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x4002116	        0x48897808	                mov qword [rax + 8], rdi	      1961	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x400211a	          0x488930	                    mov qword [rax], rsi	      1961	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x400211d	        0x498b4660	            mov rax, qword [r14 + 0x60] 	      1962	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x4002121	      0x4989442410	             mov qword [r12 + 0x10], rax	      1962	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x4002126	        0x4d896660	             mov qword [r14 + 0x60], r12	      1963	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x400212a	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      1965	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x400212f	    0x49c744240800	                  mov qword [r12 + 8], 0	      1964	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x4002138	          0x4885c0	                           test rax, rax	      1965	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x400213b	     0xf84ab000000	                            je 0x40021ec	      1965	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4002141	        0x4c896008	                mov qword [rax + 8], r12	      1968	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x4002145	      0xe9eafeffff	                           jmp 0x4002034	      1968	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x400214a	    0x660f1f440000	                    nop word [rax + rax]	      1968	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x4002150	      0xbe00000000	                              mov esi, 0	      1941	channel.c	FUNCTION_52	IF_2	IF_3	ELSE_1	CALL_5
0x4002155	          0x4889ef	                            mov rdi, rbp	      1941	channel.c	FUNCTION_52	IF_2	IF_3	ELSE_1	CALL_5
0x4002158	            0x31c0	                            xor eax, eax	      1941	channel.c	FUNCTION_52	IF_2	IF_3	ELSE_1	CALL_5
0x400215a	      0xe8b1dfffff	                       call sym.ch_error	      1941	channel.c	FUNCTION_52	IF_2	IF_3	ELSE_1	CALL_5
0x400215f	      0xe9c6feffff	                           jmp 0x400202a	      1941	channel.c	FUNCTION_52	IF_2	IF_3	ELSE_1	CALL_5
0x4002164	         0xf1f4000	                         nop dword [rax]	      1941	channel.c	FUNCTION_52	IF_2	IF_3	ELSE_1	CALL_5
0x4002168	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      2039	channel.c	FUNCTION_52	ELSE_9	IF_14	CALL_21
0x400216d	          0x4531c9	                            xor r9d, r9d	      2039	channel.c	FUNCTION_52	ELSE_9	IF_14	CALL_21
0x4002170	    0x41b801000000	                              mov r8d, 1	      2039	channel.c	FUNCTION_52	ELSE_9	IF_14	CALL_21
0x4002176	          0x4489ee	                           mov esi, r13d	      2039	channel.c	FUNCTION_52	ELSE_9	IF_14	CALL_21
0x4002179	            0x31db	                            xor ebx, ebx	      2042	channel.c	FUNCTION_52	ELSE_9	IF_14
0x400217b	          0x4829f9	                            sub rcx, rdi	      2039	channel.c	FUNCTION_52	ELSE_9	IF_14	CALL_21
0x400217e	          0x4889ef	                            mov rdi, rbp	      2039	channel.c	FUNCTION_52	ELSE_9	IF_14	CALL_21
0x4002181	            0x29c1	                            sub ecx, eax	      2039	channel.c	FUNCTION_52	ELSE_9	IF_14	CALL_21
0x4002183	      0xe8b8e1ffff	                   call sym.channel_save	      2039	channel.c	FUNCTION_52	ELSE_9	IF_14	CALL_21
0x4002188	        0x4183ff02	                             cmp r15d, 2	      2042	channel.c	FUNCTION_52	ELSE_9	IF_14
0x400218c	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2042	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4002191	           0xf95c3	                                setne bl	      2042	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4002194	      0xe9c5fdffff	                           jmp 0x4001f5e	      2042	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4002199	     0xf1f80000000	                         nop dword [rax]	      2042	channel.c	FUNCTION_52	ELSE_9	IF_14
0x40021a0	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2010	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	CALL_17
0x40021a5	            0x31f6	                            xor esi, esi	      2010	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	CALL_17
0x40021a7	      0xe800000000	                          call 0x40021ac	      2010	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	CALL_17
0x40021ac	    0x498b86800000	            mov rax, qword [r14 + 0x80] 	      2012	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x40021b3	      0x4839442420	            cmp qword [rsp + 0x20], rax 	      2012	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x40021b8	     0xf8feafdffff	                            jg 0x4001fa8	      2012	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x40021be	     0xf84ccfdffff	                            je 0x4001f90	      2012	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x40021c4	      0xbe00000000	                              mov esi, 0	      2025	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	ELSE_8	CALL_19
0x40021c9	          0x4889ef	                            mov rdi, rbp	      2025	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	ELSE_8	CALL_19
0x40021cc	            0x31c0	                            xor eax, eax	      2025	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	ELSE_8	CALL_19
0x40021ce	    0xc74424400000	               mov dword [rsp + 0x40], 0	      2024	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	ELSE_8
0x40021d6	      0xe800000000	                          call 0x40021db	      2025	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	ELSE_8	CALL_19
0x40021db	      0xe963fdffff	                           jmp 0x4001f43	      2025	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	ELSE_8	CALL_19
0x40021e0	    0x498996880000	             mov qword [r14 + 0x88], rdx	      1993	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x40021e7	      0xe957fdffff	                           jmp 0x4001f43	      1993	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x40021ec	        0x4d896658	             mov qword [r14 + 0x58], r12	      1966	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x40021f0	      0xe93ffeffff	                           jmp 0x4002034	      1966	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x40021f5	          0x4c89e7	                            mov rdi, r12	      1956	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	IF_6	CALL_10
0x40021f8	      0xe800000000	                          call 0x40021fd	      1956	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	IF_6	CALL_10
0x40021fd	      0xe928feffff	                           jmp 0x400202a	      1956	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	IF_6	CALL_10
0x4002202	      0xe800000000	                          call 0x4002207	      2049	channel.c	FUNCTION_52
channel_read_json_block	DO,0:IF,10:FOR,1:ELSE,2:SWITCH,0:CALL,9:WHILE,0:functions,0	140
0x4005db0	            0x4157	                                push r15	      3451	channel.c	FUNCTION_81
0x4005db2	            0x4156	                                push r14	      3451	channel.c	FUNCTION_81
0x4005db4	          0x4189f7	                           mov r15d, esi	      3451	channel.c	FUNCTION_81
0x4005db7	            0x4155	                                push r13	      3451	channel.c	FUNCTION_81
0x4005db9	            0x4154	                                push r12	      3451	channel.c	FUNCTION_81
0x4005dbb	          0x4189cd	                           mov r13d, ecx	      3451	channel.c	FUNCTION_81
0x4005dbe	              0x55	                                push rbp	      3451	channel.c	FUNCTION_81
0x4005dbf	              0x53	                                push rbx	      3451	channel.c	FUNCTION_81
0x4005dc0	      0xbe00000000	                              mov esi, 0	      3457	channel.c	FUNCTION_81	CALL_1
0x4005dc5	          0x4889fb	                            mov rbx, rdi	      3451	channel.c	FUNCTION_81
0x4005dc8	          0x4d89c6	                             mov r14, r8	      3451	channel.c	FUNCTION_81
0x4005dcb	          0x4c89fd	                            mov rbp, r15	      3451	channel.c	FUNCTION_81
0x4005dce	        0x4883ec48	                           sub rsp, 0x48	      3451	channel.c	FUNCTION_81
0x4005dd2	    0x64488b042528	                mov rax, qword fs:[0x28]	      3451	channel.c	FUNCTION_81
0x4005ddb	      0x4889442438	             mov qword [rsp + 0x38], rax	      3451	channel.c	FUNCTION_81
0x4005de0	            0x31c0	                            xor eax, eax	      3451	channel.c	FUNCTION_81
0x4005de2	        0x89542414	             mov dword [rsp + 0x14], edx	      3451	channel.c	FUNCTION_81
0x4005de6	      0xe800000000	                          call 0x4005deb	      3457	channel.c	FUNCTION_81	CALL_1
0x4005deb	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	      3458	channel.c	FUNCTION_81	IF_1
0x4005def	            0x7416	                            je 0x4005e07	      3458	channel.c	FUNCTION_81	IF_1
0x4005df1	          0x4c89fa	                            mov rdx, r15	      3459	channel.c	FUNCTION_81	IF_1
0x4005df4	          0x4c89f8	                            mov rax, r15	      3459	channel.c	FUNCTION_81	IF_1
0x4005df7	        0x48c1e204	                              shl rdx, 4	      3459	channel.c	FUNCTION_81	IF_1
0x4005dfb	        0x48c1e008	                              shl rax, 8	      3459	channel.c	FUNCTION_81	IF_1
0x4005dff	          0x4801d0	                            add rax, rdx	      3459	channel.c	FUNCTION_81	IF_1
0x4005e02	      0x44896c0370	      mov dword [rbx + rax + 0x70], r13d	      3459	channel.c	FUNCTION_81	IF_1
0x4005e07	          0x4c89fa	                            mov rdx, r15	      3481	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005e0a	          0x4c89f8	                            mov rax, r15	      3481	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005e0d	        0x48c1e204	                              shl rdx, 4	      3481	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005e11	        0x48c1e008	                              shl rax, 8	      3481	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005e15	          0x4801d0	                            add rax, rdx	      3481	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005e18	          0x4801d8	                            add rax, rbx	      3481	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005e1b	      0x4889442408	                mov qword [rsp + 8], rax	      3481	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005e20	            0xeb0b	                           jmp 0x4005e2d	      3481	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005e22	    0x660f1f440000	                    nop word [rax + rax]	      3481	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005e28	          0x4585e4	                         test r12d, r12d	      3471	channel.c	FUNCTION_81	FOR_1	IF_3
0x4005e2b	            0x746b	                            je 0x4005e98	      3471	channel.c	FUNCTION_81	FOR_1	IF_3
0x4005e2d	            0x89ee	                            mov esi, ebp	      3462	channel.c	FUNCTION_81	FOR_1	CALL_2
0x4005e2f	          0x4889df	                            mov rdi, rbx	      3462	channel.c	FUNCTION_81	FOR_1	CALL_2
0x4005e32	      0xe859c0ffff	             call sym.channel_parse_json	      3462	channel.c	FUNCTION_81	FOR_1	CALL_2
0x4005e37	      0xb901000000	                              mov ecx, 1	      3465	channel.c	FUNCTION_81	FOR_1	IF_2	CALL_3
0x4005e3c	          0x4d89f0	                             mov r8, r14	      3465	channel.c	FUNCTION_81	FOR_1	IF_2	CALL_3
0x4005e3f	          0x4489ea	                           mov edx, r13d	      3465	channel.c	FUNCTION_81	FOR_1	IF_2	CALL_3
0x4005e42	            0x89ee	                            mov esi, ebp	      3465	channel.c	FUNCTION_81	FOR_1	IF_2	CALL_3
0x4005e44	          0x4889df	                            mov rdi, rbx	      3465	channel.c	FUNCTION_81	FOR_1	IF_2	CALL_3
0x4005e47	          0x4189c4	                           mov r12d, eax	      3462	channel.c	FUNCTION_81	FOR_1	CALL_2
0x4005e4a	      0xe8c1b4ffff	               call sym.channel_get_json	      3465	channel.c	FUNCTION_81	FOR_1	IF_2	CALL_3
0x4005e4f	          0x83f801	                              cmp eax, 1	      3465	channel.c	FUNCTION_81	FOR_1	IF_2	CALL_3
0x4005e52	            0x89c1	                            mov ecx, eax	      3465	channel.c	FUNCTION_81	FOR_1	IF_2	CALL_3
0x4005e54	            0x75d2	                           jne 0x4005e28	      3465	channel.c	FUNCTION_81	FOR_1	IF_2	CALL_3
0x4005e56	          0x4c89f8	                            mov rax, r15	      3467	channel.c	FUNCTION_81	FOR_1	IF_2
0x4005e59	        0x49c1e708	                              shl r15, 8	      3467	channel.c	FUNCTION_81	FOR_1	IF_2
0x4005e5d	        0x48c1e004	                              shl rax, 4	      3467	channel.c	FUNCTION_81	FOR_1	IF_2
0x4005e61	          0x4901c7	                            add r15, rax	      3467	channel.c	FUNCTION_81	FOR_1	IF_2
0x4005e64	    0x42c7443b7000	         mov dword [rbx + r15 + 0x70], 0	      3467	channel.c	FUNCTION_81	FOR_1	IF_2
0x4005e6d	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      3524	channel.c	FUNCTION_81
0x4005e72	    0x644833142528	                xor rdx, qword fs:[0x28]	      3524	channel.c	FUNCTION_81
0x4005e7b	            0x89c8	                            mov eax, ecx	      3524	channel.c	FUNCTION_81
0x4005e7d	     0xf8542010000	                           jne 0x4005fc5	      3524	channel.c	FUNCTION_81
0x4005e83	        0x4883c448	                           add rsp, 0x48	      3524	channel.c	FUNCTION_81
0x4005e87	              0x5b	                                 pop rbx	      3524	channel.c	FUNCTION_81
0x4005e88	              0x5d	                                 pop rbp	      3524	channel.c	FUNCTION_81
0x4005e89	            0x415c	                                 pop r12	      3524	channel.c	FUNCTION_81
0x4005e8b	            0x415d	                                 pop r13	      3524	channel.c	FUNCTION_81
0x4005e8d	            0x415e	                                 pop r14	      3524	channel.c	FUNCTION_81
0x4005e8f	            0x415f	                                 pop r15	      3524	channel.c	FUNCTION_81
0x4005e91	              0xc3	                                     ret	      3524	channel.c	FUNCTION_81
0x4005e92	    0x660f1f440000	                    nop word [rax + rax]	      3524	channel.c	FUNCTION_81
0x4005e98	      0xe800000000	                          call 0x4005e9d	      3475	channel.c	FUNCTION_81	FOR_1	IF_3	IF_4	CALL_4
0x4005e9d	            0x85c0	                           test eax, eax	      3475	channel.c	FUNCTION_81	FOR_1	IF_3	IF_4	CALL_4
0x4005e9f	            0x89c1	                            mov ecx, eax	      3475	channel.c	FUNCTION_81	FOR_1	IF_3	IF_4	CALL_4
0x4005ea1	            0x758a	                           jne 0x4005e2d	      3475	channel.c	FUNCTION_81	FOR_1	IF_3	IF_4	CALL_4
0x4005ea3	      0x488b442408	                mov rax, qword [rsp + 8]	      3481	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005ea8	      0x448b642414	           mov r12d, dword [rsp + 0x14] 	      3481	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005ead	      0x4883787800	               cmp qword [rax + 0x78], 0	      3481	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005eb2	     0xf858a000000	                           jne 0x4005f42	      3481	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005eb8	      0x488b442408	                mov rax, qword [rsp + 8]	      3507	channel.c	FUNCTION_81	FOR_1	IF_3
0x4005ebd	        0x448b4018	            mov r8d, dword [rax + 0x18] 	      3507	channel.c	FUNCTION_81	FOR_1	IF_3
0x4005ec1	        0x4183f8ff	             cmp r8d, 0xffffffffffffffff	      3508	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8
0x4005ec5	            0x7424	                            je 0x4005eeb	      3508	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8
0x4005ec7	          0x4489c6	                            mov esi, r8d	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x4005eca	          0x4489e2	                           mov edx, r12d	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x4005ecd	          0x4889df	                            mov rdi, rbx	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x4005ed0	        0x894c241c	             mov dword [rsp + 0x1c], ecx	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x4005ed4	      0x4489442418	             mov dword [rsp + 0x18], r8d	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x4005ed9	      0xe8b2d6ffff	                   call sym.channel_wait	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x4005ede	            0x85c0	                           test eax, eax	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x4005ee0	      0x448b442418	            mov r8d, dword [rsp + 0x18] 	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x4005ee5	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x4005ee9	            0x7443	                            je 0x4005f2e	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x4005eeb	      0x443b642414	           cmp r12d, dword [rsp + 0x14] 	      3511	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9
0x4005ef0	     0xf8537ffffff	                           jne 0x4005e2d	      3511	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9
0x4005ef6	        0x4183f8ff	             cmp r8d, 0xffffffffffffffff	      3513	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9	IF_10
0x4005efa	            0x7417	                            je 0x4005f13	      3513	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9	IF_10
0x4005efc	      0xbe00000000	                              mov esi, 0	      3514	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9	CALL_8
0x4005f01	          0x4889df	                            mov rdi, rbx	      3514	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9	CALL_8
0x4005f04	            0x31c0	                            xor eax, eax	      3514	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9	CALL_8
0x4005f06	        0x894c2408	                mov dword [rsp + 8], ecx	      3514	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9	CALL_8
0x4005f0a	      0xe800000000	                          call 0x4005f0f	      3514	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9	CALL_8
0x4005f0f	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      3514	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9	CALL_8
0x4005f13	          0x4c89f8	                            mov rax, r15	      3522	channel.c	FUNCTION_81
0x4005f16	        0x49c1e708	                              shl r15, 8	      3522	channel.c	FUNCTION_81
0x4005f1a	        0x48c1e004	                              shl rax, 4	      3522	channel.c	FUNCTION_81
0x4005f1e	          0x4c01f8	                            add rax, r15	      3522	channel.c	FUNCTION_81
0x4005f21	    0xc74403700000	         mov dword [rbx + rax + 0x70], 0	      3522	channel.c	FUNCTION_81
0x4005f29	      0xe93fffffff	                           jmp 0x4005e6d	      3523	channel.c	FUNCTION_81
0x4005f2e	      0xba00000000	                              mov edx, 0	      3519	channel.c	FUNCTION_81	FOR_1	IF_3	CALL_9
0x4005f33	            0x89ee	                            mov esi, ebp	      3519	channel.c	FUNCTION_81	FOR_1	IF_3	CALL_9
0x4005f35	          0x4889df	                            mov rdi, rbx	      3519	channel.c	FUNCTION_81	FOR_1	IF_3	CALL_9
0x4005f38	      0xe8d3d7ffff	                   call sym.channel_read	      3519	channel.c	FUNCTION_81	FOR_1	IF_3	CALL_9
0x4005f3d	      0xe9ebfeffff	                           jmp 0x4005e2d	      3519	channel.c	FUNCTION_81	FOR_1	IF_3	CALL_9
0x4005f42	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3489	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	CALL_6
0x4005f47	            0x31f6	                            xor esi, esi	      3489	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	CALL_6
0x4005f49	        0x894c2418	             mov dword [rsp + 0x18], ecx	      3489	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	CALL_6
0x4005f4d	      0xe800000000	                          call 0x4005f52	      3489	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	CALL_6
0x4005f52	      0x488b442408	                mov rax, qword [rsp + 8]	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005f57	    0x48bacff753e3	          movabs rdx, 0x20c49ba5e353f7cf	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005f61	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	      3497	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x4005f65	    0x488bb0880000	            mov rsi, qword [rax + 0x88] 	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005f6c	      0x482b742428	             sub rsi, qword [rsp + 0x28]	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005f71	    0x488bb8800000	            mov rdi, qword [rax + 0x80] 	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005f78	      0x482b7c2420	             sub rdi, qword [rsp + 0x20]	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005f7d	          0x4889f0	                            mov rax, rsi	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005f80	        0x48c1fe3f	                           sar rsi, 0x3f	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005f84	          0x48f7ea	                                imul rdx	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005f87	    0x69ffe8030000	                    imul edi, edi, 0x3e8	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005f8d	        0x48c1fa07	                              sar rdx, 7	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005f91	          0x4829f2	                            sub rdx, rsi	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005f94	      0x448d641701	               lea r12d, [rdi + rdx + 1]	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005f99	          0x4585e4	                         test r12d, r12d	      3497	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x4005f9c	            0x7810	                            js 0x4005fae	      3497	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x4005f9e	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      3497	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x4005fa2	          0x4439e0	                           cmp eax, r12d	      3497	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x4005fa5	        0x440f4ee0	                        cmovle r12d, eax	      3497	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x4005fa9	      0xe90affffff	                           jmp 0x4005eb8	      3497	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x4005fae	      0x488b442408	                mov rax, qword [rsp + 8]	      3501	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x4005fb3	      0x448b642414	           mov r12d, dword [rsp + 0x14] 	      3501	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x4005fb8	    0x48c740780000	               mov qword [rax + 0x78], 0	      3501	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x4005fc0	      0xe9f3feffff	                           jmp 0x4005eb8	      3501	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x4005fc5	      0xe800000000	                          call 0x4005fca	      3524	channel.c	FUNCTION_81
ch_log_lead	DO,0:IF,2:FOR,0:ELSE,1:SWITCH,0:CALL,3:WHILE,0:functions,0	48
0x4000040	              0x55	                                push rbp	       142	channel.c	FUNCTION_3
0x4000041	              0x53	                                push rbx	       142	channel.c	FUNCTION_3
0x4000042	        0x4883ec28	                           sub rsp, 0x28	       142	channel.c	FUNCTION_3
0x4000046	    0x64488b042528	                mov rax, qword fs:[0x28]	       142	channel.c	FUNCTION_3
0x400004f	      0x4889442418	             mov qword [rsp + 0x18], rax	       142	channel.c	FUNCTION_3
0x4000054	            0x31c0	                            xor eax, eax	       142	channel.c	FUNCTION_3
0x4000056	    0x48833d000000	               cmp qword [0x0400005e], 0	       143	channel.c	FUNCTION_3	IF_1
0x400005e	            0x7462	                            je 0x40000c2	       143	channel.c	FUNCTION_3	IF_1
0x4000060	          0x4889fd	                            mov rbp, rdi	       143	channel.c	FUNCTION_3	IF_1
0x4000063	          0x4889e7	                            mov rdi, rsp	       148	channel.c	FUNCTION_3	IF_1	CALL_1
0x4000066	          0x4889f3	                            mov rbx, rsi	       148	channel.c	FUNCTION_3	IF_1	CALL_1
0x4000069	      0xe800000000	                          call 0x400006e	       148	channel.c	FUNCTION_3	IF_1	CALL_1
0x400006e	      0xbe00000000	                              mov esi, 0	       149	channel.c	FUNCTION_3	IF_1	CALL_2
0x4000073	          0x4889e7	                            mov rdi, rsp	       149	channel.c	FUNCTION_3	IF_1	CALL_2
0x4000076	      0xe800000000	                          call 0x400007b	       149	channel.c	FUNCTION_3	IF_1	CALL_2
0x400007b	          0x4889e7	                            mov rdi, rsp	       150	channel.c	FUNCTION_3	IF_1	CALL_3
0x400007e	      0xe800000000	                          call 0x4000083	       150	channel.c	FUNCTION_3	IF_1	CALL_3
0x4000083	    0x488b3d000000	            mov rdi, qword [0x0400008a] 	        97	stdio2.h	CALL_20
0x400008a	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_20
0x400008d	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_20
0x4000092	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_20
0x4000094	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_20
0x4000099	      0xe800000000	                          call 0x400009e	        97	stdio2.h	CALL_20
0x400009e	          0x4885db	                           test rbx, rbx	       152	channel.c	FUNCTION_3	IF_1	IF_2
0x40000a1	            0x743d	                            je 0x40000e0	       152	channel.c	FUNCTION_3	IF_1	IF_2
0x40000a3	        0x448b4310	            mov r8d, dword [rbx + 0x10] 	        97	stdio2.h	CALL_20
0x40000a7	    0x488b3d000000	            mov rdi, qword [0x040000ae] 	        97	stdio2.h	CALL_20
0x40000ae	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_20
0x40000b1	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_20
0x40000b6	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_20
0x40000bb	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_20
0x40000bd	      0xe800000000	                          call 0x40000c2	        97	stdio2.h	CALL_20
0x40000c2	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       157	channel.c	FUNCTION_3
0x40000c7	    0x644833042528	                xor rax, qword fs:[0x28]	       157	channel.c	FUNCTION_3
0x40000d0	            0x752b	                           jne 0x40000fd	       157	channel.c	FUNCTION_3
0x40000d2	        0x4883c428	                           add rsp, 0x28	       157	channel.c	FUNCTION_3
0x40000d6	              0x5b	                                 pop rbx	       157	channel.c	FUNCTION_3
0x40000d7	              0x5d	                                 pop rbp	       157	channel.c	FUNCTION_3
0x40000d8	              0xc3	                                     ret	       157	channel.c	FUNCTION_3
0x40000d9	     0xf1f80000000	                         nop dword [rax]	       157	channel.c	FUNCTION_3
0x40000e0	    0x488b3d000000	            mov rdi, qword [0x040000e7] 	        97	stdio2.h	CALL_20
0x40000e7	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_20
0x40000ea	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_20
0x40000ef	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_20
0x40000f4	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_20
0x40000f6	      0xe800000000	                          call 0x40000fb	        97	stdio2.h	CALL_20
0x40000fb	            0xebc5	                           jmp 0x40000c2	       157	channel.c	FUNCTION_3
0x40000fd	      0xe800000000	                          call 0x4000102	       157	channel.c	FUNCTION_3
has_any_channel	DO,0:IF,0:FOR,0:ELSE,0:SWITCH,0:CALL,0:WHILE,0:functions,0	4
0x4001550	            0x31c0	                            xor eax, eax	       299	channel.c	FUNCTION_8
0x4001552	    0x48833d000000	               cmp qword [0x0400155a], 0	       299	channel.c	FUNCTION_8
0x400155a	           0xf95c0	                                setne al	       299	channel.c	FUNCTION_8
0x400155d	              0xc3	                                     ret	       300	channel.c	FUNCTION_8
channel_set_job	DO,0:IF,4:FOR,0:ELSE,3:SWITCH,0:CALL,3:WHILE,0:functions,0	58
0x4001b80	            0x4154	                                push r12	      1060	channel.c	FUNCTION_31
0x4001b82	              0x55	                                push rbp	      1060	channel.c	FUNCTION_31
0x4001b83	          0x4989f4	                            mov r12, rsi	      1060	channel.c	FUNCTION_31
0x4001b86	              0x53	                                push rbx	      1060	channel.c	FUNCTION_31
0x4001b87	    0x4889b7a80400	            mov qword [rdi + 0x4a8], rsi	      1061	channel.c	FUNCTION_31
0x4001b8e	          0x4889d6	                            mov rsi, rdx	      1063	channel.c	FUNCTION_31	CALL_1
0x4001b91	          0x4889fb	                            mov rbx, rdi	      1060	channel.c	FUNCTION_31
0x4001b94	          0x4889d5	                            mov rbp, rdx	      1060	channel.c	FUNCTION_31
0x4001b97	      0xe800000000	                          call 0x4001b9c	      1063	channel.c	FUNCTION_31	CALL_1
0x4001b9c	      0x498b742450	            mov rsi, qword [r12 + 0x50] 	      1065	channel.c	FUNCTION_31	IF_1
0x4001ba1	          0x4885f6	                           test rsi, rsi	      1065	channel.c	FUNCTION_31	IF_1
0x4001ba4	            0x7458	                            je 0x4001bfe	      1065	channel.c	FUNCTION_31	IF_1
0x4001ba6	    0x488dbb280400	                  lea rdi, [rbx + 0x428]	      1069	channel.c	FUNCTION_31	IF_1	CALL_2
0x4001bad	      0xe800000000	                          call 0x4001bb2	      1069	channel.c	FUNCTION_31	IF_1	CALL_2
0x4001bb2	    0x488b83280400	           mov rax, qword [rbx + 0x428] 	      1071	channel.c	FUNCTION_31	IF_1
0x4001bb9	      0xbe00000000	                              mov esi, 0	      1070	channel.c	FUNCTION_31	IF_1	CALL_3
0x4001bbe	          0x4889df	                            mov rdi, rbx	      1070	channel.c	FUNCTION_31	IF_1	CALL_3
0x4001bc1	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	      1070	channel.c	FUNCTION_31	IF_1	CALL_3
0x4001bc8	            0x31c0	                            xor eax, eax	      1070	channel.c	FUNCTION_31	IF_1	CALL_3
0x4001bca	      0xe800000000	                          call 0x4001bcf	      1070	channel.c	FUNCTION_31	IF_1	CALL_3
0x4001bcf	          0x8b4500	                    mov eax, dword [rbp]	      1072	channel.c	FUNCTION_31	IF_1	IF_2
0x4001bd2	      0xa900004000	                      test eax, 0x400000	      1072	channel.c	FUNCTION_31	IF_1	IF_2
0x4001bd7	            0x752f	                           jne 0x4001c08	      1072	channel.c	FUNCTION_31	IF_1	IF_2
0x4001bd9	    0x48c783480400	              mov qword [rbx + 0x448], 1	      1087	channel.c	FUNCTION_31	IF_1	ELSE_2
0x4001be4	      0x2500008000	                       and eax, 0x800000	      1087	channel.c	FUNCTION_31	IF_1	ELSE_2
0x4001be9	            0x85c0	                           test eax, eax	      1088	channel.c	FUNCTION_31	IF_1	IF_4
0x4001beb	            0x7563	                           jne 0x4001c50	      1088	channel.c	FUNCTION_31	IF_1	IF_4
0x4001bed	    0x488b83280400	           mov rax, qword [rbx + 0x428] 	      1088	channel.c	FUNCTION_31	IF_1	IF_4
0x4001bf4	          0x488b00	                    mov rax, qword [rax]	      1091	channel.c	FUNCTION_31	IF_1	ELSE_3
0x4001bf7	    0x488983500400	            mov qword [rbx + 0x450], rax	      1091	channel.c	FUNCTION_31	IF_1	ELSE_3
0x4001bfe	              0x5b	                                 pop rbx	      1093	channel.c	FUNCTION_31	ELSE_3
0x4001bff	              0x5d	                                 pop rbp	      1093	channel.c	FUNCTION_31	ELSE_3
0x4001c00	            0x415c	                                 pop r12	      1093	channel.c	FUNCTION_31	ELSE_3
0x4001c02	              0xc3	                                     ret	      1093	channel.c	FUNCTION_31	ELSE_3
0x4001c03	       0xf1f440000	                   nop dword [rax + rax]	      1093	channel.c	FUNCTION_31	ELSE_3
0x4001c08	    0x488b95900100	           mov rdx, qword [rbp + 0x190] 	      1074	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c0f	          0x4885d2	                           test rdx, rdx	      1074	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c12	            0x7554	                           jne 0x4001c68	      1074	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c14	      0x2500008000	                       and eax, 0x800000	      1074	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c19	            0x7552	                           jne 0x4001c6d	      1074	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c1b	    0x488b83280400	           mov rax, qword [rbx + 0x428] 	      1078	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c22	          0x488b08	                    mov rcx, qword [rax]	      1080	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c25	    0xc780341c0000	            mov dword [rax + 0x1c34], 1 	      1078	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c2f	    0xc78340040000	              mov dword [rbx + 0x440], 1	      1079	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c39	        0x488d5101	                      lea rdx, [rcx + 1]	      1080	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c3d	    0x488993480400	            mov qword [rbx + 0x448], rdx	      1080	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c44	            0xebae	                           jmp 0x4001bf4	      1080	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c46	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1080	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c50	    0x488b85980100	           mov rax, qword [rbp + 0x198] 	      1089	channel.c	FUNCTION_31	IF_1	IF_4
0x4001c57	    0x488983500400	            mov qword [rbx + 0x450], rax	      1089	channel.c	FUNCTION_31	IF_1	IF_4
0x4001c5e	              0x5b	                                 pop rbx	      1093	channel.c	FUNCTION_31	ELSE_3
0x4001c5f	              0x5d	                                 pop rbp	      1093	channel.c	FUNCTION_31	ELSE_3
0x4001c60	            0x415c	                                 pop r12	      1093	channel.c	FUNCTION_31	ELSE_3
0x4001c62	              0xc3	                                     ret	      1093	channel.c	FUNCTION_31	ELSE_3
0x4001c63	       0xf1f440000	                   nop dword [rax + rax]	      1093	channel.c	FUNCTION_31	ELSE_3
0x4001c68	      0x2500008000	                       and eax, 0x800000	      1093	channel.c	FUNCTION_31	ELSE_3
0x4001c6d	    0x488993480400	            mov qword [rbx + 0x448], rdx	      1084	channel.c	FUNCTION_31	IF_1	IF_2	ELSE_1
0x4001c74	      0xe970ffffff	                           jmp 0x4001be9	      1084	channel.c	FUNCTION_31	IF_1	IF_2	ELSE_1
job_stop_on_exit	DO,0:IF,1:FOR,1:ELSE,0:SWITCH,0:CALL,1:WHILE,0:functions,0	21
0x40085f0	              0x53	                                push rbx	      5459	channel.c	FUNCTION_127
0x40085f1	    0x488b1d000000	            mov rbx, qword [0x040085f8] 	      5462	channel.c	FUNCTION_127	FOR_1
0x40085f8	          0x4885db	                           test rbx, rbx	      5462	channel.c	FUNCTION_127	FOR_1
0x40085fb	            0x750b	                           jne 0x4008608	      5462	channel.c	FUNCTION_127	FOR_1
0x40085fd	            0xeb28	                           jmp 0x4008627	      5462	channel.c	FUNCTION_127	FOR_1
0x40085ff	              0x90	                                     nop	      5462	channel.c	FUNCTION_127	FOR_1
0x4008600	          0x488b1b	                    mov rbx, qword [rbx]	      5462	channel.c	FUNCTION_127	FOR_1
0x4008603	          0x4885db	                           test rbx, rbx	      5462	channel.c	FUNCTION_127	FOR_1
0x4008606	            0x741f	                            je 0x4008627	      5462	channel.c	FUNCTION_127	FOR_1
0x4008608	        0x837b2801	               cmp dword [rbx + 0x28], 1	      5463	channel.c	FUNCTION_127	FOR_1	IF_1
0x400860c	            0x75f2	                           jne 0x4008600	      5463	channel.c	FUNCTION_127	FOR_1	IF_1
0x400860e	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      5463	channel.c	FUNCTION_127	FOR_1	IF_1
0x4008612	          0x4885f6	                           test rsi, rsi	      5463	channel.c	FUNCTION_127	FOR_1	IF_1
0x4008615	            0x74e9	                            je 0x4008600	      5463	channel.c	FUNCTION_127	FOR_1	IF_1
0x4008617	          0x4889df	                            mov rdi, rbx	      5464	channel.c	FUNCTION_127	FOR_1	IF_1
0x400861a	      0xe800000000	                          call 0x400861f	      5464	channel.c	FUNCTION_127	FOR_1	IF_1
0x400861f	          0x488b1b	                    mov rbx, qword [rbx]	      5462	channel.c	FUNCTION_127	FOR_1
0x4008622	          0x4885db	                           test rbx, rbx	      5462	channel.c	FUNCTION_127	FOR_1
0x4008625	            0x75e1	                           jne 0x4008608	      5462	channel.c	FUNCTION_127	FOR_1
0x4008627	              0x5b	                                 pop rbx	      5465	channel.c	FUNCTION_127
0x4008628	              0xc3	                                     ret	      5465	channel.c	FUNCTION_127
channel_any_readahead	DO,0:IF,2:FOR,0:ELSE,1:SWITCH,0:CALL,1:WHILE,1:functions,0	39
0x4005fd0	    0x488b0d000000	            mov rcx, qword [0x04005fd7] 	      4311	channel.c	FUNCTION_96
0x4005fd7	          0x4885c9	                           test rcx, rcx	      4314	channel.c	FUNCTION_96	WHILE_1
0x4005fda	            0x7461	                            je 0x400603d	      4314	channel.c	FUNCTION_96	WHILE_1
0x4005fdc	         0xf1f4000	                         nop dword [rax]	      4314	channel.c	FUNCTION_96	WHILE_1
0x4005fe0	            0x31f6	                            xor esi, esi	      4323	channel.c	FUNCTION_96	WHILE_1	ELSE_1
0x4005fe2	            0x89f0	                            mov eax, esi	      2737	channel.c	FUNCTION_64
0x4005fe4	          0x4889c2	                            mov rdx, rax	      2737	channel.c	FUNCTION_64
0x4005fe7	        0x48c1e008	                              shl rax, 8	      2737	channel.c	FUNCTION_64
0x4005feb	        0x48c1e204	                              shl rdx, 4	      2737	channel.c	FUNCTION_64
0x4005fef	          0x4801d0	                            add rax, rdx	      2737	channel.c	FUNCTION_64
0x4005ff2	          0x4801c8	                            add rax, rcx	      2737	channel.c	FUNCTION_64
0x4005ff5	          0x8b7820	            mov edi, dword [rax + 0x20] 	      2739	channel.c	FUNCTION_64	IF_1
0x4005ff8	          0x8d57fe	                      lea edx, [rdi - 2]	      2739	channel.c	FUNCTION_64	IF_1
0x4005ffb	          0x83fa01	                              cmp edx, 1	      2739	channel.c	FUNCTION_64	IF_1
0x4005ffe	            0x7620	                           jbe 0x4006020	      2739	channel.c	FUNCTION_64	IF_1
0x4006000	      0x4883784000	               cmp qword [rax + 0x40], 0	      2746	channel.c	FUNCTION_64	CALL_1
0x4006005	           0xf95c0	                                setne al	      2746	channel.c	FUNCTION_64	CALL_1
0x4006008	           0xfb6c0	                           movzx eax, al	      2746	channel.c	FUNCTION_64	CALL_1
0x400600b	            0x85c0	                           test eax, eax	      4316	channel.c	FUNCTION_96	WHILE_1	IF_1	CALL_1
0x400600d	            0x7520	                           jne 0x400602f	      4316	channel.c	FUNCTION_96	WHILE_1	IF_1	CALL_1
0x400600f	          0x83fe01	                              cmp esi, 1	      4318	channel.c	FUNCTION_96	WHILE_1	IF_2
0x4006012	            0x7624	                           jbe 0x4006038	      4318	channel.c	FUNCTION_96	WHILE_1	IF_2
0x4006014	          0x488b09	                    mov rcx, qword [rcx]	      4322	channel.c	FUNCTION_96	WHILE_1	ELSE_1
0x4006017	          0x4885c9	                           test rcx, rcx	      4314	channel.c	FUNCTION_96	WHILE_1
0x400601a	            0x75c4	                           jne 0x4005fe0	      4314	channel.c	FUNCTION_96	WHILE_1
0x400601c	            0xf3c3	                                     ret	      4314	channel.c	FUNCTION_96	WHILE_1
0x400601e	            0x6690	                                     nop	      4314	channel.c	FUNCTION_96	WHILE_1
0x4006020	      0x4883785800	               cmp qword [rax + 0x58], 0	      2744	channel.c	FUNCTION_64	IF_1
0x4006025	           0xf95c0	                                setne al	      2744	channel.c	FUNCTION_64	IF_1
0x4006028	           0xfb6c0	                           movzx eax, al	      2744	channel.c	FUNCTION_64	IF_1
0x400602b	            0x85c0	                           test eax, eax	      4316	channel.c	FUNCTION_96	WHILE_1	IF_1	CALL_1
0x400602d	            0x74e0	                            je 0x400600f	      4316	channel.c	FUNCTION_96	WHILE_1	IF_1	CALL_1
0x400602f	      0xb801000000	                              mov eax, 1	      4317	channel.c	FUNCTION_96	WHILE_1	IF_1
0x4006034	              0xc3	                                     ret	      4327	channel.c	FUNCTION_96
0x4006035	           0xf1f00	                         nop dword [rax]	      4327	channel.c	FUNCTION_96
0x4006038	          0x83c601	                              add esi, 1	      4319	channel.c	FUNCTION_96	WHILE_1	IF_2
0x400603b	            0xeba5	                           jmp 0x4005fe2	      4319	channel.c	FUNCTION_96	WHILE_1	IF_2
0x400603d	            0x31c0	                            xor eax, eax	      4326	channel.c	FUNCTION_96
0x400603f	              0xc3	                                     ret	      4326	channel.c	FUNCTION_96
channel_save	DO,0:IF,8:FOR,1:ELSE,4:SWITCH,0:CALL,7:WHILE,0:functions,0	161
0x4000340	            0x4157	                                push r15	      1792	channel.c	FUNCTION_50
0x4000342	            0x4156	                                push r14	      1792	channel.c	FUNCTION_50
0x4000344	          0x4189cf	                           mov r15d, ecx	      1792	channel.c	FUNCTION_50
0x4000347	            0x4155	                                push r13	      1792	channel.c	FUNCTION_50
0x4000349	            0x4154	                                push r12	      1792	channel.c	FUNCTION_50
0x400034b	          0x4531f6	                          xor r14d, r14d	      1800	channel.c	FUNCTION_50	IF_1
0x400034e	              0x55	                                push rbp	      1792	channel.c	FUNCTION_50
0x400034f	              0x53	                                push rbx	      1792	channel.c	FUNCTION_50
0x4000350	          0x4889fb	                            mov rbx, rdi	      1792	channel.c	FUNCTION_50
0x4000353	      0xbf20000000	                           mov edi, 0x20	      1798	channel.c	FUNCTION_50	CALL_1
0x4000358	          0x4889d5	                            mov rbp, rdx	      1792	channel.c	FUNCTION_50
0x400035b	          0x4d89cc	                             mov r12, r9	      1792	channel.c	FUNCTION_50
0x400035e	        0x4883ec18	                           sub rsp, 0x18	      1792	channel.c	FUNCTION_50
0x4000362	          0x893424	                    mov dword [rsp], esi	      1792	channel.c	FUNCTION_50
0x4000365	      0x448944240c	              mov dword [rsp + 0xc], r8d	      1792	channel.c	FUNCTION_50
0x400036a	      0xe800000000	                          call 0x400036f	      1798	channel.c	FUNCTION_50	CALL_1
0x400036f	          0x4885c0	                           test rax, rax	      1799	channel.c	FUNCTION_50	IF_1
0x4000372	     0xf8460010000	                            je 0x40004d8	      1799	channel.c	FUNCTION_50	IF_1
0x4000378	        0x418d7f01	                      lea edi, [r15 + 1]	      1803	channel.c	FUNCTION_50	CALL_2
0x400037c	          0x4989c5	                            mov r13, rax	      1803	channel.c	FUNCTION_50	CALL_2
0x400037f	      0xe800000000	                          call 0x4000384	      1803	channel.c	FUNCTION_50	CALL_2
0x4000384	          0x4885c0	                           test rax, rax	      1804	channel.c	FUNCTION_50	IF_2
0x4000387	        0x49894500	                    mov qword [r13], rax	      1803	channel.c	FUNCTION_50	CALL_2
0x400038b	     0xf8405020000	                            je 0x4000596	      1804	channel.c	FUNCTION_50	IF_2
0x4000391	        0x448b3424	                   mov r14d, dword [rsp]	      1810	channel.c	FUNCTION_50	IF_3
0x4000395	          0x4c89f1	                            mov rcx, r14	      1810	channel.c	FUNCTION_50	IF_3
0x4000398	          0x4c89f2	                            mov rdx, r14	      1810	channel.c	FUNCTION_50	IF_3
0x400039b	        0x48c1e104	                              shl rcx, 4	      1810	channel.c	FUNCTION_50	IF_3
0x400039f	        0x48c1e208	                              shl rdx, 8	      1810	channel.c	FUNCTION_50	IF_3
0x40003a3	          0x4801ca	                            add rdx, rcx	      1810	channel.c	FUNCTION_50	IF_3
0x40003a6	        0x8b541320	      mov edx, dword [rbx + rdx + 0x20] 	      1810	channel.c	FUNCTION_50	IF_3
0x40003aa	            0x85d2	                           test edx, edx	      1810	channel.c	FUNCTION_50	IF_3
0x40003ac	     0xf858e010000	                           jne 0x4000540	      1810	channel.c	FUNCTION_50	IF_3
0x40003b2	          0x4585ff	                         test r15d, r15d	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x40003b5	            0x7e49	                           jle 0x4000400	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x40003b7	          0x4889ea	                            mov rdx, rbp	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x40003ba	      0xbf01000000	                              mov edi, 1	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x40003bf	            0xeb1c	                           jmp 0x40003dd	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x40003c1	     0xf1f80000000	                         nop dword [rax]	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x40003c8	          0x4139ff	                           cmp r15d, edi	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x40003cb	        0x488d7001	                      lea rsi, [rax + 1]	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40003cf	            0x8808	                      mov byte [rax], cl	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40003d1	            0x7e35	                           jle 0x4000408	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x40003d3	        0x4883c201	                              add rdx, 1	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x40003d7	          0x83c701	                              add edi, 1	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x40003da	          0x4889f0	                            mov rax, rsi	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x40003dd	           0xfb60a	                   movzx ecx, byte [rdx]	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40003e0	          0x80f90d	                             cmp cl, 0xd	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40003e3	            0x75e3	                           jne 0x40003c8	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40003e5	          0x4139ff	                           cmp r15d, edi	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40003e8	     0xf8eb5010000	                           jle 0x40005a3	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40003ee	        0x807a010a	                 cmp byte [rdx + 1], 0xa	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40003f2	          0x4889c6	                            mov rsi, rax	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40003f5	            0x74dc	                            je 0x40003d3	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40003f7	        0x488d7001	                      lea rsi, [rax + 1]	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40003fb	          0xc6000d	                     mov byte [rax], 0xd	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40003fe	            0xebd3	                           jmp 0x40003d3	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x4000400	          0x4889c6	                            mov rsi, rax	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x4000403	       0xf1f440000	                   nop dword [rax + rax]	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x4000408	          0xc60600	                       mov byte [rsi], 0	      1817	channel.c	FUNCTION_50	IF_3
0x400040b	        0x492b7500	                    sub rsi, qword [r13]	      1818	channel.c	FUNCTION_50	IF_3
0x400040f	        0x49897508	                mov qword [r13 + 8], rsi	      1818	channel.c	FUNCTION_50	IF_3
0x4000413	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      1827	channel.c	FUNCTION_50	IF_5
0x4000417	            0x85c0	                           test eax, eax	      1827	channel.c	FUNCTION_50	IF_5
0x4000419	     0xf84d1000000	                            je 0x40004f0	      1827	channel.c	FUNCTION_50	IF_5
0x400041f	          0x4c89f2	                            mov rdx, r14	      1830	channel.c	FUNCTION_50	IF_5
0x4000422	          0x4c89f0	                            mov rax, r14	      1830	channel.c	FUNCTION_50	IF_5
0x4000425	        0x48c1e204	                              shl rdx, 4	      1830	channel.c	FUNCTION_50	IF_5
0x4000429	        0x48c1e008	                              shl rax, 8	      1830	channel.c	FUNCTION_50	IF_5
0x400042d	          0x4801d0	                            add rax, rdx	      1830	channel.c	FUNCTION_50	IF_5
0x4000430	          0x4801d8	                            add rax, rbx	      1830	channel.c	FUNCTION_50	IF_5
0x4000433	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      1830	channel.c	FUNCTION_50	IF_5
0x4000437	    0x49c745180000	               mov qword [r13 + 0x18], 0	      1831	channel.c	FUNCTION_50	IF_5
0x400043f	        0x49895510	             mov qword [r13 + 0x10], rdx	      1830	channel.c	FUNCTION_50	IF_5
0x4000443	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      1832	channel.c	FUNCTION_50	IF_5	IF_6
0x4000447	          0x4885d2	                           test rdx, rdx	      1832	channel.c	FUNCTION_50	IF_5	IF_6
0x400044a	     0xf8430010000	                            je 0x4000580	      1832	channel.c	FUNCTION_50	IF_5	IF_6
0x4000450	        0x4c896a18	             mov qword [rdx + 0x18], r13	      1835	channel.c	FUNCTION_50	IF_5	ELSE_2
0x4000454	          0x4c89f0	                            mov rax, r14	      1836	channel.c	FUNCTION_50	IF_5
0x4000457	        0x49c1e608	                              shl r14, 8	      1836	channel.c	FUNCTION_50	IF_5
0x400045b	        0x48c1e004	                              shl rax, 4	      1836	channel.c	FUNCTION_50	IF_5
0x400045f	          0x4901c6	                            add r14, rax	      1836	channel.c	FUNCTION_50	IF_5
0x4000462	      0x4e896c3340	       mov qword [rbx + r14 + 0x40], r13	      1836	channel.c	FUNCTION_50	IF_5
0x4000467	    0x48833d000000	               cmp qword [0x0400046f], 0	      1850	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_5
0x400046f	     0xf84fb000000	                            je 0x4000570	      1850	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_5
0x4000475	          0x4d85e4	                           test r12, r12	      1850	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_5
0x4000478	     0xf84f2000000	                            je 0x4000570	      1850	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_5
0x400047e	          0x4889de	                            mov rsi, rbx	      1852	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_6
0x4000481	          0x4c89e7	                            mov rdi, r12	      1852	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_6
0x4000484	    0x41be01000000	                             mov r14d, 1	      1857	channel.c	FUNCTION_50
0x400048a	      0xe8b1fbffff	                    call sym.ch_log_lead	      1852	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_6
0x400048f	    0x488b35000000	            mov rsi, qword [0x04000496] 	        97	stdio2.h	CALL_20
0x4000496	      0xbf27000000	                           mov edi, 0x27	        97	stdio2.h	CALL_20
0x400049b	      0xe800000000	                          call 0x40004a0	        97	stdio2.h	CALL_20
0x40004a0	    0x488b0d000000	            mov rcx, qword [0x040004a7] 	      1854	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_7
0x40004a7	          0x4963f7	                        movsxd rsi, r15d	      1854	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_7
0x40004aa	      0xba01000000	                              mov edx, 1	      1854	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_7
0x40004af	          0x4889ef	                            mov rdi, rbp	      1854	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_7
0x40004b2	      0xe800000000	                          call 0x40004b7	      1854	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_7
0x40004b7	    0x488b0d000000	            mov rcx, qword [0x040004be] 	        97	stdio2.h	CALL_20
0x40004be	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_20
0x40004c3	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_20
0x40004c8	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_20
0x40004cd	    0x890500000000	            mov dword [0x040004d3], eax 	      1854	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_7
0x40004d3	      0xe800000000	                          call 0x40004d8	        97	stdio2.h	CALL_20
0x40004d8	        0x4883c418	                           add rsp, 0x18	      1858	channel.c	FUNCTION_50
0x40004dc	          0x4489f0	                           mov eax, r14d	      1858	channel.c	FUNCTION_50
0x40004df	              0x5b	                                 pop rbx	      1858	channel.c	FUNCTION_50
0x40004e0	              0x5d	                                 pop rbp	      1858	channel.c	FUNCTION_50
0x40004e1	            0x415c	                                 pop r12	      1858	channel.c	FUNCTION_50
0x40004e3	            0x415d	                                 pop r13	      1858	channel.c	FUNCTION_50
0x40004e5	            0x415e	                                 pop r14	      1858	channel.c	FUNCTION_50
0x40004e7	            0x415f	                                 pop r15	      1858	channel.c	FUNCTION_50
0x40004e9	              0xc3	                                     ret	      1858	channel.c	FUNCTION_50
0x40004ea	    0x660f1f440000	                    nop word [rax + rax]	      1858	channel.c	FUNCTION_50
0x40004f0	          0x4c89f2	                            mov rdx, r14	      1842	channel.c	FUNCTION_50	ELSE_3
0x40004f3	          0x4c89f0	                            mov rax, r14	      1842	channel.c	FUNCTION_50	ELSE_3
0x40004f6	    0x49c745100000	               mov qword [r13 + 0x10], 0	      1841	channel.c	FUNCTION_50	ELSE_3
0x40004fe	        0x48c1e204	                              shl rdx, 4	      1842	channel.c	FUNCTION_50	ELSE_3
0x4000502	        0x48c1e008	                              shl rax, 8	      1842	channel.c	FUNCTION_50	ELSE_3
0x4000506	          0x4801d0	                            add rax, rdx	      1842	channel.c	FUNCTION_50	ELSE_3
0x4000509	          0x4801d8	                            add rax, rbx	      1842	channel.c	FUNCTION_50	ELSE_3
0x400050c	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      1842	channel.c	FUNCTION_50	ELSE_3
0x4000510	        0x49895518	             mov qword [r13 + 0x18], rdx	      1842	channel.c	FUNCTION_50	ELSE_3
0x4000514	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      1843	channel.c	FUNCTION_50	ELSE_3	IF_7
0x4000518	          0x4885d2	                           test rdx, rdx	      1843	channel.c	FUNCTION_50	ELSE_3	IF_7
0x400051b	            0x7473	                            je 0x4000590	      1843	channel.c	FUNCTION_50	ELSE_3	IF_7
0x400051d	        0x4c896a10	             mov qword [rdx + 0x10], r13	      1846	channel.c	FUNCTION_50	ELSE_3	ELSE_4
0x4000521	          0x4c89f0	                            mov rax, r14	      1847	channel.c	FUNCTION_50	ELSE_3	ELSE_4
0x4000524	        0x49c1e608	                              shl r14, 8	      1847	channel.c	FUNCTION_50	ELSE_3	ELSE_4
0x4000528	        0x48c1e004	                              shl rax, 4	      1847	channel.c	FUNCTION_50	ELSE_3	ELSE_4
0x400052c	          0x4901c6	                            add r14, rax	      1847	channel.c	FUNCTION_50	ELSE_3	ELSE_4
0x400052f	      0x4e896c3348	       mov qword [rbx + r14 + 0x48], r13	      1847	channel.c	FUNCTION_50	ELSE_3	ELSE_4
0x4000534	      0xe92effffff	                           jmp 0x4000467	      1847	channel.c	FUNCTION_50	ELSE_3	ELSE_4
0x4000539	     0xf1f80000000	                         nop dword [rax]	      1847	channel.c	FUNCTION_50	ELSE_3	ELSE_4
0x4000540	          0x4963cf	                        movsxd rcx, r15d	      1822	channel.c	FUNCTION_50	ELSE_1	CALL_4
0x4000543	          0x4889ee	                            mov rsi, rbp	        59	string3.h	FUNCTION_136	CALL_3
0x4000546	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_136	CALL_3
0x4000549	          0x4889ca	                            mov rdx, rcx	        59	string3.h	FUNCTION_136	CALL_3
0x400054c	        0x48890c24	                    mov qword [rsp], rcx	        59	string3.h	FUNCTION_136	CALL_3
0x4000550	      0xe800000000	                          call 0x4000555	        59	string3.h	FUNCTION_136	CALL_3
0x4000555	        0x488b0c24	                    mov rcx, qword [rsp]	      1823	channel.c	FUNCTION_50	ELSE_1
0x4000559	        0x498b4500	                    mov rax, qword [r13]	      1823	channel.c	FUNCTION_50	ELSE_1
0x400055d	        0xc6040800	                 mov byte [rax + rcx], 0	      1823	channel.c	FUNCTION_50	ELSE_1
0x4000561	        0x49894d08	                mov qword [r13 + 8], rcx	      1824	channel.c	FUNCTION_50	ELSE_1
0x4000565	      0xe9a9feffff	                           jmp 0x4000413	      1824	channel.c	FUNCTION_50	ELSE_1
0x400056a	    0x660f1f440000	                    nop word [rax + rax]	      1824	channel.c	FUNCTION_50	ELSE_1
0x4000570	    0x41be01000000	                             mov r14d, 1	      1857	channel.c	FUNCTION_50
0x4000576	      0xe95dffffff	                           jmp 0x40004d8	      1857	channel.c	FUNCTION_50
0x400057b	       0xf1f440000	                   nop dword [rax + rax]	      1857	channel.c	FUNCTION_50
0x4000580	        0x4c896848	             mov qword [rax + 0x48], r13	      1833	channel.c	FUNCTION_50	IF_5	IF_6
0x4000584	      0xe9cbfeffff	                           jmp 0x4000454	      1833	channel.c	FUNCTION_50	IF_5	IF_6
0x4000589	     0xf1f80000000	                         nop dword [rax]	      1833	channel.c	FUNCTION_50	IF_5	IF_6
0x4000590	        0x4c896840	             mov qword [rax + 0x40], r13	      1844	channel.c	FUNCTION_50	ELSE_3	IF_7
0x4000594	            0xeb8b	                           jmp 0x4000521	      1844	channel.c	FUNCTION_50	ELSE_3	IF_7
0x4000596	          0x4c89ef	                            mov rdi, r13	      1806	channel.c	FUNCTION_50	IF_2	CALL_3
0x4000599	      0xe800000000	                          call 0x400059e	      1806	channel.c	FUNCTION_50	IF_2	CALL_3
0x400059e	      0xe935ffffff	                           jmp 0x40004d8	      1807	channel.c	FUNCTION_50	IF_2
0x40005a3	        0x488d7001	                      lea rsi, [rax + 1]	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40005a7	          0xc6000d	                     mov byte [rax], 0xd	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40005aa	      0xe959feffff	                           jmp 0x4000408	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
common_channel_read	DO,0:IF,8:FOR,0:ELSE,2:SWITCH,0:CALL,10:WHILE,0:functions,0	104
0x4007930	            0x4156	                                push r14	      3531	channel.c	FUNCTION_82
0x4007932	            0x4155	                                push r13	      3531	channel.c	FUNCTION_82
0x4007934	      0xb96f000000	                           mov ecx, 0x6f	        90	string3.h	FUNCTION_138	CALL_6
0x4007939	            0x4154	                                push r12	      3531	channel.c	FUNCTION_82
0x400793b	              0x55	                                push rbp	      3531	channel.c	FUNCTION_82
0x400793c	          0x4989fd	                            mov r13, rdi	      3531	channel.c	FUNCTION_82
0x400793f	              0x53	                                push rbx	      3531	channel.c	FUNCTION_82
0x4007940	          0x4889f5	                            mov rbp, rsi	      3531	channel.c	FUNCTION_82
0x4007943	          0x4189d4	                           mov r12d, edx	      3531	channel.c	FUNCTION_82
0x4007946	      0xba00320000	                         mov edx, 0x3200	      3545	channel.c	FUNCTION_82	IF_1	CALL_2
0x400794b	    0x4881ec900300	                          sub rsp, 0x390	      3531	channel.c	FUNCTION_82
0x4007952	    0xc70602000000	                      mov dword [rsi], 2	      3541	channel.c	FUNCTION_82
0x4007958	    0x48c746080000	                  mov qword [rsi + 8], 0	      3542	channel.c	FUNCTION_82
0x4007960	      0x488d5c2410	                   lea rbx, [rsp + 0x10]	        90	string3.h	FUNCTION_138	CALL_6
0x4007965	    0x48c744240800	                  mov qword [rsp + 8], 0	      3538	channel.c	FUNCTION_82
0x400796e	    0x64488b042528	                mov rax, qword fs:[0x28]	      3531	channel.c	FUNCTION_82
0x4007977	    0x488984248803	            mov qword [rsp + 0x388], rax	      3531	channel.c	FUNCTION_82
0x400797f	            0x31c0	                            xor eax, eax	      3531	channel.c	FUNCTION_82
0x4007981	          0x4889df	                            mov rdi, rbx	        90	string3.h	FUNCTION_138	CALL_6
0x4007984	          0x4889de	                            mov rsi, rbx	      3545	channel.c	FUNCTION_82	IF_1	CALL_2
0x4007987	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_138	CALL_6
0x400798a	        0x498d7d10	                   lea rdi, [r13 + 0x10]	      3545	channel.c	FUNCTION_82	IF_1	CALL_2
0x400798e	      0xe800000000	                          call 0x4007993	      3545	channel.c	FUNCTION_82	IF_1	CALL_2
0x4007993	            0x85c0	                           test eax, eax	      3545	channel.c	FUNCTION_82	IF_1	CALL_2
0x4007995	     0xf84bd000000	                            je 0x4007a58	      3545	channel.c	FUNCTION_82	IF_1	CALL_2
0x400799b	      0xf644241110	           test byte [rsp + 0x11], 0x10 	      3549	channel.c	FUNCTION_82	IF_2
0x40079a0	     0xf84e2000000	                            je 0x4007a88	      3549	channel.c	FUNCTION_82	IF_2
0x40079a6	    0x448bb4241802	          mov r14d, dword [rsp + 0x218] 	      3550	channel.c	FUNCTION_82	IF_2
0x40079ae	      0xba01000000	                              mov edx, 1	      3551	channel.c	FUNCTION_82	CALL_3
0x40079b3	      0xbe01000000	                              mov esi, 1	      3551	channel.c	FUNCTION_82	CALL_3
0x40079b8	          0x4c89ef	                            mov rdi, r13	      3551	channel.c	FUNCTION_82	CALL_3
0x40079bb	          0x4489f1	                           mov ecx, r14d	      3551	channel.c	FUNCTION_82	CALL_3
0x40079be	      0xe800000000	                          call 0x40079c3	      3551	channel.c	FUNCTION_82	CALL_3
0x40079c3	          0x4885c0	                           test rax, rax	      3552	channel.c	FUNCTION_82	IF_3
0x40079c6	     0xf848c000000	                            je 0x4007a58	      3552	channel.c	FUNCTION_82	IF_3
0x40079cc	        0x4183fe04	                             cmp r14d, 4	      3554	channel.c	FUNCTION_82	IF_3	IF_4
0x40079d0	     0xf84ce000000	                            je 0x4007aa4	      3554	channel.c	FUNCTION_82	IF_3	IF_4
0x40079d6	          0x4489f2	                           mov edx, r14d	      4380	channel.c	FUNCTION_100
0x40079d9	          0x4889d1	                            mov rcx, rdx	      4380	channel.c	FUNCTION_100
0x40079dc	        0x48c1e208	                              shl rdx, 8	      4380	channel.c	FUNCTION_100
0x40079e0	        0x48c1e104	                              shl rcx, 4	      4380	channel.c	FUNCTION_100
0x40079e4	          0x4801ca	                            add rdx, rcx	      4380	channel.c	FUNCTION_100
0x40079e7	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	      3558	channel.c	FUNCTION_82	IF_3	IF_5
0x40079eb	          0x4801c2	                            add rdx, rax	      4380	channel.c	FUNCTION_100
0x40079ee	          0x8b7220	            mov esi, dword [rdx + 0x20] 	      4380	channel.c	FUNCTION_100
0x40079f1	          0x8b5228	            mov edx, dword [rdx + 0x28] 	      4389	channel.c	FUNCTION_101
0x40079f4	          0xf6c502	                              test ch, 2	      3559	channel.c	FUNCTION_82	IF_3	IF_5
0x40079f7	     0xf4594240802	         cmovne edx, dword [rsp + 0x208]	      3559	channel.c	FUNCTION_82	IF_3	IF_5
0x40079ff	          0x4585e4	                         test r12d, r12d	      3561	channel.c	FUNCTION_82	IF_3	IF_6
0x4007a02	     0xf85b0000000	                           jne 0x4007ab8	      3561	channel.c	FUNCTION_82	IF_3	IF_6
0x4007a08	          0x83fe01	                              cmp esi, 1	      3561	channel.c	FUNCTION_82	IF_3	IF_6
0x4007a0b	     0xf86a7000000	                           jbe 0x4007ab8	      3561	channel.c	FUNCTION_82	IF_3	IF_6
0x4007a11	          0x80e520	                            and ch, 0x20	      3567	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_7
0x4007a14	      0xb9ffffffff	                     mov ecx, 0xffffffff	      3567	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_7
0x4007a19	     0xf458c241c02	         cmovne ecx, dword [rsp + 0x21c]	      3567	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_7
0x4007a21	      0x4c8d442408	                       lea r8, [rsp + 8]	      3568	channel.c	FUNCTION_82	IF_3	ELSE_1	CALL_8
0x4007a26	          0x4889c7	                            mov rdi, rax	      3568	channel.c	FUNCTION_82	IF_3	ELSE_1	CALL_8
0x4007a29	          0x4489f6	                           mov esi, r14d	      3568	channel.c	FUNCTION_82	IF_3	ELSE_1	CALL_8
0x4007a2c	      0xe87fe3ffff	        call sym.channel_read_json_block	      3568	channel.c	FUNCTION_82	IF_3	ELSE_1	CALL_8
0x4007a31	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3569	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8
0x4007a36	          0x4885ff	                           test rdi, rdi	      3569	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8
0x4007a39	     0xf8491000000	                            je 0x4007ad0	      3569	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8
0x4007a3f	          0x488b07	                    mov rax, qword [rdi]	      3571	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8
0x4007a42	        0x488b5708	                mov rdx, qword [rdi + 8]	      3571	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8
0x4007a46	        0x48894500	                    mov qword [rbp], rax	      3571	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8
0x4007a4a	        0x48895508	                mov qword [rbp + 8], rdx	      3571	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8
0x4007a4e	      0xe800000000	                          call 0x4007a53	      3572	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8	CALL_9
0x4007a53	       0xf1f440000	                   nop dword [rax + rax]	      3572	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8	CALL_9
0x4007a58	          0x4889df	                            mov rdi, rbx	      3583	channel.c	FUNCTION_82	CALL_10
0x4007a5b	      0xe800000000	                          call 0x4007a60	      3583	channel.c	FUNCTION_82	CALL_10
0x4007a60	    0x488b84248803	           mov rax, qword [rsp + 0x388] 	      3584	channel.c	FUNCTION_82
0x4007a68	    0x644833042528	                xor rax, qword fs:[0x28]	      3584	channel.c	FUNCTION_82
0x4007a71	            0x7571	                           jne 0x4007ae4	      3584	channel.c	FUNCTION_82
0x4007a73	    0x4881c4900300	                          add rsp, 0x390	      3584	channel.c	FUNCTION_82
0x4007a7a	              0x5b	                                 pop rbx	      3584	channel.c	FUNCTION_82
0x4007a7b	              0x5d	                                 pop rbp	      3584	channel.c	FUNCTION_82
0x4007a7c	            0x415c	                                 pop r12	      3584	channel.c	FUNCTION_82
0x4007a7e	            0x415d	                                 pop r13	      3584	channel.c	FUNCTION_82
0x4007a80	            0x415e	                                 pop r14	      3584	channel.c	FUNCTION_82
0x4007a82	              0xc3	                                     ret	      3584	channel.c	FUNCTION_82
0x4007a83	       0xf1f440000	                   nop dword [rax + rax]	      3584	channel.c	FUNCTION_82
0x4007a88	      0xb904000000	                              mov ecx, 4	      3551	channel.c	FUNCTION_82	CALL_3
0x4007a8d	      0xba01000000	                              mov edx, 1	      3551	channel.c	FUNCTION_82	CALL_3
0x4007a92	      0xbe01000000	                              mov esi, 1	      3551	channel.c	FUNCTION_82	CALL_3
0x4007a97	          0x4c89ef	                            mov rdi, r13	      3551	channel.c	FUNCTION_82	CALL_3
0x4007a9a	      0xe800000000	                          call 0x4007a9f	      3551	channel.c	FUNCTION_82	CALL_3
0x4007a9f	          0x4885c0	                           test rax, rax	      3552	channel.c	FUNCTION_82	IF_3
0x4007aa2	            0x74b4	                            je 0x4007a58	      3552	channel.c	FUNCTION_82	IF_3
0x4007aa4	          0x4531f6	                          xor r14d, r14d	      3550	channel.c	FUNCTION_82	IF_2
0x4007aa7	        0x837818ff	cmp dword [rax + 0x18], 0xffffffffffffffff	      3550	channel.c	FUNCTION_82	IF_2
0x4007aab	        0x410f94c6	                               sete r14b	      3550	channel.c	FUNCTION_82	IF_2
0x4007aaf	      0xe922ffffff	                           jmp 0x40079d6	      3550	channel.c	FUNCTION_82	IF_2
0x4007ab4	         0xf1f4000	                         nop dword [rax]	      3550	channel.c	FUNCTION_82	IF_2
0x4007ab8	          0x4489e1	                           mov ecx, r12d	      3562	channel.c	FUNCTION_82	IF_3	IF_6	CALL_7
0x4007abb	          0x4489f6	                           mov esi, r14d	      3562	channel.c	FUNCTION_82	IF_3	IF_6	CALL_7
0x4007abe	          0x4889c7	                            mov rdi, rax	      3562	channel.c	FUNCTION_82	IF_3	IF_6	CALL_7
0x4007ac1	      0xe82abeffff	             call sym.channel_read_block	      3562	channel.c	FUNCTION_82	IF_3	IF_6	CALL_7
0x4007ac6	        0x48894508	                mov qword [rbp + 8], rax	      3562	channel.c	FUNCTION_82	IF_3	IF_6	CALL_7
0x4007aca	            0xeb8c	                           jmp 0x4007a58	      3562	channel.c	FUNCTION_82	IF_3	IF_6	CALL_7
0x4007acc	         0xf1f4000	                         nop dword [rax]	      3562	channel.c	FUNCTION_82	IF_3	IF_6	CALL_7
0x4007ad0	    0xc74500080000	                      mov dword [rbp], 8	      3576	channel.c	FUNCTION_82	IF_3	ELSE_1	ELSE_2
0x4007ad7	    0x48c745080200	                  mov qword [rbp + 8], 2	      3577	channel.c	FUNCTION_82	IF_3	ELSE_1	ELSE_2
0x4007adf	      0xe974ffffff	                           jmp 0x4007a58	      3577	channel.c	FUNCTION_82	IF_3	ELSE_1	ELSE_2
0x4007ae4	      0xe800000000	                          call 0x4007ae9	      3584	channel.c	FUNCTION_82
channel_get_json	DO,0:IF,2:FOR,0:ELSE,0:SWITCH,0:CALL,2:WHILE,1:functions,0	84
0x4001310	            0x4154	                                push r12	      2101	channel.c	FUNCTION_55
0x4001312	              0x55	                                push rbp	      2101	channel.c	FUNCTION_55
0x4001313	            0x89f5	                            mov ebp, esi	      2103	channel.c	FUNCTION_55
0x4001315	          0x4989eb	                            mov r11, rbp	      2103	channel.c	FUNCTION_55
0x4001318	          0x4889e8	                            mov rax, rbp	      2103	channel.c	FUNCTION_55
0x400131b	              0x53	                                push rbx	      2101	channel.c	FUNCTION_55
0x400131c	        0x49c1e304	                              shl r11, 4	      2103	channel.c	FUNCTION_55
0x4001320	        0x48c1e008	                              shl rax, 8	      2103	channel.c	FUNCTION_55
0x4001324	          0x4901c3	                            add r11, rax	      2103	channel.c	FUNCTION_55
0x4001327	          0x4901fb	                            add r11, rdi	      2103	channel.c	FUNCTION_55
0x400132a	        0x498b5b58	            mov rbx, qword [r11 + 0x58] 	      2103	channel.c	FUNCTION_55
0x400132e	          0x4885db	                           test rbx, rbx	      2105	channel.c	FUNCTION_55	WHILE_1
0x4001331	     0xf84cc000000	                            je 0x4001403	      2105	channel.c	FUNCTION_55	WHILE_1
0x4001337	          0x4989fc	                            mov r12, rdi	      2105	channel.c	FUNCTION_55	WHILE_1
0x400133a	          0x4863fa	                         movsxd rdi, edx	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x400133d	            0xeb18	                           jmp 0x4001357	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x400133f	              0x90	                                     nop	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4001340	        0x83781001	               cmp dword [rax + 0x10], 1	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4001344	     0xf84a6000000	                            je 0x40013f0	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x400134a	        0x488b5b08	                mov rbx, qword [rbx + 8]	      2123	channel.c	FUNCTION_55	WHILE_1
0x400134e	          0x4885db	                           test rbx, rbx	      2105	channel.c	FUNCTION_55	WHILE_1
0x4001351	     0xf84ac000000	                            je 0x4001403	      2105	channel.c	FUNCTION_55	WHILE_1
0x4001357	            0x85c9	                           test ecx, ecx	      2110	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4001359	            0x7507	                           jne 0x4001362	      2110	channel.c	FUNCTION_55	WHILE_1	IF_1
0x400135b	          0x8b4318	            mov eax, dword [rbx + 0x18] 	      2110	channel.c	FUNCTION_55	WHILE_1	IF_1
0x400135e	            0x85c0	                           test eax, eax	      2110	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4001360	            0x75e8	                           jne 0x400134a	      2110	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4001362	          0x4c8b0b	                     mov r9, qword [rbx]	      2107	channel.c	FUNCTION_55	WHILE_1
0x4001365	            0x85d2	                           test edx, edx	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4001367	        0x498b4108	                 mov rax, qword [r9 + 8]	      2108	channel.c	FUNCTION_55	WHILE_1
0x400136b	          0x488b00	                    mov rax, qword [rax]	      2108	channel.c	FUNCTION_55	WHILE_1
0x400136e	            0x7fd0	                            jg 0x4001340	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4001370	        0x83781001	               cmp dword [rax + 0x10], 1	      2112	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4001374	     0xf8590000000	                           jne 0x400140a	      2112	channel.c	FUNCTION_55	WHILE_1	IF_1
0x400137a	        0x4c8b5018	            mov r10, qword [rax + 0x18] 	      2113	channel.c	FUNCTION_55	WHILE_1	IF_1
0x400137e	          0x4d85d2	                           test r10, r10	      2113	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4001381	            0x7409	                            je 0x400138c	      2113	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4001383	        0x49637370	         movsxd rsi, dword [r11 + 0x70] 	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4001387	          0x4939f2	                            cmp r10, rsi	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x400138a	            0x74be	                            je 0x400134a	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x400138c	          0x4d8908	                      mov qword [r8], r9	      2116	channel.c	FUNCTION_55	WHILE_1	IF_1
0x400138f	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2118	channel.c	FUNCTION_55	WHILE_1	IF_1	IF_2	CALL_1
0x4001393	      0xbe00000000	                              mov esi, 0	      2118	channel.c	FUNCTION_55	WHILE_1	IF_1	IF_2	CALL_1
0x4001398	          0x4c89e7	                            mov rdi, r12	      2118	channel.c	FUNCTION_55	WHILE_1	IF_1	IF_2	CALL_1
0x400139b	            0x31c0	                            xor eax, eax	      2118	channel.c	FUNCTION_55	WHILE_1	IF_1	IF_2	CALL_1
0x400139d	      0xe800000000	                          call 0x40013a2	      2118	channel.c	FUNCTION_55	WHILE_1	IF_1	IF_2	CALL_1
0x40013a2	          0x4889e8	                            mov rax, rbp	      2102	channel.c	FUNCTION_55
0x40013a5	        0x48c1e508	                              shl rbp, 8	      2102	channel.c	FUNCTION_55
0x40013a9	        0x488b5308	                mov rdx, qword [rbx + 8]	      2075	channel.c	ELSE_2	FUNCTION_54	IF_1
0x40013ad	        0x48c1e004	                              shl rax, 4	      2102	channel.c	FUNCTION_55
0x40013b1	      0x488d442840	            lea rax, [rax + rbp + 0x40] 	      2102	channel.c	FUNCTION_55
0x40013b6	      0x498d4c0410	            lea rcx, [r12 + rax + 0x10] 	      2102	channel.c	FUNCTION_55
0x40013bb	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2074	channel.c	ELSE_2	FUNCTION_54	IF_1
0x40013bf	          0x4885c0	                           test rax, rax	      2074	channel.c	ELSE_2	FUNCTION_54	IF_1
0x40013c2	            0x7451	                            je 0x4001415	      2074	channel.c	ELSE_2	FUNCTION_54	IF_1
0x40013c4	        0x48895008	                mov qword [rax + 8], rdx	      2077	channel.c	ELSE_2	FUNCTION_54	ELSE_1
0x40013c8	        0x488b5308	                mov rdx, qword [rbx + 8]	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x40013cc	          0x4885d2	                           test rdx, rdx	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x40013cf	            0x743e	                            je 0x400140f	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x40013d1	        0x48894210	             mov qword [rdx + 0x10], rax	      2081	channel.c	FUNCTION_54	ELSE_2
0x40013d5	          0x4889df	                            mov rdi, rbx	      2082	channel.c	FUNCTION_54	ELSE_2	CALL_1
0x40013d8	      0xe800000000	                          call 0x40013dd	      2082	channel.c	FUNCTION_54	ELSE_2	CALL_1
0x40013dd	              0x5b	                                 pop rbx	      2126	channel.c	FUNCTION_55
0x40013de	      0xb801000000	                              mov eax, 1	      2121	channel.c	FUNCTION_55	WHILE_1	IF_1
0x40013e3	              0x5d	                                 pop rbp	      2126	channel.c	FUNCTION_55
0x40013e4	            0x415c	                                 pop r12	      2126	channel.c	FUNCTION_55
0x40013e6	              0xc3	                                     ret	      2126	channel.c	FUNCTION_55
0x40013e7	    0x660f1f840000	                    nop word [rax + rax]	      2126	channel.c	FUNCTION_55
0x40013f0	        0x48397818	            cmp qword [rax + 0x18], rdi 	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x40013f4	            0x7496	                            je 0x400138c	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x40013f6	        0x488b5b08	                mov rbx, qword [rbx + 8]	      2123	channel.c	FUNCTION_55	WHILE_1
0x40013fa	          0x4885db	                           test rbx, rbx	      2105	channel.c	FUNCTION_55	WHILE_1
0x40013fd	     0xf8554ffffff	                           jne 0x4001357	      2105	channel.c	FUNCTION_55	WHILE_1
0x4001403	              0x5b	                                 pop rbx	      2126	channel.c	FUNCTION_55
0x4001404	            0x31c0	                            xor eax, eax	      2125	channel.c	FUNCTION_55
0x4001406	              0x5d	                                 pop rbp	      2126	channel.c	FUNCTION_55
0x4001407	            0x415c	                                 pop r12	      2126	channel.c	FUNCTION_55
0x4001409	              0xc3	                                     ret	      2126	channel.c	FUNCTION_55
0x400140a	          0x4d8908	                      mov qword [r8], r9	      2116	channel.c	FUNCTION_55	WHILE_1	IF_1
0x400140d	            0xeb93	                           jmp 0x40013a2	      2116	channel.c	FUNCTION_55	WHILE_1	IF_1
0x400140f	        0x48894110	             mov qword [rcx + 0x10], rax	      2079	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4001413	            0xebc0	                           jmp 0x40013d5	      2079	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4001415	        0x48895108	                mov qword [rcx + 8], rdx	      2075	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4001419	            0xebad	                           jmp 0x40013c8	      2075	channel.c	ELSE_2	FUNCTION_54	IF_1
ch_error	DO,0:IF,1:FOR,0:ELSE,0:SWITCH,0:CALL,6:WHILE,0:functions,0	49
0x4000110	              0x53	                                push rbx	       189	channel.c	FUNCTION_5
0x4000111	          0x4889f3	                            mov rbx, rsi	       189	channel.c	FUNCTION_5
0x4000114	    0x4881ecd00000	                           sub rsp, 0xd0	       189	channel.c	FUNCTION_5
0x400011b	            0x84c0	                             test al, al	       189	channel.c	FUNCTION_5
0x400011d	      0x4889542430	             mov qword [rsp + 0x30], rdx	       189	channel.c	FUNCTION_5
0x4000122	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       189	channel.c	FUNCTION_5
0x4000127	      0x4c89442440	              mov qword [rsp + 0x40], r8	       189	channel.c	FUNCTION_5
0x400012c	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       189	channel.c	FUNCTION_5
0x4000131	            0x7437	                            je 0x400016a	       189	channel.c	FUNCTION_5
0x4000133	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       189	channel.c	FUNCTION_5
0x4000138	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       189	channel.c	FUNCTION_5
0x400013d	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       189	channel.c	FUNCTION_5
0x4000142	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       189	channel.c	FUNCTION_5
0x400014a	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       189	channel.c	FUNCTION_5
0x4000152	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       189	channel.c	FUNCTION_5
0x400015a	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       189	channel.c	FUNCTION_5
0x4000162	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       189	channel.c	FUNCTION_5
0x400016a	    0x64488b042528	                mov rax, qword fs:[0x28]	       189	channel.c	FUNCTION_5
0x4000173	      0x4889442418	             mov qword [rsp + 0x18], rax	       189	channel.c	FUNCTION_5
0x4000178	            0x31c0	                            xor eax, eax	       189	channel.c	FUNCTION_5
0x400017a	    0x48833d000000	               cmp qword [0x04000182], 0	       190	channel.c	FUNCTION_5	IF_1
0x4000182	            0x7471	                            je 0x40001f5	       190	channel.c	FUNCTION_5	IF_1
0x4000184	          0x4889fe	                            mov rsi, rdi	       194	channel.c	FUNCTION_5	IF_1	CALL_1
0x4000187	      0xbf00000000	                              mov edi, 0	       194	channel.c	FUNCTION_5	IF_1	CALL_1
0x400018c	      0xe8affeffff	                    call sym.ch_log_lead	       194	channel.c	FUNCTION_5	IF_1	CALL_1
0x4000191	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       195	channel.c	FUNCTION_5	IF_1	CALL_2
0x4000199	    0x488b3d000000	            mov rdi, qword [0x040001a0] 	       127	stdio2.h	FUNCTION_152	CALL_1
0x40001a0	          0x4889e1	                            mov rcx, rsp	       127	stdio2.h	FUNCTION_152	CALL_1
0x40001a3	          0x4889da	                            mov rdx, rbx	       127	stdio2.h	FUNCTION_152	CALL_1
0x40001a6	      0xbe01000000	                              mov esi, 1	       127	stdio2.h	FUNCTION_152	CALL_1
0x40001ab	    0xc70424100000	                   mov dword [rsp], 0x10	       195	channel.c	FUNCTION_5	IF_1	CALL_2
0x40001b2	      0x4889442408	                mov qword [rsp + 8], rax	       195	channel.c	FUNCTION_5	IF_1	CALL_2
0x40001b7	      0x488d442420	                   lea rax, [rsp + 0x20]	       195	channel.c	FUNCTION_5	IF_1	CALL_2
0x40001bc	    0xc74424043000	               mov dword [rsp + 4], 0x30	       195	channel.c	FUNCTION_5	IF_1	CALL_2
0x40001c4	      0x4889442410	             mov qword [rsp + 0x10], rax	       195	channel.c	FUNCTION_5	IF_1	CALL_2
0x40001c9	      0xe800000000	                          call 0x40001ce	       127	stdio2.h	FUNCTION_152	CALL_1
0x40001ce	    0x488b35000000	            mov rsi, qword [0x040001d5] 	       198	channel.c	FUNCTION_5	IF_1	CALL_5
0x40001d5	      0xbf0a000000	                            mov edi, 0xa	       198	channel.c	FUNCTION_5	IF_1	CALL_5
0x40001da	      0xe800000000	                          call 0x40001df	       198	channel.c	FUNCTION_5	IF_1	CALL_5
0x40001df	    0x488b3d000000	            mov rdi, qword [0x040001e6] 	       199	channel.c	FUNCTION_5	IF_1	CALL_6
0x40001e6	      0xe800000000	                          call 0x40001eb	       199	channel.c	FUNCTION_5	IF_1	CALL_6
0x40001eb	    0xc70500000000	               mov dword [0x040001f5], 1	       200	channel.c	FUNCTION_5	IF_1
0x40001f5	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       202	channel.c	FUNCTION_5
0x40001fa	    0x644833042528	                xor rax, qword fs:[0x28]	       202	channel.c	FUNCTION_5
0x4000203	            0x7509	                           jne 0x400020e	       202	channel.c	FUNCTION_5
0x4000205	    0x4881c4d00000	                           add rsp, 0xd0	       202	channel.c	FUNCTION_5
0x400020c	              0x5b	                                 pop rbx	       202	channel.c	FUNCTION_5
0x400020d	              0xc3	                                     ret	       202	channel.c	FUNCTION_5
0x400020e	      0xe800000000	                          call 0x4000213	       202	channel.c	FUNCTION_5
invoke_one_time_callback	DO,0:IF,0:FOR,0:ELSE,0:SWITCH,0:CALL,5:WHILE,0:functions,0	45
0x4001420	            0x4155	                                push r13	      2333	channel.c	FUNCTION_58
0x4001422	            0x4154	                                push r12	      2333	channel.c	FUNCTION_58
0x4001424	            0x31c0	                            xor eax, eax	      2334	channel.c	FUNCTION_58	CALL_1
0x4001426	              0x55	                                push rbp	      2333	channel.c	FUNCTION_58
0x4001427	              0x53	                                push rbx	      2333	channel.c	FUNCTION_58
0x4001428	          0x4889d3	                            mov rbx, rdx	      2333	channel.c	FUNCTION_58
0x400142b	          0x4989f5	                            mov r13, rsi	      2333	channel.c	FUNCTION_58
0x400142e	      0xbe00000000	                              mov esi, 0	      2334	channel.c	FUNCTION_58	CALL_1
0x4001433	          0x4889fd	                            mov rbp, rdi	      2333	channel.c	FUNCTION_58
0x4001436	        0x4883ec08	                              sub rsp, 8	      2333	channel.c	FUNCTION_58
0x400143a	          0x488b12	                    mov rdx, qword [rdx]	      2334	channel.c	FUNCTION_58	CALL_1
0x400143d	          0x4989cc	                            mov r12, rcx	      2333	channel.c	FUNCTION_58
0x4001440	      0xe800000000	                          call 0x4001445	      2334	channel.c	FUNCTION_58	CALL_1
0x4001445	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      2334	channel.c	FUNCTION_58	CALL_1
0x4001449	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      2058	channel.c	FUNCTION_53	IF_1
0x400144d	          0x4885c0	                           test rax, rax	      2057	channel.c	FUNCTION_53	IF_1
0x4001450	            0x7446	                            je 0x4001498	      2057	channel.c	FUNCTION_53	IF_1
0x4001452	        0x48895018	             mov qword [rax + 0x18], rdx	      2060	channel.c	FUNCTION_53	ELSE_1
0x4001456	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      2061	channel.c	FUNCTION_53	IF_2
0x400145a	          0x4885d2	                           test rdx, rdx	      2061	channel.c	FUNCTION_53	IF_2
0x400145d	            0x7449	                            je 0x40014a8	      2061	channel.c	FUNCTION_53	IF_2
0x400145f	        0x48894220	             mov qword [rdx + 0x20], rax	      2064	channel.c	FUNCTION_53	ELSE_2
0x4001463	        0x488b5308	                mov rdx, qword [rbx + 8]	      2339	channel.c	FUNCTION_58	CALL_3
0x4001467	          0x488b33	                    mov rsi, qword [rbx]	      2339	channel.c	FUNCTION_58	CALL_3
0x400146a	          0x4c89e1	                            mov rcx, r12	      2339	channel.c	FUNCTION_58	CALL_3
0x400146d	          0x4889ef	                            mov rdi, rbp	      2339	channel.c	FUNCTION_58	CALL_3
0x4001470	      0xe8fbf5ffff	                call sym.invoke_callback	      2339	channel.c	FUNCTION_58	CALL_3
0x4001475	          0x488b3b	                    mov rdi, qword [rbx]	      2340	channel.c	FUNCTION_58	CALL_4
0x4001478	        0x488b7308	                mov rsi, qword [rbx + 8]	      2340	channel.c	FUNCTION_58	CALL_4
0x400147c	      0xe800000000	                          call 0x4001481	      2340	channel.c	FUNCTION_58	CALL_4
0x4001481	        0x4883c408	                              add rsp, 8	      2342	channel.c	FUNCTION_58
0x4001485	          0x4889df	                            mov rdi, rbx	      2341	channel.c	FUNCTION_58	CALL_5
0x4001488	              0x5b	                                 pop rbx	      2342	channel.c	FUNCTION_58
0x4001489	              0x5d	                                 pop rbp	      2342	channel.c	FUNCTION_58
0x400148a	            0x415c	                                 pop r12	      2342	channel.c	FUNCTION_58
0x400148c	            0x415d	                                 pop r13	      2342	channel.c	FUNCTION_58
0x400148e	      0xe900000000	                           jmp 0x4001493	      2341	channel.c	FUNCTION_58	CALL_5
0x4001493	       0xf1f440000	                   nop dword [rax + rax]	      2341	channel.c	FUNCTION_58	CALL_5
0x4001498	        0x49895518	             mov qword [r13 + 0x18], rdx	      2058	channel.c	FUNCTION_53	IF_1
0x400149c	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      2061	channel.c	FUNCTION_53	IF_2
0x40014a0	          0x4885d2	                           test rdx, rdx	      2061	channel.c	FUNCTION_53	IF_2
0x40014a3	            0x75ba	                           jne 0x400145f	      2061	channel.c	FUNCTION_53	IF_2
0x40014a5	           0xf1f00	                         nop dword [rax]	      2061	channel.c	FUNCTION_53	IF_2
0x40014a8	        0x49894520	             mov qword [r13 + 0x20], rax	      2062	channel.c	FUNCTION_53	IF_2
0x40014ac	            0xebb5	                           jmp 0x4001463	      2062	channel.c	FUNCTION_53	IF_2
channel_status	DO,0:IF,10:FOR,1:ELSE,2:SWITCH,0:CALL,4:WHILE,0:functions,0	78
0x4002910	          0x4885ff	                           test rdi, rdi	      2759	channel.c	FUNCTION_65	IF_1
0x4002913	     0xf84f7000000	                            je 0x4002a10	      2759	channel.c	FUNCTION_65	IF_1
0x4002919	          0x83fe01	                              cmp esi, 1	      2761	channel.c	FUNCTION_65	IF_2
0x400291c	      0xb800000000	                              mov eax, 0	      2764	channel.c	FUNCTION_65	IF_2	IF_3
0x4002921	            0x740d	                            je 0x4002930	      2761	channel.c	FUNCTION_65	IF_2
0x4002923	          0x83fe02	                              cmp esi, 2	      2768	channel.c	FUNCTION_65	ELSE_1	IF_5
0x4002926	            0x7438	                            je 0x4002960	      2768	channel.c	FUNCTION_65	ELSE_1	IF_5
0x4002928	        0x837f18ff	cmp dword [rdi + 0x18], 0xffffffffffffffff	      2725	channel.c	FUNCTION_63
0x400292c	            0x7472	                            je 0x40029a0	      2725	channel.c	FUNCTION_63
0x400292e	            0xf3c3	                                     ret	      2790	channel.c	FUNCTION_65
0x4002930	    0x83bf28010000	cmp dword [rdi + 0x128], 0xffffffffffffffff	      2763	channel.c	FUNCTION_65	IF_2	IF_3
0x4002937	            0x75f5	                           jne 0x400292e	      2763	channel.c	FUNCTION_65	IF_2	IF_3
0x4002939	    0x8b8730010000	           mov eax, dword [rdi + 0x130] 	      2739	channel.c	FUNCTION_64	IF_1
0x400293f	          0x83e802	                              sub eax, 2	      2739	channel.c	FUNCTION_64	IF_1
0x4002942	          0x83f801	                              cmp eax, 1	      2739	channel.c	FUNCTION_64	IF_1
0x4002945	     0xf86db000000	                           jbe 0x4002a26	      2739	channel.c	FUNCTION_64	IF_1
0x400294b	            0x31c0	                            xor eax, eax	      2746	channel.c	FUNCTION_64	CALL_1
0x400294d	    0x4883bf500100	              cmp qword [rdi + 0x150], 0	      2746	channel.c	FUNCTION_64	CALL_1
0x4002955	           0xf95c0	                                setne al	      2746	channel.c	FUNCTION_64	CALL_1
0x4002958	            0xeb2e	                           jmp 0x4002988	      2746	channel.c	FUNCTION_64	CALL_1
0x400295a	    0x660f1f440000	                    nop word [rax + rax]	      2746	channel.c	FUNCTION_64	CALL_1
0x4002960	    0x83bf38020000	cmp dword [rdi + 0x238], 0xffffffffffffffff	      2770	channel.c	FUNCTION_65	ELSE_1	IF_5	IF_6
0x4002967	            0x75c5	                           jne 0x400292e	      2770	channel.c	FUNCTION_65	ELSE_1	IF_5	IF_6
0x4002969	    0x8b8740020000	           mov eax, dword [rdi + 0x240] 	      2739	channel.c	FUNCTION_64	IF_1
0x400296f	          0x83e802	                              sub eax, 2	      2739	channel.c	FUNCTION_64	IF_1
0x4002972	          0x83f801	                              cmp eax, 1	      2739	channel.c	FUNCTION_64	IF_1
0x4002975	     0xf86bd000000	                           jbe 0x4002a38	      2739	channel.c	FUNCTION_64	IF_1
0x400297b	            0x31c0	                            xor eax, eax	      2746	channel.c	FUNCTION_64	CALL_1
0x400297d	    0x4883bf600200	              cmp qword [rdi + 0x260], 0	      2746	channel.c	FUNCTION_64	CALL_1
0x4002985	           0xf95c0	                                setne al	      2746	channel.c	FUNCTION_64	CALL_1
0x4002988	            0x85c0	                           test eax, eax	      2788	channel.c	FUNCTION_65	IF_10
0x400298a	      0xba00000000	                              mov edx, 0	      2788	channel.c	FUNCTION_65	IF_10
0x400298f	      0xb800000000	                              mov eax, 0	      2788	channel.c	FUNCTION_65	IF_10
0x4002994	        0x480f45c2	                         cmovne rax, rdx	      2788	channel.c	FUNCTION_65	IF_10
0x4002998	              0xc3	                                     ret	      2788	channel.c	FUNCTION_65	IF_10
0x4002999	     0xf1f80000000	                         nop dword [rax]	      2788	channel.c	FUNCTION_65	IF_10
0x40029a0	    0x83bf48030000	cmp dword [rdi + 0x348], 0xffffffffffffffff	      2726	channel.c	FUNCTION_63
0x40029a7	            0x7585	                           jne 0x400292e	      2726	channel.c	FUNCTION_63
0x40029a9	    0x83bf28010000	cmp dword [rdi + 0x128], 0xffffffffffffffff	      2727	channel.c	FUNCTION_63
0x40029b0	     0xf8578ffffff	                           jne 0x400292e	      2727	channel.c	FUNCTION_63
0x40029b6	    0x83bf38020000	cmp dword [rdi + 0x238], 0xffffffffffffffff	      2728	channel.c	FUNCTION_63
0x40029bd	     0xf856bffffff	                           jne 0x400292e	      2728	channel.c	FUNCTION_63
0x40029c3	        0x488d4720	                   lea rax, [rdi + 0x20]	      2728	channel.c	FUNCTION_63
0x40029c7	    0x4881c7500300	                          add rdi, 0x350	      2728	channel.c	FUNCTION_63
0x40029ce	            0xeb19	                           jmp 0x40029e9	      2728	channel.c	FUNCTION_63
0x40029d0	            0x31d2	                            xor edx, edx	      2746	channel.c	FUNCTION_64	CALL_1
0x40029d2	      0x4883782000	               cmp qword [rax + 0x20], 0	      2746	channel.c	FUNCTION_64	CALL_1
0x40029d7	           0xf95c2	                                setne dl	      2746	channel.c	FUNCTION_64	CALL_1
0x40029da	            0x85d2	                           test edx, edx	      2780	channel.c	FUNCTION_65	ELSE_2	FOR_1	IF_9	CALL_4
0x40029dc	            0x7523	                           jne 0x4002a01	      2780	channel.c	FUNCTION_65	ELSE_2	FOR_1	IF_9	CALL_4
0x40029de	    0x480510010000	                          add rax, 0x110	      2780	channel.c	FUNCTION_65	ELSE_2	FOR_1	IF_9	CALL_4
0x40029e4	          0x4839f8	                            cmp rax, rdi	      2779	channel.c	FUNCTION_65	ELSE_2	FOR_1
0x40029e7	            0x7437	                            je 0x4002a20	      2779	channel.c	FUNCTION_65	ELSE_2	FOR_1
0x40029e9	            0x8b08	                    mov ecx, dword [rax]	      2739	channel.c	FUNCTION_64	IF_1
0x40029eb	          0x8d51fe	                      lea edx, [rcx - 2]	      2739	channel.c	FUNCTION_64	IF_1
0x40029ee	          0x83fa01	                              cmp edx, 1	      2739	channel.c	FUNCTION_64	IF_1
0x40029f1	            0x77dd	                            ja 0x40029d0	      2739	channel.c	FUNCTION_64	IF_1
0x40029f3	            0x31d2	                            xor edx, edx	      2744	channel.c	FUNCTION_64	IF_1
0x40029f5	      0x4883783800	               cmp qword [rax + 0x38], 0	      2744	channel.c	FUNCTION_64	IF_1
0x40029fa	           0xf95c2	                                setne dl	      2744	channel.c	FUNCTION_64	IF_1
0x40029fd	            0x85d2	                           test edx, edx	      2780	channel.c	FUNCTION_65	ELSE_2	FOR_1	IF_9	CALL_4
0x40029ff	            0x74dd	                            je 0x40029de	      2780	channel.c	FUNCTION_65	ELSE_2	FOR_1	IF_9	CALL_4
0x4002a01	      0xb800000000	                              mov eax, 0	      2788	channel.c	FUNCTION_65	IF_10
0x4002a06	              0xc3	                                     ret	      2790	channel.c	FUNCTION_65
0x4002a07	    0x660f1f840000	                    nop word [rax + rax]	      2790	channel.c	FUNCTION_65
0x4002a10	      0xb800000000	                              mov eax, 0	      2760	channel.c	FUNCTION_65	IF_1
0x4002a15	              0xc3	                                     ret	      2760	channel.c	FUNCTION_65	IF_1
0x4002a16	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2760	channel.c	FUNCTION_65	IF_1
0x4002a20	      0xb800000000	                              mov eax, 0	      2789	channel.c	FUNCTION_65
0x4002a25	              0xc3	                                     ret	      2789	channel.c	FUNCTION_65
0x4002a26	            0x31c0	                            xor eax, eax	      2744	channel.c	FUNCTION_64	IF_1
0x4002a28	    0x4883bf680100	              cmp qword [rdi + 0x168], 0	      2744	channel.c	FUNCTION_64	IF_1
0x4002a30	           0xf95c0	                                setne al	      2744	channel.c	FUNCTION_64	IF_1
0x4002a33	      0xe950ffffff	                           jmp 0x4002988	      2744	channel.c	FUNCTION_64	IF_1
0x4002a38	            0x31c0	                            xor eax, eax	      2744	channel.c	FUNCTION_64	IF_1
0x4002a3a	    0x4883bf780200	              cmp qword [rdi + 0x278], 0	      2744	channel.c	FUNCTION_64	IF_1
0x4002a42	           0xf95c0	                                setne al	      2744	channel.c	FUNCTION_64	IF_1
0x4002a45	      0xe93effffff	                           jmp 0x4002988	      2744	channel.c	FUNCTION_64	IF_1
free_unused_jobs	DO,0:IF,1:FOR,1:ELSE,0:SWITCH,0:CALL,2:WHILE,0:functions,0	31
0x4008460	            0x4154	                                push r12	      5378	channel.c	FUNCTION_124
0x4008462	              0x55	                                push rbp	      5378	channel.c	FUNCTION_124
0x4008463	            0x89f5	                            mov ebp, esi	      5378	channel.c	FUNCTION_124
0x4008465	    0x488b35000000	            mov rsi, qword [0x0400846c] 	      5382	channel.c	FUNCTION_124	FOR_1
0x400846c	              0x53	                                push rbx	      5378	channel.c	FUNCTION_124
0x400846d	          0x4885f6	                           test rsi, rsi	      5382	channel.c	FUNCTION_124	FOR_1
0x4008470	            0x743f	                            je 0x40084b1	      5382	channel.c	FUNCTION_124	FOR_1
0x4008472	          0x4189fc	                           mov r12d, edi	      5382	channel.c	FUNCTION_124	FOR_1
0x4008475	            0xeb11	                           jmp 0x4008488	      5382	channel.c	FUNCTION_124	FOR_1
0x4008477	    0x660f1f840000	                    nop word [rax + rax]	      5382	channel.c	FUNCTION_124	FOR_1
0x4008480	          0x4885db	                           test rbx, rbx	      5382	channel.c	FUNCTION_124	FOR_1
0x4008483	          0x4889de	                            mov rsi, rbx	      5382	channel.c	FUNCTION_124	FOR_1
0x4008486	            0x7429	                            je 0x40084b1	      5382	channel.c	FUNCTION_124	FOR_1
0x4008488	          0x8b465c	            mov eax, dword [rsi + 0x5c] 	      5385	channel.c	FUNCTION_124	FOR_1	IF_1
0x400848b	          0x488b1e	                    mov rbx, qword [rsi]	      5384	channel.c	FUNCTION_124	FOR_1
0x400848e	          0x4431e0	                           xor eax, r12d	      5385	channel.c	FUNCTION_124	FOR_1	IF_1
0x4008491	            0x85e8	                           test eax, ebp	      5385	channel.c	FUNCTION_124	FOR_1	IF_1
0x4008493	            0x74eb	                            je 0x4008480	      5385	channel.c	FUNCTION_124	FOR_1	IF_1
0x4008495	          0x4889f7	                            mov rdi, rsi	      5386	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_1
0x4008498	      0xe8a387ffff	               call sym.job_still_useful	      5386	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_1
0x400849d	            0x85c0	                           test eax, eax	      5386	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_1
0x400849f	            0x75df	                           jne 0x4008480	      5386	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_1
0x40084a1	          0x4889f7	                            mov rdi, rsi	      5389	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_2
0x40084a4	      0xe8b77dffff	                   call sym.job_free_job	      5389	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_2
0x40084a9	          0x4885db	                           test rbx, rbx	      5382	channel.c	FUNCTION_124	FOR_1
0x40084ac	          0x4889de	                            mov rsi, rbx	      5382	channel.c	FUNCTION_124	FOR_1
0x40084af	            0x75d7	                           jne 0x4008488	      5382	channel.c	FUNCTION_124	FOR_1
0x40084b1	              0x5b	                                 pop rbx	      5392	channel.c	FUNCTION_124
0x40084b2	              0x5d	                                 pop rbp	      5392	channel.c	FUNCTION_124
0x40084b3	            0x415c	                                 pop r12	      5392	channel.c	FUNCTION_124
0x40084b5	              0xc3	                                     ret	      5392	channel.c	FUNCTION_124
channel_free_channel	DO,0:IF,2:FOR,0:ELSE,1:SWITCH,0:CALL,1:WHILE,0:functions,0	13
0x4000220	          0x488b07	                    mov rax, qword [rdi]	       370	channel.c	FUNCTION_12	IF_1
0x4000223	          0x4885c0	                           test rax, rax	       370	channel.c	FUNCTION_12	IF_1
0x4000226	            0x7408	                            je 0x4000230	       370	channel.c	FUNCTION_12	IF_1
0x4000228	        0x488b5708	                mov rdx, qword [rdi + 8]	       371	channel.c	FUNCTION_12	IF_1
0x400022c	        0x48895008	                mov qword [rax + 8], rdx	       371	channel.c	FUNCTION_12	IF_1
0x4000230	        0x488b5708	                mov rdx, qword [rdi + 8]	       372	channel.c	FUNCTION_12	IF_2
0x4000234	          0x4885d2	                           test rdx, rdx	       372	channel.c	FUNCTION_12	IF_2
0x4000237	            0x740f	                            je 0x4000248	       372	channel.c	FUNCTION_12	IF_2
0x4000239	          0x488902	                    mov qword [rdx], rax	       375	channel.c	FUNCTION_12	ELSE_1
0x400023c	      0xe900000000	                           jmp 0x4000241	       376	channel.c	FUNCTION_12	CALL_1
0x4000241	     0xf1f80000000	                         nop dword [rax]	       376	channel.c	FUNCTION_12	CALL_1
0x4000248	    0x488905000000	            mov qword [0x0400024f], rax 	       373	channel.c	FUNCTION_12	IF_2
0x400024f	      0xe900000000	                           jmp 0x4000254	       376	channel.c	FUNCTION_12	CALL_1
channel_set_pipes	DO,0:IF,4:FOR,0:ELSE,0:SWITCH,0:CALL,8:WHILE,0:functions,0	69
0x4001630	            0x4155	                                push r13	      1016	channel.c	FUNCTION_30
0x4001632	            0x4154	                                push r12	      1016	channel.c	FUNCTION_30
0x4001634	          0x4189d5	                           mov r13d, edx	      1016	channel.c	FUNCTION_30
0x4001637	              0x55	                                push rbp	      1016	channel.c	FUNCTION_30
0x4001638	              0x53	                                push rbx	      1016	channel.c	FUNCTION_30
0x4001639	          0x4189cc	                           mov r12d, ecx	      1016	channel.c	FUNCTION_30
0x400163c	          0x4889fb	                            mov rbx, rdi	      1016	channel.c	FUNCTION_30
0x400163f	        0x4883ec08	                              sub rsp, 8	      1016	channel.c	FUNCTION_30
0x4001643	          0x83feff	             cmp esi, 0xffffffffffffffff	      1017	channel.c	FUNCTION_30	IF_1
0x4001646	            0x7421	                            je 0x4001669	      1017	channel.c	FUNCTION_30	IF_1
0x4001648	            0x89f5	                            mov ebp, esi	      1017	channel.c	FUNCTION_30	IF_1
0x400164a	      0xbe03000000	                              mov esi, 3	      1019	channel.c	FUNCTION_30	IF_1	CALL_1
0x400164f	      0xe85cefffff	                  call sym.ch_close_part	      1019	channel.c	FUNCTION_30	IF_1	CALL_1
0x4001654	    0x89ab48030000	            mov dword [rbx + 0x348], ebp	      1020	channel.c	FUNCTION_30	IF_1
0x400165a	            0x89ef	                            mov edi, ebp	      1024	channel.c	FUNCTION_30	IF_1	IF_2	CALL_2
0x400165c	      0xe800000000	                          call 0x4001661	      1024	channel.c	FUNCTION_30	IF_1	IF_2	CALL_2
0x4001661	            0x85c0	                           test eax, eax	      1024	channel.c	FUNCTION_30	IF_1	IF_2	CALL_2
0x4001663	     0xf8587000000	                           jne 0x40016f0	      1024	channel.c	FUNCTION_30	IF_1	IF_2	CALL_2
0x4001669	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	      1028	channel.c	FUNCTION_30	IF_3
0x400166d	            0x7436	                            je 0x40016a5	      1028	channel.c	FUNCTION_30	IF_3
0x400166f	    0x8b932c010000	           mov edx, dword [rbx + 0x12c] 	       614	channel.c	FUNCTION_25	IF_2
0x4001675	            0x85d2	                           test edx, edx	       614	channel.c	FUNCTION_25	IF_2
0x4001677	     0xf8593000000	                           jne 0x4001710	       614	channel.c	FUNCTION_25	IF_2
0x400167d	      0xbe01000000	                              mov esi, 1	      1033	channel.c	FUNCTION_30	IF_3	CALL_4
0x4001682	          0x4889df	                            mov rdi, rbx	      1033	channel.c	FUNCTION_30	IF_3	CALL_4
0x4001685	      0xe826efffff	                  call sym.ch_close_part	      1033	channel.c	FUNCTION_30	IF_3	CALL_4
0x400168a	    0x838b6c040000	               or dword [rbx + 0x46c], 2	      1035	channel.c	FUNCTION_30	IF_3
0x4001691	    0x4489ab280100	           mov dword [rbx + 0x128], r13d	      1034	channel.c	FUNCTION_30	IF_3
0x4001698	      0xbe01000000	                              mov esi, 1	      1037	channel.c	FUNCTION_30	IF_3	CALL_5
0x400169d	          0x4889df	                            mov rdi, rbx	      1037	channel.c	FUNCTION_30	IF_3	CALL_5
0x40016a0	      0xe8cbf8ffff	       call sym.channel_gui_register_one	      1037	channel.c	FUNCTION_30	IF_3	CALL_5
0x40016a5	        0x4183fcff	            cmp r12d, 0xffffffffffffffff	      1040	channel.c	FUNCTION_30	IF_4
0x40016a9	            0x747d	                            je 0x4001728	      1040	channel.c	FUNCTION_30	IF_4
0x40016ab	    0x8b833c020000	           mov eax, dword [rbx + 0x23c] 	       614	channel.c	FUNCTION_25	IF_2
0x40016b1	            0x85c0	                           test eax, eax	       614	channel.c	FUNCTION_25	IF_2
0x40016b3	            0x754b	                           jne 0x4001700	       614	channel.c	FUNCTION_25	IF_2
0x40016b5	          0x4889df	                            mov rdi, rbx	      1045	channel.c	FUNCTION_30	IF_4	CALL_7
0x40016b8	      0xbe02000000	                              mov esi, 2	      1045	channel.c	FUNCTION_30	IF_4	CALL_7
0x40016bd	      0xe8eeeeffff	                  call sym.ch_close_part	      1045	channel.c	FUNCTION_30	IF_4	CALL_7
0x40016c2	    0x4489a3380200	           mov dword [rbx + 0x238], r12d	      1046	channel.c	FUNCTION_30	IF_4
0x40016c9	    0x838b6c040000	               or dword [rbx + 0x46c], 4	      1047	channel.c	FUNCTION_30	IF_4
0x40016d0	        0x4883c408	                              add rsp, 8	      1052	channel.c	FUNCTION_30
0x40016d4	          0x4889df	                            mov rdi, rbx	      1049	channel.c	FUNCTION_30	IF_4	CALL_8
0x40016d7	      0xbe02000000	                              mov esi, 2	      1049	channel.c	FUNCTION_30	IF_4	CALL_8
0x40016dc	              0x5b	                                 pop rbx	      1052	channel.c	FUNCTION_30
0x40016dd	              0x5d	                                 pop rbp	      1052	channel.c	FUNCTION_30
0x40016de	            0x415c	                                 pop r12	      1052	channel.c	FUNCTION_30
0x40016e0	            0x415d	                                 pop r13	      1052	channel.c	FUNCTION_30
0x40016e2	      0xe989f8ffff	        jmp sym.channel_gui_register_one	      1049	channel.c	FUNCTION_30	IF_4	CALL_8
0x40016e7	    0x660f1f840000	                    nop word [rax + rax]	      1049	channel.c	FUNCTION_30	IF_4	CALL_8
0x40016f0	    0x838b6c040000	               or dword [rbx + 0x46c], 8	      1025	channel.c	FUNCTION_30	IF_1	IF_2
0x40016f7	      0xe96dffffff	                           jmp 0x4001669	      1025	channel.c	FUNCTION_30	IF_1	IF_2
0x40016fc	         0xf1f4000	                         nop dword [rax]	      1025	channel.c	FUNCTION_30	IF_1	IF_2
0x4001700	      0xbe02000000	                              mov esi, 2	      1025	channel.c	FUNCTION_30	IF_1	IF_2
0x4001705	          0x4889df	                            mov rdi, rbx	      1025	channel.c	FUNCTION_30	IF_1	IF_2
0x4001708	      0xe8e3f8ffff	call sym.channel_gui_unregister_one.part.10	      1025	channel.c	FUNCTION_30	IF_1	IF_2
0x400170d	            0xeba6	                           jmp 0x40016b5	      1025	channel.c	FUNCTION_30	IF_1	IF_2
0x400170f	              0x90	                                     nop	      1025	channel.c	FUNCTION_30	IF_1	IF_2
0x4001710	      0xbe01000000	                              mov esi, 1	      1025	channel.c	FUNCTION_30	IF_1	IF_2
0x4001715	          0x4889df	                            mov rdi, rbx	      1025	channel.c	FUNCTION_30	IF_1	IF_2
0x4001718	      0xe8d3f8ffff	call sym.channel_gui_unregister_one.part.10	      1025	channel.c	FUNCTION_30	IF_1	IF_2
0x400171d	      0xe95bffffff	                           jmp 0x400167d	      1025	channel.c	FUNCTION_30	IF_1	IF_2
0x4001722	    0x660f1f440000	                    nop word [rax + rax]	      1025	channel.c	FUNCTION_30	IF_1	IF_2
0x4001728	        0x4883c408	                              add rsp, 8	      1052	channel.c	FUNCTION_30
0x400172c	              0x5b	                                 pop rbx	      1052	channel.c	FUNCTION_30
0x400172d	              0x5d	                                 pop rbp	      1052	channel.c	FUNCTION_30
0x400172e	            0x415c	                                 pop r12	      1052	channel.c	FUNCTION_30
0x4001730	            0x415d	                                 pop r13	      1052	channel.c	FUNCTION_30
0x4001732	              0xc3	                                     ret	      1052	channel.c	FUNCTION_30
job_free_contents	DO,0:IF,2:FOR,1:ELSE,0:SWITCH,0:CALL,9:WHILE,0:functions,0	55
0x4004ef0	              0x55	                                push rbp	      5038	channel.c	FUNCTION_109
0x4004ef1	              0x53	                                push rbx	      5038	channel.c	FUNCTION_109
0x4004ef2	          0x4889fd	                            mov rbp, rdi	      5038	channel.c	FUNCTION_109
0x4004ef5	            0x31c0	                            xor eax, eax	      5041	channel.c	FUNCTION_109	CALL_1
0x4004ef7	      0xbe00000000	                              mov esi, 0	      5041	channel.c	FUNCTION_109	CALL_1
0x4004efc	        0x4883ec08	                              sub rsp, 8	      5038	channel.c	FUNCTION_109
0x4004f00	        0x488b7f60	            mov rdi, qword [rdi + 0x60] 	      5041	channel.c	FUNCTION_109	CALL_1
0x4004f04	      0xe800000000	                          call 0x4004f09	      5041	channel.c	FUNCTION_109	CALL_1
0x4004f09	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	      5042	channel.c	FUNCTION_109	IF_1
0x4004f0d	          0x4885ff	                           test rdi, rdi	      5042	channel.c	FUNCTION_109	IF_1
0x4004f10	            0x7422	                            je 0x4004f34	      5042	channel.c	FUNCTION_109	IF_1
0x4004f12	    0x8b87b4040000	           mov eax, dword [rdi + 0x4b4] 	       419	channel.c	FUNCTION_15	IF_1
0x4004f18	    0x48c787a80400	              mov qword [rdi + 0x4a8], 0	      5049	channel.c	FUNCTION_109	IF_1
0x4004f23	          0x83e801	                              sub eax, 1	       419	channel.c	FUNCTION_15	IF_1
0x4004f26	            0x85c0	                           test eax, eax	       419	channel.c	FUNCTION_15	IF_1
0x4004f28	    0x8987b4040000	            mov dword [rdi + 0x4b4], eax	       419	channel.c	FUNCTION_15	IF_1
0x4004f2e	     0xf8e7c000000	                           jle 0x4004fb0	       419	channel.c	FUNCTION_15	IF_1
0x4004f34	          0x4889ef	                            mov rdi, rbp	      5052	channel.c	FUNCTION_109	CALL_3
0x4004f37	      0xe800000000	                          call 0x4004f3c	      5052	channel.c	FUNCTION_109	CALL_3
0x4004f3c	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	      5054	channel.c	FUNCTION_109	CALL_4
0x4004f40	      0xe800000000	                          call 0x4004f45	      5054	channel.c	FUNCTION_109	CALL_4
0x4004f45	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	      5055	channel.c	FUNCTION_109	CALL_5
0x4004f49	      0xe800000000	                          call 0x4004f4e	      5055	channel.c	FUNCTION_109	CALL_5
0x4004f4e	        0x488b7d30	            mov rdi, qword [rbp + 0x30] 	      5056	channel.c	FUNCTION_109	CALL_6
0x4004f52	      0xe800000000	                          call 0x4004f57	      5056	channel.c	FUNCTION_109	CALL_6
0x4004f57	        0x488b7548	            mov rsi, qword [rbp + 0x48] 	      5057	channel.c	FUNCTION_109	CALL_7
0x4004f5b	        0x488b7d40	            mov rdi, qword [rbp + 0x40] 	      5057	channel.c	FUNCTION_109	CALL_7
0x4004f5f	      0xe800000000	                          call 0x4004f64	      5057	channel.c	FUNCTION_109	CALL_7
0x4004f64	        0x488b4568	            mov rax, qword [rbp + 0x68] 	      5058	channel.c	FUNCTION_109	IF_2
0x4004f68	          0x4885c0	                           test rax, rax	      5058	channel.c	FUNCTION_109	IF_2
0x4004f6b	            0x743b	                            je 0x4004fa8	      5058	channel.c	FUNCTION_109	IF_2
0x4004f6d	          0x488b38	                    mov rdi, qword [rax]	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x4004f70	          0x4885ff	                           test rdi, rdi	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x4004f73	            0x7421	                            je 0x4004f96	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x4004f75	      0xbb08000000	                              mov ebx, 8	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x4004f7a	    0x660f1f440000	                    nop word [rax + rax]	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x4004f80	      0xe800000000	                          call 0x4004f85	      5061	channel.c	FUNCTION_109	IF_2	CALL_8
0x4004f85	        0x488b4568	            mov rax, qword [rbp + 0x68] 	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x4004f89	        0x488b3c18	              mov rdi, qword [rax + rbx]	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x4004f8d	        0x4883c308	                              add rbx, 8	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x4004f91	          0x4885ff	                           test rdi, rdi	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x4004f94	            0x75ea	                           jne 0x4004f80	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x4004f96	        0x4883c408	                              add rsp, 8	      5064	channel.c	FUNCTION_109
0x4004f9a	          0x4889c7	                            mov rdi, rax	      5062	channel.c	FUNCTION_109	IF_2	CALL_9
0x4004f9d	              0x5b	                                 pop rbx	      5064	channel.c	FUNCTION_109
0x4004f9e	              0x5d	                                 pop rbp	      5064	channel.c	FUNCTION_109
0x4004f9f	      0xe900000000	                           jmp 0x4004fa4	      5062	channel.c	FUNCTION_109	IF_2	CALL_9
0x4004fa4	         0xf1f4000	                         nop dword [rax]	      5062	channel.c	FUNCTION_109	IF_2	CALL_9
0x4004fa8	        0x4883c408	                              add rsp, 8	      5064	channel.c	FUNCTION_109
0x4004fac	              0x5b	                                 pop rbx	      5064	channel.c	FUNCTION_109
0x4004fad	              0x5d	                                 pop rbp	      5064	channel.c	FUNCTION_109
0x4004fae	              0xc3	                                     ret	      5064	channel.c	FUNCTION_109
0x4004faf	              0x90	                                     nop	      5064	channel.c	FUNCTION_109
0x4004fb0	      0xe8bbfeffff	               call sym.channel_may_free	       420	channel.c	FUNCTION_15	CALL_1
0x4004fb5	      0xe97affffff	                           jmp 0x4004f34	       420	channel.c	FUNCTION_15	CALL_1
channel_clear	DO,0:IF,0:FOR,0:ELSE,0:SWITCH,0:CALL,8:WHILE,0:functions,0	34
0x4002b30	              0x53	                                push rbx	      3014	channel.c	FUNCTION_72
0x4002b31	            0x31c0	                            xor eax, eax	      3015	channel.c	FUNCTION_72	CALL_1
0x4002b33	          0x4889fb	                            mov rbx, rdi	      3014	channel.c	FUNCTION_72
0x4002b36	      0xbe00000000	                              mov esi, 0	      3015	channel.c	FUNCTION_72	CALL_1
0x4002b3b	      0xe800000000	                          call 0x4002b40	      3015	channel.c	FUNCTION_72	CALL_1
0x4002b40	    0x488bbb600400	           mov rdi, qword [rbx + 0x460] 	      3016	channel.c	FUNCTION_72	CALL_2
0x4002b47	          0x4885ff	                           test rdi, rdi	      3016	channel.c	FUNCTION_72	CALL_2
0x4002b4a	            0x7410	                            je 0x4002b5c	      3016	channel.c	FUNCTION_72	CALL_2
0x4002b4c	      0xe800000000	                          call 0x4002b51	      3016	channel.c	FUNCTION_72	CALL_2
0x4002b51	    0x48c783600400	              mov qword [rbx + 0x460], 0	      3016	channel.c	FUNCTION_72	CALL_2
0x4002b5c	          0x4889df	                            mov rdi, rbx	      3017	channel.c	FUNCTION_72	CALL_3
0x4002b5f	            0x31f6	                            xor esi, esi	      3017	channel.c	FUNCTION_72	CALL_3
0x4002b61	      0xe8faf8ffff	              call sym.channel_clear_one	      3017	channel.c	FUNCTION_72	CALL_3
0x4002b66	          0x4889df	                            mov rdi, rbx	      3018	channel.c	FUNCTION_72	CALL_4
0x4002b69	      0xbe01000000	                              mov esi, 1	      3018	channel.c	FUNCTION_72	CALL_4
0x4002b6e	      0xe8edf8ffff	              call sym.channel_clear_one	      3018	channel.c	FUNCTION_72	CALL_4
0x4002b73	          0x4889df	                            mov rdi, rbx	      3019	channel.c	FUNCTION_72	CALL_5
0x4002b76	      0xbe02000000	                              mov esi, 2	      3019	channel.c	FUNCTION_72	CALL_5
0x4002b7b	      0xe8e0f8ffff	              call sym.channel_clear_one	      3019	channel.c	FUNCTION_72	CALL_5
0x4002b80	          0x4889df	                            mov rdi, rbx	      3020	channel.c	FUNCTION_72	CALL_6
0x4002b83	      0xbe03000000	                              mov esi, 3	      3020	channel.c	FUNCTION_72	CALL_6
0x4002b88	      0xe8d3f8ffff	              call sym.channel_clear_one	      3020	channel.c	FUNCTION_72	CALL_6
0x4002b8d	    0x488bb3880400	           mov rsi, qword [rbx + 0x488] 	      3021	channel.c	FUNCTION_72	CALL_7
0x4002b94	    0x488bbb800400	           mov rdi, qword [rbx + 0x480] 	      3021	channel.c	FUNCTION_72	CALL_7
0x4002b9b	      0xe800000000	                          call 0x4002ba0	      3021	channel.c	FUNCTION_72	CALL_7
0x4002ba0	    0x488bb3980400	           mov rsi, qword [rbx + 0x498] 	      3024	channel.c	FUNCTION_72	CALL_8
0x4002ba7	    0x488bbb900400	           mov rdi, qword [rbx + 0x490] 	      3024	channel.c	FUNCTION_72	CALL_8
0x4002bae	    0x48c783800400	              mov qword [rbx + 0x480], 0	      3022	channel.c	FUNCTION_72
0x4002bb9	    0x48c783880400	              mov qword [rbx + 0x488], 0	      3023	channel.c	FUNCTION_72
0x4002bc4	      0xe800000000	                          call 0x4002bc9	      3024	channel.c	FUNCTION_72	CALL_8
0x4002bc9	    0x48c783900400	              mov qword [rbx + 0x490], 0	      3025	channel.c	FUNCTION_72
0x4002bd4	    0x48c783980400	              mov qword [rbx + 0x498], 0	      3026	channel.c	FUNCTION_72
0x4002bdf	              0x5b	                                 pop rbx	      3027	channel.c	FUNCTION_72
0x4002be0	              0xc3	                                     ret	      3027	channel.c	FUNCTION_72
channel_buffer_free	DO,0:IF,1:FOR,2:ELSE,0:SWITCH,0:CALL,1:WHILE,0:functions,0	36
0x4001d40	            0x4156	                                push r14	      1488	channel.c	FUNCTION_39
0x4001d42	            0x4155	                                push r13	      1488	channel.c	FUNCTION_39
0x4001d44	            0x4154	                                push r12	      1488	channel.c	FUNCTION_39
0x4001d46	    0x4c8b25000000	            mov r12, qword [0x04001d4d] 	      1492	channel.c	FUNCTION_39	FOR_1
0x4001d4d	              0x55	                                push rbp	      1488	channel.c	FUNCTION_39
0x4001d4e	              0x53	                                push rbx	      1488	channel.c	FUNCTION_39
0x4001d4f	          0x4d85e4	                           test r12, r12	      1492	channel.c	FUNCTION_39	FOR_1
0x4001d52	            0x743f	                            je 0x4001d93	      1492	channel.c	FUNCTION_39	FOR_1
0x4001d54	          0x4989fe	                            mov r14, rdi	      1492	channel.c	FUNCTION_39	FOR_1
0x4001d57	    0x660f1f840000	                    nop word [rax + rax]	      1492	channel.c	FUNCTION_39	FOR_1
0x4001d60	    0x498d9c24f800	                   lea rbx, [r12 + 0xf8]	      1492	channel.c	FUNCTION_39	FOR_1
0x4001d68	    0x4d8dac243805	                  lea r13, [r12 + 0x538]	      1492	channel.c	FUNCTION_39	FOR_1
0x4001d70	      0xbd00000000	                              mov ebp, 0	      1492	channel.c	FUNCTION_39	FOR_1
0x4001d75	          0x4c3933	                    cmp qword [rbx], r14	      1497	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4001d78	            0x7426	                            je 0x4001da0	      1497	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4001d7a	    0x4881c3100100	                          add rbx, 0x110	      1497	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4001d81	        0x4883c508	                              add rbp, 8	      1497	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4001d85	          0x4c39eb	                            cmp rbx, r13	      1493	channel.c	FUNCTION_39	FOR_1	FOR_2
0x4001d88	            0x75eb	                           jne 0x4001d75	      1493	channel.c	FUNCTION_39	FOR_1	FOR_2
0x4001d8a	        0x4d8b2424	                    mov r12, qword [r12]	      1492	channel.c	FUNCTION_39	FOR_1
0x4001d8e	          0x4d85e4	                           test r12, r12	      1492	channel.c	FUNCTION_39	FOR_1
0x4001d91	            0x75cd	                           jne 0x4001d60	      1492	channel.c	FUNCTION_39	FOR_1
0x4001d93	              0x5b	                                 pop rbx	      1504	channel.c	FUNCTION_39
0x4001d94	              0x5d	                                 pop rbp	      1504	channel.c	FUNCTION_39
0x4001d95	            0x415c	                                 pop r12	      1504	channel.c	FUNCTION_39
0x4001d97	            0x415d	                                 pop r13	      1504	channel.c	FUNCTION_39
0x4001d99	            0x415e	                                 pop r14	      1504	channel.c	FUNCTION_39
0x4001d9b	              0xc3	                                     ret	      1504	channel.c	FUNCTION_39
0x4001d9c	         0xf1f4000	                         nop dword [rax]	      1504	channel.c	FUNCTION_39
0x4001da0	        0x488b5500	                    mov rdx, qword [rbp]	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4001da4	      0xbe00000000	                              mov esi, 0	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4001da9	          0x4c89e7	                            mov rdi, r12	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4001dac	            0x31c0	                            xor eax, eax	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4001dae	      0xe800000000	                          call 0x4001db3	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4001db3	    0x48c703000000	                      mov qword [rbx], 0	      1501	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4001dba	            0xebbe	                           jmp 0x4001d7a	      1501	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
channel_send	DO,0:IF,22:FOR,1:ELSE,7:SWITCH,0:CALL,23:WHILE,0:functions,0	276
0x4002ce0	            0x4157	                                push r15	      3701	channel.c	FUNCTION_87
0x4002ce2	            0x4156	                                push r14	      3701	channel.c	FUNCTION_87
0x4002ce4	            0x4155	                                push r13	      3701	channel.c	FUNCTION_87
0x4002ce6	            0x4154	                                push r12	      3701	channel.c	FUNCTION_87
0x4002ce8	          0x4989fd	                            mov r13, rdi	      3701	channel.c	FUNCTION_87
0x4002ceb	              0x55	                                push rbp	      3701	channel.c	FUNCTION_87
0x4002cec	              0x53	                                push rbx	      3701	channel.c	FUNCTION_87
0x4002ced	            0x89f5	                            mov ebp, esi	      3707	channel.c	FUNCTION_87
0x4002cef	          0x4889e8	                            mov rax, rbp	      3707	channel.c	FUNCTION_87
0x4002cf2	        0x4883ec38	                           sub rsp, 0x38	      3701	channel.c	FUNCTION_87
0x4002cf6	        0x48c1e008	                              shl rax, 8	      3707	channel.c	FUNCTION_87
0x4002cfa	      0x4889542418	             mov qword [rsp + 0x18], rdx	      3701	channel.c	FUNCTION_87
0x4002cff	          0x4889ea	                            mov rdx, rbp	      3707	channel.c	FUNCTION_87
0x4002d02	        0x894c2414	             mov dword [rsp + 0x14], ecx	      3701	channel.c	FUNCTION_87
0x4002d06	        0x48c1e204	                              shl rdx, 4	      3707	channel.c	FUNCTION_87
0x4002d0a	      0x4c89442420	              mov qword [rsp + 0x20], r8	      3701	channel.c	FUNCTION_87
0x4002d0f	          0x4801d0	                            add rax, rdx	      3707	channel.c	FUNCTION_87
0x4002d12	        0x8b440718	      mov eax, dword [rdi + rax + 0x18] 	      3707	channel.c	FUNCTION_87
0x4002d16	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3708	channel.c	FUNCTION_87	IF_1
0x4002d19	        0x89442410	             mov dword [rsp + 0x10], eax	      3707	channel.c	FUNCTION_87
0x4002d1d	     0xf84ad010000	                            je 0x4002ed0	      3708	channel.c	FUNCTION_87	IF_1
0x4002d23	    0x48833d000000	               cmp qword [0x04002d2b], 0	      3719	channel.c	FUNCTION_87	IF_3	CALL_4
0x4002d2b	            0x7470	                            je 0x4002d9d	      3719	channel.c	FUNCTION_87	IF_3	CALL_4
0x4002d2d	          0x4889fe	                            mov rsi, rdi	      3721	channel.c	FUNCTION_87	IF_3	CALL_5
0x4002d30	      0xbf00000000	                              mov edi, 0	      3721	channel.c	FUNCTION_87	IF_3	CALL_5
0x4002d35	      0xe806d3ffff	                    call sym.ch_log_lead	      3721	channel.c	FUNCTION_87	IF_3	CALL_5
0x4002d3a	    0x488b35000000	            mov rsi, qword [0x04002d41] 	        97	stdio2.h	CALL_20
0x4002d41	      0xbf27000000	                           mov edi, 0x27	        97	stdio2.h	CALL_20
0x4002d46	      0xe800000000	                          call 0x4002d4b	        97	stdio2.h	CALL_20
0x4002d4b	      0x4863742414	         movsxd rsi, dword [rsp + 0x14] 	      3723	channel.c	FUNCTION_87	IF_3	CALL_6
0x4002d50	    0x488b0d000000	            mov rcx, qword [0x04002d57] 	      3723	channel.c	FUNCTION_87	IF_3	CALL_6
0x4002d57	      0xba01000000	                              mov edx, 1	      3723	channel.c	FUNCTION_87	IF_3	CALL_6
0x4002d5c	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      3723	channel.c	FUNCTION_87	IF_3	CALL_6
0x4002d61	      0xe800000000	                          call 0x4002d66	      3723	channel.c	FUNCTION_87	IF_3	CALL_6
0x4002d66	    0x488b0d000000	            mov rcx, qword [0x04002d6d] 	        97	stdio2.h	CALL_20
0x4002d6d	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_20
0x4002d72	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_20
0x4002d77	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_20
0x4002d7c	    0x890500000000	            mov dword [0x04002d82], eax 	      3723	channel.c	FUNCTION_87	IF_3	CALL_6
0x4002d82	      0xe800000000	                          call 0x4002d87	        97	stdio2.h	CALL_20
0x4002d87	    0x488b3d000000	            mov rdi, qword [0x04002d8e] 	      3725	channel.c	FUNCTION_87	IF_3	CALL_7
0x4002d8e	      0xe800000000	                          call 0x4002d93	      3725	channel.c	FUNCTION_87	IF_3	CALL_7
0x4002d93	    0xc70500000000	               mov dword [0x04002d9d], 1	      3726	channel.c	FUNCTION_87	IF_3
0x4002d9d	          0x4889eb	                            mov rbx, rbp	      3726	channel.c	FUNCTION_87	IF_3
0x4002da0	          0x4889e8	                            mov rax, rbp	      3726	channel.c	FUNCTION_87	IF_3
0x4002da3	          0x4531f6	                          xor r14d, r14d	      3701	channel.c	FUNCTION_87
0x4002da6	        0x48c1e008	                              shl rax, 8	      3701	channel.c	FUNCTION_87
0x4002daa	        0x48c1e304	                              shl rbx, 4	      3701	channel.c	FUNCTION_87
0x4002dae	      0x4c896c2408	                mov qword [rsp + 8], r13	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002db3	          0x4801c3	                            add rbx, rax	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002db6	      0x48896c2428	             mov qword [rsp + 0x28], rbp	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002dbb	    0x498d841d9800	            lea rax, [r13 + rbx + 0x98] 	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002dc3	          0x4c01eb	                            add rbx, r13	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002dc6	        0x48890424	                    mov qword [rsp], rax	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002dca	    0x488b83b00000	            mov rax, qword [rbx + 0xb0] 	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002dd1	          0x4885c0	                           test rax, rax	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002dd4	     0xf848f000000	                            je 0x4002e69	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002dda	        0x4c8b7810	            mov r15, qword [rax + 0x10] 	      3738	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002dde	          0x448b20	                   mov r12d, dword [rax]	      3739	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002de1	    0x41be01000000	                             mov r14d, 1	      3740	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002de7	        0x8b7c2410	            mov edi, dword [rsp + 0x10] 	      3755	channel.c	FUNCTION_87	FOR_1	ELSE_2
0x4002deb	          0x4963d4	                        movsxd rdx, r12d	      3755	channel.c	FUNCTION_87	FOR_1	ELSE_2
0x4002dee	          0x4c89fe	                            mov rsi, r15	      3755	channel.c	FUNCTION_87	FOR_1	ELSE_2
0x4002df1	      0xe800000000	                          call 0x4002df6	      3755	channel.c	FUNCTION_87	FOR_1	ELSE_2
0x4002df6	            0x85c0	                           test eax, eax	      3765	channel.c	FUNCTION_87	FOR_1	IF_8
0x4002df8	            0x89c5	                            mov ebp, eax	      3755	channel.c	FUNCTION_87	FOR_1	ELSE_2
0x4002dfa	     0xf8848010000	                            js 0x4002f48	      3765	channel.c	FUNCTION_87	FOR_1	IF_8
0x4002e00	    0x8b8394000000	            mov eax, dword [rbx + 0x94] 	      3772	channel.c	FUNCTION_87	FOR_1	IF_9
0x4002e06	            0x85c0	                           test eax, eax	      3772	channel.c	FUNCTION_87	FOR_1	IF_9
0x4002e08	     0xf8444010000	                            je 0x4002f52	      3772	channel.c	FUNCTION_87	FOR_1	IF_9
0x4002e0e	          0x4585f6	                         test r14d, r14d	      3776	channel.c	FUNCTION_87	FOR_1	IF_9	IF_10
0x4002e11	    0x4c8babb00000	            mov r13, qword [rbx + 0xb0] 	      3774	channel.c	FUNCTION_87	FOR_1	IF_9
0x4002e18	     0xf859a000000	                           jne 0x4002eb8	      3776	channel.c	FUNCTION_87	FOR_1	IF_9	IF_10
0x4002e1e	          0x4139ec	                           cmp r12d, ebp	      3778	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11
0x4002e21	     0xf8599010000	                           jne 0x4002fc0	      3778	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11
0x4002e27	          0x4d85ed	                           test r13, r13	      3781	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	IF_12
0x4002e2a	            0x745c	                            je 0x4002e88	      3781	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	IF_12
0x4002e2c	          0x4c89ef	                            mov rdi, r13	      2963	channel.c	FUNCTION_70	CALL_1
0x4002e2f	      0xe800000000	                          call 0x4002e34	      2963	channel.c	FUNCTION_70	CALL_1
0x4002e34	        0x498b4518	            mov rax, qword [r13 + 0x18] 	      2964	channel.c	FUNCTION_70
0x4002e38	        0x488b0c24	                    mov rcx, qword [rsp]	      2964	channel.c	FUNCTION_70
0x4002e3c	          0x4885c0	                           test rax, rax	      2965	channel.c	FUNCTION_70	IF_1
0x4002e3f	        0x48894118	             mov qword [rcx + 0x18], rax	      2964	channel.c	FUNCTION_70
0x4002e43	     0xf8457010000	                            je 0x4002fa0	      2965	channel.c	FUNCTION_70	IF_1
0x4002e49	    0x48c740200000	               mov qword [rax + 0x20], 0	      2968	channel.c	FUNCTION_70	ELSE_1
0x4002e51	          0x4c89ef	                            mov rdi, r13	      2969	channel.c	FUNCTION_70	CALL_2
0x4002e54	      0xe800000000	                          call 0x4002e59	      2969	channel.c	FUNCTION_70	CALL_2
0x4002e59	    0x488b83b00000	            mov rax, qword [rbx + 0xb0] 	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002e60	          0x4885c0	                           test rax, rax	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002e63	     0xf8571ffffff	                           jne 0x4002dda	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002e69	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      3744	channel.c	FUNCTION_87	FOR_1	ELSE_1	IF_5
0x4002e6d	            0x85c0	                           test eax, eax	      3744	channel.c	FUNCTION_87	FOR_1	ELSE_1	IF_5
0x4002e6f	     0xf84b5020000	                            je 0x400312a	      3744	channel.c	FUNCTION_87	FOR_1	ELSE_1	IF_5
0x4002e75	          0x4189c4	                           mov r12d, eax	      3744	channel.c	FUNCTION_87	FOR_1	ELSE_1	IF_5
0x4002e78	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      3744	channel.c	FUNCTION_87	FOR_1	ELSE_1	IF_5
0x4002e7d	      0xe965ffffff	                           jmp 0x4002de7	      3744	channel.c	FUNCTION_87	FOR_1	ELSE_1	IF_5
0x4002e82	    0x660f1f440000	                    nop word [rax + rax]	      3744	channel.c	FUNCTION_87	FOR_1	ELSE_1	IF_5
0x4002e88	          0x4585f6	                         test r14d, r14d	      3787	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	IF_13
0x4002e8b	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      3787	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	IF_13
0x4002e90	     0xf859a000000	                           jne 0x4002f30	      3787	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	IF_13
0x4002e96	    0x41c785740400	              mov dword [r13 + 0x474], 0	      3863	channel.c	FUNCTION_87	FOR_1
0x4002ea1	      0xb801000000	                              mov eax, 1	      3864	channel.c	FUNCTION_87	FOR_1
0x4002ea6	        0x4883c438	                           add rsp, 0x38	      3866	channel.c	FUNCTION_87
0x4002eaa	              0x5b	                                 pop rbx	      3866	channel.c	FUNCTION_87
0x4002eab	              0x5d	                                 pop rbp	      3866	channel.c	FUNCTION_87
0x4002eac	            0x415c	                                 pop r12	      3866	channel.c	FUNCTION_87
0x4002eae	            0x415d	                                 pop r13	      3866	channel.c	FUNCTION_87
0x4002eb0	            0x415e	                                 pop r14	      3866	channel.c	FUNCTION_87
0x4002eb2	            0x415f	                                 pop r15	      3866	channel.c	FUNCTION_87
0x4002eb4	              0xc3	                                     ret	      3866	channel.c	FUNCTION_87
0x4002eb5	           0xf1f00	                         nop dword [rax]	      3866	channel.c	FUNCTION_87
0x4002eb8	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3777	channel.c	FUNCTION_87	FOR_1	IF_9	CALL_10
0x4002ebd	            0x89ea	                            mov edx, ebp	      3777	channel.c	FUNCTION_87	FOR_1	IF_9	CALL_10
0x4002ebf	      0xbe00000000	                              mov esi, 0	      3777	channel.c	FUNCTION_87	FOR_1	IF_9	CALL_10
0x4002ec4	            0x31c0	                            xor eax, eax	      3777	channel.c	FUNCTION_87	FOR_1	IF_9	CALL_10
0x4002ec6	      0xe800000000	                          call 0x4002ecb	      3777	channel.c	FUNCTION_87	FOR_1	IF_9	CALL_10
0x4002ecb	      0xe94effffff	                           jmp 0x4002e1e	      3777	channel.c	FUNCTION_87	FOR_1	IF_9	CALL_10
0x4002ed0	    0x8b8f74040000	           mov ecx, dword [rdi + 0x474] 	      3710	channel.c	FUNCTION_87	IF_1	IF_2
0x4002ed6	            0x85c9	                           test ecx, ecx	      3710	channel.c	FUNCTION_87	IF_1	IF_2
0x4002ed8	            0x7533	                           jne 0x4002f0d	      3710	channel.c	FUNCTION_87	IF_1	IF_2
0x4002eda	          0x4d85c0	                             test r8, r8	      3710	channel.c	FUNCTION_87	IF_1	IF_2
0x4002edd	          0x4c89c3	                             mov rbx, r8	      3710	channel.c	FUNCTION_87	IF_1	IF_2
0x4002ee0	            0x742b	                            je 0x4002f0d	      3710	channel.c	FUNCTION_87	IF_1	IF_2
0x4002ee2	          0x4c89c2	                             mov rdx, r8	      3712	channel.c	FUNCTION_87	IF_1	IF_2	CALL_1
0x4002ee5	      0xbe00000000	                              mov esi, 0	      3712	channel.c	FUNCTION_87	IF_1	IF_2	CALL_1
0x4002eea	            0x31c0	                            xor eax, eax	      3712	channel.c	FUNCTION_87	IF_1	IF_2	CALL_1
0x4002eec	      0xe81fd2ffff	                       call sym.ch_error	      3712	channel.c	FUNCTION_87	IF_1	IF_2	CALL_1
0x4002ef1	      0xba05000000	                              mov edx, 5	      3713	channel.c	FUNCTION_87	IF_1	IF_2	CALL_3
0x4002ef6	      0xbe00000000	                              mov esi, 0	      3713	channel.c	FUNCTION_87	IF_1	IF_2	CALL_3
0x4002efb	            0x31ff	                            xor edi, edi	      3713	channel.c	FUNCTION_87	IF_1	IF_2	CALL_3
0x4002efd	      0xe800000000	                          call 0x4002f02	      3713	channel.c	FUNCTION_87	IF_1	IF_2	CALL_3
0x4002f02	          0x4889de	                            mov rsi, rbx	      3713	channel.c	FUNCTION_87	IF_1	IF_2	CALL_3
0x4002f05	          0x4889c7	                            mov rdi, rax	      3713	channel.c	FUNCTION_87	IF_1	IF_2	CALL_3
0x4002f08	      0xe800000000	                          call 0x4002f0d	      3713	channel.c	FUNCTION_87	IF_1	IF_2	CALL_3
0x4002f0d	    0x41c785740400	              mov dword [r13 + 0x474], 1	      3715	channel.c	FUNCTION_87	IF_1
0x4002f18	        0x4883c438	                           add rsp, 0x38	      3866	channel.c	FUNCTION_87
0x4002f1c	            0x31c0	                            xor eax, eax	      3716	channel.c	FUNCTION_87	IF_1
0x4002f1e	              0x5b	                                 pop rbx	      3866	channel.c	FUNCTION_87
0x4002f1f	              0x5d	                                 pop rbp	      3866	channel.c	FUNCTION_87
0x4002f20	            0x415c	                                 pop r12	      3866	channel.c	FUNCTION_87
0x4002f22	            0x415d	                                 pop r13	      3866	channel.c	FUNCTION_87
0x4002f24	            0x415e	                                 pop r14	      3866	channel.c	FUNCTION_87
0x4002f26	            0x415f	                                 pop r15	      3866	channel.c	FUNCTION_87
0x4002f28	              0xc3	                                     ret	      3866	channel.c	FUNCTION_87
0x4002f29	     0xf1f80000000	                         nop dword [rax]	      3866	channel.c	FUNCTION_87
0x4002f30	      0xbe00000000	                              mov esi, 0	      3788	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	CALL_12
0x4002f35	          0x4c89ef	                            mov rdi, r13	      3788	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	CALL_12
0x4002f38	            0x31c0	                            xor eax, eax	      3788	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	CALL_12
0x4002f3a	      0xe800000000	                          call 0x4002f3f	      3788	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	CALL_12
0x4002f3f	      0xe952ffffff	                           jmp 0x4002e96	      3788	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	CALL_12
0x4002f44	         0xf1f4000	                         nop dword [rax]	      3788	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	CALL_12
0x4002f48	      0xe800000000	                          call 0x4002f4d	      3765	channel.c	FUNCTION_87	FOR_1	IF_8
0x4002f4d	          0x83380b	                    cmp dword [rax], 0xb	      3765	channel.c	FUNCTION_87	FOR_1	IF_8
0x4002f50	            0x745e	                            je 0x4002fb0	      3765	channel.c	FUNCTION_87	FOR_1	IF_8
0x4002f52	          0x4139ec	                           cmp r12d, ebp	      3852	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21
0x4002f55	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      3852	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21
0x4002f5a	     0xf8436ffffff	                            je 0x4002e96	      3852	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21
0x4002f60	    0x418b95740400	           mov edx, dword [r13 + 0x474] 	      3854	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22
0x4002f67	            0x85d2	                           test edx, edx	      3854	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22
0x4002f69	            0x75a2	                           jne 0x4002f0d	      3854	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22
0x4002f6b	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      3854	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22
0x4002f70	          0x4885db	                           test rbx, rbx	      3854	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22
0x4002f73	            0x7498	                            je 0x4002f0d	      3854	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22
0x4002f75	          0x4889da	                            mov rdx, rbx	      3856	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_21
0x4002f78	      0xbe00000000	                              mov esi, 0	      3856	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_21
0x4002f7d	          0x4c89ef	                            mov rdi, r13	      3856	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_21
0x4002f80	            0x31c0	                            xor eax, eax	      3856	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_21
0x4002f82	      0xe889d1ffff	                       call sym.ch_error	      3856	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_21
0x4002f87	      0xba05000000	                              mov edx, 5	      3857	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_23
0x4002f8c	      0xbe00000000	                              mov esi, 0	      3857	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_23
0x4002f91	      0xe965ffffff	                           jmp 0x4002efb	      3857	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_23
0x4002f96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3857	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_23
0x4002fa0	    0x48c741200000	               mov qword [rcx + 0x20], 0	      2966	channel.c	FUNCTION_70	IF_1
0x4002fa8	      0xe9a4feffff	                           jmp 0x4002e51	      2966	channel.c	FUNCTION_70	IF_1
0x4002fad	           0xf1f00	                         nop dword [rax]	      2966	channel.c	FUNCTION_70	IF_1
0x4002fb0	            0x31ed	                            xor ebp, ebp	      3770	channel.c	FUNCTION_87	FOR_1	IF_8
0x4002fb2	      0xe949feffff	                           jmp 0x4002e00	      3770	channel.c	FUNCTION_87	FOR_1	IF_8
0x4002fb7	    0x660f1f840000	                    nop word [rax + rax]	      3770	channel.c	FUNCTION_87	FOR_1	IF_8
0x4002fc0	          0x4c89f9	                            mov rcx, r15	      3770	channel.c	FUNCTION_87	FOR_1	IF_8
0x4002fc3	          0x4d89ef	                            mov r15, r13	      3770	channel.c	FUNCTION_87	FOR_1	IF_8
0x4002fc6	          0x4189e8	                            mov r8d, ebp	      3770	channel.c	FUNCTION_87	FOR_1	IF_8
0x4002fc9	          0x4d85ff	                           test r15, r15	      3793	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14
0x4002fcc	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      3793	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14
0x4002fd1	      0x488b6c2428	            mov rbp, qword [rsp + 0x28] 	      3793	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14
0x4002fd6	     0xf8458010000	                            je 0x4003134	      3793	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14
0x4002fdc	          0x4585c0	                           test r8d, r8d	      3795	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15
0x4002fdf	            0x7e22	                           jle 0x4003003	      3795	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15
0x4002fe1	        0x498b7f10	            mov rdi, qword [r15 + 0x10] 	      3798	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15	CALL_13
0x4002fe5	          0x4529c4	                           sub r12d, r8d	        59	string3.h	FUNCTION_136	CALL_3
0x4002fe8	          0x4963f0	                         movsxd rsi, r8d	        59	string3.h	FUNCTION_136	CALL_3
0x4002feb	          0x4963d4	                        movsxd rdx, r12d	        59	string3.h	FUNCTION_136	CALL_3
0x4002fee	      0x4489442410	             mov dword [rsp + 0x10], r8d	        59	string3.h	FUNCTION_136	CALL_3
0x4002ff3	          0x4801fe	                            add rsi, rdi	        59	string3.h	FUNCTION_136	CALL_3
0x4002ff6	      0xe800000000	                          call 0x4002ffb	        59	string3.h	FUNCTION_136	CALL_3
0x4002ffb	      0x448b442410	            mov r8d, dword [rsp + 0x10] 	      3801	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15
0x4003000	          0x452907	                    sub dword [r15], r8d	      3801	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15
0x4003003	      0x448b7c2414	           mov r15d, dword [rsp + 0x14] 	      3811	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	CALL_14
0x4003008	            0x31c0	                            xor eax, eax	      3811	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	CALL_14
0x400300a	      0xbe00000000	                              mov esi, 0	      3811	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	CALL_14
0x400300f	          0x4c89ef	                            mov rdi, r13	      3811	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	CALL_14
0x4003012	          0x4489fa	                           mov edx, r15d	      3811	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	CALL_14
0x4003015	      0xe800000000	                          call 0x400301a	      3811	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	CALL_14
0x400301a	          0x4889ea	                            mov rdx, rbp	      3815	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x400301d	          0x4889e8	                            mov rax, rbp	      3815	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x4003020	        0x48c1e204	                              shl rdx, 4	      3815	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x4003024	        0x48c1e008	                              shl rax, 8	      3815	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x4003028	          0x4801d0	                            add rax, rdx	      3815	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x400302b	    0x498b9c05b800	      mov rbx, qword [r13 + rax + 0xb8] 	      3815	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x4003033	          0x4885db	                           test rbx, rbx	      3815	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x4003036	            0x7410	                            je 0x4003048	      3815	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x4003038	            0x8b03	                    mov eax, dword [rbx]	      3816	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x400303a	          0x4401f8	                           add eax, r15d	      3816	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x400303d	      0x3d9f0f0000	                          cmp eax, 0xf9f	      3816	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x4003042	     0xf8eac000000	                           jle 0x40030f4	      3816	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x4003048	      0xbf28000000	                           mov edi, 0x28	      3831	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	CALL_17
0x400304d	      0xe800000000	                          call 0x4003052	      3831	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	CALL_17
0x4003052	          0x4885c0	                           test rax, rax	      3833	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x4003055	          0x4889c3	                            mov rbx, rax	      3831	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	CALL_17
0x4003058	     0xf8438feffff	                            je 0x4002e96	      3833	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x400305e	          0x4889ea	                            mov rdx, rbp	      3835	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x4003061	          0x4889e8	                            mov rax, rbp	      3835	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x4003064	        0x48c1e204	                              shl rdx, 4	      3835	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x4003068	        0x48c1e008	                              shl rax, 8	      3835	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x400306c	          0x4801d0	                            add rax, rdx	      3835	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x400306f	          0x4c01e8	                            add rax, r13	      3835	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x4003072	    0x488b90b80000	            mov rdx, qword [rax + 0xb8] 	      3835	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x4003079	    0x48c743180000	               mov qword [rbx + 0x18], 0	      3836	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x4003081	        0x48895320	             mov qword [rbx + 0x20], rdx	      3835	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x4003085	    0x488b90b80000	            mov rdx, qword [rax + 0xb8] 	      3837	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x400308c	          0x4885d2	                           test rdx, rdx	      3837	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x400308f	     0xf84b7000000	                            je 0x400314c	      3837	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x4003095	        0x48895a18	             mov qword [rdx + 0x18], rbx	      3840	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	ELSE_6
0x4003099	          0x4889e8	                            mov rax, rbp	      3841	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x400309c	        0x48c1e508	                              shl rbp, 8	      3841	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x40030a0	      0xbae8030000	                          mov edx, 0x3e8	      3842	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	CALL_18
0x40030a5	        0x48c1e004	                              shl rax, 4	      3841	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x40030a9	      0xbe01000000	                              mov esi, 1	      3842	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	CALL_18
0x40030ae	          0x4889df	                            mov rdi, rbx	      3842	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	CALL_18
0x40030b1	          0x4801e8	                            add rax, rbp	      3841	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x40030b4	    0x49899c05b800	       mov qword [r13 + rax + 0xb8], rbx	      3841	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x40030bc	      0xe800000000	                          call 0x40030c1	      3842	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	CALL_18
0x40030c1	        0x8b742414	            mov esi, dword [rsp + 0x14] 	      3843	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_19
0x40030c5	          0x4889df	                            mov rdi, rbx	      3843	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_19
0x40030c8	      0xe800000000	                          call 0x40030cd	      3843	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_19
0x40030cd	          0x83f801	                              cmp eax, 1	      3843	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_19
0x40030d0	     0xf85c0fdffff	                           jne 0x4002e96	      3843	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_19
0x40030d6	      0x448b7c2414	           mov r15d, dword [rsp + 0x14] 	        59	string3.h	FUNCTION_136	CALL_3
0x40030db	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	        59	string3.h	FUNCTION_136	CALL_3
0x40030df	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	        59	string3.h	FUNCTION_136	CALL_3
0x40030e4	          0x4963d7	                        movsxd rdx, r15d	        59	string3.h	FUNCTION_136	CALL_3
0x40030e7	      0xe800000000	                          call 0x40030ec	        59	string3.h	FUNCTION_136	CALL_3
0x40030ec	          0x44893b	                   mov dword [rbx], r15d	      3846	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20
0x40030ef	      0xe9a2fdffff	                           jmp 0x4002e96	      3846	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20
0x40030f4	        0x8b742414	            mov esi, dword [rsp + 0x14] 	      3821	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_15
0x40030f8	          0x4889df	                            mov rdi, rbx	      3821	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_15
0x40030fb	      0xe800000000	                          call 0x4003100	      3821	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_15
0x4003100	          0x83f801	                              cmp eax, 1	      3821	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_15
0x4003103	     0xf858dfdffff	                           jne 0x4002e96	      3821	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_15
0x4003109	          0x48633b	                 movsxd rdi, dword [rbx]	        59	string3.h	FUNCTION_136	CALL_3
0x400310c	      0x448b7c2414	           mov r15d, dword [rsp + 0x14] 	        59	string3.h	FUNCTION_136	CALL_3
0x4003111	        0x48037b10	             add rdi, qword [rbx + 0x10]	        59	string3.h	FUNCTION_136	CALL_3
0x4003115	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	        59	string3.h	FUNCTION_136	CALL_3
0x400311a	          0x4963d7	                        movsxd rdx, r15d	        59	string3.h	FUNCTION_136	CALL_3
0x400311d	      0xe800000000	                          call 0x4003122	        59	string3.h	FUNCTION_136	CALL_3
0x4003122	          0x44013b	                   add dword [rbx], r15d	      3826	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17
0x4003125	      0xe96cfdffff	                           jmp 0x4002e96	      3826	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17
0x400312a	      0xb801000000	                              mov eax, 1	      3746	channel.c	FUNCTION_87	FOR_1	ELSE_1	IF_5
0x400312f	      0xe972fdffff	                           jmp 0x4002ea6	      3746	channel.c	FUNCTION_87	FOR_1	ELSE_1	IF_5
0x4003134	          0x4963c0	                         movsxd rax, r8d	      3808	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_4
0x4003137	          0x4529c4	                           sub r12d, r8d	      3809	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_4
0x400313a	          0x4801c8	                            add rax, rcx	      3808	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_4
0x400313d	      0x4489642414	            mov dword [rsp + 0x14], r12d	      3809	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_4
0x4003142	      0x4889442418	             mov qword [rsp + 0x18], rax	      3808	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_4
0x4003147	      0xe9b7feffff	                           jmp 0x4003003	      3808	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_4
0x400314c	    0x488998b00000	             mov qword [rax + 0xb0], rbx	      3838	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x4003153	      0xe941ffffff	                           jmp 0x4003099	      3838	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
may_invoke_callback	DO,0:IF,34:FOR,4:ELSE,11:SWITCH,0:CALL,31:WHILE,2:functions,0	913
0x4003c30	            0x4157	                                push r15	      2465	channel.c	FUNCTION_61
0x4003c32	            0x4156	                                push r14	      2465	channel.c	FUNCTION_61
0x4003c34	            0x4155	                                push r13	      2465	channel.c	FUNCTION_61
0x4003c36	            0x4154	                                push r12	      2465	channel.c	FUNCTION_61
0x4003c38	              0x55	                                push rbp	      2465	channel.c	FUNCTION_61
0x4003c39	              0x53	                                push rbx	      2465	channel.c	FUNCTION_61
0x4003c3a	    0x4881ec580100	                          sub rsp, 0x158	      2465	channel.c	FUNCTION_61
0x4003c41	    0x64488b042528	                mov rax, qword fs:[0x28]	      2465	channel.c	FUNCTION_61
0x4003c4a	    0x488984244801	            mov qword [rsp + 0x148], rax	      2465	channel.c	FUNCTION_61
0x4003c52	            0x31c0	                            xor eax, eax	      2465	channel.c	FUNCTION_61
0x4003c54	    0x4883bf780400	              cmp qword [rdi + 0x478], 0	      2479	channel.c	FUNCTION_61	IF_1
0x4003c5c	    0x48c744243000	               mov qword [rsp + 0x30], 0	      2467	channel.c	FUNCTION_61
0x4003c65	            0x7431	                            je 0x4003c98	      2479	channel.c	FUNCTION_61	IF_1
0x4003c67	            0x31c0	                            xor eax, eax	      2547	channel.c	FUNCTION_61	IF_6	IF_10
0x4003c69	    0x488bb4244801	           mov rsi, qword [rsp + 0x148] 	      2705	channel.c	FUNCTION_61
0x4003c71	    0x644833342528	                xor rsi, qword fs:[0x28]	      2705	channel.c	FUNCTION_61
0x4003c7a	     0xf8580090000	                           jne 0x4004600	      2705	channel.c	FUNCTION_61
0x4003c80	    0x4881c4580100	                          add rsp, 0x158	      2705	channel.c	FUNCTION_61
0x4003c87	              0x5b	                                 pop rbx	      2705	channel.c	FUNCTION_61
0x4003c88	              0x5d	                                 pop rbp	      2705	channel.c	FUNCTION_61
0x4003c89	            0x415c	                                 pop r12	      2705	channel.c	FUNCTION_61
0x4003c8b	            0x415d	                                 pop r13	      2705	channel.c	FUNCTION_61
0x4003c8d	            0x415e	                                 pop r14	      2705	channel.c	FUNCTION_61
0x4003c8f	            0x415f	                                 pop r15	      2705	channel.c	FUNCTION_61
0x4003c91	              0xc3	                                     ret	      2705	channel.c	FUNCTION_61
0x4003c92	    0x660f1f440000	                    nop word [rax + rax]	      2705	channel.c	FUNCTION_61
0x4003c98	            0x89f3	                            mov ebx, esi	      2484	channel.c	FUNCTION_61	FOR_1
0x4003c9a	          0x4989ff	                            mov r15, rdi	      2484	channel.c	FUNCTION_61	FOR_1
0x4003c9d	            0x89f5	                            mov ebp, esi	      2484	channel.c	FUNCTION_61	FOR_1
0x4003c9f	          0x4889da	                            mov rdx, rbx	      2484	channel.c	FUNCTION_61	FOR_1
0x4003ca2	          0x4889d8	                            mov rax, rbx	      2484	channel.c	FUNCTION_61	FOR_1
0x4003ca5	        0x48c1e204	                              shl rdx, 4	      2484	channel.c	FUNCTION_61	FOR_1
0x4003ca9	        0x48c1e008	                              shl rax, 8	      2484	channel.c	FUNCTION_61	FOR_1
0x4003cad	          0x4801d0	                            add rax, rdx	      2484	channel.c	FUNCTION_61	FOR_1
0x4003cb0	    0x4c8bac07d800	      mov r13, qword [rdi + rax + 0xd8] 	      2484	channel.c	FUNCTION_61	FOR_1
0x4003cb8	          0x4d85ed	                           test r13, r13	      2484	channel.c	FUNCTION_61	FOR_1
0x4003cbb	            0x7518	                           jne 0x4003cd5	      2484	channel.c	FUNCTION_61	FOR_1
0x4003cbd	      0xe9fe000000	                           jmp 0x4003dc0	      2484	channel.c	FUNCTION_61	FOR_1
0x4003cc2	    0x660f1f440000	                    nop word [rax + rax]	      2484	channel.c	FUNCTION_61	FOR_1
0x4003cc8	        0x4d8b6d18	            mov r13, qword [r13 + 0x18] 	      2484	channel.c	FUNCTION_61	FOR_1
0x4003ccc	          0x4d85ed	                           test r13, r13	      2484	channel.c	FUNCTION_61	FOR_1
0x4003ccf	     0xf84eb000000	                            je 0x4003dc0	      2484	channel.c	FUNCTION_61	FOR_1
0x4003cd5	        0x458b5d10	           mov r11d, dword [r13 + 0x10] 	      2485	channel.c	FUNCTION_61	FOR_1	IF_2
0x4003cd9	          0x4585db	                         test r11d, r11d	      2485	channel.c	FUNCTION_61	FOR_1	IF_2
0x4003cdc	            0x75ea	                           jne 0x4003cc8	      2485	channel.c	FUNCTION_61	FOR_1	IF_2
0x4003cde	        0x498b4500	                    mov rax, qword [r13]	      2489	channel.c	FUNCTION_61	IF_3
0x4003ce2	      0x4889442408	                mov qword [rsp + 8], rax	      2489	channel.c	FUNCTION_61	IF_3
0x4003ce7	        0x498b4508	                mov rax, qword [r13 + 8]	      2490	channel.c	FUNCTION_61	IF_3
0x4003ceb	      0x4889442420	             mov qword [rsp + 0x20], rax	      2490	channel.c	FUNCTION_61	IF_3
0x4003cf0	          0x4889da	                            mov rdx, rbx	      2471	channel.c	FUNCTION_61
0x4003cf3	          0x4889d8	                            mov rax, rbx	      2471	channel.c	FUNCTION_61
0x4003cf6	        0x48c1e204	                              shl rdx, 4	      2471	channel.c	FUNCTION_61
0x4003cfa	        0x48c1e008	                              shl rax, 8	      2471	channel.c	FUNCTION_61
0x4003cfe	          0x4801d0	                            add rax, rdx	      2471	channel.c	FUNCTION_61
0x4003d01	        0x498d1407	                    lea rdx, [r15 + rax]	      2471	channel.c	FUNCTION_61
0x4003d05	          0x8b7220	            mov esi, dword [rdx + 0x20] 	      2471	channel.c	FUNCTION_61
0x4003d08	          0x893424	                    mov dword [rsp], esi	      2471	channel.c	FUNCTION_61
0x4003d0b	    0x488bb2f80000	            mov rsi, qword [rdx + 0xf8] 	      2503	channel.c	FUNCTION_61
0x4003d12	          0x4885f6	                           test rsi, rsi	      2504	channel.c	FUNCTION_61	IF_5	CALL_1
0x4003d15	          0x4989f6	                            mov r14, rsi	      2503	channel.c	FUNCTION_61
0x4003d18	      0x4889742410	             mov qword [rsp + 0x10], rsi	      2503	channel.c	FUNCTION_61
0x4003d1d	            0x7420	                            je 0x4003d3f	      2504	channel.c	FUNCTION_61	IF_5	CALL_1
0x4003d1f	    0x498dbc07f800	            lea rdi, [r15 + rax + 0xf8] 	      2504	channel.c	FUNCTION_61	IF_5	CALL_1
0x4003d27	      0xe800000000	                          call 0x4003d2c	      2504	channel.c	FUNCTION_61	IF_5	CALL_1
0x4003d2c	            0x85c0	                           test eax, eax	      2504	channel.c	FUNCTION_61	IF_5	CALL_1
0x4003d2e	     0xf844c010000	                            je 0x4003e80	      2504	channel.c	FUNCTION_61	IF_5	CALL_1
0x4003d34	      0x49837e0800	                  cmp qword [r14 + 8], 0	      2505	channel.c	FUNCTION_61	IF_5
0x4003d39	     0xf8441010000	                            je 0x4003e80	      2505	channel.c	FUNCTION_61	IF_5
0x4003d3f	          0x4889da	                            mov rdx, rbx	      2472	channel.c	FUNCTION_61
0x4003d42	          0x4889d8	                            mov rax, rbx	      2472	channel.c	FUNCTION_61
0x4003d45	        0x48c1e204	                              shl rdx, 4	      2472	channel.c	FUNCTION_61
0x4003d49	        0x48c1e008	                              shl rax, 8	      2472	channel.c	FUNCTION_61
0x4003d4d	          0x4801d0	                            add rax, rdx	      2472	channel.c	FUNCTION_61
0x4003d50	    0x498db407c000	            lea rsi, [r15 + rax + 0xc0] 	      2472	channel.c	FUNCTION_61
0x4003d58	      0x4889742418	             mov qword [rsp + 0x18], rsi	      2472	channel.c	FUNCTION_61
0x4003d5d	          0x8b3424	                    mov esi, dword [rsp]	      2513	channel.c	FUNCTION_61	IF_6
0x4003d60	          0x8d56fe	                      lea edx, [rsi - 2]	      2513	channel.c	FUNCTION_61	IF_6
0x4003d63	          0x83fa01	                              cmp edx, 1	      2513	channel.c	FUNCTION_61	IF_6
0x4003d66	     0xf86db020000	                           jbe 0x4004047	      2513	channel.c	FUNCTION_61	IF_6
0x4003d6c	      0x4d8b740740	      mov r14, qword [r15 + rax + 0x40] 	      1615	channel.c	FUNCTION_44
0x4003d71	          0x4d85f6	                           test r14, r14	      2551	channel.c	FUNCTION_61	ELSE_3	IF_11	CALL_10
0x4003d74	     0xf84edfeffff	                            je 0x4003c67	      2551	channel.c	FUNCTION_61	ELSE_3	IF_11	CALL_10
0x4003d7a	    0x48837c240800	                  cmp qword [rsp + 8], 0	      2559	channel.c	FUNCTION_61	ELSE_4	IF_12
0x4003d80	            0x757e	                           jne 0x4003e00	      2559	channel.c	FUNCTION_61	ELSE_4	IF_12
0x4003d82	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2559	channel.c	FUNCTION_61	ELSE_4	IF_12
0x4003d88	            0x7576	                           jne 0x4003e00	      2559	channel.c	FUNCTION_61	ELSE_4	IF_12
0x4003d8a	    0x4983bf900400	              cmp qword [r15 + 0x490], 0	      2563	channel.c	FUNCTION_61	ELSE_4	IF_12	IF_13
0x4003d92	     0xf85cffeffff	                           jne 0x4003c67	      2563	channel.c	FUNCTION_61	ELSE_4	IF_12	IF_13
0x4003d98	    0x418b87a00400	           mov eax, dword [r15 + 0x4a0] 	      2563	channel.c	FUNCTION_61	ELSE_4	IF_12	IF_13
0x4003d9f	            0x85c0	                           test eax, eax	      2563	channel.c	FUNCTION_61	ELSE_4	IF_12	IF_13
0x4003da1	     0xf85c0feffff	                           jne 0x4003c67	      2563	channel.c	FUNCTION_61	ELSE_4	IF_12	IF_13
0x4003da7	            0x89ee	                            mov esi, ebp	      2564	channel.c	FUNCTION_61	ELSE_4	IF_12	CALL_11
0x4003da9	          0x4c89ff	                            mov rdi, r15	      2564	channel.c	FUNCTION_61	ELSE_4	IF_12	CALL_11
0x4003dac	          0x890424	                    mov dword [rsp], eax	      2564	channel.c	FUNCTION_61	ELSE_4	IF_12	CALL_11
0x4003daf	      0xe85ce6ffff	                  call sym.drop_messages	      2564	channel.c	FUNCTION_61	ELSE_4	IF_12	CALL_11
0x4003db4	          0x8b0424	                    mov eax, dword [rsp]	      2564	channel.c	FUNCTION_61	ELSE_4	IF_12	CALL_11
0x4003db7	      0xe9adfeffff	                           jmp 0x4003c69	      2564	channel.c	FUNCTION_61	ELSE_4	IF_12	CALL_11
0x4003dbc	         0xf1f4000	                         nop dword [rax]	      2564	channel.c	FUNCTION_61	ELSE_4	IF_12	CALL_11
0x4003dc0	          0x4889da	                            mov rdx, rbx	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4003dc3	          0x4889d8	                            mov rax, rbx	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4003dc6	        0x48c1e204	                              shl rdx, 4	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4003dca	        0x48c1e008	                              shl rax, 8	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4003dce	          0x4801d0	                            add rax, rdx	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4003dd1	          0x4c01f8	                            add rax, r15	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4003dd4	    0x488bb0e80000	            mov rsi, qword [rax + 0xe8] 	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4003ddb	          0x4885f6	                           test rsi, rsi	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4003dde	      0x4889742408	                mov qword [rsp + 8], rsi	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4003de3	     0xf84f5040000	                            je 0x40042de	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4003de9	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      2495	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4003df0	          0x4531ed	                          xor r13d, r13d	      2495	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4003df3	      0x4889442420	             mov qword [rsp + 0x20], rax	      2495	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4003df8	      0xe9f3feffff	                           jmp 0x4003cf0	      2495	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4003dfd	           0xf1f00	                         nop dword [rax]	      2495	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4003e00	        0x448b1424	                   mov r10d, dword [rsp]	      2568	channel.c	FUNCTION_61	ELSE_4	IF_14
0x4003e04	          0x4585d2	                         test r10d, r10d	      2568	channel.c	FUNCTION_61	ELSE_4	IF_14
0x4003e07	     0xf8525040000	                           jne 0x4004232	      2568	channel.c	FUNCTION_61	ELSE_4	IF_14
0x4003e0d	          0x4989dc	                            mov r12, rbx	      2568	channel.c	FUNCTION_61	ELSE_4	IF_14
0x4003e10	          0x4889d8	                            mov rax, rbx	      2568	channel.c	FUNCTION_61	ELSE_4	IF_14
0x4003e13	        0x49c1e404	                              shl r12, 4	      2568	channel.c	FUNCTION_61	ELSE_4	IF_14
0x4003e17	        0x48c1e008	                              shl rax, 8	      2568	channel.c	FUNCTION_61	ELSE_4	IF_14
0x4003e1b	          0x4901c4	                            add r12, rax	      2568	channel.c	FUNCTION_61	ELSE_4	IF_14
0x4003e1e	          0x4d01fc	                            add r12, r15	      2568	channel.c	FUNCTION_61	ELSE_4	IF_14
0x4003e21	     0xf1f80000000	                         nop dword [rax]	      2568	channel.c	FUNCTION_61	ELSE_4	IF_14
0x4003e28	        0x498b4608	                mov rax, qword [r14 + 8]	      1629	channel.c	FUNCTION_45	FOR_1
0x4003e2c	          0x498b3e	                    mov rdi, qword [r14]	      1626	channel.c	FUNCTION_45
0x4003e2f	          0x4885c0	                           test rax, rax	      1629	channel.c	FUNCTION_45	FOR_1
0x4003e32	            0x7432	                            je 0x4003e66	      1629	channel.c	FUNCTION_45	FOR_1
0x4003e34	          0x803f0a	                     cmp byte [rdi], 0xa	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4003e37	     0xf84fe010000	                            je 0x400403b	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4003e3d	        0x488d5701	                      lea rdx, [rdi + 1]	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4003e41	        0x488d0c07	                    lea rcx, [rdi + rax]	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4003e45	            0xeb1a	                           jmp 0x4003e61	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4003e47	    0x660f1f840000	                    nop word [rax + rax]	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4003e50	          0x4989d3	                            mov r11, rdx	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4003e53	        0x4883c201	                              add rdx, 1	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4003e57	        0x807aff0a	                 cmp byte [rdx - 1], 0xa	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4003e5b	     0xf84c7000000	                            je 0x4003f28	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4003e61	          0x4839ca	                            cmp rdx, rcx	      1629	channel.c	FUNCTION_45	FOR_1
0x4003e64	            0x75ea	                           jne 0x4003e50	      1629	channel.c	FUNCTION_45	FOR_1
0x4003e66	      0xba01000000	                              mov edx, 1	      2582	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x4003e6b	            0x89ee	                            mov esi, ebp	      2582	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x4003e6d	          0x4c89ff	                            mov rdi, r15	      2582	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x4003e70	      0xe800000000	                          call 0x4003e75	      2582	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x4003e75	            0x85c0	                           test eax, eax	      2582	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x4003e77	            0x7449	                            je 0x4003ec2	      2582	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x4003e79	      0x4d8b742440	            mov r14, qword [r12 + 0x40] 	      2582	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x4003e7e	            0xeba8	                           jmp 0x4003e28	      2582	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x4003e80	    0x488b14dd0000	                  mov rdx, qword [rbx*8]	      2508	channel.c	FUNCTION_61	IF_5	CALL_2
0x4003e88	            0x31c0	                            xor eax, eax	      2508	channel.c	FUNCTION_61	IF_5	CALL_2
0x4003e8a	      0xbe00000000	                              mov esi, 0	      2508	channel.c	FUNCTION_61	IF_5	CALL_2
0x4003e8f	          0x4c89ff	                            mov rdi, r15	      2508	channel.c	FUNCTION_61	IF_5	CALL_2
0x4003e92	      0xe800000000	                          call 0x4003e97	      2508	channel.c	FUNCTION_61	IF_5	CALL_2
0x4003e97	          0x4889da	                            mov rdx, rbx	      2509	channel.c	FUNCTION_61	IF_5
0x4003e9a	          0x4889d8	                            mov rax, rbx	      2509	channel.c	FUNCTION_61	IF_5
0x4003e9d	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2510	channel.c	FUNCTION_61	IF_5
0x4003ea6	        0x48c1e204	                              shl rdx, 4	      2509	channel.c	FUNCTION_61	IF_5
0x4003eaa	        0x48c1e008	                              shl rax, 8	      2509	channel.c	FUNCTION_61	IF_5
0x4003eae	          0x4801d0	                            add rax, rdx	      2509	channel.c	FUNCTION_61	IF_5
0x4003eb1	    0x49c78407f800	         mov qword [r15 + rax + 0xf8], 0	      2509	channel.c	FUNCTION_61	IF_5
0x4003ebd	      0xe97dfeffff	                           jmp 0x4003d3f	      2509	channel.c	FUNCTION_61	IF_5
0x4003ec2	          0x4889da	                            mov rdx, rbx	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x4003ec5	          0x4889d8	                            mov rax, rbx	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x4003ec8	        0x48c1e204	                              shl rdx, 4	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x4003ecc	        0x48c1e008	                              shl rax, 8	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x4003ed0	          0x4801d0	                            add rax, rdx	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x4003ed3	    0x41837c0718ff	cmp dword [r15 + rax + 0x18], 0xffffffffffffffff	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x4003ed9	     0xf8588fdffff	                           jne 0x4003c67	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x4003edf	        0x498b4608	                mov rax, qword [r14 + 8]	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x4003ee3	          0x4885c0	                           test rax, rax	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x4003ee6	     0xf847bfdffff	                            je 0x4003c67	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x4003eec	          0x498b3e	                    mov rdi, qword [r14]	      2589	channel.c	FUNCTION_61	ELSE_4	IF_14
0x4003eef	        0x488d7001	                      lea rsi, [rax + 1]	      2596	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18	CALL_15
0x4003ef3	      0xe800000000	                          call 0x4003ef8	      2596	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18	CALL_15
0x4003ef8	          0x4885c0	                           test rax, rax	      2597	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18	IF_19
0x4003efb	          0x4889c7	                            mov rdi, rax	      2596	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18	CALL_15
0x4003efe	     0xf8463fdffff	                            je 0x4003c67	      2597	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18	IF_19
0x4003f04	        0x4d8b5e08	                mov r11, qword [r14 + 8]	      2603	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x4003f08	          0x49893e	                    mov qword [r14], rdi	      2602	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x4003f0b	        0x498d4301	                      lea rax, [r11 + 1]	      2603	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x4003f0f	          0x4901fb	                            add r11, rdi	      2603	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x4003f12	        0x49894608	                mov qword [r14 + 8], rax	      2603	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x4003f16	        0x41c60300	                       mov byte [r11], 0	      2604	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x4003f1a	        0x498b4608	                mov rax, qword [r14 + 8]	      2604	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x4003f1e	        0x488d0c07	                    lea rcx, [rdi + rax]	      2604	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x4003f22	    0x660f1f440000	                    nop word [rax + rax]	      2604	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x4003f28	          0x4939fb	                            cmp r11, rdi	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x4003f2b	            0x7631	                           jbe 0x4003f5e	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x4003f2d	          0x4839cf	                            cmp rdi, rcx	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x4003f30	            0x732c	                           jae 0x4003f5e	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x4003f32	          0x4889fa	                            mov rdx, rdi	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x4003f35	            0xeb0e	                           jmp 0x4003f45	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x4003f37	    0x660f1f840000	                    nop word [rax + rax]	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x4003f40	          0x4839d1	                            cmp rcx, rdx	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x4003f43	            0x7619	                           jbe 0x4003f5e	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x4003f45	          0x803a00	                       cmp byte [rdx], 0	      2609	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3	IF_20
0x4003f48	            0x7507	                           jne 0x4003f51	      2609	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3	IF_20
0x4003f4a	          0xc6020a	                     mov byte [rdx], 0xa	      2610	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3	IF_20
0x4003f4d	        0x498b4608	                mov rax, qword [r14 + 8]	      2610	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3	IF_20
0x4003f51	        0x4883c201	                              add rdx, 1	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x4003f55	        0x488d0c07	                    lea rcx, [rdi + rax]	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x4003f59	          0x4939d3	                            cmp r11, rdx	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x4003f5c	            0x75e2	                           jne 0x4003f40	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x4003f5e	        0x498d4301	                      lea rax, [r11 + 1]	      2612	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21
0x4003f62	          0x4839c1	                            cmp rcx, rax	      2612	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21
0x4003f65	     0xf843d030000	                            je 0x40042a8	      2612	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21
0x4003f6b	          0x4d89de	                            mov r14, r11	      2622	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_17
0x4003f6e	          0x4929fe	                            sub r14, rdi	      2622	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_17
0x4003f71	          0x4489f6	                           mov esi, r14d	      2622	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_17
0x4003f74	      0xe800000000	                          call 0x4003f79	      2622	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_17
0x4003f79	        0x418d5601	                      lea edx, [r14 + 1]	      2623	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_18
0x4003f7d	            0x89ee	                            mov esi, ebp	      2623	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_18
0x4003f7f	          0x4c89ff	                            mov rdi, r15	      2623	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_18
0x4003f82	          0x4989c4	                            mov r12, rax	      2622	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_17
0x4003f85	      0xe800000000	                          call 0x4003f8a	      2623	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_18
0x4003f8a	          0x4d85e4	                           test r12, r12	      2634	channel.c	FUNCTION_61	ELSE_4	IF_22
0x4003f8d	     0xf84d4fcffff	                            je 0x4003c67	      2634	channel.c	FUNCTION_61	ELSE_4	IF_22
0x4003f93	    0xc78424100100	              mov dword [rsp + 0x110], 2	      2637	channel.c	FUNCTION_61	ELSE_4
0x4003f9e	    0x4c89a4241801	            mov qword [rsp + 0x118], r12	      2638	channel.c	FUNCTION_61	ELSE_4
0x4003fa6	      0xb8ffffffff	                     mov eax, 0xffffffff	      2469	channel.c	FUNCTION_61
0x4003fab	    0x48837c240800	                  cmp qword [rsp + 8], 0	      2666	channel.c	FUNCTION_61	ELSE_8	IF_27
0x4003fb1	            0x750c	                           jne 0x4003fbf	      2666	channel.c	FUNCTION_61	ELSE_8	IF_27
0x4003fb3	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2666	channel.c	FUNCTION_61	ELSE_8	IF_27
0x4003fb9	     0xf8409030000	                            je 0x40042c8	      2666	channel.c	FUNCTION_61	ELSE_8	IF_27
0x4003fbf	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2668	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28
0x4003fc5	            0x742a	                            je 0x4003ff1	      2668	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28
0x4003fc7	          0x4d85e4	                           test r12, r12	      2670	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_29
0x4003fca	     0xf8410060000	                            je 0x40045e0	      2670	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_29
0x4003fd0	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2676	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	IF_31
0x4003fd5	    0x4883b8481c00	             cmp qword [rax + 0x1c48], 0	      2676	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	IF_31
0x4003fdd	     0xf8426040000	                            je 0x4004409	      2676	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	IF_31
0x4003fe3	          0x4c89fa	                            mov rdx, r15	      2677	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	CALL_24
0x4003fe6	          0x4c89e6	                            mov rsi, r12	      2677	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	CALL_24
0x4003fe9	          0x4889c7	                            mov rdi, rax	      2677	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	CALL_24
0x4003fec	      0xe800000000	                          call 0x4003ff1	      2677	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	CALL_24
0x4003ff1	    0x48837c240800	                  cmp qword [rsp + 8], 0	      2684	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32
0x4003ff7	            0x7421	                            je 0x400401a	      2684	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32
0x4003ff9	          0x4d85ed	                           test r13, r13	      2686	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	IF_33
0x4003ffc	     0xf84a6040000	                            je 0x40044a8	      2686	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	IF_33
0x4004002	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      2687	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	CALL_26
0x4004007	    0x488d8c240001	                  lea rcx, [rsp + 0x100]	      2687	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	CALL_26
0x400400f	          0x4c89ea	                            mov rdx, r13	      2687	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	CALL_26
0x4004012	          0x4c89ff	                            mov rdi, r15	      2687	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	CALL_26
0x4004015	      0xe806d4ffff	       call sym.invoke_one_time_callback	      2687	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	CALL_26
0x400401a	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2700	channel.c	FUNCTION_61	IF_34
0x400401f	          0x4885ff	                           test rdi, rdi	      2700	channel.c	FUNCTION_61	IF_34
0x4004022	            0x7405	                            je 0x4004029	      2700	channel.c	FUNCTION_61	IF_34
0x4004024	      0xe800000000	                          call 0x4004029	      2701	channel.c	FUNCTION_61	CALL_30
0x4004029	          0x4c89e7	                            mov rdi, r12	      2702	channel.c	FUNCTION_61	CALL_31
0x400402c	      0xe800000000	                          call 0x4004031	      2702	channel.c	FUNCTION_61	CALL_31
0x4004031	      0xb801000000	                              mov eax, 1	      2704	channel.c	FUNCTION_61
0x4004036	      0xe92efcffff	                           jmp 0x4003c69	      2704	channel.c	FUNCTION_61
0x400403b	          0x4989fb	                            mov r11, rdi	      1626	channel.c	FUNCTION_45
0x400403e	        0x488d0c07	                    lea rcx, [rdi + rax]	      1626	channel.c	FUNCTION_45
0x4004042	      0xe917ffffff	                           jmp 0x4003f5e	      1626	channel.c	FUNCTION_45
0x4004047	      0x4c8d442430	                    lea r8, [rsp + 0x30]	      2519	channel.c	FUNCTION_61	IF_6	IF_7	CALL_3
0x400404c	            0x31c9	                            xor ecx, ecx	      2519	channel.c	FUNCTION_61	IF_6	IF_7	CALL_3
0x400404e	      0xbaffffffff	                     mov edx, 0xffffffff	      2519	channel.c	FUNCTION_61	IF_6	IF_7	CALL_3
0x4004053	            0x89ee	                            mov esi, ebp	      2519	channel.c	FUNCTION_61	IF_6	IF_7	CALL_3
0x4004055	          0x4c89ff	                            mov rdi, r15	      2519	channel.c	FUNCTION_61	IF_6	IF_7	CALL_3
0x4004058	      0xe8b3d2ffff	               call sym.channel_get_json	      2519	channel.c	FUNCTION_61	IF_6	IF_7	CALL_3
0x400405d	            0x85c0	                           test eax, eax	      2519	channel.c	FUNCTION_61	IF_6	IF_7	CALL_3
0x400405f	     0xf8416020000	                            je 0x400427b	      2519	channel.c	FUNCTION_61	IF_6	IF_7	CALL_3
0x4004065	      0x4c8b642430	            mov r12, qword [rsp + 0x30] 	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x400406a	    0x488d8c240001	                  lea rcx, [rsp + 0x100]	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x4004072	      0x498b442408	                mov rax, qword [r12 + 8]	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x4004077	          0x488b10	                    mov rdx, qword [rax]	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x400407a	            0x31c0	                            xor eax, eax	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x400407c	          0x4885d2	                           test rdx, rdx	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x400407f	            0x742f	                            je 0x40040b0	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x4004081	        0x488b7210	            mov rsi, qword [rdx + 0x10] 	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4004085	        0x488b7a18	            mov rdi, qword [rdx + 0x18] 	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4004089	          0x83c001	                              add eax, 1	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x400408c	        0x4883c110	                           add rcx, 0x10	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4004090	        0x488971f0	             mov qword [rcx - 0x10], rsi	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4004094	        0x488979f8	                mov qword [rcx - 8], rdi	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4004098	          0x488b12	                    mov rdx, qword [rdx]	      2529	channel.c	FUNCTION_61	IF_6	FOR_2
0x400409b	          0x4885d2	                           test rdx, rdx	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x400409e	            0x7425	                            je 0x40040c5	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x40040a0	          0x83f803	                              cmp eax, 3	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x40040a3	            0x7edc	                           jle 0x4004081	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x40040a5	            0xeb1e	                           jmp 0x40040c5	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x40040a7	    0x660f1f840000	                    nop word [rax + rax]	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x40040b0	          0x4863d0	                         movsxd rdx, eax	      2532	channel.c	FUNCTION_61	IF_6	WHILE_1
0x40040b3	          0x83c001	                              add eax, 1	      2532	channel.c	FUNCTION_61	IF_6	WHILE_1
0x40040b6	        0x48c1e204	                              shl rdx, 4	      2532	channel.c	FUNCTION_61	IF_6	WHILE_1
0x40040ba	    0xc78414000100	        mov dword [rsp + rdx + 0x100], 0	      2532	channel.c	FUNCTION_61	IF_6	WHILE_1
0x40040c5	          0x83f804	                              cmp eax, 4	      2531	channel.c	FUNCTION_61	IF_6	WHILE_1
0x40040c8	            0x75e6	                           jne 0x40040b0	      2531	channel.c	FUNCTION_61	IF_6	WHILE_1
0x40040ca	    0x8b8424000100	           mov eax, dword [rsp + 0x100] 	      2534	channel.c	FUNCTION_61	IF_6	IF_9
0x40040d1	          0x83f802	                              cmp eax, 2	      2534	channel.c	FUNCTION_61	IF_6	IF_9
0x40040d4	     0xf8439020000	                            je 0x4004313	      2534	channel.c	FUNCTION_61	IF_6	IF_9
0x40040da	          0x83f801	                              cmp eax, 1	      2542	channel.c	FUNCTION_61	IF_6	IF_10
0x40040dd	     0xf857a010000	                           jne 0x400425d	      2542	channel.c	FUNCTION_61	IF_6	IF_10
0x40040e3	    0x488bbc240801	           mov rdi, qword [rsp + 0x108] 	      2549	channel.c	FUNCTION_61	IF_6
0x40040eb	            0x85ff	                           test edi, edi	      2641	channel.c	FUNCTION_61	IF_23
0x40040ed	            0x89f8	                            mov eax, edi	      2549	channel.c	FUNCTION_61	IF_6
0x40040ef	     0xf8eb3070000	                           jle 0x40048a8	      2641	channel.c	FUNCTION_61	IF_23
0x40040f5	          0x4889de	                            mov rsi, rbx	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x40040f8	          0x4889d9	                            mov rcx, rbx	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x40040fb	        0x48c1e604	                              shl rsi, 4	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x40040ff	        0x48c1e108	                              shl rcx, 8	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x4004103	          0x4801f1	                            add rcx, rsi	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x4004106	    0x498b940fd800	      mov rdx, qword [r15 + rcx + 0xd8] 	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x400410e	          0x4885d2	                           test rdx, rdx	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x4004111	            0x741f	                            je 0x4004132	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x4004113	          0x3b7a10	            cmp edi, dword [rdx + 0x10] 	      2647	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24
0x4004116	            0x7511	                           jne 0x4004129	      2647	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24
0x4004118	      0xe9f8000000	                           jmp 0x4004215	      2647	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24
0x400411d	           0xf1f00	                         nop dword [rax]	      2647	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24
0x4004120	          0x3b4210	            cmp eax, dword [rdx + 0x10] 	      2647	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24
0x4004123	     0xf84ec000000	                            je 0x4004215	      2647	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24
0x4004129	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x400412d	          0x4885d2	                           test rdx, rdx	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x4004130	            0x75ee	                           jne 0x4004120	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x4004132	    0x418b87a00400	           mov eax, dword [r15 + 0x4a0] 	      2655	channel.c	FUNCTION_61	IF_23	IF_25	IF_26
0x4004139	            0x85c0	                           test eax, eax	      2655	channel.c	FUNCTION_61	IF_23	IF_25	IF_26
0x400413b	     0xf8403010000	                            je 0x4004244	      2655	channel.c	FUNCTION_61	IF_23	IF_25	IF_26
0x4004141	          0x4889da	                            mov rdx, rbx	      2139	channel.c	FUNCTION_56	IF_1
0x4004144	          0x4889d8	                            mov rax, rbx	      2139	channel.c	FUNCTION_56	IF_1
0x4004147	        0x48c1e204	                              shl rdx, 4	      2139	channel.c	FUNCTION_56	IF_1
0x400414b	        0x48c1e008	                              shl rax, 8	      2139	channel.c	FUNCTION_56	IF_1
0x400414f	          0x4801d0	                            add rax, rdx	      2139	channel.c	FUNCTION_56	IF_1
0x4004152	      0x498b440760	      mov rax, qword [r15 + rax + 0x60] 	      2139	channel.c	FUNCTION_56	IF_1
0x4004157	          0x4885c0	                           test rax, rax	      2139	channel.c	FUNCTION_56	IF_1
0x400415a	            0x740b	                            je 0x4004167	      2139	channel.c	FUNCTION_56	IF_1
0x400415c	        0x448b4818	            mov r9d, dword [rax + 0x18] 	      2139	channel.c	FUNCTION_56	IF_1
0x4004160	            0x31ed	                            xor ebp, ebp	      2141	channel.c	FUNCTION_56	IF_1
0x4004162	          0x4585c9	                           test r9d, r9d	      2139	channel.c	FUNCTION_56	IF_1
0x4004165	            0x7533	                           jne 0x400419a	      2139	channel.c	FUNCTION_56	IF_1
0x4004167	          0x4889da	                            mov rdx, rbx	      2136	channel.c	FUNCTION_56
0x400416a	          0x4889d8	                            mov rax, rbx	      2136	channel.c	FUNCTION_56
0x400416d	        0x48c1e204	                              shl rdx, 4	      2136	channel.c	FUNCTION_56
0x4004171	        0x48c1e008	                              shl rax, 8	      2136	channel.c	FUNCTION_56
0x4004175	          0x4801d0	                            add rax, rdx	      2136	channel.c	FUNCTION_56
0x4004178	      0x498b6c0758	      mov rbp, qword [r15 + rax + 0x58] 	      2136	channel.c	FUNCTION_56
0x400417d	          0x4885ed	                           test rbp, rbp	      2142	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x4004180	            0x750f	                           jne 0x4004191	      2142	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x4004182	            0xeb16	                           jmp 0x400419a	      2142	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x4004184	         0xf1f4000	                         nop dword [rax]	      2142	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x4004188	        0x488b6d08	                mov rbp, qword [rbp + 8]	      2144	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x400418c	          0x4885ed	                           test rbp, rbp	      2142	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x400418f	            0x7409	                            je 0x400419a	      2142	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x4004191	        0x448b4518	            mov r8d, dword [rbp + 0x18] 	      2142	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x4004195	          0x4585c0	                           test r8d, r8d	      2142	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x4004198	            0x75ee	                           jne 0x4004188	      2142	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x400419a	      0xbf20000000	                           mov edi, 0x20	      2146	channel.c	FUNCTION_56	CALL_1
0x400419f	      0xe800000000	                          call 0x40041a4	      2146	channel.c	FUNCTION_56	CALL_1
0x40041a4	          0x4885c0	                           test rax, rax	      2147	channel.c	FUNCTION_56	IF_2
0x40041a7	          0x4989c5	                            mov r13, rax	      2146	channel.c	FUNCTION_56	CALL_1
0x40041aa	     0xf8456010000	                            je 0x4004306	      2147	channel.c	FUNCTION_56	IF_2
0x40041b0	      0xe800000000	                          call 0x40041b5	      2151	channel.c	FUNCTION_56	ELSE_2	CALL_3
0x40041b5	          0x4885c0	                           test rax, rax	      2152	channel.c	FUNCTION_56	ELSE_2	IF_3
0x40041b8	        0x49894500	                    mov qword [r13], rax	      2151	channel.c	FUNCTION_56	ELSE_2	CALL_3
0x40041bc	     0xf843c010000	                            je 0x40042fe	      2152	channel.c	FUNCTION_56	ELSE_2	IF_3
0x40041c2	    0x41c745180000	               mov dword [r13 + 0x18], 0	      2159	channel.c	FUNCTION_56	ELSE_2	ELSE_3
0x40041ca	        0x498b3424	                    mov rsi, qword [r12]	      2160	channel.c	FUNCTION_56	ELSE_2	ELSE_3
0x40041ce	          0x4885ed	                           test rbp, rbp	      2161	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x40041d1	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      2160	channel.c	FUNCTION_56	ELSE_2	ELSE_3
0x40041d6	          0x488930	                    mov qword [rax], rsi	      2160	channel.c	FUNCTION_56	ELSE_2	ELSE_3
0x40041d9	        0x48897808	                mov qword [rax + 8], rdi	      2160	channel.c	FUNCTION_56	ELSE_2	ELSE_3
0x40041dd	     0xf84f9020000	                            je 0x40044dc	      2161	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x40041e3	        0x488b4508	                mov rax, qword [rbp + 8]	      2176	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5
0x40041e7	        0x49896d10	             mov qword [r13 + 0x10], rbp	      2175	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5
0x40041eb	        0x49894508	                mov qword [r13 + 8], rax	      2176	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5
0x40041ef	        0x4c896d08	                mov qword [rbp + 8], r13	      2177	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5
0x40041f3	        0x498b4508	                mov rax, qword [r13 + 8]	      2178	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x40041f7	          0x4885c0	                           test rax, rax	      2178	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x40041fa	     0xf842c060000	                            je 0x400482c	      2178	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x4004200	        0x4c896810	             mov qword [rax + 0x10], r13	      2181	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	ELSE_6
0x4004204	    0x48c744243000	               mov qword [rsp + 0x30], 0	      2659	channel.c	FUNCTION_61	IF_23	IF_25	IF_26
0x400420d	          0x4531e4	                          xor r12d, r12d	      2466	channel.c	FUNCTION_61
0x4004210	      0xe914feffff	                           jmp 0x4004029	      2466	channel.c	FUNCTION_61
0x4004215	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      2649	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24	CALL_20
0x400421a	    0x488d8c240001	                  lea rcx, [rsp + 0x100]	      2649	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24	CALL_20
0x4004222	          0x4c89ff	                            mov rdi, r15	      2649	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24	CALL_20
0x4004225	          0x4531e4	                          xor r12d, r12d	      2466	channel.c	FUNCTION_61
0x4004228	      0xe8f3d1ffff	       call sym.invoke_one_time_callback	      2649	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24	CALL_20
0x400422d	      0xe9e8fdffff	                           jmp 0x400401a	      2649	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24	CALL_20
0x4004232	            0x89ee	                            mov esi, ebp	      2631	channel.c	FUNCTION_61	ELSE_4	ELSE_6	CALL_19
0x4004234	          0x4c89ff	                            mov rdi, r15	      2631	channel.c	FUNCTION_61	ELSE_4	ELSE_6	CALL_19
0x4004237	      0xe8a4e0ffff	                call sym.channel_get_all	      2631	channel.c	FUNCTION_61	ELSE_4	ELSE_6	CALL_19
0x400423c	          0x4989c4	                            mov r12, rax	      2631	channel.c	FUNCTION_61	ELSE_4	ELSE_6	CALL_19
0x400423f	      0xe946fdffff	                           jmp 0x4003f8a	      2631	channel.c	FUNCTION_61	ELSE_4	ELSE_6	CALL_19
0x4004244	            0x89fa	                            mov edx, edi	      2662	channel.c	FUNCTION_61	IF_23	IF_25	ELSE_7	CALL_22
0x4004246	      0xbe00000000	                              mov esi, 0	      2662	channel.c	FUNCTION_61	IF_23	IF_25	ELSE_7	CALL_22
0x400424b	          0x4c89ff	                            mov rdi, r15	      2662	channel.c	FUNCTION_61	IF_23	IF_25	ELSE_7	CALL_22
0x400424e	            0x31c0	                            xor eax, eax	      2662	channel.c	FUNCTION_61	IF_23	IF_25	ELSE_7	CALL_22
0x4004250	          0x4531e4	                          xor r12d, r12d	      2466	channel.c	FUNCTION_61
0x4004253	      0xe800000000	                          call 0x4004258	      2662	channel.c	FUNCTION_61	IF_23	IF_25	ELSE_7	CALL_22
0x4004258	      0xe9bdfdffff	                           jmp 0x400401a	      2662	channel.c	FUNCTION_61	IF_23	IF_25	ELSE_7	CALL_22
0x400425d	          0x4c89ff	                            mov rdi, r15	      2544	channel.c	FUNCTION_61	IF_6	IF_10	CALL_8
0x4004260	      0xbe00000000	                              mov esi, 0	      2544	channel.c	FUNCTION_61	IF_6	IF_10	CALL_8
0x4004265	            0x31c0	                            xor eax, eax	      2544	channel.c	FUNCTION_61	IF_6	IF_10	CALL_8
0x4004267	      0xe8a4beffff	                       call sym.ch_error	      2544	channel.c	FUNCTION_61	IF_6	IF_10	CALL_8
0x400426c	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2546	channel.c	FUNCTION_61	IF_6	IF_10	CALL_9
0x4004271	      0xe800000000	                          call 0x4004276	      2546	channel.c	FUNCTION_61	IF_6	IF_10	CALL_9
0x4004276	      0xe9ecf9ffff	                           jmp 0x4003c67	      2546	channel.c	FUNCTION_61	IF_6	IF_10	CALL_9
0x400427b	            0x89ee	                            mov esi, ebp	      2522	channel.c	FUNCTION_61	IF_6	IF_7	CALL_4
0x400427d	          0x4c89ff	                            mov rdi, r15	      2522	channel.c	FUNCTION_61	IF_6	IF_7	CALL_4
0x4004280	      0xe80bdcffff	             call sym.channel_parse_json	      2522	channel.c	FUNCTION_61	IF_6	IF_7	CALL_4
0x4004285	      0x4c8d442430	                    lea r8, [rsp + 0x30]	      2523	channel.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_5
0x400428a	            0x31c9	                            xor ecx, ecx	      2523	channel.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_5
0x400428c	      0xbaffffffff	                     mov edx, 0xffffffff	      2523	channel.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_5
0x4004291	            0x89ee	                            mov esi, ebp	      2523	channel.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_5
0x4004293	          0x4c89ff	                            mov rdi, r15	      2523	channel.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_5
0x4004296	      0xe875d0ffff	               call sym.channel_get_json	      2523	channel.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_5
0x400429b	            0x85c0	                           test eax, eax	      2523	channel.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_5
0x400429d	     0xf85c2fdffff	                           jne 0x4004065	      2523	channel.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_5
0x40042a3	      0xe9bff9ffff	                           jmp 0x4003c67	      2523	channel.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_5
0x40042a8	            0x89ee	                            mov esi, ebp	      2615	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21	CALL_16
0x40042aa	          0x4c89ff	                            mov rdi, r15	      2615	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21	CALL_16
0x40042ad	      0x4c895c2428	             mov qword [rsp + 0x28], r11	      2615	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21	CALL_16
0x40042b2	      0xe800000000	                          call 0x40042b7	      2615	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21	CALL_16
0x40042b7	      0x4c8b5c2428	            mov r11, qword [rsp + 0x28] 	      2616	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21
0x40042bc	          0x4989c4	                            mov r12, rax	      2615	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21	CALL_16
0x40042bf	        0x41c60300	                       mov byte [r11], 0	      2616	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21
0x40042c3	      0xe9c2fcffff	                           jmp 0x4003f8a	      2616	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21
0x40042c8	            0x89c2	                            mov edx, eax	      2698	channel.c	FUNCTION_61	CALL_29
0x40042ca	      0xbe00000000	                              mov esi, 0	      2698	channel.c	FUNCTION_61	CALL_29
0x40042cf	          0x4c89ff	                            mov rdi, r15	      2698	channel.c	FUNCTION_61	CALL_29
0x40042d2	            0x31c0	                            xor eax, eax	      2698	channel.c	FUNCTION_61	CALL_29
0x40042d4	      0xe800000000	                          call 0x40042d9	      2698	channel.c	FUNCTION_61	CALL_29
0x40042d9	      0xe93cfdffff	                           jmp 0x400401a	      2698	channel.c	FUNCTION_61	CALL_29
0x40042de	    0x498b87800400	           mov rax, qword [r15 + 0x480] 	      2499	channel.c	FUNCTION_61	ELSE_2
0x40042e5	          0x4531ed	                          xor r13d, r13d	      2500	channel.c	FUNCTION_61	ELSE_2
0x40042e8	      0x4889442408	                mov qword [rsp + 8], rax	      2499	channel.c	FUNCTION_61	ELSE_2
0x40042ed	    0x498b87880400	           mov rax, qword [r15 + 0x488] 	      2500	channel.c	FUNCTION_61	ELSE_2
0x40042f4	      0x4889442420	             mov qword [rsp + 0x20], rax	      2500	channel.c	FUNCTION_61	ELSE_2
0x40042f9	      0xe9f2f9ffff	                           jmp 0x4003cf0	      2500	channel.c	FUNCTION_61	ELSE_2
0x40042fe	          0x4c89ef	                            mov rdi, r13	      2154	channel.c	FUNCTION_56	ELSE_2	IF_3	CALL_4
0x4004301	      0xe800000000	                          call 0x4004306	      2154	channel.c	FUNCTION_56	ELSE_2	IF_3	CALL_4
0x4004306	          0x4c89e7	                            mov rdi, r12	      2155	channel.c	FUNCTION_56	ELSE_2	IF_3	CALL_5
0x4004309	      0xe800000000	                          call 0x400430e	      2155	channel.c	FUNCTION_56	ELSE_2	IF_3	CALL_5
0x400430e	      0xe9f1feffff	                           jmp 0x4004204	      2155	channel.c	FUNCTION_56	ELSE_2	IF_3	CALL_5
0x4004313	    0x83bc24100100	              cmp dword [rsp + 0x110], 2	      2201	channel.c	ELSE_6	FUNCTION_57	IF_1
0x400431b	     0xf85ba000000	                           jne 0x40043db	      2201	channel.c	ELSE_6	FUNCTION_57	IF_1
0x4004321	    0x4c8bb4240801	           mov r14, qword [rsp + 0x108] 	      2197	channel.c	ELSE_6	FUNCTION_57
0x4004329	    0x4c8bac241801	           mov r13, qword [rsp + 0x118] 	      2208	channel.c	ELSE_6	FUNCTION_57
0x4004331	      0xb800000000	                              mov eax, 0	      2210	channel.c	ELSE_6	FUNCTION_57	IF_3
0x4004336	        0x450fb606	                   movzx r8d, byte [r14]	      2212	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_4
0x400433a	          0x4d85ed	                           test r13, r13	      2210	channel.c	ELSE_6	FUNCTION_57	IF_3
0x400433d	        0x4c0f44e8	                          cmove r13, rax	      2210	channel.c	ELSE_6	FUNCTION_57	IF_3
0x4004341	        0x4180f865	                           cmp r8b, 0x65	      2212	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_4
0x4004345	     0xf85cf010000	                           jne 0x400451a	      2212	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_4
0x400434b	      0x41807e0178	                cmp byte [r14 + 1], 0x78	      2212	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_4
0x4004350	     0xf85c4010000	                           jne 0x400451a	      2212	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_4
0x4004356	      0x41807e0200	                   cmp byte [r14 + 2], 0	      2212	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_4
0x400435b	     0xf85b9010000	                           jne 0x400451a	      2212	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_4
0x4004361	            0x31c0	                            xor eax, eax	      2217	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_5
0x4004363	          0x4c89ea	                            mov rdx, r13	      2217	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_5
0x4004366	      0xbe00000000	                              mov esi, 0	      2217	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_5
0x400436b	          0x4c89ff	                            mov rdi, r15	      2217	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_5
0x400436e	    0x8b1d00000000	            mov ebx, dword [0x04004374] 	      2214	channel.c	ELSE_6	FUNCTION_57	IF_4
0x4004374	    0xc70500000000	               mov dword [0x0400437e], 0	      2216	channel.c	ELSE_6	FUNCTION_57	IF_4
0x400437e	      0xe800000000	                          call 0x4004383	      2217	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_5
0x4004383	          0x4c89ef	                            mov rdi, r13	      2219	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_6
0x4004386	    0x830500000000	               add dword [0x0400438d], 1	      2218	channel.c	ELSE_6	FUNCTION_57	IF_4
0x400438d	      0xe800000000	                          call 0x4004392	      2219	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_6
0x4004392	    0x832d00000000	               sub dword [0x04004399], 1	      2220	channel.c	ELSE_6	FUNCTION_57	IF_4
0x4004399	    0x833d00000000	               cmp dword [0x040043a0], 0	      2221	channel.c	ELSE_6	FUNCTION_57	IF_4	IF_5
0x40043a0	            0x741c	                            je 0x40043be	      2221	channel.c	ELSE_6	FUNCTION_57	IF_4	IF_5
0x40043a2	      0xbf03000000	                              mov edi, 3	      2223	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_8
0x40043a7	      0xe800000000	                          call 0x40043ac	      2223	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_8
0x40043ac	      0xbe00000000	                              mov esi, 0	      2222	channel.c	ELSE_6	FUNCTION_57	IF_4	IF_5	CALL_7
0x40043b1	          0x4889c2	                            mov rdx, rax	      2222	channel.c	ELSE_6	FUNCTION_57	IF_4	IF_5	CALL_7
0x40043b4	          0x4c89ff	                            mov rdi, r15	      2222	channel.c	ELSE_6	FUNCTION_57	IF_4	IF_5	CALL_7
0x40043b7	            0x31c0	                            xor eax, eax	      2222	channel.c	ELSE_6	FUNCTION_57	IF_4	IF_5	CALL_7
0x40043b9	      0xe800000000	                          call 0x40043be	      2222	channel.c	ELSE_6	FUNCTION_57	IF_4	IF_5	CALL_7
0x40043be	      0x4c8b642430	            mov r12, qword [rsp + 0x30] 	      2222	channel.c	ELSE_6	FUNCTION_57	IF_4	IF_5	CALL_7
0x40043c3	    0x891d00000000	            mov dword [0x040043c9], ebx 	      2224	channel.c	ELSE_6	FUNCTION_57	IF_4
0x40043c9	          0x4c89e7	                            mov rdi, r12	      2538	channel.c	FUNCTION_61	IF_6	IF_9	CALL_7
0x40043cc	      0xe800000000	                          call 0x40043d1	      2538	channel.c	FUNCTION_61	IF_6	IF_9	CALL_7
0x40043d1	      0xb801000000	                              mov eax, 1	      2539	channel.c	FUNCTION_61	IF_6	IF_9
0x40043d6	      0xe98ef8ffff	                           jmp 0x4003c69	      2539	channel.c	FUNCTION_61	IF_6	IF_9
0x40043db	      0xbe00000000	                              mov esi, 0	      2203	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_1
0x40043e0	            0x31c0	                            xor eax, eax	      2203	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_1
0x40043e2	          0x4c89ff	                            mov rdi, r15	      2203	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_1
0x40043e5	      0xe826bdffff	                       call sym.ch_error	      2203	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_1
0x40043ea	    0x48833d000000	               cmp qword [0x040043f2], 2	      2204	channel.c	ELSE_6	FUNCTION_57	IF_1	IF_2
0x40043f2	      0xba05000000	                              mov edx, 5	      2205	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_3
0x40043f7	      0xbe00000000	                              mov esi, 0	      2205	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_3
0x40043fc	     0xf8fc5010000	                            jg 0x40045c7	      2204	channel.c	ELSE_6	FUNCTION_57	IF_1	IF_2
0x4004402	      0x4c8b642430	            mov r12, qword [rsp + 0x30] 	      2204	channel.c	ELSE_6	FUNCTION_57	IF_1	IF_2
0x4004407	            0xebc0	                           jmp 0x40043c9	      2204	channel.c	ELSE_6	FUNCTION_57	IF_1	IF_2
0x4004409	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2353	channel.c	FUNCTION_59
0x400440e	    0x48c744245000	               mov qword [rsp + 0x50], 0	      2347	channel.c	FUNCTION_59
0x4004417	    0xc74424580000	               mov dword [rsp + 0x58], 0	      2347	channel.c	FUNCTION_59
0x400441f	    0xc744245c0000	               mov dword [rsp + 0x5c], 0	      2347	channel.c	FUNCTION_59
0x4004427	    0x48c744243800	               mov qword [rsp + 0x38], 0	      2348	channel.c	FUNCTION_59
0x4004430	    0x48c744244000	               mov qword [rsp + 0x40], 0	      2349	channel.c	FUNCTION_59
0x4004439	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      2353	channel.c	FUNCTION_59
0x400443f	            0x85c0	                           test eax, eax	      2356	channel.c	FUNCTION_59	IF_1
0x4004441	        0x89442428	             mov dword [rsp + 0x28], eax	      2353	channel.c	FUNCTION_59
0x4004445	     0xf85ba010000	                           jne 0x4004605	      2356	channel.c	FUNCTION_59	IF_1
0x400444b	          0x4889da	                            mov rdx, rbx	      2356	channel.c	FUNCTION_59	IF_1
0x400444e	          0x4889d8	                            mov rax, rbx	      2356	channel.c	FUNCTION_59	IF_1
0x4004451	        0x48c1e204	                              shl rdx, 4	      2356	channel.c	FUNCTION_59	IF_1
0x4004455	        0x48c1e008	                              shl rax, 8	      2356	channel.c	FUNCTION_59	IF_1
0x4004459	          0x4801d0	                            add rax, rdx	      2356	channel.c	FUNCTION_59	IF_1
0x400445c	    0x418bbc070801	     mov edi, dword [r15 + rax + 0x108] 	      2356	channel.c	FUNCTION_59	IF_1
0x4004464	            0x85ff	                           test edi, edi	      2356	channel.c	FUNCTION_59	IF_1
0x4004466	     0xf8599010000	                           jne 0x4004605	      2356	channel.c	FUNCTION_59	IF_1
0x400446c	    0x4869db100100	                    imul rbx, rbx, 0x110	      2358	channel.c	FUNCTION_59	IF_1	IF_2
0x4004473	          0x4c01fb	                            add rbx, r15	      2358	channel.c	FUNCTION_59	IF_1	IF_2
0x4004476	    0x83bb0c010000	              cmp dword [rbx + 0x10c], 0	      2358	channel.c	FUNCTION_59	IF_1	IF_2
0x400447d	     0xf856efbffff	                           jne 0x4003ff1	      2358	channel.c	FUNCTION_59	IF_1	IF_2
0x4004483	      0xbe00000000	                              mov esi, 0	      2360	channel.c	FUNCTION_59	IF_1	IF_2	CALL_1
0x4004488	          0x4c89ff	                            mov rdi, r15	      2360	channel.c	FUNCTION_59	IF_1	IF_2	CALL_1
0x400448b	            0x31c0	                            xor eax, eax	      2360	channel.c	FUNCTION_59	IF_1	IF_2	CALL_1
0x400448d	      0xe87ebcffff	                       call sym.ch_error	      2360	channel.c	FUNCTION_59	IF_1	IF_2	CALL_1
0x4004492	    0xc7830c010000	              mov dword [rbx + 0x10c], 1	      2361	channel.c	FUNCTION_59	IF_1	IF_2
0x400449c	      0xe950fbffff	                           jmp 0x4003ff1	      2361	channel.c	FUNCTION_59	IF_1	IF_2
0x40044a1	     0xf1f80000000	                         nop dword [rax]	      2361	channel.c	FUNCTION_59	IF_1	IF_2
0x40044a8	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      2691	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_27
0x40044ad	          0x4c89ff	                            mov rdi, r15	      2691	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_27
0x40044b0	      0xbe00000000	                              mov esi, 0	      2691	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_27
0x40044b5	            0x31c0	                            xor eax, eax	      2691	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_27
0x40044b7	          0x4889da	                            mov rdx, rbx	      2691	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_27
0x40044ba	      0xe800000000	                          call 0x40044bf	      2691	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_27
0x40044bf	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      2693	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_28
0x40044c4	    0x488d8c240001	                  lea rcx, [rsp + 0x100]	      2693	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_28
0x40044cc	          0x4889de	                            mov rsi, rbx	      2693	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_28
0x40044cf	          0x4c89ff	                            mov rdi, r15	      2693	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_28
0x40044d2	      0xe899c5ffff	                call sym.invoke_callback	      2693	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_28
0x40044d7	      0xe93efbffff	                           jmp 0x400401a	      2693	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_28
0x40044dc	          0x4889da	                            mov rdx, rbx	      2164	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x40044df	          0x4889d8	                            mov rax, rbx	      2164	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x40044e2	        0x48c1e204	                              shl rdx, 4	      2164	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x40044e6	        0x48c1e008	                              shl rax, 8	      2164	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x40044ea	          0x4801d0	                            add rax, rdx	      2164	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x40044ed	          0x4c01f8	                            add rax, r15	      2164	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x40044f0	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      2164	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x40044f4	        0x49895510	             mov qword [r13 + 0x10], rdx	      2164	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x40044f8	        0x4c896860	             mov qword [rax + 0x60], r13	      2165	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x40044fc	        0x498b4510	            mov rax, qword [r13 + 0x10] 	      2167	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	IF_5
0x4004500	    0x49c745080000	                  mov qword [r13 + 8], 0	      2166	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x4004508	          0x4885c0	                           test rax, rax	      2167	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	IF_5
0x400450b	     0xf8433030000	                            je 0x4004844	      2167	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	IF_5
0x4004511	        0x4c896808	                mov qword [rax + 8], r13	      2170	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	ELSE_4
0x4004515	      0xe9eafcffff	                           jmp 0x4004204	      2170	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	ELSE_4
0x400451a	      0xbf00000000	                              mov edi, 0	      2226	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_9
0x400451f	      0xb907000000	                              mov ecx, 7	      2226	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_9
0x4004524	          0x4c89f6	                            mov rsi, r14	      2226	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_9
0x4004527	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2226	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_9
0x4004529	     0xf844a050000	                            je 0x4004a79	      2226	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_9
0x400452f	      0xbf00000000	                              mov edi, 0	      2236	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_12
0x4004534	      0xb907000000	                              mov ecx, 7	      2236	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_12
0x4004539	          0x4c89f6	                            mov rsi, r14	      2236	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_12
0x400453c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2236	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_12
0x400453e	     0xf8476050000	                            je 0x4004aba	      2236	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_12
0x4004544	      0xbf00000000	                              mov edi, 0	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x4004549	      0xb905000000	                              mov ecx, 5	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x400454e	          0x4c89f6	                            mov rsi, r14	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x4004551	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x4004553	            0x741e	                            je 0x4004573	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x4004555	      0xbe00000000	                              mov esi, 0	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x400455a	          0x4c89f7	                            mov rdi, r14	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x400455d	        0x44880424	                     mov byte [rsp], r8b	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x4004561	      0xe800000000	                          call 0x4004566	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x4004566	            0x85c0	                           test eax, eax	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x4004568	      0x440fb60424	                   movzx r8d, byte [rsp]	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x400456d	     0xf85a2050000	                           jne 0x4004b15	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x4004573	    0x4869db100100	                    imul rbx, rbx, 0x110	      2199	channel.c	ELSE_6	FUNCTION_57
0x400457a	            0x31c0	                            xor eax, eax	      2199	channel.c	ELSE_6	FUNCTION_57
0x400457c	    0x41837c1f2003	        cmp dword [r15 + rbx + 0x20], 3 	      2199	channel.c	ELSE_6	FUNCTION_57
0x4004582	           0xf94c0	                                 sete al	      2199	channel.c	ELSE_6	FUNCTION_57
0x4004585	        0x4180f863	                           cmp r8b, 0x63	      2250	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8
0x4004589	          0x890424	                    mov dword [rsp], eax	      2199	channel.c	ELSE_6	FUNCTION_57
0x400458c	     0xf849f040000	                            je 0x4004a31	      2250	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8
0x4004592	    0x83bc24200100	              cmp dword [rsp + 0x120], 1	      2252	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9
0x400459a	     0xf86b5020000	                           jbe 0x4004855	      2252	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9
0x40045a0	            0x31c0	                            xor eax, eax	      2255	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_20
0x40045a2	      0xbe00000000	                              mov esi, 0	      2255	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_20
0x40045a7	          0x4c89ff	                            mov rdi, r15	      2255	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_20
0x40045aa	      0xe861bbffff	                       call sym.ch_error	      2255	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_20
0x40045af	    0x48833d000000	               cmp qword [0x040045b7], 2	      2256	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	IF_10
0x40045b7	     0xf8e45feffff	                           jle 0x4004402	      2256	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	IF_10
0x40045bd	      0xba05000000	                              mov edx, 5	      2257	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_22
0x40045c2	      0xbe00000000	                              mov esi, 0	      2257	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_22
0x40045c7	            0x31ff	                            xor edi, edi	      2263	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_25
0x40045c9	      0xe800000000	                          call 0x40045ce	      2263	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_25
0x40045ce	          0x4889c7	                            mov rdi, rax	      2263	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_25
0x40045d1	      0xe800000000	                          call 0x40045d6	      2263	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_25
0x40045d6	      0x4c8b642430	            mov r12, qword [rsp + 0x30] 	      2263	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_25
0x40045db	      0xe9e9fdffff	                           jmp 0x40043c9	      2263	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_25
0x40045e0	          0x8b3424	                    mov esi, dword [rsp]	      2672	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	CALL_23
0x40045e3	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2672	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	CALL_23
0x40045e8	      0xe800000000	                          call 0x40045ed	      2672	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	CALL_23
0x40045ed	          0x4885c0	                           test rax, rax	      2673	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30
0x40045f0	          0x4989c4	                            mov r12, rax	      2672	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	CALL_23
0x40045f3	     0xf84f8f9ffff	                            je 0x4003ff1	      2673	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30
0x40045f9	      0xe9d2f9ffff	                           jmp 0x4003fd0	      2673	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30
0x40045fe	            0x6690	                                     nop	      2673	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30
0x4004600	      0xe800000000	                          call 0x4004605	      2705	channel.c	FUNCTION_61
0x4004605	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      2350	channel.c	FUNCTION_59
0x400460a	    0x8bae341c0000	          mov ebp, dword [rsi + 0x1c34] 	      2351	channel.c	FUNCTION_59
0x4004610	          0x4c8b36	                    mov r14, qword [rsi]	      2350	channel.c	FUNCTION_59
0x4004613	          0x8b4610	            mov eax, dword [rsi + 0x10] 	      2354	channel.c	FUNCTION_59
0x4004616	            0x85ed	                           test ebp, ebp	      2368	channel.c	FUNCTION_59	IF_3
0x4004618	            0x740e	                            je 0x4004628	      2368	channel.c	FUNCTION_59	IF_3
0x400461a	        0x4983ee01	                              sub r14, 1	      2370	channel.c	FUNCTION_59	IF_3
0x400461e	    0xc786341c0000	            mov dword [rsi + 0x1c34], 0 	      2371	channel.c	FUNCTION_59	IF_3
0x4004628	        0x418d5601	                      lea edx, [r14 + 1]	      2375	channel.c	FUNCTION_59	CALL_2
0x400462c	          0x83e001	                              and eax, 1	      2354	channel.c	FUNCTION_59
0x400462f	      0xbe00000000	                              mov esi, 0	      2375	channel.c	FUNCTION_59	CALL_2
0x4004634	          0x890424	                    mov dword [rsp], eax	      2375	channel.c	FUNCTION_59	CALL_2
0x4004637	          0x4c89ff	                            mov rdi, r15	      2375	channel.c	FUNCTION_59	CALL_2
0x400463a	            0x29c2	                            sub edx, eax	      2375	channel.c	FUNCTION_59	CALL_2
0x400463c	            0x31c0	                            xor eax, eax	      2375	channel.c	FUNCTION_59	CALL_2
0x400463e	      0xe800000000	                          call 0x4004643	      2375	channel.c	FUNCTION_59	CALL_2
0x4004643	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2377	channel.c	FUNCTION_59
0x4004648	      0x488d4c2450	                   lea rcx, [rsp + 0x50]	      2380	channel.c	FUNCTION_59	CALL_3
0x400464d	      0x488d542440	                   lea rdx, [rsp + 0x40]	      2380	channel.c	FUNCTION_59	CALL_3
0x4004652	      0x488d742438	                   lea rsi, [rsp + 0x38]	      2380	channel.c	FUNCTION_59	CALL_3
0x4004657	    0xc78740150000	            mov dword [rdi + 0x1540], 1 	      2377	channel.c	FUNCTION_59
0x4004661	      0xe800000000	                          call 0x4004666	      2380	channel.c	FUNCTION_59	CALL_3
0x4004666	      0xbf01000000	                              mov edi, 1	      2382	channel.c	FUNCTION_59	CALL_4
0x400466b	      0xe800000000	                          call 0x4004670	      2382	channel.c	FUNCTION_59	CALL_4
0x4004670	        0x48630424	                 movsxd rax, dword [rsp]	      2384	channel.c	FUNCTION_59	CALL_5
0x4004674	        0x498d7601	                      lea rsi, [r14 + 1]	      2384	channel.c	FUNCTION_59	CALL_5
0x4004678	          0x4c89f7	                            mov rdi, r14	      2384	channel.c	FUNCTION_59	CALL_5
0x400467b	          0x4829c7	                            sub rdi, rax	      2384	channel.c	FUNCTION_59	CALL_5
0x400467e	      0xe800000000	                          call 0x4004683	      2384	channel.c	FUNCTION_59	CALL_5
0x4004683	          0x8b3424	                    mov esi, dword [rsp]	      2386	channel.c	FUNCTION_59	IF_4
0x4004686	    0x890500000000	            mov dword [0x0400468c], eax 	      2384	channel.c	FUNCTION_59	CALL_5
0x400468c	            0x85f6	                           test esi, esi	      2386	channel.c	FUNCTION_59	IF_4
0x400468e	     0xf8484010000	                            je 0x4004818	      2386	channel.c	FUNCTION_59	IF_4
0x4004694	          0x4c89f7	                            mov rdi, r14	      2389	channel.c	FUNCTION_59	IF_4	CALL_6
0x4004697	      0xba01000000	                              mov edx, 1	      2389	channel.c	FUNCTION_59	IF_4	CALL_6
0x400469c	          0x4c89e6	                            mov rsi, r12	      2389	channel.c	FUNCTION_59	IF_4	CALL_6
0x400469f	          0x4531f6	                          xor r14d, r14d	      2390	channel.c	FUNCTION_59	IF_4
0x40046a2	      0xe800000000	                          call 0x40046a7	      2389	channel.c	FUNCTION_59	IF_4	CALL_6
0x40046a7	      0xbe01000000	                              mov esi, 1	      2394	channel.c	FUNCTION_59	CALL_8
0x40046ac	          0x4c89f7	                            mov rdi, r14	      2394	channel.c	FUNCTION_59	CALL_8
0x40046af	      0xe800000000	                          call 0x40046b4	      2394	channel.c	FUNCTION_59	CALL_8
0x40046b4	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	      2397	channel.c	FUNCTION_59	CALL_9
0x40046b9	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      2397	channel.c	FUNCTION_59	CALL_9
0x40046be	      0x488d542450	                   lea rdx, [rsp + 0x50]	      2397	channel.c	FUNCTION_59	CALL_9
0x40046c3	      0xe800000000	                          call 0x40046c8	      2397	channel.c	FUNCTION_59	CALL_9
0x40046c8	          0x4889d8	                            mov rax, rbx	      2399	channel.c	FUNCTION_59	IF_5
0x40046cb	        0x48c1e308	                              shl rbx, 8	      2399	channel.c	FUNCTION_59	IF_5
0x40046cf	        0x48c1e004	                              shl rax, 4	      2399	channel.c	FUNCTION_59	IF_5
0x40046d3	          0x4801d8	                            add rax, rbx	      2399	channel.c	FUNCTION_59	IF_5
0x40046d6	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      2400	channel.c	FUNCTION_59	IF_5
0x40046db	    0x418b94070801	     mov edx, dword [r15 + rax + 0x108] 	      2400	channel.c	FUNCTION_59	IF_5
0x40046e3	      0xb800000000	                              mov eax, 0	      2400	channel.c	FUNCTION_59	IF_5
0x40046e8	          0x8b4b78	            mov ecx, dword [rbx + 0x78] 	      2404	channel.c	FUNCTION_59	ELSE_2	IF_6
0x40046eb	            0x85d2	                           test edx, edx	      2400	channel.c	FUNCTION_59	IF_5
0x40046ed	       0xf44442428	           cmove eax, dword [rsp + 0x28]	      2400	channel.c	FUNCTION_59	IF_5
0x40046f2	            0x85c9	                           test ecx, ecx	      2404	channel.c	FUNCTION_59	ELSE_2	IF_6
0x40046f4	    0x898340150000	          mov dword [rbx + 0x1540], eax 	      2400	channel.c	FUNCTION_59	IF_5
0x40046fa	     0xf8ea9000000	                           jle 0x40047a9	      2404	channel.c	FUNCTION_59	ELSE_2	IF_6
0x4004700	    0x488b1d000000	            mov rbx, qword [0x04004707] 	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x4004707	        0x498d5601	                      lea rdx, [r14 + 1]	      2411	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x400470b	          0x4885db	                           test rbx, rbx	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x400470e	            0x7511	                           jne 0x4004721	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x4004710	            0xeb7e	                           jmp 0x4004790	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x4004712	    0x660f1f440000	                    nop word [rax + rax]	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x4004718	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x400471c	          0x4885db	                           test rbx, rbx	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x400471f	            0x746f	                            je 0x4004790	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x4004721	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2410	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004726	        0x483b4308	                cmp rax, qword [rbx + 8]	      2410	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x400472a	            0x75ec	                           jne 0x4004718	      2410	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x400472c	            0x85ed	                           test ebp, ebp	      2411	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x400472e	     0xf84c5000000	                            je 0x40047f9	      2411	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004734	        0x48395338	            cmp qword [rbx + 0x38], rdx 	      2411	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004738	            0x75de	                           jne 0x4004718	      2411	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x400473a	    0x488b05000000	            mov rax, qword [0x04004741] 	      2417	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004741	      0x4883433801	               add qword [rbx + 0x38], 1	      2416	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004746	            0x31f6	                            xor esi, esi	      2420	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1	CALL_1
0x4004748	            0x31ff	                            xor edi, edi	      2420	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1	CALL_1
0x400474a	        0x48891424	                    mov qword [rsp], rdx	      2420	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1	CALL_1
0x400474e	    0x48891d000000	            mov qword [0x04004755], rbx 	      2418	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004755	      0x4889442438	             mov qword [rsp + 0x38], rax	      2417	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x400475a	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2419	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x400475f	    0x488905000000	            mov qword [0x04004766], rax 	      2419	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004766	      0xe800000000	                          call 0x400476b	      2420	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1	CALL_1
0x400476b	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2421	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004770	        0x488b1424	                    mov rdx, qword [rsp]	      2422	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004774	    0x488905000000	            mov qword [0x0400477b], rax 	      2421	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x400477b	        0x488b4008	                mov rax, qword [rax + 8]	      2422	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x400477f	    0x488905000000	            mov qword [0x04004786], rax 	      2422	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004786	            0xeb90	                           jmp 0x4004718	      2422	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004788	     0xf1f84000000	                   nop dword [rax + rax]	      2422	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004790	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2425	channel.c	FUNCTION_59	ELSE_2	IF_6	CALL_10
0x4004795	      0xbe0a000000	                            mov esi, 0xa	      2425	channel.c	FUNCTION_59	ELSE_2	IF_6	CALL_10
0x400479a	      0xe800000000	                          call 0x400479f	      2425	channel.c	FUNCTION_59	ELSE_2	IF_6	CALL_10
0x400479f	    0xc70500000000	               mov dword [0x040047a9], 1	      2426	channel.c	FUNCTION_59	ELSE_2	IF_6
0x40047a9	            0x85ed	                           test ebp, ebp	      2429	channel.c	FUNCTION_59	IF_7
0x40047ab	     0xf8440f8ffff	                            je 0x4003ff1	      2429	channel.c	FUNCTION_59	IF_7
0x40047b1	    0x488b05000000	            mov rax, qword [0x040047b8] 	      2436	channel.c	FUNCTION_59	IF_7	FOR_1
0x40047b8	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      2435	channel.c	FUNCTION_59	IF_7
0x40047bd	          0x4885c0	                           test rax, rax	      2436	channel.c	FUNCTION_59	IF_7	FOR_1
0x40047c0	    0xc782341c0000	            mov dword [rdx + 0x1c34], 1 	      2435	channel.c	FUNCTION_59	IF_7
0x40047ca	            0x7518	                           jne 0x40047e4	      2436	channel.c	FUNCTION_59	IF_7	FOR_1
0x40047cc	      0xe920f8ffff	                           jmp 0x4003ff1	      2436	channel.c	FUNCTION_59	IF_7	FOR_1
0x40047d1	     0xf1f80000000	                         nop dword [rax]	      2436	channel.c	FUNCTION_59	IF_7	FOR_1
0x40047d8	          0x488b00	                    mov rax, qword [rax]	      2436	channel.c	FUNCTION_59	IF_7	FOR_1
0x40047db	          0x4885c0	                           test rax, rax	      2436	channel.c	FUNCTION_59	IF_7	FOR_1
0x40047de	     0xf840df8ffff	                            je 0x4003ff1	      2436	channel.c	FUNCTION_59	IF_7	FOR_1
0x40047e4	    0x483b90280400	           cmp rdx, qword [rax + 0x428] 	      2440	channel.c	FUNCTION_59	IF_7	FOR_1	IF_8
0x40047eb	            0x75eb	                           jne 0x40047d8	      2440	channel.c	FUNCTION_59	IF_7	FOR_1	IF_8
0x40047ed	          0x488b0a	                    mov rcx, qword [rdx]	      2441	channel.c	FUNCTION_59	IF_7	FOR_1	IF_8
0x40047f0	    0x488988500400	            mov qword [rax + 0x450], rcx	      2441	channel.c	FUNCTION_59	IF_7	FOR_1	IF_8
0x40047f7	            0xebdf	                           jmp 0x40047d8	      2441	channel.c	FUNCTION_59	IF_7	FOR_1	IF_8
0x40047f9	        0x4c3b7338	            cmp r14, qword [rbx + 0x38] 	      2414	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40047fd	     0xf8515ffffff	                           jne 0x4004718	      2414	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004803	        0x837b4000	               cmp dword [rbx + 0x40], 0	      2414	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004807	     0xf850bffffff	                           jne 0x4004718	      2414	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x400480d	      0xe928ffffff	                           jmp 0x400473a	      2414	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004812	    0x660f1f440000	                    nop word [rax + rax]	      2414	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004818	            0x31c9	                            xor ecx, ecx	      2393	channel.c	FUNCTION_59	CALL_7
0x400481a	            0x31d2	                            xor edx, edx	      2393	channel.c	FUNCTION_59	CALL_7
0x400481c	          0x4c89e6	                            mov rsi, r12	      2393	channel.c	FUNCTION_59	CALL_7
0x400481f	          0x4c89f7	                            mov rdi, r14	      2393	channel.c	FUNCTION_59	CALL_7
0x4004822	      0xe800000000	                          call 0x4004827	      2393	channel.c	FUNCTION_59	CALL_7
0x4004827	      0xe97bfeffff	                           jmp 0x40046a7	      2393	channel.c	FUNCTION_59	CALL_7
0x400482c	          0x4889d8	                            mov rax, rbx	      2179	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x400482f	        0x48c1e308	                              shl rbx, 8	      2179	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x4004833	        0x48c1e004	                              shl rax, 4	      2179	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x4004837	          0x4801d8	                            add rax, rbx	      2179	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x400483a	      0x4d896c0760	       mov qword [r15 + rax + 0x60], r13	      2179	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x400483f	      0xe9c0f9ffff	                           jmp 0x4004204	      2179	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x4004844	    0x4869db100100	                    imul rbx, rbx, 0x110	      2168	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	IF_5
0x400484b	      0x4d896c1f58	       mov qword [r15 + rbx + 0x58], r13	      2168	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	IF_5
0x4004850	      0xe9aff9ffff	                           jmp 0x4004204	      2168	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	IF_5
0x4004855	            0x31c0	                            xor eax, eax	      2276	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_26
0x4004857	          0x4c89ea	                            mov rdx, r13	      2276	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_26
0x400485a	      0xbe00000000	                              mov esi, 0	      2276	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_26
0x400485f	          0x4c89ff	                            mov rdi, r15	      2276	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_26
0x4004862	    0x830500000000	               add dword [0x04004869], 1	      2273	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5
0x4004869	      0xe800000000	                          call 0x400486e	      2276	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_26
0x400486e	            0x31f6	                            xor esi, esi	      2277	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_27
0x4004870	          0x4c89ef	                            mov rdi, r13	      2277	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_27
0x4004873	      0xe800000000	                          call 0x4004878	      2277	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_27
0x4004878	    0x83bc24200100	              cmp dword [rsp + 0x120], 1	      2286	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4004880	          0x4989c4	                            mov r12, rax	      2277	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_27
0x4004883	            0x7452	                            je 0x40048d7	      2286	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4004885	      0x4c8d4c2440	                    lea r9, [rsp + 0x40]	      2286	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x400488a	    0x832d00000000	               sub dword [0x04004891], 1	      2309	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6
0x4004891	          0x4d39cc	                             cmp r12, r9	      2310	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_19
0x4004894	            0x742f	                            je 0x40048c5	      2310	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_19
0x4004896	          0x4c89e7	                            mov rdi, r12	      2313	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	CALL_37
0x4004899	      0xe800000000	                          call 0x400489e	      2313	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	CALL_37
0x400489e	      0x4c8b642430	            mov r12, qword [rsp + 0x30] 	      2313	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	CALL_37
0x40048a3	      0xe921fbffff	                           jmp 0x40043c9	      2313	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	CALL_37
0x40048a8	          0x4531e4	                          xor r12d, r12d	      2466	channel.c	FUNCTION_61
0x40048ab	      0xe9fbf6ffff	                           jmp 0x4003fab	      2466	channel.c	FUNCTION_61
0x40048b0	    0x83bc24300100	              cmp dword [rsp + 0x130], 1	      2286	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x40048b8	     0xf8498020000	                            je 0x4004b56	      2286	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x40048be	    0x832d00000000	               sub dword [0x040048c5], 1	      2309	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6
0x40048c5	          0x4c89cf	                             mov rdi, r9	      2311	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	CALL_36
0x40048c8	      0xe800000000	                          call 0x40048cd	      2311	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	CALL_36
0x40048cd	      0x4c8b642430	            mov r12, qword [rsp + 0x30] 	      2311	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	CALL_36
0x40048d2	      0xe9f2faffff	                           jmp 0x40043c9	      2311	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	CALL_36
0x40048d7	    0x488bbc242801	           mov rdi, qword [rsp + 0x128] 	      2288	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x40048df	          0x4d85e4	                           test r12, r12	      2290	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_16
0x40048e2	          0x4189fd	                           mov r13d, edi	      2288	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x40048e5	     0xf8402010000	                            je 0x40049ed	      2290	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_16
0x40048eb	          0x8b1424	                    mov edx, dword [rsp]	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x40048ee	          0x4c89e6	                            mov rsi, r12	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x40048f1	          0x83ca04	                               or edx, 4	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x40048f4	      0xe800000000	                          call 0x40048f9	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x40048f9	          0x4885c0	                           test rax, rax	      2292	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x40048fc	          0x4889c3	                            mov rbx, rax	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x40048ff	      0x4c8d4c2440	                    lea r9, [rsp + 0x40]	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x4004904	            0x7484	                            je 0x400488a	      2292	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x4004906	          0x803b00	                       cmp byte [rbx], 0	      2292	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x4004909	            0x7542	                           jne 0x400494d	      2292	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x400490b	          0x4889df	                            mov rdi, rbx	      2296	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_31
0x400490e	      0x4c894c2408	                 mov qword [rsp + 8], r9	      2296	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_31
0x4004913	      0xe800000000	                          call 0x4004918	      2296	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_31
0x4004918	          0x8b1424	                    mov edx, dword [rsp]	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x400491b	      0x488d742450	                   lea rsi, [rsp + 0x50]	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x4004920	          0x4489ef	                           mov edi, r13d	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x4004923	    0xc74424500200	               mov dword [rsp + 0x50], 2	      2297	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x400492b	    0x48c744245800	               mov qword [rsp + 0x58], 0	      2298	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x4004934	          0x83ca04	                               or edx, 4	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x4004937	      0xe800000000	                          call 0x400493c	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x400493c	          0x4885c0	                           test rax, rax	      2301	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18
0x400493f	          0x4889c3	                            mov rbx, rax	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x4004942	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      2301	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18
0x4004947	     0xf843dffffff	                            je 0x400488a	      2301	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18
0x400494d	        0x4c890c24	                     mov qword [rsp], r9	      2301	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18
0x4004951	            0x31c0	                            xor eax, eax	      2305	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_34
0x4004953	        0x4883c9ff	              or rcx, 0xffffffffffffffff	      2305	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_34
0x4004957	          0x4889df	                            mov rdi, rbx	      2305	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_34
0x400495a	          0x4d89f0	                             mov r8, r14	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x400495d	          0x4889da	                            mov rdx, rbx	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4004960	            0xf2ae	              repne scasb al, byte [rdi]	      2305	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_34
0x4004962	          0x83fd01	                              cmp ebp, 1	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4004965	          0x4c89ff	                            mov rdi, r15	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4004968	          0x4889c8	                            mov rax, rcx	      2305	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_34
0x400496b	            0x19f6	                            sbb esi, esi	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x400496d	          0x48f7d0	                                 not rax	      2305	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_34
0x4004970	            0xf7d6	                                 not esi	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4004972	        0x488d48ff	                      lea rcx, [rax - 1]	      2305	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_34
0x4004976	          0x83e603	                              and esi, 3	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4004979	      0xe800000000	                          call 0x400497e	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x400497e	          0x4889df	                            mov rdi, rbx	      2306	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_35
0x4004981	      0xe800000000	                          call 0x4004986	      2306	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_35
0x4004986	        0x4c8b0c24	                     mov r9, qword [rsp]	      2306	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_35
0x400498a	      0xe9fbfeffff	                           jmp 0x400488a	      2306	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_35
0x400498f	            0x31c0	                            xor eax, eax	      2281	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	CALL_28
0x4004991	          0x4c89ea	                            mov rdx, r13	      2281	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	CALL_28
0x4004994	      0xbe00000000	                              mov esi, 0	      2281	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	CALL_28
0x4004999	          0x4c89ff	                            mov rdi, r15	      2281	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	CALL_28
0x400499c	    0x830500000000	               add dword [0x040049a3], 1	      2273	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5
0x40049a3	      0xe800000000	                          call 0x40049a8	      2281	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	CALL_28
0x40049a8	      0x4c8d4c2440	                    lea r9, [rsp + 0x40]	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x40049ad	    0x488db4242001	                  lea rsi, [rsp + 0x120]	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x40049b5	            0x31c9	                            xor ecx, ecx	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x40049b7	            0x31d2	                            xor edx, edx	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x40049b9	          0x4c89ef	                            mov rdi, r13	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x40049bc	          0x4d89c8	                              mov r8, r9	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x40049bf	      0x4c894c2408	                 mov qword [rsp + 8], r9	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x40049c4	      0xe800000000	                          call 0x40049c9	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x40049c9	          0x83e801	                              sub eax, 1	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x40049cc	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x40049d1	     0xf84d9feffff	                            je 0x40048b0	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x40049d7	    0x83bc24300100	              cmp dword [rsp + 0x130], 1	      2286	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x40049df	     0xf8521010000	                           jne 0x4004b06	      2286	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x40049e5	    0x448bac243801	          mov r13d, dword [rsp + 0x138] 	      2288	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x40049ed	            0x31ff	                            xor edi, edi	      2296	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_31
0x40049ef	      0xe800000000	                          call 0x40049f4	      2296	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_31
0x40049f4	          0x8b1424	                    mov edx, dword [rsp]	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x40049f7	      0x488d742450	                   lea rsi, [rsp + 0x50]	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x40049fc	          0x4489ef	                           mov edi, r13d	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x40049ff	    0xc74424500200	               mov dword [rsp + 0x50], 2	      2297	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x4004a07	    0x48c744245800	               mov qword [rsp + 0x58], 0	      2298	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x4004a10	          0x83ca04	                               or edx, 4	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x4004a13	      0xe800000000	                          call 0x4004a18	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x4004a18	          0x4885c0	                           test rax, rax	      2301	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18
0x4004a1b	          0x4889c3	                            mov rbx, rax	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x4004a1e	     0xf84e2000000	                            je 0x4004b06	      2301	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18
0x4004a24	          0x4531e4	                          xor r12d, r12d	      2301	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18
0x4004a27	      0x4c8d4c2440	                    lea r9, [rsp + 0x40]	      2301	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18
0x4004a2c	      0xe91cffffff	                           jmp 0x400494d	      2301	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18
0x4004a31	    0x83bc24300100	              cmp dword [rsp + 0x130], 1	      2252	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9
0x4004a39	     0xf8761fbffff	                            ja 0x40045a0	      2252	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9
0x4004a3f	    0x83bc24200100	              cmp dword [rsp + 0x120], 5	      2259	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11
0x4004a47	     0xf8442ffffff	                            je 0x400498f	      2259	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11
0x4004a4d	            0x31c0	                            xor eax, eax	      2261	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_23
0x4004a4f	      0xbe00000000	                              mov esi, 0	      2261	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_23
0x4004a54	          0x4c89ff	                            mov rdi, r15	      2261	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_23
0x4004a57	      0xe8b4b6ffff	                       call sym.ch_error	      2261	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_23
0x4004a5c	    0x48833d000000	               cmp qword [0x04004a64], 2	      2262	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	IF_12
0x4004a64	     0xf8e98f9ffff	                           jle 0x4004402	      2262	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	IF_12
0x4004a6a	      0xba05000000	                              mov edx, 5	      2263	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_25
0x4004a6f	      0xbe00000000	                              mov esi, 0	      2263	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_25
0x4004a74	      0xe94efbffff	                           jmp 0x40045c7	      2263	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_25
0x4004a79	          0x4c89ea	                            mov rdx, r13	      2230	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_10
0x4004a7c	      0xbe00000000	                              mov esi, 0	      2230	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_10
0x4004a81	          0x4c89ff	                            mov rdi, r15	      2230	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_10
0x4004a84	            0x31c0	                            xor eax, eax	      2230	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_10
0x4004a86	      0xe800000000	                          call 0x4004a8b	      2230	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_10
0x4004a8b	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      2234	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_11
0x4004a90	      0x4c896c2450	             mov qword [rsp + 0x50], r13	      2231	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6
0x4004a95	    0xc78424880000	               mov dword [rsp + 0x88], 0	      2232	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6
0x4004aa0	    0xc78424840000	               mov dword [rsp + 0x84], 1	      2233	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6
0x4004aab	      0xe800000000	                          call 0x4004ab0	      2234	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_11
0x4004ab0	      0x4c8b642430	            mov r12, qword [rsp + 0x30] 	      2234	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_11
0x4004ab5	      0xe90ff9ffff	                           jmp 0x40043c9	      2234	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_11
0x4004aba	      0xbe00000000	                              mov esi, 0	      2240	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_13
0x4004abf	            0x31c0	                            xor eax, eax	      2240	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_13
0x4004ac1	          0x4c89ff	                            mov rdi, r15	      2240	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_13
0x4004ac4	      0xe800000000	                          call 0x4004ac9	      2240	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_13
0x4004ac9	            0x31c0	                            xor eax, eax	      2241	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7
0x4004acb	      0x41807d0000	                       cmp byte [r13], 0	      2241	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7
0x4004ad0	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      2242	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_14
0x4004ad5	           0xf95c0	                                setne al	      2241	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7
0x4004ad8	    0x898424840000	             mov dword [rsp + 0x84], eax	      2241	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7
0x4004adf	      0xe800000000	                          call 0x4004ae4	      2242	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_14
0x4004ae4	            0x31ff	                            xor edi, edi	      2243	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_15
0x4004ae6	      0xe800000000	                          call 0x4004aeb	      2243	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_15
0x4004aeb	      0xe800000000	                          call 0x4004af0	      2244	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_16
0x4004af0	            0x31f6	                            xor esi, esi	      2245	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_17
0x4004af2	      0xbf01000000	                              mov edi, 1	      2245	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_17
0x4004af7	      0xe800000000	                          call 0x4004afc	      2245	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_17
0x4004afc	      0x4c8b642430	            mov r12, qword [rsp + 0x30] 	      2245	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_17
0x4004b01	      0xe9c3f8ffff	                           jmp 0x40043c9	      2245	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_17
0x4004b06	    0x832d00000000	               sub dword [0x04004b0d], 1	      2309	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6
0x4004b0d	          0x4531e4	                          xor r12d, r12d	      2309	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6
0x4004b10	      0xe981fdffff	                           jmp 0x4004896	      2309	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6
0x4004b15	    0x48833d000000	               cmp qword [0x04004b1d], 2	      2316	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20
0x4004b1d	     0xf8ea6f8ffff	                           jle 0x40043c9	      2316	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20
0x4004b23	          0x4c89f2	                            mov rdx, r14	      2318	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_38
0x4004b26	          0x4c89ff	                            mov rdi, r15	      2318	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_38
0x4004b29	            0x31c0	                            xor eax, eax	      2318	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_38
0x4004b2b	      0xbe00000000	                              mov esi, 0	      2318	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_38
0x4004b30	      0xe8dbb5ffff	                       call sym.ch_error	      2318	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_38
0x4004b35	            0x31ff	                            xor edi, edi	      2319	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_40
0x4004b37	      0xba05000000	                              mov edx, 5	      2319	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_40
0x4004b3c	      0xbe00000000	                              mov esi, 0	      2319	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_40
0x4004b41	      0xe800000000	                          call 0x4004b46	      2319	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_40
0x4004b46	          0x4c89f6	                            mov rsi, r14	      2319	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_40
0x4004b49	          0x4889c7	                            mov rdi, rax	      2319	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_40
0x4004b4c	      0xe800000000	                          call 0x4004b51	      2319	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_40
0x4004b51	      0xe9acf8ffff	                           jmp 0x4004402	      2319	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_40
0x4004b56	          0x8b1424	                    mov edx, dword [rsp]	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x4004b59	    0x488bbc243801	           mov rdi, qword [rsp + 0x138] 	      2288	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4004b61	          0x4c89ce	                             mov rsi, r9	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x4004b64	      0x4c894c2408	                 mov qword [rsp + 8], r9	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x4004b69	          0x83ca04	                               or edx, 4	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x4004b6c	          0x4189fd	                           mov r13d, edi	      2288	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4004b6f	      0xe800000000	                          call 0x4004b74	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x4004b74	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      2283	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14
0x4004b79	          0x4885c0	                           test rax, rax	      2292	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x4004b7c	          0x4889c3	                            mov rbx, rax	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x4004b7f	          0x4d89cc	                             mov r12, r9	      2283	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14
0x4004b82	     0xf857efdffff	                           jne 0x4004906	      2292	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x4004b88	      0xe931fdffff	                           jmp 0x40048be	      2292	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
channel_consume	DO,0:IF,0:FOR,0:ELSE,0:SWITCH,0:CALL,1:WHILE,0:functions,0	20
0x4002670	            0x89f6	                            mov esi, esi	      1717	channel.c	FUNCTION_48
0x4002672	              0x55	                                push rbp	      1715	channel.c	FUNCTION_48
0x4002673	              0x53	                                push rbx	      1715	channel.c	FUNCTION_48
0x4002674	          0x4889f0	                            mov rax, rsi	      1717	channel.c	FUNCTION_48
0x4002677	        0x48c1e608	                              shl rsi, 8	      1717	channel.c	FUNCTION_48
0x400267b	          0x4863da	                         movsxd rbx, edx	      1720	channel.c	FUNCTION_48	CALL_1
0x400267e	        0x48c1e004	                              shl rax, 4	      1717	channel.c	FUNCTION_48
0x4002682	        0x4883ec08	                              sub rsp, 8	      1715	channel.c	FUNCTION_48
0x4002686	          0x4801c6	                            add rsi, rax	      1717	channel.c	FUNCTION_48
0x4002689	      0x488b6c3740	      mov rbp, qword [rdi + rsi + 0x40] 	      1717	channel.c	FUNCTION_48
0x400268e	        0x488b7d00	                    mov rdi, qword [rbp]	      1718	channel.c	FUNCTION_48
0x4002692	        0x488b5508	                mov rdx, qword [rbp + 8]	        59	string3.h	FUNCTION_136	CALL_3
0x4002696	        0x488d341f	                    lea rsi, [rdi + rbx]	        59	string3.h	FUNCTION_136	CALL_3
0x400269a	          0x4829da	                            sub rdx, rbx	        59	string3.h	FUNCTION_136	CALL_3
0x400269d	      0xe800000000	                          call 0x40026a2	        59	string3.h	FUNCTION_136	CALL_3
0x40026a2	        0x48295d08	                sub qword [rbp + 8], rbx	      1721	channel.c	FUNCTION_48
0x40026a6	        0x4883c408	                              add rsp, 8	      1722	channel.c	FUNCTION_48
0x40026aa	              0x5b	                                 pop rbx	      1722	channel.c	FUNCTION_48
0x40026ab	              0x5d	                                 pop rbp	      1722	channel.c	FUNCTION_48
0x40026ac	              0xc3	                                     ret	      1722	channel.c	FUNCTION_48
channel_free_contents	DO,0:IF,0:FOR,0:ELSE,0:SWITCH,0:CALL,3:WHILE,0:functions,0	11
0x4004e20	              0x53	                                push rbx	       361	channel.c	FUNCTION_11
0x4004e21	      0xbe01000000	                              mov esi, 1	       362	channel.c	FUNCTION_11	CALL_1
0x4004e26	          0x4889fb	                            mov rbx, rdi	       361	channel.c	FUNCTION_11
0x4004e29	      0xe800000000	                          call 0x4004e2e	       362	channel.c	FUNCTION_11	CALL_1
0x4004e2e	          0x4889df	                            mov rdi, rbx	       363	channel.c	FUNCTION_11	CALL_2
0x4004e31	      0xe800000000	                          call 0x4004e36	       363	channel.c	FUNCTION_11	CALL_2
0x4004e36	          0x4889df	                            mov rdi, rbx	       364	channel.c	FUNCTION_11	CALL_3
0x4004e39	      0xbe00000000	                              mov esi, 0	       364	channel.c	FUNCTION_11	CALL_3
0x4004e3e	            0x31c0	                            xor eax, eax	       364	channel.c	FUNCTION_11	CALL_3
0x4004e40	              0x5b	                                 pop rbx	       365	channel.c	FUNCTION_11
0x4004e41	      0xe91ac0ffff	                          jmp sym.ch_log	       364	channel.c	FUNCTION_11	CALL_3
channel_info	DO,0:IF,1:FOR,0:ELSE,1:SWITCH,0:CALL,9:WHILE,0:functions,0	52
0x4002a50	              0x55	                                push rbp	      2843	channel.c	FUNCTION_67
0x4002a51	              0x53	                                push rbx	      2843	channel.c	FUNCTION_67
0x4002a52	          0x4889f5	                            mov rbp, rsi	      2843	channel.c	FUNCTION_67
0x4002a55	            0x31c9	                            xor ecx, ecx	      2844	channel.c	FUNCTION_67	CALL_1
0x4002a57	          0x4889fb	                            mov rbx, rdi	      2843	channel.c	FUNCTION_67
0x4002a5a	      0xbe00000000	                              mov esi, 0	      2844	channel.c	FUNCTION_67	CALL_1
0x4002a5f	        0x4883ec08	                              sub rsp, 8	      2843	channel.c	FUNCTION_67
0x4002a63	        0x48635710	         movsxd rdx, dword [rdi + 0x10] 	      2844	channel.c	FUNCTION_67	CALL_1
0x4002a67	          0x4889ef	                            mov rdi, rbp	      2844	channel.c	FUNCTION_67	CALL_1
0x4002a6a	      0xe800000000	                          call 0x4002a6f	      2844	channel.c	FUNCTION_67	CALL_1
0x4002a6f	      0xbeffffffff	                     mov esi, 0xffffffff	      2845	channel.c	FUNCTION_67	CALL_3
0x4002a74	          0x4889df	                            mov rdi, rbx	      2845	channel.c	FUNCTION_67	CALL_3
0x4002a77	      0xe800000000	                          call 0x4002a7c	      2845	channel.c	FUNCTION_67	CALL_3
0x4002a7c	            0x31d2	                            xor edx, edx	      2845	channel.c	FUNCTION_67	CALL_3
0x4002a7e	          0x4889c1	                            mov rcx, rax	      2845	channel.c	FUNCTION_67	CALL_3
0x4002a81	      0xbe00000000	                              mov esi, 0	      2845	channel.c	FUNCTION_67	CALL_3
0x4002a86	          0x4889ef	                            mov rdi, rbp	      2845	channel.c	FUNCTION_67	CALL_3
0x4002a89	      0xe800000000	                          call 0x4002a8e	      2845	channel.c	FUNCTION_67	CALL_3
0x4002a8e	    0x488b8b600400	           mov rcx, qword [rbx + 0x460] 	      2847	channel.c	FUNCTION_67	IF_1
0x4002a95	          0x4885c9	                           test rcx, rcx	      2847	channel.c	FUNCTION_67	IF_1
0x4002a98	            0x7446	                            je 0x4002ae0	      2847	channel.c	FUNCTION_67	IF_1
0x4002a9a	            0x31d2	                            xor edx, edx	      2849	channel.c	FUNCTION_67	IF_1	CALL_4
0x4002a9c	      0xbe00000000	                              mov esi, 0	      2849	channel.c	FUNCTION_67	IF_1	CALL_4
0x4002aa1	          0x4889ef	                            mov rdi, rbp	      2849	channel.c	FUNCTION_67	IF_1	CALL_4
0x4002aa4	      0xe800000000	                          call 0x4002aa9	      2849	channel.c	FUNCTION_67	IF_1	CALL_4
0x4002aa9	    0x486393680400	        movsxd rdx, dword [rbx + 0x468] 	      2850	channel.c	FUNCTION_67	IF_1	CALL_5
0x4002ab0	            0x31c9	                            xor ecx, ecx	      2850	channel.c	FUNCTION_67	IF_1	CALL_5
0x4002ab2	      0xbe00000000	                              mov esi, 0	      2850	channel.c	FUNCTION_67	IF_1	CALL_5
0x4002ab7	          0x4889ef	                            mov rdi, rbp	      2850	channel.c	FUNCTION_67	IF_1	CALL_5
0x4002aba	      0xe800000000	                          call 0x4002abf	      2850	channel.c	FUNCTION_67	IF_1	CALL_5
0x4002abf	            0x31c9	                            xor ecx, ecx	      2851	channel.c	FUNCTION_67	IF_1	CALL_6
0x4002ac1	      0xba00000000	                              mov edx, 0	      2851	channel.c	FUNCTION_67	IF_1	CALL_6
0x4002ac6	        0x4883c408	                              add rsp, 8	      2859	channel.c	FUNCTION_67
0x4002aca	          0x4889ee	                            mov rsi, rbp	      2857	channel.c	FUNCTION_67	ELSE_1	CALL_9
0x4002acd	          0x4889df	                            mov rdi, rbx	      2857	channel.c	FUNCTION_67	ELSE_1	CALL_9
0x4002ad0	              0x5b	                                 pop rbx	      2859	channel.c	FUNCTION_67
0x4002ad1	              0x5d	                                 pop rbp	      2859	channel.c	FUNCTION_67
0x4002ad2	      0xe939ddffff	               jmp sym.channel_part_info	      2857	channel.c	FUNCTION_67	ELSE_1	CALL_9
0x4002ad7	    0x660f1f840000	                    nop word [rax + rax]	      2857	channel.c	FUNCTION_67	ELSE_1	CALL_9
0x4002ae0	      0xb901000000	                              mov ecx, 1	      2855	channel.c	FUNCTION_67	ELSE_1	CALL_7
0x4002ae5	      0xba00000000	                              mov edx, 0	      2855	channel.c	FUNCTION_67	ELSE_1	CALL_7
0x4002aea	          0x4889ee	                            mov rsi, rbp	      2855	channel.c	FUNCTION_67	ELSE_1	CALL_7
0x4002aed	          0x4889df	                            mov rdi, rbx	      2855	channel.c	FUNCTION_67	ELSE_1	CALL_7
0x4002af0	      0xe81bddffff	              call sym.channel_part_info	      2855	channel.c	FUNCTION_67	ELSE_1	CALL_7
0x4002af5	      0xb902000000	                              mov ecx, 2	      2856	channel.c	FUNCTION_67	ELSE_1	CALL_8
0x4002afa	      0xba00000000	                              mov edx, 0	      2856	channel.c	FUNCTION_67	ELSE_1	CALL_8
0x4002aff	          0x4889ee	                            mov rsi, rbp	      2856	channel.c	FUNCTION_67	ELSE_1	CALL_8
0x4002b02	          0x4889df	                            mov rdi, rbx	      2856	channel.c	FUNCTION_67	ELSE_1	CALL_8
0x4002b05	      0xe806ddffff	              call sym.channel_part_info	      2856	channel.c	FUNCTION_67	ELSE_1	CALL_8
0x4002b0a	      0xb903000000	                              mov ecx, 3	      2857	channel.c	FUNCTION_67	ELSE_1	CALL_9
0x4002b0f	      0xba00000000	                              mov edx, 0	      2857	channel.c	FUNCTION_67	ELSE_1	CALL_9
0x4002b14	            0xebb0	                           jmp 0x4002ac6	      2857	channel.c	FUNCTION_67	ELSE_1	CALL_9
write_buf_line	DO,0:IF,3:FOR,1:ELSE,1:SWITCH,0:CALL,6:WHILE,0:functions,0	66
0x4003160	            0x4156	                                push r14	      1332	channel.c	ELSE_2	FUNCTION_36
0x4003162	            0x4155	                                push r13	      1332	channel.c	ELSE_2	FUNCTION_36
0x4003164	            0x4154	                                push r12	      1332	channel.c	ELSE_2	FUNCTION_36
0x4003166	              0x55	                                push rbp	      1332	channel.c	ELSE_2	FUNCTION_36
0x4003167	          0x4989d4	                            mov r12, rdx	      1332	channel.c	ELSE_2	FUNCTION_36
0x400316a	              0x53	                                push rbx	      1332	channel.c	ELSE_2	FUNCTION_36
0x400316b	            0x31d2	                            xor edx, edx	      1333	channel.c	ELSE_2	FUNCTION_36	CALL_1
0x400316d	      0xe800000000	                          call 0x4003172	      1333	channel.c	ELSE_2	FUNCTION_36	CALL_1
0x4003172	          0x4889c7	                            mov rdi, rax	      1334	channel.c	ELSE_2	FUNCTION_36	CALL_2
0x4003175	          0x4989c6	                            mov r14, rax	      1333	channel.c	ELSE_2	FUNCTION_36	CALL_1
0x4003178	      0xe800000000	                          call 0x400317d	      1334	channel.c	ELSE_2	FUNCTION_36	CALL_2
0x400317d	          0x8d7802	                      lea edi, [rax + 2]	      1339	channel.c	ELSE_2	FUNCTION_36	IF_1	CALL_3
0x4003180	          0x4889c5	                            mov rbp, rax	      1334	channel.c	ELSE_2	FUNCTION_36	CALL_2
0x4003183	      0xe800000000	                          call 0x4003188	      1339	channel.c	ELSE_2	FUNCTION_36	IF_1	CALL_3
0x4003188	          0x4885c0	                           test rax, rax	      1339	channel.c	ELSE_2	FUNCTION_36	IF_1	CALL_3
0x400318b	     0xf8497000000	                            je 0x4003228	      1339	channel.c	ELSE_2	FUNCTION_36	IF_1	CALL_3
0x4003191	          0x4c63ed	                         movsxd r13, ebp	      1341	channel.c	ELSE_2	FUNCTION_36	CALL_4
0x4003194	          0x4c89f6	                            mov rsi, r14	        53	string3.h	FUNCTION_135	CALL_3
0x4003197	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_135	CALL_3
0x400319a	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_135	CALL_3
0x400319d	          0x4889c3	                            mov rbx, rax	        53	string3.h	FUNCTION_135	CALL_3
0x40031a0	      0xe800000000	                          call 0x40031a5	        53	string3.h	FUNCTION_135	CALL_3
0x40031a5	    0x418b84245804	           mov eax, dword [r12 + 0x458] 	      1343	channel.c	ELSE_2	FUNCTION_36	IF_2
0x40031ad	            0x85c0	                           test eax, eax	      1343	channel.c	ELSE_2	FUNCTION_36	IF_2
0x40031af	            0x753f	                           jne 0x40031f0	      1343	channel.c	ELSE_2	FUNCTION_36	IF_2
0x40031b1	            0x85ed	                           test ebp, ebp	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x40031b3	            0x7e2d	                           jle 0x40031e2	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x40031b5	          0x8d55ff	                      lea edx, [rbp - 1]	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x40031b8	          0x4889d8	                            mov rax, rbx	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x40031bb	      0x488d541301	                lea rdx, [rbx + rdx + 1]	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x40031c0	            0xeb0f	                           jmp 0x40031d1	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x40031c2	    0x660f1f440000	                    nop word [rax + rax]	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x40031c8	        0x4883c001	                              add rax, 1	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x40031cc	          0x4839d0	                            cmp rax, rdx	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x40031cf	            0x7411	                            je 0x40031e2	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x40031d1	          0x80380a	                     cmp byte [rax], 0xa	      1348	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1	IF_3
0x40031d4	            0x75f2	                           jne 0x40031c8	      1348	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1	IF_3
0x40031d6	          0xc60000	                       mov byte [rax], 0	      1349	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1	IF_3
0x40031d9	        0x4883c001	                              add rax, 1	      1349	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1	IF_3
0x40031dd	          0x4839d0	                            cmp rax, rdx	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x40031e0	            0x75ef	                           jne 0x40031d1	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x40031e2	      0x42c6042b0a	               mov byte [rbx + r13], 0xa	      1351	channel.c	ELSE_2	FUNCTION_36	ELSE_1
0x40031e7	            0xeb0c	                           jmp 0x40031f5	      1351	channel.c	ELSE_2	FUNCTION_36	ELSE_1
0x40031e9	     0xf1f80000000	                         nop dword [rax]	      1351	channel.c	ELSE_2	FUNCTION_36	ELSE_1
0x40031f0	      0x42c6042b0d	               mov byte [rbx + r13], 0xd	      1344	channel.c	ELSE_2	FUNCTION_36	IF_2
0x40031f5	          0x8d4d01	                      lea ecx, [rbp + 1]	      1354	channel.c	ELSE_2	FUNCTION_36	CALL_5
0x40031f8	    0x42c6442b0100	             mov byte [rbx + r13 + 1], 0	      1353	channel.c	ELSE_2	FUNCTION_36
0x40031fe	          0x4c89e7	                            mov rdi, r12	      1354	channel.c	ELSE_2	FUNCTION_36	CALL_5
0x4003201	          0x4889da	                            mov rdx, rbx	      1354	channel.c	ELSE_2	FUNCTION_36	CALL_5
0x4003204	    0x41b800000000	                              mov r8d, 0	      1354	channel.c	ELSE_2	FUNCTION_36	CALL_5
0x400320a	      0xbe03000000	                              mov esi, 3	      1354	channel.c	ELSE_2	FUNCTION_36	CALL_5
0x400320f	      0xe800000000	                          call 0x4003214	      1354	channel.c	ELSE_2	FUNCTION_36	CALL_5
0x4003214	          0x4889df	                            mov rdi, rbx	      1355	channel.c	ELSE_2	FUNCTION_36	CALL_6
0x4003217	              0x5b	                                 pop rbx	      1356	channel.c	ELSE_2	FUNCTION_36
0x4003218	              0x5d	                                 pop rbp	      1356	channel.c	ELSE_2	FUNCTION_36
0x4003219	            0x415c	                                 pop r12	      1356	channel.c	ELSE_2	FUNCTION_36
0x400321b	            0x415d	                                 pop r13	      1356	channel.c	ELSE_2	FUNCTION_36
0x400321d	            0x415e	                                 pop r14	      1356	channel.c	ELSE_2	FUNCTION_36
0x400321f	      0xe900000000	                           jmp 0x4003224	      1355	channel.c	ELSE_2	FUNCTION_36	CALL_6
0x4003224	         0xf1f4000	                         nop dword [rax]	      1355	channel.c	ELSE_2	FUNCTION_36	CALL_6
0x4003228	              0x5b	                                 pop rbx	      1356	channel.c	ELSE_2	FUNCTION_36
0x4003229	              0x5d	                                 pop rbp	      1356	channel.c	ELSE_2	FUNCTION_36
0x400322a	            0x415c	                                 pop r12	      1356	channel.c	ELSE_2	FUNCTION_36
0x400322c	            0x415d	                                 pop r13	      1356	channel.c	ELSE_2	FUNCTION_36
0x400322e	            0x415e	                                 pop r14	      1356	channel.c	ELSE_2	FUNCTION_36
0x4003230	              0xc3	                                     ret	      1356	channel.c	ELSE_2	FUNCTION_36
add_channel	DO,0:IF,2:FOR,1:ELSE,0:SWITCH,0:CALL,2:WHILE,0:functions,0	36
0x40014b0	              0x53	                                push rbx	       263	channel.c	ELSE_1	FUNCTION_7
0x40014b1	      0xbfc0040000	                          mov edi, 0x4c0	       265	channel.c	ELSE_1	FUNCTION_7	CALL_1
0x40014b6	      0xe800000000	                          call 0x40014bb	       265	channel.c	ELSE_1	FUNCTION_7	CALL_1
0x40014bb	          0x4885c0	                           test rax, rax	       267	channel.c	ELSE_1	FUNCTION_7	IF_1
0x40014be	     0xf847c000000	                            je 0x4001540	       267	channel.c	ELSE_1	FUNCTION_7	IF_1
0x40014c4	          0x4889c3	                            mov rbx, rax	       267	channel.c	ELSE_1	FUNCTION_7	IF_1
0x40014c7	    0x8b0500000000	            mov eax, dword [0x040014cd] 	       270	channel.c	ELSE_1	FUNCTION_7
0x40014cd	      0xbe00000000	                              mov esi, 0	       271	channel.c	ELSE_1	FUNCTION_7	CALL_2
0x40014d2	          0x4889df	                            mov rdi, rbx	       271	channel.c	ELSE_1	FUNCTION_7	CALL_2
0x40014d5	          0x8d5001	                      lea edx, [rax + 1]	       270	channel.c	ELSE_1	FUNCTION_7
0x40014d8	          0x894310	             mov dword [rbx + 0x10], eax	       270	channel.c	ELSE_1	FUNCTION_7
0x40014db	            0x31c0	                            xor eax, eax	       271	channel.c	ELSE_1	FUNCTION_7	CALL_2
0x40014dd	    0x891500000000	            mov dword [0x040014e3], edx 	       270	channel.c	ELSE_1	FUNCTION_7
0x40014e3	      0xe800000000	                          call 0x40014e8	       271	channel.c	ELSE_1	FUNCTION_7	CALL_2
0x40014e8	        0x488d5318	                   lea rdx, [rbx + 0x18]	       271	channel.c	ELSE_1	FUNCTION_7	CALL_2
0x40014ec	    0x488d83580400	                  lea rax, [rbx + 0x458]	       271	channel.c	ELSE_1	FUNCTION_7	CALL_2
0x40014f3	    0xc702ffffffff	            mov dword [rdx], 0xffffffff 	       275	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x40014f9	    0xc74204000000	                  mov dword [rdx + 4], 0	       280	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x4001500	    0x4881c2100100	                          add rdx, 0x110	       280	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x4001507	    0xc78200ffffff	         mov dword [rdx - 0x100], 0x7d0 	       282	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x4001511	          0x4839c2	                            cmp rdx, rax	       273	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x4001514	            0x75dd	                           jne 0x40014f3	       273	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x4001516	    0x488b05000000	            mov rax, qword [0x0400151d] 	       285	channel.c	ELSE_1	FUNCTION_7	IF_2
0x400151d	          0x4885c0	                           test rax, rax	       285	channel.c	ELSE_1	FUNCTION_7	IF_2
0x4001520	            0x7407	                            je 0x4001529	       285	channel.c	ELSE_1	FUNCTION_7	IF_2
0x4001522	        0x48895808	                mov qword [rax + 8], rbx	       287	channel.c	ELSE_1	FUNCTION_7	IF_2
0x4001526	          0x488903	                    mov qword [rbx], rax	       288	channel.c	ELSE_1	FUNCTION_7	IF_2
0x4001529	          0x4889d8	                            mov rax, rbx	       293	channel.c	ELSE_1	FUNCTION_7
0x400152c	    0x48891d000000	            mov qword [0x04001533], rbx 	       290	channel.c	ELSE_1	FUNCTION_7
0x4001533	    0xc783b4040000	              mov dword [rbx + 0x4b4], 1	       292	channel.c	ELSE_1	FUNCTION_7
0x400153d	              0x5b	                                 pop rbx	       294	channel.c	ELSE_1	FUNCTION_7
0x400153e	              0xc3	                                     ret	       294	channel.c	ELSE_1	FUNCTION_7
0x400153f	              0x90	                                     nop	       294	channel.c	ELSE_1	FUNCTION_7
0x4001540	            0x31c0	                            xor eax, eax	       268	channel.c	ELSE_1	FUNCTION_7	IF_1
0x4001542	              0x5b	                                 pop rbx	       294	channel.c	ELSE_1	FUNCTION_7
0x4001543	              0xc3	                                     ret	       294	channel.c	ELSE_1	FUNCTION_7
channel_fill	DO,0:IF,3:FOR,0:ELSE,0:SWITCH,0:CALL,8:WHILE,0:functions,0	63
0x4002210	            0x4156	                                push r14	      1866	channel.c	FUNCTION_51
0x4002212	            0x4155	                                push r13	      1866	channel.c	FUNCTION_51
0x4002214	            0x4154	                                push r12	      1866	channel.c	FUNCTION_51
0x4002216	              0x55	                                push rbp	      1866	channel.c	FUNCTION_51
0x4002217	          0x4889fd	                            mov rbp, rdi	      1866	channel.c	FUNCTION_51
0x400221a	              0x53	                                push rbx	      1866	channel.c	FUNCTION_51
0x400221b	          0x8b7728	            mov esi, dword [rdi + 0x28] 	      1869	channel.c	FUNCTION_51	CALL_1
0x400221e	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	      1869	channel.c	FUNCTION_51	CALL_1
0x4002222	      0xe800000000	                          call 0x4002227	      1869	channel.c	FUNCTION_51	CALL_1
0x4002227	          0x4885c0	                           test rax, rax	      1874	channel.c	FUNCTION_51	IF_1
0x400222a	     0xf8488000000	                            je 0x40022b8	      1874	channel.c	FUNCTION_51	IF_1
0x4002230	        0x488b7d00	                    mov rdi, qword [rbp]	      1877	channel.c	FUNCTION_51
0x4002234	        0x488b5d08	                mov rbx, qword [rbp + 8]	      1877	channel.c	FUNCTION_51
0x4002238	          0x4989c4	                            mov r12, rax	      1877	channel.c	FUNCTION_51
0x400223b	          0x4829fb	                            sub rbx, rdi	      1877	channel.c	FUNCTION_51
0x400223e	            0x85db	                           test ebx, ebx	      1878	channel.c	FUNCTION_51	IF_2
0x4002240	            0x7e6e	                           jle 0x40022b0	      1878	channel.c	FUNCTION_51	IF_2
0x4002242	          0x4889c7	                            mov rdi, rax	      1881	channel.c	FUNCTION_51	IF_2	CALL_2
0x4002245	      0xe800000000	                          call 0x400224a	      1881	channel.c	FUNCTION_51	IF_2	CALL_2
0x400224a	        0x8d7c1801	                lea edi, [rax + rbx + 1]	      1882	channel.c	FUNCTION_51	IF_2	CALL_3
0x400224e	          0x4989c6	                            mov r14, rax	      1881	channel.c	FUNCTION_51	IF_2	CALL_2
0x4002251	      0xe800000000	                          call 0x4002256	      1882	channel.c	FUNCTION_51	IF_2	CALL_3
0x4002256	          0x4885c0	                           test rax, rax	      1883	channel.c	FUNCTION_51	IF_2	IF_3
0x4002259	          0x4989c5	                            mov r13, rax	      1882	channel.c	FUNCTION_51	IF_2	CALL_3
0x400225c	            0x746a	                            je 0x40022c8	      1883	channel.c	FUNCTION_51	IF_2	IF_3
0x400225e	        0x488b7500	                    mov rsi, qword [rbp]	        59	string3.h	FUNCTION_136	CALL_3
0x4002262	          0x4863db	                         movsxd rbx, ebx	      1888	channel.c	FUNCTION_51	IF_2	CALL_5
0x4002265	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_136	CALL_3
0x4002268	          0x4889da	                            mov rdx, rbx	        59	string3.h	FUNCTION_136	CALL_3
0x400226b	      0xe800000000	                          call 0x4002270	        59	string3.h	FUNCTION_136	CALL_3
0x4002270	        0x418d5601	                      lea edx, [r14 + 1]	        59	string3.h	FUNCTION_136	CALL_3
0x4002274	      0x498d7c1d00	                    lea rdi, [r13 + rbx]	        59	string3.h	FUNCTION_136	CALL_3
0x4002279	          0x4c89e6	                            mov rsi, r12	        59	string3.h	FUNCTION_136	CALL_3
0x400227c	          0x4863d2	                         movsxd rdx, edx	        59	string3.h	FUNCTION_136	CALL_3
0x400227f	      0xe800000000	                          call 0x4002284	        59	string3.h	FUNCTION_136	CALL_3
0x4002284	          0x4c89e7	                            mov rdi, r12	      1890	channel.c	FUNCTION_51	IF_2	CALL_7
0x4002287	      0xe800000000	                          call 0x400228c	      1890	channel.c	FUNCTION_51	IF_2	CALL_7
0x400228c	        0x488b7d00	                    mov rdi, qword [rbp]	      1890	channel.c	FUNCTION_51	IF_2	CALL_7
0x4002290	      0xe800000000	                          call 0x4002295	      1894	channel.c	FUNCTION_51	CALL_8
0x4002295	        0x4c896d00	                    mov qword [rbp], r13	      1895	channel.c	FUNCTION_51
0x4002299	      0xb801000000	                              mov eax, 1	      1896	channel.c	FUNCTION_51
0x400229e	              0x5b	                                 pop rbx	      1897	channel.c	FUNCTION_51
0x400229f	              0x5d	                                 pop rbp	      1897	channel.c	FUNCTION_51
0x40022a0	            0x415c	                                 pop r12	      1897	channel.c	FUNCTION_51
0x40022a2	            0x415d	                                 pop r13	      1897	channel.c	FUNCTION_51
0x40022a4	            0x415e	                                 pop r14	      1897	channel.c	FUNCTION_51
0x40022a6	              0xc3	                                     ret	      1897	channel.c	FUNCTION_51
0x40022a7	    0x660f1f840000	                    nop word [rax + rax]	      1897	channel.c	FUNCTION_51
0x40022b0	          0x4989c5	                            mov r13, rax	      1897	channel.c	FUNCTION_51
0x40022b3	            0xebdb	                           jmp 0x4002290	      1897	channel.c	FUNCTION_51
0x40022b5	           0xf1f00	                         nop dword [rax]	      1897	channel.c	FUNCTION_51
0x40022b8	              0x5b	                                 pop rbx	      1897	channel.c	FUNCTION_51
0x40022b9	            0x31c0	                            xor eax, eax	      1875	channel.c	FUNCTION_51	IF_1
0x40022bb	              0x5d	                                 pop rbp	      1897	channel.c	FUNCTION_51
0x40022bc	            0x415c	                                 pop r12	      1897	channel.c	FUNCTION_51
0x40022be	            0x415d	                                 pop r13	      1897	channel.c	FUNCTION_51
0x40022c0	            0x415e	                                 pop r14	      1897	channel.c	FUNCTION_51
0x40022c2	              0xc3	                                     ret	      1897	channel.c	FUNCTION_51
0x40022c3	       0xf1f440000	                   nop dword [rax + rax]	      1897	channel.c	FUNCTION_51
0x40022c8	          0x4c89e7	                            mov rdi, r12	      1885	channel.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x40022cb	      0xe800000000	                          call 0x40022d0	      1885	channel.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x40022d0	            0x31c0	                            xor eax, eax	      1886	channel.c	FUNCTION_51	IF_2	IF_3
0x40022d2	            0xebca	                           jmp 0x400229e	      1886	channel.c	FUNCTION_51	IF_2	IF_3
channel_clear_one	DO,0:IF,0:FOR,0:ELSE,0:SWITCH,0:CALL,10:WHILE,4:functions,0	143
0x4002460	            0x4157	                                push r15	      2977	channel.c	FUNCTION_71
0x4002462	            0x4156	                                push r14	      2977	channel.c	FUNCTION_71
0x4002464	            0x4155	                                push r13	      2977	channel.c	FUNCTION_71
0x4002466	            0x4154	                                push r12	      2977	channel.c	FUNCTION_71
0x4002468	          0x4189f4	                           mov r12d, esi	      2977	channel.c	FUNCTION_71
0x400246b	          0x4c89e2	                            mov rdx, r12	      2979	channel.c	FUNCTION_71
0x400246e	          0x4c89e0	                            mov rax, r12	      2979	channel.c	FUNCTION_71
0x4002471	              0x55	                                push rbp	      2977	channel.c	FUNCTION_71
0x4002472	        0x48c1e204	                              shl rdx, 4	      2979	channel.c	FUNCTION_71
0x4002476	        0x48c1e008	                              shl rax, 8	      2979	channel.c	FUNCTION_71
0x400247a	              0x53	                                push rbx	      2977	channel.c	FUNCTION_71
0x400247b	          0x4801d0	                            add rax, rdx	      2979	channel.c	FUNCTION_71
0x400247e	          0x4889fd	                            mov rbp, rdi	      2977	channel.c	FUNCTION_71
0x4002481	          0x4c89e3	                            mov rbx, r12	      2977	channel.c	FUNCTION_71
0x4002484	      0x4c8d6c0750	            lea r13, [rdi + rax + 0x50] 	      2979	channel.c	FUNCTION_71
0x4002489	    0x4c8dbc07c000	            lea r15, [rdi + rax + 0xc0] 	      2980	channel.c	FUNCTION_71
0x4002491	          0x4801f8	                            add rax, rdi	      1615	channel.c	FUNCTION_44
0x4002494	        0x4883ec08	                              sub rsp, 8	      2977	channel.c	FUNCTION_71
0x4002498	      0x4883784000	               cmp qword [rax + 0x40], 0	      2982	channel.c	FUNCTION_71	WHILE_1	CALL_1
0x400249d	          0x4989c6	                            mov r14, rax	      2982	channel.c	FUNCTION_71	WHILE_1	CALL_1
0x40024a0	            0x741f	                            je 0x40024c1	      2982	channel.c	FUNCTION_71	WHILE_1	CALL_1
0x40024a2	    0x660f1f440000	                    nop word [rax + rax]	      2982	channel.c	FUNCTION_71	WHILE_1	CALL_1
0x40024a8	            0x89de	                            mov esi, ebx	      2983	channel.c	FUNCTION_71	CALL_3
0x40024aa	          0x4889ef	                            mov rdi, rbp	      2983	channel.c	FUNCTION_71	CALL_3
0x40024ad	      0xe800000000	                          call 0x40024b2	      2983	channel.c	FUNCTION_71	CALL_3
0x40024b2	          0x4889c7	                            mov rdi, rax	      2983	channel.c	FUNCTION_71	CALL_3
0x40024b5	      0xe800000000	                          call 0x40024ba	      2983	channel.c	FUNCTION_71	CALL_3
0x40024ba	      0x49837e4000	               cmp qword [r14 + 0x40], 0	      2982	channel.c	FUNCTION_71	WHILE_1	CALL_1
0x40024bf	            0x75e7	                           jne 0x40024a8	      2982	channel.c	FUNCTION_71	WHILE_1	CALL_1
0x40024c1	          0x4d89e6	                            mov r14, r12	      2985	channel.c	FUNCTION_71	WHILE_2
0x40024c4	          0x4c89e0	                            mov rax, r12	      2985	channel.c	FUNCTION_71	WHILE_2
0x40024c7	        0x49c1e604	                              shl r14, 4	      2985	channel.c	FUNCTION_71	WHILE_2
0x40024cb	        0x48c1e008	                              shl rax, 8	      2985	channel.c	FUNCTION_71	WHILE_2
0x40024cf	          0x4901c6	                            add r14, rax	      2985	channel.c	FUNCTION_71	WHILE_2
0x40024d2	          0x4901ee	                            add r14, rbp	      2985	channel.c	FUNCTION_71	WHILE_2
0x40024d5	    0x498b9ed80000	            mov rbx, qword [r14 + 0xd8] 	      2985	channel.c	FUNCTION_71	WHILE_2
0x40024dc	          0x4885db	                           test rbx, rbx	      2985	channel.c	FUNCTION_71	WHILE_2
0x40024df	            0x7538	                           jne 0x4002519	      2985	channel.c	FUNCTION_71	WHILE_2
0x40024e1	            0xeb5d	                           jmp 0x4002540	      2985	channel.c	FUNCTION_71	WHILE_2
0x40024e3	       0xf1f440000	                   nop dword [rax + rax]	      2985	channel.c	FUNCTION_71	WHILE_2
0x40024e8	        0x48895018	             mov qword [rax + 0x18], rdx	      2060	channel.c	FUNCTION_53	ELSE_1
0x40024ec	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      2061	channel.c	FUNCTION_53	IF_2
0x40024f0	          0x4885d2	                           test rdx, rdx	      2061	channel.c	FUNCTION_53	IF_2
0x40024f3	            0x7443	                            je 0x4002538	      2061	channel.c	FUNCTION_53	IF_2
0x40024f5	        0x48894220	             mov qword [rdx + 0x20], rax	      2064	channel.c	FUNCTION_53	ELSE_2
0x40024f9	        0x488b7308	                mov rsi, qword [rbx + 8]	      2990	channel.c	FUNCTION_71	WHILE_2	CALL_5
0x40024fd	          0x488b3b	                    mov rdi, qword [rbx]	      2990	channel.c	FUNCTION_71	WHILE_2	CALL_5
0x4002500	      0xe800000000	                          call 0x4002505	      2990	channel.c	FUNCTION_71	WHILE_2	CALL_5
0x4002505	          0x4889df	                            mov rdi, rbx	      2991	channel.c	FUNCTION_71	WHILE_2	CALL_6
0x4002508	      0xe800000000	                          call 0x400250d	      2991	channel.c	FUNCTION_71	WHILE_2	CALL_6
0x400250d	    0x498b9ed80000	            mov rbx, qword [r14 + 0xd8] 	      2985	channel.c	FUNCTION_71	WHILE_2
0x4002514	          0x4885db	                           test rbx, rbx	      2985	channel.c	FUNCTION_71	WHILE_2
0x4002517	            0x7427	                            je 0x4002540	      2985	channel.c	FUNCTION_71	WHILE_2
0x4002519	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      2985	channel.c	FUNCTION_71	WHILE_2
0x400251d	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      2058	channel.c	FUNCTION_53	IF_1
0x4002521	          0x4885c0	                           test rax, rax	      2057	channel.c	FUNCTION_53	IF_1
0x4002524	            0x75c2	                           jne 0x40024e8	      2057	channel.c	FUNCTION_53	IF_1
0x4002526	        0x49895718	             mov qword [r15 + 0x18], rdx	      2058	channel.c	FUNCTION_53	IF_1
0x400252a	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      2061	channel.c	FUNCTION_53	IF_2
0x400252e	          0x4885d2	                           test rdx, rdx	      2061	channel.c	FUNCTION_53	IF_2
0x4002531	            0x75c2	                           jne 0x40024f5	      2061	channel.c	FUNCTION_53	IF_2
0x4002533	       0xf1f440000	                   nop dword [rax + rax]	      2061	channel.c	FUNCTION_53	IF_2
0x4002538	        0x49894720	             mov qword [r15 + 0x20], rax	      2062	channel.c	FUNCTION_53	IF_2
0x400253c	            0xebbb	                           jmp 0x40024f9	      2062	channel.c	FUNCTION_53	IF_2
0x400253e	            0x6690	                                     nop	      2062	channel.c	FUNCTION_53	IF_2
0x4002540	          0x4c89e3	                            mov rbx, r12	      2994	channel.c	FUNCTION_71	WHILE_3
0x4002543	          0x4c89e0	                            mov rax, r12	      2994	channel.c	FUNCTION_71	WHILE_3
0x4002546	        0x48c1e008	                              shl rax, 8	      2994	channel.c	FUNCTION_71	WHILE_3
0x400254a	        0x48c1e304	                              shl rbx, 4	      2994	channel.c	FUNCTION_71	WHILE_3
0x400254e	          0x4801c3	                            add rbx, rax	      2994	channel.c	FUNCTION_71	WHILE_3
0x4002551	          0x4801eb	                            add rbx, rbp	      2994	channel.c	FUNCTION_71	WHILE_3
0x4002554	        0x488b4358	            mov rax, qword [rbx + 0x58] 	      2994	channel.c	FUNCTION_71	WHILE_3
0x4002558	          0x4885c0	                           test rax, rax	      2994	channel.c	FUNCTION_71	WHILE_3
0x400255b	            0x7522	                           jne 0x400257f	      2994	channel.c	FUNCTION_71	WHILE_3
0x400255d	            0xeb61	                           jmp 0x40025c0	      2994	channel.c	FUNCTION_71	WHILE_3
0x400255f	              0x90	                                     nop	      2994	channel.c	FUNCTION_71	WHILE_3
0x4002560	        0x48895008	                mov qword [rax + 8], rdx	      2077	channel.c	ELSE_2	FUNCTION_54	ELSE_1
0x4002564	        0x488b5708	                mov rdx, qword [rdi + 8]	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4002568	          0x4885d2	                           test rdx, rdx	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x400256b	            0x743b	                            je 0x40025a8	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x400256d	        0x48894210	             mov qword [rdx + 0x10], rax	      2081	channel.c	FUNCTION_54	ELSE_2
0x4002571	      0xe800000000	                          call 0x4002576	      2082	channel.c	FUNCTION_54	ELSE_2	CALL_1
0x4002576	        0x488b4358	            mov rax, qword [rbx + 0x58] 	      2994	channel.c	FUNCTION_71	WHILE_3
0x400257a	          0x4885c0	                           test rax, rax	      2994	channel.c	FUNCTION_71	WHILE_3
0x400257d	            0x7441	                            je 0x40025c0	      2994	channel.c	FUNCTION_71	WHILE_3
0x400257f	          0x488b38	                    mov rdi, qword [rax]	      2996	channel.c	FUNCTION_71	WHILE_3	CALL_7
0x4002582	      0xe800000000	                          call 0x4002587	      2996	channel.c	FUNCTION_71	WHILE_3	CALL_7
0x4002587	        0x488b7b58	            mov rdi, qword [rbx + 0x58] 	      2997	channel.c	FUNCTION_71	WHILE_3	CALL_8
0x400258b	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      2074	channel.c	ELSE_2	FUNCTION_54	IF_1
0x400258f	        0x488b5708	                mov rdx, qword [rdi + 8]	      2075	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4002593	          0x4885c0	                           test rax, rax	      2074	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4002596	            0x75c8	                           jne 0x4002560	      2074	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4002598	        0x49895508	                mov qword [r13 + 8], rdx	      2075	channel.c	ELSE_2	FUNCTION_54	IF_1
0x400259c	        0x488b5708	                mov rdx, qword [rdi + 8]	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x40025a0	          0x4885d2	                           test rdx, rdx	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x40025a3	            0x75c8	                           jne 0x400256d	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x40025a5	           0xf1f00	                         nop dword [rax]	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x40025a8	        0x49894510	             mov qword [r13 + 0x10], rax	      2079	channel.c	ELSE_2	FUNCTION_54	IF_2
0x40025ac	      0xe800000000	                          call 0x40025b1	      2082	channel.c	FUNCTION_54	ELSE_2	CALL_1
0x40025b1	        0x488b4358	            mov rax, qword [rbx + 0x58] 	      2994	channel.c	FUNCTION_71	WHILE_3
0x40025b5	          0x4885c0	                           test rax, rax	      2994	channel.c	FUNCTION_71	WHILE_3
0x40025b8	            0x75c5	                           jne 0x400257f	      2994	channel.c	FUNCTION_71	WHILE_3
0x40025ba	    0x660f1f440000	                    nop word [rax + rax]	      2994	channel.c	FUNCTION_71	WHILE_3
0x40025c0	          0x4c89e0	                            mov rax, r12	      3000	channel.c	FUNCTION_71	CALL_9
0x40025c3	        0x49c1e408	                              shl r12, 8	      3000	channel.c	FUNCTION_71	CALL_9
0x40025c7	        0x48c1e004	                              shl rax, 4	      3000	channel.c	FUNCTION_71	CALL_9
0x40025cb	          0x4901c4	                            add r12, rax	      3000	channel.c	FUNCTION_71	CALL_9
0x40025ce	      0x4e8d6c2500	                    lea r13, [rbp + r12]	      3000	channel.c	FUNCTION_71	CALL_9
0x40025d3	    0x4e8da4259800	            lea r12, [rbp + r12 + 0x98] 	      3000	channel.c	FUNCTION_71	CALL_9
0x40025db	    0x498bb5f00000	            mov rsi, qword [r13 + 0xf0] 	      3000	channel.c	FUNCTION_71	CALL_9
0x40025e2	    0x498bbde80000	            mov rdi, qword [r13 + 0xe8] 	      3000	channel.c	FUNCTION_71	CALL_9
0x40025e9	          0x4c89ed	                            mov rbp, r13	      3004	channel.c	FUNCTION_71	WHILE_4
0x40025ec	      0xe800000000	                          call 0x40025f1	      3000	channel.c	FUNCTION_71	CALL_9
0x40025f1	    0x498b9db00000	            mov rbx, qword [r13 + 0xb0] 	      3004	channel.c	FUNCTION_71	WHILE_4
0x40025f8	    0x49c785e80000	               mov qword [r13 + 0xe8], 0	      3001	channel.c	FUNCTION_71
0x4002603	    0x49c785f00000	               mov qword [r13 + 0xf0], 0	      3002	channel.c	FUNCTION_71
0x400260e	          0x4885db	                           test rbx, rbx	      3004	channel.c	FUNCTION_71	WHILE_4
0x4002611	            0x7521	                           jne 0x4002634	      3004	channel.c	FUNCTION_71	WHILE_4
0x4002613	            0xeb43	                           jmp 0x4002658	      3004	channel.c	FUNCTION_71	WHILE_4
0x4002615	           0xf1f00	                         nop dword [rax]	      3004	channel.c	FUNCTION_71	WHILE_4
0x4002618	    0x48c740200000	               mov qword [rax + 0x20], 0	      2968	channel.c	FUNCTION_70	ELSE_1
0x4002620	          0x4889df	                            mov rdi, rbx	      2969	channel.c	FUNCTION_70	CALL_2
0x4002623	      0xe800000000	                          call 0x4002628	      2969	channel.c	FUNCTION_70	CALL_2
0x4002628	    0x488b9db00000	            mov rbx, qword [rbp + 0xb0] 	      3004	channel.c	FUNCTION_71	WHILE_4
0x400262f	          0x4885db	                           test rbx, rbx	      3004	channel.c	FUNCTION_71	WHILE_4
0x4002632	            0x7424	                            je 0x4002658	      3004	channel.c	FUNCTION_71	WHILE_4
0x4002634	          0x4889df	                            mov rdi, rbx	      2963	channel.c	FUNCTION_70	CALL_1
0x4002637	      0xe800000000	                          call 0x400263c	      2963	channel.c	FUNCTION_70	CALL_1
0x400263c	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2964	channel.c	FUNCTION_70
0x4002640	          0x4885c0	                           test rax, rax	      2965	channel.c	FUNCTION_70	IF_1
0x4002643	      0x4989442418	             mov qword [r12 + 0x18], rax	      2964	channel.c	FUNCTION_70
0x4002648	            0x75ce	                           jne 0x4002618	      2965	channel.c	FUNCTION_70	IF_1
0x400264a	    0x49c744242000	               mov qword [r12 + 0x20], 0	      2966	channel.c	FUNCTION_70	IF_1
0x4002653	            0xebcb	                           jmp 0x4002620	      2966	channel.c	FUNCTION_70	IF_1
0x4002655	           0xf1f00	                         nop dword [rax]	      2966	channel.c	FUNCTION_70	IF_1
0x4002658	        0x4883c408	                              add rsp, 8	      3007	channel.c	FUNCTION_71
0x400265c	              0x5b	                                 pop rbx	      3007	channel.c	FUNCTION_71
0x400265d	              0x5d	                                 pop rbp	      3007	channel.c	FUNCTION_71
0x400265e	            0x415c	                                 pop r12	      3007	channel.c	FUNCTION_71
0x4002660	            0x415d	                                 pop r13	      3007	channel.c	FUNCTION_71
0x4002662	            0x415e	                                 pop r14	      3007	channel.c	FUNCTION_71
0x4002664	            0x415f	                                 pop r15	      3007	channel.c	FUNCTION_71
0x4002666	              0xc3	                                     ret	      3007	channel.c	FUNCTION_71
ch_close_part_on_error	DO,0:IF,4:FOR,0:ELSE,1:SWITCH,0:CALL,7:WHILE,0:functions,0	93
0x4001040	            0x4154	                                push r12	      3232	channel.c	FUNCTION_77
0x4001042	              0x55	                                push rbp	      3232	channel.c	FUNCTION_77
0x4001043	          0x4889c8	                            mov rax, rcx	      3232	channel.c	FUNCTION_77
0x4001046	              0x53	                                push rbx	      3232	channel.c	FUNCTION_77
0x4001047	    0x48b925732829	          movabs rcx, 0x6552203a29287325	      3233	channel.c	FUNCTION_77
0x4001051	          0x4889fd	                            mov rbp, rdi	      3232	channel.c	FUNCTION_77
0x4001054	    0x48bf61642025	          movabs rdi, 0x7266207325206461	      3233	channel.c	FUNCTION_77
0x400105e	          0x4189f4	                           mov r12d, esi	      3232	channel.c	FUNCTION_77
0x4001061	        0x4883ec30	                           sub rsp, 0x30	      3232	channel.c	FUNCTION_77
0x4001065	          0x4589e0	                           mov r8d, r12d	      3237	channel.c	FUNCTION_77	CALL_1
0x4001068	    0x64488b342528	                mov rsi, qword fs:[0x28]	      3232	channel.c	FUNCTION_77
0x4001071	      0x4889742428	             mov qword [rsp + 0x28], rsi	      3232	channel.c	FUNCTION_77
0x4001076	            0x31f6	                            xor esi, esi	      3232	channel.c	FUNCTION_77
0x4001078	        0x48890c24	                    mov qword [rsp], rcx	      3233	channel.c	FUNCTION_77
0x400107c	      0x48897c2408	                mov qword [rsp + 8], rdi	      3233	channel.c	FUNCTION_77
0x4001081	    0x48be6f6d2063	          movabs rsi, 0x61705f6863206d6f	      3233	channel.c	FUNCTION_77
0x400108b	    0x48b972745b25	          movabs rcx, 0x202c5d64255b7472	      3233	channel.c	FUNCTION_77
0x4001095	    0x48bf636c6f73	            movabs rdi, 0x676e69736f6c63	      3233	channel.c	FUNCTION_77
0x400109f	            0x85d2	                           test edx, edx	      3235	channel.c	FUNCTION_77	IF_1
0x40010a1	      0x4889742410	             mov qword [rsp + 0x10], rsi	      3233	channel.c	FUNCTION_77
0x40010a6	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      3233	channel.c	FUNCTION_77
0x40010ab	      0x48897c2420	             mov qword [rsp + 0x20], rdi	      3233	channel.c	FUNCTION_77
0x40010b0	     0xf8492000000	                            je 0x4001148	      3235	channel.c	FUNCTION_77	IF_1
0x40010b6	          0x4889c2	                            mov rdx, rax	      3237	channel.c	FUNCTION_77	CALL_1
0x40010b9	      0xb900000000	                              mov ecx, 0	      3237	channel.c	FUNCTION_77	CALL_1
0x40010be	          0x4889e6	                            mov rsi, rsp	      3237	channel.c	FUNCTION_77	CALL_1
0x40010c1	          0x4889ef	                            mov rdi, rbp	      3237	channel.c	FUNCTION_77	CALL_1
0x40010c4	            0x31c0	                            xor eax, eax	      3237	channel.c	FUNCTION_77	CALL_1
0x40010c6	      0xe845f0ffff	                       call sym.ch_error	      3237	channel.c	FUNCTION_77	CALL_1
0x40010cb	    0x4883bd780400	              cmp qword [rbp + 0x478], 0	      3252	channel.c	FUNCTION_77	IF_2
0x40010d3	            0x741d	                            je 0x40010f2	      3252	channel.c	FUNCTION_77	IF_2
0x40010d5	    0x41b900000000	                              mov r9d, 0	      3253	channel.c	FUNCTION_77	IF_2	CALL_3
0x40010db	          0x4531c0	                            xor r8d, r8d	      3253	channel.c	FUNCTION_77	IF_2	CALL_3
0x40010de	      0xb907000000	                              mov ecx, 7	      3253	channel.c	FUNCTION_77	IF_2	CALL_3
0x40010e3	      0xba00000000	                              mov edx, 0	      3253	channel.c	FUNCTION_77	IF_2	CALL_3
0x40010e8	            0x31f6	                            xor esi, esi	      3253	channel.c	FUNCTION_77	IF_2	CALL_3
0x40010ea	          0x4889ef	                            mov rdi, rbp	      3253	channel.c	FUNCTION_77	IF_2	CALL_3
0x40010ed	      0xe84ef2ffff	                   call sym.channel_save	      3253	channel.c	FUNCTION_77	IF_2	CALL_3
0x40010f2	      0x418d4424ff	                      lea eax, [r12 - 1]	      3260	channel.c	FUNCTION_77	IF_3
0x40010f7	          0x4489e3	                           mov ebx, r12d	      3260	channel.c	FUNCTION_77	IF_3
0x40010fa	          0x83f801	                              cmp eax, 1	      3260	channel.c	FUNCTION_77	IF_3
0x40010fd	            0x7669	                           jbe 0x4001168	      3260	channel.c	FUNCTION_77	IF_3
0x40010ff	          0x4489e6	                           mov esi, r12d	      3267	channel.c	FUNCTION_77	CALL_6
0x4001102	          0x4889ef	                            mov rdi, rbp	      3267	channel.c	FUNCTION_77	CALL_6
0x4001105	      0xe8a6f4ffff	                  call sym.ch_close_part	      3267	channel.c	FUNCTION_77	CALL_6
0x400110a	          0x4889d8	                            mov rax, rbx	       614	channel.c	FUNCTION_25	IF_2
0x400110d	        0x48c1e308	                              shl rbx, 8	       614	channel.c	FUNCTION_25	IF_2
0x4001111	        0x48c1e004	                              shl rax, 4	       614	channel.c	FUNCTION_25	IF_2
0x4001115	          0x4801c3	                            add rbx, rax	       614	channel.c	FUNCTION_25	IF_2
0x4001118	        0x8b441d1c	      mov eax, dword [rbp + rbx + 0x1c] 	       614	channel.c	FUNCTION_25	IF_2
0x400111c	            0x85c0	                           test eax, eax	       614	channel.c	FUNCTION_25	IF_2
0x400111e	            0x740b	                            je 0x400112b	       614	channel.c	FUNCTION_25	IF_2
0x4001120	          0x4489e6	                           mov esi, r12d	       614	channel.c	FUNCTION_25	IF_2
0x4001123	          0x4889ef	                            mov rdi, rbp	       614	channel.c	FUNCTION_25	IF_2
0x4001126	      0xe8c5feffff	call sym.channel_gui_unregister_one.part.10	       614	channel.c	FUNCTION_25	IF_2
0x400112b	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      3273	channel.c	FUNCTION_77
0x4001130	    0x644833042528	                xor rax, qword fs:[0x28]	      3273	channel.c	FUNCTION_77
0x4001139	            0x7576	                           jne 0x40011b1	      3273	channel.c	FUNCTION_77
0x400113b	        0x4883c430	                           add rsp, 0x30	      3273	channel.c	FUNCTION_77
0x400113f	              0x5b	                                 pop rbx	      3273	channel.c	FUNCTION_77
0x4001140	              0x5d	                                 pop rbp	      3273	channel.c	FUNCTION_77
0x4001141	            0x415c	                                 pop r12	      3273	channel.c	FUNCTION_77
0x4001143	              0xc3	                                     ret	      3273	channel.c	FUNCTION_77
0x4001144	         0xf1f4000	                         nop dword [rax]	      3273	channel.c	FUNCTION_77
0x4001148	          0x4889c2	                            mov rdx, rax	      3239	channel.c	FUNCTION_77	CALL_2
0x400114b	      0xb900000000	                              mov ecx, 0	      3239	channel.c	FUNCTION_77	CALL_2
0x4001150	          0x4889e6	                            mov rsi, rsp	      3239	channel.c	FUNCTION_77	CALL_2
0x4001153	          0x4889ef	                            mov rdi, rbp	      3239	channel.c	FUNCTION_77	CALL_2
0x4001156	            0x31c0	                            xor eax, eax	      3239	channel.c	FUNCTION_77	CALL_2
0x4001158	      0xe800000000	                          call 0x400115d	      3239	channel.c	FUNCTION_77	CALL_2
0x400115d	      0xe969ffffff	                           jmp 0x40010cb	      3239	channel.c	FUNCTION_77	CALL_2
0x4001162	    0x660f1f440000	                    nop word [rax + rax]	      3239	channel.c	FUNCTION_77	CALL_2
0x4001168	            0x31f6	                            xor esi, esi	      3262	channel.c	FUNCTION_77	IF_3
0x400116a	        0x4183fc01	                             cmp r12d, 1	      3262	channel.c	FUNCTION_77	IF_3
0x400116e	          0x4889da	                            mov rdx, rbx	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4001171	        0x400f94c6	                                sete sil	      3262	channel.c	FUNCTION_77	IF_3
0x4001175	          0x4889d8	                            mov rax, rbx	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4001178	        0x48c1e204	                              shl rdx, 4	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x400117c	        0x48c1e008	                              shl rax, 8	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4001180	          0x83c601	                              add esi, 1	      3262	channel.c	FUNCTION_77	IF_3
0x4001183	          0x4801c2	                            add rdx, rax	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4001186	            0x89f0	                            mov eax, esi	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4001188	          0x4889c1	                            mov rcx, rax	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x400118b	        0x48c1e008	                              shl rax, 8	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x400118f	        0x48c1e104	                              shl rcx, 4	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4001193	          0x4801c8	                            add rax, rcx	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4001196	        0x8b440518	      mov eax, dword [rbp + rax + 0x18] 	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x400119a	        0x39441518	      cmp dword [rbp + rdx + 0x18], eax 	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x400119e	     0xf855bffffff	                           jne 0x40010ff	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x40011a4	          0x4889ef	                            mov rdi, rbp	      3265	channel.c	FUNCTION_77	IF_3	CALL_5
0x40011a7	      0xe804f4ffff	                  call sym.ch_close_part	      3265	channel.c	FUNCTION_77	IF_3	CALL_5
0x40011ac	      0xe94effffff	                           jmp 0x40010ff	      3265	channel.c	FUNCTION_77	IF_3	CALL_5
0x40011b1	      0xe800000000	                          call 0x40011b6	      3273	channel.c	FUNCTION_77
send_common	DO,0:IF,5:FOR,0:ELSE,0:SWITCH,0:CALL,10:WHILE,0:functions,0	91
0x4007af0	            0x4157	                                push r15	      3883	channel.c	FUNCTION_88
0x4007af2	            0x4156	                                push r14	      3883	channel.c	FUNCTION_88
0x4007af4	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_138	CALL_6
0x4007af6	            0x4155	                                push r13	      3883	channel.c	FUNCTION_88
0x4007af8	            0x4154	                                push r12	      3883	channel.c	FUNCTION_88
0x4007afa	          0x4989fe	                            mov r14, rdi	      3883	channel.c	FUNCTION_88
0x4007afd	              0x55	                                push rbp	      3883	channel.c	FUNCTION_88
0x4007afe	              0x53	                                push rbx	      3883	channel.c	FUNCTION_88
0x4007aff	          0x4c89c7	                             mov rdi, r8	        90	string3.h	FUNCTION_138	CALL_6
0x4007b02	          0x4989f4	                            mov r12, rsi	      3883	channel.c	FUNCTION_88
0x4007b05	      0xbe01000000	                              mov esi, 1	      3888	channel.c	FUNCTION_88	CALL_2
0x4007b0a	          0x4c89c5	                             mov rbp, r8	      3883	channel.c	FUNCTION_88
0x4007b0d	        0x4883ec18	                           sub rsp, 0x18	      3883	channel.c	FUNCTION_88
0x4007b11	          0x4d89cd	                             mov r13, r9	      3883	channel.c	FUNCTION_88
0x4007b14	        0x894c2408	                mov dword [rsp + 8], ecx	      3883	channel.c	FUNCTION_88
0x4007b18	      0xb96f000000	                           mov ecx, 0x6f	        90	string3.h	FUNCTION_138	CALL_6
0x4007b1d	        0x8954240c	              mov dword [rsp + 0xc], edx	      3883	channel.c	FUNCTION_88
0x4007b21	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_138	CALL_6
0x4007b24	            0x31d2	                            xor edx, edx	      3888	channel.c	FUNCTION_88	CALL_2
0x4007b26	          0x4c89f7	                            mov rdi, r14	      3888	channel.c	FUNCTION_88	CALL_2
0x4007b29	      0xe800000000	                          call 0x4007b2e	      3888	channel.c	FUNCTION_88	CALL_2
0x4007b2e	          0x4885c0	                           test rax, rax	      3889	channel.c	FUNCTION_88	IF_1
0x4007b31	     0xf84cd000000	                            je 0x4007c04	      3889	channel.c	FUNCTION_88	IF_1
0x4007b37	          0x4531ff	                          xor r15d, r15d	      4357	channel.c	FUNCTION_98
0x4007b3a	        0x837818ff	cmp dword [rax + 0x18], 0xffffffffffffffff	      4357	channel.c	FUNCTION_98
0x4007b3e	      0x488b742450	            mov rsi, qword [rsp + 0x50] 	      3892	channel.c	FUNCTION_88	CALL_4
0x4007b43	          0x4889c3	                            mov rbx, rax	      3892	channel.c	FUNCTION_88	CALL_4
0x4007b46	        0x498d7e20	                   lea rdi, [r14 + 0x20]	      3894	channel.c	FUNCTION_88	IF_2	CALL_5
0x4007b4a	      0xba10020000	                          mov edx, 0x210	      3894	channel.c	FUNCTION_88	IF_2	CALL_5
0x4007b4f	           0xf94c0	                                 sete al	      4357	channel.c	FUNCTION_98
0x4007b52	        0x410f94c7	                               sete r15b	      4357	channel.c	FUNCTION_98
0x4007b56	            0x31c9	                            xor ecx, ecx	      3894	channel.c	FUNCTION_88	IF_2	CALL_5
0x4007b58	           0xfb6c0	                           movzx eax, al	      4357	channel.c	FUNCTION_98
0x4007b5b	        0x478d3c7f	                 lea r15d, [r15 + r15*2]	      4357	channel.c	FUNCTION_98
0x4007b5f	            0x8906	                    mov dword [rsi], eax	      3892	channel.c	FUNCTION_88	CALL_4
0x4007b61	          0x4889ee	                            mov rsi, rbp	      3894	channel.c	FUNCTION_88	IF_2	CALL_5
0x4007b64	      0xe800000000	                          call 0x4007b69	      3894	channel.c	FUNCTION_88	IF_2	CALL_5
0x4007b69	            0x85c0	                           test eax, eax	      3894	channel.c	FUNCTION_88	IF_2	CALL_5
0x4007b6b	     0xf8493000000	                            je 0x4007c04	      3894	channel.c	FUNCTION_88	IF_2	CALL_5
0x4007b71	    0x488b95a00100	           mov rdx, qword [rbp + 0x1a0] 	      3900	channel.c	FUNCTION_88	IF_3
0x4007b78	          0x4885d2	                           test rdx, rdx	      3900	channel.c	FUNCTION_88	IF_3
0x4007b7b	            0x7428	                            je 0x4007ba5	      3900	channel.c	FUNCTION_88	IF_3
0x4007b7d	          0x803a00	                       cmp byte [rdx], 0	      3900	channel.c	FUNCTION_88	IF_3
0x4007b80	            0x7423	                            je 0x4007ba5	      3900	channel.c	FUNCTION_88	IF_3
0x4007b82	        0x8b442408	                mov eax, dword [rsp + 8]	      3902	channel.c	FUNCTION_88	IF_3	IF_4
0x4007b86	            0x85c0	                           test eax, eax	      3902	channel.c	FUNCTION_88	IF_3	IF_4
0x4007b88	            0x755e	                           jne 0x4007be8	      3902	channel.c	FUNCTION_88	IF_3	IF_4
0x4007b8a	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      3907	channel.c	FUNCTION_88	IF_3	CALL_8
0x4007b8f	    0x488b8da80100	           mov rcx, qword [rbp + 0x1a8] 	      3907	channel.c	FUNCTION_88	IF_3	CALL_8
0x4007b96	          0x4889df	                            mov rdi, rbx	      3907	channel.c	FUNCTION_88	IF_3	CALL_8
0x4007b99	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      3907	channel.c	FUNCTION_88	IF_3	CALL_8
0x4007b9e	            0x8b30	                    mov esi, dword [rax]	      3907	channel.c	FUNCTION_88	IF_3	CALL_8
0x4007ba0	      0xe800000000	                          call 0x4007ba5	      3907	channel.c	FUNCTION_88	IF_3	CALL_8
0x4007ba5	          0x4c89e7	                            mov rdi, r12	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x4007ba8	      0xe800000000	                          call 0x4007bad	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x4007bad	          0x4d89e8	                             mov r8, r13	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x4007bb0	            0x89c1	                            mov ecx, eax	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x4007bb2	          0x4c89e2	                            mov rdx, r12	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x4007bb5	          0x4489fe	                           mov esi, r15d	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x4007bb8	          0x4889df	                            mov rdi, rbx	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x4007bbb	      0xe800000000	                          call 0x4007bc0	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x4007bc0	          0x83f801	                              cmp eax, 1	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x4007bc3	            0x753f	                           jne 0x4007c04	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x4007bc5	    0x4883bda00100	              cmp qword [rbp + 0x1a0], 0	      3912	channel.c	FUNCTION_88	IF_5
0x4007bcd	            0x7535	                           jne 0x4007c04	      3912	channel.c	FUNCTION_88	IF_5
0x4007bcf	        0x4883c418	                           add rsp, 0x18	      3915	channel.c	FUNCTION_88
0x4007bd3	          0x4889d8	                            mov rax, rbx	      3915	channel.c	FUNCTION_88
0x4007bd6	              0x5b	                                 pop rbx	      3915	channel.c	FUNCTION_88
0x4007bd7	              0x5d	                                 pop rbp	      3915	channel.c	FUNCTION_88
0x4007bd8	            0x415c	                                 pop r12	      3915	channel.c	FUNCTION_88
0x4007bda	            0x415d	                                 pop r13	      3915	channel.c	FUNCTION_88
0x4007bdc	            0x415e	                                 pop r14	      3915	channel.c	FUNCTION_88
0x4007bde	            0x415f	                                 pop r15	      3915	channel.c	FUNCTION_88
0x4007be0	              0xc3	                                     ret	      3915	channel.c	FUNCTION_88
0x4007be1	     0xf1f80000000	                         nop dword [rax]	      3915	channel.c	FUNCTION_88
0x4007be8	      0xbe00000000	                              mov esi, 0	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x4007bed	            0x31ff	                            xor edi, edi	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x4007bef	      0xba05000000	                              mov edx, 5	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x4007bf4	      0xe800000000	                          call 0x4007bf9	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x4007bf9	          0x4c89ee	                            mov rsi, r13	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x4007bfc	          0x4889c7	                            mov rdi, rax	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x4007bff	      0xe800000000	                          call 0x4007c04	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x4007c04	        0x4883c418	                           add rsp, 0x18	      3915	channel.c	FUNCTION_88
0x4007c08	            0x31c0	                            xor eax, eax	      3905	channel.c	FUNCTION_88	IF_3	IF_4
0x4007c0a	              0x5b	                                 pop rbx	      3915	channel.c	FUNCTION_88
0x4007c0b	              0x5d	                                 pop rbp	      3915	channel.c	FUNCTION_88
0x4007c0c	            0x415c	                                 pop r12	      3915	channel.c	FUNCTION_88
0x4007c0e	            0x415d	                                 pop r13	      3915	channel.c	FUNCTION_88
0x4007c10	            0x415e	                                 pop r14	      3915	channel.c	FUNCTION_88
0x4007c12	            0x415f	                                 pop r15	      3915	channel.c	FUNCTION_88
0x4007c14	              0xc3	                                     ret	      3915	channel.c	FUNCTION_88
free_unused_channels_contents	DO,0:IF,1:FOR,1:ELSE,0:SWITCH,0:CALL,2:WHILE,0:functions,0	42
0x4005790	            0x4154	                                push r12	       426	channel.c	FUNCTION_16
0x4005792	    0x8b0500000000	            mov eax, dword [0x04005798] 	       432	channel.c	FUNCTION_16
0x4005798	              0x55	                                push rbp	       426	channel.c	FUNCTION_16
0x4005799	              0x53	                                push rbx	       426	channel.c	FUNCTION_16
0x400579a	    0x488b1d000000	            mov rbx, qword [0x040057a1] 	       434	channel.c	FUNCTION_16	FOR_1
0x40057a1	          0x83c001	                              add eax, 1	       432	channel.c	FUNCTION_16
0x40057a4	    0x890500000000	            mov dword [0x040057aa], eax 	       432	channel.c	FUNCTION_16
0x40057aa	          0x4885db	                           test rbx, rbx	       434	channel.c	FUNCTION_16	FOR_1
0x40057ad	            0x7467	                            je 0x4005816	       434	channel.c	FUNCTION_16	FOR_1
0x40057af	          0x4189f4	                           mov r12d, esi	       434	channel.c	FUNCTION_16	FOR_1
0x40057b2	            0x89fd	                            mov ebp, edi	       434	channel.c	FUNCTION_16	FOR_1
0x40057b4	            0x31f6	                            xor esi, esi	       434	channel.c	FUNCTION_16	FOR_1
0x40057b6	            0xeb10	                           jmp 0x40057c8	       434	channel.c	FUNCTION_16	FOR_1
0x40057b8	     0xf1f84000000	                   nop dword [rax + rax]	       434	channel.c	FUNCTION_16	FOR_1
0x40057c0	          0x488b1b	                    mov rbx, qword [rbx]	       434	channel.c	FUNCTION_16	FOR_1
0x40057c3	          0x4885db	                           test rbx, rbx	       434	channel.c	FUNCTION_16	FOR_1
0x40057c6	            0x7438	                            je 0x4005800	       434	channel.c	FUNCTION_16	FOR_1
0x40057c8	          0x4889df	                            mov rdi, rbx	       435	channel.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0x40057cb	      0xe850b3ffff	           call sym.channel_still_useful	       435	channel.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0x40057d0	            0x85c0	                           test eax, eax	       435	channel.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0x40057d2	            0x75ec	                           jne 0x40057c0	       435	channel.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0x40057d4	    0x8b83b8040000	           mov eax, dword [rbx + 0x4b8] 	       436	channel.c	FUNCTION_16	FOR_1	IF_1
0x40057da	            0x31e8	                            xor eax, ebp	       436	channel.c	FUNCTION_16	FOR_1	IF_1
0x40057dc	          0x4485e0	                          test eax, r12d	       436	channel.c	FUNCTION_16	FOR_1	IF_1
0x40057df	            0x74df	                            je 0x40057c0	       436	channel.c	FUNCTION_16	FOR_1	IF_1
0x40057e1	          0x4889df	                            mov rdi, rbx	       440	channel.c	FUNCTION_16	FOR_1	IF_1	CALL_2
0x40057e4	      0xe837f6ffff	          call sym.channel_free_contents	       440	channel.c	FUNCTION_16	FOR_1	IF_1	CALL_2
0x40057e9	          0x488b1b	                    mov rbx, qword [rbx]	       434	channel.c	FUNCTION_16	FOR_1
0x40057ec	      0xbe01000000	                              mov esi, 1	       441	channel.c	FUNCTION_16	FOR_1	IF_1
0x40057f1	          0x4885db	                           test rbx, rbx	       434	channel.c	FUNCTION_16	FOR_1
0x40057f4	            0x75d2	                           jne 0x40057c8	       434	channel.c	FUNCTION_16	FOR_1
0x40057f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       434	channel.c	FUNCTION_16	FOR_1
0x4005800	    0x8b0500000000	            mov eax, dword [0x04005806] 	       434	channel.c	FUNCTION_16	FOR_1
0x4005806	          0x83e801	                              sub eax, 1	       444	channel.c	FUNCTION_16
0x4005809	              0x5b	                                 pop rbx	       446	channel.c	FUNCTION_16
0x400580a	    0x890500000000	            mov dword [0x04005810], eax 	       444	channel.c	FUNCTION_16
0x4005810	            0x89f0	                            mov eax, esi	       446	channel.c	FUNCTION_16
0x4005812	              0x5d	                                 pop rbp	       446	channel.c	FUNCTION_16
0x4005813	            0x415c	                                 pop r12	       446	channel.c	FUNCTION_16
0x4005815	              0xc3	                                     ret	       446	channel.c	FUNCTION_16
0x4005816	            0x31f6	                            xor esi, esi	       427	channel.c	FUNCTION_16
0x4005818	            0xebec	                           jmp 0x4005806	       427	channel.c	FUNCTION_16
channel_set_req_callback	DO,0:IF,3:FOR,0:ELSE,2:SWITCH,0:CALL,3:WHILE,0:functions,0	55
0x4001c80	            0x4157	                                push r15	      1302	channel.c	FUNCTION_35
0x4001c82	            0x4156	                                push r14	      1302	channel.c	FUNCTION_35
0x4001c84	          0x4989d7	                            mov r15, rdx	      1302	channel.c	FUNCTION_35
0x4001c87	            0x4155	                                push r13	      1302	channel.c	FUNCTION_35
0x4001c89	            0x4154	                                push r12	      1302	channel.c	FUNCTION_35
0x4001c8b	          0x4989fc	                            mov r12, rdi	      1302	channel.c	FUNCTION_35
0x4001c8e	              0x55	                                push rbp	      1302	channel.c	FUNCTION_35
0x4001c8f	              0x53	                                push rbx	      1302	channel.c	FUNCTION_35
0x4001c90	      0xbf28000000	                           mov edi, 0x28	      1304	channel.c	FUNCTION_35	CALL_1
0x4001c95	            0x89f3	                            mov ebx, esi	      1302	channel.c	FUNCTION_35
0x4001c97	          0x4989cd	                            mov r13, rcx	      1302	channel.c	FUNCTION_35
0x4001c9a	          0x4589c6	                           mov r14d, r8d	      1302	channel.c	FUNCTION_35
0x4001c9d	        0x4883ec08	                              sub rsp, 8	      1302	channel.c	FUNCTION_35
0x4001ca1	      0xe800000000	                          call 0x4001ca6	      1304	channel.c	FUNCTION_35	CALL_1
0x4001ca6	          0x4885c0	                           test rax, rax	      1306	channel.c	FUNCTION_35	IF_1
0x4001ca9	            0x7452	                            je 0x4001cfd	      1306	channel.c	FUNCTION_35	IF_1
0x4001cab	          0x4d85ed	                           test r13, r13	      1309	channel.c	FUNCTION_35	IF_1	IF_2
0x4001cae	          0x4889c5	                            mov rbp, rax	      1309	channel.c	FUNCTION_35	IF_1	IF_2
0x4001cb1	        0x4c896808	                mov qword [rax + 8], r13	      1308	channel.c	FUNCTION_35	IF_1
0x4001cb5	            0x7469	                            je 0x4001d20	      1309	channel.c	FUNCTION_35	IF_1	IF_2
0x4001cb7	      0x4183450001	                      add dword [r13], 1	      1311	channel.c	FUNCTION_35	IF_1	IF_2
0x4001cbc	          0x4c8938	                    mov qword [rax], r15	      1312	channel.c	FUNCTION_35	IF_1	IF_2
0x4001cbf	            0x89de	                            mov esi, ebx	      1320	channel.c	FUNCTION_35	IF_1
0x4001cc1	        0x44897510	           mov dword [rbp + 0x10], r14d 	      1319	channel.c	FUNCTION_35	IF_1
0x4001cc5	          0x4889f7	                            mov rdi, rsi	      1320	channel.c	FUNCTION_35	IF_1
0x4001cc8	        0x48c1e608	                              shl rsi, 8	      1320	channel.c	FUNCTION_35	IF_1
0x4001ccc	        0x48c1e704	                              shl rdi, 4	      1320	channel.c	FUNCTION_35	IF_1
0x4001cd0	          0x4801f7	                            add rdi, rsi	      1320	channel.c	FUNCTION_35	IF_1
0x4001cd3	          0x4c01e7	                            add rdi, r12	      1320	channel.c	FUNCTION_35	IF_1
0x4001cd6	    0x488b87e00000	            mov rax, qword [rdi + 0xe0] 	      1320	channel.c	FUNCTION_35	IF_1
0x4001cdd	        0x48894520	            mov qword [rbp + 0x20], rax 	      1320	channel.c	FUNCTION_35	IF_1
0x4001ce1	    0x4889afe00000	             mov qword [rdi + 0xe0], rbp	      1321	channel.c	FUNCTION_35	IF_1
0x4001ce8	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1323	channel.c	FUNCTION_35	IF_1	IF_3
0x4001cec	    0x48c745180000	               mov qword [rbp + 0x18], 0	      1322	channel.c	FUNCTION_35	IF_1
0x4001cf4	          0x4885c0	                           test rax, rax	      1323	channel.c	FUNCTION_35	IF_1	IF_3
0x4001cf7	            0x7417	                            je 0x4001d10	      1323	channel.c	FUNCTION_35	IF_1	IF_3
0x4001cf9	        0x48896818	             mov qword [rax + 0x18], rbp	      1326	channel.c	FUNCTION_35	IF_1	ELSE_2
0x4001cfd	        0x4883c408	                              add rsp, 8	      1328	channel.c	FUNCTION_35	ELSE_2
0x4001d01	              0x5b	                                 pop rbx	      1328	channel.c	FUNCTION_35	ELSE_2
0x4001d02	              0x5d	                                 pop rbp	      1328	channel.c	FUNCTION_35	ELSE_2
0x4001d03	            0x415c	                                 pop r12	      1328	channel.c	FUNCTION_35	ELSE_2
0x4001d05	            0x415d	                                 pop r13	      1328	channel.c	FUNCTION_35	ELSE_2
0x4001d07	            0x415e	                                 pop r14	      1328	channel.c	FUNCTION_35	ELSE_2
0x4001d09	            0x415f	                                 pop r15	      1328	channel.c	FUNCTION_35	ELSE_2
0x4001d0b	              0xc3	                                     ret	      1328	channel.c	FUNCTION_35	ELSE_2
0x4001d0c	         0xf1f4000	                         nop dword [rax]	      1328	channel.c	FUNCTION_35	ELSE_2
0x4001d10	    0x4889afd80000	             mov qword [rdi + 0xd8], rbp	      1324	channel.c	FUNCTION_35	IF_1	IF_3
0x4001d17	            0xebe4	                           jmp 0x4001cfd	      1324	channel.c	FUNCTION_35	IF_1	IF_3
0x4001d19	     0xf1f80000000	                         nop dword [rax]	      1324	channel.c	FUNCTION_35	IF_1	IF_3
0x4001d20	          0x4c89ff	                            mov rdi, r15	      1316	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_2
0x4001d23	      0xe800000000	                          call 0x4001d28	      1316	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_2
0x4001d28	        0x48894500	                    mov qword [rbp], rax	      1316	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_2
0x4001d2c	          0x4889c7	                            mov rdi, rax	      1317	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_3
0x4001d2f	      0xe800000000	                          call 0x4001d34	      1317	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_3
0x4001d34	            0xeb89	                           jmp 0x4001cbf	      1317	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_3
ch_raw_common	DO,0:IF,2:FOR,0:ELSE,1:SWITCH,0:CALL,5:WHILE,0:functions,0	76
0x4007c20	            0x4155	                                push r13	      3984	channel.c	FUNCTION_90
0x4007c22	            0x4154	                                push r12	      3984	channel.c	FUNCTION_90
0x4007c24	          0x4189d5	                           mov r13d, edx	      3984	channel.c	FUNCTION_90
0x4007c27	              0x55	                                push rbp	      3984	channel.c	FUNCTION_90
0x4007c28	              0x53	                                push rbx	      3984	channel.c	FUNCTION_90
0x4007c29	          0x4889f3	                            mov rbx, rsi	      3984	channel.c	FUNCTION_90
0x4007c2c	          0x4889fd	                            mov rbp, rdi	      3984	channel.c	FUNCTION_90
0x4007c2f	        0x4883c710	                           add rdi, 0x10	      3996	channel.c	FUNCTION_90	CALL_1
0x4007c33	    0x4881ece80300	                          sub rsp, 0x3e8	      3984	channel.c	FUNCTION_90
0x4007c3a	    0xc70602000000	                      mov dword [rsi], 2	      3993	channel.c	FUNCTION_90
0x4007c40	    0x48c746080000	                  mov qword [rsi + 8], 0	      3994	channel.c	FUNCTION_90
0x4007c48	    0x488db4249003	                  lea rsi, [rsp + 0x390]	      3996	channel.c	FUNCTION_90	CALL_1
0x4007c50	      0x4c8d642410	                   lea r12, [rsp + 0x10]	      3997	channel.c	FUNCTION_90	CALL_2
0x4007c55	    0x64488b042528	                mov rax, qword fs:[0x28]	      3984	channel.c	FUNCTION_90
0x4007c5e	    0x48898424d803	            mov qword [rsp + 0x3d8], rax	      3984	channel.c	FUNCTION_90
0x4007c66	            0x31c0	                            xor eax, eax	      3984	channel.c	FUNCTION_90
0x4007c68	      0xe800000000	                          call 0x4007c6d	      3996	channel.c	FUNCTION_90	CALL_1
0x4007c6d	          0x4585ed	                         test r13d, r13d	      3997	channel.c	FUNCTION_90	CALL_2
0x4007c70	     0xf848a000000	                            je 0x4007d00	      3997	channel.c	FUNCTION_90	CALL_2
0x4007c76	        0x4883ec08	                              sub rsp, 8	      3997	channel.c	FUNCTION_90	CALL_2
0x4007c7a	          0x4489e9	                           mov ecx, r13d	      3997	channel.c	FUNCTION_90	CALL_2
0x4007c7d	          0x4889c6	                            mov rsi, rax	      3997	channel.c	FUNCTION_90	CALL_2
0x4007c80	      0x488d542414	                   lea rdx, [rsp + 0x14]	      3997	channel.c	FUNCTION_90	CALL_2
0x4007c85	          0x4889ef	                            mov rdi, rbp	      3997	channel.c	FUNCTION_90	CALL_2
0x4007c88	    0x41b900000000	                              mov r9d, 0	      3997	channel.c	FUNCTION_90	CALL_2
0x4007c8e	          0x4d89e0	                             mov r8, r12	      3997	channel.c	FUNCTION_90	CALL_2
0x4007c91	              0x52	                                push rdx	      3997	channel.c	FUNCTION_90	CALL_2
0x4007c92	            0x31d2	                            xor edx, edx	      3997	channel.c	FUNCTION_90	CALL_2
0x4007c94	      0xe857feffff	                    call sym.send_common	      3997	channel.c	FUNCTION_90	CALL_2
0x4007c99	          0x4885c0	                           test rax, rax	      3999	channel.c	FUNCTION_90	IF_1
0x4007c9c	          0x4889c7	                            mov rdi, rax	      3997	channel.c	FUNCTION_90	CALL_2
0x4007c9f	              0x59	                                 pop rcx	      3999	channel.c	FUNCTION_90	IF_1
0x4007ca0	              0x5e	                                 pop rsi	      3999	channel.c	FUNCTION_90	IF_1
0x4007ca1	            0x7432	                            je 0x4007cd5	      3999	channel.c	FUNCTION_90	IF_1
0x4007ca3	      0xf644241102	               test byte [rsp + 0x11], 2	      4001	channel.c	FUNCTION_90	IF_1	IF_2
0x4007ca8	     0xf8582000000	                           jne 0x4007d30	      4001	channel.c	FUNCTION_90	IF_1	IF_2
0x4007cae	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      4004	channel.c	FUNCTION_90	IF_1	CALL_3
0x4007cb2	          0x4889d0	                            mov rax, rdx	      4389	channel.c	FUNCTION_101
0x4007cb5	          0x4889d6	                            mov rsi, rdx	      4004	channel.c	FUNCTION_90	IF_1	CALL_3
0x4007cb8	        0x48c1e208	                              shl rdx, 8	      4389	channel.c	FUNCTION_101
0x4007cbc	        0x48c1e004	                              shl rax, 4	      4389	channel.c	FUNCTION_101
0x4007cc0	          0x4801c2	                            add rdx, rax	      4389	channel.c	FUNCTION_101
0x4007cc3	        0x8b541728	      mov edx, dword [rdi + rdx + 0x28] 	      4389	channel.c	FUNCTION_101
0x4007cc7	      0xb901000000	                              mov ecx, 1	      4005	channel.c	FUNCTION_90	IF_1	CALL_4
0x4007ccc	      0xe81fbcffff	             call sym.channel_read_block	      4005	channel.c	FUNCTION_90	IF_1	CALL_4
0x4007cd1	        0x48894308	                mov qword [rbx + 8], rax	      4005	channel.c	FUNCTION_90	IF_1	CALL_4
0x4007cd5	          0x4c89e7	                            mov rdi, r12	      4008	channel.c	FUNCTION_90	CALL_5
0x4007cd8	      0xe800000000	                          call 0x4007cdd	      4008	channel.c	FUNCTION_90	CALL_5
0x4007cdd	    0x488b8424d803	           mov rax, qword [rsp + 0x3d8] 	      4009	channel.c	FUNCTION_90
0x4007ce5	    0x644833042528	                xor rax, qword fs:[0x28]	      4009	channel.c	FUNCTION_90
0x4007cee	            0x754d	                           jne 0x4007d3d	      4009	channel.c	FUNCTION_90
0x4007cf0	    0x4881c4e80300	                          add rsp, 0x3e8	      4009	channel.c	FUNCTION_90
0x4007cf7	              0x5b	                                 pop rbx	      4009	channel.c	FUNCTION_90
0x4007cf8	              0x5d	                                 pop rbp	      4009	channel.c	FUNCTION_90
0x4007cf9	            0x415c	                                 pop r12	      4009	channel.c	FUNCTION_90
0x4007cfb	            0x415d	                                 pop r13	      4009	channel.c	FUNCTION_90
0x4007cfd	              0xc3	                                     ret	      4009	channel.c	FUNCTION_90
0x4007cfe	            0x6690	                                     nop	      4009	channel.c	FUNCTION_90
0x4007d00	        0x4883ec08	                              sub rsp, 8	      3997	channel.c	FUNCTION_90	CALL_2
0x4007d04	    0x41b900000000	                              mov r9d, 0	      3997	channel.c	FUNCTION_90	CALL_2
0x4007d0a	          0x4d89e0	                             mov r8, r12	      3997	channel.c	FUNCTION_90	CALL_2
0x4007d0d	      0x488d542414	                   lea rdx, [rsp + 0x14]	      3997	channel.c	FUNCTION_90	CALL_2
0x4007d12	            0x31c9	                            xor ecx, ecx	      3997	channel.c	FUNCTION_90	CALL_2
0x4007d14	          0x4889c6	                            mov rsi, rax	      3997	channel.c	FUNCTION_90	CALL_2
0x4007d17	          0x4889ef	                            mov rdi, rbp	      3997	channel.c	FUNCTION_90	CALL_2
0x4007d1a	              0x52	                                push rdx	      3997	channel.c	FUNCTION_90	CALL_2
0x4007d1b	            0x31d2	                            xor edx, edx	      3997	channel.c	FUNCTION_90	CALL_2
0x4007d1d	      0xe8cefdffff	                    call sym.send_common	      3997	channel.c	FUNCTION_90	CALL_2
0x4007d22	              0x58	                                 pop rax	      3997	channel.c	FUNCTION_90	CALL_2
0x4007d23	              0x5a	                                 pop rdx	      3997	channel.c	FUNCTION_90	CALL_2
0x4007d24	            0xebaf	                           jmp 0x4007cd5	      3997	channel.c	FUNCTION_90	CALL_2
0x4007d26	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3997	channel.c	FUNCTION_90	CALL_2
0x4007d30	    0x8b9424080200	           mov edx, dword [rsp + 0x208] 	      4002	channel.c	FUNCTION_90	IF_1	IF_2
0x4007d37	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      4002	channel.c	FUNCTION_90	IF_1	IF_2
0x4007d3b	            0xeb8a	                           jmp 0x4007cc7	      4002	channel.c	FUNCTION_90	IF_1	IF_2
0x4007d3d	      0xe800000000	                          call 0x4007d42	      4009	channel.c	FUNCTION_90
channel_can_write_to	DO,0:IF,0:FOR,0:ELSE,0:SWITCH,0:CALL,0:WHILE,0:functions,0	14
0x4002850	          0x4885ff	                           test rdi, rdi	      2714	channel.c	FUNCTION_62
0x4002853	            0x7423	                            je 0x4002878	      2714	channel.c	FUNCTION_62
0x4002855	        0x837f18ff	cmp dword [rdi + 0x18], 0xffffffffffffffff	      2714	channel.c	FUNCTION_62
0x4002859	      0xb801000000	                              mov eax, 1	      2714	channel.c	FUNCTION_62
0x400285e	            0x7408	                            je 0x4002868	      2714	channel.c	FUNCTION_62
0x4002860	            0xf3c3	                                     ret	      2716	channel.c	FUNCTION_62
0x4002862	    0x660f1f440000	                    nop word [rax + rax]	      2716	channel.c	FUNCTION_62
0x4002868	            0x31c0	                            xor eax, eax	      2714	channel.c	FUNCTION_62
0x400286a	    0x83bf48030000	cmp dword [rdi + 0x348], 0xffffffffffffffff	      2714	channel.c	FUNCTION_62
0x4002871	           0xf95c0	                                setne al	      2714	channel.c	FUNCTION_62
0x4002874	              0xc3	                                     ret	      2714	channel.c	FUNCTION_62
0x4002875	           0xf1f00	                         nop dword [rax]	      2714	channel.c	FUNCTION_62
0x4002878	            0x31c0	                            xor eax, eax	      2714	channel.c	FUNCTION_62
0x400287a	              0xc3	                                     ret	      2716	channel.c	FUNCTION_62
job_unref	DO,0:IF,4:FOR,0:ELSE,1:SWITCH,0:CALL,5:WHILE,0:functions,0	60
0x4008330	          0x4885ff	                           test rdi, rdi	      5333	channel.c	FUNCTION_122	IF_1
0x4008333	            0x740d	                            je 0x4008342	      5333	channel.c	FUNCTION_122	IF_1
0x4008335	          0x8b4758	            mov eax, dword [rdi + 0x58] 	      5333	channel.c	FUNCTION_122	IF_1
0x4008338	          0x83e801	                              sub eax, 1	      5333	channel.c	FUNCTION_122	IF_1
0x400833b	            0x85c0	                           test eax, eax	      5333	channel.c	FUNCTION_122	IF_1
0x400833d	          0x894758	             mov dword [rdi + 0x58], eax	      5333	channel.c	FUNCTION_122	IF_1
0x4008340	            0x7e06	                           jle 0x4008348	      5333	channel.c	FUNCTION_122	IF_1
0x4008342	              0xc3	                                     ret	      5356	channel.c	FUNCTION_122
0x4008343	       0xf1f440000	                   nop dword [rax + rax]	      5356	channel.c	FUNCTION_122
0x4008348	            0x4156	                                push r14	      5332	channel.c	FUNCTION_122
0x400834a	              0x53	                                push rbx	      5332	channel.c	FUNCTION_122
0x400834b	          0x4889fb	                            mov rbx, rdi	      5332	channel.c	FUNCTION_122
0x400834e	        0x4883ec08	                              sub rsp, 8	      5332	channel.c	FUNCTION_122
0x4008352	        0x4c8b7760	            mov r14, qword [rdi + 0x60] 	      5332	channel.c	FUNCTION_122
0x4008356	          0x4d85f6	                           test r14, r14	      5113	channel.c	FUNCTION_114	CALL_1
0x4008359	            0x7415	                            je 0x4008370	      5113	channel.c	FUNCTION_114	CALL_1
0x400835b	          0x4c89f7	                            mov rdi, r14	      5113	channel.c	FUNCTION_114	CALL_1
0x400835e	      0xe8bd87ffff	           call sym.channel_still_useful	      5113	channel.c	FUNCTION_114	CALL_1
0x4008363	            0x85c0	                           test eax, eax	      5113	channel.c	FUNCTION_114	CALL_1
0x4008365	            0x7409	                            je 0x4008370	      5113	channel.c	FUNCTION_114	CALL_1
0x4008367	        0x4883c408	                              add rsp, 8	      5356	channel.c	FUNCTION_122
0x400836b	              0x5b	                                 pop rbx	      5356	channel.c	FUNCTION_122
0x400836c	            0x415e	                                 pop r14	      5356	channel.c	FUNCTION_122
0x400836e	              0xc3	                                     ret	      5356	channel.c	FUNCTION_122
0x400836f	              0x90	                                     nop	      5356	channel.c	FUNCTION_122
0x4008370	        0x837b2801	               cmp dword [rbx + 0x28], 1	      5104	channel.c	FUNCTION_113
0x4008374	            0x742a	                            je 0x40083a0	      5104	channel.c	FUNCTION_113
0x4008376	    0x8b0500000000	            mov eax, dword [0x0400837c] 	      5081	channel.c	FUNCTION_111	IF_1
0x400837c	            0x85c0	                           test eax, eax	      5081	channel.c	FUNCTION_111	IF_1
0x400837e	            0x75e7	                           jne 0x4008367	      5081	channel.c	FUNCTION_111	IF_1
0x4008380	          0x4889df	                            mov rdi, rbx	      5083	channel.c	FUNCTION_111	IF_1	CALL_1
0x4008383	      0xe868cbffff	              call sym.job_free_contents	      5083	channel.c	FUNCTION_111	IF_1	CALL_1
0x4008388	        0x4883c408	                              add rsp, 8	      5356	channel.c	FUNCTION_122
0x400838c	          0x4889df	                            mov rdi, rbx	      5084	channel.c	FUNCTION_111	IF_1	CALL_2
0x400838f	              0x5b	                                 pop rbx	      5356	channel.c	FUNCTION_122
0x4008390	            0x415e	                                 pop r14	      5356	channel.c	FUNCTION_122
0x4008392	      0xe9c97effff	                    jmp sym.job_free_job	      5084	channel.c	FUNCTION_111	IF_1	CALL_2
0x4008397	    0x660f1f840000	                    nop word [rax + rax]	      5084	channel.c	FUNCTION_111	IF_1	CALL_2
0x40083a0	      0x48837b3000	               cmp qword [rbx + 0x30], 0	      5104	channel.c	FUNCTION_113
0x40083a5	            0x7440	                            je 0x40083e7	      5104	channel.c	FUNCTION_113
0x40083a7	          0x4d85f6	                           test r14, r14	      5345	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4
0x40083aa	            0x74bb	                            je 0x4008367	      5345	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4
0x40083ac	            0x31c0	                            xor eax, eax	      5349	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x40083ae	          0x4c89f7	                            mov rdi, r14	      5349	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x40083b1	      0xbe00000000	                              mov esi, 0	      5349	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x40083b6	      0xe800000000	                          call 0x40083bb	      5349	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x40083bb	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	      5350	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4
0x40083bf	    0x8b87b4040000	           mov eax, dword [rdi + 0x4b4] 	       419	channel.c	FUNCTION_15	IF_1
0x40083c5	    0x48c787a80400	              mov qword [rdi + 0x4a8], 0	      5350	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4
0x40083d0	          0x83e801	                              sub eax, 1	       419	channel.c	FUNCTION_15	IF_1
0x40083d3	            0x85c0	                           test eax, eax	       419	channel.c	FUNCTION_15	IF_1
0x40083d5	    0x8987b4040000	            mov dword [rdi + 0x4b4], eax	       419	channel.c	FUNCTION_15	IF_1
0x40083db	            0x7e13	                           jle 0x40083f0	       419	channel.c	FUNCTION_15	IF_1
0x40083dd	    0x48c743600000	               mov qword [rbx + 0x60], 0	      5352	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4
0x40083e5	            0xeb80	                           jmp 0x4008367	      5356	channel.c	FUNCTION_122
0x40083e7	      0x48837b4000	               cmp qword [rbx + 0x40], 0	      5104	channel.c	FUNCTION_113
0x40083ec	            0x75b9	                           jne 0x40083a7	      5104	channel.c	FUNCTION_113
0x40083ee	            0xeb86	                           jmp 0x4008376	      5104	channel.c	FUNCTION_113
0x40083f0	      0xe87bcaffff	               call sym.channel_may_free	       420	channel.c	FUNCTION_15	CALL_1
0x40083f5	            0xebe6	                           jmp 0x40083dd	       420	channel.c	FUNCTION_15	CALL_1
channel_set_nonblock	DO,0:IF,1:FOR,0:ELSE,0:SWITCH,0:CALL,2:WHILE,0:functions,0	17
0x4002ca0	            0x89f6	                            mov esi, esi	      3674	channel.c	FUNCTION_86
0x4002ca2	              0x53	                                push rbx	      3672	channel.c	FUNCTION_86
0x4002ca3	          0x4889f3	                            mov rbx, rsi	      3674	channel.c	FUNCTION_86
0x4002ca6	        0x48c1e608	                              shl rsi, 8	      3674	channel.c	FUNCTION_86
0x4002caa	        0x48c1e304	                              shl rbx, 4	      3674	channel.c	FUNCTION_86
0x4002cae	          0x4801de	                            add rsi, rbx	      3674	channel.c	FUNCTION_86
0x4002cb1	        0x488d1c37	                    lea rbx, [rdi + rsi]	      3674	channel.c	FUNCTION_86
0x4002cb5	          0x8b7b18	            mov edi, dword [rbx + 0x18] 	      3674	channel.c	FUNCTION_86
0x4002cb8	          0x83ffff	             cmp edi, 0xffffffffffffffff	      3676	channel.c	FUNCTION_86	IF_1
0x4002cbb	            0x741b	                            je 0x4002cd8	      3676	channel.c	FUNCTION_86	IF_1
0x4002cbd	      0xba00080000	                          mov edx, 0x800	      3683	channel.c	FUNCTION_86	IF_1	CALL_2
0x4002cc2	      0xbe04000000	                              mov esi, 4	      3683	channel.c	FUNCTION_86	IF_1	CALL_2
0x4002cc7	            0x31c0	                            xor eax, eax	      3683	channel.c	FUNCTION_86	IF_1	CALL_2
0x4002cc9	      0xe800000000	                          call 0x4002cce	      3683	channel.c	FUNCTION_86	IF_1	CALL_2
0x4002cce	    0xc78394000000	               mov dword [rbx + 0x94], 1	      3685	channel.c	FUNCTION_86	IF_1
0x4002cd8	              0x5b	                                 pop rbx	      3687	channel.c	FUNCTION_86
0x4002cd9	              0xc3	                                     ret	      3687	channel.c	FUNCTION_86
set_ref_in_channel	DO,0:IF,1:FOR,1:ELSE,0:SWITCH,0:CALL,2:WHILE,0:functions,0	48
0x4006040	              0x55	                                push rbp	      4334	channel.c	FUNCTION_97
0x4006041	              0x53	                                push rbx	      4334	channel.c	FUNCTION_97
0x4006042	        0x4883ec28	                           sub rsp, 0x28	      4334	channel.c	FUNCTION_97
0x4006046	    0x488b1d000000	            mov rbx, qword [0x0400604d] 	      4339	channel.c	FUNCTION_97	FOR_1
0x400604d	    0x64488b042528	                mov rax, qword fs:[0x28]	      4334	channel.c	FUNCTION_97
0x4006056	      0x4889442418	             mov qword [rsp + 0x18], rax	      4334	channel.c	FUNCTION_97
0x400605b	            0x31c0	                            xor eax, eax	      4334	channel.c	FUNCTION_97
0x400605d	          0x4885db	                           test rbx, rbx	      4339	channel.c	FUNCTION_97	FOR_1
0x4006060	            0x7477	                            je 0x40060d9	      4339	channel.c	FUNCTION_97	FOR_1
0x4006062	            0x89fd	                            mov ebp, edi	      4339	channel.c	FUNCTION_97	FOR_1
0x4006064	            0x31f6	                            xor esi, esi	      4339	channel.c	FUNCTION_97	FOR_1
0x4006066	            0xeb15	                           jmp 0x400607d	      4339	channel.c	FUNCTION_97	FOR_1
0x4006068	     0xf1f84000000	                   nop dword [rax + rax]	      4339	channel.c	FUNCTION_97	FOR_1
0x4006070	      0xbe01000000	                              mov esi, 1	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x4006075	          0x488b1b	                    mov rbx, qword [rbx]	      4339	channel.c	FUNCTION_97	FOR_1
0x4006078	          0x4885db	                           test rbx, rbx	      4339	channel.c	FUNCTION_97	FOR_1
0x400607b	            0x7443	                            je 0x40060c0	      4339	channel.c	FUNCTION_97	FOR_1
0x400607d	          0x4889df	                            mov rdi, rbx	      4340	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_1
0x4006080	      0xe89baaffff	           call sym.channel_still_useful	      4340	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_1
0x4006085	            0x85c0	                           test eax, eax	      4340	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_1
0x4006087	            0x74ec	                            je 0x4006075	      4340	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_1
0x4006089	            0x85f6	                           test esi, esi	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x400608b	    0xc704240a0000	                    mov dword [rsp], 0xa	      4342	channel.c	FUNCTION_97	FOR_1	IF_1
0x4006092	      0x48895c2408	                mov qword [rsp + 8], rbx	      4343	channel.c	FUNCTION_97	FOR_1	IF_1
0x4006097	            0x75d7	                           jne 0x4006070	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x4006099	            0x31c9	                            xor ecx, ecx	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x400609b	            0x31d2	                            xor edx, edx	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x400609d	            0x89ee	                            mov esi, ebp	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x400609f	          0x4889e7	                            mov rdi, rsp	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x40060a2	      0xe800000000	                          call 0x40060a7	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x40060a7	          0x488b1b	                    mov rbx, qword [rbx]	      4339	channel.c	FUNCTION_97	FOR_1
0x40060aa	            0x31f6	                            xor esi, esi	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x40060ac	            0x85c0	                           test eax, eax	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x40060ae	        0x400f95c6	                               setne sil	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x40060b2	          0x4885db	                           test rbx, rbx	      4339	channel.c	FUNCTION_97	FOR_1
0x40060b5	            0x75c6	                           jne 0x400607d	      4339	channel.c	FUNCTION_97	FOR_1
0x40060b7	    0x660f1f840000	                    nop word [rax + rax]	      4339	channel.c	FUNCTION_97	FOR_1
0x40060c0	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      4347	channel.c	FUNCTION_97
0x40060c5	    0x644833142528	                xor rdx, qword fs:[0x28]	      4347	channel.c	FUNCTION_97
0x40060ce	            0x89f0	                            mov eax, esi	      4347	channel.c	FUNCTION_97
0x40060d0	            0x750b	                           jne 0x40060dd	      4347	channel.c	FUNCTION_97
0x40060d2	        0x4883c428	                           add rsp, 0x28	      4347	channel.c	FUNCTION_97
0x40060d6	              0x5b	                                 pop rbx	      4347	channel.c	FUNCTION_97
0x40060d7	              0x5d	                                 pop rbp	      4347	channel.c	FUNCTION_97
0x40060d8	              0xc3	                                     ret	      4347	channel.c	FUNCTION_97
0x40060d9	            0x31f6	                            xor esi, esi	      4335	channel.c	FUNCTION_97
0x40060db	            0xebe3	                           jmp 0x40060c0	      4335	channel.c	FUNCTION_97
0x40060dd	      0xe800000000	                          call 0x40060e2	      4347	channel.c	FUNCTION_97
job_any_running	DO,0:IF,1:FOR,1:ELSE,0:SWITCH,0:CALL,1:WHILE,0:functions,0	18
0x4007f40	    0x488b35000000	            mov rsi, qword [0x04007f47] 	      5145	channel.c	FUNCTION_117	FOR_1
0x4007f47	          0x4885f6	                           test rsi, rsi	      5145	channel.c	FUNCTION_117	FOR_1
0x4007f4a	            0x750c	                           jne 0x4007f58	      5145	channel.c	FUNCTION_117	FOR_1
0x4007f4c	            0xeb24	                           jmp 0x4007f72	      5145	channel.c	FUNCTION_117	FOR_1
0x4007f4e	            0x6690	                                     nop	      5145	channel.c	FUNCTION_117	FOR_1
0x4007f50	          0x488b36	                    mov rsi, qword [rsi]	      5145	channel.c	FUNCTION_117	FOR_1
0x4007f53	          0x4885f6	                           test rsi, rsi	      5145	channel.c	FUNCTION_117	FOR_1
0x4007f56	            0x7418	                            je 0x4007f70	      5145	channel.c	FUNCTION_117	FOR_1
0x4007f58	          0x4889f7	                            mov rdi, rsi	      5146	channel.c	FUNCTION_117	FOR_1	IF_1	CALL_1
0x4007f5b	      0xe8e08cffff	               call sym.job_still_useful	      5146	channel.c	FUNCTION_117	FOR_1	IF_1	CALL_1
0x4007f60	            0x85c0	                           test eax, eax	      5146	channel.c	FUNCTION_117	FOR_1	IF_1	CALL_1
0x4007f62	            0x74ec	                            je 0x4007f50	      5146	channel.c	FUNCTION_117	FOR_1	IF_1	CALL_1
0x4007f64	      0xb801000000	                              mov eax, 1	      5147	channel.c	FUNCTION_117	FOR_1	IF_1
0x4007f69	              0xc3	                                     ret	      5149	channel.c	FUNCTION_117
0x4007f6a	    0x660f1f440000	                    nop word [rax + rax]	      5149	channel.c	FUNCTION_117
0x4007f70	            0xf3c3	                                     ret	      5149	channel.c	FUNCTION_117
0x4007f72	            0x31c0	                            xor eax, eax	      5148	channel.c	FUNCTION_117
0x4007f74	              0xc3	                                     ret	      5148	channel.c	FUNCTION_117
channel_open	DO,0:IF,21:FOR,0:ELSE,0:SWITCH,0:CALL,52:WHILE,1:functions,0	397
0x4005130	            0x4157	                                push r15	       654	channel.c	FUNCTION_27
0x4005132	            0x4156	                                push r14	       654	channel.c	FUNCTION_27
0x4005134	            0x4155	                                push r13	       654	channel.c	FUNCTION_27
0x4005136	            0x4154	                                push r12	       654	channel.c	FUNCTION_27
0x4005138	              0x55	                                push rbp	       654	channel.c	FUNCTION_27
0x4005139	              0x53	                                push rbx	       654	channel.c	FUNCTION_27
0x400513a	            0x89d3	                            mov ebx, edx	       654	channel.c	FUNCTION_27
0x400513c	    0x4881ec980100	                          sub rsp, 0x198	       654	channel.c	FUNCTION_27
0x4005143	    0x64488b042528	                mov rax, qword fs:[0x28]	       654	channel.c	FUNCTION_27
0x400514c	    0x488984248801	            mov qword [rsp + 0x188], rax	       654	channel.c	FUNCTION_27
0x4005154	            0x31c0	                            xor eax, eax	       654	channel.c	FUNCTION_27
0x4005156	      0x48897c2408	                mov qword [rsp + 8], rdi	       654	channel.c	FUNCTION_27
0x400515b	        0x89742410	             mov dword [rsp + 0x10], esi	       654	channel.c	FUNCTION_27
0x400515f	      0x48894c2428	             mov qword [rsp + 0x28], rcx	       654	channel.c	FUNCTION_27
0x4005164	      0xe800000000	                          call 0x4005169	       671	channel.c	FUNCTION_27	CALL_2
0x4005169	          0x4885c0	                           test rax, rax	       672	channel.c	FUNCTION_27	IF_1
0x400516c	     0xf84f6050000	                            je 0x4005768	       672	channel.c	FUNCTION_27	IF_1
0x4005172	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       683	channel.c	FUNCTION_27	IF_2	CALL_6
0x4005177	    0x41bb02000000	                             mov r11d, 2	       681	channel.c	FUNCTION_27
0x400517d	    0x48c744247000	               mov qword [rsp + 0x70], 0	        90	string3.h	FUNCTION_138	CALL_6
0x4005186	          0x4989c5	                            mov r13, rax	        90	string3.h	FUNCTION_138	CALL_6
0x4005189	    0x48c744247800	               mov qword [rsp + 0x78], 0	        90	string3.h	FUNCTION_138	CALL_6
0x4005192	       0xfb7442410	           movzx eax, word [rsp + 0x10] 	       682	channel.c	FUNCTION_27	CALL_5
0x4005197	    0x6644895c2470	             mov word [rsp + 0x70], r11w	       681	channel.c	FUNCTION_27
0x400519d	        0x66c1c808	                               ror ax, 8	       682	channel.c	FUNCTION_27	CALL_5
0x40051a1	      0x6689442472	               mov word [rsp + 0x72], ax	       682	channel.c	FUNCTION_27	CALL_5
0x40051a6	      0xe800000000	                          call 0x40051ab	       683	channel.c	FUNCTION_27	IF_2	CALL_6
0x40051ab	          0x4885c0	                           test rax, rax	       683	channel.c	FUNCTION_27	IF_2	CALL_6
0x40051ae	     0xf84e4030000	                            je 0x4005598	       683	channel.c	FUNCTION_27	IF_2	CALL_6
0x40051b4	        0x48635014	         movsxd rdx, dword [rax + 0x14] 	        53	string3.h	FUNCTION_135	CALL_3
0x40051b8	        0x488b4018	            mov rax, qword [rax + 0x18] 	        53	string3.h	FUNCTION_135	CALL_3
0x40051bc	      0x488d7c2474	                   lea rdi, [rsp + 0x74]	        53	string3.h	FUNCTION_135	CALL_3
0x40051c1	      0xb90c000000	                            mov ecx, 0xc	        53	string3.h	FUNCTION_135	CALL_3
0x40051c6	          0x488b30	                    mov rsi, qword [rax]	        53	string3.h	FUNCTION_135	CALL_3
0x40051c9	      0xe800000000	                          call 0x40051ce	        53	string3.h	FUNCTION_135	CALL_3
0x40051ce	            0x85db	                           test ebx, ebx	       703	channel.c	FUNCTION_27	IF_3
0x40051d0	      0xb801000000	                              mov eax, 1	       703	channel.c	FUNCTION_27	IF_3
0x40051d5	           0xf44d8	                          cmove ebx, eax	       703	channel.c	FUNCTION_27	IF_3
0x40051d8	            0x31d2	                            xor edx, edx	       716	channel.c	FUNCTION_27	WHILE_1	CALL_12
0x40051da	      0xbe01000000	                              mov esi, 1	       716	channel.c	FUNCTION_27	WHILE_1	CALL_12
0x40051df	      0xbf02000000	                              mov edi, 2	       716	channel.c	FUNCTION_27	WHILE_1	CALL_12
0x40051e4	      0xe800000000	                          call 0x40051e9	       716	channel.c	FUNCTION_27	WHILE_1	CALL_12
0x40051e9	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       717	channel.c	FUNCTION_27	WHILE_1	IF_5
0x40051ec	            0x89c5	                            mov ebp, eax	       716	channel.c	FUNCTION_27	WHILE_1	CALL_12
0x40051ee	     0xf848c040000	                            je 0x4005680	       717	channel.c	FUNCTION_27	WHILE_1	IF_5
0x40051f4	            0x85db	                           test ebx, ebx	       725	channel.c	FUNCTION_27	WHILE_1	IF_6
0x40051f6	            0x781b	                            js 0x4005213	       725	channel.c	FUNCTION_27	WHILE_1	IF_6
0x40051f8	            0x89c7	                            mov edi, eax	       732	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_17
0x40051fa	      0xba00080000	                          mov edx, 0x800	       732	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_17
0x40051ff	            0x31c0	                            xor eax, eax	       732	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_17
0x4005201	      0xbe04000000	                              mov esi, 4	       732	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_17
0x4005206	      0xe800000000	                          call 0x400520b	       732	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_17
0x400520b	            0x85c0	                           test eax, eax	       728	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7
0x400520d	     0xf881d050000	                            js 0x4005730	       728	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7
0x4005213	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	       746	channel.c	FUNCTION_27	WHILE_1	CALL_20
0x4005217	      0x488b542408	                mov rdx, qword [rsp + 8]	       746	channel.c	FUNCTION_27	WHILE_1	CALL_20
0x400521c	            0x31c0	                            xor eax, eax	       746	channel.c	FUNCTION_27	WHILE_1	CALL_20
0x400521e	      0xbe00000000	                              mov esi, 0	       746	channel.c	FUNCTION_27	WHILE_1	CALL_20
0x4005223	          0x4c89ef	                            mov rdi, r13	       746	channel.c	FUNCTION_27	WHILE_1	CALL_20
0x4005226	      0xe800000000	                          call 0x400522b	       746	channel.c	FUNCTION_27	WHILE_1	CALL_20
0x400522b	      0x488d742470	                   lea rsi, [rsp + 0x70]	       747	channel.c	FUNCTION_27	WHILE_1	CALL_21
0x4005230	      0xba10000000	                           mov edx, 0x10	       747	channel.c	FUNCTION_27	WHILE_1	CALL_21
0x4005235	            0x89ef	                            mov edi, ebp	       747	channel.c	FUNCTION_27	WHILE_1	CALL_21
0x4005237	      0xe800000000	                          call 0x400523c	       747	channel.c	FUNCTION_27	WHILE_1	CALL_21
0x400523c	            0x85c0	                           test eax, eax	       749	channel.c	FUNCTION_27	WHILE_1	IF_8
0x400523e	     0xf846c040000	                            je 0x40056b0	       749	channel.c	FUNCTION_27	WHILE_1	IF_8
0x4005244	            0x85db	                           test ebx, ebx	       754	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4005246	     0xf88c4030000	                            js 0x4005610	       754	channel.c	FUNCTION_27	WHILE_1	IF_9
0x400524c	      0xe800000000	                          call 0x4005251	       754	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4005251	            0x8b10	                    mov edx, dword [rax]	       754	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4005253	      0x4889442420	             mov qword [rsp + 0x20], rax	       754	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4005258	          0x8d4291	                   lea eax, [rdx - 0x6f]	       757	channel.c	FUNCTION_27	WHILE_1	IF_9
0x400525b	          0x83e0fb	                     and eax, 0xfffffffb	       757	channel.c	FUNCTION_27	WHILE_1	IF_9
0x400525e	            0x7409	                            je 0x4005269	       757	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4005260	          0x83fa0b	                            cmp edx, 0xb	       757	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4005263	     0xf85b3030000	                           jne 0x400561c	       757	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4005269	          0x83fb32	                           cmp ebx, 0x32	       771	channel.c	FUNCTION_27	WHILE_1
0x400526c	    0x41bc32000000	                          mov r12d, 0x32	       771	channel.c	FUNCTION_27	WHILE_1
0x4005272	        0x440f4ee3	                        cmovle r12d, ebx	       771	channel.c	FUNCTION_27	WHILE_1
0x4005276	          0x83fa6f	                           cmp edx, 0x6f	       776	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4005279	     0xf84f9020000	                            je 0x4005578	       776	channel.c	FUNCTION_27	WHILE_1	IF_10
0x400527f	            0x31f6	                            xor esi, esi	       788	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_25
0x4005281	      0xba10000000	                           mov edx, 0x10	       788	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_25
0x4005286	    0xc74424380000	               mov dword [rsp + 0x38], 0	       783	channel.c	FUNCTION_27	WHILE_1	IF_10
0x400528e	    0xc744243c0400	               mov dword [rsp + 0x3c], 4	       784	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4005296	          0x4889d1	                            mov rcx, rdx	       788	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_25
0x4005299	      0x4889542418	             mov qword [rsp + 0x18], rdx	       788	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_25
0x400529e	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       788	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_25
0x40052a6	            0x89f0	                            mov eax, esi	       788	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_25
0x40052a8	        0x89742414	             mov dword [rsp + 0x14], esi	       788	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_25
0x40052ac	              0xfc	                                     cld	       788	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_25
0x40052ad	          0xf348ab	              rep stosq qword [rdi], rax	       788	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_25
0x40052b0	          0x4c63fd	                         movsxd r15, ebp	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x40052b3	    0x41be01000000	                             mov r14d, 1	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x40052b9	          0x4c89ff	                            mov rdi, r15	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x40052bc	      0xe800000000	                          call 0x40052c1	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x40052c1	            0x89ef	                            mov edi, ebp	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x40052c3	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       790	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_27
0x40052c8	        0x8b742414	            mov esi, dword [rsp + 0x14] 	       790	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_27
0x40052cc	          0xc1ff1f	                           sar edi, 0x1f	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x40052cf	          0xc1ef1a	                           shr edi, 0x1a	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x40052d2	        0x8d4c3d00	                    lea ecx, [rbp + rdi]	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x40052d6	          0x83e13f	                           and ecx, 0x3f	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x40052d9	            0x29f9	                            sub ecx, edi	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x40052db	    0x488dbc240001	                  lea rdi, [rsp + 0x100]	       790	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_27
0x40052e3	          0x49d3e6	                             shl r14, cl	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x40052e6	          0x4889d1	                            mov rcx, rdx	       790	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_27
0x40052e9	    0x4c09b4c48000	      or qword [rsp + rax*8 + 0x80], r14	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x40052f1	            0x89f0	                            mov eax, esi	       790	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_27
0x40052f3	              0xfc	                                     cld	       790	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_27
0x40052f4	          0xf348ab	              rep stosq qword [rdi], rax	       790	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_27
0x40052f7	          0x4c89ff	                            mov rdi, r15	       791	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_28
0x40052fa	      0xe800000000	                          call 0x40052ff	       791	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_28
0x40052ff	    0x4c09b4c40001	     or qword [rsp + rax*8 + 0x100], r14	       791	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_28
0x4005307	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       796	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_29
0x400530c	            0x31f6	                            xor esi, esi	       796	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_29
0x400530e	    0x4169c4e80300	                   imul eax, r12d, 0x3e8	       794	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4005315	    0x48c744244000	               mov qword [rsp + 0x40], 0	       793	channel.c	FUNCTION_27	WHILE_1	IF_10
0x400531e	            0x4898	                                    cdqe	       794	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4005320	      0x4889442448	             mov qword [rsp + 0x48], rax	       794	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4005325	      0xe800000000	                          call 0x400532a	       796	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_29
0x400532a	            0x31c0	                            xor eax, eax	       798	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_30
0x400532c	          0x4489e2	                           mov edx, r12d	       798	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_30
0x400532f	      0xbe00000000	                              mov esi, 0	       798	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_30
0x4005334	          0x4c89ef	                            mov rdi, r13	       798	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_30
0x4005337	      0xe800000000	                          call 0x400533c	       798	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_30
0x400533c	          0x8d7d01	                      lea edi, [rbp + 1]	       800	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_31
0x400533f	      0x4c8d442440	                    lea r8, [rsp + 0x40]	       800	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_31
0x4005344	    0x488d94240001	                  lea rdx, [rsp + 0x100]	       800	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_31
0x400534c	    0x488db4248000	                   lea rsi, [rsp + 0x80]	       800	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_31
0x4005354	            0x31c9	                            xor ecx, ecx	       800	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_31
0x4005356	      0xe800000000	                          call 0x400535b	       800	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_31
0x400535b	            0x85c0	                           test eax, eax	       802	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11
0x400535d	     0xf897d000000	                           jns 0x40053e0	       802	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11
0x4005363	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	       805	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_32
0x4005368	            0x31c0	                            xor eax, eax	       805	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_32
0x400536a	      0xbe00000000	                              mov esi, 0	       805	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_32
0x400536f	          0x4c89ef	                            mov rdi, r13	       805	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_32
0x4005372	            0x8b13	                    mov edx, dword [rbx]	       805	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_32
0x4005374	      0xe897adffff	                       call sym.ch_error	       805	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_32
0x4005379	          0x4889d8	                            mov rax, rbx	       807	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_33
0x400537c	            0x8b38	                    mov edi, dword [rax]	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x400537e	      0xe800000000	                          call 0x4005383	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4005383	            0x31ff	                            xor edi, edi	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4005385	          0x4889c3	                            mov rbx, rax	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4005388	      0xba05000000	                              mov edx, 5	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x400538d	      0xbe00000000	                              mov esi, 0	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4005392	      0xe800000000	                          call 0x4005397	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4005397	          0x4889da	                            mov rdx, rbx	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x400539a	          0x4889c6	                            mov rsi, rax	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x400539d	      0xbf00000000	                              mov edi, 0	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x40053a2	      0xe800000000	                          call 0x40053a7	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x40053a7	            0x89ef	                            mov edi, ebp	       848	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x40053a9	      0xe800000000	                          call 0x40053ae	       848	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x40053ae	    0x8b3d00000000	            mov edi, dword [0x040053b4] 	       382	channel.c	FUNCTION_13	IF_1
0x40053b4	            0x85ff	                           test edi, edi	       382	channel.c	FUNCTION_13	IF_1
0x40053b6	            0x7520	                           jne 0x40053d8	       382	channel.c	FUNCTION_13	IF_1
0x40053b8	    0x8b3500000000	            mov esi, dword [0x040053be] 	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x40053be	            0x85f6	                           test esi, esi	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x40053c0	     0xf85c2010000	                           jne 0x4005588	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x40053c6	    0x41c785700400	              mov dword [r13 + 0x470], 1	       385	channel.c	FUNCTION_13	IF_1	IF_2
0x40053d1	     0xf1f80000000	                         nop dword [rax]	       385	channel.c	FUNCTION_13	IF_1	IF_2
0x40053d8	            0x31c0	                            xor eax, eax	       894	channel.c	FUNCTION_27	WHILE_1
0x40053da	      0xe96c010000	                           jmp 0x400554b	       894	channel.c	FUNCTION_27	WHILE_1
0x40053df	              0x90	                                     nop	       894	channel.c	FUNCTION_27	WHILE_1
0x40053e0	          0x4c89ff	                            mov rdi, r15	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x40053e3	      0xe800000000	                          call 0x40053e8	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x40053e8	    0x4c85b4c48000	   test qword [rsp + rax*8 + 0x80], r14 	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x40053f0	     0xf84fa000000	                            je 0x40054f0	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x40053f6	      0x4c8d44243c	                    lea r8, [rsp + 0x3c]	       834	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_38
0x40053fb	      0x488d4c2438	                   lea rcx, [rsp + 0x38]	       834	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_38
0x4005400	      0xba04000000	                              mov edx, 4	       834	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_38
0x4005405	      0xbe01000000	                              mov esi, 1	       834	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_38
0x400540a	            0x89ef	                            mov edi, ebp	       834	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_38
0x400540c	      0xe800000000	                          call 0x4005411	       834	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_38
0x4005411	            0x85c0	                           test eax, eax	       836	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x4005413	     0xf88d7010000	                            js 0x40055f0	       836	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x4005419	        0x8b542438	            mov edx, dword [rsp + 0x38] 	       837	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x400541d	            0x85d2	                           test edx, edx	       840	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x400541f	           0xf95c1	                                setne cl	       840	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x4005422	          0x83fa0b	                            cmp edx, 0xb	       840	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x4005425	           0xf95c0	                                setne al	       840	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x4005428	            0x84c1	                             test cl, al	       840	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x400542a	            0x740c	                            je 0x4005438	       840	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x400542c	          0x8d4291	                   lea eax, [rdx - 0x6f]	       840	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x400542f	          0x83e0fb	                     and eax, 0xfffffffb	       840	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x4005432	     0xf85bc010000	                           jne 0x40055f4	       840	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x4005438	          0x4c89ff	                            mov rdi, r15	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x400543b	      0xe800000000	                          call 0x4005440	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x4005440	    0x4c85b4c40001	  test qword [rsp + rax*8 + 0x100], r14 	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x4005448	            0x740c	                            je 0x4005456	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x400544a	        0x8b4c2438	            mov ecx, dword [rsp + 0x38] 	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x400544e	            0x85c9	                           test ecx, ecx	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x4005450	     0xf84b3020000	                            je 0x4005709	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x4005456	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       858	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_43
0x400545b	            0x31f6	                            xor esi, esi	       858	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_43
0x400545d	      0xe800000000	                          call 0x4005462	       858	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_43
0x4005462	      0x488b542460	            mov rdx, qword [rsp + 0x60] 	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4005467	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x400546c	      0x482b542450	             sub rdx, qword [rsp + 0x50]	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4005471	      0x482b4c2458	             sub rcx, qword [rsp + 0x58]	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4005476	    0x4869f2e80300	                    imul rsi, rdx, 0x3e8	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x400547d	          0x4889c8	                            mov rax, rcx	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4005480	    0x48bacff753e3	          movabs rdx, 0x20c49ba5e353f7cf	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x400548a	          0x48f7ea	                                imul rdx	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x400548d	        0x48c1f93f	                           sar rcx, 0x3f	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4005491	        0x48c1fa07	                              sar rdx, 7	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4005495	          0x4829ca	                            sub rdx, rcx	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4005498	          0x4801f2	                            add rdx, rsi	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x400549b	          0x83fb01	                              cmp ebx, 1	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x400549e	            0x7470	                            je 0x4005510	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x40054a0	          0x4863c3	                         movsxd rax, ebx	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x40054a3	          0x4839c2	                            cmp rdx, rax	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x40054a6	            0x7d68	                           jge 0x4005510	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x40054a8	          0x4129d4	                           sub r12d, edx	       871	channel.c	FUNCTION_27	WHILE_1	IF_17
0x40054ab	            0x29d3	                            sub ebx, edx	       872	channel.c	FUNCTION_27	WHILE_1	IF_17
0x40054ad	          0x4585e4	                         test r12d, r12d	       873	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_18
0x40054b0	            0x7e15	                           jle 0x40054c7	       873	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_18
0x40054b2	          0x4963fc	                        movsxd rdi, r12d	       875	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_18	CALL_44
0x40054b5	      0xbe01000000	                              mov esi, 1	       875	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_18	CALL_44
0x40054ba	          0x4429e3	                           sub ebx, r12d	       877	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_18
0x40054bd	      0xe800000000	                          call 0x40054c2	       875	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_18	CALL_44
0x40054c2	      0xe800000000	                          call 0x40054c7	       876	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_18	CALL_45
0x40054c7	    0x8b0500000000	            mov eax, dword [0x040054cd] 	       879	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_19
0x40054cd	            0x85c0	                           test eax, eax	       879	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_19
0x40054cf	            0x753f	                           jne 0x4005510	       879	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_19
0x40054d1	            0x85db	                           test ebx, ebx	       883	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_19	IF_20
0x40054d3	      0xb801000000	                              mov eax, 1	       883	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_19	IF_20
0x40054d8	           0xf4ed8	                         cmovle ebx, eax	       883	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_19	IF_20
0x40054db	            0x85ed	                           test ebp, ebp	       714	channel.c	FUNCTION_27	WHILE_1	IF_4
0x40054dd	     0xf88f5fcffff	                            js 0x40051d8	       714	channel.c	FUNCTION_27	WHILE_1	IF_4
0x40054e3	            0x89ef	                            mov edi, ebp	       715	channel.c	FUNCTION_27	WHILE_1	IF_4
0x40054e5	      0xe800000000	                          call 0x40054ea	       715	channel.c	FUNCTION_27	WHILE_1	IF_4
0x40054ea	      0xe9e9fcffff	                           jmp 0x40051d8	       715	channel.c	FUNCTION_27	WHILE_1	IF_4
0x40054ef	              0x90	                                     nop	       715	channel.c	FUNCTION_27	WHILE_1	IF_4
0x40054f0	          0x4c89ff	                            mov rdi, r15	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x40054f3	      0xe800000000	                          call 0x40054f8	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x40054f8	    0x4c85b4c40001	  test qword [rsp + rax*8 + 0x100], r14 	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4005500	     0xf85f0feffff	                           jne 0x40053f6	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4005506	      0xe92dffffff	                           jmp 0x4005438	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x400550b	       0xf1f440000	                   nop dword [rax + rax]	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4005510	            0x31c0	                            xor eax, eax	       891	channel.c	FUNCTION_27	WHILE_1	CALL_46
0x4005512	      0xbe00000000	                              mov esi, 0	       891	channel.c	FUNCTION_27	WHILE_1	CALL_46
0x4005517	          0x4c89ef	                            mov rdi, r13	       891	channel.c	FUNCTION_27	WHILE_1	CALL_46
0x400551a	      0xe8f1abffff	                       call sym.ch_error	       891	channel.c	FUNCTION_27	WHILE_1	CALL_46
0x400551f	            0x89ef	                            mov edi, ebp	       892	channel.c	FUNCTION_27	WHILE_1
0x4005521	      0xe800000000	                          call 0x4005526	       892	channel.c	FUNCTION_27	WHILE_1
0x4005526	    0x8b1500000000	            mov edx, dword [0x0400552c] 	       382	channel.c	FUNCTION_13	IF_1
0x400552c	            0x85d2	                           test edx, edx	       382	channel.c	FUNCTION_13	IF_1
0x400552e	     0xf85a4feffff	                           jne 0x40053d8	       382	channel.c	FUNCTION_13	IF_1
0x4005534	    0x8b0500000000	            mov eax, dword [0x0400553a] 	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x400553a	            0x85c0	                           test eax, eax	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x400553c	            0x754a	                           jne 0x4005588	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x400553e	    0x41c785700400	              mov dword [r13 + 0x470], 1	       385	channel.c	FUNCTION_13	IF_1	IF_2
0x4005549	            0x31c0	                            xor eax, eax	       894	channel.c	FUNCTION_27	WHILE_1
0x400554b	    0x488b9c248801	           mov rbx, qword [rsp + 0x188] 	       920	channel.c	FUNCTION_27
0x4005553	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       920	channel.c	FUNCTION_27
0x400555c	     0xf851b020000	                           jne 0x400577d	       920	channel.c	FUNCTION_27
0x4005562	    0x4881c4980100	                          add rsp, 0x198	       920	channel.c	FUNCTION_27
0x4005569	              0x5b	                                 pop rbx	       920	channel.c	FUNCTION_27
0x400556a	              0x5d	                                 pop rbp	       920	channel.c	FUNCTION_27
0x400556b	            0x415c	                                 pop r12	       920	channel.c	FUNCTION_27
0x400556d	            0x415d	                                 pop r13	       920	channel.c	FUNCTION_27
0x400556f	            0x415e	                                 pop r14	       920	channel.c	FUNCTION_27
0x4005571	            0x415f	                                 pop r15	       920	channel.c	FUNCTION_27
0x4005573	              0xc3	                                     ret	       920	channel.c	FUNCTION_27
0x4005574	         0xf1f4000	                         nop dword [rax]	       920	channel.c	FUNCTION_27
0x4005578	          0x83fb01	                              cmp ebx, 1	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x400557b	            0x7493	                            je 0x4005510	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x400557d	            0x31d2	                            xor edx, edx	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x400557f	      0xe924ffffff	                           jmp 0x40054a8	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x4005584	         0xf1f4000	                         nop dword [rax]	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x4005588	          0x4c89ef	                            mov rdi, r13	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x400558b	      0xe8c0f8ffff	           call sym.channel_free.part.12	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x4005590	            0x31c0	                            xor eax, eax	       894	channel.c	FUNCTION_27	WHILE_1
0x4005592	            0xebb7	                           jmp 0x400554b	       894	channel.c	FUNCTION_27	WHILE_1
0x4005594	         0xf1f4000	                         nop dword [rax]	       894	channel.c	FUNCTION_27	WHILE_1
0x4005598	      0xbe00000000	                              mov esi, 0	       685	channel.c	FUNCTION_27	IF_2	CALL_7
0x400559d	          0x4c89ef	                            mov rdi, r13	       685	channel.c	FUNCTION_27	IF_2	CALL_7
0x40055a0	      0xe86babffff	                       call sym.ch_error	       685	channel.c	FUNCTION_27	IF_2	CALL_7
0x40055a5	      0xe800000000	                          call 0x40055aa	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x40055aa	            0x8b38	                    mov edi, dword [rax]	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x40055ac	      0xe800000000	                          call 0x40055b1	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x40055b1	      0xba05000000	                              mov edx, 5	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x40055b6	          0x4889c3	                            mov rbx, rax	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x40055b9	      0xbe00000000	                              mov esi, 0	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x40055be	            0x31ff	                            xor edi, edi	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x40055c0	      0xe800000000	                          call 0x40055c5	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x40055c5	          0x4889da	                            mov rdx, rbx	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x40055c8	          0x4889c6	                            mov rsi, rax	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x40055cb	      0xbf00000000	                              mov edi, 0	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x40055d0	      0xe800000000	                          call 0x40055d5	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x40055d5	    0x448b15000000	           mov r10d, dword [0x040055dc] 	       382	channel.c	FUNCTION_13	IF_1
0x40055dc	          0x4585d2	                         test r10d, r10d	       382	channel.c	FUNCTION_13	IF_1
0x40055df	     0xf844fffffff	                            je 0x4005534	       382	channel.c	FUNCTION_13	IF_1
0x40055e5	            0x31c0	                            xor eax, eax	       894	channel.c	FUNCTION_27	WHILE_1
0x40055e7	      0xe95fffffff	                           jmp 0x400554b	       894	channel.c	FUNCTION_27	WHILE_1
0x40055ec	         0xf1f4000	                         nop dword [rax]	       894	channel.c	FUNCTION_27	WHILE_1
0x40055f0	        0x8b542438	            mov edx, dword [rsp + 0x38] 	       894	channel.c	FUNCTION_27	WHILE_1
0x40055f4	            0x31c0	                            xor eax, eax	       844	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_39
0x40055f6	      0xbe00000000	                              mov esi, 0	       844	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_39
0x40055fb	          0x4c89ef	                            mov rdi, r13	       844	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_39
0x40055fe	      0xe80dabffff	                       call sym.ch_error	       844	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_39
0x4005603	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4005608	      0xe96ffdffff	                           jmp 0x400537c	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x400560d	           0xf1f00	                         nop dword [rax]	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4005610	      0xe800000000	                          call 0x4005615	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4005615	            0x8b10	                    mov edx, dword [rax]	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4005617	      0x4889442420	             mov qword [rsp + 0x20], rax	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x400561c	      0xbe00000000	                              mov esi, 0	       761	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_22
0x4005621	            0x31c0	                            xor eax, eax	       761	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_22
0x4005623	          0x4c89ef	                            mov rdi, r13	       761	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_22
0x4005626	      0xe8e5aaffff	                       call sym.ch_error	       761	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_22
0x400562b	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x4005630	            0x8b38	                    mov edi, dword [rax]	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x4005632	      0xe800000000	                          call 0x4005637	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x4005637	            0x31ff	                            xor edi, edi	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x4005639	          0x4889c3	                            mov rbx, rax	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x400563c	      0xba05000000	                              mov edx, 5	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x4005641	      0xbe00000000	                              mov esi, 0	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x4005646	      0xe800000000	                          call 0x400564b	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x400564b	          0x4889da	                            mov rdx, rbx	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x400564e	          0x4889c6	                            mov rsi, rax	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x4005651	      0xbf00000000	                              mov edi, 0	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x4005656	      0xe800000000	                          call 0x400565b	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x400565b	            0x89ef	                            mov edi, ebp	       764	channel.c	FUNCTION_27	WHILE_1	IF_9
0x400565d	      0xe800000000	                          call 0x4005662	       764	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4005662	    0x448b05000000	            mov r8d, dword [0x04005669] 	       382	channel.c	FUNCTION_13	IF_1
0x4005669	          0x4585c0	                           test r8d, r8d	       382	channel.c	FUNCTION_13	IF_1
0x400566c	     0xf84c2feffff	                            je 0x4005534	       382	channel.c	FUNCTION_13	IF_1
0x4005672	            0x31c0	                            xor eax, eax	       894	channel.c	FUNCTION_27	WHILE_1
0x4005674	      0xe9d2feffff	                           jmp 0x400554b	       894	channel.c	FUNCTION_27	WHILE_1
0x4005679	     0xf1f80000000	                         nop dword [rax]	       894	channel.c	FUNCTION_27	WHILE_1
0x4005680	      0xbe00000000	                              mov esi, 0	       719	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_13
0x4005685	          0x4c89ef	                            mov rdi, r13	       719	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_13
0x4005688	            0x31c0	                            xor eax, eax	       719	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_13
0x400568a	      0xe881aaffff	                       call sym.ch_error	       719	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_13
0x400568f	      0xe800000000	                          call 0x4005694	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x4005694	            0x8b38	                    mov edi, dword [rax]	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x4005696	      0xe800000000	                          call 0x400569b	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x400569b	      0xba05000000	                              mov edx, 5	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x40056a0	          0x4889c3	                            mov rbx, rax	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x40056a3	      0xbe00000000	                              mov esi, 0	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x40056a8	      0xe911ffffff	                           jmp 0x40055be	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x40056ad	           0xf1f00	                         nop dword [rax]	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x40056b0	            0x31c0	                            xor eax, eax	       897	channel.c	FUNCTION_27	CALL_48
0x40056b2	      0xbe00000000	                              mov esi, 0	       897	channel.c	FUNCTION_27	CALL_48
0x40056b7	          0x4c89ef	                            mov rdi, r13	       897	channel.c	FUNCTION_27	CALL_48
0x40056ba	      0xe800000000	                          call 0x40056bf	       897	channel.c	FUNCTION_27	CALL_48
0x40056bf	            0x85db	                           test ebx, ebx	       899	channel.c	FUNCTION_27	IF_21
0x40056c1	            0x7955	                           jns 0x4005718	       899	channel.c	FUNCTION_27	IF_21
0x40056c3	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       910	channel.c	FUNCTION_27
0x40056c8	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       911	channel.c	FUNCTION_27	CALL_51
0x40056cd	        0x41896d18	             mov dword [r13 + 0x18], ebp	       909	channel.c	FUNCTION_27
0x40056d1	    0x498985780400	            mov qword [r13 + 0x478], rax	       910	channel.c	FUNCTION_27
0x40056d8	      0xe800000000	                          call 0x40056dd	       911	channel.c	FUNCTION_27	CALL_51
0x40056dd	    0x41838d6c0400	               or dword [r13 + 0x46c], 1	       913	channel.c	FUNCTION_27
0x40056e5	    0x498985600400	            mov qword [r13 + 0x460], rax	       911	channel.c	FUNCTION_27	CALL_51
0x40056ec	            0x31f6	                            xor esi, esi	       916	channel.c	FUNCTION_27	CALL_52
0x40056ee	        0x8b442410	            mov eax, dword [rsp + 0x10] 	       912	channel.c	FUNCTION_27
0x40056f2	          0x4c89ef	                            mov rdi, r13	       916	channel.c	FUNCTION_27	CALL_52
0x40056f5	    0x418985680400	            mov dword [r13 + 0x468], eax	       912	channel.c	FUNCTION_27
0x40056fc	      0xe86fb8ffff	       call sym.channel_gui_register_one	       916	channel.c	FUNCTION_27	CALL_52
0x4005701	          0x4c89e8	                            mov rax, r13	       919	channel.c	FUNCTION_27
0x4005704	      0xe942feffff	                           jmp 0x400554b	       919	channel.c	FUNCTION_27
0x4005709	      0xbe00000000	                              mov esi, 0	       897	channel.c	FUNCTION_27	CALL_48
0x400570e	          0x4c89ef	                            mov rdi, r13	       897	channel.c	FUNCTION_27	CALL_48
0x4005711	            0x31c0	                            xor eax, eax	       897	channel.c	FUNCTION_27	CALL_48
0x4005713	      0xe800000000	                          call 0x4005718	       897	channel.c	FUNCTION_27	CALL_48
0x4005718	            0x31d2	                            xor edx, edx	       905	channel.c	FUNCTION_27	IF_21	CALL_50
0x400571a	      0xbe04000000	                              mov esi, 4	       905	channel.c	FUNCTION_27	IF_21	CALL_50
0x400571f	            0x89ef	                            mov edi, ebp	       905	channel.c	FUNCTION_27	IF_21	CALL_50
0x4005721	            0x31c0	                            xor eax, eax	       905	channel.c	FUNCTION_27	IF_21	CALL_50
0x4005723	      0xe800000000	                          call 0x4005728	       905	channel.c	FUNCTION_27	IF_21	CALL_50
0x4005728	            0xeb99	                           jmp 0x40056c3	       905	channel.c	FUNCTION_27	IF_21	CALL_50
0x400572a	    0x660f1f440000	                    nop word [rax + rax]	       905	channel.c	FUNCTION_27	IF_21	CALL_50
0x4005730	      0xe800000000	                          call 0x4005735	       738	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7
0x4005735	            0x8b10	                    mov edx, dword [rax]	       737	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_18
0x4005737	      0xbe00000000	                              mov esi, 0	       737	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_18
0x400573c	            0x31c0	                            xor eax, eax	       737	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_18
0x400573e	          0x4c89ef	                            mov rdi, r13	       737	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_18
0x4005741	      0xe8caa9ffff	                       call sym.ch_error	       737	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_18
0x4005746	            0x89ef	                            mov edi, ebp	       739	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7
0x4005748	      0xe800000000	                          call 0x400574d	       739	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7
0x400574d	    0x448b0d000000	            mov r9d, dword [0x04005754] 	       382	channel.c	FUNCTION_13	IF_1
0x4005754	          0x4585c9	                           test r9d, r9d	       382	channel.c	FUNCTION_13	IF_1
0x4005757	     0xf84d7fdffff	                            je 0x4005534	       382	channel.c	FUNCTION_13	IF_1
0x400575d	            0x31c0	                            xor eax, eax	       894	channel.c	FUNCTION_27	WHILE_1
0x400575f	      0xe9e7fdffff	                           jmp 0x400554b	       894	channel.c	FUNCTION_27	WHILE_1
0x4005764	         0xf1f4000	                         nop dword [rax]	       894	channel.c	FUNCTION_27	WHILE_1
0x4005768	            0x31c0	                            xor eax, eax	       674	channel.c	FUNCTION_27	IF_1	CALL_3
0x400576a	      0xbe00000000	                              mov esi, 0	       674	channel.c	FUNCTION_27	IF_1	CALL_3
0x400576f	            0x31ff	                            xor edi, edi	       674	channel.c	FUNCTION_27	IF_1	CALL_3
0x4005771	      0xe89aa9ffff	                       call sym.ch_error	       674	channel.c	FUNCTION_27	IF_1	CALL_3
0x4005776	            0x31c0	                            xor eax, eax	       675	channel.c	FUNCTION_27	IF_1
0x4005778	      0xe9cefdffff	                           jmp 0x400554b	       675	channel.c	FUNCTION_27	IF_1
0x400577d	      0xe800000000	                          call 0x4005782	       920	channel.c	FUNCTION_27
channel_any_keep_open	DO,0:IF,1:FOR,1:ELSE,0:SWITCH,0:CALL,0:WHILE,0:functions,0	20
0x4002c50	    0x488b15000000	            mov rdx, qword [0x04002c57] 	      3659	channel.c	FUNCTION_85	FOR_1
0x4002c57	          0x4885d2	                           test rdx, rdx	      3659	channel.c	FUNCTION_85	FOR_1
0x4002c5a	            0x7432	                            je 0x4002c8e	      3659	channel.c	FUNCTION_85	FOR_1
0x4002c5c	    0x8b82a4040000	           mov eax, dword [rdx + 0x4a4] 	      3660	channel.c	FUNCTION_85	FOR_1	IF_1
0x4002c62	            0x85c0	                           test eax, eax	      3660	channel.c	FUNCTION_85	FOR_1	IF_1
0x4002c64	            0x7414	                            je 0x4002c7a	      3660	channel.c	FUNCTION_85	FOR_1	IF_1
0x4002c66	            0xeb20	                           jmp 0x4002c88	      3660	channel.c	FUNCTION_85	FOR_1	IF_1
0x4002c68	     0xf1f84000000	                   nop dword [rax + rax]	      3660	channel.c	FUNCTION_85	FOR_1	IF_1
0x4002c70	    0x8b8aa4040000	           mov ecx, dword [rdx + 0x4a4] 	      3660	channel.c	FUNCTION_85	FOR_1	IF_1
0x4002c76	            0x85c9	                           test ecx, ecx	      3660	channel.c	FUNCTION_85	FOR_1	IF_1
0x4002c78	            0x750e	                           jne 0x4002c88	      3660	channel.c	FUNCTION_85	FOR_1	IF_1
0x4002c7a	          0x488b12	                    mov rdx, qword [rdx]	      3659	channel.c	FUNCTION_85	FOR_1
0x4002c7d	          0x4885d2	                           test rdx, rdx	      3659	channel.c	FUNCTION_85	FOR_1
0x4002c80	            0x75ee	                           jne 0x4002c70	      3659	channel.c	FUNCTION_85	FOR_1
0x4002c82	            0xf3c3	                                     ret	      3659	channel.c	FUNCTION_85	FOR_1
0x4002c84	         0xf1f4000	                         nop dword [rax]	      3659	channel.c	FUNCTION_85	FOR_1
0x4002c88	      0xb801000000	                              mov eax, 1	      3661	channel.c	FUNCTION_85	FOR_1	IF_1
0x4002c8d	              0xc3	                                     ret	      3663	channel.c	FUNCTION_85
0x4002c8e	            0x31c0	                            xor eax, eax	      3662	channel.c	FUNCTION_85
0x4002c90	              0xc3	                                     ret	      3662	channel.c	FUNCTION_85
channel_handle_events	DO,0:IF,4:FOR,2:ELSE,1:SWITCH,0:CALL,3:WHILE,0:functions,0	53
0x4003b80	            0x4155	                                push r13	      3621	channel.c	FUNCTION_84
0x4003b82	            0x4154	                                push r12	      3621	channel.c	FUNCTION_84
0x4003b84	              0x55	                                push rbp	      3621	channel.c	FUNCTION_84
0x4003b85	              0x53	                                push rbx	      3621	channel.c	FUNCTION_84
0x4003b86	        0x4883ec08	                              sub rsp, 8	      3621	channel.c	FUNCTION_84
0x4003b8a	    0x4c8b25000000	            mov r12, qword [0x04003b91] 	      3626	channel.c	FUNCTION_84	FOR_1
0x4003b91	          0x4d85e4	                           test r12, r12	      3626	channel.c	FUNCTION_84	FOR_1
0x4003b94	            0x7455	                            je 0x4003beb	      3626	channel.c	FUNCTION_84	FOR_1
0x4003b96	          0x4189fd	                           mov r13d, edi	      3626	channel.c	FUNCTION_84	FOR_1
0x4003b99	     0xf1f80000000	                         nop dword [rax]	      3626	channel.c	FUNCTION_84	FOR_1
0x4003ba0	          0x4585ed	                         test r13d, r13d	      3628	channel.c	FUNCTION_84	FOR_1	IF_1
0x4003ba3	            0x740c	                            je 0x4003bb1	      3628	channel.c	FUNCTION_84	FOR_1	IF_1
0x4003ba5	    0x418b8424a404	           mov eax, dword [r12 + 0x4a4] 	      3628	channel.c	FUNCTION_84	FOR_1	IF_1
0x4003bad	            0x85c0	                           test eax, eax	      3628	channel.c	FUNCTION_84	FOR_1	IF_1
0x4003baf	            0x7431	                            je 0x4003be2	      3628	channel.c	FUNCTION_84	FOR_1	IF_1
0x4003bb1	      0x498d6c2418	                   lea rbp, [r12 + 0x18]	      3628	channel.c	FUNCTION_84	FOR_1	IF_1
0x4003bb6	            0x31db	                            xor ebx, ebx	      3621	channel.c	FUNCTION_84
0x4003bb8	          0x8b7500	                    mov esi, dword [rbp]	      3634	channel.c	FUNCTION_84	FOR_1	FOR_2
0x4003bbb	          0x83feff	             cmp esi, 0xffffffffffffffff	      3635	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2
0x4003bbe	            0x7413	                            je 0x4003bd3	      3635	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2
0x4003bc0	            0x31d2	                            xor edx, edx	      3637	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_1
0x4003bc2	          0x4c89e7	                            mov rdi, r12	      3637	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_1
0x4003bc5	      0xe8c6f9ffff	                   call sym.channel_wait	      3637	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_1
0x4003bca	            0x85c0	                           test eax, eax	      3639	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	IF_3
0x4003bcc	            0x7432	                            je 0x4003c00	      3639	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	IF_3
0x4003bce	          0x83f802	                              cmp eax, 2	      3641	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	ELSE_1	IF_4
0x4003bd1	            0x7445	                            je 0x4003c18	      3641	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	ELSE_1	IF_4
0x4003bd3	          0x83c301	                              add ebx, 1	      3632	channel.c	FUNCTION_84	FOR_1	FOR_2
0x4003bd6	    0x4881c5100100	                          add rbp, 0x110	      3632	channel.c	FUNCTION_84	FOR_1	FOR_2
0x4003bdd	          0x83fb03	                              cmp ebx, 3	      3632	channel.c	FUNCTION_84	FOR_1	FOR_2
0x4003be0	            0x75d6	                           jne 0x4003bb8	      3632	channel.c	FUNCTION_84	FOR_1	FOR_2
0x4003be2	        0x4d8b2424	                    mov r12, qword [r12]	      3626	channel.c	FUNCTION_84	FOR_1
0x4003be6	          0x4d85e4	                           test r12, r12	      3626	channel.c	FUNCTION_84	FOR_1
0x4003be9	            0x75b5	                           jne 0x4003ba0	      3626	channel.c	FUNCTION_84	FOR_1
0x4003beb	        0x4883c408	                              add rsp, 8	      3647	channel.c	FUNCTION_84
0x4003bef	              0x5b	                                 pop rbx	      3647	channel.c	FUNCTION_84
0x4003bf0	              0x5d	                                 pop rbp	      3647	channel.c	FUNCTION_84
0x4003bf1	            0x415c	                                 pop r12	      3647	channel.c	FUNCTION_84
0x4003bf3	            0x415d	                                 pop r13	      3647	channel.c	FUNCTION_84
0x4003bf5	              0xc3	                                     ret	      3647	channel.c	FUNCTION_84
0x4003bf6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3647	channel.c	FUNCTION_84
0x4003c00	      0xba00000000	                              mov edx, 0	      3640	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_2
0x4003c05	            0x89de	                            mov esi, ebx	      3640	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_2
0x4003c07	          0x4c89e7	                            mov rdi, r12	      3640	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_2
0x4003c0a	      0xe801fbffff	                   call sym.channel_read	      3640	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_2
0x4003c0f	            0xebc2	                           jmp 0x4003bd3	      3640	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_2
0x4003c11	     0xf1f80000000	                         nop dword [rax]	      3640	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_2
0x4003c18	      0xb900000000	                              mov ecx, 0	      3642	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	ELSE_1	IF_4	CALL_3
0x4003c1d	      0xba01000000	                              mov edx, 1	      3642	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	ELSE_1	IF_4	CALL_3
0x4003c22	            0x89de	                            mov esi, ebx	      3642	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	ELSE_1	IF_4	CALL_3
0x4003c24	          0x4c89e7	                            mov rdi, r12	      3642	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	ELSE_1	IF_4	CALL_3
0x4003c27	      0xe814d4ffff	         call sym.ch_close_part_on_error	      3642	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	ELSE_1	IF_4	CALL_3
0x4003c2c	            0xeba5	                           jmp 0x4003bd3	      3642	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	ELSE_1	IF_4	CALL_3
job_start	DO,0:IF,23:FOR,4:ELSE,7:SWITCH,0:CALL,37:WHILE,0:functions,0	266
0x4008700	            0x4157	                                push r15	      5526	channel.c	FUNCTION_130
0x4008702	            0x4156	                                push r14	      5526	channel.c	FUNCTION_130
0x4008704	          0x4989d6	                            mov r14, rdx	      5526	channel.c	FUNCTION_130
0x4008707	            0x4155	                                push r13	      5526	channel.c	FUNCTION_130
0x4008709	            0x4154	                                push r12	      5526	channel.c	FUNCTION_130
0x400870b	          0x4989f5	                            mov r13, rsi	      5526	channel.c	FUNCTION_130
0x400870e	              0x55	                                push rbp	      5526	channel.c	FUNCTION_130
0x400870f	              0x53	                                push rbx	      5526	channel.c	FUNCTION_130
0x4008710	          0x4889fb	                            mov rbx, rdi	      5526	channel.c	FUNCTION_130
0x4008713	    0x4881ec080400	                          sub rsp, 0x408	      5526	channel.c	FUNCTION_130
0x400871a	    0x64488b042528	                mov rax, qword fs:[0x28]	      5526	channel.c	FUNCTION_130
0x4008723	    0x48898424f803	            mov qword [rsp + 0x3f8], rax	      5526	channel.c	FUNCTION_130
0x400872b	            0x31c0	                            xor eax, eax	      5526	channel.c	FUNCTION_130
0x400872d	    0x48c744240800	                  mov qword [rsp + 8], 0	      5529	channel.c	FUNCTION_130
0x4008736	    0xc74424040000	                  mov dword [rsp + 4], 0	      5530	channel.c	FUNCTION_130
0x400873e	      0xe800000000	                          call 0x4008743	      5540	channel.c	FUNCTION_130	CALL_1
0x4008743	          0x4885c0	                           test rax, rax	      5541	channel.c	FUNCTION_130	IF_1
0x4008746	     0xf84cf030000	                            je 0x4008b1b	      5541	channel.c	FUNCTION_130	IF_1
0x400874c	      0x4c8d642430	                   lea r12, [rsp + 0x30]	      5550	channel.c	FUNCTION_130	IF_2
0x4008751	          0x4d85f6	                           test r14, r14	      5549	channel.c	FUNCTION_130	IF_2
0x4008754	          0x4889c5	                            mov rbp, rax	      5549	channel.c	FUNCTION_130	IF_2
0x4008757	    0xc74028000000	               mov dword [rax + 0x28], 0	      5544	channel.c	FUNCTION_130
0x400875e	      0xb96f000000	                           mov ecx, 0x6f	      5550	channel.c	FUNCTION_130	IF_2
0x4008763	          0x4c89e7	                            mov rdi, r12	      5550	channel.c	FUNCTION_130	IF_2
0x4008766	     0xf8483020000	                            je 0x40089ef	      5549	channel.c	FUNCTION_130	IF_2
0x400876c	          0x4c89f6	                            mov rsi, r14	      5550	channel.c	FUNCTION_130	IF_2
0x400876f	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	      5550	channel.c	FUNCTION_130	IF_2
0x4008772	        0x8b742430	            mov esi, dword [rsp + 0x30] 	      5550	channel.c	FUNCTION_130	IF_2
0x4008776	            0x31c0	                            xor eax, eax	      5526	channel.c	FUNCTION_130
0x4008778	      0xbf00000100	                        mov edi, 0x10000	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x400877d	    0x41b900000800	                        mov r9d, 0x80000	      5567	channel.c	FUNCTION_130	FOR_1	IF_4
0x4008783	            0x89fa	                            mov edx, edi	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x4008785	            0x89c1	                            mov ecx, eax	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x4008787	            0xd3e2	                             shl edx, cl	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x4008789	            0x85f2	                           test edx, esi	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x400878b	            0x740c	                            je 0x4008799	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x400878d	    0x41837c841c02	      cmp dword [r12 + rax*4 + 0x1c], 2 	      5566	channel.c	FUNCTION_130	FOR_1	IF_4
0x4008793	     0xf84af010000	                            je 0x4008948	      5566	channel.c	FUNCTION_130	FOR_1	IF_4
0x4008799	        0x4883c001	                              add rax, 1	      5566	channel.c	FUNCTION_130	FOR_1	IF_4
0x400879d	        0x4883f803	                              cmp rax, 3	      5564	channel.c	FUNCTION_130	FOR_1
0x40087a1	            0x75e0	                           jne 0x4008783	      5564	channel.c	FUNCTION_130	FOR_1
0x40087a3	    0xf7c600000400	                       test esi, 0x40000	      5574	channel.c	FUNCTION_130	IF_5
0x40087a9	            0x740b	                            je 0x40087b6	      5574	channel.c	FUNCTION_130	IF_5
0x40087ab	      0x837c245403	               cmp dword [rsp + 0x54], 3	      5574	channel.c	FUNCTION_130	IF_5
0x40087b0	     0xf84ba010000	                            je 0x4008970	      5574	channel.c	FUNCTION_130	IF_5
0x40087b6	          0x4c89e6	                            mov rsi, r12	      5611	channel.c	FUNCTION_130	CALL_15
0x40087b9	          0x4889ef	                            mov rdi, rbp	      5611	channel.c	FUNCTION_130	CALL_15
0x40087bc	      0xe800000000	                          call 0x40087c1	      5611	channel.c	FUNCTION_130	CALL_15
0x40087c1	          0x4d85ed	                           test r13, r13	      5614	channel.c	FUNCTION_130	IF_12
0x40087c4	     0xf84e6010000	                            je 0x40089b0	      5614	channel.c	FUNCTION_130	IF_12
0x40087ca	      0x49837d0000	                      cmp qword [r13], 0	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x40087cf	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x40087d3	            0x7420	                            je 0x40087f5	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x40087d5	        0x8b442404	                mov eax, dword [rsp + 4]	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x40087d9	          0x8d5001	                      lea edx, [rax + 1]	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x40087dc	        0x498d4508	                      lea rax, [r13 + 8]	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x40087e0	          0x488b30	                    mov rsi, qword [rax]	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x40087e3	        0x4883c008	                              add rax, 8	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x40087e7	            0x89d1	                            mov ecx, edx	      5618	channel.c	FUNCTION_130	IF_12	FOR_2
0x40087e9	          0x8d5201	                      lea edx, [rdx + 1]	      5618	channel.c	FUNCTION_130	IF_12	FOR_2
0x40087ec	          0x4885f6	                           test rsi, rsi	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x40087ef	            0x75ef	                           jne 0x40087e0	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x40087f1	        0x894c2404	                mov dword [rsp + 4], ecx	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x40087f5	    0x8d3ccd080000	                    lea edi, [rcx*8 + 8]	      5619	channel.c	FUNCTION_130	IF_12	CALL_16
0x40087fc	      0xe800000000	                          call 0x4008801	      5619	channel.c	FUNCTION_130	IF_12	CALL_16
0x4008801	          0x4885c0	                           test rax, rax	      5620	channel.c	FUNCTION_130	IF_12	IF_13
0x4008804	          0x4889c3	                            mov rbx, rax	      5619	channel.c	FUNCTION_130	IF_12	CALL_16
0x4008807	      0x4889442408	                mov qword [rsp + 8], rax	      5619	channel.c	FUNCTION_130	IF_12	CALL_16
0x400880c	     0xf84d6010000	                            je 0x40089e8	      5620	channel.c	FUNCTION_130	IF_12	IF_13
0x4008812	      0x4863442404	            movsxd rax, dword [rsp + 4] 	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x4008817	            0x85c0	                           test eax, eax	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x4008819	            0x7e34	                           jle 0x400884f	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x400881b	          0x4531f6	                          xor r14d, r14d	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x400881e	          0x4531ff	                          xor r15d, r15d	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x4008821	     0xf1f80000000	                         nop dword [rax]	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x4008828	      0x4b8b7c3500	              mov rdi, qword [r13 + r14]	      5623	channel.c	FUNCTION_130	IF_12	CALL_17
0x400882d	          0x4c01f3	                            add rbx, r14	      5623	channel.c	FUNCTION_130	IF_12	CALL_17
0x4008830	        0x4183c701	                             add r15d, 1	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x4008834	        0x4983c608	                              add r14, 8	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x4008838	      0xe800000000	                          call 0x400883d	      5623	channel.c	FUNCTION_130	IF_12	CALL_17
0x400883d	          0x488903	                    mov qword [rbx], rax	      5623	channel.c	FUNCTION_130	IF_12	CALL_17
0x4008840	      0x4863442404	            movsxd rax, dword [rsp + 4] 	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x4008845	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x400884a	          0x4439f8	                           cmp eax, r15d	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x400884d	            0x7fd9	                            jg 0x4008828	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x400884f	    0x48c704c30000	              mov qword [rbx + rax*8], 0	      5624	channel.c	FUNCTION_130	IF_12
0x4008857	    0x48833d000000	               cmp qword [0x0400885f], 0	      5665	channel.c	FUNCTION_130	IF_20	CALL_25
0x400885f	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5662	channel.c	FUNCTION_130
0x4008864	        0x48897d68	            mov qword [rbp + 0x68], rdi 	      5662	channel.c	FUNCTION_130
0x4008868	            0x747b	                            je 0x40088e5	      5665	channel.c	FUNCTION_130	IF_20	CALL_25
0x400886a	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5669	channel.c	FUNCTION_130	IF_20	CALL_26
0x400886f	      0xbac8000000	                           mov edx, 0xc8	      5669	channel.c	FUNCTION_130	IF_20	CALL_26
0x4008874	      0xbe01000000	                              mov esi, 1	      5669	channel.c	FUNCTION_130	IF_20	CALL_26
0x4008879	      0xe800000000	                          call 0x400887e	      5669	channel.c	FUNCTION_130	IF_20	CALL_26
0x400887e	        0x8b442404	                mov eax, dword [rsp + 4]	      5670	channel.c	FUNCTION_130	IF_20	FOR_4
0x4008882	            0x85c0	                           test eax, eax	      5670	channel.c	FUNCTION_130	IF_20	FOR_4
0x4008884	            0x7e3d	                           jle 0x40088c3	      5670	channel.c	FUNCTION_130	IF_20	FOR_4
0x4008886	          0x4531ed	                          xor r13d, r13d	      5670	channel.c	FUNCTION_130	IF_20	FOR_4
0x4008889	            0x31db	                            xor ebx, ebx	      5670	channel.c	FUNCTION_130	IF_20	FOR_4
0x400888b	            0xeb1a	                           jmp 0x40088a7	      5670	channel.c	FUNCTION_130	IF_20	FOR_4
0x400888d	           0xf1f00	                         nop dword [rax]	      5670	channel.c	FUNCTION_130	IF_20	FOR_4
0x4008890	            0x85db	                           test ebx, ebx	      5672	channel.c	FUNCTION_130	IF_20	FOR_4	IF_21
0x4008892	            0x7e0f	                           jle 0x40088a3	      5672	channel.c	FUNCTION_130	IF_20	FOR_4	IF_21
0x4008894	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5673	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_27
0x4008899	      0xbe00000000	                              mov esi, 0	      5673	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_27
0x400889e	      0xe800000000	                          call 0x40088a3	      5673	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_27
0x40088a3	        0x4983c508	                              add r13, 8	      5673	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_27
0x40088a7	      0x488b442408	                mov rax, qword [rsp + 8]	      5674	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_28
0x40088ac	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5674	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_28
0x40088b1	          0x83c301	                              add ebx, 1	      5670	channel.c	FUNCTION_130	IF_20	FOR_4
0x40088b4	        0x4a8b3428	              mov rsi, qword [rax + r13]	      5674	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_28
0x40088b8	      0xe800000000	                          call 0x40088bd	      5674	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_28
0x40088bd	        0x395c2404	                cmp dword [rsp + 4], ebx	      5670	channel.c	FUNCTION_130	IF_20	FOR_4
0x40088c1	            0x7fcd	                            jg 0x4008890	      5670	channel.c	FUNCTION_130	IF_20	FOR_4
0x40088c3	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      5676	channel.c	FUNCTION_130	IF_20	CALL_29
0x40088c8	      0xbe00000000	                              mov esi, 0	      5676	channel.c	FUNCTION_130	IF_20	CALL_29
0x40088cd	            0x31ff	                            xor edi, edi	      5676	channel.c	FUNCTION_130	IF_20	CALL_29
0x40088cf	            0x31c0	                            xor eax, eax	      5676	channel.c	FUNCTION_130	IF_20	CALL_29
0x40088d1	      0xe800000000	                          call 0x40088d6	      5676	channel.c	FUNCTION_130	IF_20	CALL_29
0x40088d6	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5677	channel.c	FUNCTION_130	IF_20	CALL_30
0x40088db	      0xe800000000	                          call 0x40088e0	      5677	channel.c	FUNCTION_130	IF_20	CALL_30
0x40088e0	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5677	channel.c	FUNCTION_130	IF_20	CALL_30
0x40088e5	          0x4c89e2	                            mov rdx, r12	      5679	channel.c	FUNCTION_130	CALL_31
0x40088e8	          0x4889ee	                            mov rsi, rbp	      5679	channel.c	FUNCTION_130	CALL_31
0x40088eb	      0xe800000000	                          call 0x40088f0	      5679	channel.c	FUNCTION_130	CALL_31
0x40088f0	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	      5686	channel.c	FUNCTION_130	IF_22
0x40088f4	          0x4885ff	                           test rdi, rdi	      5686	channel.c	FUNCTION_130	IF_22
0x40088f7	            0x7405	                            je 0x40088fe	      5686	channel.c	FUNCTION_130	IF_22
0x40088f9	      0xe842a9ffff	               call sym.channel_write_in	      5687	channel.c	FUNCTION_130	CALL_34
0x40088fe	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5687	channel.c	FUNCTION_130	CALL_34
0x4008903	        0x48397d68	            cmp qword [rbp + 0x68], rdi 	      5693	channel.c	FUNCTION_130	IF_23
0x4008907	            0x7405	                            je 0x400890e	      5693	channel.c	FUNCTION_130	IF_23
0x4008909	      0xe800000000	                          call 0x400890e	      5694	channel.c	FUNCTION_130	CALL_36
0x400890e	          0x4c89e7	                            mov rdi, r12	      5695	channel.c	FUNCTION_130	CALL_37
0x4008911	      0xe800000000	                          call 0x4008916	      5695	channel.c	FUNCTION_130	CALL_37
0x4008916	          0x4889e8	                            mov rax, rbp	      5696	channel.c	FUNCTION_130
0x4008919	    0x488b8c24f803	           mov rcx, qword [rsp + 0x3f8] 	      5697	channel.c	FUNCTION_130
0x4008921	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5697	channel.c	FUNCTION_130
0x400892a	     0xf8522020000	                           jne 0x4008b52	      5697	channel.c	FUNCTION_130
0x4008930	    0x4881c4080400	                          add rsp, 0x408	      5697	channel.c	FUNCTION_130
0x4008937	              0x5b	                                 pop rbx	      5697	channel.c	FUNCTION_130
0x4008938	              0x5d	                                 pop rbp	      5697	channel.c	FUNCTION_130
0x4008939	            0x415c	                                 pop r12	      5697	channel.c	FUNCTION_130
0x400893b	            0x415d	                                 pop r13	      5697	channel.c	FUNCTION_130
0x400893d	            0x415e	                                 pop r14	      5697	channel.c	FUNCTION_130
0x400893f	            0x415f	                                 pop r15	      5697	channel.c	FUNCTION_130
0x4008941	              0xc3	                                     ret	      5697	channel.c	FUNCTION_130
0x4008942	    0x660f1f440000	                    nop word [rax + rax]	      5697	channel.c	FUNCTION_130
0x4008948	          0x4489ca	                            mov edx, r9d	      5567	channel.c	FUNCTION_130	FOR_1	IF_4
0x400894b	            0x89c1	                            mov ecx, eax	      5567	channel.c	FUNCTION_130	FOR_1	IF_4
0x400894d	            0xd3e2	                             shl edx, cl	      5567	channel.c	FUNCTION_130	FOR_1	IF_4
0x400894f	            0x85f2	                           test edx, esi	      5567	channel.c	FUNCTION_130	FOR_1	IF_4
0x4008951	            0x7411	                            je 0x4008964	      5567	channel.c	FUNCTION_130	FOR_1	IF_4
0x4008953	    0x498b94c43801	   mov rdx, qword [r12 + rax*8 + 0x138] 	      5568	channel.c	FUNCTION_130	FOR_1	IF_4
0x400895b	          0x803a00	                       cmp byte [rdx], 0	      5568	channel.c	FUNCTION_130	FOR_1	IF_4
0x400895e	     0xf8535feffff	                           jne 0x4008799	      5568	channel.c	FUNCTION_130	FOR_1	IF_4
0x4008964	      0xba05000000	                              mov edx, 5	      5570	channel.c	FUNCTION_130	FOR_1	IF_4	CALL_6
0x4008969	      0xbe00000000	                              mov esi, 0	      5570	channel.c	FUNCTION_130	FOR_1	IF_4	CALL_6
0x400896e	            0xeb5e	                           jmp 0x40089ce	      5570	channel.c	FUNCTION_130	FOR_1	IF_4	CALL_6
0x4008970	    0xf7c600000004	       test esi, loc.imp.list_append_tv 	      5579	channel.c	FUNCTION_130	IF_5	IF_6
0x4008976	     0xf85c8000000	                           jne 0x4008a44	      5579	channel.c	FUNCTION_130	IF_5	IF_6
0x400897c	    0x81e600002000	                       and esi, 0x200000	      5585	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8
0x4008982	     0xf8590000000	                           jne 0x4008a18	      5585	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8
0x4008988	            0x31ff	                            xor edi, edi	      5587	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8	CALL_11
0x400898a	      0xba05000000	                              mov edx, 5	      5587	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8	CALL_11
0x400898f	      0xbe00000000	                              mov esi, 0	      5587	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8	CALL_11
0x4008994	      0xe800000000	                          call 0x4008999	      5587	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8	CALL_11
0x4008999	          0x4889c7	                            mov rdi, rax	      5587	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8	CALL_11
0x400899c	      0xe800000000	                          call 0x40089a1	      5587	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8	CALL_11
0x40089a1	      0xe958ffffff	                           jmp 0x40088fe	      5587	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8	CALL_11
0x40089a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5587	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8	CALL_11
0x40089b0	            0x8b03	                    mov eax, dword [rbx]	      5628	channel.c	FUNCTION_130	ELSE_5	IF_14
0x40089b2	          0x83f802	                              cmp eax, 2	      5628	channel.c	FUNCTION_130	ELSE_5	IF_14
0x40089b5	     0xf84f9000000	                            je 0x4008ab4	      5628	channel.c	FUNCTION_130	ELSE_5	IF_14
0x40089bb	          0x83f805	                              cmp eax, 5	      5641	channel.c	FUNCTION_130	ELSE_6	IF_17
0x40089be	     0xf84bc000000	                            je 0x4008a80	      5641	channel.c	FUNCTION_130	ELSE_6	IF_17
0x40089c4	      0xba05000000	                              mov edx, 5	      5634	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15	CALL_19
0x40089c9	      0xbe00000000	                              mov esi, 0	      5634	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15	CALL_19
0x40089ce	            0x31ff	                            xor edi, edi	      5634	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15	CALL_19
0x40089d0	      0xe800000000	                          call 0x40089d5	      5634	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15	CALL_19
0x40089d5	          0x4889c7	                            mov rdi, rax	      5634	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15	CALL_19
0x40089d8	      0xe800000000	                          call 0x40089dd	      5634	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15	CALL_19
0x40089dd	      0xe91cffffff	                           jmp 0x40088fe	      5634	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15	CALL_19
0x40089e2	    0x660f1f440000	                    nop word [rax + rax]	      5634	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15	CALL_19
0x40089e8	            0x31ff	                            xor edi, edi	      5634	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15	CALL_19
0x40089ea	      0xe914ffffff	                           jmp 0x4008903	      5634	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15	CALL_19
0x40089ef	          0x4c89f0	                            mov rax, r14	        90	string3.h	FUNCTION_138	CALL_6
0x40089f2	      0xbaffce0110	                     mov edx, 0x1001ceff	      5556	channel.c	FUNCTION_130	ELSE_1	IF_3	CALL_4
0x40089f7	          0x4c89e6	                            mov rsi, r12	      5556	channel.c	FUNCTION_130	ELSE_1	IF_3	CALL_4
0x40089fa	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_138	CALL_6
0x40089fd	        0x488d7b10	                   lea rdi, [rbx + 0x10]	      5556	channel.c	FUNCTION_130	ELSE_1	IF_3	CALL_4
0x4008a01	      0xb930000000	                           mov ecx, 0x30	      5556	channel.c	FUNCTION_130	ELSE_1	IF_3	CALL_4
0x4008a06	      0xe800000000	                          call 0x4008a0b	      5556	channel.c	FUNCTION_130	ELSE_1	IF_3	CALL_4
0x4008a0b	            0x85c0	                           test eax, eax	      5556	channel.c	FUNCTION_130	ELSE_1	IF_3	CALL_4
0x4008a0d	     0xf84ebfeffff	                            je 0x40088fe	      5556	channel.c	FUNCTION_130	ELSE_1	IF_3	CALL_4
0x4008a13	      0xe95afdffff	                           jmp 0x4008772	      5556	channel.c	FUNCTION_130	ELSE_1	IF_3	CALL_4
0x4008a18	    0x488bbc247801	           mov rdi, qword [rsp + 0x178] 	      5590	channel.c	FUNCTION_130	IF_5	CALL_12
0x4008a20	            0x31f6	                            xor esi, esi	      5590	channel.c	FUNCTION_130	IF_5	CALL_12
0x4008a22	      0xe800000000	                          call 0x4008a27	      5590	channel.c	FUNCTION_130	IF_5	CALL_12
0x4008a27	          0x4885c0	                           test rax, rax	      5591	channel.c	FUNCTION_130	IF_5	IF_9
0x4008a2a	     0xf84cefeffff	                            je 0x40088fe	      5591	channel.c	FUNCTION_130	IF_5	IF_9
0x4008a30	      0x4883780800	                  cmp qword [rax + 8], 0	      5593	channel.c	FUNCTION_130	IF_5	IF_10
0x4008a35	     0xf84ab000000	                            je 0x4008ae6	      5593	channel.c	FUNCTION_130	IF_5	IF_10
0x4008a3b	        0x48894550	            mov qword [rbp + 0x50], rax 	      5608	channel.c	FUNCTION_130	IF_5
0x4008a3f	      0xe972fdffff	                           jmp 0x40087b6	      5608	channel.c	FUNCTION_130	IF_5
0x4008a44	    0x8bbc248c0100	           mov edi, dword [rsp + 0x18c] 	      5581	channel.c	FUNCTION_130	IF_5	IF_6	CALL_7
0x4008a4b	      0xe800000000	                          call 0x4008a50	      5581	channel.c	FUNCTION_130	IF_5	IF_6	CALL_7
0x4008a50	          0x4885c0	                           test rax, rax	      5582	channel.c	FUNCTION_130	IF_5	IF_6	IF_7
0x4008a53	            0x75db	                           jne 0x4008a30	      5582	channel.c	FUNCTION_130	IF_5	IF_6	IF_7
0x4008a55	    0x48639c248c01	        movsxd rbx, dword [rsp + 0x18c] 	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x4008a5d	            0x31ff	                            xor edi, edi	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x4008a5f	      0xba05000000	                              mov edx, 5	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x4008a64	      0xbe00000000	                              mov esi, 0	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x4008a69	      0xe800000000	                          call 0x4008a6e	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x4008a6e	          0x4889c7	                            mov rdi, rax	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x4008a71	          0x4889de	                            mov rsi, rbx	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x4008a74	      0xe800000000	                          call 0x4008a79	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x4008a79	      0xe980feffff	                           jmp 0x40088fe	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x4008a7e	            0x6690	                                     nop	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x4008a80	        0x488b7b08	                mov rdi, qword [rbx + 8]	      5642	channel.c	FUNCTION_130	ELSE_6	IF_17
0x4008a84	          0x4885ff	                           test rdi, rdi	      5642	channel.c	FUNCTION_130	ELSE_6	IF_17
0x4008a87	     0xf8437ffffff	                            je 0x40089c4	      5642	channel.c	FUNCTION_130	ELSE_6	IF_17
0x4008a8d	          0x8b573c	            mov edx, dword [rdi + 0x3c] 	      5643	channel.c	FUNCTION_130	ELSE_6	IF_17
0x4008a90	            0x85d2	                           test edx, edx	      5643	channel.c	FUNCTION_130	ELSE_6	IF_17
0x4008a92	     0xf8e2cffffff	                           jle 0x40089c4	      5643	channel.c	FUNCTION_130	ELSE_6	IF_17
0x4008a98	      0x488d542404	                      lea rdx, [rsp + 4]	      5652	channel.c	FUNCTION_130	ELSE_7	IF_18	CALL_23
0x4008a9d	      0x488d742408	                      lea rsi, [rsp + 8]	      5652	channel.c	FUNCTION_130	ELSE_7	IF_18	CALL_23
0x4008aa2	      0xe800000000	                          call 0x4008aa7	      5652	channel.c	FUNCTION_130	ELSE_7	IF_18	CALL_23
0x4008aa7	            0x85c0	                           test eax, eax	      5652	channel.c	FUNCTION_130	ELSE_7	IF_18	CALL_23
0x4008aa9	     0xf844ffeffff	                            je 0x40088fe	      5652	channel.c	FUNCTION_130	ELSE_7	IF_18	CALL_23
0x4008aaf	      0xe9a3fdffff	                           jmp 0x4008857	      5652	channel.c	FUNCTION_130	ELSE_7	IF_18	CALL_23
0x4008ab4	        0x488b7b08	                mov rdi, qword [rbx + 8]	      5631	channel.c	FUNCTION_130	ELSE_5	IF_14
0x4008ab8	          0x4885ff	                           test rdi, rdi	      5632	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15
0x4008abb	     0xf8403ffffff	                            je 0x40089c4	      5632	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15
0x4008ac1	          0x803f00	                       cmp byte [rdi], 0	      5632	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15
0x4008ac4	     0xf84fafeffff	                            je 0x40089c4	      5632	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15
0x4008aca	      0x488d542404	                      lea rdx, [rsp + 4]	      5638	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_16	CALL_20
0x4008acf	      0x488d742408	                      lea rsi, [rsp + 8]	      5638	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_16	CALL_20
0x4008ad4	      0xe800000000	                          call 0x4008ad9	      5638	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_16	CALL_20
0x4008ad9	            0x85c0	                           test eax, eax	      5638	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_16	CALL_20
0x4008adb	     0xf8576fdffff	                           jne 0x4008857	      5638	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_16	CALL_20
0x4008ae1	      0xe918feffff	                           jmp 0x40088fe	      5638	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_16	CALL_20
0x4008ae6	      0xf644243304	               test byte [rsp + 0x33], 4	      5598	channel.c	FUNCTION_130	IF_5	IF_10	IF_11
0x4008aeb	    0x488b9c247801	           mov rbx, qword [rsp + 0x178] 	      5604	channel.c	FUNCTION_130	IF_5	IF_10	ELSE_4
0x4008af3	            0x752d	                           jne 0x4008b22	      5598	channel.c	FUNCTION_130	IF_5	IF_10	IF_11
0x4008af5	      0xba05000000	                              mov edx, 5	      5605	channel.c	FUNCTION_130	IF_5	IF_10	CALL_14
0x4008afa	      0xbe00000000	                              mov esi, 0	      5605	channel.c	FUNCTION_130	IF_5	IF_10	CALL_14
0x4008aff	            0x31ff	                            xor edi, edi	      5605	channel.c	FUNCTION_130	IF_5	IF_10	CALL_14
0x4008b01	      0xe800000000	                          call 0x4008b06	      5605	channel.c	FUNCTION_130	IF_5	IF_10	CALL_14
0x4008b06	          0x4889de	                            mov rsi, rbx	      5605	channel.c	FUNCTION_130	IF_5	IF_10	CALL_14
0x4008b09	          0x4889c7	                            mov rdi, rax	      5605	channel.c	FUNCTION_130	IF_5	IF_10	CALL_14
0x4008b0c	      0xe800000000	                          call 0x4008b11	      5605	channel.c	FUNCTION_130	IF_5	IF_10	CALL_14
0x4008b11	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5605	channel.c	FUNCTION_130	IF_5	IF_10	CALL_14
0x4008b16	      0xe9e8fdffff	                           jmp 0x4008903	      5605	channel.c	FUNCTION_130	IF_5	IF_10	CALL_14
0x4008b1b	            0x31c0	                            xor eax, eax	      5542	channel.c	FUNCTION_130	IF_1
0x4008b1d	      0xe9f7fdffff	                           jmp 0x4008919	      5542	channel.c	FUNCTION_130	IF_1
0x4008b22	    0x448b84248c01	           mov r8d, dword [rsp + 0x18c] 	        33	stdio2.h	FUNCTION_147	CALL_1
0x4008b2a	    0x488dbc24b003	                  lea rdi, [rsp + 0x3b0]	        33	stdio2.h	FUNCTION_147	CALL_1
0x4008b32	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_147	CALL_1
0x4008b37	      0xba41000000	                           mov edx, 0x41	        33	stdio2.h	FUNCTION_147	CALL_1
0x4008b3c	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_147	CALL_1
0x4008b41	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_147	CALL_1
0x4008b43	    0x488d9c24b003	                  lea rbx, [rsp + 0x3b0]	      5601	channel.c	FUNCTION_130	IF_5	IF_10	IF_11
0x4008b4b	      0xe800000000	                          call 0x4008b50	        33	stdio2.h	FUNCTION_147	CALL_1
0x4008b50	            0xeba3	                           jmp 0x4008af5	        33	stdio2.h	FUNCTION_147	CALL_1
0x4008b52	      0xe800000000	                          call 0x4008b57	      5697	channel.c	FUNCTION_130
channel_gui_register_all	DO,0:IF,0:FOR,1:ELSE,0:SWITCH,0:CALL,1:WHILE,0:functions,0	33
0x40015c0	              0x53	                                push rbx	       595	channel.c	FUNCTION_24
0x40015c1	    0x488b1d000000	            mov rbx, qword [0x040015c8] 	       598	channel.c	FUNCTION_24	FOR_1
0x40015c8	          0x4885db	                           test rbx, rbx	       598	channel.c	FUNCTION_24	FOR_1
0x40015cb	            0x745d	                            je 0x400162a	       598	channel.c	FUNCTION_24	FOR_1
0x40015cd	           0xf1f00	                         nop dword [rax]	       598	channel.c	FUNCTION_24	FOR_1
0x40015d0	        0x837b18ff	cmp dword [rbx + 0x18], 0xffffffffffffffff	       578	channel.c	FUNCTION_23	IF_1
0x40015d4	            0x740a	                            je 0x40015e0	       578	channel.c	FUNCTION_23	IF_1
0x40015d6	            0x31f6	                            xor esi, esi	       579	channel.c	FUNCTION_23	CALL_1
0x40015d8	          0x4889df	                            mov rdi, rbx	       579	channel.c	FUNCTION_23	CALL_1
0x40015db	      0xe890f9ffff	       call sym.channel_gui_register_one	       579	channel.c	FUNCTION_23	CALL_1
0x40015e0	    0x8b8328010000	           mov eax, dword [rbx + 0x128] 	       580	channel.c	FUNCTION_23	IF_2
0x40015e6	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       580	channel.c	FUNCTION_23	IF_2
0x40015e9	            0x7412	                            je 0x40015fd	       580	channel.c	FUNCTION_23	IF_2
0x40015eb	          0x3b4318	            cmp eax, dword [rbx + 0x18] 	       581	channel.c	FUNCTION_23	IF_2
0x40015ee	            0x740d	                            je 0x40015fd	       581	channel.c	FUNCTION_23	IF_2
0x40015f0	      0xbe01000000	                              mov esi, 1	       582	channel.c	FUNCTION_23	CALL_2
0x40015f5	          0x4889df	                            mov rdi, rbx	       582	channel.c	FUNCTION_23	CALL_2
0x40015f8	      0xe873f9ffff	       call sym.channel_gui_register_one	       582	channel.c	FUNCTION_23	CALL_2
0x40015fd	    0x8b8338020000	           mov eax, dword [rbx + 0x238] 	       583	channel.c	FUNCTION_23	IF_3
0x4001603	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       583	channel.c	FUNCTION_23	IF_3
0x4001606	            0x741a	                            je 0x4001622	       583	channel.c	FUNCTION_23	IF_3
0x4001608	          0x3b4318	            cmp eax, dword [rbx + 0x18] 	       584	channel.c	FUNCTION_23	IF_3
0x400160b	            0x7415	                            je 0x4001622	       584	channel.c	FUNCTION_23	IF_3
0x400160d	    0x3b8328010000	           cmp eax, dword [rbx + 0x128] 	       585	channel.c	FUNCTION_23	IF_3
0x4001613	            0x740d	                            je 0x4001622	       585	channel.c	FUNCTION_23	IF_3
0x4001615	      0xbe02000000	                              mov esi, 2	       586	channel.c	FUNCTION_23	CALL_3
0x400161a	          0x4889df	                            mov rdi, rbx	       586	channel.c	FUNCTION_23	CALL_3
0x400161d	      0xe84ef9ffff	       call sym.channel_gui_register_one	       586	channel.c	FUNCTION_23	CALL_3
0x4001622	          0x488b1b	                    mov rbx, qword [rbx]	       598	channel.c	FUNCTION_24	FOR_1
0x4001625	          0x4885db	                           test rbx, rbx	       598	channel.c	FUNCTION_24	FOR_1
0x4001628	            0x75a6	                           jne 0x40015d0	       598	channel.c	FUNCTION_24	FOR_1
0x400162a	              0x5b	                                 pop rbx	       600	channel.c	FUNCTION_24
0x400162b	              0xc3	                                     ret	       600	channel.c	FUNCTION_24
has_pending_job	DO,0:IF,1:FOR,1:ELSE,0:SWITCH,0:CALL,2:WHILE,0:functions,0	33
0x4008630	    0x488b35000000	            mov rsi, qword [0x04008637] 	      5476	channel.c	FUNCTION_128	FOR_1
0x4008637	          0x4885f6	                           test rsi, rsi	      5476	channel.c	FUNCTION_128	FOR_1
0x400863a	            0x7511	                           jne 0x400864d	      5476	channel.c	FUNCTION_128	FOR_1
0x400863c	            0xeb4d	                           jmp 0x400868b	      5476	channel.c	FUNCTION_128	FOR_1
0x400863e	            0x6690	                                     nop	      5476	channel.c	FUNCTION_128	FOR_1
0x4008640	          0x83f803	                              cmp eax, 3	      5480	channel.c	FUNCTION_128	FOR_1	IF_1
0x4008643	            0x742b	                            je 0x4008670	      5480	channel.c	FUNCTION_128	FOR_1	IF_1
0x4008645	          0x488b36	                    mov rsi, qword [rsi]	      5476	channel.c	FUNCTION_128	FOR_1
0x4008648	          0x4885f6	                           test rsi, rsi	      5476	channel.c	FUNCTION_128	FOR_1
0x400864b	            0x743e	                            je 0x400868b	      5476	channel.c	FUNCTION_128	FOR_1
0x400864d	          0x8b4628	            mov eax, dword [rsi + 0x28] 	      5479	channel.c	FUNCTION_128	FOR_1	IF_1	CALL_1
0x4008650	          0x83f801	                              cmp eax, 1	      5479	channel.c	FUNCTION_128	FOR_1	IF_1	CALL_1
0x4008653	            0x75eb	                           jne 0x4008640	      5479	channel.c	FUNCTION_128	FOR_1	IF_1	CALL_1
0x4008655	        0x488b7e60	            mov rdi, qword [rsi + 0x60] 	      5479	channel.c	FUNCTION_128	FOR_1	IF_1	CALL_1
0x4008659	          0x4885ff	                           test rdi, rdi	      5113	channel.c	FUNCTION_114	CALL_1
0x400865c	            0x7409	                            je 0x4008667	      5113	channel.c	FUNCTION_114	CALL_1
0x400865e	      0xe8bd84ffff	           call sym.channel_still_useful	      5113	channel.c	FUNCTION_114	CALL_1
0x4008663	            0x85c0	                           test eax, eax	      5113	channel.c	FUNCTION_114	CALL_1
0x4008665	            0x75de	                           jne 0x4008645	      5113	channel.c	FUNCTION_114	CALL_1
0x4008667	      0xb801000000	                              mov eax, 1	      5482	channel.c	FUNCTION_128	FOR_1	IF_1
0x400866c	              0xc3	                                     ret	      5484	channel.c	FUNCTION_128
0x400866d	           0xf1f00	                         nop dword [rax]	      5484	channel.c	FUNCTION_128
0x4008670	        0x488b4660	            mov rax, qword [rsi + 0x60] 	      5484	channel.c	FUNCTION_128
0x4008674	          0x4885c0	                           test rax, rax	      5122	channel.c	FUNCTION_115	CALL_1
0x4008677	            0x74cc	                            je 0x4008645	      5122	channel.c	FUNCTION_115	CALL_1
0x4008679	    0x8b806c040000	           mov eax, dword [rax + 0x46c] 	      5122	channel.c	FUNCTION_115	CALL_1
0x400867f	            0x85c0	                           test eax, eax	      5122	channel.c	FUNCTION_115	CALL_1
0x4008681	            0x74e4	                            je 0x4008667	      5122	channel.c	FUNCTION_115	CALL_1
0x4008683	          0x488b36	                    mov rsi, qword [rsi]	      5476	channel.c	FUNCTION_128	FOR_1
0x4008686	          0x4885f6	                           test rsi, rsi	      5476	channel.c	FUNCTION_128	FOR_1
0x4008689	            0x75c2	                           jne 0x400864d	      5476	channel.c	FUNCTION_128	FOR_1
0x400868b	            0x31c0	                            xor eax, eax	      5483	channel.c	FUNCTION_128
0x400868d	              0xc3	                                     ret	      5483	channel.c	FUNCTION_128
job_stop	DO,0:IF,7:FOR,0:ELSE,2:SWITCH,0:CALL,8:WHILE,0:functions,0	77
0x4008d80	              0x55	                                push rbp	      5797	channel.c	FUNCTION_134
0x4008d81	              0x53	                                push rbx	      5797	channel.c	FUNCTION_134
0x4008d82	          0x4889fd	                            mov rbp, rdi	      5797	channel.c	FUNCTION_134
0x4008d85	          0x4889d3	                            mov rbx, rdx	      5797	channel.c	FUNCTION_134
0x4008d88	        0x4883ec08	                              sub rsp, 8	      5797	channel.c	FUNCTION_134
0x4008d8c	          0x4885d2	                           test rdx, rdx	      5800	channel.c	FUNCTION_134	IF_1
0x4008d8f	     0xf84a3000000	                            je 0x4008e38	      5800	channel.c	FUNCTION_134	IF_1
0x4008d95	          0x8b4528	            mov eax, dword [rbp + 0x28] 	      5813	channel.c	FUNCTION_134	IF_4
0x4008d98	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	      5815	channel.c	FUNCTION_134	IF_4	CALL_4
0x4008d9c	            0x85c0	                           test eax, eax	      5813	channel.c	FUNCTION_134	IF_4
0x4008d9e	            0x7468	                            je 0x4008e08	      5813	channel.c	FUNCTION_134	IF_4
0x4008da0	          0x83f802	                              cmp eax, 2	      5818	channel.c	FUNCTION_134	IF_5
0x4008da3	            0x747b	                            je 0x4008e20	      5818	channel.c	FUNCTION_134	IF_5
0x4008da5	            0x31c0	                            xor eax, eax	      5823	channel.c	FUNCTION_134	CALL_6
0x4008da7	          0x4889da	                            mov rdx, rbx	      5823	channel.c	FUNCTION_134	CALL_6
0x4008daa	      0xbe00000000	                              mov esi, 0	      5823	channel.c	FUNCTION_134	CALL_6
0x4008daf	      0xe800000000	                          call 0x4008db4	      5823	channel.c	FUNCTION_134	CALL_6
0x4008db4	          0x4889de	                            mov rsi, rbx	      5824	channel.c	FUNCTION_134	IF_6	CALL_7
0x4008db7	          0x4889ef	                            mov rdi, rbp	      5824	channel.c	FUNCTION_134	IF_6	CALL_7
0x4008dba	      0xe800000000	                          call 0x4008dbf	      5824	channel.c	FUNCTION_134	IF_6	CALL_7
0x4008dbf	            0x85c0	                           test eax, eax	      5824	channel.c	FUNCTION_134	IF_6	CALL_7
0x4008dc1	            0x7437	                            je 0x4008dfa	      5824	channel.c	FUNCTION_134	IF_6	CALL_7
0x4008dc3	        0x488b5560	            mov rdx, qword [rbp + 0x60] 	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x4008dc7	          0x4885d2	                           test rdx, rdx	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x4008dca	     0xf84b0000000	                            je 0x4008e80	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x4008dd0	      0xb905000000	                              mov ecx, 5	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x4008dd5	          0x4889de	                            mov rsi, rbx	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x4008dd8	      0xbf00000000	                              mov edi, 0	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x4008ddd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x4008ddf	      0xb801000000	                              mov eax, 1	      5833	channel.c	FUNCTION_134
0x4008de4	        0x400f97c6	                                seta sil	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x4008de8	           0xf92c1	                                 setb cl	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x4008deb	          0x4038ce	                             cmp sil, cl	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x4008dee	            0x750a	                           jne 0x4008dfa	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x4008df0	    0xc782b0040000	              mov dword [rdx + 0x4b0], 1	      5829	channel.c	FUNCTION_134	IF_7
0x4008dfa	        0x4883c408	                              add rsp, 8	      5834	channel.c	FUNCTION_134
0x4008dfe	              0x5b	                                 pop rbx	      5834	channel.c	FUNCTION_134
0x4008dff	              0x5d	                                 pop rbp	      5834	channel.c	FUNCTION_134
0x4008e00	              0xc3	                                     ret	      5834	channel.c	FUNCTION_134
0x4008e01	     0xf1f80000000	                         nop dword [rax]	      5834	channel.c	FUNCTION_134
0x4008e08	      0xbe00000000	                              mov esi, 0	      5815	channel.c	FUNCTION_134	IF_4	CALL_4
0x4008e0d	      0xe800000000	                          call 0x4008e12	      5815	channel.c	FUNCTION_134	IF_4	CALL_4
0x4008e12	        0x4883c408	                              add rsp, 8	      5834	channel.c	FUNCTION_134
0x4008e16	            0x31c0	                            xor eax, eax	      5816	channel.c	FUNCTION_134	IF_4
0x4008e18	              0x5b	                                 pop rbx	      5834	channel.c	FUNCTION_134
0x4008e19	              0x5d	                                 pop rbp	      5834	channel.c	FUNCTION_134
0x4008e1a	              0xc3	                                     ret	      5834	channel.c	FUNCTION_134
0x4008e1b	       0xf1f440000	                   nop dword [rax + rax]	      5834	channel.c	FUNCTION_134
0x4008e20	            0x31c0	                            xor eax, eax	      5820	channel.c	FUNCTION_134	IF_5	CALL_5
0x4008e22	      0xbe00000000	                              mov esi, 0	      5820	channel.c	FUNCTION_134	IF_5	CALL_5
0x4008e27	      0xe800000000	                          call 0x4008e2c	      5820	channel.c	FUNCTION_134	IF_5	CALL_5
0x4008e2c	        0x4883c408	                              add rsp, 8	      5834	channel.c	FUNCTION_134
0x4008e30	            0x31c0	                            xor eax, eax	      5821	channel.c	FUNCTION_134	IF_5
0x4008e32	              0x5b	                                 pop rbx	      5834	channel.c	FUNCTION_134
0x4008e33	              0x5d	                                 pop rbp	      5834	channel.c	FUNCTION_134
0x4008e34	              0xc3	                                     ret	      5834	channel.c	FUNCTION_134
0x4008e35	           0xf1f00	                         nop dword [rax]	      5834	channel.c	FUNCTION_134
0x4008e38	          0x8b4610	            mov eax, dword [rsi + 0x10] 	      5802	channel.c	FUNCTION_134	ELSE_1	IF_2
0x4008e3b	      0xbb00000000	                              mov ebx, 0	      5803	channel.c	FUNCTION_134	ELSE_1	IF_2
0x4008e40	            0x85c0	                           test eax, eax	      5802	channel.c	FUNCTION_134	ELSE_1	IF_2
0x4008e42	     0xf844dffffff	                            je 0x4008d95	      5802	channel.c	FUNCTION_134	ELSE_1	IF_2
0x4008e48	        0x488d7e10	                   lea rdi, [rsi + 0x10]	      5806	channel.c	FUNCTION_134	ELSE_2	CALL_1
0x4008e4c	      0xe800000000	                          call 0x4008e51	      5806	channel.c	FUNCTION_134	ELSE_2	CALL_1
0x4008e51	          0x4885c0	                           test rax, rax	      5807	channel.c	FUNCTION_134	ELSE_2	IF_3
0x4008e54	          0x4889c3	                            mov rbx, rax	      5806	channel.c	FUNCTION_134	ELSE_2	CALL_1
0x4008e57	     0xf8538ffffff	                           jne 0x4008d95	      5807	channel.c	FUNCTION_134	ELSE_2	IF_3
0x4008e5d	      0xba05000000	                              mov edx, 5	      5809	channel.c	FUNCTION_134	ELSE_2	IF_3	CALL_3
0x4008e62	      0xbe00000000	                              mov esi, 0	      5809	channel.c	FUNCTION_134	ELSE_2	IF_3	CALL_3
0x4008e67	            0x31ff	                            xor edi, edi	      5809	channel.c	FUNCTION_134	ELSE_2	IF_3	CALL_3
0x4008e69	      0xe800000000	                          call 0x4008e6e	      5809	channel.c	FUNCTION_134	ELSE_2	IF_3	CALL_3
0x4008e6e	          0x4889c7	                            mov rdi, rax	      5809	channel.c	FUNCTION_134	ELSE_2	IF_3	CALL_3
0x4008e71	      0xe800000000	                          call 0x4008e76	      5809	channel.c	FUNCTION_134	ELSE_2	IF_3	CALL_3
0x4008e76	            0x31c0	                            xor eax, eax	      5810	channel.c	FUNCTION_134	ELSE_2	IF_3
0x4008e78	            0xeb80	                           jmp 0x4008dfa	      5810	channel.c	FUNCTION_134	ELSE_2	IF_3
0x4008e7a	    0x660f1f440000	                    nop word [rax + rax]	      5810	channel.c	FUNCTION_134	ELSE_2	IF_3
0x4008e80	      0xb801000000	                              mov eax, 1	      5833	channel.c	FUNCTION_134
0x4008e85	      0xe970ffffff	                           jmp 0x4008dfa	      5833	channel.c	FUNCTION_134
ch_expr_common	DO,0:IF,6:FOR,0:ELSE,1:SWITCH,0:CALL,12:WHILE,0:functions,0	131
0x4007d50	            0x4157	                                push r15	      3922	channel.c	FUNCTION_89
0x4007d52	            0x4156	                                push r14	      3922	channel.c	FUNCTION_89
0x4007d54	            0x31c9	                            xor ecx, ecx	      3937	channel.c	FUNCTION_89	CALL_1
0x4007d56	            0x4155	                                push r13	      3922	channel.c	FUNCTION_89
0x4007d58	            0x4154	                                push r12	      3922	channel.c	FUNCTION_89
0x4007d5a	          0x4189d4	                           mov r12d, edx	      3922	channel.c	FUNCTION_89
0x4007d5d	              0x55	                                push rbp	      3922	channel.c	FUNCTION_89
0x4007d5e	              0x53	                                push rbx	      3922	channel.c	FUNCTION_89
0x4007d5f	            0x31d2	                            xor edx, edx	      3937	channel.c	FUNCTION_89	CALL_1
0x4007d61	          0x4889f5	                            mov rbp, rsi	      3922	channel.c	FUNCTION_89
0x4007d64	          0x4889fb	                            mov rbx, rdi	      3922	channel.c	FUNCTION_89
0x4007d67	    0x4881ec980300	                          sub rsp, 0x398	      3922	channel.c	FUNCTION_89
0x4007d6e	    0xc70602000000	                      mov dword [rsi], 2	      3934	channel.c	FUNCTION_89
0x4007d74	    0x48c746080000	                  mov qword [rsi + 8], 0	      3935	channel.c	FUNCTION_89
0x4007d7c	      0xbe01000000	                              mov esi, 1	      3937	channel.c	FUNCTION_89	CALL_1
0x4007d81	    0x64488b042528	                mov rax, qword fs:[0x28]	      3922	channel.c	FUNCTION_89
0x4007d8a	    0x488984248803	            mov qword [rsp + 0x388], rax	      3922	channel.c	FUNCTION_89
0x4007d92	            0x31c0	                            xor eax, eax	      3922	channel.c	FUNCTION_89
0x4007d94	      0xe800000000	                          call 0x4007d99	      3937	channel.c	FUNCTION_89	CALL_1
0x4007d99	          0x4885c0	                           test rax, rax	      3938	channel.c	FUNCTION_89	IF_1
0x4007d9c	     0xf8443010000	                            je 0x4007ee5	      3938	channel.c	FUNCTION_89	IF_1
0x4007da2	            0x31d2	                            xor edx, edx	      4356	channel.c	FUNCTION_98	IF_1
0x4007da4	        0x837818ff	cmp dword [rax + 0x18], 0xffffffffffffffff	      4356	channel.c	FUNCTION_98	IF_1
0x4007da8	           0xf94c2	                                 sete dl	      4356	channel.c	FUNCTION_98	IF_1
0x4007dab	          0x8d1452	                  lea edx, [rdx + rdx*2]	      4356	channel.c	FUNCTION_98	IF_1
0x4007dae	          0x4889d1	                            mov rcx, rdx	      4380	channel.c	FUNCTION_100
0x4007db1	        0x48c1e208	                              shl rdx, 8	      4380	channel.c	FUNCTION_100
0x4007db5	        0x48c1e104	                              shl rcx, 4	      4380	channel.c	FUNCTION_100
0x4007db9	          0x4801ca	                            add rdx, rcx	      4380	channel.c	FUNCTION_100
0x4007dbc	        0x8b541020	      mov edx, dword [rax + rdx + 0x20] 	      4380	channel.c	FUNCTION_100
0x4007dc0	          0x83fa01	                              cmp edx, 1	      3943	channel.c	FUNCTION_89	IF_2
0x4007dc3	     0xf8657010000	                           jbe 0x4007f20	      3943	channel.c	FUNCTION_89	IF_2
0x4007dc9	          0x8b7814	            mov edi, dword [rax + 0x14] 	      3949	channel.c	FUNCTION_89
0x4007dcc	          0x83fa03	                              cmp edx, 3	      3950	channel.c	FUNCTION_89	CALL_6
0x4007dcf	        0x488d7310	                   lea rsi, [rbx + 0x10]	      3950	channel.c	FUNCTION_89	CALL_6
0x4007dd3	           0xf94c2	                                 sete dl	      3950	channel.c	FUNCTION_89	CALL_6
0x4007dd6	           0xfb6d2	                           movzx edx, dl	      3950	channel.c	FUNCTION_89	CALL_6
0x4007dd9	        0x448d6f01	                     lea r13d, [rdi + 1]	      3949	channel.c	FUNCTION_89
0x4007ddd	          0x83c204	                              add edx, 4	      3950	channel.c	FUNCTION_89	CALL_6
0x4007de0	        0x44896814	            mov dword [rax + 0x14], r13d	      3949	channel.c	FUNCTION_89
0x4007de4	          0x4489ef	                           mov edi, r13d	      3950	channel.c	FUNCTION_89	CALL_6
0x4007de7	      0xe800000000	                          call 0x4007dec	      3950	channel.c	FUNCTION_89	CALL_6
0x4007dec	          0x4885c0	                           test rax, rax	      3952	channel.c	FUNCTION_89	IF_3
0x4007def	          0x4989c6	                            mov r14, rax	      3950	channel.c	FUNCTION_89	CALL_6
0x4007df2	     0xf84ed000000	                            je 0x4007ee5	      3952	channel.c	FUNCTION_89	IF_3
0x4007df8	          0x4585e4	                         test r12d, r12d	      3955	channel.c	FUNCTION_89	CALL_7
0x4007dfb	      0x4c8d7c2410	                   lea r15, [rsp + 0x10]	      3955	channel.c	FUNCTION_89	CALL_7
0x4007e00	     0xf84aa000000	                            je 0x4007eb0	      3955	channel.c	FUNCTION_89	CALL_7
0x4007e06	        0x4883ec08	                              sub rsp, 8	      3955	channel.c	FUNCTION_89	CALL_7
0x4007e0a	          0x4489e1	                           mov ecx, r12d	      3955	channel.c	FUNCTION_89	CALL_7
0x4007e0d	          0x4c89f6	                            mov rsi, r14	      3955	channel.c	FUNCTION_89	CALL_7
0x4007e10	      0x488d44240c	                    lea rax, [rsp + 0xc]	      3955	channel.c	FUNCTION_89	CALL_7
0x4007e15	          0x4889df	                            mov rdi, rbx	      3955	channel.c	FUNCTION_89	CALL_7
0x4007e18	    0x41b900000000	                              mov r9d, 0	      3955	channel.c	FUNCTION_89	CALL_7
0x4007e1e	          0x4d89f8	                             mov r8, r15	      3955	channel.c	FUNCTION_89	CALL_7
0x4007e21	          0x4489ea	                           mov edx, r13d	      3955	channel.c	FUNCTION_89	CALL_7
0x4007e24	              0x50	                                push rax	      3955	channel.c	FUNCTION_89	CALL_7
0x4007e25	      0xe8c6fcffff	                    call sym.send_common	      3955	channel.c	FUNCTION_89	CALL_7
0x4007e2a	          0x4c89f7	                            mov rdi, r14	      3957	channel.c	FUNCTION_89	CALL_8
0x4007e2d	          0x4889c3	                            mov rbx, rax	      3955	channel.c	FUNCTION_89	CALL_7
0x4007e30	      0xe800000000	                          call 0x4007e35	      3957	channel.c	FUNCTION_89	CALL_8
0x4007e35	          0x4885db	                           test rbx, rbx	      3958	channel.c	FUNCTION_89	IF_4
0x4007e38	              0x59	                                 pop rcx	      3958	channel.c	FUNCTION_89	IF_4
0x4007e39	              0x5e	                                 pop rsi	      3958	channel.c	FUNCTION_89	IF_4
0x4007e3a	     0xf849d000000	                            je 0x4007edd	      3958	channel.c	FUNCTION_89	IF_4
0x4007e40	      0xf644241102	               test byte [rsp + 0x11], 2	      3960	channel.c	FUNCTION_89	IF_4	IF_5
0x4007e45	     0xf85c5000000	                           jne 0x4007f10	      3960	channel.c	FUNCTION_89	IF_4	IF_5
0x4007e4b	        0x8b542404	                mov edx, dword [rsp + 4]	      3963	channel.c	FUNCTION_89	IF_4	CALL_9
0x4007e4f	          0x4889d0	                            mov rax, rdx	      4389	channel.c	FUNCTION_101
0x4007e52	          0x4889d6	                            mov rsi, rdx	      3963	channel.c	FUNCTION_89	IF_4	CALL_9
0x4007e55	        0x48c1e208	                              shl rdx, 8	      4389	channel.c	FUNCTION_101
0x4007e59	        0x48c1e004	                              shl rax, 4	      4389	channel.c	FUNCTION_101
0x4007e5d	          0x4801c2	                            add rdx, rax	      4389	channel.c	FUNCTION_101
0x4007e60	        0x8b541328	      mov edx, dword [rbx + rdx + 0x28] 	      4389	channel.c	FUNCTION_101
0x4007e64	      0x4c8d442408	                       lea r8, [rsp + 8]	      3964	channel.c	FUNCTION_89	IF_4	IF_6	CALL_10
0x4007e69	          0x4489e9	                           mov ecx, r13d	      3964	channel.c	FUNCTION_89	IF_4	IF_6	CALL_10
0x4007e6c	          0x4889df	                            mov rdi, rbx	      3964	channel.c	FUNCTION_89	IF_4	IF_6	CALL_10
0x4007e6f	      0xe83cdfffff	        call sym.channel_read_json_block	      3964	channel.c	FUNCTION_89	IF_4	IF_6	CALL_10
0x4007e74	          0x83f801	                              cmp eax, 1	      3964	channel.c	FUNCTION_89	IF_4	IF_6	CALL_10
0x4007e77	            0x7564	                           jne 0x4007edd	      3964	channel.c	FUNCTION_89	IF_4	IF_6	CALL_10
0x4007e79	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3967	channel.c	FUNCTION_89	IF_4	IF_6
0x4007e7e	        0x488b4708	                mov rax, qword [rdi + 8]	      3967	channel.c	FUNCTION_89	IF_4	IF_6
0x4007e82	        0x488b5008	                mov rdx, qword [rax + 8]	      3971	channel.c	FUNCTION_89	IF_4	IF_6
0x4007e86	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      3971	channel.c	FUNCTION_89	IF_4	IF_6
0x4007e8a	        0x488b5a18	            mov rbx, qword [rdx + 0x18] 	      3971	channel.c	FUNCTION_89	IF_4	IF_6
0x4007e8e	        0x48894d00	                    mov qword [rbp], rcx	      3971	channel.c	FUNCTION_89	IF_4	IF_6
0x4007e92	        0x48895d08	                mov qword [rbp + 8], rbx	      3971	channel.c	FUNCTION_89	IF_4	IF_6
0x4007e96	        0x488b4008	                mov rax, qword [rax + 8]	      3972	channel.c	FUNCTION_89	IF_4	IF_6
0x4007e9a	    0xc74010010000	               mov dword [rax + 0x10], 1	      3972	channel.c	FUNCTION_89	IF_4	IF_6
0x4007ea1	      0xe800000000	                          call 0x4007ea6	      3973	channel.c	FUNCTION_89	IF_4	IF_6	CALL_11
0x4007ea6	            0xeb35	                           jmp 0x4007edd	      3973	channel.c	FUNCTION_89	IF_4	IF_6	CALL_11
0x4007ea8	     0xf1f84000000	                   nop dword [rax + rax]	      3973	channel.c	FUNCTION_89	IF_4	IF_6	CALL_11
0x4007eb0	        0x4883ec08	                              sub rsp, 8	      3955	channel.c	FUNCTION_89	CALL_7
0x4007eb4	          0x4489ea	                           mov edx, r13d	      3955	channel.c	FUNCTION_89	CALL_7
0x4007eb7	    0x41b900000000	                              mov r9d, 0	      3955	channel.c	FUNCTION_89	CALL_7
0x4007ebd	      0x488d44240c	                    lea rax, [rsp + 0xc]	      3955	channel.c	FUNCTION_89	CALL_7
0x4007ec2	          0x4d89f8	                             mov r8, r15	      3955	channel.c	FUNCTION_89	CALL_7
0x4007ec5	            0x31c9	                            xor ecx, ecx	      3955	channel.c	FUNCTION_89	CALL_7
0x4007ec7	          0x4c89f6	                            mov rsi, r14	      3955	channel.c	FUNCTION_89	CALL_7
0x4007eca	          0x4889df	                            mov rdi, rbx	      3955	channel.c	FUNCTION_89	CALL_7
0x4007ecd	              0x50	                                push rax	      3955	channel.c	FUNCTION_89	CALL_7
0x4007ece	      0xe81dfcffff	                    call sym.send_common	      3955	channel.c	FUNCTION_89	CALL_7
0x4007ed3	          0x4c89f7	                            mov rdi, r14	      3957	channel.c	FUNCTION_89	CALL_8
0x4007ed6	      0xe800000000	                          call 0x4007edb	      3957	channel.c	FUNCTION_89	CALL_8
0x4007edb	              0x58	                                 pop rax	      3957	channel.c	FUNCTION_89	CALL_8
0x4007edc	              0x5a	                                 pop rdx	      3957	channel.c	FUNCTION_89	CALL_8
0x4007edd	          0x4c89ff	                            mov rdi, r15	      3976	channel.c	FUNCTION_89	CALL_12
0x4007ee0	      0xe800000000	                          call 0x4007ee5	      3976	channel.c	FUNCTION_89	CALL_12
0x4007ee5	    0x488b84248803	           mov rax, qword [rsp + 0x388] 	      3977	channel.c	FUNCTION_89
0x4007eed	    0x644833042528	                xor rax, qword fs:[0x28]	      3977	channel.c	FUNCTION_89
0x4007ef6	            0x7543	                           jne 0x4007f3b	      3977	channel.c	FUNCTION_89
0x4007ef8	    0x4881c4980300	                          add rsp, 0x398	      3977	channel.c	FUNCTION_89
0x4007eff	              0x5b	                                 pop rbx	      3977	channel.c	FUNCTION_89
0x4007f00	              0x5d	                                 pop rbp	      3977	channel.c	FUNCTION_89
0x4007f01	            0x415c	                                 pop r12	      3977	channel.c	FUNCTION_89
0x4007f03	            0x415d	                                 pop r13	      3977	channel.c	FUNCTION_89
0x4007f05	            0x415e	                                 pop r14	      3977	channel.c	FUNCTION_89
0x4007f07	            0x415f	                                 pop r15	      3977	channel.c	FUNCTION_89
0x4007f09	              0xc3	                                     ret	      3977	channel.c	FUNCTION_89
0x4007f0a	    0x660f1f440000	                    nop word [rax + rax]	      3977	channel.c	FUNCTION_89
0x4007f10	    0x8b9424080200	           mov edx, dword [rsp + 0x208] 	      3961	channel.c	FUNCTION_89	IF_4	IF_5
0x4007f17	        0x8b742404	                mov esi, dword [rsp + 4]	      3961	channel.c	FUNCTION_89	IF_4	IF_5
0x4007f1b	      0xe944ffffff	                           jmp 0x4007e64	      3961	channel.c	FUNCTION_89	IF_4	IF_5
0x4007f20	            0x31ff	                            xor edi, edi	      3945	channel.c	FUNCTION_89	IF_2	CALL_5
0x4007f22	      0xba05000000	                              mov edx, 5	      3945	channel.c	FUNCTION_89	IF_2	CALL_5
0x4007f27	      0xbe00000000	                              mov esi, 0	      3945	channel.c	FUNCTION_89	IF_2	CALL_5
0x4007f2c	      0xe800000000	                          call 0x4007f31	      3945	channel.c	FUNCTION_89	IF_2	CALL_5
0x4007f31	          0x4889c7	                            mov rdi, rax	      3945	channel.c	FUNCTION_89	IF_2	CALL_5
0x4007f34	      0xe800000000	                          call 0x4007f39	      3945	channel.c	FUNCTION_89	IF_2	CALL_5
0x4007f39	            0xebaa	                           jmp 0x4007ee5	      3946	channel.c	FUNCTION_89	IF_2
0x4007f3b	      0xe800000000	                call sym.job_any_running	      3977	channel.c	FUNCTION_89
channel_wait	DO,0:IF,14:FOR,2:ELSE,2:SWITCH,0:CALL,19:WHILE,1:functions,0	105
0x4003590	            0x4157	                                push r15	      3117	channel.c	ELSE_1	FUNCTION_76
0x4003592	            0x4156	                                push r14	      3117	channel.c	ELSE_1	FUNCTION_76
0x4003594	            0x4155	                                push r13	      3117	channel.c	ELSE_1	FUNCTION_76
0x4003596	            0x4154	                                push r12	      3117	channel.c	ELSE_1	FUNCTION_76
0x4003598	          0x4189f5	                           mov r13d, esi	      3117	channel.c	ELSE_1	FUNCTION_76
0x400359b	              0x55	                                push rbp	      3117	channel.c	ELSE_1	FUNCTION_76
0x400359c	              0x53	                                push rbx	      3117	channel.c	ELSE_1	FUNCTION_76
0x400359d	            0x89d3	                            mov ebx, edx	      3117	channel.c	ELSE_1	FUNCTION_76
0x400359f	    0x4881ec380100	                          sub rsp, 0x138	      3117	channel.c	ELSE_1	FUNCTION_76
0x40035a6	    0x64488b042528	                mov rax, qword fs:[0x28]	      3117	channel.c	ELSE_1	FUNCTION_76
0x40035af	    0x488984242801	            mov qword [rsp + 0x128], rax	      3117	channel.c	ELSE_1	FUNCTION_76
0x40035b7	            0x31c0	                            xor eax, eax	      3117	channel.c	ELSE_1	FUNCTION_76
0x40035b9	            0x85d2	                           test edx, edx	      3118	channel.c	ELSE_1	FUNCTION_76	IF_1
0x40035bb	            0x7e0a	                           jle 0x40035c7	      3118	channel.c	ELSE_1	FUNCTION_76	IF_1
0x40035bd	      0xbe00000000	                              mov esi, 0	      3119	channel.c	ELSE_1	FUNCTION_76	CALL_1
0x40035c2	      0xe800000000	                          call 0x40035c7	      3119	channel.c	ELSE_1	FUNCTION_76	CALL_1
0x40035c7	            0x89d8	                            mov eax, ebx	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x40035c9	      0xbad34d6210	                     mov edx, 0x10624dd3	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x40035ce	    0x41be01000000	                             mov r14d, 1	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x40035d4	            0xf7ea	                                imul edx	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x40035d6	            0x89d8	                            mov eax, ebx	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x40035d8	      0x4c8d642420	                   lea r12, [rsp + 0x20]	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x40035dd	          0xc1f81f	                           sar eax, 0x1f	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x40035e0	    0x488dac24a000	                   lea rbp, [rsp + 0xa0]	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x40035e8	          0x4d63fd	                        movsxd r15, r13d	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x40035eb	          0xc1fa06	                              sar edx, 6	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x40035ee	            0x29c2	                            sub edx, eax	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x40035f0	          0x4863c2	                         movsxd rax, edx	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x40035f3	      0x4889442410	             mov qword [rsp + 0x10], rax	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x40035f8	          0x4489e8	                           mov eax, r13d	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x40035fb	    0x69d2e8030000	                    imul edx, edx, 0x3e8	      3179	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x4003601	          0xc1f81f	                           sar eax, 0x1f	      3179	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x4003604	          0xc1e81a	                           shr eax, 0x1a	      3179	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x4003607	      0x418d4c0500	                    lea ecx, [r13 + rax]	      3179	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x400360c	            0x29d3	                            sub ebx, edx	      3179	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x400360e	    0x69dbe8030000	                    imul ebx, ebx, 0x3e8	      3179	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x4003614	          0x83e13f	                           and ecx, 0x3f	      3179	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x4003617	            0x29c1	                            sub ecx, eax	      3179	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x4003619	        0x418d4501	                      lea eax, [r13 + 1]	      3179	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x400361d	          0x49d3e6	                             shl r14, cl	      3179	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x4003620	          0x4863db	                         movsxd rbx, ebx	      3179	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x4003623	        0x8944240c	              mov dword [rsp + 0xc], eax	      3179	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x4003627	      0x48895c2418	             mov qword [rsp + 0x18], rbx	      3179	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x400362c	            0x31db	                            xor ebx, ebx	      3182	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_10
0x400362e	    0x41bd10000000	                          mov r13d, 0x10	      3182	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_10
0x4003634	          0x4c89e7	                            mov rdi, r12	      3182	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_10
0x4003637	            0x89d8	                            mov eax, ebx	      3182	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_10
0x4003639	          0x4c89e9	                            mov rcx, r13	      3182	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_10
0x400363c	              0xfc	                                     cld	      3182	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_10
0x400363d	          0xf348ab	              rep stosq qword [rdi], rax	      3182	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_10
0x4003640	          0x4c89ff	                            mov rdi, r15	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x4003643	      0xe800000000	                          call 0x4003648	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x4003648	          0x4c89e9	                            mov rcx, r13	      3188	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_12
0x400364b	      0x4c0974c420	      or qword [rsp + rax*8 + 0x20], r14	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x4003650	          0x4889ef	                            mov rdi, rbp	      3188	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_12
0x4003653	            0x89d8	                            mov eax, ebx	      3188	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_12
0x4003655	              0xfc	                                     cld	      3188	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_12
0x4003656	          0xf348ab	              rep stosq qword [rdi], rax	      3188	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_12
0x4003659	        0x8b7c240c	              mov edi, dword [rsp + 0xc]	      3189	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_13
0x400365d	          0x4889ee	                            mov rsi, rbp	      3189	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_13
0x4003660	      0xe83bccffff	              call sym.channel_fill_wfds	      3189	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_13
0x4003665	      0x4c8d442410	                    lea r8, [rsp + 0x10]	      3191	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_14
0x400366a	            0x31c9	                            xor ecx, ecx	      3191	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_14
0x400366c	          0x4889ea	                            mov rdx, rbp	      3191	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_14
0x400366f	          0x4c89e6	                            mov rsi, r12	      3191	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_14
0x4003672	            0x89c7	                            mov edi, eax	      3191	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_14
0x4003674	      0xe800000000	                          call 0x4003679	      3191	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_14
0x4003679	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3194	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_10
0x400367c	            0x7472	                            je 0x40036f0	      3194	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_10
0x400367e	            0x85c0	                           test eax, eax	      3197	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11
0x4003680	            0x7e7c	                           jle 0x40036fe	      3197	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11
0x4003682	          0x4c89ff	                            mov rdi, r15	      3199	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x4003685	      0xe800000000	                          call 0x400368a	      3199	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x400368a	      0x4c8574c420	   test qword [rsp + rax*8 + 0x20], r14 	      3199	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x400368f	            0x752f	                           jne 0x40036c0	      3199	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x4003691	    0x4c8b2d000000	            mov r13, qword [0x04003698] 	      1533	channel.c	FUNCTION_41	FOR_1
0x4003698	          0x4d85ed	                           test r13, r13	      1533	channel.c	FUNCTION_41	FOR_1
0x400369b	            0x7491	                            je 0x400362e	      1533	channel.c	FUNCTION_41	FOR_1
0x400369d	           0xf1f00	                         nop dword [rax]	      1533	channel.c	FUNCTION_41	FOR_1
0x40036a0	          0x4c89ef	                            mov rdi, r13	      1534	channel.c	FUNCTION_41	CALL_1
0x40036a3	      0xe858feffff	            call sym.channel_write_input	      1534	channel.c	FUNCTION_41	CALL_1
0x40036a8	        0x4d8b6d00	                    mov r13, qword [r13]	      1533	channel.c	FUNCTION_41	FOR_1
0x40036ac	          0x4d85ed	                           test r13, r13	      1533	channel.c	FUNCTION_41	FOR_1
0x40036af	            0x75ef	                           jne 0x40036a0	      1533	channel.c	FUNCTION_41	FOR_1
0x40036b1	      0xe978ffffff	                           jmp 0x400362e	      1533	channel.c	FUNCTION_41	FOR_1
0x40036b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1533	channel.c	FUNCTION_41	FOR_1
0x40036c0	            0x31c0	                            xor eax, eax	      3200	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12
0x40036c2	    0x488bb4242801	           mov rsi, qword [rsp + 0x128] 	      3227	channel.c	FUNCTION_76	ELSE_1
0x40036ca	    0x644833342528	                xor rsi, qword fs:[0x28]	      3227	channel.c	FUNCTION_76	ELSE_1
0x40036d3	            0x7530	                           jne 0x4003705	      3227	channel.c	FUNCTION_76	ELSE_1
0x40036d5	    0x4881c4380100	                          add rsp, 0x138	      3227	channel.c	FUNCTION_76	ELSE_1
0x40036dc	              0x5b	                                 pop rbx	      3227	channel.c	FUNCTION_76	ELSE_1
0x40036dd	              0x5d	                                 pop rbp	      3227	channel.c	FUNCTION_76	ELSE_1
0x40036de	            0x415c	                                 pop r12	      3227	channel.c	FUNCTION_76	ELSE_1
0x40036e0	            0x415d	                                 pop r13	      3227	channel.c	FUNCTION_76	ELSE_1
0x40036e2	            0x415e	                                 pop r14	      3227	channel.c	FUNCTION_76	ELSE_1
0x40036e4	            0x415f	                                 pop r15	      3227	channel.c	FUNCTION_76	ELSE_1
0x40036e6	              0xc3	                                     ret	      3227	channel.c	FUNCTION_76	ELSE_1
0x40036e7	    0x660f1f840000	                    nop word [rax + rax]	      3227	channel.c	FUNCTION_76	ELSE_1
0x40036f0	      0xe800000000	                          call 0x40036f5	      3194	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_10
0x40036f5	          0x833804	                      cmp dword [rax], 4	      3194	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_10
0x40036f8	     0xf8430ffffff	                            je 0x400362e	      3194	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_10
0x40036fe	      0xb801000000	                              mov eax, 1	      3226	channel.c	FUNCTION_76	ELSE_1
0x4003703	            0xebbd	                           jmp 0x40036c2	      3226	channel.c	FUNCTION_76	ELSE_1
0x4003705	      0xe800000000	                          call 0x400370a	      3227	channel.c	FUNCTION_76	ELSE_1
job_info_all	DO,0:IF,1:FOR,1:ELSE,0:SWITCH,0:CALL,1:WHILE,0:functions,0	30
0x4008d10	              0x55	                                push rbp	      5776	channel.c	FUNCTION_133
0x4008d11	              0x53	                                push rbx	      5776	channel.c	FUNCTION_133
0x4008d12	        0x4883ec28	                           sub rsp, 0x28	      5776	channel.c	FUNCTION_133
0x4008d16	    0x488b1d000000	            mov rbx, qword [0x04008d1d] 	      5780	channel.c	FUNCTION_133	FOR_1
0x4008d1d	    0x64488b042528	                mov rax, qword fs:[0x28]	      5776	channel.c	FUNCTION_133
0x4008d26	      0x4889442418	             mov qword [rsp + 0x18], rax	      5776	channel.c	FUNCTION_133
0x4008d2b	            0x31c0	                            xor eax, eax	      5776	channel.c	FUNCTION_133
0x4008d2d	          0x4885db	                           test rbx, rbx	      5780	channel.c	FUNCTION_133	FOR_1
0x4008d30	            0x7432	                            je 0x4008d64	      5780	channel.c	FUNCTION_133	FOR_1
0x4008d32	          0x4889fd	                            mov rbp, rdi	      5780	channel.c	FUNCTION_133	FOR_1
0x4008d35	            0xeb11	                           jmp 0x4008d48	      5780	channel.c	FUNCTION_133	FOR_1
0x4008d37	    0x660f1f840000	                    nop word [rax + rax]	      5780	channel.c	FUNCTION_133	FOR_1
0x4008d40	          0x488b1b	                    mov rbx, qword [rbx]	      5780	channel.c	FUNCTION_133	FOR_1
0x4008d43	          0x4885db	                           test rbx, rbx	      5780	channel.c	FUNCTION_133	FOR_1
0x4008d46	            0x741c	                            je 0x4008d64	      5780	channel.c	FUNCTION_133	FOR_1
0x4008d48	          0x4889e6	                            mov rsi, rsp	      5785	channel.c	FUNCTION_133	FOR_1	IF_1	CALL_1
0x4008d4b	          0x4889ef	                            mov rdi, rbp	      5785	channel.c	FUNCTION_133	FOR_1	IF_1	CALL_1
0x4008d4e	    0xc70424090000	                      mov dword [rsp], 9	      5782	channel.c	FUNCTION_133	FOR_1
0x4008d55	      0x48895c2408	                mov qword [rsp + 8], rbx	      5783	channel.c	FUNCTION_133	FOR_1
0x4008d5a	      0xe800000000	                          call 0x4008d5f	      5785	channel.c	FUNCTION_133	FOR_1	IF_1	CALL_1
0x4008d5f	          0x83f801	                              cmp eax, 1	      5785	channel.c	FUNCTION_133	FOR_1	IF_1	CALL_1
0x4008d62	            0x74dc	                            je 0x4008d40	      5785	channel.c	FUNCTION_133	FOR_1	IF_1	CALL_1
0x4008d64	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5788	channel.c	FUNCTION_133
0x4008d69	    0x644833042528	                xor rax, qword fs:[0x28]	      5788	channel.c	FUNCTION_133
0x4008d72	            0x7507	                           jne 0x4008d7b	      5788	channel.c	FUNCTION_133
0x4008d74	        0x4883c428	                           add rsp, 0x28	      5788	channel.c	FUNCTION_133
0x4008d78	              0x5b	                                 pop rbx	      5788	channel.c	FUNCTION_133
0x4008d79	              0x5d	                                 pop rbp	      5788	channel.c	FUNCTION_133
0x4008d7a	              0xc3	                                     ret	      5788	channel.c	FUNCTION_133
0x4008d7b	      0xe800000000	                       call sym.job_stop	      5788	channel.c	FUNCTION_133
drop_messages	DO,0:IF,0:FOR,0:ELSE,0:SWITCH,0:CALL,3:WHILE,1:functions,0	24
0x4002410	            0x4154	                                push r12	      2448	channel.c	FUNCTION_60
0x4002412	          0x4189f4	                           mov r12d, esi	      2448	channel.c	FUNCTION_60
0x4002415	              0x55	                                push rbp	      2448	channel.c	FUNCTION_60
0x4002416	          0x4889fd	                            mov rbp, rdi	      2448	channel.c	FUNCTION_60
0x4002419	              0x53	                                push rbx	      2448	channel.c	FUNCTION_60
0x400241a	            0xeb1e	                           jmp 0x400243a	      2451	channel.c	FUNCTION_60	WHILE_1	CALL_1
0x400241c	         0xf1f4000	                         nop dword [rax]	      2451	channel.c	FUNCTION_60	WHILE_1	CALL_1
0x4002420	          0x4889ef	                            mov rdi, rbp	      2453	channel.c	FUNCTION_60	WHILE_1	CALL_2
0x4002423	          0x4889da	                            mov rdx, rbx	      2453	channel.c	FUNCTION_60	WHILE_1	CALL_2
0x4002426	      0xbe00000000	                              mov esi, 0	      2453	channel.c	FUNCTION_60	WHILE_1	CALL_2
0x400242b	            0x31c0	                            xor eax, eax	      2453	channel.c	FUNCTION_60	WHILE_1	CALL_2
0x400242d	      0xe800000000	                          call 0x4002432	      2453	channel.c	FUNCTION_60	WHILE_1	CALL_2
0x4002432	          0x4889df	                            mov rdi, rbx	      2454	channel.c	FUNCTION_60	WHILE_1	CALL_3
0x4002435	      0xe800000000	                          call 0x400243a	      2454	channel.c	FUNCTION_60	WHILE_1	CALL_3
0x400243a	          0x4489e6	                           mov esi, r12d	      2451	channel.c	FUNCTION_60	WHILE_1	CALL_1
0x400243d	          0x4889ef	                            mov rdi, rbp	      2451	channel.c	FUNCTION_60	WHILE_1	CALL_1
0x4002440	      0xe800000000	                          call 0x4002445	      2451	channel.c	FUNCTION_60	WHILE_1	CALL_1
0x4002445	          0x4885c0	                           test rax, rax	      2451	channel.c	FUNCTION_60	WHILE_1	CALL_1
0x4002448	          0x4889c3	                            mov rbx, rax	      2451	channel.c	FUNCTION_60	WHILE_1	CALL_1
0x400244b	            0x75d3	                           jne 0x4002420	      2451	channel.c	FUNCTION_60	WHILE_1	CALL_1
0x400244d	              0x5b	                                 pop rbx	      2456	channel.c	FUNCTION_60
0x400244e	              0x5d	                                 pop rbp	      2456	channel.c	FUNCTION_60
0x400244f	            0x415c	                                 pop r12	      2456	channel.c	FUNCTION_60
0x4002451	              0xc3	                                     ret	      2456	channel.c	FUNCTION_60
channel_collapse	DO,0:IF,4:FOR,2:ELSE,1:SWITCH,0:CALL,8:WHILE,1:functions,0	125
0x40026b0	            0x4157	                                push r15	      1731	channel.c	FUNCTION_49
0x40026b2	            0x4156	                                push r14	      1731	channel.c	FUNCTION_49
0x40026b4	            0x4155	                                push r13	      1731	channel.c	FUNCTION_49
0x40026b6	            0x4154	                                push r12	      1731	channel.c	FUNCTION_49
0x40026b8	          0x4189f4	                           mov r12d, esi	      1733	channel.c	FUNCTION_49
0x40026bb	          0x4c89e1	                            mov rcx, r12	      1733	channel.c	FUNCTION_49
0x40026be	          0x4c89e0	                            mov rax, r12	      1733	channel.c	FUNCTION_49
0x40026c1	              0x55	                                push rbp	      1731	channel.c	FUNCTION_49
0x40026c2	        0x48c1e104	                              shl rcx, 4	      1733	channel.c	FUNCTION_49
0x40026c6	              0x53	                                push rbx	      1731	channel.c	FUNCTION_49
0x40026c7	        0x48c1e008	                              shl rax, 8	      1733	channel.c	FUNCTION_49
0x40026cb	          0x4801c8	                            add rax, rcx	      1733	channel.c	FUNCTION_49
0x40026ce	        0x4883ec18	                           sub rsp, 0x18	      1731	channel.c	FUNCTION_49
0x40026d2	      0x488b6c0740	      mov rbp, qword [rdi + rax + 0x40] 	      1733	channel.c	FUNCTION_49
0x40026d7	          0x4885ed	                           test rbp, rbp	      1740	channel.c	FUNCTION_49	IF_1
0x40026da	     0xf8443010000	                            je 0x4002823	      1740	channel.c	FUNCTION_49	IF_1
0x40026e0	        0x488b5d10	            mov rbx, qword [rbp + 0x10] 	      1740	channel.c	FUNCTION_49	IF_1
0x40026e4	          0x4885db	                           test rbx, rbx	      1740	channel.c	FUNCTION_49	IF_1
0x40026e7	     0xf8436010000	                            je 0x4002823	      1740	channel.c	FUNCTION_49	IF_1
0x40026ed	        0x488b4b08	                mov rcx, qword [rbx + 8]	      1744	channel.c	FUNCTION_49
0x40026f1	          0x4989c8	                             mov r8, rcx	      1744	channel.c	FUNCTION_49
0x40026f4	        0x4c034508	                 add r8, qword [rbp + 8]	      1744	channel.c	FUNCTION_49
0x40026f8	        0x4983c001	                               add r8, 1	      1744	channel.c	FUNCTION_49
0x40026fc	            0x85d2	                           test edx, edx	      1745	channel.c	FUNCTION_49	IF_2
0x40026fe	            0x7460	                            je 0x4002760	      1745	channel.c	FUNCTION_49	IF_2
0x4002700	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x4002704	          0x4885f6	                           test rsi, rsi	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x4002707	            0x7457	                            je 0x4002760	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x4002709	     0xf1f80000000	                         nop dword [rax]	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x4002710	          0x4885c9	                           test rcx, rcx	      1629	channel.c	FUNCTION_45	FOR_1
0x4002713	          0x488b13	                    mov rdx, qword [rbx]	      1626	channel.c	FUNCTION_45
0x4002716	            0x7427	                            je 0x400273f	      1629	channel.c	FUNCTION_45	FOR_1
0x4002718	          0x803a0a	                     cmp byte [rdx], 0xa	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x400271b	            0x7443	                            je 0x4002760	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x400271d	        0x488d4201	                      lea rax, [rdx + 1]	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4002721	          0x4801ca	                            add rdx, rcx	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4002724	            0xeb14	                           jmp 0x400273a	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4002726	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4002730	        0x4883c001	                              add rax, 1	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4002734	        0x8078ff0a	                 cmp byte [rax - 1], 0xa	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4002738	            0x7426	                            je 0x4002760	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x400273a	          0x4839d0	                            cmp rax, rdx	      1629	channel.c	FUNCTION_45	FOR_1
0x400273d	            0x75f1	                           jne 0x4002730	      1629	channel.c	FUNCTION_45	FOR_1
0x400273f	        0x488b4e08	                mov rcx, qword [rsi + 8]	      1750	channel.c	FUNCTION_49	IF_2	WHILE_1
0x4002743	        0x488b4610	            mov rax, qword [rsi + 0x10] 	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x4002747	          0x4889f3	                            mov rbx, rsi	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x400274a	          0x4901c8	                             add r8, rcx	      1750	channel.c	FUNCTION_49	IF_2	WHILE_1
0x400274d	          0x4885c0	                           test rax, rax	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x4002750	            0x740e	                            je 0x4002760	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x4002752	          0x4889c6	                            mov rsi, rax	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x4002755	            0xebb9	                           jmp 0x4002710	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x4002757	    0x660f1f840000	                    nop word [rax + rax]	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x4002760	      0x48897c2408	                mov qword [rsp + 8], rdi	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x4002765	          0x4489c7	                            mov edi, r8d	      1753	channel.c	FUNCTION_49	CALL_2
0x4002768	      0xe800000000	                          call 0x400276d	      1753	channel.c	FUNCTION_49	CALL_2
0x400276d	          0x4885c0	                           test rax, rax	      1754	channel.c	FUNCTION_49	IF_3
0x4002770	          0x4989c6	                            mov r14, rax	      1753	channel.c	FUNCTION_49	CALL_2
0x4002773	     0xf84aa000000	                            je 0x4002823	      1754	channel.c	FUNCTION_49	IF_3
0x4002779	        0x488b5508	                mov rdx, qword [rbp + 8]	        59	string3.h	FUNCTION_136	CALL_3
0x400277d	        0x488b7500	                    mov rsi, qword [rbp]	        59	string3.h	FUNCTION_136	CALL_3
0x4002781	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_136	CALL_3
0x4002784	          0x4d89f5	                            mov r13, r14	      1757	channel.c	FUNCTION_49
0x4002787	      0xe800000000	                          call 0x400278c	        59	string3.h	FUNCTION_136	CALL_3
0x400278c	        0x488b7d00	                    mov rdi, qword [rbp]	      1758	channel.c	FUNCTION_49	CALL_4
0x4002790	        0x4c036d08	                add r13, qword [rbp + 8]	      1757	channel.c	FUNCTION_49
0x4002794	      0xe800000000	                          call 0x4002799	      1758	channel.c	FUNCTION_49	CALL_4
0x4002799	          0x4839eb	                            cmp rbx, rbp	      1760	channel.c	FUNCTION_49	FOR_1
0x400279c	        0x4c897500	                    mov qword [rbp], r14	      1759	channel.c	FUNCTION_49
0x40027a0	            0x742a	                            je 0x40027cc	      1760	channel.c	FUNCTION_49	FOR_1
0x40027a2	          0x4989ef	                            mov r15, rbp	      1760	channel.c	FUNCTION_49	FOR_1
0x40027a5	           0xf1f00	                         nop dword [rax]	      1760	channel.c	FUNCTION_49	FOR_1
0x40027a8	        0x4d8b7f10	            mov r15, qword [r15 + 0x10] 	      1762	channel.c	FUNCTION_49	FOR_1
0x40027ac	          0x4c89ef	                            mov rdi, r13	        59	string3.h	FUNCTION_136	CALL_3
0x40027af	        0x498b5708	                mov rdx, qword [r15 + 8]	        59	string3.h	FUNCTION_136	CALL_3
0x40027b3	          0x498b37	                    mov rsi, qword [r15]	        59	string3.h	FUNCTION_136	CALL_3
0x40027b6	      0xe800000000	                          call 0x40027bb	        59	string3.h	FUNCTION_136	CALL_3
0x40027bb	          0x498b3f	                    mov rdi, qword [r15]	      1765	channel.c	FUNCTION_49	FOR_1	CALL_6
0x40027be	        0x4d036f08	                add r13, qword [r15 + 8]	      1764	channel.c	FUNCTION_49	FOR_1
0x40027c2	      0xe800000000	                          call 0x40027c7	      1765	channel.c	FUNCTION_49	FOR_1	CALL_6
0x40027c7	          0x4c39fb	                            cmp rbx, r15	      1760	channel.c	FUNCTION_49	FOR_1
0x40027ca	            0x75dc	                           jne 0x40027a8	      1760	channel.c	FUNCTION_49	FOR_1
0x40027cc	          0x4d29f5	                            sub r13, r14	      1767	channel.c	FUNCTION_49
0x40027cf	        0x4c896d08	                mov qword [rbp + 8], r13	      1767	channel.c	FUNCTION_49
0x40027d3	        0x4c8b6d10	            mov r13, qword [rbp + 0x10] 	      1770	channel.c	FUNCTION_49	FOR_2
0x40027d7	          0x4c39eb	                            cmp rbx, r13	      1770	channel.c	FUNCTION_49	FOR_2
0x40027da	            0x7416	                            je 0x40027f2	      1770	channel.c	FUNCTION_49	FOR_2
0x40027dc	         0xf1f4000	                         nop dword [rax]	      1770	channel.c	FUNCTION_49	FOR_2
0x40027e0	        0x4d8b6d10	            mov r13, qword [r13 + 0x10] 	      1772	channel.c	FUNCTION_49	FOR_2
0x40027e4	        0x498b7d18	            mov rdi, qword [r13 + 0x18] 	      1773	channel.c	FUNCTION_49	FOR_2	CALL_7
0x40027e8	      0xe800000000	                          call 0x40027ed	      1773	channel.c	FUNCTION_49	FOR_2	CALL_7
0x40027ed	          0x4c39eb	                            cmp rbx, r13	      1770	channel.c	FUNCTION_49	FOR_2
0x40027f0	            0x75ee	                           jne 0x40027e0	      1770	channel.c	FUNCTION_49	FOR_2
0x40027f2	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1775	channel.c	FUNCTION_49
0x40027f6	        0x48894510	            mov qword [rbp + 0x10], rax 	      1775	channel.c	FUNCTION_49
0x40027fa	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1776	channel.c	FUNCTION_49	IF_4
0x40027fe	          0x4885c0	                           test rax, rax	      1776	channel.c	FUNCTION_49	IF_4
0x4002801	            0x7431	                            je 0x4002834	      1776	channel.c	FUNCTION_49	IF_4
0x4002803	        0x48896818	             mov qword [rax + 0x18], rbp	      1779	channel.c	FUNCTION_49	ELSE_1
0x4002807	          0x4889df	                            mov rdi, rbx	      1780	channel.c	FUNCTION_49	CALL_8
0x400280a	      0xe800000000	                          call 0x400280f	      1780	channel.c	FUNCTION_49	CALL_8
0x400280f	        0x4883c418	                           add rsp, 0x18	      1782	channel.c	FUNCTION_49
0x4002813	      0xb801000000	                              mov eax, 1	      1781	channel.c	FUNCTION_49
0x4002818	              0x5b	                                 pop rbx	      1782	channel.c	FUNCTION_49
0x4002819	              0x5d	                                 pop rbp	      1782	channel.c	FUNCTION_49
0x400281a	            0x415c	                                 pop r12	      1782	channel.c	FUNCTION_49
0x400281c	            0x415d	                                 pop r13	      1782	channel.c	FUNCTION_49
0x400281e	            0x415e	                                 pop r14	      1782	channel.c	FUNCTION_49
0x4002820	            0x415f	                                 pop r15	      1782	channel.c	FUNCTION_49
0x4002822	              0xc3	                                     ret	      1782	channel.c	FUNCTION_49
0x4002823	        0x4883c418	                           add rsp, 0x18	      1782	channel.c	FUNCTION_49
0x4002827	            0x31c0	                            xor eax, eax	      1741	channel.c	FUNCTION_49	IF_1
0x4002829	              0x5b	                                 pop rbx	      1782	channel.c	FUNCTION_49
0x400282a	              0x5d	                                 pop rbp	      1782	channel.c	FUNCTION_49
0x400282b	            0x415c	                                 pop r12	      1782	channel.c	FUNCTION_49
0x400282d	            0x415d	                                 pop r13	      1782	channel.c	FUNCTION_49
0x400282f	            0x415e	                                 pop r14	      1782	channel.c	FUNCTION_49
0x4002831	            0x415f	                                 pop r15	      1782	channel.c	FUNCTION_49
0x4002833	              0xc3	                                     ret	      1782	channel.c	FUNCTION_49
0x4002834	          0x4c89e0	                            mov rax, r12	      1777	channel.c	FUNCTION_49	IF_4
0x4002837	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1777	channel.c	FUNCTION_49	IF_4
0x400283c	        0x49c1e408	                              shl r12, 8	      1777	channel.c	FUNCTION_49	IF_4
0x4002840	        0x48c1e004	                              shl rax, 4	      1777	channel.c	FUNCTION_49	IF_4
0x4002844	          0x4c01e0	                            add rax, r12	      1777	channel.c	FUNCTION_49	IF_4
0x4002847	      0x48896c0148	       mov qword [rcx + rax + 0x48], rbp	      1777	channel.c	FUNCTION_49	IF_4
0x400284c	            0xebb9	                           jmp 0x4002807	      1777	channel.c	FUNCTION_49	IF_4
channel_part_info	DO,0:IF,3:FOR,0:ELSE,3:SWITCH,2:CALL,12:WHILE,0:functions,0	152
0x4000810	            0x4157	                                push r15	      2794	channel.c	FUNCTION_66
0x4000812	            0x4156	                                push r14	      2794	channel.c	FUNCTION_66
0x4000814	            0x4155	                                push r13	      2794	channel.c	FUNCTION_66
0x4000816	            0x4154	                                push r12	      2794	channel.c	FUNCTION_66
0x4000818	          0x4989fc	                            mov r12, rdi	      2794	channel.c	FUNCTION_66
0x400081b	              0x55	                                push rbp	      2794	channel.c	FUNCTION_66
0x400081c	              0x53	                                push rbx	      2794	channel.c	FUNCTION_66
0x400081d	          0x4889f5	                            mov rbp, rsi	      2794	channel.c	FUNCTION_66
0x4000820	          0x4889d6	                            mov rsi, rdx	      2794	channel.c	FUNCTION_66
0x4000823	      0xba04000000	                              mov edx, 4	      2801	channel.c	FUNCTION_66	CALL_1
0x4000828	          0x4189cd	                           mov r13d, ecx	      2794	channel.c	FUNCTION_66
0x400082b	        0x4883ec38	                           sub rsp, 0x38	      2794	channel.c	FUNCTION_66
0x400082f	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2801	channel.c	FUNCTION_66	CALL_1
0x4000834	    0x64488b042528	                mov rax, qword fs:[0x28]	      2794	channel.c	FUNCTION_66
0x400083d	      0x4889442428	             mov qword [rsp + 0x28], rax	      2794	channel.c	FUNCTION_66
0x4000842	            0x31c0	                            xor eax, eax	      2794	channel.c	FUNCTION_66
0x4000844	      0xe800000000	                          call 0x4000849	      2801	channel.c	FUNCTION_66	CALL_1
0x4000849	      0x488d542410	                   lea rdx, [rsp + 0x10]	      2801	channel.c	FUNCTION_66	CALL_1
0x400084e	            0x8b0a	                    mov ecx, dword [rdx]	      2801	channel.c	FUNCTION_66	CALL_1
0x4000850	        0x4883c204	                              add rdx, 4	      2801	channel.c	FUNCTION_66	CALL_1
0x4000854	    0x8d81fffefefe	              lea eax, [rcx - 0x1010101]	      2801	channel.c	FUNCTION_66	CALL_1
0x400085a	            0xf7d1	                                 not ecx	      2801	channel.c	FUNCTION_66	CALL_1
0x400085c	            0x21c8	                            and eax, ecx	      2801	channel.c	FUNCTION_66	CALL_1
0x400085e	      0x2580808080	                     and eax, 0x80808080	      2801	channel.c	FUNCTION_66	CALL_1
0x4000863	            0x74e9	                            je 0x400084e	      2801	channel.c	FUNCTION_66	CALL_1
0x4000865	            0x89c1	                            mov ecx, eax	      2801	channel.c	FUNCTION_66	CALL_1
0x4000867	          0x4489eb	                           mov ebx, r13d	      2806	channel.c	FUNCTION_66	IF_1
0x400086a	          0xc1e910	                           shr ecx, 0x10	      2806	channel.c	FUNCTION_66	IF_1
0x400086d	      0xa980800000	                        test eax, 0x8080	      2806	channel.c	FUNCTION_66	IF_1
0x4000872	           0xf44c1	                          cmove eax, ecx	      2806	channel.c	FUNCTION_66	IF_1
0x4000875	        0x488d4a02	                      lea rcx, [rdx + 2]	      2806	channel.c	FUNCTION_66	IF_1
0x4000879	            0x89c7	                            mov edi, eax	      2806	channel.c	FUNCTION_66	IF_1
0x400087b	        0x480f44d1	                          cmove rdx, rcx	      2806	channel.c	FUNCTION_66	IF_1
0x400087f	          0x4000c7	                             add dil, al	      2806	channel.c	FUNCTION_66	IF_1
0x4000882	          0x4889d8	                            mov rax, rbx	      2806	channel.c	FUNCTION_66	IF_1
0x4000885	        0x4883da03	                              sbb rdx, 3	      2806	channel.c	FUNCTION_66	IF_1
0x4000889	        0x48c1e008	                              shl rax, 8	      2806	channel.c	FUNCTION_66	IF_1
0x400088d	      0xb975730000	                         mov ecx, 0x7375	       110	string3.h	FUNCTION_141	CALL_3
0x4000892	          0x4989d6	                            mov r14, rdx	       110	string3.h	FUNCTION_141	CALL_3
0x4000895	      0xba5f000000	                           mov edx, 0x5f	       110	string3.h	FUNCTION_141	CALL_3
0x400089a	        0x66418916	                      mov word [r14], dx	       110	string3.h	FUNCTION_141	CALL_3
0x400089e	          0x4889da	                            mov rdx, rbx	      2806	channel.c	FUNCTION_66	IF_1
0x40008a1	        0x4d8d7e01	                      lea r15, [r14 + 1]	      2805	channel.c	FUNCTION_66	CALL_4
0x40008a5	        0x48c1e204	                              shl rdx, 4	      2806	channel.c	FUNCTION_66	IF_1
0x40008a9	    0x41c746017374	        mov dword [r14 + 1], 0x74617473 	       110	string3.h	FUNCTION_141	CALL_3
0x40008b1	          0x4801d0	                            add rax, rdx	      2806	channel.c	FUNCTION_66	IF_1
0x40008b4	      0x6641894f04	                  mov word [r15 + 4], cx	       110	string3.h	FUNCTION_141	CALL_3
0x40008b9	      0x41c6470600	                   mov byte [r15 + 6], 0	       110	string3.h	FUNCTION_141	CALL_3
0x40008be	          0x4c01e0	                            add rax, r12	      2806	channel.c	FUNCTION_66	IF_1
0x40008c1	      0xb900000000	                              mov ecx, 0	      2807	channel.c	FUNCTION_66	IF_1
0x40008c6	        0x837818ff	cmp dword [rax + 0x18], 0xffffffffffffffff	      2806	channel.c	FUNCTION_66	IF_1
0x40008ca	     0xf8418010000	                            je 0x40009e8	      2806	channel.c	FUNCTION_66	IF_1
0x40008d0	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2812	channel.c	FUNCTION_66	CALL_6
0x40008d5	            0x31d2	                            xor edx, edx	      2812	channel.c	FUNCTION_66	CALL_6
0x40008d7	          0x4889ef	                            mov rdi, rbp	      2812	channel.c	FUNCTION_66	CALL_6
0x40008da	      0xe800000000	                          call 0x40008df	      2812	channel.c	FUNCTION_66	CALL_6
0x40008df	          0x4889da	                            mov rdx, rbx	      2815	channel.c	FUNCTION_66	SWITCH_1
0x40008e2	          0x4889d8	                            mov rax, rbx	      2815	channel.c	FUNCTION_66	SWITCH_1
0x40008e5	    0x41c746016d6f	        mov dword [r14 + 1], 0x65646f6d 	       110	string3.h	FUNCTION_141	CALL_3
0x40008ed	        0x48c1e204	                              shl rdx, 4	      2815	channel.c	FUNCTION_66	SWITCH_1
0x40008f1	        0x48c1e008	                              shl rax, 8	      2815	channel.c	FUNCTION_66	SWITCH_1
0x40008f5	      0x41c6470400	                   mov byte [r15 + 4], 0	       110	string3.h	FUNCTION_141	CALL_3
0x40008fa	          0x4801d0	                            add rax, rdx	      2815	channel.c	FUNCTION_66	SWITCH_1
0x40008fd	    0x41b800000000	                              mov r8d, 0	      2815	channel.c	FUNCTION_66	SWITCH_1
0x4000903	      0x418b440420	      mov eax, dword [r12 + rax + 0x20] 	      2815	channel.c	FUNCTION_66	SWITCH_1
0x4000908	          0x83f803	                              cmp eax, 3	      2815	channel.c	FUNCTION_66	SWITCH_1
0x400090b	            0x7708	                            ja 0x4000915	      2815	channel.c	FUNCTION_66	SWITCH_1
0x400090d	    0x4c8b04c50000	                   mov r8, qword [rax*8]	      2815	channel.c	FUNCTION_66	SWITCH_1
0x4000915	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2822	channel.c	FUNCTION_66	CALL_8
0x400091a	          0x4c89c1	                             mov rcx, r8	      2822	channel.c	FUNCTION_66	CALL_8
0x400091d	            0x31d2	                            xor edx, edx	      2822	channel.c	FUNCTION_66	CALL_8
0x400091f	          0x4889ef	                            mov rdi, rbp	      2822	channel.c	FUNCTION_66	CALL_8
0x4000922	      0x4c89442408	                 mov qword [rsp + 8], r8	      2822	channel.c	FUNCTION_66	CALL_8
0x4000927	      0xe800000000	                          call 0x400092c	      2822	channel.c	FUNCTION_66	CALL_8
0x400092c	      0xb8696f0000	                         mov eax, 0x6f69	       110	string3.h	FUNCTION_141	CALL_3
0x4000931	          0x4585ed	                         test r13d, r13d	      2825	channel.c	FUNCTION_66	IF_3
0x4000934	    0x41b800000000	                              mov r8d, 0	      2826	channel.c	FUNCTION_66	IF_3
0x400093a	      0x6641894601	                  mov word [r14 + 1], ax	       110	string3.h	FUNCTION_141	CALL_3
0x400093f	      0x41c6470200	                   mov byte [r15 + 2], 0	       110	string3.h	FUNCTION_141	CALL_3
0x4000944	            0x743a	                            je 0x4000980	      2825	channel.c	FUNCTION_66	IF_3
0x4000946	          0x4889da	                            mov rdx, rbx	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x4000949	          0x4889d8	                            mov rax, rbx	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x400094c	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x4000951	        0x48c1e204	                              shl rdx, 4	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x4000955	        0x48c1e008	                              shl rax, 8	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x4000959	          0x4801d0	                            add rax, rdx	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x400095c	          0x4c01e0	                            add rax, r12	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x400095f	        0x83782404	               cmp dword [rax + 0x24], 4	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x4000963	            0x771b	                            ja 0x4000980	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x4000965	          0x8b4024	            mov eax, dword [rax + 0x24] 	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x4000968	    0xff24c5000000	                       jmp qword [rax*8]	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x400096f	              0x90	                                     nop	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x4000970	    0x41b800000000	                              mov r8d, 0	      2831	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x4000976	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2831	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x4000980	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2835	channel.c	FUNCTION_66	CALL_10
0x4000985	          0x4c89c1	                             mov rcx, r8	      2835	channel.c	FUNCTION_66	CALL_10
0x4000988	            0x31d2	                            xor edx, edx	      2835	channel.c	FUNCTION_66	CALL_10
0x400098a	          0x4889ef	                            mov rdi, rbp	      2835	channel.c	FUNCTION_66	CALL_10
0x400098d	      0xe800000000	                          call 0x4000992	      2835	channel.c	FUNCTION_66	CALL_10
0x4000992	    0x48b874696d65	            movabs rax, 0x74756f656d6974	       110	string3.h	FUNCTION_141	CALL_3
0x400099c	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2838	channel.c	FUNCTION_66	CALL_12
0x40009a1	            0x31c9	                            xor ecx, ecx	      2838	channel.c	FUNCTION_66	CALL_12
0x40009a3	        0x49894601	                mov qword [r14 + 1], rax	       110	string3.h	FUNCTION_141	CALL_3
0x40009a7	          0x4889d8	                            mov rax, rbx	      2838	channel.c	FUNCTION_66	CALL_12
0x40009aa	        0x48c1e308	                              shl rbx, 8	      2838	channel.c	FUNCTION_66	CALL_12
0x40009ae	        0x48c1e004	                              shl rax, 4	      2838	channel.c	FUNCTION_66	CALL_12
0x40009b2	          0x4889ef	                            mov rdi, rbp	      2838	channel.c	FUNCTION_66	CALL_12
0x40009b5	          0x4801c3	                            add rbx, rax	      2838	channel.c	FUNCTION_66	CALL_12
0x40009b8	      0x4963541c28	   movsxd rdx, dword [r12 + rbx + 0x28] 	      2838	channel.c	FUNCTION_66	CALL_12
0x40009bd	      0xe800000000	                          call 0x40009c2	      2838	channel.c	FUNCTION_66	CALL_12
0x40009c2	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2839	channel.c	FUNCTION_66
0x40009c7	    0x644833042528	                xor rax, qword fs:[0x28]	      2839	channel.c	FUNCTION_66
0x40009d0	     0xf858f000000	                           jne 0x4000a65	      2839	channel.c	FUNCTION_66
0x40009d6	        0x4883c438	                           add rsp, 0x38	      2839	channel.c	FUNCTION_66
0x40009da	              0x5b	                                 pop rbx	      2839	channel.c	FUNCTION_66
0x40009db	              0x5d	                                 pop rbp	      2839	channel.c	FUNCTION_66
0x40009dc	            0x415c	                                 pop r12	      2839	channel.c	FUNCTION_66
0x40009de	            0x415d	                                 pop r13	      2839	channel.c	FUNCTION_66
0x40009e0	            0x415e	                                 pop r14	      2839	channel.c	FUNCTION_66
0x40009e2	            0x415f	                                 pop r15	      2839	channel.c	FUNCTION_66
0x40009e4	              0xc3	                                     ret	      2839	channel.c	FUNCTION_66
0x40009e5	           0xf1f00	                         nop dword [rax]	      2839	channel.c	FUNCTION_66
0x40009e8	          0x8b7820	            mov edi, dword [rax + 0x20] 	      2739	channel.c	FUNCTION_64	IF_1
0x40009eb	          0x8d57fe	                      lea edx, [rdi - 2]	      2739	channel.c	FUNCTION_64	IF_1
0x40009ee	          0x83fa01	                              cmp edx, 1	      2739	channel.c	FUNCTION_64	IF_1
0x40009f1	            0x7665	                           jbe 0x4000a58	      2739	channel.c	FUNCTION_64	IF_1
0x40009f3	      0x4883784000	               cmp qword [rax + 0x40], 0	      2746	channel.c	FUNCTION_64	CALL_1
0x40009f8	           0xf95c0	                                setne al	      2746	channel.c	FUNCTION_64	CALL_1
0x40009fb	           0xfb6c0	                           movzx eax, al	      2746	channel.c	FUNCTION_64	CALL_1
0x40009fe	            0x85c0	                           test eax, eax	      2811	channel.c	FUNCTION_66	ELSE_2
0x4000a00	      0xb900000000	                              mov ecx, 0	      2811	channel.c	FUNCTION_66	ELSE_2
0x4000a05	      0xb800000000	                              mov eax, 0	      2811	channel.c	FUNCTION_66	ELSE_2
0x4000a0a	        0x480f45c8	                         cmovne rcx, rax	      2811	channel.c	FUNCTION_66	ELSE_2
0x4000a0e	      0xe9bdfeffff	                           jmp 0x40008d0	      2811	channel.c	FUNCTION_66	ELSE_2
0x4000a13	       0xf1f440000	                   nop dword [rax + rax]	      2811	channel.c	FUNCTION_66	ELSE_2
0x4000a18	    0x41b800000000	                              mov r8d, 0	      2832	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x4000a1e	      0xe95dffffff	                           jmp 0x4000980	      2832	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x4000a23	       0xf1f440000	                   nop dword [rax + rax]	      2832	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x4000a28	    0x41b800000000	                              mov r8d, 0	      2833	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x4000a2e	      0xe94dffffff	                           jmp 0x4000980	      2833	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x4000a33	       0xf1f440000	                   nop dword [rax + rax]	      2833	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x4000a38	    0x41b800000000	                              mov r8d, 0	      2830	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x4000a3e	      0xe93dffffff	                           jmp 0x4000980	      2830	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x4000a43	       0xf1f440000	                   nop dword [rax + rax]	      2830	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x4000a48	    0x41b800000000	                              mov r8d, 0	      2829	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x4000a4e	      0xe92dffffff	                           jmp 0x4000980	      2829	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x4000a53	       0xf1f440000	                   nop dword [rax + rax]	      2829	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x4000a58	      0x4883785800	               cmp qword [rax + 0x58], 0	      2744	channel.c	FUNCTION_64	IF_1
0x4000a5d	           0xf95c0	                                setne al	      2744	channel.c	FUNCTION_64	IF_1
0x4000a60	           0xfb6c0	                           movzx eax, al	      2744	channel.c	FUNCTION_64	IF_1
0x4000a63	            0xeb99	                           jmp 0x40009fe	      2744	channel.c	FUNCTION_64	IF_1
0x4000a65	      0xe800000000	                          call 0x4000a6a	      2839	channel.c	FUNCTION_66
free_unused_channels	DO,0:IF,1:FOR,1:ELSE,0:SWITCH,0:CALL,2:WHILE,0:functions,0	31
0x4001560	            0x4154	                                push r12	       450	channel.c	FUNCTION_17
0x4001562	              0x55	                                push rbp	       450	channel.c	FUNCTION_17
0x4001563	            0x89f5	                            mov ebp, esi	       450	channel.c	FUNCTION_17
0x4001565	    0x488b35000000	            mov rsi, qword [0x0400156c] 	       454	channel.c	FUNCTION_17	FOR_1
0x400156c	              0x53	                                push rbx	       450	channel.c	FUNCTION_17
0x400156d	          0x4885f6	                           test rsi, rsi	       454	channel.c	FUNCTION_17	FOR_1
0x4001570	            0x7442	                            je 0x40015b4	       454	channel.c	FUNCTION_17	FOR_1
0x4001572	          0x4189fc	                           mov r12d, edi	       454	channel.c	FUNCTION_17	FOR_1
0x4001575	            0xeb11	                           jmp 0x4001588	       454	channel.c	FUNCTION_17	FOR_1
0x4001577	    0x660f1f840000	                    nop word [rax + rax]	       454	channel.c	FUNCTION_17	FOR_1
0x4001580	          0x4885db	                           test rbx, rbx	       454	channel.c	FUNCTION_17	FOR_1
0x4001583	          0x4889de	                            mov rsi, rbx	       454	channel.c	FUNCTION_17	FOR_1
0x4001586	            0x742c	                            je 0x40015b4	       454	channel.c	FUNCTION_17	FOR_1
0x4001588	          0x4889f7	                            mov rdi, rsi	       457	channel.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x400158b	          0x488b1e	                    mov rbx, qword [rsi]	       456	channel.c	FUNCTION_17	FOR_1
0x400158e	      0xe88df5ffff	           call sym.channel_still_useful	       457	channel.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x4001593	            0x85c0	                           test eax, eax	       457	channel.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x4001595	            0x75e9	                           jne 0x4001580	       457	channel.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x4001597	    0x8b86b8040000	           mov eax, dword [rsi + 0x4b8] 	       458	channel.c	FUNCTION_17	FOR_1	IF_1
0x400159d	          0x4431e0	                           xor eax, r12d	       458	channel.c	FUNCTION_17	FOR_1	IF_1
0x40015a0	            0x85e8	                           test eax, ebp	       458	channel.c	FUNCTION_17	FOR_1	IF_1
0x40015a2	            0x74dc	                            je 0x4001580	       458	channel.c	FUNCTION_17	FOR_1	IF_1
0x40015a4	          0x4889f7	                            mov rdi, rsi	       461	channel.c	FUNCTION_17	FOR_1	IF_1	CALL_2
0x40015a7	      0xe874ecffff	           call sym.channel_free_channel	       461	channel.c	FUNCTION_17	FOR_1	IF_1	CALL_2
0x40015ac	          0x4885db	                           test rbx, rbx	       454	channel.c	FUNCTION_17	FOR_1
0x40015af	          0x4889de	                            mov rsi, rbx	       454	channel.c	FUNCTION_17	FOR_1
0x40015b2	            0x75d4	                           jne 0x4001588	       454	channel.c	FUNCTION_17	FOR_1
0x40015b4	              0x5b	                                 pop rbx	       464	channel.c	FUNCTION_17
0x40015b5	              0x5d	                                 pop rbp	       464	channel.c	FUNCTION_17
0x40015b6	            0x415c	                                 pop r12	       464	channel.c	FUNCTION_17
0x40015b8	              0xc3	                                     ret	       464	channel.c	FUNCTION_17
channel_get	DO,0:IF,2:FOR,0:ELSE,1:SWITCH,0:CALL,1:WHILE,0:functions,0	30
0x4001e20	            0x89f6	                            mov esi, esi	      1644	channel.c	FUNCTION_46
0x4001e22	          0x4889f2	                            mov rdx, rsi	      1644	channel.c	FUNCTION_46
0x4001e25	        0x48c1e608	                              shl rsi, 8	      1644	channel.c	FUNCTION_46
0x4001e29	        0x48c1e204	                              shl rdx, 4	      1644	channel.c	FUNCTION_46
0x4001e2d	          0x4801d6	                            add rsi, rdx	      1644	channel.c	FUNCTION_46
0x4001e30	        0x488d1437	                    lea rdx, [rdi + rsi]	      1644	channel.c	FUNCTION_46
0x4001e34	        0x488b7a40	            mov rdi, qword [rdx + 0x40] 	      1644	channel.c	FUNCTION_46
0x4001e38	          0x4885ff	                           test rdi, rdi	      1647	channel.c	FUNCTION_46	IF_1
0x4001e3b	            0x7443	                            je 0x4001e80	      1647	channel.c	FUNCTION_46	IF_1
0x4001e3d	              0x53	                                push rbx	      1642	channel.c	FUNCTION_46
0x4001e3e	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      1651	channel.c	FUNCTION_46
0x4001e42	          0x488b1f	                    mov rbx, qword [rdi]	      1650	channel.c	FUNCTION_46
0x4001e45	        0x48894240	             mov qword [rdx + 0x40], rax	      1651	channel.c	FUNCTION_46
0x4001e49	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      1652	channel.c	FUNCTION_46	IF_2
0x4001e4d	          0x4885c0	                           test rax, rax	      1652	channel.c	FUNCTION_46	IF_2
0x4001e50	            0x7416	                            je 0x4001e68	      1652	channel.c	FUNCTION_46	IF_2
0x4001e52	    0x48c740180000	               mov qword [rax + 0x18], 0	      1655	channel.c	FUNCTION_46	ELSE_1
0x4001e5a	      0xe800000000	                          call 0x4001e5f	      1656	channel.c	FUNCTION_46	CALL_1
0x4001e5f	          0x4889d8	                            mov rax, rbx	      1657	channel.c	FUNCTION_46
0x4001e62	              0x5b	                                 pop rbx	      1658	channel.c	FUNCTION_46
0x4001e63	              0xc3	                                     ret	      1658	channel.c	FUNCTION_46
0x4001e64	         0xf1f4000	                         nop dword [rax]	      1658	channel.c	FUNCTION_46
0x4001e68	    0x48c742480000	               mov qword [rdx + 0x48], 0	      1653	channel.c	FUNCTION_46	IF_2
0x4001e70	      0xe800000000	                          call 0x4001e75	      1656	channel.c	FUNCTION_46	CALL_1
0x4001e75	          0x4889d8	                            mov rax, rbx	      1657	channel.c	FUNCTION_46
0x4001e78	              0x5b	                                 pop rbx	      1658	channel.c	FUNCTION_46
0x4001e79	              0xc3	                                     ret	      1658	channel.c	FUNCTION_46
0x4001e7a	    0x660f1f440000	                    nop word [rax + rax]	      1658	channel.c	FUNCTION_46
0x4001e80	            0x31c0	                            xor eax, eax	      1648	channel.c	FUNCTION_46	IF_1
0x4001e82	              0xc3	                                     ret	      1648	channel.c	FUNCTION_46	IF_1
can_write_buf_line	DO,0:IF,8:FOR,1:ELSE,2:SWITCH,0:CALL,8:WHILE,0:functions,0	79
0x40011c0	              0x55	                                push rbp	      1364	channel.c	FUNCTION_37
0x40011c1	              0x53	                                push rbx	      1364	channel.c	FUNCTION_37
0x40011c2	    0x4881eca80000	                           sub rsp, 0xa8	      1364	channel.c	FUNCTION_37
0x40011c9	    0x64488b042528	                mov rax, qword fs:[0x28]	      1364	channel.c	FUNCTION_37
0x40011d2	    0x488984249800	             mov qword [rsp + 0x98], rax	      1364	channel.c	FUNCTION_37
0x40011da	            0x31c0	                            xor eax, eax	      1364	channel.c	FUNCTION_37
0x40011dc	    0x83bf48030000	cmp dword [rdi + 0x348], 0xffffffffffffffff	      1367	channel.c	FUNCTION_37	IF_1
0x40011e3	     0xf84a7000000	                            je 0x4001290	      1367	channel.c	FUNCTION_37	IF_1
0x40011e9	    0x8b87c0030000	           mov eax, dword [rdi + 0x3c0] 	      1371	channel.c	FUNCTION_37	IF_2
0x40011ef	          0x4889fb	                            mov rbx, rdi	      1371	channel.c	FUNCTION_37	IF_2
0x40011f2	          0x83f801	                              cmp eax, 1	      1371	channel.c	FUNCTION_37	IF_2
0x40011f5	     0xf84c5000000	                            je 0x40012c0	      1371	channel.c	FUNCTION_37	IF_2
0x40011fb	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1373	channel.c	FUNCTION_37	ELSE_1	IF_3
0x40011fe	     0xf84cc000000	                            je 0x40012d0	      1373	channel.c	FUNCTION_37	ELSE_1	IF_3
0x4001204	      0x488d6c2410	                   lea rbp, [rsp + 0x10]	      1384	channel.c	FUNCTION_37	CALL_1
0x4001209	      0xb910000000	                           mov ecx, 0x10	      1384	channel.c	FUNCTION_37	CALL_1
0x400120e	            0x31c0	                            xor eax, eax	      1384	channel.c	FUNCTION_37	CALL_1
0x4001210	          0x4889ef	                            mov rdi, rbp	      1384	channel.c	FUNCTION_37	CALL_1
0x4001213	              0xfc	                                     cld	      1384	channel.c	FUNCTION_37	CALL_1
0x4001214	          0xf348ab	              rep stosq qword [rdi], rax	      1384	channel.c	FUNCTION_37	CALL_1
0x4001217	    0x4863bb480300	        movsxd rdi, dword [rbx + 0x348] 	      1385	channel.c	FUNCTION_37	CALL_2
0x400121e	      0xe800000000	                          call 0x4001223	      1385	channel.c	FUNCTION_37	CALL_2
0x4001223	    0x8bbb48030000	           mov edi, dword [rbx + 0x348] 	      1385	channel.c	FUNCTION_37	CALL_2
0x4001229	    0x48c704240000	                      mov qword [rsp], 0	      1386	channel.c	FUNCTION_37
0x4001231	    0x48c744240800	                  mov qword [rsp + 8], 0	      1387	channel.c	FUNCTION_37
0x400123a	            0x89fa	                            mov edx, edi	      1385	channel.c	FUNCTION_37	CALL_2
0x400123c	          0xc1fa1f	                           sar edx, 0x1f	      1385	channel.c	FUNCTION_37	CALL_2
0x400123f	          0xc1ea1a	                           shr edx, 0x1a	      1385	channel.c	FUNCTION_37	CALL_2
0x4001242	          0x8d0c17	                    lea ecx, [rdi + rdx]	      1385	channel.c	FUNCTION_37	CALL_2
0x4001245	          0x83e13f	                           and ecx, 0x3f	      1385	channel.c	FUNCTION_37	CALL_2
0x4001248	            0x29d1	                            sub ecx, edx	      1385	channel.c	FUNCTION_37	CALL_2
0x400124a	      0xba01000000	                              mov edx, 1	      1385	channel.c	FUNCTION_37	CALL_2
0x400124f	          0x48d3e2	                             shl rdx, cl	      1385	channel.c	FUNCTION_37	CALL_2
0x4001252	      0x480954c410	      or qword [rsp + rax*8 + 0x10], rdx	      1385	channel.c	FUNCTION_37	CALL_2
0x4001257	          0x83c701	                              add edi, 1	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x400125a	            0x31c9	                            xor ecx, ecx	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x400125c	            0x31f6	                            xor esi, esi	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x400125e	          0x4989e0	                             mov r8, rsp	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x4001261	          0x4889ea	                            mov rdx, rbp	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x4001264	      0xe800000000	                          call 0x4001269	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x4001269	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1393	channel.c	FUNCTION_37	FOR_1	IF_4
0x400126c	            0x7572	                           jne 0x40012e0	      1393	channel.c	FUNCTION_37	FOR_1	IF_4
0x400126e	      0xe800000000	                          call 0x4001273	      1393	channel.c	FUNCTION_37	FOR_1	IF_4
0x4001273	          0x833804	                      cmp dword [rax], 4	      1393	channel.c	FUNCTION_37	FOR_1	IF_4
0x4001276	            0x7438	                            je 0x40012b0	      1393	channel.c	FUNCTION_37	FOR_1	IF_4
0x4001278	      0xbe00000000	                              mov esi, 0	      1401	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_5
0x400127d	          0x4889df	                            mov rdi, rbx	      1401	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_5
0x4001280	            0x31c0	                            xor eax, eax	      1401	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_5
0x4001282	      0xe800000000	                          call 0x4001287	      1401	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_5
0x4001287	    0x660f1f840000	                    nop word [rax + rax]	      1401	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_5
0x4001290	            0x31c0	                            xor eax, eax	      1368	channel.c	FUNCTION_37	IF_1
0x4001292	    0x488bb4249800	            mov rsi, qword [rsp + 0x98] 	      1425	channel.c	FUNCTION_37
0x400129a	    0x644833342528	                xor rsi, qword fs:[0x28]	      1425	channel.c	FUNCTION_37
0x40012a3	            0x755e	                           jne 0x4001303	      1425	channel.c	FUNCTION_37
0x40012a5	    0x4881c4a80000	                           add rsp, 0xa8	      1425	channel.c	FUNCTION_37
0x40012ac	              0x5b	                                 pop rbx	      1425	channel.c	FUNCTION_37
0x40012ad	              0x5d	                                 pop rbp	      1425	channel.c	FUNCTION_37
0x40012ae	              0xc3	                                     ret	      1425	channel.c	FUNCTION_37
0x40012af	              0x90	                                     nop	      1425	channel.c	FUNCTION_37
0x40012b0	    0x8bbb48030000	           mov edi, dword [rbx + 0x348] 	      1425	channel.c	FUNCTION_37
0x40012b6	            0xeb9f	                           jmp 0x4001257	      1425	channel.c	FUNCTION_37
0x40012b8	     0xf1f84000000	                   nop dword [rax + rax]	      1425	channel.c	FUNCTION_37
0x40012c0	    0xc787c0030000	    mov dword [rdi + 0x3c0], 0xffffffff 	      1372	channel.c	FUNCTION_37	IF_2
0x40012ca	      0xe935ffffff	                           jmp 0x4001204	      1372	channel.c	FUNCTION_37	IF_2
0x40012cf	              0x90	                                     nop	      1372	channel.c	FUNCTION_37	IF_2
0x40012d0	    0xc787c0030000	              mov dword [rdi + 0x3c0], 1	      1374	channel.c	FUNCTION_37	ELSE_1	IF_3
0x40012da	      0xe925ffffff	                           jmp 0x4001204	      1374	channel.c	FUNCTION_37	ELSE_1	IF_3
0x40012df	              0x90	                                     nop	      1374	channel.c	FUNCTION_37	ELSE_1	IF_3
0x40012e0	            0x85c0	                           test eax, eax	      1396	channel.c	FUNCTION_37	FOR_1	IF_5
0x40012e2	            0x7e94	                           jle 0x4001278	      1396	channel.c	FUNCTION_37	FOR_1	IF_5
0x40012e4	    0x83bbc0030000	              cmp dword [rbx + 0x3c0], 1	      1396	channel.c	FUNCTION_37	FOR_1	IF_5
0x40012eb	      0xb801000000	                              mov eax, 1	      1424	channel.c	FUNCTION_37
0x40012f0	            0x75a0	                           jne 0x4001292	      1396	channel.c	FUNCTION_37	FOR_1	IF_5
0x40012f2	      0xbe00000000	                              mov esi, 0	      1399	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_4
0x40012f7	          0x4889df	                            mov rdi, rbx	      1399	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_4
0x40012fa	            0x31c0	                            xor eax, eax	      1399	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_4
0x40012fc	      0xe800000000	                          call 0x4001301	      1399	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_4
0x4001301	            0xeb8d	                           jmp 0x4001290	      1399	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_4
0x4001303	      0xe800000000	                          call 0x4001308	      1425	channel.c	FUNCTION_37
channel_close_in	DO,0:IF,0:FOR,0:ELSE,0:SWITCH,0:CALL,1:WHILE,0:functions,0	2
0x4002b20	      0xbe03000000	                              mov esi, 3	      2957	channel.c	FUNCTION_69	CALL_1
0x4002b25	      0xe986daffff	                   jmp sym.ch_close_part	      2957	channel.c	FUNCTION_69	CALL_1
get_channel_arg	DO,0:IF,5:FOR,0:ELSE,2:SWITCH,0:CALL,8:WHILE,0:functions,0	91
0x4007800	              0x53	                                push rbx	      5003	channel.c	FUNCTION_108
0x4007801	            0x8b07	                    mov eax, dword [rdi]	      5007	channel.c	FUNCTION_108	IF_1
0x4007803	          0x83f809	                              cmp eax, 9	      5007	channel.c	FUNCTION_108	IF_1
0x4007806	            0x7468	                            je 0x4007870	      5007	channel.c	FUNCTION_108	IF_1
0x4007808	          0x83f80a	                            cmp eax, 0xa	      5012	channel.c	FUNCTION_108	ELSE_1	IF_3
0x400780b	     0xf85df000000	                           jne 0x40078f0	      5012	channel.c	FUNCTION_108	ELSE_1	IF_3
0x4007811	        0x488b4708	                mov rax, qword [rdi + 8]	      5014	channel.c	FUNCTION_108	ELSE_1	IF_3
0x4007815	          0x4885c0	                           test rax, rax	      5021	channel.c	FUNCTION_108	IF_4
0x4007818	            0x744e	                            je 0x4007868	      5021	channel.c	FUNCTION_108	IF_4
0x400781a	            0x85d2	                           test edx, edx	      5021	channel.c	FUNCTION_108	IF_4
0x400781c	            0x744a	                            je 0x4007868	      5021	channel.c	FUNCTION_108	IF_4
0x400781e	          0x83f904	                              cmp ecx, 4	      5022	channel.c	FUNCTION_108	IF_4	CALL_4
0x4007821	     0xf84a9000000	                            je 0x40078d0	      5022	channel.c	FUNCTION_108	IF_4	CALL_4
0x4007827	            0x89c9	                            mov ecx, ecx	      2737	channel.c	FUNCTION_64
0x4007829	          0x4889cf	                            mov rdi, rcx	      2737	channel.c	FUNCTION_64
0x400782c	        0x48c1e108	                              shl rcx, 8	      2737	channel.c	FUNCTION_64
0x4007830	        0x48c1e704	                              shl rdi, 4	      2737	channel.c	FUNCTION_64
0x4007834	          0x4801f9	                            add rcx, rdi	      2737	channel.c	FUNCTION_64
0x4007837	          0x4801c1	                            add rcx, rax	      2737	channel.c	FUNCTION_64
0x400783a	          0x8b5920	            mov ebx, dword [rcx + 0x20] 	      2739	channel.c	FUNCTION_64	IF_1
0x400783d	          0x8d7bfe	                      lea edi, [rbx - 2]	      2739	channel.c	FUNCTION_64	IF_1
0x4007840	          0x83ff01	                              cmp edi, 1	      2739	channel.c	FUNCTION_64	IF_1
0x4007843	     0xf8697000000	                           jbe 0x40078e0	      2739	channel.c	FUNCTION_64	IF_1
0x4007849	      0x4883794000	               cmp qword [rcx + 0x40], 0	      2746	channel.c	FUNCTION_64	CALL_1
0x400784e	           0xf95c1	                                setne cl	      2746	channel.c	FUNCTION_64	CALL_1
0x4007851	           0xfb6c9	                           movzx ecx, cl	      2746	channel.c	FUNCTION_64	CALL_1
0x4007854	            0x85f6	                           test esi, esi	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x4007856	            0x740b	                            je 0x4007863	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x4007858	          0x4885c0	                           test rax, rax	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x400785b	            0x744e	                            je 0x40078ab	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x400785d	        0x837818ff	cmp dword [rax + 0x18], 0xffffffffffffffff	      2725	channel.c	FUNCTION_63
0x4007861	            0x7425	                            je 0x4007888	      2725	channel.c	FUNCTION_63
0x4007863	              0x5b	                                 pop rbx	      5032	channel.c	FUNCTION_108
0x4007864	              0xc3	                                     ret	      5032	channel.c	FUNCTION_108
0x4007865	           0xf1f00	                         nop dword [rax]	      5032	channel.c	FUNCTION_108
0x4007868	            0x31c9	                            xor ecx, ecx	      5005	channel.c	FUNCTION_108
0x400786a	            0xebe8	                           jmp 0x4007854	      5005	channel.c	FUNCTION_108
0x400786c	         0xf1f4000	                         nop dword [rax]	      5005	channel.c	FUNCTION_108
0x4007870	        0x488b4708	                mov rax, qword [rdi + 8]	      5009	channel.c	FUNCTION_108	IF_1	IF_2
0x4007874	          0x4885c0	                           test rax, rax	      5009	channel.c	FUNCTION_108	IF_1	IF_2
0x4007877	     0xf84a3000000	                            je 0x4007920	      5009	channel.c	FUNCTION_108	IF_1	IF_2
0x400787d	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5010	channel.c	FUNCTION_108	IF_1	IF_2
0x4007881	            0xeb92	                           jmp 0x4007815	      5010	channel.c	FUNCTION_108	IF_1	IF_2
0x4007883	       0xf1f440000	                   nop dword [rax + rax]	      5010	channel.c	FUNCTION_108	IF_1	IF_2
0x4007888	    0x83b848030000	cmp dword [rax + 0x348], 0xffffffffffffffff	      2726	channel.c	FUNCTION_63
0x400788f	            0x75d2	                           jne 0x4007863	      2726	channel.c	FUNCTION_63
0x4007891	    0x83b828010000	cmp dword [rax + 0x128], 0xffffffffffffffff	      2727	channel.c	FUNCTION_63
0x4007898	            0x75c9	                           jne 0x4007863	      2727	channel.c	FUNCTION_63
0x400789a	    0x83b838020000	cmp dword [rax + 0x238], 0xffffffffffffffff	      2728	channel.c	FUNCTION_63
0x40078a1	            0x75c0	                           jne 0x4007863	      2728	channel.c	FUNCTION_63
0x40078a3	            0x85d2	                           test edx, edx	      5026	channel.c	FUNCTION_108	IF_5
0x40078a5	            0x7404	                            je 0x40078ab	      5026	channel.c	FUNCTION_108	IF_5
0x40078a7	            0x85c9	                           test ecx, ecx	      5026	channel.c	FUNCTION_108	IF_5
0x40078a9	            0x75b8	                           jne 0x4007863	      5026	channel.c	FUNCTION_108	IF_5
0x40078ab	      0xba05000000	                              mov edx, 5	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x40078b0	      0xbe00000000	                              mov esi, 0	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x40078b5	            0x31ff	                            xor edi, edi	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x40078b7	      0xe800000000	                          call 0x40078bc	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x40078bc	          0x4889c7	                            mov rdi, rax	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x40078bf	      0xe800000000	                          call 0x40078c4	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x40078c4	            0x31c0	                            xor eax, eax	      5029	channel.c	FUNCTION_108	IF_5
0x40078c6	              0x5b	                                 pop rbx	      5032	channel.c	FUNCTION_108
0x40078c7	              0xc3	                                     ret	      5032	channel.c	FUNCTION_108
0x40078c8	     0xf1f84000000	                   nop dword [rax + rax]	      5032	channel.c	FUNCTION_108
0x40078d0	            0x31c9	                            xor ecx, ecx	      4368	channel.c	FUNCTION_99
0x40078d2	        0x837818ff	cmp dword [rax + 0x18], 0xffffffffffffffff	      4368	channel.c	FUNCTION_99
0x40078d6	           0xf94c1	                                 sete cl	      4368	channel.c	FUNCTION_99
0x40078d9	      0xe949ffffff	                           jmp 0x4007827	      4368	channel.c	FUNCTION_99
0x40078de	            0x6690	                                     nop	      4368	channel.c	FUNCTION_99
0x40078e0	      0x4883795800	               cmp qword [rcx + 0x58], 0	      2744	channel.c	FUNCTION_64	IF_1
0x40078e5	           0xf95c1	                                setne cl	      2744	channel.c	FUNCTION_64	IF_1
0x40078e8	           0xfb6c9	                           movzx ecx, cl	      2744	channel.c	FUNCTION_64	IF_1
0x40078eb	      0xe964ffffff	                           jmp 0x4007854	      2744	channel.c	FUNCTION_64	IF_1
0x40078f0	      0xe800000000	                          call 0x40078f5	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x40078f5	      0xba05000000	                              mov edx, 5	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x40078fa	          0x4889c3	                            mov rbx, rax	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x40078fd	      0xbe00000000	                              mov esi, 0	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x4007902	            0x31ff	                            xor edi, edi	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x4007904	      0xe800000000	                          call 0x4007909	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x4007909	          0x4889de	                            mov rsi, rbx	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400790c	          0x4889c7	                            mov rdi, rax	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400790f	      0xe800000000	                          call 0x4007914	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x4007914	            0x31c0	                            xor eax, eax	      5019	channel.c	FUNCTION_108	ELSE_2
0x4007916	              0x5b	                                 pop rbx	      5032	channel.c	FUNCTION_108
0x4007917	              0xc3	                                     ret	      5032	channel.c	FUNCTION_108
0x4007918	     0xf1f84000000	                   nop dword [rax + rax]	      5032	channel.c	FUNCTION_108
0x4007920	            0x85f6	                           test esi, esi	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x4007922	            0x7587	                           jne 0x40078ab	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x4007924	            0x31c0	                            xor eax, eax	      5004	channel.c	FUNCTION_108
0x4007926	              0x5b	                                 pop rbx	      5032	channel.c	FUNCTION_108
0x4007927	              0xc3	                                     ret	      5032	channel.c	FUNCTION_108
set_ref_in_job	DO,0:IF,1:FOR,1:ELSE,0:SWITCH,0:CALL,2:WHILE,0:functions,0	48
0x4008280	              0x55	                                push rbp	      5312	channel.c	FUNCTION_121
0x4008281	              0x53	                                push rbx	      5312	channel.c	FUNCTION_121
0x4008282	        0x4883ec28	                           sub rsp, 0x28	      5312	channel.c	FUNCTION_121
0x4008286	    0x488b1d000000	            mov rbx, qword [0x0400828d] 	      5317	channel.c	FUNCTION_121	FOR_1
0x400828d	    0x64488b042528	                mov rax, qword fs:[0x28]	      5312	channel.c	FUNCTION_121
0x4008296	      0x4889442418	             mov qword [rsp + 0x18], rax	      5312	channel.c	FUNCTION_121
0x400829b	            0x31c0	                            xor eax, eax	      5312	channel.c	FUNCTION_121
0x400829d	          0x4885db	                           test rbx, rbx	      5317	channel.c	FUNCTION_121	FOR_1
0x40082a0	            0x7477	                            je 0x4008319	      5317	channel.c	FUNCTION_121	FOR_1
0x40082a2	            0x89fd	                            mov ebp, edi	      5317	channel.c	FUNCTION_121	FOR_1
0x40082a4	            0x31f6	                            xor esi, esi	      5317	channel.c	FUNCTION_121	FOR_1
0x40082a6	            0xeb15	                           jmp 0x40082bd	      5317	channel.c	FUNCTION_121	FOR_1
0x40082a8	     0xf1f84000000	                   nop dword [rax + rax]	      5317	channel.c	FUNCTION_121	FOR_1
0x40082b0	      0xbe01000000	                              mov esi, 1	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x40082b5	          0x488b1b	                    mov rbx, qword [rbx]	      5317	channel.c	FUNCTION_121	FOR_1
0x40082b8	          0x4885db	                           test rbx, rbx	      5317	channel.c	FUNCTION_121	FOR_1
0x40082bb	            0x7443	                            je 0x4008300	      5317	channel.c	FUNCTION_121	FOR_1
0x40082bd	          0x4889df	                            mov rdi, rbx	      5318	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_1
0x40082c0	      0xe87b89ffff	               call sym.job_still_useful	      5318	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_1
0x40082c5	            0x85c0	                           test eax, eax	      5318	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_1
0x40082c7	            0x74ec	                            je 0x40082b5	      5318	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_1
0x40082c9	            0x85f6	                           test esi, esi	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x40082cb	    0xc70424090000	                      mov dword [rsp], 9	      5320	channel.c	FUNCTION_121	FOR_1	IF_1
0x40082d2	      0x48895c2408	                mov qword [rsp + 8], rbx	      5321	channel.c	FUNCTION_121	FOR_1	IF_1
0x40082d7	            0x75d7	                           jne 0x40082b0	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x40082d9	            0x31c9	                            xor ecx, ecx	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x40082db	            0x31d2	                            xor edx, edx	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x40082dd	            0x89ee	                            mov esi, ebp	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x40082df	          0x4889e7	                            mov rdi, rsp	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x40082e2	      0xe800000000	                          call 0x40082e7	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x40082e7	          0x488b1b	                    mov rbx, qword [rbx]	      5317	channel.c	FUNCTION_121	FOR_1
0x40082ea	            0x31f6	                            xor esi, esi	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x40082ec	            0x85c0	                           test eax, eax	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x40082ee	        0x400f95c6	                               setne sil	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x40082f2	          0x4885db	                           test rbx, rbx	      5317	channel.c	FUNCTION_121	FOR_1
0x40082f5	            0x75c6	                           jne 0x40082bd	      5317	channel.c	FUNCTION_121	FOR_1
0x40082f7	    0x660f1f840000	                    nop word [rax + rax]	      5317	channel.c	FUNCTION_121	FOR_1
0x4008300	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      5325	channel.c	FUNCTION_121
0x4008305	    0x644833142528	                xor rdx, qword fs:[0x28]	      5325	channel.c	FUNCTION_121
0x400830e	            0x89f0	                            mov eax, esi	      5325	channel.c	FUNCTION_121
0x4008310	            0x750b	                           jne 0x400831d	      5325	channel.c	FUNCTION_121
0x4008312	        0x4883c428	                           add rsp, 0x28	      5325	channel.c	FUNCTION_121
0x4008316	              0x5b	                                 pop rbx	      5325	channel.c	FUNCTION_121
0x4008317	              0x5d	                                 pop rbp	      5325	channel.c	FUNCTION_121
0x4008318	              0xc3	                                     ret	      5325	channel.c	FUNCTION_121
0x4008319	            0x31f6	                            xor esi, esi	      5313	channel.c	FUNCTION_121
0x400831b	            0xebe3	                           jmp 0x4008300	      5313	channel.c	FUNCTION_121
0x400831d	      0xe800000000	                          call 0x4008322	      5325	channel.c	FUNCTION_121
channel_select_check	DO,0:IF,3:FOR,2:ELSE,1:SWITCH,0:CALL,7:WHILE,0:functions,0	110
0x4005930	            0x4157	                                push r15	      4166	channel.c	FUNCTION_94
0x4005932	            0x4156	                                push r14	      4166	channel.c	FUNCTION_94
0x4005934	            0x4155	                                push r13	      4166	channel.c	FUNCTION_94
0x4005936	            0x4154	                                push r12	      4166	channel.c	FUNCTION_94
0x4005938	              0x55	                                push rbp	      4166	channel.c	FUNCTION_94
0x4005939	              0x53	                                push rbx	      4166	channel.c	FUNCTION_94
0x400593a	            0x89fd	                            mov ebp, edi	      4166	channel.c	FUNCTION_94
0x400593c	        0x4883ec18	                           sub rsp, 0x18	      4166	channel.c	FUNCTION_94
0x4005940	    0x4c8b3d000000	            mov r15, qword [0x04005947] 	      4174	channel.c	FUNCTION_94	FOR_1
0x4005947	        0x48893424	                    mov qword [rsp], rsi	      4166	channel.c	FUNCTION_94
0x400594b	      0x4889542408	                mov qword [rsp + 8], rdx	      4166	channel.c	FUNCTION_94
0x4005950	          0x4d85ff	                           test r15, r15	      4174	channel.c	FUNCTION_94	FOR_1
0x4005953	     0xf84f5000000	                            je 0x4005a4e	      4174	channel.c	FUNCTION_94	FOR_1
0x4005959	     0xf1f80000000	                         nop dword [rax]	      4174	channel.c	FUNCTION_94	FOR_1
0x4005960	        0x4d8d6f18	                   lea r13, [r15 + 0x18]	      4174	channel.c	FUNCTION_94	FOR_1
0x4005964	          0x4531f6	                          xor r14d, r14d	      4166	channel.c	FUNCTION_94
0x4005967	            0x85ed	                           test ebp, ebp	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4005969	        0x418b5d00	                    mov ebx, dword [r13]	      4178	channel.c	FUNCTION_94	FOR_1	FOR_2
0x400596d	     0xf8eed000000	                           jle 0x4005a60	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4005973	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4005976	     0xf84e4000000	                            je 0x4005a60	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x400597c	          0x4c63e3	                         movsxd r12, ebx	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x400597f	          0x4c89e7	                            mov rdi, r12	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4005982	      0xe800000000	                          call 0x4005987	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4005987	            0x89da	                            mov edx, ebx	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4005989	        0x488b3424	                    mov rsi, qword [rsp]	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x400598d	          0xc1fa1f	                           sar edx, 0x1f	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4005990	          0xc1ea1a	                           shr edx, 0x1a	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4005993	          0x8d0c13	                    lea ecx, [rbx + rdx]	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4005996	      0xbb01000000	                              mov ebx, 1	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x400599b	          0x83e13f	                           and ecx, 0x3f	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x400599e	            0x29d1	                            sub ecx, edx	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x40059a0	          0x48d3e3	                             shl rbx, cl	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x40059a3	        0x48851cc6	          test qword [rsi + rax*8], rbx 	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x40059a7	     0xf85e3000000	                           jne 0x4005a90	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x40059ad	    0x418b87a40400	           mov eax, dword [r15 + 0x4a4] 	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x40059b4	            0x85c0	                           test eax, eax	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x40059b6	     0xf85bc000000	                           jne 0x4005a78	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x40059bc	        0x4183c601	                             add r14d, 1	      4176	channel.c	FUNCTION_94	FOR_1	FOR_2
0x40059c0	    0x4981c5100100	                          add r13, 0x110	      4176	channel.c	FUNCTION_94	FOR_1	FOR_2
0x40059c7	        0x4183fe03	                             cmp r14d, 3	      4176	channel.c	FUNCTION_94	FOR_1	FOR_2
0x40059cb	            0x759a	                           jne 0x4005967	      4176	channel.c	FUNCTION_94	FOR_1	FOR_2
0x40059cd	            0x85ed	                           test ebp, ebp	      4194	channel.c	FUNCTION_94	FOR_1	IF_3
0x40059cf	            0x7e71	                           jle 0x4005a42	      4194	channel.c	FUNCTION_94	FOR_1	IF_3
0x40059d1	    0x4963bf480300	        movsxd rdi, dword [r15 + 0x348] 	      4194	channel.c	FUNCTION_94	FOR_1	IF_3
0x40059d8	          0x83ffff	             cmp edi, 0xffffffffffffffff	      4194	channel.c	FUNCTION_94	FOR_1	IF_3
0x40059db	            0x7465	                            je 0x4005a42	      4194	channel.c	FUNCTION_94	FOR_1	IF_3
0x40059dd	      0xe800000000	                          call 0x40059e2	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x40059e2	    0x4963bf480300	        movsxd rdi, dword [r15 + 0x348] 	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x40059e9	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x40059ee	            0x89fa	                            mov edx, edi	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x40059f0	          0xc1fa1f	                           sar edx, 0x1f	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x40059f3	          0xc1ea1a	                           shr edx, 0x1a	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x40059f6	          0x8d0c17	                    lea ecx, [rdi + rdx]	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x40059f9	          0x83e13f	                           and ecx, 0x3f	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x40059fc	            0x29d1	                            sub ecx, edx	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x40059fe	      0xba01000000	                              mov edx, 1	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4005a03	          0x48d3e2	                             shl rdx, cl	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4005a06	        0x488514c3	          test qword [rbx + rax*8], rdx 	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4005a0a	            0x7436	                            je 0x4005a42	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4005a0c	      0xe800000000	                          call 0x4005a11	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4005a11	    0x418b97480300	           mov edx, dword [r15 + 0x348] 	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4005a18	          0x4c89ff	                            mov rdi, r15	      4199	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_7
0x4005a1b	          0x83ed01	                              sub ebp, 1	      4200	channel.c	FUNCTION_94	FOR_1	IF_3
0x4005a1e	            0x89d6	                            mov esi, edx	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4005a20	          0xc1fe1f	                           sar esi, 0x1f	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4005a23	          0xc1ee1a	                           shr esi, 0x1a	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4005a26	          0x8d0c32	                    lea ecx, [rdx + rsi]	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4005a29	      0xba01000000	                              mov edx, 1	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4005a2e	          0x83e13f	                           and ecx, 0x3f	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4005a31	            0x29f1	                            sub ecx, esi	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4005a33	          0x48d3e2	                             shl rdx, cl	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4005a36	          0x48f7d2	                                 not rdx	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4005a39	        0x482114c3	            and qword [rbx + rax*8], rdx	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4005a3d	      0xe8bedaffff	            call sym.channel_write_input	      4199	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_7
0x4005a42	          0x4d8b3f	                    mov r15, qword [r15]	      4174	channel.c	FUNCTION_94	FOR_1
0x4005a45	          0x4d85ff	                           test r15, r15	      4174	channel.c	FUNCTION_94	FOR_1
0x4005a48	     0xf8512ffffff	                           jne 0x4005960	      4174	channel.c	FUNCTION_94	FOR_1
0x4005a4e	        0x4883c418	                           add rsp, 0x18	      4205	channel.c	FUNCTION_94
0x4005a52	            0x89e8	                            mov eax, ebp	      4205	channel.c	FUNCTION_94
0x4005a54	              0x5b	                                 pop rbx	      4205	channel.c	FUNCTION_94
0x4005a55	              0x5d	                                 pop rbp	      4205	channel.c	FUNCTION_94
0x4005a56	            0x415c	                                 pop r12	      4205	channel.c	FUNCTION_94
0x4005a58	            0x415d	                                 pop r13	      4205	channel.c	FUNCTION_94
0x4005a5a	            0x415e	                                 pop r14	      4205	channel.c	FUNCTION_94
0x4005a5c	            0x415f	                                 pop r15	      4205	channel.c	FUNCTION_94
0x4005a5e	              0xc3	                                     ret	      4205	channel.c	FUNCTION_94
0x4005a5f	              0x90	                                     nop	      4205	channel.c	FUNCTION_94
0x4005a60	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4005a63	     0xf8453ffffff	                            je 0x40059bc	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4005a69	    0x418b87a40400	           mov eax, dword [r15 + 0x4a4] 	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4005a70	            0x85c0	                           test eax, eax	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4005a72	     0xf8444ffffff	                            je 0x40059bc	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4005a78	      0xba00000000	                              mov edx, 0	      4189	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x4005a7d	          0x4489f6	                           mov esi, r14d	      4189	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x4005a80	          0x4c89ff	                            mov rdi, r15	      4189	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x4005a83	      0xe888dcffff	                   call sym.channel_read	      4189	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x4005a88	      0xe92fffffff	                           jmp 0x40059bc	      4189	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x4005a8d	           0xf1f00	                         nop dword [rax]	      4189	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x4005a90	          0x4489f6	                           mov esi, r14d	      4182	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_2
0x4005a93	      0xba00000000	                              mov edx, 0	      4182	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_2
0x4005a98	          0x4c89ff	                            mov rdi, r15	      4182	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_2
0x4005a9b	      0xe870dcffff	                   call sym.channel_read	      4182	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_2
0x4005aa0	          0x4c89e7	                            mov rdi, r12	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4005aa3	          0x48f7d3	                                 not rbx	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4005aa6	          0x83ed01	                              sub ebp, 1	      4184	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1
0x4005aa9	      0xe800000000	                          call 0x4005aae	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4005aae	        0x488b3424	                    mov rsi, qword [rsp]	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4005ab2	        0x48211cc6	            and qword [rsi + rax*8], rbx	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4005ab6	      0xe901ffffff	                           jmp 0x40059bc	      4184	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1
ch_logfile	DO,0:IF,4:FOR,0:ELSE,0:SWITCH,0:CALL,5:WHILE,0:functions,0	47
0x4000da0	              0x55	                                push rbp	       108	channel.c	FUNCTION_1
0x4000da1	              0x53	                                push rbx	       108	channel.c	FUNCTION_1
0x4000da2	          0x4889fb	                            mov rbx, rdi	       108	channel.c	FUNCTION_1
0x4000da5	          0x4889f5	                            mov rbp, rsi	       108	channel.c	FUNCTION_1
0x4000da8	        0x4883ec08	                              sub rsp, 8	       108	channel.c	FUNCTION_1
0x4000dac	    0x488b3d000000	            mov rdi, qword [0x04000db3] 	       111	channel.c	FUNCTION_1	IF_1
0x4000db3	          0x4885ff	                           test rdi, rdi	       111	channel.c	FUNCTION_1	IF_1
0x4000db6	            0x7405	                            je 0x4000dbd	       111	channel.c	FUNCTION_1	IF_1
0x4000db8	      0xe800000000	                          call 0x4000dbd	       112	channel.c	FUNCTION_1	CALL_1
0x4000dbd	          0x803b00	                       cmp byte [rbx], 0	       114	channel.c	FUNCTION_1	IF_2
0x4000dc0	            0x744e	                            je 0x4000e10	       114	channel.c	FUNCTION_1	IF_2
0x4000dc2	        0x807d0077	                    cmp byte [rbp], 0x77	       116	channel.c	FUNCTION_1	IF_2	CALL_2
0x4000dc6	      0xb800000000	                              mov eax, 0	       116	channel.c	FUNCTION_1	IF_2	CALL_2
0x4000dcb	      0xbe00000000	                              mov esi, 0	       116	channel.c	FUNCTION_1	IF_2	CALL_2
0x4000dd0	          0x4889df	                            mov rdi, rbx	       116	channel.c	FUNCTION_1	IF_2	CALL_2
0x4000dd3	        0x480f44f0	                          cmove rsi, rax	       116	channel.c	FUNCTION_1	IF_2	CALL_2
0x4000dd7	      0xe800000000	                          call 0x4000ddc	       116	channel.c	FUNCTION_1	IF_2	CALL_2
0x4000ddc	          0x4885c0	                           test rax, rax	       117	channel.c	FUNCTION_1	IF_2	IF_3
0x4000ddf	          0x4889c1	                            mov rcx, rax	       116	channel.c	FUNCTION_1	IF_2	CALL_2
0x4000de2	            0x7444	                            je 0x4000e28	       117	channel.c	FUNCTION_1	IF_2	IF_3
0x4000de4	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_20
0x4000de9	      0xba1c000000	                           mov edx, 0x1c	        97	stdio2.h	CALL_20
0x4000dee	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_20
0x4000df3	    0x488905000000	            mov qword [0x04000dfa], rax 	       123	channel.c	FUNCTION_1
0x4000dfa	      0xe800000000	                          call 0x4000dff	        97	stdio2.h	CALL_20
0x4000dff	        0x4883c408	                              add rsp, 8	       132	channel.c	FUNCTION_1
0x4000e03	      0xbf00000000	                              mov edi, 0	       129	channel.c	FUNCTION_1	IF_4	CALL_5
0x4000e08	              0x5b	                                 pop rbx	       132	channel.c	FUNCTION_1
0x4000e09	              0x5d	                                 pop rbp	       132	channel.c	FUNCTION_1
0x4000e0a	      0xe900000000	                           jmp 0x4000e0f	       129	channel.c	FUNCTION_1	IF_4	CALL_5
0x4000e0f	              0x90	                                     nop	       129	channel.c	FUNCTION_1	IF_4	CALL_5
0x4000e10	    0x48c705000000	               mov qword [0x04000e1b], 0	       123	channel.c	FUNCTION_1
0x4000e1b	        0x4883c408	                              add rsp, 8	       132	channel.c	FUNCTION_1
0x4000e1f	              0x5b	                                 pop rbx	       132	channel.c	FUNCTION_1
0x4000e20	              0x5d	                                 pop rbp	       132	channel.c	FUNCTION_1
0x4000e21	              0xc3	                                     ret	       132	channel.c	FUNCTION_1
0x4000e22	    0x660f1f440000	                    nop word [rax + rax]	       132	channel.c	FUNCTION_1
0x4000e28	      0xbe00000000	                              mov esi, 0	       119	channel.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4000e2d	            0x31ff	                            xor edi, edi	       119	channel.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4000e2f	      0xba05000000	                              mov edx, 5	       119	channel.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4000e34	      0xe800000000	                          call 0x4000e39	       119	channel.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4000e39	        0x4883c408	                              add rsp, 8	       132	channel.c	FUNCTION_1
0x4000e3d	          0x4889de	                            mov rsi, rbx	       119	channel.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4000e40	          0x4889c7	                            mov rdi, rax	       119	channel.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4000e43	              0x5b	                                 pop rbx	       132	channel.c	FUNCTION_1
0x4000e44	              0x5d	                                 pop rbp	       132	channel.c	FUNCTION_1
0x4000e45	      0xe900000000	                           jmp 0x4000e4a	       119	channel.c	FUNCTION_1	IF_2	IF_3	CALL_4
messageFromServerGtk2	DO,0:IF,0:FOR,0:ELSE,0:SWITCH,0:CALL,1:WHILE,0:functions,0	30
0x4003880	          0x83ffff	             cmp edi, 0xffffffffffffffff	      3598	channel.c	FUNCTION_83	IF_1
0x4003883	            0x89f9	                            mov ecx, edi	       513	channel.c	FUNCTION_21	CALL_1
0x4003885	            0x7429	                            je 0x40038b0	      3598	channel.c	FUNCTION_83	IF_1
0x4003887	    0x488b05000000	            mov rax, qword [0x0400388e] 	      3599	channel.c	FUNCTION_83	IF_1	FOR_1
0x400388e	          0x4885c0	                           test rax, rax	      3599	channel.c	FUNCTION_83	IF_1	FOR_1
0x4003891	            0x741d	                            je 0x40038b0	      3599	channel.c	FUNCTION_83	IF_1	FOR_1
0x4003893	          0x3b4818	            cmp ecx, dword [rax + 0x18] 	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4003896	            0x7428	                            je 0x40038c0	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4003898	    0x3b8828010000	           cmp ecx, dword [rax + 0x128] 	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x400389e	            0x7430	                            je 0x40038d0	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x40038a0	    0x3b8838020000	           cmp ecx, dword [rax + 0x238] 	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x40038a6	            0x7438	                            je 0x40038e0	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x40038a8	          0x488b00	                    mov rax, qword [rax]	      3600	channel.c	FUNCTION_83	IF_1	FOR_1
0x40038ab	          0x4885c0	                           test rax, rax	      3599	channel.c	FUNCTION_83	IF_1	FOR_1
0x40038ae	            0x75e3	                           jne 0x4003893	      3599	channel.c	FUNCTION_83	IF_1	FOR_1
0x40038b0	            0x89fa	                            mov edx, edi	       477	channel.c	FUNCTION_18	CALL_2
0x40038b2	      0xbe00000000	                              mov esi, 0	       477	channel.c	FUNCTION_18	CALL_2
0x40038b7	            0x31ff	                            xor edi, edi	       477	channel.c	FUNCTION_18	CALL_2
0x40038b9	            0x31c0	                            xor eax, eax	       477	channel.c	FUNCTION_18	CALL_2
0x40038bb	      0xe950c8ffff	                        jmp sym.ch_error	       477	channel.c	FUNCTION_18	CALL_2
0x40038c0	            0x31f6	                            xor esi, esi	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x40038c2	      0xba00000000	                              mov edx, 0	       479	channel.c	FUNCTION_18	CALL_3
0x40038c7	          0x4889c7	                            mov rdi, rax	       479	channel.c	FUNCTION_18	CALL_3
0x40038ca	      0xe941feffff	                    jmp sym.channel_read	       479	channel.c	FUNCTION_18	CALL_3
0x40038cf	              0x90	                                     nop	       479	channel.c	FUNCTION_18	CALL_3
0x40038d0	      0xbe01000000	                              mov esi, 1	      3602	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2
0x40038d5	            0xebeb	                           jmp 0x40038c2	      3602	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2
0x40038d7	    0x660f1f840000	                    nop word [rax + rax]	      3602	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2
0x40038e0	      0xbe02000000	                              mov esi, 2	      3602	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2
0x40038e5	            0xebdb	                           jmp 0x40038c2	      3602	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2
channel_open_func	DO,0:IF,6:FOR,0:ELSE,0:SWITCH,0:CALL,16:WHILE,0:functions,0	109
0x4007640	            0x4155	                                push r13	       927	channel.c	FUNCTION_28
0x4007642	            0x4154	                                push r12	       927	channel.c	FUNCTION_28
0x4007644	              0x55	                                push rbp	       927	channel.c	FUNCTION_28
0x4007645	              0x53	                                push rbx	       927	channel.c	FUNCTION_28
0x4007646	          0x4889fb	                            mov rbx, rdi	       927	channel.c	FUNCTION_28
0x4007649	    0x4881ec980300	                          sub rsp, 0x398	       927	channel.c	FUNCTION_28
0x4007650	    0x64488b042528	                mov rax, qword fs:[0x28]	       927	channel.c	FUNCTION_28
0x4007659	    0x488984248803	            mov qword [rsp + 0x388], rax	       927	channel.c	FUNCTION_28
0x4007661	            0x31c0	                            xor eax, eax	       927	channel.c	FUNCTION_28
0x4007663	      0xe800000000	                          call 0x4007668	       935	channel.c	FUNCTION_28	CALL_1
0x4007668	          0x4989c4	                            mov r12, rax	       935	channel.c	FUNCTION_28	CALL_1
0x400766b	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       936	channel.c	FUNCTION_28	IF_1
0x400766e	            0x85c0	                           test eax, eax	       936	channel.c	FUNCTION_28	IF_1
0x4007670	            0x7414	                            je 0x4007686	       936	channel.c	FUNCTION_28	IF_1
0x4007672	          0x83f806	                              cmp eax, 6	       937	channel.c	FUNCTION_28	IF_1
0x4007675	     0xf8555010000	                           jne 0x40077d0	       937	channel.c	FUNCTION_28	IF_1
0x400767b	      0x48837b1800	               cmp qword [rbx + 0x18], 0	       937	channel.c	FUNCTION_28	IF_1
0x4007680	     0xf844a010000	                            je 0x40077d0	       937	channel.c	FUNCTION_28	IF_1
0x4007686	      0xbe3a000000	                           mov esi, 0x3a	       944	channel.c	FUNCTION_28	CALL_4
0x400768b	          0x4c89e7	                            mov rdi, r12	       944	channel.c	FUNCTION_28	CALL_4
0x400768e	      0xe800000000	                          call 0x4007693	       944	channel.c	FUNCTION_28	CALL_4
0x4007693	          0x4885c0	                           test rax, rax	       945	channel.c	FUNCTION_28	IF_2
0x4007696	          0x4889c5	                            mov rbp, rax	       944	channel.c	FUNCTION_28	CALL_4
0x4007699	     0xf84ed000000	                            je 0x400778c	       945	channel.c	FUNCTION_28	IF_2
0x400769f	        0x488d7801	                      lea rdi, [rax + 1]	       951	channel.c	FUNCTION_28	CALL_7
0x40076a3	      0x488d742408	                      lea rsi, [rsp + 8]	       951	channel.c	FUNCTION_28	CALL_7
0x40076a8	          0xc60000	                       mov byte [rax], 0	       950	channel.c	FUNCTION_28
0x40076ab	      0xba0a000000	                            mov edx, 0xa	       951	channel.c	FUNCTION_28	CALL_7
0x40076b0	      0xe800000000	                          call 0x40076b5	       951	channel.c	FUNCTION_28	CALL_7
0x40076b5	      0x41803c2400	                       cmp byte [r12], 0	       952	channel.c	FUNCTION_28	IF_3
0x40076ba	          0x4989c5	                            mov r13, rax	       951	channel.c	FUNCTION_28	CALL_7
0x40076bd	     0xf84c5000000	                            je 0x4007788	       952	channel.c	FUNCTION_28	IF_3
0x40076c3	            0x85c0	                           test eax, eax	       952	channel.c	FUNCTION_28	IF_3
0x40076c5	     0xf8ebd000000	                           jle 0x4007788	       952	channel.c	FUNCTION_28	IF_3
0x40076cb	      0x488b442408	                mov rax, qword [rsp + 8]	       952	channel.c	FUNCTION_28	IF_3
0x40076d0	          0x803800	                       cmp byte [rax], 0	       952	channel.c	FUNCTION_28	IF_3
0x40076d3	     0xf85af000000	                           jne 0x4007788	       952	channel.c	FUNCTION_28	IF_3
0x40076d9	      0x488d6c2410	                   lea rbp, [rsp + 0x10]	        90	string3.h	FUNCTION_138	CALL_6
0x40076de	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_138	CALL_6
0x40076e0	      0xb96f000000	                           mov ecx, 0x6f	        90	string3.h	FUNCTION_138	CALL_6
0x40076e5	      0xbaff0f0000	                          mov edx, 0xfff	       963	channel.c	FUNCTION_28	IF_4	CALL_11
0x40076ea	          0x4889ef	                            mov rdi, rbp	        90	string3.h	FUNCTION_138	CALL_6
0x40076ed	          0x4889ee	                            mov rsi, rbp	       963	channel.c	FUNCTION_28	IF_4	CALL_11
0x40076f0	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_138	CALL_6
0x40076f3	        0x488d7b10	                   lea rdi, [rbx + 0x10]	       963	channel.c	FUNCTION_28	IF_4	CALL_11
0x40076f7	    0xc74424180200	               mov dword [rsp + 0x18], 2	       961	channel.c	FUNCTION_28
0x40076ff	    0xc78424080200	         mov dword [rsp + 0x208], 0x7d0 	       962	channel.c	FUNCTION_28
0x400770a	            0x31db	                            xor ebx, ebx	       933	channel.c	FUNCTION_28
0x400770c	      0xe800000000	                          call 0x4007711	       963	channel.c	FUNCTION_28	IF_4	CALL_11
0x4007711	            0x85c0	                           test eax, eax	       963	channel.c	FUNCTION_28	IF_4	CALL_11
0x4007713	            0x7533	                           jne 0x4007748	       963	channel.c	FUNCTION_28	IF_4	CALL_11
0x4007715	          0x4889ef	                            mov rdi, rbp	       979	channel.c	FUNCTION_28	CALL_16
0x4007718	      0xe800000000	                          call 0x400771d	       979	channel.c	FUNCTION_28	CALL_16
0x400771d	          0x4889d8	                            mov rax, rbx	       980	channel.c	FUNCTION_28
0x4007720	    0x488b8c248803	           mov rcx, qword [rsp + 0x388] 	       981	channel.c	FUNCTION_28
0x4007728	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       981	channel.c	FUNCTION_28
0x4007731	     0xf85b9000000	                           jne 0x40077f0	       981	channel.c	FUNCTION_28
0x4007737	    0x4881c4980300	                          add rsp, 0x398	       981	channel.c	FUNCTION_28
0x400773e	              0x5b	                                 pop rbx	       981	channel.c	FUNCTION_28
0x400773f	              0x5d	                                 pop rbp	       981	channel.c	FUNCTION_28
0x4007740	            0x415c	                                 pop r12	       981	channel.c	FUNCTION_28
0x4007742	            0x415d	                                 pop r13	       981	channel.c	FUNCTION_28
0x4007744	              0xc3	                                     ret	       981	channel.c	FUNCTION_28
0x4007745	           0xf1f00	                         nop dword [rax]	       981	channel.c	FUNCTION_28
0x4007748	    0x8b8424080200	           mov eax, dword [rsp + 0x208] 	       966	channel.c	FUNCTION_28	IF_5
0x400774f	            0x85c0	                           test eax, eax	       966	channel.c	FUNCTION_28	IF_5
0x4007751	            0x785d	                            js 0x40077b0	       966	channel.c	FUNCTION_28	IF_5
0x4007753	    0x8b9424040200	           mov edx, dword [rsp + 0x204] 	       972	channel.c	FUNCTION_28	CALL_14
0x400775a	            0x31c9	                            xor ecx, ecx	       972	channel.c	FUNCTION_28	CALL_14
0x400775c	          0x4489ee	                           mov esi, r13d	       972	channel.c	FUNCTION_28	CALL_14
0x400775f	          0x4c89e7	                            mov rdi, r12	       972	channel.c	FUNCTION_28	CALL_14
0x4007762	      0xe800000000	                          call 0x4007767	       972	channel.c	FUNCTION_28	CALL_14
0x4007767	          0x4885c0	                           test rax, rax	       973	channel.c	FUNCTION_28	IF_6
0x400776a	          0x4889c3	                            mov rbx, rax	       972	channel.c	FUNCTION_28	CALL_14
0x400776d	            0x74a6	                            je 0x4007715	       973	channel.c	FUNCTION_28	IF_6
0x400776f	          0x4889ee	                            mov rsi, rbp	       976	channel.c	FUNCTION_28	IF_6	CALL_15
0x4007772	          0x4889c7	                            mov rdi, rax	       976	channel.c	FUNCTION_28	IF_6	CALL_15
0x4007775	    0xc7442410ffff	     mov dword [rsp + 0x10], 0x7fffffff 	       975	channel.c	FUNCTION_28	IF_6
0x400777d	      0xe800000000	                          call 0x4007782	       976	channel.c	FUNCTION_28	IF_6	CALL_15
0x4007782	            0xeb91	                           jmp 0x4007715	       976	channel.c	FUNCTION_28	IF_6	CALL_15
0x4007784	         0xf1f4000	                         nop dword [rax]	       976	channel.c	FUNCTION_28	IF_6	CALL_15
0x4007788	        0xc645003a	                    mov byte [rbp], 0x3a	       954	channel.c	FUNCTION_28	IF_3
0x400778c	      0xba05000000	                              mov edx, 5	       955	channel.c	FUNCTION_28	IF_3	CALL_9
0x4007791	      0xbe00000000	                              mov esi, 0	       955	channel.c	FUNCTION_28	IF_3	CALL_9
0x4007796	            0x31ff	                            xor edi, edi	       955	channel.c	FUNCTION_28	IF_3	CALL_9
0x4007798	      0xe800000000	                          call 0x400779d	       955	channel.c	FUNCTION_28	IF_3	CALL_9
0x400779d	          0x4c89e6	                            mov rsi, r12	       955	channel.c	FUNCTION_28	IF_3	CALL_9
0x40077a0	          0x4889c7	                            mov rdi, rax	       955	channel.c	FUNCTION_28	IF_3	CALL_9
0x40077a3	      0xe800000000	                          call 0x40077a8	       955	channel.c	FUNCTION_28	IF_3	CALL_9
0x40077a8	            0x31c0	                            xor eax, eax	       956	channel.c	FUNCTION_28	IF_3
0x40077aa	      0xe971ffffff	                           jmp 0x4007720	       956	channel.c	FUNCTION_28	IF_3
0x40077af	              0x90	                                     nop	       956	channel.c	FUNCTION_28	IF_3
0x40077b0	            0x31ff	                            xor edi, edi	       968	channel.c	FUNCTION_28	IF_5	CALL_13
0x40077b2	      0xba05000000	                              mov edx, 5	       968	channel.c	FUNCTION_28	IF_5	CALL_13
0x40077b7	      0xbe00000000	                              mov esi, 0	       968	channel.c	FUNCTION_28	IF_5	CALL_13
0x40077bc	      0xe800000000	                          call 0x40077c1	       968	channel.c	FUNCTION_28	IF_5	CALL_13
0x40077c1	          0x4889c7	                            mov rdi, rax	       968	channel.c	FUNCTION_28	IF_5	CALL_13
0x40077c4	      0xe800000000	                          call 0x40077c9	       968	channel.c	FUNCTION_28	IF_5	CALL_13
0x40077c9	      0xe947ffffff	                           jmp 0x4007715	       969	channel.c	FUNCTION_28	IF_5
0x40077ce	            0x6690	                                     nop	       969	channel.c	FUNCTION_28	IF_5
0x40077d0	      0xba05000000	                              mov edx, 5	       939	channel.c	FUNCTION_28	IF_1	CALL_3
0x40077d5	      0xbe00000000	                              mov esi, 0	       939	channel.c	FUNCTION_28	IF_1	CALL_3
0x40077da	            0x31ff	                            xor edi, edi	       939	channel.c	FUNCTION_28	IF_1	CALL_3
0x40077dc	      0xe800000000	                          call 0x40077e1	       939	channel.c	FUNCTION_28	IF_1	CALL_3
0x40077e1	          0x4889c7	                            mov rdi, rax	       939	channel.c	FUNCTION_28	IF_1	CALL_3
0x40077e4	      0xe800000000	                          call 0x40077e9	       939	channel.c	FUNCTION_28	IF_1	CALL_3
0x40077e9	            0x31c0	                            xor eax, eax	       940	channel.c	FUNCTION_28	IF_1
0x40077eb	      0xe930ffffff	                           jmp 0x4007720	       940	channel.c	FUNCTION_28	IF_1
0x40077f0	      0xe800000000	                          call 0x40077f5	       981	channel.c	FUNCTION_28
win32_build_cmd	DO,0:IF,3:FOR,1:ELSE,0:SWITCH,0:CALL,5:WHILE,0:functions,0	201
0x4007f80	            0x4157	                                push r15	      5236	channel.c	FUNCTION_119
0x4007f82	            0x4156	                                push r14	      5236	channel.c	FUNCTION_119
0x4007f84	            0x4155	                                push r13	      5236	channel.c	FUNCTION_119
0x4007f86	            0x4154	                                push r12	      5236	channel.c	FUNCTION_119
0x4007f88	          0x4989f4	                            mov r12, rsi	      5236	channel.c	FUNCTION_119
0x4007f8b	              0x55	                                push rbp	      5236	channel.c	FUNCTION_119
0x4007f8c	              0x53	                                push rbx	      5236	channel.c	FUNCTION_119
0x4007f8d	        0x4883ec28	                           sub rsp, 0x28	      5236	channel.c	FUNCTION_119
0x4007f91	          0x488b2f	                    mov rbp, qword [rdi]	      5240	channel.c	FUNCTION_119	FOR_1
0x4007f94	    0x64488b042528	                mov rax, qword fs:[0x28]	      5236	channel.c	FUNCTION_119
0x4007f9d	      0x4889442418	             mov qword [rsp + 0x18], rax	      5236	channel.c	FUNCTION_119
0x4007fa2	            0x31c0	                            xor eax, eax	      5236	channel.c	FUNCTION_119
0x4007fa4	          0x4885ed	                           test rbp, rbp	      5240	channel.c	FUNCTION_119	FOR_1
0x4007fa7	     0xf8443020000	                            je 0x40081f0	      5240	channel.c	FUNCTION_119	FOR_1
0x4007fad	           0xf1f00	                         nop dword [rax]	      5240	channel.c	FUNCTION_119	FOR_1
0x4007fb0	        0x488d7d10	                   lea rdi, [rbp + 0x10]	      5242	channel.c	FUNCTION_119	FOR_1	CALL_1
0x4007fb4	      0xe800000000	                          call 0x4007fb9	      5242	channel.c	FUNCTION_119	FOR_1	CALL_1
0x4007fb9	          0x4885c0	                           test rax, rax	      5243	channel.c	FUNCTION_119	FOR_1	IF_1
0x4007fbc	          0x4989c5	                            mov r13, rax	      5242	channel.c	FUNCTION_119	FOR_1	CALL_1
0x4007fbf	     0xf8491020000	                            je 0x4008256	      5243	channel.c	FUNCTION_119	FOR_1	IF_1
0x4007fc5	          0x4889c7	                            mov rdi, rax	      5168	channel.c	FUNCTION_118	CALL_1
0x4007fc8	      0xe800000000	                          call 0x4007fcd	      5168	channel.c	FUNCTION_118	CALL_1
0x4007fcd	      0x4c896c2408	                mov qword [rsp + 8], r13	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x4007fd2	          0x4989c6	                            mov r14, rax	      5168	channel.c	FUNCTION_118	CALL_1
0x4007fd5	      0x410fb64500	                   movzx eax, byte [r13]	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x4007fda	            0x84c0	                             test al, al	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x4007fdc	     0xf8460020000	                            je 0x4008242	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x4007fe2	          0x4589f7	                          mov r15d, r14d	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x4007fe5	            0x31db	                            xor ebx, ebx	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x4007fe7	          0x4c89ef	                            mov rdi, r13	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x4007fea	            0xeb18	                           jmp 0x4008004	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x4007fec	         0xf1f4000	                         nop dword [rax]	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x4007ff0	      0x4803442408	                add rax, qword [rsp + 8]	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x4007ff5	          0x4889c7	                            mov rdi, rax	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x4007ff8	      0x4889442408	                mov qword [rsp + 8], rax	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x4007ffd	           0xfb600	                   movzx eax, byte [rax]	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x4008000	            0x84c0	                             test al, al	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x4008002	            0x744c	                            je 0x4008050	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x4008004	            0x3c22	                            cmp al, 0x22	      5172	channel.c	FUNCTION_118	FOR_1	IF_1
0x4008006	            0x7438	                            je 0x4008040	      5172	channel.c	FUNCTION_118	FOR_1	IF_1
0x4008008	            0x3c5c	                            cmp al, 0x5c	      5172	channel.c	FUNCTION_118	FOR_1	IF_1
0x400800a	            0x7434	                            je 0x4008040	      5172	channel.c	FUNCTION_118	FOR_1	IF_1
0x400800c	            0x3c20	                            cmp al, 0x20	      5174	channel.c	FUNCTION_118	FOR_1	IF_2
0x400800e	            0x7420	                            je 0x4008030	      5174	channel.c	FUNCTION_118	FOR_1	IF_2
0x4008010	            0x3c09	                               cmp al, 9	      5174	channel.c	FUNCTION_118	FOR_1	IF_2
0x4008012	            0x741c	                            je 0x4008030	      5174	channel.c	FUNCTION_118	FOR_1	IF_2
0x4008014	    0x8b1500000000	            mov edx, dword [0x0400801a] 	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400801a	      0xb801000000	                              mov eax, 1	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400801f	            0x85d2	                           test edx, edx	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x4008021	            0x74cd	                            je 0x4007ff0	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x4008023	    0xff1500000000	                 call qword [0x04008029]	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x4008029	            0x4898	                                    cdqe	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400802b	            0xebc3	                           jmp 0x4007ff0	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400802d	           0xf1f00	                         nop dword [rax]	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x4008030	      0xbb01000000	                              mov ebx, 1	      5175	channel.c	FUNCTION_118	FOR_1	IF_2
0x4008035	            0xebdd	                           jmp 0x4008014	      5175	channel.c	FUNCTION_118	FOR_1	IF_2
0x4008037	    0x660f1f840000	                    nop word [rax + rax]	      5175	channel.c	FUNCTION_118	FOR_1	IF_2
0x4008040	        0x4183c701	                             add r15d, 1	      5173	channel.c	FUNCTION_118	FOR_1	IF_1
0x4008044	            0xebc6	                           jmp 0x400800c	      5173	channel.c	FUNCTION_118	FOR_1	IF_1
0x4008046	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5173	channel.c	FUNCTION_118	FOR_1	IF_1
0x4008050	            0x85db	                           test ebx, ebx	      5178	channel.c	FUNCTION_118	IF_3
0x4008052	            0x7409	                            je 0x400805d	      5178	channel.c	FUNCTION_118	IF_3
0x4008054	        0x4183c702	                             add r15d, 2	      5179	channel.c	FUNCTION_118	IF_3
0x4008058	      0xbb01000000	                              mov ebx, 1	      5179	channel.c	FUNCTION_118	IF_3
0x400805d	          0x4539fe	                          cmp r14d, r15d	      5181	channel.c	FUNCTION_118	IF_4
0x4008060	     0xf84dc010000	                            je 0x4008242	      5181	channel.c	FUNCTION_118	IF_4
0x4008066	        0x4183c701	                             add r15d, 1	      5185	channel.c	FUNCTION_118	CALL_4
0x400806a	          0x4489ff	                           mov edi, r15d	      5185	channel.c	FUNCTION_118	CALL_4
0x400806d	      0xe800000000	                          call 0x4008072	      5185	channel.c	FUNCTION_118	CALL_4
0x4008072	          0x4885c0	                           test rax, rax	      5186	channel.c	FUNCTION_118	IF_5
0x4008075	          0x4989c6	                            mov r14, rax	      5185	channel.c	FUNCTION_118	CALL_4
0x4008078	     0xf84d8010000	                            je 0x4008256	      5186	channel.c	FUNCTION_118	IF_5
0x400807e	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_138	CALL_6
0x4008080	          0x4963d7	                        movsxd rdx, r15d	        90	string3.h	FUNCTION_138	CALL_6
0x4008083	          0x4889c7	                            mov rdi, rax	        90	string3.h	FUNCTION_138	CALL_6
0x4008086	      0xe800000000	                          call 0x400808b	        90	string3.h	FUNCTION_138	CALL_6
0x400808b	            0x85db	                           test ebx, ebx	      5192	channel.c	FUNCTION_118	IF_6
0x400808d	     0xf859d010000	                           jne 0x4008230	      5192	channel.c	FUNCTION_118	IF_6
0x4008093	      0x4c89742410	             mov qword [rsp + 0x10], r14	      5190	channel.c	FUNCTION_118
0x4008098	      0x4c896c2408	                mov qword [rsp + 8], r13	      5195	channel.c	FUNCTION_118	FOR_2
0x400809d	          0x4531c0	                            xor r8d, r8d	      5161	channel.c	FUNCTION_118
0x40080a0	            0xeb35	                           jmp 0x40080d7	      5161	channel.c	FUNCTION_118
0x40080a2	    0x660f1f440000	                    nop word [rax + rax]	      5161	channel.c	FUNCTION_118
0x40080a8	            0x3c5c	                            cmp al, 0x5c	      5197	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x40080aa	     0xf8590000000	                           jne 0x4008140	      5197	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x40080b0	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5208	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x40080b5	        0x4183c001	                              add r8d, 1	      5207	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x40080b9	        0x488d5001	                      lea rdx, [rax + 1]	      5208	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x40080bd	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5208	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x40080c2	        0x498d5501	                      lea rdx, [r13 + 1]	      5208	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x40080c6	      0x4889542408	                mov qword [rsp + 8], rdx	      5208	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x40080cb	      0x410fb65500	                   movzx edx, byte [r13]	      5208	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x40080d0	            0x8810	                      mov byte [rax], dl	      5208	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x40080d2	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      5208	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x40080d7	      0x410fb64500	                   movzx eax, byte [r13]	      5195	channel.c	FUNCTION_118	FOR_2
0x40080dc	            0x84c0	                             test al, al	      5195	channel.c	FUNCTION_118	FOR_2
0x40080de	     0xf8494000000	                            je 0x4008178	      5195	channel.c	FUNCTION_118	FOR_2
0x40080e4	            0x3c22	                            cmp al, 0x22	      5197	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x40080e6	            0x75c0	                           jne 0x40080a8	      5197	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x40080e8	            0x31c0	                            xor eax, eax	      5200	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x40080ea	          0x4585c0	                           test r8d, r8d	      5200	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x40080ed	            0x741a	                            je 0x4008109	      5200	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x40080ef	              0x90	                                     nop	      5200	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x40080f0	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      5201	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x40080f5	          0x83c001	                              add eax, 1	      5200	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x40080f8	          0x4439c0	                            cmp eax, r8d	      5200	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x40080fb	        0x488d4a01	                      lea rcx, [rdx + 1]	      5201	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x40080ff	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      5201	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x4008104	          0xc6025c	                    mov byte [rdx], 0x5c	      5201	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x4008107	            0x75e7	                           jne 0x40080f0	      5200	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x4008109	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5203	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400810e	          0x4531c0	                            xor r8d, r8d	      5202	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x4008111	        0x488d5001	                      lea rdx, [rax + 1]	      5203	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x4008115	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5203	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400811a	          0xc6005c	                    mov byte [rax], 0x5c	      5203	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400811d	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x4008122	        0x488d5001	                      lea rdx, [rax + 1]	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x4008126	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400812b	      0x488b542408	                mov rdx, qword [rsp + 8]	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x4008130	        0x488d4a01	                      lea rcx, [rdx + 1]	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x4008134	      0x48894c2408	                mov qword [rsp + 8], rcx	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x4008139	           0xfb612	                   movzx edx, byte [rdx]	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400813c	            0x8810	                      mov byte [rax], dl	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400813e	            0xeb92	                           jmp 0x40080d2	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x4008140	    0x8b0500000000	            mov eax, dword [0x04008146] 	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x4008146	            0x85c0	                           test eax, eax	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x4008148	     0xf85ca000000	                           jne 0x4008218	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400814e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x4008153	          0x4531c0	                            xor r8d, r8d	      5211	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x4008156	        0x488d5001	                      lea rdx, [rax + 1]	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400815a	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400815f	        0x498d5501	                      lea rdx, [r13 + 1]	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x4008163	      0x4889542408	                mov qword [rsp + 8], rdx	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x4008168	      0x410fb65500	                   movzx edx, byte [r13]	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400816d	            0x8810	                      mov byte [rax], dl	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400816f	      0xe95effffff	                           jmp 0x40080d2	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x4008174	         0xf1f4000	                         nop dword [rax]	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x4008178	            0x85db	                           test ebx, ebx	      5218	channel.c	FUNCTION_118	IF_7
0x400817a	            0x7436	                            je 0x40081b2	      5218	channel.c	FUNCTION_118	IF_7
0x400817c	            0x31c0	                            xor eax, eax	      5220	channel.c	FUNCTION_118	IF_7	FOR_4
0x400817e	          0x4585c0	                           test r8d, r8d	      5220	channel.c	FUNCTION_118	IF_7	FOR_4
0x4008181	            0x741e	                            je 0x40081a1	      5220	channel.c	FUNCTION_118	IF_7	FOR_4
0x4008183	       0xf1f440000	                   nop dword [rax + rax]	      5220	channel.c	FUNCTION_118	IF_7	FOR_4
0x4008188	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      5221	channel.c	FUNCTION_118	IF_7	FOR_4
0x400818d	          0x83c001	                              add eax, 1	      5220	channel.c	FUNCTION_118	IF_7	FOR_4
0x4008190	          0x4139c0	                            cmp r8d, eax	      5220	channel.c	FUNCTION_118	IF_7	FOR_4
0x4008193	        0x488d4a01	                      lea rcx, [rdx + 1]	      5221	channel.c	FUNCTION_118	IF_7	FOR_4
0x4008197	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      5221	channel.c	FUNCTION_118	IF_7	FOR_4
0x400819c	          0xc6025c	                    mov byte [rdx], 0x5c	      5221	channel.c	FUNCTION_118	IF_7	FOR_4
0x400819f	            0x75e7	                           jne 0x4008188	      5220	channel.c	FUNCTION_118	IF_7	FOR_4
0x40081a1	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5222	channel.c	FUNCTION_118	IF_7
0x40081a6	        0x488d5001	                      lea rdx, [rax + 1]	      5222	channel.c	FUNCTION_118	IF_7
0x40081aa	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5222	channel.c	FUNCTION_118	IF_7
0x40081af	          0xc60022	                    mov byte [rax], 0x22	      5222	channel.c	FUNCTION_118	IF_7
0x40081b2	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5224	channel.c	FUNCTION_118
0x40081b7	          0xc60000	                       mov byte [rax], 0	      5224	channel.c	FUNCTION_118
0x40081ba	          0x4c89f6	                            mov rsi, r14	      5248	channel.c	FUNCTION_119	FOR_1	CALL_3
0x40081bd	          0x4c89e7	                            mov rdi, r12	      5248	channel.c	FUNCTION_119	FOR_1	CALL_3
0x40081c0	      0xe800000000	                          call 0x40081c5	      5248	channel.c	FUNCTION_119	FOR_1	CALL_3
0x40081c5	          0x4c89f7	                            mov rdi, r14	      5249	channel.c	FUNCTION_119	FOR_1	CALL_4
0x40081c8	      0xe800000000	                          call 0x40081cd	      5249	channel.c	FUNCTION_119	FOR_1	CALL_4
0x40081cd	      0x48837d0000	                      cmp qword [rbp], 0	      5250	channel.c	FUNCTION_119	FOR_1	IF_3
0x40081d2	            0x741c	                            je 0x40081f0	      5250	channel.c	FUNCTION_119	FOR_1	IF_3
0x40081d4	      0xbe20000000	                           mov esi, 0x20	      5251	channel.c	FUNCTION_119	FOR_1	CALL_5
0x40081d9	          0x4c89e7	                            mov rdi, r12	      5251	channel.c	FUNCTION_119	FOR_1	CALL_5
0x40081dc	      0xe800000000	                          call 0x40081e1	      5251	channel.c	FUNCTION_119	FOR_1	CALL_5
0x40081e1	        0x488b6d00	                    mov rbp, qword [rbp]	      5240	channel.c	FUNCTION_119	FOR_1
0x40081e5	          0x4885ed	                           test rbp, rbp	      5240	channel.c	FUNCTION_119	FOR_1
0x40081e8	     0xf85c2fdffff	                           jne 0x4007fb0	      5240	channel.c	FUNCTION_119	FOR_1
0x40081ee	            0x6690	                                     nop	      5240	channel.c	FUNCTION_119	FOR_1
0x40081f0	      0xb801000000	                              mov eax, 1	      5253	channel.c	FUNCTION_119
0x40081f5	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      5254	channel.c	FUNCTION_119
0x40081fa	    0x644833342528	                xor rsi, qword fs:[0x28]	      5254	channel.c	FUNCTION_119
0x4008203	            0x7555	                           jne 0x400825a	      5254	channel.c	FUNCTION_119
0x4008205	        0x4883c428	                           add rsp, 0x28	      5254	channel.c	FUNCTION_119
0x4008209	              0x5b	                                 pop rbx	      5254	channel.c	FUNCTION_119
0x400820a	              0x5d	                                 pop rbp	      5254	channel.c	FUNCTION_119
0x400820b	            0x415c	                                 pop r12	      5254	channel.c	FUNCTION_119
0x400820d	            0x415d	                                 pop r13	      5254	channel.c	FUNCTION_119
0x400820f	            0x415e	                                 pop r14	      5254	channel.c	FUNCTION_119
0x4008211	            0x415f	                                 pop r15	      5254	channel.c	FUNCTION_119
0x4008213	              0xc3	                                     ret	      5254	channel.c	FUNCTION_119
0x4008214	         0xf1f4000	                         nop dword [rax]	      5254	channel.c	FUNCTION_119
0x4008218	      0x488d742410	                   lea rsi, [rsp + 0x10]	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400821d	      0x488d7c2408	                      lea rdi, [rsp + 8]	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x4008222	      0xe800000000	                          call 0x4008227	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x4008227	          0x4531c0	                            xor r8d, r8d	      5211	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400822a	      0xe9a3feffff	                           jmp 0x40080d2	      5211	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400822f	              0x90	                                     nop	      5211	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x4008230	        0x498d4601	                      lea rax, [r14 + 1]	      5193	channel.c	FUNCTION_118	IF_6
0x4008234	      0x4889442410	             mov qword [rsp + 0x10], rax	      5193	channel.c	FUNCTION_118	IF_6
0x4008239	        0x41c60622	                    mov byte [r14], 0x22	      5193	channel.c	FUNCTION_118	IF_6
0x400823d	      0xe956feffff	                           jmp 0x4008098	      5193	channel.c	FUNCTION_118	IF_6
0x4008242	          0x4c89ef	                            mov rdi, r13	      5182	channel.c	FUNCTION_118	CALL_3
0x4008245	      0xe800000000	                          call 0x400824a	      5182	channel.c	FUNCTION_118	CALL_3
0x400824a	          0x4885c0	                           test rax, rax	      5246	channel.c	FUNCTION_119	FOR_1	IF_2
0x400824d	          0x4989c6	                            mov r14, rax	      5182	channel.c	FUNCTION_118	CALL_3
0x4008250	     0xf8564ffffff	                           jne 0x40081ba	      5246	channel.c	FUNCTION_119	FOR_1	IF_2
0x4008256	            0x31c0	                            xor eax, eax	      5247	channel.c	FUNCTION_119	FOR_1	IF_2
0x4008258	            0xeb9b	                           jmp 0x40081f5	      5247	channel.c	FUNCTION_119	FOR_1	IF_2
0x400825a	      0xe800000000	                          call 0x400825f	      5254	channel.c	FUNCTION_119
channel_fill_wfds	DO,0:IF,2:FOR,1:ELSE,0:SWITCH,0:CALL,1:WHILE,0:functions,0	47
0x40002a0	            0x4155	                                push r13	      3054	channel.c	FUNCTION_74
0x40002a2	            0x4154	                                push r12	      3054	channel.c	FUNCTION_74
0x40002a4	          0x4189fc	                           mov r12d, edi	      3054	channel.c	FUNCTION_74
0x40002a7	              0x55	                                push rbp	      3054	channel.c	FUNCTION_74
0x40002a8	              0x53	                                push rbx	      3054	channel.c	FUNCTION_74
0x40002a9	        0x4883ec08	                              sub rsp, 8	      3054	channel.c	FUNCTION_74
0x40002ad	    0x488b1d000000	            mov rbx, qword [0x040002b4] 	      3058	channel.c	FUNCTION_74	FOR_1
0x40002b4	          0x4885db	                           test rbx, rbx	      3058	channel.c	FUNCTION_74	FOR_1
0x40002b7	            0x746f	                            je 0x4000328	      3058	channel.c	FUNCTION_74	FOR_1
0x40002b9	          0x4989f5	                            mov r13, rsi	      3058	channel.c	FUNCTION_74	FOR_1
0x40002bc	      0xbd01000000	                              mov ebp, 1	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x40002c1	            0xeb3d	                           jmp 0x4000300	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x40002c3	       0xf1f440000	                   nop dword [rax + rax]	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x40002c8	      0xe800000000	                          call 0x40002cd	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x40002cd	    0x8b9348030000	           mov edx, dword [rbx + 0x348] 	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x40002d3	          0x4889ee	                            mov rsi, rbp	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x40002d6	            0x89d7	                            mov edi, edx	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x40002d8	          0xc1ff1f	                           sar edi, 0x1f	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x40002db	          0xc1ef1a	                           shr edi, 0x1a	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x40002de	          0x8d0c3a	                    lea ecx, [rdx + rdi]	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x40002e1	          0x83e13f	                           and ecx, 0x3f	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x40002e4	            0x29f9	                            sub ecx, edi	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x40002e6	          0x48d3e6	                             shl rsi, cl	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x40002e9	      0x490974c500	             or qword [r13 + rax*8], rsi	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x40002ee	          0x8d4201	                      lea eax, [rdx + 1]	      3068	channel.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x40002f1	          0x4439e2	                           cmp edx, r12d	      3068	channel.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x40002f4	        0x440f4de0	                        cmovge r12d, eax	      3068	channel.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x40002f8	          0x488b1b	                    mov rbx, qword [rbx]	      3058	channel.c	FUNCTION_74	FOR_1
0x40002fb	          0x4885db	                           test rbx, rbx	      3058	channel.c	FUNCTION_74	FOR_1
0x40002fe	            0x7428	                            je 0x4000328	      3058	channel.c	FUNCTION_74	FOR_1
0x4000300	    0x4863bb480300	        movsxd rdi, dword [rbx + 0x348] 	      3062	channel.c	FUNCTION_74	FOR_1	IF_1
0x4000307	          0x83ffff	             cmp edi, 0xffffffffffffffff	      3062	channel.c	FUNCTION_74	FOR_1	IF_1
0x400030a	            0x74ec	                            je 0x40002f8	      3062	channel.c	FUNCTION_74	FOR_1	IF_1
0x400030c	    0x4883bb280400	              cmp qword [rbx + 0x428], 0	      3063	channel.c	FUNCTION_74	FOR_1	IF_1
0x4000314	            0x75b2	                           jne 0x40002c8	      3063	channel.c	FUNCTION_74	FOR_1	IF_1
0x4000316	    0x4883bbe00300	              cmp qword [rbx + 0x3e0], 0	      3064	channel.c	FUNCTION_74	FOR_1	IF_1
0x400031e	            0x75a8	                           jne 0x40002c8	      3064	channel.c	FUNCTION_74	FOR_1	IF_1
0x4000320	          0x488b1b	                    mov rbx, qword [rbx]	      3058	channel.c	FUNCTION_74	FOR_1
0x4000323	          0x4885db	                           test rbx, rbx	      3058	channel.c	FUNCTION_74	FOR_1
0x4000326	            0x75d8	                           jne 0x4000300	      3058	channel.c	FUNCTION_74	FOR_1
0x4000328	        0x4883c408	                              add rsp, 8	      3072	channel.c	FUNCTION_74
0x400032c	          0x4489e0	                           mov eax, r12d	      3072	channel.c	FUNCTION_74
0x400032f	              0x5b	                                 pop rbx	      3072	channel.c	FUNCTION_74
0x4000330	              0x5d	                                 pop rbp	      3072	channel.c	FUNCTION_74
0x4000331	            0x415c	                                 pop r12	      3072	channel.c	FUNCTION_74
0x4000333	            0x415d	                                 pop r13	      3072	channel.c	FUNCTION_74
0x4000335	              0xc3	                                     ret	      3072	channel.c	FUNCTION_74
job_alloc	DO,0:IF,2:FOR,0:ELSE,0:SWITCH,0:CALL,2:WHILE,0:functions,0	19
0x40084c0	              0x53	                                push rbx	      5399	channel.c	FUNCTION_125
0x40084c1	      0xbf70000000	                           mov edi, 0x70	      5402	channel.c	FUNCTION_125	CALL_1
0x40084c6	      0xe800000000	                          call 0x40084cb	      5402	channel.c	FUNCTION_125	CALL_1
0x40084cb	          0x4885c0	                           test rax, rax	      5403	channel.c	FUNCTION_125	IF_1
0x40084ce	          0x4889c3	                            mov rbx, rax	      5402	channel.c	FUNCTION_125	CALL_1
0x40084d1	            0x742f	                            je 0x4008502	      5403	channel.c	FUNCTION_125	IF_1
0x40084d3	    0xc74058010000	               mov dword [rax + 0x58], 1	      5405	channel.c	FUNCTION_125	IF_1
0x40084da	      0xbf00000000	                              mov edi, 0	      5406	channel.c	FUNCTION_125	IF_1	CALL_2
0x40084df	      0xe800000000	                          call 0x40084e4	      5406	channel.c	FUNCTION_125	IF_1	CALL_2
0x40084e4	        0x48894330	             mov qword [rbx + 0x30], rax	      5406	channel.c	FUNCTION_125	IF_1	CALL_2
0x40084e8	    0x488b05000000	            mov rax, qword [0x040084ef] 	      5408	channel.c	FUNCTION_125	IF_1	IF_2
0x40084ef	          0x4885c0	                           test rax, rax	      5408	channel.c	FUNCTION_125	IF_1	IF_2
0x40084f2	            0x7407	                            je 0x40084fb	      5408	channel.c	FUNCTION_125	IF_1	IF_2
0x40084f4	        0x48895808	                mov qword [rax + 8], rbx	      5410	channel.c	FUNCTION_125	IF_1	IF_2
0x40084f8	          0x488903	                    mov qword [rbx], rax	      5411	channel.c	FUNCTION_125	IF_1	IF_2
0x40084fb	    0x48891d000000	            mov qword [0x04008502], rbx 	      5413	channel.c	FUNCTION_125	IF_1
0x4008502	          0x4889d8	                            mov rax, rbx	      5416	channel.c	FUNCTION_125
0x4008505	              0x5b	                                 pop rbx	      5416	channel.c	FUNCTION_125
0x4008506	              0xc3	                                     ret	      5416	channel.c	FUNCTION_125
job_check_ended	DO,0:IF,3:FOR,1:ELSE,0:SWITCH,0:CALL,3:WHILE,0:functions,0	30
0x4008690	    0x488b3d000000	            mov rdi, qword [0x04008697] 	      5496	channel.c	FUNCTION_129	IF_1
0x4008697	          0x4885ff	                           test rdi, rdi	      5496	channel.c	FUNCTION_129	IF_1
0x400869a	            0x7447	                            je 0x40086e3	      5496	channel.c	FUNCTION_129	IF_1
0x400869c	              0x53	                                push rbx	      5493	channel.c	FUNCTION_129
0x400869d	      0xbb08000000	                              mov ebx, 8	      5493	channel.c	FUNCTION_129
0x40086a2	            0xeb10	                           jmp 0x40086b4	      5493	channel.c	FUNCTION_129
0x40086a4	         0xf1f4000	                         nop dword [rax]	      5493	channel.c	FUNCTION_129
0x40086a8	          0x83eb01	                              sub ebx, 1	      5499	channel.c	FUNCTION_129	FOR_1
0x40086ab	            0x742b	                            je 0x40086d8	      5499	channel.c	FUNCTION_129	FOR_1
0x40086ad	    0x488b3d000000	            mov rdi, qword [0x040086b4] 	      5499	channel.c	FUNCTION_129	FOR_1
0x40086b4	      0xe800000000	                          call 0x40086b9	      5503	channel.c	FUNCTION_129	FOR_1	CALL_1
0x40086b9	          0x4885c0	                           test rax, rax	      5505	channel.c	FUNCTION_129	FOR_1	IF_2
0x40086bc	            0x741a	                            je 0x40086d8	      5505	channel.c	FUNCTION_129	FOR_1	IF_2
0x40086be	        0x83782802	               cmp dword [rax + 0x28], 2	      5265	channel.c	FUNCTION_120	IF_1
0x40086c2	            0x75e4	                           jne 0x40086a8	      5265	channel.c	FUNCTION_120	IF_1
0x40086c4	          0x4889c7	                            mov rdi, rax	      5265	channel.c	FUNCTION_120	IF_1
0x40086c7	      0xe8f4c8ffff	            call sym.job_cleanup.part.15	      5265	channel.c	FUNCTION_120	IF_1
0x40086cc	          0x83eb01	                              sub ebx, 1	      5499	channel.c	FUNCTION_129	FOR_1
0x40086cf	            0x75dc	                           jne 0x40086ad	      5499	channel.c	FUNCTION_129	FOR_1
0x40086d1	     0xf1f80000000	                         nop dword [rax]	      5499	channel.c	FUNCTION_129	FOR_1
0x40086d8	    0x8b0500000000	            mov eax, dword [0x040086de] 	      5510	channel.c	FUNCTION_129	IF_3
0x40086de	            0x85c0	                           test eax, eax	      5510	channel.c	FUNCTION_129	IF_3
0x40086e0	            0x7506	                           jne 0x40086e8	      5510	channel.c	FUNCTION_129	IF_3
0x40086e2	              0x5b	                                 pop rbx	      5515	channel.c	FUNCTION_129
0x40086e3	            0xf3c3	                                     ret	      5515	channel.c	FUNCTION_129
0x40086e5	           0xf1f00	                         nop dword [rax]	      5515	channel.c	FUNCTION_129
0x40086e8	              0x5b	                                 pop rbx	      5515	channel.c	FUNCTION_129
0x40086e9	      0xbf01000000	                              mov edi, 1	      5513	channel.c	FUNCTION_129	IF_3	CALL_3
0x40086ee	    0xc70500000000	               mov dword [0x040086f8], 0	      5512	channel.c	FUNCTION_129	IF_3
0x40086f8	      0xe900000000	                           jmp 0x40086fd	      5513	channel.c	FUNCTION_129	IF_3	CALL_3
channel_set_options	DO,0:IF,29:FOR,2:ELSE,5:SWITCH,0:CALL,20:WHILE,0:functions,0	245
0x4001740	            0x4154	                                push r12	      1165	channel.c	FUNCTION_34
0x4001742	              0x55	                                push rbp	      1165	channel.c	FUNCTION_34
0x4001743	          0x4889f5	                            mov rbp, rsi	      1165	channel.c	FUNCTION_34
0x4001746	              0x53	                                push rbx	      1165	channel.c	FUNCTION_34
0x4001747	            0x8b06	                    mov eax, dword [rsi]	      1168	channel.c	FUNCTION_34	IF_1
0x4001749	          0x4889fb	                            mov rbx, rdi	      1165	channel.c	FUNCTION_34
0x400174c	            0xa801	                              test al, 1	      1168	channel.c	FUNCTION_34	IF_1
0x400174e	            0x7418	                            je 0x4001768	      1168	channel.c	FUNCTION_34	IF_1
0x4001750	          0x8b5608	                mov edx, dword [rsi + 8]	      1168	channel.c	FUNCTION_34	IF_1
0x4001753	          0x895720	             mov dword [rdi + 0x20], edx	      1170	channel.c	FUNCTION_34	IF_1	FOR_1
0x4001756	    0x899730010000	            mov dword [rdi + 0x130], edx	      1170	channel.c	FUNCTION_34	IF_1	FOR_1
0x400175c	    0x899740020000	            mov dword [rdi + 0x240], edx	      1170	channel.c	FUNCTION_34	IF_1	FOR_1
0x4001762	    0x899750030000	            mov dword [rdi + 0x350], edx	      1170	channel.c	FUNCTION_34	IF_1	FOR_1
0x4001768	            0xa802	                              test al, 2	      1171	channel.c	FUNCTION_34	IF_2
0x400176a	            0x7409	                            je 0x4001775	      1171	channel.c	FUNCTION_34	IF_2
0x400176c	          0x8b550c	              mov edx, dword [rbp + 0xc]	      1172	channel.c	FUNCTION_34	IF_2
0x400176f	    0x899350030000	            mov dword [rbx + 0x350], edx	      1172	channel.c	FUNCTION_34	IF_2
0x4001775	            0xa804	                              test al, 4	      1173	channel.c	FUNCTION_34	IF_3
0x4001777	            0x7409	                            je 0x4001782	      1173	channel.c	FUNCTION_34	IF_3
0x4001779	          0x8b5510	            mov edx, dword [rbp + 0x10] 	      1174	channel.c	FUNCTION_34	IF_3
0x400177c	    0x899330010000	            mov dword [rbx + 0x130], edx	      1174	channel.c	FUNCTION_34	IF_3
0x4001782	            0xa808	                              test al, 8	      1175	channel.c	FUNCTION_34	IF_4
0x4001784	            0x7409	                            je 0x400178f	      1175	channel.c	FUNCTION_34	IF_4
0x4001786	          0x8b5514	            mov edx, dword [rbp + 0x14] 	      1176	channel.c	FUNCTION_34	IF_4
0x4001789	    0x899340020000	            mov dword [rbx + 0x240], edx	      1176	channel.c	FUNCTION_34	IF_4
0x400178f	          0xf6c402	                              test ah, 2	      1178	channel.c	FUNCTION_34	IF_5
0x4001792	            0x741b	                            je 0x40017af	      1178	channel.c	FUNCTION_34	IF_5
0x4001794	    0x8b95f8010000	           mov edx, dword [rbp + 0x1f8] 	      1178	channel.c	FUNCTION_34	IF_5
0x400179a	          0x895328	             mov dword [rbx + 0x28], edx	      1180	channel.c	FUNCTION_34	IF_5	FOR_2
0x400179d	    0x899338010000	            mov dword [rbx + 0x138], edx	      1180	channel.c	FUNCTION_34	IF_5	FOR_2
0x40017a3	    0x899348020000	            mov dword [rbx + 0x248], edx	      1180	channel.c	FUNCTION_34	IF_5	FOR_2
0x40017a9	    0x899358030000	            mov dword [rbx + 0x358], edx	      1180	channel.c	FUNCTION_34	IF_5	FOR_2
0x40017af	          0xf6c404	                              test ah, 4	      1181	channel.c	FUNCTION_34	IF_6
0x40017b2	            0x740c	                            je 0x40017c0	      1181	channel.c	FUNCTION_34	IF_6
0x40017b4	    0x8b95fc010000	           mov edx, dword [rbp + 0x1fc] 	      1182	channel.c	FUNCTION_34	IF_6
0x40017ba	    0x899338010000	            mov dword [rbx + 0x138], edx	      1182	channel.c	FUNCTION_34	IF_6
0x40017c0	          0xf6c408	                              test ah, 8	      1183	channel.c	FUNCTION_34	IF_7
0x40017c3	            0x740c	                            je 0x40017d1	      1183	channel.c	FUNCTION_34	IF_7
0x40017c5	    0x8b9500020000	           mov edx, dword [rbp + 0x200] 	      1184	channel.c	FUNCTION_34	IF_7
0x40017cb	    0x899348020000	            mov dword [rbx + 0x248], edx	      1184	channel.c	FUNCTION_34	IF_7
0x40017d1	      0xa900000010	                    test eax, 0x10000000	      1185	channel.c	FUNCTION_34	IF_8
0x40017d6	            0x740a	                            je 0x40017e2	      1185	channel.c	FUNCTION_34	IF_8
0x40017d8	    0xc783c0030000	              mov dword [rbx + 0x3c0], 1	      1186	channel.c	FUNCTION_34	IF_8
0x40017e2	            0xa810	                           test al, 0x10	      1188	channel.c	FUNCTION_34	IF_9
0x40017e4	     0xf85d6010000	                           jne 0x40019c0	      1188	channel.c	FUNCTION_34	IF_9
0x40017ea	            0xa820	                           test al, 0x20	      1191	channel.c	FUNCTION_34	IF_10
0x40017ec	     0xf859e010000	                           jne 0x4001990	      1191	channel.c	FUNCTION_34	IF_10
0x40017f2	            0xa840	                           test al, 0x40	      1195	channel.c	FUNCTION_34	IF_11
0x40017f4	     0xf8566010000	                           jne 0x4001960	      1195	channel.c	FUNCTION_34	IF_11
0x40017fa	            0xa880	                           test al, 0x80	      1199	channel.c	FUNCTION_34	IF_12
0x40017fc	     0xf852e010000	                           jne 0x4001930	      1199	channel.c	FUNCTION_34	IF_12
0x4001802	    0x8b95f0010000	           mov edx, dword [rbp + 0x1f0] 	      1202	channel.c	FUNCTION_34
0x4001808	      0xa900000100	                       test eax, 0x10000	      1204	channel.c	FUNCTION_34	IF_13
0x400180d	    0x8993a0040000	            mov dword [rbx + 0x4a0], edx	      1202	channel.c	FUNCTION_34
0x4001813	            0x740a	                            je 0x400181f	      1204	channel.c	FUNCTION_34	IF_13
0x4001815	        0x837d1c03	               cmp dword [rbp + 0x1c], 3	      1204	channel.c	FUNCTION_34	IF_13
0x4001819	     0xf84d1010000	                            je 0x40019f0	      1204	channel.c	FUNCTION_34	IF_13
0x400181f	      0xa900000200	                       test eax, 0x20000	      1244	channel.c	FUNCTION_34	IF_21
0x4001824	     0xf84e5000000	                            je 0x400190f	      1244	channel.c	FUNCTION_34	IF_21
0x400182a	          0x8b5520	            mov edx, dword [rbp + 0x20] 	      1244	channel.c	FUNCTION_34	IF_21
0x400182d	          0x83fa03	                              cmp edx, 3	      1244	channel.c	FUNCTION_34	IF_21
0x4001830	            0x743e	                            je 0x4001870	      1244	channel.c	FUNCTION_34	IF_21
0x4001832	          0x83fa04	                              cmp edx, 4	      1245	channel.c	FUNCTION_34	IF_21
0x4001835	          0x8b4d1c	            mov ecx, dword [rbp + 0x1c] 	      1246	channel.c	FUNCTION_34	IF_21
0x4001838	     0xf85d7000000	                           jne 0x4001915	      1245	channel.c	FUNCTION_34	IF_21
0x400183e	      0xa900000100	                       test eax, 0x10000	      1245	channel.c	FUNCTION_34	IF_21
0x4001843	     0xf84cc000000	                            je 0x4001915	      1245	channel.c	FUNCTION_34	IF_21
0x4001849	          0x83f903	                              cmp ecx, 3	      1246	channel.c	FUNCTION_34	IF_21
0x400184c	     0xf85c3000000	                           jne 0x4001915	      1246	channel.c	FUNCTION_34	IF_21
0x4001852	            0xa808	                              test al, 8	      1251	channel.c	FUNCTION_34	IF_21	IF_22
0x4001854	            0x750a	                           jne 0x4001860	      1251	channel.c	FUNCTION_34	IF_21	IF_22
0x4001856	    0xc78340020000	              mov dword [rbx + 0x240], 0	      1252	channel.c	FUNCTION_34	IF_21	IF_22
0x4001860	    0x4c8ba3080200	           mov r12, qword [rbx + 0x208] 	      1254	channel.c	FUNCTION_34	IF_21	IF_23
0x4001867	            0xeb45	                           jmp 0x40018ae	      1254	channel.c	FUNCTION_34	IF_21	IF_23
0x4001869	     0xf1f80000000	                         nop dword [rax]	      1254	channel.c	FUNCTION_34	IF_21	IF_23
0x4001870	            0xa808	                              test al, 8	      1251	channel.c	FUNCTION_34	IF_21	IF_22
0x4001872	            0x750a	                           jne 0x400187e	      1251	channel.c	FUNCTION_34	IF_21	IF_22
0x4001874	    0xc78340020000	              mov dword [rbx + 0x240], 0	      1252	channel.c	FUNCTION_34	IF_21	IF_22
0x400187e	      0xa900000002	                     test eax, 0x2000000	      1255	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24
0x4001883	     0xf8517020000	                           jne 0x4001aa0	      1255	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24
0x4001889	        0xf6450402	                  test byte [rbp + 4], 2	      1265	channel.c	FUNCTION_34	IF_21	ELSE_4	IF_26
0x400188d	      0xba01000000	                              mov edx, 1	      1263	channel.c	FUNCTION_34	IF_21	ELSE_4
0x4001892	            0x7406	                            je 0x400189a	      1265	channel.c	FUNCTION_34	IF_21	ELSE_4	IF_26
0x4001894	    0x8b957c010000	           mov edx, dword [rbp + 0x17c] 	      1266	channel.c	FUNCTION_34	IF_21	ELSE_4	IF_26
0x400189a	    0x488bbd400100	           mov rdi, qword [rbp + 0x140] 	      1267	channel.c	FUNCTION_34	IF_21	ELSE_4	CALL_16
0x40018a1	      0xbe01000000	                              mov esi, 1	      1267	channel.c	FUNCTION_34	IF_21	ELSE_4	CALL_16
0x40018a6	      0xe835eeffff	                    call sym.find_buffer	      1267	channel.c	FUNCTION_34	IF_21	ELSE_4	CALL_16
0x40018ab	          0x4989c4	                            mov r12, rax	      1267	channel.c	FUNCTION_34	IF_21	ELSE_4	CALL_16
0x40018ae	          0x4d85e4	                           test r12, r12	      1269	channel.c	FUNCTION_34	IF_21	IF_27
0x40018b1	            0x745c	                            je 0x400190f	      1269	channel.c	FUNCTION_34	IF_21	IF_27
0x40018b3	    0xf74500000000	           test dword [rbp], 0x40000000 	      1271	channel.c	FUNCTION_34	IF_21	IF_27	IF_28
0x40018ba	            0x7413	                            je 0x40018cf	      1271	channel.c	FUNCTION_34	IF_21	IF_27	IF_28
0x40018bc	    0x8b8d6c010000	           mov ecx, dword [rbp + 0x16c] 	      1272	channel.c	FUNCTION_34	IF_21	IF_27	IF_28
0x40018c2	            0x31c0	                            xor eax, eax	      1272	channel.c	FUNCTION_34	IF_21	IF_27	IF_28
0x40018c4	            0x85c9	                           test ecx, ecx	      1272	channel.c	FUNCTION_34	IF_21	IF_27	IF_28
0x40018c6	           0xf94c0	                                 sete al	      1272	channel.c	FUNCTION_34	IF_21	IF_27	IF_28
0x40018c9	    0x898328030000	            mov dword [rbx + 0x328], eax	      1272	channel.c	FUNCTION_34	IF_21	IF_27	IF_28
0x40018cf	    0x418b94244015	          mov edx, dword [r12 + 0x1540] 	      1274	channel.c	FUNCTION_34	IF_21	IF_27	IF_29
0x40018d7	            0x85d2	                           test edx, edx	      1274	channel.c	FUNCTION_34	IF_21	IF_27	IF_29
0x40018d9	            0x750e	                           jne 0x40018e9	      1274	channel.c	FUNCTION_34	IF_21	IF_27	IF_29
0x40018db	    0x8b8328030000	           mov eax, dword [rbx + 0x328] 	      1274	channel.c	FUNCTION_34	IF_21	IF_27	IF_29
0x40018e1	            0x85c0	                           test eax, eax	      1274	channel.c	FUNCTION_34	IF_21	IF_27	IF_29
0x40018e3	     0xf8447020000	                            je 0x4001b30	      1274	channel.c	FUNCTION_34	IF_21	IF_27	IF_29
0x40018e9	    0x498b94248800	            mov rdx, qword [r12 + 0x88] 	      1280	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_19
0x40018f1	      0xbe00000000	                              mov esi, 0	      1280	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_19
0x40018f6	          0x4889df	                            mov rdi, rbx	      1280	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_19
0x40018f9	            0x31c0	                            xor eax, eax	      1280	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_19
0x40018fb	      0xe800000000	                          call 0x4001900	      1280	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_19
0x4001900	    0x488dbb180300	                  lea rdi, [rbx + 0x318]	      1282	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_20
0x4001907	          0x4c89e6	                            mov rsi, r12	      1282	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_20
0x400190a	      0xe800000000	                          call 0x400190f	      1282	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_20
0x400190f	          0x8b4d1c	            mov ecx, dword [rbp + 0x1c] 	      1282	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_20
0x4001912	          0x8b5520	            mov edx, dword [rbp + 0x20] 	      1282	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_20
0x4001915	          0x8b4524	            mov eax, dword [rbp + 0x24] 	      1289	channel.c	FUNCTION_34
0x4001918	    0x898b34010000	            mov dword [rbx + 0x134], ecx	      1287	channel.c	FUNCTION_34
0x400191e	    0x899344020000	            mov dword [rbx + 0x244], edx	      1288	channel.c	FUNCTION_34
0x4001924	    0x898354030000	            mov dword [rbx + 0x354], eax	      1289	channel.c	FUNCTION_34
0x400192a	              0x5b	                                 pop rbx	      1290	channel.c	FUNCTION_34
0x400192b	              0x5d	                                 pop rbp	      1290	channel.c	FUNCTION_34
0x400192c	            0x415c	                                 pop r12	      1290	channel.c	FUNCTION_34
0x400192e	              0xc3	                                     ret	      1290	channel.c	FUNCTION_34
0x400192f	              0x90	                                     nop	      1290	channel.c	FUNCTION_34
0x4001930	    0x488b8dd80100	           mov rcx, qword [rbp + 0x1d8] 	      1200	channel.c	FUNCTION_34	IF_12	CALL_4
0x4001937	    0x488b95d00100	           mov rdx, qword [rbp + 0x1d0] 	      1200	channel.c	FUNCTION_34	IF_12	CALL_4
0x400193e	    0x488db3980400	                  lea rsi, [rbx + 0x498]	      1200	channel.c	FUNCTION_34	IF_12	CALL_4
0x4001945	    0x488dbb900400	                  lea rdi, [rbx + 0x490]	      1200	channel.c	FUNCTION_34	IF_12	CALL_4
0x400194c	      0xe8ffecffff	                   call sym.set_callback	      1200	channel.c	FUNCTION_34	IF_12	CALL_4
0x4001951	          0x8b4500	                    mov eax, dword [rbp]	      1200	channel.c	FUNCTION_34	IF_12	CALL_4
0x4001954	      0xe9a9feffff	                           jmp 0x4001802	      1200	channel.c	FUNCTION_34	IF_12	CALL_4
0x4001959	     0xf1f80000000	                         nop dword [rax]	      1200	channel.c	FUNCTION_34	IF_12	CALL_4
0x4001960	    0x488b8dc80100	           mov rcx, qword [rbp + 0x1c8] 	      1196	channel.c	FUNCTION_34	IF_11	CALL_3
0x4001967	    0x488b95c00100	           mov rdx, qword [rbp + 0x1c0] 	      1196	channel.c	FUNCTION_34	IF_11	CALL_3
0x400196e	    0x488db3100300	                  lea rsi, [rbx + 0x310]	      1196	channel.c	FUNCTION_34	IF_11	CALL_3
0x4001975	    0x488dbb080300	                  lea rdi, [rbx + 0x308]	      1196	channel.c	FUNCTION_34	IF_11	CALL_3
0x400197c	      0xe8cfecffff	                   call sym.set_callback	      1196	channel.c	FUNCTION_34	IF_11	CALL_3
0x4001981	          0x8b4500	                    mov eax, dword [rbp]	      1196	channel.c	FUNCTION_34	IF_11	CALL_3
0x4001984	      0xe971feffff	                           jmp 0x40017fa	      1196	channel.c	FUNCTION_34	IF_11	CALL_3
0x4001989	     0xf1f80000000	                         nop dword [rax]	      1196	channel.c	FUNCTION_34	IF_11	CALL_3
0x4001990	    0x488b8db80100	           mov rcx, qword [rbp + 0x1b8] 	      1192	channel.c	FUNCTION_34	IF_10	CALL_2
0x4001997	    0x488b95b00100	           mov rdx, qword [rbp + 0x1b0] 	      1192	channel.c	FUNCTION_34	IF_10	CALL_2
0x400199e	    0x488db3000200	                  lea rsi, [rbx + 0x200]	      1192	channel.c	FUNCTION_34	IF_10	CALL_2
0x40019a5	    0x488dbbf80100	                  lea rdi, [rbx + 0x1f8]	      1192	channel.c	FUNCTION_34	IF_10	CALL_2
0x40019ac	      0xe89fecffff	                   call sym.set_callback	      1192	channel.c	FUNCTION_34	IF_10	CALL_2
0x40019b1	          0x8b4500	                    mov eax, dword [rbp]	      1192	channel.c	FUNCTION_34	IF_10	CALL_2
0x40019b4	      0xe939feffff	                           jmp 0x40017f2	      1192	channel.c	FUNCTION_34	IF_10	CALL_2
0x40019b9	     0xf1f80000000	                         nop dword [rax]	      1192	channel.c	FUNCTION_34	IF_10	CALL_2
0x40019c0	    0x488b8da80100	           mov rcx, qword [rbp + 0x1a8] 	      1189	channel.c	FUNCTION_34	IF_9	CALL_1
0x40019c7	    0x488b95a00100	           mov rdx, qword [rbp + 0x1a0] 	      1189	channel.c	FUNCTION_34	IF_9	CALL_1
0x40019ce	    0x488db3880400	                  lea rsi, [rbx + 0x488]	      1189	channel.c	FUNCTION_34	IF_9	CALL_1
0x40019d5	    0x488dbb800400	                  lea rdi, [rbx + 0x480]	      1189	channel.c	FUNCTION_34	IF_9	CALL_1
0x40019dc	      0xe86fecffff	                   call sym.set_callback	      1189	channel.c	FUNCTION_34	IF_9	CALL_1
0x40019e1	          0x8b4500	                    mov eax, dword [rbp]	      1189	channel.c	FUNCTION_34	IF_9	CALL_1
0x40019e4	      0xe901feffff	                           jmp 0x40017ea	      1189	channel.c	FUNCTION_34	IF_9	CALL_1
0x40019e9	     0xf1f80000000	                         nop dword [rax]	      1189	channel.c	FUNCTION_34	IF_9	CALL_1
0x40019f0	            0xa804	                              test al, 4	      1209	channel.c	FUNCTION_34	IF_13	IF_14
0x40019f2	            0x750a	                           jne 0x40019fe	      1209	channel.c	FUNCTION_34	IF_13	IF_14
0x40019f4	    0xc78330010000	              mov dword [rbx + 0x130], 0	      1210	channel.c	FUNCTION_34	IF_13	IF_14
0x40019fe	      0xa900000001	                     test eax, 0x1000000	      1211	channel.c	FUNCTION_34	IF_13	IF_15
0x4001a03	     0xf85df000000	                           jne 0x4001ae8	      1211	channel.c	FUNCTION_34	IF_13	IF_15
0x4001a09	        0xf6450401	                  test byte [rbp + 4], 1	      1221	channel.c	FUNCTION_34	IF_13	ELSE_1	IF_17
0x4001a0d	      0xba01000000	                              mov edx, 1	      1219	channel.c	FUNCTION_34	IF_13	ELSE_1
0x4001a12	            0x757c	                           jne 0x4001a90	      1221	channel.c	FUNCTION_34	IF_13	ELSE_1	IF_17
0x4001a14	    0x488bbd380100	           mov rdi, qword [rbp + 0x138] 	      1223	channel.c	FUNCTION_34	IF_13	ELSE_1	CALL_8
0x4001a1b	            0x31f6	                            xor esi, esi	      1223	channel.c	FUNCTION_34	IF_13	ELSE_1	CALL_8
0x4001a1d	      0xe8beecffff	                    call sym.find_buffer	      1223	channel.c	FUNCTION_34	IF_13	ELSE_1	CALL_8
0x4001a22	          0x4885c0	                           test rax, rax	      1225	channel.c	FUNCTION_34	IF_13	IF_18
0x4001a25	          0x4989c4	                            mov r12, rax	      1223	channel.c	FUNCTION_34	IF_13	ELSE_1	CALL_8
0x4001a28	            0x745e	                            je 0x4001a88	      1225	channel.c	FUNCTION_34	IF_13	IF_18
0x4001a2a	    0xf74500000000	           test dword [rbp], 0x20000000 	      1227	channel.c	FUNCTION_34	IF_13	IF_18	IF_19
0x4001a31	            0x7415	                            je 0x4001a48	      1227	channel.c	FUNCTION_34	IF_13	IF_18	IF_19
0x4001a33	    0x448b85680100	           mov r8d, dword [rbp + 0x168] 	      1228	channel.c	FUNCTION_34	IF_13	IF_18	IF_19
0x4001a3a	            0x31c0	                            xor eax, eax	      1228	channel.c	FUNCTION_34	IF_13	IF_18	IF_19
0x4001a3c	          0x4585c0	                           test r8d, r8d	      1228	channel.c	FUNCTION_34	IF_13	IF_18	IF_19
0x4001a3f	           0xf94c0	                                 sete al	      1228	channel.c	FUNCTION_34	IF_13	IF_18	IF_19
0x4001a42	    0x898318020000	            mov dword [rbx + 0x218], eax	      1228	channel.c	FUNCTION_34	IF_13	IF_18	IF_19
0x4001a48	    0x418bbc244015	          mov edi, dword [r12 + 0x1540] 	      1231	channel.c	FUNCTION_34	IF_13	IF_18	IF_20
0x4001a50	            0x85ff	                           test edi, edi	      1231	channel.c	FUNCTION_34	IF_13	IF_18	IF_20
0x4001a52	            0x750e	                           jne 0x4001a62	      1231	channel.c	FUNCTION_34	IF_13	IF_18	IF_20
0x4001a54	    0x8bb318020000	           mov esi, dword [rbx + 0x218] 	      1231	channel.c	FUNCTION_34	IF_13	IF_18	IF_20
0x4001a5a	            0x85f6	                           test esi, esi	      1231	channel.c	FUNCTION_34	IF_13	IF_18	IF_20
0x4001a5c	     0xf84f6000000	                            je 0x4001b58	      1231	channel.c	FUNCTION_34	IF_13	IF_18	IF_20
0x4001a62	    0x498b94248800	            mov rdx, qword [r12 + 0x88] 	      1237	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_11
0x4001a6a	      0xbe00000000	                              mov esi, 0	      1237	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_11
0x4001a6f	          0x4889df	                            mov rdi, rbx	      1237	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_11
0x4001a72	            0x31c0	                            xor eax, eax	      1237	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_11
0x4001a74	      0xe800000000	                          call 0x4001a79	      1237	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_11
0x4001a79	    0x488dbb080200	                  lea rdi, [rbx + 0x208]	      1239	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_12
0x4001a80	          0x4c89e6	                            mov rsi, r12	      1239	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_12
0x4001a83	      0xe800000000	                          call 0x4001a88	      1239	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_12
0x4001a88	          0x8b4500	                    mov eax, dword [rbp]	      1239	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_12
0x4001a8b	      0xe98ffdffff	                           jmp 0x400181f	      1239	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_12
0x4001a90	    0x8b9578010000	           mov edx, dword [rbp + 0x178] 	      1222	channel.c	FUNCTION_34	IF_13	ELSE_1	IF_17
0x4001a96	      0xe979ffffff	                           jmp 0x4001a14	      1222	channel.c	FUNCTION_34	IF_13	ELSE_1	IF_17
0x4001a9b	       0xf1f440000	                   nop dword [rax + rax]	      1222	channel.c	FUNCTION_34	IF_13	ELSE_1	IF_17
0x4001aa0	    0x8bbd58010000	           mov edi, dword [rbp + 0x158] 	      1257	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_13
0x4001aa6	      0xe800000000	                          call 0x4001aab	      1257	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_13
0x4001aab	          0x4885c0	                           test rax, rax	      1258	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	IF_25
0x4001aae	          0x4989c4	                            mov r12, rax	      1257	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_13
0x4001ab1	     0xf85fcfdffff	                           jne 0x40018b3	      1258	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	IF_25
0x4001ab7	    0x4c63a5580100	        movsxd r12, dword [rbp + 0x158] 	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x4001abe	      0xba05000000	                              mov edx, 5	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x4001ac3	      0xbe00000000	                              mov esi, 0	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x4001ac8	            0x31ff	                            xor edi, edi	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x4001aca	      0xe800000000	                          call 0x4001acf	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x4001acf	          0x4889c7	                            mov rdi, rax	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x4001ad2	          0x4c89e6	                            mov rsi, r12	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x4001ad5	      0xe800000000	                          call 0x4001ada	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x4001ada	          0x8b4d1c	            mov ecx, dword [rbp + 0x1c] 	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x4001add	          0x8b5520	            mov edx, dword [rbp + 0x20] 	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x4001ae0	      0xe930feffff	                           jmp 0x4001915	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x4001ae5	           0xf1f00	                         nop dword [rax]	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x4001ae8	    0x8bbd54010000	           mov edi, dword [rbp + 0x154] 	      1213	channel.c	FUNCTION_34	IF_13	IF_15	CALL_5
0x4001aee	      0xe800000000	                          call 0x4001af3	      1213	channel.c	FUNCTION_34	IF_13	IF_15	CALL_5
0x4001af3	          0x4885c0	                           test rax, rax	      1214	channel.c	FUNCTION_34	IF_13	IF_15	IF_16
0x4001af6	          0x4989c4	                            mov r12, rax	      1213	channel.c	FUNCTION_34	IF_13	IF_15	CALL_5
0x4001af9	     0xf852bffffff	                           jne 0x4001a2a	      1214	channel.c	FUNCTION_34	IF_13	IF_15	IF_16
0x4001aff	    0x4c63a5540100	        movsxd r12, dword [rbp + 0x154] 	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x4001b06	      0xba05000000	                              mov edx, 5	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x4001b0b	      0xbe00000000	                              mov esi, 0	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x4001b10	            0x31ff	                            xor edi, edi	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x4001b12	      0xe800000000	                          call 0x4001b17	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x4001b17	          0x4889c7	                            mov rdi, rax	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x4001b1a	          0x4c89e6	                            mov rsi, r12	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x4001b1d	      0xe800000000	                          call 0x4001b22	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x4001b22	          0x8b4500	                    mov eax, dword [rbp]	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x4001b25	      0xe9f5fcffff	                           jmp 0x400181f	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x4001b2a	    0x660f1f440000	                    nop word [rax + rax]	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x4001b30	      0xba05000000	                              mov edx, 5	      1276	channel.c	FUNCTION_34	IF_21	IF_27	IF_29	CALL_18
0x4001b35	      0xbe00000000	                              mov esi, 0	      1276	channel.c	FUNCTION_34	IF_21	IF_27	IF_29	CALL_18
0x4001b3a	            0x31ff	                            xor edi, edi	      1276	channel.c	FUNCTION_34	IF_21	IF_27	IF_29	CALL_18
0x4001b3c	      0xe800000000	                          call 0x4001b41	      1276	channel.c	FUNCTION_34	IF_21	IF_27	IF_29	CALL_18
0x4001b41	          0x4889c7	                            mov rdi, rax	      1276	channel.c	FUNCTION_34	IF_21	IF_27	IF_29	CALL_18
0x4001b44	      0xe800000000	                          call 0x4001b49	      1276	channel.c	FUNCTION_34	IF_21	IF_27	IF_29	CALL_18
0x4001b49	          0x8b4d1c	            mov ecx, dword [rbp + 0x1c] 	      1276	channel.c	FUNCTION_34	IF_21	IF_27	IF_29	CALL_18
0x4001b4c	          0x8b5520	            mov edx, dword [rbp + 0x20] 	      1276	channel.c	FUNCTION_34	IF_21	IF_27	IF_29	CALL_18
0x4001b4f	      0xe9c1fdffff	                           jmp 0x4001915	      1276	channel.c	FUNCTION_34	IF_21	IF_27	IF_29	CALL_18
0x4001b54	         0xf1f4000	                         nop dword [rax]	      1276	channel.c	FUNCTION_34	IF_21	IF_27	IF_29	CALL_18
0x4001b58	      0xba05000000	                              mov edx, 5	      1233	channel.c	FUNCTION_34	IF_13	IF_18	IF_20	CALL_10
0x4001b5d	      0xbe00000000	                              mov esi, 0	      1233	channel.c	FUNCTION_34	IF_13	IF_18	IF_20	CALL_10
0x4001b62	            0x31ff	                            xor edi, edi	      1233	channel.c	FUNCTION_34	IF_13	IF_18	IF_20	CALL_10
0x4001b64	      0xe800000000	                          call 0x4001b69	      1233	channel.c	FUNCTION_34	IF_13	IF_18	IF_20	CALL_10
0x4001b69	          0x4889c7	                            mov rdi, rax	      1233	channel.c	FUNCTION_34	IF_13	IF_18	IF_20	CALL_10
0x4001b6c	      0xe800000000	                          call 0x4001b71	      1233	channel.c	FUNCTION_34	IF_13	IF_18	IF_20	CALL_10
0x4001b71	          0x8b4500	                    mov eax, dword [rbp]	      1233	channel.c	FUNCTION_34	IF_13	IF_18	IF_20	CALL_10
0x4001b74	      0xe9a6fcffff	                           jmp 0x400181f	      1233	channel.c	FUNCTION_34	IF_13	IF_18	IF_20	CALL_10
free_unused_jobs_contents	DO,0:IF,1:FOR,1:ELSE,0:SWITCH,0:CALL,2:WHILE,0:functions,0	35
0x4008400	            0x4154	                                push r12	      5360	channel.c	FUNCTION_123
0x4008402	              0x55	                                push rbp	      5360	channel.c	FUNCTION_123
0x4008403	              0x53	                                push rbx	      5360	channel.c	FUNCTION_123
0x4008404	    0x488b1d000000	            mov rbx, qword [0x0400840b] 	      5364	channel.c	FUNCTION_123	FOR_1
0x400840b	          0x4885db	                           test rbx, rbx	      5364	channel.c	FUNCTION_123	FOR_1
0x400840e	            0x744a	                            je 0x400845a	      5364	channel.c	FUNCTION_123	FOR_1
0x4008410	          0x4189f4	                           mov r12d, esi	      5364	channel.c	FUNCTION_123	FOR_1
0x4008413	            0x89fd	                            mov ebp, edi	      5364	channel.c	FUNCTION_123	FOR_1
0x4008415	            0x31f6	                            xor esi, esi	      5364	channel.c	FUNCTION_123	FOR_1
0x4008417	            0xeb0f	                           jmp 0x4008428	      5364	channel.c	FUNCTION_123	FOR_1
0x4008419	     0xf1f80000000	                         nop dword [rax]	      5364	channel.c	FUNCTION_123	FOR_1
0x4008420	          0x488b1b	                    mov rbx, qword [rbx]	      5364	channel.c	FUNCTION_123	FOR_1
0x4008423	          0x4885db	                           test rbx, rbx	      5364	channel.c	FUNCTION_123	FOR_1
0x4008426	            0x742b	                            je 0x4008453	      5364	channel.c	FUNCTION_123	FOR_1
0x4008428	          0x8b435c	            mov eax, dword [rbx + 0x5c] 	      5365	channel.c	FUNCTION_123	FOR_1	IF_1
0x400842b	            0x31e8	                            xor eax, ebp	      5365	channel.c	FUNCTION_123	FOR_1	IF_1
0x400842d	          0x4485e0	                          test eax, r12d	      5365	channel.c	FUNCTION_123	FOR_1	IF_1
0x4008430	            0x74ee	                            je 0x4008420	      5365	channel.c	FUNCTION_123	FOR_1	IF_1
0x4008432	          0x4889df	                            mov rdi, rbx	      5366	channel.c	FUNCTION_123	FOR_1	IF_1	CALL_1
0x4008435	      0xe80688ffff	               call sym.job_still_useful	      5366	channel.c	FUNCTION_123	FOR_1	IF_1	CALL_1
0x400843a	            0x85c0	                           test eax, eax	      5366	channel.c	FUNCTION_123	FOR_1	IF_1	CALL_1
0x400843c	            0x75e2	                           jne 0x4008420	      5366	channel.c	FUNCTION_123	FOR_1	IF_1	CALL_1
0x400843e	          0x4889df	                            mov rdi, rbx	      5370	channel.c	FUNCTION_123	FOR_1	IF_1	CALL_2
0x4008441	      0xe8aacaffff	              call sym.job_free_contents	      5370	channel.c	FUNCTION_123	FOR_1	IF_1	CALL_2
0x4008446	          0x488b1b	                    mov rbx, qword [rbx]	      5364	channel.c	FUNCTION_123	FOR_1
0x4008449	      0xbe01000000	                              mov esi, 1	      5371	channel.c	FUNCTION_123	FOR_1	IF_1
0x400844e	          0x4885db	                           test rbx, rbx	      5364	channel.c	FUNCTION_123	FOR_1
0x4008451	            0x75d5	                           jne 0x4008428	      5364	channel.c	FUNCTION_123	FOR_1
0x4008453	              0x5b	                                 pop rbx	      5374	channel.c	FUNCTION_123
0x4008454	            0x89f0	                            mov eax, esi	      5374	channel.c	FUNCTION_123
0x4008456	              0x5d	                                 pop rbp	      5374	channel.c	FUNCTION_123
0x4008457	            0x415c	                                 pop r12	      5374	channel.c	FUNCTION_123
0x4008459	              0xc3	                                     ret	      5374	channel.c	FUNCTION_123
0x400845a	            0x31f6	                            xor esi, esi	      5361	channel.c	FUNCTION_123
0x400845c	            0xebf5	                           jmp 0x4008453	      5361	channel.c	FUNCTION_123
find_buffer	DO,0:IF,6:FOR,0:ELSE,0:SWITCH,0:CALL,9:WHILE,0:functions,0	83
0x40006e0	            0x4155	                                push r13	      1101	channel.c	ELSE_3	FUNCTION_32
0x40006e2	            0x4154	                                push r12	      1101	channel.c	ELSE_3	FUNCTION_32
0x40006e4	          0x4189f5	                           mov r13d, esi	      1101	channel.c	ELSE_3	FUNCTION_32
0x40006e7	              0x55	                                push rbp	      1101	channel.c	ELSE_3	FUNCTION_32
0x40006e8	              0x53	                                push rbx	      1101	channel.c	ELSE_3	FUNCTION_32
0x40006e9	          0x4189d4	                           mov r12d, edx	      1101	channel.c	ELSE_3	FUNCTION_32
0x40006ec	        0x4883ec08	                              sub rsp, 8	      1101	channel.c	ELSE_3	FUNCTION_32
0x40006f0	          0x4885ff	                           test rdi, rdi	      1105	channel.c	ELSE_3	FUNCTION_32	IF_1
0x40006f3	    0x488b2d000000	            mov rbp, qword [0x040006fa] 	      1103	channel.c	ELSE_3	FUNCTION_32
0x40006fa	            0x740c	                            je 0x4000708	      1105	channel.c	ELSE_3	FUNCTION_32	IF_1
0x40006fc	          0x803f00	                       cmp byte [rdi], 0	      1105	channel.c	ELSE_3	FUNCTION_32	IF_1
0x40006ff	          0x4889fb	                            mov rbx, rdi	      1105	channel.c	ELSE_3	FUNCTION_32	IF_1
0x4000702	     0xf85b8000000	                           jne 0x40007c0	      1105	channel.c	ELSE_3	FUNCTION_32	IF_1
0x4000708	            0x31ff	                            xor edi, edi	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x400070a	            0x31d2	                            xor edx, edx	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x400070c	            0x31f6	                            xor esi, esi	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x400070e	      0xb90a000000	                            mov ecx, 0xa	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x4000713	      0xe800000000	                          call 0x4000718	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x4000718	          0x4885c0	                           test rax, rax	      1115	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_4
0x400071b	          0x4889c3	                            mov rbx, rax	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x400071e	     0xf84dc000000	                            je 0x4000800	      1115	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_4
0x4000724	          0x4889c7	                            mov rdi, rax	      1117	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_4
0x4000727	      0xbe01000000	                              mov esi, 1	      1117	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_4
0x400072c	      0xe800000000	                          call 0x4000731	      1117	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_4
0x4000731	            0x31f6	                            xor esi, esi	      1120	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_5
0x4000733	      0xb904000000	                              mov ecx, 4	      1120	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_5
0x4000738	      0xba00000000	                              mov edx, 0	      1120	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_5
0x400073d	      0xbf00000000	                              mov edi, 0	      1120	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_5
0x4000742	    0x48891d000000	            mov qword [0x04000749], rbx 	      1118	channel.c	ELSE_3	FUNCTION_32	IF_3
0x4000749	      0xe800000000	                          call 0x400074e	      1120	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_5
0x400074e	            0x31f6	                            xor esi, esi	      1121	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_6
0x4000750	      0xbf00000000	                              mov edi, 0	      1121	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_6
0x4000755	      0xb904000000	                              mov ecx, 4	      1121	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_6
0x400075a	      0xba00000000	                              mov edx, 0	      1121	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_6
0x400075f	      0xe800000000	                          call 0x4000764	      1121	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_6
0x4000764	    0x488b3d000000	            mov rdi, qword [0x0400076b] 	      1123	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_5
0x400076b	      0x48837f0800	                  cmp qword [rdi + 8], 0	      1123	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_5
0x4000770	            0x7466	                            je 0x40007d8	      1123	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_5
0x4000772	          0x4585e4	                         test r12d, r12d	      1125	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6
0x4000775	            0x7420	                            je 0x4000797	      1125	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6
0x4000777	          0x4585ed	                         test r13d, r13d	      1126	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6	CALL_8
0x400077a	      0xbe00000000	                              mov esi, 0	      1126	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6	CALL_8
0x400077f	      0xb800000000	                              mov eax, 0	      1126	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6	CALL_8
0x4000784	        0x480f44f0	                          cmove rsi, rax	      1126	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6	CALL_8
0x4000788	      0xba01000000	                              mov edx, 1	      1126	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6	CALL_8
0x400078d	      0xbf01000000	                              mov edi, 1	      1126	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6	CALL_8
0x4000792	      0xe800000000	                          call 0x4000797	      1126	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6	CALL_8
0x4000797	            0x31f6	                            xor esi, esi	      1128	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_9
0x4000799	      0xbf01000000	                              mov edi, 1	      1128	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_9
0x400079e	      0xe800000000	                          call 0x40007a3	      1128	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_9
0x40007a3	    0x48892d000000	            mov qword [0x040007aa], rbp 	      1129	channel.c	ELSE_3	FUNCTION_32	IF_3
0x40007aa	        0x4883c408	                              add rsp, 8	      1133	channel.c	ELSE_3	FUNCTION_32
0x40007ae	          0x4889d8	                            mov rax, rbx	      1129	channel.c	ELSE_3	FUNCTION_32	IF_3
0x40007b1	              0x5b	                                 pop rbx	      1133	channel.c	ELSE_3	FUNCTION_32
0x40007b2	              0x5d	                                 pop rbp	      1133	channel.c	ELSE_3	FUNCTION_32
0x40007b3	            0x415c	                                 pop r12	      1133	channel.c	ELSE_3	FUNCTION_32
0x40007b5	            0x415d	                                 pop r13	      1133	channel.c	ELSE_3	FUNCTION_32
0x40007b7	              0xc3	                                     ret	      1133	channel.c	ELSE_3	FUNCTION_32
0x40007b8	     0xf1f84000000	                   nop dword [rax + rax]	      1133	channel.c	ELSE_3	FUNCTION_32
0x40007c0	      0xe800000000	                          call 0x40007c5	      1107	channel.c	ELSE_3	FUNCTION_32	IF_1	CALL_1
0x40007c5	          0x4885c0	                           test rax, rax	      1108	channel.c	ELSE_3	FUNCTION_32	IF_1	IF_2
0x40007c8	            0x7416	                            je 0x40007e0	      1108	channel.c	ELSE_3	FUNCTION_32	IF_1	IF_2
0x40007ca	        0x4883c408	                              add rsp, 8	      1133	channel.c	ELSE_3	FUNCTION_32
0x40007ce	              0x5b	                                 pop rbx	      1133	channel.c	ELSE_3	FUNCTION_32
0x40007cf	              0x5d	                                 pop rbp	      1133	channel.c	ELSE_3	FUNCTION_32
0x40007d0	            0x415c	                                 pop r12	      1133	channel.c	ELSE_3	FUNCTION_32
0x40007d2	            0x415d	                                 pop r13	      1133	channel.c	ELSE_3	FUNCTION_32
0x40007d4	              0xc3	                                     ret	      1133	channel.c	ELSE_3	FUNCTION_32
0x40007d5	           0xf1f00	                         nop dword [rax]	      1133	channel.c	ELSE_3	FUNCTION_32
0x40007d8	      0xe800000000	                          call 0x40007dd	      1124	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_7
0x40007dd	            0xeb93	                           jmp 0x4000772	      1124	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_7
0x40007df	              0x90	                                     nop	      1124	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_7
0x40007e0	          0x4889df	                            mov rdi, rbx	      1109	channel.c	ELSE_3	FUNCTION_32	IF_1	CALL_2
0x40007e3	      0xe800000000	                          call 0x40007e8	      1109	channel.c	ELSE_3	FUNCTION_32	IF_1	CALL_2
0x40007e8	          0x4885c0	                           test rax, rax	      1111	channel.c	ELSE_3	FUNCTION_32	IF_3
0x40007eb	            0x75dd	                           jne 0x40007ca	      1111	channel.c	ELSE_3	FUNCTION_32	IF_3
0x40007ed	          0x803b00	                       cmp byte [rbx], 0	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x40007f0	     0xf8412ffffff	                            je 0x4000708	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x40007f6	          0x4889df	                            mov rdi, rbx	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x40007f9	      0xe90cffffff	                           jmp 0x400070a	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x40007fe	            0x6690	                                     nop	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x4000800	            0x31c0	                            xor eax, eax	      1116	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_4
0x4000802	            0xebc6	                           jmp 0x40007ca	      1116	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_4
channel_close	DO,0:IF,7:FOR,2:ELSE,0:SWITCH,0:CALL,17:WHILE,1:functions,0	148
0x4004b90	            0x4155	                                push r13	      2868	channel.c	FUNCTION_68
0x4004b92	            0x4154	                                push r12	      2868	channel.c	FUNCTION_68
0x4004b94	          0x4189f5	                           mov r13d, esi	      2868	channel.c	FUNCTION_68
0x4004b97	              0x55	                                push rbp	      2868	channel.c	FUNCTION_68
0x4004b98	              0x53	                                push rbx	      2868	channel.c	FUNCTION_68
0x4004b99	          0x4889fb	                            mov rbx, rdi	      2868	channel.c	FUNCTION_68
0x4004b9c	        0x4c8d631c	                   lea r12, [rbx + 0x1c]	      2868	channel.c	FUNCTION_68
0x4004ba0	      0xbe00000000	                              mov esi, 0	      2869	channel.c	FUNCTION_68	CALL_1
0x4004ba5	            0x31ed	                            xor ebp, ebp	       633	channel.c	FUNCTION_26	FOR_1
0x4004ba7	        0x4883ec48	                           sub rsp, 0x48	      2868	channel.c	FUNCTION_68
0x4004bab	    0x64488b042528	                mov rax, qword fs:[0x28]	      2868	channel.c	FUNCTION_68
0x4004bb4	      0x4889442438	             mov qword [rsp + 0x38], rax	      2868	channel.c	FUNCTION_68
0x4004bb9	            0x31c0	                            xor eax, eax	      2868	channel.c	FUNCTION_68
0x4004bbb	      0xe800000000	                          call 0x4004bc0	      2869	channel.c	FUNCTION_68	CALL_1
0x4004bc0	        0x418b0c24	                    mov ecx, dword [r12]	       614	channel.c	FUNCTION_25	IF_2
0x4004bc4	            0x85c9	                           test ecx, ecx	       614	channel.c	FUNCTION_25	IF_2
0x4004bc6	     0xf8524020000	                           jne 0x4004df0	       614	channel.c	FUNCTION_25	IF_2
0x4004bcc	          0x83c501	                              add ebp, 1	       633	channel.c	FUNCTION_26	FOR_1
0x4004bcf	    0x4981c4100100	                          add r12, 0x110	       633	channel.c	FUNCTION_26	FOR_1
0x4004bd6	          0x83fd03	                              cmp ebp, 3	       633	channel.c	FUNCTION_26	FOR_1
0x4004bd9	            0x75e5	                           jne 0x4004bc0	       633	channel.c	FUNCTION_26	FOR_1
0x4004bdb	          0x8b7b18	            mov edi, dword [rbx + 0x18] 	       988	channel.c	FUNCTION_29	IF_1
0x4004bde	          0x83ffff	             cmp edi, 0xffffffffffffffff	       988	channel.c	FUNCTION_29	IF_1
0x4004be1	            0x7413	                            je 0x4004bf6	       988	channel.c	FUNCTION_29	IF_1
0x4004be3	      0xe800000000	                          call 0x4004be8	       991	channel.c	FUNCTION_29	IF_1	IF_2
0x4004be8	    0x83a36c040000	     and dword [rbx + 0x46c], 0xfffffffe	      1010	channel.c	FUNCTION_29	IF_1
0x4004bef	    0xc74318ffffff	     mov dword [rbx + 0x18], 0xffffffff 	      1007	channel.c	FUNCTION_29	IF_1
0x4004bf6	      0xbe03000000	                              mov esi, 3	      2876	channel.c	FUNCTION_68	CALL_4
0x4004bfb	          0x4889df	                            mov rdi, rbx	      2876	channel.c	FUNCTION_68	CALL_4
0x4004bfe	      0xe8adb9ffff	                  call sym.ch_close_part	      2876	channel.c	FUNCTION_68	CALL_4
0x4004c03	      0xbe01000000	                              mov esi, 1	      2877	channel.c	FUNCTION_68	CALL_5
0x4004c08	          0x4889df	                            mov rdi, rbx	      2877	channel.c	FUNCTION_68	CALL_5
0x4004c0b	      0xe8a0b9ffff	                  call sym.ch_close_part	      2877	channel.c	FUNCTION_68	CALL_5
0x4004c10	      0xbe02000000	                              mov esi, 2	      2878	channel.c	FUNCTION_68	CALL_6
0x4004c15	          0x4889df	                            mov rdi, rbx	      2878	channel.c	FUNCTION_68	CALL_6
0x4004c18	      0xe893b9ffff	                  call sym.ch_close_part	      2878	channel.c	FUNCTION_68	CALL_6
0x4004c1d	          0x4585ed	                         test r13d, r13d	      2880	channel.c	FUNCTION_68	IF_1
0x4004c20	     0xf8466010000	                            je 0x4004d8c	      2880	channel.c	FUNCTION_68	IF_1
0x4004c26	    0x488b93900400	           mov rdx, qword [rbx + 0x490] 	      2885	channel.c	FUNCTION_68	IF_1	IF_2
0x4004c2d	          0x4885d2	                           test rdx, rdx	      2885	channel.c	FUNCTION_68	IF_1	IF_2
0x4004c30	            0x7416	                            je 0x4004c48	      2885	channel.c	FUNCTION_68	IF_1	IF_2
0x4004c32	      0xbe00000000	                              mov esi, 0	      2886	channel.c	FUNCTION_68	IF_1	IF_2	CALL_7
0x4004c37	          0x4889df	                            mov rdi, rbx	      2886	channel.c	FUNCTION_68	IF_1	IF_2	CALL_7
0x4004c3a	            0x31c0	                            xor eax, eax	      2886	channel.c	FUNCTION_68	IF_1	IF_2	CALL_7
0x4004c3c	      0xe800000000	                          call 0x4004c41	      2886	channel.c	FUNCTION_68	IF_1	IF_2	CALL_7
0x4004c41	    0x488b93900400	           mov rdx, qword [rbx + 0x490] 	      2886	channel.c	FUNCTION_68	IF_1	IF_2	CALL_7
0x4004c48	    0x4c8dabf80000	                   lea r13, [rbx + 0xf8]	      2886	channel.c	FUNCTION_68	IF_1	IF_2	CALL_7
0x4004c4f	          0x4531e4	                          xor r12d, r12d	       633	channel.c	FUNCTION_26	FOR_1
0x4004c52	    0x660f1f440000	                    nop word [rax + rax]	       633	channel.c	FUNCTION_26	FOR_1
0x4004c58	          0x4885d2	                           test rdx, rdx	      2890	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4004c5b	          0x4489e5	                           mov ebp, r12d	      2890	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4004c5e	     0xf845c010000	                            je 0x4004dc0	      2890	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4004c64	    0x8383b4040000	              add dword [rbx + 0x4b4], 1	      2895	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4004c6b	       0xf1f440000	                   nop dword [rax + rax]	      2895	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4004c70	            0x89ee	                            mov esi, ebp	      2899	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	WHILE_1	CALL_9
0x4004c72	          0x4889df	                            mov rdi, rbx	      2899	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	WHILE_1	CALL_9
0x4004c75	      0xe8b6efffff	            call sym.may_invoke_callback	      2899	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	WHILE_1	CALL_9
0x4004c7a	            0x85c0	                           test eax, eax	      2899	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	WHILE_1	CALL_9
0x4004c7c	            0x75f2	                           jne 0x4004c70	      2899	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	WHILE_1	CALL_9
0x4004c7e	    0x83abb4040000	              sub dword [rbx + 0x4b4], 1	      2901	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4004c85	    0x488b93900400	           mov rdx, qword [rbx + 0x490] 	      2901	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4004c8c	        0x4983c401	                              add r12, 1	      2901	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4004c90	    0x4981c5100100	                          add r13, 0x110	      2901	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4004c97	        0x4983fc03	                              cmp r12, 3	      2888	channel.c	FUNCTION_68	IF_1	FOR_1
0x4004c9b	            0x75bb	                           jne 0x4004c58	      2888	channel.c	FUNCTION_68	IF_1	FOR_1
0x4004c9d	          0x4885d2	                           test rdx, rdx	      2905	channel.c	FUNCTION_68	IF_1	IF_5
0x4004ca0	     0xf84e6000000	                            je 0x4004d8c	      2905	channel.c	FUNCTION_68	IF_1	IF_5
0x4004ca6	    0x8383b4040000	              add dword [rbx + 0x4b4], 1	      2913	channel.c	FUNCTION_68	IF_1	IF_5
0x4004cad	      0xbe00000000	                              mov esi, 0	      2914	channel.c	FUNCTION_68	IF_1	IF_5	CALL_10
0x4004cb2	            0x31c0	                            xor eax, eax	      2914	channel.c	FUNCTION_68	IF_1	IF_5	CALL_10
0x4004cb4	          0x4889df	                            mov rdi, rbx	      2914	channel.c	FUNCTION_68	IF_1	IF_5	CALL_10
0x4004cb7	      0xe800000000	                          call 0x4004cbc	      2914	channel.c	FUNCTION_68	IF_1	IF_5	CALL_10
0x4004cbc	    0x488bab900400	           mov rbp, qword [rbx + 0x490] 	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4004cc3	    0xc74424200a00	             mov dword [rsp + 0x20], 0xa	      2916	channel.c	FUNCTION_68	IF_1	IF_5
0x4004ccb	      0x48895c2428	             mov qword [rsp + 0x28], rbx	      2917	channel.c	FUNCTION_68	IF_1	IF_5
0x4004cd0	          0x4889ef	                            mov rdi, rbp	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4004cd3	      0xe800000000	                          call 0x4004cd8	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4004cd8	            0x6a00	                                  push 0	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4004cda	    0xffb398040000	                push qword [rbx + 0x498]	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4004ce0	          0x4531c9	                            xor r9d, r9d	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4004ce3	            0x6a01	                                  push 1	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4004ce5	      0xb901000000	                              mov ecx, 1	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4004cea	            0x89c6	                            mov esi, eax	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4004cec	          0x4889ef	                            mov rdi, rbp	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4004cef	      0x488d542424	                   lea rdx, [rsp + 0x24]	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4004cf4	              0x52	                                push rdx	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4004cf5	            0x6a00	                                  push 0	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4004cf7	            0x6a00	                                  push 0	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4004cf9	      0x488d542440	                   lea rdx, [rsp + 0x40]	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4004cfe	      0x4c8d442450	                    lea r8, [rsp + 0x50]	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4004d03	      0xe800000000	                          call 0x4004d08	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4004d08	        0x4883c430	                           add rsp, 0x30	      2921	channel.c	FUNCTION_68	IF_1	IF_5	CALL_13
0x4004d0c	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2921	channel.c	FUNCTION_68	IF_1	IF_5	CALL_13
0x4004d11	      0xe800000000	                          call 0x4004d16	      2921	channel.c	FUNCTION_68	IF_1	IF_5	CALL_13
0x4004d16	    0x488bb3980400	           mov rsi, qword [rbx + 0x498] 	      2925	channel.c	FUNCTION_68	IF_1	IF_5	CALL_14
0x4004d1d	    0x488bbb900400	           mov rdi, qword [rbx + 0x490] 	      2925	channel.c	FUNCTION_68	IF_1	IF_5	CALL_14
0x4004d24	    0xc70500000000	               mov dword [0x04004d2e], 1	      2922	channel.c	FUNCTION_68	IF_1	IF_5
0x4004d2e	      0xe800000000	                          call 0x4004d33	      2925	channel.c	FUNCTION_68	IF_1	IF_5	CALL_14
0x4004d33	    0x8b1500000000	            mov edx, dword [0x04004d39] 	      2929	channel.c	FUNCTION_68	IF_1	IF_5	IF_6
0x4004d39	    0x48c783900400	              mov qword [rbx + 0x490], 0	      2926	channel.c	FUNCTION_68	IF_1	IF_5
0x4004d44	    0x48c783980400	              mov qword [rbx + 0x498], 0	      2927	channel.c	FUNCTION_68	IF_1	IF_5
0x4004d4f	            0x85d2	                           test edx, edx	      2929	channel.c	FUNCTION_68	IF_1	IF_5	IF_6
0x4004d51	     0xf85a8000000	                           jne 0x4004dff	      2929	channel.c	FUNCTION_68	IF_1	IF_5	IF_6
0x4004d57	    0x8b83a0040000	           mov eax, dword [rbx + 0x4a0] 	      2935	channel.c	FUNCTION_68	IF_1	IF_5	IF_7
0x4004d5d	            0x85c0	                           test eax, eax	      2935	channel.c	FUNCTION_68	IF_1	IF_5	IF_7
0x4004d5f	            0x7524	                           jne 0x4004d85	      2935	channel.c	FUNCTION_68	IF_1	IF_5	IF_7
0x4004d61	            0x31f6	                            xor esi, esi	      2938	channel.c	FUNCTION_68	IF_1	IF_5	IF_7	FOR_2
0x4004d63	          0x4889df	                            mov rdi, rbx	      2938	channel.c	FUNCTION_68	IF_1	IF_5	IF_7	FOR_2
0x4004d66	      0xe8a5d6ffff	                  call sym.drop_messages	      2938	channel.c	FUNCTION_68	IF_1	IF_5	IF_7	FOR_2
0x4004d6b	      0xbe01000000	                              mov esi, 1	      2938	channel.c	FUNCTION_68	IF_1	IF_5	IF_7	FOR_2
0x4004d70	          0x4889df	                            mov rdi, rbx	      2938	channel.c	FUNCTION_68	IF_1	IF_5	IF_7	FOR_2
0x4004d73	      0xe898d6ffff	                  call sym.drop_messages	      2938	channel.c	FUNCTION_68	IF_1	IF_5	IF_7	FOR_2
0x4004d78	      0xbe02000000	                              mov esi, 2	      2938	channel.c	FUNCTION_68	IF_1	IF_5	IF_7	FOR_2
0x4004d7d	          0x4889df	                            mov rdi, rbx	      2938	channel.c	FUNCTION_68	IF_1	IF_5	IF_7	FOR_2
0x4004d80	      0xe88bd6ffff	                  call sym.drop_messages	      2938	channel.c	FUNCTION_68	IF_1	IF_5	IF_7	FOR_2
0x4004d85	    0x83abb4040000	              sub dword [rbx + 0x4b4], 1	      2940	channel.c	FUNCTION_68	IF_1	IF_5
0x4004d8c	    0x48c783780400	              mov qword [rbx + 0x478], 0	      2944	channel.c	FUNCTION_68
0x4004d97	          0x4889df	                            mov rdi, rbx	      2947	channel.c	FUNCTION_68	CALL_17
0x4004d9a	      0xe800000000	                          call 0x4004d9f	      2947	channel.c	FUNCTION_68	CALL_17
0x4004d9f	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2949	channel.c	FUNCTION_68
0x4004da4	    0x644833042528	                xor rax, qword fs:[0x28]	      2949	channel.c	FUNCTION_68
0x4004dad	            0x7569	                           jne 0x4004e18	      2949	channel.c	FUNCTION_68
0x4004daf	        0x4883c448	                           add rsp, 0x48	      2949	channel.c	FUNCTION_68
0x4004db3	              0x5b	                                 pop rbx	      2949	channel.c	FUNCTION_68
0x4004db4	              0x5d	                                 pop rbp	      2949	channel.c	FUNCTION_68
0x4004db5	            0x415c	                                 pop r12	      2949	channel.c	FUNCTION_68
0x4004db7	            0x415d	                                 pop r13	      2949	channel.c	FUNCTION_68
0x4004db9	              0xc3	                                     ret	      2949	channel.c	FUNCTION_68
0x4004dba	    0x660f1f440000	                    nop word [rax + rax]	      2949	channel.c	FUNCTION_68
0x4004dc0	      0x49837d0000	                      cmp qword [r13], 0	      2891	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4004dc5	     0xf84c1feffff	                            je 0x4004c8c	      2891	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4004dcb	    0x8383b4040000	              add dword [rbx + 0x4b4], 1	      2895	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4004dd2	    0x4a8b14e50000	                  mov rdx, qword [r12*8]	      2897	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x4004dda	      0xbe00000000	                              mov esi, 0	      2897	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x4004ddf	          0x4889df	                            mov rdi, rbx	      2897	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x4004de2	            0x31c0	                            xor eax, eax	      2897	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x4004de4	      0xe800000000	                          call 0x4004de9	      2897	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x4004de9	      0xe982feffff	                           jmp 0x4004c70	      2897	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x4004dee	            0x6690	                                     nop	      2897	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x4004df0	            0x89ee	                            mov esi, ebp	      2897	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x4004df2	          0x4889df	                            mov rdi, rbx	      2897	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x4004df5	      0xe8f6c1ffff	call sym.channel_gui_unregister_one.part.10	      2897	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x4004dfa	      0xe9cdfdffff	                           jmp 0x4004bcc	      2897	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x4004dff	      0xbf01000000	                              mov edi, 1	      2932	channel.c	FUNCTION_68	IF_1	IF_5	IF_6	CALL_15
0x4004e04	    0xc70500000000	               mov dword [0x04004e0e], 0	      2931	channel.c	FUNCTION_68	IF_1	IF_5	IF_6
0x4004e0e	      0xe800000000	                          call 0x4004e13	      2932	channel.c	FUNCTION_68	IF_1	IF_5	IF_6	CALL_15
0x4004e13	      0xe93fffffff	                           jmp 0x4004d57	      2932	channel.c	FUNCTION_68	IF_1	IF_5	IF_6	CALL_15
0x4004e18	      0xe800000000	                          call 0x4004e1d	      2949	channel.c	FUNCTION_68
channel_write_new_lines	DO,0:IF,7:FOR,2:ELSE,1:SWITCH,0:CALL,5:WHILE,0:functions,0	81
0x40033e0	            0x4155	                                push r13	      1542	channel.c	FUNCTION_42
0x40033e2	            0x4154	                                push r12	      1542	channel.c	FUNCTION_42
0x40033e4	            0x31c0	                            xor eax, eax	      1542	channel.c	FUNCTION_42
0x40033e6	              0x55	                                push rbp	      1542	channel.c	FUNCTION_42
0x40033e7	              0x53	                                push rbx	      1542	channel.c	FUNCTION_42
0x40033e8	          0x4989fc	                            mov r12, rdi	      1542	channel.c	FUNCTION_42
0x40033eb	        0x4883ec08	                              sub rsp, 8	      1542	channel.c	FUNCTION_42
0x40033ef	    0x488b1d000000	            mov rbx, qword [0x040033f6] 	      1548	channel.c	FUNCTION_42	FOR_1
0x40033f6	          0x4885db	                           test rbx, rbx	      1548	channel.c	FUNCTION_42	FOR_1
0x40033f9	            0x7511	                           jne 0x400340c	      1548	channel.c	FUNCTION_42	FOR_1
0x40033fb	      0xe9ac000000	                           jmp 0x40034ac	      1548	channel.c	FUNCTION_42	FOR_1
0x4003400	          0x488b1b	                    mov rbx, qword [rbx]	      1548	channel.c	FUNCTION_42	FOR_1
0x4003403	          0x4885db	                           test rbx, rbx	      1548	channel.c	FUNCTION_42	FOR_1
0x4003406	     0xf849c000000	                            je 0x40034a8	      1548	channel.c	FUNCTION_42	FOR_1
0x400340c	    0x4c39a3280400	           cmp qword [rbx + 0x428], r12 	      1554	channel.c	FUNCTION_42	FOR_1	IF_1
0x4003413	            0x75eb	                           jne 0x4003400	      1554	channel.c	FUNCTION_42	FOR_1	IF_1
0x4003415	    0x8b9340040000	           mov edx, dword [rbx + 0x440] 	      1554	channel.c	FUNCTION_42	FOR_1	IF_1
0x400341b	            0x85d2	                           test edx, edx	      1554	channel.c	FUNCTION_42	FOR_1	IF_1
0x400341d	            0x74e1	                            je 0x4003400	      1554	channel.c	FUNCTION_42	FOR_1	IF_1
0x400341f	    0x83bb48030000	cmp dword [rbx + 0x348], 0xffffffffffffffff	      1556	channel.c	FUNCTION_42	FOR_1	IF_1	IF_2
0x4003426	            0x74d8	                            je 0x4003400	      1556	channel.c	FUNCTION_42	FOR_1	IF_1	IF_2
0x4003428	    0x488bab500400	           mov rbp, qword [rbx + 0x450] 	      1559	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x400342f	        0x493b2c24	                    cmp rbp, qword [r12]	      1559	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x4003433	            0x7d56	                           jge 0x400348b	      1559	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x4003435	          0x4531ed	                          xor r13d, r13d	      1559	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x4003438	            0xeb22	                           jmp 0x400345c	      1559	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x400343a	    0x660f1f440000	                    nop word [rax + rax]	      1559	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x4003440	          0x4889ee	                            mov rsi, rbp	      1564	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2	CALL_2
0x4003443	          0x4889da	                            mov rdx, rbx	      1564	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2	CALL_2
0x4003446	          0x4c89e7	                            mov rdi, r12	      1564	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2	CALL_2
0x4003449	      0xe812fdffff	                 call sym.write_buf_line	      1564	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2	CALL_2
0x400344e	        0x4183c501	                             add r13d, 1	      1565	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x4003452	        0x4883c501	                              add rbp, 1	      1560	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x4003456	        0x49392c24	                    cmp qword [r12], rbp	      1559	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x400345a	            0x7e0c	                           jle 0x4003468	      1559	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x400345c	          0x4889df	                            mov rdi, rbx	      1562	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2	IF_3	CALL_1
0x400345f	      0xe85cddffff	             call sym.can_write_buf_line	      1562	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2	IF_3	CALL_1
0x4003464	            0x85c0	                           test eax, eax	      1562	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2	IF_3	CALL_1
0x4003466	            0x75d8	                           jne 0x4003440	      1562	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2	IF_3	CALL_1
0x4003468	        0x4183fd01	                             cmp r13d, 1	      1568	channel.c	FUNCTION_42	FOR_1	IF_1	IF_4
0x400346c	            0x747a	                            je 0x40034e8	      1568	channel.c	FUNCTION_42	FOR_1	IF_1	IF_4
0x400346e	            0x7e12	                           jle 0x4003482	      1570	channel.c	FUNCTION_42	FOR_1	IF_1	ELSE_1	IF_5
0x4003470	          0x4489ea	                           mov edx, r13d	      1571	channel.c	FUNCTION_42	FOR_1	IF_1	ELSE_1	IF_5
0x4003473	      0xbe00000000	                              mov esi, 0	      1571	channel.c	FUNCTION_42	FOR_1	IF_1	ELSE_1	IF_5
0x4003478	          0x4889df	                            mov rdi, rbx	      1571	channel.c	FUNCTION_42	FOR_1	IF_1	ELSE_1	IF_5
0x400347b	            0x31c0	                            xor eax, eax	      1571	channel.c	FUNCTION_42	FOR_1	IF_1	ELSE_1	IF_5
0x400347d	      0xe800000000	                          call 0x4003482	      1571	channel.c	FUNCTION_42	FOR_1	IF_1	ELSE_1	IF_5
0x4003482	        0x498b1424	                    mov rdx, qword [r12]	      1571	channel.c	FUNCTION_42	FOR_1	IF_1	ELSE_1	IF_5
0x4003486	          0x4839d5	                            cmp rbp, rdx	      1572	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6
0x4003489	            0x7c3d	                            jl 0x40034c8	      1572	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6
0x400348b	    0x4889ab500400	            mov qword [rbx + 0x450], rbp	      1576	channel.c	FUNCTION_42	FOR_1	IF_1
0x4003492	      0xb801000000	                              mov eax, 1	      1558	channel.c	FUNCTION_42	FOR_1	IF_1
0x4003497	          0x488b1b	                    mov rbx, qword [rbx]	      1548	channel.c	FUNCTION_42	FOR_1
0x400349a	          0x4885db	                           test rbx, rbx	      1548	channel.c	FUNCTION_42	FOR_1
0x400349d	     0xf8569ffffff	                           jne 0x400340c	      1548	channel.c	FUNCTION_42	FOR_1
0x40034a3	       0xf1f440000	                   nop dword [rax + rax]	      1548	channel.c	FUNCTION_42	FOR_1
0x40034a8	            0x85c0	                           test eax, eax	      1579	channel.c	FUNCTION_42	IF_7
0x40034aa	            0x750c	                           jne 0x40034b8	      1579	channel.c	FUNCTION_42	IF_7
0x40034ac	    0x41c78424341c	            mov dword [r12 + 0x1c34], 0 	      1580	channel.c	FUNCTION_42	IF_7
0x40034b8	        0x4883c408	                              add rsp, 8	      1581	channel.c	FUNCTION_42
0x40034bc	              0x5b	                                 pop rbx	      1581	channel.c	FUNCTION_42
0x40034bd	              0x5d	                                 pop rbp	      1581	channel.c	FUNCTION_42
0x40034be	            0x415c	                                 pop r12	      1581	channel.c	FUNCTION_42
0x40034c0	            0x415d	                                 pop r13	      1581	channel.c	FUNCTION_42
0x40034c2	              0xc3	                                     ret	      1581	channel.c	FUNCTION_42
0x40034c3	       0xf1f440000	                   nop dword [rax + rax]	      1581	channel.c	FUNCTION_42
0x40034c8	            0x31c0	                            xor eax, eax	      1573	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6	CALL_5
0x40034ca	          0x4829ea	                            sub rdx, rbp	      1573	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6	CALL_5
0x40034cd	      0xbe00000000	                              mov esi, 0	      1573	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6	CALL_5
0x40034d2	          0x4889df	                            mov rdi, rbx	      1573	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6	CALL_5
0x40034d5	      0xe800000000	                          call 0x40034da	      1573	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6	CALL_5
0x40034da	    0x4889ab500400	            mov qword [rbx + 0x450], rbp	      1576	channel.c	FUNCTION_42	FOR_1	IF_1
0x40034e1	      0xb801000000	                              mov eax, 1	      1558	channel.c	FUNCTION_42	FOR_1	IF_1
0x40034e6	            0xebaf	                           jmp 0x4003497	      1558	channel.c	FUNCTION_42	FOR_1	IF_1
0x40034e8	          0x8d55ff	                      lea edx, [rbp - 1]	      1569	channel.c	FUNCTION_42	FOR_1	IF_1	CALL_3
0x40034eb	      0xbe00000000	                              mov esi, 0	      1569	channel.c	FUNCTION_42	FOR_1	IF_1	CALL_3
0x40034f0	          0x4889df	                            mov rdi, rbx	      1569	channel.c	FUNCTION_42	FOR_1	IF_1	CALL_3
0x40034f3	            0x31c0	                            xor eax, eax	      1569	channel.c	FUNCTION_42	FOR_1	IF_1	CALL_3
0x40034f5	      0xe800000000	                          call 0x40034fa	      1569	channel.c	FUNCTION_42	FOR_1	IF_1	CALL_3
0x40034fa	        0x498b1424	                    mov rdx, qword [r12]	      1569	channel.c	FUNCTION_42	FOR_1	IF_1	CALL_3
0x40034fe	            0xeb86	                           jmp 0x4003486	      1569	channel.c	FUNCTION_42	FOR_1	IF_1	CALL_3
channel_read_block	DO,0:IF,11:FOR,1:ELSE,3:SWITCH,0:CALL,16:WHILE,1:functions,0	182
0x40038f0	            0x89f0	                            mov eax, esi	      3358	channel.c	FUNCTION_80
0x40038f2	            0x4157	                                push r15	      3358	channel.c	FUNCTION_80
0x40038f4	            0x4156	                                push r14	      3358	channel.c	FUNCTION_80
0x40038f6	            0x4155	                                push r13	      3358	channel.c	FUNCTION_80
0x40038f8	            0x4154	                                push r12	      3358	channel.c	FUNCTION_80
0x40038fa	          0x4989c4	                            mov r12, rax	      3361	channel.c	FUNCTION_80
0x40038fd	        0x49c1e404	                              shl r12, 4	      3361	channel.c	FUNCTION_80
0x4003901	          0x4989c5	                            mov r13, rax	      3358	channel.c	FUNCTION_80
0x4003904	        0x48c1e008	                              shl rax, 8	      3361	channel.c	FUNCTION_80
0x4003908	              0x55	                                push rbp	      3358	channel.c	FUNCTION_80
0x4003909	          0x4901c4	                            add r12, rax	      3361	channel.c	FUNCTION_80
0x400390c	              0x53	                                push rbx	      3358	channel.c	FUNCTION_80
0x400390d	          0x4901fc	                            add r12, rdi	      3361	channel.c	FUNCTION_80
0x4003910	            0x89d6	                            mov esi, edx	      3358	channel.c	FUNCTION_80
0x4003912	      0xb800000000	                              mov eax, 0	      3366	channel.c	FUNCTION_80	CALL_1
0x4003917	        0x4883ec18	                           sub rsp, 0x18	      3358	channel.c	FUNCTION_80
0x400391b	      0x418b5c2420	            mov ebx, dword [r12 + 0x20] 	      3361	channel.c	FUNCTION_80
0x4003920	          0x4889fd	                            mov rbp, rdi	      3358	channel.c	FUNCTION_80
0x4003923	        0x89542408	                mov dword [rsp + 8], edx	      3358	channel.c	FUNCTION_80
0x4003927	      0xba00000000	                              mov edx, 0	      3366	channel.c	FUNCTION_80	CALL_1
0x400392c	        0x894c240c	              mov dword [rsp + 0xc], ecx	      3358	channel.c	FUNCTION_80
0x4003930	            0x89f1	                            mov ecx, esi	      3366	channel.c	FUNCTION_80	CALL_1
0x4003932	      0xbe00000000	                              mov esi, 0	      3366	channel.c	FUNCTION_80	CALL_1
0x4003937	      0x458b742418	           mov r14d, dword [r12 + 0x18] 	      3362	channel.c	FUNCTION_80
0x400393c	          0x83fb01	                              cmp ebx, 1	      3366	channel.c	FUNCTION_80	CALL_1
0x400393f	        0x480f45d0	                         cmovne rdx, rax	      3366	channel.c	FUNCTION_80	CALL_1
0x4003943	            0x31c0	                            xor eax, eax	      3366	channel.c	FUNCTION_80	CALL_1
0x4003945	      0xe800000000	                          call 0x400394a	      3366	channel.c	FUNCTION_80	CALL_1
0x400394a	      0x4d8b7c2440	            mov r15, qword [r12 + 0x40] 	      1615	channel.c	FUNCTION_44
0x400394f	          0x4d85ff	                           test r15, r15	      3372	channel.c	FUNCTION_80	WHILE_1	IF_1
0x4003952	     0xf84a5000000	                            je 0x40039fd	      3372	channel.c	FUNCTION_80	WHILE_1	IF_1
0x4003958	          0x83fb01	                              cmp ebx, 1	      3374	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_2
0x400395b	     0xf84e3010000	                            je 0x4003b44	      3374	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_2
0x4003961	            0x85db	                           test ebx, ebx	      3374	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_2
0x4003963	            0x7536	                           jne 0x400399b	      3374	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_2
0x4003965	        0x498b7708	                mov rsi, qword [r15 + 8]	      1629	channel.c	FUNCTION_45	FOR_1
0x4003969	          0x498b3f	                    mov rdi, qword [r15]	      1626	channel.c	FUNCTION_45
0x400396c	          0x4885f6	                           test rsi, rsi	      1629	channel.c	FUNCTION_45	FOR_1
0x400396f	            0x742a	                            je 0x400399b	      1629	channel.c	FUNCTION_45	FOR_1
0x4003971	          0x803f0a	                     cmp byte [rdi], 0xa	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4003974	     0xf84a6000000	                            je 0x4003a20	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x400397a	        0x488d4701	                      lea rax, [rdi + 1]	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x400397e	        0x488d1437	                    lea rdx, [rdi + rsi]	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4003982	            0xeb12	                           jmp 0x4003996	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4003984	         0xf1f4000	                         nop dword [rax]	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4003988	        0x4883c001	                              add rax, 1	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x400398c	        0x8078ff0a	                 cmp byte [rax - 1], 0xa	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4003990	     0xf848a000000	                            je 0x4003a20	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4003996	          0x4839d0	                            cmp rax, rdx	      1629	channel.c	FUNCTION_45	FOR_1
0x4003999	            0x75ed	                           jne 0x4003988	      1629	channel.c	FUNCTION_45	FOR_1
0x400399b	            0x31d2	                            xor edx, edx	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x400399d	            0x85db	                           test ebx, ebx	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x400399f	          0x4489ee	                           mov esi, r13d	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x40039a2	           0xf94c2	                                 sete dl	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x40039a5	          0x4889ef	                            mov rdi, rbp	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x40039a8	      0xe800000000	                          call 0x40039ad	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x40039ad	          0x83f801	                              cmp eax, 1	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x40039b0	            0x7498	                            je 0x400394a	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x40039b2	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      3382	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_4
0x40039b6	            0x85c0	                           test eax, eax	      3382	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_4
0x40039b8	     0xf8563010000	                           jne 0x4003b21	      3382	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_4
0x40039be	        0x4183feff	            cmp r14d, 0xffffffffffffffff	      3382	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_4
0x40039c2	     0xf8459010000	                            je 0x4003b21	      3382	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_4
0x40039c8	        0x8b542408	                mov edx, dword [rsp + 8]	      3389	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_5
0x40039cc	          0x4489f6	                           mov esi, r14d	      3389	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_5
0x40039cf	          0x4889ef	                            mov rdi, rbp	      3389	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_5
0x40039d2	      0xe8b9fbffff	                   call sym.channel_wait	      3389	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_5
0x40039d7	            0x85c0	                           test eax, eax	      3389	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_5
0x40039d9	     0xf852c010000	                           jne 0x4003b0b	      3389	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_5
0x40039df	      0xba00000000	                              mov edx, 0	      3394	channel.c	FUNCTION_80	WHILE_1	CALL_7
0x40039e4	          0x4489ee	                           mov esi, r13d	      3394	channel.c	FUNCTION_80	WHILE_1	CALL_7
0x40039e7	          0x4889ef	                            mov rdi, rbp	      3394	channel.c	FUNCTION_80	WHILE_1	CALL_7
0x40039ea	      0xe821fdffff	                   call sym.channel_read	      3394	channel.c	FUNCTION_80	WHILE_1	CALL_7
0x40039ef	      0x4d8b7c2440	            mov r15, qword [r12 + 0x40] 	      1615	channel.c	FUNCTION_44
0x40039f4	          0x4d85ff	                           test r15, r15	      3372	channel.c	FUNCTION_80	WHILE_1	IF_1
0x40039f7	     0xf855bffffff	                           jne 0x4003958	      3372	channel.c	FUNCTION_80	WHILE_1	IF_1
0x40039fd	        0x4183feff	            cmp r14d, 0xffffffffffffffff	      3387	channel.c	FUNCTION_80	WHILE_1	IF_5
0x4003a01	            0x75c5	                           jne 0x40039c8	      3387	channel.c	FUNCTION_80	WHILE_1	IF_5
0x4003a03	            0x31db	                            xor ebx, ebx	      3388	channel.c	FUNCTION_80	WHILE_1	IF_5
0x4003a05	        0x4883c418	                           add rsp, 0x18	      3436	channel.c	FUNCTION_80
0x4003a09	          0x4889d8	                            mov rax, rbx	      3436	channel.c	FUNCTION_80
0x4003a0c	              0x5b	                                 pop rbx	      3436	channel.c	FUNCTION_80
0x4003a0d	              0x5d	                                 pop rbp	      3436	channel.c	FUNCTION_80
0x4003a0e	            0x415c	                                 pop r12	      3436	channel.c	FUNCTION_80
0x4003a10	            0x415d	                                 pop r13	      3436	channel.c	FUNCTION_80
0x4003a12	            0x415e	                                 pop r14	      3436	channel.c	FUNCTION_80
0x4003a14	            0x415f	                                 pop r15	      3436	channel.c	FUNCTION_80
0x4003a16	              0xc3	                                     ret	      3436	channel.c	FUNCTION_80
0x4003a17	    0x660f1f840000	                    nop word [rax + rax]	      3436	channel.c	FUNCTION_80
0x4003a20	          0x803f0a	                     cmp byte [rdi], 0xa	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4003a23	        0x488d4701	                      lea rax, [rdi + 1]	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4003a27	        0x488d1437	                    lea rdx, [rdi + rsi]	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4003a2b	            0x751c	                           jne 0x4003a49	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4003a2d	      0xe93b010000	                           jmp 0x4003b6d	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4003a32	    0x660f1f440000	                    nop word [rax + rax]	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4003a38	          0x4889c3	                            mov rbx, rax	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4003a3b	        0x488d4001	                      lea rax, [rax + 1]	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4003a3f	        0x8078ff0a	                 cmp byte [rax - 1], 0xa	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4003a43	     0xf849d000000	                            je 0x4003ae6	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4003a49	          0x4839c2	                            cmp rdx, rax	      1629	channel.c	FUNCTION_45	FOR_1
0x4003a4c	            0x75ea	                           jne 0x4003a38	      1629	channel.c	FUNCTION_45	FOR_1
0x4003a4e	            0x31db	                            xor ebx, ebx	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4003a50	          0x4839d7	                            cmp rdi, rdx	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4003a53	    0x41b801000000	                              mov r8d, 1	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4003a59	     0xf83d2000000	                           jae 0x4003b31	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4003a5f	          0x4889f8	                            mov rax, rdi	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4003a62	            0xeb0d	                           jmp 0x4003a71	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4003a64	         0xf1f4000	                         nop dword [rax]	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4003a68	          0x4839d0	                            cmp rax, rdx	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4003a6b	     0xf838f000000	                           jae 0x4003b00	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4003a71	          0x803800	                       cmp byte [rax], 0	      3411	channel.c	FUNCTION_80	ELSE_1	FOR_1	IF_8
0x4003a74	            0x7507	                           jne 0x4003a7d	      3411	channel.c	FUNCTION_80	ELSE_1	FOR_1	IF_8
0x4003a76	          0xc6000a	                     mov byte [rax], 0xa	      3412	channel.c	FUNCTION_80	ELSE_1	FOR_1	IF_8
0x4003a79	        0x498b7708	                mov rsi, qword [r15 + 8]	      3412	channel.c	FUNCTION_80	ELSE_1	FOR_1	IF_8
0x4003a7d	        0x4883c001	                              add rax, 1	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4003a81	        0x488d1437	                    lea rdx, [rdi + rsi]	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4003a85	          0x4839d8	                            cmp rax, rbx	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4003a88	            0x72de	                            jb 0x4003a68	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4003a8a	          0x4584c0	                           test r8b, r8b	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4003a8d	            0x75d9	                           jne 0x4003a68	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4003a8f	        0x488d4301	                      lea rax, [rbx + 1]	      3419	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10
0x4003a93	          0x4839d0	                            cmp rax, rdx	      3419	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10
0x4003a96	     0xf84bb000000	                            je 0x4003b57	      3419	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10
0x4003a9c	          0x4829fb	                            sub rbx, rdi	      3429	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_12
0x4003a9f	            0x89de	                            mov esi, ebx	      3429	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_12
0x4003aa1	      0xe800000000	                          call 0x4003aa6	      3429	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_12
0x4003aa6	          0x8d5301	                      lea edx, [rbx + 1]	      3430	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_13
0x4003aa9	          0x4489ee	                           mov esi, r13d	      3430	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_13
0x4003aac	          0x4889ef	                            mov rdi, rbp	      3430	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_13
0x4003aaf	          0x4989c4	                            mov r12, rax	      3429	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_12
0x4003ab2	      0xe800000000	                          call 0x4003ab7	      3430	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_13
0x4003ab7	    0x48833d000000	               cmp qword [0x04003abf], 0	      3433	channel.c	FUNCTION_80	IF_11	CALL_14
0x4003abf	          0x4c89e3	                            mov rbx, r12	      3433	channel.c	FUNCTION_80	IF_11	CALL_14
0x4003ac2	     0xf843dffffff	                            je 0x4003a05	      3433	channel.c	FUNCTION_80	IF_11	CALL_14
0x4003ac8	          0x4c89e7	                            mov rdi, r12	      3434	channel.c	FUNCTION_80	CALL_16
0x4003acb	      0xe800000000	                          call 0x4003ad0	      3434	channel.c	FUNCTION_80	CALL_16
0x4003ad0	      0xbe00000000	                              mov esi, 0	      3434	channel.c	FUNCTION_80	CALL_16
0x4003ad5	            0x89c2	                            mov edx, eax	      3434	channel.c	FUNCTION_80	CALL_16
0x4003ad7	          0x4889ef	                            mov rdi, rbp	      3434	channel.c	FUNCTION_80	CALL_16
0x4003ada	            0x31c0	                            xor eax, eax	      3434	channel.c	FUNCTION_80	CALL_16
0x4003adc	      0xe800000000	                          call 0x4003ae1	      3434	channel.c	FUNCTION_80	CALL_16
0x4003ae1	      0xe91fffffff	                           jmp 0x4003a05	      3434	channel.c	FUNCTION_80	CALL_16
0x4003ae6	          0x4885db	                           test rbx, rbx	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4003ae9	        0x410f94c0	                                sete r8b	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4003aed	          0x4839fb	                            cmp rbx, rdi	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4003af0	            0x7705	                            ja 0x4003af7	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4003af2	          0x4584c0	                           test r8b, r8b	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4003af5	            0x7498	                            je 0x4003a8f	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4003af7	          0x4839d7	                            cmp rdi, rdx	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4003afa	     0xf825fffffff	                            jb 0x4003a5f	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4003b00	          0x4584c0	                           test r8b, r8b	      3414	channel.c	FUNCTION_80	ELSE_1	IF_9
0x4003b03	            0x752c	                           jne 0x4003b31	      3414	channel.c	FUNCTION_80	ELSE_1	IF_9
0x4003b05	        0x488d1437	                    lea rdx, [rdi + rsi]	      3414	channel.c	FUNCTION_80	ELSE_1	IF_9
0x4003b09	            0xeb84	                           jmp 0x4003a8f	      3414	channel.c	FUNCTION_80	ELSE_1	IF_9
0x4003b0b	      0xbe00000000	                              mov esi, 0	      3391	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_6
0x4003b10	          0x4889ef	                            mov rdi, rbp	      3391	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_6
0x4003b13	            0x31c0	                            xor eax, eax	      3391	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_6
0x4003b15	      0xe800000000	                          call 0x4003b1a	      3391	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_6
0x4003b1a	            0x31db	                            xor ebx, ebx	      3392	channel.c	FUNCTION_80	WHILE_1	IF_6
0x4003b1c	      0xe9e4feffff	                           jmp 0x4003a05	      3392	channel.c	FUNCTION_80	WHILE_1	IF_6
0x4003b21	        0x498b7708	                mov rsi, qword [r15 + 8]	      3392	channel.c	FUNCTION_80	WHILE_1	IF_6
0x4003b25	          0x498b3f	                    mov rdi, qword [r15]	      3392	channel.c	FUNCTION_80	WHILE_1	IF_6
0x4003b28	          0x4885f6	                           test rsi, rsi	      1629	channel.c	FUNCTION_45	FOR_1
0x4003b2b	     0xf85effeffff	                           jne 0x4003a20	      1629	channel.c	FUNCTION_45	FOR_1
0x4003b31	          0x4489ee	                           mov esi, r13d	      3417	channel.c	FUNCTION_80	ELSE_1	IF_9	CALL_10
0x4003b34	          0x4889ef	                            mov rdi, rbp	      3417	channel.c	FUNCTION_80	ELSE_1	IF_9	CALL_10
0x4003b37	      0xe800000000	                          call 0x4003b3c	      3417	channel.c	FUNCTION_80	ELSE_1	IF_9	CALL_10
0x4003b3c	          0x4989c4	                            mov r12, rax	      3417	channel.c	FUNCTION_80	ELSE_1	IF_9	CALL_10
0x4003b3f	      0xe973ffffff	                           jmp 0x4003ab7	      3417	channel.c	FUNCTION_80	ELSE_1	IF_9	CALL_10
0x4003b44	          0x4489ee	                           mov esi, r13d	      3400	channel.c	FUNCTION_80	IF_7	CALL_8
0x4003b47	          0x4889ef	                            mov rdi, rbp	      3400	channel.c	FUNCTION_80	IF_7	CALL_8
0x4003b4a	      0xe891e7ffff	                call sym.channel_get_all	      3400	channel.c	FUNCTION_80	IF_7	CALL_8
0x4003b4f	          0x4989c4	                            mov r12, rax	      3400	channel.c	FUNCTION_80	IF_7	CALL_8
0x4003b52	      0xe960ffffff	                           jmp 0x4003ab7	      3400	channel.c	FUNCTION_80	IF_7	CALL_8
0x4003b57	          0x4489ee	                           mov esi, r13d	      3422	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10	CALL_11
0x4003b5a	          0x4889ef	                            mov rdi, rbp	      3422	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10	CALL_11
0x4003b5d	      0xe800000000	                          call 0x4003b62	      3422	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10	CALL_11
0x4003b62	          0xc60300	                       mov byte [rbx], 0	      3423	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10
0x4003b65	          0x4989c4	                            mov r12, rax	      3422	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10	CALL_11
0x4003b68	      0xe94affffff	                           jmp 0x4003ab7	      3422	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10	CALL_11
0x4003b6d	          0x4889fb	                            mov rbx, rdi	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4003b70	            0xeb93	                           jmp 0x4003b05	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
channel_select_setup	DO,0:IF,4:FOR,2:ELSE,1:SWITCH,0:CALL,2:WHILE,0:functions,0	70
0x4005820	            0x4157	                                push r15	      4118	channel.c	FUNCTION_93
0x4005822	            0x4156	                                push r14	      4118	channel.c	FUNCTION_93
0x4005824	            0x4155	                                push r13	      4118	channel.c	FUNCTION_93
0x4005826	            0x4154	                                push r12	      4118	channel.c	FUNCTION_93
0x4005828	          0x4189fd	                           mov r13d, edi	      4118	channel.c	FUNCTION_93
0x400582b	              0x55	                                push rbp	      4118	channel.c	FUNCTION_93
0x400582c	              0x53	                                push rbx	      4118	channel.c	FUNCTION_93
0x400582d	        0x4883ec28	                           sub rsp, 0x28	      4118	channel.c	FUNCTION_93
0x4005831	    0x4c8b3d000000	            mov r15, qword [0x04005838] 	      4125	channel.c	FUNCTION_93	FOR_1
0x4005838	      0x4889542418	             mov qword [rsp + 0x18], rdx	      4118	channel.c	FUNCTION_93
0x400583d	      0x4c89442410	              mov qword [rsp + 0x10], r8	      4118	channel.c	FUNCTION_93
0x4005842	          0x4d85ff	                           test r15, r15	      4125	channel.c	FUNCTION_93	FOR_1
0x4005845	            0x7466	                            je 0x40058ad	      4125	channel.c	FUNCTION_93	FOR_1
0x4005847	          0x4989f4	                            mov r12, rsi	      4125	channel.c	FUNCTION_93	FOR_1
0x400584a	          0x4989ce	                            mov r14, rcx	      4125	channel.c	FUNCTION_93	FOR_1
0x400584d	           0xf1f00	                         nop dword [rax]	      4125	channel.c	FUNCTION_93	FOR_1
0x4005850	        0x498d5f18	                   lea rbx, [r15 + 0x18]	      4125	channel.c	FUNCTION_93	FOR_1
0x4005854	    0x4d8d87480300	                   lea r8, [r15 + 0x348]	      4125	channel.c	FUNCTION_93	FOR_1
0x400585b	            0x8b2b	                    mov ebp, dword [rbx]	      4129	channel.c	FUNCTION_93	FOR_1	FOR_2
0x400585d	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      4131	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1
0x4005860	            0x7437	                            je 0x4005899	      4131	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1
0x4005862	    0x418b87a40400	           mov eax, dword [r15 + 0x4a4] 	      4133	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2
0x4005869	            0x85c0	                           test eax, eax	      4133	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2
0x400586b	            0x7463	                            je 0x40058d0	      4133	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2
0x400586d	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4005872	        0x48833800	                      cmp qword [rax], 0	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4005876	            0x740a	                            je 0x4005882	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4005878	        0x49833e00	                      cmp qword [r14], 0	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x400587c	     0xf8e8e000000	                           jle 0x4005910	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4005882	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4141	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4005887	          0x4c8930	                    mov qword [rax], r14	      4141	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x400588a	    0x49c706000000	                      mov qword [r14], 0	      4142	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4005891	    0x49c74608204e	            mov qword [r14 + 8], 0x4e20 	      4143	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4005899	    0x4881c3100100	                          add rbx, 0x110	      4143	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x40058a0	          0x4c39c3	                             cmp rbx, r8	      4127	channel.c	FUNCTION_93	FOR_1	FOR_2
0x40058a3	            0x75b6	                           jne 0x400585b	      4127	channel.c	FUNCTION_93	FOR_1	FOR_2
0x40058a5	          0x4d8b3f	                    mov r15, qword [r15]	      4125	channel.c	FUNCTION_93	FOR_1
0x40058a8	          0x4d85ff	                           test r15, r15	      4125	channel.c	FUNCTION_93	FOR_1
0x40058ab	            0x75a3	                           jne 0x4005850	      4125	channel.c	FUNCTION_93	FOR_1
0x40058ad	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      4156	channel.c	FUNCTION_93	CALL_2
0x40058b2	        0x4883c428	                           add rsp, 0x28	      4159	channel.c	FUNCTION_93
0x40058b6	          0x4489ef	                           mov edi, r13d	      4156	channel.c	FUNCTION_93	CALL_2
0x40058b9	              0x5b	                                 pop rbx	      4159	channel.c	FUNCTION_93
0x40058ba	              0x5d	                                 pop rbp	      4159	channel.c	FUNCTION_93
0x40058bb	            0x415c	                                 pop r12	      4159	channel.c	FUNCTION_93
0x40058bd	            0x415d	                                 pop r13	      4159	channel.c	FUNCTION_93
0x40058bf	            0x415e	                                 pop r14	      4159	channel.c	FUNCTION_93
0x40058c1	            0x415f	                                 pop r15	      4159	channel.c	FUNCTION_93
0x40058c3	      0xe9d8a9ffff	               jmp sym.channel_fill_wfds	      4156	channel.c	FUNCTION_93	CALL_2
0x40058c8	     0xf1f84000000	                   nop dword [rax + rax]	      4156	channel.c	FUNCTION_93	CALL_2
0x40058d0	          0x4863fd	                         movsxd rdi, ebp	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x40058d3	      0x4c89442408	                 mov qword [rsp + 8], r8	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x40058d8	      0xe800000000	                          call 0x40058dd	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x40058dd	            0x89ef	                            mov edi, ebp	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x40058df	      0xba01000000	                              mov edx, 1	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x40058e4	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x40058e9	          0xc1ff1f	                           sar edi, 0x1f	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x40058ec	          0xc1ef1a	                           shr edi, 0x1a	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x40058ef	        0x8d4c3d00	                    lea ecx, [rbp + rdi]	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x40058f3	          0x83e13f	                           and ecx, 0x3f	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x40058f6	            0x29f9	                            sub ecx, edi	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x40058f8	          0x48d3e2	                             shl rdx, cl	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x40058fb	        0x490914c4	             or qword [r12 + rax*8], rdx	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x40058ff	          0x4139ed	                           cmp r13d, ebp	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4005902	        0x440f4ced	                         cmovl r13d, ebp	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4005906	            0xeb91	                           jmp 0x4005899	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4005908	     0xf1f84000000	                   nop dword [rax + rax]	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4005910	    0x49817e08204e	            cmp qword [r14 + 8], 0x4e20 	      4139	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4005918	     0xf8e7bffffff	                           jle 0x4005899	      4139	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x400591e	      0xe95fffffff	                           jmp 0x4005882	      4139	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
channel_may_free	DO,0:IF,1:FOR,0:ELSE,0:SWITCH,0:CALL,2:WHILE,0:functions,0	21
0x4004e70	              0x53	                                push rbx	       402	channel.c	FUNCTION_14
0x4004e71	            0x31db	                            xor ebx, ebx	       408	channel.c	FUNCTION_14
0x4004e73	      0xe8a8bcffff	           call sym.channel_still_useful	       403	channel.c	FUNCTION_14	IF_1	CALL_1
0x4004e78	            0x85c0	                           test eax, eax	       403	channel.c	FUNCTION_14	IF_1	CALL_1
0x4004e7a	            0x7523	                           jne 0x4004e9f	       403	channel.c	FUNCTION_14	IF_1	CALL_1
0x4004e7c	    0x8b1500000000	            mov edx, dword [0x04004e82] 	       382	channel.c	FUNCTION_13	IF_1
0x4004e82	      0xbb01000000	                              mov ebx, 1	       406	channel.c	FUNCTION_14	IF_1
0x4004e87	            0x85d2	                           test edx, edx	       382	channel.c	FUNCTION_13	IF_1
0x4004e89	            0x7514	                           jne 0x4004e9f	       382	channel.c	FUNCTION_13	IF_1
0x4004e8b	    0x8b0500000000	            mov eax, dword [0x04004e91] 	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x4004e91	            0x85c0	                           test eax, eax	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x4004e93	            0x7513	                           jne 0x4004ea8	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x4004e95	    0xc78770040000	              mov dword [rdi + 0x470], 1	       385	channel.c	FUNCTION_13	IF_1	IF_2
0x4004e9f	            0x89d8	                            mov eax, ebx	       409	channel.c	FUNCTION_14
0x4004ea1	              0x5b	                                 pop rbx	       409	channel.c	FUNCTION_14
0x4004ea2	              0xc3	                                     ret	       409	channel.c	FUNCTION_14
0x4004ea3	       0xf1f440000	                   nop dword [rax + rax]	       409	channel.c	FUNCTION_14
0x4004ea8	      0xe8a3ffffff	           call sym.channel_free.part.12	       409	channel.c	FUNCTION_14
0x4004ead	            0x89d8	                            mov eax, ebx	       409	channel.c	FUNCTION_14
0x4004eaf	              0x5b	                                 pop rbx	       409	channel.c	FUNCTION_14
0x4004eb0	              0xc3	                                     ret	       409	channel.c	FUNCTION_14
invoke_callback	DO,0:IF,1:FOR,0:ELSE,0:SWITCH,0:CALL,4:WHILE,0:functions,0	49
0x4000a70	            0x4155	                                push r13	      1590	channel.c	FUNCTION_43
0x4000a72	            0x4154	                                push r12	      1590	channel.c	FUNCTION_43
0x4000a74	          0x4989fd	                            mov r13, rdi	      1590	channel.c	FUNCTION_43
0x4000a77	              0x55	                                push rbp	      1590	channel.c	FUNCTION_43
0x4000a78	              0x53	                                push rbx	      1590	channel.c	FUNCTION_43
0x4000a79	          0x4889f5	                            mov rbp, rsi	      1590	channel.c	FUNCTION_43
0x4000a7c	          0x4989d4	                            mov r12, rdx	      1590	channel.c	FUNCTION_43
0x4000a7f	          0x4889cb	                            mov rbx, rcx	      1590	channel.c	FUNCTION_43
0x4000a82	        0x4883ec38	                           sub rsp, 0x38	      1590	channel.c	FUNCTION_43
0x4000a86	    0x64488b042528	                mov rax, qword fs:[0x28]	      1590	channel.c	FUNCTION_43
0x4000a8f	      0x4889442428	             mov qword [rsp + 0x28], rax	      1590	channel.c	FUNCTION_43
0x4000a94	            0x31c0	                            xor eax, eax	      1590	channel.c	FUNCTION_43
0x4000a96	    0x8b0500000000	            mov eax, dword [0x04000a9c] 	      1594	channel.c	FUNCTION_43	IF_1
0x4000a9c	            0x85c0	                           test eax, eax	      1594	channel.c	FUNCTION_43	IF_1
0x4000a9e	            0x750a	                           jne 0x4000aaa	      1594	channel.c	FUNCTION_43	IF_1
0x4000aa0	      0xbf00000000	                              mov edi, 0	      1595	channel.c	FUNCTION_43	CALL_1
0x4000aa5	      0xe800000000	                          call 0x4000aaa	      1595	channel.c	FUNCTION_43	CALL_1
0x4000aaa	          0x4889ef	                            mov rdi, rbp	      1600	channel.c	FUNCTION_43	CALL_3
0x4000aad	    0xc7030a000000	                    mov dword [rbx], 0xa	      1597	channel.c	FUNCTION_43
0x4000ab3	        0x4c896b08	                mov qword [rbx + 8], r13	      1598	channel.c	FUNCTION_43
0x4000ab7	      0xe800000000	                          call 0x4000abc	      1600	channel.c	FUNCTION_43	CALL_3
0x4000abc	            0x6a00	                                  push 0	      1600	channel.c	FUNCTION_43	CALL_3
0x4000abe	            0x4154	                                push r12	      1600	channel.c	FUNCTION_43	CALL_3
0x4000ac0	          0x4531c9	                            xor r9d, r9d	      1600	channel.c	FUNCTION_43	CALL_3
0x4000ac3	            0x6a01	                                  push 1	      1600	channel.c	FUNCTION_43	CALL_3
0x4000ac5	          0x4989d8	                             mov r8, rbx	      1600	channel.c	FUNCTION_43	CALL_3
0x4000ac8	      0xb902000000	                              mov ecx, 2	      1600	channel.c	FUNCTION_43	CALL_3
0x4000acd	            0x89c6	                            mov esi, eax	      1600	channel.c	FUNCTION_43	CALL_3
0x4000acf	          0x4889ef	                            mov rdi, rbp	      1600	channel.c	FUNCTION_43	CALL_3
0x4000ad2	      0x488d542424	                   lea rdx, [rsp + 0x24]	      1600	channel.c	FUNCTION_43	CALL_3
0x4000ad7	              0x52	                                push rdx	      1600	channel.c	FUNCTION_43	CALL_3
0x4000ad8	            0x6a00	                                  push 0	      1600	channel.c	FUNCTION_43	CALL_3
0x4000ada	            0x6a00	                                  push 0	      1600	channel.c	FUNCTION_43	CALL_3
0x4000adc	      0x488d542440	                   lea rdx, [rsp + 0x40]	      1600	channel.c	FUNCTION_43	CALL_3
0x4000ae1	      0xe800000000	                          call 0x4000ae6	      1600	channel.c	FUNCTION_43	CALL_3
0x4000ae6	        0x4883c430	                           add rsp, 0x30	      1602	channel.c	FUNCTION_43	CALL_4
0x4000aea	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1602	channel.c	FUNCTION_43	CALL_4
0x4000aef	      0xe800000000	                          call 0x4000af4	      1602	channel.c	FUNCTION_43	CALL_4
0x4000af4	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1604	channel.c	FUNCTION_43
0x4000af9	    0x644833042528	                xor rax, qword fs:[0x28]	      1604	channel.c	FUNCTION_43
0x4000b02	    0xc70500000000	               mov dword [0x04000b0c], 1	      1603	channel.c	FUNCTION_43
0x4000b0c	            0x750b	                           jne 0x4000b19	      1604	channel.c	FUNCTION_43
0x4000b0e	        0x4883c438	                           add rsp, 0x38	      1604	channel.c	FUNCTION_43
0x4000b12	              0x5b	                                 pop rbx	      1604	channel.c	FUNCTION_43
0x4000b13	              0x5d	                                 pop rbp	      1604	channel.c	FUNCTION_43
0x4000b14	            0x415c	                                 pop r12	      1604	channel.c	FUNCTION_43
0x4000b16	            0x415d	                                 pop r13	      1604	channel.c	FUNCTION_43
0x4000b18	              0xc3	                                     ret	      1604	channel.c	FUNCTION_43
0x4000b19	      0xe800000000	                          call 0x4000b1e	      1604	channel.c	FUNCTION_43
free_job_options	DO,0:IF,11:FOR,0:ELSE,5:SWITCH,0:CALL,11:WHILE,0:functions,0	65
0x4006180	              0x53	                                push rbx	      4452	channel.c	FUNCTION_105
0x4006181	          0x4889fb	                            mov rbx, rdi	      4452	channel.c	FUNCTION_105
0x4006184	    0x488bbfa80100	           mov rdi, qword [rdi + 0x1a8] 	      4453	channel.c	FUNCTION_105	IF_1
0x400618b	          0x4885ff	                           test rdi, rdi	      4453	channel.c	FUNCTION_105	IF_1
0x400618e	            0x7470	                            je 0x4006200	      4453	channel.c	FUNCTION_105	IF_1
0x4006190	      0xe800000000	                          call 0x4006195	      4454	channel.c	FUNCTION_105	CALL_1
0x4006195	    0x488bbbb80100	           mov rdi, qword [rbx + 0x1b8] 	      4457	channel.c	FUNCTION_105	IF_3
0x400619c	          0x4885ff	                           test rdi, rdi	      4457	channel.c	FUNCTION_105	IF_3
0x400619f	            0x747c	                            je 0x400621d	      4457	channel.c	FUNCTION_105	IF_3
0x40061a1	      0xe800000000	                          call 0x40061a6	      4458	channel.c	FUNCTION_105	CALL_3
0x40061a6	    0x488bbbc80100	           mov rdi, qword [rbx + 0x1c8] 	      4461	channel.c	FUNCTION_105	IF_5
0x40061ad	          0x4885ff	                           test rdi, rdi	      4461	channel.c	FUNCTION_105	IF_5
0x40061b0	     0xf848c000000	                            je 0x4006242	      4461	channel.c	FUNCTION_105	IF_5
0x40061b6	      0xe800000000	                          call 0x40061bb	      4462	channel.c	FUNCTION_105	CALL_5
0x40061bb	    0x488bbbd80100	           mov rdi, qword [rbx + 0x1d8] 	      4465	channel.c	FUNCTION_105	IF_7
0x40061c2	          0x4885ff	                           test rdi, rdi	      4465	channel.c	FUNCTION_105	IF_7
0x40061c5	     0xf849c000000	                            je 0x4006267	      4465	channel.c	FUNCTION_105	IF_7
0x40061cb	      0xe800000000	                          call 0x40061d0	      4466	channel.c	FUNCTION_105	CALL_7
0x40061d0	    0x488bbbe80100	           mov rdi, qword [rbx + 0x1e8] 	      4469	channel.c	FUNCTION_105	IF_9
0x40061d7	          0x4885ff	                           test rdi, rdi	      4469	channel.c	FUNCTION_105	IF_9
0x40061da	     0xf84ac000000	                            je 0x400628c	      4469	channel.c	FUNCTION_105	IF_9
0x40061e0	      0xe800000000	                          call 0x40061e5	      4470	channel.c	FUNCTION_105	CALL_9
0x40061e5	    0x488bbb600200	           mov rdi, qword [rbx + 0x260] 	      4473	channel.c	FUNCTION_105	IF_11
0x40061ec	          0x4885ff	                           test rdi, rdi	      4473	channel.c	FUNCTION_105	IF_11
0x40061ef	     0xf84bc000000	                            je 0x40062b1	      4473	channel.c	FUNCTION_105	IF_11
0x40061f5	              0x5b	                                 pop rbx	      4475	channel.c	FUNCTION_105
0x40061f6	      0xe900000000	                           jmp 0x40061fb	      4474	channel.c	FUNCTION_105	CALL_11
0x40061fb	       0xf1f440000	                   nop dword [rax + rax]	      4474	channel.c	FUNCTION_105	CALL_11
0x4006200	    0x488bbba00100	           mov rdi, qword [rbx + 0x1a0] 	      4455	channel.c	FUNCTION_105	ELSE_1	IF_2
0x4006207	          0x4885ff	                           test rdi, rdi	      4455	channel.c	FUNCTION_105	ELSE_1	IF_2
0x400620a	            0x7489	                            je 0x4006195	      4455	channel.c	FUNCTION_105	ELSE_1	IF_2
0x400620c	      0xe800000000	                          call 0x4006211	      4456	channel.c	FUNCTION_105	ELSE_1	IF_2
0x4006211	    0x488bbbb80100	           mov rdi, qword [rbx + 0x1b8] 	      4457	channel.c	FUNCTION_105	IF_3
0x4006218	          0x4885ff	                           test rdi, rdi	      4457	channel.c	FUNCTION_105	IF_3
0x400621b	            0x7584	                           jne 0x40061a1	      4457	channel.c	FUNCTION_105	IF_3
0x400621d	    0x488bbbb00100	           mov rdi, qword [rbx + 0x1b0] 	      4459	channel.c	FUNCTION_105	ELSE_2	IF_4
0x4006224	          0x4885ff	                           test rdi, rdi	      4459	channel.c	FUNCTION_105	ELSE_2	IF_4
0x4006227	     0xf8479ffffff	                            je 0x40061a6	      4459	channel.c	FUNCTION_105	ELSE_2	IF_4
0x400622d	      0xe800000000	                          call 0x4006232	      4460	channel.c	FUNCTION_105	ELSE_2	IF_4
0x4006232	    0x488bbbc80100	           mov rdi, qword [rbx + 0x1c8] 	      4461	channel.c	FUNCTION_105	IF_5
0x4006239	          0x4885ff	                           test rdi, rdi	      4461	channel.c	FUNCTION_105	IF_5
0x400623c	     0xf8574ffffff	                           jne 0x40061b6	      4461	channel.c	FUNCTION_105	IF_5
0x4006242	    0x488bbbc00100	           mov rdi, qword [rbx + 0x1c0] 	      4463	channel.c	FUNCTION_105	ELSE_3	IF_6
0x4006249	          0x4885ff	                           test rdi, rdi	      4463	channel.c	FUNCTION_105	ELSE_3	IF_6
0x400624c	     0xf8469ffffff	                            je 0x40061bb	      4463	channel.c	FUNCTION_105	ELSE_3	IF_6
0x4006252	      0xe800000000	                          call 0x4006257	      4464	channel.c	FUNCTION_105	ELSE_3	IF_6
0x4006257	    0x488bbbd80100	           mov rdi, qword [rbx + 0x1d8] 	      4465	channel.c	FUNCTION_105	IF_7
0x400625e	          0x4885ff	                           test rdi, rdi	      4465	channel.c	FUNCTION_105	IF_7
0x4006261	     0xf8564ffffff	                           jne 0x40061cb	      4465	channel.c	FUNCTION_105	IF_7
0x4006267	    0x488bbbd00100	           mov rdi, qword [rbx + 0x1d0] 	      4467	channel.c	FUNCTION_105	ELSE_4	IF_8
0x400626e	          0x4885ff	                           test rdi, rdi	      4467	channel.c	FUNCTION_105	ELSE_4	IF_8
0x4006271	     0xf8459ffffff	                            je 0x40061d0	      4467	channel.c	FUNCTION_105	ELSE_4	IF_8
0x4006277	      0xe800000000	                          call 0x400627c	      4468	channel.c	FUNCTION_105	ELSE_4	IF_8
0x400627c	    0x488bbbe80100	           mov rdi, qword [rbx + 0x1e8] 	      4469	channel.c	FUNCTION_105	IF_9
0x4006283	          0x4885ff	                           test rdi, rdi	      4469	channel.c	FUNCTION_105	IF_9
0x4006286	     0xf8554ffffff	                           jne 0x40061e0	      4469	channel.c	FUNCTION_105	IF_9
0x400628c	    0x488bbbe00100	           mov rdi, qword [rbx + 0x1e0] 	      4471	channel.c	FUNCTION_105	ELSE_5	IF_10
0x4006293	          0x4885ff	                           test rdi, rdi	      4471	channel.c	FUNCTION_105	ELSE_5	IF_10
0x4006296	     0xf8449ffffff	                            je 0x40061e5	      4471	channel.c	FUNCTION_105	ELSE_5	IF_10
0x400629c	      0xe800000000	                          call 0x40062a1	      4472	channel.c	FUNCTION_105	ELSE_5	IF_10
0x40062a1	    0x488bbb600200	           mov rdi, qword [rbx + 0x260] 	      4473	channel.c	FUNCTION_105	IF_11
0x40062a8	          0x4885ff	                           test rdi, rdi	      4473	channel.c	FUNCTION_105	IF_11
0x40062ab	     0xf8544ffffff	                           jne 0x40061f5	      4473	channel.c	FUNCTION_105	IF_11
0x40062b1	              0x5b	                                 pop rbx	      4475	channel.c	FUNCTION_105
0x40062b2	              0xc3	                                     ret	      4475	channel.c	FUNCTION_105
job_info	DO,0:IF,5:FOR,1:ELSE,0:SWITCH,0:CALL,14:WHILE,0:functions,0	105
0x4008b80	            0x4154	                                push r12	      5727	channel.c	FUNCTION_132
0x4008b82	              0x55	                                push rbp	      5727	channel.c	FUNCTION_132
0x4008b83	      0xb900000000	                              mov ecx, 0	      5710	channel.c	FUNCTION_131	IF_1
0x4008b88	              0x53	                                push rbx	      5727	channel.c	FUNCTION_132
0x4008b89	          0x8b4728	            mov eax, dword [rdi + 0x28] 	      5708	channel.c	FUNCTION_131	IF_1
0x4008b8c	          0x4889fd	                            mov rbp, rdi	      5727	channel.c	FUNCTION_132
0x4008b8f	          0x4889f3	                            mov rbx, rsi	      5727	channel.c	FUNCTION_132
0x4008b92	          0x83f801	                              cmp eax, 1	      5708	channel.c	FUNCTION_131	IF_1
0x4008b95	     0xf863d010000	                           jbe 0x4008cd8	      5708	channel.c	FUNCTION_131	IF_1
0x4008b9b	            0x31d2	                            xor edx, edx	      5733	channel.c	FUNCTION_132	CALL_2
0x4008b9d	      0xbe00000000	                              mov esi, 0	      5733	channel.c	FUNCTION_132	CALL_2
0x4008ba2	          0x4889df	                            mov rdi, rbx	      5733	channel.c	FUNCTION_132	CALL_2
0x4008ba5	      0xe800000000	                          call 0x4008baa	      5733	channel.c	FUNCTION_132	CALL_2
0x4008baa	      0xbf00000000	                              mov edi, 0	      5735	channel.c	FUNCTION_132	CALL_3
0x4008baf	      0xe800000000	                          call 0x4008bb4	      5735	channel.c	FUNCTION_132	CALL_3
0x4008bb4	          0x4885c0	                           test rax, rax	      5736	channel.c	FUNCTION_132	IF_1
0x4008bb7	          0x4989c4	                            mov r12, rax	      5735	channel.c	FUNCTION_132	CALL_3
0x4008bba	     0xf840e010000	                            je 0x4008cce	      5736	channel.c	FUNCTION_132	IF_1
0x4008bc0	        0xc6400400	                   mov byte [rax + 4], 0	      5738	channel.c	FUNCTION_132
0x4008bc4	    0xc7000a000000	                    mov dword [rax], 0xa	      5739	channel.c	FUNCTION_132
0x4008bca	        0x488b4560	            mov rax, qword [rbp + 0x60] 	      5740	channel.c	FUNCTION_132
0x4008bce	      0x4989442408	                mov qword [r12 + 8], rax	      5740	channel.c	FUNCTION_132
0x4008bd3	        0x488b4560	            mov rax, qword [rbp + 0x60] 	      5741	channel.c	FUNCTION_132	IF_2
0x4008bd7	          0x4885c0	                           test rax, rax	      5741	channel.c	FUNCTION_132	IF_2
0x4008bda	            0x7407	                            je 0x4008be3	      5741	channel.c	FUNCTION_132	IF_2
0x4008bdc	    0x8380b4040000	              add dword [rax + 0x4b4], 1	      5742	channel.c	FUNCTION_132	IF_2
0x4008be3	          0x4c89e6	                            mov rsi, r12	      5743	channel.c	FUNCTION_132	IF_3	CALL_4
0x4008be6	          0x4889df	                            mov rdi, rbx	      5743	channel.c	FUNCTION_132	IF_3	CALL_4
0x4008be9	      0xe800000000	                          call 0x4008bee	      5743	channel.c	FUNCTION_132	IF_3	CALL_4
0x4008bee	            0x85c0	                           test eax, eax	      5743	channel.c	FUNCTION_132	IF_3	CALL_4
0x4008bf0	     0xf8402010000	                            je 0x4008cf8	      5743	channel.c	FUNCTION_132	IF_3	CALL_4
0x4008bf6	        0x48635510	         movsxd rdx, dword [rbp + 0x10] 	      5751	channel.c	FUNCTION_132	CALL_6
0x4008bfa	            0x31c9	                            xor ecx, ecx	      5751	channel.c	FUNCTION_132	CALL_6
0x4008bfc	      0xbe00000000	                              mov esi, 0	      5751	channel.c	FUNCTION_132	CALL_6
0x4008c01	          0x4889df	                            mov rdi, rbx	      5751	channel.c	FUNCTION_132	CALL_6
0x4008c04	    0x41bc00000000	                             mov r12d, 0	      5752	channel.c	FUNCTION_132	CALL_7
0x4008c0a	      0xe800000000	                          call 0x4008c0f	      5751	channel.c	FUNCTION_132	CALL_6
0x4008c0f	        0x488b4d18	            mov rcx, qword [rbp + 0x18] 	      5753	channel.c	FUNCTION_132
0x4008c13	      0xbe00000000	                              mov esi, 0	      5752	channel.c	FUNCTION_132	CALL_7
0x4008c18	          0x4889df	                            mov rdi, rbx	      5752	channel.c	FUNCTION_132	CALL_7
0x4008c1b	          0x4885c9	                           test rcx, rcx	      5752	channel.c	FUNCTION_132	CALL_7
0x4008c1e	        0x490f44cc	                          cmove rcx, r12	      5752	channel.c	FUNCTION_132	CALL_7
0x4008c22	            0x31d2	                            xor edx, edx	      5752	channel.c	FUNCTION_132	CALL_7
0x4008c24	      0xe800000000	                          call 0x4008c29	      5752	channel.c	FUNCTION_132	CALL_7
0x4008c29	        0x488b4d20	            mov rcx, qword [rbp + 0x20] 	      5755	channel.c	FUNCTION_132
0x4008c2d	      0xbe00000000	                              mov esi, 0	      5754	channel.c	FUNCTION_132	CALL_8
0x4008c32	          0x4889df	                            mov rdi, rbx	      5754	channel.c	FUNCTION_132	CALL_8
0x4008c35	          0x4885c9	                           test rcx, rcx	      5754	channel.c	FUNCTION_132	CALL_8
0x4008c38	        0x490f44cc	                          cmove rcx, r12	      5754	channel.c	FUNCTION_132	CALL_8
0x4008c3c	            0x31d2	                            xor edx, edx	      5754	channel.c	FUNCTION_132	CALL_8
0x4008c3e	      0xe800000000	                          call 0x4008c43	      5754	channel.c	FUNCTION_132	CALL_8
0x4008c43	        0x48635538	         movsxd rdx, dword [rbp + 0x38] 	      5757	channel.c	FUNCTION_132	CALL_9
0x4008c47	            0x31c9	                            xor ecx, ecx	      5757	channel.c	FUNCTION_132	CALL_9
0x4008c49	      0xbe00000000	                              mov esi, 0	      5757	channel.c	FUNCTION_132	CALL_9
0x4008c4e	          0x4889df	                            mov rdi, rbx	      5757	channel.c	FUNCTION_132	CALL_9
0x4008c51	      0xe800000000	                          call 0x4008c56	      5757	channel.c	FUNCTION_132	CALL_9
0x4008c56	        0x488b4d40	            mov rcx, qword [rbp + 0x40] 	      5758	channel.c	FUNCTION_132	CALL_10
0x4008c5a	            0x31d2	                            xor edx, edx	      5758	channel.c	FUNCTION_132	CALL_10
0x4008c5c	      0xbe00000000	                              mov esi, 0	      5758	channel.c	FUNCTION_132	CALL_10
0x4008c61	          0x4889df	                            mov rdi, rbx	      5758	channel.c	FUNCTION_132	CALL_10
0x4008c64	      0xe800000000	                          call 0x4008c69	      5758	channel.c	FUNCTION_132	CALL_10
0x4008c69	        0x488b4d30	            mov rcx, qword [rbp + 0x30] 	      5759	channel.c	FUNCTION_132	CALL_11
0x4008c6d	            0x31d2	                            xor edx, edx	      5759	channel.c	FUNCTION_132	CALL_11
0x4008c6f	      0xbe00000000	                              mov esi, 0	      5759	channel.c	FUNCTION_132	CALL_11
0x4008c74	          0x4889df	                            mov rdi, rbx	      5759	channel.c	FUNCTION_132	CALL_11
0x4008c77	      0xe800000000	                          call 0x4008c7c	      5759	channel.c	FUNCTION_132	CALL_11
0x4008c7c	      0xe800000000	                          call 0x4008c81	      5761	channel.c	FUNCTION_132	CALL_12
0x4008c81	          0x4885c0	                           test rax, rax	      5762	channel.c	FUNCTION_132	IF_4
0x4008c84	          0x4989c4	                            mov r12, rax	      5761	channel.c	FUNCTION_132	CALL_12
0x4008c87	            0x7445	                            je 0x4008cce	      5762	channel.c	FUNCTION_132	IF_4
0x4008c89	          0x4889c2	                            mov rdx, rax	      5764	channel.c	FUNCTION_132	IF_4	CALL_13
0x4008c8c	      0xbe00000000	                              mov esi, 0	      5764	channel.c	FUNCTION_132	IF_4	CALL_13
0x4008c91	          0x4889df	                            mov rdi, rbx	      5764	channel.c	FUNCTION_132	IF_4	CALL_13
0x4008c94	      0xe800000000	                          call 0x4008c99	      5764	channel.c	FUNCTION_132	IF_4	CALL_13
0x4008c99	        0x488b4568	            mov rax, qword [rbp + 0x68] 	      5765	channel.c	FUNCTION_132	IF_4	IF_5
0x4008c9d	          0x4885c0	                           test rax, rax	      5765	channel.c	FUNCTION_132	IF_4	IF_5
0x4008ca0	            0x742c	                            je 0x4008cce	      5765	channel.c	FUNCTION_132	IF_4	IF_5
0x4008ca2	          0x488b30	                    mov rsi, qword [rax]	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x4008ca5	          0x4885f6	                           test rsi, rsi	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x4008ca8	            0x7424	                            je 0x4008cce	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x4008caa	      0xbb08000000	                              mov ebx, 8	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x4008caf	              0x90	                                     nop	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x4008cb0	      0xbaffffffff	                     mov edx, 0xffffffff	      5767	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x4008cb5	          0x4c89e7	                            mov rdi, r12	      5767	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x4008cb8	      0xe800000000	                          call 0x4008cbd	      5767	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x4008cbd	        0x488b4568	            mov rax, qword [rbp + 0x68] 	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x4008cc1	        0x488b3418	              mov rsi, qword [rax + rbx]	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x4008cc5	        0x4883c308	                              add rbx, 8	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x4008cc9	          0x4885f6	                           test rsi, rsi	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x4008ccc	            0x75e2	                           jne 0x4008cb0	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x4008cce	              0x5b	                                 pop rbx	      5769	channel.c	FUNCTION_132
0x4008ccf	              0x5d	                                 pop rbp	      5769	channel.c	FUNCTION_132
0x4008cd0	            0x415c	                                 pop r12	      5769	channel.c	FUNCTION_132
0x4008cd2	              0xc3	                                     ret	      5769	channel.c	FUNCTION_132
0x4008cd3	       0xf1f440000	                   nop dword [rax + rax]	      5769	channel.c	FUNCTION_132
0x4008cd8	            0x85c0	                           test eax, eax	      5711	channel.c	FUNCTION_131	ELSE_1	IF_2
0x4008cda	      0xb900000000	                              mov ecx, 0	      5712	channel.c	FUNCTION_131	ELSE_1	IF_2
0x4008cdf	     0xf84b6feffff	                            je 0x4008b9b	      5711	channel.c	FUNCTION_131	ELSE_1	IF_2
0x4008ce5	      0xe806c4ffff	             call sym.job_status.part.17	      5711	channel.c	FUNCTION_131	ELSE_1	IF_2
0x4008cea	          0x4889c1	                            mov rcx, rax	      5711	channel.c	FUNCTION_131	ELSE_1	IF_2
0x4008ced	      0xe9a9feffff	                           jmp 0x4008b9b	      5711	channel.c	FUNCTION_131	ELSE_1	IF_2
0x4008cf2	    0x660f1f440000	                    nop word [rax + rax]	      5711	channel.c	FUNCTION_131	ELSE_1	IF_2
0x4008cf8	          0x4c89e7	                            mov rdi, r12	      5744	channel.c	FUNCTION_132	CALL_5
0x4008cfb	      0xe800000000	                          call 0x4008d00	      5744	channel.c	FUNCTION_132	CALL_5
0x4008d00	      0xe9f1feffff	                           jmp 0x4008bf6	      5744	channel.c	FUNCTION_132	CALL_5
job_free_job	DO,0:IF,2:FOR,0:ELSE,1:SWITCH,0:CALL,1:WHILE,0:functions,0	13
0x4000260	          0x488b07	                    mov rax, qword [rdi]	      5069	channel.c	FUNCTION_110	IF_1
0x4000263	          0x4885c0	                           test rax, rax	      5069	channel.c	FUNCTION_110	IF_1
0x4000266	            0x7408	                            je 0x4000270	      5069	channel.c	FUNCTION_110	IF_1
0x4000268	        0x488b5708	                mov rdx, qword [rdi + 8]	      5070	channel.c	FUNCTION_110	IF_1
0x400026c	        0x48895008	                mov qword [rax + 8], rdx	      5070	channel.c	FUNCTION_110	IF_1
0x4000270	        0x488b5708	                mov rdx, qword [rdi + 8]	      5071	channel.c	FUNCTION_110	IF_2
0x4000274	          0x4885d2	                           test rdx, rdx	      5071	channel.c	FUNCTION_110	IF_2
0x4000277	            0x740f	                            je 0x4000288	      5071	channel.c	FUNCTION_110	IF_2
0x4000279	          0x488902	                    mov qword [rdx], rax	      5074	channel.c	FUNCTION_110	ELSE_1
0x400027c	      0xe900000000	                           jmp 0x4000281	      5075	channel.c	FUNCTION_110	CALL_1
0x4000281	     0xf1f80000000	                         nop dword [rax]	      5075	channel.c	FUNCTION_110	CALL_1
0x4000288	    0x488905000000	            mov qword [0x0400028f], rax 	      5072	channel.c	FUNCTION_110	IF_2
0x400028f	      0xe900000000	                           jmp 0x4000294	      5075	channel.c	FUNCTION_110	CALL_1
channel_parse_messages	DO,0:IF,9:FOR,0:ELSE,1:SWITCH,0:CALL,12:WHILE,1:functions,0	178
0x4005ac0	            0x4156	                                push r14	      4215	channel.c	FUNCTION_95
0x4005ac2	            0x4154	                                push r12	      4215	channel.c	FUNCTION_95
0x4005ac4	            0x31f6	                            xor esi, esi	      4223	channel.c	FUNCTION_95	CALL_1
0x4005ac6	              0x55	                                push rbp	      4215	channel.c	FUNCTION_95
0x4005ac7	              0x53	                                push rbx	      4215	channel.c	FUNCTION_95
0x4005ac8	        0x4883ec28	                           sub rsp, 0x28	      4215	channel.c	FUNCTION_95
0x4005acc	    0x488b1d000000	            mov rbx, qword [0x04005ad3] 	      4216	channel.c	FUNCTION_95
0x4005ad3	          0x4889e7	                            mov rdi, rsp	      4223	channel.c	FUNCTION_95	CALL_1
0x4005ad6	    0x64488b042528	                mov rax, qword fs:[0x28]	      4215	channel.c	FUNCTION_95
0x4005adf	      0x4889442418	             mov qword [rsp + 0x18], rax	      4215	channel.c	FUNCTION_95
0x4005ae4	            0x31c0	                            xor eax, eax	      4215	channel.c	FUNCTION_95
0x4005ae6	      0xe800000000	                          call 0x4005aeb	      4223	channel.c	FUNCTION_95	CALL_1
0x4005aeb	    0x448b15000000	           mov r10d, dword [0x04005af2] 	      4230	channel.c	FUNCTION_95	IF_1
0x4005af2	    0x830500000000	               add dword [0x04005af9], 1	      4226	channel.c	FUNCTION_95
0x4005af9	          0x4585d2	                         test r10d, r10d	      4230	channel.c	FUNCTION_95	IF_1
0x4005afc	     0xf853e020000	                           jne 0x4005d40	      4230	channel.c	FUNCTION_95	IF_1
0x4005b02	          0x4885db	                           test rbx, rbx	      4235	channel.c	FUNCTION_95	WHILE_1
0x4005b05	     0xf848b020000	                            je 0x4005d96	      4235	channel.c	FUNCTION_95	WHILE_1
0x4005b0b	            0x31ed	                            xor ebp, ebp	      4235	channel.c	FUNCTION_95	WHILE_1
0x4005b0d	          0x4531e4	                          xor r12d, r12d	      4235	channel.c	FUNCTION_95	WHILE_1
0x4005b10	            0xeb34	                           jmp 0x4005b46	      4235	channel.c	FUNCTION_95	WHILE_1
0x4005b12	    0x660f1f440000	                    nop word [rax + rax]	      4235	channel.c	FUNCTION_95	WHILE_1
0x4005b18	    0x8b3d00000000	            mov edi, dword [0x04005b1e] 	       382	channel.c	FUNCTION_13	IF_1
0x4005b1e	            0x85ff	                           test edi, edi	       382	channel.c	FUNCTION_13	IF_1
0x4005b20	            0x7518	                           jne 0x4005b3a	       382	channel.c	FUNCTION_13	IF_1
0x4005b22	    0x8b3500000000	            mov esi, dword [0x04005b28] 	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x4005b28	            0x85f6	                           test esi, esi	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x4005b2a	     0xf85e8010000	                           jne 0x4005d18	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x4005b30	    0xc78370040000	              mov dword [rbx + 0x470], 1	       385	channel.c	FUNCTION_13	IF_1	IF_2
0x4005b3a	    0x488b1d000000	            mov rbx, qword [0x04005b41] 	      4249	channel.c	FUNCTION_95	WHILE_1	IF_3
0x4005b41	          0x4885db	                           test rbx, rbx	      4235	channel.c	FUNCTION_95	WHILE_1
0x4005b44	            0x7472	                            je 0x4005bb8	      4235	channel.c	FUNCTION_95	WHILE_1
0x4005b46	    0x448b8b6c0400	           mov r9d, dword [rbx + 0x46c] 	      4237	channel.c	FUNCTION_95	WHILE_1	IF_2	CALL_3
0x4005b4d	          0x4585c9	                           test r9d, r9d	      4237	channel.c	FUNCTION_95	WHILE_1	IF_2	CALL_3
0x4005b50	     0xf84aa000000	                            je 0x4005c00	      4237	channel.c	FUNCTION_95	WHILE_1	IF_2	CALL_3
0x4005b56	    0x448b83700400	           mov r8d, dword [rbx + 0x470] 	      4245	channel.c	FUNCTION_95	WHILE_1	IF_3
0x4005b5d	          0x4585c0	                           test r8d, r8d	      4245	channel.c	FUNCTION_95	WHILE_1	IF_3
0x4005b60	            0x75b6	                           jne 0x4005b18	      4245	channel.c	FUNCTION_95	WHILE_1	IF_3
0x4005b62	    0x448bb3b40400	          mov r14d, dword [rbx + 0x4b4] 	      4252	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_6
0x4005b69	          0x4585f6	                         test r14d, r14d	      4252	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_6
0x4005b6c	     0xf85ce000000	                           jne 0x4005c40	      4252	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_6
0x4005b72	          0x4889df	                            mov rdi, rbx	      4252	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_6
0x4005b75	      0xe8a6afffff	           call sym.channel_still_useful	      4252	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_6
0x4005b7a	            0x85c0	                           test eax, eax	      4252	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_6
0x4005b7c	     0xf85be000000	                           jne 0x4005c40	      4252	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_6
0x4005b82	    0x8b0d00000000	            mov ecx, dword [0x04005b88] 	       382	channel.c	FUNCTION_13	IF_1
0x4005b88	            0x85c9	                           test ecx, ecx	       382	channel.c	FUNCTION_13	IF_1
0x4005b8a	            0x7518	                           jne 0x4005ba4	       382	channel.c	FUNCTION_13	IF_1
0x4005b8c	    0x8b1500000000	            mov edx, dword [0x04005b92] 	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x4005b92	            0x85d2	                           test edx, edx	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x4005b94	     0xf85e6010000	                           jne 0x4005d80	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x4005b9a	    0xc78370040000	              mov dword [rbx + 0x470], 1	       385	channel.c	FUNCTION_13	IF_1	IF_2
0x4005ba4	    0x488b1d000000	            mov rbx, qword [0x04005bab] 	      4279	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x4005bab	            0x31ed	                            xor ebp, ebp	      4280	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x4005bad	          0x4885db	                           test rbx, rbx	      4235	channel.c	FUNCTION_95	WHILE_1
0x4005bb0	            0x7594	                           jne 0x4005b46	      4235	channel.c	FUNCTION_95	WHILE_1
0x4005bb2	    0x660f1f440000	                    nop word [rax + rax]	      4235	channel.c	FUNCTION_95	WHILE_1
0x4005bb8	    0x8b0500000000	            mov eax, dword [0x04005bbe] 	      4293	channel.c	FUNCTION_95	IF_9
0x4005bbe	            0x85c0	                           test eax, eax	      4293	channel.c	FUNCTION_95	IF_9
0x4005bc0	            0x7414	                            je 0x4005bd6	      4293	channel.c	FUNCTION_95	IF_9
0x4005bc2	      0xbf01000000	                              mov edi, 1	      4296	channel.c	FUNCTION_95	IF_9	CALL_12
0x4005bc7	    0xc70500000000	               mov dword [0x04005bd1], 0	      4295	channel.c	FUNCTION_95	IF_9
0x4005bd1	      0xe800000000	                          call 0x4005bd6	      4296	channel.c	FUNCTION_95	IF_9	CALL_12
0x4005bd6	    0x832d00000000	               sub dword [0x04005bdd], 1	      4299	channel.c	FUNCTION_95
0x4005bdd	          0x4489e0	                           mov eax, r12d	      4302	channel.c	FUNCTION_95
0x4005be0	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4302	channel.c	FUNCTION_95
0x4005be5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4302	channel.c	FUNCTION_95
0x4005bee	     0xf85aa010000	                           jne 0x4005d9e	      4302	channel.c	FUNCTION_95
0x4005bf4	        0x4883c428	                           add rsp, 0x28	      4302	channel.c	FUNCTION_95
0x4005bf8	              0x5b	                                 pop rbx	      4302	channel.c	FUNCTION_95
0x4005bf9	              0x5d	                                 pop rbp	      4302	channel.c	FUNCTION_95
0x4005bfa	            0x415c	                                 pop r12	      4302	channel.c	FUNCTION_95
0x4005bfc	            0x415e	                                 pop r14	      4302	channel.c	FUNCTION_95
0x4005bfe	              0xc3	                                     ret	      4302	channel.c	FUNCTION_95
0x4005bff	              0x90	                                     nop	      4302	channel.c	FUNCTION_95
0x4005c00	            0x31c0	                            xor eax, eax	      3278	channel.c	FUNCTION_78	CALL_1
0x4005c02	    0xc7836c040000	          mov dword [rbx + 0x46c], 0x10 	      4239	channel.c	FUNCTION_95	WHILE_1	IF_2
0x4005c0c	      0xbe00000000	                              mov esi, 0	      3278	channel.c	FUNCTION_78	CALL_1
0x4005c11	          0x4889df	                            mov rdi, rbx	      3278	channel.c	FUNCTION_78	CALL_1
0x4005c14	      0xe800000000	                          call 0x4005c19	      3278	channel.c	FUNCTION_78	CALL_1
0x4005c19	    0x488b83780400	           mov rax, qword [rbx + 0x478] 	      3279	channel.c	FUNCTION_78	IF_1
0x4005c20	          0x4885c0	                           test rax, rax	      3279	channel.c	FUNCTION_78	IF_1
0x4005c23	            0x7402	                            je 0x4005c27	      3279	channel.c	FUNCTION_78	IF_1
0x4005c25	            0xffd0	                                call rax	      3280	channel.c	FUNCTION_78	IF_1
0x4005c27	          0x4889df	                            mov rdi, rbx	      3281	channel.c	FUNCTION_78	CALL_2
0x4005c2a	      0xbe01000000	                              mov esi, 1	      3281	channel.c	FUNCTION_78	CALL_2
0x4005c2f	      0xe800000000	                          call 0x4005c34	      3281	channel.c	FUNCTION_78	CALL_2
0x4005c34	    0x488b1d000000	            mov rbx, qword [0x04005c3b] 	      4242	channel.c	FUNCTION_95	WHILE_1	IF_2
0x4005c3b	      0xe901ffffff	                           jmp 0x4005b41	      4243	channel.c	FUNCTION_95	WHILE_1	IF_2
0x4005c40	            0x89e8	                            mov eax, ebp	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x4005c42	          0x4889c2	                            mov rdx, rax	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x4005c45	        0x48c1e008	                              shl rax, 8	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x4005c49	        0x48c1e204	                              shl rdx, 4	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x4005c4d	          0x4801d0	                            add rax, rdx	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x4005c50	          0x4801d8	                            add rax, rbx	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x4005c53	        0x837818ff	cmp dword [rax + 0x18], 0xffffffffffffffff	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x4005c57	            0x7537	                           jne 0x4005c90	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x4005c59	          0x8b4820	            mov ecx, dword [rax + 0x20] 	      2739	channel.c	FUNCTION_64	IF_1
0x4005c5c	          0x8d51fe	                      lea edx, [rcx - 2]	      2739	channel.c	FUNCTION_64	IF_1
0x4005c5f	          0x83fa01	                              cmp edx, 1	      2739	channel.c	FUNCTION_64	IF_1
0x4005c62	     0xf86c8000000	                           jbe 0x4005d30	      2739	channel.c	FUNCTION_64	IF_1
0x4005c68	      0x4883784000	               cmp qword [rax + 0x40], 0	      2746	channel.c	FUNCTION_64	CALL_1
0x4005c6d	           0xf95c0	                                setne al	      2746	channel.c	FUNCTION_64	CALL_1
0x4005c70	           0xfb6c0	                           movzx eax, al	      2746	channel.c	FUNCTION_64	CALL_1
0x4005c73	            0x85c0	                           test eax, eax	      4261	channel.c	FUNCTION_95	WHILE_1	IF_5	CALL_8
0x4005c75	            0x7519	                           jne 0x4005c90	      4261	channel.c	FUNCTION_95	WHILE_1	IF_5	CALL_8
0x4005c77	          0x83fd01	                              cmp ebp, 1	      4284	channel.c	FUNCTION_95	WHILE_1	IF_8
0x4005c7a	     0xf86a8000000	                           jbe 0x4005d28	      4284	channel.c	FUNCTION_95	WHILE_1	IF_8
0x4005c80	          0x488b1b	                    mov rbx, qword [rbx]	      4288	channel.c	FUNCTION_95	WHILE_1	ELSE_1
0x4005c83	            0x31ed	                            xor ebp, ebp	      4289	channel.c	FUNCTION_95	WHILE_1	ELSE_1
0x4005c85	      0xe9b7feffff	                           jmp 0x4005b41	      4289	channel.c	FUNCTION_95	WHILE_1	ELSE_1
0x4005c8a	    0x660f1f440000	                    nop word [rax + rax]	      4289	channel.c	FUNCTION_95	WHILE_1	ELSE_1
0x4005c90	        0x418d7601	                      lea esi, [r14 + 1]	      4265	channel.c	FUNCTION_95	WHILE_1	IF_5
0x4005c94	          0x4889df	                            mov rdi, rbx	      4266	channel.c	FUNCTION_95	WHILE_1	IF_5	CALL_9
0x4005c97	    0x89b3b4040000	            mov dword [rbx + 0x4b4], esi	      4265	channel.c	FUNCTION_95	WHILE_1	IF_5
0x4005c9d	            0x89ee	                            mov esi, ebp	      4266	channel.c	FUNCTION_95	WHILE_1	IF_5	CALL_9
0x4005c9f	      0xe88cdfffff	            call sym.may_invoke_callback	      4266	channel.c	FUNCTION_95	WHILE_1	IF_5	CALL_9
0x4005ca4	          0x83f801	                              cmp eax, 1	      4267	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_6
0x4005ca7	            0x7437	                            je 0x4005ce0	      4267	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_6
0x4005ca9	    0x8b83b4040000	           mov eax, dword [rbx + 0x4b4] 	       419	channel.c	FUNCTION_15	IF_1
0x4005caf	          0x83e801	                              sub eax, 1	       419	channel.c	FUNCTION_15	IF_1
0x4005cb2	            0x85c0	                           test eax, eax	       419	channel.c	FUNCTION_15	IF_1
0x4005cb4	    0x8983b4040000	            mov dword [rbx + 0x4b4], eax	       419	channel.c	FUNCTION_15	IF_1
0x4005cba	            0x7fbb	                            jg 0x4005c77	       419	channel.c	FUNCTION_15	IF_1
0x4005cbc	          0x4889df	                            mov rdi, rbx	       420	channel.c	FUNCTION_15	CALL_1
0x4005cbf	      0xe8acf1ffff	               call sym.channel_may_free	       420	channel.c	FUNCTION_15	CALL_1
0x4005cc4	            0x85c0	                           test eax, eax	      4269	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_10
0x4005cc6	            0x74af	                            je 0x4005c77	      4269	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_10
0x4005cc8	    0x488b1d000000	            mov rbx, qword [0x04005ccf] 	      4279	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x4005ccf	            0x31ed	                            xor ebp, ebp	      4280	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x4005cd1	      0xe9d7feffff	                           jmp 0x4005bad	      4280	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x4005cd6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4280	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x4005ce0	    0x8b83b4040000	           mov eax, dword [rbx + 0x4b4] 	       419	channel.c	FUNCTION_15	IF_1
0x4005ce6	          0x83e801	                              sub eax, 1	       419	channel.c	FUNCTION_15	IF_1
0x4005ce9	            0x85c0	                           test eax, eax	       419	channel.c	FUNCTION_15	IF_1
0x4005ceb	    0x8983b4040000	            mov dword [rbx + 0x4b4], eax	       419	channel.c	FUNCTION_15	IF_1
0x4005cf1	            0x7f6d	                            jg 0x4005d60	       419	channel.c	FUNCTION_15	IF_1
0x4005cf3	          0x4889df	                            mov rdi, rbx	       420	channel.c	FUNCTION_15	CALL_1
0x4005cf6	      0xe875f1ffff	               call sym.channel_may_free	       420	channel.c	FUNCTION_15	CALL_1
0x4005cfb	            0x85c0	                           test eax, eax	      4269	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_10
0x4005cfd	            0x7461	                            je 0x4005d60	      4269	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_10
0x4005cff	    0x41bc01000000	                             mov r12d, 1	      4268	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_6
0x4005d05	    0x488b1d000000	            mov rbx, qword [0x04005d0c] 	      4279	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x4005d0c	            0x31ed	                            xor ebp, ebp	      4280	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x4005d0e	      0xe99afeffff	                           jmp 0x4005bad	      4280	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x4005d13	       0xf1f440000	                   nop dword [rax + rax]	      4280	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x4005d18	          0x4889df	                            mov rdi, rbx	      4280	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x4005d1b	      0xe830f1ffff	           call sym.channel_free.part.12	      4280	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x4005d20	      0xe915feffff	                           jmp 0x4005b3a	      4280	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x4005d25	           0xf1f00	                         nop dword [rax]	      4280	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x4005d28	          0x83c501	                              add ebp, 1	      4285	channel.c	FUNCTION_95	WHILE_1	IF_8
0x4005d2b	      0xe916feffff	                           jmp 0x4005b46	      4285	channel.c	FUNCTION_95	WHILE_1	IF_8
0x4005d30	      0x4883785800	               cmp qword [rax + 0x58], 0	      2744	channel.c	FUNCTION_64	IF_1
0x4005d35	           0xf95c0	                                setne al	      2744	channel.c	FUNCTION_64	IF_1
0x4005d38	           0xfb6c0	                           movzx eax, al	      2744	channel.c	FUNCTION_64	IF_1
0x4005d3b	      0xe933ffffff	                           jmp 0x4005c73	      2744	channel.c	FUNCTION_64	IF_1
0x4005d40	      0xbe00000000	                              mov esi, 0	      4232	channel.c	FUNCTION_95	IF_1	CALL_2
0x4005d45	            0x31ff	                            xor edi, edi	      4232	channel.c	FUNCTION_95	IF_1	CALL_2
0x4005d47	            0x31c0	                            xor eax, eax	      4232	channel.c	FUNCTION_95	IF_1	CALL_2
0x4005d49	      0xe800000000	                          call 0x4005d4e	      4232	channel.c	FUNCTION_95	IF_1	CALL_2
0x4005d4e	    0xc70500000000	               mov dword [0x04005d58], 0	      4233	channel.c	FUNCTION_95	IF_1
0x4005d58	      0xe9a5fdffff	                           jmp 0x4005b02	      4233	channel.c	FUNCTION_95	IF_1
0x4005d5d	           0xf1f00	                         nop dword [rax]	      4233	channel.c	FUNCTION_95	IF_1
0x4005d60	          0x4889e7	                            mov rdi, rsp	      4274	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_11
0x4005d63	    0x41bc01000000	                             mov r12d, 1	      4274	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_11
0x4005d69	      0xe800000000	                          call 0x4005d6e	      4274	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_11
0x4005d6e	        0x4883f863	                           cmp rax, 0x63	      4274	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_11
0x4005d72	     0xf8ffffeffff	                            jg 0x4005c77	      4274	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_11
0x4005d78	      0xe927feffff	                           jmp 0x4005ba4	      4274	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_11
0x4005d7d	           0xf1f00	                         nop dword [rax]	      4274	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_11
0x4005d80	          0x4889df	                            mov rdi, rbx	      4274	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_11
0x4005d83	            0x31ed	                            xor ebp, ebp	      4280	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x4005d85	      0xe8c6f0ffff	           call sym.channel_free.part.12	      4280	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x4005d8a	    0x488b1d000000	            mov rbx, qword [0x04005d91] 	      4279	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x4005d91	      0xe917feffff	                           jmp 0x4005bad	      4279	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x4005d96	          0x4531e4	                          xor r12d, r12d	      4235	channel.c	FUNCTION_95	WHILE_1
0x4005d99	      0xe91afeffff	                           jmp 0x4005bb8	      4235	channel.c	FUNCTION_95	WHILE_1
0x4005d9e	      0xe800000000	                          call 0x4005da3	      4302	channel.c	FUNCTION_95
