op_on_lines	SWITCH,0:IF,0:WHILE,0:DO,0:FOR,0:ELSE,0:CALL,0:functions,0	3
0x4002120	          0x4863ff	                         movsxd rdi, edi	       204	ops.c	FUNCTION_2
0x4002123	     0xfbe847f0000	           movsx eax, byte [rdi + rdi*2]	       204	ops.c	FUNCTION_2
0x400212b	              0xc3	                                     ret	       205	ops.c	FUNCTION_2
do_execreg	SWITCH,0:IF,18:WHILE,0:DO,0:FOR,1:ELSE,4:CALL,28:functions,0	214
0x40078c0	            0x4157	                                push r15	      1211	ops.c	FUNCTION_23
0x40078c2	            0x4156	                                push r14	      1211	ops.c	FUNCTION_23
0x40078c4	          0x4189f6	                           mov r14d, esi	      1211	ops.c	FUNCTION_23
0x40078c7	            0x4155	                                push r13	      1211	ops.c	FUNCTION_23
0x40078c9	            0x4154	                                push r12	      1211	ops.c	FUNCTION_23
0x40078cb	          0x4189cc	                           mov r12d, ecx	      1211	ops.c	FUNCTION_23
0x40078ce	              0x55	                                push rbp	      1211	ops.c	FUNCTION_23
0x40078cf	              0x53	                                push rbx	      1211	ops.c	FUNCTION_23
0x40078d0	            0x89fb	                            mov ebx, edi	      1211	ops.c	FUNCTION_23
0x40078d2	        0x4883ec18	                           sub rsp, 0x18	      1211	ops.c	FUNCTION_23
0x40078d6	          0x83ff40	                           cmp edi, 0x40	      1217	ops.c	FUNCTION_23	IF_1
0x40078d9	        0x8954240c	              mov dword [rsp + 0xc], edx	      1211	ops.c	FUNCTION_23
0x40078dd	     0xf8465010000	                            je 0x4007a48	      1217	ops.c	FUNCTION_23	IF_1
0x40078e3	          0x8d43dd	                   lea eax, [rbx - 0x23]	      1227	ops.c	FUNCTION_23	IF_3	CALL_3
0x40078e6	          0x83e0fd	                     and eax, 0xfffffffd	      1227	ops.c	FUNCTION_23	IF_3	CALL_3
0x40078e9	            0x740d	                            je 0x40078f8	      1227	ops.c	FUNCTION_23	IF_3	CALL_3
0x40078eb	            0x31f6	                            xor esi, esi	      1227	ops.c	FUNCTION_23	IF_3	CALL_3
0x40078ed	            0x89df	                            mov edi, ebx	      1227	ops.c	FUNCTION_23	IF_3	CALL_3
0x40078ef	      0xe800000000	                          call 0x40078f4	      1227	ops.c	FUNCTION_23	IF_3	CALL_3
0x40078f4	            0x85c0	                           test eax, eax	      1227	ops.c	FUNCTION_23	IF_3	CALL_3
0x40078f6	            0x7518	                           jne 0x4007910	      1227	ops.c	FUNCTION_23	IF_3	CALL_3
0x40078f8	            0x89df	                            mov edi, ebx	      1229	ops.c	FUNCTION_23	IF_3	CALL_4
0x40078fa	      0xe800000000	                          call 0x40078ff	      1229	ops.c	FUNCTION_23	IF_3	CALL_4
0x40078ff	            0x31c0	                            xor eax, eax	      1230	ops.c	FUNCTION_23	IF_3
0x4007901	        0x4883c418	                           add rsp, 0x18	      1324	ops.c	FUNCTION_23
0x4007905	              0x5b	                                 pop rbx	      1324	ops.c	FUNCTION_23
0x4007906	              0x5d	                                 pop rbp	      1324	ops.c	FUNCTION_23
0x4007907	            0x415c	                                 pop r12	      1324	ops.c	FUNCTION_23
0x4007909	            0x415d	                                 pop r13	      1324	ops.c	FUNCTION_23
0x400790b	            0x415e	                                 pop r14	      1324	ops.c	FUNCTION_23
0x400790d	            0x415f	                                 pop r15	      1324	ops.c	FUNCTION_23
0x400790f	              0xc3	                                     ret	      1324	ops.c	FUNCTION_23
0x4007910	            0x89df	                            mov edi, ebx	      1235	ops.c	FUNCTION_23	CALL_5
0x4007912	    0x891d00000000	            mov dword [0x04007918], ebx 	      1232	ops.c	FUNCTION_23
0x4007918	      0xe800000000	                          call 0x400791d	      1235	ops.c	FUNCTION_23	CALL_5
0x400791d	          0x83f85f	                           cmp eax, 0x5f	      1238	ops.c	FUNCTION_23	IF_4
0x4007920	     0xf841a020000	                            je 0x4007b40	      1238	ops.c	FUNCTION_23	IF_4
0x4007926	          0x83f83a	                           cmp eax, 0x3a	      1242	ops.c	FUNCTION_23	IF_5
0x4007929	     0xf8471010000	                            je 0x4007aa0	      1242	ops.c	FUNCTION_23	IF_5
0x400792f	          0x83f83d	                           cmp eax, 0x3d	      1266	ops.c	FUNCTION_23	ELSE_2	IF_9
0x4007932	     0xf8458020000	                            je 0x4007b90	      1266	ops.c	FUNCTION_23	ELSE_2	IF_9
0x4007938	          0x83f82e	                           cmp eax, 0x2e	      1275	ops.c	FUNCTION_23	ELSE_3	IF_11
0x400793b	     0xf840f020000	                            je 0x4007b50	      1275	ops.c	FUNCTION_23	ELSE_3	IF_11
0x4007941	            0x31f6	                            xor esi, esi	      1288	ops.c	FUNCTION_23	ELSE_4	CALL_22
0x4007943	            0x89c7	                            mov edi, eax	      1288	ops.c	FUNCTION_23	ELSE_4	CALL_22
0x4007945	      0xe800000000	                          call 0x400794a	      1288	ops.c	FUNCTION_23	ELSE_4	CALL_22
0x400794a	    0x488b05000000	            mov rax, qword [0x04007951] 	      1289	ops.c	FUNCTION_23	ELSE_4	IF_13
0x4007951	        0x48833800	                      cmp qword [rax], 0	      1289	ops.c	FUNCTION_23	ELSE_4	IF_13
0x4007955	     0xf84d5000000	                            je 0x4007a30	      1289	ops.c	FUNCTION_23	ELSE_4	IF_13
0x400795b	            0x31c0	                            xor eax, eax	      1293	ops.c	FUNCTION_23	ELSE_4
0x400795d	          0x4585f6	                         test r14d, r14d	      1293	ops.c	FUNCTION_23	ELSE_4
0x4007960	          0x4489e7	                           mov edi, r12d	      1298	ops.c	FUNCTION_23	ELSE_4	CALL_23
0x4007963	           0xf95c0	                                setne al	      1293	ops.c	FUNCTION_23	ELSE_4
0x4007966	      0xbb01000000	                              mov ebx, 1	      1214	ops.c	FUNCTION_23
0x400796b	            0xf7d8	                                 neg eax	      1293	ops.c	FUNCTION_23	ELSE_4
0x400796d	        0x89442408	                mov dword [rsp + 8], eax	      1293	ops.c	FUNCTION_23	ELSE_4
0x4007971	      0xe86a8bffff	          call sym.put_reedit_in_typebuf	      1298	ops.c	FUNCTION_23	ELSE_4	CALL_23
0x4007976	    0x488b05000000	            mov rax, qword [0x0400797d] 	      1299	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x400797d	        0x488b6808	                mov rbp, qword [rax + 8]	      1299	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x4007981	        0x4883ed01	                              sub rbp, 1	      1299	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x4007985	    0x4c8d2ced0000	                        lea r13, [rbp*8]	      1299	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x400798d	            0xeb09	                           jmp 0x4007998	      1299	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x400798f	              0x90	                                     nop	      1299	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x4007990	        0x4983ed08	                              sub r13, 8	      1299	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x4007994	        0x4883ed01	                              sub rbp, 1	      1299	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x4007998	          0x4885ed	                           test rbp, rbp	      1299	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x400799b	     0xf88d7010000	                            js 0x4007b78	      1299	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x40079a1	    0x488b05000000	            mov rax, qword [0x040079a8] 	      1304	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x40079a8	        0x80781001	                cmp byte [rax + 0x10], 1	      1304	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x40079ac	     0xf84c6000000	                            je 0x4007a78	      1304	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x40079b2	        0x488b4808	                mov rcx, qword [rax + 8]	      1305	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x40079b6	        0x488d51ff	                      lea rdx, [rcx - 1]	      1305	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x40079ba	          0x4839d5	                            cmp rbp, rdx	      1305	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x40079bd	     0xf8cb5000000	                            jl 0x4007a78	      1305	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x40079c3	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      1305	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x40079c7	            0x85d2	                           test edx, edx	      1305	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x40079c9	     0xf85a9000000	                           jne 0x4007a78	      1305	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x40079cf	          0x488b00	                    mov rax, qword [rax]	      1310	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_25
0x40079d2	        0x4a8b3c28	              mov rdi, qword [rax + r13]	      1310	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_25
0x40079d6	      0xe800000000	                          call 0x40079db	      1310	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_25
0x40079db	          0x4885c0	                           test rax, rax	      1311	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_16
0x40079de	          0x4989c7	                            mov r15, rax	      1310	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_25
0x40079e1	            0x744d	                            je 0x4007a30	      1311	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_16
0x40079e3	        0x8b742408	                mov esi, dword [rsp + 8]	      1313	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x40079e7	            0x31d2	                            xor edx, edx	      1313	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x40079e9	          0x4589e0	                           mov r8d, r12d	      1313	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x40079ec	      0xb901000000	                              mov ecx, 1	      1313	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x40079f1	          0x4889c7	                            mov rdi, rax	      1313	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x40079f4	      0xe800000000	                          call 0x40079f9	      1313	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x40079f9	          0x4c89ff	                            mov rdi, r15	      1314	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_27
0x40079fc	            0x89c3	                            mov ebx, eax	      1313	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x40079fe	      0xe800000000	                          call 0x4007a03	      1314	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_27
0x4007a03	            0x85db	                           test ebx, ebx	      1315	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_17
0x4007a05	            0x7429	                            je 0x4007a30	      1315	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_17
0x4007a07	          0x4585f6	                         test r14d, r14d	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4007a0a	            0x7484	                            je 0x4007990	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4007a0c	        0x8b742408	                mov esi, dword [rsp + 8]	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4007a10	            0x31d2	                            xor edx, edx	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4007a12	          0x4589e0	                           mov r8d, r12d	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4007a15	      0xb901000000	                              mov ecx, 1	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4007a1a	      0xbf00000000	                              mov edi, 0	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4007a1f	      0xe800000000	                          call 0x4007a24	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4007a24	            0x85c0	                           test eax, eax	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4007a26	     0xf8564ffffff	                           jne 0x4007990	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4007a2c	         0xf1f4000	                         nop dword [rax]	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4007a30	            0x31c0	                            xor eax, eax	      1281	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12
0x4007a32	        0x4883c418	                           add rsp, 0x18	      1324	ops.c	FUNCTION_23
0x4007a36	              0x5b	                                 pop rbx	      1324	ops.c	FUNCTION_23
0x4007a37	              0x5d	                                 pop rbp	      1324	ops.c	FUNCTION_23
0x4007a38	            0x415c	                                 pop r12	      1324	ops.c	FUNCTION_23
0x4007a3a	            0x415d	                                 pop r13	      1324	ops.c	FUNCTION_23
0x4007a3c	            0x415e	                                 pop r14	      1324	ops.c	FUNCTION_23
0x4007a3e	            0x415f	                                 pop r15	      1324	ops.c	FUNCTION_23
0x4007a40	              0xc3	                                     ret	      1324	ops.c	FUNCTION_23
0x4007a41	     0xf1f80000000	                         nop dword [rax]	      1324	ops.c	FUNCTION_23
0x4007a48	    0x8b1d00000000	            mov ebx, dword [0x04007a4e] 	      1219	ops.c	FUNCTION_23	IF_1	IF_2
0x4007a4e	      0xba05000000	                              mov edx, 5	      1221	ops.c	FUNCTION_23	IF_1	IF_2	CALL_2
0x4007a53	      0xbe00000000	                              mov esi, 0	      1221	ops.c	FUNCTION_23	IF_1	IF_2	CALL_2
0x4007a58	            0x85db	                           test ebx, ebx	      1219	ops.c	FUNCTION_23	IF_1	IF_2
0x4007a5a	     0xf8583feffff	                           jne 0x40078e3	      1219	ops.c	FUNCTION_23	IF_1	IF_2
0x4007a60	            0x31ff	                            xor edi, edi	      1280	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12	CALL_19
0x4007a62	      0xe800000000	                          call 0x4007a67	      1280	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12	CALL_19
0x4007a67	          0x4889c7	                            mov rdi, rax	      1280	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12	CALL_19
0x4007a6a	      0xe800000000	                          call 0x4007a6f	      1280	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12	CALL_19
0x4007a6f	            0x31c0	                            xor eax, eax	      1281	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12
0x4007a71	            0xebbf	                           jmp 0x4007a32	      1281	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12
0x4007a73	       0xf1f440000	                   nop dword [rax + rax]	      1281	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12
0x4007a78	        0x8b742408	                mov esi, dword [rsp + 8]	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4007a7c	            0x31d2	                            xor edx, edx	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4007a7e	          0x4589e0	                           mov r8d, r12d	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4007a81	      0xb901000000	                              mov ecx, 1	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4007a86	      0xbf00000000	                              mov edi, 0	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4007a8b	      0xe800000000	                          call 0x4007a90	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4007a90	            0x85c0	                           test eax, eax	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4007a92	            0x749c	                            je 0x4007a30	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4007a94	    0x488b05000000	            mov rax, qword [0x04007a9b] 	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4007a9b	      0xe92fffffff	                           jmp 0x40079cf	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4007aa0	    0x488b05000000	            mov rax, qword [0x04007aa7] 	      1244	ops.c	FUNCTION_23	IF_5	IF_6
0x4007aa7	      0xba05000000	                              mov edx, 5	      1246	ops.c	FUNCTION_23	IF_5	IF_6	CALL_7
0x4007aac	      0xbe00000000	                              mov esi, 0	      1246	ops.c	FUNCTION_23	IF_5	IF_6	CALL_7
0x4007ab1	          0x4885c0	                           test rax, rax	      1244	ops.c	FUNCTION_23	IF_5	IF_6
0x4007ab4	            0x74aa	                            je 0x4007a60	      1244	ops.c	FUNCTION_23	IF_5	IF_6
0x4007ab6	    0x488b3d000000	            mov rdi, qword [0x04007abd] 	      1249	ops.c	FUNCTION_23	IF_5	CALL_8
0x4007abd	          0x4885ff	                           test rdi, rdi	      1249	ops.c	FUNCTION_23	IF_5	CALL_8
0x4007ac0	            0x7417	                            je 0x4007ad9	      1249	ops.c	FUNCTION_23	IF_5	CALL_8
0x4007ac2	      0xe800000000	                          call 0x4007ac7	      1249	ops.c	FUNCTION_23	IF_5	CALL_8
0x4007ac7	    0x488b05000000	            mov rax, qword [0x04007ace] 	      1249	ops.c	FUNCTION_23	IF_5	CALL_8
0x4007ace	    0x48c705000000	               mov qword [0x04007ad9], 0	      1249	ops.c	FUNCTION_23	IF_5	CALL_8
0x4007ad9	            0x31c9	                            xor ecx, ecx	      1251	ops.c	FUNCTION_23	IF_5	CALL_9
0x4007adb	      0xba16000000	                           mov edx, 0x16	      1251	ops.c	FUNCTION_23	IF_5	CALL_9
0x4007ae0	      0xbe00000000	                              mov esi, 0	      1251	ops.c	FUNCTION_23	IF_5	CALL_9
0x4007ae5	          0x4889c7	                            mov rdi, rax	      1251	ops.c	FUNCTION_23	IF_5	CALL_9
0x4007ae8	      0xe800000000	                          call 0x4007aed	      1251	ops.c	FUNCTION_23	IF_5	CALL_9
0x4007aed	          0x4885c0	                           test rax, rax	      1253	ops.c	FUNCTION_23	IF_5	IF_7
0x4007af0	          0x4889c5	                            mov rbp, rax	      1251	ops.c	FUNCTION_23	IF_5	CALL_9
0x4007af3	     0xf84d2000000	                            je 0x4007bcb	      1253	ops.c	FUNCTION_23	IF_5	IF_7
0x4007af9	    0x8b0d00000000	            mov ecx, dword [0x04007aff] 	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x4007aff	            0x85c9	                           test ecx, ecx	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x4007b01	            0x7415	                            je 0x4007b18	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x4007b03	      0xbf00000000	                              mov edi, 0	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x4007b08	      0xb905000000	                              mov ecx, 5	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x4007b0d	          0x4889c6	                            mov rsi, rax	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x4007b10	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x4007b12	     0xf8496000000	                            je 0x4007bae	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x4007b18	          0x4489e1	                           mov ecx, r12d	      1260	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x4007b1b	      0xba01000000	                              mov edx, 1	      1260	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x4007b20	      0xbe01000000	                              mov esi, 1	      1260	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x4007b25	          0x4889ef	                            mov rdi, rbp	      1260	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x4007b28	      0xe8438affff	                 call sym.put_in_typebuf	      1260	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x4007b2d	            0x89c3	                            mov ebx, eax	      1260	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x4007b2f	          0x4889ef	                            mov rdi, rbp	      1284	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_21
0x4007b32	      0xe800000000	                          call 0x4007b37	      1284	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_21
0x4007b37	            0x89d8	                            mov eax, ebx	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x4007b39	      0xe9c3fdffff	                           jmp 0x4007901	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x4007b3e	            0x6690	                                     nop	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x4007b40	      0xb801000000	                              mov eax, 1	      1239	ops.c	FUNCTION_23	IF_4
0x4007b45	      0xe9b7fdffff	                           jmp 0x4007901	      1239	ops.c	FUNCTION_23	IF_4
0x4007b4a	    0x660f1f440000	                    nop word [rax + rax]	      1239	ops.c	FUNCTION_23	IF_4
0x4007b50	      0xe800000000	                          call 0x4007b55	      1277	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_17
0x4007b55	          0x4885c0	                           test rax, rax	      1278	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12
0x4007b58	          0x4889c5	                            mov rbp, rax	      1277	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_17
0x4007b5b	            0x7478	                            je 0x4007bd5	      1278	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12
0x4007b5d	          0x4489e1	                           mov ecx, r12d	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x4007b60	          0x4489f2	                           mov edx, r14d	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x4007b63	            0x31f6	                            xor esi, esi	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x4007b65	          0x4889ef	                            mov rdi, rbp	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x4007b68	      0xe8038affff	                 call sym.put_in_typebuf	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x4007b6d	            0x89c3	                            mov ebx, eax	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x4007b6f	            0xebbe	                           jmp 0x4007b2f	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x4007b71	     0xf1f80000000	                         nop dword [rax]	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x4007b78	    0xc70500000000	               mov dword [0x04007b82], 1	      1321	ops.c	FUNCTION_23	ELSE_4
0x4007b82	            0x89d8	                            mov eax, ebx	      1321	ops.c	FUNCTION_23	ELSE_4
0x4007b84	      0xe978fdffff	                           jmp 0x4007901	      1321	ops.c	FUNCTION_23	ELSE_4
0x4007b89	     0xf1f80000000	                         nop dword [rax]	      1321	ops.c	FUNCTION_23	ELSE_4
0x4007b90	      0xe800000000	                          call 0x4007b95	      1268	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_14
0x4007b95	          0x4885c0	                           test rax, rax	      1269	ops.c	FUNCTION_23	ELSE_2	IF_9	IF_10
0x4007b98	          0x4889c5	                            mov rbp, rax	      1268	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_14
0x4007b9b	     0xf848ffeffff	                            je 0x4007a30	      1269	ops.c	FUNCTION_23	ELSE_2	IF_9	IF_10
0x4007ba1	          0x4489e1	                           mov ecx, r12d	      1271	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_15
0x4007ba4	          0x4489f2	                           mov edx, r14d	      1271	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_15
0x4007ba7	      0xbe01000000	                              mov esi, 1	      1271	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_15
0x4007bac	            0xebb7	                           jmp 0x4007b65	      1271	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_15
0x4007bae	        0x488d7805	                      lea rdi, [rax + 5]	      1258	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x4007bb2	          0x4489e1	                           mov ecx, r12d	      1258	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x4007bb5	      0xba01000000	                              mov edx, 1	      1258	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x4007bba	      0xbe01000000	                              mov esi, 1	      1258	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x4007bbf	      0xe8ac89ffff	                 call sym.put_in_typebuf	      1258	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x4007bc4	            0x89c3	                            mov ebx, eax	      1258	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x4007bc6	      0xe964ffffff	                           jmp 0x4007b2f	      1258	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x4007bcb	      0xbb01000000	                              mov ebx, 1	      1214	ops.c	FUNCTION_23
0x4007bd0	      0xe95affffff	                           jmp 0x4007b2f	      1214	ops.c	FUNCTION_23
0x4007bd5	      0xba05000000	                              mov edx, 5	      1280	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12	CALL_19
0x4007bda	      0xbe00000000	                              mov esi, 0	      1280	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12	CALL_19
0x4007bdf	      0xe97cfeffff	                           jmp 0x4007a60	      1280	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12	CALL_19
prepare_viminfo_registers	SWITCH,0:IF,0:WHILE,0:DO,0:FOR,0:ELSE,0:CALL,1:functions,0	6
0x4006790	        0x4883ec08	                              sub rsp, 8	      6060	ops.c	FUNCTION_68
0x4006794	      0xbf00050000	                          mov edi, 0x500	      6061	ops.c	FUNCTION_68	CALL_1
0x4006799	      0xe800000000	                          call 0x400679e	      6061	ops.c	FUNCTION_68	CALL_1
0x400679e	    0x488905000000	            mov qword [0x040067a5], rax 	      6061	ops.c	FUNCTION_68	CALL_1
0x40067a5	        0x4883c408	                              add rsp, 8	      6063	ops.c	FUNCTION_68
0x40067a9	              0xc3	                                     ret	      6063	ops.c	FUNCTION_68
put_register	SWITCH,0:IF,0:WHILE,0:DO,0:FOR,0:ELSE,0:CALL,4:functions,0	20
0x40028a0	              0x53	                                push rbx	      1041	ops.c	FUNCTION_18
0x40028a1	          0x4889f3	                            mov rbx, rsi	      1041	ops.c	FUNCTION_18
0x40028a4	            0x31f6	                            xor esi, esi	      1042	ops.c	FUNCTION_18	CALL_1
0x40028a6	      0xe800000000	                          call 0x40028ab	      1042	ops.c	FUNCTION_18	CALL_1
0x40028ab	    0x488b05000000	            mov rax, qword [0x040028b2] 	      3045	ops.c	FUNCTION_44	CALL_1
0x40028b2	        0x488b7808	                mov rdi, qword [rax + 8]	      3045	ops.c	FUNCTION_44	CALL_1
0x40028b6	      0xe825dbffff	                      call sym.free_yank	      3045	ops.c	FUNCTION_44	CALL_1
0x40028bb	          0x488b13	                    mov rdx, qword [rbx]	      1044	ops.c	FUNCTION_18
0x40028be	    0x488b05000000	            mov rax, qword [0x040028c5] 	      1044	ops.c	FUNCTION_18
0x40028c5	          0x4889df	                            mov rdi, rbx	      1045	ops.c	FUNCTION_18	CALL_3
0x40028c8	          0x488910	                    mov qword [rax], rdx	      1044	ops.c	FUNCTION_18
0x40028cb	        0x488b5308	                mov rdx, qword [rbx + 8]	      1044	ops.c	FUNCTION_18
0x40028cf	        0x48895008	                mov qword [rax + 8], rdx	      1044	ops.c	FUNCTION_18
0x40028d3	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1044	ops.c	FUNCTION_18
0x40028d7	        0x48895010	             mov qword [rax + 0x10], rdx	      1044	ops.c	FUNCTION_18
0x40028db	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      1044	ops.c	FUNCTION_18
0x40028df	        0x48895018	             mov qword [rax + 0x18], rdx	      1044	ops.c	FUNCTION_18
0x40028e3	      0xe800000000	                          call 0x40028e8	      1045	ops.c	FUNCTION_18	CALL_3
0x40028e8	              0x5b	                                 pop rbx	      1051	ops.c	FUNCTION_18
0x40028e9	      0xe9b2f6ffff	               jmp sym.may_set_selection	      1049	ops.c	FUNCTION_18	CALL_4
put_in_typebuf	SWITCH,0:IF,6:WHILE,0:DO,0:FOR,0:ELSE,2:CALL,6:functions,0	86
0x4000570	            0x4155	                                push r13	      1365	ops.c	FUNCTION_25
0x4000572	            0x4154	                                push r12	      1365	ops.c	FUNCTION_25
0x4000574	          0x4989fd	                            mov r13, rdi	      1365	ops.c	FUNCTION_25
0x4000577	              0x55	                                push rbp	      1365	ops.c	FUNCTION_25
0x4000578	              0x53	                                push rbx	      1365	ops.c	FUNCTION_25
0x4000579	            0x89d5	                            mov ebp, edx	      1365	ops.c	FUNCTION_25
0x400057b	            0x89cf	                            mov edi, ecx	      1368	ops.c	FUNCTION_25	CALL_1
0x400057d	          0x4189f4	                           mov r12d, esi	      1365	ops.c	FUNCTION_25
0x4000580	            0x89cb	                            mov ebx, ecx	      1365	ops.c	FUNCTION_25
0x4000582	        0x4883ec18	                           sub rsp, 0x18	      1365	ops.c	FUNCTION_25
0x4000586	      0xe855ffffff	          call sym.put_reedit_in_typebuf	      1368	ops.c	FUNCTION_25	CALL_1
0x400058b	            0x85ed	                           test ebp, ebp	      1369	ops.c	FUNCTION_25	IF_1
0x400058d	            0x7561	                           jne 0x40005f0	      1369	ops.c	FUNCTION_25	IF_1
0x400058f	          0x4585e4	                         test r12d, r12d	      1375	ops.c	FUNCTION_25	IF_2	IF_3
0x4000592	     0xf8588000000	                           jne 0x4000620	      1375	ops.c	FUNCTION_25	IF_2	IF_3
0x4000598	          0x4d85ed	                           test r13, r13	      1379	ops.c	FUNCTION_25	IF_2	IF_4
0x400059b	     0xf84cf000000	                            je 0x4000670	      1379	ops.c	FUNCTION_25	IF_2	IF_4
0x40005a1	            0x31d2	                            xor edx, edx	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x40005a3	      0xb901000000	                              mov ecx, 1	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x40005a8	            0x31f6	                            xor esi, esi	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x40005aa	          0x4189d8	                            mov r8d, ebx	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x40005ad	          0x4c89ef	                            mov rdi, r13	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x40005b0	      0xe800000000	                          call 0x40005b5	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x40005b5	          0x83f801	                              cmp eax, 1	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x40005b8	           0xf94c1	                                 sete cl	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x40005bb	            0x85ed	                           test ebp, ebp	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x40005bd	           0xf95c2	                                setne dl	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x40005c0	            0x21d1	                            and ecx, edx	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x40005c2	            0x89cd	                            mov ebp, ecx	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x40005c4	          0x4084ed	                           test bpl, bpl	      1387	ops.c	FUNCTION_25	IF_6
0x40005c7	            0x7445	                            je 0x400060e	      1387	ops.c	FUNCTION_25	IF_6
0x40005c9	        0x4883c418	                           add rsp, 0x18	      1390	ops.c	FUNCTION_25
0x40005cd	          0x4189d8	                            mov r8d, ebx	      1388	ops.c	FUNCTION_25	CALL_6
0x40005d0	      0xb901000000	                              mov ecx, 1	      1388	ops.c	FUNCTION_25	CALL_6
0x40005d5	              0x5b	                                 pop rbx	      1390	ops.c	FUNCTION_25
0x40005d6	              0x5d	                                 pop rbp	      1390	ops.c	FUNCTION_25
0x40005d7	            0x415c	                                 pop r12	      1390	ops.c	FUNCTION_25
0x40005d9	            0x415d	                                 pop r13	      1390	ops.c	FUNCTION_25
0x40005db	            0x31d2	                            xor edx, edx	      1388	ops.c	FUNCTION_25	CALL_6
0x40005dd	      0xbeffffffff	                     mov esi, 0xffffffff	      1388	ops.c	FUNCTION_25	CALL_6
0x40005e2	      0xbf00000000	                              mov edi, 0	      1388	ops.c	FUNCTION_25	CALL_6
0x40005e7	      0xe900000000	                           jmp 0x40005ec	      1388	ops.c	FUNCTION_25	CALL_6
0x40005ec	         0xf1f4000	                         nop dword [rax]	      1388	ops.c	FUNCTION_25	CALL_6
0x40005f0	            0x31d2	                            xor edx, edx	      1370	ops.c	FUNCTION_25	CALL_2
0x40005f2	          0x4189d8	                            mov r8d, ebx	      1370	ops.c	FUNCTION_25	CALL_2
0x40005f5	      0xb901000000	                              mov ecx, 1	      1370	ops.c	FUNCTION_25	CALL_2
0x40005fa	      0xbeffffffff	                     mov esi, 0xffffffff	      1370	ops.c	FUNCTION_25	CALL_2
0x40005ff	      0xbf00000000	                              mov edi, 0	      1370	ops.c	FUNCTION_25	CALL_2
0x4000604	      0xe800000000	                          call 0x4000609	      1370	ops.c	FUNCTION_25	CALL_2
0x4000609	          0x83f801	                              cmp eax, 1	      1371	ops.c	FUNCTION_25	IF_2
0x400060c	            0x7481	                            je 0x400058f	      1371	ops.c	FUNCTION_25	IF_2
0x400060e	        0x4883c418	                           add rsp, 0x18	      1390	ops.c	FUNCTION_25
0x4000612	              0x5b	                                 pop rbx	      1390	ops.c	FUNCTION_25
0x4000613	              0x5d	                                 pop rbp	      1390	ops.c	FUNCTION_25
0x4000614	            0x415c	                                 pop r12	      1390	ops.c	FUNCTION_25
0x4000616	            0x415d	                                 pop r13	      1390	ops.c	FUNCTION_25
0x4000618	              0xc3	                                     ret	      1390	ops.c	FUNCTION_25
0x4000619	     0xf1f80000000	                         nop dword [rax]	      1390	ops.c	FUNCTION_25
0x4000620	          0x4c89ef	                            mov rdi, r13	      1376	ops.c	FUNCTION_25	IF_2	CALL_3
0x4000623	      0xe800000000	                          call 0x4000628	      1376	ops.c	FUNCTION_25	IF_2	CALL_3
0x4000628	          0x4885c0	                           test rax, rax	      1379	ops.c	FUNCTION_25	IF_2	IF_4
0x400062b	          0x4989c4	                            mov r12, rax	      1376	ops.c	FUNCTION_25	IF_2	CALL_3
0x400062e	            0x7448	                            je 0x4000678	      1379	ops.c	FUNCTION_25	IF_2	IF_4
0x4000630	            0x31d2	                            xor edx, edx	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4000632	          0x4189d8	                            mov r8d, ebx	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4000635	      0xb901000000	                              mov ecx, 1	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x400063a	      0xbeffffffff	                     mov esi, 0xffffffff	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x400063f	          0x4889c7	                            mov rdi, rax	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4000642	      0xe800000000	                          call 0x4000647	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4000647	            0x85ed	                           test ebp, ebp	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4000649	        0x400f95c5	                               setne bpl	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x400064d	          0x83f801	                              cmp eax, 1	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4000650	           0xf94c2	                                 sete dl	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4000653	            0x21d5	                            and ebp, edx	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4000655	          0x4c89e7	                            mov rdi, r12	      1385	ops.c	FUNCTION_25	IF_2	CALL_5
0x4000658	        0x8944240c	              mov dword [rsp + 0xc], eax	      1385	ops.c	FUNCTION_25	IF_2	CALL_5
0x400065c	      0xe800000000	                          call 0x4000661	      1385	ops.c	FUNCTION_25	IF_2	CALL_5
0x4000661	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      1385	ops.c	FUNCTION_25	IF_2	CALL_5
0x4000665	      0xe95affffff	                           jmp 0x40005c4	      1385	ops.c	FUNCTION_25	IF_2	CALL_5
0x400066a	    0x660f1f440000	                    nop word [rax + rax]	      1385	ops.c	FUNCTION_25	IF_2	CALL_5
0x4000670	            0x31c0	                            xor eax, eax	      1380	ops.c	FUNCTION_25	IF_2	IF_4
0x4000672	            0xeb9a	                           jmp 0x400060e	      1389	ops.c	FUNCTION_25
0x4000674	         0xf1f4000	                         nop dword [rax]	      1389	ops.c	FUNCTION_25
0x4000678	            0x31ed	                            xor ebp, ebp	      1379	ops.c	FUNCTION_25	IF_2	IF_4
0x400067a	            0x31c0	                            xor eax, eax	      1380	ops.c	FUNCTION_25	IF_2	IF_4
0x400067c	            0xebd7	                           jmp 0x4000655	      1380	ops.c	FUNCTION_25	IF_2	IF_4
clip_get_selection	SWITCH,0:IF,3:WHILE,0:DO,0:FOR,0:ELSE,1:CALL,7:functions,0	135
0x4007410	            0x4157	                                push r15	      6570	ops.c	FUNCTION_75
0x4007412	            0x4156	                                push r14	      6570	ops.c	FUNCTION_75
0x4007414	          0x4889fa	                            mov rdx, rdi	      6570	ops.c	FUNCTION_75
0x4007417	            0x4155	                                push r13	      6570	ops.c	FUNCTION_75
0x4007419	            0x4154	                                push r12	      6570	ops.c	FUNCTION_75
0x400741b	              0x55	                                push rbp	      6570	ops.c	FUNCTION_75
0x400741c	              0x53	                                push rbx	      6570	ops.c	FUNCTION_75
0x400741d	    0x4881ec380100	                          sub rsp, 0x138	      6570	ops.c	FUNCTION_75
0x4007424	    0x64488b042528	                mov rax, qword fs:[0x28]	      6570	ops.c	FUNCTION_75
0x400742d	    0x488984242801	            mov qword [rsp + 0x128], rax	      6570	ops.c	FUNCTION_75
0x4007435	            0x31c0	                            xor eax, eax	      6570	ops.c	FUNCTION_75
0x4007437	          0x8b4704	                mov eax, dword [rdi + 4]	      6581	ops.c	FUNCTION_75	IF_1
0x400743a	            0x85c0	                           test eax, eax	      6581	ops.c	FUNCTION_75	IF_1
0x400743c	     0xf8416020000	                            je 0x4007658	      6581	ops.c	FUNCTION_75	IF_1
0x4007442	    0x4881ff000000	                              cmp rdi, 0	      6583	ops.c	FUNCTION_75	IF_1	IF_2
0x4007449	     0xf8451020000	                            je 0x40076a0	      6583	ops.c	FUNCTION_75	IF_1	IF_2
0x400744f	    0x4881fa000000	                              cmp rdx, 0	      6584	ops.c	FUNCTION_75	IF_1	IF_2
0x4007456	     0xf842c020000	                            je 0x4007688	      6584	ops.c	FUNCTION_75	IF_1	IF_2
0x400745c	    0x488b05000000	            mov rax, qword [0x04007463] 	      6590	ops.c	FUNCTION_75	IF_1
0x4007463	    0x4c8b1d000000	            mov r11, qword [0x0400746a] 	      6588	ops.c	FUNCTION_75	IF_1
0x400746a	      0xb910000000	                           mov ecx, 0x10	        90	string3.h	FUNCTION_95	CALL_6
0x400746f	    0x4c8b15000000	            mov r10, qword [0x04007476] 	      6589	ops.c	FUNCTION_75	IF_1
0x4007476	    0x8b2d00000000	            mov ebp, dword [0x0400747c] 	      6595	ops.c	FUNCTION_75	IF_1
0x400747c	        0x4c8b4838	              mov r9, qword [rax + 0x38]	      6590	ops.c	FUNCTION_75	IF_1
0x4007480	        0x448b7840	           mov r15d, dword [rax + 0x40] 	      6590	ops.c	FUNCTION_75	IF_1
0x4007484	        0x448b7044	           mov r14d, dword [rax + 0x44] 	      6590	ops.c	FUNCTION_75	IF_1
0x4007488	        0x448b6848	           mov r13d, dword [rax + 0x48] 	      6591	ops.c	FUNCTION_75	IF_1
0x400748c	        0x448b604c	           mov r12d, dword [rax + 0x4c] 	      6592	ops.c	FUNCTION_75	IF_1
0x4007490	    0x488b05000000	            mov rax, qword [0x04007497] 	      6593	ops.c	FUNCTION_75	IF_1
0x4007497	      0x4c894c2438	              mov qword [rsp + 0x38], r9	      6590	ops.c	FUNCTION_75	IF_1
0x400749c	      0x4c895c2448	             mov qword [rsp + 0x48], r11	      6588	ops.c	FUNCTION_75	IF_1
0x40074a1	      0x4c89542440	             mov qword [rsp + 0x40], r10	      6589	ops.c	FUNCTION_75	IF_1
0x40074a6	    0x448b1d000000	           mov r11d, dword [0x040074ad] 	      6595	ops.c	FUNCTION_75	IF_1
0x40074ad	    0x448b88081200	          mov r9d, dword [rax + 0x1208] 	      6594	ops.c	FUNCTION_75	IF_1
0x40074b4	    0x488b98e01100	          mov rbx, qword [rax + 0x11e0] 	      6593	ops.c	FUNCTION_75	IF_1
0x40074bb	    0x8bb0e8110000	          mov esi, dword [rax + 0x11e8] 	      6593	ops.c	FUNCTION_75	IF_1
0x40074c1	    0x8bb8ec110000	          mov edi, dword [rax + 0x11ec] 	      6593	ops.c	FUNCTION_75	IF_1
0x40074c7	    0x4c8b80001200	           mov r8, qword [rax + 0x1200] 	      6594	ops.c	FUNCTION_75	IF_1
0x40074ce	    0x8b800c120000	          mov eax, dword [rax + 0x120c] 	      6594	ops.c	FUNCTION_75	IF_1
0x40074d4	    0x4c8b15000000	            mov r10, qword [0x040074db] 	      6595	ops.c	FUNCTION_75	IF_1
0x40074db	      0x44894c2424	             mov dword [rsp + 0x24], r9d	      6594	ops.c	FUNCTION_75	IF_1
0x40074e0	        0x89742434	             mov dword [rsp + 0x34], esi	      6593	ops.c	FUNCTION_75	IF_1
0x40074e4	    0x488db424a000	                   lea rsi, [rsp + 0xa0]	        90	string3.h	FUNCTION_95	CALL_6
0x40074ec	        0x897c2430	             mov dword [rsp + 0x30], edi	      6593	ops.c	FUNCTION_75	IF_1
0x40074f0	        0x89442420	             mov dword [rsp + 0x20], eax	      6594	ops.c	FUNCTION_75	IF_1
0x40074f4	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_95	CALL_6
0x40074f6	    0x4881fa000000	                              cmp rdx, 0	      6598	ops.c	FUNCTION_75	IF_1
0x40074fd	           0xf94c2	                                 sete dl	      6598	ops.c	FUNCTION_75	IF_1
0x4007500	      0x4c89442428	              mov qword [rsp + 0x28], r8	      6594	ops.c	FUNCTION_75	IF_1
0x4007505	      0x4c8d442450	                    lea r8, [rsp + 0x50]	        90	string3.h	FUNCTION_95	CALL_6
0x400750a	          0x4889f7	                            mov rdi, rsi	        90	string3.h	FUNCTION_95	CALL_6
0x400750d	           0xfb6d2	                           movzx edx, dl	      6598	ops.c	FUNCTION_75	IF_1
0x4007510	      0x4c89542410	             mov qword [rsp + 0x10], r10	      6595	ops.c	FUNCTION_75	IF_1
0x4007515	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_95	CALL_6
0x4007518	          0x83c22a	                           add edx, 0x2a	      6598	ops.c	FUNCTION_75	IF_1
0x400751b	          0x4c89c7	                             mov rdi, r8	        90	string3.h	FUNCTION_95	CALL_6
0x400751e	      0xb909000000	                              mov ecx, 9	        90	string3.h	FUNCTION_95	CALL_6
0x4007523	      0x44895c2408	               mov dword [rsp + 8], r11d	      6595	ops.c	FUNCTION_75	IF_1
0x4007528	      0x48895c2418	             mov qword [rsp + 0x18], rbx	      6593	ops.c	FUNCTION_75	IF_1
0x400752d	    0x899424a40000	             mov dword [rsp + 0xa4], edx	      6598	ops.c	FUNCTION_75	IF_1
0x4007534	    0x8b1d00000000	            mov ebx, dword [0x0400753a] 	      6596	ops.c	FUNCTION_75	IF_1
0x400753a	      0xba01000000	                              mov edx, 1	      6605	ops.c	FUNCTION_75	IF_1	CALL_3
0x400753f	    0xc78424a00000	               mov dword [rsp + 0xa0], 2	      6599	ops.c	FUNCTION_75	IF_1
0x400754a	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_95	CALL_6
0x400754d	          0x4c89c7	                             mov rdi, r8	      6605	ops.c	FUNCTION_75	IF_1	CALL_3
0x4007550	      0x4889742450	             mov qword [rsp + 0x50], rsi	      6601	ops.c	FUNCTION_75	IF_1
0x4007555	            0x31f6	                            xor esi, esi	      6605	ops.c	FUNCTION_75	IF_1	CALL_3
0x4007557	    0xc744245c7900	           mov dword [rsp + 0x5c], 0x79 	      6602	ops.c	FUNCTION_75	IF_1
0x400755f	    0x48c784248000	               mov qword [rsp + 0x80], 1	      6603	ops.c	FUNCTION_75	IF_1
0x400756b	    0xc784248c0000	               mov dword [rsp + 0x8c], 2	      6604	ops.c	FUNCTION_75	IF_1
0x4007576	      0xe800000000	                          call 0x400757b	      6605	ops.c	FUNCTION_75	IF_1	CALL_3
0x400757b	    0x488b05000000	            mov rax, qword [0x04007582] 	      6608	ops.c	FUNCTION_75	IF_1
0x4007582	      0x4c8b4c2438	              mov r9, qword [rsp + 0x38]	      6608	ops.c	FUNCTION_75	IF_1
0x4007587	      0x4c8b5c2448	            mov r11, qword [rsp + 0x48] 	      6606	ops.c	FUNCTION_75	IF_1
0x400758c	      0x4c8b542440	            mov r10, qword [rsp + 0x40] 	      6607	ops.c	FUNCTION_75	IF_1
0x4007591	        0x4c894838	              mov qword [rax + 0x38], r9	      6608	ops.c	FUNCTION_75	IF_1
0x4007595	        0x44897840	            mov dword [rax + 0x40], r15d	      6608	ops.c	FUNCTION_75	IF_1
0x4007599	        0x44897044	            mov dword [rax + 0x44], r14d	      6608	ops.c	FUNCTION_75	IF_1
0x400759d	    0x4c891d000000	            mov qword [0x040075a4], r11 	      6606	ops.c	FUNCTION_75	IF_1
0x40075a4	    0x4c8915000000	            mov qword [0x040075ab], r10 	      6607	ops.c	FUNCTION_75	IF_1
0x40075ab	      0xe800000000	                          call 0x40075b0	      6609	ops.c	FUNCTION_75	IF_1	CALL_4
0x40075b0	    0x488b05000000	            mov rax, qword [0x040075b7] 	      6610	ops.c	FUNCTION_75	IF_1
0x40075b7	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      6612	ops.c	FUNCTION_75	IF_1
0x40075bc	        0x8b742434	            mov esi, dword [rsp + 0x34] 	      6612	ops.c	FUNCTION_75	IF_1
0x40075c0	        0x8b7c2430	            mov edi, dword [rsp + 0x30] 	      6612	ops.c	FUNCTION_75	IF_1
0x40075c4	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	      6613	ops.c	FUNCTION_75	IF_1
0x40075c9	      0x448b4c2424	            mov r9d, dword [rsp + 0x24] 	      6613	ops.c	FUNCTION_75	IF_1
0x40075ce	        0x44896848	            mov dword [rax + 0x48], r13d	      6610	ops.c	FUNCTION_75	IF_1
0x40075d2	        0x4489604c	            mov dword [rax + 0x4c], r12d	      6611	ops.c	FUNCTION_75	IF_1
0x40075d6	    0x488b05000000	            mov rax, qword [0x040075dd] 	      6612	ops.c	FUNCTION_75	IF_1
0x40075dd	      0x4c8b542410	            mov r10, qword [rsp + 0x10] 	      6614	ops.c	FUNCTION_75	IF_1
0x40075e2	      0x448b5c2408	               mov r11d, dword [rsp + 8]	      6614	ops.c	FUNCTION_75	IF_1
0x40075e7	    0x892d00000000	            mov dword [0x040075ed], ebp 	      6614	ops.c	FUNCTION_75	IF_1
0x40075ed	    0x891d00000000	            mov dword [0x040075f3], ebx 	      6615	ops.c	FUNCTION_75	IF_1
0x40075f3	    0x488988e01100	          mov qword [rax + 0x11e0], rcx 	      6612	ops.c	FUNCTION_75	IF_1
0x40075fa	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	      6613	ops.c	FUNCTION_75	IF_1
0x40075fe	    0x89b0e8110000	          mov dword [rax + 0x11e8], esi 	      6612	ops.c	FUNCTION_75	IF_1
0x4007604	    0x89b8ec110000	          mov dword [rax + 0x11ec], edi 	      6612	ops.c	FUNCTION_75	IF_1
0x400760a	    0x4c8980001200	           mov qword [rax + 0x1200], r8 	      6613	ops.c	FUNCTION_75	IF_1
0x4007611	    0x448988081200	          mov dword [rax + 0x1208], r9d 	      6613	ops.c	FUNCTION_75	IF_1
0x4007618	    0x89880c120000	          mov dword [rax + 0x120c], ecx 	      6613	ops.c	FUNCTION_75	IF_1
0x400761e	    0x4c8915000000	            mov qword [0x04007625], r10 	      6614	ops.c	FUNCTION_75	IF_1
0x4007625	    0x44891d000000	           mov dword [0x0400762c], r11d 	      6614	ops.c	FUNCTION_75	IF_1
0x400762c	    0x488b84242801	           mov rax, qword [rsp + 0x128] 	      6624	ops.c	FUNCTION_75
0x4007634	    0x644833042528	                xor rax, qword fs:[0x28]	      6624	ops.c	FUNCTION_75
0x400763d	     0xf856c000000	                           jne 0x40076af	      6624	ops.c	FUNCTION_75
0x4007643	    0x4881c4380100	                          add rsp, 0x138	      6624	ops.c	FUNCTION_75
0x400764a	              0x5b	                                 pop rbx	      6624	ops.c	FUNCTION_75
0x400764b	              0x5d	                                 pop rbp	      6624	ops.c	FUNCTION_75
0x400764c	            0x415c	                                 pop r12	      6624	ops.c	FUNCTION_75
0x400764e	            0x415d	                                 pop r13	      6624	ops.c	FUNCTION_75
0x4007650	            0x415e	                                 pop r14	      6624	ops.c	FUNCTION_75
0x4007652	            0x415f	                                 pop r15	      6624	ops.c	FUNCTION_75
0x4007654	              0xc3	                                     ret	      6624	ops.c	FUNCTION_75
0x4007655	           0xf1f00	                         nop dword [rax]	      6624	ops.c	FUNCTION_75
0x4007658	      0x48897c2408	                mov qword [rsp + 8], rdi	      6624	ops.c	FUNCTION_75
0x400765d	      0xe800000000	                          call 0x4007662	      6617	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_5
0x4007662	            0x85c0	                           test eax, eax	      6617	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_5
0x4007664	      0x488b542408	                mov rdx, qword [rsp + 8]	      6617	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_5
0x4007669	            0x75c1	                           jne 0x400762c	      6617	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_5
0x400766b	          0x4889d7	                            mov rdi, rdx	      6619	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_6
0x400766e	      0xe800000000	                          call 0x4007673	      6619	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_6
0x4007673	      0x488b542408	                mov rdx, qword [rsp + 8]	      6622	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_7
0x4007678	          0x4889d7	                            mov rdi, rdx	      6622	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_7
0x400767b	      0xe800000000	                          call 0x4007680	      6622	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_7
0x4007680	            0xebaa	                           jmp 0x400762c	      6622	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_7
0x4007682	    0x660f1f440000	                    nop word [rax + rax]	      6622	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_7
0x4007688	    0x48833d000000	               cmp qword [0x04007690], 0	      6584	ops.c	FUNCTION_75	IF_1	IF_2
0x4007690	            0x759a	                           jne 0x400762c	      6584	ops.c	FUNCTION_75	IF_1	IF_2
0x4007692	      0xe9c5fdffff	                           jmp 0x400745c	      6584	ops.c	FUNCTION_75	IF_1	IF_2
0x4007697	    0x660f1f840000	                    nop word [rax + rax]	      6584	ops.c	FUNCTION_75	IF_1	IF_2
0x40076a0	    0x48833d000000	               cmp qword [0x040076a8], 0	      6583	ops.c	FUNCTION_75	IF_1	IF_2
0x40076a8	            0x7582	                           jne 0x400762c	      6583	ops.c	FUNCTION_75	IF_1	IF_2
0x40076aa	      0xe9a0fdffff	                           jmp 0x400744f	      6583	ops.c	FUNCTION_75	IF_1	IF_2
0x40076af	      0xe800000000	                          call 0x40076b4	      6624	ops.c	FUNCTION_75
get_spec_reg	SWITCH,1:IF,7:WHILE,0:DO,0:FOR,0:ELSE,0:CALL,16:functions,0	149
0x4002bc0	          0x83ff5f	                           cmp edi, 0x5f	      1517	ops.c	FUNCTION_28	SWITCH_1
0x4002bc3	    0x48c706000000	                      mov qword [rsi], 0	      1515	ops.c	FUNCTION_28
0x4002bca	    0xc70200000000	                      mov dword [rdx], 0	      1516	ops.c	FUNCTION_28
0x4002bd0	     0xf872a020000	                            ja 0x4002e00	      1517	ops.c	FUNCTION_28	SWITCH_1
0x4002bd6	            0x89f8	                            mov eax, edi	      1517	ops.c	FUNCTION_28	SWITCH_1
0x4002bd8	            0x4154	                                push r12	      1512	ops.c	FUNCTION_28
0x4002bda	          0x4189cc	                           mov r12d, ecx	      1512	ops.c	FUNCTION_28
0x4002bdd	              0x55	                                push rbp	      1512	ops.c	FUNCTION_28
0x4002bde	          0x4889d5	                            mov rbp, rdx	      1512	ops.c	FUNCTION_28
0x4002be1	              0x53	                                push rbx	      1512	ops.c	FUNCTION_28
0x4002be2	          0x4889f3	                            mov rbx, rsi	      1512	ops.c	FUNCTION_28
0x4002be5	    0xff24c5000000	                       jmp qword [rax*8]	      1517	ops.c	FUNCTION_28	SWITCH_1
0x4002bec	         0xf1f4000	                         nop dword [rax]	      1517	ops.c	FUNCTION_28	SWITCH_1
0x4002bf0	    0x48c706000000	                      mov qword [rsi], 0	      1585	ops.c	FUNCTION_28	SWITCH_1
0x4002bf7	      0xb801000000	                              mov eax, 1	      1586	ops.c	FUNCTION_28	SWITCH_1
0x4002bfc	              0x5b	                                 pop rbx	      1590	ops.c	FUNCTION_28
0x4002bfd	              0x5d	                                 pop rbp	      1590	ops.c	FUNCTION_28
0x4002bfe	            0x415c	                                 pop r12	      1590	ops.c	FUNCTION_28
0x4002c00	              0xc3	                                     ret	      1590	ops.c	FUNCTION_28
0x4002c01	     0xf1f80000000	                         nop dword [rax]	      1590	ops.c	FUNCTION_28
0x4002c08	            0x31c0	                            xor eax, eax	      1559	ops.c	FUNCTION_28	SWITCH_1	IF_5
0x4002c0a	            0x85c9	                           test ecx, ecx	      1568	ops.c	FUNCTION_28	SWITCH_1	IF_6
0x4002c0c	            0x74ee	                            je 0x4002bfc	      1568	ops.c	FUNCTION_28	SWITCH_1	IF_6
0x4002c0e	            0x31f6	                            xor esi, esi	      1570	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x4002c10	          0x83ff17	                           cmp edi, 0x17	      1570	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x4002c13	          0x4889df	                            mov rdi, rbx	      1570	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x4002c16	        0x400f94c6	                                sete sil	      1570	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x4002c1a	          0x83c602	                              add esi, 2	      1570	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x4002c1d	      0xe800000000	                          call 0x4002c22	      1570	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x4002c22	            0x31d2	                            xor edx, edx	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x4002c24	            0x85c0	                           test eax, eax	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x4002c26	     0xf85bc010000	                           jne 0x4002de8	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x4002c2c	          0x488913	                    mov qword [rbx], rdx	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x4002c2f	      0xb801000000	                              mov eax, 1	      1574	ops.c	FUNCTION_28	SWITCH_1
0x4002c34	    0xc74500010000	                      mov dword [rbp], 1	      1573	ops.c	FUNCTION_28	SWITCH_1
0x4002c3b	            0xebbf	                           jmp 0x4002bfc	      1574	ops.c	FUNCTION_28	SWITCH_1
0x4002c3d	           0xf1f00	                         nop dword [rax]	      1574	ops.c	FUNCTION_28	SWITCH_1
0x4002c40	            0x31c0	                            xor eax, eax	      1559	ops.c	FUNCTION_28	SWITCH_1	IF_5
0x4002c42	            0x85c9	                           test ecx, ecx	      1558	ops.c	FUNCTION_28	SWITCH_1	IF_5
0x4002c44	            0x74b6	                            je 0x4002bfc	      1558	ops.c	FUNCTION_28	SWITCH_1	IF_5
0x4002c46	          0x83ff10	                           cmp edi, 0x10	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x4002c49	      0xbe01000000	                              mov esi, 1	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x4002c4e	        0x400f94c7	                                sete dil	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x4002c52	            0x31d2	                            xor edx, edx	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x4002c54	        0x400fb6ff	                          movzx edi, dil	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x4002c58	        0x8d7c3f05	                lea edi, [rdi + rdi + 5]	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x4002c5c	      0xe800000000	                          call 0x4002c61	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x4002c61	          0x488903	                    mov qword [rbx], rax	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x4002c64	    0xc74500010000	                      mov dword [rbp], 1	      1562	ops.c	FUNCTION_28	SWITCH_1
0x4002c6b	      0xb801000000	                              mov eax, 1	      1563	ops.c	FUNCTION_28	SWITCH_1
0x4002c70	            0xeb8a	                           jmp 0x4002bfc	      1563	ops.c	FUNCTION_28	SWITCH_1
0x4002c72	    0x660f1f440000	                    nop word [rax + rax]	      1563	ops.c	FUNCTION_28	SWITCH_1
0x4002c78	      0xe800000000	                          call 0x4002c7d	      1549	ops.c	FUNCTION_28	SWITCH_1	CALL_10
0x4002c7d	          0x4885c0	                           test rax, rax	      1551	ops.c	FUNCTION_28	SWITCH_1	IF_4
0x4002c80	          0x488903	                    mov qword [rbx], rax	      1549	ops.c	FUNCTION_28	SWITCH_1	CALL_10
0x4002c83	    0xc74500010000	                      mov dword [rbp], 1	      1550	ops.c	FUNCTION_28	SWITCH_1
0x4002c8a	            0x7509	                           jne 0x4002c95	      1551	ops.c	FUNCTION_28	SWITCH_1	IF_4
0x4002c8c	          0x4585e4	                         test r12d, r12d	      1551	ops.c	FUNCTION_28	SWITCH_1	IF_4
0x4002c8f	     0xf852b010000	                           jne 0x4002dc0	      1551	ops.c	FUNCTION_28	SWITCH_1	IF_4
0x4002c95	      0xb801000000	                              mov eax, 1	      1553	ops.c	FUNCTION_28	SWITCH_1
0x4002c9a	      0xe95dffffff	                           jmp 0x4002bfc	      1553	ops.c	FUNCTION_28	SWITCH_1
0x4002c9f	              0x90	                                     nop	      1553	ops.c	FUNCTION_28	SWITCH_1
0x4002ca0	      0xe800000000	                          call 0x4002ca5	      1543	ops.c	FUNCTION_28	SWITCH_1	IF_3	CALL_6
0x4002ca5	          0x4885c0	                           test rax, rax	      1543	ops.c	FUNCTION_28	SWITCH_1	IF_3	CALL_6
0x4002ca8	            0x7526	                           jne 0x4002cd0	      1543	ops.c	FUNCTION_28	SWITCH_1	IF_3	CALL_6
0x4002caa	          0x4585e4	                         test r12d, r12d	      1543	ops.c	FUNCTION_28	SWITCH_1	IF_3	CALL_6
0x4002cad	            0x7421	                            je 0x4002cd0	      1543	ops.c	FUNCTION_28	SWITCH_1	IF_3	CALL_6
0x4002caf	            0x31ff	                            xor edi, edi	      1544	ops.c	FUNCTION_28	SWITCH_1	CALL_8
0x4002cb1	      0xba05000000	                              mov edx, 5	      1544	ops.c	FUNCTION_28	SWITCH_1	CALL_8
0x4002cb6	      0xbe00000000	                              mov esi, 0	      1544	ops.c	FUNCTION_28	SWITCH_1	CALL_8
0x4002cbb	      0xe800000000	                          call 0x4002cc0	      1544	ops.c	FUNCTION_28	SWITCH_1	CALL_8
0x4002cc0	          0x4889c7	                            mov rdi, rax	      1544	ops.c	FUNCTION_28	SWITCH_1	CALL_8
0x4002cc3	      0xe800000000	                          call 0x4002cc8	      1544	ops.c	FUNCTION_28	SWITCH_1	CALL_8
0x4002cc8	     0xf1f84000000	                   nop dword [rax + rax]	      1544	ops.c	FUNCTION_28	SWITCH_1	CALL_8
0x4002cd0	      0xe800000000	                          call 0x4002cd5	      1545	ops.c	FUNCTION_28	SWITCH_1	CALL_9
0x4002cd5	          0x488903	                    mov qword [rbx], rax	      1545	ops.c	FUNCTION_28	SWITCH_1	CALL_9
0x4002cd8	      0xb801000000	                              mov eax, 1	      1546	ops.c	FUNCTION_28	SWITCH_1
0x4002cdd	              0x5b	                                 pop rbx	      1590	ops.c	FUNCTION_28
0x4002cde	              0x5d	                                 pop rbp	      1590	ops.c	FUNCTION_28
0x4002cdf	            0x415c	                                 pop r12	      1590	ops.c	FUNCTION_28
0x4002ce1	              0xc3	                                     ret	      1590	ops.c	FUNCTION_28
0x4002ce2	    0x660f1f440000	                    nop word [rax + rax]	      1590	ops.c	FUNCTION_28
0x4002ce8	    0x488b05000000	            mov rax, qword [0x04002cef] 	      1537	ops.c	FUNCTION_28	SWITCH_1	IF_2
0x4002cef	          0x4885c0	                           test rax, rax	      1537	ops.c	FUNCTION_28	SWITCH_1	IF_2
0x4002cf2	            0x75e1	                           jne 0x4002cd5	      1537	ops.c	FUNCTION_28	SWITCH_1	IF_2
0x4002cf4	            0x85c9	                           test ecx, ecx	      1537	ops.c	FUNCTION_28	SWITCH_1	IF_2
0x4002cf6	            0x74dd	                            je 0x4002cd5	      1537	ops.c	FUNCTION_28	SWITCH_1	IF_2
0x4002cf8	      0xba05000000	                              mov edx, 5	      1538	ops.c	FUNCTION_28	SWITCH_1	CALL_5
0x4002cfd	      0xbe00000000	                              mov esi, 0	      1538	ops.c	FUNCTION_28	SWITCH_1	CALL_5
0x4002d02	            0x31ff	                            xor edi, edi	      1538	ops.c	FUNCTION_28	SWITCH_1	CALL_5
0x4002d04	      0xe800000000	                          call 0x4002d09	      1538	ops.c	FUNCTION_28	SWITCH_1	CALL_5
0x4002d09	          0x4889c7	                            mov rdi, rax	      1538	ops.c	FUNCTION_28	SWITCH_1	CALL_5
0x4002d0c	      0xe800000000	                          call 0x4002d11	      1538	ops.c	FUNCTION_28	SWITCH_1	CALL_5
0x4002d11	    0x488b05000000	            mov rax, qword [0x04002d18] 	      1538	ops.c	FUNCTION_28	SWITCH_1	CALL_5
0x4002d18	            0xebbb	                           jmp 0x4002cd5	      1538	ops.c	FUNCTION_28	SWITCH_1	CALL_5
0x4002d1a	    0x660f1f440000	                    nop word [rax + rax]	      1538	ops.c	FUNCTION_28	SWITCH_1	CALL_5
0x4002d20	            0x89cf	                            mov edi, ecx	      1526	ops.c	FUNCTION_28	SWITCH_1	CALL_2
0x4002d22	      0xe800000000	                          call 0x4002d27	      1526	ops.c	FUNCTION_28	SWITCH_1	CALL_2
0x4002d27	          0x488903	                    mov qword [rbx], rax	      1526	ops.c	FUNCTION_28	SWITCH_1	CALL_2
0x4002d2a	      0xb801000000	                              mov eax, 1	      1527	ops.c	FUNCTION_28	SWITCH_1
0x4002d2f	      0xe9c8feffff	                           jmp 0x4002bfc	      1527	ops.c	FUNCTION_28	SWITCH_1
0x4002d34	         0xf1f4000	                         nop dword [rax]	      1527	ops.c	FUNCTION_28	SWITCH_1
0x4002d38	      0xe800000000	                          call 0x4002d3d	      1531	ops.c	FUNCTION_28	SWITCH_1	CALL_3
0x4002d3d	          0x488903	                    mov qword [rbx], rax	      1531	ops.c	FUNCTION_28	SWITCH_1	CALL_3
0x4002d40	    0xc74500010000	                      mov dword [rbp], 1	      1532	ops.c	FUNCTION_28	SWITCH_1
0x4002d47	      0xb801000000	                              mov eax, 1	      1533	ops.c	FUNCTION_28	SWITCH_1
0x4002d4c	      0xe9abfeffff	                           jmp 0x4002bfc	      1533	ops.c	FUNCTION_28	SWITCH_1
0x4002d51	     0xf1f80000000	                         nop dword [rax]	      1533	ops.c	FUNCTION_28	SWITCH_1
0x4002d58	            0x31c0	                            xor eax, eax	      1559	ops.c	FUNCTION_28	SWITCH_1	IF_5
0x4002d5a	            0x85c9	                           test ecx, ecx	      1577	ops.c	FUNCTION_28	SWITCH_1	IF_7
0x4002d5c	     0xf849afeffff	                            je 0x4002bfc	      1577	ops.c	FUNCTION_28	SWITCH_1	IF_7
0x4002d62	    0x488b05000000	            mov rax, qword [0x04002d69] 	      1581	ops.c	FUNCTION_28	SWITCH_1
0x4002d69	            0x31d2	                            xor edx, edx	      1580	ops.c	FUNCTION_28	SWITCH_1	CALL_16
0x4002d6b	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      1580	ops.c	FUNCTION_28	SWITCH_1	CALL_16
0x4002d6f	        0x488b7808	                mov rdi, qword [rax + 8]	      1580	ops.c	FUNCTION_28	SWITCH_1	CALL_16
0x4002d73	      0xe800000000	                          call 0x4002d78	      1580	ops.c	FUNCTION_28	SWITCH_1	CALL_16
0x4002d78	          0x488903	                    mov qword [rbx], rax	      1580	ops.c	FUNCTION_28	SWITCH_1	CALL_16
0x4002d7b	      0xb801000000	                              mov eax, 1	      1582	ops.c	FUNCTION_28	SWITCH_1
0x4002d80	      0xe977feffff	                           jmp 0x4002bfc	      1582	ops.c	FUNCTION_28	SWITCH_1
0x4002d85	           0xf1f00	                         nop dword [rax]	      1582	ops.c	FUNCTION_28	SWITCH_1
0x4002d88	            0x85c9	                           test ecx, ecx	      1520	ops.c	FUNCTION_28	SWITCH_1	IF_1
0x4002d8a	            0x7405	                            je 0x4002d91	      1520	ops.c	FUNCTION_28	SWITCH_1	IF_1
0x4002d8c	      0xe800000000	                          call 0x4002d91	      1521	ops.c	FUNCTION_28	SWITCH_1	CALL_1
0x4002d91	    0x488b05000000	            mov rax, qword [0x04002d98] 	      1522	ops.c	FUNCTION_28	SWITCH_1
0x4002d98	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1522	ops.c	FUNCTION_28	SWITCH_1
0x4002d9f	          0x488903	                    mov qword [rbx], rax	      1522	ops.c	FUNCTION_28	SWITCH_1
0x4002da2	      0xb801000000	                              mov eax, 1	      1523	ops.c	FUNCTION_28	SWITCH_1
0x4002da7	      0xe950feffff	                           jmp 0x4002bfc	      1523	ops.c	FUNCTION_28	SWITCH_1
0x4002dac	         0xf1f4000	                         nop dword [rax]	      1523	ops.c	FUNCTION_28	SWITCH_1
0x4002db0	            0x31c0	                            xor eax, eax	      1589	ops.c	FUNCTION_28
0x4002db2	      0xe945feffff	                           jmp 0x4002bfc	      1589	ops.c	FUNCTION_28
0x4002db7	    0x660f1f840000	                    nop word [rax + rax]	      1589	ops.c	FUNCTION_28
0x4002dc0	      0xba05000000	                              mov edx, 5	      1552	ops.c	FUNCTION_28	SWITCH_1	CALL_12
0x4002dc5	      0xbe00000000	                              mov esi, 0	      1552	ops.c	FUNCTION_28	SWITCH_1	CALL_12
0x4002dca	            0x31ff	                            xor edi, edi	      1552	ops.c	FUNCTION_28	SWITCH_1	CALL_12
0x4002dcc	      0xe800000000	                          call 0x4002dd1	      1552	ops.c	FUNCTION_28	SWITCH_1	CALL_12
0x4002dd1	          0x4889c7	                            mov rdi, rax	      1552	ops.c	FUNCTION_28	SWITCH_1	CALL_12
0x4002dd4	      0xe800000000	                          call 0x4002dd9	      1552	ops.c	FUNCTION_28	SWITCH_1	CALL_12
0x4002dd9	      0xb801000000	                              mov eax, 1	      1553	ops.c	FUNCTION_28	SWITCH_1
0x4002dde	      0xe919feffff	                           jmp 0x4002bfc	      1553	ops.c	FUNCTION_28	SWITCH_1
0x4002de3	       0xf1f440000	                   nop dword [rax + rax]	      1553	ops.c	FUNCTION_28	SWITCH_1
0x4002de8	          0x488b3b	                    mov rdi, qword [rbx]	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x4002deb	            0x89c6	                            mov esi, eax	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x4002ded	      0xe800000000	                          call 0x4002df2	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x4002df2	          0x4889c2	                            mov rdx, rax	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x4002df5	      0xe932feffff	                           jmp 0x4002c2c	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x4002dfa	    0x660f1f440000	                    nop word [rax + rax]	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x4002e00	            0x31c0	                            xor eax, eax	      1589	ops.c	FUNCTION_28
0x4002e02	              0xc3	                                     ret	      1590	ops.c	FUNCTION_28
get_register	SWITCH,0:IF,8:WHILE,0:DO,0:FOR,1:ELSE,2:CALL,10:functions,0	107
0x4007730	            0x4155	                                push r13	       990	ops.c	FUNCTION_17
0x4007732	            0x4154	                                push r12	       990	ops.c	FUNCTION_17
0x4007734	              0x55	                                push rbp	       990	ops.c	FUNCTION_17
0x4007735	              0x53	                                push rbx	       990	ops.c	FUNCTION_17
0x4007736	            0x89f5	                            mov ebp, esi	       990	ops.c	FUNCTION_17
0x4007738	            0x89fb	                            mov ebx, edi	       990	ops.c	FUNCTION_17
0x400773a	        0x4883ec08	                              sub rsp, 8	       990	ops.c	FUNCTION_17
0x400773e	          0x83ff2a	                           cmp edi, 0x2a	       997	ops.c	FUNCTION_17	IF_1
0x4007741	     0xf84c1000000	                            je 0x4007808	       997	ops.c	FUNCTION_17	IF_1
0x4007747	          0x83ff2b	                           cmp edi, 0x2b	      1003	ops.c	FUNCTION_17	IF_3
0x400774a	     0xf8488000000	                            je 0x40077d8	      1003	ops.c	FUNCTION_17	IF_3
0x4007750	            0x31f6	                            xor esi, esi	      1011	ops.c	FUNCTION_17	CALL_7
0x4007752	            0x89df	                            mov edi, ebx	      1011	ops.c	FUNCTION_17	CALL_7
0x4007754	      0xe800000000	                          call 0x4007759	      1011	ops.c	FUNCTION_17	CALL_7
0x4007759	      0xbf20000000	                           mov edi, 0x20	      1012	ops.c	FUNCTION_17	CALL_8
0x400775e	      0xe800000000	                          call 0x4007763	      1012	ops.c	FUNCTION_17	CALL_8
0x4007763	          0x4885c0	                           test rax, rax	      1013	ops.c	FUNCTION_17	IF_5
0x4007766	          0x4989c4	                            mov r12, rax	      1012	ops.c	FUNCTION_17	CALL_8
0x4007769	            0x743e	                            je 0x40077a9	      1013	ops.c	FUNCTION_17	IF_5
0x400776b	    0x488b05000000	            mov rax, qword [0x04007772] 	      1015	ops.c	FUNCTION_17	IF_5
0x4007772	            0x85ed	                           test ebp, ebp	      1016	ops.c	FUNCTION_17	IF_5	IF_6
0x4007774	          0x488b10	                    mov rdx, qword [rax]	      1015	ops.c	FUNCTION_17	IF_5
0x4007777	        0x49891424	                    mov qword [r12], rdx	      1015	ops.c	FUNCTION_17	IF_5
0x400777b	        0x488b7808	                mov rdi, qword [rax + 8]	      1015	ops.c	FUNCTION_17	IF_5
0x400777f	      0x49897c2408	                mov qword [r12 + 8], rdi	      1015	ops.c	FUNCTION_17	IF_5
0x4007784	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1015	ops.c	FUNCTION_17	IF_5
0x4007788	      0x4989542410	             mov qword [r12 + 0x10], rdx	      1015	ops.c	FUNCTION_17	IF_5
0x400778d	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1015	ops.c	FUNCTION_17	IF_5
0x4007791	      0x4989542418	             mov qword [r12 + 0x18], rdx	      1015	ops.c	FUNCTION_17	IF_5
0x4007796	            0x7428	                            je 0x40077c0	      1016	ops.c	FUNCTION_17	IF_5	IF_6
0x4007798	          0x4885ff	                           test rdi, rdi	      1019	ops.c	FUNCTION_17	IF_5	IF_6	IF_7
0x400779b	     0xf858f000000	                           jne 0x4007830	      1019	ops.c	FUNCTION_17	IF_5	IF_6	IF_7
0x40077a1	    0x49c704240000	                      mov qword [r12], 0	      1020	ops.c	FUNCTION_17	IF_5	IF_6	IF_7
0x40077a9	        0x4883c408	                              add rsp, 8	      1034	ops.c	FUNCTION_17
0x40077ad	          0x4c89e0	                            mov rax, r12	      1034	ops.c	FUNCTION_17
0x40077b0	              0x5b	                                 pop rbx	      1034	ops.c	FUNCTION_17
0x40077b1	              0x5d	                                 pop rbp	      1034	ops.c	FUNCTION_17
0x40077b2	            0x415c	                                 pop r12	      1034	ops.c	FUNCTION_17
0x40077b4	            0x415d	                                 pop r13	      1034	ops.c	FUNCTION_17
0x40077b6	              0xc3	                                     ret	      1034	ops.c	FUNCTION_17
0x40077b7	    0x660f1f840000	                    nop word [rax + rax]	      1034	ops.c	FUNCTION_17
0x40077c0	    0x48c700000000	                      mov qword [rax], 0	      1031	ops.c	FUNCTION_17	IF_5	ELSE_2
0x40077c7	        0x4883c408	                              add rsp, 8	      1034	ops.c	FUNCTION_17
0x40077cb	          0x4c89e0	                            mov rax, r12	      1034	ops.c	FUNCTION_17
0x40077ce	              0x5b	                                 pop rbx	      1034	ops.c	FUNCTION_17
0x40077cf	              0x5d	                                 pop rbp	      1034	ops.c	FUNCTION_17
0x40077d0	            0x415c	                                 pop r12	      1034	ops.c	FUNCTION_17
0x40077d2	            0x415d	                                 pop r13	      1034	ops.c	FUNCTION_17
0x40077d4	              0xc3	                                     ret	      1034	ops.c	FUNCTION_17
0x40077d5	           0xf1f00	                         nop dword [rax]	      1034	ops.c	FUNCTION_17
0x40077d8	    0x8b0500000000	            mov eax, dword [0x040077de] 	      1003	ops.c	FUNCTION_17	IF_3
0x40077de	            0x85c0	                           test eax, eax	      1003	ops.c	FUNCTION_17	IF_3
0x40077e0	     0xf846affffff	                            je 0x4007750	      1003	ops.c	FUNCTION_17	IF_3
0x40077e6	      0xe800000000	                          call 0x40077eb	      1005	ops.c	FUNCTION_17	IF_3	IF_4	CALL_4
0x40077eb	            0x85c0	                           test eax, eax	      1005	ops.c	FUNCTION_17	IF_3	IF_4	CALL_4
0x40077ed	     0xf85b9000000	                           jne 0x40078ac	      1005	ops.c	FUNCTION_17	IF_3	IF_4	CALL_4
0x40077f3	      0xbf2b000000	                           mov edi, 0x2b	      1007	ops.c	FUNCTION_17	IF_3	CALL_6
0x40077f8	      0xe800000000	                          call 0x40077fd	      1007	ops.c	FUNCTION_17	IF_3	CALL_6
0x40077fd	      0xe94effffff	                           jmp 0x4007750	      1007	ops.c	FUNCTION_17	IF_3	CALL_6
0x4007802	    0x660f1f440000	                    nop word [rax + rax]	      1007	ops.c	FUNCTION_17	IF_3	CALL_6
0x4007808	    0x8b1500000000	            mov edx, dword [0x0400780e] 	       997	ops.c	FUNCTION_17	IF_1
0x400780e	            0x85d2	                           test edx, edx	       997	ops.c	FUNCTION_17	IF_1
0x4007810	     0xf843affffff	                            je 0x4007750	       997	ops.c	FUNCTION_17	IF_1
0x4007816	      0xe800000000	                          call 0x400781b	       999	ops.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x400781b	            0x85c0	                           test eax, eax	       999	ops.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x400781d	            0x757e	                           jne 0x400789d	       999	ops.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x400781f	      0xbf2a000000	                           mov edi, 0x2a	      1001	ops.c	FUNCTION_17	IF_1	CALL_3
0x4007824	      0xe800000000	                          call 0x4007829	      1001	ops.c	FUNCTION_17	IF_1	CALL_3
0x4007829	      0xe922ffffff	                           jmp 0x4007750	      1001	ops.c	FUNCTION_17	IF_1	CALL_3
0x400782e	            0x6690	                                     nop	      1001	ops.c	FUNCTION_17	IF_1	CALL_3
0x4007830	          0xc1e703	                              shl edi, 3	      1022	ops.c	FUNCTION_17	IF_5	IF_6	ELSE_1	CALL_9
0x4007833	      0xe800000000	                          call 0x4007838	      1022	ops.c	FUNCTION_17	IF_5	IF_6	ELSE_1	CALL_9
0x4007838	          0x4885c0	                           test rax, rax	      1024	ops.c	FUNCTION_17	IF_5	IF_6	IF_8
0x400783b	        0x49890424	                    mov qword [r12], rax	      1022	ops.c	FUNCTION_17	IF_5	IF_6	ELSE_1	CALL_9
0x400783f	     0xf8464ffffff	                            je 0x40077a9	      1024	ops.c	FUNCTION_17	IF_5	IF_6	IF_8
0x4007845	    0x49837c240800	                  cmp qword [r12 + 8], 0	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x400784b	     0xf8e58ffffff	                           jle 0x40077a9	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x4007851	          0x4889c3	                            mov rbx, rax	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x4007854	    0x41bd01000000	                             mov r13d, 1	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x400785a	            0x31ed	                            xor ebp, ebp	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x400785c	            0xeb06	                           jmp 0x4007864	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x400785e	            0x6690	                                     nop	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x4007860	        0x498b1c24	                    mov rbx, qword [r12]	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x4007864	    0x488b05000000	            mov rax, qword [0x0400786b] 	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x400786b	          0x4801eb	                            add rbx, rbp	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x400786e	          0x488b00	                    mov rax, qword [rax]	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x4007871	        0x488b3c28	              mov rdi, qword [rax + rbp]	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x4007875	        0x4883c508	                              add rbp, 8	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x4007879	      0xe800000000	                          call 0x400787e	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x400787e	          0x488903	                    mov qword [rbx], rax	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x4007881	          0x4c89e8	                            mov rax, r13	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x4007884	        0x4983c501	                              add r13, 1	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x4007888	      0x493b442408	                cmp rax, qword [r12 + 8]	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x400788d	            0x7cd1	                            jl 0x4007860	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x400788f	        0x4883c408	                              add rsp, 8	      1034	ops.c	FUNCTION_17
0x4007893	          0x4c89e0	                            mov rax, r12	      1034	ops.c	FUNCTION_17
0x4007896	              0x5b	                                 pop rbx	      1034	ops.c	FUNCTION_17
0x4007897	              0x5d	                                 pop rbp	      1034	ops.c	FUNCTION_17
0x4007898	            0x415c	                                 pop r12	      1034	ops.c	FUNCTION_17
0x400789a	            0x415d	                                 pop r13	      1034	ops.c	FUNCTION_17
0x400789c	              0xc3	                                     ret	      1034	ops.c	FUNCTION_17
0x400789d	      0xbf00000000	                              mov edi, 0	      1000	ops.c	FUNCTION_17	IF_1	CALL_2
0x40078a2	      0xe800000000	                          call 0x40078a7	      1000	ops.c	FUNCTION_17	IF_1	CALL_2
0x40078a7	      0xe973ffffff	                           jmp 0x400781f	      1000	ops.c	FUNCTION_17	IF_1	CALL_2
0x40078ac	      0xbf00000000	                              mov edi, 0	      1006	ops.c	FUNCTION_17	IF_3	CALL_5
0x40078b1	      0xe800000000	                          call 0x40078b6	      1006	ops.c	FUNCTION_17	IF_3	CALL_5
0x40078b6	      0xe938ffffff	                           jmp 0x40077f3	      1006	ops.c	FUNCTION_17	IF_3	CALL_5
op_insert	SWITCH,0:IF,25:WHILE,1:DO,0:FOR,1:ELSE,3:CALL,28:functions,0	517
0x4003ee0	            0x4157	                                push r15	      2611	ops.c	FUNCTION_39
0x4003ee2	            0x4156	                                push r14	      2611	ops.c	FUNCTION_39
0x4003ee4	            0x31d2	                            xor edx, edx	      2620	ops.c	FUNCTION_39
0x4003ee6	            0x4155	                                push r13	      2611	ops.c	FUNCTION_39
0x4003ee8	            0x4154	                                push r12	      2611	ops.c	FUNCTION_39
0x4003eea	              0x55	                                push rbp	      2611	ops.c	FUNCTION_39
0x4003eeb	              0x53	                                push rbx	      2611	ops.c	FUNCTION_39
0x4003eec	          0x4889fb	                            mov rbx, rdi	      2611	ops.c	FUNCTION_39
0x4003eef	          0x4889f5	                            mov rbp, rsi	      2611	ops.c	FUNCTION_39
0x4003ef2	    0x4881ecd80000	                           sub rsp, 0xd8	      2611	ops.c	FUNCTION_39
0x4003ef9	    0x64488b042528	                mov rax, qword fs:[0x28]	      2611	ops.c	FUNCTION_39
0x4003f02	    0x48898424c800	             mov qword [rsp + 0xc8], rax	      2611	ops.c	FUNCTION_39
0x4003f0a	            0x31c0	                            xor eax, eax	      2611	ops.c	FUNCTION_39
0x4003f0c	    0x488b05000000	            mov rax, qword [0x04003f13] 	      2620	ops.c	FUNCTION_39
0x4003f13	    0x817848ffffff	     cmp dword [rax + 0x48], 0x7fffffff 	      2620	ops.c	FUNCTION_39
0x4003f1a	           0xf94c2	                                 sete dl	      2620	ops.c	FUNCTION_39
0x4003f1d	        0x89542468	             mov dword [rsp + 0x68], edx	      2620	ops.c	FUNCTION_39
0x4003f21	        0x488b5720	            mov rdx, qword [rdi + 0x20] 	      2623	ops.c	FUNCTION_39
0x4003f25	      0xbf14000000	                           mov edi, 0x14	      2624	ops.c	FUNCTION_39	CALL_1
0x4003f2a	        0x48895038	             mov qword [rax + 0x38], rdx	      2623	ops.c	FUNCTION_39
0x4003f2e	      0xe800000000	                          call 0x4003f33	      2624	ops.c	FUNCTION_39	CALL_1
0x4003f33	          0x8b7b60	            mov edi, dword [rbx + 0x60] 	      2626	ops.c	FUNCTION_39	IF_1
0x4003f36	            0x85ff	                           test edi, edi	      2626	ops.c	FUNCTION_39	IF_1
0x4003f38	     0xf8402010000	                            je 0x4004040	      2626	ops.c	FUNCTION_39	IF_1
0x4003f3e	    0x488b05000000	            mov rax, qword [0x04003f45] 	      2633	ops.c	FUNCTION_39	IF_1	IF_2
0x4003f45	          0x8b7044	            mov esi, dword [rax + 0x44] 	      2633	ops.c	FUNCTION_39	IF_1	IF_2
0x4003f48	            0x85f6	                           test esi, esi	      2633	ops.c	FUNCTION_39	IF_1	IF_2
0x4003f4a	            0x7e42	                           jle 0x4003f8e	      2633	ops.c	FUNCTION_39	IF_1	IF_2
0x4003f4c	    0x448b25000000	           mov r12d, dword [0x04003f53] 	      2635	ops.c	FUNCTION_39	IF_1	IF_2
0x4003f53	    0xc70500000000	               mov dword [0x04003f5d], 4	      2637	ops.c	FUNCTION_39	IF_1	IF_2
0x4003f5d	      0xe800000000	                          call 0x4003f62	      2638	ops.c	FUNCTION_39	IF_1	IF_2	IF_3	CALL_2
0x4003f62	            0x85c0	                           test eax, eax	      2638	ops.c	FUNCTION_39	IF_1	IF_2	IF_3	CALL_2
0x4003f64	     0xf84ac000000	                            je 0x4004016	      2638	ops.c	FUNCTION_39	IF_1	IF_2	IF_3	CALL_2
0x4003f6a	          0x833b12	                   cmp dword [rbx], 0x12	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4003f6d	     0xf8525030000	                           jne 0x4004298	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4003f73	          0x8b4368	            mov eax, dword [rbx + 0x68] 	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4003f76	          0x8d7801	                      lea edi, [rax + 1]	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4003f79	      0xe800000000	                          call 0x4003f7e	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4003f7e	          0x833b12	                   cmp dword [rbx], 0x12	      2642	ops.c	FUNCTION_39	IF_1	IF_2	IF_4
0x4003f81	     0xf8459030000	                            je 0x40042e0	      2642	ops.c	FUNCTION_39	IF_1	IF_2	IF_4
0x4003f87	    0x448925000000	           mov dword [0x04003f8e], r12d 	      2644	ops.c	FUNCTION_39	IF_1	IF_2
0x4003f8e	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      2648	ops.c	FUNCTION_39	IF_1	CALL_5
0x4003f92	      0x4c8d742440	                   lea r14, [rsp + 0x40]	      2648	ops.c	FUNCTION_39	IF_1	CALL_5
0x4003f97	      0xb901000000	                              mov ecx, 1	      2648	ops.c	FUNCTION_39	IF_1	CALL_5
0x4003f9c	          0x4889df	                            mov rdi, rbx	      2648	ops.c	FUNCTION_39	IF_1	CALL_5
0x4003f9f	          0x4c89f6	                            mov rsi, r14	      2648	ops.c	FUNCTION_39	IF_1	CALL_5
0x4003fa2	      0xe8c9c0ffff	                     call sym.block_prep	      2648	ops.c	FUNCTION_39	IF_1	CALL_5
0x4003fa7	      0xe800000000	                          call 0x4003fac	      2650	ops.c	FUNCTION_39	IF_1	CALL_6
0x4003fac	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2651	ops.c	FUNCTION_39	IF_1	CALL_7
0x4003fb0	          0x4189c5	                           mov r13d, eax	      2650	ops.c	FUNCTION_39	IF_1	CALL_6
0x4003fb3	      0xe800000000	                          call 0x4003fb8	      2651	ops.c	FUNCTION_39	IF_1	CALL_7
0x4003fb8	      0x4863542458	         movsxd rdx, dword [rsp + 0x58] 	      2651	ops.c	FUNCTION_39	IF_1	CALL_7
0x4003fbd	          0x833b12	                   cmp dword [rbx], 0x12	      2653	ops.c	FUNCTION_39	IF_1	IF_5
0x4003fc0	        0x488d3c10	                    lea rdi, [rax + rdx]	      2651	ops.c	FUNCTION_39	IF_1	CALL_7
0x4003fc4	     0xf84d6000000	                            je 0x40040a0	      2653	ops.c	FUNCTION_39	IF_1	IF_5
0x4003fca	      0xe800000000	                          call 0x4003fcf	      2655	ops.c	FUNCTION_39	IF_1	CALL_8
0x4003fcf	          0x4989c4	                            mov r12, rax	      2655	ops.c	FUNCTION_39	IF_1	CALL_8
0x4003fd2	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      2694	ops.c	FUNCTION_39
0x4003fd5	            0x31f6	                            xor esi, esi	      2695	ops.c	FUNCTION_39	CALL_15
0x4003fd7	            0x31ff	                            xor edi, edi	      2695	ops.c	FUNCTION_39	CALL_15
0x4003fd9	          0x4889ea	                            mov rdx, rbp	      2695	ops.c	FUNCTION_39	CALL_15
0x4003fdc	        0x4c8b7b20	            mov r15, qword [rbx + 0x20] 	      2694	ops.c	FUNCTION_39
0x4003fe0	        0x448b7328	           mov r14d, dword [rbx + 0x28] 	      2694	ops.c	FUNCTION_39
0x4003fe4	        0x89442404	                mov dword [rsp + 4], eax	      2694	ops.c	FUNCTION_39
0x4003fe8	      0xe800000000	                          call 0x4003fed	      2695	ops.c	FUNCTION_39	CALL_15
0x4003fed	    0x488b05000000	            mov rax, qword [0x04003ff4] 	      2700	ops.c	FUNCTION_39	IF_11
0x4003ff4	    0x4c39b8f01100	          cmp qword [rax + 0x11f0], r15 	      2700	ops.c	FUNCTION_39	IF_11
0x4003ffb	     0xf84a7020000	                            je 0x40042a8	      2700	ops.c	FUNCTION_39	IF_11
0x4004001	    0x488b05000000	            mov rax, qword [0x04004008] 	      2707	ops.c	FUNCTION_39	IF_12
0x4004008	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      2707	ops.c	FUNCTION_39	IF_12
0x400400c	        0x48397038	            cmp qword [rax + 0x38], rsi 	      2707	ops.c	FUNCTION_39	IF_12
0x4004010	     0xf843a010000	                            je 0x4004150	      2707	ops.c	FUNCTION_39	IF_12
0x4004016	    0x488b8424c800	            mov rax, qword [rsp + 0xc8] 	      2821	ops.c	FUNCTION_39
0x400401e	    0x644833042528	                xor rax, qword fs:[0x28]	      2821	ops.c	FUNCTION_39
0x4004027	     0xf8510070000	                           jne 0x400473d	      2821	ops.c	FUNCTION_39
0x400402d	    0x4881c4d80000	                           add rsp, 0xd8	      2821	ops.c	FUNCTION_39
0x4004034	              0x5b	                                 pop rbx	      2821	ops.c	FUNCTION_39
0x4004035	              0x5d	                                 pop rbp	      2821	ops.c	FUNCTION_39
0x4004036	            0x415c	                                 pop r12	      2821	ops.c	FUNCTION_39
0x4004038	            0x415d	                                 pop r13	      2821	ops.c	FUNCTION_39
0x400403a	            0x415e	                                 pop r14	      2821	ops.c	FUNCTION_39
0x400403c	            0x415f	                                 pop r15	      2821	ops.c	FUNCTION_39
0x400403e	              0xc3	                                     ret	      2821	ops.c	FUNCTION_39
0x400403f	              0x90	                                     nop	      2821	ops.c	FUNCTION_39
0x4004040	          0x4531ed	                          xor r13d, r13d	      2614	ops.c	FUNCTION_39
0x4004043	          0x4531e4	                          xor r12d, r12d	      2612	ops.c	FUNCTION_39
0x4004046	          0x833b12	                   cmp dword [rbx], 0x12	      2658	ops.c	FUNCTION_39	IF_6
0x4004049	    0x488b05000000	            mov rax, qword [0x04004050] 	      2658	ops.c	FUNCTION_39	IF_6
0x4004050	            0x7580	                           jne 0x4003fd2	      2658	ops.c	FUNCTION_39	IF_6
0x4004052	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      2684	ops.c	FUNCTION_39	IF_6	ELSE_1
0x4004056	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	      2684	ops.c	FUNCTION_39	IF_6	ELSE_1
0x400405a	        0x48897038	             mov qword [rax + 0x38], rsi	      2684	ops.c	FUNCTION_39	IF_6	ELSE_1
0x400405e	        0x48897840	             mov qword [rax + 0x40], rdi	      2684	ops.c	FUNCTION_39	IF_6	ELSE_1
0x4004062	      0xe800000000	                          call 0x4004067	      2685	ops.c	FUNCTION_39	IF_6	ELSE_1	CALL_12
0x4004067	    0x488b05000000	            mov rax, qword [0x0400406e] 	      2688	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10	CALL_13
0x400406e	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      2688	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10	CALL_13
0x4004072	      0xe800000000	                          call 0x4004077	      2688	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10	CALL_13
0x4004077	          0x803800	                       cmp byte [rax], 0	      2688	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10	CALL_13
0x400407a	     0xf8452ffffff	                            je 0x4003fd2	      2688	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10	CALL_13
0x4004080	          0x8b4368	            mov eax, dword [rbx + 0x68] 	      2689	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10
0x4004083	          0x394364	            cmp dword [rbx + 0x64], eax 	      2689	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10
0x4004086	     0xf8446ffffff	                            je 0x4003fd2	      2689	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10
0x400408c	      0xe800000000	                          call 0x4004091	      2690	ops.c	FUNCTION_39	IF_6	ELSE_1	CALL_14
0x4004091	      0xe93cffffff	                           jmp 0x4003fd2	      2690	ops.c	FUNCTION_39	IF_6	ELSE_1	CALL_14
0x4004096	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2690	ops.c	FUNCTION_39	IF_6	ELSE_1	CALL_14
0x40040a0	      0x4863442448	         movsxd rax, dword [rsp + 0x48] 	      2655	ops.c	FUNCTION_39	IF_1	CALL_8
0x40040a5	          0x4801c7	                            add rdi, rax	      2655	ops.c	FUNCTION_39	IF_1	CALL_8
0x40040a8	      0xe800000000	                          call 0x40040ad	      2655	ops.c	FUNCTION_39	IF_1	CALL_8
0x40040ad	          0x8b4b60	            mov ecx, dword [rbx + 0x60] 	      2660	ops.c	FUNCTION_39	IF_6	IF_7
0x40040b0	          0x4989c4	                            mov r12, rax	      2655	ops.c	FUNCTION_39	IF_1	CALL_8
0x40040b3	    0x488b05000000	            mov rax, qword [0x040040ba] 	      2662	ops.c	FUNCTION_39	IF_6	IF_7
0x40040ba	            0x85c9	                           test ecx, ecx	      2660	ops.c	FUNCTION_39	IF_6	IF_7
0x40040bc	            0x7494	                            je 0x4004052	      2660	ops.c	FUNCTION_39	IF_6	IF_7
0x40040be	          0x8b5044	            mov edx, dword [rax + 0x44] 	      2662	ops.c	FUNCTION_39	IF_6	IF_7
0x40040c1	            0x85d2	                           test edx, edx	      2662	ops.c	FUNCTION_39	IF_6	IF_7
0x40040c3	            0x758d	                           jne 0x4004052	      2662	ops.c	FUNCTION_39	IF_6	IF_7
0x40040c5	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      2667	ops.c	FUNCTION_39	IF_6	IF_7
0x40040cc	            0xeb1e	                           jmp 0x40040ec	      2668	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1	CALL_9
0x40040ce	            0x6690	                                     nop	      2668	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1	CALL_9
0x40040d0	    0x488b0d000000	            mov rcx, qword [0x040040d7] 	      2669	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x40040d7	        0x8b542448	            mov edx, dword [rsp + 0x48] 	      2669	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x40040db	         0x3542458	             add edx, dword [rsp + 0x58]	      2669	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x40040df	          0x8b4140	            mov eax, dword [rcx + 0x40] 	      2669	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x40040e2	            0x39d0	                            cmp eax, edx	      2669	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x40040e4	            0x7d10	                           jge 0x40040f6	      2669	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x40040e6	          0x83c001	                              add eax, 1	      2670	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x40040e9	          0x894140	             mov dword [rcx + 0x40], eax	      2670	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x40040ec	      0xe800000000	                          call 0x40040f1	      2668	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1	CALL_9
0x40040f1	          0x803800	                       cmp byte [rax], 0	      2668	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1	CALL_9
0x40040f4	            0x75da	                           jne 0x40040d0	      2668	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1	CALL_9
0x40040f6	      0x448b7c2464	           mov r15d, dword [rsp + 0x64] 	      2671	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x40040fb	          0x4585ff	                         test r15d, r15d	      2671	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x40040fe	     0xf84cefeffff	                            je 0x4003fd2	      2671	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x4004104	      0x448b742468	           mov r14d, dword [rsp + 0x68] 	      2671	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x4004109	          0x4585f6	                         test r14d, r14d	      2671	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x400410c	     0xf85c0feffff	                           jne 0x4003fd2	      2671	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x4004112	      0xe800000000	                          call 0x4004117	      2675	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	IF_9	CALL_10
0x4004117	            0x85c0	                           test eax, eax	      2675	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	IF_9	CALL_10
0x4004119	     0xf84f7feffff	                            je 0x4004016	      2675	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	IF_9	CALL_10
0x400411f	        0x8b442444	            mov eax, dword [rsp + 0x44] 	      2677	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x4004123	            0x85c0	                           test eax, eax	      2677	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x4004125	            0x7e20	                           jle 0x4004147	      2677	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x4004127	          0x4531f6	                          xor r14d, r14d	      2677	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x400412a	    0x660f1f440000	                    nop word [rax + rax]	      2677	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x4004130	      0xbf20000000	                           mov edi, 0x20	      2678	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	CALL_11
0x4004135	        0x4183c601	                             add r14d, 1	      2677	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x4004139	      0xe800000000	                          call 0x400413e	      2678	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	CALL_11
0x400413e	        0x8b442444	            mov eax, dword [rsp + 0x44] 	      2677	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x4004142	          0x4439f0	                           cmp eax, r14d	      2677	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x4004145	            0x7fe9	                            jg 0x4004130	      2677	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x4004147	         0x1442448	             add dword [rsp + 0x48], eax	      2679	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x400414b	      0xe982feffff	                           jmp 0x4003fd2	      2679	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x4004150	    0x8b0500000000	            mov eax, dword [0x04004156] 	      2707	ops.c	FUNCTION_39	IF_12
0x4004156	            0x85c0	                           test eax, eax	      2707	ops.c	FUNCTION_39	IF_12
0x4004158	     0xf85b8feffff	                           jne 0x4004016	      2707	ops.c	FUNCTION_39	IF_12
0x400415e	        0x448b5b60	           mov r11d, dword [rbx + 0x60] 	      2710	ops.c	FUNCTION_39	IF_13
0x4004162	          0x4585db	                         test r11d, r11d	      2710	ops.c	FUNCTION_39	IF_13
0x4004165	     0xf84abfeffff	                            je 0x4004016	      2710	ops.c	FUNCTION_39	IF_13
0x400416b	      0xe800000000	                          call 0x4004170	      2719	ops.c	FUNCTION_39	IF_13	CALL_17
0x4004170	    0x488b0d000000	            mov rcx, qword [0x04004177] 	      2720	ops.c	FUNCTION_39	IF_13	IF_14
0x4004177	    0x4439a9e81100	         cmp dword [rcx + 0x11e8], r13d 	      2720	ops.c	FUNCTION_39	IF_13	IF_14
0x400417e	     0xf8e7c010000	                           jle 0x4004300	      2720	ops.c	FUNCTION_39	IF_13	IF_14
0x4004184	          0x4439e8	                           cmp eax, r13d	      2720	ops.c	FUNCTION_39	IF_13	IF_14
0x4004187	     0xf8e73010000	                           jle 0x4004300	      2720	ops.c	FUNCTION_39	IF_13	IF_14
0x400418d	          0x4429e8	                           sub eax, r13d	      2722	ops.c	FUNCTION_39	IF_13	IF_14
0x4004190	         0x1442458	             add dword [rsp + 0x58], eax	      2722	ops.c	FUNCTION_39	IF_13	IF_14
0x4004194	         0x144245c	             add dword [rsp + 0x5c], eax	      2723	ops.c	FUNCTION_39	IF_13	IF_14
0x4004198	      0xb801000000	                              mov eax, 1	      2724	ops.c	FUNCTION_39	IF_13	IF_14
0x400419d	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      2730	ops.c	FUNCTION_39	IF_13	IF_15
0x40041a1	    0x483b91f01100	          cmp rdx, qword [rcx + 0x11f0] 	      2730	ops.c	FUNCTION_39	IF_13	IF_15
0x40041a8	     0xf8459010000	                            je 0x4004307	      2730	ops.c	FUNCTION_39	IF_13	IF_15
0x40041ae	    0x488db4248000	                   lea rsi, [rsp + 0x80]	      2777	ops.c	FUNCTION_39	IF_13	CALL_20
0x40041b6	      0xb901000000	                              mov ecx, 1	      2777	ops.c	FUNCTION_39	IF_13	CALL_20
0x40041bb	          0x4889df	                            mov rdi, rbx	      2777	ops.c	FUNCTION_39	IF_13	CALL_20
0x40041be	      0xe8adbeffff	                     call sym.block_prep	      2777	ops.c	FUNCTION_39	IF_13	CALL_20
0x40041c3	      0x448b542468	           mov r10d, dword [rsp + 0x68] 	      2778	ops.c	FUNCTION_39	IF_13	IF_18
0x40041c8	    0x8b8424880000	            mov eax, dword [rsp + 0x88] 	      2778	ops.c	FUNCTION_39	IF_13	IF_18
0x40041cf	          0x4585d2	                         test r10d, r10d	      2778	ops.c	FUNCTION_39	IF_13	IF_18
0x40041d2	            0x7406	                            je 0x40041da	      2778	ops.c	FUNCTION_39	IF_13	IF_18
0x40041d4	        0x3b442448	            cmp eax, dword [rsp + 0x48] 	      2778	ops.c	FUNCTION_39	IF_13	IF_18
0x40041d8	            0x7d18	                           jge 0x40041f2	      2778	ops.c	FUNCTION_39	IF_13	IF_18
0x40041da	          0x833b12	                   cmp dword [rbx], 0x12	      2780	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x40041dd	     0xf84a6010000	                            je 0x4004389	      2780	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x40041e3	    0x8b9424980000	            mov edx, dword [rsp + 0x98] 	      2786	ops.c	FUNCTION_39	IF_13	IF_18
0x40041ea	        0x89442448	             mov dword [rsp + 0x48], eax	      2787	ops.c	FUNCTION_39	IF_13	IF_18
0x40041ee	        0x89542458	             mov dword [rsp + 0x58], edx	      2786	ops.c	FUNCTION_39	IF_13	IF_18
0x40041f2	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2794	ops.c	FUNCTION_39	IF_13	CALL_21
0x40041f6	      0xe800000000	                          call 0x40041fb	      2794	ops.c	FUNCTION_39	IF_13	CALL_21
0x40041fb	          0x4889c7	                            mov rdi, rax	      2795	ops.c	FUNCTION_39	IF_13	CALL_22
0x40041fe	          0x4889c5	                            mov rbp, rax	      2794	ops.c	FUNCTION_39	IF_13	CALL_21
0x4004201	      0xe800000000	                          call 0x4004206	      2795	ops.c	FUNCTION_39	IF_13	CALL_22
0x4004206	          0x833b12	                   cmp dword [rbx], 0x12	      2797	ops.c	FUNCTION_39	IF_13	IF_21
0x4004209	        0x8b542458	            mov edx, dword [rsp + 0x58] 	      2796	ops.c	FUNCTION_39	IF_13
0x400420d	     0xf846d010000	                            je 0x4004380	      2797	ops.c	FUNCTION_39	IF_13	IF_21
0x4004213	          0x4863d2	                         movsxd rdx, edx	      2799	ops.c	FUNCTION_39	IF_13	IF_22
0x4004216	      0x488d4c0500	                    lea rcx, [rbp + rax]	      2800	ops.c	FUNCTION_39	IF_13	IF_22
0x400421b	          0x4801d5	                            add rbp, rdx	      2800	ops.c	FUNCTION_39	IF_13	IF_22
0x400421e	          0x4839d0	                            cmp rax, rdx	      2800	ops.c	FUNCTION_39	IF_13	IF_22
0x4004221	        0x480f42e9	                          cmovb rbp, rcx	      2800	ops.c	FUNCTION_39	IF_13	IF_22
0x4004225	          0x4d85e4	                           test r12, r12	      2803	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23
0x4004228	     0xf88e8fdffff	                            js 0x4004016	      2803	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23
0x400422e	          0x4889ef	                            mov rdi, rbp	      2804	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_23
0x4004231	      0xe800000000	                          call 0x4004236	      2804	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_23
0x4004236	          0x4c29e0	                            sub rax, r12	      2804	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_23
0x4004239	          0x4885c0	                           test rax, rax	      2804	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_23
0x400423c	          0x4889c6	                            mov rsi, rax	      2804	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_23
0x400423f	     0xf8ed1fdffff	                           jle 0x4004016	      2804	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_23
0x4004245	          0x4889ef	                            mov rdi, rbp	      2806	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_24
0x4004248	      0xe800000000	                          call 0x400424d	      2806	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_24
0x400424d	          0x4885c0	                           test rax, rax	      2807	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24
0x4004250	          0x4989c7	                            mov r15, rax	      2806	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_24
0x4004253	     0xf84bdfdffff	                            je 0x4004016	      2807	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24
0x4004259	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      2810	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_25
0x400425d	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2810	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_25
0x4004261	        0x488d7001	                      lea rsi, [rax + 1]	      2810	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_25
0x4004265	      0xe800000000	                          call 0x400426a	      2810	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_25
0x400426a	          0x83f801	                              cmp eax, 1	      2810	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_25
0x400426d	     0xf848b010000	                            je 0x40043fe	      2810	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_25
0x4004273	          0x8b5328	            mov edx, dword [rbx + 0x28] 	      2815	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24
0x4004276	    0x488b05000000	            mov rax, qword [0x0400427d] 	      2815	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24
0x400427d	          0x895040	             mov dword [rax + 0x40], edx	      2815	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24
0x4004280	      0xe800000000	                          call 0x4004285	      2816	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	CALL_27
0x4004285	          0x4c89ff	                            mov rdi, r15	      2817	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	CALL_28
0x4004288	      0xe800000000	                          call 0x400428d	      2817	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	CALL_28
0x400428d	      0xe984fdffff	                           jmp 0x4004016	      2817	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	CALL_28
0x4004292	    0x660f1f440000	                    nop word [rax + rax]	      2817	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	CALL_28
0x4004298	      0xe800000000	                          call 0x400429d	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x400429d	            0x89c7	                            mov edi, eax	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x400429f	      0xe9d5fcffff	                           jmp 0x4003f79	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x40042a4	         0xf1f4000	                         nop dword [rax]	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x40042a8	    0x4439b0f81100	         cmp dword [rax + 0x11f8], r14d 	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x40042af	            0x743f	                            je 0x40042f0	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x40042b1	           0xf9cc2	                                 setl dl	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x40042b4	            0x84d2	                             test dl, dl	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x40042b6	     0xf8445fdffff	                            je 0x4004001	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x40042bc	    0x488b90f81100	          mov rdx, qword [rax + 0x11f8] 	      2702	ops.c	FUNCTION_39	IF_11
0x40042c3	    0x488b80f01100	          mov rax, qword [rax + 0x11f0] 	      2702	ops.c	FUNCTION_39	IF_11
0x40042ca	        0x48895328	             mov qword [rbx + 0x28], rdx	      2702	ops.c	FUNCTION_39	IF_11
0x40042ce	        0x48894320	             mov qword [rbx + 0x20], rax	      2702	ops.c	FUNCTION_39	IF_11
0x40042d2	      0xe92afdffff	                           jmp 0x4004001	      2702	ops.c	FUNCTION_39	IF_11
0x40042d7	    0x660f1f840000	                    nop word [rax + rax]	      2702	ops.c	FUNCTION_39	IF_11
0x40042e0	    0x488b05000000	            mov rax, qword [0x040042e7] 	      2643	ops.c	FUNCTION_39	IF_1	IF_2	IF_4
0x40042e7	        0x83684001	               sub dword [rax + 0x40], 1	      2643	ops.c	FUNCTION_39	IF_1	IF_2	IF_4
0x40042eb	      0xe997fcffff	                           jmp 0x4003f87	      2643	ops.c	FUNCTION_39	IF_1	IF_2	IF_4
0x40042f0	        0x8b742404	                mov esi, dword [rsp + 4]	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x40042f4	    0x39b0fc110000	          cmp dword [rax + 0x11fc], esi 	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x40042fa	            0xebb5	                           jmp 0x40042b1	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x40042fc	         0xf1f4000	                         nop dword [rax]	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x4004300	            0x31c0	                            xor eax, eax	      2713	ops.c	FUNCTION_39	IF_13
0x4004302	      0xe996feffff	                           jmp 0x400419d	      2713	ops.c	FUNCTION_39	IF_13
0x4004307	         0xb442468	              or eax, dword [rsp + 0x68]	      2731	ops.c	FUNCTION_39	IF_13	IF_15
0x400430b	     0xf859dfeffff	                           jne 0x40041ae	      2731	ops.c	FUNCTION_39	IF_13	IF_15
0x4004311	            0x8b03	                    mov eax, dword [rbx]	      2733	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4004313	          0x83f811	                           cmp eax, 0x11	      2733	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4004316	     0xf8499000000	                            je 0x40043b5	      2733	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x400431c	          0x83f812	                           cmp eax, 0x12	      2750	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x400431f	     0xf8589feffff	                           jne 0x40041ae	      2750	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4004325	    0x8bb9f8110000	          mov edi, dword [rcx + 0x11f8] 	      2755	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x400432b	    0x8bb1fc110000	          mov esi, dword [rcx + 0x11fc] 	      2757	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4004331	          0x8b433c	            mov eax, dword [rbx + 0x3c] 	      2751	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4004334	           0x34338	             add eax, dword [rbx + 0x38]	      2751	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4004337	          0x8d0c37	                    lea ecx, [rdi + rsi]	      2751	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x400433a	            0x39c8	                            cmp eax, ecx	      2751	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x400433c	     0xf8c6cfeffff	                            jl 0x40041ae	      2751	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4004342	      0xe800000000	                          call 0x4004347	      2761	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17	CALL_19
0x4004347	    0x488b15000000	            mov rdx, qword [0x0400434e] 	      2763	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x400434e	    0x8b92f8110000	          mov edx, dword [rdx + 0x11f8] 	      2763	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4004354	    0xc70311000000	                   mov dword [rbx], 0x11	      2768	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x400435a	          0x895328	             mov dword [rbx + 0x28], edx	      2763	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x400435d	      0x4863542448	         movsxd rdx, dword [rsp + 0x48] 	      2765	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4004362	          0x4901d4	                            add r12, rdx	      2765	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4004365	            0x89c2	                            mov edx, eax	      2766	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4004367	          0x2b5364	             sub edx, dword [rbx + 0x64]	      2766	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x400436a	          0x894364	             mov dword [rbx + 0x64], eax	      2767	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x400436d	          0x4863d2	                         movsxd rdx, edx	      2766	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4004370	          0x4929d4	                            sub r12, rdx	      2766	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4004373	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      2766	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4004377	      0xe932feffff	                           jmp 0x40041ae	      2766	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x400437c	         0xf1f4000	                         nop dword [rax]	      2766	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4004380	         0x3542448	             add edx, dword [rsp + 0x48]	      2798	ops.c	FUNCTION_39	IF_13	IF_21
0x4004384	      0xe98afeffff	                           jmp 0x4004213	      2798	ops.c	FUNCTION_39	IF_13	IF_21
0x4004389	            0x89c2	                            mov edx, eax	      2782	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x400438b	        0x2b542448	             sub edx, dword [rsp + 0x48]	      2782	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x400438f	    0x448b8c248400	            mov r9d, dword [rsp + 0x84] 	      2783	ops.c	FUNCTION_39	IF_13	IF_18	IF_19	IF_20
0x4004397	          0x4863d2	                         movsxd rdx, edx	      2782	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x400439a	          0x4901d4	                            add r12, rdx	      2782	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x400439d	          0x4585c9	                           test r9d, r9d	      2783	ops.c	FUNCTION_39	IF_13	IF_18	IF_19	IF_20
0x40043a0	     0xf843dfeffff	                            je 0x40041e3	      2783	ops.c	FUNCTION_39	IF_13	IF_18	IF_19	IF_20
0x40043a6	          0x83e801	                              sub eax, 1	      2784	ops.c	FUNCTION_39	IF_13	IF_18	IF_19	IF_20
0x40043a9	    0x898424880000	             mov dword [rsp + 0x88], eax	      2784	ops.c	FUNCTION_39	IF_13	IF_18	IF_19	IF_20
0x40043b0	      0xe92efeffff	                           jmp 0x40041e3	      2784	ops.c	FUNCTION_39	IF_13	IF_18	IF_19	IF_20
0x40043b5	    0x8bb9f8110000	          mov edi, dword [rcx + 0x11f8] 	      2738	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x40043bb	    0x8bb1fc110000	          mov esi, dword [rcx + 0x11fc] 	      2740	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x40043c1	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      2734	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x40043c4	           0x34328	             add eax, dword [rbx + 0x28]	      2734	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x40043c7	          0x8d0c37	                    lea ecx, [rdi + rsi]	      2734	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x40043ca	            0x39c8	                            cmp eax, ecx	      2734	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x40043cc	     0xf84dcfdffff	                            je 0x40041ae	      2734	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x40043d2	      0xe800000000	                          call 0x40043d7	      2744	ops.c	FUNCTION_39	IF_13	IF_15	IF_16	CALL_18
0x40043d7	    0x488b15000000	            mov rdx, qword [0x040043de] 	      2746	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x40043de	    0x8b92f8110000	          mov edx, dword [rdx + 0x11f8] 	      2746	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x40043e4	          0x895328	             mov dword [rbx + 0x28], edx	      2746	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x40043e7	            0x89c2	                            mov edx, eax	      2747	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x40043e9	          0x2b5364	             sub edx, dword [rbx + 0x64]	      2747	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x40043ec	          0x894364	             mov dword [rbx + 0x64], eax	      2748	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x40043ef	          0x4863d2	                         movsxd rdx, edx	      2747	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x40043f2	          0x4929d4	                            sub r12, rdx	      2747	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x40043f5	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      2747	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x40043f9	      0xe9b0fdffff	                           jmp 0x40041ae	      2743	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x40043fe	            0x8b03	                    mov eax, dword [rbx]	      2812	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_26
0x4004400	          0x4c89ff	                            mov rdi, r15	       592	ops.c	FUNCTION_8	CALL_1
0x4004403	        0x8944240c	              mov dword [rsp + 0xc], eax	      2812	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_26
0x4004407	    0x8b0500000000	            mov eax, dword [0x0400440d] 	       589	ops.c	FUNCTION_8
0x400440d	    0xc70500000000	           mov dword [0x04004417], 0x10 	       591	ops.c	FUNCTION_8
0x4004417	        0x8944243c	             mov dword [rsp + 0x3c], eax	       589	ops.c	FUNCTION_8
0x400441b	      0xe800000000	                          call 0x4004420	       592	ops.c	FUNCTION_8	CALL_1
0x4004420	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	       594	ops.c	FUNCTION_8	FOR_1
0x4004424	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	       594	ops.c	FUNCTION_8	FOR_1
0x4004428	            0x89c6	                            mov esi, eax	       592	ops.c	FUNCTION_8	CALL_1
0x400442a	        0x89442438	             mov dword [rsp + 0x38], eax	       592	ops.c	FUNCTION_8	CALL_1
0x400442e	        0x4c8d6101	                      lea r12, [rcx + 1]	       594	ops.c	FUNCTION_8	FOR_1
0x4004432	          0x4939d4	                            cmp r12, rdx	       594	ops.c	FUNCTION_8	FOR_1
0x4004435	     0xf8fab020000	                            jg 0x40046e6	       594	ops.c	FUNCTION_8	FOR_1
0x400443b	      0x4c8d742440	                   lea r14, [rsp + 0x40]	       594	ops.c	FUNCTION_8	FOR_1
0x4004440	            0x31c9	                            xor ecx, ecx	       594	ops.c	FUNCTION_8	FOR_1
0x4004442	          0x83c601	                              add esi, 1	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x4004445	            0x89c0	                            mov eax, eax	        59	string3.h	FUNCTION_93	CALL_3
0x4004447	    0xc74424040000	                  mov dword [rsp + 4], 0	       594	ops.c	FUNCTION_8	FOR_1
0x400444f	        0x89742424	             mov dword [rsp + 0x24], esi	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x4004453	      0x4c89742410	             mov qword [rsp + 0x10], r14	        59	string3.h	FUNCTION_93	CALL_3
0x4004458	      0x4889442430	             mov qword [rsp + 0x30], rax	        59	string3.h	FUNCTION_93	CALL_3
0x400445d	          0x4189ce	                           mov r14d, ecx	        59	string3.h	FUNCTION_93	CALL_3
0x4004460	      0x4c897c2428	             mov qword [rsp + 0x28], r15	        59	string3.h	FUNCTION_93	CALL_3
0x4004465	      0xe97b010000	                           jmp 0x40045e5	        59	string3.h	FUNCTION_93	CALL_3
0x400446a	          0x4c89e7	                            mov rdi, r12	       600	ops.c	FUNCTION_8	FOR_1	CALL_3
0x400446d	      0xe800000000	                          call 0x4004472	       600	ops.c	FUNCTION_8	FOR_1	CALL_3
0x4004472	          0x4889c5	                            mov rbp, rax	       600	ops.c	FUNCTION_8	FOR_1	CALL_3
0x4004475	        0x8b742464	            mov esi, dword [rsp + 0x64] 	       613	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4004479	        0x8b442478	            mov eax, dword [rsp + 0x78] 	       612	ops.c	FUNCTION_8	FOR_1	ELSE_1
0x400447d	            0x85f6	                           test esi, esi	       613	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x400447f	        0x89442420	             mov dword [rsp + 0x20], eax	       612	ops.c	FUNCTION_8	FOR_1	ELSE_1
0x4004483	     0xf8503020000	                           jne 0x400468c	       613	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4004489	        0x8b542444	            mov edx, dword [rsp + 0x44] 	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x400448d	            0x85d2	                           test edx, edx	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x400448f	     0xf8471020000	                            je 0x4004706	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4004495	          0x4189c6	                           mov r14d, eax	       616	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0x4004498	          0x4129d6	                           sub r14d, edx	       616	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0x400449b	     0xf84a1020000	                            je 0x4004742	       616	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0x40044a1	          0x83e801	                              sub eax, 1	       617	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0x40044a4	          0x4585f6	                         test r14d, r14d	       617	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0x40044a7	      0xba01000000	                              mov edx, 1	       617	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0x40044ac	        0x89442404	                mov dword [rsp + 4], eax	       617	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0x40044b0	           0xf9fc0	                                 setg al	       617	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0x40044b3	      0x448b6c2448	           mov r13d, dword [rsp + 0x48] 	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x40044b8	      0x44036c2458	            add r13d, dword [rsp + 0x58]	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x40044bd	          0x4129d5	                           sub r13d, edx	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x40044c0	      0x44896c2408	               mov dword [rsp + 8], r13d	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x40044c5	    0x8b1500000000	            mov edx, dword [0x040044cb] 	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x40044cb	            0x85d2	                           test edx, edx	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x40044cd	            0x7432	                            je 0x4004501	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x40044cf	            0x84c0	                             test al, al	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x40044d1	            0x742e	                            je 0x4004501	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x40044d3	      0x837c240c11	            cmp dword [rsp + 0xc], 0x11 	       636	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x40044d8	     0xf8485010000	                            je 0x4004663	       636	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x40044de	      0x448b7c2408	               mov r15d, dword [rsp + 8]	       642	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x40044e3	          0x4889ef	                            mov rdi, rbp	       642	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x40044e6	          0x4963f7	                        movsxd rsi, r15d	       642	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x40044e9	          0x4801ee	                            add rsi, rbp	       642	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x40044ec	      0xe800000000	                          call 0x40044f1	       642	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x40044f1	          0x4489fe	                           mov esi, r15d	       643	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x40044f4	             0x1c6	                            add esi, eax	       643	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x40044f6	        0x89742408	                mov dword [rsp + 8], esi	       643	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x40044fa	        0x29442404	                sub dword [rsp + 4], eax	       646	ops.c	FUNCTION_8	FOR_1	IF_7
0x40044fe	          0x4129c6	                           sub r14d, eax	       645	ops.c	FUNCTION_8	FOR_1	IF_7
0x4004501	          0x4889ef	                            mov rdi, rbp	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x4004504	      0xe800000000	                          call 0x4004509	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x4004509	        0x8b742424	            mov esi, dword [rsp + 0x24] 	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x400450d	          0x8d3c06	                    lea edi, [rsi + rax]	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x4004510	         0x37c2404	                add edi, dword [rsp + 4]	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x4004514	      0xe800000000	                          call 0x4004519	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x4004519	          0x4885c0	                           test rax, rax	       651	ops.c	FUNCTION_8	FOR_1	IF_9
0x400451c	          0x4989c7	                            mov r15, rax	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x400451f	     0xf84ea000000	                            je 0x400460f	       651	ops.c	FUNCTION_8	FOR_1	IF_9
0x4004525	      0x4c636c2408	            movsxd r13, dword [rsp + 8] 	       655	ops.c	FUNCTION_8	FOR_1	CALL_6
0x400452a	          0x4889ee	                            mov rsi, rbp	        59	string3.h	FUNCTION_93	CALL_3
0x400452d	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_93	CALL_3
0x4004530	          0x4c89ea	                            mov rdx, r13	        59	string3.h	FUNCTION_93	CALL_3
0x4004533	      0xe800000000	                          call 0x4004538	        59	string3.h	FUNCTION_93	CALL_3
0x4004538	      0x4a8d742d00	                    lea rsi, [rbp + r13]	       656	ops.c	FUNCTION_8	FOR_1
0x400453d	        0x4b8d3c2f	                    lea rdi, [r15 + r13]	        90	string3.h	FUNCTION_95	CALL_6
0x4004541	          0x4963ee	                        movsxd rbp, r14d	       659	ops.c	FUNCTION_8	FOR_1	CALL_7
0x4004544	          0x4889ea	                            mov rdx, rbp	        90	string3.h	FUNCTION_95	CALL_6
0x4004547	      0x4889742418	             mov qword [rsp + 0x18], rsi	       656	ops.c	FUNCTION_8	FOR_1
0x400454c	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x4004551	      0xe800000000	                          call 0x4004556	        90	string3.h	FUNCTION_95	CALL_6
0x4004556	      0x498d4c2d00	                    lea rcx, [r13 + rbp]	        59	string3.h	FUNCTION_93	CALL_3
0x400455b	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	        59	string3.h	FUNCTION_93	CALL_3
0x4004560	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	        59	string3.h	FUNCTION_93	CALL_3
0x4004565	        0x498d3c0f	                    lea rdi, [r15 + rcx]	        59	string3.h	FUNCTION_93	CALL_3
0x4004569	      0xe800000000	                          call 0x400456e	        59	string3.h	FUNCTION_93	CALL_3
0x400456e	      0x448b6c2408	               mov r13d, dword [rsp + 8]	       663	ops.c	FUNCTION_8	FOR_1
0x4004573	      0x44036c2438	            add r13d, dword [rsp + 0x38]	       663	ops.c	FUNCTION_8	FOR_1
0x4004578	          0x4585f6	                         test r14d, r14d	       665	ops.c	FUNCTION_8	FOR_1	IF_10
0x400457b	      0x44896c2408	               mov dword [rsp + 8], r13d	       663	ops.c	FUNCTION_8	FOR_1
0x4004580	            0x741b	                            je 0x400459d	       665	ops.c	FUNCTION_8	FOR_1	IF_10
0x4004582	        0x8b442464	            mov eax, dword [rsp + 0x64] 	       665	ops.c	FUNCTION_8	FOR_1	IF_10
0x4004586	            0x85c0	                           test eax, eax	       665	ops.c	FUNCTION_8	FOR_1	IF_10
0x4004588	     0xf8482010000	                            je 0x4004710	       665	ops.c	FUNCTION_8	FOR_1	IF_10
0x400458e	          0x4585f6	                         test r14d, r14d	       675	ops.c	FUNCTION_8	FOR_1	IF_11
0x4004591	            0x7e0a	                           jle 0x400459d	       675	ops.c	FUNCTION_8	FOR_1	IF_11
0x4004593	      0x44036c2404	               add r13d, dword [rsp + 4]	       676	ops.c	FUNCTION_8	FOR_1	IF_11
0x4004598	      0x44896c2408	               mov dword [rsp + 8], r13d	       676	ops.c	FUNCTION_8	FOR_1	IF_11
0x400459d	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0x40045a2	          0x4889ef	                            mov rdi, rbp	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0x40045a5	      0xe800000000	                          call 0x40045aa	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0x40045aa	      0x48637c2408	            movsxd rdi, dword [rsp + 8] 	        59	string3.h	FUNCTION_93	CALL_3
0x40045af	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_93	CALL_3
0x40045b3	          0x4889ee	                            mov rsi, rbp	        59	string3.h	FUNCTION_93	CALL_3
0x40045b6	          0x4c01ff	                            add rdi, r15	        59	string3.h	FUNCTION_93	CALL_3
0x40045b9	      0xe800000000	                          call 0x40045be	        59	string3.h	FUNCTION_93	CALL_3
0x40045be	            0x31d2	                            xor edx, edx	       679	ops.c	FUNCTION_8	FOR_1	CALL_11
0x40045c0	          0x4c89fe	                            mov rsi, r15	       679	ops.c	FUNCTION_8	FOR_1	CALL_11
0x40045c3	          0x4c89e7	                            mov rdi, r12	       679	ops.c	FUNCTION_8	FOR_1	CALL_11
0x40045c6	      0xe800000000	                          call 0x40045cb	       679	ops.c	FUNCTION_8	FOR_1	CALL_11
0x40045cb	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	       681	ops.c	FUNCTION_8	FOR_1	IF_12
0x40045cf	          0x4939d4	                            cmp r12, rdx	       681	ops.c	FUNCTION_8	FOR_1	IF_12
0x40045d2	     0xf84e8000000	                            je 0x40046c0	       681	ops.c	FUNCTION_8	FOR_1	IF_12
0x40045d8	        0x4983c401	                              add r12, 1	       594	ops.c	FUNCTION_8	FOR_1
0x40045dc	          0x4939d4	                            cmp r12, rdx	       594	ops.c	FUNCTION_8	FOR_1
0x40045df	     0xf8ff8000000	                            jg 0x40046dd	       594	ops.c	FUNCTION_8	FOR_1
0x40045e5	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       596	ops.c	FUNCTION_8	FOR_1	CALL_2
0x40045ea	      0xb901000000	                              mov ecx, 1	       596	ops.c	FUNCTION_8	FOR_1	CALL_2
0x40045ef	          0x4c89e2	                            mov rdx, r12	       596	ops.c	FUNCTION_8	FOR_1	CALL_2
0x40045f2	          0x4889df	                            mov rdi, rbx	       596	ops.c	FUNCTION_8	FOR_1	CALL_2
0x40045f5	      0xe876baffff	                     call sym.block_prep	       596	ops.c	FUNCTION_8	FOR_1	CALL_2
0x40045fa	      0x448b442464	            mov r8d, dword [rsp + 0x64] 	       597	ops.c	FUNCTION_8	FOR_1	IF_1
0x40045ff	          0x4585c0	                           test r8d, r8d	       597	ops.c	FUNCTION_8	FOR_1	IF_1
0x4004602	            0x7411	                            je 0x4004615	       597	ops.c	FUNCTION_8	FOR_1	IF_1
0x4004604	      0x837c240c11	            cmp dword [rsp + 0xc], 0x11 	       597	ops.c	FUNCTION_8	FOR_1	IF_1
0x4004609	     0xf855bfeffff	                           jne 0x400446a	       597	ops.c	FUNCTION_8	FOR_1	IF_1
0x400460f	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	       597	ops.c	FUNCTION_8	FOR_1	IF_1
0x4004613	            0xebc3	                           jmp 0x40045d8	       597	ops.c	FUNCTION_8	FOR_1	IF_1
0x4004615	          0x4c89e7	                            mov rdi, r12	       600	ops.c	FUNCTION_8	FOR_1	CALL_3
0x4004618	      0xe800000000	                          call 0x400461d	       600	ops.c	FUNCTION_8	FOR_1	CALL_3
0x400461d	      0x837c240c11	            cmp dword [rsp + 0xc], 0x11 	       602	ops.c	FUNCTION_8	FOR_1	IF_2
0x4004622	          0x4889c5	                            mov rbp, rax	       600	ops.c	FUNCTION_8	FOR_1	CALL_3
0x4004625	     0xf854afeffff	                           jne 0x4004475	       602	ops.c	FUNCTION_8	FOR_1	IF_2
0x400462b	      0x448b742440	           mov r14d, dword [rsp + 0x40] 	       605	ops.c	FUNCTION_8	FOR_1	IF_2
0x4004630	        0x8b44247c	            mov eax, dword [rsp + 0x7c] 	       604	ops.c	FUNCTION_8	FOR_1	IF_2
0x4004634	          0x4585f6	                         test r14d, r14d	       606	ops.c	FUNCTION_8	FOR_1	IF_2	IF_3
0x4004637	        0x89442420	             mov dword [rsp + 0x20], eax	       604	ops.c	FUNCTION_8	FOR_1	IF_2
0x400463b	            0x7442	                            je 0x400467f	       606	ops.c	FUNCTION_8	FOR_1	IF_2	IF_3
0x400463d	          0x83e801	                              sub eax, 1	       607	ops.c	FUNCTION_8	FOR_1	IF_2	IF_3
0x4004640	    0x8b3d00000000	            mov edi, dword [0x04004646] 	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x4004646	        0x89442404	                mov dword [rsp + 4], eax	       607	ops.c	FUNCTION_8	FOR_1	IF_2	IF_3
0x400464a	        0x8b442458	            mov eax, dword [rsp + 0x58] 	       608	ops.c	FUNCTION_8	FOR_1	IF_2
0x400464e	            0x85ff	                           test edi, edi	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x4004650	        0x89442408	                mov dword [rsp + 8], eax	       608	ops.c	FUNCTION_8	FOR_1	IF_2
0x4004654	     0xf84a7feffff	                            je 0x4004501	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x400465a	          0x4585f6	                         test r14d, r14d	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x400465d	     0xf8e9efeffff	                           jle 0x4004501	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x4004663	      0x4863742408	            movsxd rsi, dword [rsp + 8] 	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4004668	          0x4963c6	                        movsxd rax, r14d	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x400466b	          0x4889ef	                            mov rdi, rbp	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x400466e	          0x4801c6	                            add rsi, rax	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4004671	          0x4801ee	                            add rsi, rbp	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4004674	    0xff1500000000	                 call qword [0x0400467a]	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x400467a	      0xe97bfeffff	                           jmp 0x40044fa	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x400467f	        0x8b442458	            mov eax, dword [rsp + 0x58] 	       608	ops.c	FUNCTION_8	FOR_1	IF_2
0x4004683	        0x89442408	                mov dword [rsp + 8], eax	       608	ops.c	FUNCTION_8	FOR_1	IF_2
0x4004687	      0xe975feffff	                           jmp 0x4004501	       608	ops.c	FUNCTION_8	FOR_1	IF_2
0x400468c	        0x8b4c2468	            mov ecx, dword [rsp + 0x68] 	       623	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0x4004690	            0x85c9	                           test ecx, ecx	       623	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0x4004692	            0x750d	                           jne 0x40046a1	       623	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0x4004694	        0x448b7368	           mov r14d, dword [rbx + 0x68] 	       624	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0x4004698	      0x442b742460	            sub r14d, dword [rsp + 0x60]	       624	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0x400469d	        0x4183c601	                             add r14d, 1	       624	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0x40046a1	      0x448b6c2448	           mov r13d, dword [rsp + 0x48] 	       626	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0x40046a6	      0x44036c2458	            add r13d, dword [rsp + 0x58]	       626	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0x40046ab	          0x4585f6	                         test r14d, r14d	       626	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0x40046ae	           0xf9fc0	                                 setg al	       626	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0x40046b1	      0x4489742404	               mov dword [rsp + 4], r14d	       625	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0x40046b6	      0x44896c2408	               mov dword [rsp + 8], r13d	       626	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0x40046bb	      0xe905feffff	                           jmp 0x40044c5	       626	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0x40046c0	    0x488b05000000	            mov rax, qword [0x040046c7] 	       685	ops.c	FUNCTION_8	FOR_1	IF_12
0x40046c7	        0x8b742408	                mov esi, dword [rsp + 8]	       686	ops.c	FUNCTION_8	FOR_1	IF_12
0x40046cb	    0x4c89a0001200	          mov qword [rax + 0x1200], r12 	       685	ops.c	FUNCTION_8	FOR_1	IF_12
0x40046d2	    0x89b008120000	          mov dword [rax + 0x1208], esi 	       686	ops.c	FUNCTION_8	FOR_1	IF_12
0x40046d8	      0xe9fbfeffff	                           jmp 0x40045d8	       686	ops.c	FUNCTION_8	FOR_1	IF_12
0x40046dd	      0x4c8b7c2428	            mov r15, qword [rsp + 0x28] 	       686	ops.c	FUNCTION_8	FOR_1	IF_12
0x40046e2	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	       686	ops.c	FUNCTION_8	FOR_1	IF_12
0x40046e6	        0x488d7901	                      lea rdi, [rcx + 1]	       690	ops.c	FUNCTION_8	CALL_12
0x40046ea	        0x4883c201	                              add rdx, 1	       690	ops.c	FUNCTION_8	CALL_12
0x40046ee	            0x31c9	                            xor ecx, ecx	       690	ops.c	FUNCTION_8	CALL_12
0x40046f0	            0x31f6	                            xor esi, esi	       690	ops.c	FUNCTION_8	CALL_12
0x40046f2	      0xe800000000	                          call 0x40046f7	       690	ops.c	FUNCTION_8	CALL_12
0x40046f7	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	       692	ops.c	FUNCTION_8
0x40046fb	    0x890500000000	            mov dword [0x04004701], eax 	       692	ops.c	FUNCTION_8
0x4004701	      0xe96dfbffff	                           jmp 0x4004273	       692	ops.c	FUNCTION_8
0x4004706	            0x31c0	                            xor eax, eax	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4004708	          0x4531f6	                          xor r14d, r14d	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x400470b	      0xe9a3fdffff	                           jmp 0x40044b3	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4004710	        0x8b542420	            mov edx, dword [rsp + 0x20] 	        90	string3.h	FUNCTION_95	CALL_6
0x4004714	          0x4963fd	                        movsxd rdi, r13d	        90	string3.h	FUNCTION_95	CALL_6
0x4004717	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x400471c	          0x4801ef	                            add rdi, rbp	        90	string3.h	FUNCTION_95	CALL_6
0x400471f	          0x4c01ff	                            add rdi, r15	        90	string3.h	FUNCTION_95	CALL_6
0x4004722	          0x4429f2	                           sub edx, r14d	        90	string3.h	FUNCTION_95	CALL_6
0x4004725	          0x4863d2	                         movsxd rdx, edx	        90	string3.h	FUNCTION_95	CALL_6
0x4004728	      0xe800000000	                          call 0x400472d	        90	string3.h	FUNCTION_95	CALL_6
0x400472d	    0x488344241801	               add qword [rsp + 0x18], 1	       670	ops.c	FUNCTION_8	FOR_1	IF_10
0x4004733	      0x8344240401	                  add dword [rsp + 4], 1	       672	ops.c	FUNCTION_8	FOR_1	IF_10
0x4004738	      0xe951feffff	                           jmp 0x400458e	       672	ops.c	FUNCTION_8	FOR_1	IF_10
0x400473d	      0xe800000000	                          call 0x4004742	      2821	ops.c	FUNCTION_39
0x4004742	            0x31d2	                            xor edx, edx	       616	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0x4004744	            0x31c0	                            xor eax, eax	       616	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0x4004746	      0xe968fdffff	                           jmp 0x40044b3	       616	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
op_change	SWITCH,0:IF,16:WHILE,0:DO,0:FOR,1:ELSE,2:CALL,30:functions,0	235
0x400b650	            0x4157	                                push r15	      2831	ops.c	FUNCTION_40
0x400b652	            0x4156	                                push r14	      2831	ops.c	FUNCTION_40
0x400b654	            0x4155	                                push r13	      2831	ops.c	FUNCTION_40
0x400b656	            0x4154	                                push r12	      2831	ops.c	FUNCTION_40
0x400b658	              0x55	                                push rbp	      2831	ops.c	FUNCTION_40
0x400b659	              0x53	                                push rbx	      2831	ops.c	FUNCTION_40
0x400b65a	          0x4889fb	                            mov rbx, rdi	      2831	ops.c	FUNCTION_40
0x400b65d	    0x4881ec880000	                           sub rsp, 0x88	      2831	ops.c	FUNCTION_40
0x400b664	    0x64488b042528	                mov rax, qword fs:[0x28]	      2831	ops.c	FUNCTION_40
0x400b66d	      0x4889442478	             mov qword [rsp + 0x78], rax	      2831	ops.c	FUNCTION_40
0x400b672	            0x31c0	                            xor eax, eax	      2831	ops.c	FUNCTION_40
0x400b674	        0x837f0801	                  cmp dword [rdi + 8], 1	      2846	ops.c	FUNCTION_40	IF_1
0x400b678	     0xf84aa010000	                            je 0x400b828	      2846	ops.c	FUNCTION_40	IF_1
0x400b67e	          0x8b6f28	            mov ebp, dword [rdi + 0x28] 	      2845	ops.c	FUNCTION_40
0x400b681	    0x488b05000000	            mov rax, qword [0x0400b688] 	      2845	ops.c	FUNCTION_40
0x400b688	        0xf6401001	               test byte [rax + 0x10], 1	      2861	ops.c	FUNCTION_40	IF_3
0x400b68c	     0xf840e010000	                            je 0x400b7a0	      2861	ops.c	FUNCTION_40	IF_3
0x400b692	      0xe800000000	                          call 0x400b697	      2863	ops.c	FUNCTION_40	IF_3	IF_4	CALL_1
0x400b697	            0x85c0	                           test eax, eax	      2863	ops.c	FUNCTION_40	IF_3	IF_4	CALL_1
0x400b699	     0xf8411010000	                            je 0x400b7b0	      2863	ops.c	FUNCTION_40	IF_3	IF_4	CALL_1
0x400b69f	    0x488b05000000	            mov rax, qword [0x0400b6a6] 	      2869	ops.c	FUNCTION_40	IF_6	CALL_3
0x400b6a6	          0x3b6840	            cmp ebp, dword [rax + 0x40] 	      2869	ops.c	FUNCTION_40	IF_6	CALL_3
0x400b6a9	     0xf8fc1010000	                            jg 0x400b870	      2869	ops.c	FUNCTION_40	IF_6	CALL_3
0x400b6af	        0x448b4b60	            mov r9d, dword [rbx + 0x60] 	      2876	ops.c	FUNCTION_40	IF_7
0x400b6b3	          0x4585c9	                           test r9d, r9d	      2876	ops.c	FUNCTION_40	IF_7
0x400b6b6	     0xf8524010000	                           jne 0x400b7e0	      2876	ops.c	FUNCTION_40	IF_7
0x400b6bc	          0x4531e4	                          xor r12d, r12d	      2839	ops.c	FUNCTION_40
0x400b6bf	          0x4531f6	                          xor r14d, r14d	      2838	ops.c	FUNCTION_40
0x400b6c2	        0x837b0801	                  cmp dword [rbx + 8], 1	      2892	ops.c	FUNCTION_40	IF_9
0x400b6c6	     0xf840c030000	                            je 0x400b9d8	      2892	ops.c	FUNCTION_40	IF_9
0x400b6cc	            0x31f6	                            xor esi, esi	      2896	ops.c	FUNCTION_40	CALL_12
0x400b6ce	            0x31ff	                            xor edi, edi	      2896	ops.c	FUNCTION_40	CALL_12
0x400b6d0	      0xba01000000	                              mov edx, 1	      2896	ops.c	FUNCTION_40	CALL_12
0x400b6d5	      0xe800000000	                          call 0x400b6da	      2896	ops.c	FUNCTION_40	CALL_12
0x400b6da	          0x8b7360	            mov esi, dword [rbx + 0x60] 	      2904	ops.c	FUNCTION_40	IF_10
0x400b6dd	          0x4189c5	                           mov r13d, eax	      2896	ops.c	FUNCTION_40	CALL_12
0x400b6e0	            0x85f6	                           test esi, esi	      2904	ops.c	FUNCTION_40	IF_10
0x400b6e2	     0xf84ca000000	                            je 0x400b7b2	      2904	ops.c	FUNCTION_40	IF_10
0x400b6e8	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2904	ops.c	FUNCTION_40	IF_10
0x400b6ec	        0x483b7b30	            cmp rdi, qword [rbx + 0x30] 	      2904	ops.c	FUNCTION_40	IF_10
0x400b6f0	     0xf84bc000000	                            je 0x400b7b2	      2904	ops.c	FUNCTION_40	IF_10
0x400b6f6	    0x8b1500000000	            mov edx, dword [0x0400b6fc] 	      2904	ops.c	FUNCTION_40	IF_10
0x400b6fc	            0x85d2	                           test edx, edx	      2904	ops.c	FUNCTION_40	IF_10
0x400b6fe	     0xf85ae000000	                           jne 0x400b7b2	      2904	ops.c	FUNCTION_40	IF_10
0x400b704	      0xe800000000	                          call 0x400b709	      2908	ops.c	FUNCTION_40	IF_10	CALL_13
0x400b709	      0x4439642448	           cmp dword [rsp + 0x48], r12d 	      2909	ops.c	FUNCTION_40	IF_10	IF_11
0x400b70e	          0x4889c5	                            mov rbp, rax	      2908	ops.c	FUNCTION_40	IF_10	CALL_13
0x400b711	     0xf8fe9020000	                            jg 0x400ba00	      2909	ops.c	FUNCTION_40	IF_10	IF_11
0x400b717	          0x4889ef	                            mov rdi, rbp	      2917	ops.c	FUNCTION_40	IF_10	CALL_15
0x400b71a	      0xe800000000	                          call 0x400b71f	      2917	ops.c	FUNCTION_40	IF_10	CALL_15
0x400b71f	          0x4c29f0	                            sub rax, r14	      2917	ops.c	FUNCTION_40	IF_10	CALL_15
0x400b722	          0x4989c7	                            mov r15, rax	      2917	ops.c	FUNCTION_40	IF_10	CALL_15
0x400b725	          0x4489e8	                           mov eax, r13d	      2975	ops.c	FUNCTION_40
0x400b728	          0x4d85ff	                           test r15, r15	      2918	ops.c	FUNCTION_40	IF_10	IF_12
0x400b72b	     0xf8e81000000	                           jle 0x400b7b2	      2918	ops.c	FUNCTION_40	IF_10	IF_12
0x400b731	        0x418d7f01	                      lea edi, [r15 + 1]	      2922	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_16
0x400b735	      0x44897c2414	            mov dword [rsp + 0x14], r15d	      2922	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_16
0x400b73a	      0xe800000000	                          call 0x400b73f	      2922	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_16
0x400b73f	          0x4885c0	                           test rax, rax	      2922	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_16
0x400b742	      0x4889442418	             mov qword [rsp + 0x18], rax	      2922	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_16
0x400b747	            0x7445	                            je 0x400b78e	      2922	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_16
0x400b749	      0x4863742448	         movsxd rsi, dword [rsp + 0x48] 	      2924	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x400b74e	          0x4889c7	                            mov rdi, rax	      2924	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x400b751	          0x4c89fa	                            mov rdx, r15	      2924	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x400b754	          0x4801ee	                            add rsi, rbp	      2924	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x400b757	      0xe800000000	                          call 0x400b75c	      2924	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x400b75c	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      2925	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x400b760	        0x488d6801	                      lea rbp, [rax + 1]	      2925	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x400b764	        0x483b6b30	            cmp rbp, qword [rbx + 0x30] 	      2925	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x400b768	     0xf8e35020000	                           jle 0x400b9a3	      2925	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x400b76e	            0x6690	                                     nop	      2925	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x400b770	      0xe800000000	                          call 0x400b775	      2966	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_28
0x400b775	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      2968	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x400b779	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2968	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x400b77d	            0x31c9	                            xor ecx, ecx	      2968	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x400b77f	            0x31f6	                            xor esi, esi	      2968	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x400b781	        0x488d5001	                      lea rdx, [rax + 1]	      2968	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x400b785	        0x4883c701	                              add rdi, 1	      2968	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x400b789	      0xe800000000	                          call 0x400b78e	      2968	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x400b78e	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2970	ops.c	FUNCTION_40	IF_10	IF_12	CALL_30
0x400b793	      0xe800000000	                          call 0x400b798	      2970	ops.c	FUNCTION_40	IF_10	IF_12	CALL_30
0x400b798	          0x4489e8	                           mov eax, r13d	      2975	ops.c	FUNCTION_40
0x400b79b	            0xeb15	                           jmp 0x400b7b2	      2975	ops.c	FUNCTION_40
0x400b79d	           0xf1f00	                         nop dword [rax]	      2975	ops.c	FUNCTION_40
0x400b7a0	          0x4889df	                            mov rdi, rbx	      2866	ops.c	FUNCTION_40	ELSE_1	IF_5	CALL_2
0x400b7a3	      0xe800000000	                          call 0x400b7a8	      2866	ops.c	FUNCTION_40	ELSE_1	IF_5	CALL_2
0x400b7a8	            0x85c0	                           test eax, eax	      2866	ops.c	FUNCTION_40	ELSE_1	IF_5	CALL_2
0x400b7aa	     0xf85effeffff	                           jne 0x400b69f	      2866	ops.c	FUNCTION_40	ELSE_1	IF_5	CALL_2
0x400b7b0	            0x31c0	                            xor eax, eax	      2864	ops.c	FUNCTION_40	IF_3	IF_4
0x400b7b2	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	      2976	ops.c	FUNCTION_40
0x400b7b7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2976	ops.c	FUNCTION_40
0x400b7c0	     0xf856c020000	                           jne 0x400ba32	      2976	ops.c	FUNCTION_40
0x400b7c6	    0x4881c4880000	                           add rsp, 0x88	      2976	ops.c	FUNCTION_40
0x400b7cd	              0x5b	                                 pop rbx	      2976	ops.c	FUNCTION_40
0x400b7ce	              0x5d	                                 pop rbp	      2976	ops.c	FUNCTION_40
0x400b7cf	            0x415c	                                 pop r12	      2976	ops.c	FUNCTION_40
0x400b7d1	            0x415d	                                 pop r13	      2976	ops.c	FUNCTION_40
0x400b7d3	            0x415e	                                 pop r14	      2976	ops.c	FUNCTION_40
0x400b7d5	            0x415f	                                 pop r15	      2976	ops.c	FUNCTION_40
0x400b7d7	              0xc3	                                     ret	      2976	ops.c	FUNCTION_40
0x400b7d8	     0xf1f84000000	                   nop dword [rax + rax]	      2976	ops.c	FUNCTION_40
0x400b7e0	    0x448b05000000	            mov r8d, dword [0x0400b7e7] 	      2880	ops.c	FUNCTION_40	IF_7	IF_8
0x400b7e7	          0x4585c0	                           test r8d, r8d	      2880	ops.c	FUNCTION_40	IF_7	IF_8
0x400b7ea	     0xf85ad000000	                           jne 0x400b89d	      2880	ops.c	FUNCTION_40	IF_7	IF_8
0x400b7f0	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2884	ops.c	FUNCTION_40	IF_7	CALL_8
0x400b7f4	      0xe800000000	                          call 0x400b7f9	      2884	ops.c	FUNCTION_40	IF_7	CALL_8
0x400b7f9	          0x4889c5	                            mov rbp, rax	      2884	ops.c	FUNCTION_40	IF_7	CALL_8
0x400b7fc	          0x4889c7	                            mov rdi, rax	      2885	ops.c	FUNCTION_40	IF_7	CALL_9
0x400b7ff	      0xe800000000	                          call 0x400b804	      2885	ops.c	FUNCTION_40	IF_7	CALL_9
0x400b804	          0x4889ef	                            mov rdi, rbp	      2886	ops.c	FUNCTION_40	IF_7	CALL_10
0x400b807	          0x4989c6	                            mov r14, rax	      2885	ops.c	FUNCTION_40	IF_7	CALL_9
0x400b80a	      0xe800000000	                          call 0x400b80f	      2886	ops.c	FUNCTION_40	IF_7	CALL_10
0x400b80f	          0x4c63e0	                         movsxd r12, eax	      2886	ops.c	FUNCTION_40	IF_7	CALL_10
0x400b812	    0x488b05000000	            mov rax, qword [0x0400b819] 	      2887	ops.c	FUNCTION_40	IF_7
0x400b819	          0x8b4040	            mov eax, dword [rax + 0x40] 	      2887	ops.c	FUNCTION_40	IF_7
0x400b81c	        0x89442448	             mov dword [rsp + 0x48], eax	      2887	ops.c	FUNCTION_40	IF_7
0x400b820	      0xe99dfeffff	                           jmp 0x400b6c2	      2887	ops.c	FUNCTION_40	IF_7
0x400b825	           0xf1f00	                         nop dword [rax]	      2887	ops.c	FUNCTION_40	IF_7
0x400b828	    0x448b2d000000	           mov r13d, dword [0x0400b82f] 	      2850	ops.c	FUNCTION_40	IF_1	IF_2
0x400b82f	            0x31ed	                            xor ebp, ebp	      2848	ops.c	FUNCTION_40	IF_1
0x400b831	    0x488b05000000	            mov rax, qword [0x0400b838] 	      2850	ops.c	FUNCTION_40	IF_1	IF_2
0x400b838	          0x4585ed	                         test r13d, r13d	      2850	ops.c	FUNCTION_40	IF_1	IF_2
0x400b83b	     0xf8547feffff	                           jne 0x400b688	      2850	ops.c	FUNCTION_40	IF_1	IF_2
0x400b841	    0x448ba0741500	         mov r12d, dword [rax + 0x1574] 	      2850	ops.c	FUNCTION_40	IF_1	IF_2
0x400b848	          0x4585e4	                         test r12d, r12d	      2850	ops.c	FUNCTION_40	IF_1	IF_2
0x400b84b	     0xf8437feffff	                            je 0x400b688	      2850	ops.c	FUNCTION_40	IF_1	IF_2
0x400b851	    0x448b98281400	         mov r11d, dword [rax + 0x1428] 	      2852	ops.c	FUNCTION_40	IF_1	IF_2
0x400b858	          0x4585db	                         test r11d, r11d	      2852	ops.c	FUNCTION_40	IF_1	IF_2
0x400b85b	     0xf8527feffff	                           jne 0x400b688	      2852	ops.c	FUNCTION_40	IF_1	IF_2
0x400b861	    0xc70500000000	               mov dword [0x0400b86b], 1	      2855	ops.c	FUNCTION_40	IF_1	IF_2
0x400b86b	      0xe918feffff	                           jmp 0x400b688	      2855	ops.c	FUNCTION_40	IF_1	IF_2
0x400b870	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      2869	ops.c	FUNCTION_40	IF_6	CALL_3
0x400b874	      0xe800000000	                          call 0x400b879	      2869	ops.c	FUNCTION_40	IF_6	CALL_3
0x400b879	          0x803800	                       cmp byte [rax], 0	      2869	ops.c	FUNCTION_40	IF_6	CALL_3
0x400b87c	     0xf842dfeffff	                            je 0x400b6af	      2869	ops.c	FUNCTION_40	IF_6	CALL_3
0x400b882	    0x448b15000000	           mov r10d, dword [0x0400b889] 	      2870	ops.c	FUNCTION_40	IF_6
0x400b889	          0x4585d2	                         test r10d, r10d	      2870	ops.c	FUNCTION_40	IF_6
0x400b88c	     0xf8496010000	                            je 0x400ba28	      2870	ops.c	FUNCTION_40	IF_6
0x400b892	          0x8b4360	            mov eax, dword [rbx + 0x60] 	      2876	ops.c	FUNCTION_40	IF_7
0x400b895	            0x85c0	                           test eax, eax	      2876	ops.c	FUNCTION_40	IF_7
0x400b897	     0xf841ffeffff	                            je 0x400b6bc	      2876	ops.c	FUNCTION_40	IF_7
0x400b89d	    0x488b05000000	            mov rax, qword [0x0400b8a4] 	      2880	ops.c	FUNCTION_40	IF_7	IF_8
0x400b8a4	          0x8b7844	            mov edi, dword [rax + 0x44] 	      2880	ops.c	FUNCTION_40	IF_7	IF_8
0x400b8a7	            0x85ff	                           test edi, edi	      2880	ops.c	FUNCTION_40	IF_7	IF_8
0x400b8a9	     0xf8e39010000	                           jle 0x400b9e8	      2880	ops.c	FUNCTION_40	IF_7	IF_8
0x400b8af	      0xe800000000	                          call 0x400b8b4	      2882	ops.c	FUNCTION_40	IF_7	CALL_7
0x400b8b4	            0x89c7	                            mov edi, eax	      2882	ops.c	FUNCTION_40	IF_7	CALL_7
0x400b8b6	      0xe800000000	                          call 0x400b8bb	      2882	ops.c	FUNCTION_40	IF_7	CALL_7
0x400b8bb	      0xe930ffffff	                           jmp 0x400b7f0	      2882	ops.c	FUNCTION_40	IF_7	CALL_7
0x400b8c0	    0x8b1500000000	            mov edx, dword [0x0400b8c6] 	      2929	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400b8c6	            0x85d2	                           test edx, edx	      2929	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400b8c8	     0xf84c7000000	                            je 0x400b995	      2929	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400b8ce	          0x8b7364	            mov esi, dword [rbx + 0x64] 	      2939	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15	CALL_19
0x400b8d1	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2939	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15	CALL_19
0x400b8d6	      0x48896c2420	             mov qword [rsp + 0x20], rbp	      2938	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15
0x400b8db	      0xe800000000	                          call 0x400b8e0	      2939	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15	CALL_19
0x400b8e0	          0x4889ef	                            mov rdi, rbp	      2944	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_20
0x400b8e3	      0xe800000000	                          call 0x400b8e8	      2944	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_20
0x400b8e8	          0x4889c7	                            mov rdi, rax	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x400b8eb	          0x4989c6	                            mov r14, rax	      2944	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_20
0x400b8ee	      0xe800000000	                          call 0x400b8f3	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x400b8f3	        0x8b542414	            mov edx, dword [rsp + 0x14] 	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x400b8f7	         0x354242c	             add edx, dword [rsp + 0x2c]	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x400b8fb	        0x8d7c0201	                lea edi, [rdx + rax + 1]	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x400b8ff	      0xe800000000	                          call 0x400b904	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x400b904	          0x4885c0	                           test rax, rax	      2950	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_16
0x400b907	          0x4989c4	                            mov r12, rax	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x400b90a	     0xf8485000000	                            je 0x400b995	      2950	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_16
0x400b910	      0x4863542448	         movsxd rdx, dword [rsp + 0x48] 	        59	string3.h	FUNCTION_93	CALL_3
0x400b915	          0x4c89f6	                            mov rsi, r14	        59	string3.h	FUNCTION_93	CALL_3
0x400b918	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_93	CALL_3
0x400b91b	      0xe800000000	                          call 0x400b920	        59	string3.h	FUNCTION_93	CALL_3
0x400b920	      0x48634c2448	         movsxd rcx, dword [rsp + 0x48] 	      2954	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400b925	      0x486354242c	         movsxd rdx, dword [rsp + 0x2c] 	        90	string3.h	FUNCTION_95	CALL_6
0x400b92a	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x400b92f	        0x498d3c0c	                    lea rdi, [r12 + rcx]	        90	string3.h	FUNCTION_95	CALL_6
0x400b933	      0x48894c2408	                mov qword [rsp + 8], rcx	        90	string3.h	FUNCTION_95	CALL_6
0x400b938	      0xe800000000	                          call 0x400b93d	        90	string3.h	FUNCTION_95	CALL_6
0x400b93d	      0x48637c242c	         movsxd rdi, dword [rsp + 0x2c] 	      2957	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400b942	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2957	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400b947	          0x4c89fa	                            mov rdx, r15	        59	string3.h	FUNCTION_93	CALL_3
0x400b94a	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	        59	string3.h	FUNCTION_93	CALL_3
0x400b94f	          0x4801f9	                            add rcx, rdi	      2957	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400b952	        0x498d3c0c	                    lea rdi, [r12 + rcx]	        59	string3.h	FUNCTION_93	CALL_3
0x400b956	      0x48894c2408	                mov qword [rsp + 8], rcx	        59	string3.h	FUNCTION_93	CALL_3
0x400b95b	      0xe800000000	                          call 0x400b960	        59	string3.h	FUNCTION_93	CALL_3
0x400b960	      0x4863742448	         movsxd rsi, dword [rsp + 0x48] 	      2961	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400b965	          0x4901f6	                            add r14, rsi	      2961	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400b968	          0x4c89f7	                            mov rdi, r14	      2962	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_26
0x400b96b	      0xe800000000	                          call 0x400b970	      2962	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_26
0x400b970	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        59	string3.h	FUNCTION_93	CALL_3
0x400b975	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_93	CALL_3
0x400b979	          0x4c89f6	                            mov rsi, r14	        59	string3.h	FUNCTION_93	CALL_3
0x400b97c	        0x498d3c0f	                    lea rdi, [r15 + rcx]	        59	string3.h	FUNCTION_93	CALL_3
0x400b980	          0x4c01e7	                            add rdi, r12	        59	string3.h	FUNCTION_93	CALL_3
0x400b983	      0xe800000000	                          call 0x400b988	        59	string3.h	FUNCTION_93	CALL_3
0x400b988	            0x31d2	                            xor edx, edx	      2963	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_27
0x400b98a	          0x4c89e6	                            mov rsi, r12	      2963	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_27
0x400b98d	          0x4889ef	                            mov rdi, rbp	      2963	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_27
0x400b990	      0xe800000000	                          call 0x400b995	      2963	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_27
0x400b995	        0x4883c501	                              add rbp, 1	      2926	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x400b999	        0x48396b30	            cmp qword [rbx + 0x30], rbp 	      2925	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x400b99d	     0xf8ccdfdffff	                            jl 0x400b770	      2925	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x400b9a3	      0x488d742430	                   lea rsi, [rsp + 0x30]	      2928	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	CALL_18
0x400b9a8	      0xb901000000	                              mov ecx, 1	      2928	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	CALL_18
0x400b9ad	          0x4889ea	                            mov rdx, rbp	      2928	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	CALL_18
0x400b9b0	          0x4889df	                            mov rdi, rbx	      2928	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	CALL_18
0x400b9b3	      0xe8b846ffff	                     call sym.block_prep	      2928	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	CALL_18
0x400b9b8	        0x8b4c2454	            mov ecx, dword [rsp + 0x54] 	      2929	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400b9bc	            0x85c9	                           test ecx, ecx	      2929	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400b9be	     0xf85fcfeffff	                           jne 0x400b8c0	      2929	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400b9c4	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      2942	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	ELSE_2
0x400b9cc	      0xe90fffffff	                           jmp 0x400b8e0	      2942	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	ELSE_2
0x400b9d1	     0xf1f80000000	                         nop dword [rax]	      2942	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	ELSE_2
0x400b9d8	      0xe800000000	                          call 0x400b9dd	      2893	ops.c	FUNCTION_40	CALL_11
0x400b9dd	      0xe9eafcffff	                           jmp 0x400b6cc	      2893	ops.c	FUNCTION_40	CALL_11
0x400b9e2	    0x660f1f440000	                    nop word [rax + rax]	      2893	ops.c	FUNCTION_40	CALL_11
0x400b9e8	      0xe800000000	                          call 0x400b9ed	      2881	ops.c	FUNCTION_40	IF_7	IF_8	CALL_5
0x400b9ed	            0x85c0	                           test eax, eax	      2881	ops.c	FUNCTION_40	IF_7	IF_8	CALL_5
0x400b9ef	     0xf84bafeffff	                            je 0x400b8af	      2881	ops.c	FUNCTION_40	IF_7	IF_8	CALL_5
0x400b9f5	      0xe9f6fdffff	                           jmp 0x400b7f0	      2881	ops.c	FUNCTION_40	IF_7	IF_8	CALL_5
0x400b9fa	    0x660f1f440000	                    nop word [rax + rax]	      2881	ops.c	FUNCTION_40	IF_7	IF_8	CALL_5
0x400ba00	          0x4889c7	                            mov rdi, rax	      2911	ops.c	FUNCTION_40	IF_10	IF_11	CALL_14
0x400ba03	      0xe800000000	                          call 0x400ba08	      2911	ops.c	FUNCTION_40	IF_10	IF_11	CALL_14
0x400ba08	          0x4863d0	                         movsxd rdx, eax	      2913	ops.c	FUNCTION_40	IF_10	IF_11
0x400ba0b	         0x3442448	             add eax, dword [rsp + 0x48]	      2914	ops.c	FUNCTION_40	IF_10	IF_11
0x400ba0f	          0x4c29e2	                            sub rdx, r12	      2913	ops.c	FUNCTION_40	IF_10	IF_11
0x400ba12	          0x4901d6	                            add r14, rdx	      2913	ops.c	FUNCTION_40	IF_10	IF_11
0x400ba15	          0x4429e0	                           sub eax, r12d	      2914	ops.c	FUNCTION_40	IF_10	IF_11
0x400ba18	        0x89442448	             mov dword [rsp + 0x48], eax	      2914	ops.c	FUNCTION_40	IF_10	IF_11
0x400ba1c	      0xe9f6fcffff	                           jmp 0x400b717	      2914	ops.c	FUNCTION_40	IF_10	IF_11
0x400ba21	     0xf1f80000000	                         nop dword [rax]	      2914	ops.c	FUNCTION_40	IF_10	IF_11
0x400ba28	      0xe800000000	                          call 0x400ba2d	      2871	ops.c	FUNCTION_40	CALL_4
0x400ba2d	      0xe97dfcffff	                           jmp 0x400b6af	      2871	ops.c	FUNCTION_40	CALL_4
0x400ba32	      0xe800000000	                          call 0x400ba37	      2976	ops.c	FUNCTION_40
cursor_pos_info	SWITCH,1:IF,24:WHILE,0:DO,0:FOR,1:ELSE,8:CALL,44:functions,0	536
0x400c050	            0x4157	                                push r15	      7343	ops.c	FUNCTION_91
0x400c052	            0x4156	                                push r14	      7343	ops.c	FUNCTION_91
0x400c054	            0x4155	                                push r13	      7343	ops.c	FUNCTION_91
0x400c056	            0x4154	                                push r12	      7343	ops.c	FUNCTION_91
0x400c058	              0x55	                                push rbp	      7343	ops.c	FUNCTION_91
0x400c059	              0x53	                                push rbx	      7343	ops.c	FUNCTION_91
0x400c05a	          0x4889fd	                            mov rbp, rdi	      7343	ops.c	FUNCTION_91
0x400c05d	    0x4881ec980100	                          sub rsp, 0x198	      7343	ops.c	FUNCTION_91
0x400c064	    0x488b3d000000	            mov rdi, qword [0x0400c06b] 	      7367	ops.c	FUNCTION_91	IF_1
0x400c06b	    0x64488b042528	                mov rax, qword fs:[0x28]	      7343	ops.c	FUNCTION_91
0x400c074	    0x488984248801	            mov qword [rsp + 0x188], rax	      7343	ops.c	FUNCTION_91
0x400c07c	            0x31c0	                            xor eax, eax	      7343	ops.c	FUNCTION_91
0x400c07e	    0x48c744242000	               mov qword [rsp + 0x20], 0	      7353	ops.c	FUNCTION_91
0x400c087	    0x48c744242800	               mov qword [rsp + 0x28], 0	      7354	ops.c	FUNCTION_91
0x400c090	        0xf6471001	               test byte [rdi + 0x10], 1	      7367	ops.c	FUNCTION_91	IF_1
0x400c094	    0x48c744243000	               mov qword [rsp + 0x30], 0	      7355	ops.c	FUNCTION_91
0x400c09d	    0x48c744243800	               mov qword [rsp + 0x38], 0	      7356	ops.c	FUNCTION_91
0x400c0a6	     0xf84e4000000	                            je 0x400c190	      7367	ops.c	FUNCTION_91	IF_1
0x400c0ac	            0x31db	                            xor ebx, ebx	      7367	ops.c	FUNCTION_91	IF_1
0x400c0ae	            0x31d2	                            xor edx, edx	      7367	ops.c	FUNCTION_91	IF_1
0x400c0b0	          0x4531f6	                          xor r14d, r14d	      7352	ops.c	FUNCTION_91
0x400c0b3	          0x4885ed	                           test rbp, rbp	      7369	ops.c	FUNCTION_91	IF_1	IF_2
0x400c0b6	     0xf84c4050000	                            je 0x400c680	      7369	ops.c	FUNCTION_91	IF_1	IF_2
0x400c0bc	            0x31c9	                            xor ecx, ecx	      7592	ops.c	FUNCTION_91	IF_24	CALL_39
0x400c0be	      0xbe00000000	                              mov esi, 0	      7592	ops.c	FUNCTION_91	IF_24	CALL_39
0x400c0c3	          0x4889ef	                            mov rdi, rbp	      7592	ops.c	FUNCTION_91	IF_24	CALL_39
0x400c0c6	      0xe800000000	                          call 0x400c0cb	      7592	ops.c	FUNCTION_91	IF_24	CALL_39
0x400c0cb	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      7593	ops.c	FUNCTION_91	IF_24	CALL_40
0x400c0d0	            0x31c9	                            xor ecx, ecx	      7593	ops.c	FUNCTION_91	IF_24	CALL_40
0x400c0d2	      0xbe00000000	                              mov esi, 0	      7593	ops.c	FUNCTION_91	IF_24	CALL_40
0x400c0d7	          0x4889ef	                            mov rdi, rbp	      7593	ops.c	FUNCTION_91	IF_24	CALL_40
0x400c0da	      0xe800000000	                          call 0x400c0df	      7593	ops.c	FUNCTION_91	IF_24	CALL_40
0x400c0df	            0x31c9	                            xor ecx, ecx	      7594	ops.c	FUNCTION_91	IF_24	CALL_41
0x400c0e1	          0x4889da	                            mov rdx, rbx	      7594	ops.c	FUNCTION_91	IF_24	CALL_41
0x400c0e4	      0xbe00000000	                              mov esi, 0	      7594	ops.c	FUNCTION_91	IF_24	CALL_41
0x400c0e9	          0x4889ef	                            mov rdi, rbp	      7594	ops.c	FUNCTION_91	IF_24	CALL_41
0x400c0ec	      0xe800000000	                          call 0x400c0f1	      7594	ops.c	FUNCTION_91	IF_24	CALL_41
0x400c0f1	    0x8b0500000000	            mov eax, dword [0x0400c0f7] 	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400c0f7	      0xbe00000000	                              mov esi, 0	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400c0fc	          0x4c89f2	                            mov rdx, r14	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400c0ff	          0x4889ef	                            mov rdi, rbp	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400c102	            0x85c0	                           test eax, eax	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400c104	      0xb800000000	                              mov eax, 0	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400c109	        0x480f44f0	                          cmove rsi, rax	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400c10d	            0x31c9	                            xor ecx, ecx	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400c10f	      0xe800000000	                          call 0x400c114	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400c114	    0x8b1500000000	            mov edx, dword [0x0400c11a] 	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400c11a	      0xb800000000	                              mov eax, 0	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400c11f	      0xbe00000000	                              mov esi, 0	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400c124	          0x4889ef	                            mov rdi, rbp	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400c127	            0x85d2	                           test edx, edx	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400c129	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400c12e	        0x480f44f0	                          cmove rsi, rax	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400c132	            0x31c9	                            xor ecx, ecx	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400c134	      0xe800000000	                          call 0x400c139	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400c139	    0x8b0d00000000	            mov ecx, dword [0x0400c13f] 	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400c13f	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400c144	      0xbe00000000	                              mov esi, 0	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400c149	      0xb800000000	                              mov eax, 0	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400c14e	          0x4889ef	                            mov rdi, rbp	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400c151	            0x85c9	                           test ecx, ecx	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400c153	        0x480f44f0	                          cmove rsi, rax	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400c157	            0x31c9	                            xor ecx, ecx	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400c159	      0xe800000000	                          call 0x400c15e	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400c15e	    0x488b84248801	           mov rax, qword [rsp + 0x188] 	      7607	ops.c	FUNCTION_91
0x400c166	    0x644833042528	                xor rax, qword fs:[0x28]	      7607	ops.c	FUNCTION_91
0x400c16f	     0xf8559080000	                           jne 0x400c9ce	      7607	ops.c	FUNCTION_91
0x400c175	    0x4881c4980100	                          add rsp, 0x198	      7607	ops.c	FUNCTION_91
0x400c17c	              0x5b	                                 pop rbx	      7607	ops.c	FUNCTION_91
0x400c17d	              0x5d	                                 pop rbp	      7607	ops.c	FUNCTION_91
0x400c17e	            0x415c	                                 pop r12	      7607	ops.c	FUNCTION_91
0x400c180	            0x415d	                                 pop r13	      7607	ops.c	FUNCTION_91
0x400c182	            0x415e	                                 pop r14	      7607	ops.c	FUNCTION_91
0x400c184	            0x415f	                                 pop r15	      7607	ops.c	FUNCTION_91
0x400c186	              0xc3	                                     ret	      7607	ops.c	FUNCTION_91
0x400c187	    0x660f1f840000	                    nop word [rax + rax]	      7607	ops.c	FUNCTION_91
0x400c190	      0xe800000000	                          call 0x400c195	      7377	ops.c	FUNCTION_91	ELSE_1	IF_3	CALL_3
0x400c195	    0x8b3d00000000	            mov edi, dword [0x0400c19b] 	      7382	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0x400c19b	          0x4531e4	                          xor r12d, r12d	      7378	ops.c	FUNCTION_91	ELSE_1	IF_3
0x400c19e	          0x83f801	                              cmp eax, 1	      7378	ops.c	FUNCTION_91	ELSE_1	IF_3
0x400c1a1	        0x410f94c4	                               sete r12b	      7378	ops.c	FUNCTION_91	ELSE_1	IF_3
0x400c1a5	    0x48c744241800	               mov qword [rsp + 0x18], 0	      7359	ops.c	FUNCTION_91
0x400c1ae	        0x4183c401	                             add r12d, 1	      7378	ops.c	FUNCTION_91	ELSE_1	IF_3
0x400c1b2	            0x85ff	                           test edi, edi	      7382	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0x400c1b4	     0xf85ce010000	                           jne 0x400c388	      7382	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0x400c1ba	    0x488b05000000	            mov rax, qword [0x0400c1c1] 	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400c1c1	        0x48833800	                      cmp qword [rax], 0	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400c1c5	     0xf8e2a010000	                           jle 0x400c2f5	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400c1cb	    0x41bf01000000	                             mov r15d, 1	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400c1d1	            0x31db	                            xor ebx, ebx	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400c1d3	          0x4531f6	                          xor r14d, r14d	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400c1d6	    0x41bda0860100	                       mov r13d, 0x186a0	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400c1dc	         0xf1f4000	                         nop dword [rax]	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400c1e0	    0x8b3500000000	            mov esi, dword [0x0400c1e6] 	      7438	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400c1e6	            0x85f6	                           test esi, esi	      7438	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400c1e8	     0xf84b2000000	                            je 0x400c2a0	      7438	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400c1ee	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	      7439	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400c1f3	          0x4c39fa	                            cmp rdx, r15	      7439	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400c1f6	     0xf8fa4000000	                            jg 0x400c2a0	      7439	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400c1fc	      0x488b4c2450	            mov rcx, qword [rsp + 0x50] 	      7439	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400c201	          0x4c39f9	                            cmp rcx, r15	      7439	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400c204	     0xf8c96000000	                            jl 0x400c2a0	      7439	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400c20a	    0x8b0500000000	            mov eax, dword [0x0400c210] 	      7444	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400c210	          0x83f856	                           cmp eax, 0x56	      7444	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400c213	     0xf84ef020000	                            je 0x400c508	      7444	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400c219	          0x83f876	                           cmp eax, 0x76	      7444	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400c21c	     0xf84a6020000	                            je 0x400c4c8	      7444	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400c222	          0x83f816	                           cmp eax, 0x16	      7444	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400c225	     0xf84e5010000	                            je 0x400c410	      7444	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400c22b	       0xf1f440000	                   nop dword [rax + rax]	      7444	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400c230	          0x4c89ff	                            mov rdi, r15	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400c233	        0x4983c701	                              add r15, 1	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400c237	      0xe800000000	                          call 0x400c23c	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400c23c	      0x488d542420	                   lea rdx, [rsp + 0x20]	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400c241	      0x488d742430	                   lea rsi, [rsp + 0x30]	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400c246	          0x4589e0	                           mov r8d, r12d	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400c249	      0xb9ffffff7f	                     mov ecx, 0x7fffffff	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400c24e	          0x4889c7	                            mov rdi, rax	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400c251	      0xe87a4bffff	                call sym.line_count_info	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400c256	          0x4801c3	                            add rbx, rax	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400c259	    0x488b05000000	            mov rax, qword [0x0400c260] 	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400c260	          0x4c3938	                    cmp qword [rax], r15	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400c263	     0xf8c97000000	                            jl 0x400c300	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400c269	          0x4939dd	                            cmp r13, rbx	      7429	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10
0x400c26c	     0xf8d6effffff	                           jge 0x400c1e0	      7429	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10
0x400c272	      0xe800000000	                          call 0x400c277	      7431	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10	CALL_6
0x400c277	    0x8b0500000000	            mov eax, dword [0x0400c27d] 	      7432	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10	IF_11
0x400c27d	            0x85c0	                           test eax, eax	      7432	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10	IF_11
0x400c27f	     0xf85d9feffff	                           jne 0x400c15e	      7432	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10	IF_11
0x400c285	    0x8b3500000000	            mov esi, dword [0x0400c28b] 	      7438	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400c28b	    0x4c8daba08601	                lea r13, [rbx + 0x186a0]	      7434	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10
0x400c292	            0x85f6	                           test esi, esi	      7438	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400c294	     0xf8554ffffff	                           jne 0x400c1ee	      7438	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400c29a	    0x660f1f440000	                    nop word [rax + rax]	      7438	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400c2a0	    0x488b05000000	            mov rax, qword [0x0400c2a7] 	      7487	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400c2a7	        0x4c397838	            cmp qword [rax + 0x38], r15 	      7487	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400c2ab	            0x7583	                           jne 0x400c230	      7487	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400c2ad	        0x448b7040	           mov r14d, dword [rax + 0x40] 	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400c2b1	          0x4c89ff	                            mov rdi, r15	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400c2b4	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      7489	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400c2b9	      0x4801542438	            add qword [rsp + 0x38], rdx 	      7489	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400c2be	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      7490	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400c2c3	      0x4801542428	            add qword [rsp + 0x28], rdx 	      7490	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400c2c8	        0x4183c601	                             add r14d, 1	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400c2cc	      0xe800000000	                          call 0x400c2d1	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400c2d1	          0x4d63f6	                        movsxd r14, r14d	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400c2d4	      0x488d542428	                   lea rdx, [rsp + 0x28]	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400c2d9	      0x488d742438	                   lea rsi, [rsp + 0x38]	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400c2de	          0x4c89f1	                            mov rcx, r14	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400c2e1	          0x4589e0	                           mov r8d, r12d	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400c2e4	          0x4889c7	                            mov rdi, rax	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400c2e7	      0xe8e44affff	                call sym.line_count_info	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400c2ec	        0x4c8d3418	                    lea r14, [rax + rbx]	      7491	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400c2f0	      0xe93bffffff	                           jmp 0x400c230	      7491	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400c2f5	          0x4531f6	                          xor r14d, r14d	      7352	ops.c	FUNCTION_91
0x400c2f8	            0x31db	                            xor ebx, ebx	      7348	ops.c	FUNCTION_91
0x400c2fa	    0x660f1f440000	                    nop word [rax + rax]	      7348	ops.c	FUNCTION_91
0x400c300	    0x448b88701400	          mov r9d, dword [rax + 0x1470] 	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400c307	          0x4585c9	                           test r9d, r9d	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400c30a	            0x751c	                           jne 0x400c328	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400c30c	    0x448b80081400	          mov r8d, dword [rax + 0x1408] 	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400c313	          0x4585c0	                           test r8d, r8d	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400c316	            0x750a	                           jne 0x400c322	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400c318	    0x8bb874140000	          mov edi, dword [rax + 0x1474] 	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400c31e	            0x85ff	                           test edi, edi	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400c320	            0x7506	                           jne 0x400c328	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400c322	          0x4d63e4	                        movsxd r12, r12d	      7506	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400c325	          0x4c29e3	                            sub rbx, r12	      7506	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400c328	          0x4885ed	                           test rbp, rbp	      7508	ops.c	FUNCTION_91	ELSE_1	IF_17
0x400c32b	     0xf8426020000	                            je 0x400c557	      7508	ops.c	FUNCTION_91	ELSE_1	IF_17
0x400c331	      0xe800000000	                          call 0x400c336	      7575	ops.c	FUNCTION_91	ELSE_1	CALL_34
0x400c336	          0x4c63e0	                         movsxd r12, eax	      7575	ops.c	FUNCTION_91	ELSE_1	CALL_34
0x400c339	          0x4d85e4	                           test r12, r12	      7576	ops.c	FUNCTION_91	ELSE_1	IF_22
0x400c33c	            0x7e39	                           jle 0x400c377	      7576	ops.c	FUNCTION_91	ELSE_1	IF_22
0x400c33e	      0xba05000000	                              mov edx, 5	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400c343	      0xbe00000000	                              mov esi, 0	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400c348	            0x31ff	                            xor edi, edi	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400c34a	      0xe800000000	                          call 0x400c34f	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400c34f	    0x4c8b3d000000	            mov r15, qword [0x0400c356] 	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400c356	          0x4989c5	                            mov r13, rax	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400c359	          0x4c89ff	                            mov rdi, r15	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400c35c	      0xe800000000	                          call 0x400c361	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400c361	        0x498d3c07	                    lea rdi, [r15 + rax]	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400c365	          0x4c89e1	                            mov rcx, r12	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400c368	          0x4c89ea	                            mov rdx, r13	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400c36b	      0xbe01040000	                          mov esi, 0x401	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400c370	            0x31c0	                            xor eax, eax	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400c372	      0xe800000000	                          call 0x400c377	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400c377	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400c37c	          0x4c01e3	                            add rbx, r12	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400c37f	      0xe938fdffff	                           jmp 0x400c0bc	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400c384	         0xf1f4000	                         nop dword [rax]	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400c388	    0x488b05000000	            mov rax, qword [0x0400c38f] 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400c38f	        0x488b5838	            mov rbx, qword [rax + 0x38] 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400c393	    0x48391d000000	            cmp qword [0x0400c39a], rbx 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400c39a	     0xf843a030000	                            je 0x400c6da	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400c3a0	           0xf9cc2	                                 setl dl	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400c3a3	            0x84d2	                             test dl, dl	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400c3a5	     0xf847d010000	                            je 0x400c528	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400c3ab	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      7387	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400c3af	    0x488b0d000000	            mov rcx, qword [0x0400c3b6] 	      7386	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400c3b6	    0x488b1d000000	            mov rbx, qword [0x0400c3bd] 	      7386	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400c3bd	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7387	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400c3c1	      0x48894c2440	             mov qword [rsp + 0x40], rcx	      7386	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400c3c6	      0x4889542458	             mov qword [rsp + 0x58], rdx	      7387	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400c3cb	      0x48895c2448	             mov qword [rsp + 0x48], rbx	      7386	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400c3d0	      0x4889442450	             mov qword [rsp + 0x50], rax	      7387	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400c3d5	    0x488b05000000	            mov rax, qword [0x0400c3dc] 	      7394	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400c3dc	          0x803865	                    cmp byte [rax], 0x65	      7394	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400c3df	     0xf84dd020000	                            je 0x400c6c2	      7394	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400c3e5	    0x833d00000000	           cmp dword [0x0400c3ec], 0x16 	      7397	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400c3ec	     0xf8405030000	                            je 0x400c6f7	      7397	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400c3f2	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      7423	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0x400c3f7	      0x482b442440	             sub rax, qword [rsp + 0x40]	      7423	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0x400c3fc	        0x4883c001	                              add rax, 1	      7423	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0x400c400	      0x4889442418	             mov qword [rsp + 0x18], rax	      7423	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0x400c405	      0xe9b0fdffff	                           jmp 0x400c1ba	      7423	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0x400c40a	    0x660f1f440000	                    nop word [rax + rax]	      7423	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0x400c410	      0xe800000000	                          call 0x400c415	      7448	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_7
0x400c415	      0x488d742460	                   lea rsi, [rsp + 0x60]	      7450	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_8
0x400c41a	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      7450	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_8
0x400c422	            0x31c9	                            xor ecx, ecx	      7450	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_8
0x400c424	          0x4c89fa	                            mov rdx, r15	      7450	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_8
0x400c427	    0x890500000000	            mov dword [0x0400c42d], eax 	      7448	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_7
0x400c42d	      0xe83e3cffff	                     call sym.block_prep	      7450	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_8
0x400c432	      0x4863442468	         movsxd rax, dword [rsp + 0x68] 	      7455	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400c437	      0x4c8b542470	            mov r10, qword [rsp + 0x70] 	      7454	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400c43c	    0xc70500000000	               mov dword [0x0400c446], 2	      7452	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400c446	      0x4889442408	                mov qword [rsp + 8], rax	      7455	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400c44b	          0x4d85d2	                           test r10, r10	      7473	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13
0x400c44e	     0xf84dcfdffff	                            je 0x400c230	      7473	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13
0x400c454	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      7475	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0x400c459	      0x488d542428	                   lea rdx, [rsp + 0x28]	      7475	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0x400c45e	      0x488d742438	                   lea rsi, [rsp + 0x38]	      7475	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0x400c463	          0x4c89d7	                            mov rdi, r10	      7475	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0x400c466	          0x4589e0	                           mov r8d, r12d	      7475	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0x400c469	      0x4c89542410	             mov qword [rsp + 0x10], r10	      7475	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0x400c46e	      0xe85d49ffff	                call sym.line_count_info	      7475	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0x400c473	          0x4901c6	                            add r14, rax	      7475	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0x400c476	    0x488b05000000	            mov rax, qword [0x0400c47d] 	      7477	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400c47d	      0x4c8b542410	            mov r10, qword [rsp + 0x10] 	      7477	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400c482	          0x4c3938	                    cmp qword [rax], r15	      7477	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400c485	     0xf85a5fdffff	                           jne 0x400c230	      7477	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400c48b	    0x8b8870140000	          mov ecx, dword [rax + 0x1470] 	      7478	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400c491	            0x85c9	                           test ecx, ecx	      7478	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400c493	     0xf8597fdffff	                           jne 0x400c230	      7478	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400c499	    0x8b9008140000	          mov edx, dword [rax + 0x1408] 	      7479	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400c49f	            0x85d2	                           test edx, edx	      7479	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400c4a1	     0xf84c3010000	                            je 0x400c66a	      7479	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400c4a7	          0x4c89d7	                            mov rdi, r10	      7480	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14	CALL_12
0x400c4aa	      0xe800000000	                          call 0x400c4af	      7480	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14	CALL_12
0x400c4af	      0x4839442408	                cmp qword [rsp + 8], rax	      7480	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14	CALL_12
0x400c4b4	     0xf8e76fdffff	                           jle 0x400c230	      7480	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14	CALL_12
0x400c4ba	          0x4963c4	                        movsxd rax, r12d	      7481	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400c4bd	          0x4929c6	                            sub r14, rax	      7481	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400c4c0	      0xe96bfdffff	                           jmp 0x400c230	      7481	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400c4c5	           0xf1f00	                         nop dword [rax]	      7481	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400c4c8	            0x31f6	                            xor esi, esi	      7481	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400c4ca	            0x31c0	                            xor eax, eax	      7464	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400c4cc	          0x4c39fa	                            cmp rdx, r15	      7464	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400c4cf	     0xf84e0010000	                            je 0x400c6b5	      7464	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400c4d5	          0x4c39f9	                            cmp rcx, r15	      7465	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400c4d8	    0x48c7442408ff	        mov qword [rsp + 8], 0x7fffffff 	      7465	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400c4e1	     0xf84b7010000	                            je 0x400c69e	      7465	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400c4e7	          0x4c89ff	                            mov rdi, r15	      7468	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_10
0x400c4ea	      0x4889742410	             mov qword [rsp + 0x10], rsi	      7468	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_10
0x400c4ef	      0xe800000000	                          call 0x400c4f4	      7468	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_10
0x400c4f4	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      7468	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_10
0x400c4f9	        0x4c8d1430	                    lea r10, [rax + rsi]	      7468	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_10
0x400c4fd	      0xe949ffffff	                           jmp 0x400c44b	      7471	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400c502	    0x660f1f440000	                    nop word [rax + rax]	      7471	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400c508	          0x4c89ff	                            mov rdi, r15	      7458	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_9
0x400c50b	      0xe800000000	                          call 0x400c510	      7458	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_9
0x400c510	    0x48c7442408ff	        mov qword [rsp + 8], 0x7fffffff 	      7459	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400c519	          0x4989c2	                            mov r10, rax	      7458	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_9
0x400c51c	      0xe92affffff	                           jmp 0x400c44b	      7460	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400c521	     0xf1f80000000	                         nop dword [rax]	      7460	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400c528	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      7391	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400c52c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7391	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400c530	      0x4889542448	             mov qword [rsp + 0x48], rdx	      7391	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400c535	      0x4889442440	             mov qword [rsp + 0x40], rax	      7391	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400c53a	    0x488b15000000	            mov rdx, qword [0x0400c541] 	      7392	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400c541	    0x488b05000000	            mov rax, qword [0x0400c548] 	      7392	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400c548	      0x4889542458	             mov qword [rsp + 0x58], rdx	      7392	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400c54d	      0x4889442450	             mov qword [rsp + 0x50], rax	      7392	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400c552	      0xe97efeffff	                           jmp 0x400c3d5	      7392	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400c557	    0x8b3500000000	            mov esi, dword [0x0400c55d] 	      7510	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18
0x400c55d	            0x85f6	                           test esi, esi	      7510	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18
0x400c55f	     0xf8432020000	                            je 0x400c797	      7510	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18
0x400c565	    0x833d00000000	           cmp dword [0x0400c56c], 0x16 	      7512	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0x400c56c	     0xf8428030000	                            je 0x400c89a	      7512	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0x400c572	    0x488dac245001	                  lea rbp, [rsp + 0x150]	      7512	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0x400c57a	    0xc68424500100	               mov byte [rsp + 0x150], 0	      7520	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_5
0x400c582	      0x4c8b642428	            mov r12, qword [rsp + 0x28] 	      7522	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0x400c587	      0x4c8b6c2420	            mov r13, qword [rsp + 0x20] 	      7523	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0x400c58c	          0x4d39e6	                            cmp r14, r12	      7522	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0x400c58f	            0x7509	                           jne 0x400c59a	      7522	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0x400c591	          0x4c39eb	                            cmp rbx, r13	      7523	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0x400c594	     0xf8491030000	                            je 0x400c92b	      7523	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0x400c59a	      0x4c8b442430	              mov r8, qword [rsp + 0x30]	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400c59f	          0x4c8b08	                     mov r9, qword [rax]	      7536	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6
0x400c5a2	      0xba05000000	                              mov edx, 5	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400c5a7	      0xbe00000000	                              mov esi, 0	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400c5ac	            0x31ff	                            xor edi, edi	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400c5ae	      0x4c8b7c2438	            mov r15, qword [rsp + 0x38] 	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400c5b3	      0x4c89442410	              mov qword [rsp + 0x10], r8	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400c5b8	      0x4c894c2408	                 mov qword [rsp + 8], r9	      7536	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6
0x400c5bd	      0xe800000000	                          call 0x400c5c2	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400c5c2	              0x53	                                push rbx	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400c5c3	            0x4156	                                push r14	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400c5c5	            0x4155	                                push r13	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400c5c7	            0x4154	                                push r12	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400c5c9	      0x4c8b442430	              mov r8, qword [rsp + 0x30]	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400c5ce	            0x4150	                                 push r8	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400c5d0	            0x4157	                                push r15	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400c5d2	      0x4c8b4c2438	              mov r9, qword [rsp + 0x38]	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400c5d7	      0x4c8b442448	              mov r8, qword [rsp + 0x48]	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400c5dc	    0x488b3d000000	            mov rdi, qword [0x0400c5e3] 	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400c5e3	          0x4889c2	                            mov rdx, rax	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400c5e6	          0x4889e9	                            mov rcx, rbp	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400c5e9	      0xbe01040000	                          mov esi, 0x401	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400c5ee	            0x31c0	                            xor eax, eax	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400c5f0	      0xe800000000	                          call 0x400c5f5	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400c5f5	        0x4883c430	                           add rsp, 0x30	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400c5f9	      0xe800000000	                          call 0x400c5fe	      7575	ops.c	FUNCTION_91	ELSE_1	CALL_34
0x400c5fe	          0x4863d8	                         movsxd rbx, eax	      7575	ops.c	FUNCTION_91	ELSE_1	CALL_34
0x400c601	          0x4885db	                           test rbx, rbx	      7576	ops.c	FUNCTION_91	ELSE_1	IF_22
0x400c604	            0x7e3a	                           jle 0x400c640	      7576	ops.c	FUNCTION_91	ELSE_1	IF_22
0x400c606	      0xba05000000	                              mov edx, 5	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400c60b	      0xbe00000000	                              mov esi, 0	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400c610	            0x31ff	                            xor edi, edi	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400c612	      0xe800000000	                          call 0x400c617	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400c617	    0x488b2d000000	            mov rbp, qword [0x0400c61e] 	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400c61e	          0x4989c4	                            mov r12, rax	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400c621	          0x4889ef	                            mov rdi, rbp	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400c624	      0xe800000000	                          call 0x400c629	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400c629	      0x488d7c0500	                    lea rdi, [rbp + rax]	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400c62e	          0x4889d9	                            mov rcx, rbx	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400c631	          0x4c89e2	                            mov rdx, r12	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400c634	      0xbe01040000	                          mov esi, 0x401	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400c639	            0x31c0	                            xor eax, eax	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400c63b	      0xe800000000	                          call 0x400c640	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400c640	    0x488b1d000000	            mov rbx, qword [0x0400c647] 	      7583	ops.c	FUNCTION_91	ELSE_1	IF_23
0x400c647	    0x488b3d000000	            mov rdi, qword [0x0400c64e] 	      7585	ops.c	FUNCTION_91	ELSE_1	IF_23	CALL_38
0x400c64e	    0x48c705000000	               mov qword [0x0400c659], 0	      7584	ops.c	FUNCTION_91	ELSE_1	IF_23
0x400c659	      0xe800000000	                          call 0x400c65e	      7585	ops.c	FUNCTION_91	ELSE_1	IF_23	CALL_38
0x400c65e	    0x48891d000000	            mov qword [0x0400c665], rbx 	      7586	ops.c	FUNCTION_91	ELSE_1	IF_23
0x400c665	      0xe9f4faffff	                           jmp 0x400c15e	      7586	ops.c	FUNCTION_91	ELSE_1	IF_23
0x400c66a	    0x448b98741400	         mov r11d, dword [rax + 0x1474] 	      7479	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400c671	          0x4585db	                         test r11d, r11d	      7479	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400c674	     0xf85b6fbffff	                           jne 0x400c230	      7479	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400c67a	      0xe928feffff	                           jmp 0x400c4a7	      7479	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400c67f	              0x90	                                     nop	      7479	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400c680	            0x31ff	                            xor edi, edi	      7371	ops.c	FUNCTION_91	IF_1	IF_2	CALL_2
0x400c682	      0xba05000000	                              mov edx, 5	      7371	ops.c	FUNCTION_91	IF_1	IF_2	CALL_2
0x400c687	      0xbe00000000	                              mov esi, 0	      7371	ops.c	FUNCTION_91	IF_1	IF_2	CALL_2
0x400c68c	      0xe800000000	                          call 0x400c691	      7371	ops.c	FUNCTION_91	IF_1	IF_2	CALL_2
0x400c691	          0x4889c7	                            mov rdi, rax	      7371	ops.c	FUNCTION_91	IF_1	IF_2	CALL_2
0x400c694	      0xe800000000	                          call 0x400c699	      7371	ops.c	FUNCTION_91	IF_1	IF_2	CALL_2
0x400c699	      0xe9c0faffff	                           jmp 0x400c15e	      7372	ops.c	FUNCTION_91	IF_1	IF_2
0x400c69e	        0x8b4c2458	            mov ecx, dword [rsp + 0x58] 	      7372	ops.c	FUNCTION_91	IF_1	IF_2
0x400c6a2	            0x29c1	                            sub ecx, eax	      7372	ops.c	FUNCTION_91	IF_1	IF_2
0x400c6a4	            0x89c8	                            mov eax, ecx	      7372	ops.c	FUNCTION_91	IF_1	IF_2
0x400c6a6	          0x83c001	                              add eax, 1	      7372	ops.c	FUNCTION_91	IF_1	IF_2
0x400c6a9	            0x4898	                                    cdqe	      7372	ops.c	FUNCTION_91	IF_1	IF_2
0x400c6ab	      0x4889442408	                mov qword [rsp + 8], rax	      7372	ops.c	FUNCTION_91	IF_1	IF_2
0x400c6b0	      0xe932feffff	                           jmp 0x400c4e7	      7372	ops.c	FUNCTION_91	IF_1	IF_2
0x400c6b5	      0x4863742448	         movsxd rsi, dword [rsp + 0x48] 	      7464	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400c6ba	          0x4889f0	                            mov rax, rsi	      7464	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400c6bd	      0xe913feffff	                           jmp 0x400c4d5	      7464	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400c6c2	        0x8b442458	            mov eax, dword [rsp + 0x58] 	      7394	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400c6c6	            0x85c0	                           test eax, eax	      7394	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400c6c8	     0xf8e17fdffff	                           jle 0x400c3e5	      7394	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400c6ce	          0x83e801	                              sub eax, 1	      7395	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400c6d1	        0x89442458	             mov dword [rsp + 0x58], eax	      7395	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400c6d5	      0xe90bfdffff	                           jmp 0x400c3e5	      7395	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400c6da	          0x8b5840	            mov ebx, dword [rax + 0x40] 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400c6dd	    0x391d00000000	            cmp dword [0x0400c6e3], ebx 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400c6e3	     0xf85b7fcffff	                           jne 0x400c3a0	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400c6e9	          0x8b5844	            mov ebx, dword [rax + 0x44] 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400c6ec	    0x391d00000000	            cmp dword [0x0400c6f2], ebx 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400c6f2	      0xe9a9fcffff	                           jmp 0x400c3a0	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400c6f7	    0x488b05000000	            mov rax, qword [0x0400c6fe] 	      7403	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400c6fe	    0x488b3d000000	            mov rdi, qword [0x0400c705] 	      7408	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0x400c705	    0x488d8c240401	                  lea rcx, [rsp + 0x104]	      7408	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0x400c70d	    0x4c8d84240801	                   lea r8, [rsp + 0x108]	      7408	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0x400c715	      0x488d542450	                   lea rdx, [rsp + 0x50]	      7408	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0x400c71a	      0x488d742440	                   lea rsi, [rsp + 0x40]	      7408	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0x400c71f	    0x488b1d000000	            mov rbx, qword [0x0400c726] 	      7400	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400c726	    0xc78424fc0000	               mov dword [rsp + 0xfc], 1	      7405	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400c731	    0x488905000000	            mov qword [0x0400c738], rax 	      7403	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400c738	    0xc78424000100	              mov dword [rsp + 0x100], 1	      7406	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400c743	    0xc78424a00000	               mov dword [rsp + 0xa0], 0	      7407	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400c74e	      0xe800000000	                          call 0x400c753	      7408	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0x400c753	    0x488b05000000	            mov rax, qword [0x0400c75a] 	      7413	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_8
0x400c75a	    0x48891d000000	            mov qword [0x0400c761], rbx 	      7411	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400c761	    0x817848ffffff	     cmp dword [rax + 0x48], 0x7fffffff 	      7413	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_8
0x400c768	     0xf84ad010000	                            je 0x400c91b	      7413	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_8
0x400c76e	    0x8b9424080100	           mov edx, dword [rsp + 0x108] 	      7416	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400c775	    0x8b8424040100	           mov eax, dword [rsp + 0x104] 	      7416	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400c77c	            0x39c2	                            cmp edx, eax	      7416	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400c77e	     0xf8d6efcffff	                           jge 0x400c3f2	      7416	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400c784	    0x899424040100	            mov dword [rsp + 0x104], edx	      7419	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400c78b	    0x898424080100	            mov dword [rsp + 0x108], eax	      7420	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400c792	      0xe95bfcffff	                           jmp 0x400c3f2	      7420	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400c797	      0xe800000000	                          call 0x400c79c	      7546	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_24
0x400c79c	          0x4989c4	                            mov r12, rax	      7546	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_24
0x400c79f	    0x488dac245001	                  lea rbp, [rsp + 0x150]	      7548	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0x400c7a7	      0xe800000000	                          call 0x400c7ac	      7547	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_25
0x400c7ac	    0x488b05000000	            mov rax, qword [0x0400c7b3] 	      7549	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7
0x400c7b3	      0xbe32000000	                           mov esi, 0x32	      7548	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0x400c7b8	          0x4889ef	                            mov rdi, rbp	      7548	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0x400c7bb	    0x8b88d8000000	            mov ecx, dword [rax + 0xd8] 	      7548	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0x400c7c1	          0x8b5040	            mov edx, dword [rax + 0x40] 	      7548	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0x400c7c4	          0x83c101	                              add ecx, 1	      7548	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0x400c7c7	          0x83c201	                              add edx, 1	      7548	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0x400c7ca	      0xe800000000	                          call 0x400c7cf	      7548	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0x400c7cf	          0x4c89e7	                            mov rdi, r12	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400c7d2	      0xe800000000	                          call 0x400c7d7	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400c7d7	          0x4c89e7	                            mov rdi, r12	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400c7da	          0x4189c5	                           mov r13d, eax	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400c7dd	      0xe800000000	                          call 0x400c7e2	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400c7e2	    0x488dbc242001	                  lea rdi, [rsp + 0x120]	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400c7ea	          0x4489e9	                           mov ecx, r13d	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400c7ed	            0x89c2	                            mov edx, eax	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400c7ef	      0xbe28000000	                           mov esi, 0x28	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400c7f4	      0xe800000000	                          call 0x400c7f9	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400c7f9	      0x4c8b642428	            mov r12, qword [rsp + 0x28] 	      7553	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400c7fe	      0x4c8b6c2420	            mov r13, qword [rsp + 0x20] 	      7554	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400c803	          0x4d39e6	                            cmp r14, r12	      7553	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400c806	            0x7509	                           jne 0x400c811	      7553	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400c808	          0x4c39eb	                            cmp rbx, r13	      7554	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400c80b	     0xf8469010000	                            je 0x400c97a	      7554	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400c811	    0x488b05000000	            mov rax, qword [0x0400c818] 	      7567	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8
0x400c818	      0x4c8b4c2430	              mov r9, qword [rsp + 0x30]	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400c81d	      0xba05000000	                              mov edx, 5	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400c822	      0x4c8b442438	              mov r8, qword [rsp + 0x38]	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400c827	      0xbe00000000	                              mov esi, 0	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400c82c	            0x31ff	                            xor edi, edi	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400c82e	          0x4c8b38	                    mov r15, qword [rax]	      7567	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8
0x400c831	    0x488b05000000	            mov rax, qword [0x0400c838] 	      7566	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8
0x400c838	      0x4c894c2418	              mov qword [rsp + 0x18], r9	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400c83d	      0x4c89442410	              mov qword [rsp + 0x10], r8	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400c842	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7566	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8
0x400c846	      0x4889442408	                mov qword [rsp + 8], rax	      7566	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8
0x400c84b	      0xe800000000	                          call 0x400c850	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400c850	        0x4883ec08	                              sub rsp, 8	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400c854	    0x488b3d000000	            mov rdi, qword [0x0400c85b] 	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400c85b	          0x4889c2	                            mov rdx, rax	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400c85e	              0x53	                                push rbx	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400c85f	            0x4156	                                push r14	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400c861	          0x4889e9	                            mov rcx, rbp	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400c864	            0x4155	                                push r13	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400c866	            0x4154	                                push r12	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400c868	      0xbe01040000	                          mov esi, 0x401	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400c86d	      0x4c8b4c2440	              mov r9, qword [rsp + 0x40]	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400c872	            0x31c0	                            xor eax, eax	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400c874	            0x4151	                                 push r9	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400c876	      0x4c8b442440	              mov r8, qword [rsp + 0x40]	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400c87b	            0x4150	                                 push r8	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400c87d	            0x4157	                                push r15	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400c87f	      0x4c8b4c2448	              mov r9, qword [rsp + 0x48]	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400c884	    0x4c8d84246001	                   lea r8, [rsp + 0x160]	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400c88c	      0xe800000000	                          call 0x400c891	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400c891	        0x4883c440	                           add rsp, 0x40	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400c895	      0xe95ffdffff	                           jmp 0x400c5f9	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400c89a	    0x488b3d000000	            mov rdi, qword [0x0400c8a1] 	      7512	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0x400c8a1	    0x817f48ffffff	     cmp dword [rdi + 0x48], 0x7fffffff 	      7512	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0x400c8a8	     0xf84c4fcffff	                            je 0x400c572	      7512	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0x400c8ae	      0x488d442440	                   lea rax, [rsp + 0x40]	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0x400c8b3	      0x488d4c2448	                   lea rcx, [rsp + 0x48]	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0x400c8b8	      0x4c8d442458	                    lea r8, [rsp + 0x58]	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0x400c8bd	      0x488d542450	                   lea rdx, [rsp + 0x50]	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0x400c8c2	    0x488dac245001	                  lea rbp, [rsp + 0x150]	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400c8ca	          0x4889c6	                            mov rsi, rax	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0x400c8cd	      0xe800000000	                          call 0x400c8d2	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0x400c8d2	    0x448ba4240801	          mov r12d, dword [rsp + 0x108] 	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400c8da	    0x442ba4240401	           sub r12d, dword [rsp + 0x104]	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400c8e2	      0xba05000000	                              mov edx, 5	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400c8e7	      0xbe00000000	                              mov esi, 0	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400c8ec	            0x31ff	                            xor edi, edi	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400c8ee	      0xe800000000	                          call 0x400c8f3	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400c8f3	      0xbe32000000	                           mov esi, 0x32	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400c8f8	          0x4889c2	                            mov rdx, rax	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400c8fb	          0x4889ef	                            mov rdi, rbp	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400c8fe	        0x4183c401	                             add r12d, 1	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400c902	            0x31c0	                            xor eax, eax	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400c904	          0x4d63e4	                        movsxd r12, r12d	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400c907	          0x4c89e1	                            mov rcx, r12	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400c90a	      0xe800000000	                          call 0x400c90f	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400c90f	    0x488b05000000	            mov rax, qword [0x0400c916] 	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400c916	      0xe967fcffff	                           jmp 0x400c582	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400c91b	    0xc78424080100	    mov dword [rsp + 0x108], 0x7fffffff 	      7414	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_8
0x400c926	      0xe9c7faffff	                           jmp 0x400c3f2	      7414	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_8
0x400c92b	      0x4c8b7c2430	            mov r15, qword [rsp + 0x30] 	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400c930	      0x4c8b6c2438	            mov r13, qword [rsp + 0x38] 	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400c935	      0xba05000000	                              mov edx, 5	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400c93a	          0x4c8b20	                    mov r12, qword [rax]	      7527	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0x400c93d	      0xbe00000000	                              mov esi, 0	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400c942	            0x31ff	                            xor edi, edi	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400c944	      0xe800000000	                          call 0x400c949	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400c949	              0x53	                                push rbx	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400c94a	    0x488b3d000000	            mov rdi, qword [0x0400c951] 	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400c951	          0x4889c2	                            mov rdx, rax	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400c954	            0x4156	                                push r14	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400c956	            0x4157	                                push r15	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400c958	          0x4d89e1	                             mov r9, r12	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400c95b	            0x4155	                                push r13	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400c95d	      0x4c8b442438	              mov r8, qword [rsp + 0x38]	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400c962	          0x4889e9	                            mov rcx, rbp	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400c965	      0xbe01040000	                          mov esi, 0x401	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400c96a	            0x31c0	                            xor eax, eax	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400c96c	      0xe800000000	                          call 0x400c971	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400c971	        0x4883c420	                           add rsp, 0x20	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400c975	      0xe97ffcffff	                           jmp 0x400c5f9	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400c97a	    0x488b05000000	            mov rax, qword [0x0400c981] 	      7559	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400c981	      0x4c8b642430	            mov r12, qword [rsp + 0x30] 	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400c986	      0xba05000000	                              mov edx, 5	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400c98b	      0x4c8b7c2438	            mov r15, qword [rsp + 0x38] 	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400c990	      0xbe00000000	                              mov esi, 0	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400c995	            0x31ff	                            xor edi, edi	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400c997	          0x4c8b28	                    mov r13, qword [rax]	      7559	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400c99a	    0x488b05000000	            mov rax, qword [0x0400c9a1] 	      7558	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400c9a1	        0x4c8b4838	              mov r9, qword [rax + 0x38]	      7558	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400c9a5	      0x4c894c2408	                 mov qword [rsp + 8], r9	      7558	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400c9aa	      0xe800000000	                          call 0x400c9af	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400c9af	        0x4883ec08	                              sub rsp, 8	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400c9b3	              0x53	                                push rbx	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400c9b4	            0x4156	                                push r14	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400c9b6	            0x4154	                                push r12	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400c9b8	            0x4157	                                push r15	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400c9ba	            0x4155	                                push r13	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400c9bc	      0x4c8b4c2438	              mov r9, qword [rsp + 0x38]	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400c9c1	    0x4c8d84245001	                   lea r8, [rsp + 0x150]	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400c9c9	      0xe90efcffff	                           jmp 0x400c5dc	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400c9ce	      0xe800000000	                  call section_end..data	      7607	ops.c	FUNCTION_91
init_yank	SWITCH,0:IF,0:WHILE,0:DO,0:FOR,1:ELSE,0:CALL,0:functions,0	7
0x4004750	      0xb800000000	                              mov eax, 0	      2983	ops.c	FUNCTION_41
0x4004755	           0xf1f00	                         nop dword [rax]	      2983	ops.c	FUNCTION_41
0x4004758	    0x48c700000000	                      mov qword [rax], 0	      2987	ops.c	FUNCTION_41	FOR_1
0x400475f	        0x4883c020	                           add rax, 0x20	      2987	ops.c	FUNCTION_41	FOR_1
0x4004763	    0x483d00000000	                              cmp rax, 0	      2986	ops.c	FUNCTION_41	FOR_1
0x4004769	            0x75ed	                           jne 0x4004758	      2986	ops.c	FUNCTION_41	FOR_1
0x400476b	            0xf3c3	                                     ret	      2988	ops.c	FUNCTION_41
clip_yank_selection	SWITCH,0:IF,1:WHILE,0:DO,0:FOR,0:ELSE,1:CALL,2:functions,0	26
0x4009b90	            0x4155	                                push r13	      6635	ops.c	FUNCTION_76
0x4009b92	            0x4154	                                push r12	      6635	ops.c	FUNCTION_76
0x4009b94	      0xb800000000	                              mov eax, 0	      6641	ops.c	FUNCTION_76	ELSE_1
0x4009b99	              0x55	                                push rbp	      6635	ops.c	FUNCTION_76
0x4009b9a	              0x53	                                push rbx	      6635	ops.c	FUNCTION_76
0x4009b9b	            0x89fd	                            mov ebp, edi	      6635	ops.c	FUNCTION_76
0x4009b9d	      0xbb00000000	                              mov ebx, 0	      6641	ops.c	FUNCTION_76	ELSE_1
0x4009ba2	          0x4889cf	                            mov rdi, rcx	      6643	ops.c	FUNCTION_76	CALL_1
0x4009ba5	          0x4989f4	                            mov r12, rsi	      6635	ops.c	FUNCTION_76
0x4009ba8	        0x4883ec08	                              sub rsp, 8	      6635	ops.c	FUNCTION_76
0x4009bac	    0x4881f9000000	                              cmp rcx, 0	      6641	ops.c	FUNCTION_76	ELSE_1
0x4009bb3	          0x4989d5	                            mov r13, rdx	      6635	ops.c	FUNCTION_76
0x4009bb6	        0x480f44d8	                          cmove rbx, rax	      6641	ops.c	FUNCTION_76	ELSE_1
0x4009bba	      0xe800000000	                          call 0x4009bbf	      6643	ops.c	FUNCTION_76	CALL_1
0x4009bbf	        0x4883c408	                              add rsp, 8	      6646	ops.c	FUNCTION_76
0x4009bc3	          0x4c89e9	                            mov rcx, r13	      6645	ops.c	FUNCTION_76	CALL_2
0x4009bc6	          0x4c89e2	                            mov rdx, r12	      6645	ops.c	FUNCTION_76	CALL_2
0x4009bc9	            0x89ee	                            mov esi, ebp	      6645	ops.c	FUNCTION_76	CALL_2
0x4009bcb	          0x4889df	                            mov rdi, rbx	      6645	ops.c	FUNCTION_76	CALL_2
0x4009bce	          0x4531c9	                            xor r9d, r9d	      6645	ops.c	FUNCTION_76	CALL_2
0x4009bd1	              0x5b	                                 pop rbx	      6646	ops.c	FUNCTION_76
0x4009bd2	              0x5d	                                 pop rbp	      6646	ops.c	FUNCTION_76
0x4009bd3	            0x415c	                                 pop r12	      6646	ops.c	FUNCTION_76
0x4009bd5	            0x415d	                                 pop r13	      6646	ops.c	FUNCTION_76
0x4009bd7	          0x4531c0	                            xor r8d, r8d	      6645	ops.c	FUNCTION_76	CALL_2
0x4009bda	      0xe9516cffff	                      jmp sym.str_to_reg	      6645	ops.c	FUNCTION_76	CALL_2
handle_viminfo_register	SWITCH,0:IF,13:WHILE,0:DO,0:FOR,2:ELSE,3:CALL,5:functions,0	166
0x4006c70	            0x8b07	                    mov eax, dword [rdi]	      6240	ops.c	FUNCTION_71	IF_1
0x4006c72	          0x83f805	                              cmp eax, 5	      6240	ops.c	FUNCTION_71	IF_1
0x4006c75	     0xf8e83010000	                           jle 0x4006dfe	      6240	ops.c	FUNCTION_71	IF_1
0x4006c7b	            0x4157	                                push r15	      6225	ops.c	FUNCTION_71
0x4006c7d	            0x4156	                                push r14	      6225	ops.c	FUNCTION_71
0x4006c7f	            0x4155	                                push r13	      6225	ops.c	FUNCTION_71
0x4006c81	            0x4154	                                push r12	      6225	ops.c	FUNCTION_71
0x4006c83	              0x55	                                push rbp	      6225	ops.c	FUNCTION_71
0x4006c84	              0x53	                                push rbx	      6225	ops.c	FUNCTION_71
0x4006c85	        0x4883ec38	                           sub rsp, 0x38	      6225	ops.c	FUNCTION_71
0x4006c89	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	      6226	ops.c	FUNCTION_71
0x4006c8d	            0x8b2b	                    mov ebp, dword [rbx]	      6241	ops.c	FUNCTION_71	IF_1
0x4006c8f	            0x85ed	                           test ebp, ebp	      6241	ops.c	FUNCTION_71	IF_1
0x4006c91	     0xf8559010000	                           jne 0x4006df0	      6241	ops.c	FUNCTION_71	IF_1
0x4006c97	        0x448b5b20	           mov r11d, dword [rbx + 0x20] 	      6242	ops.c	FUNCTION_71	IF_1
0x4006c9b	          0x4585db	                         test r11d, r11d	      6242	ops.c	FUNCTION_71	IF_1
0x4006c9e	     0xf854c010000	                           jne 0x4006df0	      6242	ops.c	FUNCTION_71	IF_1
0x4006ca4	        0x448b5340	           mov r10d, dword [rbx + 0x40] 	      6243	ops.c	FUNCTION_71	IF_1
0x4006ca8	          0x4585d2	                         test r10d, r10d	      6243	ops.c	FUNCTION_71	IF_1
0x4006cab	     0xf853f010000	                           jne 0x4006df0	      6243	ops.c	FUNCTION_71	IF_1
0x4006cb1	        0x448b4b60	            mov r9d, dword [rbx + 0x60] 	      6244	ops.c	FUNCTION_71	IF_1
0x4006cb5	          0x4585c9	                           test r9d, r9d	      6244	ops.c	FUNCTION_71	IF_1
0x4006cb8	     0xf8532010000	                           jne 0x4006df0	      6244	ops.c	FUNCTION_71	IF_1
0x4006cbe	    0x448b83800000	            mov r8d, dword [rbx + 0x80] 	      6245	ops.c	FUNCTION_71	IF_1
0x4006cc5	          0x4585c0	                           test r8d, r8d	      6245	ops.c	FUNCTION_71	IF_1
0x4006cc8	     0xf8522010000	                           jne 0x4006df0	      6245	ops.c	FUNCTION_71	IF_1
0x4006cce	    0x8bbba0000000	            mov edi, dword [rbx + 0xa0] 	      6246	ops.c	FUNCTION_71	IF_1
0x4006cd4	            0x85ff	                           test edi, edi	      6246	ops.c	FUNCTION_71	IF_1
0x4006cd6	     0xf8514010000	                           jne 0x4006df0	      6246	ops.c	FUNCTION_71	IF_1
0x4006cdc	        0x488b6b28	            mov rbp, qword [rbx + 0x28] 	      6249	ops.c	FUNCTION_71
0x4006ce0	          0x83fd27	                           cmp ebp, 0x27	      6250	ops.c	FUNCTION_71	IF_2
0x4006ce3	     0xf8707010000	                            ja 0x4006df0	      6250	ops.c	FUNCTION_71	IF_2
0x4006ce9	        0x4c8b6348	            mov r12, qword [rbx + 0x48] 	      6252	ops.c	FUNCTION_71
0x4006ced	        0x4183fc02	                             cmp r12d, 2	      6253	ops.c	FUNCTION_71	IF_3
0x4006cf1	     0xf87f9000000	                            ja 0x4006df0	      6253	ops.c	FUNCTION_71	IF_3
0x4006cf7	        0x488b5368	            mov rdx, qword [rbx + 0x68] 	      6255	ops.c	FUNCTION_71
0x4006cfb	            0x89d1	                            mov ecx, edx	      6256	ops.c	FUNCTION_71	IF_4
0x4006cfd	      0x4889542408	                mov qword [rsp + 8], rdx	      6255	ops.c	FUNCTION_71
0x4006d02	          0x83c105	                              add ecx, 5	      6256	ops.c	FUNCTION_71	IF_4
0x4006d05	            0x39c8	                            cmp eax, ecx	      6256	ops.c	FUNCTION_71	IF_4
0x4006d07	     0xf8ee3000000	                           jle 0x4006df0	      6256	ops.c	FUNCTION_71	IF_4
0x4006d0d	    0x488b83880000	            mov rax, qword [rbx + 0x88] 	      6258	ops.c	FUNCTION_71
0x4006d14	            0x85c0	                           test eax, eax	      6259	ops.c	FUNCTION_71	IF_5
0x4006d16	      0x4889442418	             mov qword [rsp + 0x18], rax	      6258	ops.c	FUNCTION_71
0x4006d1b	     0xf88cf000000	                            js 0x4006df0	      6259	ops.c	FUNCTION_71	IF_5
0x4006d21	    0x488b0d000000	            mov rcx, qword [0x04006d28] 	      6262	ops.c	FUNCTION_71	IF_6
0x4006d28	          0x4885c9	                           test rcx, rcx	      6262	ops.c	FUNCTION_71	IF_6
0x4006d2b	     0xf8436010000	                            je 0x4006e67	      6262	ops.c	FUNCTION_71	IF_6
0x4006d31	          0x4863c5	                         movsxd rax, ebp	      6265	ops.c	FUNCTION_71	IF_6
0x4006d34	        0x48c1e005	                              shl rax, 5	      6265	ops.c	FUNCTION_71	IF_6
0x4006d38	        0x4c8d3c01	                    lea r15, [rcx + rax]	      6265	ops.c	FUNCTION_71	IF_6
0x4006d3c	        0x488b4308	                mov rax, qword [rbx + 8]	      6248	ops.c	FUNCTION_71
0x4006d40	          0x498b3f	                    mov rdi, qword [r15]	      6271	ops.c	FUNCTION_71	IF_7
0x4006d43	        0x89742424	             mov dword [rsp + 0x24], esi	      6271	ops.c	FUNCTION_71	IF_7
0x4006d47	      0x4889442428	             mov qword [rsp + 0x28], rax	      6248	ops.c	FUNCTION_71
0x4006d4c	    0x488b83a80000	            mov rax, qword [rbx + 0xa8] 	      6270	ops.c	FUNCTION_71
0x4006d53	          0x4885ff	                           test rdi, rdi	      6271	ops.c	FUNCTION_71	IF_7
0x4006d56	      0x4889442410	             mov qword [rsp + 0x10], rax	      6270	ops.c	FUNCTION_71
0x4006d5b	            0x7450	                            je 0x4006dad	      6271	ops.c	FUNCTION_71	IF_7
0x4006d5d	        0x8b4c2424	            mov ecx, dword [rsp + 0x24] 	      6271	ops.c	FUNCTION_71	IF_7
0x4006d61	            0x85c9	                           test ecx, ecx	      6271	ops.c	FUNCTION_71	IF_7
0x4006d63	            0x7514	                           jne 0x4006d79	      6271	ops.c	FUNCTION_71	IF_7
0x4006d65	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      6272	ops.c	FUNCTION_71	IF_7
0x4006d6a	          0x4885c0	                           test rax, rax	      6272	ops.c	FUNCTION_71	IF_7
0x4006d6d	     0xf847d000000	                            je 0x4006df0	      6272	ops.c	FUNCTION_71	IF_7
0x4006d73	        0x493b4718	            cmp rax, qword [r15 + 0x18] 	      6272	ops.c	FUNCTION_71	IF_7
0x4006d77	            0x7c77	                            jl 0x4006df0	      6272	ops.c	FUNCTION_71	IF_7
0x4006d79	      0x49837f0800	                  cmp qword [r15 + 8], 0	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x4006d7e	            0x7e2d	                           jle 0x4006dad	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x4006d80	    0x41bd01000000	                             mov r13d, 1	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x4006d86	          0x4531f6	                          xor r14d, r14d	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x4006d89	            0xeb08	                           jmp 0x4006d93	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x4006d8b	       0xf1f440000	                   nop dword [rax + rax]	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x4006d90	          0x498b3f	                    mov rdi, qword [r15]	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x4006d93	        0x4a8b3c37	              mov rdi, qword [rdi + r14]	      6277	ops.c	FUNCTION_71	IF_8	FOR_1
0x4006d97	        0x4983c608	                              add r14, 8	      6277	ops.c	FUNCTION_71	IF_8	FOR_1
0x4006d9b	      0xe800000000	                          call 0x4006da0	      6277	ops.c	FUNCTION_71	IF_8	FOR_1
0x4006da0	          0x4c89ef	                            mov rdi, r13	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x4006da3	        0x4983c501	                              add r13, 1	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x4006da7	        0x493b7f08	                cmp rdi, qword [r15 + 8]	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x4006dab	            0x7ce3	                            jl 0x4006d90	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x4006dad	          0x498b3f	                    mov rdi, qword [r15]	      6278	ops.c	FUNCTION_71	CALL_2
0x4006db0	      0xe800000000	                          call 0x4006db5	      6278	ops.c	FUNCTION_71	CALL_2
0x4006db5	    0x48833d000000	               cmp qword [0x04006dbd], 0	      6280	ops.c	FUNCTION_71	IF_9
0x4006dbd	     0xf84b7000000	                            je 0x4006e7a	      6280	ops.c	FUNCTION_71	IF_9
0x4006dc3	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      6288	ops.c	FUNCTION_71
0x4006dc7	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      6289	ops.c	FUNCTION_71
0x4006dcc	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      6290	ops.c	FUNCTION_71
0x4006dd1	        0x45886710	             mov byte [r15 + 0x10], r12b	      6287	ops.c	FUNCTION_71
0x4006dd5	        0x41894714	             mov dword [r15 + 0x14], eax	      6288	ops.c	FUNCTION_71
0x4006dd9	            0x85c9	                           test ecx, ecx	      6291	ops.c	FUNCTION_71	IF_12
0x4006ddb	          0x4863c1	                         movsxd rax, ecx	      6289	ops.c	FUNCTION_71
0x4006dde	        0x49894708	                mov qword [r15 + 8], rax	      6289	ops.c	FUNCTION_71
0x4006de2	        0x49895718	             mov qword [r15 + 0x18], rdx	      6290	ops.c	FUNCTION_71
0x4006de6	            0x7518	                           jne 0x4006e00	      6291	ops.c	FUNCTION_71	IF_12
0x4006de8	    0x49c707000000	                      mov qword [r15], 0	      6292	ops.c	FUNCTION_71	IF_12
0x4006def	              0x90	                                     nop	      6292	ops.c	FUNCTION_71	IF_12
0x4006df0	        0x4883c438	                           add rsp, 0x38	      6308	ops.c	FUNCTION_71
0x4006df4	              0x5b	                                 pop rbx	      6308	ops.c	FUNCTION_71
0x4006df5	              0x5d	                                 pop rbp	      6308	ops.c	FUNCTION_71
0x4006df6	            0x415c	                                 pop r12	      6308	ops.c	FUNCTION_71
0x4006df8	            0x415d	                                 pop r13	      6308	ops.c	FUNCTION_71
0x4006dfa	            0x415e	                                 pop r14	      6308	ops.c	FUNCTION_71
0x4006dfc	            0x415f	                                 pop r15	      6308	ops.c	FUNCTION_71
0x4006dfe	            0xf3c3	                                     ret	      6308	ops.c	FUNCTION_71
0x4006e00	    0x8d3cc5000000	                        lea edi, [rax*8]	      6296	ops.c	FUNCTION_71	ELSE_2	CALL_4
0x4006e07	      0xe800000000	                          call 0x4006e0c	      6296	ops.c	FUNCTION_71	ELSE_2	CALL_4
0x4006e0c	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x4006e11	          0x498907	                    mov qword [r15], rax	      6295	ops.c	FUNCTION_71	ELSE_2
0x4006e14	            0x85c9	                           test ecx, ecx	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x4006e16	            0x7ed8	                           jle 0x4006df0	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x4006e18	        0x448d69ff	                     lea r13d, [rcx - 1]	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x4006e1c	    0x4881c3d00000	                           add rbx, 0xd0	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x4006e23	            0x31ed	                            xor ebp, ebp	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x4006e25	        0x49c1e503	                              shl r13, 3	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x4006e29	            0xeb23	                           jmp 0x4006e4e	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x4006e2b	       0xf1f440000	                   nop dword [rax + rax]	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x4006e30	          0x488b13	                    mov rdx, qword [rbx]	      6301	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x4006e33	        0x48891428	              mov qword [rax + rbp], rdx	      6301	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x4006e37	    0x48c703000000	                      mov qword [rbx], 0	      6302	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x4006e3e	        0x4883c320	                           add rbx, 0x20	      6302	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x4006e42	          0x4c39ed	                            cmp rbp, r13	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x4006e45	            0x74a9	                            je 0x4006df0	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x4006e47	          0x498b07	                    mov rax, qword [r15]	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x4006e4a	        0x4883c508	                              add rbp, 8	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x4006e4e	          0x8b530c	              mov edx, dword [rbx + 0xc]	      6299	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x4006e51	            0x85d2	                           test edx, edx	      6299	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x4006e53	            0x75db	                           jne 0x4006e30	      6299	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x4006e55	          0x488b3b	                    mov rdi, qword [rbx]	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x4006e58	        0x4c8d2428	                    lea r12, [rax + rbp]	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x4006e5c	      0xe800000000	                          call 0x4006e61	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x4006e61	        0x49890424	                    mov qword [r12], rax	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x4006e65	            0xebd7	                           jmp 0x4006e3e	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x4006e67	          0x4863cd	                         movsxd rcx, ebp	      6267	ops.c	FUNCTION_71	ELSE_1
0x4006e6a	        0x48c1e105	                              shl rcx, 5	      6267	ops.c	FUNCTION_71	ELSE_1
0x4006e6e	    0x4c8db9000000	                          lea r15, [rcx]	      6267	ops.c	FUNCTION_71	ELSE_1
0x4006e75	      0xe9c2feffff	                           jmp 0x4006d3c	      6267	ops.c	FUNCTION_71	ELSE_1
0x4006e7a	      0xf644242801	               test byte [rsp + 0x28], 1	      6282	ops.c	FUNCTION_71	IF_9	IF_10
0x4006e7f	            0x7407	                            je 0x4006e88	      6282	ops.c	FUNCTION_71	IF_9	IF_10
0x4006e81	    0x4c893d000000	            mov qword [0x04006e88], r15 	      6283	ops.c	FUNCTION_71	IF_9	IF_10
0x4006e88	      0xf644242802	               test byte [rsp + 0x28], 2	      6284	ops.c	FUNCTION_71	IF_9	IF_11
0x4006e8d	     0xf8430ffffff	                            je 0x4006dc3	      6284	ops.c	FUNCTION_71	IF_9	IF_11
0x4006e93	      0x837c242400	               cmp dword [rsp + 0x24], 0	      6284	ops.c	FUNCTION_71	IF_9	IF_11
0x4006e98	            0x750d	                           jne 0x4006ea7	      6284	ops.c	FUNCTION_71	IF_9	IF_11
0x4006e9a	    0x833d00000000	               cmp dword [0x04006ea1], 0	      6284	ops.c	FUNCTION_71	IF_9	IF_11
0x4006ea1	     0xf851cffffff	                           jne 0x4006dc3	      6284	ops.c	FUNCTION_71	IF_9	IF_11
0x4006ea7	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      4210	ops.c	FUNCTION_51	IF_1
0x4006eaa	            0x7430	                            je 0x4006edc	      4210	ops.c	FUNCTION_51	IF_1
0x4006eac	          0x83fd09	                              cmp ebp, 9	      4212	ops.c	FUNCTION_51	ELSE_1	IF_2
0x4006eaf	          0x8d4530	                   lea eax, [rbp + 0x30]	      4213	ops.c	FUNCTION_51	ELSE_1	IF_2
0x4006eb2	            0x7e1d	                           jle 0x4006ed1	      4212	ops.c	FUNCTION_51	ELSE_1	IF_2
0x4006eb4	          0x83fd24	                           cmp ebp, 0x24	      4214	ops.c	FUNCTION_51	ELSE_2	IF_3
0x4006eb7	            0x742a	                            je 0x4006ee3	      4214	ops.c	FUNCTION_51	ELSE_2	IF_3
0x4006eb9	          0x83fd25	                           cmp ebp, 0x25	      4217	ops.c	FUNCTION_51	ELSE_3	IF_4
0x4006ebc	      0xb82a000000	                           mov eax, 0x2a	      4218	ops.c	FUNCTION_51	ELSE_3	IF_4
0x4006ec1	            0x740e	                            je 0x4006ed1	      4217	ops.c	FUNCTION_51	ELSE_3	IF_4
0x4006ec3	          0x8d4557	                   lea eax, [rbp + 0x57]	      4235	ops.c	FUNCTION_51	ELSE_5
0x4006ec6	          0x83fd26	                           cmp ebp, 0x26	      4235	ops.c	FUNCTION_51	ELSE_5
0x4006ec9	      0xbe2b000000	                           mov esi, 0x2b	      4235	ops.c	FUNCTION_51	ELSE_5
0x4006ece	           0xf44c6	                          cmove eax, esi	      4235	ops.c	FUNCTION_51	ELSE_5
0x4006ed1	    0x890500000000	            mov dword [0x04006ed7], eax 	      6285	ops.c	FUNCTION_71	IF_9	CALL_3
0x4006ed7	      0xe9e7feffff	                           jmp 0x4006dc3	      6285	ops.c	FUNCTION_71	IF_9	CALL_3
0x4006edc	      0xb822000000	                           mov eax, 0x22	      4211	ops.c	FUNCTION_51	IF_1
0x4006ee1	            0xebee	                           jmp 0x4006ed1	      4211	ops.c	FUNCTION_51	IF_1
0x4006ee3	      0xb82d000000	                           mov eax, 0x2d	      4215	ops.c	FUNCTION_51	ELSE_2	IF_3
0x4006ee8	            0xebe7	                           jmp 0x4006ed1	      4215	ops.c	FUNCTION_51	ELSE_2	IF_3
adjust_clip_reg	SWITCH,0:IF,4:WHILE,0:DO,0:FOR,0:ELSE,1:CALL,0:functions,0	30
0x4002ed0	            0x8b0f	                    mov ecx, dword [rdi]	      1643	ops.c	FUNCTION_30	IF_1
0x4002ed2	            0x85c9	                           test ecx, ecx	      1643	ops.c	FUNCTION_30	IF_1
0x4002ed4	            0x7521	                           jne 0x4002ef7	      1643	ops.c	FUNCTION_30	IF_1
0x4002ed6	    0x8b0500000000	            mov eax, dword [0x04002edc] 	      1643	ops.c	FUNCTION_30	IF_1
0x4002edc	            0x85c0	                           test eax, eax	      1643	ops.c	FUNCTION_30	IF_1
0x4002ede	            0x7440	                            je 0x4002f20	      1643	ops.c	FUNCTION_30	IF_1
0x4002ee0	            0xa802	                              test al, 2	      1650	ops.c	FUNCTION_30	IF_1	ELSE_1
0x4002ee2	      0xba2a000000	                           mov edx, 0x2a	      1650	ops.c	FUNCTION_30	IF_1	ELSE_1
0x4002ee7	            0x740c	                            je 0x4002ef5	      1650	ops.c	FUNCTION_30	IF_1	ELSE_1
0x4002ee9	    0x833d00000000	               cmp dword [0x04002ef0], 1	      1650	ops.c	FUNCTION_30	IF_1	ELSE_1
0x4002ef0	            0x19d2	                            sbb edx, edx	      1650	ops.c	FUNCTION_30	IF_1	ELSE_1
0x4002ef2	          0x83c22b	                           add edx, 0x2b	      1650	ops.c	FUNCTION_30	IF_1	ELSE_1
0x4002ef5	            0x8917	                    mov dword [rdi], edx	      1649	ops.c	FUNCTION_30	IF_1	ELSE_1
0x4002ef7	    0x8b1500000000	            mov edx, dword [0x04002efd] 	      1652	ops.c	FUNCTION_30	IF_3
0x4002efd	            0x85d2	                           test edx, edx	      1652	ops.c	FUNCTION_30	IF_3
0x4002eff	            0x7505	                           jne 0x4002f06	      1652	ops.c	FUNCTION_30	IF_3
0x4002f01	          0x833f2a	                   cmp dword [rdi], 0x2a	      1652	ops.c	FUNCTION_30	IF_3
0x4002f04	            0x740f	                            je 0x4002f15	      1652	ops.c	FUNCTION_30	IF_3
0x4002f06	    0x8b0500000000	            mov eax, dword [0x04002f0c] 	      1654	ops.c	FUNCTION_30	IF_4
0x4002f0c	            0x85c0	                           test eax, eax	      1654	ops.c	FUNCTION_30	IF_4
0x4002f0e	            0x750b	                           jne 0x4002f1b	      1654	ops.c	FUNCTION_30	IF_4
0x4002f10	          0x833f2b	                   cmp dword [rdi], 0x2b	      1654	ops.c	FUNCTION_30	IF_4
0x4002f13	            0x7506	                           jne 0x4002f1b	      1654	ops.c	FUNCTION_30	IF_4
0x4002f15	    0xc70700000000	                      mov dword [rdi], 0	      1655	ops.c	FUNCTION_30	IF_4
0x4002f1b	            0xf3c3	                                     ret	      1655	ops.c	FUNCTION_30	IF_4
0x4002f1d	           0xf1f00	                         nop dword [rax]	      1655	ops.c	FUNCTION_30	IF_4
0x4002f20	    0x8b0500000000	            mov eax, dword [0x04002f26] 	      1643	ops.c	FUNCTION_30	IF_1
0x4002f26	            0x85c0	                           test eax, eax	      1643	ops.c	FUNCTION_30	IF_1
0x4002f28	            0x75b6	                           jne 0x4002ee0	      1643	ops.c	FUNCTION_30	IF_1
0x4002f2a	            0xf3c3	                                     ret	      1643	ops.c	FUNCTION_30	IF_1
get_yank_register	SWITCH,0:IF,9:WHILE,0:DO,0:FOR,0:ELSE,7:CALL,5:functions,0	80
0x40026c0	            0x85f6	                           test esi, esi	       913	ops.c	FUNCTION_15	IF_1
0x40026c2	    0xc70500000000	               mov dword [0x040026cc], 0	       912	ops.c	FUNCTION_15
0x40026cc	           0xf94c1	                                 sete cl	       913	ops.c	FUNCTION_15	IF_1
0x40026cf	            0x85ff	                           test edi, edi	       913	ops.c	FUNCTION_15	IF_1
0x40026d1	           0xf94c2	                                 sete dl	       913	ops.c	FUNCTION_15	IF_1
0x40026d4	          0x83ff22	                           cmp edi, 0x22	       913	ops.c	FUNCTION_15	IF_1
0x40026d7	           0xf94c0	                                 sete al	       913	ops.c	FUNCTION_15	IF_1
0x40026da	             0x8c2	                               or dl, al	       913	ops.c	FUNCTION_15	IF_1
0x40026dc	            0x7422	                            je 0x4002700	       913	ops.c	FUNCTION_15	IF_1
0x40026de	            0x84c9	                             test cl, cl	       913	ops.c	FUNCTION_15	IF_1
0x40026e0	            0x741e	                            je 0x4002700	       913	ops.c	FUNCTION_15	IF_1
0x40026e2	    0x488b05000000	            mov rax, qword [0x040026e9] 	       913	ops.c	FUNCTION_15	IF_1
0x40026e9	          0x4885c0	                           test rax, rax	       913	ops.c	FUNCTION_15	IF_1
0x40026ec	            0x7412	                            je 0x4002700	       913	ops.c	FUNCTION_15	IF_1
0x40026ee	    0x488905000000	            mov qword [0x040026f5], rax 	       915	ops.c	FUNCTION_15	IF_1
0x40026f5	            0x31c0	                            xor eax, eax	       916	ops.c	FUNCTION_15	IF_1
0x40026f7	              0xc3	                                     ret	       916	ops.c	FUNCTION_15	IF_1
0x40026f8	     0xf1f84000000	                   nop dword [rax + rax]	       916	ops.c	FUNCTION_15	IF_1
0x4002700	          0x8d57d0	                   lea edx, [rdi - 0x30]	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x4002703	          0x83fa09	                              cmp edx, 9	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x4002706	            0x7768	                            ja 0x4002770	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x4002708	            0x31c0	                            xor eax, eax	       910	ops.c	FUNCTION_15
0x400270a	          0x4863d2	                         movsxd rdx, edx	       950	ops.c	FUNCTION_15
0x400270d	        0x48c1e205	                              shl rdx, 5	       950	ops.c	FUNCTION_15
0x4002711	    0x4881c2000000	                              add rdx, 0	       950	ops.c	FUNCTION_15
0x4002718	            0x85f6	                           test esi, esi	       951	ops.c	FUNCTION_15	IF_9
0x400271a	    0x488915000000	            mov qword [0x04002721], rdx 	       950	ops.c	FUNCTION_15
0x4002721	            0x7448	                            je 0x400276b	       951	ops.c	FUNCTION_15	IF_9
0x4002723	    0x488915000000	            mov qword [0x0400272a], rdx 	       952	ops.c	FUNCTION_15	IF_9
0x400272a	              0xc3	                                     ret	       952	ops.c	FUNCTION_15	IF_9
0x400272b	       0xf1f440000	                   nop dword [rax + rax]	       952	ops.c	FUNCTION_15	IF_9
0x4002730	          0x8d47bf	                   lea eax, [rdi - 0x41]	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x4002733	          0x83f819	                           cmp eax, 0x19	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x4002736	            0x7648	                           jbe 0x4002780	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x4002738	          0x83ff2d	                           cmp edi, 0x2d	       928	ops.c	FUNCTION_15	ELSE_3	IF_5
0x400273b	     0xf8497000000	                            je 0x40027d8	       928	ops.c	FUNCTION_15	ELSE_3	IF_5
0x4002741	    0x8b1500000000	            mov edx, dword [0x04002747] 	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x4002747	            0x85d2	                           test edx, edx	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x4002749	            0x754d	                           jne 0x4002798	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x400274b	    0x8b0500000000	            mov eax, dword [0x04002751] 	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x4002751	            0x85c0	                           test eax, eax	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x4002753	            0x755b	                           jne 0x40027b0	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x4002755	          0x83ff7e	                           cmp edi, 0x7e	       945	ops.c	FUNCTION_15	ELSE_6	IF_8
0x4002758	            0x756e	                           jne 0x40027c8	       945	ops.c	FUNCTION_15	ELSE_6	IF_8
0x400275a	            0x84c9	                             test cl, cl	       945	ops.c	FUNCTION_15	ELSE_6	IF_8
0x400275c	            0x746a	                            je 0x40027c8	       945	ops.c	FUNCTION_15	ELSE_6	IF_8
0x400275e	    0x48c705000000	               mov qword [0x04002769], 0	       950	ops.c	FUNCTION_15
0x4002769	            0x31c0	                            xor eax, eax	       910	ops.c	FUNCTION_15
0x400276b	            0xf3c3	                                     ret	       954	ops.c	FUNCTION_15
0x400276d	           0xf1f00	                         nop dword [rax]	       954	ops.c	FUNCTION_15
0x4002770	          0x8d479f	                   lea eax, [rdi - 0x61]	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x4002773	          0x83f819	                           cmp eax, 0x19	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x4002776	            0x77b8	                            ja 0x4002730	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x4002778	          0x8d57a9	                   lea edx, [rdi - 0x57]	       922	ops.c	FUNCTION_15	ELSE_1	IF_3
0x400277b	            0xeb8b	                           jmp 0x4002708	       922	ops.c	FUNCTION_15	ELSE_1	IF_3
0x400277d	           0xf1f00	                         nop dword [rax]	       922	ops.c	FUNCTION_15	ELSE_1	IF_3
0x4002780	          0x8d57c9	                   lea edx, [rdi - 0x37]	       925	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_5
0x4002783	    0xc70500000000	               mov dword [0x0400278d], 1	       926	ops.c	FUNCTION_15	ELSE_2	IF_4
0x400278d	            0x31c0	                            xor eax, eax	       910	ops.c	FUNCTION_15
0x400278f	      0xe976ffffff	                           jmp 0x400270a	       910	ops.c	FUNCTION_15
0x4002794	         0xf1f4000	                         nop dword [rax]	       910	ops.c	FUNCTION_15
0x4002798	          0x83ff2a	                           cmp edi, 0x2a	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x400279b	            0x75ae	                           jne 0x400274b	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x400279d	      0xb801000000	                              mov eax, 1	       935	ops.c	FUNCTION_15	ELSE_4	IF_6
0x40027a2	      0xba25000000	                           mov edx, 0x25	       934	ops.c	FUNCTION_15	ELSE_4	IF_6
0x40027a7	      0xe95effffff	                           jmp 0x400270a	       934	ops.c	FUNCTION_15	ELSE_4	IF_6
0x40027ac	         0xf1f4000	                         nop dword [rax]	       934	ops.c	FUNCTION_15	ELSE_4	IF_6
0x40027b0	          0x83ff2b	                           cmp edi, 0x2b	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x40027b3	            0x75a0	                           jne 0x4002755	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x40027b5	      0xb801000000	                              mov eax, 1	       941	ops.c	FUNCTION_15	ELSE_5	IF_7
0x40027ba	      0xba26000000	                           mov edx, 0x26	       940	ops.c	FUNCTION_15	ELSE_5	IF_7
0x40027bf	      0xe946ffffff	                           jmp 0x400270a	       940	ops.c	FUNCTION_15	ELSE_5	IF_7
0x40027c4	         0xf1f4000	                         nop dword [rax]	       940	ops.c	FUNCTION_15	ELSE_5	IF_7
0x40027c8	            0x31c0	                            xor eax, eax	       910	ops.c	FUNCTION_15
0x40027ca	            0x31d2	                            xor edx, edx	       949	ops.c	FUNCTION_15	ELSE_7
0x40027cc	      0xe939ffffff	                           jmp 0x400270a	       949	ops.c	FUNCTION_15	ELSE_7
0x40027d1	     0xf1f80000000	                         nop dword [rax]	       949	ops.c	FUNCTION_15	ELSE_7
0x40027d8	            0x31c0	                            xor eax, eax	       910	ops.c	FUNCTION_15
0x40027da	      0xba24000000	                           mov edx, 0x24	       929	ops.c	FUNCTION_15	ELSE_3	IF_5
0x40027df	      0xe926ffffff	                           jmp 0x400270a	       929	ops.c	FUNCTION_15	ELSE_3	IF_5
clip_convert_selection	SWITCH,0:IF,6:WHILE,0:DO,0:FOR,2:ELSE,3:CALL,2:functions,0	93
0x4009be0	            0x4157	                                push r15	      6655	ops.c	FUNCTION_77
0x4009be2	            0x4156	                                push r14	      6655	ops.c	FUNCTION_77
0x4009be4	      0xb800000000	                              mov eax, 0	      6663	ops.c	FUNCTION_77	IF_1
0x4009be9	            0x4155	                                push r13	      6655	ops.c	FUNCTION_77
0x4009beb	            0x4154	                                push r12	      6655	ops.c	FUNCTION_77
0x4009bed	    0x41bc00000000	                             mov r12d, 0	      6663	ops.c	FUNCTION_77	IF_1
0x4009bf3	              0x55	                                push rbp	      6655	ops.c	FUNCTION_77
0x4009bf4	              0x53	                                push rbx	      6655	ops.c	FUNCTION_77
0x4009bf5	        0x4883ec08	                              sub rsp, 8	      6655	ops.c	FUNCTION_77
0x4009bf9	    0x4881fa000000	                              cmp rdx, 0	      6663	ops.c	FUNCTION_77	IF_1
0x4009c00	    0x48c707000000	                      mov qword [rdi], 0	      6673	ops.c	FUNCTION_77
0x4009c07	        0x4c0f44e0	                          cmove r12, rax	      6663	ops.c	FUNCTION_77	IF_1
0x4009c0b	    0x48c706000000	                      mov qword [rsi], 0	      6674	ops.c	FUNCTION_77
0x4009c12	        0x4d8b3c24	                    mov r15, qword [r12]	      6675	ops.c	FUNCTION_77	IF_2
0x4009c16	          0x4d85ff	                           test r15, r15	      6675	ops.c	FUNCTION_77	IF_2
0x4009c19	     0xf840b010000	                            je 0x4009d2a	      6675	ops.c	FUNCTION_77	IF_2
0x4009c1f	    0x49837c240800	                  cmp qword [r12 + 8], 0	      6678	ops.c	FUNCTION_77	FOR_1
0x4009c25	          0x4989f5	                            mov r13, rsi	      6678	ops.c	FUNCTION_77	FOR_1
0x4009c28	          0x4989fe	                            mov r14, rdi	      6678	ops.c	FUNCTION_77	FOR_1
0x4009c2b	     0xf8eef000000	                           jle 0x4009d20	      6678	ops.c	FUNCTION_77	FOR_1
0x4009c31	      0xbb01000000	                              mov ebx, 1	      6678	ops.c	FUNCTION_77	FOR_1
0x4009c36	            0x31ed	                            xor ebp, ebp	      6678	ops.c	FUNCTION_77	FOR_1
0x4009c38	     0xf1f84000000	                   nop dword [rax + rax]	      6678	ops.c	FUNCTION_77	FOR_1
0x4009c40	      0x498b7cdff8	        mov rdi, qword [r15 + rbx*8 - 8]	      6679	ops.c	FUNCTION_77	CALL_1
0x4009c45	      0xe800000000	                          call 0x4009c4a	      6679	ops.c	FUNCTION_77	CALL_1
0x4009c4a	      0x488d6c0501	                lea rbp, [rbp + rax + 1]	      6679	ops.c	FUNCTION_77	CALL_1
0x4009c4f	          0x4889d8	                            mov rax, rbx	      6678	ops.c	FUNCTION_77	FOR_1
0x4009c52	        0x4883c301	                              add rbx, 1	      6678	ops.c	FUNCTION_77	FOR_1
0x4009c56	        0x49896d00	                    mov qword [r13], rbp	      6679	ops.c	FUNCTION_77	CALL_1
0x4009c5a	      0x493b442408	                cmp rax, qword [r12 + 8]	      6678	ops.c	FUNCTION_77	FOR_1
0x4009c5f	            0x7cdf	                            jl 0x4009c40	      6678	ops.c	FUNCTION_77	FOR_1
0x4009c61	    0x41807c241000	                cmp byte [r12 + 0x10], 0	      6684	ops.c	FUNCTION_77	IF_3
0x4009c67	     0xf8493000000	                            je 0x4009d00	      6684	ops.c	FUNCTION_77	IF_3
0x4009c6d	        0x4883c501	                              add rbp, 1	      6684	ops.c	FUNCTION_77	IF_3
0x4009c71	      0xbe01000000	                              mov esi, 1	      6687	ops.c	FUNCTION_77	CALL_2
0x4009c76	          0x4889ef	                            mov rdi, rbp	      6687	ops.c	FUNCTION_77	CALL_2
0x4009c79	      0xe800000000	                          call 0x4009c7e	      6687	ops.c	FUNCTION_77	CALL_2
0x4009c7e	          0x4885c0	                           test rax, rax	      6688	ops.c	FUNCTION_77	IF_4
0x4009c81	          0x498906	                    mov qword [r14], rax	      6687	ops.c	FUNCTION_77	CALL_2
0x4009c84	     0xf84a0000000	                            je 0x4009d2a	      6688	ops.c	FUNCTION_77	IF_4
0x4009c8a	        0x418b5500	                    mov edx, dword [r13]	      6691	ops.c	FUNCTION_77	FOR_2
0x4009c8e	            0x31f6	                            xor esi, esi	      6691	ops.c	FUNCTION_77	FOR_2
0x4009c90	            0x31ff	                            xor edi, edi	      6691	ops.c	FUNCTION_77	FOR_2
0x4009c92	          0x4531c9	                            xor r9d, r9d	      6691	ops.c	FUNCTION_77	FOR_2
0x4009c95	            0x85d2	                           test edx, edx	      6691	ops.c	FUNCTION_77	FOR_2
0x4009c97	            0x7f1d	                            jg 0x4009cb6	      6691	ops.c	FUNCTION_77	FOR_2
0x4009c99	            0xeb48	                           jmp 0x4009ce3	      6691	ops.c	FUNCTION_77	FOR_2
0x4009c9b	       0xf1f440000	                   nop dword [rax + rax]	      6691	ops.c	FUNCTION_77	FOR_2
0x4009ca0	          0xc6000a	                     mov byte [rax], 0xa	      6703	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x4009ca3	        0x4183c101	                              add r9d, 1	      6705	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x4009ca7	            0x31f6	                            xor esi, esi	      6705	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x4009ca9	          0x83c701	                              add edi, 1	      6691	ops.c	FUNCTION_77	FOR_2
0x4009cac	        0x4883c001	                              add rax, 1	      6691	ops.c	FUNCTION_77	FOR_2
0x4009cb0	        0x413b7d00	                    cmp edi, dword [r13]	      6691	ops.c	FUNCTION_77	FOR_2
0x4009cb4	            0x7d2d	                           jge 0x4009ce3	      6691	ops.c	FUNCTION_77	FOR_2
0x4009cb6	        0x4d8b0424	                     mov r8, qword [r12]	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x4009cba	          0x4963c9	                         movsxd rcx, r9d	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x4009cbd	          0x4863d6	                         movsxd rdx, esi	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x4009cc0	        0x498b0cc8	             mov rcx, qword [r8 + rcx*8]	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x4009cc4	         0xfb61411	             movzx edx, byte [rcx + rdx]	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x4009cc8	          0x80fa0a	                             cmp dl, 0xa	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x4009ccb	            0x744b	                            je 0x4009d18	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x4009ccd	            0x84d2	                             test dl, dl	      6695	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x4009ccf	            0x74cf	                            je 0x4009ca0	      6695	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x4009cd1	            0x8810	                      mov byte [rax], dl	      6709	ops.c	FUNCTION_77	FOR_2	ELSE_3
0x4009cd3	          0x83c601	                              add esi, 1	      6709	ops.c	FUNCTION_77	FOR_2	ELSE_3
0x4009cd6	          0x83c701	                              add edi, 1	      6691	ops.c	FUNCTION_77	FOR_2
0x4009cd9	        0x4883c001	                              add rax, 1	      6691	ops.c	FUNCTION_77	FOR_2
0x4009cdd	        0x413b7d00	                    cmp edi, dword [r13]	      6691	ops.c	FUNCTION_77	FOR_2
0x4009ce1	            0x7cd3	                            jl 0x4009cb6	      6691	ops.c	FUNCTION_77	FOR_2
0x4009ce3	    0x410fb6442410	           movzx eax, byte [r12 + 0x10] 	      6711	ops.c	FUNCTION_77	ELSE_3
0x4009ce9	        0x4883c408	                              add rsp, 8	      6712	ops.c	FUNCTION_77	ELSE_3
0x4009ced	              0x5b	                                 pop rbx	      6712	ops.c	FUNCTION_77	ELSE_3
0x4009cee	              0x5d	                                 pop rbp	      6712	ops.c	FUNCTION_77	ELSE_3
0x4009cef	            0x415c	                                 pop r12	      6712	ops.c	FUNCTION_77	ELSE_3
0x4009cf1	            0x415d	                                 pop r13	      6712	ops.c	FUNCTION_77	ELSE_3
0x4009cf3	            0x415e	                                 pop r14	      6712	ops.c	FUNCTION_77	ELSE_3
0x4009cf5	            0x415f	                                 pop r15	      6712	ops.c	FUNCTION_77	ELSE_3
0x4009cf7	              0xc3	                                     ret	      6712	ops.c	FUNCTION_77	ELSE_3
0x4009cf8	     0xf1f84000000	                   nop dword [rax + rax]	      6712	ops.c	FUNCTION_77	ELSE_3
0x4009d00	          0x4885ed	                           test rbp, rbp	      6684	ops.c	FUNCTION_77	IF_3
0x4009d03	            0x741b	                            je 0x4009d20	      6684	ops.c	FUNCTION_77	IF_3
0x4009d05	        0x488d45ff	                      lea rax, [rbp - 1]	      6685	ops.c	FUNCTION_77	IF_3
0x4009d09	        0x49894500	                    mov qword [r13], rax	      6685	ops.c	FUNCTION_77	IF_3
0x4009d0d	      0xe95fffffff	                           jmp 0x4009c71	      6685	ops.c	FUNCTION_77	IF_3
0x4009d12	    0x660f1f440000	                    nop word [rax + rax]	      6685	ops.c	FUNCTION_77	IF_3
0x4009d18	          0xc60000	                       mov byte [rax], 0	      6694	ops.c	FUNCTION_77	FOR_2	IF_5
0x4009d1b	          0x83c601	                              add esi, 1	      6694	ops.c	FUNCTION_77	FOR_2	IF_5
0x4009d1e	            0xeb89	                           jmp 0x4009ca9	      6694	ops.c	FUNCTION_77	FOR_2	IF_5
0x4009d20	      0xbd01000000	                              mov ebp, 1	      6694	ops.c	FUNCTION_77	FOR_2	IF_5
0x4009d25	      0xe947ffffff	                           jmp 0x4009c71	      6694	ops.c	FUNCTION_77	FOR_2	IF_5
0x4009d2a	      0xb8ffffffff	                     mov eax, 0xffffffff	      6676	ops.c	FUNCTION_77	IF_2
0x4009d2f	            0xebb8	                           jmp 0x4009ce9	      6676	ops.c	FUNCTION_77	IF_2
get_expr_line	SWITCH,0:IF,3:WHILE,0:DO,0:FOR,0:ELSE,0:CALL,3:functions,0	32
0x40025b0	              0x55	                                push rbp	       824	ops.c	FUNCTION_12
0x40025b1	              0x53	                                push rbx	       824	ops.c	FUNCTION_12
0x40025b2	        0x4883ec08	                              sub rsp, 8	       824	ops.c	FUNCTION_12
0x40025b6	    0x488b3d000000	            mov rdi, qword [0x040025bd] 	       829	ops.c	FUNCTION_12	IF_1
0x40025bd	          0x4885ff	                           test rdi, rdi	       829	ops.c	FUNCTION_12	IF_1
0x40025c0	            0x7456	                            je 0x4002618	       829	ops.c	FUNCTION_12	IF_1
0x40025c2	      0xe800000000	                          call 0x40025c7	       834	ops.c	FUNCTION_12	CALL_1
0x40025c7	          0x4885c0	                           test rax, rax	       835	ops.c	FUNCTION_12	IF_2
0x40025ca	            0x744c	                            je 0x4002618	       835	ops.c	FUNCTION_12	IF_2
0x40025cc	    0x8b1500000000	            mov edx, dword [0x040025d2] 	       840	ops.c	FUNCTION_12	IF_3
0x40025d2	          0x4889c3	                            mov rbx, rax	       840	ops.c	FUNCTION_12	IF_3
0x40025d5	          0x83fa09	                              cmp edx, 9	       840	ops.c	FUNCTION_12	IF_3
0x40025d8	            0x7f2d	                            jg 0x4002607	       840	ops.c	FUNCTION_12	IF_3
0x40025da	          0x83c201	                              add edx, 1	       843	ops.c	FUNCTION_12
0x40025dd	            0x31f6	                            xor esi, esi	       844	ops.c	FUNCTION_12	CALL_2
0x40025df	          0x4889c7	                            mov rdi, rax	       844	ops.c	FUNCTION_12	CALL_2
0x40025e2	    0x891500000000	            mov dword [0x040025e8], edx 	       843	ops.c	FUNCTION_12
0x40025e8	      0xba01000000	                              mov edx, 1	       844	ops.c	FUNCTION_12	CALL_2
0x40025ed	      0xe800000000	                          call 0x40025f2	       844	ops.c	FUNCTION_12	CALL_2
0x40025f2	          0x4889c5	                            mov rbp, rax	       844	ops.c	FUNCTION_12	CALL_2
0x40025f5	          0x4889df	                            mov rdi, rbx	       846	ops.c	FUNCTION_12	CALL_3
0x40025f8	    0x832d00000000	               sub dword [0x040025ff], 1	       845	ops.c	FUNCTION_12
0x40025ff	          0x4889eb	                            mov rbx, rbp	       847	ops.c	FUNCTION_12
0x4002602	      0xe800000000	                          call 0x4002607	       846	ops.c	FUNCTION_12	CALL_3
0x4002607	        0x4883c408	                              add rsp, 8	       848	ops.c	FUNCTION_12
0x400260b	          0x4889d8	                            mov rax, rbx	       848	ops.c	FUNCTION_12
0x400260e	              0x5b	                                 pop rbx	       848	ops.c	FUNCTION_12
0x400260f	              0x5d	                                 pop rbp	       848	ops.c	FUNCTION_12
0x4002610	              0xc3	                                     ret	       848	ops.c	FUNCTION_12
0x4002611	     0xf1f80000000	                         nop dword [rax]	       848	ops.c	FUNCTION_12
0x4002618	            0x31db	                            xor ebx, ebx	       830	ops.c	FUNCTION_12	IF_1
0x400261a	            0xebeb	                           jmp 0x4002607	       830	ops.c	FUNCTION_12	IF_1
skip_comment	SWITCH,0:IF,7:WHILE,2:DO,0:FOR,0:ELSE,0:CALL,2:functions,0	95
0x4005080	            0x4155	                                push r13	      4453	ops.c	FUNCTION_54
0x4005082	            0x4154	                                push r12	      4453	ops.c	FUNCTION_54
0x4005084	          0x4189f4	                           mov r12d, esi	      4453	ops.c	FUNCTION_54
0x4005087	              0x55	                                push rbp	      4453	ops.c	FUNCTION_54
0x4005088	              0x53	                                push rbx	      4453	ops.c	FUNCTION_54
0x4005089	          0x4889cd	                            mov rbp, rcx	      4453	ops.c	FUNCTION_54
0x400508c	          0x4889fb	                            mov rbx, rdi	      4453	ops.c	FUNCTION_54
0x400508f	          0x4189d5	                           mov r13d, edx	      4453	ops.c	FUNCTION_54
0x4005092	        0x4883ec18	                           sub rsp, 0x18	      4453	ops.c	FUNCTION_54
0x4005096	          0x4889e6	                            mov rsi, rsp	      4456	ops.c	FUNCTION_54	CALL_1
0x4005099	    0x48c704240000	                      mov qword [rsp], 0	      4454	ops.c	FUNCTION_54
0x40050a1	    0x64488b042528	                mov rax, qword fs:[0x28]	      4453	ops.c	FUNCTION_54
0x40050aa	      0x4889442408	                mov qword [rsp + 8], rax	      4453	ops.c	FUNCTION_54
0x40050af	            0x31c0	                            xor eax, eax	      4453	ops.c	FUNCTION_54
0x40050b1	      0xe800000000	                          call 0x40050b6	      4456	ops.c	FUNCTION_54	CALL_1
0x40050b6	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      4459	ops.c	FUNCTION_54	IF_1
0x40050b9	    0xc74500000000	                      mov dword [rbp], 0	      4458	ops.c	FUNCTION_54
0x40050c0	            0x744c	                            je 0x400510e	      4459	ops.c	FUNCTION_54	IF_1
0x40050c2	        0x488b3424	                    mov rsi, qword [rsp]	      4464	ops.c	FUNCTION_54	IF_1	WHILE_1
0x40050c6	           0xfb606	                   movzx eax, byte [rsi]	      4464	ops.c	FUNCTION_54	IF_1	WHILE_1
0x40050c9	            0x84c0	                             test al, al	      4464	ops.c	FUNCTION_54	IF_1	WHILE_1
0x40050cb	            0x743a	                            je 0x4005107	      4464	ops.c	FUNCTION_54	IF_1	WHILE_1
0x40050cd	            0x3c65	                            cmp al, 0x65	      4466	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x40050cf	     0xf84cb000000	                            je 0x40051a0	      4466	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x40050d5	        0x4883c601	                              add rsi, 1	      4466	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x40050d9	            0x3c3a	                            cmp al, 0x3a	      4466	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x40050db	            0x751f	                           jne 0x40050fc	      4466	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x40050dd	      0xe9be000000	                           jmp 0x40051a0	      4466	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x40050e2	    0x660f1f440000	                    nop word [rax + rax]	      4466	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x40050e8	        0x4883c601	                              add rsi, 1	      4466	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x40050ec	            0x3c65	                            cmp al, 0x65	      4466	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x40050ee	     0xf84ac000000	                            je 0x40051a0	      4466	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x40050f4	            0x3c3a	                            cmp al, 0x3a	      4466	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x40050f6	     0xf84a4000000	                            je 0x40051a0	      4466	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x40050fc	        0x48893424	                    mov qword [rsp], rsi	      4469	ops.c	FUNCTION_54	IF_1	WHILE_1
0x4005100	           0xfb606	                   movzx eax, byte [rsi]	      4464	ops.c	FUNCTION_54	IF_1	WHILE_1
0x4005103	            0x84c0	                             test al, al	      4464	ops.c	FUNCTION_54	IF_1	WHILE_1
0x4005105	            0x75e1	                           jne 0x40050e8	      4464	ops.c	FUNCTION_54	IF_1	WHILE_1
0x4005107	    0xc74500010000	                      mov dword [rbp], 1	      4472	ops.c	FUNCTION_54	IF_1	IF_3
0x400510e	          0x4585e4	                         test r12d, r12d	      4475	ops.c	FUNCTION_54	IF_4
0x4005111	            0x7525	                           jne 0x4005138	      4475	ops.c	FUNCTION_54	IF_4
0x4005113	          0x4889d8	                            mov rax, rbx	      4506	ops.c	FUNCTION_54
0x4005116	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      4506	ops.c	FUNCTION_54
0x400511b	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4506	ops.c	FUNCTION_54
0x4005124	     0xf858e000000	                           jne 0x40051b8	      4506	ops.c	FUNCTION_54
0x400512a	        0x4883c418	                           add rsp, 0x18	      4506	ops.c	FUNCTION_54
0x400512e	              0x5b	                                 pop rbx	      4506	ops.c	FUNCTION_54
0x400512f	              0x5d	                                 pop rbp	      4506	ops.c	FUNCTION_54
0x4005130	            0x415c	                                 pop r12	      4506	ops.c	FUNCTION_54
0x4005132	            0x415d	                                 pop r13	      4506	ops.c	FUNCTION_54
0x4005134	              0xc3	                                     ret	      4506	ops.c	FUNCTION_54
0x4005135	           0xf1f00	                         nop dword [rax]	      4506	ops.c	FUNCTION_54
0x4005138	            0x31d2	                            xor edx, edx	      4478	ops.c	FUNCTION_54	CALL_2
0x400513a	          0x4489e9	                           mov ecx, r13d	      4478	ops.c	FUNCTION_54	CALL_2
0x400513d	          0x4889e6	                            mov rsi, rsp	      4478	ops.c	FUNCTION_54	CALL_2
0x4005140	          0x4889df	                            mov rdi, rbx	      4478	ops.c	FUNCTION_54	CALL_2
0x4005143	      0xe800000000	                          call 0x4005148	      4478	ops.c	FUNCTION_54	CALL_2
0x4005148	            0x85c0	                           test eax, eax	      4480	ops.c	FUNCTION_54	IF_5
0x400514a	            0x74c7	                            je 0x4005113	      4480	ops.c	FUNCTION_54	IF_5
0x400514c	        0x488b1424	                    mov rdx, qword [rsp]	      4488	ops.c	FUNCTION_54	WHILE_2
0x4005150	           0xfb60a	                   movzx ecx, byte [rdx]	      4488	ops.c	FUNCTION_54	WHILE_2
0x4005153	            0x84c9	                             test cl, cl	      4488	ops.c	FUNCTION_54	WHILE_2
0x4005155	            0x743b	                            je 0x4005192	      4488	ops.c	FUNCTION_54	WHILE_2
0x4005157	          0x80f93a	                            cmp cl, 0x3a	      4491	ops.c	FUNCTION_54	WHILE_2	IF_6
0x400515a	        0x400f94c6	                                sete sil	      4491	ops.c	FUNCTION_54	WHILE_2	IF_6
0x400515e	          0x80f965	                            cmp cl, 0x65	      4490	ops.c	FUNCTION_54	WHILE_2	IF_6
0x4005161	            0x89f7	                            mov edi, esi	      4491	ops.c	FUNCTION_54	WHILE_2	IF_6
0x4005163	            0x7448	                            je 0x40051ad	      4490	ops.c	FUNCTION_54	WHILE_2	IF_6
0x4005165	        0x4883c201	                              add rdx, 1	      4490	ops.c	FUNCTION_54	WHILE_2	IF_6
0x4005169	          0x4084f6	                           test sil, sil	      4490	ops.c	FUNCTION_54	WHILE_2	IF_6
0x400516c	            0x7419	                            je 0x4005187	      4490	ops.c	FUNCTION_54	WHILE_2	IF_6
0x400516e	            0xeb22	                           jmp 0x4005192	      4490	ops.c	FUNCTION_54	WHILE_2	IF_6
0x4005170	          0x80f93a	                            cmp cl, 0x3a	      4491	ops.c	FUNCTION_54	WHILE_2	IF_6
0x4005173	        0x400f94c6	                                sete sil	      4491	ops.c	FUNCTION_54	WHILE_2	IF_6
0x4005177	        0x4883c201	                              add rdx, 1	      4491	ops.c	FUNCTION_54	WHILE_2	IF_6
0x400517b	          0x80f965	                            cmp cl, 0x65	      4490	ops.c	FUNCTION_54	WHILE_2	IF_6
0x400517e	            0x89f7	                            mov edi, esi	      4491	ops.c	FUNCTION_54	WHILE_2	IF_6
0x4005180	            0x742b	                            je 0x40051ad	      4490	ops.c	FUNCTION_54	WHILE_2	IF_6
0x4005182	          0x4084f6	                           test sil, sil	      4490	ops.c	FUNCTION_54	WHILE_2	IF_6
0x4005185	            0x750b	                           jne 0x4005192	      4490	ops.c	FUNCTION_54	WHILE_2	IF_6
0x4005187	        0x48891424	                    mov qword [rsp], rdx	      4495	ops.c	FUNCTION_54	WHILE_2
0x400518b	           0xfb60a	                   movzx ecx, byte [rdx]	      4488	ops.c	FUNCTION_54	WHILE_2
0x400518e	            0x84c9	                             test cl, cl	      4488	ops.c	FUNCTION_54	WHILE_2
0x4005190	            0x75de	                           jne 0x4005170	      4488	ops.c	FUNCTION_54	WHILE_2
0x4005192	            0x4898	                                    cdqe	      4503	ops.c	FUNCTION_54	IF_7
0x4005194	          0x4801c3	                            add rbx, rax	      4503	ops.c	FUNCTION_54	IF_7
0x4005197	      0xe977ffffff	                           jmp 0x4005113	      4503	ops.c	FUNCTION_54	IF_7
0x400519c	         0xf1f4000	                         nop dword [rax]	      4503	ops.c	FUNCTION_54	IF_7
0x40051a0	            0x3c65	                            cmp al, 0x65	      4471	ops.c	FUNCTION_54	IF_1	IF_3
0x40051a2	     0xf8466ffffff	                            je 0x400510e	      4471	ops.c	FUNCTION_54	IF_1	IF_3
0x40051a8	      0xe95affffff	                           jmp 0x4005107	      4471	ops.c	FUNCTION_54	IF_1	IF_3
0x40051ad	          0x4084ff	                           test dil, dil	      4502	ops.c	FUNCTION_54	IF_7
0x40051b0	     0xf845dffffff	                            je 0x4005113	      4502	ops.c	FUNCTION_54	IF_7
0x40051b6	            0xebda	                           jmp 0x4005192	      4502	ops.c	FUNCTION_54	IF_7
0x40051b8	      0xe800000000	                          call 0x40051bd	      4506	ops.c	FUNCTION_54
op_reindent	SWITCH,0:IF,10:WHILE,0:DO,0:FOR,1:ELSE,3:CALL,15:functions,0	190
0x4002230	            0x4157	                                push r15	       702	ops.c	FUNCTION_9
0x4002232	            0x4156	                                push r14	       702	ops.c	FUNCTION_9
0x4002234	            0x4155	                                push r13	       702	ops.c	FUNCTION_9
0x4002236	            0x4154	                                push r12	       702	ops.c	FUNCTION_9
0x4002238	              0x55	                                push rbp	       702	ops.c	FUNCTION_9
0x4002239	              0x53	                                push rbx	       702	ops.c	FUNCTION_9
0x400223a	        0x4883ec18	                           sub rsp, 0x18	       702	ops.c	FUNCTION_9
0x400223e	    0x488b05000000	            mov rax, qword [0x04002245] 	       711	ops.c	FUNCTION_9	IF_1
0x4002245	    0x448b80401500	          mov r8d, dword [rax + 0x1540] 	       711	ops.c	FUNCTION_9	IF_1
0x400224c	          0x4585c0	                           test r8d, r8d	       711	ops.c	FUNCTION_9	IF_1
0x400224f	     0xf847b020000	                            je 0x40024d0	       711	ops.c	FUNCTION_9	IF_1
0x4002255	        0x488b6f50	            mov rbp, qword [rdi + 0x50] 	       717	ops.c	FUNCTION_9	FOR_1
0x4002259	          0x4889fb	                            mov rbx, rdi	       717	ops.c	FUNCTION_9	FOR_1
0x400225c	          0x4989ef	                            mov r15, rbp	       717	ops.c	FUNCTION_9	FOR_1
0x400225f	        0x4983ef01	                              sub r15, 1	       717	ops.c	FUNCTION_9	FOR_1
0x4002263	     0xf88cf010000	                            js 0x4002438	       717	ops.c	FUNCTION_9	FOR_1
0x4002269	    0x8b0500000000	            mov eax, dword [0x0400226f] 	       717	ops.c	FUNCTION_9	FOR_1
0x400226f	            0x85c0	                           test eax, eax	       717	ops.c	FUNCTION_9	FOR_1
0x4002271	     0xf85c1010000	                           jne 0x4002438	       717	ops.c	FUNCTION_9	FOR_1
0x4002277	    0x488b05000000	            mov rax, qword [0x0400227e] 	       708	ops.c	FUNCTION_9
0x400227e	          0x4889e9	                            mov rcx, rbp	       708	ops.c	FUNCTION_9
0x4002281	          0x4989f4	                            mov r12, rsi	       708	ops.c	FUNCTION_9
0x4002284	          0x4531ed	                          xor r13d, r13d	       708	ops.c	FUNCTION_9
0x4002287	          0x4531f6	                          xor r14d, r14d	       708	ops.c	FUNCTION_9
0x400228a	    0x48bd0bd7a370	          movabs rbp, 0xa3d70a3d70a3d70b	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4002294	        0x488b4038	            mov rax, qword [rax + 0x38] 	       708	ops.c	FUNCTION_9
0x4002298	      0x4889442408	                mov qword [rsp + 8], rax	       708	ops.c	FUNCTION_9
0x400229d	      0xe986000000	                           jmp 0x4002328	       708	ops.c	FUNCTION_9
0x40022a2	    0x660f1f440000	                    nop word [rax + rax]	       708	ops.c	FUNCTION_9
0x40022a8	        0x488d41ff	                      lea rax, [rcx - 1]	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x40022ac	          0x4c39f8	                            cmp rax, r15	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x40022af	     0xf84a4000000	                            je 0x4002359	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x40022b5	      0xe800000000	                          call 0x40022ba	       736	ops.c	FUNCTION_9	FOR_1	IF_3	CALL_6
0x40022ba	          0x4889c7	                            mov rdi, rax	       736	ops.c	FUNCTION_9	FOR_1	IF_3	CALL_6
0x40022bd	      0xe800000000	                          call 0x40022c2	       736	ops.c	FUNCTION_9	FOR_1	IF_3	CALL_6
0x40022c2	            0x31ff	                            xor edi, edi	       738	ops.c	FUNCTION_9	FOR_1	IF_3	IF_4
0x40022c4	          0x803800	                       cmp byte [rax], 0	       737	ops.c	FUNCTION_9	FOR_1	IF_3	IF_4
0x40022c7	     0xf85d3000000	                           jne 0x40023a0	       737	ops.c	FUNCTION_9	FOR_1	IF_3	IF_4
0x40022cd	      0xbe04000000	                              mov esi, 4	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x40022d2	      0xe800000000	                          call 0x40022d7	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x40022d7	            0x85c0	                           test eax, eax	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x40022d9	     0xf84a9000000	                            je 0x4002388	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x40022df	          0x4d85f6	                           test r14, r14	       745	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	IF_6
0x40022e2	    0x488b05000000	            mov rax, qword [0x040022e9] 	       746	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	IF_6
0x40022e9	     0xf8401010000	                            je 0x40023f0	       745	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	IF_6
0x40022ef	        0x4c8b6838	            mov r13, qword [rax + 0x38] 	       745	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	IF_6
0x40022f3	          0x4c89ea	                            mov rdx, r13	       746	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	IF_6
0x40022f6	        0x4883c201	                              add rdx, 1	       750	ops.c	FUNCTION_9	FOR_1
0x40022fa	    0xc74040000000	               mov dword [rax + 0x40], 0	       751	ops.c	FUNCTION_9	FOR_1
0x4002301	        0x48895038	             mov qword [rax + 0x38], rdx	       750	ops.c	FUNCTION_9	FOR_1
0x4002305	        0x498d57ff	                      lea rdx, [r15 - 1]	       717	ops.c	FUNCTION_9	FOR_1
0x4002309	        0x4883faff	             cmp rdx, 0xffffffffffffffff	       717	ops.c	FUNCTION_9	FOR_1
0x400230d	     0xf84ed000000	                            je 0x4002400	       717	ops.c	FUNCTION_9	FOR_1
0x4002313	    0x8b0d00000000	            mov ecx, dword [0x04002319] 	       717	ops.c	FUNCTION_9	FOR_1
0x4002319	            0x85c9	                           test ecx, ecx	       717	ops.c	FUNCTION_9	FOR_1
0x400231b	     0xf85df000000	                           jne 0x4002400	       717	ops.c	FUNCTION_9	FOR_1
0x4002321	        0x488b4b50	            mov rcx, qword [rbx + 0x50] 	       717	ops.c	FUNCTION_9	FOR_1
0x4002325	          0x4989d7	                            mov r15, rdx	       717	ops.c	FUNCTION_9	FOR_1
0x4002328	        0x4983ff01	                              cmp r15, 1	       722	ops.c	FUNCTION_9	FOR_1	IF_2
0x400232c	            0x7e34	                           jle 0x4002362	       722	ops.c	FUNCTION_9	FOR_1	IF_2
0x400232e	          0x4c89f8	                            mov rax, r15	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4002331	          0x48f7ed	                                imul rbp	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4002334	          0x4c89f8	                            mov rax, r15	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4002337	        0x48c1f83f	                           sar rax, 0x3f	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x400233b	          0x4c01fa	                            add rdx, r15	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x400233e	        0x48c1fa05	                              sar rdx, 5	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4002342	          0x4829c2	                            sub rdx, rax	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4002345	        0x488d0492	                  lea rax, [rdx + rdx*4]	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4002349	        0x488d0480	                  lea rax, [rax + rax*4]	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x400234d	          0x4801c0	                            add rax, rax	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4002350	          0x4939c7	                            cmp r15, rax	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4002353	     0xf854fffffff	                           jne 0x40022a8	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4002359	    0x483b0d000000	            cmp rcx, qword [0x04002360] 	       724	ops.c	FUNCTION_9	FOR_1	IF_2
0x4002360	            0x7f5e	                            jg 0x40023c0	       724	ops.c	FUNCTION_9	FOR_1	IF_2
0x4002362	    0x4981fc000000	                              cmp r12, 0	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x4002369	           0xf95c2	                                setne dl	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x400236c	        0x4883f901	                              cmp rcx, 1	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x4002370	           0xf94c0	                                 sete al	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x4002373	             0x8c2	                               or dl, al	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x4002375	     0xf853affffff	                           jne 0x40022b5	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x400237b	        0x4883e901	                              sub rcx, 1	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x400237f	          0x4c39f9	                            cmp rcx, r15	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x4002382	     0xf852dffffff	                           jne 0x40022b5	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x4002388	    0x488b05000000	            mov rax, qword [0x0400238f] 	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x400238f	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x4002393	      0xe95effffff	                           jmp 0x40022f6	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x4002398	     0xf1f84000000	                   nop dword [rax + rax]	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x40023a0	          0x41ffd4	                                call r12	       740	ops.c	FUNCTION_9	FOR_1	IF_3	CALL_7
0x40023a3	            0x85c0	                           test eax, eax	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x40023a5	            0x89c7	                            mov edi, eax	       740	ops.c	FUNCTION_9	FOR_1	IF_3	CALL_7
0x40023a7	     0xf8920ffffff	                           jns 0x40022cd	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x40023ad	    0x488b05000000	            mov rax, qword [0x040023b4] 	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x40023b4	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x40023b8	      0xe939ffffff	                           jmp 0x40022f6	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x40023bd	           0xf1f00	                         nop dword [rax]	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x40023c0	      0xba05000000	                              mov edx, 5	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x40023c5	      0xbe00000000	                              mov esi, 0	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x40023ca	            0x31ff	                            xor edi, edi	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x40023cc	      0xe800000000	                          call 0x40023d1	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x40023d1	          0x4c89fe	                            mov rsi, r15	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x40023d4	          0x4889c7	                            mov rdi, rax	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x40023d7	            0x31c0	                            xor eax, eax	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x40023d9	      0xe800000000	                          call 0x40023de	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x40023de	        0x488b4b50	            mov rcx, qword [rbx + 0x50] 	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x40023e2	      0xe97bffffff	                           jmp 0x4002362	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x40023e7	    0x660f1f840000	                    nop word [rax + rax]	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x40023f0	        0x4c8b7038	            mov r14, qword [rax + 0x38] 	       746	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	IF_6
0x40023f4	          0x4d89f5	                            mov r13, r14	       746	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	IF_6
0x40023f7	      0xe9f7feffff	                           jmp 0x40022f3	       746	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	IF_6
0x40023fc	         0xf1f4000	                         nop dword [rax]	       746	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	IF_6
0x4002400	      0x488b6c2408	                mov rbp, qword [rsp + 8]	       755	ops.c	FUNCTION_9
0x4002405	      0xbf06000000	                              mov edi, 6	       756	ops.c	FUNCTION_9	CALL_9
0x400240a	        0x48896838	             mov qword [rax + 0x38], rbp	       755	ops.c	FUNCTION_9
0x400240e	      0xe800000000	                          call 0x4002413	       756	ops.c	FUNCTION_9	CALL_9
0x4002413	          0x4d85ed	                           test r13, r13	       761	ops.c	FUNCTION_9	IF_7
0x4002416	            0x7430	                            je 0x4002448	       761	ops.c	FUNCTION_9	IF_7
0x4002418	          0x8b4b5c	            mov ecx, dword [rbx + 0x5c] 	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x400241b	        0x498d5501	                      lea rdx, [r13 + 1]	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x400241f	            0x85c9	                           test ecx, ecx	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x4002421	            0x7407	                            je 0x400242a	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x4002423	          0x4889ea	                            mov rdx, rbp	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x4002426	        0x48035350	             add rdx, qword [rbx + 0x50]	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x400242a	            0x31c9	                            xor ecx, ecx	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x400242c	            0x31f6	                            xor esi, esi	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x400242e	          0x4c89f7	                            mov rdi, r14	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x4002431	      0xe800000000	                          call 0x4002436	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x4002436	            0xeb1b	                           jmp 0x4002453	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x4002438	      0xbf06000000	                              mov edi, 6	       756	ops.c	FUNCTION_9	CALL_9
0x400243d	          0x4989ef	                            mov r15, rbp	       756	ops.c	FUNCTION_9	CALL_9
0x4002440	      0xe800000000	                          call 0x4002445	       756	ops.c	FUNCTION_9	CALL_9
0x4002445	           0xf1f00	                         nop dword [rax]	       756	ops.c	FUNCTION_9	CALL_9
0x4002448	          0x8b435c	            mov eax, dword [rbx + 0x5c] 	       765	ops.c	FUNCTION_9	ELSE_2	IF_8
0x400244b	            0x85c0	                           test eax, eax	       765	ops.c	FUNCTION_9	ELSE_2	IF_8
0x400244d	     0xf85ad000000	                           jne 0x4002500	       765	ops.c	FUNCTION_9	ELSE_2	IF_8
0x4002453	        0x488b7350	            mov rsi, qword [rbx + 0x50] 	       768	ops.c	FUNCTION_9	IF_9
0x4002457	    0x483b35000000	            cmp rsi, qword [0x0400245e] 	       768	ops.c	FUNCTION_9	IF_9
0x400245e	            0x7e2e	                           jle 0x400248e	       768	ops.c	FUNCTION_9	IF_9
0x4002460	          0x4c29fe	                            sub rsi, r15	       770	ops.c	FUNCTION_9	IF_9
0x4002463	      0xba05000000	                              mov edx, 5	       772	ops.c	FUNCTION_9	IF_9	CALL_13
0x4002468	        0x4883fe01	                              cmp rsi, 1	       771	ops.c	FUNCTION_9	IF_9	IF_10
0x400246c	          0x4889f5	                            mov rbp, rsi	       770	ops.c	FUNCTION_9	IF_9
0x400246f	     0xf849b000000	                            je 0x4002510	       771	ops.c	FUNCTION_9	IF_9	IF_10
0x4002475	      0xbe00000000	                              mov esi, 0	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x400247a	            0x31ff	                            xor edi, edi	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x400247c	      0xe800000000	                          call 0x4002481	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x4002481	          0x4889ee	                            mov rsi, rbp	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x4002484	          0x4889c7	                            mov rdi, rax	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x4002487	            0x31c0	                            xor eax, eax	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x4002489	      0xe800000000	                          call 0x400248e	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x400248e	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	       777	ops.c	FUNCTION_9
0x4002492	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       777	ops.c	FUNCTION_9
0x4002496	    0x488b05000000	            mov rax, qword [0x0400249d] 	       777	ops.c	FUNCTION_9
0x400249d	        0x488b4b30	            mov rcx, qword [rbx + 0x30] 	       778	ops.c	FUNCTION_9
0x40024a1	        0x488b5b38	            mov rbx, qword [rbx + 0x38] 	       778	ops.c	FUNCTION_9
0x40024a5	    0x4889b0e01100	          mov qword [rax + 0x11e0], rsi 	       777	ops.c	FUNCTION_9
0x40024ac	    0x4889b8e81100	          mov qword [rax + 0x11e8], rdi 	       777	ops.c	FUNCTION_9
0x40024b3	    0x488988001200	          mov qword [rax + 0x1200], rcx 	       778	ops.c	FUNCTION_9
0x40024ba	    0x488998081200	          mov qword [rax + 0x1208], rbx 	       778	ops.c	FUNCTION_9
0x40024c1	        0x4883c418	                           add rsp, 0x18	       779	ops.c	FUNCTION_9
0x40024c5	              0x5b	                                 pop rbx	       779	ops.c	FUNCTION_9
0x40024c6	              0x5d	                                 pop rbp	       779	ops.c	FUNCTION_9
0x40024c7	            0x415c	                                 pop r12	       779	ops.c	FUNCTION_9
0x40024c9	            0x415d	                                 pop r13	       779	ops.c	FUNCTION_9
0x40024cb	            0x415e	                                 pop r14	       779	ops.c	FUNCTION_9
0x40024cd	            0x415f	                                 pop r15	       779	ops.c	FUNCTION_9
0x40024cf	              0xc3	                                     ret	       779	ops.c	FUNCTION_9
0x40024d0	            0x31ff	                            xor edi, edi	       713	ops.c	FUNCTION_9	IF_1	CALL_2
0x40024d2	      0xba05000000	                              mov edx, 5	       713	ops.c	FUNCTION_9	IF_1	CALL_2
0x40024d7	      0xbe00000000	                              mov esi, 0	       713	ops.c	FUNCTION_9	IF_1	CALL_2
0x40024dc	      0xe800000000	                          call 0x40024e1	       713	ops.c	FUNCTION_9	IF_1	CALL_2
0x40024e1	        0x4883c418	                           add rsp, 0x18	       779	ops.c	FUNCTION_9
0x40024e5	          0x4889c7	                            mov rdi, rax	       713	ops.c	FUNCTION_9	IF_1	CALL_2
0x40024e8	              0x5b	                                 pop rbx	       779	ops.c	FUNCTION_9
0x40024e9	              0x5d	                                 pop rbp	       779	ops.c	FUNCTION_9
0x40024ea	            0x415c	                                 pop r12	       779	ops.c	FUNCTION_9
0x40024ec	            0x415d	                                 pop r13	       779	ops.c	FUNCTION_9
0x40024ee	            0x415e	                                 pop r14	       779	ops.c	FUNCTION_9
0x40024f0	            0x415f	                                 pop r15	       779	ops.c	FUNCTION_9
0x40024f2	      0xe900000000	                           jmp 0x40024f7	       713	ops.c	FUNCTION_9	IF_1	CALL_2
0x40024f7	    0x660f1f840000	                    nop word [rax + rax]	       713	ops.c	FUNCTION_9	IF_1	CALL_2
0x4002500	      0xbf14000000	                           mov edi, 0x14	       766	ops.c	FUNCTION_9	ELSE_2	IF_8
0x4002505	      0xe800000000	                          call 0x400250a	       766	ops.c	FUNCTION_9	ELSE_2	IF_8
0x400250a	      0xe944ffffff	                           jmp 0x4002453	       766	ops.c	FUNCTION_9	ELSE_2	IF_8
0x400250f	              0x90	                                     nop	       766	ops.c	FUNCTION_9	ELSE_2	IF_8
0x4002510	            0x31ff	                            xor edi, edi	       772	ops.c	FUNCTION_9	IF_9	CALL_13
0x4002512	      0xbe00000000	                              mov esi, 0	       772	ops.c	FUNCTION_9	IF_9	CALL_13
0x4002517	      0xe800000000	                          call 0x400251c	       772	ops.c	FUNCTION_9	IF_9	CALL_13
0x400251c	          0x4889c7	                            mov rdi, rax	       772	ops.c	FUNCTION_9	IF_9	CALL_13
0x400251f	      0xe800000000	                          call 0x4002524	       772	ops.c	FUNCTION_9	IF_9	CALL_13
0x4002524	      0xe965ffffff	                           jmp 0x400248e	       772	ops.c	FUNCTION_9	IF_9	CALL_13
str_to_reg	SWITCH,0:IF,19:WHILE,1:DO,0:FOR,6:ELSE,5:CALL,11:functions,0	321
0x4000830	            0x4157	                                push r15	      7132	ops.c	FUNCTION_88
0x4000832	            0x4156	                                push r14	      7132	ops.c	FUNCTION_88
0x4000834	          0x4989ff	                            mov r15, rdi	      7132	ops.c	FUNCTION_88
0x4000837	            0x4155	                                push r13	      7132	ops.c	FUNCTION_88
0x4000839	            0x4154	                                push r12	      7132	ops.c	FUNCTION_88
0x400083b	          0x4989d4	                            mov r12, rdx	      7132	ops.c	FUNCTION_88
0x400083e	              0x55	                                push rbp	      7132	ops.c	FUNCTION_88
0x400083f	              0x53	                                push rbx	      7132	ops.c	FUNCTION_88
0x4000840	          0x4489cd	                            mov ebp, r9d	      7132	ops.c	FUNCTION_88
0x4000843	        0x4883ec58	                           sub rsp, 0x58	      7132	ops.c	FUNCTION_88
0x4000847	          0x488b3f	                    mov rdi, qword [rdi]	      7146	ops.c	FUNCTION_88	IF_1
0x400084a	        0x89742420	             mov dword [rsp + 0x20], esi	      7132	ops.c	FUNCTION_88
0x400084e	      0x4c89442448	              mov qword [rsp + 0x48], r8	      7132	ops.c	FUNCTION_88
0x4000853	          0x4885ff	                           test rdi, rdi	      7146	ops.c	FUNCTION_88	IF_1
0x4000856	     0xf844c040000	                            je 0x4000ca8	      7146	ops.c	FUNCTION_88	IF_1
0x400085c	        0x498b7708	                mov rsi, qword [r15 + 8]	      7146	ops.c	FUNCTION_88	IF_1
0x4000860	    0x817c2420ff00	           cmp dword [rsp + 0x20], 0xff 	      7149	ops.c	FUNCTION_88	IF_2
0x4000868	     0xf849a020000	                            je 0x4000b08	      7149	ops.c	FUNCTION_88	IF_2
0x400086e	            0x85ed	                           test ebp, ebp	      7160	ops.c	FUNCTION_88	ELSE_1	IF_3
0x4000870	     0xf859e020000	                           jne 0x4000b14	      7160	ops.c	FUNCTION_88	ELSE_1	IF_3
0x4000876	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      7160	ops.c	FUNCTION_88	ELSE_1	IF_3
0x400087a	            0x85c0	                           test eax, eax	      7160	ops.c	FUNCTION_88	ELSE_1	IF_3
0x400087c	        0x410f94c1	                                sete r9b	      7160	ops.c	FUNCTION_88	ELSE_1	IF_3
0x4000880	          0x4885c9	                           test rcx, rcx	      7160	ops.c	FUNCTION_88	ELSE_1	IF_3
0x4000883	           0xf94c0	                                 sete al	      7160	ops.c	FUNCTION_88	ELSE_1	IF_3
0x4000886	          0x4109c1	                             or r9d, eax	      7160	ops.c	FUNCTION_88	ELSE_1	IF_3
0x4000889	            0x31c0	                            xor eax, eax	      7167	ops.c	FUNCTION_88	ELSE_2	FOR_2
0x400088b	          0x4885c9	                           test rcx, rcx	      7167	ops.c	FUNCTION_88	ELSE_2	FOR_2
0x400088e	            0x7e20	                           jle 0x40008b0	      7167	ops.c	FUNCTION_88	ELSE_2	FOR_2
0x4000890	            0x31c0	                            xor eax, eax	      7150	ops.c	FUNCTION_88	IF_2
0x4000892	            0x31d2	                            xor edx, edx	      7150	ops.c	FUNCTION_88	IF_2
0x4000894	         0xf1f4000	                         nop dword [rax]	      7150	ops.c	FUNCTION_88	IF_2
0x4000898	          0x4531c0	                            xor r8d, r8d	      7169	ops.c	FUNCTION_88	ELSE_2	FOR_2	IF_4
0x400089b	      0x41803c140a	               cmp byte [r12 + rdx], 0xa	      7169	ops.c	FUNCTION_88	ELSE_2	FOR_2	IF_4
0x40008a0	        0x410f94c0	                                sete r8b	      7169	ops.c	FUNCTION_88	ELSE_2	FOR_2	IF_4
0x40008a4	        0x4883c201	                              add rdx, 1	      7167	ops.c	FUNCTION_88	ELSE_2	FOR_2
0x40008a8	          0x4401c0	                            add eax, r8d	      7169	ops.c	FUNCTION_88	ELSE_2	FOR_2	IF_4
0x40008ab	          0x4839d1	                            cmp rcx, rdx	      7167	ops.c	FUNCTION_88	ELSE_2	FOR_2
0x40008ae	            0x7fe8	                            jg 0x4000898	      7167	ops.c	FUNCTION_88	ELSE_2	FOR_2
0x40008b0	          0x4584c9	                           test r9b, r9b	      7170	ops.c	FUNCTION_88	ELSE_2	IF_5
0x40008b3	            0x750b	                           jne 0x40008c0	      7170	ops.c	FUNCTION_88	ELSE_2	IF_5
0x40008b5	          0x4531ed	                          xor r13d, r13d	      7139	ops.c	FUNCTION_88
0x40008b8	    0x41807c0cff0a	          cmp byte [r12 + rcx - 1], 0xa 	      7170	ops.c	FUNCTION_88	ELSE_2	IF_5
0x40008be	            0x7409	                            je 0x40008c9	      7170	ops.c	FUNCTION_88	ELSE_2	IF_5
0x40008c0	          0x83c001	                              add eax, 1	      7173	ops.c	FUNCTION_88	ELSE_2	IF_5
0x40008c3	    0x41bd01000000	                             mov r13d, 1	      7172	ops.c	FUNCTION_88	ELSE_2	IF_5
0x40008c9	          0x4885f6	                           test rsi, rsi	      7175	ops.c	FUNCTION_88	ELSE_2	IF_6
0x40008cc	     0xf8e96020000	                           jle 0x4000b68	      7175	ops.c	FUNCTION_88	ELSE_2	IF_6
0x40008d2	      0x41807f1000	                cmp byte [r15 + 0x10], 0	      7175	ops.c	FUNCTION_88	ELSE_2	IF_6
0x40008d7	     0xf858b020000	                           jne 0x4000b68	      7175	ops.c	FUNCTION_88	ELSE_2	IF_6
0x40008dd	          0x8d50ff	                      lea edx, [rax - 1]	      7175	ops.c	FUNCTION_88	ELSE_2	IF_6
0x40008e0	      0xbb01000000	                              mov ebx, 1	      7177	ops.c	FUNCTION_88	ELSE_2	IF_6
0x40008e5	          0x4863c2	                         movsxd rax, edx	      7177	ops.c	FUNCTION_88	ELSE_2	IF_6
0x40008e8	          0x4801f0	                            add rax, rsi	      7183	ops.c	FUNCTION_88	IF_7
0x40008eb	     0xf8454020000	                            je 0x4000b45	      7183	ops.c	FUNCTION_88	IF_7
0x40008f1	     0xf1f80000000	                         nop dword [rax]	      7183	ops.c	FUNCTION_88	IF_7
0x40008f8	    0x488d3cc50000	                        lea rdi, [rax*8]	      7193	ops.c	FUNCTION_88	CALL_2
0x4000900	      0xbe01000000	                              mov esi, 1	      7193	ops.c	FUNCTION_88	CALL_2
0x4000905	      0x48894c2408	                mov qword [rsp + 8], rcx	      7193	ops.c	FUNCTION_88	CALL_2
0x400090a	      0xe800000000	                          call 0x400090f	      7193	ops.c	FUNCTION_88	CALL_2
0x400090f	          0x4885c0	                           test rax, rax	      7195	ops.c	FUNCTION_88	IF_8
0x4000912	          0x4989c6	                            mov r14, rax	      7193	ops.c	FUNCTION_88	CALL_2
0x4000915	     0xf843b020000	                            je 0x4000b56	      7195	ops.c	FUNCTION_88	IF_8
0x400091b	        0x498b7f08	                mov rdi, qword [r15 + 8]	      7197	ops.c	FUNCTION_88	FOR_3
0x400091f	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      7197	ops.c	FUNCTION_88	FOR_3
0x4000924	          0x4885ff	                           test rdi, rdi	      7197	ops.c	FUNCTION_88	FOR_3
0x4000927	     0xf8ee4030000	                           jle 0x4000d11	      7197	ops.c	FUNCTION_88	FOR_3
0x400092d	    0x488d04fd0000	                        lea rax, [rdi*8]	      7197	ops.c	FUNCTION_88	FOR_3
0x4000935	            0x31d2	                            xor edx, edx	      7197	ops.c	FUNCTION_88	FOR_3
0x4000937	    0x660f1f840000	                    nop word [rax + rax]	      7197	ops.c	FUNCTION_88	FOR_3
0x4000940	          0x498b37	                    mov rsi, qword [r15]	      7198	ops.c	FUNCTION_88	FOR_3
0x4000943	        0x488b3416	              mov rsi, qword [rsi + rdx]	      7198	ops.c	FUNCTION_88	FOR_3
0x4000947	        0x49893416	              mov qword [r14 + rdx], rsi	      7198	ops.c	FUNCTION_88	FOR_3
0x400094b	        0x4883c208	                              add rdx, 8	      7198	ops.c	FUNCTION_88	FOR_3
0x400094f	          0x4839c2	                            cmp rdx, rax	      7197	ops.c	FUNCTION_88	FOR_3
0x4000952	            0x75ec	                           jne 0x4000940	      7197	ops.c	FUNCTION_88	FOR_3
0x4000954	        0x897c2408	                mov dword [rsp + 8], edi	      7197	ops.c	FUNCTION_88	FOR_3
0x4000958	          0x498b3f	                    mov rdi, qword [r15]	      7199	ops.c	FUNCTION_88	CALL_3
0x400095b	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      7199	ops.c	FUNCTION_88	CALL_3
0x4000960	      0xe800000000	                          call 0x4000965	      7199	ops.c	FUNCTION_88	CALL_3
0x4000965	            0x85ed	                           test ebp, ebp	      7206	ops.c	FUNCTION_88	IF_9
0x4000967	          0x4d8937	                    mov qword [r15], r14	      7200	ops.c	FUNCTION_88
0x400096a	     0xf8530020000	                           jne 0x4000ba0	      7206	ops.c	FUNCTION_88	IF_9
0x4000970	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000975	          0x4531f6	                          xor r14d, r14d	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000978	      0x498d440d00	                    lea rax, [r13 + rcx]	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400097d	          0x4531ed	                          xor r13d, r13d	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000980	          0x4885c0	                           test rax, rax	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000983	      0x4889442428	             mov qword [rsp + 0x28], rax	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000988	     0xf8e6d010000	                           jle 0x4000afb	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400098e	          0x4889c8	                            mov rax, rcx	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000991	      0x4c896c2418	             mov qword [rsp + 0x18], r13	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000996	          0x4c89f9	                            mov rcx, r15	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000999	          0x4d89e5	                            mov r13, r12	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400099c	          0x4d89f7	                            mov r15, r14	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400099f	          0x4989c6	                            mov r14, rax	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x40009a2	    0x660f1f440000	                    nop word [rax + rax]	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x40009a8	          0x4d39fe	                            cmp r14, r15	      7220	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6
0x40009ab	     0xf8e06030000	                           jle 0x4000cb7	      7220	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6
0x40009b1	    0x43807c3d000a	               cmp byte [r13 + r15], 0xa	      7221	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6	IF_11
0x40009b7	     0xf84fa020000	                            je 0x4000cb7	      7221	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6	IF_11
0x40009bd	          0x4c89fd	                            mov rbp, r15	      7221	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6	IF_11
0x40009c0	            0xeb0e	                           jmp 0x40009d0	      7221	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6	IF_11
0x40009c2	    0x660f1f440000	                    nop word [rax + rax]	      7221	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6	IF_11
0x40009c8	    0x41807c2d000a	               cmp byte [r13 + rbp], 0xa	      7221	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6	IF_11
0x40009ce	            0x740c	                            je 0x40009dc	      7221	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6	IF_11
0x40009d0	        0x4883c501	                              add rbp, 1	      7220	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6
0x40009d4	          0x4939ee	                            cmp r14, rbp	      7220	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6
0x40009d7	            0x75ef	                           jne 0x40009c8	      7220	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6
0x40009d9	          0x4c89f5	                            mov rbp, r14	      7220	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6
0x40009dc	          0x4c29fd	                            sub rbp, r15	      7220	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6
0x40009df	          0x4189ec	                           mov r12d, ebp	      7220	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6
0x40009e2	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      7220	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6
0x40009e7	          0x4839e8	                            cmp rax, rbp	      7220	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6
0x40009ea	        0x480f4cc5	                          cmovl rax, rbp	      7220	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6
0x40009ee	            0x85db	                           test ebx, ebx	      7226	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13
0x40009f0	      0x4889442418	             mov qword [rsp + 0x18], rax	      7226	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13
0x40009f5	     0xf8445020000	                            je 0x4000c40	      7226	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13
0x40009fb	      0x836c240801	                  sub dword [rsp + 8], 1	      7228	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13
0x4000a00	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      7229	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0x4000a05	      0x4863742408	            movsxd rsi, dword [rsp + 8] 	      7228	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13
0x4000a0a	    0x488d04f50000	                        lea rax, [rsi*8]	      7229	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0x4000a12	      0x4889742430	             mov qword [rsp + 0x30], rsi	      7229	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0x4000a17	      0x4889442410	             mov qword [rsp + 0x10], rax	      7229	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0x4000a1c	          0x488b01	                    mov rax, qword [rcx]	      7229	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0x4000a1f	        0x488b3cf0	            mov rdi, qword [rax + rsi*8]	      7229	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0x4000a23	      0xe800000000	                          call 0x4000a28	      7229	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0x4000a28	          0x4101c4	                           add r12d, eax	      7233	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0x4000a2b	        0x89442424	             mov dword [rsp + 0x24], eax	      7229	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0x4000a2f	      0x4889442440	             mov qword [rsp + 0x40], rax	      7233	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0x4000a34	      0x418d7c2401	                      lea edi, [r12 + 1]	      7233	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0x4000a39	      0xe800000000	                          call 0x4000a3e	      7233	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0x4000a3e	          0x4885c0	                           test rax, rax	      7234	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_14
0x4000a41	          0x4889c3	                            mov rbx, rax	      7233	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0x4000a44	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      7234	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_14
0x4000a49	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      7234	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_14
0x4000a4e	     0xf84b0020000	                            je 0x4000d04	      7234	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_14
0x4000a54	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	      7236	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_15
0x4000a59	            0x85d2	                           test edx, edx	      7236	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_15
0x4000a5b	            0x7421	                            je 0x4000a7e	      7236	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_15
0x4000a5d	          0x488b01	                    mov rax, qword [rcx]	      7237	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_8
0x4000a60	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        59	string3.h	FUNCTION_93	CALL_3
0x4000a65	          0x4863d2	                         movsxd rdx, edx	        59	string3.h	FUNCTION_93	CALL_3
0x4000a68	          0x4889df	                            mov rdi, rbx	        59	string3.h	FUNCTION_93	CALL_3
0x4000a6b	      0x48894c2430	             mov qword [rsp + 0x30], rcx	      7237	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_8
0x4000a70	        0x488b3430	              mov rsi, qword [rax + rsi]	        59	string3.h	FUNCTION_93	CALL_3
0x4000a74	      0xe800000000	                          call 0x4000a79	        59	string3.h	FUNCTION_93	CALL_3
0x4000a79	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	        59	string3.h	FUNCTION_93	CALL_3
0x4000a7e	          0x488b01	                    mov rax, qword [rcx]	      7239	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_9
0x4000a81	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      7239	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_9
0x4000a86	      0x48894c2430	             mov qword [rsp + 0x30], rcx	      7239	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_9
0x4000a8b	        0x488b3c30	              mov rdi, qword [rax + rsi]	      7239	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_9
0x4000a8f	      0xe800000000	                          call 0x4000a94	      7239	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_9
0x4000a94	          0x4885ed	                           test rbp, rbp	      7240	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_17
0x4000a97	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      7240	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_17
0x4000a9c	     0xf85dd010000	                           jne 0x4000c7f	      7240	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_17
0x4000aa2	          0x4963c4	                        movsxd rax, r12d	      7243	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000aa5	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      7244	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000aaa	      0x8344240801	                  add dword [rsp + 8], 1	      7244	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000aaf	        0xc6040300	                 mov byte [rbx + rax], 0	      7243	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000ab3	          0x488b01	                    mov rax, qword [rcx]	      7244	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000ab6	          0x4585e4	                         test r12d, r12d	      7245	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1
0x4000ab9	        0x48891c38	              mov qword [rax + rdi], rbx	      7244	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000abd	      0x418d4424ff	                      lea eax, [r12 - 1]	      7244	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000ac2	      0x488d440301	                lea rax, [rbx + rax + 1]	      7244	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000ac7	            0x7e18	                           jle 0x4000ae1	      7245	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1
0x4000ac9	     0xf1f80000000	                         nop dword [rax]	      7245	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1
0x4000ad0	          0x803b00	                       cmp byte [rbx], 0	      7247	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1	IF_18
0x4000ad3	            0x7503	                           jne 0x4000ad8	      7247	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1	IF_18
0x4000ad5	          0xc6030a	                     mov byte [rbx], 0xa	      7248	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1	IF_18
0x4000ad8	        0x4883c301	                              add rbx, 1	      7249	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1
0x4000adc	          0x4839c3	                            cmp rbx, rax	      7245	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1
0x4000adf	            0x75ef	                           jne 0x4000ad0	      7245	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1
0x4000ae1	      0x4d8d7c2f01	                lea r15, [r15 + rbp + 1]	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000ae6	            0x31db	                            xor ebx, ebx	      7251	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000ae8	      0x4c397c2428	            cmp qword [rsp + 0x28], r15 	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000aed	     0xf8fb5feffff	                            jg 0x40009a8	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000af3	      0x4c8b6c2418	            mov r13, qword [rsp + 0x18] 	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000af8	          0x4989cf	                            mov r15, rcx	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000afb	      0x4863742408	            movsxd rsi, dword [rsp + 8] 	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000b00	      0xe906010000	                           jmp 0x4000c0b	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000b05	           0xf1f00	                         nop dword [rax]	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000b08	            0x85ed	                           test ebp, ebp	      7152	ops.c	FUNCTION_88	IF_2
0x4000b0a	            0x7462	                            je 0x4000b6e	      7152	ops.c	FUNCTION_88	IF_2
0x4000b0c	    0xc74424200100	               mov dword [rsp + 0x20], 1	      7152	ops.c	FUNCTION_88	IF_2
0x4000b14	      0x49833c2400	                      cmp qword [r12], 0	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x4000b19	     0xf84ca010000	                            je 0x4000ce9	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x4000b1f	          0x4c89e2	                            mov rdx, r12	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x4000b22	            0x31c0	                            xor eax, eax	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x4000b24	         0xf1f4000	                         nop dword [rax]	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x4000b28	        0x4883c208	                              add rdx, 8	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x4000b2c	          0x83c001	                              add eax, 1	      7163	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x4000b2f	        0x48833a00	                      cmp qword [rdx], 0	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x4000b33	            0x75f3	                           jne 0x4000b28	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x4000b35	            0x4898	                                    cdqe	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x4000b37	            0x31db	                            xor ebx, ebx	      7140	ops.c	FUNCTION_88
0x4000b39	          0x4531ed	                          xor r13d, r13d	      7139	ops.c	FUNCTION_88
0x4000b3c	          0x4801f0	                            add rax, rsi	      7183	ops.c	FUNCTION_88	IF_7
0x4000b3f	     0xf85b3fdffff	                           jne 0x40008f8	      7183	ops.c	FUNCTION_88	IF_7
0x4000b45	          0x4885ff	                           test rdi, rdi	      7185	ops.c	FUNCTION_88	IF_7	CALL_1
0x4000b48	            0x740c	                            je 0x4000b56	      7185	ops.c	FUNCTION_88	IF_7	CALL_1
0x4000b4a	      0xe800000000	                          call 0x4000b4f	      7185	ops.c	FUNCTION_88	IF_7	CALL_1
0x4000b4f	    0x49c707000000	                      mov qword [r15], 0	      7185	ops.c	FUNCTION_88	IF_7	CALL_1
0x4000b56	        0x4883c458	                           add rsp, 0x58	      7263	ops.c	FUNCTION_88
0x4000b5a	              0x5b	                                 pop rbx	      7263	ops.c	FUNCTION_88
0x4000b5b	              0x5d	                                 pop rbp	      7263	ops.c	FUNCTION_88
0x4000b5c	            0x415c	                                 pop r12	      7263	ops.c	FUNCTION_88
0x4000b5e	            0x415d	                                 pop r13	      7263	ops.c	FUNCTION_88
0x4000b60	            0x415e	                                 pop r14	      7263	ops.c	FUNCTION_88
0x4000b62	            0x415f	                                 pop r15	      7263	ops.c	FUNCTION_88
0x4000b64	              0xc3	                                     ret	      7263	ops.c	FUNCTION_88
0x4000b65	           0xf1f00	                         nop dword [rax]	      7263	ops.c	FUNCTION_88
0x4000b68	            0x4898	                                    cdqe	      7263	ops.c	FUNCTION_88
0x4000b6a	            0x31db	                            xor ebx, ebx	      7140	ops.c	FUNCTION_88
0x4000b6c	            0xebce	                           jmp 0x4000b3c	      7140	ops.c	FUNCTION_88
0x4000b6e	          0x4885c9	                           test rcx, rcx	      7152	ops.c	FUNCTION_88	IF_2
0x4000b71	     0xf8e7e010000	                           jle 0x4000cf5	      7152	ops.c	FUNCTION_88	IF_2
0x4000b77	    0x410fb6440cff	         movzx eax, byte [r12 + rcx - 1]	      7150	ops.c	FUNCTION_88	IF_2
0x4000b7d	            0x3c0a	                             cmp al, 0xa	      7150	ops.c	FUNCTION_88	IF_2
0x4000b7f	     0xf8454010000	                            je 0x4000cd9	      7150	ops.c	FUNCTION_88	IF_2
0x4000b85	            0x3c0d	                             cmp al, 0xd	      7150	ops.c	FUNCTION_88	IF_2
0x4000b87	     0xf844c010000	                            je 0x4000cd9	      7150	ops.c	FUNCTION_88	IF_2
0x4000b8d	    0x41b901000000	                              mov r9d, 1	      7150	ops.c	FUNCTION_88	IF_2
0x4000b93	    0xc74424200000	               mov dword [rsp + 0x20], 0	      7150	ops.c	FUNCTION_88	IF_2
0x4000b9b	      0xe9f0fcffff	                           jmp 0x4000890	      7150	ops.c	FUNCTION_88	IF_2
0x4000ba0	        0x498b1c24	                    mov rbx, qword [r12]	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000ba4	          0x4885db	                           test rbx, rbx	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000ba7	     0xf8471010000	                            je 0x4000d1e	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000bad	        0x8b742408	                mov esi, dword [rsp + 8]	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000bb1	          0x4531ed	                          xor r13d, r13d	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000bb4	      0x4c897c2408	                mov qword [rsp + 8], r15	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000bb9	          0x4d89e7	                            mov r15, r12	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000bbc	          0x4863c6	                         movsxd rax, esi	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000bbf	          0x4189f4	                           mov r12d, esi	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000bc2	        0x4d8d34c6	                  lea r14, [r14 + rax*8]	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000bc6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000bd0	          0x4889df	                            mov rdi, rbx	      7210	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_4
0x4000bd3	      0xe800000000	                          call 0x4000bd8	      7210	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_4
0x4000bd8	          0x4889df	                            mov rdi, rbx	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x4000bdb	          0x4889c5	                            mov rbp, rax	      7210	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_4
0x4000bde	            0x89c6	                            mov esi, eax	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x4000be0	      0xe800000000	                          call 0x4000be5	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x4000be5	          0x4939ed	                            cmp r13, rbp	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x4000be8	          0x498906	                    mov qword [r14], rax	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x4000beb	        0x4c0f4ced	                          cmovl r13, rbp	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x4000bef	        0x4983c708	                              add r15, 8	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000bf3	          0x498b1f	                    mov rbx, qword [r15]	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000bf6	        0x4183c401	                             add r12d, 1	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000bfa	        0x4983c608	                              add r14, 8	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000bfe	          0x4885db	                           test rbx, rbx	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000c01	            0x75cd	                           jne 0x4000bd0	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000c03	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000c08	          0x4963f4	                        movsxd rsi, r12d	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000c0b	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      7254	ops.c	FUNCTION_88
0x4000c0f	        0x49897708	                mov qword [r15 + 8], rsi	      7255	ops.c	FUNCTION_88
0x4000c13	          0x83f802	                              cmp eax, 2	      7256	ops.c	FUNCTION_88	IF_19
0x4000c16	        0x41884710	               mov byte [r15 + 0x10], al	      7254	ops.c	FUNCTION_88
0x4000c1a	     0xf84a1000000	                            je 0x4000cc1	      7256	ops.c	FUNCTION_88	IF_19
0x4000c20	    0x41c747140000	               mov dword [r15 + 0x14], 0	      7259	ops.c	FUNCTION_88	ELSE_5
0x4000c28	      0xe800000000	                          call 0x4000c2d	      7261	ops.c	FUNCTION_88	CALL_11
0x4000c2d	        0x49894718	             mov qword [r15 + 0x18], rax	      7261	ops.c	FUNCTION_88	CALL_11
0x4000c31	        0x4883c458	                           add rsp, 0x58	      7263	ops.c	FUNCTION_88
0x4000c35	              0x5b	                                 pop rbx	      7263	ops.c	FUNCTION_88
0x4000c36	              0x5d	                                 pop rbp	      7263	ops.c	FUNCTION_88
0x4000c37	            0x415c	                                 pop r12	      7263	ops.c	FUNCTION_88
0x4000c39	            0x415d	                                 pop r13	      7263	ops.c	FUNCTION_88
0x4000c3b	            0x415e	                                 pop r14	      7263	ops.c	FUNCTION_88
0x4000c3d	            0x415f	                                 pop r15	      7263	ops.c	FUNCTION_88
0x4000c3f	              0xc3	                                     ret	      7263	ops.c	FUNCTION_88
0x4000c40	      0x418d7c2401	                      lea edi, [r12 + 1]	      7233	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0x4000c45	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      7233	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0x4000c4a	      0xe800000000	                          call 0x4000c4f	      7233	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0x4000c4f	          0x4885c0	                           test rax, rax	      7234	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_14
0x4000c52	          0x4889c3	                            mov rbx, rax	      7233	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0x4000c55	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      7234	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_14
0x4000c5a	     0xf8493feffff	                            je 0x4000af3	      7234	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_14
0x4000c60	      0x4863442408	            movsxd rax, dword [rsp + 8] 	      7234	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_14
0x4000c65	    0xc74424240000	               mov dword [rsp + 0x24], 0	      7232	ops.c	FUNCTION_88	ELSE_3	FOR_5	ELSE_4
0x4000c6d	        0x48c1e003	                              shl rax, 3	      7232	ops.c	FUNCTION_88	ELSE_3	FOR_5	ELSE_4
0x4000c71	          0x4885ed	                           test rbp, rbp	      7240	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_17
0x4000c74	      0x4889442410	             mov qword [rsp + 0x10], rax	      7240	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_17
0x4000c79	     0xf8423feffff	                            je 0x4000aa2	      7240	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_17
0x4000c7f	      0x48637c2424	         movsxd rdi, dword [rsp + 0x24] 	        59	string3.h	FUNCTION_93	CALL_3
0x4000c84	      0x4b8d743d00	                    lea rsi, [r13 + r15]	        59	string3.h	FUNCTION_93	CALL_3
0x4000c89	          0x4889ea	                            mov rdx, rbp	        59	string3.h	FUNCTION_93	CALL_3
0x4000c8c	      0x48894c2430	             mov qword [rsp + 0x30], rcx	        59	string3.h	FUNCTION_93	CALL_3
0x4000c91	          0x4801df	                            add rdi, rbx	        59	string3.h	FUNCTION_93	CALL_3
0x4000c94	      0xe800000000	                          call 0x4000c99	        59	string3.h	FUNCTION_93	CALL_3
0x4000c99	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	        59	string3.h	FUNCTION_93	CALL_3
0x4000c9e	      0xe9fffdffff	                           jmp 0x4000aa2	        59	string3.h	FUNCTION_93	CALL_3
0x4000ca3	       0xf1f440000	                   nop dword [rax + rax]	        59	string3.h	FUNCTION_93	CALL_3
0x4000ca8	    0x49c747080000	                  mov qword [r15 + 8], 0	      7147	ops.c	FUNCTION_88	IF_1
0x4000cb0	            0x31f6	                            xor esi, esi	      7147	ops.c	FUNCTION_88	IF_1
0x4000cb2	      0xe9a9fbffff	                           jmp 0x4000860	      7147	ops.c	FUNCTION_88	IF_1
0x4000cb7	          0x4531e4	                          xor r12d, r12d	      7221	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6	IF_11
0x4000cba	            0x31ed	                            xor ebp, ebp	      7221	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6	IF_11
0x4000cbc	      0xe921fdffff	                           jmp 0x40009e2	      7221	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6	IF_11
0x4000cc1	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      7257	ops.c	FUNCTION_88	IF_19
0x4000cc6	        0x418d45ff	                      lea eax, [r13 - 1]	      7257	ops.c	FUNCTION_88	IF_19
0x4000cca	          0x4885ff	                           test rdi, rdi	      7257	ops.c	FUNCTION_88	IF_19
0x4000ccd	           0xf49c7	                         cmovns eax, edi	      7257	ops.c	FUNCTION_88	IF_19
0x4000cd0	        0x41894714	             mov dword [r15 + 0x14], eax	      7257	ops.c	FUNCTION_88	IF_19
0x4000cd4	      0xe94fffffff	                           jmp 0x4000c28	      7257	ops.c	FUNCTION_88	IF_19
0x4000cd9	          0x4531c9	                            xor r9d, r9d	      7257	ops.c	FUNCTION_88	IF_19
0x4000cdc	    0xc74424200100	               mov dword [rsp + 0x20], 1	      7152	ops.c	FUNCTION_88	IF_2
0x4000ce4	      0xe9a7fbffff	                           jmp 0x4000890	      7152	ops.c	FUNCTION_88	IF_2
0x4000ce9	            0x31c0	                            xor eax, eax	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x4000ceb	            0x31db	                            xor ebx, ebx	      7140	ops.c	FUNCTION_88
0x4000ced	          0x4531ed	                          xor r13d, r13d	      7139	ops.c	FUNCTION_88
0x4000cf0	      0xe947feffff	                           jmp 0x4000b3c	      7139	ops.c	FUNCTION_88
0x4000cf5	    0xc74424200000	               mov dword [rsp + 0x20], 0	      7139	ops.c	FUNCTION_88
0x4000cfd	            0x31c0	                            xor eax, eax	      7139	ops.c	FUNCTION_88
0x4000cff	      0xe9bcfbffff	                           jmp 0x40008c0	      7139	ops.c	FUNCTION_88
0x4000d04	      0x4c8b6c2418	            mov r13, qword [rsp + 0x18] 	      7139	ops.c	FUNCTION_88
0x4000d09	          0x4989cf	                            mov r15, rcx	      7139	ops.c	FUNCTION_88
0x4000d0c	      0xe9fafeffff	                           jmp 0x4000c0b	      7139	ops.c	FUNCTION_88
0x4000d11	    0xc74424080000	                  mov dword [rsp + 8], 0	      7197	ops.c	FUNCTION_88	FOR_3
0x4000d19	      0xe93afcffff	                           jmp 0x4000958	      7197	ops.c	FUNCTION_88	FOR_3
0x4000d1e	          0x4531ed	                          xor r13d, r13d	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000d21	      0x4863742408	            movsxd rsi, dword [rsp + 8] 	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000d26	      0xe9e0feffff	                           jmp 0x4000c0b	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
fex_format	SWITCH,0:IF,3:WHILE,0:DO,0:FOR,0:ELSE,0:CALL,8:functions,0	59
0x4005960	            0x4155	                                push r13	      4915	ops.c	FUNCTION_59
0x4005962	            0x4154	                                push r12	      4915	ops.c	FUNCTION_59
0x4005964	          0x4989fd	                            mov r13, rdi	      4915	ops.c	FUNCTION_59
0x4005967	              0x55	                                push rbp	      4915	ops.c	FUNCTION_59
0x4005968	              0x53	                                push rbx	      4915	ops.c	FUNCTION_59
0x4005969	          0x4889f5	                            mov rbp, rsi	      4915	ops.c	FUNCTION_59
0x400596c	      0xbf00000000	                              mov edi, 0	      4916	ops.c	FUNCTION_59	CALL_1
0x4005971	      0xbe04000000	                              mov esi, 4	      4916	ops.c	FUNCTION_59	CALL_1
0x4005976	            0x89d3	                            mov ebx, edx	      4915	ops.c	FUNCTION_59
0x4005978	        0x4883ec08	                              sub rsp, 8	      4915	ops.c	FUNCTION_59
0x400597c	      0xe800000000	                          call 0x4005981	      4916	ops.c	FUNCTION_59	CALL_1
0x4005981	          0x4c89ee	                            mov rsi, r13	      4925	ops.c	FUNCTION_59	CALL_2
0x4005984	      0xbf09000000	                              mov edi, 9	      4925	ops.c	FUNCTION_59	CALL_2
0x4005989	          0x4189c4	                           mov r12d, eax	      4916	ops.c	FUNCTION_59	CALL_1
0x400598c	      0xe800000000	                          call 0x4005991	      4925	ops.c	FUNCTION_59	CALL_2
0x4005991	          0x4889ee	                            mov rsi, rbp	      4926	ops.c	FUNCTION_59	CALL_3
0x4005994	            0x31ff	                            xor edi, edi	      4926	ops.c	FUNCTION_59	CALL_3
0x4005996	      0xe800000000	                          call 0x400599b	      4926	ops.c	FUNCTION_59	CALL_3
0x400599b	            0x89df	                            mov edi, ebx	      4927	ops.c	FUNCTION_59	CALL_4
0x400599d	      0xe800000000	                          call 0x40059a2	      4927	ops.c	FUNCTION_59	CALL_4
0x40059a2	    0x488b05000000	            mov rax, qword [0x040059a9] 	      4930	ops.c	FUNCTION_59	CALL_5
0x40059a9	    0x488bb8001500	          mov rdi, qword [rax + 0x1500] 	      4930	ops.c	FUNCTION_59	CALL_5
0x40059b0	      0xe800000000	                          call 0x40059b5	      4930	ops.c	FUNCTION_59	CALL_5
0x40059b5	          0x4885c0	                           test rax, rax	      4931	ops.c	FUNCTION_59	IF_1
0x40059b8	            0x745e	                            je 0x4005a18	      4931	ops.c	FUNCTION_59	IF_1
0x40059ba	          0x4585e4	                         test r12d, r12d	      4937	ops.c	FUNCTION_59	IF_2
0x40059bd	          0x4889c5	                            mov rbp, rax	      4937	ops.c	FUNCTION_59	IF_2
0x40059c0	            0x7536	                           jne 0x40059f8	      4937	ops.c	FUNCTION_59	IF_2
0x40059c2	          0x4889c7	                            mov rdi, rax	      4939	ops.c	FUNCTION_59	CALL_6
0x40059c5	      0xe800000000	                          call 0x40059ca	      4939	ops.c	FUNCTION_59	CALL_6
0x40059ca	            0x89c3	                            mov ebx, eax	      4939	ops.c	FUNCTION_59	CALL_6
0x40059cc	      0xbaffffffff	                     mov edx, 0xffffffff	      4943	ops.c	FUNCTION_59	CALL_7
0x40059d1	            0x31f6	                            xor esi, esi	      4943	ops.c	FUNCTION_59	CALL_7
0x40059d3	      0xbf31000000	                           mov edi, 0x31	      4943	ops.c	FUNCTION_59	CALL_7
0x40059d8	      0xe800000000	                          call 0x40059dd	      4943	ops.c	FUNCTION_59	CALL_7
0x40059dd	          0x4889ef	                            mov rdi, rbp	      4944	ops.c	FUNCTION_59	CALL_8
0x40059e0	      0xe800000000	                          call 0x40059e5	      4944	ops.c	FUNCTION_59	CALL_8
0x40059e5	        0x4883c408	                              add rsp, 8	      4947	ops.c	FUNCTION_59
0x40059e9	            0x89d8	                            mov eax, ebx	      4946	ops.c	FUNCTION_59
0x40059eb	              0x5b	                                 pop rbx	      4947	ops.c	FUNCTION_59
0x40059ec	              0x5d	                                 pop rbp	      4947	ops.c	FUNCTION_59
0x40059ed	            0x415c	                                 pop r12	      4947	ops.c	FUNCTION_59
0x40059ef	            0x415d	                                 pop r13	      4947	ops.c	FUNCTION_59
0x40059f1	              0xc3	                                     ret	      4947	ops.c	FUNCTION_59
0x40059f2	    0x660f1f440000	                    nop word [rax + rax]	      4947	ops.c	FUNCTION_59
0x40059f8	          0x4889c7	                            mov rdi, rax	      4939	ops.c	FUNCTION_59	CALL_6
0x40059fb	    0x830500000000	               add dword [0x04005a02], 1	      4938	ops.c	FUNCTION_59	IF_2
0x4005a02	      0xe800000000	                          call 0x4005a07	      4939	ops.c	FUNCTION_59	CALL_6
0x4005a07	    0x832d00000000	               sub dword [0x04005a0e], 1	      4941	ops.c	FUNCTION_59	IF_3
0x4005a0e	            0x89c3	                            mov ebx, eax	      4939	ops.c	FUNCTION_59	CALL_6
0x4005a10	            0xebba	                           jmp 0x40059cc	      4939	ops.c	FUNCTION_59	CALL_6
0x4005a12	    0x660f1f440000	                    nop word [rax + rax]	      4939	ops.c	FUNCTION_59	CALL_6
0x4005a18	        0x4883c408	                              add rsp, 8	      4947	ops.c	FUNCTION_59
0x4005a1c	            0x31c0	                            xor eax, eax	      4932	ops.c	FUNCTION_59	IF_1
0x4005a1e	              0x5b	                                 pop rbx	      4947	ops.c	FUNCTION_59
0x4005a1f	              0x5d	                                 pop rbp	      4947	ops.c	FUNCTION_59
0x4005a20	            0x415c	                                 pop r12	      4947	ops.c	FUNCTION_59
0x4005a22	            0x415d	                                 pop r13	      4947	ops.c	FUNCTION_59
0x4005a24	              0xc3	                                     ret	      4947	ops.c	FUNCTION_59
get_reg_contents	SWITCH,0:IF,16:WHILE,0:DO,0:FOR,3:ELSE,0:CALL,18:functions,0	175
0x400ba40	            0x4157	                                push r15	      6838	ops.c	FUNCTION_82
0x400ba42	            0x4156	                                push r14	      6838	ops.c	FUNCTION_82
0x400ba44	            0x4155	                                push r13	      6838	ops.c	FUNCTION_82
0x400ba46	            0x4154	                                push r12	      6838	ops.c	FUNCTION_82
0x400ba48	              0x55	                                push rbp	      6838	ops.c	FUNCTION_82
0x400ba49	              0x53	                                push rbx	      6838	ops.c	FUNCTION_82
0x400ba4a	            0x89f5	                            mov ebp, esi	      6838	ops.c	FUNCTION_82
0x400ba4c	        0x4883ec28	                           sub rsp, 0x28	      6838	ops.c	FUNCTION_82
0x400ba50	    0x64488b042528	                mov rax, qword fs:[0x28]	      6838	ops.c	FUNCTION_82
0x400ba59	      0x4889442418	             mov qword [rsp + 0x18], rax	      6838	ops.c	FUNCTION_82
0x400ba5e	            0x31c0	                            xor eax, eax	      6838	ops.c	FUNCTION_82
0x400ba60	          0x83ff3d	                           cmp edi, 0x3d	      6845	ops.c	FUNCTION_82	IF_1
0x400ba63	     0xf8497000000	                            je 0x400bb00	      6845	ops.c	FUNCTION_82	IF_1
0x400ba69	          0x83ff40	                           cmp edi, 0x40	      6854	ops.c	FUNCTION_82	IF_4
0x400ba6c	            0x89fb	                            mov ebx, edi	      6854	ops.c	FUNCTION_82	IF_4
0x400ba6e	            0x7470	                            je 0x400bae0	      6854	ops.c	FUNCTION_82	IF_4
0x400ba70	            0x85ff	                           test edi, edi	      6858	ops.c	FUNCTION_82	IF_5	CALL_5
0x400ba72	            0x7571	                           jne 0x400bae5	      6858	ops.c	FUNCTION_82	IF_5	CALL_5
0x400ba74	            0x89df	                            mov edi, ebx	      6862	ops.c	FUNCTION_82	CALL_6
0x400ba76	      0xe800000000	                          call 0x400ba7b	      6862	ops.c	FUNCTION_82	CALL_6
0x400ba7b	      0x488d54240c	                    lea rdx, [rsp + 0xc]	      6865	ops.c	FUNCTION_82	IF_6	CALL_7
0x400ba80	      0x488d742410	                   lea rsi, [rsp + 0x10]	      6865	ops.c	FUNCTION_82	IF_6	CALL_7
0x400ba85	            0x31c9	                            xor ecx, ecx	      6865	ops.c	FUNCTION_82	IF_6	CALL_7
0x400ba87	            0x89c7	                            mov edi, eax	      6865	ops.c	FUNCTION_82	IF_6	CALL_7
0x400ba89	            0x89c3	                            mov ebx, eax	      6862	ops.c	FUNCTION_82	CALL_6
0x400ba8b	      0xe800000000	                          call 0x400ba90	      6865	ops.c	FUNCTION_82	IF_6	CALL_7
0x400ba90	            0x85c0	                           test eax, eax	      6865	ops.c	FUNCTION_82	IF_6	CALL_7
0x400ba92	     0xf84b8000000	                            je 0x400bb50	      6865	ops.c	FUNCTION_82	IF_6	CALL_7
0x400ba98	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      6867	ops.c	FUNCTION_82	IF_6	IF_7
0x400ba9d	          0x4885db	                           test rbx, rbx	      6867	ops.c	FUNCTION_82	IF_6	IF_7
0x400baa0	            0x7450	                            je 0x400baf2	      6867	ops.c	FUNCTION_82	IF_6	IF_7
0x400baa2	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      6869	ops.c	FUNCTION_82	IF_6	IF_8
0x400baa6	            0x85c0	                           test eax, eax	      6869	ops.c	FUNCTION_82	IF_6	IF_8
0x400baa8	     0xf8492000000	                            je 0x400bb40	      6869	ops.c	FUNCTION_82	IF_6	IF_8
0x400baae	          0x83e504	                              and ebp, 4	      6808	ops.c	FUNCTION_81	IF_1
0x400bab1	            0x756d	                           jne 0x400bb20	      6808	ops.c	FUNCTION_81	IF_1
0x400bab3	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      6935	ops.c	FUNCTION_82
0x400bab8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6935	ops.c	FUNCTION_82
0x400bac1	          0x4889d8	                            mov rax, rbx	      6935	ops.c	FUNCTION_82
0x400bac4	     0xf85f9010000	                           jne 0x400bcc3	      6935	ops.c	FUNCTION_82
0x400baca	        0x4883c428	                           add rsp, 0x28	      6935	ops.c	FUNCTION_82
0x400bace	              0x5b	                                 pop rbx	      6935	ops.c	FUNCTION_82
0x400bacf	              0x5d	                                 pop rbp	      6935	ops.c	FUNCTION_82
0x400bad0	            0x415c	                                 pop r12	      6935	ops.c	FUNCTION_82
0x400bad2	            0x415d	                                 pop r13	      6935	ops.c	FUNCTION_82
0x400bad4	            0x415e	                                 pop r14	      6935	ops.c	FUNCTION_82
0x400bad6	            0x415f	                                 pop r15	      6935	ops.c	FUNCTION_82
0x400bad8	              0xc3	                                     ret	      6935	ops.c	FUNCTION_82
0x400bad9	     0xf1f80000000	                         nop dword [rax]	      6935	ops.c	FUNCTION_82
0x400bae0	      0xbb22000000	                           mov ebx, 0x22	      6855	ops.c	FUNCTION_82	IF_4
0x400bae5	            0x31f6	                            xor esi, esi	      6858	ops.c	FUNCTION_82	IF_5	CALL_5
0x400bae7	            0x89df	                            mov edi, ebx	      6858	ops.c	FUNCTION_82	IF_5	CALL_5
0x400bae9	      0xe800000000	                          call 0x400baee	      6858	ops.c	FUNCTION_82	IF_5	CALL_5
0x400baee	            0x85c0	                           test eax, eax	      6858	ops.c	FUNCTION_82	IF_5	CALL_5
0x400baf0	            0x7582	                           jne 0x400ba74	      6858	ops.c	FUNCTION_82	IF_5	CALL_5
0x400baf2	            0x31db	                            xor ebx, ebx	      6891	ops.c	FUNCTION_82	IF_10	IF_13
0x400baf4	            0xebbd	                           jmp 0x400bab3	      6891	ops.c	FUNCTION_82	IF_10	IF_13
0x400baf6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6891	ops.c	FUNCTION_82	IF_10	IF_13
0x400bb00	        0x40f6c601	                             test sil, 1	      6847	ops.c	FUNCTION_82	IF_1	IF_2
0x400bb04	            0x75ec	                           jne 0x400baf2	      6847	ops.c	FUNCTION_82	IF_1	IF_2
0x400bb06	        0x40f6c602	                             test sil, 2	      6849	ops.c	FUNCTION_82	IF_1	IF_3
0x400bb0a	            0x7524	                           jne 0x400bb30	      6849	ops.c	FUNCTION_82	IF_1	IF_3
0x400bb0c	      0xe800000000	                          call 0x400bb11	      6851	ops.c	FUNCTION_82	IF_1	CALL_4
0x400bb11	          0x83e504	                              and ebp, 4	      6808	ops.c	FUNCTION_81	IF_1
0x400bb14	          0x4889c3	                            mov rbx, rax	      6851	ops.c	FUNCTION_82	IF_1	CALL_4
0x400bb17	            0x749a	                            je 0x400bab3	      6808	ops.c	FUNCTION_81	IF_1
0x400bb19	     0xf1f80000000	                         nop dword [rax]	      6808	ops.c	FUNCTION_81	IF_1
0x400bb20	          0x4889df	                            mov rdi, rbx	      6808	ops.c	FUNCTION_81	IF_1
0x400bb23	      0xe81865ffff	    call sym.getreg_wrap_one_line.part.3	      6808	ops.c	FUNCTION_81	IF_1
0x400bb28	          0x4889c3	                            mov rbx, rax	      6808	ops.c	FUNCTION_81	IF_1
0x400bb2b	            0xeb86	                           jmp 0x400bab3	      6808	ops.c	FUNCTION_81	IF_1
0x400bb2d	           0xf1f00	                         nop dword [rax]	      6808	ops.c	FUNCTION_81	IF_1
0x400bb30	    0x488b1d000000	            mov rbx, qword [0x0400bb37] 	       856	ops.c	FUNCTION_13	IF_1
0x400bb37	          0x4885db	                           test rbx, rbx	       856	ops.c	FUNCTION_13	IF_1
0x400bb3a	     0xf846effffff	                            je 0x400baae	       856	ops.c	FUNCTION_13	IF_1
0x400bb40	          0x4889df	                            mov rdi, rbx	      6871	ops.c	FUNCTION_82	IF_6	CALL_10
0x400bb43	      0xe800000000	                          call 0x400bb48	      6871	ops.c	FUNCTION_82	IF_6	CALL_10
0x400bb48	          0x4889c3	                            mov rbx, rax	      6871	ops.c	FUNCTION_82	IF_6	CALL_10
0x400bb4b	      0xe95effffff	                           jmp 0x400baae	      6871	ops.c	FUNCTION_82	IF_6	CALL_10
0x400bb50	            0x31f6	                            xor esi, esi	      6874	ops.c	FUNCTION_82	CALL_11
0x400bb52	            0x89df	                            mov edi, ebx	      6874	ops.c	FUNCTION_82	CALL_11
0x400bb54	      0xe800000000	                          call 0x400bb59	      6874	ops.c	FUNCTION_82	CALL_11
0x400bb59	    0x488b05000000	            mov rax, qword [0x0400bb60] 	      6875	ops.c	FUNCTION_82	IF_9
0x400bb60	          0x4c8b38	                    mov r15, qword [rax]	      6875	ops.c	FUNCTION_82	IF_9
0x400bb63	          0x4d85ff	                           test r15, r15	      6875	ops.c	FUNCTION_82	IF_9
0x400bb66	            0x748a	                            je 0x400baf2	      6875	ops.c	FUNCTION_82	IF_9
0x400bb68	          0x83e504	                              and ebp, 4	      6878	ops.c	FUNCTION_82	IF_10
0x400bb6b	     0xf85df000000	                           jne 0x400bc50	      6878	ops.c	FUNCTION_82	IF_10
0x400bb71	        0x4c8b6008	                mov r12, qword [rax + 8]	      6900	ops.c	FUNCTION_82	FOR_2
0x400bb75	      0xbf01000000	                              mov edi, 1	      6900	ops.c	FUNCTION_82	FOR_2
0x400bb7a	          0x4d85e4	                           test r12, r12	      6900	ops.c	FUNCTION_82	FOR_2
0x400bb7d	            0x7e39	                           jle 0x400bbb8	      6900	ops.c	FUNCTION_82	FOR_2
0x400bb7f	      0x440fb66810	          movzx r13d, byte [rax + 0x10] 	      6900	ops.c	FUNCTION_82	FOR_2
0x400bb84	      0x4d8d7424ff	                      lea r14, [r12 - 1]	      6907	ops.c	FUNCTION_82	FOR_2	IF_14
0x400bb89	            0x31ed	                            xor ebp, ebp	      6900	ops.c	FUNCTION_82	FOR_2
0x400bb8b	            0x31db	                            xor ebx, ebx	      6900	ops.c	FUNCTION_82	FOR_2
0x400bb8d	           0xf1f00	                         nop dword [rax]	      6900	ops.c	FUNCTION_82	FOR_2
0x400bb90	        0x498b3cdf	            mov rdi, qword [r15 + rbx*8]	      6902	ops.c	FUNCTION_82	FOR_2	CALL_15
0x400bb94	      0xe800000000	                          call 0x400bb99	      6902	ops.c	FUNCTION_82	FOR_2	CALL_15
0x400bb99	          0x4801c5	                            add rbp, rax	      6902	ops.c	FUNCTION_82	FOR_2	CALL_15
0x400bb9c	        0x4180fd01	                             cmp r13b, 1	      6907	ops.c	FUNCTION_82	FOR_2	IF_14
0x400bba0	            0x7405	                            je 0x400bba7	      6907	ops.c	FUNCTION_82	FOR_2	IF_14
0x400bba2	          0x4939de	                            cmp r14, rbx	      6907	ops.c	FUNCTION_82	FOR_2	IF_14
0x400bba5	            0x7e04	                           jle 0x400bbab	      6907	ops.c	FUNCTION_82	FOR_2	IF_14
0x400bba7	        0x4883c501	                              add rbp, 1	      6908	ops.c	FUNCTION_82	FOR_2	IF_14
0x400bbab	        0x4883c301	                              add rbx, 1	      6900	ops.c	FUNCTION_82	FOR_2
0x400bbaf	          0x4939dc	                            cmp r12, rbx	      6900	ops.c	FUNCTION_82	FOR_2
0x400bbb2	            0x75dc	                           jne 0x400bb90	      6900	ops.c	FUNCTION_82	FOR_2
0x400bbb4	        0x488d7d01	                      lea rdi, [rbp + 1]	      6900	ops.c	FUNCTION_82	FOR_2
0x400bbb8	      0xbe01000000	                              mov esi, 1	      6911	ops.c	FUNCTION_82	CALL_16
0x400bbbd	      0xe800000000	                          call 0x400bbc2	      6911	ops.c	FUNCTION_82	CALL_16
0x400bbc2	          0x4885c0	                           test rax, rax	      6916	ops.c	FUNCTION_82	IF_15
0x400bbc5	          0x4889c3	                            mov rbx, rax	      6911	ops.c	FUNCTION_82	CALL_16
0x400bbc8	      0x4889442410	             mov qword [rsp + 0x10], rax	      6911	ops.c	FUNCTION_82	CALL_16
0x400bbcd	     0xf84e0feffff	                            je 0x400bab3	      6916	ops.c	FUNCTION_82	IF_15
0x400bbd3	    0x4c8b2d000000	            mov r13, qword [0x0400bbda] 	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400bbda	            0x31ed	                            xor ebp, ebp	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400bbdc	      0x49837d0800	                  cmp qword [r13 + 8], 0	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400bbe1	            0x7e5d	                           jle 0x400bc40	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400bbe3	          0x4531e4	                          xor r12d, r12d	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400bbe6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400bbf0	        0x498b4500	                    mov rax, qword [r13]	      6921	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_17
0x400bbf4	        0x488d3c2b	                    lea rdi, [rbx + rbp]	       110	string3.h	FUNCTION_98	CALL_3
0x400bbf8	        0x4a8b34e0	            mov rsi, qword [rax + r12*8]	       110	string3.h	FUNCTION_98	CALL_3
0x400bbfc	      0xe800000000	                          call 0x400bc01	       110	string3.h	FUNCTION_98	CALL_3
0x400bc01	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      6922	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_18
0x400bc06	        0x488d3c2b	                    lea rdi, [rbx + rbp]	      6922	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_18
0x400bc0a	      0xe800000000	                          call 0x400bc0f	      6922	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_18
0x400bc0f	          0x4801c5	                            add rbp, rax	      6922	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_18
0x400bc12	      0x41807d1001	                cmp byte [r13 + 0x10], 1	      6928	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400bc17	            0x740d	                            je 0x400bc26	      6928	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400bc19	        0x498b4508	                mov rax, qword [r13 + 8]	      6928	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400bc1d	        0x488d50ff	                      lea rdx, [rax - 1]	      6928	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400bc21	          0x4c39e2	                            cmp rdx, r12	      6928	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400bc24	            0x7e11	                           jle 0x400bc37	      6928	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400bc26	        0xc6042b0a	               mov byte [rbx + rbp], 0xa	      6929	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400bc2a	        0x498b4508	                mov rax, qword [r13 + 8]	      6929	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400bc2e	        0x4883c501	                              add rbp, 1	      6929	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400bc32	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      6929	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400bc37	        0x4983c401	                              add r12, 1	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400bc3b	          0x4939c4	                            cmp r12, rax	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400bc3e	            0x7cb0	                            jl 0x400bbf0	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400bc40	        0xc6042b00	                 mov byte [rbx + rbp], 0	      6931	ops.c	FUNCTION_82	IF_15
0x400bc44	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      6931	ops.c	FUNCTION_82	IF_15
0x400bc49	      0xe965feffff	                           jmp 0x400bab3	      6934	ops.c	FUNCTION_82
0x400bc4e	            0x6690	                                     nop	      6934	ops.c	FUNCTION_82
0x400bc50	      0xe800000000	                          call 0x400bc55	      6880	ops.c	FUNCTION_82	IF_10	CALL_12
0x400bc55	          0x4885c0	                           test rax, rax	      6883	ops.c	FUNCTION_82	IF_10	IF_11
0x400bc58	          0x4889c3	                            mov rbx, rax	      6880	ops.c	FUNCTION_82	IF_10	CALL_12
0x400bc5b	     0xf8491feffff	                            je 0x400baf2	      6883	ops.c	FUNCTION_82	IF_10	IF_11
0x400bc61	    0x488b05000000	            mov rax, qword [0x0400bc68] 	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400bc68	      0x4883780800	                  cmp qword [rax + 8], 0	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400bc6d	     0xf8e40feffff	                           jle 0x400bab3	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400bc73	          0x4531e4	                          xor r12d, r12d	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400bc76	            0x31ed	                            xor ebp, ebp	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400bc78	    0x41bd01000000	                             mov r13d, 1	      6887	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12
0x400bc7e	            0x6690	                                     nop	      6887	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12
0x400bc80	          0x488b00	                    mov rax, qword [rax]	      6886	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0x400bc83	      0xbaffffffff	                     mov edx, 0xffffffff	      6886	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0x400bc88	          0x4889df	                            mov rdi, rbx	      6886	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0x400bc8b	        0x488b34e8	            mov rsi, qword [rax + rbp*8]	      6886	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0x400bc8f	      0xe800000000	                          call 0x400bc94	      6886	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0x400bc94	            0x85c0	                           test eax, eax	      6887	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12
0x400bc96	    0x488b05000000	            mov rax, qword [0x0400bc9d] 	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400bc9d	        0x450f44e5	                        cmove r12d, r13d	      6887	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12
0x400bca1	        0x4883c501	                              add rbp, 1	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400bca5	        0x48396808	                cmp qword [rax + 8], rbp	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400bca9	            0x7fd5	                            jg 0x400bc80	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400bcab	          0x4585e4	                         test r12d, r12d	      6888	ops.c	FUNCTION_82	IF_10	IF_13
0x400bcae	     0xf84fffdffff	                            je 0x400bab3	      6888	ops.c	FUNCTION_82	IF_10	IF_13
0x400bcb4	          0x4889df	                            mov rdi, rbx	      6890	ops.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400bcb7	            0x31db	                            xor ebx, ebx	      6891	ops.c	FUNCTION_82	IF_10	IF_13
0x400bcb9	      0xe800000000	                          call 0x400bcbe	      6890	ops.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400bcbe	      0xe9f0fdffff	                           jmp 0x400bab3	      6890	ops.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400bcc3	      0xe800000000	                          call 0x400bcc8	      6935	ops.c	FUNCTION_82
dis_msg	SWITCH,0:IF,1:WHILE,1:DO,0:FOR,0:ELSE,1:CALL,4:functions,0	51
0x4000d30	            0x4155	                                push r13	      4410	ops.c	FUNCTION_53
0x4000d32	            0x4154	                                push r12	      4410	ops.c	FUNCTION_53
0x4000d34	          0x4189f5	                           mov r13d, esi	      4410	ops.c	FUNCTION_53
0x4000d37	              0x55	                                push rbp	      4410	ops.c	FUNCTION_53
0x4000d38	              0x53	                                push rbx	      4410	ops.c	FUNCTION_53
0x4000d39	          0x4889fb	                            mov rbx, rdi	      4410	ops.c	FUNCTION_53
0x4000d3c	        0x4883ec08	                              sub rsp, 8	      4410	ops.c	FUNCTION_53
0x4000d40	    0x8b0500000000	            mov eax, dword [0x04000d46] 	      4416	ops.c	FUNCTION_53
0x4000d46	          0x8d68fa	                      lea ebp, [rax - 6]	      4416	ops.c	FUNCTION_53
0x4000d49	     0xf1f80000000	                         nop dword [rax]	      4416	ops.c	FUNCTION_53
0x4000d50	           0xfb603	                   movzx eax, byte [rbx]	      4417	ops.c	FUNCTION_53	WHILE_1
0x4000d53	            0x84c0	                             test al, al	      4417	ops.c	FUNCTION_53	WHILE_1
0x4000d55	            0x744c	                            je 0x4000da3	      4417	ops.c	FUNCTION_53	WHILE_1
0x4000d57	          0x4585ed	                         test r13d, r13d	      4418	ops.c	FUNCTION_53	WHILE_1
0x4000d5a	            0x740a	                            je 0x4000d66	      4418	ops.c	FUNCTION_53	WHILE_1
0x4000d5c	            0x3c1b	                            cmp al, 0x1b	      4418	ops.c	FUNCTION_53	WHILE_1
0x4000d5e	            0x7506	                           jne 0x4000d66	      4418	ops.c	FUNCTION_53	WHILE_1
0x4000d60	        0x807b0100	                   cmp byte [rbx + 1], 0	      4418	ops.c	FUNCTION_53	WHILE_1
0x4000d64	            0x743d	                            je 0x4000da3	      4418	ops.c	FUNCTION_53	WHILE_1
0x4000d66	          0x4889df	                            mov rdi, rbx	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x4000d69	      0xe800000000	                          call 0x4000d6e	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x4000d6e	            0x29c5	                            sub ebp, eax	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x4000d70	            0x7831	                            js 0x4000da3	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x4000d72	    0x8b0500000000	            mov eax, dword [0x04000d78] 	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4000d78	            0x85c0	                           test eax, eax	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4000d7a	            0x743c	                            je 0x4000db8	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4000d7c	          0x4889df	                            mov rdi, rbx	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4000d7f	    0xff1500000000	                 call qword [0x04000d85]	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4000d85	          0x4c63e0	                         movsxd r12, eax	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4000d88	        0x4183fc01	                             cmp r12d, 1	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4000d8c	            0x7e2a	                           jle 0x4000db8	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4000d8e	          0x4889df	                            mov rdi, rbx	      4424	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x4000d91	          0x4489e6	                           mov esi, r12d	      4424	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x4000d94	          0x4c01e3	                            add rbx, r12	      4425	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4000d97	      0xe800000000	                          call 0x4000d9c	      4424	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x4000d9c	           0xfb603	                   movzx eax, byte [rbx]	      4417	ops.c	FUNCTION_53	WHILE_1
0x4000d9f	            0x84c0	                             test al, al	      4417	ops.c	FUNCTION_53	WHILE_1
0x4000da1	            0x75b4	                           jne 0x4000d57	      4417	ops.c	FUNCTION_53	WHILE_1
0x4000da3	        0x4883c408	                              add rsp, 8	      4432	ops.c	FUNCTION_53
0x4000da7	              0x5b	                                 pop rbx	      4432	ops.c	FUNCTION_53
0x4000da8	              0x5d	                                 pop rbp	      4432	ops.c	FUNCTION_53
0x4000da9	            0x415c	                                 pop r12	      4432	ops.c	FUNCTION_53
0x4000dab	            0x415d	                                 pop r13	      4432	ops.c	FUNCTION_53
0x4000dad	      0xe900000000	                           jmp 0x4000db2	      4431	ops.c	FUNCTION_53	CALL_4
0x4000db2	    0x660f1f440000	                    nop word [rax + rax]	      4431	ops.c	FUNCTION_53	CALL_4
0x4000db8	        0x4c8d6301	                      lea r12, [rbx + 1]	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4000dbc	          0x4889df	                            mov rdi, rbx	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4000dbf	      0xbe01000000	                              mov esi, 1	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4000dc4	      0xe800000000	                          call 0x4000dc9	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4000dc9	          0x4c89e3	                            mov rbx, r12	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4000dcc	            0xeb82	                           jmp 0x4000d50	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
op_delete	SWITCH,0:IF,48:WHILE,0:DO,0:FOR,1:ELSE,6:CALL,68:functions,0	590
0x400acd0	            0x4157	                                push r15	      1745	ops.c	FUNCTION_33
0x400acd2	            0x4156	                                push r14	      1745	ops.c	FUNCTION_33
0x400acd4	            0x4155	                                push r13	      1745	ops.c	FUNCTION_33
0x400acd6	            0x4154	                                push r12	      1745	ops.c	FUNCTION_33
0x400acd8	              0x55	                                push rbp	      1745	ops.c	FUNCTION_33
0x400acd9	              0x53	                                push rbx	      1745	ops.c	FUNCTION_33
0x400acda	        0x4883ec58	                           sub rsp, 0x58	      1745	ops.c	FUNCTION_33
0x400acde	    0x64488b042528	                mov rax, qword fs:[0x28]	      1745	ops.c	FUNCTION_33
0x400ace7	      0x4889442448	             mov qword [rsp + 0x48], rax	      1745	ops.c	FUNCTION_33
0x400acec	            0x31c0	                            xor eax, eax	      1745	ops.c	FUNCTION_33
0x400acee	    0x488b05000000	            mov rax, qword [0x0400acf5] 	      1751	ops.c	FUNCTION_33
0x400acf5	        0xf6401001	               test byte [rax + 0x10], 1	      1755	ops.c	FUNCTION_33	IF_1
0x400acf9	     0xf8505020000	                           jne 0x400af04	      1755	ops.c	FUNCTION_33	IF_1
0x400acff	          0x8b4f58	            mov ecx, dword [rdi + 0x58] 	      1759	ops.c	FUNCTION_33	IF_2
0x400ad02	          0x4889fb	                            mov rbx, rdi	      1759	ops.c	FUNCTION_33	IF_2
0x400ad05	            0x85c9	                           test ecx, ecx	      1759	ops.c	FUNCTION_33	IF_2
0x400ad07	     0xf8523020000	                           jne 0x400af30	      1759	ops.c	FUNCTION_33	IF_2
0x400ad0d	    0x8ba840150000	          mov ebp, dword [rax + 0x1540] 	      1762	ops.c	FUNCTION_33	IF_3
0x400ad13	            0x85ed	                           test ebp, ebp	      1762	ops.c	FUNCTION_33	IF_3
0x400ad15	     0xf849d030000	                            je 0x400b0b8	      1762	ops.c	FUNCTION_33	IF_3
0x400ad1b	        0x4c8d6704	                      lea r12, [rdi + 4]	      1769	ops.c	FUNCTION_33	CALL_4
0x400ad1f	        0x448b7704	               mov r14d, dword [rdi + 4]	      1753	ops.c	FUNCTION_33
0x400ad23	          0x4c8b28	                    mov r13, qword [rax]	      1751	ops.c	FUNCTION_33
0x400ad26	          0x4c89e7	                            mov rdi, r12	      1769	ops.c	FUNCTION_33	CALL_4
0x400ad29	      0xe800000000	                          call 0x400ad2e	      1769	ops.c	FUNCTION_33	CALL_4
0x400ad2e	    0x8b1500000000	            mov edx, dword [0x0400ad34] 	      1773	ops.c	FUNCTION_33	IF_4
0x400ad34	            0x85d2	                           test edx, edx	      1773	ops.c	FUNCTION_33	IF_4
0x400ad36	            0x740b	                            je 0x400ad43	      1773	ops.c	FUNCTION_33	IF_4
0x400ad38	          0x8b4314	            mov eax, dword [rbx + 0x14] 	      2117	ops.c	ELSE_6	FUNCTION_34	IF_1
0x400ad3b	            0x85c0	                           test eax, eax	      2117	ops.c	ELSE_6	FUNCTION_34	IF_1
0x400ad3d	     0xf85fd030000	                           jne 0x400b140	      2117	ops.c	ELSE_6	FUNCTION_34	IF_1
0x400ad43	          0x8b4308	                mov eax, dword [rbx + 8]	      1782	ops.c	FUNCTION_33	IF_5
0x400ad46	            0x85c0	                           test eax, eax	      1782	ops.c	FUNCTION_33	IF_5
0x400ad48	            0x7564	                           jne 0x400adae	      1782	ops.c	FUNCTION_33	IF_5
0x400ad4a	          0x8b435c	            mov eax, dword [rbx + 0x5c] 	      1783	ops.c	FUNCTION_33	IF_5
0x400ad4d	            0x85c0	                           test eax, eax	      1783	ops.c	FUNCTION_33	IF_5
0x400ad4f	            0x754f	                           jne 0x400ada0	      1783	ops.c	FUNCTION_33	IF_5
0x400ad51	          0x8b4360	            mov eax, dword [rbx + 0x60] 	      1784	ops.c	FUNCTION_33	IF_5
0x400ad54	            0x85c0	                           test eax, eax	      1784	ops.c	FUNCTION_33	IF_5
0x400ad56	            0x7548	                           jne 0x400ada0	      1784	ops.c	FUNCTION_33	IF_5
0x400ad58	        0x488b4350	            mov rax, qword [rbx + 0x50] 	      1785	ops.c	FUNCTION_33	IF_5
0x400ad5c	        0x4883f801	                              cmp rax, 1	      1785	ops.c	FUNCTION_33	IF_5
0x400ad60	            0x7e42	                           jle 0x400ada4	      1785	ops.c	FUNCTION_33	IF_5
0x400ad62	          0x8b430c	              mov eax, dword [rbx + 0xc]	      1786	ops.c	FUNCTION_33	IF_5
0x400ad65	            0x85c0	                           test eax, eax	      1786	ops.c	FUNCTION_33	IF_5
0x400ad67	            0x7545	                           jne 0x400adae	      1786	ops.c	FUNCTION_33	IF_5
0x400ad69	          0x833b01	                      cmp dword [rbx], 1	      1787	ops.c	FUNCTION_33	IF_5
0x400ad6c	            0x7540	                           jne 0x400adae	      1787	ops.c	FUNCTION_33	IF_5
0x400ad6e	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      1789	ops.c	FUNCTION_33	IF_5	CALL_6
0x400ad72	      0xe800000000	                          call 0x400ad77	      1789	ops.c	FUNCTION_33	IF_5	CALL_6
0x400ad77	        0x48635338	         movsxd rdx, dword [rbx + 0x38] 	      1789	ops.c	FUNCTION_33	IF_5	CALL_6
0x400ad7b	        0x488d3c10	                    lea rdi, [rax + rdx]	      1789	ops.c	FUNCTION_33	IF_5	CALL_6
0x400ad7f	          0x803f00	                       cmp byte [rdi], 0	      1790	ops.c	FUNCTION_33	IF_5	IF_6
0x400ad82	            0x7407	                            je 0x400ad8b	      1790	ops.c	FUNCTION_33	IF_5	IF_6
0x400ad84	        0x48634314	         movsxd rax, dword [rbx + 0x14] 	      1791	ops.c	FUNCTION_33	IF_5	IF_6
0x400ad88	          0x4801c7	                            add rdi, rax	      1791	ops.c	FUNCTION_33	IF_5	IF_6
0x400ad8b	      0xe800000000	                          call 0x400ad90	      1792	ops.c	FUNCTION_33	IF_5	CALL_7
0x400ad90	          0x803800	                       cmp byte [rax], 0	      1793	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x400ad93	     0xf8494080000	                            je 0x400b62d	      1793	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x400ad99	          0x8b4308	                mov eax, dword [rbx + 8]	      1801	ops.c	FUNCTION_33	IF_8
0x400ad9c	            0x85c0	                           test eax, eax	      1801	ops.c	FUNCTION_33	IF_8
0x400ad9e	            0x750e	                           jne 0x400adae	      1801	ops.c	FUNCTION_33	IF_8
0x400ada0	        0x488b4350	            mov rax, qword [rbx + 0x50] 	      1801	ops.c	FUNCTION_33	IF_8
0x400ada4	        0x4883f801	                              cmp rax, 1	      1802	ops.c	FUNCTION_33	IF_8
0x400ada8	     0xf84ea000000	                            je 0x400ae98	      1802	ops.c	FUNCTION_33	IF_8
0x400adae	          0x8b7b04	                mov edi, dword [rbx + 4]	      1826	ops.c	FUNCTION_33	IF_11
0x400adb1	          0x83ff5f	                           cmp edi, 0x5f	      1826	ops.c	FUNCTION_33	IF_11
0x400adb4	     0xf8484000000	                            je 0x400ae3e	      1826	ops.c	FUNCTION_33	IF_11
0x400adba	            0x31ed	                            xor ebp, ebp	      1752	ops.c	FUNCTION_33
0x400adbc	            0x85ff	                           test edi, edi	      1828	ops.c	FUNCTION_33	IF_11	IF_12
0x400adbe	     0xf85b4020000	                           jne 0x400b078	      1828	ops.c	FUNCTION_33	IF_11	IF_12
0x400adc4	          0x4585f6	                         test r14d, r14d	      1847	ops.c	FUNCTION_33	IF_11	IF_15
0x400adc7	            0x7511	                           jne 0x400adda	      1847	ops.c	FUNCTION_33	IF_11	IF_15
0x400adc9	        0x837b0801	                  cmp dword [rbx + 8], 1	      1847	ops.c	FUNCTION_33	IF_11	IF_15
0x400adcd	            0x740b	                            je 0x400adda	      1847	ops.c	FUNCTION_33	IF_11	IF_15
0x400adcf	      0x48837b5001	               cmp qword [rbx + 0x50], 1	      1848	ops.c	FUNCTION_33	IF_11	IF_15
0x400add4	     0xf8e86060000	                           jle 0x400b460	      1848	ops.c	FUNCTION_33	IF_11	IF_15
0x400adda	      0xe800000000	                          call 0x400addf	      1850	ops.c	FUNCTION_33	IF_11	IF_15	CALL_16
0x400addf	            0x31d2	                            xor edx, edx	      1851	ops.c	FUNCTION_33	IF_11	IF_15	IF_16	CALL_17
0x400ade1	      0xbe01000000	                              mov esi, 1	      1851	ops.c	FUNCTION_33	IF_11	IF_15	IF_16	CALL_17
0x400ade6	          0x4889df	                            mov rdi, rbx	      1851	ops.c	FUNCTION_33	IF_11	IF_15	IF_16	CALL_17
0x400ade9	      0xe800000000	                          call 0x400adee	      1851	ops.c	FUNCTION_33	IF_11	IF_15	IF_16	CALL_17
0x400adee	          0x83f801	                              cmp eax, 1	      1852	ops.c	FUNCTION_33	IF_11	IF_15	IF_16
0x400adf1	      0xb801000000	                              mov eax, 1	      1852	ops.c	FUNCTION_33	IF_11	IF_15	IF_16
0x400adf6	           0xf44e8	                          cmove ebp, eax	      1852	ops.c	FUNCTION_33	IF_11	IF_15	IF_16
0x400adf9	    0x8b0500000000	            mov eax, dword [0x0400adff] 	      1859	ops.c	FUNCTION_33	IF_11	IF_17
0x400adff	          0x8b5304	                mov edx, dword [rbx + 4]	      1859	ops.c	FUNCTION_33	IF_11	IF_17
0x400ae02	            0xa801	                              test al, 1	      1857	ops.c	FUNCTION_33	IF_11	IF_17
0x400ae04	            0x7405	                            je 0x400ae0b	      1857	ops.c	FUNCTION_33	IF_11	IF_17
0x400ae06	          0x83fa2a	                           cmp edx, 0x2a	      1859	ops.c	FUNCTION_33	IF_11	IF_17
0x400ae09	            0x740d	                            je 0x400ae18	      1859	ops.c	FUNCTION_33	IF_11	IF_17
0x400ae0b	            0xa802	                              test al, 2	      1859	ops.c	FUNCTION_33	IF_11	IF_17
0x400ae0d	            0x7405	                            je 0x400ae14	      1859	ops.c	FUNCTION_33	IF_11	IF_17
0x400ae0f	          0x83fa2b	                           cmp edx, 0x2b	      1860	ops.c	FUNCTION_33	IF_11	IF_17
0x400ae12	            0x7404	                            je 0x400ae18	      1860	ops.c	FUNCTION_33	IF_11	IF_17
0x400ae14	            0x85d2	                           test edx, edx	      1860	ops.c	FUNCTION_33	IF_11	IF_17
0x400ae16	            0x7511	                           jne 0x400ae29	      1860	ops.c	FUNCTION_33	IF_11	IF_17
0x400ae18	        0x837b0801	                  cmp dword [rbx + 8], 1	      1862	ops.c	FUNCTION_33	IF_11	IF_17
0x400ae1c	            0x740b	                            je 0x400ae29	      1862	ops.c	FUNCTION_33	IF_11	IF_17
0x400ae1e	      0x48837b5001	               cmp qword [rbx + 0x50], 1	      1863	ops.c	FUNCTION_33	IF_11	IF_17
0x400ae23	     0xf846f060000	                            je 0x400b498	      1863	ops.c	FUNCTION_33	IF_11	IF_17
0x400ae29	            0x85ed	                           test ebp, ebp	      1878	ops.c	FUNCTION_33	IF_11	IF_19
0x400ae2b	     0xf84af020000	                            je 0x400b0e0	      1878	ops.c	FUNCTION_33	IF_11	IF_19
0x400ae31	      0xe800000000	                          call 0x400ae36	      1893	ops.c	FUNCTION_33	IF_11	IF_21	CALL_24
0x400ae36	            0x85c0	                           test eax, eax	      1893	ops.c	FUNCTION_33	IF_11	IF_21	CALL_24
0x400ae38	     0xf8512030000	                           jne 0x400b150	      1893	ops.c	FUNCTION_33	IF_11	IF_21	CALL_24
0x400ae3e	          0x8b6b60	            mov ebp, dword [rbx + 0x60] 	      1901	ops.c	FUNCTION_33	IF_22
0x400ae41	            0x85ed	                           test ebp, ebp	      1901	ops.c	FUNCTION_33	IF_22
0x400ae43	     0xf85f7000000	                           jne 0x400af40	      1901	ops.c	FUNCTION_33	IF_22
0x400ae49	        0x837b0801	                  cmp dword [rbx + 8], 1	      1948	ops.c	FUNCTION_33	ELSE_1	IF_27
0x400ae4d	     0xf841d040000	                            je 0x400b270	      1948	ops.c	FUNCTION_33	ELSE_1	IF_27
0x400ae53	    0x448b1d000000	           mov r11d, dword [0x0400ae5a] 	      1988	ops.c	FUNCTION_33	ELSE_4	IF_33
0x400ae5a	          0x4585db	                         test r11d, r11d	      1988	ops.c	FUNCTION_33	ELSE_4	IF_33
0x400ae5d	     0xf85ed040000	                           jne 0x400b350	      1988	ops.c	FUNCTION_33	ELSE_4	IF_33
0x400ae63	        0x488b7350	            mov rsi, qword [rbx + 0x50] 	      2026	ops.c	FUNCTION_33	ELSE_4	IF_40
0x400ae67	        0x4883fe01	                              cmp rsi, 1	      2026	ops.c	FUNCTION_33	ELSE_4	IF_40
0x400ae6b	     0xf847f050000	                            je 0x400b3f0	      2026	ops.c	FUNCTION_33	ELSE_4	IF_40
0x400ae71	    0x488b05000000	            mov rax, qword [0x0400ae78] 	      2071	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47
0x400ae78	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      2071	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47
0x400ae7c	          0x4801fe	                            add rsi, rdi	      2070	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x400ae7f	        0x4883ef01	                              sub rdi, 1	      2070	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x400ae83	      0xe800000000	                          call 0x400ae88	      2070	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x400ae88	            0x85c0	                           test eax, eax	      2070	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x400ae8a	     0xf85e0020000	                           jne 0x400b170	      2070	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x400ae90	            0x31ed	                            xor ebp, ebp	      1905	ops.c	FUNCTION_33	IF_22	IF_23
0x400ae92	            0xeb75	                           jmp 0x400af09	      1905	ops.c	FUNCTION_33	IF_22	IF_23
0x400ae94	         0xf1f4000	                         nop dword [rax]	      1905	ops.c	FUNCTION_33	IF_22	IF_23
0x400ae98	          0x833b01	                      cmp dword [rbx], 1	      1803	ops.c	FUNCTION_33	IF_8
0x400ae9b	     0xf850dffffff	                           jne 0x400adae	      1803	ops.c	FUNCTION_33	IF_8
0x400aea1	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1804	ops.c	FUNCTION_33	IF_8	CALL_9
0x400aea5	      0xe800000000	                          call 0x400aeaa	      1804	ops.c	FUNCTION_33	IF_8	CALL_9
0x400aeaa	          0x803800	                       cmp byte [rax], 0	      1804	ops.c	FUNCTION_33	IF_8	CALL_9
0x400aead	     0xf85fbfeffff	                           jne 0x400adae	      1804	ops.c	FUNCTION_33	IF_8	CALL_9
0x400aeb3	    0x448b3d000000	           mov r15d, dword [0x0400aeba] 	      1811	ops.c	FUNCTION_33	IF_8	IF_9
0x400aeba	          0x4585ff	                         test r15d, r15d	      1811	ops.c	FUNCTION_33	IF_8	IF_9
0x400aebd	     0xf845e030000	                            je 0x400b221	      1811	ops.c	FUNCTION_33	IF_8	IF_9
0x400aec3	       0xf1f440000	                   nop dword [rax + rax]	      1811	ops.c	FUNCTION_33	IF_8	IF_9
0x400aec8	          0x8b5360	            mov edx, dword [rbx + 0x60] 	      2095	ops.c	FUNCTION_33	IF_48
0x400aecb	    0x488b05000000	            mov rax, qword [0x0400aed2] 	      2097	ops.c	FUNCTION_33	IF_48
0x400aed2	            0x85d2	                           test edx, edx	      2095	ops.c	FUNCTION_33	IF_48
0x400aed4	     0xf8476030000	                            je 0x400b250	      2095	ops.c	FUNCTION_33	IF_48
0x400aeda	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      2097	ops.c	FUNCTION_33	IF_48
0x400aede	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	      2097	ops.c	FUNCTION_33	IF_48
0x400aee2	    0x488990001200	          mov qword [rax + 0x1200], rdx 	      2097	ops.c	FUNCTION_33	IF_48
0x400aee9	          0x8b5328	            mov edx, dword [rbx + 0x28] 	      2098	ops.c	FUNCTION_33	IF_48
0x400aeec	        0x488b5b28	            mov rbx, qword [rbx + 0x28] 	      2098	ops.c	FUNCTION_33	IF_48
0x400aef0	    0x899008120000	          mov dword [rax + 0x1208], edx 	      2098	ops.c	FUNCTION_33	IF_48
0x400aef6	    0x488988e01100	          mov qword [rax + 0x11e0], rcx 	      2102	ops.c	FUNCTION_33	ELSE_6
0x400aefd	    0x488998e81100	          mov qword [rax + 0x11e8], rbx 	      2102	ops.c	FUNCTION_33	ELSE_6
0x400af04	      0xbd01000000	                              mov ebp, 1	      2104	ops.c	FUNCTION_33	ELSE_6
0x400af09	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      2105	ops.c	FUNCTION_33	ELSE_6
0x400af0e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2105	ops.c	FUNCTION_33	ELSE_6
0x400af17	            0x89e8	                            mov eax, ebp	      2105	ops.c	FUNCTION_33	ELSE_6
0x400af19	     0xf8529070000	                           jne 0x400b648	      2105	ops.c	FUNCTION_33	ELSE_6
0x400af1f	        0x4883c458	                           add rsp, 0x58	      2105	ops.c	FUNCTION_33	ELSE_6
0x400af23	              0x5b	                                 pop rbx	      2105	ops.c	FUNCTION_33	ELSE_6
0x400af24	              0x5d	                                 pop rbp	      2105	ops.c	FUNCTION_33	ELSE_6
0x400af25	            0x415c	                                 pop r12	      2105	ops.c	FUNCTION_33	ELSE_6
0x400af27	            0x415d	                                 pop r13	      2105	ops.c	FUNCTION_33	ELSE_6
0x400af29	            0x415e	                                 pop r14	      2105	ops.c	FUNCTION_33	ELSE_6
0x400af2b	            0x415f	                                 pop r15	      2105	ops.c	FUNCTION_33	ELSE_6
0x400af2d	              0xc3	                                     ret	      2105	ops.c	FUNCTION_33	ELSE_6
0x400af2e	            0x6690	                                     nop	      2105	ops.c	FUNCTION_33	ELSE_6
0x400af30	      0xe800000000	                          call 0x400af35	      1760	ops.c	FUNCTION_33	CALL_1
0x400af35	            0x89c5	                            mov ebp, eax	      1760	ops.c	FUNCTION_33	CALL_1
0x400af37	            0xebd0	                           jmp 0x400af09	      1760	ops.c	FUNCTION_33	CALL_1
0x400af39	     0xf1f80000000	                         nop dword [rax]	      1760	ops.c	FUNCTION_33	CALL_1
0x400af40	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      1903	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x400af44	        0x488d7001	                      lea rsi, [rax + 1]	      1903	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x400af48	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1903	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x400af4c	        0x488d78ff	                      lea rdi, [rax - 1]	      1903	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x400af50	      0xe800000000	                          call 0x400af55	      1903	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x400af55	            0x85c0	                           test eax, eax	      1903	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x400af57	     0xf8433ffffff	                            je 0x400ae90	      1903	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x400af5d	    0x488b05000000	            mov rax, qword [0x0400af64] 	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x400af64	        0x488b6838	            mov rbp, qword [rax + 0x38] 	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x400af68	        0x483b6b30	            cmp rbp, qword [rbx + 0x30] 	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x400af6c	     0xf8ebd000000	                           jle 0x400b02f	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x400af72	      0xe9a1030000	                           jmp 0x400b318	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x400af77	    0x660f1f840000	                    nop word [rax + rax]	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x400af80	            0x29c8	                            sub eax, ecx	      1926	ops.c	FUNCTION_33	IF_22	FOR_1
0x400af82	        0x2b442404	                sub eax, dword [rsp + 4]	      1926	ops.c	FUNCTION_33	IF_22	FOR_1
0x400af86	          0x4889ef	                            mov rdi, rbp	      1927	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_28
0x400af89	          0x4189c4	                           mov r12d, eax	      1926	ops.c	FUNCTION_33	IF_22	FOR_1
0x400af8c	      0xe800000000	                          call 0x400af91	      1927	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_28
0x400af91	          0x4889c7	                            mov rdi, rax	      1928	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x400af94	          0x4989c6	                            mov r14, rax	      1927	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_28
0x400af97	      0xe800000000	                          call 0x400af9c	      1928	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x400af9c	          0x8d7801	                      lea edi, [rax + 1]	      1928	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x400af9f	          0x4429e7	                           sub edi, r12d	      1928	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x400afa2	      0xe800000000	                          call 0x400afa7	      1928	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x400afa7	          0x4885c0	                           test rax, rax	      1929	ops.c	FUNCTION_33	IF_22	FOR_1	IF_26
0x400afaa	          0x4989c4	                            mov r12, rax	      1928	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x400afad	            0x7472	                            je 0x400b021	      1929	ops.c	FUNCTION_33	IF_22	FOR_1	IF_26
0x400afaf	      0x4863542418	         movsxd rdx, dword [rsp + 0x18] 	        59	string3.h	FUNCTION_93	CALL_3
0x400afb4	          0x4c89f6	                            mov rsi, r14	        59	string3.h	FUNCTION_93	CALL_3
0x400afb7	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_93	CALL_3
0x400afba	      0xe800000000	                          call 0x400afbf	        59	string3.h	FUNCTION_93	CALL_3
0x400afbf	        0x8b542404	                mov edx, dword [rsp + 4]	        90	string3.h	FUNCTION_95	CALL_6
0x400afc3	      0x48637c2418	         movsxd rdi, dword [rsp + 0x18] 	        90	string3.h	FUNCTION_95	CALL_6
0x400afc8	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x400afcd	           0x31424	                    add edx, dword [rsp]	        90	string3.h	FUNCTION_95	CALL_6
0x400afd0	          0x4c01e7	                            add rdi, r12	        90	string3.h	FUNCTION_95	CALL_6
0x400afd3	          0x4863d2	                         movsxd rdx, edx	        90	string3.h	FUNCTION_95	CALL_6
0x400afd6	      0xe800000000	                          call 0x400afdb	        90	string3.h	FUNCTION_95	CALL_6
0x400afdb	      0x4c637c2418	         movsxd r15, dword [rsp + 0x18] 	      1937	ops.c	FUNCTION_33	IF_22	FOR_1
0x400afe0	        0x8b742408	                mov esi, dword [rsp + 8]	      1937	ops.c	FUNCTION_33	IF_22	FOR_1
0x400afe4	          0x4401fe	                           add esi, r15d	      1937	ops.c	FUNCTION_33	IF_22	FOR_1
0x400afe7	          0x4863f6	                         movsxd rsi, esi	      1937	ops.c	FUNCTION_33	IF_22	FOR_1
0x400afea	          0x4901f6	                            add r14, rsi	      1937	ops.c	FUNCTION_33	IF_22	FOR_1
0x400afed	          0x4c89f7	                            mov rdi, r14	      1938	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x400aff0	      0xe800000000	                          call 0x400aff5	      1938	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x400aff5	        0x48633c24	                 movsxd rdi, dword [rsp]	        59	string3.h	FUNCTION_93	CALL_3
0x400aff9	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_93	CALL_3
0x400affd	          0x4c89f6	                            mov rsi, r14	        59	string3.h	FUNCTION_93	CALL_3
0x400b000	          0x4901ff	                            add r15, rdi	        59	string3.h	FUNCTION_93	CALL_3
0x400b003	      0x48637c2404	            movsxd rdi, dword [rsp + 4] 	        59	string3.h	FUNCTION_93	CALL_3
0x400b008	          0x4901ff	                            add r15, rdi	        59	string3.h	FUNCTION_93	CALL_3
0x400b00b	        0x4b8d3c3c	                    lea rdi, [r12 + r15]	        59	string3.h	FUNCTION_93	CALL_3
0x400b00f	      0xe800000000	                          call 0x400b014	        59	string3.h	FUNCTION_93	CALL_3
0x400b014	            0x31d2	                            xor edx, edx	      1940	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_34
0x400b016	          0x4c89e6	                            mov rsi, r12	      1940	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_34
0x400b019	          0x4889ef	                            mov rdi, rbp	      1940	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_34
0x400b01c	      0xe800000000	                          call 0x400b021	      1940	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_34
0x400b021	        0x4883c501	                              add rbp, 1	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x400b025	        0x48396b30	            cmp qword [rbx + 0x30], rbp 	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x400b029	     0xf8ce9020000	                            jl 0x400b318	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x400b02f	      0xb901000000	                              mov ecx, 1	      1909	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_27
0x400b034	          0x4889ea	                            mov rdx, rbp	      1909	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_27
0x400b037	          0x4889e6	                            mov rsi, rsp	      1909	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_27
0x400b03a	          0x4889df	                            mov rdi, rbx	      1909	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_27
0x400b03d	      0xe82e50ffff	                     call sym.block_prep	      1909	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_27
0x400b042	        0x8b442408	                mov eax, dword [rsp + 8]	      1910	ops.c	FUNCTION_33	IF_22	FOR_1	IF_24
0x400b046	            0x85c0	                           test eax, eax	      1910	ops.c	FUNCTION_33	IF_22	FOR_1	IF_24
0x400b048	            0x74d7	                            je 0x400b021	      1910	ops.c	FUNCTION_33	IF_22	FOR_1	IF_24
0x400b04a	    0x488b15000000	            mov rdx, qword [0x0400b051] 	      1914	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x400b051	          0x8b0c24	                    mov ecx, dword [rsp]	      1916	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x400b054	        0x48396a38	            cmp qword [rdx + 0x38], rbp 	      1914	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x400b058	     0xf8522ffffff	                           jne 0x400af80	      1914	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x400b05e	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      1916	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x400b062	    0xc74244000000	               mov dword [rdx + 0x44], 0	      1918	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x400b069	             0x1ce	                            add esi, ecx	      1916	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x400b06b	          0x897240	             mov dword [rdx + 0x40], esi	      1916	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x400b06e	      0xe90dffffff	                           jmp 0x400af80	      1916	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x400b073	       0xf1f440000	                   nop dword [rax + rax]	      1916	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x400b078	      0xbe01000000	                              mov esi, 1	      1831	ops.c	FUNCTION_33	IF_11	IF_12	IF_13	CALL_12
0x400b07d	      0xe800000000	                          call 0x400b082	      1831	ops.c	FUNCTION_33	IF_11	IF_12	IF_13	CALL_12
0x400b082	            0x85c0	                           test eax, eax	      1831	ops.c	FUNCTION_33	IF_11	IF_12	IF_13	CALL_12
0x400b084	     0xf84b6010000	                            je 0x400b240	      1831	ops.c	FUNCTION_33	IF_11	IF_12	IF_13	CALL_12
0x400b08a	          0x8b7b04	                mov edi, dword [rbx + 4]	      1836	ops.c	FUNCTION_33	IF_11	IF_12	CALL_14
0x400b08d	      0xbe01000000	                              mov esi, 1	      1836	ops.c	FUNCTION_33	IF_11	IF_12	CALL_14
0x400b092	            0x31ed	                            xor ebp, ebp	      1752	ops.c	FUNCTION_33
0x400b094	      0xe800000000	                          call 0x400b099	      1836	ops.c	FUNCTION_33	IF_11	IF_12	CALL_14
0x400b099	            0x31d2	                            xor edx, edx	      1837	ops.c	FUNCTION_33	IF_11	IF_12	IF_14	CALL_15
0x400b09b	      0xbe01000000	                              mov esi, 1	      1837	ops.c	FUNCTION_33	IF_11	IF_12	IF_14	CALL_15
0x400b0a0	          0x4889df	                            mov rdi, rbx	      1837	ops.c	FUNCTION_33	IF_11	IF_12	IF_14	CALL_15
0x400b0a3	      0xe800000000	                          call 0x400b0a8	      1837	ops.c	FUNCTION_33	IF_11	IF_12	IF_14	CALL_15
0x400b0a8	          0x83f801	                              cmp eax, 1	      1752	ops.c	FUNCTION_33
0x400b0ab	        0x400f94c5	                                sete bpl	      1752	ops.c	FUNCTION_33
0x400b0af	      0xe910fdffff	                           jmp 0x400adc4	      1752	ops.c	FUNCTION_33
0x400b0b4	         0xf1f4000	                         nop dword [rax]	      1752	ops.c	FUNCTION_33
0x400b0b8	            0x31ff	                            xor edi, edi	      1764	ops.c	FUNCTION_33	IF_3	CALL_3
0x400b0ba	      0xba05000000	                              mov edx, 5	      1764	ops.c	FUNCTION_33	IF_3	CALL_3
0x400b0bf	      0xbe00000000	                              mov esi, 0	      1764	ops.c	FUNCTION_33	IF_3	CALL_3
0x400b0c4	      0xe800000000	                          call 0x400b0c9	      1764	ops.c	FUNCTION_33	IF_3	CALL_3
0x400b0c9	          0x4889c7	                            mov rdi, rax	      1764	ops.c	FUNCTION_33	IF_3	CALL_3
0x400b0cc	      0xe800000000	                          call 0x400b0d1	      1764	ops.c	FUNCTION_33	IF_3	CALL_3
0x400b0d1	      0xe933feffff	                           jmp 0x400af09	      1765	ops.c	FUNCTION_33	IF_3
0x400b0d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1765	ops.c	FUNCTION_33	IF_3
0x400b0e0	    0x8b2d00000000	            mov ebp, dword [0x0400b0e6] 	      1880	ops.c	FUNCTION_33	IF_11	IF_19
0x400b0e6	            0x31ff	                            xor edi, edi	      1883	ops.c	FUNCTION_33	IF_11	IF_19	CALL_21
0x400b0e8	      0xba05000000	                              mov edx, 5	      1883	ops.c	FUNCTION_33	IF_11	IF_19	CALL_21
0x400b0ed	      0xbe00000000	                              mov esi, 0	      1883	ops.c	FUNCTION_33	IF_11	IF_19	CALL_21
0x400b0f2	    0xc70500000000	               mov dword [0x0400b0fc], 0	      1882	ops.c	FUNCTION_33	IF_11	IF_19
0x400b0fc	      0xe800000000	                          call 0x400b101	      1883	ops.c	FUNCTION_33	IF_11	IF_19	CALL_21
0x400b101	      0xbe01000000	                              mov esi, 1	      1883	ops.c	FUNCTION_33	IF_11	IF_19	CALL_21
0x400b106	          0x4889c7	                            mov rdi, rax	      1883	ops.c	FUNCTION_33	IF_11	IF_19	CALL_21
0x400b109	      0xe800000000	                          call 0x400b10e	      1883	ops.c	FUNCTION_33	IF_11	IF_19	CALL_21
0x400b10e	          0x83f879	                           cmp eax, 0x79	      1885	ops.c	FUNCTION_33	IF_11	IF_19	IF_20
0x400b111	    0x892d00000000	            mov dword [0x0400b117], ebp 	      1884	ops.c	FUNCTION_33	IF_11	IF_19
0x400b117	     0xf8421fdffff	                            je 0x400ae3e	      1885	ops.c	FUNCTION_33	IF_11	IF_19	IF_20
0x400b11d	      0xba05000000	                              mov edx, 5	      1887	ops.c	FUNCTION_33	IF_11	IF_19	IF_20	CALL_23
0x400b122	      0xbe00000000	                              mov esi, 0	      1887	ops.c	FUNCTION_33	IF_11	IF_19	IF_20	CALL_23
0x400b127	            0x31ff	                            xor edi, edi	      1887	ops.c	FUNCTION_33	IF_11	IF_19	IF_20	CALL_23
0x400b129	      0xe800000000	                          call 0x400b12e	      1887	ops.c	FUNCTION_33	IF_11	IF_19	IF_20	CALL_23
0x400b12e	          0x4889c7	                            mov rdi, rax	      1887	ops.c	FUNCTION_33	IF_11	IF_19	IF_20	CALL_23
0x400b131	            0x31ed	                            xor ebp, ebp	      1888	ops.c	FUNCTION_33	IF_11	IF_19	IF_20
0x400b133	      0xe800000000	                          call 0x400b138	      1887	ops.c	FUNCTION_33	IF_11	IF_19	IF_20	CALL_23
0x400b138	      0xe9ccfdffff	                           jmp 0x400af09	      1888	ops.c	FUNCTION_33	IF_11	IF_19	IF_20
0x400b13d	           0xf1f00	                         nop dword [rax]	      1888	ops.c	FUNCTION_33	IF_11	IF_19	IF_20
0x400b140	          0x4889df	                            mov rdi, rbx	      1888	ops.c	FUNCTION_33	IF_11	IF_19	IF_20
0x400b143	      0xe8c86effff	         call sym.mb_adjust_opend.part.2	      1888	ops.c	FUNCTION_33	IF_11	IF_19	IF_20
0x400b148	      0xe9f6fbffff	                           jmp 0x400ad43	      1888	ops.c	FUNCTION_33	IF_11	IF_19	IF_20
0x400b14d	           0xf1f00	                         nop dword [rax]	      1888	ops.c	FUNCTION_33	IF_11	IF_19	IF_20
0x400b150	    0x488b15000000	            mov rdx, qword [0x0400b157] 	      1894	ops.c	FUNCTION_33	IF_11	CALL_25
0x400b157	          0x4c89e6	                            mov rsi, r12	      1894	ops.c	FUNCTION_33	IF_11	CALL_25
0x400b15a	          0x4889df	                            mov rdi, rbx	      1894	ops.c	FUNCTION_33	IF_11	CALL_25
0x400b15d	        0x488d4a08	                      lea rcx, [rdx + 8]	      1894	ops.c	FUNCTION_33	IF_11	CALL_25
0x400b161	      0xe85aeeffff	        call sym.yank_do_autocmd.isra.12	      1894	ops.c	FUNCTION_33	IF_11	CALL_25
0x400b166	      0xe9d3fcffff	                           jmp 0x400ae3e	      1894	ops.c	FUNCTION_33	IF_11	CALL_25
0x400b16b	       0xf1f440000	                   nop dword [rax + rax]	      1894	ops.c	FUNCTION_33	IF_11	CALL_25
0x400b170	      0xbf01000000	                              mov edi, 1	      2074	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_64
0x400b175	      0xe800000000	                          call 0x400b17a	      2074	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_64
0x400b17a	    0x488b05000000	            mov rax, qword [0x0400b181] 	      2076	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400b181	            0x31f6	                            xor esi, esi	      2078	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_65
0x400b183	        0x4c8b6038	            mov r12, qword [rax + 0x38] 	      2076	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400b187	        0x448b7840	           mov r15d, dword [rax + 0x40] 	      2076	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400b18b	        0x448b7044	           mov r14d, dword [rax + 0x44] 	      2076	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400b18f	      0x498d542401	                      lea rdx, [r12 + 1]	      2077	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400b194	        0x48895038	             mov qword [rax + 0x38], rdx	      2077	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400b198	        0x488b4350	            mov rax, qword [rbx + 0x50] 	      2078	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_65
0x400b19c	        0x488d78fe	                      lea rdi, [rax - 2]	      2078	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_65
0x400b1a0	      0xe800000000	                          call 0x400b1a5	      2078	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_65
0x400b1a5	        0x448b4314	            mov r8d, dword [rbx + 0x14] 	      2081	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400b1a9	            0x31ff	                            xor edi, edi	      2081	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400b1ab	    0x488b05000000	            mov rax, qword [0x0400b1b2] 	      2082	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400b1b2	          0x4585c0	                           test r8d, r8d	      2081	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400b1b5	        0x400f95c7	                               setne dil	      2081	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400b1b9	           0x37b38	             add edi, dword [rbx + 0x38]	      2081	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400b1bc	          0x833b01	                      cmp dword [rbx], 1	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400b1bf	    0xc74040000000	               mov dword [rax + 0x40], 0	      2082	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400b1c6	     0xf8494030000	                            je 0x400b560	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400b1cc	    0x8b0d00000000	            mov ecx, dword [0x0400b1d2] 	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400b1d2	            0x31f6	                            xor esi, esi	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400b1d4	          0x4863ff	                         movsxd rdi, edi	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400b1d7	            0x89ea	                            mov edx, ebp	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400b1d9	            0x85c9	                           test ecx, ecx	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400b1db	        0x400f94c6	                                sete sil	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400b1df	      0xe800000000	                          call 0x400b1e4	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400b1e4	    0x488b05000000	            mov rax, qword [0x0400b1eb] 	      2085	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400b1eb	          0x4531c0	                            xor r8d, r8d	      2086	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_67
0x400b1ee	            0x31c9	                            xor ecx, ecx	      2086	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_67
0x400b1f0	            0x31d2	                            xor edx, edx	      2086	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_67
0x400b1f2	            0x31f6	                            xor esi, esi	      2086	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_67
0x400b1f4	      0xbf02000000	                              mov edi, 2	      2086	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_67
0x400b1f9	        0x4c896038	             mov qword [rax + 0x38], r12	      2085	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400b1fd	        0x44897840	            mov dword [rax + 0x40], r15d	      2085	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400b201	        0x44897044	            mov dword [rax + 0x44], r14d	      2085	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400b205	      0xe800000000	                          call 0x400b20a	      2086	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_67
0x400b20a	    0x488b05000000	            mov rax, qword [0x0400b211] 	      2090	ops.c	FUNCTION_33	CALL_68
0x400b211	          0x488b38	                    mov rdi, qword [rax]	      2090	ops.c	FUNCTION_33	CALL_68
0x400b214	          0x4c29ef	                            sub rdi, r13	      2090	ops.c	FUNCTION_33	CALL_68
0x400b217	      0xe800000000	                          call 0x400b21c	      2090	ops.c	FUNCTION_33	CALL_68
0x400b21c	      0xe9a7fcffff	                           jmp 0x400aec8	      2090	ops.c	FUNCTION_33	CALL_68
0x400b221	    0x488b3d000000	            mov rdi, qword [0x0400b228] 	      1816	ops.c	FUNCTION_33	IF_8	IF_10	CALL_10
0x400b228	      0xbe45000000	                           mov esi, 0x45	      1816	ops.c	FUNCTION_33	IF_8	IF_10	CALL_10
0x400b22d	      0xe800000000	                          call 0x400b232	      1816	ops.c	FUNCTION_33	IF_8	IF_10	CALL_10
0x400b232	          0x4885c0	                           test rax, rax	      1816	ops.c	FUNCTION_33	IF_8	IF_10	CALL_10
0x400b235	     0xf84c9fcffff	                            je 0x400af04	      1816	ops.c	FUNCTION_33	IF_8	IF_10	CALL_10
0x400b23b	       0xf1f440000	                   nop dword [rax + rax]	      1816	ops.c	FUNCTION_33	IF_8	IF_10	CALL_10
0x400b240	      0xe800000000	                          call 0x400b245	      1817	ops.c	FUNCTION_33	IF_8	CALL_11
0x400b245	      0xbd01000000	                              mov ebp, 1	      1818	ops.c	FUNCTION_33	IF_8
0x400b24a	      0xe9bafcffff	                           jmp 0x400af09	      1818	ops.c	FUNCTION_33	IF_8
0x400b24f	              0x90	                                     nop	      1818	ops.c	FUNCTION_33	IF_8
0x400b250	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	      2101	ops.c	FUNCTION_33	ELSE_6
0x400b254	        0x488b5b28	            mov rbx, qword [rbx + 0x28] 	      2101	ops.c	FUNCTION_33	ELSE_6
0x400b258	    0x488988001200	          mov qword [rax + 0x1200], rcx 	      2101	ops.c	FUNCTION_33	ELSE_6
0x400b25f	    0x488998081200	          mov qword [rax + 0x1208], rbx 	      2101	ops.c	FUNCTION_33	ELSE_6
0x400b266	      0xe98bfcffff	                           jmp 0x400aef6	      2101	ops.c	FUNCTION_33	ELSE_6
0x400b26b	       0xf1f440000	                   nop dword [rax + rax]	      2101	ops.c	FUNCTION_33	ELSE_6
0x400b270	          0x833b03	                      cmp dword [rbx], 3	      1950	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28
0x400b273	     0xf85ff010000	                           jne 0x400b478	      1950	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28
0x400b279	        0x488b4350	            mov rax, qword [rbx + 0x50] 	      1956	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x400b27d	        0x4883f801	                              cmp rax, 1	      1956	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x400b281	            0x7e2c	                           jle 0x400b2af	      1956	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x400b283	    0x488b15000000	            mov rdx, qword [0x0400b28a] 	      1958	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x400b28a	        0x488d78ff	                      lea rdi, [rax - 1]	      1960	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29	CALL_37
0x400b28e	      0xbe01000000	                              mov esi, 1	      1960	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29	CALL_37
0x400b293	        0x488b6a38	            mov rbp, qword [rdx + 0x38] 	      1958	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x400b297	        0x488d4d01	                      lea rcx, [rbp + 1]	      1959	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x400b29b	        0x48894a38	             mov qword [rdx + 0x38], rcx	      1959	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x400b29f	      0xe800000000	                          call 0x400b2a4	      1960	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29	CALL_37
0x400b2a4	    0x488b05000000	            mov rax, qword [0x0400b2ab] 	      1961	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x400b2ab	        0x48896838	             mov qword [rax + 0x38], rbp	      1961	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x400b2af	      0xe800000000	                          call 0x400b2b4	      1963	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_30	CALL_38
0x400b2b4	            0x85c0	                           test eax, eax	      1963	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_30	CALL_38
0x400b2b6	     0xf84d4fbffff	                            je 0x400ae90	      1963	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_30	CALL_38
0x400b2bc	    0x488b05000000	            mov rax, qword [0x0400b2c3] 	      1965	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x400b2c3	    0x8ba8ec130000	          mov ebp, dword [rax + 0x13ec] 	      1965	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x400b2c9	            0x85ed	                           test ebp, ebp	      1965	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x400b2cb	     0xf849f020000	                            je 0x400b570	      1965	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x400b2d1	      0xbf01000000	                              mov edi, 1	      1967	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31	CALL_39
0x400b2d6	      0xe800000000	                          call 0x400b2db	      1967	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31	CALL_39
0x400b2db	    0x488b05000000	            mov rax, qword [0x0400b2e2] 	      1969	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x400b2e2	    0xc70500000000	               mov dword [0x0400b2ec], 1	      1968	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x400b2ec	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1969	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x400b2ef	    0x890500000000	            mov dword [0x0400b2f5], eax 	      1969	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x400b2f5	            0x31ff	                            xor edi, edi	      1973	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	CALL_41
0x400b2f7	      0xe800000000	                          call 0x400b2fc	      1973	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	CALL_41
0x400b2fc	      0x48837b5001	               cmp qword [rbx + 0x50], 1	      1975	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_32
0x400b301	     0xf8e03ffffff	                           jle 0x400b20a	      1975	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_32
0x400b307	      0xe800000000	                          call 0x400b30c	      1982	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_45
0x400b30c	      0xe9f9feffff	                           jmp 0x400b20a	      1982	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_45
0x400b311	     0xf1f80000000	                         nop dword [rax]	      1982	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_45
0x400b318	      0xe800000000	                          call 0x400b31d	      1943	ops.c	FUNCTION_33	IF_22	CALL_35
0x400b31d	    0x488b05000000	            mov rax, qword [0x0400b324] 	      1944	ops.c	FUNCTION_33	IF_22	CALL_36
0x400b324	        0x488b4b30	            mov rcx, qword [rbx + 0x30] 	      1944	ops.c	FUNCTION_33	IF_22	CALL_36
0x400b328	          0x8b7040	            mov esi, dword [rax + 0x40] 	      1944	ops.c	FUNCTION_33	IF_22	CALL_36
0x400b32b	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      1944	ops.c	FUNCTION_33	IF_22	CALL_36
0x400b32f	        0x488d5101	                      lea rdx, [rcx + 1]	      1944	ops.c	FUNCTION_33	IF_22	CALL_36
0x400b333	            0x31c9	                            xor ecx, ecx	      1944	ops.c	FUNCTION_33	IF_22	CALL_36
0x400b335	      0xe800000000	                          call 0x400b33a	      1944	ops.c	FUNCTION_33	IF_22	CALL_36
0x400b33a	    0x48c743500000	               mov qword [rbx + 0x50], 0	      1946	ops.c	FUNCTION_33	IF_22
0x400b342	      0xe9c3feffff	                           jmp 0x400b20a	      1946	ops.c	FUNCTION_33	IF_22
0x400b347	    0x660f1f840000	                    nop word [rax + rax]	      1946	ops.c	FUNCTION_33	IF_22
0x400b350	        0x488d7b20	                   lea rdi, [rbx + 0x20]	      1993	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_46
0x400b354	      0xe800000000	                          call 0x400b359	      1993	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_46
0x400b359	          0x83f809	                              cmp eax, 9	      1993	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_46
0x400b35c	     0xf8476010000	                            je 0x400b4d8	      1993	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_46
0x400b362	        0x488d7b30	                   lea rdi, [rbx + 0x30]	      2011	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_52
0x400b366	      0xe800000000	                          call 0x400b36b	      2011	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_52
0x400b36b	          0x83f809	                              cmp eax, 9	      2011	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_52
0x400b36e	     0xf85effaffff	                           jne 0x400ae63	      2011	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_52
0x400b374	          0x8b4314	            mov eax, dword [rbx + 0x14] 	      2012	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400b377	          0x39433c	            cmp dword [rbx + 0x3c], eax 	      2012	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400b37a	     0xf8de3faffff	                           jge 0x400ae63	      2012	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400b380	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      2016	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39
0x400b384	        0x488d7001	                      lea rsi, [rax + 1]	      2015	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39	CALL_53
0x400b388	        0x488d78ff	                      lea rdi, [rax - 1]	      2015	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39	CALL_53
0x400b38c	      0xe800000000	                          call 0x400b391	      2015	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39	CALL_53
0x400b391	            0x85c0	                           test eax, eax	      2015	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39	CALL_53
0x400b393	     0xf84f7faffff	                            je 0x400ae90	      2015	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39	CALL_53
0x400b399	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      2018	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400b39d	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	      2018	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400b3a1	    0x488b05000000	            mov rax, qword [0x0400b3a8] 	      2018	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400b3a8	        0x48897038	             mov qword [rax + 0x38], rsi	      2018	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400b3ac	        0x48897840	             mov qword [rax + 0x40], rdi	      2018	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400b3b0	          0x8b733c	            mov esi, dword [rbx + 0x3c] 	      2019	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_55
0x400b3b3	          0x8b7b38	            mov edi, dword [rbx + 0x38] 	      2019	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_55
0x400b3b6	      0xe800000000	                          call 0x400b3bb	      2019	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_55
0x400b3bb	            0x89c7	                            mov edi, eax	      2019	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_55
0x400b3bd	      0xe800000000	                          call 0x400b3c2	      2019	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_55
0x400b3c2	    0x488b05000000	            mov rax, qword [0x0400b3c9] 	      2020	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400b3c9	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      2020	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400b3cd	        0x488b7840	            mov rdi, qword [rax + 0x40] 	      2020	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400b3d1	        0x48897330	             mov qword [rbx + 0x30], rsi	      2020	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400b3d5	        0x48897b38	             mov qword [rbx + 0x38], rdi	      2020	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400b3d9	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      2021	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400b3dd	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      2021	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400b3e1	        0x48897038	             mov qword [rax + 0x38], rsi	      2021	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400b3e5	        0x48897840	             mov qword [rax + 0x40], rdi	      2021	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400b3e9	      0xe975faffff	                           jmp 0x400ae63	      2021	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400b3ee	            0x6690	                                     nop	      2021	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400b3f0	      0xe800000000	                          call 0x400b3f5	      2028	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_41	CALL_56
0x400b3f5	            0x85c0	                           test eax, eax	      2028	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_41	CALL_56
0x400b3f7	     0xf8493faffff	                            je 0x400ae90	      2028	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_41	CALL_56
0x400b3fd	    0x488b3d000000	            mov rdi, qword [0x0400b404] 	      2032	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42	CALL_57
0x400b404	      0xbe24000000	                           mov esi, 0x24	      2032	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42	CALL_57
0x400b409	      0xe800000000	                          call 0x400b40e	      2032	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42	CALL_57
0x400b40e	          0x4885c0	                           test rax, rax	      2032	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42	CALL_57
0x400b411	            0x7409	                            je 0x400b41c	      2032	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42	CALL_57
0x400b413	          0x833b03	                      cmp dword [rbx], 3	      2033	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x400b416	     0xf84c7010000	                            je 0x400b5e3	      2033	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x400b41c	        0x448b5314	           mov r10d, dword [rbx + 0x14] 	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x400b420	          0x8b4338	            mov eax, dword [rbx + 0x38] 	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x400b423	            0x31d2	                            xor edx, edx	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x400b425	          0x2b4328	             sub eax, dword [rbx + 0x28]	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x400b428	          0x4585d2	                         test r10d, r10d	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x400b42b	           0xf95c2	                                setne dl	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x400b42e	        0x448d2402	                   lea r12d, [rdx + rax]	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x400b432	    0x8b0500000000	            mov eax, dword [0x0400b438] 	      2041	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43
0x400b438	            0x85c0	                           test eax, eax	      2041	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43
0x400b43a	     0xf853c010000	                           jne 0x400b57c	      2041	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43
0x400b440	          0x833b01	                      cmp dword [rbx], 1	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400b443	     0xf8488010000	                            je 0x400b5d1	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400b449	            0x31f6	                            xor esi, esi	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400b44b	            0x85c0	                           test eax, eax	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400b44d	          0x4963fc	                        movsxd rdi, r12d	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400b450	        0x400f94c6	                                sete sil	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400b454	            0x89ea	                            mov edx, ebp	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400b456	      0xe800000000	                          call 0x400b45b	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400b45b	      0xe9aafdffff	                           jmp 0x400b20a	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400b460	        0x448b7310	           mov r14d, dword [rbx + 0x10] 	      1848	ops.c	FUNCTION_33	IF_11	IF_15
0x400b464	          0x4585f6	                         test r14d, r14d	      1848	ops.c	FUNCTION_33	IF_11	IF_15
0x400b467	     0xf848cf9ffff	                            je 0x400adf9	      1848	ops.c	FUNCTION_33	IF_11	IF_15
0x400b46d	      0xe968f9ffff	                           jmp 0x400adda	      1848	ops.c	FUNCTION_33	IF_11	IF_15
0x400b472	    0x660f1f440000	                    nop word [rax + rax]	      1848	ops.c	FUNCTION_33	IF_11	IF_15
0x400b478	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      1980	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_43
0x400b47c	      0xbe01000000	                              mov esi, 1	      1980	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_43
0x400b481	      0xe800000000	                          call 0x400b486	      1980	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_43
0x400b486	      0xbf05000000	                              mov edi, 5	      1981	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_44
0x400b48b	      0xe800000000	                          call 0x400b490	      1981	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_44
0x400b490	      0xe972feffff	                           jmp 0x400b307	      1981	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_44
0x400b495	           0xf1f00	                         nop dword [rax]	      1981	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_44
0x400b498	      0xbe01000000	                              mov esi, 1	      1866	ops.c	FUNCTION_33	IF_11	IF_17	CALL_18
0x400b49d	      0xbf2d000000	                           mov edi, 0x2d	      1866	ops.c	FUNCTION_33	IF_11	IF_17	CALL_18
0x400b4a2	    0xc743042d0000	               mov dword [rbx + 4], 0x2d	      1865	ops.c	FUNCTION_33	IF_11	IF_17
0x400b4a9	      0xe800000000	                          call 0x400b4ae	      1866	ops.c	FUNCTION_33	IF_11	IF_17	CALL_18
0x400b4ae	            0x31d2	                            xor edx, edx	      1867	ops.c	FUNCTION_33	IF_11	IF_17	IF_18	CALL_19
0x400b4b0	      0xbe01000000	                              mov esi, 1	      1867	ops.c	FUNCTION_33	IF_11	IF_17	IF_18	CALL_19
0x400b4b5	          0x4889df	                            mov rdi, rbx	      1867	ops.c	FUNCTION_33	IF_11	IF_17	IF_18	CALL_19
0x400b4b8	      0xe800000000	                          call 0x400b4bd	      1867	ops.c	FUNCTION_33	IF_11	IF_17	IF_18	CALL_19
0x400b4bd	          0x83f801	                              cmp eax, 1	      1868	ops.c	FUNCTION_33	IF_11	IF_17	IF_18
0x400b4c0	      0xb801000000	                              mov eax, 1	      1868	ops.c	FUNCTION_33	IF_11	IF_17	IF_18
0x400b4c5	    0xc74304000000	                  mov dword [rbx + 4], 0	      1869	ops.c	FUNCTION_33	IF_11	IF_17
0x400b4cc	           0xf44e8	                          cmove ebp, eax	      1868	ops.c	FUNCTION_33	IF_11	IF_17	IF_18
0x400b4cf	      0xe955f9ffff	                           jmp 0x400ae29	      1868	ops.c	FUNCTION_33	IF_11	IF_17	IF_18
0x400b4d4	         0xf1f4000	                         nop dword [rax]	      1868	ops.c	FUNCTION_33	IF_11	IF_17	IF_18
0x400b4d8	      0xe800000000	                          call 0x400b4dd	      1995	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_35	CALL_47
0x400b4dd	            0x85c0	                           test eax, eax	      1995	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_35	CALL_47
0x400b4df	     0xf84abf9ffff	                            je 0x400ae90	      1995	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_35	CALL_47
0x400b4e5	          0x4531e4	                          xor r12d, r12d	      1990	ops.c	FUNCTION_33	ELSE_4	IF_33
0x400b4e8	      0x48837b5001	               cmp qword [rbx + 0x50], 1	      1997	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_36
0x400b4ed	     0xf8427010000	                            je 0x400b61a	      1997	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_36
0x400b4f3	          0x8b732c	            mov esi, dword [rbx + 0x2c] 	      1999	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_50
0x400b4f6	          0x8b7b28	            mov edi, dword [rbx + 0x28] 	      1999	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_50
0x400b4f9	      0xe800000000	                          call 0x400b4fe	      1999	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_50
0x400b4fe	            0x89c7	                            mov edi, eax	      1999	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_50
0x400b500	      0xe800000000	                          call 0x400b505	      1999	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_50
0x400b505	    0x488b05000000	            mov rax, qword [0x0400b50c] 	      2000	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34
0x400b50c	      0x48837b5001	               cmp qword [rbx + 0x50], 1	      2001	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400b511	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2000	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34
0x400b515	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2000	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34
0x400b519	        0x48895328	             mov qword [rbx + 0x28], rdx	      2000	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34
0x400b51d	        0x48894320	             mov qword [rbx + 0x20], rax	      2000	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34
0x400b521	     0xf853bfeffff	                           jne 0x400b362	      2001	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400b527	          0x4489e7	                           mov edi, r12d	      2003	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37	CALL_51
0x400b52a	      0xe800000000	                          call 0x400b52f	      2003	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37	CALL_51
0x400b52f	    0x488b05000000	            mov rax, qword [0x0400b536] 	      2004	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400b536	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      2006	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400b53a	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      2006	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400b53e	          0x8b5040	            mov edx, dword [rax + 0x40] 	      2004	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400b541	          0x895338	             mov dword [rbx + 0x38], edx	      2004	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400b544	          0x8b5044	            mov edx, dword [rax + 0x44] 	      2005	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400b547	          0x89533c	             mov dword [rbx + 0x3c], edx	      2005	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400b54a	        0x48897038	             mov qword [rax + 0x38], rsi	      2006	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400b54e	        0x48897840	             mov qword [rax + 0x40], rdi	      2006	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400b552	      0xe90bfeffff	                           jmp 0x400b362	      2006	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400b557	    0x660f1f840000	                    nop word [rax + rax]	      2006	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400b560	          0x8b735c	            mov esi, dword [rbx + 0x5c] 	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400b563	            0x31ed	                            xor ebp, ebp	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400b565	            0x85f6	                           test esi, esi	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400b567	        0x400f94c5	                                sete bpl	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400b56b	      0xe95cfcffff	                           jmp 0x400b1cc	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400b570	            0x31ff	                            xor edi, edi	      1972	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	CALL_40
0x400b572	      0xe800000000	                          call 0x400b577	      1972	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	CALL_40
0x400b577	      0xe979fdffff	                           jmp 0x400b2f5	      1972	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	CALL_40
0x400b57c	      0xe800000000	                          call 0x400b581	      2046	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	CALL_59
0x400b581	          0x4889c7	                            mov rdi, rax	      2047	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	CALL_60
0x400b584	      0xe800000000	                          call 0x400b589	      2047	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	CALL_60
0x400b589	          0x8b533c	            mov edx, dword [rbx + 0x3c] 	      2049	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x400b58c	            0x85d2	                           test edx, edx	      2049	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x400b58e	            0x7410	                            je 0x400b5a0	      2049	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x400b590	          0x83e801	                              sub eax, 1	      2050	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x400b593	          0x394338	            cmp dword [rbx + 0x38], eax 	      2050	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x400b596	            0x7c08	                            jl 0x400b5a0	      2050	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x400b598	        0x837b2c01	               cmp dword [rbx + 0x2c], 1	      2052	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x400b59c	        0x4183d400	                             adc r12d, 0	      2052	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x400b5a0	          0x4585e4	                         test r12d, r12d	      2054	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_45
0x400b5a3	            0x750a	                           jne 0x400b5af	      2054	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_45
0x400b5a5	          0x4531e4	                          xor r12d, r12d	      2054	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_45
0x400b5a8	          0x39532c	            cmp dword [rbx + 0x2c], edx 	      2054	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_45
0x400b5ab	        0x410f95c4	                              setne r12b	      2054	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_45
0x400b5af	      0xe800000000	                          call 0x400b5b4	      2058	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_46	CALL_61
0x400b5b4	            0x85c0	                           test eax, eax	      2058	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_46	CALL_61
0x400b5b6	            0x740e	                            je 0x400b5c6	      2058	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_46	CALL_61
0x400b5b8	    0x488b05000000	            mov rax, qword [0x0400b5bf] 	      2059	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_46
0x400b5bf	    0xc74044000000	               mov dword [rax + 0x44], 0	      2059	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_46
0x400b5c6	    0x8b0500000000	            mov eax, dword [0x0400b5cc] 	      2059	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_46
0x400b5cc	      0xe96ffeffff	                           jmp 0x400b440	      2059	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_46
0x400b5d1	        0x448b4b5c	            mov r9d, dword [rbx + 0x5c] 	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400b5d5	            0x31ed	                            xor ebp, ebp	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400b5d7	          0x4585c9	                           test r9d, r9d	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400b5da	        0x400f94c5	                                sete bpl	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400b5de	      0xe966feffff	                           jmp 0x400b449	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400b5e3	    0x488b05000000	            mov rax, qword [0x0400b5ea] 	      2034	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x400b5ea	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2034	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x400b5ee	        0x48394330	            cmp qword [rbx + 0x30], rax 	      2034	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x400b5f2	     0xf8524feffff	                           jne 0x400b41c	      2034	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x400b5f8	        0x837b5c00	               cmp dword [rbx + 0x5c], 0	      2035	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x400b5fc	     0xf851afeffff	                           jne 0x400b41c	      2035	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x400b602	            0x31c0	                            xor eax, eax	      2036	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x400b604	        0x837b1400	               cmp dword [rbx + 0x14], 0	      2036	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x400b608	          0x8b7b38	            mov edi, dword [rbx + 0x38] 	      2036	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x400b60b	           0xf94c0	                                 sete al	      2036	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x400b60e	            0x29c7	                            sub edi, eax	      2036	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x400b610	      0xe800000000	                          call 0x400b615	      2036	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x400b615	      0xe902feffff	                           jmp 0x400b41c	      2036	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x400b61a	          0x8b733c	            mov esi, dword [rbx + 0x3c] 	      1998	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_48
0x400b61d	          0x8b7b38	            mov edi, dword [rbx + 0x38] 	      1998	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_48
0x400b620	      0xe800000000	                          call 0x400b625	      1998	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_48
0x400b625	          0x4189c4	                           mov r12d, eax	      1998	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_48
0x400b628	      0xe9c6feffff	                           jmp 0x400b4f3	      1998	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_48
0x400b62d	            0x31ff	                            xor edi, edi	      1793	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x400b62f	      0xe800000000	                          call 0x400b634	      1793	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x400b634	            0x85c0	                           test eax, eax	      1793	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x400b636	     0xf845df7ffff	                            je 0x400ad99	      1793	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x400b63c	    0xc74308010000	                  mov dword [rbx + 8], 1	      1794	ops.c	FUNCTION_33	IF_5	IF_7
0x400b643	      0xe966f7ffff	                           jmp 0x400adae	      1794	ops.c	FUNCTION_33	IF_5	IF_7
0x400b648	      0xe800000000	                          call 0x400b64d	      2105	ops.c	FUNCTION_33	ELSE_6
line_count_info	SWITCH,0:IF,5:WHILE,0:DO,0:FOR,1:ELSE,1:CALL,2:functions,0	94
0x4000dd0	            0x4157	                                push r15	      7295	ops.c	FUNCTION_90
0x4000dd2	            0x4156	                                push r14	      7295	ops.c	FUNCTION_90
0x4000dd4	            0x4155	                                push r13	      7295	ops.c	FUNCTION_90
0x4000dd6	            0x4154	                                push r12	      7295	ops.c	FUNCTION_90
0x4000dd8	              0x55	                                push rbp	      7295	ops.c	FUNCTION_90
0x4000dd9	              0x53	                                push rbx	      7295	ops.c	FUNCTION_90
0x4000dda	        0x4883ec28	                           sub rsp, 0x28	      7295	ops.c	FUNCTION_90
0x4000dde	          0x4885c9	                           test rcx, rcx	      7301	ops.c	FUNCTION_90	FOR_1
0x4000de1	      0x4889742410	             mov qword [rsp + 0x10], rsi	      7295	ops.c	FUNCTION_90
0x4000de6	      0x4889542408	                mov qword [rsp + 8], rdx	      7295	ops.c	FUNCTION_90
0x4000deb	      0x448944241c	             mov dword [rsp + 0x1c], r8d	      7295	ops.c	FUNCTION_90
0x4000df0	     0xf8eef000000	                           jle 0x4000ee5	      7301	ops.c	FUNCTION_90	FOR_1
0x4000df6	          0x4989fc	                            mov r12, rdi	      7301	ops.c	FUNCTION_90	FOR_1
0x4000df9	           0xfb63f	                   movzx edi, byte [rdi]	      7301	ops.c	FUNCTION_90	FOR_1
0x4000dfc	          0x4084ff	                           test dil, dil	      7301	ops.c	FUNCTION_90	FOR_1
0x4000dff	     0xf84c3000000	                            je 0x4000ec8	      7301	ops.c	FUNCTION_90	FOR_1
0x4000e05	          0x4989cd	                            mov r13, rcx	      7301	ops.c	FUNCTION_90	FOR_1
0x4000e08	          0x4531ff	                          xor r15d, r15d	      7301	ops.c	FUNCTION_90	FOR_1
0x4000e0b	            0x31ed	                            xor ebp, ebp	      7301	ops.c	FUNCTION_90	FOR_1
0x4000e0d	    0x48c704240000	                      mov qword [rsp], 0	      7301	ops.c	FUNCTION_90	FOR_1
0x4000e15	            0x31db	                            xor ebx, ebx	      7301	ops.c	FUNCTION_90	FOR_1
0x4000e17	          0x4d89e6	                            mov r14, r12	      7301	ops.c	FUNCTION_90	FOR_1
0x4000e1a	            0xeb3f	                           jmp 0x4000e5b	      7301	ops.c	FUNCTION_90	FOR_1
0x4000e1c	         0xf1f4000	                         nop dword [rax]	      7301	ops.c	FUNCTION_90	FOR_1
0x4000e20	      0xe800000000	                          call 0x4000e25	      7305	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0x4000e25	            0x85c0	                           test eax, eax	      7305	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0x4000e27	    0x41bf01000000	                             mov r15d, 1	      7305	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0x4000e2d	            0x7408	                            je 0x4000e37	      7305	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0x4000e2f	      0x4883042401	                      add qword [rsp], 1	      7307	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x4000e34	          0x4531ff	                          xor r15d, r15d	      7308	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x4000e37	          0x4c89f7	                            mov rdi, r14	      7315	ops.c	FUNCTION_90	FOR_1
0x4000e3a	        0x4883c501	                              add rbp, 1	      7313	ops.c	FUNCTION_90	FOR_1
0x4000e3e	    0xff1500000000	                 call qword [0x04000e44]	      7315	ops.c	FUNCTION_90	FOR_1
0x4000e44	            0x4898	                                    cdqe	      7315	ops.c	FUNCTION_90	FOR_1
0x4000e46	          0x4801c3	                            add rbx, rax	      7315	ops.c	FUNCTION_90	FOR_1
0x4000e49	          0x4939dd	                            cmp r13, rbx	      7301	ops.c	FUNCTION_90	FOR_1
0x4000e4c	            0x7e22	                           jle 0x4000e70	      7301	ops.c	FUNCTION_90	FOR_1
0x4000e4e	        0x4d8d341c	                    lea r14, [r12 + rbx]	      7301	ops.c	FUNCTION_90	FOR_1
0x4000e52	        0x410fb63e	                   movzx edi, byte [r14]	      7301	ops.c	FUNCTION_90	FOR_1
0x4000e56	          0x4084ff	                           test dil, dil	      7301	ops.c	FUNCTION_90	FOR_1
0x4000e59	            0x7445	                            je 0x4000ea0	      7301	ops.c	FUNCTION_90	FOR_1
0x4000e5b	          0x4585ff	                         test r15d, r15d	      7303	ops.c	FUNCTION_90	FOR_1	IF_1
0x4000e5e	            0x75c0	                           jne 0x4000e20	      7303	ops.c	FUNCTION_90	FOR_1	IF_1
0x4000e60	          0x4531ff	                          xor r15d, r15d	      7308	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x4000e63	      0xe800000000	                          call 0x4000e68	      7311	ops.c	FUNCTION_90	FOR_1	ELSE_1	IF_3	CALL_2
0x4000e68	            0x85c0	                           test eax, eax	      7308	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x4000e6a	        0x410f94c7	                               sete r15b	      7308	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x4000e6e	            0xebc7	                           jmp 0x4000e37	      7308	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x4000e70	          0x4585ff	                         test r15d, r15d	      7321	ops.c	FUNCTION_90	IF_4
0x4000e73	            0x757e	                           jne 0x4000ef3	      7321	ops.c	FUNCTION_90	IF_4
0x4000e75	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      7323	ops.c	FUNCTION_90
0x4000e7a	        0x488b1424	                    mov rdx, qword [rsp]	      7323	ops.c	FUNCTION_90
0x4000e7e	          0x480110	                    add qword [rax], rdx	      7323	ops.c	FUNCTION_90
0x4000e81	      0x488b442408	                mov rax, qword [rsp + 8]	      7331	ops.c	FUNCTION_90
0x4000e86	          0x480128	                    add qword [rax], rbp	      7331	ops.c	FUNCTION_90
0x4000e89	        0x4883c428	                           add rsp, 0x28	      7333	ops.c	FUNCTION_90
0x4000e8d	          0x4889d8	                            mov rax, rbx	      7333	ops.c	FUNCTION_90
0x4000e90	              0x5b	                                 pop rbx	      7333	ops.c	FUNCTION_90
0x4000e91	              0x5d	                                 pop rbp	      7333	ops.c	FUNCTION_90
0x4000e92	            0x415c	                                 pop r12	      7333	ops.c	FUNCTION_90
0x4000e94	            0x415d	                                 pop r13	      7333	ops.c	FUNCTION_90
0x4000e96	            0x415e	                                 pop r14	      7333	ops.c	FUNCTION_90
0x4000e98	            0x415f	                                 pop r15	      7333	ops.c	FUNCTION_90
0x4000e9a	              0xc3	                                     ret	      7333	ops.c	FUNCTION_90
0x4000e9b	       0xf1f440000	                   nop dword [rax + rax]	      7333	ops.c	FUNCTION_90
0x4000ea0	          0x4585ff	                         test r15d, r15d	      7321	ops.c	FUNCTION_90	IF_4
0x4000ea3	            0x7432	                            je 0x4000ed7	      7321	ops.c	FUNCTION_90	IF_4
0x4000ea5	        0x488b0424	                    mov rax, qword [rsp]	      7323	ops.c	FUNCTION_90
0x4000ea9	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      7323	ops.c	FUNCTION_90
0x4000eae	        0x4883c001	                              add rax, 1	      7323	ops.c	FUNCTION_90
0x4000eb2	          0x480101	                    add qword [rcx], rax	      7323	ops.c	FUNCTION_90
0x4000eb5	        0x41803e00	                       cmp byte [r14], 0	      7326	ops.c	FUNCTION_90	IF_5
0x4000eb9	            0x75c6	                           jne 0x4000e81	      7326	ops.c	FUNCTION_90	IF_5
0x4000ebb	      0x486344241c	         movsxd rax, dword [rsp + 0x1c] 	      7328	ops.c	FUNCTION_90	IF_5
0x4000ec0	          0x4801c3	                            add rbx, rax	      7328	ops.c	FUNCTION_90	IF_5
0x4000ec3	          0x4801c5	                            add rbp, rax	      7329	ops.c	FUNCTION_90	IF_5
0x4000ec6	            0xebb9	                           jmp 0x4000e81	      7329	ops.c	FUNCTION_90	IF_5
0x4000ec8	          0x4d89e6	                            mov r14, r12	      7301	ops.c	FUNCTION_90	FOR_1
0x4000ecb	            0x31ed	                            xor ebp, ebp	      7298	ops.c	FUNCTION_90
0x4000ecd	    0x48c704240000	                      mov qword [rsp], 0	      7297	ops.c	FUNCTION_90
0x4000ed5	            0x31db	                            xor ebx, ebx	      7301	ops.c	FUNCTION_90	FOR_1
0x4000ed7	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      7323	ops.c	FUNCTION_90
0x4000edc	        0x488b3424	                    mov rsi, qword [rsp]	      7323	ops.c	FUNCTION_90
0x4000ee0	          0x480130	                    add qword [rax], rsi	      7323	ops.c	FUNCTION_90
0x4000ee3	            0xebd0	                           jmp 0x4000eb5	      7323	ops.c	FUNCTION_90
0x4000ee5	            0x31ed	                            xor ebp, ebp	      7298	ops.c	FUNCTION_90
0x4000ee7	            0x31db	                            xor ebx, ebx	      7301	ops.c	FUNCTION_90	FOR_1
0x4000ee9	    0x48c704240000	                      mov qword [rsp], 0	      7297	ops.c	FUNCTION_90
0x4000ef1	            0xeb82	                           jmp 0x4000e75	      7297	ops.c	FUNCTION_90
0x4000ef3	        0x4c8b3424	                    mov r14, qword [rsp]	      7323	ops.c	FUNCTION_90
0x4000ef7	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      7323	ops.c	FUNCTION_90
0x4000efc	        0x4983c601	                              add r14, 1	      7323	ops.c	FUNCTION_90
0x4000f00	          0x4c0130	                    add qword [rax], r14	      7323	ops.c	FUNCTION_90
0x4000f03	      0xe979ffffff	                           jmp 0x4000e81	      7323	ops.c	FUNCTION_90
op_formatexpr	SWITCH,0:IF,2:WHILE,0:DO,0:FOR,0:ELSE,0:CALL,3:functions,0	21
0x4006280	              0x53	                                push rbx	      4899	ops.c	ELSE_1	FUNCTION_58
0x4006281	          0x8b475c	            mov eax, dword [rdi + 0x5c] 	      4900	ops.c	ELSE_1	FUNCTION_58	IF_1
0x4006284	          0x4889fb	                            mov rbx, rdi	      4899	ops.c	ELSE_1	FUNCTION_58
0x4006287	            0x85c0	                           test eax, eax	      4900	ops.c	ELSE_1	FUNCTION_58	IF_1
0x4006289	            0x7525	                           jne 0x40062b0	      4900	ops.c	ELSE_1	FUNCTION_58	IF_1
0x400628b	        0x488b7350	            mov rsi, qword [rbx + 0x50] 	      4904	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x400628f	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      4904	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x4006293	            0x31d2	                            xor edx, edx	      4904	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x4006295	      0xe800000000	                          call 0x400629a	      4904	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x400629a	            0x85c0	                           test eax, eax	      4904	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x400629c	            0x7502	                           jne 0x40062a0	      4904	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x400629e	              0x5b	                                 pop rbx	      4908	ops.c	ELSE_1	FUNCTION_58
0x400629f	              0xc3	                                     ret	      4908	ops.c	ELSE_1	FUNCTION_58
0x40062a0	          0x4889df	                            mov rdi, rbx	      4907	ops.c	ELSE_1	FUNCTION_58	CALL_3
0x40062a3	            0x31f6	                            xor esi, esi	      4907	ops.c	ELSE_1	FUNCTION_58	CALL_3
0x40062a5	              0x5b	                                 pop rbx	      4908	ops.c	ELSE_1	FUNCTION_58
0x40062a6	      0xe925feffff	                       jmp sym.op_format	      4907	ops.c	ELSE_1	FUNCTION_58	CALL_3
0x40062ab	       0xf1f440000	                   nop dword [rax + rax]	      4907	ops.c	ELSE_1	FUNCTION_58	CALL_3
0x40062b0	      0xbf14000000	                           mov edi, 0x14	      4902	ops.c	ELSE_1	FUNCTION_58	CALL_1
0x40062b5	      0xe800000000	                          call 0x40062ba	      4902	ops.c	ELSE_1	FUNCTION_58	CALL_1
0x40062ba	            0xebcf	                           jmp 0x400628b	      4902	ops.c	ELSE_1	FUNCTION_58	CALL_1
shift_line	SWITCH,0:IF,7:WHILE,0:DO,0:FOR,0:ELSE,4:CALL,4:functions,0	69
0x4002150	            0x4157	                                push r15	       330	ops.c	FUNCTION_6
0x4002152	            0x4156	                                push r14	       330	ops.c	FUNCTION_6
0x4002154	          0x4189ff	                           mov r15d, edi	       330	ops.c	FUNCTION_6
0x4002157	            0x4155	                                push r13	       330	ops.c	FUNCTION_6
0x4002159	            0x4154	                                push r12	       330	ops.c	FUNCTION_6
0x400215b	          0x4189f5	                           mov r13d, esi	       330	ops.c	FUNCTION_6
0x400215e	              0x55	                                push rbp	       330	ops.c	FUNCTION_6
0x400215f	              0x53	                                push rbx	       330	ops.c	FUNCTION_6
0x4002160	          0x4189d4	                           mov r12d, edx	       330	ops.c	FUNCTION_6
0x4002163	            0x89cd	                            mov ebp, ecx	       330	ops.c	FUNCTION_6
0x4002165	        0x4883ec08	                              sub rsp, 8	       330	ops.c	FUNCTION_6
0x4002169	    0x488b3d000000	            mov rdi, qword [0x04002170] 	       333	ops.c	FUNCTION_6	CALL_1
0x4002170	      0xe800000000	                          call 0x4002175	       333	ops.c	FUNCTION_6	CALL_1
0x4002175	          0x4889c3	                            mov rbx, rax	       333	ops.c	FUNCTION_6	CALL_1
0x4002178	      0xe800000000	                          call 0x400217d	       335	ops.c	FUNCTION_6	CALL_2
0x400217d	          0x4585ed	                         test r13d, r13d	       337	ops.c	FUNCTION_6	IF_1
0x4002180	            0x744e	                            je 0x40021d0	       337	ops.c	FUNCTION_6	IF_1
0x4002182	              0x99	                                     cdq	       339	ops.c	FUNCTION_6	IF_1
0x4002183	            0xf7fb	                                idiv ebx	       339	ops.c	FUNCTION_6	IF_1
0x4002185	            0x85d2	                           test edx, edx	       341	ops.c	FUNCTION_6	IF_1	IF_2
0x4002187	     0xf8483000000	                            je 0x4002210	       341	ops.c	FUNCTION_6	IF_1	IF_2
0x400218d	          0x4585ff	                         test r15d, r15d	       341	ops.c	FUNCTION_6	IF_1	IF_2
0x4002190	            0x747e	                            je 0x4002210	       341	ops.c	FUNCTION_6	IF_1	IF_2
0x4002192	        0x4183ec01	                             sub r12d, 1	       342	ops.c	FUNCTION_6	IF_1	IF_2
0x4002196	          0x4429e0	                           sub eax, r12d	       342	ops.c	FUNCTION_6	IF_1	IF_2
0x4002199	      0xbf00000000	                              mov edi, 0	       342	ops.c	FUNCTION_6	IF_1	IF_2
0x400219e	           0xf49f8	                         cmovns edi, eax	       342	ops.c	FUNCTION_6	IF_1	IF_2
0x40021a1	           0xfaffb	                           imul edi, ebx	       351	ops.c	FUNCTION_6	IF_1	ELSE_1
0x40021a4	    0xf60500000000	           test byte [0x040021ab], 0x80 	       367	ops.c	FUNCTION_6	IF_7
0x40021ab	            0x7540	                           jne 0x40021ed	       367	ops.c	FUNCTION_6	IF_7
0x40021ad	            0x31f6	                            xor esi, esi	       371	ops.c	FUNCTION_6	CALL_4
0x40021af	            0x85ed	                           test ebp, ebp	       371	ops.c	FUNCTION_6	CALL_4
0x40021b1	        0x400f95c6	                               setne sil	       371	ops.c	FUNCTION_6	CALL_4
0x40021b5	        0x4883c408	                              add rsp, 8	       372	ops.c	FUNCTION_6
0x40021b9	              0x5b	                                 pop rbx	       372	ops.c	FUNCTION_6
0x40021ba	              0x5d	                                 pop rbp	       372	ops.c	FUNCTION_6
0x40021bb	            0x415c	                                 pop r12	       372	ops.c	FUNCTION_6
0x40021bd	            0x415d	                                 pop r13	       372	ops.c	FUNCTION_6
0x40021bf	            0x415e	                                 pop r14	       372	ops.c	FUNCTION_6
0x40021c1	            0x415f	                                 pop r15	       372	ops.c	FUNCTION_6
0x40021c3	      0xe900000000	                           jmp 0x40021c8	       371	ops.c	FUNCTION_6	CALL_4
0x40021c8	     0xf1f84000000	                   nop dword [rax + rax]	       371	ops.c	FUNCTION_6	CALL_4
0x40021d0	        0x410fafdc	                          imul ebx, r12d	       357	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5
0x40021d4	          0x4585ff	                         test r15d, r15d	       355	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5
0x40021d7	          0x8d3c03	                    lea edi, [rbx + rax]	       362	ops.c	FUNCTION_6	ELSE_2	ELSE_3
0x40021da	            0x74c8	                            je 0x40021a4	       355	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5
0x40021dc	            0x29d8	                            sub eax, ebx	       355	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5
0x40021de	            0x89c7	                            mov edi, eax	       355	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5
0x40021e0	        0x410f48fd	                         cmovs edi, r13d	       355	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5
0x40021e4	    0xf60500000000	           test byte [0x040021eb], 0x80 	       367	ops.c	FUNCTION_6	IF_7
0x40021eb	            0x74c0	                            je 0x40021ad	       367	ops.c	FUNCTION_6	IF_7
0x40021ed	        0x4883c408	                              add rsp, 8	       372	ops.c	FUNCTION_6
0x40021f1	          0x4189e8	                            mov r8d, ebp	       368	ops.c	FUNCTION_6	CALL_3
0x40021f4	            0x89fe	                            mov esi, edi	       368	ops.c	FUNCTION_6	CALL_3
0x40021f6	              0x5b	                                 pop rbx	       372	ops.c	FUNCTION_6
0x40021f7	              0x5d	                                 pop rbp	       372	ops.c	FUNCTION_6
0x40021f8	            0x415c	                                 pop r12	       372	ops.c	FUNCTION_6
0x40021fa	            0x415d	                                 pop r13	       372	ops.c	FUNCTION_6
0x40021fc	            0x415e	                                 pop r14	       372	ops.c	FUNCTION_6
0x40021fe	            0x415f	                                 pop r15	       372	ops.c	FUNCTION_6
0x4002200	            0x31c9	                            xor ecx, ecx	       368	ops.c	FUNCTION_6	CALL_3
0x4002202	            0x31d2	                            xor edx, edx	       368	ops.c	FUNCTION_6	CALL_3
0x4002204	      0xbf01000000	                              mov edi, 1	       368	ops.c	FUNCTION_6	CALL_3
0x4002209	      0xe900000000	                           jmp 0x400220e	       368	ops.c	FUNCTION_6	CALL_3
0x400220e	            0x6690	                                     nop	       368	ops.c	FUNCTION_6	CALL_3
0x4002210	          0x4585ff	                         test r15d, r15d	       343	ops.c	FUNCTION_6	IF_1	IF_3
0x4002213	     0xf857dffffff	                           jne 0x4002196	       343	ops.c	FUNCTION_6	IF_1	IF_3
0x4002219	        0x428d3c20	                    lea edi, [rax + r12]	       350	ops.c	FUNCTION_6	IF_1	ELSE_1
0x400221d	      0xe97fffffff	                           jmp 0x40021a1	       350	ops.c	FUNCTION_6	IF_1	ELSE_1
op_replace	SWITCH,0:IF,30:WHILE,2:DO,0:FOR,2:ELSE,8:CALL,43:functions,0	495
0x4002fb0	            0x4157	                                push r15	      2131	ops.c	FUNCTION_35
0x4002fb2	            0x4156	                                push r14	      2131	ops.c	FUNCTION_35
0x4002fb4	            0x4155	                                push r13	      2131	ops.c	FUNCTION_35
0x4002fb6	            0x4154	                                push r12	      2131	ops.c	FUNCTION_35
0x4002fb8	              0x55	                                push rbp	      2131	ops.c	FUNCTION_35
0x4002fb9	              0x53	                                push rbx	      2131	ops.c	FUNCTION_35
0x4002fba	    0x4881ec880000	                           sub rsp, 0x88	      2131	ops.c	FUNCTION_35
0x4002fc1	    0x488b15000000	            mov rdx, qword [0x04002fc8] 	      2142	ops.c	FUNCTION_35	IF_1
0x4002fc8	    0x64488b042528	                mov rax, qword fs:[0x28]	      2131	ops.c	FUNCTION_35
0x4002fd1	      0x4889442478	             mov qword [rsp + 0x78], rax	      2131	ops.c	FUNCTION_35
0x4002fd6	            0x31c0	                            xor eax, eax	      2131	ops.c	FUNCTION_35
0x4002fd8	      0xb801000000	                              mov eax, 1	      2143	ops.c	FUNCTION_35	IF_1
0x4002fdd	        0xf6421001	               test byte [rdx + 0x10], 1	      2142	ops.c	FUNCTION_35	IF_1
0x4002fe1	     0xf856c030000	                           jne 0x4003353	      2142	ops.c	FUNCTION_35	IF_1
0x4002fe7	          0x8b5758	            mov edx, dword [rdi + 0x58] 	      2142	ops.c	FUNCTION_35	IF_1
0x4002fea	          0x4889fd	                            mov rbp, rdi	      2142	ops.c	FUNCTION_35	IF_1
0x4002fed	            0x85d2	                           test edx, edx	      2142	ops.c	FUNCTION_35	IF_1
0x4002fef	     0xf855e030000	                           jne 0x4003353	      2142	ops.c	FUNCTION_35	IF_1
0x4002ff5	          0x83feff	             cmp esi, 0xffffffffffffffff	      2145	ops.c	FUNCTION_35	IF_2
0x4002ff8	          0x4189f4	                           mov r12d, esi	      2145	ops.c	FUNCTION_35	IF_2
0x4002ffb	     0xf84b7050000	                            je 0x40035b8	      2145	ops.c	FUNCTION_35	IF_2
0x4003001	          0x83fefe	             cmp esi, 0xfffffffffffffffe	      2150	ops.c	FUNCTION_35	ELSE_1	IF_3
0x4003004	     0xf8476030000	                            je 0x4003380	      2150	ops.c	FUNCTION_35	ELSE_1	IF_3
0x400300a	    0xc74424140000	               mov dword [rsp + 0x14], 0	      2140	ops.c	FUNCTION_35
0x4003012	    0x8b0500000000	            mov eax, dword [0x04003018] 	      2157	ops.c	FUNCTION_35	IF_4
0x4003018	            0x85c0	                           test eax, eax	      2157	ops.c	FUNCTION_35	IF_4
0x400301a	            0x740b	                            je 0x4003027	      2157	ops.c	FUNCTION_35	IF_4
0x400301c	          0x8b4514	            mov eax, dword [rbp + 0x14] 	      2117	ops.c	ELSE_6	FUNCTION_34	IF_1
0x400301f	            0x85c0	                           test eax, eax	      2117	ops.c	ELSE_6	FUNCTION_34	IF_1
0x4003021	     0xf8589060000	                           jne 0x40036b0	      2117	ops.c	ELSE_6	FUNCTION_34	IF_1
0x4003027	        0x488b4530	            mov rax, qword [rbp + 0x30] 	      2161	ops.c	FUNCTION_35	IF_5	CALL_2
0x400302b	        0x488d7001	                      lea rsi, [rax + 1]	      2161	ops.c	FUNCTION_35	IF_5	CALL_2
0x400302f	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      2161	ops.c	FUNCTION_35	IF_5	CALL_2
0x4003033	        0x488d78ff	                      lea rdi, [rax - 1]	      2161	ops.c	FUNCTION_35	IF_5	CALL_2
0x4003037	      0xe800000000	                          call 0x400303c	      2161	ops.c	FUNCTION_35	IF_5	CALL_2
0x400303c	            0x85c0	                           test eax, eax	      2161	ops.c	FUNCTION_35	IF_5	CALL_2
0x400303e	     0xf840f030000	                            je 0x4003353	      2161	ops.c	FUNCTION_35	IF_5	CALL_2
0x4003044	          0x8b4560	            mov eax, dword [rbp + 0x60] 	      2168	ops.c	FUNCTION_35	IF_6
0x4003047	            0x85c0	                           test eax, eax	      2168	ops.c	FUNCTION_35	IF_6
0x4003049	     0xf84d9030000	                            je 0x4003428	      2168	ops.c	FUNCTION_35	IF_6
0x400304f	    0x488b05000000	            mov rax, qword [0x04003056] 	      2170	ops.c	FUNCTION_35	IF_6
0x4003056	            0x31d2	                            xor edx, edx	      2170	ops.c	FUNCTION_35	IF_6
0x4003058	    0x817848ffffff	     cmp dword [rax + 0x48], 0x7fffffff 	      2170	ops.c	FUNCTION_35	IF_6
0x400305f	           0xf94c2	                                 sete dl	      2170	ops.c	FUNCTION_35	IF_6
0x4003062	        0x89542458	             mov dword [rsp + 0x58], edx	      2170	ops.c	FUNCTION_35	IF_6
0x4003066	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x400306a	        0x483b5530	            cmp rdx, qword [rbp + 0x30] 	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x400306e	     0xf8f7c020000	                            jg 0x40032f0	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003074	    0x48c744240800	                  mov qword [rsp + 8], 0	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x400307d	           0xf1f00	                         nop dword [rax]	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003080	      0x488d742430	                   lea rsi, [rsp + 0x30]	      2174	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_3
0x4003085	    0xc74040000000	               mov dword [rax + 0x40], 0	      2173	ops.c	FUNCTION_35	IF_6	FOR_1
0x400308c	      0xb901000000	                              mov ecx, 1	      2174	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_3
0x4003091	          0x4889ef	                            mov rdi, rbp	      2174	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_3
0x4003094	      0xe8d7cfffff	                     call sym.block_prep	      2174	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_3
0x4003099	      0x448b7c2438	           mov r15d, dword [rsp + 0x38] 	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x400309e	          0x4585ff	                         test r15d, r15d	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x40030a1	     0xf85f1020000	                           jne 0x4003398	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x40030a7	    0x448b35000000	           mov r14d, dword [0x040030ae] 	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x40030ae	          0x4585f6	                         test r14d, r14d	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x40030b1	     0xf841a020000	                            je 0x40032d1	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x40030b7	      0x448b6c2458	           mov r13d, dword [rsp + 0x58] 	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x40030bc	          0x4585ed	                         test r13d, r13d	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x40030bf	     0xf850c020000	                           jne 0x40032d1	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x40030c5	        0x8b542454	            mov edx, dword [rsp + 0x54] 	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x40030c9	            0x85d2	                           test edx, edx	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x40030cb	            0x7413	                            je 0x40030e0	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x40030cd	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x40030d2	          0x803800	                       cmp byte [rax], 0	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x40030d5	     0xf84fd050000	                            je 0x40036d8	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x40030db	       0xf1f440000	                   nop dword [rax + rax]	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x40030e0	      0x448b5c2430	           mov r11d, dword [rsp + 0x30] 	      2197	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_2
0x40030e5	          0x4531ed	                          xor r13d, r13d	      2197	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_2
0x40030e8	          0x4585db	                         test r11d, r11d	      2197	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_2
0x40030eb	            0x7408	                            je 0x40030f5	      2197	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_2
0x40030ed	        0x8b44246c	            mov eax, dword [rsp + 0x6c] 	      2197	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_2
0x40030f1	        0x448d68ff	                     lea r13d, [rax - 1]	      2197	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_2
0x40030f5	        0x8b442434	            mov eax, dword [rsp + 0x34] 	      2200	ops.c	FUNCTION_35	IF_6	FOR_1
0x40030f9	            0x85c0	                           test eax, eax	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x40030fb	            0x7418	                            je 0x4003115	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x40030fd	        0x8b44245c	            mov eax, dword [rsp + 0x5c] 	      2202	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003101	            0x85c0	                           test eax, eax	      2202	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003103	     0xf85a7020000	                           jne 0x40033b0	      2202	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003109	        0x8b4c2468	            mov ecx, dword [rsp + 0x68] 	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x400310d	          0x8d71ff	                      lea esi, [rcx - 1]	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003110	            0x85c9	                           test ecx, ecx	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003112	           0xf4fc6	                          cmovg eax, esi	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003115	          0x4101c5	                           add r13d, eax	      2200	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003118	          0x8b4568	            mov eax, dword [rbp + 0x68] 	      2206	ops.c	FUNCTION_35	IF_6	FOR_1
0x400311b	            0x89c3	                            mov ebx, eax	      2206	ops.c	FUNCTION_35	IF_6	FOR_1
0x400311d	          0x2b5d64	             sub ebx, dword [rbp + 0x64]	      2206	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003120	          0x83c301	                              add ebx, 1	      2206	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003123	            0x85d2	                           test edx, edx	      2207	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003125	            0x741f	                            je 0x4003146	      2207	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003127	    0x448b15000000	           mov r10d, dword [0x0400312e] 	      2207	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x400312e	          0x4585d2	                         test r10d, r10d	      2207	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003131	            0x740a	                            je 0x400313d	      2207	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003133	      0x448b4c2458	            mov r9d, dword [rsp + 0x58] 	      2207	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003138	          0x4585c9	                           test r9d, r9d	      2207	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x400313b	            0x7409	                            je 0x4003146	      2207	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x400313d	        0x2b442450	             sub eax, dword [rsp + 0x50]	      2208	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003141	          0x83c001	                              add eax, 1	      2208	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003144	            0x29c3	                            sub ebx, eax	      2208	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003146	          0x4489e7	                           mov edi, r12d	      2213	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4003149	    0xff1500000000	                 call qword [0x0400314f]	      2213	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x400314f	          0x83f801	                              cmp eax, 1	      2213	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4003152	            0x7e21	                           jle 0x4003175	      2213	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4003154	          0xf6c301	                              test bl, 1	      2215	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10	IF_11
0x4003157	            0x7413	                            je 0x400316c	      2215	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10	IF_11
0x4003159	      0x448b442454	            mov r8d, dword [rsp + 0x54] 	      2215	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10	IF_11
0x400315e	          0x4585c0	                           test r8d, r8d	      2215	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10	IF_11
0x4003161	            0x7509	                           jne 0x400316c	      2215	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10	IF_11
0x4003163	      0x8344243401	               add dword [rsp + 0x34], 1	      2217	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10	IF_11
0x4003168	        0x4183c501	                             add r13d, 1	      2218	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10	IF_11
0x400316c	            0x89d8	                            mov eax, ebx	      2220	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x400316e	          0xc1e81f	                           shr eax, 0x1f	      2220	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4003171	             0x1c3	                            add ebx, eax	      2220	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4003173	            0xd1fb	                              sar ebx, 1	      2220	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4003175	          0x4489e7	                           mov edi, r12d	      2225	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003178	    0xff1500000000	                 call qword [0x0400317e]	      2225	ops.c	FUNCTION_35	IF_6	FOR_1
0x400317e	           0xfafc3	                           imul eax, ebx	      2225	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003181	        0x89442418	             mov dword [rsp + 0x18], eax	      2225	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003185	        0x2b442438	             sub eax, dword [rsp + 0x38]	      2228	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003189	          0x4101c5	                           add r13d, eax	      2228	ops.c	FUNCTION_35	IF_6	FOR_1
0x400318c	      0xe800000000	                          call 0x4003191	      2230	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_5
0x4003191	          0x4889c7	                            mov rdi, rax	      2231	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_6
0x4003194	          0x4989c7	                            mov r15, rax	      2230	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_5
0x4003197	      0xe800000000	                          call 0x400319c	      2231	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_6
0x400319c	          0x4889c2	                            mov rdx, rax	      2231	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_6
0x400319f	      0x418d440501	                lea eax, [r13 + rax + 1]	      2232	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_7
0x40031a4	        0x48891424	                    mov qword [rsp], rdx	      2232	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_7
0x40031a8	            0x89c7	                            mov edi, eax	      2232	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_7
0x40031aa	        0x8944241c	             mov dword [rsp + 0x1c], eax	      2232	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_7
0x40031ae	      0xe800000000	                          call 0x40031b3	      2232	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_7
0x40031b3	          0x4885c0	                           test rax, rax	      2233	ops.c	FUNCTION_35	IF_6	FOR_1	IF_12
0x40031b6	          0x4989c6	                            mov r14, rax	      2232	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_7
0x40031b9	     0xf8412010000	                            je 0x40032d1	      2233	ops.c	FUNCTION_35	IF_6	FOR_1	IF_12
0x40031bf	        0x488b1424	                    mov rdx, qword [rsp]	        90	string3.h	FUNCTION_95	CALL_6
0x40031c3	          0x4d63ed	                        movsxd r13, r13d	        90	string3.h	FUNCTION_95	CALL_6
0x40031c6	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_95	CALL_6
0x40031c8	          0x4889c7	                            mov rdi, rax	        90	string3.h	FUNCTION_95	CALL_6
0x40031cb	      0x4a8d542a01	                lea rdx, [rdx + r13 + 1]	        90	string3.h	FUNCTION_95	CALL_6
0x40031d0	      0xe800000000	                          call 0x40031d5	        90	string3.h	FUNCTION_95	CALL_6
0x40031d5	      0x4863542448	         movsxd rdx, dword [rsp + 0x48] 	        59	string3.h	FUNCTION_93	CALL_3
0x40031da	          0x4c89fe	                            mov rsi, r15	        59	string3.h	FUNCTION_93	CALL_3
0x40031dd	          0x4c89f7	                            mov rdi, r14	        59	string3.h	FUNCTION_93	CALL_3
0x40031e0	      0xe800000000	                          call 0x40031e5	        59	string3.h	FUNCTION_93	CALL_3
0x40031e5	      0x48637c2448	         movsxd rdi, dword [rsp + 0x48] 	      2238	ops.c	FUNCTION_35	IF_6	FOR_1
0x40031ea	        0x8b442438	            mov eax, dword [rsp + 0x38] 	      2238	ops.c	FUNCTION_35	IF_6	FOR_1
0x40031ee	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x40031f3	      0x4863542430	         movsxd rdx, dword [rsp + 0x30] 	        90	string3.h	FUNCTION_95	CALL_6
0x40031f8	             0x1f8	                            add eax, edi	      2238	ops.c	FUNCTION_35	IF_6	FOR_1
0x40031fa	          0x4c01f7	                            add rdi, r14	        90	string3.h	FUNCTION_95	CALL_6
0x40031fd	            0x4898	                                    cdqe	      2238	ops.c	FUNCTION_35	IF_6	FOR_1
0x40031ff	          0x4901c7	                            add r15, rax	      2238	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003202	      0xe800000000	                          call 0x4003207	        90	string3.h	FUNCTION_95	CALL_6
0x4003207	        0x8b7c2414	            mov edi, dword [rsp + 0x14] 	      2244	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13
0x400320b	            0x85ff	                           test edi, edi	      2244	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13
0x400320d	            0x7514	                           jne 0x4003223	      2244	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13
0x400320f	        0x4183fc0d	                           cmp r12d, 0xd	      2244	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13
0x4003213	     0xf84b7030000	                            je 0x40035d0	      2244	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13
0x4003219	        0x4183fc0a	                           cmp r12d, 0xa	      2244	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13
0x400321d	     0xf84ad030000	                            je 0x40035d0	      2244	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13
0x4003223	    0x8b3500000000	            mov esi, dword [0x04003229] 	      2247	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14
0x4003229	          0x4c89f7	                            mov rdi, r14	      2249	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	CALL_11
0x400322c	            0x85f6	                           test esi, esi	      2247	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14
0x400322e	     0xf84d4010000	                            je 0x4003408	      2247	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14
0x4003234	      0xe800000000	                          call 0x4003239	      2249	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	CALL_11
0x4003239	          0x83eb01	                              sub ebx, 1	      2250	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x400323c	          0x4189c5	                           mov r13d, eax	      2249	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	CALL_11
0x400323f	            0x7821	                            js 0x4003262	      2250	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4003241	     0xf1f80000000	                         nop dword [rax]	      2250	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4003248	          0x4963f5	                        movsxd rsi, r13d	      2251	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x400324b	          0x83eb01	                              sub ebx, 1	      2250	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x400324e	          0x4489e7	                           mov edi, r12d	      2251	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4003251	          0x4c01f6	                            add rsi, r14	      2251	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4003254	    0xff1500000000	                 call qword [0x0400325a]	      2251	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x400325a	          0x4101c5	                           add r13d, eax	      2251	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x400325d	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      2250	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4003260	            0x75e6	                           jne 0x4003248	      2250	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4003262	        0x8b4c2454	            mov ecx, dword [rsp + 0x54] 	      2256	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15
0x4003266	            0x85c9	                           test ecx, ecx	      2256	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15
0x4003268	     0xf8452010000	                            je 0x40033c0	      2256	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15
0x400326e	    0x488b05000000	            mov rax, qword [0x04003275] 	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4003275	            0x31d2	                            xor edx, edx	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4003277	          0x4c89f6	                            mov rsi, r14	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x400327a	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x400327e	      0xe800000000	                          call 0x4003283	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4003283	    0x48837c240800	                  cmp qword [rsp + 8], 0	      2274	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17
0x4003289	            0x7446	                            je 0x40032d1	      2274	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17
0x400328b	    0x488b05000000	            mov rax, qword [0x04003292] 	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x4003292	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x4003297	            0x31c9	                            xor ecx, ecx	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x4003299	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x400329d	          0x4889de	                            mov rsi, rbx	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x40032a0	        0x488d5701	                      lea rdx, [rdi + 1]	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x40032a4	        0x48895038	             mov qword [rax + 0x38], rdx	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x40032a8	            0x31d2	                            xor edx, edx	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x40032aa	      0xe800000000	                          call 0x40032af	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x40032af	    0x488b05000000	            mov rax, qword [0x040032b6] 	      2277	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_23
0x40032b6	      0xbe01000000	                              mov esi, 1	      2277	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_23
0x40032bb	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      2277	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_23
0x40032bf	      0xe800000000	                          call 0x40032c4	      2277	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_23
0x40032c4	      0x4883453001	               add qword [rbp + 0x30], 1	      2278	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17
0x40032c9	          0x4889df	                            mov rdi, rbx	      2279	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_24
0x40032cc	      0xe800000000	                          call 0x40032d1	      2279	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_24
0x40032d1	    0x488b05000000	            mov rax, qword [0x040032d8] 	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x40032d8	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x40032dc	        0x488d5101	                      lea rdx, [rcx + 1]	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x40032e0	        0x48395530	            cmp qword [rbp + 0x30], rdx 	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x40032e4	        0x48895038	             mov qword [rax + 0x38], rdx	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x40032e8	     0xf8d92fdffff	                           jge 0x4003080	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x40032ee	            0x6690	                                     nop	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x40032f0	        0x488b4d20	            mov rcx, qword [rbp + 0x20] 	      2370	ops.c	FUNCTION_35
0x40032f4	        0x488b5d28	            mov rbx, qword [rbp + 0x28] 	      2370	ops.c	FUNCTION_35
0x40032f8	        0x48894838	             mov qword [rax + 0x38], rcx	      2370	ops.c	FUNCTION_35
0x40032fc	        0x48895840	             mov qword [rax + 0x40], rbx	      2370	ops.c	FUNCTION_35
0x4003300	      0xe800000000	                          call 0x4003305	      2371	ops.c	FUNCTION_35	CALL_42
0x4003305	        0x488b4530	            mov rax, qword [rbp + 0x30] 	      2372	ops.c	FUNCTION_35	CALL_43
0x4003309	          0x8b7528	            mov esi, dword [rbp + 0x28] 	      2372	ops.c	FUNCTION_35	CALL_43
0x400330c	            0x31c9	                            xor ecx, ecx	      2372	ops.c	FUNCTION_35	CALL_43
0x400330e	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	      2372	ops.c	FUNCTION_35	CALL_43
0x4003312	        0x488d5001	                      lea rdx, [rax + 1]	      2372	ops.c	FUNCTION_35	CALL_43
0x4003316	      0xe800000000	                          call 0x400331b	      2372	ops.c	FUNCTION_35	CALL_43
0x400331b	    0x488b05000000	            mov rax, qword [0x04003322] 	      2375	ops.c	FUNCTION_35
0x4003322	        0x488b4d20	            mov rcx, qword [rbp + 0x20] 	      2375	ops.c	FUNCTION_35
0x4003326	        0x488b5d28	            mov rbx, qword [rbp + 0x28] 	      2375	ops.c	FUNCTION_35
0x400332a	    0x488988e01100	          mov qword [rax + 0x11e0], rcx 	      2375	ops.c	FUNCTION_35
0x4003331	        0x488b4d30	            mov rcx, qword [rbp + 0x30] 	      2376	ops.c	FUNCTION_35
0x4003335	    0x488998e81100	          mov qword [rax + 0x11e8], rbx 	      2375	ops.c	FUNCTION_35
0x400333c	        0x488b5d38	            mov rbx, qword [rbp + 0x38] 	      2376	ops.c	FUNCTION_35
0x4003340	    0x488988001200	          mov qword [rax + 0x1200], rcx 	      2376	ops.c	FUNCTION_35
0x4003347	    0x488998081200	          mov qword [rax + 0x1208], rbx 	      2376	ops.c	FUNCTION_35
0x400334e	      0xb801000000	                              mov eax, 1	      2378	ops.c	FUNCTION_35
0x4003353	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	      2379	ops.c	FUNCTION_35
0x4003358	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2379	ops.c	FUNCTION_35
0x4003361	     0xf8561040000	                           jne 0x40037c8	      2379	ops.c	FUNCTION_35
0x4003367	    0x4881c4880000	                           add rsp, 0x88	      2379	ops.c	FUNCTION_35
0x400336e	              0x5b	                                 pop rbx	      2379	ops.c	FUNCTION_35
0x400336f	              0x5d	                                 pop rbp	      2379	ops.c	FUNCTION_35
0x4003370	            0x415c	                                 pop r12	      2379	ops.c	FUNCTION_35
0x4003372	            0x415d	                                 pop r13	      2379	ops.c	FUNCTION_35
0x4003374	            0x415e	                                 pop r14	      2379	ops.c	FUNCTION_35
0x4003376	            0x415f	                                 pop r15	      2379	ops.c	FUNCTION_35
0x4003378	              0xc3	                                     ret	      2379	ops.c	FUNCTION_35
0x4003379	     0xf1f80000000	                         nop dword [rax]	      2379	ops.c	FUNCTION_35
0x4003380	    0xc74424140100	               mov dword [rsp + 0x14], 1	      2152	ops.c	FUNCTION_35	ELSE_1	IF_3
0x4003388	    0x41bc0a000000	                           mov r12d, 0xa	      2153	ops.c	FUNCTION_35	ELSE_1	IF_3
0x400338e	      0xe97ffcffff	                           jmp 0x4003012	      2153	ops.c	FUNCTION_35	ELSE_1	IF_3
0x4003393	       0xf1f440000	                   nop dword [rax + rax]	      2153	ops.c	FUNCTION_35	ELSE_1	IF_3
0x4003398	    0x8b1d00000000	            mov ebx, dword [0x0400339e] 	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x400339e	        0x8b542454	            mov edx, dword [rsp + 0x54] 	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x40033a2	            0x85db	                           test ebx, ebx	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x40033a4	     0xf8436fdffff	                            je 0x40030e0	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x40033aa	      0xe916fdffff	                           jmp 0x40030c5	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x40033af	              0x90	                                     nop	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x40033b0	            0x31c0	                            xor eax, eax	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x40033b2	      0xe95efdffff	                           jmp 0x4003115	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x40033b7	    0x660f1f840000	                    nop word [rax + rax]	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x40033c0	          0x4c89f7	                            mov rdi, r14	      2259	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_15
0x40033c3	      0xe800000000	                          call 0x40033c8	      2259	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_15
0x40033c8	      0x4863542434	         movsxd rdx, dword [rsp + 0x34] 	        90	string3.h	FUNCTION_95	CALL_6
0x40033cd	        0x498d3c06	                    lea rdi, [r14 + rax]	        90	string3.h	FUNCTION_95	CALL_6
0x40033d1	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x40033d6	      0xe800000000	                          call 0x40033db	        90	string3.h	FUNCTION_95	CALL_6
0x40033db	          0x4c89ff	                            mov rdi, r15	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x40033de	      0xe800000000	                          call 0x40033e3	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x40033e3	          0x4c89f7	                            mov rdi, r14	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x40033e6	          0x4889c3	                            mov rbx, rax	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x40033e9	      0xe800000000	                          call 0x40033ee	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x40033ee	        0x488d5301	                      lea rdx, [rbx + 1]	        59	string3.h	FUNCTION_93	CALL_3
0x40033f2	        0x498d3c06	                    lea rdi, [r14 + rax]	        59	string3.h	FUNCTION_93	CALL_3
0x40033f6	          0x4c89fe	                            mov rsi, r15	        59	string3.h	FUNCTION_93	CALL_3
0x40033f9	      0xe800000000	                          call 0x40033fe	        59	string3.h	FUNCTION_93	CALL_3
0x40033fe	      0xe96bfeffff	                           jmp 0x400326e	        59	string3.h	FUNCTION_93	CALL_3
0x4003403	       0xf1f440000	                   nop dword [rax + rax]	        59	string3.h	FUNCTION_93	CALL_3
0x4003408	      0xe800000000	                          call 0x400340d	      2255	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	CALL_13
0x400340d	      0x4863542418	         movsxd rdx, dword [rsp + 0x18] 	        90	string3.h	FUNCTION_95	CALL_6
0x4003412	        0x498d3c06	                    lea rdi, [r14 + rax]	        90	string3.h	FUNCTION_95	CALL_6
0x4003416	          0x4489e6	                           mov esi, r12d	        90	string3.h	FUNCTION_95	CALL_6
0x4003419	      0xe800000000	                          call 0x400341e	        90	string3.h	FUNCTION_95	CALL_6
0x400341e	      0xe93ffeffff	                           jmp 0x4003262	        90	string3.h	FUNCTION_95	CALL_6
0x4003423	       0xf1f440000	                   nop dword [rax + rax]	        90	string3.h	FUNCTION_95	CALL_6
0x4003428	        0x837d0801	                  cmp dword [rbp + 8], 1	      2288	ops.c	FUNCTION_35	ELSE_5	IF_18
0x400342c	     0xf8403030000	                            je 0x4003735	      2288	ops.c	FUNCTION_35	ELSE_5	IF_18
0x4003432	          0x8b5514	            mov edx, dword [rbp + 0x14] 	      2296	ops.c	FUNCTION_35	ELSE_5	ELSE_6	IF_20
0x4003435	            0x85d2	                           test edx, edx	      2296	ops.c	FUNCTION_35	ELSE_5	ELSE_6	IF_20
0x4003437	     0xf84d0020000	                            je 0x400370d	      2296	ops.c	FUNCTION_35	ELSE_5	ELSE_6	IF_20
0x400343d	        0x4c8d6d30	                   lea r13, [rbp + 0x30]	      2335	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_35
0x4003441	            0xeb3d	                           jmp 0x4003480	      2335	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_35
0x4003443	       0xf1f440000	                   nop dword [rax + rax]	      2335	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_35
0x4003448	      0xe800000000	                          call 0x400344d	      2301	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_29
0x400344d	            0x85c0	                           test eax, eax	      2302	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21
0x400344f	            0x89c3	                            mov ebx, eax	      2301	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_29
0x4003451	            0x754f	                           jne 0x40034a2	      2302	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21
0x4003453	    0x8b0500000000	            mov eax, dword [0x04003459] 	      2342	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x4003459	            0x85c0	                           test eax, eax	      2342	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x400345b	            0x7415	                            je 0x4003472	      2342	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x400345d	    0x488b05000000	            mov rax, qword [0x04003464] 	      2342	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x4003464	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2342	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x4003468	        0x483b4530	            cmp rax, qword [rbp + 0x30] 	      2342	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x400346c	     0xf84ae000000	                            je 0x4003520	      2342	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x4003472	      0xe800000000	                          call 0x4003477	      2365	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_30	CALL_41
0x4003477	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2365	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_30	CALL_41
0x400347a	     0xf8420020000	                            je 0x40036a0	      2365	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_30	CALL_41
0x4003480	    0x488b05000000	            mov rax, qword [0x04003487] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4003487	        0x488b4d30	            mov rcx, qword [rbp + 0x30] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x400348b	        0x48394838	            cmp qword [rax + 0x38], rcx 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x400348f	            0x745f	                            je 0x40034f0	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4003491	     0xf8d59feffff	                           jge 0x40032f0	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4003497	      0xe800000000	                          call 0x400349c	      2301	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_29
0x400349c	            0x85c0	                           test eax, eax	      2302	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21
0x400349e	            0x89c3	                            mov ebx, eax	      2301	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_29
0x40034a0	            0x74b1	                            je 0x4003453	      2302	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21
0x40034a2	          0x4489e7	                           mov edi, r12d	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x40034a5	    0xff1500000000	                 call qword [0x040034ab]	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x40034ab	          0x83f801	                              cmp eax, 1	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x40034ae	     0xf8e9c010000	                           jle 0x4003650	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x40034b4	    0x488b05000000	            mov rax, qword [0x040034bb] 	      2309	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x40034bb	        0x488b4d30	            mov rcx, qword [rbp + 0x30] 	      2309	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x40034bf	        0x48394838	            cmp qword [rax + 0x38], rcx 	      2309	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x40034c3	     0xf845f010000	                            je 0x4003628	      2309	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x40034c9	    0x8b1d00000000	            mov ebx, dword [0x040034cf] 	      2311	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x40034cf	          0x4489e7	                           mov edi, r12d	      2313	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	CALL_30
0x40034d2	    0xc70500000000	           mov dword [0x040034dc], 0x50 	      2312	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x40034dc	      0xe800000000	                          call 0x40034e1	      2313	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	CALL_30
0x40034e1	    0x891d00000000	            mov dword [0x040034e7], ebx 	      2314	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x40034e7	      0xe800000000	                          call 0x40034ec	      2316	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	CALL_31
0x40034ec	            0xeb84	                           jmp 0x4003472	      2316	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	CALL_31
0x40034ee	            0x6690	                                     nop	      2316	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	CALL_31
0x40034f0	          0x8b4d38	            mov ecx, dword [rbp + 0x38] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x40034f3	          0x394840	            cmp dword [rax + 0x40], ecx 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x40034f6	            0x7420	                            je 0x4003518	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x40034f8	     0xf8c4affffff	                            jl 0x4003448	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x40034fe	        0x488b4d38	            mov rcx, qword [rbp + 0x38] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4003502	        0x48394840	            cmp qword [rax + 0x40], rcx 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4003506	     0xf843cffffff	                            je 0x4003448	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x400350c	      0xe9dffdffff	                           jmp 0x40032f0	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4003511	     0xf1f80000000	                         nop dword [rax]	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4003518	          0x8b4d3c	            mov ecx, dword [rbp + 0x3c] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x400351b	          0x394844	            cmp dword [rax + 0x44], ecx 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x400351e	            0xebd8	                           jmp 0x40034f8	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4003520	        0x483b4520	            cmp rax, qword [rbp + 0x20] 	      2346	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x4003524	          0x8b753c	            mov esi, dword [rbp + 0x3c] 	      2344	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x4003527	          0x8b7d38	            mov edi, dword [rbp + 0x38] 	      2347	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x400352a	            0x89f3	                            mov ebx, esi	      2344	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x400352c	     0xf848e010000	                            je 0x40036c0	      2346	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x4003532	      0xe800000000	                          call 0x4003537	      2353	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	CALL_38
0x4003537	          0x8d7801	                      lea edi, [rax + 1]	      2353	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	CALL_38
0x400353a	      0xe800000000	                          call 0x400353f	      2353	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	CALL_38
0x400353f	    0x488b05000000	            mov rax, qword [0x04003546] 	      2354	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x4003546	          0x8d5301	                      lea edx, [rbx + 1]	      2354	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x4003549	          0x295040	             sub dword [rax + 0x40], edx	      2354	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x400354c	            0x85db	                           test ebx, ebx	      2355	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2
0x400354e	     0xf881effffff	                            js 0x4003472	      2355	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2
0x4003554	          0x4589e6	                          mov r14d, r12d	      2355	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2
0x4003557	            0xeb1a	                           jmp 0x4003573	      2355	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2
0x4003559	     0xf1f80000000	                         nop dword [rax]	      2355	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2
0x4003560	          0x83eb01	                              sub ebx, 1	      2355	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2
0x4003563	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      2355	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2
0x4003566	     0xf8406ffffff	                            je 0x4003472	      2355	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2
0x400356c	    0x488b05000000	            mov rax, qword [0x04003573] 	      2355	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2
0x4003573	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x4003577	    0x488b3d000000	            mov rdi, qword [0x0400357e] 	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x400357e	      0xba01000000	                              mov edx, 1	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x4003583	      0xe800000000	                          call 0x4003588	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x4003588	    0x488b15000000	            mov rdx, qword [0x0400358f] 	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x400358f	        0x48635240	         movsxd rdx, dword [rdx + 0x40] 	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x4003593	        0x44883410	              mov byte [rax + rdx], r14b	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x4003597	    0x488b05000000	            mov rax, qword [0x0400359e] 	      2358	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	IF_29	CALL_40
0x400359e	        0x488d7838	                   lea rdi, [rax + 0x38]	      2358	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	IF_29	CALL_40
0x40035a2	      0xe800000000	                          call 0x40035a7	      2358	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	IF_29	CALL_40
0x40035a7	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2358	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	IF_29	CALL_40
0x40035aa	            0x75b4	                           jne 0x4003560	      2358	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	IF_29	CALL_40
0x40035ac	      0xe9c1feffff	                           jmp 0x4003472	      2358	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	IF_29	CALL_40
0x40035b1	     0xf1f80000000	                         nop dword [rax]	      2358	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	IF_29	CALL_40
0x40035b8	    0xc74424140100	               mov dword [rsp + 0x14], 1	      2147	ops.c	FUNCTION_35	IF_2
0x40035c0	    0x41bc0d000000	                           mov r12d, 0xd	      2148	ops.c	FUNCTION_35	IF_2
0x40035c6	      0xe947faffff	                           jmp 0x4003012	      2148	ops.c	FUNCTION_35	IF_2
0x40035cb	       0xf1f440000	                   nop dword [rax + rax]	      2148	ops.c	FUNCTION_35	IF_2
0x40035d0	          0x4c89f7	                            mov rdi, r14	      2268	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_19
0x40035d3	      0xe800000000	                          call 0x40035d8	      2268	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_19
0x40035d8	        0x8b7c241c	            mov edi, dword [rsp + 0x1c] 	      2267	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_18
0x40035dc	            0x29c7	                            sub edi, eax	      2267	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_18
0x40035de	      0xe800000000	                          call 0x40035e3	      2267	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_18
0x40035e3	          0x4885c0	                           test rax, rax	      2269	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	IF_16
0x40035e6	          0x4889c3	                            mov rbx, rax	      2267	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_18
0x40035e9	      0x4889442408	                mov qword [rsp + 8], rax	      2267	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_18
0x40035ee	     0xf8427010000	                            je 0x400371b	      2269	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	IF_16
0x40035f4	          0x4c89ff	                            mov rdi, r15	      2270	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_20
0x40035f7	      0xe800000000	                          call 0x40035fc	      2270	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_20
0x40035fc	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_93	CALL_3
0x4003600	          0x4c89fe	                            mov rsi, r15	        59	string3.h	FUNCTION_93	CALL_3
0x4003603	          0x4889df	                            mov rdi, rbx	        59	string3.h	FUNCTION_93	CALL_3
0x4003606	      0xe800000000	                          call 0x400360b	        59	string3.h	FUNCTION_93	CALL_3
0x400360b	    0x488b05000000	            mov rax, qword [0x04003612] 	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4003612	            0x31d2	                            xor edx, edx	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4003614	          0x4c89f6	                            mov rsi, r14	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4003617	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x400361b	      0xe800000000	                          call 0x4003620	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4003620	      0xe966fcffff	                           jmp 0x400328b	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4003625	           0xf1f00	                         nop dword [rax]	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4003628	          0x4489e7	                           mov edi, r12d	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x400362b	    0xff1500000000	                 call qword [0x04003631]	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x4003631	          0x4189c6	                           mov r14d, eax	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x4003634	            0x89df	                            mov edi, ebx	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x4003636	    0xff1500000000	                 call qword [0x0400363c]	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x400363c	          0x4129c6	                           sub r14d, eax	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x400363f	        0x44017538	            add dword [rbp + 0x38], r14d	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x4003643	      0xe981feffff	                           jmp 0x40034c9	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x4003648	     0xf1f84000000	                   nop dword [rax + rax]	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x4003650	            0x89df	                            mov edi, ebx	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x4003652	    0xff1500000000	                 call qword [0x04003658]	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x4003658	          0x83f801	                              cmp eax, 1	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x400365b	     0xf8f53feffff	                            jg 0x40034b4	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x4003661	          0x83fb09	                              cmp ebx, 9	      2322	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24
0x4003664	     0xf840c010000	                            je 0x4003776	      2322	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24
0x400366a	    0x488b05000000	            mov rax, qword [0x04003671] 	      2322	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24
0x4003671	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      2322	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24
0x4003675	    0x488b3d000000	            mov rdi, qword [0x0400367c] 	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x400367c	      0xba01000000	                              mov edx, 1	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x4003681	      0xe800000000	                          call 0x4003686	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x4003686	    0x488b15000000	            mov rdx, qword [0x0400368d] 	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x400368d	        0x48635240	         movsxd rdx, dword [rdx + 0x40] 	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x4003691	        0x44882410	              mov byte [rax + rdx], r12b	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x4003695	      0xe9d8fdffff	                           jmp 0x4003472	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x400369a	    0x660f1f440000	                    nop word [rax + rax]	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x40036a0	    0x488b05000000	            mov rax, qword [0x040036a7] 	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x40036a7	      0xe944fcffff	                           jmp 0x40032f0	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x40036ac	         0xf1f4000	                         nop dword [rax]	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x40036b0	          0x4889ef	                            mov rdi, rbp	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x40036b3	      0xe858e9ffff	         call sym.mb_adjust_opend.part.2	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x40036b8	      0xe96af9ffff	                           jmp 0x4003027	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x40036bd	           0xf1f00	                         nop dword [rax]	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x40036c0	          0x397d28	            cmp dword [rbp + 0x28], edi 	      2347	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x40036c3	     0xf8569feffff	                           jne 0x4003532	      2347	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x40036c9	          0x2b5d2c	             sub ebx, dword [rbp + 0x2c]	      2348	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x40036cc	      0xe961feffff	                           jmp 0x4003532	      2348	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x40036d1	     0xf1f80000000	                         nop dword [rax]	      2348	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x40036d8	    0x488b05000000	            mov rax, qword [0x040036df] 	      2189	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x40036df	          0x8b7564	            mov esi, dword [rbp + 0x64] 	      2190	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8	CALL_4
0x40036e2	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2190	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8	CALL_4
0x40036e7	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2189	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x40036eb	      0x4889442420	             mov qword [rsp + 0x20], rax	      2189	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x40036f0	      0xe800000000	                          call 0x40036f5	      2190	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8	CALL_4
0x40036f5	      0x448b6c242c	           mov r13d, dword [rsp + 0x2c] 	      2191	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x40036fa	      0x44036c2430	            add r13d, dword [rsp + 0x30]	      2191	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x40036ff	        0x8b542454	            mov edx, dword [rsp + 0x54] 	      2191	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4003703	      0x44896c2430	            mov dword [rsp + 0x30], r13d	      2191	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4003708	      0xe9e8f9ffff	                           jmp 0x40030f5	      2186	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x400370d	        0x488d7d30	                   lea rdi, [rbp + 0x30]	      2297	ops.c	FUNCTION_35	ELSE_5	ELSE_6	IF_20
0x4003711	      0xe800000000	                          call 0x4003716	      2297	ops.c	FUNCTION_35	ELSE_5	ELSE_6	IF_20
0x4003716	      0xe922fdffff	                           jmp 0x400343d	      2297	ops.c	FUNCTION_35	ELSE_5	ELSE_6	IF_20
0x400371b	    0x488b05000000	            mov rax, qword [0x04003722] 	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4003722	            0x31d2	                            xor edx, edx	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4003724	          0x4c89f6	                            mov rsi, r14	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4003727	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x400372b	      0xe800000000	                          call 0x4003730	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4003730	      0xe99cfbffff	                           jmp 0x40032d1	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4003735	    0x488b05000000	            mov rax, qword [0x0400373c] 	      2291	ops.c	FUNCTION_35	ELSE_5	IF_18
0x400373c	        0x488b7d30	            mov rdi, qword [rbp + 0x30] 	      2292	ops.c	FUNCTION_35	ELSE_5	IF_18	CALL_26
0x4003740	    0xc74528000000	               mov dword [rbp + 0x28], 0	      2290	ops.c	FUNCTION_35	ELSE_5	IF_18
0x4003747	    0xc74040000000	               mov dword [rax + 0x40], 0	      2291	ops.c	FUNCTION_35	ELSE_5	IF_18
0x400374e	      0xe800000000	                          call 0x4003753	      2292	ops.c	FUNCTION_35	ELSE_5	IF_18	CALL_26
0x4003753	          0x4889c7	                            mov rdi, rax	      2292	ops.c	FUNCTION_35	ELSE_5	IF_18	CALL_26
0x4003756	      0xe800000000	                          call 0x400375b	      2292	ops.c	FUNCTION_35	ELSE_5	IF_18	CALL_26
0x400375b	            0x85c0	                           test eax, eax	      2293	ops.c	FUNCTION_35	ELSE_5	IF_18	IF_19
0x400375d	            0x750c	                           jne 0x400376b	      2293	ops.c	FUNCTION_35	ELSE_5	IF_18	IF_19
0x400375f	    0xc74538000000	               mov dword [rbp + 0x38], 0	      2292	ops.c	FUNCTION_35	ELSE_5	IF_18	CALL_26
0x4003766	      0xe9d2fcffff	                           jmp 0x400343d	      2292	ops.c	FUNCTION_35	ELSE_5	IF_18	CALL_26
0x400376b	          0x83e801	                              sub eax, 1	      2294	ops.c	FUNCTION_35	ELSE_5	IF_18	IF_19
0x400376e	          0x894538	            mov dword [rbp + 0x38], eax 	      2294	ops.c	FUNCTION_35	ELSE_5	IF_18	IF_19
0x4003771	      0xe9c7fcffff	                           jmp 0x400343d	      2294	ops.c	FUNCTION_35	ELSE_5	IF_18	IF_19
0x4003776	    0x488b05000000	            mov rax, qword [0x0400377d] 	      2326	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25
0x400377d	            0x31db	                            xor ebx, ebx	      2324	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24
0x400377f	        0x488b4d30	            mov rcx, qword [rbp + 0x30] 	      2326	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25
0x4003783	        0x48394838	            cmp qword [rax + 0x38], rcx 	      2326	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25
0x4003787	            0x7430	                            je 0x40037b9	      2326	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25
0x4003789	      0xe800000000	                          call 0x400378e	      2333	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_34
0x400378e	            0x89c7	                            mov edi, eax	      2333	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_34
0x4003790	      0xe800000000	                          call 0x4003795	      2333	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_34
0x4003795	    0x488b05000000	            mov rax, qword [0x0400379c] 	      2334	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_26
0x400379c	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      2334	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_26
0x40037a0	        0x483b7530	            cmp rsi, qword [rbp + 0x30] 	      2334	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_26
0x40037a4	     0xf85cbfeffff	                           jne 0x4003675	      2334	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_26
0x40037aa	            0x89de	                            mov esi, ebx	      2335	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_35
0x40037ac	          0x4c89ef	                            mov rdi, r13	      2335	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_35
0x40037af	      0xe800000000	                          call 0x40037b4	      2335	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_35
0x40037b4	      0xe9b1feffff	                           jmp 0x400366a	      2335	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_35
0x40037b9	          0x8b753c	            mov esi, dword [rbp + 0x3c] 	      2330	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25	CALL_32
0x40037bc	          0x8b7d38	            mov edi, dword [rbp + 0x38] 	      2330	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25	CALL_32
0x40037bf	      0xe800000000	                          call 0x40037c4	      2330	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25	CALL_32
0x40037c4	            0x89c3	                            mov ebx, eax	      2330	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25	CALL_32
0x40037c6	            0xebc1	                           jmp 0x4003789	      2330	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25	CALL_32
0x40037c8	      0xe800000000	                          call 0x40037cd	      2379	ops.c	FUNCTION_35
op_shift	SWITCH,0:IF,13:WHILE,0:DO,0:FOR,1:ELSE,8:CALL,15:functions,0	474
0x40048a0	            0x4157	                                push r15	       231	ops.c	FUNCTION_5
0x40048a2	            0x4156	                                push r14	       231	ops.c	FUNCTION_5
0x40048a4	          0x4189d6	                           mov r14d, edx	       231	ops.c	FUNCTION_5
0x40048a7	            0x4155	                                push r13	       231	ops.c	FUNCTION_5
0x40048a9	            0x4154	                                push r12	       231	ops.c	FUNCTION_5
0x40048ab	          0x4989fd	                            mov r13, rdi	       231	ops.c	FUNCTION_5
0x40048ae	              0x55	                                push rbp	       231	ops.c	FUNCTION_5
0x40048af	              0x53	                                push rbx	       231	ops.c	FUNCTION_5
0x40048b0	    0x4881ec980000	                           sub rsp, 0x98	       231	ops.c	FUNCTION_5
0x40048b7	    0x64488b042528	                mov rax, qword fs:[0x28]	       231	ops.c	FUNCTION_5
0x40048c0	    0x488984248800	             mov qword [rsp + 0x88], rax	       231	ops.c	FUNCTION_5
0x40048c8	            0x31c0	                            xor eax, eax	       231	ops.c	FUNCTION_5
0x40048ca	        0x488b4730	            mov rax, qword [rdi + 0x30] 	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x40048ce	          0x893424	                    mov dword [rsp], esi	       231	ops.c	FUNCTION_5
0x40048d1	        0x488d7001	                      lea rsi, [rax + 1]	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x40048d5	        0x488b4720	            mov rax, qword [rdi + 0x20] 	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x40048d9	        0x488d78ff	                      lea rdi, [rax - 1]	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x40048dd	      0xe800000000	                          call 0x40048e2	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x40048e2	            0x85c0	                           test eax, eax	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x40048e4	     0xf84af010000	                            je 0x4004a99	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x40048ea	        0x418b7560	            mov esi, dword [r13 + 0x60] 	       241	ops.c	FUNCTION_5	IF_2
0x40048ee	    0xc74424040000	                  mov dword [rsp + 4], 0	       235	ops.c	FUNCTION_5
0x40048f6	            0x85f6	                           test esi, esi	       241	ops.c	FUNCTION_5	IF_2
0x40048f8	     0xf8542040000	                           jne 0x4004d40	       241	ops.c	FUNCTION_5	IF_2
0x40048fe	        0x4d8b7d50	            mov r15, qword [r13 + 0x50] 	       244	ops.c	FUNCTION_5	FOR_1
0x4004902	        0x4983ef01	                              sub r15, 1	       244	ops.c	FUNCTION_5	FOR_1
0x4004906	            0x787f	                            js 0x4004987	       244	ops.c	FUNCTION_5	FOR_1
0x4004908	      0x488d442450	                   lea rax, [rsp + 0x50]	       442	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_5
0x400490d	      0x4889442408	                mov qword [rsp + 8], rax	       442	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_5
0x4004912	            0xeb21	                           jmp 0x4004935	       442	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_5
0x4004914	         0xf1f4000	                         nop dword [rax]	       442	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_5
0x4004918	    0x488b05000000	            mov rax, qword [0x0400491f] 	       248	ops.c	FUNCTION_5	FOR_1	IF_3
0x400491f	    0xc74040000000	               mov dword [rax + 0x40], 0	       248	ops.c	FUNCTION_5	FOR_1	IF_3
0x4004926	        0x4983ef01	                              sub r15, 1	       244	ops.c	FUNCTION_5	FOR_1
0x400492a	      0x4883403801	               add qword [rax + 0x38], 1	       262	ops.c	FUNCTION_5	FOR_1
0x400492f	        0x4983ffff	             cmp r15, 0xffffffffffffffff	       244	ops.c	FUNCTION_5	FOR_1
0x4004933	            0x7452	                            je 0x4004987	       244	ops.c	FUNCTION_5	FOR_1
0x4004935	      0xe800000000	                          call 0x400493a	       246	ops.c	FUNCTION_5	FOR_1	CALL_2
0x400493a	           0xfb600	                   movzx eax, byte [rax]	       246	ops.c	FUNCTION_5	FOR_1	CALL_2
0x400493d	            0x85c0	                           test eax, eax	       247	ops.c	FUNCTION_5	FOR_1	IF_3
0x400493f	            0x74d7	                            je 0x4004918	       247	ops.c	FUNCTION_5	FOR_1	IF_3
0x4004941	        0x418b5560	            mov edx, dword [r13 + 0x60] 	       250	ops.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x4004945	            0x85d2	                           test edx, edx	       250	ops.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x4004947	     0xf857b010000	                           jne 0x4004ac8	       250	ops.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x400494d	          0x83f823	                           cmp eax, 0x23	       257	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_4
0x4004950	     0xf84fa010000	                            je 0x4004b50	       257	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_4
0x4004956	            0x31ff	                            xor edi, edi	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x4004958	      0x41837d0004	                      cmp dword [r13], 4	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x400495d	    0x8b3500000000	            mov esi, dword [0x04004963] 	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x4004963	          0x4489f2	                           mov edx, r14d	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x4004966	        0x400f94c7	                                sete dil	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x400496a	            0x31c9	                            xor ecx, ecx	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x400496c	        0x4983ef01	                              sub r15, 1	       244	ops.c	FUNCTION_5	FOR_1
0x4004970	      0xe800000000	                          call 0x4004975	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x4004975	    0x488b05000000	            mov rax, qword [0x0400497c] 	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x400497c	      0x4883403801	               add qword [rax + 0x38], 1	       262	ops.c	FUNCTION_5	FOR_1
0x4004981	        0x4983ffff	             cmp r15, 0xffffffffffffffff	       244	ops.c	FUNCTION_5	FOR_1
0x4004985	            0x75ae	                           jne 0x4004935	       244	ops.c	FUNCTION_5	FOR_1
0x4004987	        0x498b4530	            mov rax, qword [r13 + 0x30] 	       265	ops.c	FUNCTION_5	CALL_6
0x400498b	        0x498b7d20	            mov rdi, qword [r13 + 0x20] 	       265	ops.c	FUNCTION_5	CALL_6
0x400498f	            0x31c9	                            xor ecx, ecx	       265	ops.c	FUNCTION_5	CALL_6
0x4004991	            0x31f6	                            xor esi, esi	       265	ops.c	FUNCTION_5	CALL_6
0x4004993	        0x488d5001	                      lea rdx, [rax + 1]	       265	ops.c	FUNCTION_5	CALL_6
0x4004997	      0xe800000000	                          call 0x400499c	       265	ops.c	FUNCTION_5	CALL_6
0x400499c	        0x418b4d60	            mov ecx, dword [r13 + 0x60] 	       266	ops.c	FUNCTION_5	IF_6
0x40049a0	            0x85c9	                           test ecx, ecx	       266	ops.c	FUNCTION_5	IF_6
0x40049a2	     0xf85b0030000	                           jne 0x4004d58	       266	ops.c	FUNCTION_5	IF_6
0x40049a8	          0x8b0c24	                    mov ecx, dword [rsp]	       271	ops.c	FUNCTION_5	ELSE_3	IF_7
0x40049ab	            0x85c9	                           test ecx, ecx	       271	ops.c	FUNCTION_5	ELSE_3	IF_7
0x40049ad	     0xf85fd030000	                           jne 0x4004db0	       271	ops.c	FUNCTION_5	ELSE_3	IF_7
0x40049b3	    0x488b05000000	            mov rax, qword [0x040049ba] 	       277	ops.c	FUNCTION_5	ELSE_4
0x40049ba	      0x4883683801	               sub qword [rax + 0x38], 1	       277	ops.c	FUNCTION_5	ELSE_4
0x40049bf	      0xe800000000	                          call 0x40049c4	       281	ops.c	FUNCTION_5	CALL_8
0x40049c4	        0x498b5d50	            mov rbx, qword [r13 + 0x50] 	       285	ops.c	FUNCTION_5	IF_8
0x40049c8	    0x483b1d000000	            cmp rbx, qword [0x040049cf] 	       285	ops.c	FUNCTION_5	IF_8
0x40049cf	            0x7e73	                           jle 0x4004a44	       285	ops.c	FUNCTION_5	IF_8
0x40049d1	      0x41837d0005	                      cmp dword [r13], 5	       288	ops.c	FUNCTION_5	IF_8	IF_9
0x40049d6	      0xb800000000	                              mov eax, 0	       288	ops.c	FUNCTION_5	IF_8	IF_9
0x40049db	    0x41b800000000	                              mov r8d, 0	       288	ops.c	FUNCTION_5	IF_8	IF_9
0x40049e1	      0xba05000000	                              mov edx, 5	       294	ops.c	FUNCTION_5	IF_8	IF_10	CALL_9
0x40049e6	        0x490f45c0	                          cmovne rax, r8	       288	ops.c	FUNCTION_5	IF_8	IF_9
0x40049ea	        0x4883fb01	                              cmp rbx, 1	       291	ops.c	FUNCTION_5	IF_8	IF_10
0x40049ee	          0x4889c5	                            mov rbp, rax	       288	ops.c	FUNCTION_5	IF_8	IF_9
0x40049f1	     0xf84d9030000	                            je 0x4004dd0	       291	ops.c	FUNCTION_5	IF_8	IF_10
0x40049f7	        0x4183fe01	                             cmp r14d, 1	       300	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12
0x40049fb	     0xf8472030000	                            je 0x4004d73	       300	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12
0x4004a01	      0xbe00000000	                              mov esi, 0	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_12
0x4004a06	            0x31ff	                            xor edi, edi	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_12
0x4004a08	      0xe800000000	                          call 0x4004a0d	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_12
0x4004a0d	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004a11	    0x488b3d000000	            mov rdi, qword [0x04004a18] 	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004a18	          0x4889c1	                            mov rcx, rax	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004a1b	            0x4156	                                push r14	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004a1d	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004a24	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004a27	          0x4989d8	                             mov r8, rbx	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004a2a	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004a2f	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004a31	      0xe800000000	                          call 0x4004a36	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004a36	              0x58	                                 pop rax	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004a37	              0x5a	                                 pop rdx	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004a38	    0x488b3d000000	            mov rdi, qword [0x04004a3f] 	       307	ops.c	FUNCTION_5	IF_8	CALL_13
0x4004a3f	      0xe800000000	                          call 0x4004a44	       307	ops.c	FUNCTION_5	IF_8	CALL_13
0x4004a44	        0x498b5528	            mov rdx, qword [r13 + 0x28] 	       313	ops.c	FUNCTION_5
0x4004a48	    0x488b1d000000	            mov rbx, qword [0x04004a4f] 	       313	ops.c	FUNCTION_5
0x4004a4f	        0x498b4520	            mov rax, qword [r13 + 0x20] 	       313	ops.c	FUNCTION_5
0x4004a53	        0x498b7d30	            mov rdi, qword [r13 + 0x30] 	       314	ops.c	FUNCTION_5
0x4004a57	    0x488993e81100	          mov qword [rbx + 0x11e8], rdx 	       313	ops.c	FUNCTION_5
0x4004a5e	    0x4889bb001200	          mov qword [rbx + 0x1200], rdi 	       314	ops.c	FUNCTION_5
0x4004a65	    0x488983e01100	          mov qword [rbx + 0x11e0], rax 	       313	ops.c	FUNCTION_5
0x4004a6c	      0xe800000000	                          call 0x4004a71	       315	ops.c	FUNCTION_5	CALL_15
0x4004a71	          0x4889c7	                            mov rdi, rax	       315	ops.c	FUNCTION_5	CALL_15
0x4004a74	      0xe800000000	                          call 0x4004a79	       315	ops.c	FUNCTION_5	CALL_15
0x4004a79	    0x488b15000000	            mov rdx, qword [0x04004a80] 	       316	ops.c	FUNCTION_5	IF_13
0x4004a80	    0x898308120000	          mov dword [rbx + 0x1208], eax 	       315	ops.c	FUNCTION_5	CALL_15
0x4004a86	    0x8b8208120000	          mov eax, dword [rdx + 0x1208] 	       316	ops.c	FUNCTION_5	IF_13
0x4004a8c	            0x85c0	                           test eax, eax	       316	ops.c	FUNCTION_5	IF_13
0x4004a8e	            0x7e09	                           jle 0x4004a99	       316	ops.c	FUNCTION_5	IF_13
0x4004a90	          0x83e801	                              sub eax, 1	       317	ops.c	FUNCTION_5	IF_13
0x4004a93	    0x898208120000	          mov dword [rdx + 0x1208], eax 	       317	ops.c	FUNCTION_5	IF_13
0x4004a99	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	       318	ops.c	FUNCTION_5
0x4004aa1	    0x644833042528	                xor rax, qword fs:[0x28]	       318	ops.c	FUNCTION_5
0x4004aaa	     0xf858b050000	                           jne 0x400503b	       318	ops.c	FUNCTION_5
0x4004ab0	    0x4881c4980000	                           add rsp, 0x98	       318	ops.c	FUNCTION_5
0x4004ab7	              0x5b	                                 pop rbx	       318	ops.c	FUNCTION_5
0x4004ab8	              0x5d	                                 pop rbp	       318	ops.c	FUNCTION_5
0x4004ab9	            0x415c	                                 pop r12	       318	ops.c	FUNCTION_5
0x4004abb	            0x415d	                                 pop r13	       318	ops.c	FUNCTION_5
0x4004abd	            0x415e	                                 pop r14	       318	ops.c	FUNCTION_5
0x4004abf	            0x415f	                                 pop r15	       318	ops.c	FUNCTION_5
0x4004ac1	              0xc3	                                     ret	       318	ops.c	FUNCTION_5
0x4004ac2	    0x660f1f440000	                    nop word [rax + rax]	       318	ops.c	FUNCTION_5
0x4004ac8	    0x8b0500000000	            mov eax, dword [0x04004ace] 	       383	ops.c	FUNCTION_7
0x4004ace	    0x488b3d000000	            mov rdi, qword [0x04004ad5] 	       387	ops.c	FUNCTION_7	CALL_1
0x4004ad5	        0x458b6500	                   mov r12d, dword [r13]	       382	ops.c	FUNCTION_7
0x4004ad9	        0x89442410	             mov dword [rsp + 0x10], eax	       383	ops.c	FUNCTION_7
0x4004add	    0x488b05000000	            mov rax, qword [0x04004ae4] 	       386	ops.c	FUNCTION_7
0x4004ae4	          0x8b4040	            mov eax, dword [rax + 0x40] 	       386	ops.c	FUNCTION_7
0x4004ae7	        0x89442414	             mov dword [rsp + 0x14], eax	       386	ops.c	FUNCTION_7
0x4004aeb	      0xe800000000	                          call 0x4004af0	       387	ops.c	FUNCTION_7	CALL_1
0x4004af0	          0x4889c3	                            mov rbx, rax	       387	ops.c	FUNCTION_7	CALL_1
0x4004af3	    0x488b05000000	            mov rax, qword [0x04004afa] 	       388	ops.c	FUNCTION_7
0x4004afa	      0x488d742440	                   lea rsi, [rsp + 0x40]	       401	ops.c	FUNCTION_7	CALL_2
0x4004aff	      0xb901000000	                              mov ecx, 1	       401	ops.c	FUNCTION_7	CALL_2
0x4004b04	          0x4c89ef	                            mov rdi, r13	       401	ops.c	FUNCTION_7	CALL_2
0x4004b07	    0xc70500000000	           mov dword [0x04004b11], 0x10 	       400	ops.c	FUNCTION_7
0x4004b11	    0x488ba8a81500	          mov rbp, qword [rax + 0x15a8] 	       388	ops.c	FUNCTION_7
0x4004b18	    0x8b0500000000	            mov eax, dword [0x04004b1e] 	       395	ops.c	FUNCTION_7
0x4004b1e	    0xc70500000000	               mov dword [0x04004b28], 0	       397	ops.c	FUNCTION_7
0x4004b28	        0x89442428	             mov dword [rsp + 0x28], eax	       395	ops.c	FUNCTION_7
0x4004b2c	    0x488b05000000	            mov rax, qword [0x04004b33] 	       401	ops.c	FUNCTION_7	CALL_2
0x4004b33	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       401	ops.c	FUNCTION_7	CALL_2
0x4004b37	      0xe834b5ffff	                     call sym.block_prep	       401	ops.c	FUNCTION_7	CALL_2
0x4004b3c	        0x8b442464	            mov eax, dword [rsp + 0x64] 	       402	ops.c	FUNCTION_7	IF_1
0x4004b40	            0x85c0	                           test eax, eax	       402	ops.c	FUNCTION_7	IF_1
0x4004b42	            0x742c	                            je 0x4004b70	       402	ops.c	FUNCTION_7	IF_1
0x4004b44	    0x488b05000000	            mov rax, qword [0x04004b4b] 	       402	ops.c	FUNCTION_7	IF_1
0x4004b4b	      0xe9d6fdffff	                           jmp 0x4004926	       402	ops.c	FUNCTION_7	IF_1
0x4004b50	      0xe800000000	                          call 0x4004b55	       257	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_4
0x4004b55	            0x85c0	                           test eax, eax	       257	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_4
0x4004b57	     0xf84f9fdffff	                            je 0x4004956	       257	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_4
0x4004b5d	    0x488b05000000	            mov rax, qword [0x04004b64] 	       257	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_4
0x4004b64	      0xe9bdfdffff	                           jmp 0x4004926	       257	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_4
0x4004b69	     0xf1f80000000	                         nop dword [rax]	       257	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_4
0x4004b70	          0x4489f1	                           mov ecx, r14d	       406	ops.c	FUNCTION_7
0x4004b73	           0xfafcb	                           imul ecx, ebx	       406	ops.c	FUNCTION_7
0x4004b76	            0x89c8	                            mov eax, ecx	       407	ops.c	FUNCTION_7	IF_2
0x4004b78	              0x99	                                     cdq	       407	ops.c	FUNCTION_7	IF_2
0x4004b79	            0xf7fb	                                idiv ebx	       407	ops.c	FUNCTION_7	IF_2
0x4004b7b	          0x4139c6	                           cmp r14d, eax	       407	ops.c	FUNCTION_7	IF_2
0x4004b7e	            0x75c4	                           jne 0x4004b44	       407	ops.c	FUNCTION_7	IF_2
0x4004b80	        0x894c2418	             mov dword [rsp + 0x18], ecx	       407	ops.c	FUNCTION_7	IF_2
0x4004b84	      0xe800000000	                          call 0x4004b89	       410	ops.c	FUNCTION_7	CALL_3
0x4004b89	        0x4183fc04	                             cmp r12d, 4	       412	ops.c	FUNCTION_7	IF_3
0x4004b8d	      0x4889442420	             mov qword [rsp + 0x20], rax	       410	ops.c	FUNCTION_7	CALL_3
0x4004b92	      0x48634c2418	         movsxd rcx, dword [rsp + 0x18] 	       412	ops.c	FUNCTION_7	IF_3
0x4004b97	     0xf8471020000	                            je 0x4004e0e	       412	ops.c	FUNCTION_7	IF_3
0x4004b9d	        0x8b442470	            mov eax, dword [rsp + 0x70] 	       420	ops.c	FUNCTION_7	IF_3
0x4004ba1	      0x448b64245c	           mov r12d, dword [rsp + 0x5c] 	       421	ops.c	FUNCTION_7	IF_3
0x4004ba6	          0x8d1c01	                    lea ebx, [rcx + rax]	       420	ops.c	FUNCTION_7	IF_3
0x4004ba9	          0x4129c4	                           sub r12d, eax	       421	ops.c	FUNCTION_7	IF_3
0x4004bac	        0x8b442440	            mov eax, dword [rsp + 0x40] 	       422	ops.c	FUNCTION_7	IF_3	IF_4
0x4004bb0	            0x85c0	                           test eax, eax	       422	ops.c	FUNCTION_7	IF_3	IF_4
0x4004bb2	     0xf8591030000	                           jne 0x4004f49	       422	ops.c	FUNCTION_7	IF_3	IF_4
0x4004bb8	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	       422	ops.c	FUNCTION_7	IF_3	IF_4
0x4004bbd	           0xfb607	                   movzx eax, byte [rdi]	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x4004bc0	            0x3c20	                            cmp al, 0x20	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x4004bc2	            0x7404	                            je 0x4004bc8	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x4004bc4	            0x3c09	                               cmp al, 9	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x4004bc6	            0x752e	                           jne 0x4004bf6	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x4004bc8	        0x8b54245c	            mov edx, dword [rsp + 0x5c] 	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x4004bcc	         0xf1f4000	                         nop dword [rax]	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x4004bd0	      0x488b742408	                mov rsi, qword [rsp + 8]	       442	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_5
0x4004bd5	      0xe800000000	                          call 0x4004bda	       442	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_5
0x4004bda	             0x1c3	                            add ebx, eax	       444	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1
0x4004bdc	         0x344245c	             add eax, dword [rsp + 0x5c]	       445	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1
0x4004be0	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x4004be5	            0x89c2	                            mov edx, eax	       445	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1
0x4004be7	        0x8944245c	             mov dword [rsp + 0x5c], eax	       445	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1
0x4004beb	           0xfb607	                   movzx eax, byte [rdi]	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x4004bee	            0x3c20	                            cmp al, 0x20	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x4004bf0	            0x74de	                            je 0x4004bd0	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x4004bf2	            0x3c09	                               cmp al, 9	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x4004bf4	            0x74da	                            je 0x4004bd0	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x4004bf6	    0x488b05000000	            mov rax, qword [0x04004bfd] 	       449	ops.c	FUNCTION_7	IF_3	IF_7
0x4004bfd	    0xc74424180000	               mov dword [rsp + 0x18], 0	       392	ops.c	FUNCTION_7
0x4004c05	    0x448b98781400	         mov r11d, dword [rax + 0x1478] 	       449	ops.c	FUNCTION_7	IF_3	IF_7
0x4004c0c	          0x4585db	                         test r11d, r11d	       449	ops.c	FUNCTION_7	IF_3	IF_7
0x4004c0f	            0x7515	                           jne 0x4004c26	       449	ops.c	FUNCTION_7	IF_3	IF_7
0x4004c11	          0x4489e0	                           mov eax, r12d	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x4004c14	              0x99	                                     cdq	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x4004c15	            0xf7fd	                                idiv ebp	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x4004c17	          0x8d041a	                    lea eax, [rdx + rbx]	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x4004c1a	              0x99	                                     cdq	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x4004c1b	            0xf7fd	                                idiv ebp	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x4004c1d	            0x85c0	                           test eax, eax	       452	ops.c	FUNCTION_7	IF_3	IF_8
0x4004c1f	        0x89442418	             mov dword [rsp + 0x18], eax	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x4004c23	           0xf45da	                         cmovne ebx, edx	       452	ops.c	FUNCTION_7	IF_3	IF_8
0x4004c26	      0x448b542440	           mov r10d, dword [rsp + 0x40] 	       456	ops.c	FUNCTION_7	IF_3
0x4004c2b	            0x31ed	                            xor ebp, ebp	       456	ops.c	FUNCTION_7	IF_3
0x4004c2d	          0x4585d2	                         test r10d, r10d	       456	ops.c	FUNCTION_7	IF_3
0x4004c30	        0x400f95c5	                               setne bpl	       456	ops.c	FUNCTION_7	IF_3
0x4004c34	        0x2b6c2474	             sub ebp, dword [rsp + 0x74]	       456	ops.c	FUNCTION_7	IF_3
0x4004c38	         0x36c2458	             add ebp, dword [rsp + 0x58]	       456	ops.c	FUNCTION_7	IF_3
0x4004c3c	        0x896c2458	             mov dword [rsp + 0x58], ebp	       456	ops.c	FUNCTION_7	IF_3
0x4004c40	      0xe800000000	                          call 0x4004c45	       457	ops.c	FUNCTION_7	IF_3	CALL_6
0x4004c45	          0x83c001	                              add eax, 1	       457	ops.c	FUNCTION_7	IF_3	CALL_6
0x4004c48	            0x89c1	                            mov ecx, eax	       457	ops.c	FUNCTION_7	IF_3	CALL_6
0x4004c4a	        0x8b442418	            mov eax, dword [rsp + 0x18] 	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x4004c4e	        0x894c242c	             mov dword [rsp + 0x2c], ecx	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x4004c52	        0x8d7c0500	                    lea edi, [rbp + rax]	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x4004c56	             0x1df	                            add edi, ebx	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x4004c58	             0x1cf	                            add edi, ecx	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x4004c5a	      0xe800000000	                          call 0x4004c5f	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x4004c5f	          0x4885c0	                           test rax, rax	       459	ops.c	FUNCTION_7	IF_3	IF_9
0x4004c62	          0x4989c4	                            mov r12, rax	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x4004c65	     0xf84d9feffff	                            je 0x4004b44	       459	ops.c	FUNCTION_7	IF_3	IF_9
0x4004c6b	        0x8b6c2418	            mov ebp, dword [rsp + 0x18] 	        90	string3.h	FUNCTION_95	CALL_6
0x4004c6f	        0x8b542458	            mov edx, dword [rsp + 0x58] 	        90	string3.h	FUNCTION_95	CALL_6
0x4004c73	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_95	CALL_6
0x4004c75	          0x4889c7	                            mov rdi, rax	        90	string3.h	FUNCTION_95	CALL_6
0x4004c78	             0x1ea	                            add edx, ebp	        90	string3.h	FUNCTION_95	CALL_6
0x4004c7a	          0x4863ed	                         movsxd rbp, ebp	       463	ops.c	FUNCTION_7	IF_3	CALL_10
0x4004c7d	             0x1da	                            add edx, ebx	        90	string3.h	FUNCTION_95	CALL_6
0x4004c7f	         0x354242c	             add edx, dword [rsp + 0x2c]	        90	string3.h	FUNCTION_95	CALL_6
0x4004c83	          0x4863db	                         movsxd rbx, ebx	       464	ops.c	FUNCTION_7	IF_3	CALL_11
0x4004c86	          0x4863d2	                         movsxd rdx, edx	        90	string3.h	FUNCTION_95	CALL_6
0x4004c89	      0xe800000000	                          call 0x4004c8e	        90	string3.h	FUNCTION_95	CALL_6
0x4004c8e	      0x4863542458	         movsxd rdx, dword [rsp + 0x58] 	        59	string3.h	FUNCTION_93	CALL_3
0x4004c93	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	        59	string3.h	FUNCTION_93	CALL_3
0x4004c98	          0x4c89e7	                            mov rdi, r12	        59	string3.h	FUNCTION_93	CALL_3
0x4004c9b	      0xe800000000	                          call 0x4004ca0	        59	string3.h	FUNCTION_93	CALL_3
0x4004ca0	      0x48637c2458	         movsxd rdi, dword [rsp + 0x58] 	        90	string3.h	FUNCTION_95	CALL_6
0x4004ca5	          0x4889ea	                            mov rdx, rbp	        90	string3.h	FUNCTION_95	CALL_6
0x4004ca8	      0xbe09000000	                              mov esi, 9	        90	string3.h	FUNCTION_95	CALL_6
0x4004cad	          0x4c01e7	                            add rdi, r12	        90	string3.h	FUNCTION_95	CALL_6
0x4004cb0	      0xe800000000	                          call 0x4004cb5	        90	string3.h	FUNCTION_95	CALL_6
0x4004cb5	      0x48637c2458	         movsxd rdi, dword [rsp + 0x58] 	        90	string3.h	FUNCTION_95	CALL_6
0x4004cba	          0x4889da	                            mov rdx, rbx	        90	string3.h	FUNCTION_95	CALL_6
0x4004cbd	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x4004cc2	          0x4801eb	                            add rbx, rbp	        59	string3.h	FUNCTION_93	CALL_3
0x4004cc5	          0x4801ef	                            add rdi, rbp	        90	string3.h	FUNCTION_95	CALL_6
0x4004cc8	          0x4c01e7	                            add rdi, r12	        90	string3.h	FUNCTION_95	CALL_6
0x4004ccb	      0xe800000000	                          call 0x4004cd0	        90	string3.h	FUNCTION_95	CALL_6
0x4004cd0	      0x48637c2458	         movsxd rdi, dword [rsp + 0x58] 	        59	string3.h	FUNCTION_93	CALL_3
0x4004cd5	      0x486354242c	         movsxd rdx, dword [rsp + 0x2c] 	        59	string3.h	FUNCTION_93	CALL_3
0x4004cda	      0x488b742450	            mov rsi, qword [rsp + 0x50] 	        59	string3.h	FUNCTION_93	CALL_3
0x4004cdf	          0x4801df	                            add rdi, rbx	        59	string3.h	FUNCTION_93	CALL_3
0x4004ce2	          0x4c01e7	                            add rdi, r12	        59	string3.h	FUNCTION_93	CALL_3
0x4004ce5	      0xe800000000	                          call 0x4004cea	        59	string3.h	FUNCTION_93	CALL_3
0x4004cea	    0x488b05000000	            mov rax, qword [0x04004cf1] 	       560	ops.c	FUNCTION_7	CALL_23
0x4004cf1	            0x31d2	                            xor edx, edx	       560	ops.c	FUNCTION_7	CALL_23
0x4004cf3	          0x4c89e6	                            mov rsi, r12	       560	ops.c	FUNCTION_7	CALL_23
0x4004cf6	        0x488b7838	            mov rdi, qword [rax + 0x38] 	       560	ops.c	FUNCTION_7	CALL_23
0x4004cfa	      0xe800000000	                          call 0x4004cff	       560	ops.c	FUNCTION_7	CALL_23
0x4004cff	    0x488b05000000	            mov rax, qword [0x04004d06] 	       561	ops.c	FUNCTION_7	CALL_24
0x4004d06	        0x8b742458	            mov esi, dword [rsp + 0x58] 	       561	ops.c	FUNCTION_7	CALL_24
0x4004d0a	        0x488b7838	            mov rdi, qword [rax + 0x38] 	       561	ops.c	FUNCTION_7	CALL_24
0x4004d0e	      0xe800000000	                          call 0x4004d13	       561	ops.c	FUNCTION_7	CALL_24
0x4004d13	        0x8b442410	            mov eax, dword [rsp + 0x10] 	       562	ops.c	FUNCTION_7
0x4004d17	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	       563	ops.c	FUNCTION_7
0x4004d1b	    0x890500000000	            mov dword [0x04004d21], eax 	       562	ops.c	FUNCTION_7
0x4004d21	    0x488b05000000	            mov rax, qword [0x04004d28] 	       563	ops.c	FUNCTION_7
0x4004d28	          0x894840	             mov dword [rax + 0x40], ecx	       563	ops.c	FUNCTION_7
0x4004d2b	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	       565	ops.c	FUNCTION_7
0x4004d2f	    0x890d00000000	            mov dword [0x04004d35], ecx 	       565	ops.c	FUNCTION_7
0x4004d35	      0xe9ecfbffff	                           jmp 0x4004926	       565	ops.c	FUNCTION_7
0x4004d3a	    0x660f1f440000	                    nop word [rax + rax]	       565	ops.c	FUNCTION_7
0x4004d40	    0x488b05000000	            mov rax, qword [0x04004d47] 	       242	ops.c	FUNCTION_5	IF_2
0x4004d47	          0x8b4040	            mov eax, dword [rax + 0x40] 	       242	ops.c	FUNCTION_5	IF_2
0x4004d4a	        0x89442404	                mov dword [rsp + 4], eax	       242	ops.c	FUNCTION_5	IF_2
0x4004d4e	      0xe9abfbffff	                           jmp 0x40048fe	       242	ops.c	FUNCTION_5	IF_2
0x4004d53	       0xf1f440000	                   nop dword [rax + rax]	       242	ops.c	FUNCTION_5	IF_2
0x4004d58	    0x488b05000000	            mov rax, qword [0x04004d5f] 	       268	ops.c	FUNCTION_5	IF_6
0x4004d5f	        0x498b5520	            mov rdx, qword [r13 + 0x20] 	       268	ops.c	FUNCTION_5	IF_6
0x4004d63	        0x8b4c2404	                mov ecx, dword [rsp + 4]	       269	ops.c	FUNCTION_5	IF_6
0x4004d67	        0x48895038	             mov qword [rax + 0x38], rdx	       268	ops.c	FUNCTION_5	IF_6
0x4004d6b	          0x894840	             mov dword [rax + 0x40], ecx	       269	ops.c	FUNCTION_5	IF_6
0x4004d6e	      0xe94cfcffff	                           jmp 0x40049bf	       269	ops.c	FUNCTION_5	IF_6
0x4004d73	            0x31ff	                            xor edi, edi	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_11
0x4004d75	      0xbe00000000	                              mov esi, 0	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_11
0x4004d7a	      0xe800000000	                          call 0x4004d7f	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_11
0x4004d7f	    0x488b3d000000	            mov rdi, qword [0x04004d86] 	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004d86	          0x4889c1	                            mov rcx, rax	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004d89	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004d8c	          0x4989d8	                             mov r8, rbx	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004d8f	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004d96	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004d9b	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004d9d	      0xe800000000	                          call 0x4004da2	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004da2	      0xe991fcffff	                           jmp 0x4004a38	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004da7	    0x660f1f840000	                    nop word [rax + rax]	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004db0	        0x498b5520	            mov rdx, qword [r13 + 0x20] 	       273	ops.c	FUNCTION_5	ELSE_3	IF_7
0x4004db4	    0x488b05000000	            mov rax, qword [0x04004dbb] 	       273	ops.c	FUNCTION_5	ELSE_3	IF_7
0x4004dbb	      0xbf06000000	                              mov edi, 6	       274	ops.c	FUNCTION_5	ELSE_3	IF_7	CALL_7
0x4004dc0	        0x48895038	             mov qword [rax + 0x38], rdx	       273	ops.c	FUNCTION_5	ELSE_3	IF_7
0x4004dc4	      0xe800000000	                          call 0x4004dc9	       274	ops.c	FUNCTION_5	ELSE_3	IF_7	CALL_7
0x4004dc9	      0xe9f1fbffff	                           jmp 0x40049bf	       274	ops.c	FUNCTION_5	ELSE_3	IF_7	CALL_7
0x4004dce	            0x6690	                                     nop	       274	ops.c	FUNCTION_5	ELSE_3	IF_7	CALL_7
0x4004dd0	        0x4183fe01	                             cmp r14d, 1	       293	ops.c	FUNCTION_5	IF_8	IF_10	IF_11
0x4004dd4	     0xf843e010000	                            je 0x4004f18	       293	ops.c	FUNCTION_5	IF_8	IF_10	IF_11
0x4004dda	            0x31ff	                            xor edi, edi	       296	ops.c	FUNCTION_5	IF_8	IF_10	CALL_10
0x4004ddc	      0xbe00000000	                              mov esi, 0	       296	ops.c	FUNCTION_5	IF_8	IF_10	CALL_10
0x4004de1	      0xe800000000	                          call 0x4004de6	       296	ops.c	FUNCTION_5	IF_8	IF_10	CALL_10
0x4004de6	    0x488b3d000000	            mov rdi, qword [0x04004ded] 	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004ded	          0x4889c1	                            mov rcx, rax	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004df0	          0x4589f1	                           mov r9d, r14d	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004df3	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004df6	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004dfd	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004e02	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004e04	      0xe800000000	                          call 0x4004e09	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004e09	      0xe92afcffff	                           jmp 0x4004a38	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004e0e	      0x448b4c2440	            mov r9d, dword [rsp + 0x40] 	       495	ops.c	FUNCTION_7	ELSE_4	IF_10
0x4004e13	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	       481	ops.c	FUNCTION_7	ELSE_4
0x4004e18	          0x4585c9	                           test r9d, r9d	       495	ops.c	FUNCTION_7	ELSE_4	IF_10
0x4004e1b	      0x4889542438	             mov qword [rsp + 0x38], rdx	       481	ops.c	FUNCTION_7	ELSE_4
0x4004e20	          0x4889d7	                            mov rdi, rdx	       495	ops.c	FUNCTION_7	ELSE_4	IF_10
0x4004e23	            0x741d	                            je 0x4004e42	       495	ops.c	FUNCTION_7	ELSE_4	IF_10
0x4004e25	    0x448b05000000	            mov r8d, dword [0x04004e2c] 	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x4004e2c	      0xb801000000	                              mov eax, 1	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x4004e31	          0x4585c0	                           test r8d, r8d	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x4004e34	     0xf85e1010000	                           jne 0x400501b	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x4004e3a	          0x4801c2	                            add rdx, rax	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x4004e3d	      0x4889542438	             mov qword [rsp + 0x38], rdx	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x4004e42	           0xfb602	                   movzx eax, byte [rdx]	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4004e45	        0x8b6c245c	            mov ebp, dword [rsp + 0x5c] 	       499	ops.c	FUNCTION_7	ELSE_4
0x4004e49	            0x3c20	                            cmp al, 0x20	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4004e4b	            0x7408	                            je 0x4004e55	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4004e4d	            0x3c09	                               cmp al, 9	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4004e4f	     0xf85b5000000	                           jne 0x4004f0a	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4004e55	            0x89cb	                            mov ebx, ecx	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4004e57	            0xeb0c	                           jmp 0x4004e65	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4004e59	     0xf1f80000000	                         nop dword [rax]	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4004e60	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4004e65	      0x488d742438	                   lea rsi, [rsp + 0x38]	       503	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_15
0x4004e6a	            0x89ea	                            mov edx, ebp	       503	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_15
0x4004e6c	      0xe800000000	                          call 0x4004e71	       503	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_15
0x4004e71	             0x1c5	                            add ebp, eax	       504	ops.c	FUNCTION_7	ELSE_4	WHILE_1
0x4004e73	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4004e78	           0xfb600	                   movzx eax, byte [rax]	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4004e7b	            0x3c20	                            cmp al, 0x20	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4004e7d	            0x74e1	                            je 0x4004e60	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4004e7f	            0x3c09	                               cmp al, 9	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4004e81	            0x74dd	                            je 0x4004e60	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4004e83	          0x4863cb	                         movsxd rcx, ebx	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4004e86	      0x448b44245c	            mov r8d, dword [rsp + 0x5c] 	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4004e8b	      0x488b5c2450	            mov rbx, qword [rsp + 0x50] 	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4004e90	            0x89e8	                            mov eax, ebp	       514	ops.c	FUNCTION_7	ELSE_4
0x4004e92	        0x412b4564	             sub eax, dword [r13 + 0x64]	       514	ops.c	FUNCTION_7	ELSE_4
0x4004e96	        0x8b7c2440	            mov edi, dword [rsp + 0x40] 	       524	ops.c	FUNCTION_7	ELSE_4	IF_11
0x4004e9a	            0x4898	                                    cdqe	       514	ops.c	FUNCTION_7	ELSE_4
0x4004e9c	          0x4839c8	                            cmp rax, rcx	       514	ops.c	FUNCTION_7	ELSE_4
0x4004e9f	        0x480f46c8	                         cmovbe rcx, rax	       514	ops.c	FUNCTION_7	ELSE_4
0x4004ea3	            0x29cd	                            sub ebp, ecx	       514	ops.c	FUNCTION_7	ELSE_4
0x4004ea5	            0x85ff	                           test edi, edi	       524	ops.c	FUNCTION_7	ELSE_4	IF_11
0x4004ea7	            0x7405	                            je 0x4004eae	       524	ops.c	FUNCTION_7	ELSE_4	IF_11
0x4004ea9	      0x442b44247c	             sub r8d, dword [rsp + 0x7c]	       525	ops.c	FUNCTION_7	ELSE_4	IF_11
0x4004eae	          0x4139e8	                            cmp r8d, ebp	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x4004eb1	     0xf8dbb000000	                           jge 0x4004f72	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x4004eb7	      0x4c896c2418	             mov qword [rsp + 0x18], r13	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x4004ebc	          0x4589c5	                           mov r13d, r8d	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x4004ebf	            0xeb16	                           jmp 0x4004ed7	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x4004ec1	     0xf1f80000000	                         nop dword [rax]	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x4004ec8	          0x4801c3	                            add rbx, rax	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x4004ecb	          0x4439e5	                           cmp ebp, r12d	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x4004ece	          0x4589e5	                          mov r13d, r12d	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x4004ed1	     0xf8e14010000	                           jle 0x4004feb	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x4004ed7	          0x4489ea	                           mov edx, r13d	       531	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_16
0x4004eda	          0x4889de	                            mov rsi, rbx	       531	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_16
0x4004edd	          0x4889df	                            mov rdi, rbx	       531	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_16
0x4004ee0	      0xe800000000	                          call 0x4004ee5	       531	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_16
0x4004ee5	        0x468d2428	                   lea r12d, [rax + r13]	       533	ops.c	FUNCTION_7	ELSE_4	WHILE_2	IF_12
0x4004ee9	          0x4439e5	                           cmp ebp, r12d	       533	ops.c	FUNCTION_7	ELSE_4	WHILE_2	IF_12
0x4004eec	            0x7c7c	                            jl 0x4004f6a	       533	ops.c	FUNCTION_7	ELSE_4	WHILE_2	IF_12
0x4004eee	    0x8b3500000000	            mov esi, dword [0x04004ef4] 	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x4004ef4	      0xb801000000	                              mov eax, 1	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x4004ef9	            0x85f6	                           test esi, esi	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x4004efb	            0x74cb	                            je 0x4004ec8	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x4004efd	          0x4889df	                            mov rdi, rbx	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x4004f00	    0xff1500000000	                 call qword [0x04004f06]	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x4004f06	            0x4898	                                    cdqe	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x4004f08	            0xebbe	                           jmp 0x4004ec8	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x4004f0a	          0x4889fb	                            mov rbx, rdi	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4004f0d	          0x4189e8	                            mov r8d, ebp	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4004f10	      0xe97bffffff	                           jmp 0x4004e90	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4004f15	           0xf1f00	                         nop dword [rax]	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4004f18	            0x31ff	                            xor edi, edi	       294	ops.c	FUNCTION_5	IF_8	IF_10	CALL_9
0x4004f1a	      0xbe00000000	                              mov esi, 0	       294	ops.c	FUNCTION_5	IF_8	IF_10	CALL_9
0x4004f1f	      0xe800000000	                          call 0x4004f24	       294	ops.c	FUNCTION_5	IF_8	IF_10	CALL_9
0x4004f24	    0x488b3d000000	            mov rdi, qword [0x04004f2b] 	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004f2b	          0x4889c1	                            mov rcx, rax	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004f2e	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004f31	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004f38	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004f3d	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004f3f	      0xe800000000	                          call 0x4004f44	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004f44	      0xe9effaffff	                           jmp 0x4004a38	        33	stdio2.h	FUNCTION_104	CALL_1
0x4004f49	    0x8b0500000000	            mov eax, dword [0x04004f4f] 	       425	ops.c	FUNCTION_7	IF_3	IF_4	IF_5
0x4004f4f	            0x85c0	                           test eax, eax	       425	ops.c	FUNCTION_7	IF_3	IF_4	IF_5
0x4004f51	     0xf859b000000	                           jne 0x4004ff2	       425	ops.c	FUNCTION_7	IF_3	IF_4	IF_5
0x4004f57	      0x488b442450	            mov rax, qword [rsp + 0x50] 	       437	ops.c	FUNCTION_7	IF_3	IF_4	ELSE_2
0x4004f5c	        0x488d7801	                      lea rdi, [rax + 1]	       437	ops.c	FUNCTION_7	IF_3	IF_4	ELSE_2
0x4004f60	      0x48897c2450	             mov qword [rsp + 0x50], rdi	       437	ops.c	FUNCTION_7	IF_3	IF_4	ELSE_2
0x4004f65	      0xe953fcffff	                           jmp 0x4004bbd	       437	ops.c	FUNCTION_7	IF_3	IF_4	ELSE_2
0x4004f6a	          0x4589e8	                           mov r8d, r13d	       437	ops.c	FUNCTION_7	IF_3	IF_4	ELSE_2
0x4004f6d	      0x4c8b6c2418	            mov r13, qword [rsp + 0x18] 	       437	ops.c	FUNCTION_7	IF_3	IF_4	ELSE_2
0x4004f72	          0x4589c4	                           mov r12d, r8d	       533	ops.c	FUNCTION_7	ELSE_4	WHILE_2	IF_12
0x4004f75	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	       550	ops.c	FUNCTION_7	ELSE_4	CALL_18
0x4004f7a	      0x482b5c2420	             sub rbx, qword [rsp + 0x20]	       548	ops.c	FUNCTION_7	ELSE_4
0x4004f7f	          0x4429e5	                           sub ebp, r12d	       542	ops.c	FUNCTION_7	ELSE_4
0x4004f82	      0xe800000000	                          call 0x4004f87	       550	ops.c	FUNCTION_7	ELSE_4	CALL_18
0x4004f87	        0x8d7c0501	                lea edi, [rbp + rax + 1]	       552	ops.c	FUNCTION_7	ELSE_4	CALL_19
0x4004f8b	             0x1df	                            add edi, ebx	       552	ops.c	FUNCTION_7	ELSE_4	CALL_19
0x4004f8d	      0xe800000000	                          call 0x4004f92	       552	ops.c	FUNCTION_7	ELSE_4	CALL_19
0x4004f92	          0x4885c0	                           test rax, rax	       553	ops.c	FUNCTION_7	ELSE_4	IF_13
0x4004f95	          0x4989c4	                            mov r12, rax	       552	ops.c	FUNCTION_7	ELSE_4	CALL_19
0x4004f98	     0xf84a6fbffff	                            je 0x4004b44	       553	ops.c	FUNCTION_7	ELSE_4	IF_13
0x4004f9e	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	        59	string3.h	FUNCTION_93	CALL_3
0x4004fa3	          0x4889da	                            mov rdx, rbx	        59	string3.h	FUNCTION_93	CALL_3
0x4004fa6	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_93	CALL_3
0x4004fa9	      0xe800000000	                          call 0x4004fae	        59	string3.h	FUNCTION_93	CALL_3
0x4004fae	        0x498d3c1c	                    lea rdi, [r12 + rbx]	        90	string3.h	FUNCTION_95	CALL_6
0x4004fb2	          0x4889ea	                            mov rdx, rbp	        90	string3.h	FUNCTION_95	CALL_6
0x4004fb5	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x4004fba	          0x4801dd	                            add rbp, rbx	        59	string3.h	FUNCTION_93	CALL_3
0x4004fbd	      0xe800000000	                          call 0x4004fc2	        90	string3.h	FUNCTION_95	CALL_6
0x4004fc2	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0x4004fc7	          0x4889f7	                            mov rdi, rsi	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0x4004fca	      0x4889742418	             mov qword [rsp + 0x18], rsi	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0x4004fcf	      0xe800000000	                          call 0x4004fd4	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0x4004fd4	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	        59	string3.h	FUNCTION_93	CALL_3
0x4004fd9	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_93	CALL_3
0x4004fdd	        0x498d3c2c	                    lea rdi, [r12 + rbp]	        59	string3.h	FUNCTION_93	CALL_3
0x4004fe1	      0xe800000000	                          call 0x4004fe6	        59	string3.h	FUNCTION_93	CALL_3
0x4004fe6	      0xe9fffcffff	                           jmp 0x4004cea	        59	string3.h	FUNCTION_93	CALL_3
0x4004feb	      0x4c8b6c2418	            mov r13, qword [rsp + 0x18] 	        59	string3.h	FUNCTION_93	CALL_3
0x4004ff0	            0xeb83	                           jmp 0x4004f75	        59	string3.h	FUNCTION_93	CALL_3
0x4004ff2	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	       427	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x4004ff7	    0xff1500000000	                 call qword [0x04004ffd]	       427	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x4004ffd	          0x83f801	                              cmp eax, 1	       427	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x4005000	     0xf8451ffffff	                            je 0x4004f57	       427	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x4005006	    0xc74424400000	               mov dword [rsp + 0x40], 0	       432	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	ELSE_1
0x400500e	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	       432	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	ELSE_1
0x4005013	          0x4531e4	                          xor r12d, r12d	       431	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	ELSE_1
0x4005016	      0xe9a2fbffff	                           jmp 0x4004bbd	       431	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	ELSE_1
0x400501b	        0x894c2418	             mov dword [rsp + 0x18], ecx	       431	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	ELSE_1
0x400501f	    0xff1500000000	                 call qword [0x04005025]	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x4005025	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x400502a	            0x4898	                                    cdqe	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x400502c	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x4005031	      0x48634c2418	         movsxd rcx, dword [rsp + 0x18] 	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x4005036	      0xe9fffdffff	                           jmp 0x4004e3a	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x400503b	      0xe800000000	              call sym.get_register_name	       318	ops.c	FUNCTION_5
paragraph_start	SWITCH,0:IF,7:WHILE,0:DO,0:FOR,0:ELSE,0:CALL,9:functions,0	78
0x40062c0	            0x4154	                                push r12	      5296	ops.c	FUNCTION_64
0x40062c2	              0x55	                                push rbp	      5296	ops.c	FUNCTION_64
0x40062c3	              0x53	                                push rbx	      5296	ops.c	FUNCTION_64
0x40062c4	        0x4883ec20	                           sub rsp, 0x20	      5296	ops.c	FUNCTION_64
0x40062c8	    0x64488b042528	                mov rax, qword fs:[0x28]	      5296	ops.c	FUNCTION_64
0x40062d1	      0x4889442418	             mov qword [rsp + 0x18], rax	      5296	ops.c	FUNCTION_64
0x40062d6	            0x31c0	                            xor eax, eax	      5296	ops.c	FUNCTION_64
0x40062d8	        0x4883ff01	                              cmp rdi, 1	      5306	ops.c	FUNCTION_64	IF_1
0x40062dc	    0xc70424000000	                      mov dword [rsp], 0	      5299	ops.c	FUNCTION_64
0x40062e3	    0x48c744240800	                  mov qword [rsp + 8], 0	      5300	ops.c	FUNCTION_64
0x40062ec	            0x7e14	                           jle 0x4006302	      5306	ops.c	FUNCTION_64	IF_1
0x40062ee	        0x488d6fff	                      lea rbp, [rdi - 1]	      5309	ops.c	FUNCTION_64	CALL_1
0x40062f2	          0x4889fb	                            mov rbx, rdi	      5309	ops.c	FUNCTION_64	CALL_1
0x40062f5	          0x4889ef	                            mov rdi, rbp	      5309	ops.c	FUNCTION_64	CALL_1
0x40062f8	      0xe800000000	                          call 0x40062fd	      5309	ops.c	FUNCTION_64	CALL_1
0x40062fd	          0x803800	                       cmp byte [rax], 0	      5310	ops.c	FUNCTION_64	IF_2
0x4006300	            0x7526	                           jne 0x4006328	      5310	ops.c	FUNCTION_64	IF_2
0x4006302	      0xb801000000	                              mov eax, 1	      5307	ops.c	FUNCTION_64	IF_1
0x4006307	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      5343	ops.c	FUNCTION_64
0x400630c	    0x644833142528	                xor rdx, qword fs:[0x28]	      5343	ops.c	FUNCTION_64
0x4006315	     0xf85b6000000	                           jne 0x40063d1	      5343	ops.c	FUNCTION_64
0x400631b	        0x4883c420	                           add rsp, 0x20	      5343	ops.c	FUNCTION_64
0x400631f	              0x5b	                                 pop rbx	      5343	ops.c	FUNCTION_64
0x4006320	              0x5d	                                 pop rbp	      5343	ops.c	FUNCTION_64
0x4006321	            0x415c	                                 pop r12	      5343	ops.c	FUNCTION_64
0x4006323	              0xc3	                                     ret	      5343	ops.c	FUNCTION_64
0x4006324	         0xf1f4000	                         nop dword [rax]	      5343	ops.c	FUNCTION_64
0x4006328	      0xbf71000000	                           mov edi, 0x71	      5314	ops.c	FUNCTION_64	CALL_2
0x400632d	      0xe800000000	                          call 0x4006332	      5314	ops.c	FUNCTION_64	CALL_2
0x4006332	      0x488d542408	                      lea rdx, [rsp + 8]	      5316	ops.c	FUNCTION_64	IF_3	CALL_3
0x4006337	            0x89c1	                            mov ecx, eax	      5316	ops.c	FUNCTION_64	IF_3	CALL_3
0x4006339	          0x4889e6	                            mov rsi, rsp	      5316	ops.c	FUNCTION_64	IF_3	CALL_3
0x400633c	          0x4889ef	                            mov rdi, rbp	      5316	ops.c	FUNCTION_64	IF_3	CALL_3
0x400633f	          0x4189c4	                           mov r12d, eax	      5314	ops.c	FUNCTION_64	CALL_2
0x4006342	      0xe8c9abffff	                  call sym.fmt_check_par	      5316	ops.c	FUNCTION_64	IF_3	CALL_3
0x4006347	            0x85c0	                           test eax, eax	      5316	ops.c	FUNCTION_64	IF_3	CALL_3
0x4006349	            0x75b7	                           jne 0x4006302	      5316	ops.c	FUNCTION_64	IF_3	CALL_3
0x400634b	      0x488d542410	                   lea rdx, [rsp + 0x10]	      5323	ops.c	FUNCTION_64	IF_4	CALL_4
0x4006350	      0x488d742404	                      lea rsi, [rsp + 4]	      5323	ops.c	FUNCTION_64	IF_4	CALL_4
0x4006355	          0x4489e1	                           mov ecx, r12d	      5323	ops.c	FUNCTION_64	IF_4	CALL_4
0x4006358	          0x4889df	                            mov rdi, rbx	      5323	ops.c	FUNCTION_64	IF_4	CALL_4
0x400635b	      0xe8b0abffff	                  call sym.fmt_check_par	      5323	ops.c	FUNCTION_64	IF_4	CALL_4
0x4006360	            0x85c0	                           test eax, eax	      5323	ops.c	FUNCTION_64	IF_4	CALL_4
0x4006362	            0x759e	                           jne 0x4006302	      5323	ops.c	FUNCTION_64	IF_4	CALL_4
0x4006364	      0xbf77000000	                           mov edi, 0x77	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x4006369	      0xe800000000	                          call 0x400636e	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x400636e	            0x85c0	                           test eax, eax	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x4006370	            0x740c	                            je 0x400637e	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x4006372	          0x4889ef	                            mov rdi, rbp	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x4006375	      0xe8c69cffff	                  call sym.ends_in_white	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x400637a	            0x85c0	                           test eax, eax	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x400637c	            0x7484	                            je 0x4006302	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x400637e	      0xbf6e000000	                           mov edi, 0x6e	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x4006383	      0xe800000000	                          call 0x4006388	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x4006388	            0x85c0	                           test eax, eax	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x400638a	            0x751f	                           jne 0x40063ab	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x400638c	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      5337	ops.c	FUNCTION_64	IF_7	CALL_9
0x4006390	          0x8b3424	                    mov esi, dword [rsp]	      5337	ops.c	FUNCTION_64	IF_7	CALL_9
0x4006393	            0x31c0	                            xor eax, eax	      4763	ops.c	FUNCTION_56	IF_1
0x4006395	            0x85c9	                           test ecx, ecx	      4763	ops.c	FUNCTION_56	IF_1
0x4006397	           0xf94c0	                                 sete al	      4763	ops.c	FUNCTION_56	IF_1
0x400639a	            0x85f6	                           test esi, esi	      4762	ops.c	FUNCTION_56	IF_1
0x400639c	            0x751f	                           jne 0x40063bd	      4762	ops.c	FUNCTION_56	IF_1
0x400639e	            0x85c0	                           test eax, eax	      5307	ops.c	FUNCTION_64	IF_1
0x40063a0	           0xf94c0	                                 sete al	      5307	ops.c	FUNCTION_64	IF_1
0x40063a3	           0xfb6c0	                           movzx eax, al	      5307	ops.c	FUNCTION_64	IF_1
0x40063a6	      0xe95cffffff	                           jmp 0x4006307	      5307	ops.c	FUNCTION_64	IF_1
0x40063ab	          0x4889df	                            mov rdi, rbx	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x40063ae	      0xe800000000	                          call 0x40063b3	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x40063b3	            0x85c0	                           test eax, eax	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x40063b5	     0xf8f47ffffff	                            jg 0x4006302	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x40063bb	            0xebcf	                           jmp 0x400638c	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x40063bd	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x40063c2	      0x488b542408	                mov rdx, qword [rsp + 8]	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x40063c7	          0x4889ef	                            mov rdi, rbp	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x40063ca	      0xe8f1b9ffff	             call sym.same_leader.part.0	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x40063cf	            0xebcd	                           jmp 0x400639e	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x40063d1	      0xe800000000	                          call 0x40063d6	      5343	ops.c	FUNCTION_64
format_lines	SWITCH,0:IF,25:WHILE,1:DO,0:FOR,1:ELSE,8:CALL,34:functions,0	386
0x4005a30	            0x4157	                                push r15	      4960	ops.c	FUNCTION_60
0x4005a32	            0x4156	                                push r14	      4960	ops.c	FUNCTION_60
0x4005a34	          0x4989fe	                            mov r14, rdi	      4960	ops.c	FUNCTION_60
0x4005a37	            0x4155	                                push r13	      4960	ops.c	FUNCTION_60
0x4005a39	            0x4154	                                push r12	      4960	ops.c	FUNCTION_60
0x4005a3b	      0xbf01000000	                              mov edi, 1	      4989	ops.c	FUNCTION_60	CALL_1
0x4005a40	              0x55	                                push rbp	      4960	ops.c	FUNCTION_60
0x4005a41	              0x53	                                push rbx	      4960	ops.c	FUNCTION_60
0x4005a42	            0x89f3	                            mov ebx, esi	      4960	ops.c	FUNCTION_60
0x4005a44	      0xbd01000000	                              mov ebp, 1	      4960	ops.c	FUNCTION_60
0x4005a49	        0x4883ec68	                           sub rsp, 0x68	      4960	ops.c	FUNCTION_60
0x4005a4d	    0x64488b042528	                mov rax, qword fs:[0x28]	      4960	ops.c	FUNCTION_60
0x4005a56	      0x4889442458	             mov qword [rsp + 0x58], rax	      4960	ops.c	FUNCTION_60
0x4005a5b	            0x31c0	                            xor eax, eax	      4960	ops.c	FUNCTION_60
0x4005a5d	    0x8b0500000000	            mov eax, dword [0x04005a63] 	      4986	ops.c	FUNCTION_60
0x4005a63	    0xc74424400000	               mov dword [rsp + 0x40], 0	      4968	ops.c	FUNCTION_60
0x4005a6b	    0x48c744244800	               mov qword [rsp + 0x48], 0	      4970	ops.c	FUNCTION_60
0x4005a74	        0x89442424	             mov dword [rsp + 0x24], eax	      4986	ops.c	FUNCTION_60
0x4005a78	      0xe800000000	                          call 0x4005a7d	      4989	ops.c	FUNCTION_60	CALL_1
0x4005a7d	          0x8d0440	                  lea eax, [rax + rax*2]	      4989	ops.c	FUNCTION_60	CALL_1
0x4005a80	      0xbf71000000	                           mov edi, 0x71	      4993	ops.c	FUNCTION_60	CALL_2
0x4005a85	        0x8944242c	             mov dword [rsp + 0x2c], eax	      4989	ops.c	FUNCTION_60	CALL_1
0x4005a89	      0xe800000000	                          call 0x4005a8e	      4993	ops.c	FUNCTION_60	CALL_2
0x4005a8e	      0xbf32000000	                           mov edi, 0x32	      4995	ops.c	FUNCTION_60	CALL_3
0x4005a93	          0x4189c7	                           mov r15d, eax	      4993	ops.c	FUNCTION_60	CALL_2
0x4005a96	        0x8944240c	              mov dword [rsp + 0xc], eax	      4993	ops.c	FUNCTION_60	CALL_2
0x4005a9a	      0xe800000000	                          call 0x4005a9f	      4995	ops.c	FUNCTION_60	CALL_3
0x4005a9f	      0xbf6e000000	                           mov edi, 0x6e	      4996	ops.c	FUNCTION_60	CALL_4
0x4005aa4	        0x8944243c	             mov dword [rsp + 0x3c], eax	      4995	ops.c	FUNCTION_60	CALL_3
0x4005aa8	      0xe800000000	                          call 0x4005aad	      4996	ops.c	FUNCTION_60	CALL_4
0x4005aad	      0xbf77000000	                           mov edi, 0x77	      4997	ops.c	FUNCTION_60	CALL_5
0x4005ab2	        0x8944241c	             mov dword [rsp + 0x1c], eax	      4996	ops.c	FUNCTION_60	CALL_4
0x4005ab6	      0xe800000000	                          call 0x4005abb	      4997	ops.c	FUNCTION_60	CALL_5
0x4005abb	          0x4189c4	                           mov r12d, eax	      4997	ops.c	FUNCTION_60	CALL_5
0x4005abe	    0x488b05000000	            mov rax, qword [0x04005ac5] 	      5002	ops.c	FUNCTION_60	IF_1
0x4005ac5	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5002	ops.c	FUNCTION_60	IF_1
0x4005ac9	        0x4883ff01	                              cmp rdi, 1	      5002	ops.c	FUNCTION_60	IF_1
0x4005acd	            0x7e23	                           jle 0x4005af2	      5002	ops.c	FUNCTION_60	IF_1
0x4005acf	      0x488d542448	                   lea rdx, [rsp + 0x48]	      5003	ops.c	FUNCTION_60	IF_1	CALL_6
0x4005ad4	      0x488d742440	                   lea rsi, [rsp + 0x40]	      5003	ops.c	FUNCTION_60	IF_1	CALL_6
0x4005ad9	        0x4883ef01	                              sub rdi, 1	      5003	ops.c	FUNCTION_60	IF_1	CALL_6
0x4005add	          0x4489f9	                           mov ecx, r15d	      5003	ops.c	FUNCTION_60	IF_1	CALL_6
0x4005ae0	      0xe82bb4ffff	                  call sym.fmt_check_par	      5003	ops.c	FUNCTION_60	IF_1	CALL_6
0x4005ae5	            0x89c5	                            mov ebp, eax	      5003	ops.c	FUNCTION_60	IF_1	CALL_6
0x4005ae7	    0x488b05000000	            mov rax, qword [0x04005aee] 	      5003	ops.c	FUNCTION_60	IF_1	CALL_6
0x4005aee	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5003	ops.c	FUNCTION_60	IF_1	CALL_6
0x4005af2	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      5010	ops.c	FUNCTION_60	CALL_7
0x4005af6	      0x488d542450	                   lea rdx, [rsp + 0x50]	      5010	ops.c	FUNCTION_60	CALL_7
0x4005afb	      0x488d742444	                   lea rsi, [rsp + 0x44]	      5010	ops.c	FUNCTION_60	CALL_7
0x4005b00	      0xe80bb4ffff	                  call sym.fmt_check_par	      5010	ops.c	FUNCTION_60	CALL_7
0x4005b05	          0x4585e4	                         test r12d, r12d	      5016	ops.c	FUNCTION_60	IF_2
0x4005b08	          0x4189c7	                           mov r15d, eax	      5010	ops.c	FUNCTION_60	CALL_7
0x4005b0b	            0x89e8	                            mov eax, ebp	      5016	ops.c	FUNCTION_60	IF_2
0x4005b0d	       0xf95442413	                 setne byte [rsp + 0x13]	      5016	ops.c	FUNCTION_60	IF_2
0x4005b12	          0x4409f8	                            or eax, r15d	      5016	ops.c	FUNCTION_60	IF_2
0x4005b15	       0xfb64c2413	           movzx ecx, byte [rsp + 0x13] 	      5016	ops.c	FUNCTION_60	IF_2
0x4005b1a	            0x7508	                           jne 0x4005b24	      5016	ops.c	FUNCTION_60	IF_2
0x4005b1c	            0x84c9	                             test cl, cl	      5016	ops.c	FUNCTION_60	IF_2
0x4005b1e	     0xf8504050000	                           jne 0x4006028	      5016	ops.c	FUNCTION_60	IF_2
0x4005b24	          0x4531e4	                          xor r12d, r12d	      5015	ops.c	FUNCTION_60
0x4005b27	            0x85c0	                           test eax, eax	      5015	ops.c	FUNCTION_60
0x4005b29	        0x410f95c4	                              setne r12b	      5015	ops.c	FUNCTION_60
0x4005b2d	    0x488b05000000	            mov rax, qword [0x04005b34] 	      5019	ops.c	FUNCTION_60
0x4005b34	      0x4883683801	               sub qword [rax + 0x38], 1	      5019	ops.c	FUNCTION_60
0x4005b39	          0x4d85f6	                           test r14, r14	      5020	ops.c	FUNCTION_60	FOR_1
0x4005b3c	     0xf8436030000	                            je 0x4005e78	      5020	ops.c	FUNCTION_60	FOR_1
0x4005b42	    0x8b0500000000	            mov eax, dword [0x04005b48] 	      5020	ops.c	FUNCTION_60	FOR_1
0x4005b48	            0x85c0	                           test eax, eax	      5020	ops.c	FUNCTION_60	FOR_1
0x4005b4a	     0xf8528030000	                           jne 0x4005e78	      5020	ops.c	FUNCTION_60	FOR_1
0x4005b50	          0x83fb01	                              cmp ebx, 1	      5020	ops.c	FUNCTION_60	FOR_1
0x4005b53	    0xc74424040000	                  mov dword [rsp + 4], 0	      5020	ops.c	FUNCTION_60	FOR_1
0x4005b5b	          0x4c89f3	                            mov rbx, r14	      5020	ops.c	FUNCTION_60	FOR_1
0x4005b5e	            0x19c0	                            sbb eax, eax	      5020	ops.c	FUNCTION_60	FOR_1
0x4005b60	    0xc74424200100	               mov dword [rsp + 0x20], 1	      5020	ops.c	FUNCTION_60	FOR_1
0x4005b68	    0xc74424080100	                  mov dword [rsp + 8], 1	      5020	ops.c	FUNCTION_60	FOR_1
0x4005b70	            0xf7d0	                                 not eax	      5020	ops.c	FUNCTION_60	FOR_1
0x4005b72	    0xc7442418ffff	     mov dword [rsp + 0x18], 0xffffffff 	      5020	ops.c	FUNCTION_60	FOR_1
0x4005b7a	    0x41bd01000000	                             mov r13d, 1	      5020	ops.c	FUNCTION_60	FOR_1
0x4005b80	          0x83e008	                              and eax, 8	      5020	ops.c	FUNCTION_60	FOR_1
0x4005b83	    0xc74424380000	               mov dword [rsp + 0x38], 0	      5020	ops.c	FUNCTION_60	FOR_1
0x4005b8b	    0xc70424000000	                      mov dword [rsp], 0	      5020	ops.c	FUNCTION_60	FOR_1
0x4005b92	        0x89442428	             mov dword [rsp + 0x28], eax	      5020	ops.c	FUNCTION_60	FOR_1
0x4005b96	      0x486344242c	         movsxd rax, dword [rsp + 0x2c] 	      5020	ops.c	FUNCTION_60	FOR_1
0x4005b9b	    0xc74424140000	               mov dword [rsp + 0x14], 0	      5020	ops.c	FUNCTION_60	FOR_1
0x4005ba3	      0x4889442430	             mov qword [rsp + 0x30], rax	      5020	ops.c	FUNCTION_60	FOR_1
0x4005ba8	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	      5079	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4005bac	         0xb44241c	              or eax, dword [rsp + 0x1c]	      5079	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4005bb0	        0x8944242c	             mov dword [rsp + 0x2c], eax	      5079	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4005bb4	            0xeb73	                           jmp 0x4005c29	      5079	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4005bb6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5079	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4005bc0	    0xc74424440000	               mov dword [rsp + 0x44], 0	      5043	ops.c	FUNCTION_60	FOR_1	IF_4
0x4005bc8	    0x48c744245000	               mov qword [rsp + 0x50], 0	      5044	ops.c	FUNCTION_60	FOR_1	IF_4
0x4005bd1	    0x41bf01000000	                             mov r15d, 1	      5041	ops.c	FUNCTION_60	FOR_1	IF_4
0x4005bd7	          0x8b0424	                    mov eax, dword [rsp]	      5059	ops.c	FUNCTION_60	FOR_1
0x4005bda	          0x4409f8	                            or eax, r15d	      5059	ops.c	FUNCTION_60	FOR_1
0x4005bdd	             0x9e8	                             or eax, ebp	      5060	ops.c	FUNCTION_60	FOR_1	IF_6
0x4005bdf	            0x750b	                           jne 0x4005bec	      5060	ops.c	FUNCTION_60	FOR_1	IF_6
0x4005be1	      0x807c241300	                cmp byte [rsp + 0x13], 0	      5060	ops.c	FUNCTION_60	FOR_1	IF_6
0x4005be6	     0xf8574030000	                           jne 0x4005f60	      5060	ops.c	FUNCTION_60	FOR_1	IF_6
0x4005bec	          0x4531e4	                          xor r12d, r12d	      5059	ops.c	FUNCTION_60	FOR_1
0x4005bef	            0x85c0	                           test eax, eax	      5059	ops.c	FUNCTION_60	FOR_1
0x4005bf1	        0x410f95c4	                              setne r12b	      5059	ops.c	FUNCTION_60	FOR_1
0x4005bf5	            0x85ed	                           test ebp, ebp	      5066	ops.c	FUNCTION_60	FOR_1	IF_7
0x4005bf7	     0xf84cb000000	                            je 0x4005cc8	      5066	ops.c	FUNCTION_60	FOR_1	IF_7
0x4005bfd	          0x4d85f6	                           test r14, r14	      5068	ops.c	FUNCTION_60	FOR_1	IF_7	IF_8
0x4005c00	     0xf8872020000	                            js 0x4005e78	      5068	ops.c	FUNCTION_60	FOR_1	IF_7	IF_8
0x4005c06	    0x41bd01000000	                             mov r13d, 1	      5058	ops.c	FUNCTION_60	FOR_1
0x4005c0c	      0xe800000000	                          call 0x4005c11	      5222	ops.c	FUNCTION_60	FOR_1	CALL_34
0x4005c11	        0x4883eb01	                              sub rbx, 1	      5020	ops.c	FUNCTION_60	FOR_1
0x4005c15	     0xf845d020000	                            je 0x4005e78	      5020	ops.c	FUNCTION_60	FOR_1
0x4005c1b	    0x8b0500000000	            mov eax, dword [0x04005c21] 	      5020	ops.c	FUNCTION_60	FOR_1
0x4005c21	            0x85c0	                           test eax, eax	      5020	ops.c	FUNCTION_60	FOR_1
0x4005c23	     0xf854f020000	                           jne 0x4005e78	      5020	ops.c	FUNCTION_60	FOR_1
0x4005c29	          0x4585ed	                         test r13d, r13d	      5025	ops.c	FUNCTION_60	FOR_1	IF_3
0x4005c2c	            0x7426	                            je 0x4005c54	      5025	ops.c	FUNCTION_60	FOR_1	IF_3
0x4005c2e	    0x488b05000000	            mov rax, qword [0x04005c35] 	      5027	ops.c	FUNCTION_60	FOR_1	IF_3
0x4005c35	      0x4489642414	            mov dword [rsp + 0x14], r12d	      5032	ops.c	FUNCTION_60	FOR_1	IF_3
0x4005c3a	          0x4489fd	                           mov ebp, r15d	      5032	ops.c	FUNCTION_60	FOR_1	IF_3
0x4005c3d	      0x4883403801	               add qword [rax + 0x38], 1	      5027	ops.c	FUNCTION_60	FOR_1	IF_3
0x4005c42	        0x8b442444	            mov eax, dword [rsp + 0x44] 	      5031	ops.c	FUNCTION_60	FOR_1	IF_3
0x4005c46	        0x89442440	             mov dword [rsp + 0x40], eax	      5031	ops.c	FUNCTION_60	FOR_1	IF_3
0x4005c4a	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      5032	ops.c	FUNCTION_60	FOR_1	IF_3
0x4005c4f	      0x4889442448	             mov qword [rsp + 0x48], rax	      5032	ops.c	FUNCTION_60	FOR_1	IF_3
0x4005c54	        0x4883fb01	                              cmp rbx, 1	      5039	ops.c	FUNCTION_60	FOR_1	IF_4
0x4005c58	     0xf8462ffffff	                            je 0x4005bc0	      5039	ops.c	FUNCTION_60	FOR_1	IF_4
0x4005c5e	    0x488b05000000	            mov rax, qword [0x04005c65] 	      5039	ops.c	FUNCTION_60	FOR_1	IF_4
0x4005c65	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5039	ops.c	FUNCTION_60	FOR_1	IF_4
0x4005c69	    0x488b05000000	            mov rax, qword [0x04005c70] 	      5039	ops.c	FUNCTION_60	FOR_1	IF_4
0x4005c70	          0x483b38	                    cmp rdi, qword [rax]	      5039	ops.c	FUNCTION_60	FOR_1	IF_4
0x4005c73	     0xf8447ffffff	                            je 0x4005bc0	      5039	ops.c	FUNCTION_60	FOR_1	IF_4
0x4005c79	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      5049	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_9
0x4005c7d	      0x488d542450	                   lea rdx, [rsp + 0x50]	      5049	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_9
0x4005c82	      0x488d742444	                   lea rsi, [rsp + 0x44]	      5049	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_9
0x4005c87	        0x4883c701	                              add rdi, 1	      5049	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_9
0x4005c8b	      0xe880b2ffff	                  call sym.fmt_check_par	      5049	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_9
0x4005c90	          0x4189c7	                           mov r15d, eax	      5049	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_9
0x4005c93	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      5054	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x4005c97	            0x85c0	                           test eax, eax	      5054	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x4005c99	     0xf8438ffffff	                            je 0x4005bd7	      5054	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x4005c9f	    0x488b05000000	            mov rax, qword [0x04005ca6] 	      5056	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_10
0x4005ca6	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5056	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_10
0x4005caa	        0x4883c701	                              add rdi, 1	      5056	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_10
0x4005cae	      0xe800000000	                          call 0x4005cb3	      5056	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_10
0x4005cb3	            0x85c0	                           test eax, eax	      5055	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x4005cb5	           0xf9fc0	                                 setg al	      5055	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x4005cb8	           0xfb6c0	                           movzx eax, al	      5055	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x4005cbb	          0x890424	                    mov dword [rsp], eax	      5055	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x4005cbe	      0xe914ffffff	                           jmp 0x4005bd7	      5055	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x4005cc3	       0xf1f440000	                   nop dword [rax + rax]	      5055	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x4005cc8	        0x8b442408	                mov eax, dword [rsp + 8]	      5077	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4005ccc	            0x85c0	                           test eax, eax	      5077	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4005cce	            0x7470	                            je 0x4005d40	      5077	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4005cd0	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      5079	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4005cd4	            0x85c0	                           test eax, eax	      5079	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4005cd6	            0x7468	                            je 0x4005d40	      5079	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4005cd8	      0xf644241401	               test byte [rsp + 0x14], 1	      5079	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4005cdd	            0x7461	                            je 0x4005d40	      5079	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4005cdf	    0x488b05000000	            mov rax, qword [0x04005ce6] 	      5080	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4005ce6	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5080	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4005cea	    0x488b05000000	            mov rax, qword [0x04005cf1] 	      5080	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4005cf1	          0x483b38	                    cmp rdi, qword [rax]	      5080	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4005cf4	     0xf8d86020000	                           jge 0x4005f80	      5080	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4005cfa	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	      5082	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x4005cfe	            0x85c0	                           test eax, eax	      5082	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x4005d00	     0xf8544030000	                           jne 0x400604a	      5082	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x4005d06	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      5100	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12
0x4005d0a	            0x85c0	                           test eax, eax	      5100	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12
0x4005d0c	            0x744d	                            je 0x4005d5b	      5100	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12
0x4005d0e	      0x448b542440	           mov r10d, dword [rsp + 0x40] 	      5103	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0x4005d13	          0x4585d2	                         test r10d, r10d	      5103	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0x4005d16	            0x750e	                           jne 0x4005d26	      5103	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0x4005d18	      0x448b4c2444	            mov r9d, dword [rsp + 0x44] 	      5103	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0x4005d1d	          0x4585c9	                           test r9d, r9d	      5103	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0x4005d20	     0xf8495030000	                            je 0x40060bb	      5103	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0x4005d26	      0xe800000000	                          call 0x4005d2b	      5114	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	ELSE_6
0x4005d2b	        0x89442418	             mov dword [rsp + 0x18], eax	      5114	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	ELSE_6
0x4005d2f	    0xc74424380100	               mov dword [rsp + 0x38], 1	      5116	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	ELSE_6
0x4005d37	    0x660f1f840000	                    nop word [rax + rax]	      5116	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	ELSE_6
0x4005d40	    0x488b05000000	            mov rax, qword [0x04005d47] 	      5125	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0x4005d47	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5125	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0x4005d4b	    0x488b05000000	            mov rax, qword [0x04005d52] 	      5125	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0x4005d52	          0x483b38	                    cmp rdi, qword [rax]	      5125	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0x4005d55	     0xf8d25020000	                           jge 0x4005f80	      5125	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0x4005d5b	        0x8b742440	            mov esi, dword [rsp + 0x40] 	      5127	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14	CALL_16
0x4005d5f	        0x8b4c2444	            mov ecx, dword [rsp + 0x44] 	      5127	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14	CALL_16
0x4005d63	            0x85f6	                           test esi, esi	      4762	ops.c	FUNCTION_56	IF_1
0x4005d65	     0xf8575020000	                           jne 0x4005fe0	      4762	ops.c	FUNCTION_56	IF_1
0x4005d6b	            0x31c0	                            xor eax, eax	      4763	ops.c	FUNCTION_56	IF_1
0x4005d6d	            0x85c9	                           test ecx, ecx	      4763	ops.c	FUNCTION_56	IF_1
0x4005d6f	           0xf94c0	                                 sete al	      4763	ops.c	FUNCTION_56	IF_1
0x4005d72	            0x85c0	                           test eax, eax	      5132	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0x4005d74	      0xb801000000	                              mov eax, 1	      5132	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0x4005d79	        0x440f44e0	                         cmove r12d, eax	      5132	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0x4005d7d	        0x8b442404	                mov eax, dword [rsp + 4]	      5138	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005d81	          0x4409e0	                            or eax, r12d	      5138	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005d84	     0xf8426010000	                            je 0x4005eb0	      5138	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005d8a	      0x448b442420	            mov r8d, dword [rsp + 0x20] 	      5140	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_16
0x4005d8f	          0x4585c0	                           test r8d, r8d	      5140	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_16
0x4005d92	     0xf8560020000	                           jne 0x4005ff8	      5140	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_16
0x4005d98	      0xbfffffff7f	                     mov edi, 0x7fffffff	      5147	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_19
0x4005d9d	    0xc70500000000	               mov dword [0x04005da7], 1	      5146	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005da7	      0xe800000000	                          call 0x4005dac	      5147	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_19
0x4005dac	    0x488b05000000	            mov rax, qword [0x04005db3] 	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x4005db3	          0x8b7840	            mov edi, dword [rax + 0x40] 	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x4005db6	            0x85ff	                           test edi, edi	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x4005db8	            0x7519	                           jne 0x4005dd3	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x4005dba	            0xeb27	                           jmp 0x4005de3	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x4005dbc	         0xf1f4000	                         nop dword [rax]	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x4005dc0	      0xe800000000	                          call 0x4005dc5	      5149	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_22
0x4005dc5	    0x488b05000000	            mov rax, qword [0x04005dcc] 	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x4005dcc	          0x8b4840	            mov ecx, dword [rax + 0x40] 	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x4005dcf	            0x85c9	                           test ecx, ecx	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x4005dd1	            0x7410	                            je 0x4005de3	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x4005dd3	      0xe800000000	                          call 0x4005dd8	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x4005dd8	            0x89c7	                            mov edi, eax	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x4005dda	      0xe800000000	                          call 0x4005ddf	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x4005ddf	            0x85c0	                           test eax, eax	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x4005de1	            0x75dd	                           jne 0x4005dc0	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x4005de3	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      5157	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005de7	    0x448b2d000000	           mov r13d, dword [0x04005dee] 	      5153	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005dee	    0xc70500000000	           mov dword [0x04005df8], 0x10 	      5152	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005df8	    0xc70500000000	               mov dword [0x04005e02], 0	      5154	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005e02	            0x85f6	                           test esi, esi	      5157	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005e04	     0xf8586010000	                           jne 0x4005f90	      5157	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005e0a	      0xbe01000000	                              mov esi, 1	      5157	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005e0f	         0x3742428	             add esi, dword [rsp + 0x28]	      5155	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_23
0x4005e13	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      5155	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_23
0x4005e17	            0x31ff	                            xor edi, edi	      5155	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_23
0x4005e19	      0xe800000000	                          call 0x4005e1e	      5155	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_23
0x4005e1e	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      5162	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005e22	          0x4585e4	                         test r12d, r12d	      5167	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17
0x4005e25	    0x44892d000000	           mov dword [0x04005e2c], r13d 	      5163	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005e2c	    0x890500000000	            mov dword [0x04005e32], eax 	      5162	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005e32	            0x746c	                            je 0x4005ea0	      5167	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17
0x4005e34	          0x4d85f6	                           test r14, r14	      5171	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17	IF_18
0x4005e37	            0x783f	                            js 0x4005e78	      5171	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17	IF_18
0x4005e39	    0xc74424040000	                  mov dword [rsp + 4], 0	      5171	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17	IF_18
0x4005e41	    0xc74424200100	               mov dword [rsp + 0x20], 1	      5171	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17	IF_18
0x4005e49	    0x41bd01000000	                             mov r13d, 1	      5058	ops.c	FUNCTION_60	FOR_1
0x4005e4f	    0xc74424080100	                  mov dword [rsp + 8], 1	      5173	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17
0x4005e57	    0xc7442418ffff	     mov dword [rsp + 0x18], 0xffffffff 	      5164	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005e5f	    0x41bc01000000	                             mov r12d, 1	      5164	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005e65	      0xe800000000	                          call 0x4005e6a	      5222	ops.c	FUNCTION_60	FOR_1	CALL_34
0x4005e6a	        0x4883eb01	                              sub rbx, 1	      5020	ops.c	FUNCTION_60	FOR_1
0x4005e6e	     0xf85a7fdffff	                           jne 0x4005c1b	      5020	ops.c	FUNCTION_60	FOR_1
0x4005e74	         0xf1f4000	                         nop dword [rax]	      5020	ops.c	FUNCTION_60	FOR_1
0x4005e78	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      5224	ops.c	FUNCTION_60
0x4005e7d	    0x644833042528	                xor rax, qword fs:[0x28]	      5224	ops.c	FUNCTION_60
0x4005e86	     0xf853d020000	                           jne 0x40060c9	      5224	ops.c	FUNCTION_60
0x4005e8c	        0x4883c468	                           add rsp, 0x68	      5224	ops.c	FUNCTION_60
0x4005e90	              0x5b	                                 pop rbx	      5224	ops.c	FUNCTION_60
0x4005e91	              0x5d	                                 pop rbp	      5224	ops.c	FUNCTION_60
0x4005e92	            0x415c	                                 pop r12	      5224	ops.c	FUNCTION_60
0x4005e94	            0x415d	                                 pop r13	      5224	ops.c	FUNCTION_60
0x4005e96	            0x415e	                                 pop r14	      5224	ops.c	FUNCTION_60
0x4005e98	            0x415f	                                 pop r15	      5224	ops.c	FUNCTION_60
0x4005e9a	              0xc3	                                     ret	      5224	ops.c	FUNCTION_60
0x4005e9b	       0xf1f440000	                   nop dword [rax + rax]	      5224	ops.c	FUNCTION_60
0x4005ea0	    0xc74424200000	               mov dword [rsp + 0x20], 0	      5224	ops.c	FUNCTION_60
0x4005ea8	    0xc7442418ffff	     mov dword [rsp + 0x18], 0xffffffff 	      5164	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005eb0	    0x488b05000000	            mov rax, qword [0x04005eb7] 	      5185	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x4005eb7	      0x4883403801	               add qword [rax + 0x38], 1	      5185	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x4005ebc	          0x4d85f6	                           test r14, r14	      5187	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_20	CALL_24
0x4005ebf	    0xc74040000000	               mov dword [rax + 0x40], 0	      5186	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x4005ec6	     0xf8844010000	                            js 0x4006010	      5187	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_20	CALL_24
0x4005ecc	      0x48637c2444	         movsxd rdi, dword [rsp + 0x44] 	      5190	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21
0x4005ed1	            0x85ff	                           test edi, edi	      5190	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21
0x4005ed3	     0xf8ecf000000	                           jle 0x4005fa8	      5190	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21
0x4005ed9	            0x31d2	                            xor edx, edx	      5192	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_25
0x4005edb	            0x31f6	                            xor esi, esi	      5192	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_25
0x4005edd	      0xe800000000	                          call 0x4005ee2	      5192	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_25
0x4005ee2	        0x8b4c2444	            mov ecx, dword [rsp + 0x44] 	      5193	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_26
0x4005ee6	            0xf7d9	                                 neg ecx	      5193	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_26
0x4005ee8	          0x4863c9	                         movsxd rcx, ecx	      5193	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_26
0x4005eeb	    0x488b05000000	            mov rax, qword [0x04005ef2] 	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x4005ef2	            0x31d2	                            xor edx, edx	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x4005ef4	            0x31f6	                            xor esi, esi	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x4005ef6	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x4005efa	      0xe800000000	                          call 0x4005eff	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x4005eff	    0x488b05000000	            mov rax, qword [0x04005f06] 	      5208	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x4005f06	          0x4531c0	                            xor r8d, r8d	      5209	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0x4005f09	            0x31c9	                            xor ecx, ecx	      5209	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0x4005f0b	            0x31d2	                            xor edx, edx	      5209	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0x4005f0d	      0xbe01000000	                              mov esi, 1	      5209	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0x4005f12	      0xbf02000000	                              mov edi, 2	      5209	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0x4005f17	      0x4883683801	               sub qword [rax + 0x38], 1	      5208	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x4005f1c	      0xe800000000	                          call 0x4005f21	      5209	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0x4005f21	            0x85c0	                           test eax, eax	      5209	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0x4005f23	     0xf846a010000	                            je 0x4006093	      5209	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0x4005f29	      0xe800000000	                          call 0x4005f2e	      5216	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0x4005f2e	          0x4889c7	                            mov rdi, rax	      5216	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0x4005f31	      0xe800000000	                          call 0x4005f36	      5216	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0x4005f36	      0x483b442430	            cmp rax, qword [rsp + 0x30] 	      5216	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0x4005f3b	    0xc74424080000	                  mov dword [rsp + 8], 0	      5214	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x4005f43	           0xf97c0	                                 seta al	      5214	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x4005f46	          0x4531ed	                          xor r13d, r13d	      5184	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x4005f49	          0x4531e4	                          xor r12d, r12d	      5184	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x4005f4c	           0xfb6c0	                           movzx eax, al	      5184	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x4005f4f	        0x89442404	                mov dword [rsp + 4], eax	      5184	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x4005f53	      0xe9b4fcffff	                           jmp 0x4005c0c	      5184	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x4005f58	     0xf1f84000000	                   nop dword [rax + rax]	      5184	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x4005f60	    0x488b05000000	            mov rax, qword [0x04005f67] 	      5061	ops.c	FUNCTION_60	FOR_1	CALL_11
0x4005f67	          0x4531e4	                          xor r12d, r12d	      5061	ops.c	FUNCTION_60	FOR_1	CALL_11
0x4005f6a	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5061	ops.c	FUNCTION_60	FOR_1	CALL_11
0x4005f6e	      0xe8cda0ffff	                  call sym.ends_in_white	      5061	ops.c	FUNCTION_60	FOR_1	CALL_11
0x4005f73	            0x85c0	                           test eax, eax	      5061	ops.c	FUNCTION_60	FOR_1	CALL_11
0x4005f75	        0x410f94c4	                               sete r12b	      5061	ops.c	FUNCTION_60	FOR_1	CALL_11
0x4005f79	      0xe977fcffff	                           jmp 0x4005bf5	      5061	ops.c	FUNCTION_60	FOR_1	CALL_11
0x4005f7e	            0x6690	                                     nop	      5061	ops.c	FUNCTION_60	FOR_1	CALL_11
0x4005f80	    0x41bc01000000	                             mov r12d, 1	      5132	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0x4005f86	      0xe9f2fdffff	                           jmp 0x4005d7d	      5132	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0x4005f8b	       0xf1f440000	                   nop dword [rax + rax]	      5132	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0x4005f90	      0x837c243801	               cmp dword [rsp + 0x38], 1	      5159	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005f95	            0x19f6	                            sbb esi, esi	      5159	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005f97	          0x83e6f0	                     and esi, 0xfffffff0	      5159	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005f9a	          0x83c613	                           add esi, 0x13	      5159	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005f9d	      0xe96dfeffff	                           jmp 0x4005e0f	      5159	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005fa2	    0x660f1f440000	                    nop word [rax + rax]	      5159	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005fa8	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      5197	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22
0x4005fac	            0x85d2	                           test edx, edx	      5197	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22
0x4005fae	     0xf8e4bffffff	                           jle 0x4005eff	      5197	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22
0x4005fb4	      0xe800000000	                          call 0x4005fb9	      5199	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	CALL_27
0x4005fb9	            0x85c0	                           test eax, eax	      5201	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23
0x4005fbb	          0x4189c4	                           mov r12d, eax	      5199	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	CALL_27
0x4005fbe	     0xf8e3bffffff	                           jle 0x4005eff	      5201	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23
0x4005fc4	          0x4863f8	                         movsxd rdi, eax	      5203	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_28
0x4005fc7	            0x31d2	                            xor edx, edx	      5203	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_28
0x4005fc9	            0x31f6	                            xor esi, esi	      5203	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_28
0x4005fcb	          0x41f7dc	                                neg r12d	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x4005fce	      0xe800000000	                          call 0x4005fd3	      5203	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_28
0x4005fd3	          0x4963cc	                        movsxd rcx, r12d	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x4005fd6	      0xe910ffffff	                           jmp 0x4005eeb	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x4005fdb	       0xf1f440000	                   nop dword [rax + rax]	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x4005fe0	      0x4c8b442450	              mov r8, qword [rsp + 0x50]	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x4005fe5	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x4005fea	      0xe8d1bdffff	             call sym.same_leader.part.0	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x4005fef	      0xe97efdffff	                           jmp 0x4005d72	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x4005ff4	         0xf1f4000	                         nop dword [rax]	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x4005ff8	      0xe800000000	                          call 0x4005ffd	      5143	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_18
0x4005ffd	      0xbe01000000	                              mov esi, 1	      5143	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_18
0x4006002	            0x89c7	                            mov edi, eax	      5143	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_18
0x4006004	      0xe800000000	                          call 0x4006009	      5143	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_18
0x4006009	      0xe98afdffff	                           jmp 0x4005d98	      5143	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_18
0x400600e	            0x6690	                                     nop	      5143	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_18
0x4006010	      0xe800000000	                          call 0x4006015	      5187	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_20	CALL_24
0x4006015	            0x85c0	                           test eax, eax	      5187	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_20	CALL_24
0x4006017	     0xf85affeffff	                           jne 0x4005ecc	      5187	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_20	CALL_24
0x400601d	      0xe956feffff	                           jmp 0x4005e78	      5187	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_20	CALL_24
0x4006022	    0x660f1f440000	                    nop word [rax + rax]	      5187	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_20	CALL_24
0x4006028	    0x488b05000000	            mov rax, qword [0x0400602f] 	      5017	ops.c	FUNCTION_60	CALL_8
0x400602f	          0x4531e4	                          xor r12d, r12d	      5017	ops.c	FUNCTION_60	CALL_8
0x4006032	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5017	ops.c	FUNCTION_60	CALL_8
0x4006036	        0x4883ef01	                              sub rdi, 1	      5017	ops.c	FUNCTION_60	CALL_8
0x400603a	      0xe801a0ffff	                  call sym.ends_in_white	      5017	ops.c	FUNCTION_60	CALL_8
0x400603f	            0x85c0	                           test eax, eax	      5017	ops.c	FUNCTION_60	CALL_8
0x4006041	        0x410f94c4	                               sete r12b	      5017	ops.c	FUNCTION_60	CALL_8
0x4006045	      0xe9e3faffff	                           jmp 0x4005b2d	      5017	ops.c	FUNCTION_60	CALL_8
0x400604a	        0x4883c701	                              add rdi, 1	      5082	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x400604e	      0xe800000000	                          call 0x4006053	      5082	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x4006053	          0x803800	                       cmp byte [rax], 0	      5082	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x4006056	            0x7445	                            je 0x400609d	      5082	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x4006058	      0x448b6c2440	           mov r13d, dword [rsp + 0x40] 	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x400605d	        0x8b442444	            mov eax, dword [rsp + 0x44] 	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x4006061	          0x4585ed	                         test r13d, r13d	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x4006064	        0x89442418	             mov dword [rsp + 0x18], eax	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x4006068	     0xf85c1fcffff	                           jne 0x4005d2f	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x400606e	            0x85c0	                           test eax, eax	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x4006070	     0xf85b9fcffff	                           jne 0x4005d2f	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x4006076	    0x488b05000000	            mov rax, qword [0x0400607d] 	      5090	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11	CALL_13
0x400607d	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5089	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x4006081	        0x4883c701	                              add rdi, 1	      5089	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x4006085	      0xe800000000	                          call 0x400608a	      5089	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x400608a	        0x89442418	             mov dword [rsp + 0x18], eax	      5089	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x400608e	      0xe9adfcffff	                           jmp 0x4005d40	      5089	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x4006093	      0xe800000000	                          call 0x4006098	      5211	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_31
0x4006098	      0xe9dbfdffff	                           jmp 0x4005e78	      5212	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24
0x400609d	      0x448b5c241c	           mov r11d, dword [rsp + 0x1c] 	      5100	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12
0x40060a2	          0x4585db	                         test r11d, r11d	      5100	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12
0x40060a5	     0xf8495fcffff	                            je 0x4005d40	      5100	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12
0x40060ab	    0x488b05000000	            mov rax, qword [0x040060b2] 	      5100	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12
0x40060b2	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5100	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12
0x40060b6	      0xe953fcffff	                           jmp 0x4005d0e	      5100	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12
0x40060bb	      0xe800000000	                          call 0x40060c0	      5107	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0x40060c0	        0x89442418	             mov dword [rsp + 0x18], eax	      5107	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0x40060c4	      0xe977fcffff	                           jmp 0x4005d40	      5107	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0x40060c9	      0xe800000000	                          call 0x40060ce	      5224	ops.c	FUNCTION_60
op_tilde	SWITCH,0:IF,14:WHILE,1:DO,0:FOR,2:ELSE,4:CALL,31:functions,0	268
0x4003ab0	            0x4155	                                push r13	      2389	ops.c	FUNCTION_36
0x4003ab2	            0x4154	                                push r12	      2389	ops.c	FUNCTION_36
0x4003ab4	              0x55	                                push rbp	      2389	ops.c	FUNCTION_36
0x4003ab5	              0x53	                                push rbx	      2389	ops.c	FUNCTION_36
0x4003ab6	          0x4889fb	                            mov rbx, rdi	      2389	ops.c	FUNCTION_36
0x4003ab9	        0x4883ec68	                           sub rsp, 0x68	      2389	ops.c	FUNCTION_36
0x4003abd	    0x64488b042528	                mov rax, qword fs:[0x28]	      2389	ops.c	FUNCTION_36
0x4003ac6	      0x4889442458	             mov qword [rsp + 0x58], rax	      2389	ops.c	FUNCTION_36
0x4003acb	            0x31c0	                            xor eax, eax	      2389	ops.c	FUNCTION_36
0x4003acd	        0x488b4730	            mov rax, qword [rdi + 0x30] 	      2394	ops.c	FUNCTION_36	IF_1	CALL_1
0x4003ad1	        0x488d7001	                      lea rsi, [rax + 1]	      2394	ops.c	FUNCTION_36	IF_1	CALL_1
0x4003ad5	        0x488b4720	            mov rax, qword [rdi + 0x20] 	      2394	ops.c	FUNCTION_36	IF_1	CALL_1
0x4003ad9	        0x488d78ff	                      lea rdi, [rax - 1]	      2394	ops.c	FUNCTION_36	IF_1	CALL_1
0x4003add	      0xe800000000	                          call 0x4003ae2	      2394	ops.c	FUNCTION_36	IF_1	CALL_1
0x4003ae2	            0x85c0	                           test eax, eax	      2394	ops.c	FUNCTION_36	IF_1	CALL_1
0x4003ae4	     0xf8472010000	                            je 0x4003c5c	      2394	ops.c	FUNCTION_36	IF_1	CALL_1
0x4003aea	          0x8b4b60	            mov ecx, dword [rbx + 0x60] 	      2399	ops.c	FUNCTION_36	IF_2
0x4003aed	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      2398	ops.c	FUNCTION_36
0x4003af1	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      2398	ops.c	FUNCTION_36
0x4003af5	            0x85c9	                           test ecx, ecx	      2399	ops.c	FUNCTION_36	IF_2
0x4003af7	        0x48890424	                    mov qword [rsp], rax	      2398	ops.c	FUNCTION_36
0x4003afb	      0x4889542408	                mov qword [rsp + 8], rdx	      2398	ops.c	FUNCTION_36
0x4003b00	     0xf847a010000	                            je 0x4003c80	      2399	ops.c	FUNCTION_36	IF_2
0x4003b06	        0x488b1424	                    mov rdx, qword [rsp]	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x4003b0a	        0x48395330	            cmp qword [rbx + 0x30], rdx 	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x4003b0e	     0xf8cd5000000	                            jl 0x4003be9	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x4003b14	          0x4531ed	                          xor r13d, r13d	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x4003b17	          0x4889e5	                            mov rbp, rsp	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x4003b1a	            0xeb1d	                           jmp 0x4003b39	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x4003b1c	         0xf1f4000	                         nop dword [rax]	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x4003b20	        0x488b0424	                    mov rax, qword [rsp]	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x4003b24	        0x488d5001	                      lea rdx, [rax + 1]	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x4003b28	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x4003b2c	        0x48891424	                    mov qword [rsp], rdx	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x4003b30	          0x4839d0	                            cmp rax, rdx	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x4003b33	     0xf8c07020000	                            jl 0x4003d40	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x4003b39	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2405	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_2
0x4003b3e	            0x31c9	                            xor ecx, ecx	      2405	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_2
0x4003b40	          0x4889df	                            mov rdi, rbx	      2405	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_2
0x4003b43	      0xe828c5ffff	                     call sym.block_prep	      2405	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_2
0x4003b48	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      2406	ops.c	FUNCTION_36	IF_2	FOR_1
0x4003b4c	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      2407	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x4003b50	          0x4889ee	                            mov rsi, rbp	      2407	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x4003b53	            0x8b3b	                    mov edi, dword [rbx]	      2407	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x4003b55	        0x89442408	                mov dword [rsp + 8], eax	      2406	ops.c	FUNCTION_36	IF_2	FOR_1
0x4003b59	      0xe8d2feffff	                      call sym.swapchars	      2407	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x4003b5e	          0x4189c4	                           mov r12d, eax	      2407	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x4003b61	          0x4109c5	                            or r13d, eax	      2408	ops.c	FUNCTION_36	IF_2	FOR_1
0x4003b64	      0xe800000000	                          call 0x4003b69	      2411	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_4
0x4003b69	          0x4585e4	                         test r12d, r12d	      2411	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_4
0x4003b6c	            0x74b2	                            je 0x4003b20	      2411	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_4
0x4003b6e	            0x85c0	                           test eax, eax	      2411	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_4
0x4003b70	            0x74ae	                            je 0x4003b20	      2411	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_4
0x4003b72	        0x488b3424	                    mov rsi, qword [rsp]	      2413	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_5
0x4003b76	    0x488b3d000000	            mov rdi, qword [0x04003b7d] 	      2413	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_5
0x4003b7d	            0x31d2	                            xor edx, edx	      2413	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_5
0x4003b7f	      0xe800000000	                          call 0x4003b84	      2413	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_5
0x4003b84	      0x48634c2418	         movsxd rcx, dword [rsp + 0x18] 	      2415	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_6
0x4003b89	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      2415	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_6
0x4003b8d	          0x4989c4	                            mov r12, rax	      2413	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_5
0x4003b90	        0x488b3424	                    mov rsi, qword [rsp]	      2415	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_6
0x4003b94	    0x488b3d000000	            mov rdi, qword [0x04003b9b] 	      2415	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_6
0x4003b9b	      0xe800000000	                          call 0x4003ba0	      2415	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_6
0x4003ba0	      0x48634c2428	         movsxd rcx, dword [rsp + 0x28] 	      2418	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3
0x4003ba5	      0x448b442418	            mov r8d, dword [rsp + 0x18] 	      2417	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x4003baa	        0x488b3424	                    mov rsi, qword [rsp]	      2417	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x4003bae	    0x488b3d000000	            mov rdi, qword [0x04003bb5] 	      2417	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x4003bb5	          0x4889ca	                            mov rdx, rcx	      2418	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3
0x4003bb8	          0x4c01e1	                            add rcx, r12	      2417	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x4003bbb	      0xe800000000	                          call 0x4003bc0	      2417	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x4003bc0	      0xe95bffffff	                           jmp 0x4003b20	      2417	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x4003bc5	          0x8b5338	            mov edx, dword [rbx + 0x38] 	      2439	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x4003bc8	        0x2b542408	                sub edx, dword [rsp + 8]	      2439	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x4003bcc	          0x4889e6	                            mov rsi, rsp	      2439	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x4003bcf	            0x8b3b	                    mov edi, dword [rbx]	      2439	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x4003bd1	          0x83c201	                              add edx, 1	      2439	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x4003bd4	      0xe857feffff	                      call sym.swapchars	      2439	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x4003bd9	          0x4189c4	                           mov r12d, eax	      2439	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x4003bdc	         0xf1f4000	                         nop dword [rax]	      2439	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x4003be0	          0x4585e4	                         test r12d, r12d	      2450	ops.c	FUNCTION_36	ELSE_1	IF_10
0x4003be3	     0xf8577010000	                           jne 0x4003d60	      2450	ops.c	FUNCTION_36	ELSE_1	IF_10
0x4003be9	          0x8b435c	            mov eax, dword [rbx + 0x5c] 	      2481	ops.c	FUNCTION_36	IF_12
0x4003bec	            0x85c0	                           test eax, eax	      2481	ops.c	FUNCTION_36	IF_12
0x4003bee	     0xf859c020000	                           jne 0x4003e90	      2481	ops.c	FUNCTION_36	IF_12
0x4003bf4	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      2488	ops.c	FUNCTION_36
0x4003bf8	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      2488	ops.c	FUNCTION_36
0x4003bfc	    0x488b05000000	            mov rax, qword [0x04003c03] 	      2488	ops.c	FUNCTION_36
0x4003c03	    0x4889b0e01100	          mov qword [rax + 0x11e0], rsi 	      2488	ops.c	FUNCTION_36
0x4003c0a	    0x4889b8e81100	          mov qword [rax + 0x11e8], rdi 	      2488	ops.c	FUNCTION_36
0x4003c11	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      2489	ops.c	FUNCTION_36
0x4003c15	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	      2489	ops.c	FUNCTION_36
0x4003c19	        0x488b5b50	            mov rbx, qword [rbx + 0x50] 	      2491	ops.c	FUNCTION_36	IF_13
0x4003c1d	    0x483b1d000000	            cmp rbx, qword [0x04003c24] 	      2491	ops.c	FUNCTION_36	IF_13
0x4003c24	    0x4889b0001200	          mov qword [rax + 0x1200], rsi 	      2489	ops.c	FUNCTION_36
0x4003c2b	    0x4889b8081200	          mov qword [rax + 0x1208], rdi 	      2489	ops.c	FUNCTION_36
0x4003c32	            0x7e28	                           jle 0x4003c5c	      2491	ops.c	FUNCTION_36	IF_13
0x4003c34	        0x4883fb01	                              cmp rbx, 1	      2493	ops.c	FUNCTION_36	IF_13	IF_14
0x4003c38	      0xba05000000	                              mov edx, 5	      2494	ops.c	FUNCTION_36	IF_13	CALL_29
0x4003c3d	     0xf842d020000	                            je 0x4003e70	      2493	ops.c	FUNCTION_36	IF_13	IF_14
0x4003c43	      0xbe00000000	                              mov esi, 0	      2496	ops.c	FUNCTION_36	IF_13	CALL_31
0x4003c48	            0x31ff	                            xor edi, edi	      2496	ops.c	FUNCTION_36	IF_13	CALL_31
0x4003c4a	      0xe800000000	                          call 0x4003c4f	      2496	ops.c	FUNCTION_36	IF_13	CALL_31
0x4003c4f	          0x4889de	                            mov rsi, rbx	      2496	ops.c	FUNCTION_36	IF_13	CALL_31
0x4003c52	          0x4889c7	                            mov rdi, rax	      2496	ops.c	FUNCTION_36	IF_13	CALL_31
0x4003c55	            0x31c0	                            xor eax, eax	      2496	ops.c	FUNCTION_36	IF_13	CALL_31
0x4003c57	      0xe800000000	                          call 0x4003c5c	      2496	ops.c	FUNCTION_36	IF_13	CALL_31
0x4003c5c	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      2498	ops.c	FUNCTION_36
0x4003c61	    0x644833042528	                xor rax, qword fs:[0x28]	      2498	ops.c	FUNCTION_36
0x4003c6a	     0xf856a020000	                           jne 0x4003eda	      2498	ops.c	FUNCTION_36
0x4003c70	        0x4883c468	                           add rsp, 0x68	      2498	ops.c	FUNCTION_36
0x4003c74	              0x5b	                                 pop rbx	      2498	ops.c	FUNCTION_36
0x4003c75	              0x5d	                                 pop rbp	      2498	ops.c	FUNCTION_36
0x4003c76	            0x415c	                                 pop r12	      2498	ops.c	FUNCTION_36
0x4003c78	            0x415d	                                 pop r13	      2498	ops.c	FUNCTION_36
0x4003c7a	              0xc3	                                     ret	      2498	ops.c	FUNCTION_36
0x4003c7b	       0xf1f440000	                   nop dword [rax + rax]	      2498	ops.c	FUNCTION_36
0x4003c80	        0x837b0801	                  cmp dword [rbx + 8], 1	      2427	ops.c	FUNCTION_36	ELSE_1	IF_5
0x4003c84	     0xf8415020000	                            je 0x4003e9f	      2427	ops.c	FUNCTION_36	ELSE_1	IF_5
0x4003c8a	          0x8b5314	            mov edx, dword [rbx + 0x14] 	      2435	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x4003c8d	            0x85d2	                           test edx, edx	      2435	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x4003c8f	     0xf84cb010000	                            je 0x4003e60	      2435	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x4003c95	        0x488b0424	                    mov rax, qword [rsp]	      2438	ops.c	FUNCTION_36	ELSE_1	IF_8
0x4003c99	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      2438	ops.c	FUNCTION_36	ELSE_1	IF_8
0x4003c9d	          0x4839d0	                            cmp rax, rdx	      2438	ops.c	FUNCTION_36	ELSE_1	IF_8
0x4003ca0	     0xf841fffffff	                            je 0x4003bc5	      2438	ops.c	FUNCTION_36	ELSE_1	IF_8
0x4003ca6	          0x4531e4	                          xor r12d, r12d	      2438	ops.c	FUNCTION_36	ELSE_1	IF_8
0x4003ca9	          0x4889e5	                            mov rbp, rsp	      2438	ops.c	FUNCTION_36	ELSE_1	IF_8
0x4003cac	            0xeb3e	                           jmp 0x4003cec	      2438	ops.c	FUNCTION_36	ELSE_1	IF_8
0x4003cae	            0x6690	                                     nop	      2438	ops.c	FUNCTION_36	ELSE_1	IF_8
0x4003cb0	          0x8b4338	            mov eax, dword [rbx + 0x38] 	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4003cb3	          0x8d5001	                      lea edx, [rax + 1]	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4003cb6	            0x8b3b	                    mov edi, dword [rbx]	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4003cb8	          0x4889ee	                            mov rsi, rbp	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4003cbb	      0xe870fdffff	                      call sym.swapchars	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4003cc0	          0x4109c4	                            or r12d, eax	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4003cc3	        0x488b0424	                    mov rax, qword [rsp]	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4003cc7	        0x48394330	            cmp qword [rbx + 0x30], rax 	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4003ccb	            0x743b	                            je 0x4003d08	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4003ccd	     0xf8c0dffffff	                            jl 0x4003be0	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4003cd3	          0x4889ef	                            mov rdi, rbp	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4003cd6	      0xe800000000	                          call 0x4003cdb	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4003cdb	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4003cde	     0xf84fcfeffff	                            je 0x4003be0	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4003ce4	        0x488b0424	                    mov rax, qword [rsp]	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4003ce8	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4003cec	          0x4839d0	                            cmp rax, rdx	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4003cef	            0x74bf	                            je 0x4003cb0	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4003cf1	          0x4889ef	                            mov rdi, rbp	      2446	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_15
0x4003cf4	      0xe800000000	                          call 0x4003cf9	      2446	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_15
0x4003cf9	          0x4889c7	                            mov rdi, rax	      2446	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_15
0x4003cfc	      0xe800000000	                          call 0x4003d01	      2446	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_15
0x4003d01	            0x89c2	                            mov edx, eax	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4003d03	            0xebb1	                           jmp 0x4003cb6	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4003d05	           0xf1f00	                         nop dword [rax]	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4003d08	        0x8b442408	                mov eax, dword [rsp + 8]	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4003d0c	          0x394338	            cmp dword [rbx + 0x38], eax 	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4003d0f	            0x741f	                            je 0x4003d30	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4003d11	     0xf8cc9feffff	                            jl 0x4003be0	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4003d17	      0x488b442408	                mov rax, qword [rsp + 8]	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4003d1c	        0x48394338	            cmp qword [rbx + 0x38], rax 	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4003d20	            0x75b1	                           jne 0x4003cd3	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4003d22	      0xe9b9feffff	                           jmp 0x4003be0	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4003d27	    0x660f1f840000	                    nop word [rax + rax]	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4003d30	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4003d34	          0x39433c	            cmp dword [rbx + 0x3c], eax 	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4003d37	            0xebd8	                           jmp 0x4003d11	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4003d39	     0xf1f80000000	                         nop dword [rax]	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4003d40	          0x4585ed	                         test r13d, r13d	      2422	ops.c	FUNCTION_36	IF_2	IF_4
0x4003d43	     0xf84a0feffff	                            je 0x4003be9	      2422	ops.c	FUNCTION_36	IF_2	IF_4
0x4003d49	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2423	ops.c	FUNCTION_36	IF_2	CALL_8
0x4003d4d	        0x488d5001	                      lea rdx, [rax + 1]	      2423	ops.c	FUNCTION_36	IF_2	CALL_8
0x4003d51	            0x31c9	                            xor ecx, ecx	      2423	ops.c	FUNCTION_36	IF_2	CALL_8
0x4003d53	            0x31f6	                            xor esi, esi	      2423	ops.c	FUNCTION_36	IF_2	CALL_8
0x4003d55	      0xe800000000	                          call 0x4003d5a	      2423	ops.c	FUNCTION_36	IF_2	CALL_8
0x4003d5a	      0xe995feffff	                           jmp 0x4003bf4	      2423	ops.c	FUNCTION_36	IF_2	CALL_8
0x4003d5f	              0x90	                                     nop	      2423	ops.c	FUNCTION_36	IF_2	CALL_8
0x4003d60	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      2452	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x4003d64	          0x8b7328	            mov esi, dword [rbx + 0x28] 	      2452	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x4003d67	            0x31c9	                            xor ecx, ecx	      2452	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x4003d69	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2452	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x4003d6d	        0x488d5001	                      lea rdx, [rax + 1]	      2452	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x4003d71	      0xe800000000	                          call 0x4003d76	      2452	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x4003d76	      0xe800000000	                          call 0x4003d7b	      2455	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_19
0x4003d7b	            0x85c0	                           test eax, eax	      2455	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_19
0x4003d7d	     0xf8471feffff	                            je 0x4003bf4	      2455	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_19
0x4003d83	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      2460	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4003d87	        0x483b4330	            cmp rax, qword [rbx + 0x30] 	      2461	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4003d8b	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      2460	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4003d8f	          0x4889c6	                            mov rsi, rax	      2460	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4003d92	        0x48890424	                    mov qword [rsp], rax	      2460	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4003d96	      0x4889542408	                mov qword [rsp + 8], rdx	      2460	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4003d9b	            0x7d6f	                           jge 0x4003e0c	      2461	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4003d9d	           0xf1f00	                         nop dword [rax]	      2461	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4003da0	    0x488b3d000000	            mov rdi, qword [0x04003da7] 	      2463	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_20
0x4003da7	            0x31d2	                            xor edx, edx	      2463	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_20
0x4003da9	      0xe800000000	                          call 0x4003dae	      2463	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_20
0x4003dae	          0x4889c7	                            mov rdi, rax	      2464	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x4003db1	          0x4989c4	                            mov r12, rax	      2463	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_20
0x4003db4	      0xe800000000	                          call 0x4003db9	      2464	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x4003db9	        0x8b542408	                mov edx, dword [rsp + 8]	      2464	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x4003dbd	            0x89c5	                            mov ebp, eax	      2464	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x4003dbf	        0x488b3424	                    mov rsi, qword [rsp]	      2465	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_22
0x4003dc3	    0x488b3d000000	            mov rdi, qword [0x04003dca] 	      2465	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_22
0x4003dca	            0x29d5	                            sub ebp, edx	      2464	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x4003dcc	          0x4863cd	                         movsxd rcx, ebp	      2465	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_22
0x4003dcf	      0xe800000000	                          call 0x4003dd4	      2465	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_22
0x4003dd4	      0x48634c2408	            movsxd rcx, dword [rsp + 8] 	      2467	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4003dd9	        0x488b3424	                    mov rsi, qword [rsp]	      2466	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x4003ddd	          0x4189e8	                            mov r8d, ebp	      2466	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x4003de0	    0x488b3d000000	            mov rdi, qword [0x04003de7] 	      2466	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x4003de7	          0x4889ca	                            mov rdx, rcx	      2467	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4003dea	          0x4c01e1	                            add rcx, r12	      2466	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x4003ded	      0xe800000000	                          call 0x4003df2	      2466	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x4003df2	        0x488b0424	                    mov rax, qword [rsp]	      2469	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4003df6	    0xc74424080000	                  mov dword [rsp + 8], 0	      2468	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4003dfe	        0x488d7001	                      lea rsi, [rax + 1]	      2469	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4003e02	        0x48397330	            cmp qword [rbx + 0x30], rsi 	      2461	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4003e06	        0x48893424	                    mov qword [rsp], rsi	      2469	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4003e0a	            0x7f94	                            jg 0x4003da0	      2461	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4003e0c	    0x488b3d000000	            mov rdi, qword [0x04003e13] 	      2471	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_24
0x4003e13	            0x31d2	                            xor edx, edx	      2471	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_24
0x4003e15	      0xe800000000	                          call 0x4003e1a	      2471	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_24
0x4003e1a	        0x8b542408	                mov edx, dword [rsp + 8]	      2472	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4003e1e	          0x8b6b38	            mov ebp, dword [rbx + 0x38] 	      2472	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4003e21	          0x4989c4	                            mov r12, rax	      2471	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_24
0x4003e24	        0x488b3424	                    mov rsi, qword [rsp]	      2473	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_25
0x4003e28	    0x488b3d000000	            mov rdi, qword [0x04003e2f] 	      2473	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_25
0x4003e2f	            0x29d5	                            sub ebp, edx	      2472	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4003e31	          0x83c501	                              add ebp, 1	      2472	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4003e34	          0x4863cd	                         movsxd rcx, ebp	      2473	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_25
0x4003e37	      0xe800000000	                          call 0x4003e3c	      2473	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_25
0x4003e3c	      0x48634c2408	            movsxd rcx, dword [rsp + 8] 	      2475	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4003e41	        0x488b3424	                    mov rsi, qword [rsp]	      2474	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x4003e45	          0x4189e8	                            mov r8d, ebp	      2474	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x4003e48	    0x488b3d000000	            mov rdi, qword [0x04003e4f] 	      2474	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x4003e4f	          0x4889ca	                            mov rdx, rcx	      2475	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4003e52	          0x4c01e1	                            add rcx, r12	      2474	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x4003e55	      0xe800000000	                          call 0x4003e5a	      2474	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x4003e5a	      0xe995fdffff	                           jmp 0x4003bf4	      2474	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x4003e5f	              0x90	                                     nop	      2474	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x4003e60	        0x488d7b30	                   lea rdi, [rbx + 0x30]	      2436	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x4003e64	      0xe800000000	                          call 0x4003e69	      2436	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x4003e69	      0xe927feffff	                           jmp 0x4003c95	      2436	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x4003e6e	            0x6690	                                     nop	      2436	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x4003e70	            0x31ff	                            xor edi, edi	      2494	ops.c	FUNCTION_36	IF_13	CALL_29
0x4003e72	      0xbe00000000	                              mov esi, 0	      2494	ops.c	FUNCTION_36	IF_13	CALL_29
0x4003e77	      0xe800000000	                          call 0x4003e7c	      2494	ops.c	FUNCTION_36	IF_13	CALL_29
0x4003e7c	          0x4889c7	                            mov rdi, rax	      2494	ops.c	FUNCTION_36	IF_13	CALL_29
0x4003e7f	      0xe800000000	                          call 0x4003e84	      2494	ops.c	FUNCTION_36	IF_13	CALL_29
0x4003e84	      0xe9d3fdffff	                           jmp 0x4003c5c	      2494	ops.c	FUNCTION_36	IF_13	CALL_29
0x4003e89	     0xf1f80000000	                         nop dword [rax]	      2494	ops.c	FUNCTION_36	IF_13	CALL_29
0x4003e90	      0xbf14000000	                           mov edi, 0x14	      2483	ops.c	FUNCTION_36	CALL_27
0x4003e95	      0xe800000000	                          call 0x4003e9a	      2483	ops.c	FUNCTION_36	CALL_27
0x4003e9a	      0xe955fdffff	                           jmp 0x4003bf4	      2483	ops.c	FUNCTION_36	CALL_27
0x4003e9f	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      2431	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x4003ea3	    0xc74328000000	               mov dword [rbx + 0x28], 0	      2429	ops.c	FUNCTION_36	ELSE_1	IF_5
0x4003eaa	    0xc74424080000	                  mov dword [rsp + 8], 0	      2430	ops.c	FUNCTION_36	ELSE_1	IF_5
0x4003eb2	      0xe800000000	                          call 0x4003eb7	      2431	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x4003eb7	          0x4889c7	                            mov rdi, rax	      2431	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x4003eba	      0xe800000000	                          call 0x4003ebf	      2431	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x4003ebf	            0x85c0	                           test eax, eax	      2432	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x4003ec1	            0x750c	                           jne 0x4003ecf	      2432	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x4003ec3	    0xc74338000000	               mov dword [rbx + 0x38], 0	      2431	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x4003eca	      0xe9c6fdffff	                           jmp 0x4003c95	      2431	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x4003ecf	          0x83e801	                              sub eax, 1	      2433	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x4003ed2	          0x894338	             mov dword [rbx + 0x38], eax	      2433	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x4003ed5	      0xe9bbfdffff	                           jmp 0x4003c95	      2433	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x4003eda	      0xe800000000	                          call 0x4003edf	      2498	ops.c	FUNCTION_36
clip_free_selection	SWITCH,0:IF,1:WHILE,0:DO,0:FOR,0:ELSE,1:CALL,1:functions,0	17
0x40073b0	    0x4881ff000000	                              cmp rdi, 0	      6556	ops.c	FUNCTION_74	IF_1
0x40073b7	              0x53	                                push rbx	      6553	ops.c	FUNCTION_74
0x40073b8	    0x488b1d000000	            mov rbx, qword [0x040073bf] 	      6554	ops.c	FUNCTION_74
0x40073bf	            0x7437	                            je 0x40073f8	      6556	ops.c	FUNCTION_74	IF_1
0x40073c1	    0x48c705000000	               mov qword [0x040073cc], 0	      6559	ops.c	FUNCTION_74	ELSE_1
0x40073cc	      0xb800000000	                              mov eax, 0	      6559	ops.c	FUNCTION_74	ELSE_1
0x40073d1	        0x488b7808	                mov rdi, qword [rax + 8]	      3045	ops.c	FUNCTION_44	CALL_1
0x40073d5	      0xe80690ffff	                      call sym.free_yank	      3045	ops.c	FUNCTION_44	CALL_1
0x40073da	    0x488b05000000	            mov rax, qword [0x040073e1] 	      6561	ops.c	FUNCTION_74
0x40073e1	    0x48891d000000	            mov qword [0x040073e8], rbx 	      6562	ops.c	FUNCTION_74
0x40073e8	    0x48c740080000	                  mov qword [rax + 8], 0	      6561	ops.c	FUNCTION_74
0x40073f0	              0x5b	                                 pop rbx	      6563	ops.c	FUNCTION_74
0x40073f1	              0xc3	                                     ret	      6563	ops.c	FUNCTION_74
0x40073f2	    0x660f1f440000	                    nop word [rax + rax]	      6563	ops.c	FUNCTION_74
0x40073f8	    0x48c705000000	               mov qword [0x04007403], 0	      6557	ops.c	FUNCTION_74	IF_1
0x4007403	      0xb800000000	                              mov eax, 0	      6557	ops.c	FUNCTION_74	IF_1
0x4007408	            0xebc7	                           jmp 0x40073d1	      6557	ops.c	FUNCTION_74	IF_1
yank_register_mline	SWITCH,0:IF,2:WHILE,0:DO,0:FOR,0:ELSE,0:CALL,2:functions,0	26
0x4002970	            0x85ff	                           test edi, edi	      1072	ops.c	FUNCTION_20	IF_1	CALL_1
0x4002972	              0x53	                                push rbx	      1071	ops.c	FUNCTION_20
0x4002973	            0x89fb	                            mov ebx, edi	      1071	ops.c	FUNCTION_20
0x4002975	            0x7521	                           jne 0x4002998	      1072	ops.c	FUNCTION_20	IF_1	CALL_1
0x4002977	            0x31f6	                            xor esi, esi	      1076	ops.c	FUNCTION_20	CALL_2
0x4002979	            0x89df	                            mov edi, ebx	      1076	ops.c	FUNCTION_20	CALL_2
0x400297b	      0xe800000000	                          call 0x4002980	      1076	ops.c	FUNCTION_20	CALL_2
0x4002980	    0x488b05000000	            mov rax, qword [0x04002987] 	      1077	ops.c	FUNCTION_20
0x4002987	              0x5b	                                 pop rbx	      1078	ops.c	FUNCTION_20
0x4002988	        0x80781001	                cmp byte [rax + 0x10], 1	      1077	ops.c	FUNCTION_20
0x400298c	           0xf94c0	                                 sete al	      1077	ops.c	FUNCTION_20
0x400298f	           0xfb6c0	                           movzx eax, al	      1077	ops.c	FUNCTION_20
0x4002992	              0xc3	                                     ret	      1078	ops.c	FUNCTION_20
0x4002993	       0xf1f440000	                   nop dword [rax + rax]	      1078	ops.c	FUNCTION_20
0x4002998	            0x31f6	                            xor esi, esi	      1072	ops.c	FUNCTION_20	IF_1	CALL_1
0x400299a	      0xe800000000	                          call 0x400299f	      1072	ops.c	FUNCTION_20	IF_1	CALL_1
0x400299f	            0x85c0	                           test eax, eax	      1074	ops.c	FUNCTION_20	IF_2
0x40029a1	            0x750d	                           jne 0x40029b0	      1074	ops.c	FUNCTION_20	IF_2
0x40029a3	            0x31c0	                            xor eax, eax	      1075	ops.c	FUNCTION_20	IF_2
0x40029a5	              0x5b	                                 pop rbx	      1078	ops.c	FUNCTION_20
0x40029a6	              0xc3	                                     ret	      1078	ops.c	FUNCTION_20
0x40029a7	    0x660f1f840000	                    nop word [rax + rax]	      1078	ops.c	FUNCTION_20
0x40029b0	          0x83fb5f	                           cmp ebx, 0x5f	      1074	ops.c	FUNCTION_20	IF_2
0x40029b3	            0x75c2	                           jne 0x4002977	      1074	ops.c	FUNCTION_20	IF_2
0x40029b5	            0x31c0	                            xor eax, eax	      1075	ops.c	FUNCTION_20	IF_2
0x40029b7	            0xebec	                           jmp 0x40029a5	      1075	ops.c	FUNCTION_20	IF_2
dnd_yank_drag_data	SWITCH,0:IF,0:WHILE,0:DO,0:FOR,0:ELSE,0:CALL,2:functions,0	21
0x4009ef0	            0x4154	                                push r12	      6742	ops.c	FUNCTION_79
0x4009ef2	              0x55	                                push rbp	      6742	ops.c	FUNCTION_79
0x4009ef3	          0x4889fd	                            mov rbp, rdi	      6742	ops.c	FUNCTION_79
0x4009ef6	    0x488b3d000000	            mov rdi, qword [0x04009efd] 	      3045	ops.c	FUNCTION_44	CALL_1
0x4009efd	              0x53	                                push rbx	      6742	ops.c	FUNCTION_79
0x4009efe	          0x4989f4	                            mov r12, rsi	      6742	ops.c	FUNCTION_79
0x4009f01	    0x488b1d000000	            mov rbx, qword [0x04009f08] 	      6745	ops.c	FUNCTION_79
0x4009f08	    0x48c705000000	               mov qword [0x04009f13], 0	      6746	ops.c	FUNCTION_79
0x4009f13	      0xe8c864ffff	                      call sym.free_yank	      3045	ops.c	FUNCTION_44	CALL_1
0x4009f18	    0x488b3d000000	            mov rdi, qword [0x04009f1f] 	      6748	ops.c	FUNCTION_79	CALL_2
0x4009f1f	          0x4c89e1	                            mov rcx, r12	      6748	ops.c	FUNCTION_79	CALL_2
0x4009f22	          0x4889ea	                            mov rdx, rbp	      6748	ops.c	FUNCTION_79	CALL_2
0x4009f25	          0x4531c9	                            xor r9d, r9d	      6748	ops.c	FUNCTION_79	CALL_2
0x4009f28	          0x4531c0	                            xor r8d, r8d	      6748	ops.c	FUNCTION_79	CALL_2
0x4009f2b	            0x31f6	                            xor esi, esi	      6748	ops.c	FUNCTION_79	CALL_2
0x4009f2d	      0xe8fe68ffff	                     call sym.str_to_reg	      6748	ops.c	FUNCTION_79	CALL_2
0x4009f32	    0x48891d000000	            mov qword [0x04009f39], rbx 	      6749	ops.c	FUNCTION_79
0x4009f39	              0x5b	                                 pop rbx	      6750	ops.c	FUNCTION_79
0x4009f3a	              0x5d	                                 pop rbp	      6750	ops.c	FUNCTION_79
0x4009f3b	            0x415c	                                 pop r12	      6750	ops.c	FUNCTION_79
0x4009f3d	              0xc3	                                     ret	      6750	ops.c	FUNCTION_79
op_yank	SWITCH,1:IF,42:WHILE,1:DO,0:FOR,2:ELSE,9:CALL,53:functions,0	621
0x400a1d0	            0x4157	                                push r15	      3058	ops.c	FUNCTION_45
0x400a1d2	            0x4156	                                push r14	      3058	ops.c	FUNCTION_45
0x400a1d4	            0x4155	                                push r13	      3058	ops.c	FUNCTION_45
0x400a1d6	            0x4154	                                push r12	      3058	ops.c	FUNCTION_45
0x400a1d8	          0x4989fc	                            mov r12, rdi	      3058	ops.c	FUNCTION_45
0x400a1db	              0x55	                                push rbp	      3058	ops.c	FUNCTION_45
0x400a1dc	              0x53	                                push rbx	      3058	ops.c	FUNCTION_45
0x400a1dd	    0x4881ec280100	                          sub rsp, 0x128	      3058	ops.c	FUNCTION_45
0x400a1e4	        0x4c8b7730	            mov r14, qword [rdi + 0x30] 	      3067	ops.c	FUNCTION_45
0x400a1e8	    0x64488b042528	                mov rax, qword fs:[0x28]	      3058	ops.c	FUNCTION_45
0x400a1f1	    0x488984241801	            mov qword [rsp + 0x118], rax	      3058	ops.c	FUNCTION_45
0x400a1f9	            0x31c0	                            xor eax, eax	      3058	ops.c	FUNCTION_45
0x400a1fb	          0x8b4708	                mov eax, dword [rdi + 8]	      3065	ops.c	FUNCTION_45
0x400a1fe	        0x89742428	             mov dword [rsp + 0x28], esi	      3058	ops.c	FUNCTION_45
0x400a202	        0x8954242c	             mov dword [rsp + 0x2c], edx	      3058	ops.c	FUNCTION_45
0x400a206	        0x89442404	                mov dword [rsp + 4], eax	      3065	ops.c	FUNCTION_45
0x400a20a	        0x488b4750	            mov rax, qword [rdi + 0x50] 	      3066	ops.c	FUNCTION_45
0x400a20e	          0x8b7f04	                mov edi, dword [rdi + 4]	      3076	ops.c	FUNCTION_45	IF_1	CALL_1
0x400a211	      0x4889442408	                mov qword [rsp + 8], rax	      3066	ops.c	FUNCTION_45
0x400a216	            0x85ff	                           test edi, edi	      3076	ops.c	FUNCTION_45	IF_1	CALL_1
0x400a218	     0xf859a060000	                           jne 0x400a8b8	      3076	ops.c	FUNCTION_45	IF_1	CALL_1
0x400a21e	      0x448b5c2428	           mov r11d, dword [rsp + 0x28] 	      3091	ops.c	FUNCTION_45	IF_5
0x400a223	          0x4585db	                         test r11d, r11d	      3091	ops.c	FUNCTION_45	IF_5
0x400a226	     0xf84da060000	                            je 0x400a906	      3091	ops.c	FUNCTION_45	IF_5
0x400a22c	    0x448b15000000	           mov r10d, dword [0x0400a233] 	      3096	ops.c	FUNCTION_45	IF_6
0x400a233	    0x4c8b3d000000	            mov r15, qword [0x0400a23a] 	      3094	ops.c	FUNCTION_45
0x400a23a	          0x4585d2	                         test r10d, r10d	      3096	ops.c	FUNCTION_45	IF_6
0x400a23d	     0xf848d010000	                            je 0x400a3d0	      3096	ops.c	FUNCTION_45	IF_6
0x400a243	        0x49833f00	                      cmp qword [r15], 0	      3096	ops.c	FUNCTION_45	IF_6
0x400a247	     0xf8483010000	                            je 0x400a3d0	      3096	ops.c	FUNCTION_45	IF_6
0x400a24d	      0x488d5c2450	                   lea rbx, [rsp + 0x50]	      3097	ops.c	FUNCTION_45	IF_6
0x400a252	    0x48891d000000	            mov qword [0x0400a259], rbx 	      3097	ops.c	FUNCTION_45	IF_6
0x400a259	      0x458b4c2408	                mov r9d, dword [r12 + 8]	      3105	ops.c	FUNCTION_45	IF_7
0x400a25e	          0x4585c9	                           test r9d, r9d	      3105	ops.c	FUNCTION_45	IF_7
0x400a261	            0x750e	                           jne 0x400a271	      3105	ops.c	FUNCTION_45	IF_7
0x400a263	      0x458b442428	            mov r8d, dword [r12 + 0x28] 	      3106	ops.c	FUNCTION_45	IF_7
0x400a268	          0x4585c0	                           test r8d, r8d	      3106	ops.c	FUNCTION_45	IF_7
0x400a26b	     0xf84bf060000	                            je 0x400a930	      3106	ops.c	FUNCTION_45	IF_7
0x400a271	       0xfb6442404	               movzx eax, byte [rsp + 4]	      3106	ops.c	FUNCTION_45	IF_7
0x400a276	      0x488b742408	                mov rsi, qword [rsp + 8]	      3118	ops.c	FUNCTION_45
0x400a27b	          0x884310	               mov byte [rbx + 0x10], al	      3119	ops.c	FUNCTION_45
0x400a27e	    0xc74314000000	               mov dword [rbx + 0x14], 0	      3120	ops.c	FUNCTION_45
0x400a285	    0x488d3cf50000	                        lea rdi, [rsi*8]	      3121	ops.c	FUNCTION_45	CALL_5
0x400a28d	        0x48897308	                mov qword [rbx + 8], rsi	      3118	ops.c	FUNCTION_45
0x400a291	      0xbe01000000	                              mov esi, 1	      3121	ops.c	FUNCTION_45	CALL_5
0x400a296	      0xe800000000	                          call 0x400a29b	      3121	ops.c	FUNCTION_45	CALL_5
0x400a29b	          0x488903	                    mov qword [rbx], rax	      3121	ops.c	FUNCTION_45	CALL_5
0x400a29e	    0x488b1d000000	            mov rbx, qword [0x0400a2a5] 	      3123	ops.c	FUNCTION_45	IF_8
0x400a2a5	        0x48833b00	                      cmp qword [rbx], 0	      3123	ops.c	FUNCTION_45	IF_8
0x400a2a9	     0xf84ec000000	                            je 0x400a39b	      3123	ops.c	FUNCTION_45	IF_8
0x400a2af	      0xe800000000	                          call 0x400a2b4	      3129	ops.c	FUNCTION_45	CALL_6
0x400a2b4	        0x48894318	             mov qword [rbx + 0x18], rax	      3129	ops.c	FUNCTION_45	CALL_6
0x400a2b8	      0x418b442460	            mov eax, dword [r12 + 0x60] 	      3135	ops.c	FUNCTION_45	IF_9
0x400a2bd	      0x498b5c2420	            mov rbx, qword [r12 + 0x20] 	      3133	ops.c	FUNCTION_45
0x400a2c2	    0x488b15000000	            mov rdx, qword [0x0400a2c9] 	      3138	ops.c	FUNCTION_45	IF_9
0x400a2c9	            0x85c0	                           test eax, eax	      3135	ops.c	FUNCTION_45	IF_9
0x400a2cb	            0x7433	                            je 0x400a300	      3135	ops.c	FUNCTION_45	IF_9
0x400a2cd	    0x488b0d000000	            mov rcx, qword [0x0400a2d4] 	      3141	ops.c	FUNCTION_45	IF_9	IF_10
0x400a2d4	        0xc6421002	                mov byte [rdx + 0x10], 2	      3138	ops.c	FUNCTION_45	IF_9
0x400a2d8	      0x418b442468	            mov eax, dword [r12 + 0x68] 	      3139	ops.c	FUNCTION_45	IF_9
0x400a2dd	      0x412b442464	             sub eax, dword [r12 + 0x64]	      3139	ops.c	FUNCTION_45	IF_9
0x400a2e2	    0x817948ffffff	     cmp dword [rcx + 0x48], 0x7fffffff 	      3141	ops.c	FUNCTION_45	IF_9	IF_10
0x400a2e9	          0x894214	             mov dword [rdx + 0x14], eax	      3139	ops.c	FUNCTION_45	IF_9
0x400a2ec	            0x7512	                           jne 0x400a300	      3141	ops.c	FUNCTION_45	IF_9	IF_10
0x400a2ee	            0x85c0	                           test eax, eax	      3141	ops.c	FUNCTION_45	IF_9	IF_10
0x400a2f0	            0x7e0e	                           jle 0x400a300	      3141	ops.c	FUNCTION_45	IF_9	IF_10
0x400a2f2	          0x83e801	                              sub eax, 1	      3142	ops.c	FUNCTION_45	IF_9	IF_10
0x400a2f5	          0x894214	             mov dword [rdx + 0x14], eax	      3142	ops.c	FUNCTION_45	IF_9	IF_10
0x400a2f8	     0xf1f84000000	                   nop dword [rax + rax]	      3142	ops.c	FUNCTION_45	IF_9	IF_10
0x400a300	            0x31ed	                            xor ebp, ebp	      3145	ops.c	FUNCTION_45	FOR_1
0x400a302	          0x4939de	                            cmp r14, rbx	      3145	ops.c	FUNCTION_45	FOR_1
0x400a305	     0xf8cda010000	                            jl 0x400a4e5	      3145	ops.c	FUNCTION_45	FOR_1
0x400a30b	      0x498d442430	                   lea rax, [r12 + 0x30]	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x400a310	      0x4c897c2430	             mov qword [rsp + 0x30], r15	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x400a315	      0x4889442438	             mov qword [rsp + 0x38], rax	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x400a31a	            0xeb49	                           jmp 0x400a365	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x400a31c	         0xf1f4000	                         nop dword [rax]	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x400a320	     0xf82c2000000	                            jb 0x400a3e8	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x400a326	            0x3c02	                               cmp al, 2	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x400a328	            0x752a	                           jne 0x400a354	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x400a32a	      0x488d742470	                   lea rsi, [rsp + 0x70]	      3150	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_7
0x400a32f	            0x31c9	                            xor ecx, ecx	      3150	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_7
0x400a331	          0x4889da	                            mov rdx, rbx	      3150	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_7
0x400a334	          0x4c89e7	                            mov rdi, r12	      3150	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_7
0x400a337	      0xe8345dffff	                     call sym.block_prep	      3150	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_7
0x400a33c	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      3239	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_22	CALL_15
0x400a341	          0x4889ee	                            mov rsi, rbp	      3239	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_22	CALL_15
0x400a344	      0xe80761ffff	                 call sym.yank_copy_line	      3239	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_22	CALL_15
0x400a349	            0x85c0	                           test eax, eax	      3239	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_22	CALL_15
0x400a34b	            0x7440	                            je 0x400a38d	      3239	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_22	CALL_15
0x400a34d	    0x488b15000000	            mov rdx, qword [0x0400a354] 	      3239	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_22	CALL_15
0x400a354	        0x4883c301	                              add rbx, 1	      3145	ops.c	FUNCTION_45	FOR_1
0x400a358	        0x4883c501	                              add rbp, 1	      3145	ops.c	FUNCTION_45	FOR_1
0x400a35c	          0x4939de	                            cmp r14, rbx	      3145	ops.c	FUNCTION_45	FOR_1
0x400a35f	     0xf8c7b010000	                            jl 0x400a4e0	      3145	ops.c	FUNCTION_45	FOR_1
0x400a365	         0xfb64210	           movzx eax, byte [rdx + 0x10] 	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x400a369	            0x3c01	                               cmp al, 1	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x400a36b	            0x75b3	                           jne 0x400a320	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x400a36d	          0x488b02	                    mov rax, qword [rdx]	      3156	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x400a370	          0x4889df	                            mov rdi, rbx	      3157	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12	CALL_10
0x400a373	        0x4c8d2ce8	                  lea r13, [rax + rbp*8]	      3156	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x400a377	      0xe800000000	                          call 0x400a37c	      3157	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12	CALL_10
0x400a37c	          0x4889c7	                            mov rdi, rax	      3157	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12	CALL_10
0x400a37f	      0xe800000000	                          call 0x400a384	      3157	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12	CALL_10
0x400a384	          0x4885c0	                           test rax, rax	      3156	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x400a387	        0x49894500	                    mov qword [r13], rax	      3156	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x400a38b	            0x75c0	                           jne 0x400a34d	      3156	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x400a38d	      0x4c8b7c2430	            mov r15, qword [rsp + 0x30] 	      3156	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x400a392	        0x488d7d01	                      lea rdi, [rbp + 1]	      3396	ops.c	FUNCTION_45	CALL_53
0x400a396	      0xe84560ffff	                      call sym.free_yank	      3396	ops.c	FUNCTION_45	CALL_53
0x400a39b	    0x4c893d000000	            mov qword [0x0400a3a2], r15 	      3397	ops.c	FUNCTION_45
0x400a3a2	            0x31c0	                            xor eax, eax	      3398	ops.c	FUNCTION_45
0x400a3a4	    0x488b8c241801	           mov rcx, qword [rsp + 0x118] 	      3399	ops.c	FUNCTION_45
0x400a3ac	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3399	ops.c	FUNCTION_45
0x400a3b5	     0xf8507090000	                           jne 0x400acc2	      3399	ops.c	FUNCTION_45
0x400a3bb	    0x4881c4280100	                          add rsp, 0x128	      3399	ops.c	FUNCTION_45
0x400a3c2	              0x5b	                                 pop rbx	      3399	ops.c	FUNCTION_45
0x400a3c3	              0x5d	                                 pop rbp	      3399	ops.c	FUNCTION_45
0x400a3c4	            0x415c	                                 pop r12	      3399	ops.c	FUNCTION_45
0x400a3c6	            0x415d	                                 pop r13	      3399	ops.c	FUNCTION_45
0x400a3c8	            0x415e	                                 pop r14	      3399	ops.c	FUNCTION_45
0x400a3ca	            0x415f	                                 pop r15	      3399	ops.c	FUNCTION_45
0x400a3cc	              0xc3	                                     ret	      3399	ops.c	FUNCTION_45
0x400a3cd	           0xf1f00	                         nop dword [rax]	      3399	ops.c	FUNCTION_45
0x400a3d0	        0x498b7f08	                mov rdi, qword [r15 + 8]	      3045	ops.c	FUNCTION_44	CALL_1
0x400a3d4	      0xe80760ffff	                      call sym.free_yank	      3045	ops.c	FUNCTION_44	CALL_1
0x400a3d9	    0x488b1d000000	            mov rbx, qword [0x0400a3e0] 	      3045	ops.c	FUNCTION_44	CALL_1
0x400a3e0	      0xe974feffff	                           jmp 0x400a259	      3045	ops.c	FUNCTION_44	CALL_1
0x400a3e5	           0xf1f00	                         nop dword [rax]	      3045	ops.c	FUNCTION_44	CALL_1
0x400a3e8	          0x4889df	                            mov rdi, rbx	      3168	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_11
0x400a3eb	      0xe800000000	                          call 0x400a3f0	      3168	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_11
0x400a3f0	          0x4531c9	                            xor r9d, r9d	      3168	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_11
0x400a3f3	          0x4531db	                          xor r11d, r11d	      3163	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x400a3f6	      0x49395c2420	            cmp qword [r12 + 0x20], rbx 	      3172	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13
0x400a3fb	          0x4989c2	                            mov r10, rax	      3168	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_11
0x400a3fe	    0xc74424700000	               mov dword [rsp + 0x70], 0	      3169	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x400a406	    0xc74424740000	               mov dword [rsp + 0x74], 0	      3170	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x400a40e	            0x7470	                            je 0x400a480	      3172	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13
0x400a410	          0x4531ff	                          xor r15d, r15d	      3172	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13
0x400a413	      0x49395c2430	            cmp qword [r12 + 0x30], rbx 	      3191	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400a418	     0xf8492000000	                            je 0x400a4b0	      3191	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400a41e	          0x4c89d7	                            mov rdi, r10	      3227	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x400a421	      0x4c894c2420	              mov qword [rsp + 0x20], r9	      3227	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x400a426	      0x44895c2418	            mov dword [rsp + 0x18], r11d	      3227	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x400a42b	      0x4c89542410	             mov qword [rsp + 0x10], r10	      3227	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x400a430	      0xe800000000	                          call 0x400a435	      3227	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x400a435	      0x4c8b542410	            mov r10, qword [rsp + 0x10] 	      3227	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x400a43a	      0x448b5c2418	           mov r11d, dword [rsp + 0x18] 	      3227	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x400a43f	          0x4189c5	                           mov r13d, eax	      3227	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x400a442	      0x4c8b4c2420	              mov r9, qword [rsp + 0x20]	      3227	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x400a447	          0x4539dd	                          cmp r13d, r11d	      3228	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x400a44a	            0x7c24	                            jl 0x400a470	      3228	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x400a44c	          0x4584ff	                         test r15b, r15b	      3228	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x400a44f	            0x751f	                           jne 0x400a470	      3228	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x400a451	          0x4529dd	                          sub r13d, r11d	      3236	ops.c	FUNCTION_45	FOR_1	SWITCH_1	ELSE_4
0x400a454	      0x45036c2414	            add r13d, dword [r12 + 0x14]	      3236	ops.c	FUNCTION_45	FOR_1	SWITCH_1	ELSE_4
0x400a459	      0x44896c2478	            mov dword [rsp + 0x78], r13d	      3236	ops.c	FUNCTION_45	FOR_1	SWITCH_1	ELSE_4
0x400a45e	        0x4b8d040a	                     lea rax, [r10 + r9]	      3238	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x400a462	    0x488984248000	             mov qword [rsp + 0x80], rax	      3238	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x400a46a	      0xe9cdfeffff	                           jmp 0x400a33c	      3238	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x400a46f	              0x90	                                     nop	      3238	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x400a470	    0xc74424780000	               mov dword [rsp + 0x78], 0	      3233	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x400a478	            0xebe4	                           jmp 0x400a45e	      3233	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x400a47a	    0x660f1f440000	                    nop word [rax + rax]	      3233	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x400a480	    0x8b0500000000	            mov eax, dword [0x0400a486] 	      3176	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14
0x400a486	      0x458b5c2428	           mov r11d, dword [r12 + 0x28] 	      3174	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13
0x400a48b	            0x85c0	                           test eax, eax	      3176	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14
0x400a48d	     0xf85c5030000	                           jne 0x400a858	      3176	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14
0x400a493	      0x493b5c2430	            cmp rbx, qword [r12 + 0x30] 	      3191	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400a498	     0xf8482040000	                            je 0x400a920	      3191	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400a49e	          0x4d63cb	                         movsxd r9, r11d	      3191	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400a4a1	          0x4531ff	                          xor r15d, r15d	      3191	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400a4a4	      0xe975ffffff	                           jmp 0x400a41e	      3191	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400a4a9	     0xf1f80000000	                         nop dword [rax]	      3191	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400a4b0	    0x8b0500000000	            mov eax, dword [0x0400a4b6] 	      3195	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17
0x400a4b6	      0x458b6c2438	           mov r13d, dword [r12 + 0x38] 	      3193	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400a4bb	            0x85c0	                           test eax, eax	      3195	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17
0x400a4bd	     0xf851d030000	                           jne 0x400a7e0	      3195	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17
0x400a4c3	          0x4531ff	                          xor r15d, r15d	      3195	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17
0x400a4c6	    0x4181fdffffff	                    cmp r13d, 0x7fffffff	      3226	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_20
0x400a4cd	     0xf8574ffffff	                           jne 0x400a447	      3226	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_20
0x400a4d3	      0xe946ffffff	                           jmp 0x400a41e	      3226	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_20
0x400a4d8	     0xf1f84000000	                   nop dword [rax + rax]	      3226	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_20
0x400a4e0	      0x4c8b7c2430	            mov r15, qword [rsp + 0x30] 	      3226	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_20
0x400a4e5	          0x4939d7	                            cmp r15, rdx	      3247	ops.c	FUNCTION_45	IF_23
0x400a4e8	     0xf84ec000000	                            je 0x400a5da	      3247	ops.c	FUNCTION_45	IF_23
0x400a4ee	        0x488b7a08	                mov rdi, qword [rdx + 8]	      3249	ops.c	FUNCTION_45	IF_23	CALL_16
0x400a4f2	        0x49037f08	                add rdi, qword [r15 + 8]	      3249	ops.c	FUNCTION_45	IF_23	CALL_16
0x400a4f6	      0xbe01000000	                              mov esi, 1	      3249	ops.c	FUNCTION_45	IF_23	CALL_16
0x400a4fb	        0x48c1e703	                              shl rdi, 3	      3249	ops.c	FUNCTION_45	IF_23	CALL_16
0x400a4ff	      0xe800000000	                          call 0x400a504	      3249	ops.c	FUNCTION_45	IF_23	CALL_16
0x400a504	          0x4885c0	                           test rax, rax	      3251	ops.c	FUNCTION_45	IF_23	IF_24
0x400a507	          0x4989c5	                            mov r13, rax	      3249	ops.c	FUNCTION_45	IF_23	CALL_16
0x400a50a	     0xf8482feffff	                            je 0x400a392	      3251	ops.c	FUNCTION_45	IF_23	IF_24
0x400a510	        0x498b5f08	                mov rbx, qword [r15 + 8]	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x400a514	          0x4885db	                           test rbx, rbx	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x400a517	     0xf8efd060000	                           jle 0x400ac1a	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x400a51d	    0x488d04dd0000	                        lea rax, [rbx*8]	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x400a525	            0x31d2	                            xor edx, edx	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x400a527	    0x660f1f840000	                    nop word [rax + rax]	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x400a530	          0x498b0f	                    mov rcx, qword [r15]	      3254	ops.c	FUNCTION_45	IF_23	FOR_2
0x400a533	        0x488b0c11	              mov rcx, qword [rcx + rdx]	      3254	ops.c	FUNCTION_45	IF_23	FOR_2
0x400a537	      0x49894c1500	              mov qword [r13 + rdx], rcx	      3254	ops.c	FUNCTION_45	IF_23	FOR_2
0x400a53c	        0x4883c208	                              add rdx, 8	      3254	ops.c	FUNCTION_45	IF_23	FOR_2
0x400a540	          0x4839d0	                            cmp rax, rdx	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x400a543	            0x75eb	                           jne 0x400a530	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x400a545	          0x498b3f	                    mov rdi, qword [r15]	      3255	ops.c	FUNCTION_45	IF_23	CALL_17
0x400a548	      0xe800000000	                          call 0x400a54d	      3255	ops.c	FUNCTION_45	IF_23	CALL_17
0x400a54d	          0x4d892f	                    mov qword [r15], r13	      3256	ops.c	FUNCTION_45	IF_23
0x400a550	      0xe800000000	                          call 0x400a555	      3258	ops.c	FUNCTION_45	IF_23	CALL_18
0x400a555	      0x837c240401	                  cmp dword [rsp + 4], 1	      3261	ops.c	FUNCTION_45	IF_23	IF_25
0x400a55a	        0x49894718	             mov qword [r15 + 0x18], rax	      3258	ops.c	FUNCTION_45	IF_23	CALL_18
0x400a55e	     0xf8485060000	                            je 0x400abe9	      3261	ops.c	FUNCTION_45	IF_23	IF_25
0x400a564	      0x41807f1000	                cmp byte [r15 + 0x10], 0	      3266	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x400a569	     0xf84d0040000	                            je 0x400aa3f	      3266	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x400a56f	            0x31d2	                            xor edx, edx	      3283	ops.c	FUNCTION_45	IF_23	ELSE_5
0x400a571	    0x488b3d000000	            mov rdi, qword [0x0400a578] 	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400a578	        0x4c8b5708	                mov r10, qword [rdi + 8]	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400a57c	          0x4c39d2	                            cmp rdx, r10	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400a57f	            0x7d46	                           jge 0x400a5c7	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400a581	          0x4989d0	                             mov r8, rdx	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400a584	    0x488d04dd0000	                        lea rax, [rbx*8]	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400a58c	          0x4989d1	                             mov r9, rdx	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400a58f	          0x4929d8	                             sub r8, rbx	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400a592	        0x49c1e003	                               shl r8, 3	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400a596	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400a5a0	          0x4c89c1	                             mov rcx, r8	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400a5a3	          0x48030f	                    add rcx, qword [rdi]	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400a5a6	        0x4883c201	                              add rdx, 1	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400a5aa	        0x488b3401	              mov rsi, qword [rcx + rax]	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400a5ae	          0x498b0f	                    mov rcx, qword [r15]	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400a5b1	        0x48893401	              mov qword [rcx + rax], rsi	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400a5b5	        0x4883c008	                              add rax, 8	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400a5b9	          0x4c39d2	                            cmp rdx, r10	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400a5bc	            0x75e2	                           jne 0x400a5a0	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400a5be	          0x4801da	                            add rdx, rbx	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400a5c1	          0x4c29ca	                             sub rdx, r9	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400a5c4	          0x4889d3	                            mov rbx, rdx	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400a5c7	          0x488b3f	                    mov rdi, qword [rdi]	      3287	ops.c	FUNCTION_45	IF_23	CALL_27
0x400a5ca	        0x49895f08	                mov qword [r15 + 8], rbx	      3286	ops.c	FUNCTION_45	IF_23
0x400a5ce	      0xe800000000	                          call 0x400a5d3	      3287	ops.c	FUNCTION_45	IF_23	CALL_27
0x400a5d3	    0x4c893d000000	            mov qword [0x0400a5da], r15 	      3288	ops.c	FUNCTION_45	IF_23
0x400a5da	    0x488b05000000	            mov rax, qword [0x0400a5e1] 	      3290	ops.c	FUNCTION_45	IF_28
0x400a5e1	    0x8b803c020000	           mov eax, dword [rax + 0x23c] 	      3290	ops.c	FUNCTION_45	IF_28
0x400a5e7	            0x85c0	                           test eax, eax	      3290	ops.c	FUNCTION_45	IF_28
0x400a5e9	     0xf85b7050000	                           jne 0x400aba6	      3290	ops.c	FUNCTION_45	IF_28
0x400a5ef	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      3292	ops.c	FUNCTION_45	IF_29
0x400a5f3	            0x85c0	                           test eax, eax	      3292	ops.c	FUNCTION_45	IF_29
0x400a5f5	     0xf8475010000	                            je 0x400a770	      3292	ops.c	FUNCTION_45	IF_29
0x400a5fb	        0x8b442404	                mov eax, dword [rsp + 4]	      3294	ops.c	FUNCTION_45	IF_29	IF_30
0x400a5ff	            0x85c0	                           test eax, eax	      3294	ops.c	FUNCTION_45	IF_29	IF_30
0x400a601	     0xf8529050000	                           jne 0x400ab30	      3294	ops.c	FUNCTION_45	IF_29	IF_30
0x400a607	      0x458b742460	           mov r14d, dword [r12 + 0x60] 	      3296	ops.c	FUNCTION_45	IF_29	IF_30
0x400a60c	          0x4585f6	                         test r14d, r14d	      3296	ops.c	FUNCTION_45	IF_29	IF_30
0x400a60f	            0x7517	                           jne 0x400a628	      3296	ops.c	FUNCTION_45	IF_29	IF_30
0x400a611	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3297	ops.c	FUNCTION_45	IF_29	IF_30
0x400a616	      0xb800000000	                              mov eax, 0	      3297	ops.c	FUNCTION_45	IF_29	IF_30
0x400a61b	        0x4883f901	                              cmp rcx, 1	      3297	ops.c	FUNCTION_45	IF_29	IF_30
0x400a61f	        0x480f45c1	                         cmovne rax, rcx	      3297	ops.c	FUNCTION_45	IF_29	IF_30
0x400a623	      0x4889442408	                mov qword [rsp + 8], rax	      3297	ops.c	FUNCTION_45	IF_29	IF_30
0x400a628	      0x488b442408	                mov rax, qword [rsp + 8]	      3299	ops.c	FUNCTION_45	IF_29	IF_31
0x400a62d	    0x483b05000000	            cmp rax, qword [0x0400a634] 	      3299	ops.c	FUNCTION_45	IF_29	IF_31
0x400a634	     0xf8f08050000	                            jg 0x400ab42	      3299	ops.c	FUNCTION_45	IF_29	IF_31
0x400a63a	      0x498b4c2420	            mov rcx, qword [r12 + 0x20] 	      3330	ops.c	FUNCTION_45
0x400a63f	      0x498b5c2428	            mov rbx, qword [r12 + 0x28] 	      3330	ops.c	FUNCTION_45
0x400a644	    0x488b05000000	            mov rax, qword [0x0400a64b] 	      3330	ops.c	FUNCTION_45
0x400a64b	    0x488988e01100	          mov qword [rax + 0x11e0], rcx 	      3330	ops.c	FUNCTION_45
0x400a652	    0x488998e81100	          mov qword [rax + 0x11e8], rbx 	      3330	ops.c	FUNCTION_45
0x400a659	      0x498b4c2430	            mov rcx, qword [r12 + 0x30] 	      3331	ops.c	FUNCTION_45
0x400a65e	      0x498b5c2438	            mov rbx, qword [r12 + 0x38] 	      3331	ops.c	FUNCTION_45
0x400a663	    0x488988001200	          mov qword [rax + 0x1200], rcx 	      3331	ops.c	FUNCTION_45
0x400a66a	    0x488998081200	          mov qword [rax + 0x1208], rbx 	      3331	ops.c	FUNCTION_45
0x400a671	     0xf1f80000000	                         nop dword [rax]	      3331	ops.c	FUNCTION_45
0x400a678	    0x448b1d000000	           mov r11d, dword [0x0400a67f] 	      3344	ops.c	FUNCTION_45	IF_37
0x400a67f	          0x4585db	                         test r11d, r11d	      3344	ops.c	FUNCTION_45	IF_37
0x400a682	     0xf8508030000	                           jne 0x400a990	      3344	ops.c	FUNCTION_45	IF_37
0x400a688	            0x31db	                            xor ebx, ebx	      3072	ops.c	FUNCTION_45
0x400a68a	    0x448b05000000	            mov r8d, dword [0x0400a691] 	      3365	ops.c	FUNCTION_45	IF_39
0x400a691	          0x4585c0	                           test r8d, r8d	      3365	ops.c	FUNCTION_45	IF_39
0x400a694	     0xf848d000000	                            je 0x400a727	      3365	ops.c	FUNCTION_45	IF_39
0x400a69a	    0x4981ff000000	                              cmp r15, 0	      3366	ops.c	FUNCTION_45	IF_39
0x400a6a1	            0x7437	                            je 0x400a6da	      3366	ops.c	FUNCTION_45	IF_39
0x400a6a3	        0x8b7c2428	            mov edi, dword [rsp + 0x28] 	      3367	ops.c	FUNCTION_45	IF_39
0x400a6a7	            0x85ff	                           test edi, edi	      3367	ops.c	FUNCTION_45	IF_39
0x400a6a9	     0xf8589000000	                           jne 0x400a738	      3367	ops.c	FUNCTION_45	IF_39
0x400a6af	      0x418b742404	                mov esi, dword [r12 + 4]	      3367	ops.c	FUNCTION_45	IF_39
0x400a6b4	            0x85f6	                           test esi, esi	      3367	ops.c	FUNCTION_45	IF_39
0x400a6b6	     0xf854a040000	                           jne 0x400ab06	      3367	ops.c	FUNCTION_45	IF_39
0x400a6bc	    0x8b0500000000	            mov eax, dword [0x0400a6c2] 	      3368	ops.c	FUNCTION_45	IF_39
0x400a6c2	     0xb0500000000	              or eax, dword [0x0400a6c8]	      3368	ops.c	FUNCTION_45	IF_39
0x400a6c8	            0xa802	                              test al, 2	      3368	ops.c	FUNCTION_45	IF_39
0x400a6ca	     0xf8436040000	                            je 0x400ab06	      3368	ops.c	FUNCTION_45	IF_39
0x400a6d0	      0xbf00000000	                              mov edi, 0	      3373	ops.c	FUNCTION_45	IF_39	CALL_43
0x400a6d5	      0xe87660ffff	                  call sym.copy_yank_reg	      3373	ops.c	FUNCTION_45	IF_39	CALL_43
0x400a6da	      0xbf00000000	                              mov edi, 0	      3375	ops.c	FUNCTION_45	IF_39	CALL_44
0x400a6df	      0xe800000000	                          call 0x400a6e4	      3375	ops.c	FUNCTION_45	IF_39	CALL_44
0x400a6e4	      0xbf00000000	                              mov edi, 0	      3376	ops.c	FUNCTION_45	IF_39	CALL_45
0x400a6e9	      0xe800000000	                          call 0x400a6ee	      3376	ops.c	FUNCTION_45	IF_39	CALL_45
0x400a6ee	      0xe800000000	                          call 0x400a6f3	      3377	ops.c	FUNCTION_45	IF_39	IF_41	CALL_47
0x400a6f3	            0x85c0	                           test eax, eax	      3377	ops.c	FUNCTION_45	IF_39	IF_41	CALL_47
0x400a6f5	            0x7530	                           jne 0x400a727	      3377	ops.c	FUNCTION_45	IF_39	IF_41	CALL_47
0x400a6f7	      0xe800000000	                          call 0x400a6fc	      3377	ops.c	FUNCTION_45	IF_39	IF_41	CALL_47
0x400a6fc	             0x9d8	                             or eax, ebx	      3378	ops.c	FUNCTION_45	IF_39	IF_41
0x400a6fe	            0x7527	                           jne 0x400a727	      3378	ops.c	FUNCTION_45	IF_39	IF_41
0x400a700	    0x4981ff000000	                              cmp r15, 0	      3378	ops.c	FUNCTION_45	IF_39	IF_41
0x400a707	            0x751e	                           jne 0x400a727	      3378	ops.c	FUNCTION_45	IF_39	IF_41
0x400a709	      0xbf00000000	                              mov edi, 0	      3380	ops.c	FUNCTION_45	IF_39	IF_41	CALL_48
0x400a70e	      0xe83d60ffff	                  call sym.copy_yank_reg	      3380	ops.c	FUNCTION_45	IF_39	IF_41	CALL_48
0x400a713	      0xbf00000000	                              mov edi, 0	      3381	ops.c	FUNCTION_45	IF_39	IF_41	CALL_49
0x400a718	      0xe800000000	                          call 0x400a71d	      3381	ops.c	FUNCTION_45	IF_39	IF_41	CALL_49
0x400a71d	      0xbf00000000	                              mov edi, 0	      3382	ops.c	FUNCTION_45	IF_39	IF_41	CALL_50
0x400a722	      0xe800000000	                          call 0x400a727	      3382	ops.c	FUNCTION_45	IF_39	IF_41	CALL_50
0x400a727	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	      3389	ops.c	FUNCTION_45	IF_42	CALL_51
0x400a72b	            0x85c9	                           test ecx, ecx	      3389	ops.c	FUNCTION_45	IF_42	CALL_51
0x400a72d	     0xf84d3030000	                            je 0x400ab06	      3389	ops.c	FUNCTION_45	IF_42	CALL_51
0x400a733	       0xf1f440000	                   nop dword [rax + rax]	      3389	ops.c	FUNCTION_45	IF_42	CALL_51
0x400a738	      0xb801000000	                              mov eax, 1	      3393	ops.c	FUNCTION_45
0x400a73d	      0xe962fcffff	                           jmp 0x400a3a4	      3393	ops.c	FUNCTION_45
0x400a742	      0x458b6c2460	           mov r13d, dword [r12 + 0x60] 	      3313	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	IF_34
0x400a747	      0xbe00000000	                              mov esi, 0	      3314	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_33
0x400a74c	          0x4585ed	                         test r13d, r13d	      3313	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	IF_34
0x400a74f	            0x7505	                           jne 0x400a756	      3313	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	IF_34
0x400a751	      0xbe00000000	                              mov esi, 0	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x400a756	            0x31ff	                            xor edi, edi	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x400a758	      0xe800000000	                          call 0x400a75d	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x400a75d	          0x4889de	                            mov rsi, rbx	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x400a760	          0x4889c7	                            mov rdi, rax	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x400a763	            0x31c0	                            xor eax, eax	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x400a765	      0xe800000000	                          call 0x400a76a	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x400a76a	    0x660f1f440000	                    nop word [rax + rax]	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x400a770	      0x498b4c2420	            mov rcx, qword [r12 + 0x20] 	      3330	ops.c	FUNCTION_45
0x400a775	      0x498b5c2428	            mov rbx, qword [r12 + 0x28] 	      3330	ops.c	FUNCTION_45
0x400a77a	    0x488b05000000	            mov rax, qword [0x0400a781] 	      3330	ops.c	FUNCTION_45
0x400a781	      0x837c240401	                  cmp dword [rsp + 4], 1	      3332	ops.c	FUNCTION_45	IF_36
0x400a786	    0x488988e01100	          mov qword [rax + 0x11e0], rcx 	      3330	ops.c	FUNCTION_45
0x400a78d	    0x488998e81100	          mov qword [rax + 0x11e8], rbx 	      3330	ops.c	FUNCTION_45
0x400a794	      0x498b4c2430	            mov rcx, qword [r12 + 0x30] 	      3331	ops.c	FUNCTION_45
0x400a799	      0x498b5c2438	            mov rbx, qword [r12 + 0x38] 	      3331	ops.c	FUNCTION_45
0x400a79e	    0x488988001200	          mov qword [rax + 0x1200], rcx 	      3331	ops.c	FUNCTION_45
0x400a7a5	    0x488998081200	          mov qword [rax + 0x1208], rbx 	      3331	ops.c	FUNCTION_45
0x400a7ac	     0xf85c6feffff	                           jne 0x400a678	      3332	ops.c	FUNCTION_45	IF_36
0x400a7b2	      0x418b5c2460	            mov ebx, dword [r12 + 0x60] 	      3332	ops.c	FUNCTION_45	IF_36
0x400a7b7	            0x85db	                           test ebx, ebx	      3332	ops.c	FUNCTION_45	IF_36
0x400a7b9	     0xf85b9feffff	                           jne 0x400a678	      3332	ops.c	FUNCTION_45	IF_36
0x400a7bf	    0xc780e8110000	            mov dword [rax + 0x11e8], 0 	      3334	ops.c	FUNCTION_45	IF_36
0x400a7c9	    0xc78008120000	   mov dword [rax + 0x1208], 0x7fffffff 	      3335	ops.c	FUNCTION_45	IF_36
0x400a7d3	      0xe9a0feffff	                           jmp 0x400a678	      3335	ops.c	FUNCTION_45	IF_36
0x400a7d8	     0xf1f84000000	                   nop dword [rax + rax]	      3335	ops.c	FUNCTION_45	IF_36
0x400a7e0	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x400a7e5	    0x488b3d000000	            mov rdi, qword [0x0400a7ec] 	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x400a7ec	      0x4c8d44244c	                    lea r8, [rsp + 0x4c]	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x400a7f1	      0x488d542448	                   lea rdx, [rsp + 0x48]	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x400a7f6	            0x31c9	                            xor ecx, ecx	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x400a7f8	      0x4c894c2420	              mov qword [rsp + 0x20], r9	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x400a7fd	      0x4c89542418	             mov qword [rsp + 0x18], r10	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x400a802	      0x44895c2410	            mov dword [rsp + 0x10], r11d	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x400a807	      0xe800000000	                          call 0x400a80c	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x400a80c	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400a811	          0x4963f5	                        movsxd rsi, r13d	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400a814	      0x448b5c2410	           mov r11d, dword [rsp + 0x10] 	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400a819	      0x4c8b4c2420	              mov r9, qword [rsp + 0x20]	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400a81e	          0x4c01d6	                            add rsi, r10	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400a821	          0x803e00	                       cmp byte [rsi], 0	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400a824	     0xf85ce010000	                           jne 0x400a9f8	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400a82a	      0x498b442430	            mov rax, qword [r12 + 0x30] 	      3207	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x400a82f	      0x4939442420	            cmp qword [r12 + 0x20], rax 	      3207	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x400a834	     0xf84e7030000	                            je 0x400ac21	      3207	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x400a83a	      0x418b442414	            mov eax, dword [r12 + 0x14] 	      3219	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x400a83f	      0x418b54243c	            mov edx, dword [r12 + 0x3c] 	      3218	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x400a844	             0x1c2	                            add edx, eax	      3218	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x400a846	          0x4129c5	                           sub r13d, eax	      3220	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x400a849	        0x89542474	             mov dword [rsp + 0x74], edx	      3218	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x400a84d	      0xe971fcffff	                           jmp 0x400a4c3	      3218	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x400a852	    0x660f1f440000	                    nop word [rax + rax]	      3218	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x400a858	    0x488b3d000000	            mov rdi, qword [0x0400a85f] 	      3178	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x400a85f	      0x488d542448	                   lea rdx, [rsp + 0x48]	      3178	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x400a864	      0x498d742420	                   lea rsi, [r12 + 0x20]	      3178	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x400a869	      0x4c8d44244c	                    lea r8, [rsp + 0x4c]	      3178	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x400a86e	            0x31c9	                            xor ecx, ecx	      3178	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x400a870	      0x4c89542418	             mov qword [rsp + 0x18], r10	      3178	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x400a875	      0x44895c2410	            mov dword [rsp + 0x10], r11d	      3178	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x400a87a	      0xe800000000	                          call 0x400a87f	      3178	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x400a87f	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      3179	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400a883	        0x8b542448	            mov edx, dword [rsp + 0x48] 	      3179	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400a887	      0x448b5c2410	           mov r11d, dword [rsp + 0x10] 	      3179	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400a88c	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	      3179	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400a891	            0x39d0	                            cmp eax, edx	      3179	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400a893	            0x7418	                            je 0x400a8ad	      3179	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400a895	      0x418b4c242c	            mov ecx, dword [r12 + 0x2c] 	      3179	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400a89a	            0x85c9	                           test ecx, ecx	      3179	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400a89c	            0x7e0f	                           jle 0x400a8ad	      3179	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400a89e	            0x29d0	                            sub eax, edx	      3183	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400a8a0	        0x4183c301	                             add r11d, 1	      3185	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400a8a4	          0x83c001	                              add eax, 1	      3183	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400a8a7	            0x29c8	                            sub eax, ecx	      3183	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400a8a9	        0x89442470	             mov dword [rsp + 0x70], eax	      3183	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400a8ad	          0x4d63cb	                         movsxd r9, r11d	      3183	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400a8b0	      0xe95bfbffff	                           jmp 0x400a410	      3183	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400a8b5	           0xf1f00	                         nop dword [rax]	      3183	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400a8b8	      0xbe01000000	                              mov esi, 1	      3076	ops.c	FUNCTION_45	IF_1	CALL_1
0x400a8bd	      0xe800000000	                          call 0x400a8c2	      3076	ops.c	FUNCTION_45	IF_1	CALL_1
0x400a8c2	            0x85c0	                           test eax, eax	      3076	ops.c	FUNCTION_45	IF_1	CALL_1
0x400a8c4	     0xf840d030000	                            je 0x400abd7	      3076	ops.c	FUNCTION_45	IF_1	CALL_1
0x400a8ca	      0x418b442404	                mov eax, dword [r12 + 4]	      3081	ops.c	FUNCTION_45	IF_2
0x400a8cf	          0x83f85f	                           cmp eax, 0x5f	      3081	ops.c	FUNCTION_45	IF_2
0x400a8d2	     0xf8460feffff	                            je 0x400a738	      3081	ops.c	FUNCTION_45	IF_2
0x400a8d8	    0x8b2d00000000	            mov ebp, dword [0x0400a8de] 	      3085	ops.c	FUNCTION_45	IF_3
0x400a8de	            0x85ed	                           test ebp, ebp	      3085	ops.c	FUNCTION_45	IF_3
0x400a8e0	     0xf85c0030000	                           jne 0x400aca6	      3085	ops.c	FUNCTION_45	IF_3
0x400a8e6	          0x83f82a	                           cmp eax, 0x2a	      3085	ops.c	FUNCTION_45	IF_3
0x400a8e9	     0xf85b7030000	                           jne 0x400aca6	      3085	ops.c	FUNCTION_45	IF_3
0x400a8ef	      0x448b5c2428	           mov r11d, dword [rsp + 0x28] 	      3091	ops.c	FUNCTION_45	IF_5
0x400a8f4	    0x41c744240400	                  mov dword [r12 + 4], 0	      3086	ops.c	FUNCTION_45	IF_3
0x400a8fd	          0x4585db	                         test r11d, r11d	      3091	ops.c	FUNCTION_45	IF_5
0x400a900	     0xf8526f9ffff	                           jne 0x400a22c	      3091	ops.c	FUNCTION_45	IF_5
0x400a906	      0x418b7c2404	                mov edi, dword [r12 + 4]	      3092	ops.c	FUNCTION_45	CALL_3
0x400a90b	      0xbe01000000	                              mov esi, 1	      3092	ops.c	FUNCTION_45	CALL_3
0x400a910	      0xe800000000	                          call 0x400a915	      3092	ops.c	FUNCTION_45	CALL_3
0x400a915	      0xe912f9ffff	                           jmp 0x400a22c	      3092	ops.c	FUNCTION_45	CALL_3
0x400a91a	    0x660f1f440000	                    nop word [rax + rax]	      3092	ops.c	FUNCTION_45	CALL_3
0x400a920	      0x458b6c2438	           mov r13d, dword [r12 + 0x38] 	      3193	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400a925	          0x4d63cb	                         movsxd r9, r11d	      3193	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400a928	      0xe996fbffff	                           jmp 0x400a4c3	      3193	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400a92d	           0xf1f00	                         nop dword [rax]	      3193	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400a930	      0x418b7c2414	            mov edi, dword [r12 + 0x14] 	      3107	ops.c	FUNCTION_45	IF_7
0x400a935	            0x85ff	                           test edi, edi	      3107	ops.c	FUNCTION_45	IF_7
0x400a937	     0xf8534f9ffff	                           jne 0x400a271	      3107	ops.c	FUNCTION_45	IF_7
0x400a93d	      0x418b74245c	            mov esi, dword [r12 + 0x5c] 	      3108	ops.c	FUNCTION_45	IF_7
0x400a942	            0x85f6	                           test esi, esi	      3108	ops.c	FUNCTION_45	IF_7
0x400a944	     0xf85ab020000	                           jne 0x400abf5	      3108	ops.c	FUNCTION_45	IF_7
0x400a94a	      0x418b4c2460	            mov ecx, dword [r12 + 0x60] 	      3109	ops.c	FUNCTION_45	IF_7
0x400a94f	            0x85c9	                           test ecx, ecx	      3109	ops.c	FUNCTION_45	IF_7
0x400a951	     0xf851af9ffff	                           jne 0x400a271	      3109	ops.c	FUNCTION_45	IF_7
0x400a957	      0x418b542438	            mov edx, dword [r12 + 0x38] 	      3111	ops.c	FUNCTION_45	IF_7
0x400a95c	            0x85d2	                           test edx, edx	      3111	ops.c	FUNCTION_45	IF_7
0x400a95e	     0xf850df9ffff	                           jne 0x400a271	      3111	ops.c	FUNCTION_45	IF_7
0x400a964	    0x48837c240801	                  cmp qword [rsp + 8], 1	      3111	ops.c	FUNCTION_45	IF_7
0x400a96a	     0xf8e01f9ffff	                           jle 0x400a271	      3111	ops.c	FUNCTION_45	IF_7
0x400a970	        0x4983ee01	                              sub r14, 1	      3114	ops.c	FUNCTION_45	IF_7
0x400a974	    0x48836c240801	                  sub qword [rsp + 8], 1	      3115	ops.c	FUNCTION_45	IF_7
0x400a97a	      0xb801000000	                              mov eax, 1	      3115	ops.c	FUNCTION_45	IF_7
0x400a97f	    0xc74424040100	                  mov dword [rsp + 4], 1	      3113	ops.c	FUNCTION_45	IF_7
0x400a987	      0xe9eaf8ffff	                           jmp 0x400a276	      3113	ops.c	FUNCTION_45	IF_7
0x400a98c	         0xf1f4000	                         nop dword [rax]	      3113	ops.c	FUNCTION_45	IF_7
0x400a990	    0x4981ff000000	                              cmp r15, 0	      3345	ops.c	FUNCTION_45	IF_37
0x400a997	            0x743a	                            je 0x400a9d3	      3345	ops.c	FUNCTION_45	IF_37
0x400a999	      0x448b542428	           mov r10d, dword [rsp + 0x28] 	      3346	ops.c	FUNCTION_45	IF_37
0x400a99e	          0x4585d2	                         test r10d, r10d	      3346	ops.c	FUNCTION_45	IF_37
0x400a9a1	     0xf850e020000	                           jne 0x400abb5	      3346	ops.c	FUNCTION_45	IF_37
0x400a9a7	      0x458b4c2404	                mov r9d, dword [r12 + 4]	      3346	ops.c	FUNCTION_45	IF_37
0x400a9ac	          0x4585c9	                           test r9d, r9d	      3346	ops.c	FUNCTION_45	IF_37
0x400a9af	     0xf8543010000	                           jne 0x400aaf8	      3346	ops.c	FUNCTION_45	IF_37
0x400a9b5	    0x8b0500000000	            mov eax, dword [0x0400a9bb] 	      3347	ops.c	FUNCTION_45	IF_37
0x400a9bb	     0xb0500000000	              or eax, dword [0x0400a9c1]	      3347	ops.c	FUNCTION_45	IF_37
0x400a9c1	            0xa801	                              test al, 1	      3347	ops.c	FUNCTION_45	IF_37
0x400a9c3	     0xf842f010000	                            je 0x400aaf8	      3347	ops.c	FUNCTION_45	IF_37
0x400a9c9	      0xbf00000000	                              mov edi, 0	      3351	ops.c	FUNCTION_45	IF_37	CALL_40
0x400a9ce	      0xe87d5dffff	                  call sym.copy_yank_reg	      3351	ops.c	FUNCTION_45	IF_37	CALL_40
0x400a9d3	      0xbf00000000	                              mov edi, 0	      3353	ops.c	FUNCTION_45	IF_37	CALL_41
0x400a9d8	      0xbb01000000	                              mov ebx, 1	      3356	ops.c	FUNCTION_45	IF_37
0x400a9dd	      0xe800000000	                          call 0x400a9e2	      3353	ops.c	FUNCTION_45	IF_37	CALL_41
0x400a9e2	      0xbf00000000	                              mov edi, 0	      3354	ops.c	FUNCTION_45	IF_37	CALL_42
0x400a9e7	      0xe800000000	                          call 0x400a9ec	      3354	ops.c	FUNCTION_45	IF_37	CALL_42
0x400a9ec	      0xe999fcffff	                           jmp 0x400a68a	      3354	ops.c	FUNCTION_45	IF_37	CALL_42
0x400a9f1	     0xf1f80000000	                         nop dword [rax]	      3354	ops.c	FUNCTION_45	IF_37	CALL_42
0x400a9f8	        0x8b442448	            mov eax, dword [rsp + 0x48] 	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400a9fc	      0x410344243c	             add eax, dword [r12 + 0x3c]	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400aa01	        0x3b44244c	            cmp eax, dword [rsp + 0x4c] 	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400aa05	     0xf8db8faffff	                           jge 0x400a4c3	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400aa0b	      0x4c894c2420	              mov qword [rsp + 0x20], r9	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400aa10	      0x44895c2418	            mov dword [rsp + 0x18], r11d	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400aa15	          0x4c89d7	                            mov rdi, r10	      3203	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400aa18	      0x4c89542410	             mov qword [rsp + 0x10], r10	      3203	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400aa1d	    0xff1500000000	                 call qword [0x0400aa23]	      3203	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400aa23	            0x85c0	                           test eax, eax	      3203	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400aa25	      0x4c8b542410	            mov r10, qword [rsp + 0x10] 	      3203	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400aa2a	      0x448b5c2418	           mov r11d, dword [rsp + 0x18] 	      3203	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400aa2f	      0x4c8b4c2420	              mov r9, qword [rsp + 0x20]	      3203	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400aa34	     0xf84f0fdffff	                            je 0x400a82a	      3203	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400aa3a	      0xe984faffff	                           jmp 0x400a4c3	      3203	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400aa3f	    0x488b3d000000	            mov rdi, qword [0x0400aa46] 	      3266	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x400aa46	      0xbe3e000000	                           mov esi, 0x3e	      3266	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x400aa4b	      0xe800000000	                          call 0x400aa50	      3266	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x400aa50	          0x4885c0	                           test rax, rax	      3266	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x400aa53	     0xf8516fbffff	                           jne 0x400a56f	      3266	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x400aa59	        0x498b5708	                mov rdx, qword [r15 + 8]	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x400aa5d	          0x498b07	                    mov rax, qword [r15]	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x400aa60	      0x488b7cd0f8	        mov rdi, qword [rax + rdx*8 - 8]	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x400aa65	      0xe800000000	                          call 0x400aa6a	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x400aa6a	          0x4889c5	                            mov rbp, rax	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x400aa6d	    0x488b05000000	            mov rax, qword [0x0400aa74] 	      3269	ops.c	FUNCTION_45	IF_23	IF_26	CALL_22
0x400aa74	          0x488b00	                    mov rax, qword [rax]	      3269	ops.c	FUNCTION_45	IF_23	IF_26	CALL_22
0x400aa77	          0x488b38	                    mov rdi, qword [rax]	      3269	ops.c	FUNCTION_45	IF_23	IF_26	CALL_22
0x400aa7a	      0xe800000000	                          call 0x400aa7f	      3269	ops.c	FUNCTION_45	IF_23	IF_26	CALL_22
0x400aa7f	      0x488d7c0501	                lea rdi, [rbp + rax + 1]	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x400aa84	      0xbe01000000	                              mov esi, 1	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x400aa89	      0xe800000000	                          call 0x400aa8e	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x400aa8e	          0x4885c0	                           test rax, rax	      3270	ops.c	FUNCTION_45	IF_23	IF_26	IF_27
0x400aa91	          0x4989c5	                            mov r13, rax	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x400aa94	     0xf84f8010000	                            je 0x400ac92	      3270	ops.c	FUNCTION_45	IF_23	IF_26	IF_27
0x400aa9a	          0x498b07	                    mov rax, qword [r15]	      3275	ops.c	FUNCTION_45	IF_23	IF_26	CALL_23
0x400aa9d	        0x488d6bff	                      lea rbp, [rbx - 1]	      3275	ops.c	FUNCTION_45	IF_23	IF_26	CALL_23
0x400aaa1	          0x4c89ef	                            mov rdi, r13	       110	string3.h	FUNCTION_98	CALL_3
0x400aaa4	        0x488b34e8	            mov rsi, qword [rax + rbp*8]	       110	string3.h	FUNCTION_98	CALL_3
0x400aaa8	      0xe800000000	                          call 0x400aaad	       110	string3.h	FUNCTION_98	CALL_3
0x400aaad	    0x488b15000000	            mov rdx, qword [0x0400aab4] 	      3276	ops.c	FUNCTION_45	IF_23	IF_26	CALL_24
0x400aab4	          0x4889c7	                            mov rdi, rax	       148	string3.h	FUNCTION_102	CALL_3
0x400aab7	          0x488b12	                    mov rdx, qword [rdx]	      3276	ops.c	FUNCTION_45	IF_23	IF_26	CALL_24
0x400aaba	          0x488b32	                    mov rsi, qword [rdx]	       148	string3.h	FUNCTION_102	CALL_3
0x400aabd	      0xe800000000	                          call 0x400aac2	       148	string3.h	FUNCTION_102	CALL_3
0x400aac2	          0x498b07	                    mov rax, qword [r15]	      3277	ops.c	FUNCTION_45	IF_23	IF_26	CALL_25
0x400aac5	        0x488b3ce8	            mov rdi, qword [rax + rbp*8]	      3277	ops.c	FUNCTION_45	IF_23	IF_26	CALL_25
0x400aac9	      0xe800000000	                          call 0x400aace	      3277	ops.c	FUNCTION_45	IF_23	IF_26	CALL_25
0x400aace	    0x488b05000000	            mov rax, qword [0x0400aad5] 	      3278	ops.c	FUNCTION_45	IF_23	IF_26	CALL_26
0x400aad5	          0x488b00	                    mov rax, qword [rax]	      3278	ops.c	FUNCTION_45	IF_23	IF_26	CALL_26
0x400aad8	          0x488b38	                    mov rdi, qword [rax]	      3278	ops.c	FUNCTION_45	IF_23	IF_26	CALL_26
0x400aadb	      0xe800000000	                          call 0x400aae0	      3278	ops.c	FUNCTION_45	IF_23	IF_26	CALL_26
0x400aae0	          0x498b07	                    mov rax, qword [r15]	      3279	ops.c	FUNCTION_45	IF_23	IF_26
0x400aae3	      0xba01000000	                              mov edx, 1	      3280	ops.c	FUNCTION_45	IF_23	IF_26
0x400aae8	        0x4c892ce8	            mov qword [rax + rbp*8], r13	      3279	ops.c	FUNCTION_45	IF_23	IF_26
0x400aaec	      0xe980faffff	                           jmp 0x400a571	      3280	ops.c	FUNCTION_45	IF_23	IF_26
0x400aaf1	     0xf1f80000000	                         nop dword [rax]	      3280	ops.c	FUNCTION_45	IF_23	IF_26
0x400aaf8	    0x8b1500000000	            mov edx, dword [0x0400aafe] 	      3365	ops.c	FUNCTION_45	IF_39
0x400aafe	            0x85d2	                           test edx, edx	      3365	ops.c	FUNCTION_45	IF_39
0x400ab00	     0xf8504010000	                           jne 0x400ac0a	      3365	ops.c	FUNCTION_45	IF_39
0x400ab06	      0xe800000000	                          call 0x400ab0b	      3389	ops.c	FUNCTION_45	IF_42	CALL_51
0x400ab0b	            0x85c0	                           test eax, eax	      3389	ops.c	FUNCTION_45	IF_42	CALL_51
0x400ab0d	     0xf8425fcffff	                            je 0x400a738	      3389	ops.c	FUNCTION_45	IF_42	CALL_51
0x400ab13	    0x488b15000000	            mov rdx, qword [0x0400ab1a] 	      3390	ops.c	FUNCTION_45	CALL_52
0x400ab1a	      0x498d742404	                      lea rsi, [r12 + 4]	      3390	ops.c	FUNCTION_45	CALL_52
0x400ab1f	          0x4c89e7	                            mov rdi, r12	      3390	ops.c	FUNCTION_45	CALL_52
0x400ab22	        0x488d4a08	                      lea rcx, [rdx + 8]	      3390	ops.c	FUNCTION_45	CALL_52
0x400ab26	      0xe895f4ffff	        call sym.yank_do_autocmd.isra.12	      3390	ops.c	FUNCTION_45	CALL_52
0x400ab2b	      0xe908fcffff	                           jmp 0x400a738	      3390	ops.c	FUNCTION_45	CALL_52
0x400ab30	      0x488b442408	                mov rax, qword [rsp + 8]	      3299	ops.c	FUNCTION_45	IF_29	IF_31
0x400ab35	    0x483b05000000	            cmp rax, qword [0x0400ab3c] 	      3299	ops.c	FUNCTION_45	IF_29	IF_31
0x400ab3c	     0xf8e2efcffff	                           jle 0x400a770	      3299	ops.c	FUNCTION_45	IF_29	IF_31
0x400ab42	      0x418b6c2404	                mov ebp, dword [r12 + 4]	      3303	ops.c	FUNCTION_45	IF_29	IF_31	IF_32
0x400ab47	            0x85ed	                           test ebp, ebp	      3303	ops.c	FUNCTION_45	IF_29	IF_31	IF_32
0x400ab49	     0xf8511010000	                           jne 0x400ac60	      3303	ops.c	FUNCTION_45	IF_29	IF_31	IF_32
0x400ab4f	    0x488d9c24b000	                   lea rbx, [rsp + 0xb0]	      3303	ops.c	FUNCTION_45	IF_29	IF_31	IF_32
0x400ab57	    0xc68424b00000	                mov byte [rsp + 0xb0], 0	      3304	ops.c	FUNCTION_45	IF_29	IF_31	IF_32
0x400ab5f	      0xe800000000	                          call 0x400ab64	      3310	ops.c	FUNCTION_45	IF_29	IF_31	CALL_31
0x400ab64	    0x48837c240801	                  cmp qword [rsp + 8], 1	      3311	ops.c	FUNCTION_45	IF_29	IF_31	IF_33
0x400ab6a	      0xba05000000	                              mov edx, 5	      3314	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_33
0x400ab6f	     0xf84cdfbffff	                            je 0x400a742	      3311	ops.c	FUNCTION_45	IF_29	IF_31	IF_33
0x400ab75	      0x418b6c2460	            mov ebp, dword [r12 + 0x60] 	      3318	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35
0x400ab7a	      0xbe00000000	                              mov esi, 0	      3319	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35	CALL_37
0x400ab7f	            0x85ed	                           test ebp, ebp	      3318	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35
0x400ab81	            0x7505	                           jne 0x400ab88	      3318	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35
0x400ab83	      0xbe00000000	                              mov esi, 0	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x400ab88	            0x31ff	                            xor edi, edi	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x400ab8a	      0xe800000000	                          call 0x400ab8f	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x400ab8f	      0x488b742408	                mov rsi, qword [rsp + 8]	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x400ab94	          0x4889c7	                            mov rdi, rax	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x400ab97	          0x4889da	                            mov rdx, rbx	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x400ab9a	            0x31c0	                            xor eax, eax	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x400ab9c	      0xe800000000	                          call 0x400aba1	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x400aba1	      0xe9cafbffff	                           jmp 0x400a770	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x400aba6	      0xbf23000000	                           mov edi, 0x23	      3291	ops.c	FUNCTION_45	CALL_28
0x400abab	      0xe800000000	                          call 0x400abb0	      3291	ops.c	FUNCTION_45	CALL_28
0x400abb0	      0xe93afaffff	                           jmp 0x400a5ef	      3291	ops.c	FUNCTION_45	CALL_28
0x400abb5	    0x8b0500000000	            mov eax, dword [0x0400abbb] 	      3365	ops.c	FUNCTION_45	IF_39
0x400abbb	            0x85c0	                           test eax, eax	      3365	ops.c	FUNCTION_45	IF_39
0x400abbd	     0xf8475fbffff	                            je 0x400a738	      3365	ops.c	FUNCTION_45	IF_39
0x400abc3	    0x4981ff000000	                              cmp r15, 0	      3366	ops.c	FUNCTION_45	IF_39
0x400abca	     0xf8568fbffff	                           jne 0x400a738	      3366	ops.c	FUNCTION_45	IF_39
0x400abd0	            0x31db	                            xor ebx, ebx	      3366	ops.c	FUNCTION_45	IF_39
0x400abd2	      0xe903fbffff	                           jmp 0x400a6da	      3366	ops.c	FUNCTION_45	IF_39
0x400abd7	        0x89442404	                mov dword [rsp + 4], eax	      3366	ops.c	FUNCTION_45	IF_39
0x400abdb	      0xe800000000	                          call 0x400abe0	      3078	ops.c	FUNCTION_45	IF_1	CALL_2
0x400abe0	        0x8b442404	                mov eax, dword [rsp + 4]	      3079	ops.c	FUNCTION_45	IF_1
0x400abe4	      0xe9bbf7ffff	                           jmp 0x400a3a4	      3079	ops.c	FUNCTION_45	IF_1
0x400abe9	      0x41c6471001	                mov byte [r15 + 0x10], 1	      3262	ops.c	FUNCTION_45	IF_23	IF_25
0x400abee	            0x31d2	                            xor edx, edx	      3283	ops.c	FUNCTION_45	IF_23	ELSE_5
0x400abf0	      0xe97cf9ffff	                           jmp 0x400a571	      3283	ops.c	FUNCTION_45	IF_23	ELSE_5
0x400abf5	    0x488b05000000	            mov rax, qword [0x0400abfc] 	      3108	ops.c	FUNCTION_45	IF_7
0x400abfc	          0x80386f	                    cmp byte [rax], 0x6f	      3108	ops.c	FUNCTION_45	IF_7
0x400abff	     0xf856cf6ffff	                           jne 0x400a271	      3108	ops.c	FUNCTION_45	IF_7
0x400ac05	      0xe940fdffff	                           jmp 0x400a94a	      3108	ops.c	FUNCTION_45	IF_7
0x400ac0a	    0x4981ff000000	                              cmp r15, 0	      3366	ops.c	FUNCTION_45	IF_39
0x400ac11	            0x74bd	                            je 0x400abd0	      3366	ops.c	FUNCTION_45	IF_39
0x400ac13	            0x31db	                            xor ebx, ebx	      3366	ops.c	FUNCTION_45	IF_39
0x400ac15	      0xe995faffff	                           jmp 0x400a6af	      3366	ops.c	FUNCTION_45	IF_39
0x400ac1a	            0x31db	                            xor ebx, ebx	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x400ac1c	      0xe924f9ffff	                           jmp 0x400a545	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x400ac21	      0x418b442438	            mov eax, dword [r12 + 0x38] 	      3208	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x400ac26	      0x4139442428	            cmp dword [r12 + 0x28], eax 	      3208	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x400ac2b	     0xf8509fcffff	                           jne 0x400a83a	      3208	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x400ac31	      0x418b44243c	            mov eax, dword [r12 + 0x3c] 	      3212	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x400ac36	      0x412b44242c	             sub eax, dword [r12 + 0x2c]	      3212	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x400ac3b	      0x4103442414	             add eax, dword [r12 + 0x14]	      3212	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x400ac40	    0x4181fbffffff	                    cmp r11d, 0x7fffffff	      3226	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_20
0x400ac47	        0x89442470	             mov dword [rsp + 0x70], eax	      3212	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x400ac4b	     0xf851ff8ffff	                           jne 0x400a470	      3226	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_20
0x400ac51	    0x41bf01000000	                             mov r15d, 1	      3226	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_20
0x400ac57	      0xe9c2f7ffff	                           jmp 0x400a41e	      3226	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_20
0x400ac5c	         0xf1f4000	                         nop dword [rax]	      3226	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_20
0x400ac60	    0x488d9c24b000	                   lea rbx, [rsp + 0xb0]	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x400ac68	            0x31ff	                            xor edi, edi	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x400ac6a	      0xba05000000	                              mov edx, 5	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x400ac6f	      0xbe00000000	                              mov esi, 0	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x400ac74	      0xe800000000	                          call 0x400ac79	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x400ac79	            0x89e9	                            mov ecx, ebp	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x400ac7b	          0x4889c2	                            mov rdx, rax	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x400ac7e	      0xbe64000000	                           mov esi, 0x64	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x400ac83	          0x4889df	                            mov rdi, rbx	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x400ac86	            0x31c0	                            xor eax, eax	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x400ac88	      0xe800000000	                          call 0x400ac8d	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x400ac8d	      0xe9cdfeffff	                           jmp 0x400ab5f	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x400ac92	    0x488b05000000	            mov rax, qword [0x0400ac99] 	      3272	ops.c	FUNCTION_45	IF_23	IF_26	IF_27
0x400ac99	        0x488b6808	                mov rbp, qword [rax + 8]	      3272	ops.c	FUNCTION_45	IF_23	IF_26	IF_27
0x400ac9d	        0x4883ed01	                              sub rbp, 1	      3272	ops.c	FUNCTION_45	IF_23	IF_26	IF_27
0x400aca1	      0xe9ecf6ffff	                           jmp 0x400a392	      3273	ops.c	FUNCTION_45	IF_23	IF_26	IF_27
0x400aca6	    0x8b1d00000000	            mov ebx, dword [0x0400acac] 	      3087	ops.c	FUNCTION_45	ELSE_1	IF_4
0x400acac	            0x85db	                           test ebx, ebx	      3087	ops.c	FUNCTION_45	ELSE_1	IF_4
0x400acae	     0xf856af5ffff	                           jne 0x400a21e	      3087	ops.c	FUNCTION_45	ELSE_1	IF_4
0x400acb4	          0x83f82b	                           cmp eax, 0x2b	      3087	ops.c	FUNCTION_45	ELSE_1	IF_4
0x400acb7	     0xf8432fcffff	                            je 0x400a8ef	      3087	ops.c	FUNCTION_45	ELSE_1	IF_4
0x400acbd	      0xe95cf5ffff	                           jmp 0x400a21e	      3087	ops.c	FUNCTION_45	ELSE_1	IF_4
0x400acc2	      0xe800000000	                          call 0x400acc7	      3399	ops.c	FUNCTION_45
do_record	SWITCH,0:IF,3:WHILE,0:DO,0:FOR,0:ELSE,3:CALL,6:functions,0	136
0x40029c0	            0x4156	                                push r14	      1088	ops.c	FUNCTION_21
0x40029c2	            0x4155	                                push r13	      1088	ops.c	FUNCTION_21
0x40029c4	            0x4154	                                push r12	      1088	ops.c	FUNCTION_21
0x40029c6	              0x55	                                push rbp	      1088	ops.c	FUNCTION_21
0x40029c7	              0x53	                                push rbx	      1088	ops.c	FUNCTION_21
0x40029c8	        0x4883ec10	                           sub rsp, 0x10	      1088	ops.c	FUNCTION_21
0x40029cc	    0x8b0d00000000	            mov ecx, dword [0x040029d2] 	      1094	ops.c	FUNCTION_21	IF_1
0x40029d2	            0x85c9	                           test ecx, ecx	      1094	ops.c	FUNCTION_21	IF_1
0x40029d4	            0x7562	                           jne 0x4002a38	      1094	ops.c	FUNCTION_21	IF_1
0x40029d6	            0x85ff	                           test edi, edi	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x40029d8	            0x781a	                            js 0x40029f4	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x40029da	            0x89f8	                            mov eax, edi	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x40029dc	          0x83e0df	                     and eax, 0xffffffdf	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x40029df	          0x83e841	                           sub eax, 0x41	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x40029e2	          0x83f819	                           cmp eax, 0x19	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x40029e5	            0x7621	                           jbe 0x4002a08	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x40029e7	          0x8d47d0	                   lea eax, [rdi - 0x30]	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x40029ea	          0x83f809	                              cmp eax, 9	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x40029ed	            0x7619	                           jbe 0x4002a08	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x40029ef	          0x83ff22	                           cmp edi, 0x22	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x40029f2	            0x7414	                            je 0x4002a08	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x40029f4	        0x4883c410	                           add rsp, 0x10	      1138	ops.c	FUNCTION_21
0x40029f8	            0x31c0	                            xor eax, eax	      1098	ops.c	FUNCTION_21	IF_1	IF_2
0x40029fa	              0x5b	                                 pop rbx	      1138	ops.c	FUNCTION_21
0x40029fb	              0x5d	                                 pop rbp	      1138	ops.c	FUNCTION_21
0x40029fc	            0x415c	                                 pop r12	      1138	ops.c	FUNCTION_21
0x40029fe	            0x415d	                                 pop r13	      1138	ops.c	FUNCTION_21
0x4002a00	            0x415e	                                 pop r14	      1138	ops.c	FUNCTION_21
0x4002a02	              0xc3	                                     ret	      1138	ops.c	FUNCTION_21
0x4002a03	       0xf1f440000	                   nop dword [rax + rax]	      1138	ops.c	FUNCTION_21
0x4002a08	        0x897c240c	              mov dword [rsp + 0xc], edi	      1101	ops.c	FUNCTION_21	IF_1	ELSE_1
0x4002a0c	    0x893d00000000	            mov dword [0x04002a12], edi 	      1101	ops.c	FUNCTION_21	IF_1	ELSE_1
0x4002a12	      0xe800000000	                          call 0x4002a17	      1102	ops.c	FUNCTION_21	IF_1	ELSE_1	CALL_2
0x4002a17	        0x8b7c240c	              mov edi, dword [rsp + 0xc]	      1103	ops.c	FUNCTION_21	IF_1	ELSE_1
0x4002a1b	      0xb801000000	                              mov eax, 1	      1104	ops.c	FUNCTION_21	IF_1	ELSE_1
0x4002a20	    0x893d00000000	            mov dword [0x04002a26], edi 	      1103	ops.c	FUNCTION_21	IF_1	ELSE_1
0x4002a26	        0x4883c410	                           add rsp, 0x10	      1138	ops.c	FUNCTION_21
0x4002a2a	              0x5b	                                 pop rbx	      1138	ops.c	FUNCTION_21
0x4002a2b	              0x5d	                                 pop rbp	      1138	ops.c	FUNCTION_21
0x4002a2c	            0x415c	                                 pop r12	      1138	ops.c	FUNCTION_21
0x4002a2e	            0x415d	                                 pop r13	      1138	ops.c	FUNCTION_21
0x4002a30	            0x415e	                                 pop r14	      1138	ops.c	FUNCTION_21
0x4002a32	              0xc3	                                     ret	      1138	ops.c	FUNCTION_21
0x4002a33	       0xf1f440000	                   nop dword [rax + rax]	      1138	ops.c	FUNCTION_21
0x4002a38	      0xbf00000000	                              mov edi, 0	      1115	ops.c	FUNCTION_21	ELSE_2	CALL_3
0x4002a3d	    0xc70500000000	               mov dword [0x04002a47], 0	      1114	ops.c	FUNCTION_21	ELSE_2
0x4002a47	      0xe800000000	                          call 0x4002a4c	      1115	ops.c	FUNCTION_21	ELSE_2	CALL_3
0x4002a4c	      0xe800000000	                          call 0x4002a51	      1116	ops.c	FUNCTION_21	ELSE_2	CALL_4
0x4002a51	          0x4885c0	                           test rax, rax	      1117	ops.c	FUNCTION_21	ELSE_2	IF_3
0x4002a54	          0x4889c3	                            mov rbx, rax	      1116	ops.c	FUNCTION_21	ELSE_2	CALL_4
0x4002a57	            0x749b	                            je 0x40029f4	      1117	ops.c	FUNCTION_21	ELSE_2	IF_3
0x4002a59	          0x4889c7	                            mov rdi, rax	      1122	ops.c	FUNCTION_21	ELSE_2	ELSE_3	CALL_5
0x4002a5c	      0xe800000000	                          call 0x4002a61	      1122	ops.c	FUNCTION_21	ELSE_2	ELSE_3	CALL_5
0x4002a61	    0x8b2d00000000	            mov ebp, dword [0x04002a67] 	      1131	ops.c	FUNCTION_21	ELSE_2	ELSE_3	CALL_6
0x4002a67	    0x4c8b2d000000	            mov r13, qword [0x04002a6e] 	      1128	ops.c	FUNCTION_21	ELSE_2	ELSE_3
0x4002a6e	    0x4c8b25000000	            mov r12, qword [0x04002a75] 	      1129	ops.c	FUNCTION_21	ELSE_2	ELSE_3
0x4002a75	            0x85ed	                           test ebp, ebp	      1153	ops.c	FUNCTION_22	IF_1	CALL_1
0x4002a77	     0xf85b3000000	                           jne 0x4002b30	      1153	ops.c	FUNCTION_22	IF_1	CALL_1
0x4002a7d	      0xbe01000000	                              mov esi, 1	      1163	ops.c	FUNCTION_22	CALL_4
0x4002a82	            0x89ef	                            mov edi, ebp	      1163	ops.c	FUNCTION_22	CALL_4
0x4002a84	      0xe800000000	                          call 0x4002a89	      1163	ops.c	FUNCTION_22	CALL_4
0x4002a89	    0x8b1500000000	            mov edx, dword [0x04002a8f] 	      1164	ops.c	FUNCTION_22	IF_3
0x4002a8f	    0x488b05000000	            mov rax, qword [0x04002a96] 	      1164	ops.c	FUNCTION_22	IF_3
0x4002a96	            0x85d2	                           test edx, edx	      1164	ops.c	FUNCTION_22	IF_3
0x4002a98	     0xf84c2000000	                            je 0x4002b60	      1164	ops.c	FUNCTION_22	IF_3
0x4002a9e	          0x488b10	                    mov rdx, qword [rax]	      1164	ops.c	FUNCTION_22	IF_3
0x4002aa1	          0x4885d2	                           test rdx, rdx	      1164	ops.c	FUNCTION_22	IF_3
0x4002aa4	     0xf84b6000000	                            je 0x4002b60	      1164	ops.c	FUNCTION_22	IF_3
0x4002aaa	        0x488b4008	                mov rax, qword [rax + 8]	      1166	ops.c	FUNCTION_22	IF_3
0x4002aae	      0x488d6cc2f8	              lea rbp, [rdx + rax*8 - 8]	      1166	ops.c	FUNCTION_22	IF_3
0x4002ab3	        0x488b7d00	                    mov rdi, qword [rbp]	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x4002ab7	      0xe800000000	                          call 0x4002abc	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x4002abc	          0x4889df	                            mov rdi, rbx	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x4002abf	          0x4989c6	                            mov r14, rax	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x4002ac2	      0xe800000000	                          call 0x4002ac7	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x4002ac7	      0x498d7c0601	                lea rdi, [r14 + rax + 1]	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x4002acc	      0xbe01000000	                              mov esi, 1	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x4002ad1	      0xe800000000	                          call 0x4002ad6	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x4002ad6	          0x4885c0	                           test rax, rax	      1168	ops.c	FUNCTION_22	IF_3	IF_4
0x4002ad9	          0x4989c6	                            mov r14, rax	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x4002adc	     0xf84ce000000	                            je 0x4002bb0	      1168	ops.c	FUNCTION_22	IF_3	IF_4
0x4002ae2	        0x488b7500	                    mov rsi, qword [rbp]	       110	string3.h	FUNCTION_98	CALL_3
0x4002ae6	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_98	CALL_3
0x4002ae9	      0xe800000000	                          call 0x4002aee	       110	string3.h	FUNCTION_98	CALL_3
0x4002aee	          0x4889de	                            mov rsi, rbx	       148	string3.h	FUNCTION_102	CALL_3
0x4002af1	          0x4889c7	                            mov rdi, rax	       148	string3.h	FUNCTION_102	CALL_3
0x4002af4	      0xe800000000	                          call 0x4002af9	       148	string3.h	FUNCTION_102	CALL_3
0x4002af9	          0x4889df	                            mov rdi, rbx	      1175	ops.c	FUNCTION_22	IF_3	CALL_11
0x4002afc	      0xe800000000	                          call 0x4002b01	      1175	ops.c	FUNCTION_22	IF_3	CALL_11
0x4002b01	        0x488b7d00	                    mov rdi, qword [rbp]	      1176	ops.c	FUNCTION_22	IF_3	CALL_12
0x4002b05	      0xe800000000	                          call 0x4002b0a	      1176	ops.c	FUNCTION_22	IF_3	CALL_12
0x4002b0a	        0x4c897500	                    mov qword [rbp], r14	      1177	ops.c	FUNCTION_22	IF_3
0x4002b0e	      0xb801000000	                              mov eax, 1	      1195	ops.c	FUNCTION_22
0x4002b13	    0x4c892d000000	            mov qword [0x04002b1a], r13 	      1133	ops.c	FUNCTION_21	ELSE_2	ELSE_3
0x4002b1a	    0x4c8925000000	            mov qword [0x04002b21], r12 	      1134	ops.c	FUNCTION_21	ELSE_2	ELSE_3
0x4002b21	        0x4883c410	                           add rsp, 0x10	      1138	ops.c	FUNCTION_21
0x4002b25	              0x5b	                                 pop rbx	      1138	ops.c	FUNCTION_21
0x4002b26	              0x5d	                                 pop rbp	      1138	ops.c	FUNCTION_21
0x4002b27	            0x415c	                                 pop r12	      1138	ops.c	FUNCTION_21
0x4002b29	            0x415d	                                 pop r13	      1138	ops.c	FUNCTION_21
0x4002b2b	            0x415e	                                 pop r14	      1138	ops.c	FUNCTION_21
0x4002b2d	              0xc3	                                     ret	      1138	ops.c	FUNCTION_21
0x4002b2e	            0x6690	                                     nop	      1138	ops.c	FUNCTION_21
0x4002b30	      0xbe01000000	                              mov esi, 1	      1153	ops.c	FUNCTION_22	IF_1	CALL_1
0x4002b35	            0x89ef	                            mov edi, ebp	      1153	ops.c	FUNCTION_22	IF_1	CALL_1
0x4002b37	      0xe800000000	                          call 0x4002b3c	      1153	ops.c	FUNCTION_22	IF_1	CALL_1
0x4002b3c	            0x85c0	                           test eax, eax	      1153	ops.c	FUNCTION_22	IF_1	CALL_1
0x4002b3e	            0x7470	                            je 0x4002bb0	      1153	ops.c	FUNCTION_22	IF_1	CALL_1
0x4002b40	          0x83fd5f	                           cmp ebp, 0x5f	      1158	ops.c	FUNCTION_22	IF_2
0x4002b43	     0xf8534ffffff	                           jne 0x4002a7d	      1158	ops.c	FUNCTION_22	IF_2
0x4002b49	          0x4889df	                            mov rdi, rbx	      1160	ops.c	FUNCTION_22	IF_2	CALL_3
0x4002b4c	      0xe800000000	                          call 0x4002b51	      1160	ops.c	FUNCTION_22	IF_2	CALL_3
0x4002b51	      0xb801000000	                              mov eax, 1	      1161	ops.c	FUNCTION_22	IF_2
0x4002b56	            0xebbb	                           jmp 0x4002b13	      1161	ops.c	FUNCTION_22	IF_2
0x4002b58	     0xf1f84000000	                   nop dword [rax + rax]	      1161	ops.c	FUNCTION_22	IF_2
0x4002b60	        0x488b7808	                mov rdi, qword [rax + 8]	      3045	ops.c	FUNCTION_44	CALL_1
0x4002b64	      0xe877d8ffff	                      call sym.free_yank	      3045	ops.c	FUNCTION_44	CALL_1
0x4002b69	    0x488b2d000000	            mov rbp, qword [0x04002b70] 	      1182	ops.c	FUNCTION_22	ELSE_1	IF_5
0x4002b70	      0xbf08000000	                              mov edi, 8	      1183	ops.c	FUNCTION_22	ELSE_1	IF_5	CALL_14
0x4002b75	      0xe800000000	                          call 0x4002b7a	      1183	ops.c	FUNCTION_22	ELSE_1	IF_5	CALL_14
0x4002b7a	          0x4885c0	                           test rax, rax	      1182	ops.c	FUNCTION_22	ELSE_1	IF_5
0x4002b7d	        0x48894500	                    mov qword [rbp], rax	      1182	ops.c	FUNCTION_22	ELSE_1	IF_5
0x4002b81	            0x742d	                            je 0x4002bb0	      1182	ops.c	FUNCTION_22	ELSE_1	IF_5
0x4002b83	    0x488b2d000000	            mov rbp, qword [0x04002b8a] 	      1188	ops.c	FUNCTION_22	ELSE_1
0x4002b8a	        0x488b4500	                    mov rax, qword [rbp]	      1188	ops.c	FUNCTION_22	ELSE_1
0x4002b8e	          0x488918	                    mov qword [rax], rbx	      1188	ops.c	FUNCTION_22	ELSE_1
0x4002b91	    0x48c745080100	                  mov qword [rbp + 8], 1	      1189	ops.c	FUNCTION_22	ELSE_1
0x4002b99	        0xc6451000	                mov byte [rbp + 0x10], 0	      1190	ops.c	FUNCTION_22	ELSE_1
0x4002b9d	      0xe800000000	                          call 0x4002ba2	      1192	ops.c	FUNCTION_22	ELSE_1	CALL_16
0x4002ba2	        0x48894518	            mov qword [rbp + 0x18], rax 	      1192	ops.c	FUNCTION_22	ELSE_1	CALL_16
0x4002ba6	      0xb801000000	                              mov eax, 1	      1195	ops.c	FUNCTION_22
0x4002bab	      0xe963ffffff	                           jmp 0x4002b13	      1195	ops.c	FUNCTION_22
0x4002bb0	          0x4889df	                            mov rdi, rbx	      1185	ops.c	FUNCTION_22	ELSE_1	IF_5	CALL_15
0x4002bb3	      0xe800000000	                          call 0x4002bb8	      1185	ops.c	FUNCTION_22	ELSE_1	IF_5	CALL_15
0x4002bb8	            0x31c0	                            xor eax, eax	      1186	ops.c	FUNCTION_22	ELSE_1	IF_5
0x4002bba	      0xe954ffffff	                           jmp 0x4002b13	      1186	ops.c	FUNCTION_22	ELSE_1	IF_5
op_addsub	SWITCH,0:IF,19:WHILE,0:DO,0:FOR,1:ELSE,4:CALL,23:functions,0	228
0x40063e0	            0x4157	                                push r15	      5512	ops.c	FUNCTION_66
0x40063e2	            0x4156	                                push r14	      5512	ops.c	FUNCTION_66
0x40063e4	          0x4989ff	                            mov r15, rdi	      5512	ops.c	FUNCTION_66
0x40063e7	            0x4155	                                push r13	      5512	ops.c	FUNCTION_66
0x40063e9	            0x4154	                                push r12	      5512	ops.c	FUNCTION_66
0x40063eb	          0x4989f5	                            mov r13, rsi	      5512	ops.c	FUNCTION_66
0x40063ee	              0x55	                                push rbp	      5512	ops.c	FUNCTION_66
0x40063ef	              0x53	                                push rbx	      5512	ops.c	FUNCTION_66
0x40063f0	    0x4881ec880000	                           sub rsp, 0x88	      5512	ops.c	FUNCTION_66
0x40063f7	    0x8b3500000000	            mov esi, dword [0x040063fd] 	      5518	ops.c	FUNCTION_66	IF_1
0x40063fd	    0x64488b042528	                mov rax, qword fs:[0x28]	      5512	ops.c	FUNCTION_66
0x4006406	      0x4889442478	             mov qword [rsp + 0x78], rax	      5512	ops.c	FUNCTION_66
0x400640b	            0x31c0	                            xor eax, eax	      5512	ops.c	FUNCTION_66
0x400640d	            0x85f6	                           test esi, esi	      5518	ops.c	FUNCTION_66	IF_1
0x400640f	            0x754f	                           jne 0x4006460	      5518	ops.c	FUNCTION_66	IF_1
0x4006411	    0x488b05000000	            mov rax, qword [0x04006418] 	      5520	ops.c	FUNCTION_66	IF_1
0x4006418	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      5520	ops.c	FUNCTION_66	IF_1
0x400641c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5520	ops.c	FUNCTION_66	IF_1
0x4006420	      0x4889542428	             mov qword [rsp + 0x28], rdx	      5520	ops.c	FUNCTION_66	IF_1
0x4006425	      0x4889442420	             mov qword [rsp + 0x20], rax	      5520	ops.c	FUNCTION_66	IF_1
0x400642a	      0xe800000000	                          call 0x400642f	      5521	ops.c	FUNCTION_66	IF_1	IF_2	CALL_1
0x400642f	            0x85c0	                           test eax, eax	      5521	ops.c	FUNCTION_66	IF_1	IF_2	CALL_1
0x4006431	     0xf8589020000	                           jne 0x40066c0	      5521	ops.c	FUNCTION_66	IF_1	IF_2	CALL_1
0x4006437	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      5613	ops.c	FUNCTION_66
0x400643c	    0x644833042528	                xor rax, qword fs:[0x28]	      5613	ops.c	FUNCTION_66
0x4006445	     0xf8534030000	                           jne 0x400677f	      5613	ops.c	FUNCTION_66
0x400644b	    0x4881c4880000	                           add rsp, 0x88	      5613	ops.c	FUNCTION_66
0x4006452	              0x5b	                                 pop rbx	      5613	ops.c	FUNCTION_66
0x4006453	              0x5d	                                 pop rbp	      5613	ops.c	FUNCTION_66
0x4006454	            0x415c	                                 pop r12	      5613	ops.c	FUNCTION_66
0x4006456	            0x415d	                                 pop r13	      5613	ops.c	FUNCTION_66
0x4006458	            0x415e	                                 pop r14	      5613	ops.c	FUNCTION_66
0x400645a	            0x415f	                                 pop r15	      5613	ops.c	FUNCTION_66
0x400645c	              0xc3	                                     ret	      5613	ops.c	FUNCTION_66
0x400645d	           0xf1f00	                         nop dword [rax]	      5613	ops.c	FUNCTION_66
0x4006460	        0x488b4730	            mov rax, qword [rdi + 0x30] 	      5533	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0x4006464	          0x4189d6	                           mov r14d, edx	      5533	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0x4006467	        0x488d7001	                      lea rsi, [rax + 1]	      5533	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0x400646b	        0x488b4720	            mov rax, qword [rdi + 0x20] 	      5533	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0x400646f	        0x488d78ff	                      lea rdi, [rax - 1]	      5533	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0x4006473	      0xe800000000	                          call 0x4006478	      5533	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0x4006478	            0x85c0	                           test eax, eax	      5533	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0x400647a	            0x74bb	                            je 0x4006437	      5533	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0x400647c	        0x498b4720	            mov rax, qword [r15 + 0x20] 	      5537	ops.c	FUNCTION_66	ELSE_1
0x4006480	        0x493b4730	            cmp rax, qword [r15 + 0x30] 	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x4006484	        0x498b4f28	            mov rcx, qword [r15 + 0x28] 	      5537	ops.c	FUNCTION_66	ELSE_1
0x4006488	          0x4889c2	                            mov rdx, rax	      5537	ops.c	FUNCTION_66	ELSE_1
0x400648b	      0x4889442420	             mov qword [rsp + 0x20], rax	      5537	ops.c	FUNCTION_66	ELSE_1
0x4006490	      0x48894c2428	             mov qword [rsp + 0x28], rcx	      5537	ops.c	FUNCTION_66	ELSE_1
0x4006495	     0xf8fe2010000	                            jg 0x400667d	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x400649b	        0x498d4730	                   lea rax, [r15 + 0x30]	      5555	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_8
0x400649f	          0x4c89ed	                            mov rbp, r13	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x40064a2	          0x4531e4	                          xor r12d, r12d	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x40064a5	      0x4889442418	             mov qword [rsp + 0x18], rax	      5555	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_8
0x40064aa	      0xe9b0000000	                           jmp 0x400655f	      5555	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_8
0x40064af	              0x90	                                     nop	      5555	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_8
0x40064b0	          0x4585e4	                         test r12d, r12d	      5575	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x40064b3	            0x7526	                           jne 0x40064db	      5575	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x40064b5	    0x488b05000000	            mov rax, qword [0x040064bc] 	      5576	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x40064bc	    0x488b88e01100	          mov rcx, qword [rax + 0x11e0] 	      5576	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x40064c3	        0x48890c24	                    mov qword [rsp], rcx	      5576	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x40064c7	    0x8b88e8110000	          mov ecx, dword [rax + 0x11e8] 	      5576	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x40064cd	    0x8b80ec110000	          mov eax, dword [rax + 0x11ec] 	      5576	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x40064d3	        0x894c2408	                mov dword [rsp + 8], ecx	      5576	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x40064d7	        0x8944240c	              mov dword [rsp + 0xc], eax	      5576	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x40064db	        0x4183c401	                             add r12d, 1	      5577	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11
0x40064df	      0xe800000000	                          call 0x40064e4	      5581	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_14
0x40064e4	            0x85c0	                           test eax, eax	      5581	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_14
0x40064e6	            0x7454	                            je 0x400653c	      5581	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_14
0x40064e8	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      5583	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_15
0x40064ed	    0x488b3d000000	            mov rdi, qword [0x040064f4] 	      5583	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_15
0x40064f4	            0x31d2	                            xor edx, edx	      5583	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_15
0x40064f6	      0xe800000000	                          call 0x40064fb	      5583	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_15
0x40064fb	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      5585	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_16
0x40064ff	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      5585	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_16
0x4006504	          0x4863cb	                         movsxd rcx, ebx	      5585	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_16
0x4006507	    0x488b3d000000	            mov rdi, qword [0x0400650e] 	      5585	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_16
0x400650e	      0x4889442410	             mov qword [rsp + 0x10], rax	      5583	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_15
0x4006513	      0xe800000000	                          call 0x4006518	      5585	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_16
0x4006518	      0x48634c2428	         movsxd rcx, dword [rsp + 0x28] 	      5587	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13
0x400651d	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5586	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0x4006522	          0x4189d8	                            mov r8d, ebx	      5586	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0x4006525	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      5586	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0x400652a	    0x488b3d000000	            mov rdi, qword [0x04006531] 	      5586	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0x4006531	          0x4889ca	                            mov rdx, rcx	      5587	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13
0x4006534	          0x4801c1	                            add rcx, rax	      5586	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0x4006537	      0xe800000000	                          call 0x400653c	      5586	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0x400653c	          0x4585f6	                         test r14d, r14d	      5590	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_14
0x400653f	            0x7403	                            je 0x4006544	      5590	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_14
0x4006541	          0x4c01ed	                            add rbp, r13	      5591	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_14
0x4006544	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x4006549	        0x488d5001	                      lea rdx, [rax + 1]	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x400654d	        0x498b4730	            mov rax, qword [r15 + 0x30] 	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x4006551	      0x4889542420	             mov qword [rsp + 0x20], rdx	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x4006556	          0x4839d0	                            cmp rax, rdx	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x4006559	     0xf8c19010000	                            jl 0x4006678	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x400655f	        0x418b4f60	            mov ecx, dword [r15 + 0x60] 	      5540	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x4006563	            0x85c9	                           test ecx, ecx	      5540	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x4006565	            0x7569	                           jne 0x40065d0	      5540	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x4006567	      0x41837f0801	                  cmp dword [r15 + 8], 1	      5546	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6
0x400656c	     0xf84d6000000	                            je 0x4006648	      5546	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6
0x4006572	        0x49395720	            cmp qword [r15 + 0x20], rdx 	      5554	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_7
0x4006576	     0xf84ac000000	                            je 0x4006628	      5554	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_7
0x400657c	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      5556	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_10
0x4006581	      0xe800000000	                          call 0x4006586	      5556	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_10
0x4006586	          0x4889c7	                            mov rdi, rax	      5556	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_10
0x4006589	      0xe800000000	                          call 0x400658e	      5556	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_10
0x400658e	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      5558	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0x4006593	        0x493b7f20	            cmp rdi, qword [r15 + 0x20] 	      5558	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0x4006597	            0x89c3	                            mov ebx, eax	      5556	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_10
0x4006599	    0xc74424280000	               mov dword [rsp + 0x28], 0	      5557	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3
0x40065a1	            0x744d	                            je 0x40065f0	      5558	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0x40065a3	        0x493b7f30	            cmp rdi, qword [r15 + 0x30] 	      5563	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0x40065a7	            0x7457	                            je 0x4006600	      5563	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0x40065a9	          0x418b3f	                    mov edi, dword [r15]	      5571	ops.c	FUNCTION_66	ELSE_1	FOR_1	CALL_13
0x40065ac	      0x488d742420	                   lea rsi, [rsp + 0x20]	      5571	ops.c	FUNCTION_66	ELSE_1	FOR_1	CALL_13
0x40065b1	          0x4889e9	                            mov rcx, rbp	      5571	ops.c	FUNCTION_66	ELSE_1	FOR_1	CALL_13
0x40065b4	            0x89da	                            mov edx, ebx	      5571	ops.c	FUNCTION_66	ELSE_1	FOR_1	CALL_13
0x40065b6	      0xe835aaffff	                      call sym.do_addsub	      5571	ops.c	FUNCTION_66	ELSE_1	FOR_1	CALL_13
0x40065bb	            0x85c0	                           test eax, eax	      5572	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11
0x40065bd	     0xf85edfeffff	                           jne 0x40064b0	      5572	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11
0x40065c3	      0xe800000000	                          call 0x40065c8	      5581	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_14
0x40065c8	      0xe977ffffff	                           jmp 0x4006544	      5581	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_14
0x40065cd	           0xf1f00	                         nop dword [rax]	      5581	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_14
0x40065d0	      0x488d742430	                   lea rsi, [rsp + 0x30]	      5542	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_5
0x40065d5	            0x31c9	                            xor ecx, ecx	      5542	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_5
0x40065d7	          0x4c89ff	                            mov rdi, r15	      5542	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_5
0x40065da	      0xe8919affff	                     call sym.block_prep	      5542	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_5
0x40065df	        0x8b442448	            mov eax, dword [rsp + 0x48] 	      5543	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x40065e3	        0x8b5c2438	            mov ebx, dword [rsp + 0x38] 	      5544	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x40065e7	        0x89442428	             mov dword [rsp + 0x28], eax	      5543	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x40065eb	            0xebbc	                           jmp 0x40065a9	      5543	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x40065ed	           0xf1f00	                         nop dword [rax]	      5543	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x40065f0	        0x418b5728	            mov edx, dword [r15 + 0x28] 	      5560	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0x40065f4	            0x29d3	                            sub ebx, edx	      5561	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0x40065f6	        0x493b7f30	            cmp rdi, qword [r15 + 0x30] 	      5563	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0x40065fa	        0x89542428	             mov dword [rsp + 0x28], edx	      5560	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0x40065fe	            0x75a9	                           jne 0x40065a9	      5563	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0x4006600	      0xe800000000	                          call 0x4006605	      5565	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	CALL_12
0x4006605	          0x4889c7	                            mov rdi, rax	      5565	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	CALL_12
0x4006608	      0xe800000000	                          call 0x400660d	      5565	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	CALL_12
0x400660d	        0x418b5f38	            mov ebx, dword [r15 + 0x38] 	      5566	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	IF_10
0x4006611	            0x39d8	                            cmp eax, ebx	      5566	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	IF_10
0x4006613	            0x7f07	                            jg 0x400661c	      5566	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	IF_10
0x4006615	          0x8d58ff	                      lea ebx, [rax - 1]	      5567	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	IF_10
0x4006618	        0x41895f38	             mov dword [r15 + 0x38], ebx	      5567	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	IF_10
0x400661c	        0x2b5c2428	             sub ebx, dword [rsp + 0x28]	      5568	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0x4006620	          0x83c301	                              add ebx, 1	      5568	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0x4006623	            0xeb84	                           jmp 0x40065a9	      5568	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0x4006625	           0xf1f00	                         nop dword [rax]	      5568	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0x4006628	        0x418b5714	            mov edx, dword [r15 + 0x14] 	      5554	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_7
0x400662c	            0x85d2	                           test edx, edx	      5554	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_7
0x400662e	     0xf8548ffffff	                           jne 0x400657c	      5554	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_7
0x4006634	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      5555	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_8
0x4006639	      0xe800000000	                          call 0x400663e	      5555	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_8
0x400663e	      0xe939ffffff	                           jmp 0x400657c	      5555	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_8
0x4006643	       0xf1f440000	                   nop dword [rax + rax]	      5555	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_8
0x4006648	    0x488b05000000	            mov rax, qword [0x0400664f] 	      5548	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6
0x400664f	          0x4889d7	                            mov rdi, rdx	      5550	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0x4006652	    0xc74424280000	               mov dword [rsp + 0x28], 0	      5549	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6
0x400665a	    0xc74040000000	               mov dword [rax + 0x40], 0	      5548	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6
0x4006661	      0xe800000000	                          call 0x4006666	      5550	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0x4006666	          0x4889c7	                            mov rdi, rax	      5550	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0x4006669	      0xe800000000	                          call 0x400666e	      5550	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0x400666e	            0x89c3	                            mov ebx, eax	      5550	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0x4006670	      0xe934ffffff	                           jmp 0x40065a9	      5550	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0x4006675	           0xf1f00	                         nop dword [rax]	      5550	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0x4006678	          0x4585e4	                         test r12d, r12d	      5593	ops.c	FUNCTION_66	ELSE_1	IF_15
0x400667b	            0x757b	                           jne 0x40066f8	      5593	ops.c	FUNCTION_66	ELSE_1	IF_15
0x400667d	        0x418b475c	            mov eax, dword [r15 + 0x5c] 	      5596	ops.c	FUNCTION_66	ELSE_1	IF_16
0x4006681	            0x85c0	                           test eax, eax	      5596	ops.c	FUNCTION_66	ELSE_1	IF_16
0x4006683	     0xf85e7000000	                           jne 0x4006770	      5596	ops.c	FUNCTION_66	ELSE_1	IF_16
0x4006689	          0x4531e4	                          xor r12d, r12d	      5605	ops.c	FUNCTION_66	ELSE_1	IF_18
0x400668c	    0x48833d000000	               cmp qword [0x04006694], 0	      5605	ops.c	FUNCTION_66	ELSE_1	IF_18
0x4006694	     0xf899dfdffff	                           jns 0x4006437	      5605	ops.c	FUNCTION_66	ELSE_1	IF_18
0x400669a	            0x31ff	                            xor edi, edi	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x400669c	      0xba05000000	                              mov edx, 5	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x40066a1	      0xbe00000000	                              mov esi, 0	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x40066a6	      0xe800000000	                          call 0x40066ab	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x40066ab	          0x4489e6	                           mov esi, r12d	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x40066ae	          0x4889c7	                            mov rdi, rax	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x40066b1	            0x31c0	                            xor eax, eax	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x40066b3	      0xe800000000	                          call 0x40066b8	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x40066b8	      0xe97afdffff	                           jmp 0x4006437	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x40066bd	           0xf1f00	                         nop dword [rax]	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x40066c0	          0x418b3f	                    mov edi, dword [r15]	      5523	ops.c	FUNCTION_66	IF_1	CALL_2
0x40066c3	      0x488d742420	                   lea rsi, [rsp + 0x20]	      5523	ops.c	FUNCTION_66	IF_1	CALL_2
0x40066c8	            0x31d2	                            xor edx, edx	      5523	ops.c	FUNCTION_66	IF_1	CALL_2
0x40066ca	          0x4c89e9	                            mov rcx, r13	      5523	ops.c	FUNCTION_66	IF_1	CALL_2
0x40066cd	      0xe81ea9ffff	                      call sym.do_addsub	      5523	ops.c	FUNCTION_66	IF_1	CALL_2
0x40066d2	            0x85c0	                           test eax, eax	      5524	ops.c	FUNCTION_66	IF_1	IF_3
0x40066d4	     0xf845dfdffff	                            je 0x4006437	      5524	ops.c	FUNCTION_66	IF_1	IF_3
0x40066da	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      5525	ops.c	FUNCTION_66	IF_1	CALL_3
0x40066df	            0x31c9	                            xor ecx, ecx	      5525	ops.c	FUNCTION_66	IF_1	CALL_3
0x40066e1	            0x31f6	                            xor esi, esi	      5525	ops.c	FUNCTION_66	IF_1	CALL_3
0x40066e3	        0x488d5701	                      lea rdx, [rdi + 1]	      5525	ops.c	FUNCTION_66	IF_1	CALL_3
0x40066e7	      0xe800000000	                          call 0x40066ec	      5525	ops.c	FUNCTION_66	IF_1	CALL_3
0x40066ec	      0xe946fdffff	                           jmp 0x4006437	      5525	ops.c	FUNCTION_66	IF_1	CALL_3
0x40066f1	     0xf1f80000000	                         nop dword [rax]	      5525	ops.c	FUNCTION_66	IF_1	CALL_3
0x40066f8	        0x498b7f20	            mov rdi, qword [r15 + 0x20] 	      5594	ops.c	FUNCTION_66	ELSE_1	CALL_18
0x40066fc	        0x488d5001	                      lea rdx, [rax + 1]	      5594	ops.c	FUNCTION_66	ELSE_1	CALL_18
0x4006700	            0x31f6	                            xor esi, esi	      5594	ops.c	FUNCTION_66	ELSE_1	CALL_18
0x4006702	            0x31c9	                            xor ecx, ecx	      5594	ops.c	FUNCTION_66	ELSE_1	CALL_18
0x4006704	      0xe800000000	                          call 0x4006709	      5594	ops.c	FUNCTION_66	ELSE_1	CALL_18
0x4006709	    0x488b05000000	            mov rax, qword [0x04006710] 	      5603	ops.c	FUNCTION_66	ELSE_1	IF_17
0x4006710	        0x488b3424	                    mov rsi, qword [rsp]	      5603	ops.c	FUNCTION_66	ELSE_1	IF_17
0x4006714	        0x8b5c2408	                mov ebx, dword [rsp + 8]	      5603	ops.c	FUNCTION_66	ELSE_1	IF_17
0x4006718	    0x4889b0e01100	          mov qword [rax + 0x11e0], rsi 	      5603	ops.c	FUNCTION_66	ELSE_1	IF_17
0x400671f	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      5603	ops.c	FUNCTION_66	ELSE_1	IF_17
0x4006723	    0x8998e8110000	          mov dword [rax + 0x11e8], ebx 	      5603	ops.c	FUNCTION_66	ELSE_1	IF_17
0x4006729	    0x89b0ec110000	          mov dword [rax + 0x11ec], esi 	      5603	ops.c	FUNCTION_66	ELSE_1	IF_17
0x400672f	          0x4963c4	                        movsxd rax, r12d	      5605	ops.c	FUNCTION_66	ELSE_1	IF_18
0x4006732	    0x483b05000000	            cmp rax, qword [0x04006739] 	      5605	ops.c	FUNCTION_66	ELSE_1	IF_18
0x4006739	     0xf8ef8fcffff	                           jle 0x4006437	      5605	ops.c	FUNCTION_66	ELSE_1	IF_18
0x400673f	        0x4183fc01	                             cmp r12d, 1	      5607	ops.c	FUNCTION_66	ELSE_1	IF_18	IF_19
0x4006743	     0xf8551ffffff	                           jne 0x400669a	      5607	ops.c	FUNCTION_66	ELSE_1	IF_18	IF_19
0x4006749	            0x31ff	                            xor edi, edi	      5608	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_21
0x400674b	      0xba05000000	                              mov edx, 5	      5608	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_21
0x4006750	      0xbe00000000	                              mov esi, 0	      5608	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_21
0x4006755	      0xe800000000	                          call 0x400675a	      5608	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_21
0x400675a	          0x4889c7	                            mov rdi, rax	      5608	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_21
0x400675d	      0xe800000000	                          call 0x4006762	      5608	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_21
0x4006762	      0xe9d0fcffff	                           jmp 0x4006437	      5608	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_21
0x4006767	    0x660f1f840000	                    nop word [rax + rax]	      5608	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_21
0x4006770	      0xbf14000000	                           mov edi, 0x14	      5598	ops.c	FUNCTION_66	ELSE_1	CALL_19
0x4006775	      0xe800000000	                          call 0x400677a	      5598	ops.c	FUNCTION_66	ELSE_1	CALL_19
0x400677a	      0xe90affffff	                           jmp 0x4006689	      5598	ops.c	FUNCTION_66	ELSE_1	CALL_19
0x400677f	      0xe800000000	                          call 0x4006784	      5613	ops.c	FUNCTION_66
do_addsub	SWITCH,0:IF,53:WHILE,8:DO,0:FOR,2:ELSE,15:CALL,47:functions,0	861
0x4000ff0	            0x4157	                                push r15	      5627	ops.c	FUNCTION_67
0x4000ff2	            0x4156	                                push r14	      5627	ops.c	FUNCTION_67
0x4000ff4	          0x4989f7	                            mov r15, rsi	      5627	ops.c	FUNCTION_67
0x4000ff7	            0x4155	                                push r13	      5627	ops.c	FUNCTION_67
0x4000ff9	            0x4154	                                push r12	      5627	ops.c	FUNCTION_67
0x4000ffb	              0x55	                                push rbp	      5627	ops.c	FUNCTION_67
0x4000ffc	              0x53	                                push rbx	      5627	ops.c	FUNCTION_67
0x4000ffd	    0x4881ecb80000	                           sub rsp, 0xb8	      5627	ops.c	FUNCTION_67
0x4001004	    0x64488b042528	                mov rax, qword fs:[0x28]	      5627	ops.c	FUNCTION_67
0x400100d	    0x48898424a800	             mov qword [rsp + 0xa8], rax	      5627	ops.c	FUNCTION_67
0x4001015	            0x31c0	                            xor eax, eax	      5627	ops.c	FUNCTION_67
0x4001017	    0x8b0500000000	            mov eax, dword [0x0400101d] 	      5646	ops.c	FUNCTION_67
0x400101d	      0x4889742408	                mov qword [rsp + 8], rsi	      5627	ops.c	FUNCTION_67
0x4001022	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      5627	ops.c	FUNCTION_67
0x4001027	        0x897c2434	             mov dword [rsp + 0x34], edi	      5627	ops.c	FUNCTION_67
0x400102b	        0x8954244c	             mov dword [rsp + 0x4c], edx	      5627	ops.c	FUNCTION_67
0x400102f	        0x89442428	             mov dword [rsp + 0x28], eax	      5646	ops.c	FUNCTION_67
0x4001033	    0x488b05000000	            mov rax, qword [0x0400103a] 	      5648	ops.c	FUNCTION_67
0x400103a	          0x8b4840	            mov ecx, dword [rax + 0x40] 	      5648	ops.c	FUNCTION_67
0x400103d	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      5648	ops.c	FUNCTION_67
0x4001041	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5648	ops.c	FUNCTION_67
0x4001044	      0x4889742420	             mov qword [rsp + 0x20], rsi	      5648	ops.c	FUNCTION_67
0x4001049	      0xbe78000000	                           mov esi, 0x78	      5653	ops.c	FUNCTION_67	CALL_1
0x400104e	        0x894c242c	             mov dword [rsp + 0x2c], ecx	      5648	ops.c	FUNCTION_67
0x4001052	        0x89442430	             mov dword [rsp + 0x30], eax	      5648	ops.c	FUNCTION_67
0x4001056	    0x488b05000000	            mov rax, qword [0x0400105d] 	      5653	ops.c	FUNCTION_67	CALL_1
0x400105d	    0x488bb8481500	          mov rdi, qword [rax + 0x1548] 	      5653	ops.c	FUNCTION_67	CALL_1
0x4001064	      0xe800000000	                          call 0x4001069	      5653	ops.c	FUNCTION_67	CALL_1
0x4001069	      0x4889442418	             mov qword [rsp + 0x18], rax	      5653	ops.c	FUNCTION_67	CALL_1
0x400106e	    0x488b05000000	            mov rax, qword [0x04001075] 	      5654	ops.c	FUNCTION_67	CALL_2
0x4001075	      0xbe6f000000	                           mov esi, 0x6f	      5654	ops.c	FUNCTION_67	CALL_2
0x400107a	    0x488bb8481500	          mov rdi, qword [rax + 0x1548] 	      5654	ops.c	FUNCTION_67	CALL_2
0x4001081	      0xe800000000	                          call 0x4001086	      5654	ops.c	FUNCTION_67	CALL_2
0x4001086	      0x4889442440	             mov qword [rsp + 0x40], rax	      5654	ops.c	FUNCTION_67	CALL_2
0x400108b	    0x488b05000000	            mov rax, qword [0x04001092] 	      5655	ops.c	FUNCTION_67	CALL_3
0x4001092	      0xbe62000000	                           mov esi, 0x62	      5655	ops.c	FUNCTION_67	CALL_3
0x4001097	    0x488bb8481500	          mov rdi, qword [rax + 0x1548] 	      5655	ops.c	FUNCTION_67	CALL_3
0x400109e	      0xe800000000	                          call 0x40010a3	      5655	ops.c	FUNCTION_67	CALL_3
0x40010a3	      0x4889442410	             mov qword [rsp + 0x10], rax	      5655	ops.c	FUNCTION_67	CALL_3
0x40010a8	          0x4989c6	                            mov r14, rax	      5655	ops.c	FUNCTION_67	CALL_3
0x40010ab	    0x488b05000000	            mov rax, qword [0x040010b2] 	      5656	ops.c	FUNCTION_67	CALL_4
0x40010b2	      0xbe70000000	                           mov esi, 0x70	      5656	ops.c	FUNCTION_67	CALL_4
0x40010b7	    0x488bb8481500	          mov rdi, qword [rax + 0x1548] 	      5656	ops.c	FUNCTION_67	CALL_4
0x40010be	      0xe800000000	                          call 0x40010c3	      5656	ops.c	FUNCTION_67	CALL_4
0x40010c3	          0x498b0f	                    mov rcx, qword [r15]	      5658	ops.c	FUNCTION_67
0x40010c6	          0x4889c5	                            mov rbp, rax	      5656	ops.c	FUNCTION_67	CALL_4
0x40010c9	    0x488b05000000	            mov rax, qword [0x040010d0] 	      5658	ops.c	FUNCTION_67
0x40010d0	        0x498b5f08	                mov rbx, qword [r15 + 8]	      5658	ops.c	FUNCTION_67
0x40010d4	        0x48894838	             mov qword [rax + 0x38], rcx	      5658	ops.c	FUNCTION_67
0x40010d8	          0x498b3f	                    mov rdi, qword [r15]	      5659	ops.c	FUNCTION_67	CALL_5
0x40010db	        0x48895840	             mov qword [rax + 0x40], rbx	      5658	ops.c	FUNCTION_67
0x40010df	      0xe800000000	                          call 0x40010e4	      5659	ops.c	FUNCTION_67	CALL_5
0x40010e4	          0x803800	                       cmp byte [rax], 0	      5662	ops.c	FUNCTION_67	IF_1
0x40010e7	     0xf84f3000000	                            je 0x40011e0	      5662	ops.c	FUNCTION_67	IF_1
0x40010ed	          0x4889c3	                            mov rbx, rax	      5662	ops.c	FUNCTION_67	IF_1
0x40010f0	    0x8b0500000000	            mov eax, dword [0x040010f6] 	      5668	ops.c	FUNCTION_67	IF_2
0x40010f6	          0x4d85f6	                           test r14, r14	      5655	ops.c	FUNCTION_67	CALL_3
0x40010f9	       0xf9544244b	                 setne byte [rsp + 0x4b]	      5655	ops.c	FUNCTION_67	CALL_3
0x40010fe	        0x458b7708	               mov r14d, dword [r15 + 8]	      5660	ops.c	FUNCTION_67
0x4001102	            0x85c0	                           test eax, eax	      5668	ops.c	FUNCTION_67	IF_2
0x4001104	     0xf842e010000	                            je 0x4001238	      5668	ops.c	FUNCTION_67	IF_2
0x400110a	          0x4d63e6	                        movsxd r12, r14d	      5668	ops.c	FUNCTION_67	IF_2
0x400110d	        0x4e8d2c23	                    lea r13, [rbx + r12]	      5668	ops.c	FUNCTION_67	IF_2
0x4001111	      0x410fb67d00	                   movzx edi, byte [r13]	      5668	ops.c	FUNCTION_67	IF_2
0x4001116	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	      5770	ops.c	FUNCTION_67	IF_12
0x400111a	            0x85c9	                           test ecx, ecx	      5770	ops.c	FUNCTION_67	IF_12
0x400111c	     0xf847e000000	                            je 0x40011a0	      5770	ops.c	FUNCTION_67	IF_12
0x4001122	          0x4084ff	                           test dil, dil	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x4001125	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x4001129	            0x7529	                           jne 0x4001154	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x400112b	      0xe954020000	                           jmp 0x4001384	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x4001130	          0x4101c6	                           add r14d, eax	      5778	ops.c	FUNCTION_67	IF_12	WHILE_6
0x4001133	        0x8b74244c	            mov esi, dword [rsp + 0x4c] 	      5779	ops.c	FUNCTION_67	IF_12	WHILE_6
0x4001137	          0x4d63e6	                        movsxd r12, r14d	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x400113a	        0x4e8d2c23	                    lea r13, [rbx + r12]	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x400113e	            0x29c6	                            sub esi, eax	      5779	ops.c	FUNCTION_67	IF_12	WHILE_6
0x4001140	        0x8974244c	             mov dword [rsp + 0x4c], esi	      5779	ops.c	FUNCTION_67	IF_12	WHILE_6
0x4001144	      0x410fb67d00	                   movzx edi, byte [r13]	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x4001149	            0x89f0	                            mov eax, esi	      5779	ops.c	FUNCTION_67	IF_12	WHILE_6
0x400114b	          0x4084ff	                           test dil, dil	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x400114e	     0xf8430020000	                            je 0x4001384	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x4001154	            0x85c0	                           test eax, eax	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x4001156	     0xf8e28020000	                           jle 0x4001384	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x400115c	      0xe800000000	                          call 0x4001161	      5773	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_17
0x4001161	            0x85c0	                           test eax, eax	      5773	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_17
0x4001163	     0xf8517020000	                           jne 0x4001380	      5773	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_17
0x4001169	          0x4885ed	                           test rbp, rbp	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x400116c	            0x7413	                            je 0x4001181	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x400116e	      0x410fb64500	                   movzx eax, byte [r13]	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x4001173	          0x83e0df	                     and eax, 0xffffffdf	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x4001176	          0x83e841	                           sub eax, 0x41	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x4001179	            0x3c19	                            cmp al, 0x19	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x400117b	     0xf86ff010000	                           jbe 0x4001380	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x4001181	    0x8b1500000000	            mov edx, dword [0x04001187] 	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x4001187	      0xb801000000	                              mov eax, 1	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x400118c	            0x85d2	                           test edx, edx	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x400118e	            0x74a0	                            je 0x4001130	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x4001190	          0x4c89ef	                            mov rdi, r13	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x4001193	    0xff1500000000	                 call qword [0x04001199]	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x4001199	            0xeb95	                           jmp 0x4001130	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x400119b	       0xf1f440000	                   nop dword [rax + rax]	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x40011a0	    0xc74424100100	               mov dword [rsp + 0x10], 1	      5645	ops.c	FUNCTION_67
0x40011a8	          0x4531ff	                          xor r15d, r15d	      5644	ops.c	FUNCTION_67
0x40011ab	        0x400fb6c7	                          movzx eax, dil	      5800	ops.c	FUNCTION_67
0x40011af	        0x89442408	                mov dword [rsp + 8], eax	      5800	ops.c	FUNCTION_67
0x40011b3	          0x83e830	                           sub eax, 0x30	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x40011b6	          0x83f809	                              cmp eax, 9	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x40011b9	     0xf8611020000	                           jbe 0x40013d0	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x40011bf	          0x4885ed	                           test rbp, rbp	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x40011c2	            0x7410	                            je 0x40011d4	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x40011c4	            0x89f8	                            mov eax, edi	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x40011c6	          0x83e0df	                     and eax, 0xffffffdf	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x40011c9	          0x83e841	                           sub eax, 0x41	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x40011cc	            0x3c19	                            cmp al, 0x19	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x40011ce	     0xf865c060000	                           jbe 0x4001830	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x40011d4	      0xe800000000	                          call 0x40011d9	      5803	ops.c	FUNCTION_67	IF_15	CALL_22
0x40011d9	     0xf1f80000000	                         nop dword [rax]	      5803	ops.c	FUNCTION_67	IF_15	CALL_22
0x40011e0	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      6040	ops.c	FUNCTION_67	IF_52
0x40011e4	            0x85c0	                           test eax, eax	      6040	ops.c	FUNCTION_67	IF_52
0x40011e6	     0xf8484010000	                            je 0x4001370	      6040	ops.c	FUNCTION_67	IF_52
0x40011ec	    0x488b15000000	            mov rdx, qword [0x040011f3] 	      6040	ops.c	FUNCTION_67	IF_52
0x40011f3	            0x31c0	                            xor eax, eax	      5647	ops.c	FUNCTION_67
0x40011f5	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      6041	ops.c	FUNCTION_67	IF_52
0x40011fa	        0x8b4c242c	            mov ecx, dword [rsp + 0x2c] 	      6041	ops.c	FUNCTION_67	IF_52
0x40011fe	        0x48897238	             mov qword [rdx + 0x38], rsi	      6041	ops.c	FUNCTION_67	IF_52
0x4001202	        0x8b742430	            mov esi, dword [rsp + 0x30] 	      6041	ops.c	FUNCTION_67	IF_52
0x4001206	          0x894a40	             mov dword [rdx + 0x40], ecx	      6041	ops.c	FUNCTION_67	IF_52
0x4001209	          0x897244	             mov dword [rdx + 0x44], esi	      6041	ops.c	FUNCTION_67	IF_52
0x400120c	    0x488b9424a800	            mov rdx, qword [rsp + 0xa8] 	      6046	ops.c	FUNCTION_67
0x4001214	    0x644833142528	                xor rdx, qword fs:[0x28]	      6046	ops.c	FUNCTION_67
0x400121d	     0xf85750b0000	                           jne 0x4001d98	      6046	ops.c	FUNCTION_67
0x4001223	    0x4881c4b80000	                           add rsp, 0xb8	      6046	ops.c	FUNCTION_67
0x400122a	              0x5b	                                 pop rbx	      6046	ops.c	FUNCTION_67
0x400122b	              0x5d	                                 pop rbp	      6046	ops.c	FUNCTION_67
0x400122c	            0x415c	                                 pop r12	      6046	ops.c	FUNCTION_67
0x400122e	            0x415d	                                 pop r13	      6046	ops.c	FUNCTION_67
0x4001230	            0x415e	                                 pop r14	      6046	ops.c	FUNCTION_67
0x4001232	            0x415f	                                 pop r15	      6046	ops.c	FUNCTION_67
0x4001234	              0xc3	                                     ret	      6046	ops.c	FUNCTION_67
0x4001235	           0xf1f00	                         nop dword [rax]	      6046	ops.c	FUNCTION_67
0x4001238	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      5670	ops.c	FUNCTION_67	IF_2	IF_3
0x400123e	            0x7439	                            je 0x4001279	      5670	ops.c	FUNCTION_67	IF_2	IF_3
0x4001240	          0x4585f6	                         test r14d, r14d	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x4001243	            0x7e34	                           jle 0x4001279	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x4001245	          0x4d63e6	                        movsxd r12, r14d	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x4001248	          0x4901dc	                            add r12, rbx	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x400124b	            0xeb1e	                           jmp 0x400126b	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x400124d	           0xf1f00	                         nop dword [rax]	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x4001250	    0x8b0500000000	            mov eax, dword [0x04001256] 	      5675	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x4001256	        0x4183ee01	                             sub r14d, 1	      5673	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1
0x400125a	            0x85c0	                           test eax, eax	      5675	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x400125c	     0xf85de060000	                           jne 0x4001940	      5675	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x4001262	        0x4983ec01	                              sub r12, 1	      5675	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x4001266	          0x4585f6	                         test r14d, r14d	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x4001269	            0x740e	                            je 0x4001279	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x400126b	      0x410fb63c24	                   movzx edi, byte [r12]	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x4001270	      0xe800000000	                          call 0x4001275	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x4001275	            0x85c0	                           test eax, eax	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x4001277	            0x75d7	                           jne 0x4001250	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x4001279	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      5680	ops.c	FUNCTION_67	IF_2	IF_5
0x400127f	     0xf84050a0000	                            je 0x4001c8a	      5680	ops.c	FUNCTION_67	IF_2	IF_5
0x4001285	          0x4585f6	                         test r14d, r14d	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x4001288	     0xf8e42060000	                           jle 0x40018d0	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x400128e	          0x4d63fe	                        movsxd r15, r14d	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x4001291	          0x4901df	                            add r15, rbx	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x4001294	            0xeb29	                           jmp 0x40012bf	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x4001296	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x40012a0	    0x8b0500000000	            mov eax, dword [0x040012a6] 	      5685	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x40012a6	        0x4183ee01	                             sub r14d, 1	      5683	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2
0x40012aa	            0x85c0	                           test eax, eax	      5685	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x40012ac	     0xf85de060000	                           jne 0x4001990	      5685	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x40012b2	        0x4983ef01	                              sub r15, 1	      5685	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x40012b6	          0x4585f6	                         test r14d, r14d	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x40012b9	     0xf8411060000	                            je 0x40018d0	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x40012bf	        0x410fb63f	                   movzx edi, byte [r15]	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x40012c3	          0x4d89fd	                            mov r13, r15	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x40012c6	          0x4d89fc	                            mov r12, r15	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x40012c9	          0x4929dd	                            sub r13, rbx	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x40012cc	      0xe800000000	                          call 0x40012d1	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x40012d1	            0x85c0	                           test eax, eax	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x40012d3	            0x75cb	                           jne 0x40012a0	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x40012d5	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      5690	ops.c	FUNCTION_67	IF_2	IF_7
0x40012db	     0xf857f020000	                           jne 0x4001560	      5690	ops.c	FUNCTION_67	IF_2	IF_7
0x40012e1	        0x410fb607	                   movzx eax, byte [r15]	      5719	ops.c	FUNCTION_67	IF_2	IF_9
0x40012e5	          0x83e0df	                     and eax, 0xffffffdf	      5719	ops.c	FUNCTION_67	IF_2	IF_9
0x40012e8	            0x3c58	                            cmp al, 0x58	      5719	ops.c	FUNCTION_67	IF_2	IF_9
0x40012ea	     0xf84d0020000	                            je 0x40015c0	      5719	ops.c	FUNCTION_67	IF_2	IF_9
0x40012f0	      0x488b442408	                mov rax, qword [rsp + 8]	      5750	ops.c	FUNCTION_67	IF_2	ELSE_1
0x40012f5	        0x4c636808	            movsxd r13, dword [rax + 8] 	      5750	ops.c	FUNCTION_67	IF_2	ELSE_1
0x40012f9	        0x4e8d242b	                    lea r12, [rbx + r13]	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x40012fd	          0x4d89ee	                            mov r14, r13	      5750	ops.c	FUNCTION_67	IF_2	ELSE_1
0x4001300	      0x410fb63c24	                   movzx edi, byte [r12]	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x4001305	          0x4084ff	                           test dil, dil	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x4001308	            0x751e	                           jne 0x4001328	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x400130a	      0xe9e6010000	                           jmp 0x40014f5	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x400130f	              0x90	                                     nop	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x4001310	          0x4101c6	                           add r14d, eax	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x4001313	          0x4d63ee	                        movsxd r13, r14d	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x4001316	        0x4e8d242b	                    lea r12, [rbx + r13]	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x400131a	      0x410fb63c24	                   movzx edi, byte [r12]	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x400131f	          0x4084ff	                           test dil, dil	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x4001322	     0xf84cd010000	                            je 0x40014f5	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x4001328	      0xe800000000	                          call 0x400132d	      5753	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_12
0x400132d	            0x85c0	                           test eax, eax	      5753	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_12
0x400132f	     0xf85c0010000	                           jne 0x40014f5	      5753	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_12
0x4001335	          0x4885ed	                           test rbp, rbp	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x4001338	            0x7413	                            je 0x400134d	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x400133a	      0x410fb60424	                   movzx eax, byte [r12]	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x400133f	          0x83e0df	                     and eax, 0xffffffdf	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x4001342	          0x83e841	                           sub eax, 0x41	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x4001345	            0x3c19	                            cmp al, 0x19	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x4001347	     0xf86a8010000	                           jbe 0x40014f5	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x400134d	    0x8b3d00000000	            mov edi, dword [0x04001353] 	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x4001353	      0xb801000000	                              mov eax, 1	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x4001358	            0x85ff	                           test edi, edi	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x400135a	            0x74b4	                            je 0x4001310	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x400135c	          0x4c89e7	                            mov rdi, r12	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x400135f	    0xff1500000000	                 call qword [0x04001365]	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x4001365	            0xeba9	                           jmp 0x4001310	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x4001367	    0x660f1f840000	                    nop word [rax + rax]	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x4001370	            0x31c0	                            xor eax, eax	      6040	ops.c	FUNCTION_67	IF_52
0x4001372	      0xe995feffff	                           jmp 0x400120c	      6040	ops.c	FUNCTION_67	IF_52
0x4001377	    0x660f1f840000	                    nop word [rax + rax]	      6040	ops.c	FUNCTION_67	IF_52
0x4001380	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      6040	ops.c	FUNCTION_67	IF_52
0x4001384	            0x85c0	                           test eax, eax	      5782	ops.c	FUNCTION_67	IF_12	IF_13
0x4001386	     0xf8460feffff	                            je 0x40011ec	      5782	ops.c	FUNCTION_67	IF_12	IF_13
0x400138c	      0x488b442408	                mov rax, qword [rsp + 8]	      5785	ops.c	FUNCTION_67	IF_12	IF_14
0x4001391	        0x443b7008	               cmp r14d, dword [rax + 8]	      5785	ops.c	FUNCTION_67	IF_12	IF_14
0x4001395	            0x7e0e	                           jle 0x40013a5	      5785	ops.c	FUNCTION_67	IF_12	IF_14
0x4001397	      0x4a8d7423ff	                lea rsi, [rbx + r12 - 1]	      5785	ops.c	FUNCTION_67	IF_12	IF_14
0x400139c	          0x803e2d	                    cmp byte [rsi], 0x2d	      5785	ops.c	FUNCTION_67	IF_12	IF_14
0x400139f	     0xf848e080000	                            je 0x4001c33	      5785	ops.c	FUNCTION_67	IF_12	IF_14
0x40013a5	          0x4d63e6	                        movsxd r12, r14d	      5785	ops.c	FUNCTION_67	IF_12	IF_14
0x40013a8	          0x4531ff	                          xor r15d, r15d	      5644	ops.c	FUNCTION_67
0x40013ab	        0x4e8d2c23	                    lea r13, [rbx + r12]	      5644	ops.c	FUNCTION_67
0x40013af	      0x410fb67d00	                   movzx edi, byte [r13]	      5644	ops.c	FUNCTION_67
0x40013b4	    0xc74424100100	               mov dword [rsp + 0x10], 1	      5645	ops.c	FUNCTION_67
0x40013bc	        0x400fb6c7	                          movzx eax, dil	      5800	ops.c	FUNCTION_67
0x40013c0	        0x89442408	                mov dword [rsp + 8], eax	      5800	ops.c	FUNCTION_67
0x40013c4	          0x83e830	                           sub eax, 0x30	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x40013c7	          0x83f809	                              cmp eax, 9	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x40013ca	     0xf87effdffff	                            ja 0x40011bf	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x40013d0	          0x4885ed	                           test rbp, rbp	      5807	ops.c	FUNCTION_67	IF_16	CALL_23
0x40013d3	            0x7410	                            je 0x40013e5	      5807	ops.c	FUNCTION_67	IF_16	CALL_23
0x40013d5	            0x89f8	                            mov eax, edi	      5807	ops.c	FUNCTION_67	IF_16	CALL_23
0x40013d7	          0x83e0df	                     and eax, 0xffffffdf	      5807	ops.c	FUNCTION_67	IF_16	CALL_23
0x40013da	          0x83e841	                           sub eax, 0x41	      5807	ops.c	FUNCTION_67	IF_16	CALL_23
0x40013dd	            0x3c19	                            cmp al, 0x19	      5807	ops.c	FUNCTION_67	IF_16	CALL_23
0x40013df	     0xf864b040000	                           jbe 0x4001830	      5807	ops.c	FUNCTION_67	IF_16	CALL_23
0x40013e5	          0x4585f6	                         test r14d, r14d	      5853	ops.c	FUNCTION_67	ELSE_7	IF_23
0x40013e8	            0x7e0e	                           jle 0x40013f8	      5853	ops.c	FUNCTION_67	ELSE_7	IF_23
0x40013ea	      0x4a8d7423ff	                lea rsi, [rbx + r12 - 1]	      5853	ops.c	FUNCTION_67	ELSE_7	IF_23
0x40013ef	          0x803e2d	                    cmp byte [rsi], 0x2d	      5853	ops.c	FUNCTION_67	ELSE_7	IF_23
0x40013f2	     0xf845f050000	                            je 0x4001957	      5853	ops.c	FUNCTION_67	ELSE_7	IF_23
0x40013f8	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      5865	ops.c	FUNCTION_67	ELSE_7	IF_24
0x40013fc	            0x85c0	                           test eax, eax	      5865	ops.c	FUNCTION_67	ELSE_7	IF_24
0x40013fe	     0xf8484050000	                            je 0x4001988	      5865	ops.c	FUNCTION_67	ELSE_7	IF_24
0x4001404	    0x833d00000000	           cmp dword [0x0400140b], 0x56 	      5865	ops.c	FUNCTION_67	ELSE_7	IF_24
0x400140b	     0xf8477050000	                            je 0x4001988	      5865	ops.c	FUNCTION_67	ELSE_7	IF_24
0x4001411	    0x488b15000000	            mov rdx, qword [0x04001418] 	      5868	ops.c	FUNCTION_67	ELSE_7	IF_24
0x4001418	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      5868	ops.c	FUNCTION_67	ELSE_7	IF_24
0x400141c	    0x81ba1c030000	    cmp dword [rdx + 0x31c], 0x7fffffff 	      5868	ops.c	FUNCTION_67	ELSE_7	IF_24
0x4001426	     0xf8440080000	                            je 0x4001c6c	      5868	ops.c	FUNCTION_67	ELSE_7	IF_24
0x400142c	    0x48837c244001	               cmp qword [rsp + 0x40], 1	      5872	ops.c	FUNCTION_67	ELSE_7
0x4001432	       0xfb654244b	           movzx edx, byte [rsp + 0x4b] 	      5871	ops.c	FUNCTION_67	ELSE_7
0x4001437	          0x4c89ef	                            mov rdi, r13	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x400143a	            0x19c9	                            sbb ecx, ecx	      5872	ops.c	FUNCTION_67	ELSE_7
0x400143c	            0xf7d1	                                 not ecx	      5872	ops.c	FUNCTION_67	ELSE_7
0x400143e	          0x83e102	                              and ecx, 2	      5872	ops.c	FUNCTION_67	ELSE_7
0x4001441	             0x1ca	                            add edx, ecx	      5872	ops.c	FUNCTION_67	ELSE_7
0x4001443	    0x48837c241801	               cmp qword [rsp + 0x18], 1	      5873	ops.c	FUNCTION_67	ELSE_7
0x4001449	            0x19c9	                            sbb ecx, ecx	      5873	ops.c	FUNCTION_67	ELSE_7
0x400144b	        0x4883ec08	                              sub rsp, 8	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x400144f	          0x4531c0	                            xor r8d, r8d	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x4001452	              0x50	                                push rax	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x4001453	            0xf7d1	                                 not ecx	      5873	ops.c	FUNCTION_67	ELSE_7
0x4001455	          0x83e104	                              and ecx, 4	      5873	ops.c	FUNCTION_67	ELSE_7
0x4001458	             0x1d1	                            add ecx, edx	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x400145a	      0x4c8d4c2468	                    lea r9, [rsp + 0x68]	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x400145f	      0x488d54245c	                   lea rdx, [rsp + 0x5c]	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x4001464	      0x488d742464	                   lea rsi, [rsp + 0x64]	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x4001469	      0xe800000000	                          call 0x400146e	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x400146e	            0x415c	                                 pop r12	      5877	ops.c	FUNCTION_67	ELSE_7	IF_25
0x4001470	            0x415d	                                 pop r13	      5877	ops.c	FUNCTION_67	ELSE_7	IF_25
0x4001472	        0x8b442454	            mov eax, dword [rsp + 0x54] 	      5877	ops.c	FUNCTION_67	ELSE_7	IF_25
0x4001476	            0x85c0	                           test eax, eax	      5877	ops.c	FUNCTION_67	ELSE_7	IF_25
0x4001478	     0xf8432050000	                            je 0x40019b0	      5877	ops.c	FUNCTION_67	ELSE_7	IF_25
0x400147e	          0x4585ff	                         test r15d, r15d	      5877	ops.c	FUNCTION_67	ELSE_7	IF_25
0x4001481	     0xf8505070000	                           jne 0x4001b8c	      5877	ops.c	FUNCTION_67	ELSE_7	IF_25
0x4001487	      0x837c24341d	           cmp dword [rsp + 0x34], 0x1d 	      5885	ops.c	FUNCTION_67	ELSE_7	IF_26
0x400148c	     0xf8456080000	                            je 0x4001ce8	      5885	ops.c	FUNCTION_67	ELSE_7	IF_26
0x4001492	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      5894	ops.c	FUNCTION_67	ELSE_7	ELSE_8
0x4001497	      0x4801442458	            add qword [rsp + 0x58], rax 	      5894	ops.c	FUNCTION_67	ELSE_7	ELSE_8
0x400149c	          0x4531ff	                          xor r15d, r15d	      5894	ops.c	FUNCTION_67	ELSE_7	ELSE_8
0x400149f	        0x8b6c2428	            mov ebp, dword [rsp + 0x28] 	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x40014a3	            0x85ed	                           test ebp, ebp	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x40014a5	     0xf8495010000	                            je 0x4001640	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x40014ab	        0x8b5c2410	            mov ebx, dword [rsp + 0x10] 	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x40014af	            0x85db	                           test ebx, ebx	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x40014b1	     0xf8589010000	                           jne 0x4001640	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x40014b7	        0x41f6c701	                            test r15b, 1	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x40014bb	     0xf857f010000	                           jne 0x4001640	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x40014c1	          0x4585f6	                         test r14d, r14d	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x40014c4	     0xf8e76010000	                           jle 0x4001640	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x40014ca	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      5923	ops.c	FUNCTION_67	ELSE_7	IF_34
0x40014ce	        0x4183ee01	                             sub r14d, 1	      5922	ops.c	FUNCTION_67	ELSE_7	IF_34
0x40014d2	          0x8d4801	                      lea ecx, [rax + 1]	      5923	ops.c	FUNCTION_67	ELSE_7	IF_34
0x40014d5	        0x894c244c	             mov dword [rsp + 0x4c], ecx	      5923	ops.c	FUNCTION_67	ELSE_7	IF_34
0x40014d9	      0xe966010000	                           jmp 0x4001644	      5923	ops.c	FUNCTION_67	ELSE_7	IF_34
0x40014de	            0x6690	                                     nop	      5923	ops.c	FUNCTION_67	ELSE_7	IF_34
0x40014e0	          0x4963f6	                        movsxd rsi, r14d	      5764	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x40014e3	          0x4889df	                            mov rdi, rbx	      5764	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x40014e6	          0x4801de	                            add rsi, rbx	      5764	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x40014e9	    0xff1500000000	                 call qword [0x040014ef]	      5764	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x40014ef	          0x4129c6	                           sub r14d, eax	      5764	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x40014f2	          0x4d63ee	                        movsxd r13, r14d	      5764	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x40014f5	          0x4585f6	                         test r14d, r14d	      5757	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x40014f8	     0xf8e40080000	                           jle 0x4001d3e	      5757	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x40014fe	          0x4901dd	                            add r13, rbx	      5757	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x4001501	            0xeb12	                           jmp 0x4001515	      5757	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x4001503	       0xf1f440000	                   nop dword [rax + rax]	      5757	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x4001508	        0x4983ed01	                              sub r13, 1	      5757	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x400150c	          0x4585f6	                         test r14d, r14d	      5757	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x400150f	     0xf84f3040000	                            je 0x4001a08	      5757	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x4001515	      0x410fb67dff	               movzx edi, byte [r13 - 1]	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x400151a	          0x4d89ec	                            mov r12, r13	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x400151d	          0x4929dc	                            sub r12, rbx	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x4001520	      0xe800000000	                          call 0x4001525	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x4001525	            0x85c0	                           test eax, eax	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x4001527	     0xf84e0fbffff	                            je 0x400110d	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x400152d	          0x4885ed	                           test rbp, rbp	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x4001530	            0x7415	                            je 0x4001547	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x4001532	      0x410fb67d00	                   movzx edi, byte [r13]	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x4001537	            0x89f8	                            mov eax, edi	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x4001539	          0x83e0df	                     and eax, 0xffffffdf	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x400153c	          0x83e841	                           sub eax, 0x41	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x400153f	            0x3c19	                            cmp al, 0x19	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x4001541	     0xf86cffbffff	                           jbe 0x4001116	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x4001547	    0x8b3500000000	            mov esi, dword [0x0400154d] 	      5763	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x400154d	        0x4183ee01	                             sub r14d, 1	      5761	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x4001551	            0x85f6	                           test esi, esi	      5763	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x4001553	            0x74b3	                            je 0x4001508	      5763	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x4001555	            0xeb89	                           jmp 0x40014e0	      5763	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x4001557	    0x660f1f840000	                    nop word [rax + rax]	      5763	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x4001560	      0x410fb60424	                   movzx eax, byte [r12]	      5693	ops.c	FUNCTION_67	IF_2	IF_7
0x4001565	          0x83e0df	                     and eax, 0xffffffdf	      5693	ops.c	FUNCTION_67	IF_2	IF_7
0x4001568	            0x3c58	                            cmp al, 0x58	      5693	ops.c	FUNCTION_67	IF_2	IF_7
0x400156a	     0xf856c030000	                           jne 0x40018dc	      5693	ops.c	FUNCTION_67	IF_2	IF_7
0x4001570	      0x4a8d742bff	                lea rsi, [rbx + r13 - 1]	      5695	ops.c	FUNCTION_67	IF_2	IF_7
0x4001575	          0x803e30	                    cmp byte [rsi], 0x30	      5695	ops.c	FUNCTION_67	IF_2	IF_7
0x4001578	     0xf855e030000	                           jne 0x40018dc	      5695	ops.c	FUNCTION_67	IF_2	IF_7
0x400157e	    0x448b3d000000	           mov r15d, dword [0x04001585] 	      5697	ops.c	FUNCTION_67	IF_2	IF_7
0x4001585	          0x4585ff	                         test r15d, r15d	      5697	ops.c	FUNCTION_67	IF_2	IF_7
0x4001588	            0x7411	                            je 0x400159b	      5697	ops.c	FUNCTION_67	IF_2	IF_7
0x400158a	          0x4889df	                            mov rdi, rbx	      5698	ops.c	FUNCTION_67	IF_2	IF_7
0x400158d	    0xff1500000000	                 call qword [0x04001593]	      5698	ops.c	FUNCTION_67	IF_2	IF_7
0x4001593	            0x85c0	                           test eax, eax	      5697	ops.c	FUNCTION_67	IF_2	IF_7
0x4001595	     0xf8541030000	                           jne 0x40018dc	      5697	ops.c	FUNCTION_67	IF_2	IF_7
0x400159b	    0x420fb67c2b01	        movzx edi, byte [rbx + r13 + 1] 	      5700	ops.c	FUNCTION_67	IF_2	IF_7	CALL_8
0x40015a1	      0xe800000000	                          call 0x40015a6	      5700	ops.c	FUNCTION_67	IF_2	IF_7	CALL_8
0x40015a6	            0x85c0	                           test eax, eax	      5692	ops.c	FUNCTION_67	IF_2	IF_7
0x40015a8	     0xf842e030000	                            je 0x40018dc	      5692	ops.c	FUNCTION_67	IF_2	IF_7
0x40015ae	            0x6690	                                     nop	      5692	ops.c	FUNCTION_67	IF_2	IF_7
0x40015b0	      0x410fb60424	                   movzx eax, byte [r12]	      5719	ops.c	FUNCTION_67	IF_2	IF_9
0x40015b5	          0x83e0df	                     and eax, 0xffffffdf	      5719	ops.c	FUNCTION_67	IF_2	IF_9
0x40015b8	            0x3c58	                            cmp al, 0x58	      5719	ops.c	FUNCTION_67	IF_2	IF_9
0x40015ba	     0xf85da050000	                           jne 0x4001b9a	      5719	ops.c	FUNCTION_67	IF_2	IF_9
0x40015c0	      0x4a8d742bff	                lea rsi, [rbx + r13 - 1]	      5721	ops.c	FUNCTION_67	IF_2	IF_9
0x40015c5	    0x41bc01000000	                             mov r12d, 1	      5721	ops.c	FUNCTION_67	IF_2	IF_9
0x40015cb	          0x803e30	                    cmp byte [rsi], 0x30	      5721	ops.c	FUNCTION_67	IF_2	IF_9
0x40015ce	     0xf8408060000	                            je 0x4001bdc	      5721	ops.c	FUNCTION_67	IF_2	IF_9
0x40015d4	      0x807c244b00	                cmp byte [rsp + 0x4b], 0	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x40015d9	     0xf8411fdffff	                            je 0x40012f0	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x40015df	          0x4584e4	                         test r12b, r12b	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x40015e2	     0xf8408fdffff	                            je 0x40012f0	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x40015e8	          0x4d63e6	                        movsxd r12, r14d	      5729	ops.c	FUNCTION_67	IF_2	IF_9
0x40015eb	      0x420fb60423	             movzx eax, byte [rbx + r12]	      5729	ops.c	FUNCTION_67	IF_2	IF_9
0x40015f0	          0x83e0df	                     and eax, 0xffffffdf	      5729	ops.c	FUNCTION_67	IF_2	IF_9
0x40015f3	            0x3c42	                            cmp al, 0x42	      5729	ops.c	FUNCTION_67	IF_2	IF_9
0x40015f5	     0xf85f5fcffff	                           jne 0x40012f0	      5729	ops.c	FUNCTION_67	IF_2	IF_9
0x40015fb	      0x4a8d7423ff	                lea rsi, [rbx + r12 - 1]	      5731	ops.c	FUNCTION_67	IF_2	IF_9
0x4001600	          0x803e30	                    cmp byte [rsi], 0x30	      5731	ops.c	FUNCTION_67	IF_2	IF_9
0x4001603	     0xf85e7fcffff	                           jne 0x40012f0	      5731	ops.c	FUNCTION_67	IF_2	IF_9
0x4001609	    0x448b0d000000	            mov r9d, dword [0x04001610] 	      5733	ops.c	FUNCTION_67	IF_2	IF_9
0x4001610	          0x4585c9	                           test r9d, r9d	      5733	ops.c	FUNCTION_67	IF_2	IF_9
0x4001613	            0x7411	                            je 0x4001626	      5733	ops.c	FUNCTION_67	IF_2	IF_9
0x4001615	          0x4889df	                            mov rdi, rbx	      5734	ops.c	FUNCTION_67	IF_2	IF_9
0x4001618	    0xff1500000000	                 call qword [0x0400161e]	      5734	ops.c	FUNCTION_67	IF_2	IF_9
0x400161e	            0x85c0	                           test eax, eax	      5733	ops.c	FUNCTION_67	IF_2	IF_9
0x4001620	     0xf85cafcffff	                           jne 0x40012f0	      5733	ops.c	FUNCTION_67	IF_2	IF_9
0x4001626	    0x420fb67c2301	        movzx edi, byte [rbx + r12 + 1] 	      5736	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0x400162c	      0xe800000000	                          call 0x4001631	      5736	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0x4001631	            0x85c0	                           test eax, eax	      5736	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0x4001633	     0xf85cf050000	                           jne 0x4001c08	      5736	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0x4001639	      0xe9b2fcffff	                           jmp 0x40012f0	      5736	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0x400163e	            0x6690	                                     nop	      5736	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0x4001640	        0x8b4c244c	            mov ecx, dword [rsp + 0x4c] 	      5736	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0x4001644	    0x488b05000000	            mov rax, qword [0x0400164b] 	      5929	ops.c	FUNCTION_67	ELSE_7
0x400164b	        0x894c2434	             mov dword [rsp + 0x34], ecx	      5929	ops.c	FUNCTION_67	ELSE_7
0x400164f	        0x44897040	            mov dword [rax + 0x40], r14d	      5929	ops.c	FUNCTION_67	ELSE_7
0x4001653	        0x4c8b6038	            mov r12, qword [rax + 0x38] 	      5931	ops.c	FUNCTION_67	ELSE_7	IF_35
0x4001657	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5931	ops.c	FUNCTION_67	ELSE_7	IF_35
0x400165a	        0x89442418	             mov dword [rsp + 0x18], eax	      5931	ops.c	FUNCTION_67	ELSE_7	IF_35
0x400165e	      0xe800000000	                          call 0x4001663	      5934	ops.c	FUNCTION_67	ELSE_7	CALL_34
0x4001663	          0x4863e8	                         movsxd rbp, eax	      5934	ops.c	FUNCTION_67	ELSE_7	CALL_34
0x4001666	        0x8b4c2434	            mov ecx, dword [rsp + 0x34] 	      5939	ops.c	FUNCTION_67	ELSE_7	IF_36
0x400166a	          0x83fd2d	                           cmp ebp, 0x2d	      5939	ops.c	FUNCTION_67	ELSE_7	IF_36
0x400166d	     0xf840d060000	                            je 0x4001c80	      5939	ops.c	FUNCTION_67	ELSE_7	IF_36
0x4001673	            0x85c9	                           test ecx, ecx	      5941	ops.c	FUNCTION_67	ELSE_7	WHILE_7
0x4001675	          0x8d59ff	                      lea ebx, [rcx - 1]	      5941	ops.c	FUNCTION_67	ELSE_7	WHILE_7
0x4001678	            0x7e45	                           jle 0x40016bf	      5941	ops.c	FUNCTION_67	ELSE_7	WHILE_7
0x400167a	    0x660f1f440000	                    nop word [rax + rax]	      5941	ops.c	FUNCTION_67	ELSE_7	WHILE_7
0x4001680	    0x81fdff000000	                           cmp ebp, 0xff	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x4001686	            0x7f20	                            jg 0x40016a8	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x4001688	      0xe800000000	                          call 0x400168d	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x400168d	          0x488b00	                    mov rax, qword [rax]	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x4001690	         0xfb70468	           movzx eax, word [rax + rbp*2]	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x4001694	          0xf6c404	                              test ah, 4	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x4001697	            0x740f	                            je 0x40016a8	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x4001699	          0xf6c401	                              test ah, 1	      5946	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38
0x400169c	           0xf95c0	                                setne al	      5946	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38
0x400169f	           0xfb6c0	                           movzx eax, al	      5946	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38
0x40016a2	    0x890500000000	            mov dword [0x040016a8], eax 	      5946	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38
0x40016a8	            0x31ff	                            xor edi, edi	      5951	ops.c	FUNCTION_67	ELSE_7	WHILE_7	CALL_37
0x40016aa	          0x83eb01	                              sub ebx, 1	      5941	ops.c	FUNCTION_67	ELSE_7	WHILE_7
0x40016ad	      0xe800000000	                          call 0x40016b2	      5951	ops.c	FUNCTION_67	ELSE_7	WHILE_7	CALL_37
0x40016b2	      0xe800000000	                          call 0x40016b7	      5952	ops.c	FUNCTION_67	ELSE_7	WHILE_7	CALL_38
0x40016b7	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      5941	ops.c	FUNCTION_67	ELSE_7	WHILE_7
0x40016ba	          0x4863e8	                         movsxd rbp, eax	      5952	ops.c	FUNCTION_67	ELSE_7	WHILE_7	CALL_38
0x40016bd	            0x75c1	                           jne 0x4001680	      5941	ops.c	FUNCTION_67	ELSE_7	WHILE_7
0x40016bf	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      5960	ops.c	FUNCTION_67	ELSE_7	CALL_39
0x40016c3	          0x8d7841	                   lea edi, [rax + 0x41]	      5960	ops.c	FUNCTION_67	ELSE_7	CALL_39
0x40016c6	      0xe800000000	                          call 0x40016cb	      5960	ops.c	FUNCTION_67	ELSE_7	CALL_39
0x40016cb	          0x4885c0	                           test rax, rax	      5961	ops.c	FUNCTION_67	ELSE_7	IF_39
0x40016ce	          0x4889c3	                            mov rbx, rax	      5960	ops.c	FUNCTION_67	ELSE_7	CALL_39
0x40016d1	    0x488b15000000	            mov rdx, qword [0x040016d8] 	      5960	ops.c	FUNCTION_67	ELSE_7	CALL_39
0x40016d8	     0xf842f010000	                            je 0x400180d	      5961	ops.c	FUNCTION_67	ELSE_7	IF_39
0x40016de	          0x4585ff	                         test r15d, r15d	      5964	ops.c	FUNCTION_67	ELSE_7	IF_40
0x40016e1	          0x4989c0	                             mov r8, rax	      5964	ops.c	FUNCTION_67	ELSE_7	IF_40
0x40016e4	            0x741c	                            je 0x4001702	      5964	ops.c	FUNCTION_67	ELSE_7	IF_40
0x40016e6	      0x448b5c2428	           mov r11d, dword [rsp + 0x28] 	      5964	ops.c	FUNCTION_67	ELSE_7	IF_40
0x40016eb	          0x4585db	                         test r11d, r11d	      5964	ops.c	FUNCTION_67	ELSE_7	IF_40
0x40016ee	     0xf846c050000	                            je 0x4001c60	      5964	ops.c	FUNCTION_67	ELSE_7	IF_40
0x40016f4	      0x448b542410	           mov r10d, dword [rsp + 0x10] 	      5964	ops.c	FUNCTION_67	ELSE_7	IF_40
0x40016f9	          0x4585d2	                         test r10d, r10d	      5964	ops.c	FUNCTION_67	ELSE_7	IF_40
0x40016fc	     0xf855e050000	                           jne 0x4001c60	      5964	ops.c	FUNCTION_67	ELSE_7	IF_40
0x4001702	      0x448b4c2454	            mov r9d, dword [rsp + 0x54] 	      5968	ops.c	FUNCTION_67	ELSE_7	IF_41
0x4001707	          0x4585c9	                           test r9d, r9d	      5968	ops.c	FUNCTION_67	ELSE_7	IF_41
0x400170a	     0xf8550030000	                           jne 0x4001a60	      5968	ops.c	FUNCTION_67	ELSE_7	IF_41
0x4001710	      0x4c8d7c2460	                   lea r15, [rsp + 0x60]	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x4001715	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x400171a	      0xba00000000	                              mov edx, 0	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x400171f	      0xbe41000000	                           mov esi, 0x41	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x4001724	            0x31c0	                            xor eax, eax	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x4001726	      0x4c89442410	              mov qword [rsp + 0x10], r8	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x400172b	          0x4c89ff	                            mov rdi, r15	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x400172e	      0xe800000000	                          call 0x4001733	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x4001733	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x4001738	          0x4c89c5	                             mov rbp, r8	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x400173b	       0xf1f440000	                   nop dword [rax + rax]	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x4001740	          0x4c89fa	                            mov rdx, r15	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4001743	            0x8b0a	                    mov ecx, dword [rdx]	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4001745	        0x4883c204	                              add rdx, 4	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4001749	    0x8d81fffefefe	              lea eax, [rcx - 0x1010101]	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x400174f	            0xf7d1	                                 not ecx	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4001751	            0x21c8	                            and eax, ecx	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4001753	      0x2580808080	                     and eax, 0x80808080	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4001758	            0x74e9	                            je 0x4001743	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x400175a	            0x89c1	                            mov ecx, eax	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x400175c	          0xc1e910	                           shr ecx, 0x10	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x400175f	      0xa980800000	                        test eax, 0x8080	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4001764	           0xf44c1	                          cmove eax, ecx	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4001767	        0x488d4a02	                      lea rcx, [rdx + 2]	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x400176b	            0x89c6	                            mov esi, eax	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x400176d	        0x480f44d1	                          cmove rdx, rcx	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4001771	          0x4000c6	                             add sil, al	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4001774	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4001778	        0x4883da03	                              sbb rdx, 3	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x400177c	          0x4c29fa	                            sub rdx, r15	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x400177f	            0x29d0	                            sub eax, edx	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4001781	      0x837c240830	               cmp dword [rsp + 8], 0x30	      6018	ops.c	FUNCTION_67	ELSE_7	IF_48
0x4001786	        0x8944244c	             mov dword [rsp + 0x4c], eax	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x400178a	     0xf8415040000	                            je 0x4001ba5	      6018	ops.c	FUNCTION_67	ELSE_7	IF_48
0x4001790	          0x4c89fe	                            mov rsi, r15	       148	string3.h	FUNCTION_102	CALL_3
0x4001793	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_102	CALL_3
0x4001796	        0xc6450000	                       mov byte [rbp], 0	      6021	ops.c	FUNCTION_67	ELSE_7
0x400179a	      0xe800000000	                          call 0x400179f	       148	string3.h	FUNCTION_102	CALL_3
0x400179f	          0x4889df	                            mov rdi, rbx	      6023	ops.c	FUNCTION_67	ELSE_7	CALL_46
0x40017a2	      0xe800000000	                          call 0x40017a7	      6023	ops.c	FUNCTION_67	ELSE_7	CALL_46
0x40017a7	          0x4889df	                            mov rdi, rbx	      6024	ops.c	FUNCTION_67	ELSE_7	CALL_47
0x40017aa	      0xe800000000	                          call 0x40017af	      6024	ops.c	FUNCTION_67	ELSE_7	CALL_47
0x40017af	    0x488b15000000	            mov rdx, qword [0x040017b6] 	      6025	ops.c	FUNCTION_67	ELSE_7
0x40017b6	          0x8b4a40	            mov ecx, dword [rdx + 0x40] 	      6025	ops.c	FUNCTION_67	ELSE_7
0x40017b9	        0x488b7a38	            mov rdi, qword [rdx + 0x38] 	      6025	ops.c	FUNCTION_67	ELSE_7
0x40017bd	          0x8b7244	            mov esi, dword [rdx + 0x44] 	      6025	ops.c	FUNCTION_67	ELSE_7
0x40017c0	            0x85c9	                           test ecx, ecx	      6026	ops.c	FUNCTION_67	ELSE_7	IF_49
0x40017c2	     0xf8458020000	                            je 0x4001a20	      6026	ops.c	FUNCTION_67	ELSE_7	IF_49
0x40017c8	          0x8d41ff	                      lea eax, [rcx - 1]	      6027	ops.c	FUNCTION_67	ELSE_7	IF_49
0x40017cb	          0x894240	             mov dword [rdx + 0x40], eax	      6027	ops.c	FUNCTION_67	ELSE_7	IF_49
0x40017ce	    0x488b05000000	            mov rax, qword [0x040017d5] 	      6033	ops.c	FUNCTION_67	IF_50
0x40017d5	        0x8b5c2418	            mov ebx, dword [rsp + 0x18] 	      6033	ops.c	FUNCTION_67	IF_50
0x40017d9	            0x85c9	                           test ecx, ecx	      6035	ops.c	FUNCTION_67	IF_50	IF_51
0x40017db	    0x4c89a0e01100	          mov qword [rax + 0x11e0], r12 	      6033	ops.c	FUNCTION_67	IF_50
0x40017e2	    0x4489b0e81100	         mov dword [rax + 0x11e8], r14d 	      6033	ops.c	FUNCTION_67	IF_50
0x40017e9	    0x8998ec110000	          mov dword [rax + 0x11ec], ebx 	      6033	ops.c	FUNCTION_67	IF_50
0x40017ef	    0x4889b8001200	          mov qword [rax + 0x1200], rdi 	      6034	ops.c	FUNCTION_67	IF_50
0x40017f6	    0x898808120000	          mov dword [rax + 0x1208], ecx 	      6034	ops.c	FUNCTION_67	IF_50
0x40017fc	    0x89b00c120000	          mov dword [rax + 0x120c], esi 	      6034	ops.c	FUNCTION_67	IF_50
0x4001802	            0x7e09	                           jle 0x400180d	      6035	ops.c	FUNCTION_67	IF_50	IF_51
0x4001804	          0x83e901	                              sub ecx, 1	      6036	ops.c	FUNCTION_67	IF_50	IF_51
0x4001807	    0x898808120000	          mov dword [rax + 0x1208], ecx 	      6036	ops.c	FUNCTION_67	IF_50	IF_51
0x400180d	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	      6040	ops.c	FUNCTION_67	IF_52
0x4001811	            0x85c9	                           test ecx, ecx	      6040	ops.c	FUNCTION_67	IF_52
0x4001813	     0xf8584050000	                           jne 0x4001d9d	      6040	ops.c	FUNCTION_67	IF_52
0x4001819	    0xc7424c010000	               mov dword [rdx + 0x4c], 1	      6043	ops.c	FUNCTION_67	ELSE_15	IF_53
0x4001820	      0xb801000000	                              mov eax, 1	      6043	ops.c	FUNCTION_67	ELSE_15	IF_53
0x4001825	      0xe9e2f9ffff	                           jmp 0x400120c	      6043	ops.c	FUNCTION_67	ELSE_15	IF_53
0x400182a	    0x660f1f440000	                    nop word [rax + rax]	      6043	ops.c	FUNCTION_67	ELSE_15	IF_53
0x4001830	      0x837c24341d	           cmp dword [rsp + 0x34], 0x1d 	      5810	ops.c	FUNCTION_67	IF_16	IF_17
0x4001835	     0xf845b040000	                            je 0x4001c96	      5810	ops.c	FUNCTION_67	IF_16	IF_17
0x400183b	        0x8b542408	                mov edx, dword [rsp + 8]	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x400183f	          0x83fa60	                           cmp edx, 0x60	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x4001842	     0xf8e0f030000	                           jle 0x4001b57	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x4001848	      0xb87a000000	                           mov eax, 0x7a	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x400184d	        0x2b442408	                sub eax, dword [rsp + 8]	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x4001851	            0x4898	                                    cdqe	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x4001853	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      5839	ops.c	FUNCTION_67	IF_16	ELSE_4
0x4001858	      0x448b6c2408	               mov r13d, dword [rsp + 8]	      5839	ops.c	FUNCTION_67	IF_16	ELSE_4
0x400185d	      0x40887c2410	              mov byte [rsp + 0x10], dil	      5839	ops.c	FUNCTION_67	IF_16	ELSE_4
0x4001862	          0x4101d5	                           add r13d, edx	      5839	ops.c	FUNCTION_67	IF_16	ELSE_4
0x4001865	          0x4839d0	                            cmp rax, rdx	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x4001868	            0x7d24	                           jge 0x400188e	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x400186a	      0xe800000000	                          call 0x400186f	      5830	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0x400186f	       0xfb67c2410	           movzx edi, byte [rsp + 0x10] 	      5830	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0x4001874	          0x488b00	                    mov rax, qword [rax]	      5830	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0x4001877	         0xfb70478	           movzx eax, word [rax + rdi*2]	      5830	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0x400187b	        0x66250001	                           and ax, 0x100	      5830	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0x400187f	        0x6683f801	                               cmp ax, 1	      5831	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21
0x4001883	          0x4519ed	                          sbb r13d, r13d	      5831	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21
0x4001886	        0x4183e520	                          and r13d, 0x20	      5831	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21
0x400188a	        0x4183c55a	                          add r13d, 0x5a	      5831	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21
0x400188e	    0x488b05000000	            mov rax, qword [0x04001895] 	      5842	ops.c	FUNCTION_67	IF_16
0x4001895	            0x31ff	                            xor edi, edi	      5846	ops.c	FUNCTION_67	IF_16	CALL_30
0x4001897	        0x44897040	            mov dword [rax + 0x40], r14d	      5842	ops.c	FUNCTION_67	IF_16
0x400189b	        0x4c8b6038	            mov r12, qword [rax + 0x38] 	      5844	ops.c	FUNCTION_67	IF_16	IF_22
0x400189f	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5844	ops.c	FUNCTION_67	IF_16	IF_22
0x40018a2	        0x89442418	             mov dword [rsp + 0x18], eax	      5844	ops.c	FUNCTION_67	IF_16	IF_22
0x40018a6	      0xe800000000	                          call 0x40018ab	      5846	ops.c	FUNCTION_67	IF_16	CALL_30
0x40018ab	          0x4489ef	                           mov edi, r13d	      5847	ops.c	FUNCTION_67	IF_16	CALL_31
0x40018ae	      0xe800000000	                          call 0x40018b3	      5847	ops.c	FUNCTION_67	IF_16	CALL_31
0x40018b3	    0x488b15000000	            mov rdx, qword [0x040018ba] 	      5848	ops.c	FUNCTION_67	IF_16
0x40018ba	          0x8b4a40	            mov ecx, dword [rdx + 0x40] 	      5848	ops.c	FUNCTION_67	IF_16
0x40018bd	        0x488b7a38	            mov rdi, qword [rdx + 0x38] 	      5848	ops.c	FUNCTION_67	IF_16
0x40018c1	          0x8b7244	            mov esi, dword [rdx + 0x44] 	      5848	ops.c	FUNCTION_67	IF_16
0x40018c4	        0x44897240	            mov dword [rdx + 0x40], r14d	      5849	ops.c	FUNCTION_67	IF_16
0x40018c8	      0xe901ffffff	                           jmp 0x40017ce	      5849	ops.c	FUNCTION_67	IF_16
0x40018cd	           0xf1f00	                         nop dword [rax]	      5849	ops.c	FUNCTION_67	IF_16
0x40018d0	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      5690	ops.c	FUNCTION_67	IF_2	IF_7
0x40018d6	     0xf8414faffff	                            je 0x40012f0	      5690	ops.c	FUNCTION_67	IF_2	IF_7
0x40018dc	      0x488b442408	                mov rax, qword [rsp + 8]	      5705	ops.c	FUNCTION_67	IF_2	IF_7
0x40018e1	        0x448b7008	               mov r14d, dword [rax + 8]	      5705	ops.c	FUNCTION_67	IF_2	IF_7
0x40018e5	          0x4585f6	                         test r14d, r14d	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x40018e8	     0xf8e02faffff	                           jle 0x40012f0	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x40018ee	          0x4d63fe	                        movsxd r15, r14d	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x40018f1	          0x4901df	                            add r15, rbx	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x40018f4	            0xeb2b	                           jmp 0x4001921	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x40018f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x4001900	    0x448b1d000000	           mov r11d, dword [0x04001907] 	      5711	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x4001907	        0x4183ee01	                             sub r14d, 1	      5709	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3
0x400190b	          0x4585db	                         test r11d, r11d	      5711	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x400190e	     0xf852c020000	                           jne 0x4001b40	      5711	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x4001914	        0x4983ef01	                              sub r15, 1	      5711	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x4001918	          0x4585f6	                         test r14d, r14d	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x400191b	     0xf84cff9ffff	                            je 0x40012f0	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x4001921	        0x410fb63f	                   movzx edi, byte [r15]	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x4001925	          0x4d89fd	                            mov r13, r15	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x4001928	          0x4d89fc	                            mov r12, r15	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x400192b	          0x4929dd	                            sub r13, rbx	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x400192e	      0xe800000000	                          call 0x4001933	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x4001933	            0x85c0	                           test eax, eax	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x4001935	            0x75c9	                           jne 0x4001900	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x4001937	      0xe974fcffff	                           jmp 0x40015b0	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x400193c	         0xf1f4000	                         nop dword [rax]	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x4001940	          0x4963f6	                        movsxd rsi, r14d	      5676	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x4001943	          0x4889df	                            mov rdi, rbx	      5676	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x4001946	          0x4801de	                            add rsi, rbx	      5676	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x4001949	    0xff1500000000	                 call qword [0x0400194f]	      5676	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x400194f	          0x4129c6	                           sub r14d, eax	      5676	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x4001952	      0xe9e9f8ffff	                           jmp 0x4001240	      5676	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x4001957	    0x8b0500000000	            mov eax, dword [0x0400195d] 	      5855	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400195d	            0x85c0	                           test eax, eax	      5855	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400195f	     0xf85aa030000	                           jne 0x4001d0f	      5855	ops.c	FUNCTION_67	ELSE_7	IF_23
0x4001965	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      5858	ops.c	FUNCTION_67	ELSE_7	IF_23
0x4001969	            0x85c0	                           test eax, eax	      5858	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400196b	     0xf8593faffff	                           jne 0x4001404	      5858	ops.c	FUNCTION_67	ELSE_7	IF_23
0x4001971	        0x4183ee01	                             sub r14d, 1	      5861	ops.c	FUNCTION_67	ELSE_7	IF_23
0x4001975	    0x41bf01000000	                             mov r15d, 1	      5862	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400197b	          0x4d63de	                        movsxd r11, r14d	      5862	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400197e	        0x4e8d2c1b	                    lea r13, [rbx + r11]	      5862	ops.c	FUNCTION_67	ELSE_7	IF_23
0x4001982	    0x660f1f440000	                    nop word [rax + rax]	      5862	ops.c	FUNCTION_67	ELSE_7	IF_23
0x4001988	            0x31c0	                            xor eax, eax	      5649	ops.c	FUNCTION_67
0x400198a	      0xe99dfaffff	                           jmp 0x400142c	      5649	ops.c	FUNCTION_67
0x400198f	              0x90	                                     nop	      5649	ops.c	FUNCTION_67
0x4001990	          0x4963f6	                        movsxd rsi, r14d	      5686	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x4001993	          0x4889df	                            mov rdi, rbx	      5686	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x4001996	          0x4801de	                            add rsi, rbx	      5686	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x4001999	    0xff1500000000	                 call qword [0x0400199f]	      5686	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x400199f	          0x4129c6	                           sub r14d, eax	      5686	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x40019a2	      0xe9def8ffff	                           jmp 0x4001285	      5686	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x40019a7	    0x660f1f840000	                    nop word [rax + rax]	      5686	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x40019b0	          0x4585ff	                         test r15d, r15d	      5887	ops.c	FUNCTION_67	ELSE_7	IF_27
0x40019b3	     0xf84f6030000	                            je 0x4001daf	      5887	ops.c	FUNCTION_67	ELSE_7	IF_27
0x40019b9	            0x31c0	                            xor eax, eax	      5888	ops.c	FUNCTION_67	ELSE_7	IF_27
0x40019bb	      0x837c24341d	           cmp dword [rsp + 0x34], 0x1d 	      5888	ops.c	FUNCTION_67	ELSE_7	IF_27
0x40019c0	    0x41bf01000000	                             mov r15d, 1	      5888	ops.c	FUNCTION_67	ELSE_7	IF_27
0x40019c6	           0xf95c0	                                setne al	      5888	ops.c	FUNCTION_67	ELSE_7	IF_27
0x40019c9	            0x85c0	                           test eax, eax	      5891	ops.c	FUNCTION_67	ELSE_7	IF_28
0x40019cb	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	      5890	ops.c	FUNCTION_67	ELSE_7
0x40019d0	     0xf858f010000	                           jne 0x4001b65	      5891	ops.c	FUNCTION_67	ELSE_7	IF_28
0x40019d6	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      5894	ops.c	FUNCTION_67	ELSE_7	ELSE_8
0x40019db	          0x4801d0	                            add rax, rdx	      5894	ops.c	FUNCTION_67	ELSE_7	ELSE_8
0x40019de	          0x4839c2	                            cmp rdx, rax	      5909	ops.c	FUNCTION_67	ELSE_7	IF_29	ELSE_9	IF_32
0x40019e1	      0x4889442458	             mov qword [rsp + 0x58], rax	      5894	ops.c	FUNCTION_67	ELSE_7	ELSE_8
0x40019e6	            0x760c	                           jbe 0x40019f4	      5909	ops.c	FUNCTION_67	ELSE_7	IF_29	ELSE_9	IF_32
0x40019e8	          0x48f7d0	                                 not rax	      5911	ops.c	FUNCTION_67	ELSE_7	IF_29	ELSE_9	IF_32
0x40019eb	        0x4183f701	                             xor r15d, 1	      5912	ops.c	FUNCTION_67	ELSE_7	IF_29	ELSE_9	IF_32
0x40019ef	      0x4889442458	             mov qword [rsp + 0x58], rax	      5911	ops.c	FUNCTION_67	ELSE_7	IF_29	ELSE_9	IF_32
0x40019f4	          0x4885c0	                           test rax, rax	      5916	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_33
0x40019f7	      0xb800000000	                              mov eax, 0	      5916	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_33
0x40019fc	        0x440f44f8	                         cmove r15d, eax	      5916	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_33
0x4001a00	      0xe99afaffff	                           jmp 0x400149f	      5916	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_33
0x4001a05	           0xf1f00	                         nop dword [rax]	      5916	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_33
0x4001a08	           0xfb63b	                   movzx edi, byte [rbx]	      5916	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_33
0x4001a0b	          0x4989dd	                            mov r13, rbx	      5757	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x4001a0e	          0x4531e4	                          xor r12d, r12d	      5757	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x4001a11	      0xe900f7ffff	                           jmp 0x4001116	      5757	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x4001a16	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5757	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x4001a20	    0x488b05000000	            mov rax, qword [0x04001a27] 	      6033	ops.c	FUNCTION_67	IF_50
0x4001a27	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	      6033	ops.c	FUNCTION_67	IF_50
0x4001a2b	    0x4c89a0e01100	          mov qword [rax + 0x11e0], r12 	      6033	ops.c	FUNCTION_67	IF_50
0x4001a32	    0x4489b0e81100	         mov dword [rax + 0x11e8], r14d 	      6033	ops.c	FUNCTION_67	IF_50
0x4001a39	    0x8988ec110000	          mov dword [rax + 0x11ec], ecx 	      6033	ops.c	FUNCTION_67	IF_50
0x4001a3f	    0x4889b8001200	          mov qword [rax + 0x1200], rdi 	      6034	ops.c	FUNCTION_67	IF_50
0x4001a46	    0xc78008120000	            mov dword [rax + 0x1208], 0 	      6034	ops.c	FUNCTION_67	IF_50
0x4001a50	    0x89b00c120000	          mov dword [rax + 0x120c], esi 	      6034	ops.c	FUNCTION_67	IF_50
0x4001a56	      0xe9b2fdffff	                           jmp 0x400180d	      6034	ops.c	FUNCTION_67	IF_50
0x4001a5b	       0xf1f440000	                   nop dword [rax + rax]	      6034	ops.c	FUNCTION_67	IF_50
0x4001a60	        0x41c60030	                     mov byte [r8], 0x30	      5970	ops.c	FUNCTION_67	ELSE_7	IF_41
0x4001a64	        0x8b442454	            mov eax, dword [rsp + 0x54] 	      5973	ops.c	FUNCTION_67	ELSE_7	IF_42
0x4001a68	      0x836c244c01	               sub dword [rsp + 0x4c], 1	      5971	ops.c	FUNCTION_67	ELSE_7	IF_41
0x4001a6d	            0x89c2	                            mov edx, eax	      5973	ops.c	FUNCTION_67	ELSE_7	IF_42
0x4001a6f	          0x83e2df	                     and edx, 0xffffffdf	      5973	ops.c	FUNCTION_67	ELSE_7	IF_42
0x4001a72	          0x83fa42	                           cmp edx, 0x42	      5974	ops.c	FUNCTION_67	ELSE_7	IF_42
0x4001a75	            0x744b	                            je 0x4001ac2	      5974	ops.c	FUNCTION_67	ELSE_7	IF_42
0x4001a77	          0x83fa58	                           cmp edx, 0x58	      5974	ops.c	FUNCTION_67	ELSE_7	IF_42
0x4001a7a	        0x498d6801	                       lea rbp, [r8 + 1]	      5970	ops.c	FUNCTION_67	ELSE_7	IF_41
0x4001a7e	            0x7442	                            je 0x4001ac2	      5974	ops.c	FUNCTION_67	ELSE_7	IF_42
0x4001a80	            0x85c0	                           test eax, eax	      5998	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45
0x4001a82	     0xf841f030000	                            je 0x4001da7	      5998	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45
0x4001a88	          0x83f830	                           cmp eax, 0x30	      6001	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46
0x4001a8b	      0x4c8d7c2460	                   lea r15, [rsp + 0x60]	      6002	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46	CALL_41
0x4001a90	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	      6002	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46	CALL_41
0x4001a95	     0xf84b4020000	                            je 0x4001d4f	      6001	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46
0x4001a9b	    0x8b3d00000000	            mov edi, dword [0x04001aa1] 	      6004	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47
0x4001aa1	            0x85ff	                           test edi, edi	      6004	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47
0x4001aa3	     0xf857c020000	                           jne 0x4001d25	      6004	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47
0x4001aa9	      0xba00000000	                              mov edx, 0	      6008	ops.c	FUNCTION_67	ELSE_7	ELSE_14	CALL_43
0x4001aae	      0xbe41000000	                           mov esi, 0x41	      6008	ops.c	FUNCTION_67	ELSE_7	ELSE_14	CALL_43
0x4001ab3	          0x4c89ff	                            mov rdi, r15	      6008	ops.c	FUNCTION_67	ELSE_7	ELSE_14	CALL_43
0x4001ab6	            0x31c0	                            xor eax, eax	      6008	ops.c	FUNCTION_67	ELSE_7	ELSE_14	CALL_43
0x4001ab8	      0xe800000000	                          call 0x4001abd	      6008	ops.c	FUNCTION_67	ELSE_7	ELSE_14	CALL_43
0x4001abd	      0xe97efcffff	                           jmp 0x4001740	      6008	ops.c	FUNCTION_67	ELSE_7	ELSE_14	CALL_43
0x4001ac2	        0x41884001	                   mov byte [r8 + 1], al	      5976	ops.c	FUNCTION_67	ELSE_7	IF_42
0x4001ac6	        0x8b442454	            mov eax, dword [rsp + 0x54] 	      5976	ops.c	FUNCTION_67	ELSE_7	IF_42
0x4001aca	        0x498d6802	                       lea rbp, [r8 + 2]	      5976	ops.c	FUNCTION_67	ELSE_7	IF_42
0x4001ace	      0x836c244c01	               sub dword [rsp + 0x4c], 1	      5977	ops.c	FUNCTION_67	ELSE_7	IF_42
0x4001ad3	            0x89c2	                            mov edx, eax	      5983	ops.c	FUNCTION_67	ELSE_7	IF_43
0x4001ad5	          0x83e2df	                     and edx, 0xffffffdf	      5983	ops.c	FUNCTION_67	ELSE_7	IF_43
0x4001ad8	          0x83fa42	                           cmp edx, 0x42	      5983	ops.c	FUNCTION_67	ELSE_7	IF_43
0x4001adb	            0x75a3	                           jne 0x4001a80	      5983	ops.c	FUNCTION_67	ELSE_7	IF_43
0x4001add	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	      5983	ops.c	FUNCTION_67	ELSE_7	IF_43
0x4001ae2	      0xbe40000000	                           mov esi, 0x40	      5983	ops.c	FUNCTION_67	ELSE_7	IF_43
0x4001ae7	            0xeb12	                           jmp 0x4001afb	      5983	ops.c	FUNCTION_67	ELSE_7	IF_43
0x4001ae9	     0xf1f80000000	                         nop dword [rax]	      5983	ops.c	FUNCTION_67	ELSE_7	IF_43
0x4001af0	          0x4863f0	                         movsxd rsi, eax	      5983	ops.c	FUNCTION_67	ELSE_7	IF_43
0x4001af3	            0x85f6	                           test esi, esi	      5990	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_1
0x4001af5	     0xf84ff010000	                            je 0x4001cfa	      5990	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_1
0x4001afb	          0x8d46ff	                      lea eax, [rsi - 1]	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x4001afe	        0x480fa3c2	                             bt rdx, rax	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x4001b02	            0x73ec	                           jae 0x4001af0	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x4001b04	      0x4c8d7c2460	                   lea r15, [rsp + 0x60]	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x4001b09	            0x89f1	                            mov ecx, esi	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x4001b0b	          0x4c89f8	                            mov rax, r15	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x4001b0e	            0x6690	                                     nop	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x4001b10	          0x83e901	                              sub ecx, 1	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x4001b13	          0x4889d7	                            mov rdi, rdx	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x4001b16	          0x48d3ef	                             shr rdi, cl	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x4001b19	          0x83e701	                              and edi, 1	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x4001b1c	        0x4883ff01	                              cmp rdi, 1	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x4001b20	            0x19ff	                            sbb edi, edi	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x4001b22	        0x4883c001	                              add rax, 1	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x4001b26	          0x83c731	                           add edi, 0x31	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x4001b29	        0x408878ff	                 mov byte [rax - 1], dil	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x4001b2d	            0x85c9	                           test ecx, ecx	      5993	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x4001b2f	            0x75df	                           jne 0x4001b10	      5993	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x4001b31	      0xc644346000	          mov byte [rsp + rsi + 0x60], 0	      5996	ops.c	FUNCTION_67	ELSE_7	IF_43
0x4001b36	      0xe905fcffff	                           jmp 0x4001740	      5996	ops.c	FUNCTION_67	ELSE_7	IF_43
0x4001b3b	       0xf1f440000	                   nop dword [rax + rax]	      5996	ops.c	FUNCTION_67	ELSE_7	IF_43
0x4001b40	          0x4963f6	                        movsxd rsi, r14d	      5712	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x4001b43	          0x4889df	                            mov rdi, rbx	      5712	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x4001b46	          0x4801de	                            add rsi, rbx	      5712	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x4001b49	    0xff1500000000	                 call qword [0x04001b4f]	      5712	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x4001b4f	          0x4129c6	                           sub r14d, eax	      5712	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x4001b52	      0xe98efdffff	                           jmp 0x40018e5	      5712	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x4001b57	      0xb85a000000	                           mov eax, 0x5a	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x4001b5c	            0x29d0	                            sub eax, edx	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x4001b5e	            0x4898	                                    cdqe	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x4001b60	      0xe9eefcffff	                           jmp 0x4001853	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x4001b65	          0x4889d0	                            mov rax, rdx	      5892	ops.c	FUNCTION_67	ELSE_7	IF_28
0x4001b68	      0x482b442438	             sub rax, qword [rsp + 0x38]	      5892	ops.c	FUNCTION_67	ELSE_7	IF_28
0x4001b6d	          0x4839d0	                            cmp rax, rdx	      5900	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0x4001b70	      0x4889442458	             mov qword [rsp + 0x58], rax	      5892	ops.c	FUNCTION_67	ELSE_7	IF_28
0x4001b75	     0xf8679feffff	                           jbe 0x40019f4	      5900	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0x4001b7b	          0x48f7d8	                                 neg rax	      5902	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0x4001b7e	        0x4183f701	                             xor r15d, 1	      5903	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0x4001b82	      0x4889442458	             mov qword [rsp + 0x58], rax	      5902	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0x4001b87	      0xe968feffff	                           jmp 0x40019f4	      5902	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0x4001b8c	        0x4183c601	                             add r14d, 1	      5879	ops.c	FUNCTION_67	ELSE_7	IF_25
0x4001b90	      0x836c244c01	               sub dword [rsp + 0x4c], 1	      5880	ops.c	FUNCTION_67	ELSE_7	IF_25
0x4001b95	      0xe9edf8ffff	                           jmp 0x4001487	      5880	ops.c	FUNCTION_67	ELSE_7	IF_25
0x4001b9a	    0x41bc01000000	                             mov r12d, 1	      5718	ops.c	FUNCTION_67	IF_2	IF_9
0x4001ba0	      0xe92ffaffff	                           jmp 0x40015d4	      5718	ops.c	FUNCTION_67	IF_2	IF_9
0x4001ba5	    0x48837c244000	               cmp qword [rsp + 0x40], 0	      6018	ops.c	FUNCTION_67	ELSE_7	IF_48
0x4001bab	            0x741f	                            je 0x4001bcc	      6018	ops.c	FUNCTION_67	ELSE_7	IF_48
0x4001bad	        0x8b742454	            mov esi, dword [rsp + 0x54] 	      6018	ops.c	FUNCTION_67	ELSE_7	IF_48
0x4001bb1	            0x85f6	                           test esi, esi	      6018	ops.c	FUNCTION_67	ELSE_7	IF_48
0x4001bb3	            0x7517	                           jne 0x4001bcc	      6018	ops.c	FUNCTION_67	ELSE_7	IF_48
0x4001bb5	      0xe9d6fbffff	                           jmp 0x4001790	      6018	ops.c	FUNCTION_67	ELSE_7	IF_48
0x4001bba	    0x660f1f440000	                    nop word [rax + rax]	      6018	ops.c	FUNCTION_67	ELSE_7	IF_48
0x4001bc0	        0x4883c501	                              add rbp, 1	      6020	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x4001bc4	        0xc645ff30	                mov byte [rbp - 1], 0x30	      6020	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x4001bc8	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      6019	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x4001bcc	          0x8d50ff	                      lea edx, [rax - 1]	      6019	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x4001bcf	            0x85c0	                           test eax, eax	      6019	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x4001bd1	        0x8954244c	             mov dword [rsp + 0x4c], edx	      6019	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x4001bd5	            0x7fe9	                            jg 0x4001bc0	      6019	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x4001bd7	      0xe9b4fbffff	                           jmp 0x4001790	      6019	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x4001bdc	    0x448b15000000	           mov r10d, dword [0x04001be3] 	      5723	ops.c	FUNCTION_67	IF_2	IF_9
0x4001be3	          0x4585d2	                         test r10d, r10d	      5723	ops.c	FUNCTION_67	IF_2	IF_9
0x4001be6	            0x7411	                            je 0x4001bf9	      5723	ops.c	FUNCTION_67	IF_2	IF_9
0x4001be8	          0x4889df	                            mov rdi, rbx	      5724	ops.c	FUNCTION_67	IF_2	IF_9
0x4001beb	    0xff1500000000	                 call qword [0x04001bf1]	      5724	ops.c	FUNCTION_67	IF_2	IF_9
0x4001bf1	            0x85c0	                           test eax, eax	      5723	ops.c	FUNCTION_67	IF_2	IF_9
0x4001bf3	     0xf85dbf9ffff	                           jne 0x40015d4	      5723	ops.c	FUNCTION_67	IF_2	IF_9
0x4001bf9	    0x420fb67c2b01	        movzx edi, byte [rbx + r13 + 1] 	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x4001bff	      0xe800000000	                          call 0x4001c04	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x4001c04	            0x85c0	                           test eax, eax	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x4001c06	            0x7492	                            je 0x4001b9a	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x4001c08	    0x448b05000000	            mov r8d, dword [0x04001c0f] 	      5741	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x4001c0f	        0x4183ee01	                             sub r14d, 1	      5739	ops.c	FUNCTION_67	IF_2	IF_9
0x4001c13	          0x4585c0	                           test r8d, r8d	      5741	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x4001c16	     0xf84eef4ffff	                            je 0x400110a	      5741	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x4001c1c	          0x4963f6	                        movsxd rsi, r14d	      5742	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x4001c1f	          0x4889df	                            mov rdi, rbx	      5742	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x4001c22	          0x4801de	                            add rsi, rbx	      5742	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x4001c25	    0xff1500000000	                 call qword [0x04001c2b]	      5742	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x4001c2b	          0x4129c6	                           sub r14d, eax	      5742	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x4001c2e	      0xe9d7f4ffff	                           jmp 0x400110a	      5742	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x4001c33	    0x8b0500000000	            mov eax, dword [0x04001c39] 	      5787	ops.c	FUNCTION_67	IF_12	IF_14
0x4001c39	            0x85c0	                           test eax, eax	      5787	ops.c	FUNCTION_67	IF_12	IF_14
0x4001c3b	     0xf8527010000	                           jne 0x4001d68	      5787	ops.c	FUNCTION_67	IF_12	IF_14
0x4001c41	          0x4d63e6	                        movsxd r12, r14d	      5787	ops.c	FUNCTION_67	IF_12	IF_14
0x4001c44	    0xc74424100000	               mov dword [rsp + 0x10], 0	      5793	ops.c	FUNCTION_67	IF_12	IF_14
0x4001c4c	    0x41bf01000000	                             mov r15d, 1	      5792	ops.c	FUNCTION_67	IF_12	IF_14
0x4001c52	        0x4e8d2c23	                    lea r13, [rbx + r12]	      5792	ops.c	FUNCTION_67	IF_12	IF_14
0x4001c56	      0x410fb67d00	                   movzx edi, byte [r13]	      5792	ops.c	FUNCTION_67	IF_12	IF_14
0x4001c5b	      0xe94bf5ffff	                           jmp 0x40011ab	      5792	ops.c	FUNCTION_67	IF_12	IF_14
0x4001c60	        0x4c8d4301	                       lea r8, [rbx + 1]	      5966	ops.c	FUNCTION_67	ELSE_7	IF_40
0x4001c64	          0xc6032d	                    mov byte [rbx], 0x2d	      5966	ops.c	FUNCTION_67	ELSE_7	IF_40
0x4001c67	      0xe996faffff	                           jmp 0x4001702	      5966	ops.c	FUNCTION_67	ELSE_7	IF_40
0x4001c6c	          0x4889df	                            mov rdi, rbx	      5867	ops.c	FUNCTION_67	ELSE_7	IF_24	CALL_32
0x4001c6f	      0xe800000000	                          call 0x4001c74	      5867	ops.c	FUNCTION_67	ELSE_7	IF_24	CALL_32
0x4001c74	          0x4429f0	                           sub eax, r14d	      5868	ops.c	FUNCTION_67	ELSE_7	IF_24
0x4001c77	      0xe9b0f7ffff	                           jmp 0x400142c	      5868	ops.c	FUNCTION_67	ELSE_7	IF_24
0x4001c7c	         0xf1f4000	                         nop dword [rax]	      5868	ops.c	FUNCTION_67	ELSE_7	IF_24
0x4001c80	      0x836c244c01	               sub dword [rsp + 0x4c], 1	      5940	ops.c	FUNCTION_67	ELSE_7	IF_36
0x4001c85	      0xe9e9f9ffff	                           jmp 0x4001673	      5940	ops.c	FUNCTION_67	ELSE_7	IF_36
0x4001c8a	          0x4585f6	                         test r14d, r14d	      5718	ops.c	FUNCTION_67	IF_2	IF_9
0x4001c8d	        0x410f9fc4	                               setg r12b	      5718	ops.c	FUNCTION_67	IF_2	IF_9
0x4001c91	      0xe93ef9ffff	                           jmp 0x40015d4	      5718	ops.c	FUNCTION_67	IF_2	IF_9
0x4001c96	        0x8b442408	                mov eax, dword [rsp + 8]	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x4001c9a	          0x83f860	                           cmp eax, 0x60	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x4001c9d	            0x7f65	                            jg 0x4001d04	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x4001c9f	          0x83e841	                           sub eax, 0x41	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x4001ca2	            0x4898	                                    cdqe	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x4001ca4	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      5823	ops.c	FUNCTION_67	IF_16	IF_17
0x4001ca9	      0x448b6c2408	               mov r13d, dword [rsp + 8]	      5823	ops.c	FUNCTION_67	IF_16	IF_17
0x4001cae	      0x40887c2410	              mov byte [rsp + 0x10], dil	      5823	ops.c	FUNCTION_67	IF_16	IF_17
0x4001cb3	          0x4129d5	                           sub r13d, edx	      5823	ops.c	FUNCTION_67	IF_16	IF_17
0x4001cb6	          0x4839d0	                            cmp rax, rdx	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x4001cb9	     0xf8dcffbffff	                           jge 0x400188e	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x4001cbf	      0xe800000000	                          call 0x4001cc4	      5814	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0x4001cc4	       0xfb67c2410	           movzx edi, byte [rsp + 0x10] 	      5814	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0x4001cc9	          0x488b00	                    mov rax, qword [rax]	      5814	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0x4001ccc	         0xfb70478	           movzx eax, word [rax + rdi*2]	      5814	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0x4001cd0	        0x66250001	                           and ax, 0x100	      5814	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0x4001cd4	        0x6683f801	                               cmp ax, 1	      5815	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19
0x4001cd8	          0x4519ed	                          sbb r13d, r13d	      5815	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19
0x4001cdb	        0x4183e520	                          and r13d, 0x20	      5815	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19
0x4001cdf	        0x4183c541	                          add r13d, 0x41	      5815	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19
0x4001ce3	      0xe9a6fbffff	                           jmp 0x400188e	      5815	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19
0x4001ce8	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      5892	ops.c	FUNCTION_67	ELSE_7	IF_28
0x4001ced	          0x4531ff	                          xor r15d, r15d	      5892	ops.c	FUNCTION_67	ELSE_7	IF_28
0x4001cf0	      0x4829442458	             sub qword [rsp + 0x58], rax	      5892	ops.c	FUNCTION_67	ELSE_7	IF_28
0x4001cf5	      0xe9a5f7ffff	                           jmp 0x400149f	      5892	ops.c	FUNCTION_67	ELSE_7	IF_28
0x4001cfa	      0x4c8d7c2460	                   lea r15, [rsp + 0x60]	      5892	ops.c	FUNCTION_67	ELSE_7	IF_28
0x4001cff	      0xe92dfeffff	                           jmp 0x4001b31	      5892	ops.c	FUNCTION_67	ELSE_7	IF_28
0x4001d04	        0x8b442408	                mov eax, dword [rsp + 8]	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x4001d08	          0x83e861	                           sub eax, 0x61	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x4001d0b	            0x4898	                                    cdqe	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x4001d0d	            0xeb95	                           jmp 0x4001ca4	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x4001d0f	          0x4889df	                            mov rdi, rbx	      5856	ops.c	FUNCTION_67	ELSE_7	IF_23
0x4001d12	    0xff1500000000	                 call qword [0x04001d18]	      5856	ops.c	FUNCTION_67	ELSE_7	IF_23
0x4001d18	            0x85c0	                           test eax, eax	      5855	ops.c	FUNCTION_67	ELSE_7	IF_23
0x4001d1a	     0xf8445fcffff	                            je 0x4001965	      5855	ops.c	FUNCTION_67	ELSE_7	IF_23
0x4001d20	      0xe9d3f6ffff	                           jmp 0x40013f8	      5855	ops.c	FUNCTION_67	ELSE_7	IF_23
0x4001d25	      0xba00000000	                              mov edx, 0	      6005	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47	CALL_42
0x4001d2a	      0xbe41000000	                           mov esi, 0x41	      6005	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47	CALL_42
0x4001d2f	          0x4c89ff	                            mov rdi, r15	      6005	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47	CALL_42
0x4001d32	            0x31c0	                            xor eax, eax	      6005	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47	CALL_42
0x4001d34	      0xe800000000	                          call 0x4001d39	      6005	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47	CALL_42
0x4001d39	      0xe902faffff	                           jmp 0x4001740	      6005	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47	CALL_42
0x4001d3e	          0x4d89ec	                            mov r12, r13	      6005	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47	CALL_42
0x4001d41	        0x4e8d2c2b	                    lea r13, [rbx + r13]	      6005	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47	CALL_42
0x4001d45	      0x410fb67d00	                   movzx edi, byte [r13]	      6005	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47	CALL_42
0x4001d4a	      0xe9c7f3ffff	                           jmp 0x4001116	      6005	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47	CALL_42
0x4001d4f	      0xba00000000	                              mov edx, 0	      6002	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46	CALL_41
0x4001d54	      0xbe41000000	                           mov esi, 0x41	      6002	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46	CALL_41
0x4001d59	          0x4c89ff	                            mov rdi, r15	      6002	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46	CALL_41
0x4001d5c	            0x31c0	                            xor eax, eax	      6002	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46	CALL_41
0x4001d5e	      0xe800000000	                          call 0x4001d63	      6002	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46	CALL_41
0x4001d63	      0xe9d8f9ffff	                           jmp 0x4001740	      6002	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46	CALL_41
0x4001d68	          0x4d63e6	                        movsxd r12, r14d	      6002	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46	CALL_41
0x4001d6b	          0x4889df	                            mov rdi, rbx	      5788	ops.c	FUNCTION_67	IF_12	IF_14
0x4001d6e	        0x4e8d2c23	                    lea r13, [rbx + r12]	      5788	ops.c	FUNCTION_67	IF_12	IF_14
0x4001d72	    0xff1500000000	                 call qword [0x04001d78]	      5788	ops.c	FUNCTION_67	IF_12	IF_14
0x4001d78	            0x85c0	                           test eax, eax	      5787	ops.c	FUNCTION_67	IF_12	IF_14
0x4001d7a	      0x410fb67d00	                   movzx edi, byte [r13]	      5787	ops.c	FUNCTION_67	IF_12	IF_14
0x4001d7f	     0xf851bf4ffff	                           jne 0x40011a0	      5787	ops.c	FUNCTION_67	IF_12	IF_14
0x4001d85	    0xc74424100000	               mov dword [rsp + 0x10], 0	      5793	ops.c	FUNCTION_67	IF_12	IF_14
0x4001d8d	    0x41bf01000000	                             mov r15d, 1	      5792	ops.c	FUNCTION_67	IF_12	IF_14
0x4001d93	      0xe913f4ffff	                           jmp 0x40011ab	      5792	ops.c	FUNCTION_67	IF_12	IF_14
0x4001d98	      0xe800000000	                          call 0x4001d9d	      6046	ops.c	FUNCTION_67
0x4001d9d	      0xb801000000	                              mov eax, 1	      6046	ops.c	FUNCTION_67
0x4001da2	      0xe94ef4ffff	                           jmp 0x40011f5	      6046	ops.c	FUNCTION_67
0x4001da7	          0x4989e8	                             mov r8, rbp	      6046	ops.c	FUNCTION_67
0x4001daa	      0xe961f9ffff	                           jmp 0x4001710	      6046	ops.c	FUNCTION_67
0x4001daf	            0x31c0	                            xor eax, eax	      5884	ops.c	FUNCTION_67	ELSE_7
0x4001db1	      0x837c24341d	           cmp dword [rsp + 0x34], 0x1d 	      5884	ops.c	FUNCTION_67	ELSE_7
0x4001db6	           0xf94c0	                                 sete al	      5884	ops.c	FUNCTION_67	ELSE_7
0x4001db9	      0xe90bfcffff	                           jmp 0x40019c9	      5884	ops.c	FUNCTION_67	ELSE_7
get_expr_register	SWITCH,0:IF,2:WHILE,0:DO,0:FOR,0:ELSE,1:CALL,3:functions,0	26
0x4002530	              0x53	                                push rbx	       794	ops.c	FUNCTION_10
0x4002531	            0x31d2	                            xor edx, edx	       797	ops.c	FUNCTION_10	CALL_1
0x4002533	            0x31f6	                            xor esi, esi	       797	ops.c	FUNCTION_10	CALL_1
0x4002535	      0xbf3d000000	                           mov edi, 0x3d	       797	ops.c	FUNCTION_10	CALL_1
0x400253a	      0xe800000000	                          call 0x400253f	       797	ops.c	FUNCTION_10	CALL_1
0x400253f	          0x4885c0	                           test rax, rax	       798	ops.c	FUNCTION_10	IF_1
0x4002542	            0x743c	                            je 0x4002580	       798	ops.c	FUNCTION_10	IF_1
0x4002544	          0x803800	                       cmp byte [rax], 0	       800	ops.c	FUNCTION_10	IF_2
0x4002547	          0x4889c3	                            mov rbx, rax	       800	ops.c	FUNCTION_10	IF_2
0x400254a	            0x7514	                           jne 0x4002560	       800	ops.c	FUNCTION_10	IF_2
0x400254c	          0x4889c7	                            mov rdi, rax	       801	ops.c	FUNCTION_10	CALL_2
0x400254f	      0xe800000000	                          call 0x4002554	       801	ops.c	FUNCTION_10	CALL_2
0x4002554	      0xb83d000000	                           mov eax, 0x3d	       804	ops.c	FUNCTION_10
0x4002559	              0x5b	                                 pop rbx	       805	ops.c	FUNCTION_10
0x400255a	              0xc3	                                     ret	       805	ops.c	FUNCTION_10
0x400255b	       0xf1f440000	                   nop dword [rax + rax]	       805	ops.c	FUNCTION_10
0x4002560	    0x488b3d000000	            mov rdi, qword [0x04002567] 	       814	ops.c	FUNCTION_11	CALL_1
0x4002567	      0xe800000000	                          call 0x400256c	       814	ops.c	FUNCTION_11	CALL_1
0x400256c	    0x48891d000000	            mov qword [0x04002573], rbx 	       815	ops.c	FUNCTION_11
0x4002573	      0xb83d000000	                           mov eax, 0x3d	       804	ops.c	FUNCTION_10
0x4002578	              0x5b	                                 pop rbx	       805	ops.c	FUNCTION_10
0x4002579	              0xc3	                                     ret	       805	ops.c	FUNCTION_10
0x400257a	    0x660f1f440000	                    nop word [rax + rax]	       805	ops.c	FUNCTION_10
0x4002580	            0x31c0	                            xor eax, eax	       799	ops.c	FUNCTION_10	IF_1
0x4002582	              0x5b	                                 pop rbx	       805	ops.c	FUNCTION_10
0x4002583	              0xc3	                                     ret	       805	ops.c	FUNCTION_10
swapchars	SWITCH,0:IF,3:WHILE,0:DO,0:FOR,1:ELSE,0:CALL,3:functions,0	45
0x4003a30	            0x85d2	                           test edx, edx	      2513	ops.c	FUNCTION_37	FOR_1
0x4003a32	            0x4156	                                push r14	      2509	ops.c	FUNCTION_37
0x4003a34	            0x4155	                                push r13	      2509	ops.c	FUNCTION_37
0x4003a36	            0x4154	                                push r12	      2509	ops.c	FUNCTION_37
0x4003a38	              0x55	                                push rbp	      2509	ops.c	FUNCTION_37
0x4003a39	              0x53	                                push rbx	      2509	ops.c	FUNCTION_37
0x4003a3a	            0x7e60	                           jle 0x4003a9c	      2513	ops.c	FUNCTION_37	FOR_1
0x4003a3c	          0x4189fd	                           mov r13d, edi	      2513	ops.c	FUNCTION_37	FOR_1
0x4003a3f	          0x4889f5	                            mov rbp, rsi	      2513	ops.c	FUNCTION_37	FOR_1
0x4003a42	            0x89d3	                            mov ebx, edx	      2513	ops.c	FUNCTION_37	FOR_1
0x4003a44	          0x4531e4	                          xor r12d, r12d	      2513	ops.c	FUNCTION_37	FOR_1
0x4003a47	            0xeb29	                           jmp 0x4003a72	      2513	ops.c	FUNCTION_37	FOR_1
0x4003a49	     0xf1f80000000	                         nop dword [rax]	      2513	ops.c	FUNCTION_37	FOR_1
0x4003a50	          0x4889ee	                            mov rsi, rbp	      2525	ops.c	FUNCTION_37	FOR_1	CALL_2
0x4003a53	          0x4489ef	                           mov edi, r13d	      2525	ops.c	FUNCTION_37	FOR_1	CALL_2
0x4003a56	      0xe800000000	                          call 0x4003a5b	      2525	ops.c	FUNCTION_37	FOR_1	CALL_2
0x4003a5b	          0x4889ef	                            mov rdi, rbp	      2526	ops.c	FUNCTION_37	FOR_1	IF_3	CALL_3
0x4003a5e	          0x4109c4	                            or r12d, eax	      2525	ops.c	FUNCTION_37	FOR_1	CALL_2
0x4003a61	      0xe800000000	                          call 0x4003a66	      2526	ops.c	FUNCTION_37	FOR_1	IF_3	CALL_3
0x4003a66	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2526	ops.c	FUNCTION_37	FOR_1	IF_3	CALL_3
0x4003a69	            0x7434	                            je 0x4003a9f	      2526	ops.c	FUNCTION_37	FOR_1	IF_3	CALL_3
0x4003a6b	          0x83eb01	                              sub ebx, 1	      2513	ops.c	FUNCTION_37	FOR_1
0x4003a6e	            0x85db	                           test ebx, ebx	      2513	ops.c	FUNCTION_37	FOR_1
0x4003a70	            0x7e2d	                           jle 0x4003a9f	      2513	ops.c	FUNCTION_37	FOR_1
0x4003a72	    0x8b0500000000	            mov eax, dword [0x04003a78] 	      2516	ops.c	FUNCTION_37	FOR_1	IF_1
0x4003a78	            0x85c0	                           test eax, eax	      2516	ops.c	FUNCTION_37	FOR_1	IF_1
0x4003a7a	            0x74d4	                            je 0x4003a50	      2516	ops.c	FUNCTION_37	FOR_1	IF_1
0x4003a7c	          0x4889ef	                            mov rdi, rbp	      2518	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x4003a7f	    0x4c8b35000000	            mov r14, qword [0x04003a86] 	      2518	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x4003a86	      0xe800000000	                          call 0x4003a8b	      2518	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x4003a8b	          0x4889c7	                            mov rdi, rax	      2518	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x4003a8e	          0x41ffd6	                                call r14	      2518	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x4003a91	            0x85c0	                           test eax, eax	      2521	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x4003a93	            0x7ebb	                           jle 0x4003a50	      2521	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x4003a95	          0x83e801	                              sub eax, 1	      2522	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x4003a98	            0x29c3	                            sub ebx, eax	      2522	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x4003a9a	            0xebb4	                           jmp 0x4003a50	      2522	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x4003a9c	          0x4531e4	                          xor r12d, r12d	      2511	ops.c	FUNCTION_37
0x4003a9f	              0x5b	                                 pop rbx	      2530	ops.c	FUNCTION_37
0x4003aa0	          0x4489e0	                           mov eax, r12d	      2530	ops.c	FUNCTION_37
0x4003aa3	              0x5d	                                 pop rbp	      2530	ops.c	FUNCTION_37
0x4003aa4	            0x415c	                                 pop r12	      2530	ops.c	FUNCTION_37
0x4003aa6	            0x415d	                                 pop r13	      2530	ops.c	FUNCTION_37
0x4003aa8	            0x415e	                                 pop r14	      2530	ops.c	FUNCTION_37
0x4003aaa	              0xc3	                                     ret	      2530	ops.c	FUNCTION_37
free_yank	SWITCH,0:IF,3:WHILE,0:DO,0:FOR,1:ELSE,0:CALL,5:functions,0	29
0x40003e0	              0x55	                                push rbp	      3011	ops.c	FUNCTION_43
0x40003e1	              0x53	                                push rbx	      3011	ops.c	FUNCTION_43
0x40003e2	          0x4889fb	                            mov rbx, rdi	      3011	ops.c	FUNCTION_43
0x40003e5	        0x4883ec08	                              sub rsp, 8	      3011	ops.c	FUNCTION_43
0x40003e9	    0x488b05000000	            mov rax, qword [0x040003f0] 	      3012	ops.c	FUNCTION_43	IF_1
0x40003f0	          0x488b38	                    mov rdi, qword [rax]	      3012	ops.c	FUNCTION_43	IF_1
0x40003f3	          0x4885ff	                           test rdi, rdi	      3012	ops.c	FUNCTION_43	IF_1
0x40003f6	            0x7451	                            je 0x4000449	      3012	ops.c	FUNCTION_43	IF_1
0x40003f8	        0x4883eb01	                              sub rbx, 1	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x40003fc	            0x7838	                            js 0x4000436	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x40003fe	    0x488d2cdd0000	                        lea rbp, [rbx*8]	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4000406	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4000410	        0x488b3c2f	              mov rdi, qword [rdi + rbp]	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x4000414	        0x4883eb01	                              sub rbx, 1	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4000418	        0x4883ed08	                              sub rbp, 8	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400041c	      0xe800000000	                          call 0x4000421	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x4000421	    0x488b05000000	            mov rax, qword [0x04000428] 	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x4000428	        0x4883fbff	             cmp rbx, 0xffffffffffffffff	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400042c	          0x488b38	                    mov rdi, qword [rax]	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400042f	            0x75df	                           jne 0x4000410	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4000431	          0x4885ff	                           test rdi, rdi	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4000434	            0x7413	                            je 0x4000449	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4000436	      0xe800000000	                          call 0x400043b	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x400043b	    0x488b05000000	            mov rax, qword [0x04000442] 	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4000442	    0x48c700000000	                      mov qword [rax], 0	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4000449	        0x4883c408	                              add rsp, 8	      3040	ops.c	FUNCTION_43
0x400044d	              0x5b	                                 pop rbx	      3040	ops.c	FUNCTION_43
0x400044e	              0x5d	                                 pop rbp	      3040	ops.c	FUNCTION_43
0x400044f	              0xc3	                                     ret	      3040	ops.c	FUNCTION_43
yank_copy_line	SWITCH,0:IF,1:WHILE,0:DO,0:FOR,0:ELSE,0:CALL,4:functions,0	43
0x4000450	              0x55	                                push rbp	      3403	ops.c	FUNCTION_46
0x4000451	              0x53	                                push rbx	      3403	ops.c	FUNCTION_46
0x4000452	          0x4889fb	                            mov rbx, rdi	      3403	ops.c	FUNCTION_46
0x4000455	          0x4889f5	                            mov rbp, rsi	      3403	ops.c	FUNCTION_46
0x4000458	        0x4883ec08	                              sub rsp, 8	      3403	ops.c	FUNCTION_46
0x400045c	          0x8b7f04	                mov edi, dword [rdi + 4]	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x400045f	             0x33b	                    add edi, dword [rbx]	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x4000461	           0x37b08	                add edi, dword [rbx + 8]	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x4000464	          0x83c701	                              add edi, 1	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x4000467	      0xe800000000	                          call 0x400046c	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x400046c	          0x4889c1	                            mov rcx, rax	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x400046f	            0x31c0	                            xor eax, eax	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x4000471	          0x4885c9	                           test rcx, rcx	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x4000474	            0x7462	                            je 0x40004d8	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x4000476	    0x488b05000000	            mov rax, qword [0x0400047d] 	      3409	ops.c	FUNCTION_46
0x400047d	          0x486313	                 movsxd rdx, dword [rbx]	        90	string3.h	FUNCTION_95	CALL_6
0x4000480	          0x4889cf	                            mov rdi, rcx	        90	string3.h	FUNCTION_95	CALL_6
0x4000483	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x4000488	          0x488b00	                    mov rax, qword [rax]	      3409	ops.c	FUNCTION_46
0x400048b	        0x48890ce8	            mov qword [rax + rbp*8], rcx	      3409	ops.c	FUNCTION_46
0x400048f	      0xe800000000	                          call 0x4000494	        90	string3.h	FUNCTION_95	CALL_6
0x4000494	          0x4889c1	                            mov rcx, rax	        90	string3.h	FUNCTION_95	CALL_6
0x4000497	          0x486303	                 movsxd rax, dword [rbx]	      3411	ops.c	FUNCTION_46
0x400049a	        0x48635308	            movsxd rdx, dword [rbx + 8] 	        59	string3.h	FUNCTION_93	CALL_3
0x400049e	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	        59	string3.h	FUNCTION_93	CALL_3
0x40004a2	          0x4801c1	                            add rcx, rax	      3411	ops.c	FUNCTION_46
0x40004a5	          0x4889cf	                            mov rdi, rcx	        59	string3.h	FUNCTION_93	CALL_3
0x40004a8	      0xe800000000	                          call 0x40004ad	        59	string3.h	FUNCTION_93	CALL_3
0x40004ad	          0x4889c1	                            mov rcx, rax	        59	string3.h	FUNCTION_93	CALL_3
0x40004b0	        0x48634308	            movsxd rax, dword [rbx + 8] 	      3413	ops.c	FUNCTION_46
0x40004b4	        0x48635304	            movsxd rdx, dword [rbx + 4] 	        90	string3.h	FUNCTION_95	CALL_6
0x40004b8	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x40004bd	          0x4801c1	                            add rcx, rax	      3413	ops.c	FUNCTION_46
0x40004c0	          0x4889cf	                            mov rdi, rcx	        90	string3.h	FUNCTION_95	CALL_6
0x40004c3	      0xe800000000	                          call 0x40004c8	        90	string3.h	FUNCTION_95	CALL_6
0x40004c8	          0x4889c1	                            mov rcx, rax	        90	string3.h	FUNCTION_95	CALL_6
0x40004cb	        0x48634304	            movsxd rax, dword [rbx + 4] 	      3416	ops.c	FUNCTION_46
0x40004cf	        0xc6040100	                 mov byte [rcx + rax], 0	      3416	ops.c	FUNCTION_46
0x40004d3	      0xb801000000	                              mov eax, 1	      3417	ops.c	FUNCTION_46
0x40004d8	        0x4883c408	                              add rsp, 8	      3418	ops.c	FUNCTION_46
0x40004dc	              0x5b	                                 pop rbx	      3418	ops.c	FUNCTION_46
0x40004dd	              0x5d	                                 pop rbp	      3418	ops.c	FUNCTION_46
0x40004de	              0xc3	                                     ret	      3418	ops.c	FUNCTION_46
free_register	SWITCH,0:IF,0:WHILE,0:DO,0:FOR,0:ELSE,0:CALL,2:functions,0	39
0x40028f0	            0x4157	                                push r15	      1055	ops.c	FUNCTION_19
0x40028f2	            0x4156	                                push r14	      1055	ops.c	FUNCTION_19
0x40028f4	            0x4155	                                push r13	      1055	ops.c	FUNCTION_19
0x40028f6	            0x4154	                                push r12	      1055	ops.c	FUNCTION_19
0x40028f8	              0x55	                                push rbp	      1055	ops.c	FUNCTION_19
0x40028f9	              0x53	                                push rbx	      1055	ops.c	FUNCTION_19
0x40028fa	          0x4889fb	                            mov rbx, rdi	      1055	ops.c	FUNCTION_19
0x40028fd	        0x4883ec08	                              sub rsp, 8	      1055	ops.c	FUNCTION_19
0x4002901	    0x488b05000000	            mov rax, qword [0x04002908] 	      1058	ops.c	FUNCTION_19
0x4002908	          0x488b17	                    mov rdx, qword [rdi]	      1059	ops.c	FUNCTION_19
0x400290b	          0x4c8b38	                    mov r15, qword [rax]	      1058	ops.c	FUNCTION_19
0x400290e	          0x488910	                    mov qword [rax], rdx	      1059	ops.c	FUNCTION_19
0x4002911	        0x488b7f08	                mov rdi, qword [rdi + 8]	      1059	ops.c	FUNCTION_19
0x4002915	        0x4c8b7008	                mov r14, qword [rax + 8]	      1058	ops.c	FUNCTION_19
0x4002919	      0x440fb66810	          movzx r13d, byte [rax + 0x10] 	      1058	ops.c	FUNCTION_19
0x400291e	        0x448b6014	           mov r12d, dword [rax + 0x14] 	      1058	ops.c	FUNCTION_19
0x4002922	        0x488b6818	            mov rbp, qword [rax + 0x18] 	      1058	ops.c	FUNCTION_19
0x4002926	        0x48897808	                mov qword [rax + 8], rdi	      1059	ops.c	FUNCTION_19
0x400292a	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1059	ops.c	FUNCTION_19
0x400292e	        0x48895010	             mov qword [rax + 0x10], rdx	      1059	ops.c	FUNCTION_19
0x4002932	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      1059	ops.c	FUNCTION_19
0x4002936	        0x48895018	             mov qword [rax + 0x18], rdx	      1059	ops.c	FUNCTION_19
0x400293a	      0xe8a1daffff	                      call sym.free_yank	      3045	ops.c	FUNCTION_44	CALL_1
0x400293f	          0x4889df	                            mov rdi, rbx	      1061	ops.c	FUNCTION_19	CALL_2
0x4002942	      0xe800000000	                          call 0x4002947	      1061	ops.c	FUNCTION_19	CALL_2
0x4002947	    0x488b05000000	            mov rax, qword [0x0400294e] 	      1062	ops.c	FUNCTION_19
0x400294e	          0x4c8938	                    mov qword [rax], r15	      1062	ops.c	FUNCTION_19
0x4002951	        0x4c897008	                mov qword [rax + 8], r14	      1062	ops.c	FUNCTION_19
0x4002955	        0x44886810	             mov byte [rax + 0x10], r13b	      1062	ops.c	FUNCTION_19
0x4002959	        0x44896014	            mov dword [rax + 0x14], r12d	      1062	ops.c	FUNCTION_19
0x400295d	        0x48896818	             mov qword [rax + 0x18], rbp	      1062	ops.c	FUNCTION_19
0x4002961	        0x4883c408	                              add rsp, 8	      1063	ops.c	FUNCTION_19
0x4002965	              0x5b	                                 pop rbx	      1063	ops.c	FUNCTION_19
0x4002966	              0x5d	                                 pop rbp	      1063	ops.c	FUNCTION_19
0x4002967	            0x415c	                                 pop r12	      1063	ops.c	FUNCTION_19
0x4002969	            0x415d	                                 pop r13	      1063	ops.c	FUNCTION_19
0x400296b	            0x415e	                                 pop r14	      1063	ops.c	FUNCTION_19
0x400296d	            0x415f	                                 pop r15	      1063	ops.c	FUNCTION_19
0x400296f	              0xc3	                                     ret	      1063	ops.c	FUNCTION_19
finish_viminfo_registers	SWITCH,0:IF,2:WHILE,0:DO,0:FOR,2:ELSE,0:CALL,3:functions,0	41
0x40067b0	    0x488b15000000	            mov rdx, qword [0x040067b7] 	      6071	ops.c	FUNCTION_69	IF_1
0x40067b7	          0x4885d2	                           test rdx, rdx	      6071	ops.c	FUNCTION_69	IF_1
0x40067ba	     0xf848c000000	                            je 0x400684c	      6071	ops.c	FUNCTION_69	IF_1
0x40067c0	            0x4154	                                push r12	      6067	ops.c	FUNCTION_69
0x40067c2	              0x55	                                push rbp	      6067	ops.c	FUNCTION_69
0x40067c3	          0x4531e4	                          xor r12d, r12d	      6067	ops.c	FUNCTION_69
0x40067c6	              0x53	                                push rbx	      6067	ops.c	FUNCTION_69
0x40067c7	    0x660f1f840000	                    nop word [rax + rax]	      6067	ops.c	FUNCTION_69
0x40067d0	        0x4a8d0422	                    lea rax, [rdx + r12]	      6074	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x40067d4	          0x488b38	                    mov rdi, qword [rax]	      6074	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x40067d7	          0x4885ff	                           test rdi, rdi	      6074	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x40067da	            0x7447	                            je 0x4006823	      6074	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x40067dc	      0x4883780800	                  cmp qword [rax + 8], 0	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x40067e1	            0x7e34	                           jle 0x4006817	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x40067e3	      0xbd01000000	                              mov ebp, 1	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x40067e8	            0x31db	                            xor ebx, ebx	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x40067ea	    0x660f1f440000	                    nop word [rax + rax]	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x40067f0	        0x488b3c1f	              mov rdi, qword [rdi + rbx]	      6077	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0x40067f4	        0x4883c308	                              add rbx, 8	      6077	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0x40067f8	      0xe800000000	                          call 0x40067fd	      6077	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0x40067fd	          0x4c89e0	                            mov rax, r12	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x4006800	    0x480305000000	             add rax, qword [0x04006807]	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x4006807	          0x4889ea	                            mov rdx, rbp	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x400680a	        0x4883c501	                              add rbp, 1	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x400680e	        0x483b5008	                cmp rdx, qword [rax + 8]	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x4006812	          0x488b38	                    mov rdi, qword [rax]	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x4006815	            0x7cd9	                            jl 0x40067f0	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x4006817	      0xe800000000	                          call 0x400681c	      6078	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_2
0x400681c	    0x488b15000000	            mov rdx, qword [0x04006823] 	      6078	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_2
0x4006823	        0x4983c420	                           add r12, 0x20	      6078	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_2
0x4006827	    0x4981fc000500	                          cmp r12, 0x500	      6073	ops.c	FUNCTION_69	IF_1	FOR_1
0x400682e	            0x75a0	                           jne 0x40067d0	      6073	ops.c	FUNCTION_69	IF_1	FOR_1
0x4006830	          0x4885d2	                           test rdx, rdx	      6080	ops.c	FUNCTION_69	IF_1	CALL_3
0x4006833	            0x7413	                            je 0x4006848	      6080	ops.c	FUNCTION_69	IF_1	CALL_3
0x4006835	          0x4889d7	                            mov rdi, rdx	      6080	ops.c	FUNCTION_69	IF_1	CALL_3
0x4006838	      0xe800000000	                          call 0x400683d	      6080	ops.c	FUNCTION_69	IF_1	CALL_3
0x400683d	    0x48c705000000	               mov qword [0x04006848], 0	      6080	ops.c	FUNCTION_69	IF_1	CALL_3
0x4006848	              0x5b	                                 pop rbx	      6082	ops.c	FUNCTION_69
0x4006849	              0x5d	                                 pop rbp	      6082	ops.c	FUNCTION_69
0x400684a	            0x415c	                                 pop r12	      6082	ops.c	FUNCTION_69
0x400684c	            0xf3c3	                                     ret	      6082	ops.c	FUNCTION_69
fmt_check_par	SWITCH,0:IF,0:WHILE,0:DO,0:FOR,0:ELSE,0:CALL,3:functions,0	74
0x4000f10	            0x4156	                                push r14	      5258	ops.c	FUNCTION_62
0x4000f12	            0x4155	                                push r13	      5258	ops.c	FUNCTION_62
0x4000f14	          0x4189ce	                           mov r14d, ecx	      5258	ops.c	FUNCTION_62
0x4000f17	            0x4154	                                push r12	      5258	ops.c	FUNCTION_62
0x4000f19	              0x55	                                push rbp	      5258	ops.c	FUNCTION_62
0x4000f1a	          0x4989fc	                            mov r12, rdi	      5258	ops.c	FUNCTION_62
0x4000f1d	              0x53	                                push rbx	      5258	ops.c	FUNCTION_62
0x4000f1e	          0x4889f5	                            mov rbp, rsi	      5258	ops.c	FUNCTION_62
0x4000f21	          0x4889d3	                            mov rbx, rdx	      5258	ops.c	FUNCTION_62
0x4000f24	      0xe800000000	                          call 0x4000f29	      5262	ops.c	FUNCTION_62	CALL_1
0x4000f29	          0x4585f6	                         test r14d, r14d	      5263	ops.c	FUNCTION_62	IF_1
0x4000f2c	          0x4989c5	                            mov r13, rax	      5262	ops.c	FUNCTION_62	CALL_1
0x4000f2f	            0x754f	                           jne 0x4000f80	      5263	ops.c	FUNCTION_62	IF_1
0x4000f31	    0xc74500000000	                      mov dword [rbp], 0	      5266	ops.c	FUNCTION_62	ELSE_1
0x4000f38	            0x31ff	                            xor edi, edi	      5266	ops.c	FUNCTION_62	ELSE_1
0x4000f3a	            0x31db	                            xor ebx, ebx	      5259	ops.c	FUNCTION_62
0x4000f3c	          0x4c01ef	                            add rdi, r13	      5278	ops.c	FUNCTION_62	CALL_3
0x4000f3f	      0xe800000000	                          call 0x4000f44	      5278	ops.c	FUNCTION_62	CALL_3
0x4000f44	          0x803800	                       cmp byte [rax], 0	      5280	ops.c	FUNCTION_62	CALL_4
0x4000f47	      0xba01000000	                              mov edx, 1	      5280	ops.c	FUNCTION_62	CALL_4
0x4000f4c	            0x741f	                            je 0x4000f6d	      5280	ops.c	FUNCTION_62	CALL_4
0x4000f4e	          0x8b4500	                    mov eax, dword [rbp]	      5279	ops.c	FUNCTION_62
0x4000f51	            0x85c0	                           test eax, eax	      5279	ops.c	FUNCTION_62
0x4000f53	            0x7e05	                           jle 0x4000f5a	      5279	ops.c	FUNCTION_62
0x4000f55	          0x803b65	                    cmp byte [rbx], 0x65	      5279	ops.c	FUNCTION_62
0x4000f58	            0x7413	                            je 0x4000f6d	      5279	ops.c	FUNCTION_62
0x4000f5a	            0x31d2	                            xor edx, edx	      5280	ops.c	FUNCTION_62	CALL_4
0x4000f5c	            0x31f6	                            xor esi, esi	      5280	ops.c	FUNCTION_62	CALL_4
0x4000f5e	          0x4c89e7	                            mov rdi, r12	      5280	ops.c	FUNCTION_62	CALL_4
0x4000f61	      0xe800000000	                          call 0x4000f66	      5280	ops.c	FUNCTION_62	CALL_4
0x4000f66	            0x31d2	                            xor edx, edx	      5280	ops.c	FUNCTION_62	CALL_4
0x4000f68	            0x85c0	                           test eax, eax	      5280	ops.c	FUNCTION_62	CALL_4
0x4000f6a	           0xf95c2	                                setne dl	      5280	ops.c	FUNCTION_62	CALL_4
0x4000f6d	              0x5b	                                 pop rbx	      5281	ops.c	FUNCTION_62
0x4000f6e	            0x89d0	                            mov eax, edx	      5281	ops.c	FUNCTION_62
0x4000f70	              0x5d	                                 pop rbp	      5281	ops.c	FUNCTION_62
0x4000f71	            0x415c	                                 pop r12	      5281	ops.c	FUNCTION_62
0x4000f73	            0x415d	                                 pop r13	      5281	ops.c	FUNCTION_62
0x4000f75	            0x415e	                                 pop r14	      5281	ops.c	FUNCTION_62
0x4000f77	              0xc3	                                     ret	      5281	ops.c	FUNCTION_62
0x4000f78	     0xf1f84000000	                   nop dword [rax + rax]	      5281	ops.c	FUNCTION_62
0x4000f80	            0x31d2	                            xor edx, edx	      5264	ops.c	FUNCTION_62	CALL_2
0x4000f82	      0xb901000000	                              mov ecx, 1	      5264	ops.c	FUNCTION_62	CALL_2
0x4000f87	          0x4889de	                            mov rsi, rbx	      5264	ops.c	FUNCTION_62	CALL_2
0x4000f8a	          0x4889c7	                            mov rdi, rax	      5264	ops.c	FUNCTION_62	CALL_2
0x4000f8d	      0xe800000000	                          call 0x4000f92	      5264	ops.c	FUNCTION_62	CALL_2
0x4000f92	            0x85c0	                           test eax, eax	      5268	ops.c	FUNCTION_62	ELSE_1	IF_2
0x4000f94	          0x894500	                    mov dword [rbp], eax	      5264	ops.c	FUNCTION_62	CALL_2
0x4000f97	            0x7e44	                           jle 0x4000fdd	      5268	ops.c	FUNCTION_62	ELSE_1	IF_2
0x4000f99	          0x488b1b	                    mov rbx, qword [rbx]	      5273	ops.c	FUNCTION_62	ELSE_1	IF_2
0x4000f9c	           0xfb613	                   movzx edx, byte [rbx]	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4000f9f	          0x80fa3a	                            cmp dl, 0x3a	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4000fa2	        0x400f95c6	                               setne sil	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4000fa6	            0x84d2	                             test dl, dl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4000fa8	           0xf95c1	                                setne cl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4000fab	          0x4084ce	                            test sil, cl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4000fae	            0x7520	                           jne 0x4000fd0	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4000fb0	            0xeb23	                           jmp 0x4000fd5	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4000fb2	    0x660f1f440000	                    nop word [rax + rax]	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4000fb8	        0x4883c301	                              add rbx, 1	      5275	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4000fbc	           0xfb613	                   movzx edx, byte [rbx]	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4000fbf	            0x84d2	                             test dl, dl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4000fc1	        0x400f95c6	                               setne sil	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4000fc5	          0x80fa3a	                            cmp dl, 0x3a	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4000fc8	           0xf95c1	                                setne cl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4000fcb	          0x4084ce	                            test sil, cl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4000fce	            0x7405	                            je 0x4000fd5	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4000fd0	          0x80fa65	                            cmp dl, 0x65	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4000fd3	            0x75e3	                           jne 0x4000fb8	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4000fd5	          0x4863f8	                         movsxd rdi, eax	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4000fd8	      0xe95fffffff	                           jmp 0x4000f3c	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4000fdd	          0x4863f8	                         movsxd rdi, eax	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4000fe0	            0x31db	                            xor ebx, ebx	      5259	ops.c	FUNCTION_62
0x4000fe2	      0xe955ffffff	                           jmp 0x4000f3c	      5259	ops.c	FUNCTION_62
write_reg_contents_lst	SWITCH,0:IF,5:WHILE,0:DO,0:FOR,0:ELSE,2:CALL,6:functions,0	72
0x400bf00	            0x4155	                                push r13	      7005	ops.c	FUNCTION_86
0x400bf02	            0x4154	                                push r12	      7005	ops.c	FUNCTION_86
0x400bf04	          0x4d89cd	                             mov r13, r9	      7005	ops.c	FUNCTION_86
0x400bf07	              0x55	                                push rbp	      7005	ops.c	FUNCTION_86
0x400bf08	              0x53	                                push rbx	      7005	ops.c	FUNCTION_86
0x400bf09	          0x4889f5	                            mov rbp, rsi	      7005	ops.c	FUNCTION_86
0x400bf0c	            0x89fb	                            mov ebx, edi	      7005	ops.c	FUNCTION_86
0x400bf0e	          0x4589c4	                           mov r12d, r8d	      7005	ops.c	FUNCTION_86
0x400bf11	        0x4883ec28	                           sub rsp, 0x28	      7005	ops.c	FUNCTION_86
0x400bf15	    0x64488b042528	                mov rax, qword fs:[0x28]	      7005	ops.c	FUNCTION_86
0x400bf1e	      0x4889442418	             mov qword [rsp + 0x18], rax	      7005	ops.c	FUNCTION_86
0x400bf23	            0x31c0	                            xor eax, eax	      7005	ops.c	FUNCTION_86
0x400bf25	          0x83ff2f	                           cmp edi, 0x2f	      7008	ops.c	FUNCTION_86	IF_1
0x400bf28	            0x7446	                            je 0x400bf70	      7008	ops.c	FUNCTION_86	IF_1
0x400bf2a	          0x83ff3d	                           cmp edi, 0x3d	      7008	ops.c	FUNCTION_86	IF_1
0x400bf2d	            0x7441	                            je 0x400bf70	      7008	ops.c	FUNCTION_86	IF_1
0x400bf2f	          0x83ff5f	                           cmp edi, 0x5f	      7030	ops.c	FUNCTION_86	IF_4
0x400bf32	            0x741c	                            je 0x400bf50	      7030	ops.c	FUNCTION_86	IF_4
0x400bf34	      0x488d542410	                   lea rdx, [rsp + 0x10]	      7033	ops.c	FUNCTION_86	IF_5	CALL_4
0x400bf39	      0x488d742408	                      lea rsi, [rsp + 8]	      7033	ops.c	FUNCTION_86	IF_5	CALL_4
0x400bf3e	      0xe8ad68ffff	          call sym.init_write_reg.isra.5	      7033	ops.c	FUNCTION_86	IF_5	CALL_4
0x400bf43	            0x85c0	                           test eax, eax	      7033	ops.c	FUNCTION_86	IF_5	CALL_4
0x400bf45	            0x7559	                           jne 0x400bfa0	      7033	ops.c	FUNCTION_86	IF_5	CALL_4
0x400bf47	    0x660f1f840000	                    nop word [rax + rax]	      7033	ops.c	FUNCTION_86	IF_5	CALL_4
0x400bf50	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      7040	ops.c	FUNCTION_86
0x400bf55	    0x644833042528	                xor rax, qword fs:[0x28]	      7040	ops.c	FUNCTION_86
0x400bf5e	     0xf85ab000000	                           jne 0x400c00f	      7040	ops.c	FUNCTION_86
0x400bf64	        0x4883c428	                           add rsp, 0x28	      7040	ops.c	FUNCTION_86
0x400bf68	              0x5b	                                 pop rbx	      7040	ops.c	FUNCTION_86
0x400bf69	              0x5d	                                 pop rbp	      7040	ops.c	FUNCTION_86
0x400bf6a	            0x415c	                                 pop r12	      7040	ops.c	FUNCTION_86
0x400bf6c	            0x415d	                                 pop r13	      7040	ops.c	FUNCTION_86
0x400bf6e	              0xc3	                                     ret	      7040	ops.c	FUNCTION_86
0x400bf6f	              0x90	                                     nop	      7040	ops.c	FUNCTION_86
0x400bf70	        0x488b7500	                    mov rsi, qword [rbp]	      7016	ops.c	FUNCTION_86	IF_1	IF_2
0x400bf74	          0x4885f6	                           test rsi, rsi	      7016	ops.c	FUNCTION_86	IF_1	IF_2
0x400bf77	            0x7477	                            je 0x400bff0	      7016	ops.c	FUNCTION_86	IF_1	IF_2
0x400bf79	      0x48837d0800	                  cmp qword [rbp + 8], 0	      7018	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3
0x400bf7e	            0x7478	                            je 0x400bff8	      7018	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3
0x400bf80	            0x31ff	                            xor edi, edi	      7020	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3	CALL_2
0x400bf82	      0xba05000000	                              mov edx, 5	      7020	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3	CALL_2
0x400bf87	      0xbe00000000	                              mov esi, 0	      7020	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3	CALL_2
0x400bf8c	      0xe800000000	                          call 0x400bf91	      7020	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3	CALL_2
0x400bf91	          0x4889c7	                            mov rdi, rax	      7020	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3	CALL_2
0x400bf94	      0xe800000000	                          call 0x400bf99	      7020	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3	CALL_2
0x400bf99	            0xebb5	                           jmp 0x400bf50	      7022	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3
0x400bf9b	       0xf1f440000	                   nop dword [rax + rax]	      7022	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3
0x400bfa0	    0x488b3d000000	            mov rdi, qword [0x0400bfa7] 	      7037	ops.c	FUNCTION_86	CALL_5
0x400bfa7	          0x4889ea	                            mov rdx, rbp	      7037	ops.c	FUNCTION_86	CALL_5
0x400bfaa	          0x4489e6	                           mov esi, r12d	      7037	ops.c	FUNCTION_86	CALL_5
0x400bfad	    0x41b901000000	                              mov r9d, 1	      7037	ops.c	FUNCTION_86	CALL_5
0x400bfb3	          0x4d89e8	                             mov r8, r13	      7037	ops.c	FUNCTION_86	CALL_5
0x400bfb6	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      7037	ops.c	FUNCTION_86	CALL_5
0x400bfbd	      0xe86e48ffff	                     call sym.str_to_reg	      7037	ops.c	FUNCTION_86	CALL_5
0x400bfc2	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	      7039	ops.c	FUNCTION_86	CALL_6
0x400bfc7	      0x4c8b642408	                mov r12, qword [rsp + 8]	      7039	ops.c	FUNCTION_86	CALL_6
0x400bfcc	      0xe8cf5fffff	              call sym.may_set_selection	      6969	ops.c	FUNCTION_84	CALL_1
0x400bfd1	          0x83fb22	                           cmp ebx, 0x22	      6973	ops.c	FUNCTION_84	IF_1
0x400bfd4	            0x7407	                            je 0x400bfdd	      6973	ops.c	FUNCTION_84	IF_1
0x400bfd6	    0x4c8925000000	            mov qword [0x0400bfdd], r12 	      6974	ops.c	FUNCTION_84	IF_1
0x400bfdd	    0x48892d000000	            mov qword [0x0400bfe4], rbp 	      6975	ops.c	FUNCTION_84
0x400bfe4	      0xe967ffffff	                           jmp 0x400bf50	      6975	ops.c	FUNCTION_84
0x400bfe9	     0xf1f80000000	                         nop dword [rax]	      6975	ops.c	FUNCTION_84
0x400bff0	      0xbe00000000	                              mov esi, 0	      7017	ops.c	FUNCTION_86	IF_1	IF_2
0x400bff5	           0xf1f00	                         nop dword [rax]	      7017	ops.c	FUNCTION_86	IF_1	IF_2
0x400bff8	          0x4d89e9	                             mov r9, r13	      7026	ops.c	FUNCTION_86	IF_1	CALL_3
0x400bffb	          0x4589e0	                           mov r8d, r12d	      7026	ops.c	FUNCTION_86	IF_1	CALL_3
0x400bffe	      0xbaffffffff	                     mov edx, 0xffffffff	      7026	ops.c	FUNCTION_86	IF_1	CALL_3
0x400c003	            0x89df	                            mov edi, ebx	      7026	ops.c	FUNCTION_86	IF_1	CALL_3
0x400c005	      0xe800000000	                          call 0x400c00a	      7026	ops.c	FUNCTION_86	IF_1	CALL_3
0x400c00a	      0xe941ffffff	                           jmp 0x400bf50	      7027	ops.c	FUNCTION_86	IF_1
0x400c00f	      0xe800000000	                          call 0x400c014	      7040	ops.c	FUNCTION_86
block_prep	SWITCH,0:IF,14:WHILE,2:DO,0:FOR,0:ELSE,7:CALL,5:functions,0	241
0x4000070	            0x4157	                                push r15	      5364	ops.c	FUNCTION_65
0x4000072	            0x4156	                                push r14	      5364	ops.c	FUNCTION_65
0x4000074	            0x4155	                                push r13	      5364	ops.c	FUNCTION_65
0x4000076	            0x4154	                                push r12	      5364	ops.c	FUNCTION_65
0x4000078	          0x4989fd	                            mov r13, rdi	      5364	ops.c	FUNCTION_65
0x400007b	              0x55	                                push rbp	      5364	ops.c	FUNCTION_65
0x400007c	              0x53	                                push rbx	      5364	ops.c	FUNCTION_65
0x400007d	          0x4889d7	                            mov rdi, rdx	      5386	ops.c	FUNCTION_65	CALL_1
0x4000080	          0x4889f3	                            mov rbx, rsi	      5364	ops.c	FUNCTION_65
0x4000083	        0x4883ec28	                           sub rsp, 0x28	      5364	ops.c	FUNCTION_65
0x4000087	    0xc70600000000	                      mov dword [rsi], 0	      5372	ops.c	FUNCTION_65
0x400008d	    0xc74604000000	                  mov dword [rsi + 4], 0	      5373	ops.c	FUNCTION_65
0x4000094	    0xc74608000000	                  mov dword [rsi + 8], 0	      5374	ops.c	FUNCTION_65
0x400009b	    0xc7461c000000	               mov dword [rsi + 0x1c], 0	      5375	ops.c	FUNCTION_65
0x40000a2	    0xc74620000000	               mov dword [rsi + 0x20], 0	      5376	ops.c	FUNCTION_65
0x40000a9	    0xc74624000000	               mov dword [rsi + 0x24], 0	      5378	ops.c	FUNCTION_65
0x40000b0	    0xc7462c000000	               mov dword [rsi + 0x2c], 0	      5379	ops.c	FUNCTION_65
0x40000b7	    0xc74630000000	               mov dword [rsi + 0x30], 0	      5380	ops.c	FUNCTION_65
0x40000be	    0xc74634000000	               mov dword [rsi + 0x34], 0	      5381	ops.c	FUNCTION_65
0x40000c5	    0xc74638000000	               mov dword [rsi + 0x38], 0	      5382	ops.c	FUNCTION_65
0x40000cc	    0xc7463c000000	               mov dword [rsi + 0x3c], 0	      5384	ops.c	FUNCTION_65
0x40000d3	        0x894c240c	              mov dword [rsp + 0xc], ecx	      5364	ops.c	FUNCTION_65
0x40000d7	    0x64488b042528	                mov rax, qword fs:[0x28]	      5364	ops.c	FUNCTION_65
0x40000e0	      0x4889442418	             mov qword [rsp + 0x18], rax	      5364	ops.c	FUNCTION_65
0x40000e5	            0x31c0	                            xor eax, eax	      5364	ops.c	FUNCTION_65
0x40000e7	      0xe800000000	                          call 0x40000ec	      5386	ops.c	FUNCTION_65	CALL_1
0x40000ec	          0x8b531c	            mov edx, dword [rbx + 0x1c] 	      5389	ops.c	FUNCTION_65	WHILE_1
0x40000ef	          0x4989c4	                            mov r12, rax	      5386	ops.c	FUNCTION_65	CALL_1
0x40000f2	        0x418b4564	            mov eax, dword [r13 + 0x64] 	      5389	ops.c	FUNCTION_65	WHILE_1
0x40000f6	            0x39c2	                            cmp edx, eax	      5389	ops.c	FUNCTION_65	WHILE_1
0x40000f8	     0xf8dbf020000	                           jge 0x40003bd	      5389	ops.c	FUNCTION_65	WHILE_1
0x40000fe	      0x41803c2400	                       cmp byte [r12], 0	      5389	ops.c	FUNCTION_65	WHILE_1
0x4000103	     0xf84c2020000	                            je 0x40003cb	      5389	ops.c	FUNCTION_65	WHILE_1
0x4000109	          0x4d89e7	                            mov r15, r12	      5389	ops.c	FUNCTION_65	WHILE_1
0x400010c	            0xeb1d	                           jmp 0x400012b	      5389	ops.c	FUNCTION_65	WHILE_1
0x400010e	            0x6690	                                     nop	      5389	ops.c	FUNCTION_65	WHILE_1
0x4000110	          0x8b531c	            mov edx, dword [rbx + 0x1c] 	      5389	ops.c	FUNCTION_65	WHILE_1
0x4000113	        0x418b4564	            mov eax, dword [r13 + 0x64] 	      5389	ops.c	FUNCTION_65	WHILE_1
0x4000117	          0x4c01fd	                            add rbp, r15	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x400011a	            0x39c2	                            cmp edx, eax	      5389	ops.c	FUNCTION_65	WHILE_1
0x400011c	            0x7d69	                           jge 0x4000187	      5389	ops.c	FUNCTION_65	WHILE_1
0x400011e	        0x807d0000	                       cmp byte [rbp], 0	      5389	ops.c	FUNCTION_65	WHILE_1
0x4000122	     0xf8478010000	                            je 0x40002a0	      5389	ops.c	FUNCTION_65	WHILE_1
0x4000128	          0x4989ef	                            mov r15, rbp	      5389	ops.c	FUNCTION_65	WHILE_1
0x400012b	          0x4c89fe	                            mov rsi, r15	      5392	ops.c	FUNCTION_65	WHILE_1	CALL_2
0x400012e	          0x4c89e7	                            mov rdi, r12	      5392	ops.c	FUNCTION_65	WHILE_1	CALL_2
0x4000131	      0xe800000000	                          call 0x4000136	      5392	ops.c	FUNCTION_65	WHILE_1	CALL_2
0x4000136	           0x1431c	             add dword [rbx + 0x1c], eax	      5393	ops.c	FUNCTION_65	WHILE_1
0x4000139	          0x4189c6	                           mov r14d, eax	      5392	ops.c	FUNCTION_65	WHILE_1	CALL_2
0x400013c	        0x410fb607	                   movzx eax, byte [r15]	      5395	ops.c	FUNCTION_65	WHILE_1	IF_1	CALL_3
0x4000140	            0x3c20	                            cmp al, 0x20	      5395	ops.c	FUNCTION_65	WHILE_1	IF_1	CALL_3
0x4000142	     0xf84f0000000	                            je 0x4000238	      5395	ops.c	FUNCTION_65	WHILE_1	IF_1	CALL_3
0x4000148	            0x3c09	                               cmp al, 9	      5395	ops.c	FUNCTION_65	WHILE_1	IF_1	CALL_3
0x400014a	     0xf84e8000000	                            je 0x4000238	      5395	ops.c	FUNCTION_65	WHILE_1	IF_1	CALL_3
0x4000150	    0xc74330000000	               mov dword [rbx + 0x30], 0	      5402	ops.c	FUNCTION_65	WHILE_1	ELSE_1
0x4000157	    0xc74334000000	               mov dword [rbx + 0x34], 0	      5403	ops.c	FUNCTION_65	WHILE_1	ELSE_1
0x400015e	    0x8b0500000000	            mov eax, dword [0x04000164] 	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x4000164	      0xbd01000000	                              mov ebp, 1	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x4000169	            0x85c0	                           test eax, eax	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x400016b	            0x74a3	                            je 0x4000110	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x400016d	          0x4c89ff	                            mov rdi, r15	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x4000170	    0xff1500000000	                 call qword [0x04000176]	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x4000176	          0x8b531c	            mov edx, dword [rbx + 0x1c] 	      5389	ops.c	FUNCTION_65	WHILE_1
0x4000179	          0x4863e8	                         movsxd rbp, eax	      5389	ops.c	FUNCTION_65	WHILE_1
0x400017c	        0x418b4564	            mov eax, dword [r13 + 0x64] 	      5389	ops.c	FUNCTION_65	WHILE_1
0x4000180	          0x4c01fd	                            add rbp, r15	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x4000183	            0x39c2	                            cmp edx, eax	      5389	ops.c	FUNCTION_65	WHILE_1
0x4000185	            0x7c97	                            jl 0x400011e	      5389	ops.c	FUNCTION_65	WHILE_1
0x4000187	            0x89d7	                            mov edi, edx	      5423	ops.c	FUNCTION_65	ELSE_2
0x4000189	        0x4489733c	            mov dword [rbx + 0x3c], r14d	      5409	ops.c	FUNCTION_65
0x400018d	            0x29c7	                            sub edi, eax	      5423	ops.c	FUNCTION_65	ELSE_2
0x400018f	            0x85ff	                           test edi, edi	      5424	ops.c	FUNCTION_65	ELSE_2	IF_4
0x4000191	            0x893b	                    mov dword [rbx], edi	      5423	ops.c	FUNCTION_65	ELSE_2
0x4000193	            0x7411	                            je 0x40001a6	      5424	ops.c	FUNCTION_65	ELSE_2	IF_4
0x4000195	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      5424	ops.c	FUNCTION_65	ELSE_2	IF_4
0x400019a	          0x4585c0	                           test r8d, r8d	      5424	ops.c	FUNCTION_65	ELSE_2	IF_4
0x400019d	            0x7407	                            je 0x40001a6	      5424	ops.c	FUNCTION_65	ELSE_2	IF_4
0x400019f	          0x4489f6	                           mov esi, r14d	      5425	ops.c	FUNCTION_65	ELSE_2	IF_4
0x40001a2	            0x29fe	                            sub esi, edi	      5425	ops.c	FUNCTION_65	ELSE_2	IF_4
0x40001a4	            0x8933	                    mov dword [rbx], esi	      5425	ops.c	FUNCTION_65	ELSE_2	IF_4
0x40001a6	        0x418b7568	            mov esi, dword [r13 + 0x68] 	      5428	ops.c	FUNCTION_65	ELSE_2	IF_5
0x40001aa	      0x48896c2410	             mov qword [rsp + 0x10], rbp	      5426	ops.c	FUNCTION_65	ELSE_2
0x40001af	          0x895320	             mov dword [rbx + 0x20], edx	      5427	ops.c	FUNCTION_65	ELSE_2
0x40001b2	            0x39d6	                            cmp esi, edx	      5428	ops.c	FUNCTION_65	ELSE_2	IF_5
0x40001b4	     0xf8c8e000000	                            jl 0x4000248	      5428	ops.c	FUNCTION_65	ELSE_2	IF_5
0x40001ba	        0x807d0000	                       cmp byte [rbp], 0	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40001be	          0x4989e8	                             mov r8, rbp	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40001c1	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40001c6	            0x751a	                           jne 0x40001e2	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40001c8	      0xe96b010000	                           jmp 0x4000338	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40001cd	           0xf1f00	                         nop dword [rax]	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40001d0	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40001d5	        0x41803800	                        cmp byte [r8], 0	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40001d9	          0x4c89c0	                             mov rax, r8	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40001dc	     0xf8456010000	                            je 0x4000338	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40001e2	      0x488d742410	                   lea rsi, [rsp + 0x10]	      5461	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2	CALL_5
0x40001e7	          0x4c89e7	                            mov rdi, r12	      5461	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2	CALL_5
0x40001ea	        0x4c890424	                     mov qword [rsp], r8	      5461	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2	CALL_5
0x40001ee	      0xe800000000	                          call 0x40001f3	      5461	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2	CALL_5
0x40001f3	          0x8b5320	            mov edx, dword [rbx + 0x20] 	      5462	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40001f6	        0x418b7568	            mov esi, dword [r13 + 0x68] 	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40001fa	          0x4189c6	                           mov r14d, eax	      5461	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2	CALL_5
0x40001fd	        0x4c8b0424	                     mov r8, qword [rsp]	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x4000201	             0x1c2	                            add edx, eax	      5462	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x4000203	            0x39d6	                            cmp esi, edx	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x4000205	          0x895320	             mov dword [rbx + 0x20], edx	      5462	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x4000208	            0x7dc6	                           jge 0x40001d0	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x400020a	            0x29f2	                            sub edx, esi	      5484	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0x400020c	          0x8d42ff	                      lea eax, [rdx - 1]	      5484	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0x400020f	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      5485	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x4000213	          0x894304	                mov dword [rbx + 4], eax	      5484	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0x4000216	            0x85d2	                           test edx, edx	      5485	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x4000218	     0xf8556010000	                           jne 0x4000374	      5485	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x400021e	            0x85c0	                           test eax, eax	      5485	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x4000220	     0xf857e010000	                           jne 0x40003a4	      5485	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x4000226	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5485	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x400022b	        0x44897338	            mov dword [rbx + 0x38], r14d	      5494	ops.c	FUNCTION_65	ELSE_2
0x400022f	      0xe9f1000000	                           jmp 0x4000325	      5494	ops.c	FUNCTION_65	ELSE_2
0x4000234	         0xf1f4000	                         nop dword [rax]	      5494	ops.c	FUNCTION_65	ELSE_2
0x4000238	        0x44017330	            add dword [rbx + 0x30], r14d	      5397	ops.c	FUNCTION_65	WHILE_1	IF_1
0x400023c	        0x83433401	               add dword [rbx + 0x34], 1	      5398	ops.c	FUNCTION_65	WHILE_1	IF_1
0x4000240	      0xe919ffffff	                           jmp 0x400015e	      5398	ops.c	FUNCTION_65	WHILE_1	IF_1
0x4000245	           0xf1f00	                         nop dword [rax]	      5398	ops.c	FUNCTION_65	WHILE_1	IF_1
0x4000248	        0x458b4d00	                    mov r9d, dword [r13]	      5433	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0x400024c	    0xc7432c010000	               mov dword [rbx + 0x2c], 1	      5431	ops.c	FUNCTION_65	ELSE_2	IF_5
0x4000253	        0x4183f911	                           cmp r9d, 0x11	      5433	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0x4000257	     0xf84a3000000	                            je 0x4000300	      5433	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0x400025d	        0x4183f912	                           cmp r9d, 0x12	      5435	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x4000261	     0xf8415010000	                            je 0x400037c	      5435	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x4000267	      0x448b5c240c	            mov r11d, dword [rsp + 0xc] 	      5443	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400026c	          0x4189f0	                            mov r8d, esi	      5442	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4
0x400026f	          0x4129c0	                            sub r8d, eax	      5442	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4
0x4000272	        0x4183c001	                              add r8d, 1	      5442	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4
0x4000276	          0x4585db	                         test r11d, r11d	      5443	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x4000279	          0x448903	                    mov dword [rbx], r8d	      5442	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4
0x400027c	            0x74a8	                            je 0x4000226	      5443	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400027e	        0x4183f904	                              cmp r9d, 4	      5443	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x4000282	            0x7411	                            je 0x4000295	      5443	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x4000284	            0x29f2	                            sub edx, esi	      5450	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x4000286	          0x4589f0	                           mov r8d, r14d	      5449	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x4000289	          0x8d42ff	                      lea eax, [rdx - 1]	      5450	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400028c	          0x4129f8	                            sub r8d, edi	      5449	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400028f	          0x448903	                    mov dword [rbx], r8d	      5448	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x4000292	          0x894304	                mov dword [rbx + 4], eax	      5450	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x4000295	        0x44897338	            mov dword [rbx + 0x38], r14d	      5494	ops.c	FUNCTION_65	ELSE_2
0x4000299	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5494	ops.c	FUNCTION_65	ELSE_2
0x400029e	            0xeb7e	                           jmp 0x400031e	      5494	ops.c	FUNCTION_65	ELSE_2
0x40002a0	            0x89ee	                            mov esi, ebp	      5494	ops.c	FUNCTION_65	ELSE_2
0x40002a2	          0x4429e6	                           sub esi, r12d	      5494	ops.c	FUNCTION_65	ELSE_2
0x40002a5	        0x8b7c240c	              mov edi, dword [rsp + 0xc]	      5416	ops.c	FUNCTION_65	IF_2	IF_3
0x40002a9	        0x4489733c	            mov dword [rbx + 0x3c], r14d	      5409	ops.c	FUNCTION_65
0x40002ad	          0x895320	             mov dword [rbx + 0x20], edx	      5412	ops.c	FUNCTION_65	IF_2
0x40002b0	    0xc74324010000	               mov dword [rbx + 0x24], 1	      5414	ops.c	FUNCTION_65	IF_2
0x40002b7	            0x85ff	                           test edi, edi	      5416	ops.c	FUNCTION_65	IF_2	IF_3
0x40002b9	            0x7435	                            je 0x40002f0	      5416	ops.c	FUNCTION_65	IF_2	IF_3
0x40002bb	      0x41837d0012	                   cmp dword [r13], 0x12	      5416	ops.c	FUNCTION_65	IF_2	IF_3
0x40002c0	            0x742e	                            je 0x40002f0	      5416	ops.c	FUNCTION_65	IF_2	IF_3
0x40002c2	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5502	ops.c	FUNCTION_65
0x40002c7	    0x644833042528	                xor rax, qword fs:[0x28]	      5502	ops.c	FUNCTION_65
0x40002d0	          0x897318	             mov dword [rbx + 0x18], esi	      5500	ops.c	FUNCTION_65
0x40002d3	        0x48896b10	             mov qword [rbx + 0x10], rbp	      5501	ops.c	FUNCTION_65
0x40002d7	     0xf85fb000000	                           jne 0x40003d8	      5502	ops.c	FUNCTION_65
0x40002dd	        0x4883c428	                           add rsp, 0x28	      5502	ops.c	FUNCTION_65
0x40002e1	              0x5b	                                 pop rbx	      5502	ops.c	FUNCTION_65
0x40002e2	              0x5d	                                 pop rbp	      5502	ops.c	FUNCTION_65
0x40002e3	            0x415c	                                 pop r12	      5502	ops.c	FUNCTION_65
0x40002e5	            0x415d	                                 pop r13	      5502	ops.c	FUNCTION_65
0x40002e7	            0x415e	                                 pop r14	      5502	ops.c	FUNCTION_65
0x40002e9	            0x415f	                                 pop r15	      5502	ops.c	FUNCTION_65
0x40002eb	              0xc3	                                     ret	      5502	ops.c	FUNCTION_65
0x40002ec	         0xf1f4000	                         nop dword [rax]	      5502	ops.c	FUNCTION_65
0x40002f0	        0x418b5568	            mov edx, dword [r13 + 0x68] 	      5417	ops.c	FUNCTION_65	IF_2	IF_3
0x40002f4	            0x29c2	                            sub edx, eax	      5417	ops.c	FUNCTION_65	IF_2	IF_3
0x40002f6	            0x89d0	                            mov eax, edx	      5417	ops.c	FUNCTION_65	IF_2	IF_3
0x40002f8	          0x83c001	                              add eax, 1	      5417	ops.c	FUNCTION_65	IF_2	IF_3
0x40002fb	          0x894304	                mov dword [rbx + 4], eax	      5417	ops.c	FUNCTION_65	IF_2	IF_3
0x40002fe	            0xebc2	                           jmp 0x40002c2	      5417	ops.c	FUNCTION_65	IF_2	IF_3
0x4000300	          0x4489f0	                           mov eax, r14d	      5434	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0x4000303	            0x2b03	                    sub eax, dword [rbx]	      5434	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0x4000305	          0x894304	                mov dword [rbx + 4], eax	      5434	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0x4000308	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5434	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0x400030d	      0x448b4c240c	              mov r9d, dword [rsp + 0xc]	      5496	ops.c	FUNCTION_65	ELSE_2	IF_14
0x4000312	        0x44897338	            mov dword [rbx + 0x38], r14d	      5494	ops.c	FUNCTION_65	ELSE_2
0x4000316	          0x4585c9	                           test r9d, r9d	      5496	ops.c	FUNCTION_65	ELSE_2	IF_14
0x4000319	            0x740a	                            je 0x4000325	      5496	ops.c	FUNCTION_65	ELSE_2	IF_14
0x400031b	          0x448b03	                    mov r8d, dword [rbx]	      5496	ops.c	FUNCTION_65	ELSE_2	IF_14
0x400031e	          0x4585c0	                           test r8d, r8d	      5496	ops.c	FUNCTION_65	ELSE_2	IF_14
0x4000321	        0x490f45ef	                         cmovne rbp, r15	      5496	ops.c	FUNCTION_65	ELSE_2	IF_14
0x4000325	          0x4829e8	                            sub rax, rbp	      5498	ops.c	FUNCTION_65	ELSE_2
0x4000328	            0x89ee	                            mov esi, ebp	      5498	ops.c	FUNCTION_65	ELSE_2
0x400032a	          0x894308	                mov dword [rbx + 8], eax	      5498	ops.c	FUNCTION_65	ELSE_2
0x400032d	          0x4429e6	                           sub esi, r12d	      5498	ops.c	FUNCTION_65	ELSE_2
0x4000330	            0xeb90	                           jmp 0x40002c2	      5498	ops.c	FUNCTION_65	ELSE_2
0x4000332	    0x660f1f440000	                    nop word [rax + rax]	      5498	ops.c	FUNCTION_65	ELSE_2
0x4000338	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      5465	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x400033c	        0x418b7d00	                    mov edi, dword [r13]	      5465	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x4000340	            0x85c9	                           test ecx, ecx	      5465	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x4000342	            0x740d	                            je 0x4000351	      5465	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x4000344	          0x4189f8	                            mov r8d, edi	      5467	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x4000347	        0x4183e0fd	                     and r8d, 0xfffffffd	      5467	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x400034b	        0x4183f810	                           cmp r8d, 0x10	      5467	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x400034f	            0x75bc	                           jne 0x400030d	      5467	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x4000351	          0x83ff12	                           cmp edi, 0x12	      5476	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x4000354	    0xc74324010000	               mov dword [rbx + 0x24], 1	      5470	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x400035b	            0x740c	                            je 0x4000369	      5476	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x400035d	    0x448b15000000	           mov r10d, dword [0x04000364] 	      5476	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x4000364	          0x4585d2	                         test r10d, r10d	      5476	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x4000367	            0x742f	                            je 0x4000398	      5476	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x4000369	            0x29d6	                            sub esi, edx	      5477	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x400036b	        0x41037514	             add esi, dword [r13 + 0x14]	      5477	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x400036f	          0x897304	                mov dword [rbx + 4], esi	      5477	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x4000372	            0xeb99	                           jmp 0x400030d	      5477	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x4000374	          0x448b03	                    mov r8d, dword [rbx]	      5477	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x4000377	      0xe919ffffff	                           jmp 0x4000295	      5477	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x400037c	            0x29c6	                            sub esi, eax	      5437	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400037e	            0x8b03	                    mov eax, dword [rbx]	      5437	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x4000380	          0x4489f1	                           mov ecx, r14d	      5438	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x4000383	        0x8d440601	                lea eax, [rsi + rax + 1]	      5437	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x4000387	            0x29c1	                            sub ecx, eax	      5438	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x4000389	            0x8903	                    mov dword [rbx], eax	      5437	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400038b	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5437	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x4000390	          0x894b04	                mov dword [rbx + 4], ecx	      5438	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x4000393	      0xe975ffffff	                           jmp 0x400030d	      5438	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x4000398	    0xc74304000000	                  mov dword [rbx + 4], 0	      5480	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	ELSE_6
0x400039f	      0xe969ffffff	                           jmp 0x400030d	      5480	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	ELSE_6
0x40003a4	          0x4489f1	                           mov ecx, r14d	      5487	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x40003a7	            0x29c1	                            sub ecx, eax	      5487	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x40003a9	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5488	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12	IF_13
0x40003ae	          0x894b04	                mov dword [rbx + 4], ecx	      5487	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x40003b1	          0x4839e8	                            cmp rax, rbp	      5488	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12	IF_13
0x40003b4	        0x490f45c0	                          cmovne rax, r8	      5488	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12	IF_13
0x40003b8	      0xe96efeffff	                           jmp 0x400022b	      5488	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12	IF_13
0x40003bd	          0x4d89e7	                            mov r15, r12	      5386	ops.c	FUNCTION_65	CALL_1
0x40003c0	          0x4c89e5	                            mov rbp, r12	      5386	ops.c	FUNCTION_65	CALL_1
0x40003c3	          0x4531f6	                          xor r14d, r14d	      5365	ops.c	FUNCTION_65
0x40003c6	      0xe9bcfdffff	                           jmp 0x4000187	      5365	ops.c	FUNCTION_65
0x40003cb	          0x4c89e5	                            mov rbp, r12	      5389	ops.c	FUNCTION_65	WHILE_1
0x40003ce	            0x31f6	                            xor esi, esi	      5389	ops.c	FUNCTION_65	WHILE_1
0x40003d0	          0x4531f6	                          xor r14d, r14d	      5365	ops.c	FUNCTION_65
0x40003d3	      0xe9cdfeffff	                           jmp 0x40002a5	      5365	ops.c	FUNCTION_65
0x40003d8	      0xe800000000	                          call 0x40003dd	      5502	ops.c	FUNCTION_65
get_op_type	SWITCH,0:IF,6:WHILE,0:DO,0:FOR,1:ELSE,0:CALL,1:functions,0	43
0x4002090	          0x83ff72	                           cmp edi, 0x72	       177	ops.c	FUNCTION_1	IF_1
0x4002093	      0xb810000000	                           mov eax, 0x10	       178	ops.c	FUNCTION_1	IF_1
0x4002098	            0x741e	                            je 0x40020b8	       177	ops.c	FUNCTION_1	IF_1
0x400209a	          0x83ff7e	                           cmp edi, 0x7e	       179	ops.c	FUNCTION_1	IF_2
0x400209d	      0xb807000000	                              mov eax, 7	       180	ops.c	FUNCTION_1	IF_2
0x40020a2	            0x7414	                            je 0x40020b8	       179	ops.c	FUNCTION_1	IF_2
0x40020a4	          0x83ff67	                           cmp edi, 0x67	       181	ops.c	FUNCTION_1	IF_3
0x40020a7	           0xf94c2	                                 sete dl	       181	ops.c	FUNCTION_1	IF_3
0x40020aa	          0x83fe01	                              cmp esi, 1	       181	ops.c	FUNCTION_1	IF_3
0x40020ad	            0x7511	                           jne 0x40020c0	       181	ops.c	FUNCTION_1	IF_3
0x40020af	            0x84d2	                             test dl, dl	       181	ops.c	FUNCTION_1	IF_3
0x40020b1	      0xb81c000000	                           mov eax, 0x1c	       182	ops.c	FUNCTION_1	IF_3
0x40020b6	            0x7408	                            je 0x40020c0	       181	ops.c	FUNCTION_1	IF_3
0x40020b8	              0xc3	                                     ret	       196	ops.c	FUNCTION_1
0x40020b9	     0xf1f80000000	                         nop dword [rax]	       196	ops.c	FUNCTION_1
0x40020c0	          0x83fe18	                           cmp esi, 0x18	       183	ops.c	FUNCTION_1	IF_4
0x40020c3	            0x7509	                           jne 0x40020ce	       183	ops.c	FUNCTION_1	IF_4
0x40020c5	            0x84d2	                             test dl, dl	       183	ops.c	FUNCTION_1	IF_4
0x40020c7	      0xb81d000000	                           mov eax, 0x1d	       184	ops.c	FUNCTION_1	IF_4
0x40020cc	            0x75ea	                           jne 0x40020b8	       183	ops.c	FUNCTION_1	IF_4
0x40020ce	      0xb900000000	                              mov ecx, 0	       183	ops.c	FUNCTION_1	IF_4
0x40020d3	            0x31d2	                            xor edx, edx	       183	ops.c	FUNCTION_1	IF_4
0x40020d5	            0x31c0	                            xor eax, eax	       183	ops.c	FUNCTION_1	IF_4
0x40020d7	            0xeb16	                           jmp 0x40020ef	       183	ops.c	FUNCTION_1	IF_4
0x40020d9	     0xf1f80000000	                         nop dword [rax]	       183	ops.c	FUNCTION_1	IF_4
0x40020e0	          0x83f81d	                           cmp eax, 0x1d	       189	ops.c	FUNCTION_1	FOR_1	IF_6
0x40020e3	            0x741b	                            je 0x4002100	       189	ops.c	FUNCTION_1	FOR_1	IF_6
0x40020e5	           0xfbe11	                   movsx edx, byte [rcx]	       189	ops.c	FUNCTION_1	FOR_1	IF_6
0x40020e8	          0x83c001	                              add eax, 1	       185	ops.c	FUNCTION_1	FOR_1
0x40020eb	        0x4883c103	                              add rcx, 3	       185	ops.c	FUNCTION_1	FOR_1
0x40020ef	            0x39d7	                            cmp edi, edx	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x40020f1	            0x75ed	                           jne 0x40020e0	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x40020f3	         0xfbe51fe	               movsx edx, byte [rcx - 2]	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x40020f7	            0x39d6	                            cmp esi, edx	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x40020f9	            0x75e5	                           jne 0x40020e0	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x40020fb	            0xf3c3	                                     ret	       196	ops.c	FUNCTION_1
0x40020fd	           0xf1f00	                         nop dword [rax]	       196	ops.c	FUNCTION_1
0x4002100	        0x4883ec08	                              sub rsp, 8	       174	ops.c	FUNCTION_1
0x4002104	      0xbf00000000	                              mov edi, 0	       191	ops.c	FUNCTION_1	FOR_1	IF_6	CALL_1
0x4002109	      0xe800000000	                          call 0x400210e	       191	ops.c	FUNCTION_1	FOR_1	IF_6	CALL_1
0x400210e	      0xb81d000000	                           mov eax, 0x1d	       192	ops.c	FUNCTION_1	FOR_1	IF_6
0x4002113	        0x4883c408	                              add rsp, 8	       196	ops.c	FUNCTION_1
0x4002117	              0xc3	                                     ret	       196	ops.c	FUNCTION_1
do_join	SWITCH,0:IF,22:WHILE,0:DO,0:FOR,2:ELSE,3:CALL,34:functions,0	452
0x40051c0	            0x4157	                                push r15	      4526	ops.c	FUNCTION_55
0x40051c2	            0x4156	                                push r14	      4526	ops.c	FUNCTION_55
0x40051c4	            0x4155	                                push r13	      4526	ops.c	FUNCTION_55
0x40051c6	            0x4154	                                push r12	      4526	ops.c	FUNCTION_55
0x40051c8	              0x55	                                push rbp	      4526	ops.c	FUNCTION_55
0x40051c9	              0x53	                                push rbx	      4526	ops.c	FUNCTION_55
0x40051ca	        0x4883ec58	                           sub rsp, 0x58	      4526	ops.c	FUNCTION_55
0x40051ce	    0x64488b042528	                mov rax, qword fs:[0x28]	      4526	ops.c	FUNCTION_55
0x40051d7	      0x4889442448	             mov qword [rsp + 0x48], rax	      4526	ops.c	FUNCTION_55
0x40051dc	            0x31c0	                            xor eax, eax	      4526	ops.c	FUNCTION_55
0x40051de	          0x83f901	                              cmp ecx, 1	      4542	ops.c	FUNCTION_55	CALL_1
0x40051e1	      0x48897c2408	                mov qword [rsp + 8], rdi	      4526	ops.c	FUNCTION_55
0x40051e6	        0x89742418	             mov dword [rsp + 0x18], esi	      4526	ops.c	FUNCTION_55
0x40051ea	      0x448944243c	             mov dword [rsp + 0x3c], r8d	      4526	ops.c	FUNCTION_55
0x40051ef	    0xc70424000000	                      mov dword [rsp], 0	      4542	ops.c	FUNCTION_55	CALL_1
0x40051f6	     0xf8464060000	                            je 0x4005860	      4542	ops.c	FUNCTION_55	CALL_1
0x40051fc	            0x85d2	                           test edx, edx	      4547	ops.c	FUNCTION_55	IF_1	CALL_2
0x40051fe	            0x7425	                            je 0x4005225	      4547	ops.c	FUNCTION_55	IF_1	CALL_2
0x4005200	    0x488b05000000	            mov rax, qword [0x04005207] 	      4548	ops.c	FUNCTION_55	IF_1
0x4005207	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      4548	ops.c	FUNCTION_55	IF_1
0x400520b	      0x488b442408	                mov rax, qword [rsp + 8]	      4547	ops.c	FUNCTION_55	IF_1	CALL_2
0x4005210	        0x488d3407	                    lea rsi, [rdi + rax]	      4547	ops.c	FUNCTION_55	IF_1	CALL_2
0x4005214	        0x4883ef01	                              sub rdi, 1	      4547	ops.c	FUNCTION_55	IF_1	CALL_2
0x4005218	      0xe800000000	                          call 0x400521d	      4547	ops.c	FUNCTION_55	IF_1	CALL_2
0x400521d	            0x85c0	                           test eax, eax	      4547	ops.c	FUNCTION_55	IF_1	CALL_2
0x400521f	     0xf847b030000	                            je 0x40055a0	      4547	ops.c	FUNCTION_55	IF_1	CALL_2
0x4005225	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4554	ops.c	FUNCTION_55	CALL_3
0x400522a	      0xbe01000000	                              mov esi, 1	      4554	ops.c	FUNCTION_55	CALL_3
0x400522f	      0xe800000000	                          call 0x4005234	      4554	ops.c	FUNCTION_55	CALL_3
0x4005234	          0x4885c0	                           test rax, rax	      4555	ops.c	FUNCTION_55	IF_2
0x4005237	      0x4889442420	             mov qword [rsp + 0x20], rax	      4554	ops.c	FUNCTION_55	CALL_3
0x400523c	     0xf845e030000	                            je 0x40055a0	      4555	ops.c	FUNCTION_55	IF_2
0x4005242	          0x8b0424	                    mov eax, dword [rsp]	      4558	ops.c	FUNCTION_55	IF_3
0x4005245	    0x48c744243000	               mov qword [rsp + 0x30], 0	      4540	ops.c	FUNCTION_55
0x400524e	            0x85c0	                           test eax, eax	      4558	ops.c	FUNCTION_55	IF_3
0x4005250	     0xf8512030000	                           jne 0x4005568	      4558	ops.c	FUNCTION_55	IF_3
0x4005256	    0x48837c240800	                  cmp qword [rsp + 8], 0	      4573	ops.c	FUNCTION_55	FOR_1
0x400525c	     0xf8eb4060000	                           jle 0x4005916	      4573	ops.c	FUNCTION_55	FOR_1
0x4005262	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	      4573	ops.c	FUNCTION_55	FOR_1
0x4005266	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	      4573	ops.c	FUNCTION_55	FOR_1
0x400526b	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      4573	ops.c	FUNCTION_55	FOR_1
0x4005273	    0xc74424040000	                  mov dword [rsp + 4], 0	      4573	ops.c	FUNCTION_55	FOR_1
0x400527b	    0xc74424100000	               mov dword [rsp + 0x10], 0	      4573	ops.c	FUNCTION_55	FOR_1
0x4005283	            0x85c0	                           test eax, eax	      4573	ops.c	FUNCTION_55	FOR_1
0x4005285	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      4573	ops.c	FUNCTION_55	FOR_1
0x4005289	       0xf95442438	                 setne byte [rsp + 0x38]	      4573	ops.c	FUNCTION_55	FOR_1
0x400528e	            0x85c0	                           test eax, eax	      4573	ops.c	FUNCTION_55	FOR_1
0x4005290	        0x410f95c7	                              setne r15b	      4573	ops.c	FUNCTION_55	FOR_1
0x4005294	            0x31ed	                            xor ebp, ebp	      4573	ops.c	FUNCTION_55	FOR_1
0x4005296	          0x4531e4	                          xor r12d, r12d	      4573	ops.c	FUNCTION_55	FOR_1
0x4005299	      0xe9c6000000	                           jmp 0x4005364	      4573	ops.c	FUNCTION_55	FOR_1
0x400529e	            0x6690	                                     nop	      4573	ops.c	FUNCTION_55	FOR_1
0x40052a0	        0x450fb626	                  movzx r12d, byte [r14]	      4573	ops.c	FUNCTION_55	FOR_1
0x40052a4	          0x4889df	                            mov rdi, rbx	      4626	ops.c	FUNCTION_55	FOR_1	CALL_16
0x40052a7	        0x450fb6e4	                        movzx r12d, r12b	      4627	ops.c	FUNCTION_55	FOR_1
0x40052ab	      0xe800000000	                          call 0x40052b0	      4626	ops.c	FUNCTION_55	FOR_1	CALL_16
0x40052b0	          0x4101c4	                           add r12d, eax	      4627	ops.c	FUNCTION_55	FOR_1
0x40052b3	      0x440164241c	            add dword [rsp + 0x1c], r12d	      4627	ops.c	FUNCTION_55	FOR_1
0x40052b8	            0x85c0	                           test eax, eax	      4629	ops.c	FUNCTION_55	FOR_1	IF_12
0x40052ba	        0x89442404	                mov dword [rsp + 4], eax	      4626	ops.c	FUNCTION_55	FOR_1	CALL_16
0x40052be	     0xf8efc010000	                           jle 0x40054c0	      4629	ops.c	FUNCTION_55	FOR_1	IF_12
0x40052c4	          0x4584ff	                         test r15b, r15b	      4629	ops.c	FUNCTION_55	FOR_1	IF_12
0x40052c7	     0xf84f3010000	                            je 0x40054c0	      4629	ops.c	FUNCTION_55	FOR_1	IF_12
0x40052cd	    0x448b15000000	           mov r10d, dword [0x040052d4] 	      4632	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x40052d4	          0x4585d2	                         test r10d, r10d	      4632	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x40052d7	     0xf8463020000	                            je 0x4005540	      4632	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x40052dd	            0x4898	                                    cdqe	      4634	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x40052df	          0x4889df	                            mov rdi, rbx	      4635	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x40052e2	        0x4c8d2403	                    lea r12, [rbx + rax]	      4634	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x40052e6	      0x498d7424ff	                      lea rsi, [r12 - 1]	      4635	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x40052eb	    0xff1500000000	                 call qword [0x040052f1]	      4635	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x40052f1	          0x83c001	                              add eax, 1	      4635	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x40052f4	          0x4c89e2	                            mov rdx, r12	      4635	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x40052f7	          0x4531e4	                          xor r12d, r12d	      4628	ops.c	FUNCTION_55	FOR_1
0x40052fa	            0x4898	                                    cdqe	      4635	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x40052fc	          0x4829c2	                            sub rdx, rax	      4635	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x40052ff	          0x4889d7	                            mov rdi, rdx	      4636	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x4005302	      0x4889542428	             mov qword [rsp + 0x28], rdx	      4636	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x4005307	    0xff1500000000	                 call qword [0x0400530d]	      4636	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x400530d	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      4637	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14
0x4005312	        0x89442410	             mov dword [rsp + 0x10], eax	      4636	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x4005316	          0x4839d3	                            cmp rbx, rdx	      4637	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14
0x4005319	            0x7323	                           jae 0x400533e	      4637	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14
0x400531b	    0x448b0d000000	            mov r9d, dword [0x04005322] 	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x4005322	    0x48c7c7ffffff	             mov rdi, 0xffffffffffffffff	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x4005329	          0x4585c9	                           test r9d, r9d	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x400532c	     0xf85de040000	                           jne 0x4005810	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x4005332	          0x4801d7	                            add rdi, rdx	      4640	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14
0x4005335	    0xff1500000000	                 call qword [0x0400533b]	      4640	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14
0x400533b	          0x4189c4	                           mov r12d, eax	      4640	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14
0x400533e	      0xe800000000	                          call 0x4005343	      4651	ops.c	FUNCTION_55	FOR_1	CALL_19
0x4005343	    0x8b0500000000	            mov eax, dword [0x04005349] 	      4652	ops.c	FUNCTION_55	FOR_1	IF_16
0x4005349	            0x85c0	                           test eax, eax	      4652	ops.c	FUNCTION_55	FOR_1	IF_16
0x400534b	     0xf858d010000	                           jne 0x40054de	      4652	ops.c	FUNCTION_55	FOR_1	IF_16
0x4005351	        0x4883c501	                              add rbp, 1	      4573	ops.c	FUNCTION_55	FOR_1
0x4005355	        0x4983c601	                              add r14, 1	      4573	ops.c	FUNCTION_55	FOR_1
0x4005359	      0x48396c2408	                cmp qword [rsp + 8], rbp	      4573	ops.c	FUNCTION_55	FOR_1
0x400535e	     0xf8464020000	                            je 0x40055c8	      4573	ops.c	FUNCTION_55	FOR_1
0x4005364	    0x488b05000000	            mov rax, qword [0x0400536b] 	      4575	ops.c	FUNCTION_55	FOR_1	CALL_6
0x400536b	          0x4889ef	                            mov rdi, rbp	      4575	ops.c	FUNCTION_55	FOR_1	CALL_6
0x400536e	        0x48037838	             add rdi, qword [rax + 0x38]	      4575	ops.c	FUNCTION_55	FOR_1	CALL_6
0x4005372	      0xe800000000	                          call 0x4005377	      4575	ops.c	FUNCTION_55	FOR_1	CALL_6
0x4005377	          0x4885ed	                           test rbp, rbp	      4576	ops.c	FUNCTION_55	FOR_1	IF_5
0x400537a	          0x4989c5	                            mov r13, rax	      4575	ops.c	FUNCTION_55	FOR_1	CALL_6
0x400537d	            0x752b	                           jne 0x40053aa	      4576	ops.c	FUNCTION_55	FOR_1	IF_5
0x400537f	      0x807c243800	                cmp byte [rsp + 0x38], 0	      4576	ops.c	FUNCTION_55	FOR_1	IF_5
0x4005384	            0x7424	                            je 0x40053aa	      4576	ops.c	FUNCTION_55	FOR_1	IF_5
0x4005386	    0x488b05000000	            mov rax, qword [0x0400538d] 	      4579	ops.c	FUNCTION_55	FOR_1	IF_5
0x400538d	          0x4c89ef	                            mov rdi, r13	      4580	ops.c	FUNCTION_55	FOR_1	IF_5	CALL_7
0x4005390	        0x488b5808	                mov rbx, qword [rax + 8]	      4579	ops.c	FUNCTION_55	FOR_1	IF_5
0x4005394	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4579	ops.c	FUNCTION_55	FOR_1	IF_5
0x4005398	    0x488983e01100	          mov qword [rbx + 0x11e0], rax 	      4579	ops.c	FUNCTION_55	FOR_1	IF_5
0x400539f	      0xe800000000	                          call 0x40053a4	      4580	ops.c	FUNCTION_55	FOR_1	IF_5	CALL_7
0x40053a4	    0x8983e8110000	          mov dword [rbx + 0x11e8], eax 	      4580	ops.c	FUNCTION_55	FOR_1	IF_5	CALL_7
0x40053aa	          0x8b0424	                    mov eax, dword [rsp]	      4583	ops.c	FUNCTION_55	FOR_1	IF_6
0x40053ad	          0x4885ed	                           test rbp, rbp	      4587	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x40053b0	          0x4c89eb	                            mov rbx, r13	      4575	ops.c	FUNCTION_55	FOR_1	CALL_6
0x40053b3	        0x410f9fc0	                                setg r8b	      4587	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x40053b7	            0x85c0	                           test eax, eax	      4583	ops.c	FUNCTION_55	FOR_1	IF_6
0x40053b9	            0x7443	                            je 0x40053fe	      4583	ops.c	FUNCTION_55	FOR_1	IF_6
0x40053bb	        0x8b442444	            mov eax, dword [rsp + 0x44] 	      4587	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x40053bf	            0x85c0	                           test eax, eax	      4587	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x40053c1	           0xf95c0	                                setne al	      4587	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x40053c4	          0x4420c0	                             and al, r8b	      4587	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x40053c7	        0x88442428	               mov byte [rsp + 0x28], al	      4587	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x40053cb	     0xf843f010000	                            je 0x4005510	      4587	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x40053d1	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      4590	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7	CALL_8
0x40053d5	      0x488d4c2444	                   lea rcx, [rsp + 0x44]	      4590	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7	CALL_8
0x40053da	      0xbe01000000	                              mov esi, 1	      4590	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7	CALL_8
0x40053df	          0x4c89ef	                            mov rdi, r13	      4590	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7	CALL_8
0x40053e2	      0xe800000000	                          call 0x40053e7	      4590	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7	CALL_8
0x40053e7	    0x440fb64c2428	           movzx r9d, byte [rsp + 0x28] 	      4590	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7	CALL_8
0x40053ed	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      4592	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x40053f2	          0x4889c3	                            mov rbx, rax	      4590	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7	CALL_8
0x40053f5	          0x4c29e8	                            sub rax, r13	      4592	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x40053f8	          0x8904ae	            mov dword [rsi + rbp*4], eax	      4592	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x40053fb	          0x4589c8	                            mov r8d, r9d	      4592	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x40053fe	          0x4584ff	                         test r15b, r15b	      4601	ops.c	FUNCTION_55	FOR_1	IF_8
0x4005401	     0xf8499feffff	                            je 0x40052a0	      4601	ops.c	FUNCTION_55	FOR_1	IF_8
0x4005407	          0x4584c0	                           test r8b, r8b	      4601	ops.c	FUNCTION_55	FOR_1	IF_8
0x400540a	     0xf8490feffff	                            je 0x40052a0	      4601	ops.c	FUNCTION_55	FOR_1	IF_8
0x4005410	          0x4889df	                            mov rdi, rbx	      4603	ops.c	FUNCTION_55	FOR_1	IF_8	CALL_10
0x4005413	      0xe800000000	                          call 0x4005418	      4603	ops.c	FUNCTION_55	FOR_1	IF_8	CALL_10
0x4005418	          0x803829	                    cmp byte [rax], 0x29	      4604	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9
0x400541b	          0x4889c3	                            mov rbx, rax	      4603	ops.c	FUNCTION_55	FOR_1	IF_8	CALL_10
0x400541e	     0xf847cfeffff	                            je 0x40052a0	      4604	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9
0x4005424	        0x8b442404	                mov eax, dword [rsp + 4]	      4604	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9
0x4005428	            0x85c0	                           test eax, eax	      4604	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9
0x400542a	     0xf8470feffff	                            je 0x40052a0	      4604	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9
0x4005430	      0x837c241009	               cmp dword [rsp + 0x10], 9	      4604	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9
0x4005435	     0xf8465feffff	                            je 0x40052a0	      4604	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9
0x400543b	      0xbf4d000000	                           mov edi, 0x4d	      4606	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_11
0x4005440	      0xe800000000	                          call 0x4005445	      4606	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_11
0x4005445	            0x85c0	                           test eax, eax	      4606	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_11
0x4005447	            0x7422	                            je 0x400546b	      4606	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_11
0x4005449	          0x4889df	                            mov rdi, rbx	      4607	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_12
0x400544c	    0xff1500000000	                 call qword [0x04005452]	      4607	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_12
0x4005452	    0x817c2410ff00	           cmp dword [rsp + 0x10], 0xff 	      4607	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_12
0x400545a	     0xf8f40feffff	                            jg 0x40052a0	      4607	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_12
0x4005460	      0x3dff000000	                           cmp eax, 0xff	      4607	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_12
0x4005465	     0xf8f35feffff	                            jg 0x40052a0	      4607	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_12
0x400546b	      0xbf42000000	                           mov edi, 0x42	      4608	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_13
0x4005470	      0xe800000000	                          call 0x4005475	      4608	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_13
0x4005475	            0x85c0	                           test eax, eax	      4608	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_13
0x4005477	     0xf850b040000	                           jne 0x4005888	      4608	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_13
0x400547d	      0x837c241020	           cmp dword [rsp + 0x10], 0x20 	      4614	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_10
0x4005482	     0xf84ca030000	                            je 0x4005852	      4614	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_10
0x4005488	        0x41800601	                       add byte [r14], 1	      4617	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	ELSE_2
0x400548c	    0x448b1d000000	           mov r11d, dword [0x04005493] 	      4619	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x4005493	          0x4585db	                         test r11d, r11d	      4619	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x4005496	     0xf8404feffff	                            je 0x40052a0	      4619	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x400549c	      0x837c24102e	           cmp dword [rsp + 0x10], 0x2e 	      4620	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x40054a1	     0xf8508040000	                           jne 0x40058af	      4620	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x40054a7	        0x410fb606	                   movzx eax, byte [r14]	      4623	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x40054ab	        0x448d6001	                     lea r12d, [rax + 1]	      4623	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x40054af	          0x458826	                    mov byte [r14], r12b	      4623	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x40054b2	      0xe9edfdffff	                           jmp 0x40052a4	      4623	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x40054b7	    0x660f1f840000	                    nop word [rax + rax]	      4623	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x40054c0	    0xc74424100000	               mov dword [rsp + 0x10], 0	      4628	ops.c	FUNCTION_55	FOR_1
0x40054c8	          0x4531e4	                          xor r12d, r12d	      4628	ops.c	FUNCTION_55	FOR_1
0x40054cb	      0xe800000000	                          call 0x40054d0	      4651	ops.c	FUNCTION_55	FOR_1	CALL_19
0x40054d0	    0x8b0500000000	            mov eax, dword [0x040054d6] 	      4652	ops.c	FUNCTION_55	FOR_1	IF_16
0x40054d6	            0x85c0	                           test eax, eax	      4652	ops.c	FUNCTION_55	FOR_1	IF_16
0x40054d8	     0xf8473feffff	                            je 0x4005351	      4652	ops.c	FUNCTION_55	FOR_1	IF_16
0x40054de	            0x31db	                            xor ebx, ebx	      4654	ops.c	FUNCTION_55	FOR_1	IF_16
0x40054e0	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      4735	ops.c	FUNCTION_55	CALL_33
0x40054e5	      0xe800000000	                          call 0x40054ea	      4735	ops.c	FUNCTION_55	CALL_33
0x40054ea	          0x8b1424	                    mov edx, dword [rsp]	      4737	ops.c	FUNCTION_55	IF_22
0x40054ed	            0x89d8	                            mov eax, ebx	      4740	ops.c	FUNCTION_55
0x40054ef	            0x85d2	                           test edx, edx	      4737	ops.c	FUNCTION_55	IF_22
0x40054f1	     0xf84ab000000	                            je 0x40055a2	      4737	ops.c	FUNCTION_55	IF_22
0x40054f7	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      4738	ops.c	FUNCTION_55	CALL_34
0x40054fc	          0x891c24	                    mov dword [rsp], ebx	      4738	ops.c	FUNCTION_55	CALL_34
0x40054ff	      0xe800000000	                          call 0x4005504	      4738	ops.c	FUNCTION_55	CALL_34
0x4005504	          0x8b0424	                    mov eax, dword [rsp]	      4738	ops.c	FUNCTION_55	CALL_34
0x4005507	      0xe996000000	                           jmp 0x40055a2	      4738	ops.c	FUNCTION_55	CALL_34
0x400550c	         0xf1f4000	                         nop dword [rax]	      4738	ops.c	FUNCTION_55	CALL_34
0x4005510	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      4596	ops.c	FUNCTION_55	FOR_1	IF_6	ELSE_1	CALL_9
0x4005514	      0x488d4c2444	                   lea rcx, [rsp + 0x44]	      4596	ops.c	FUNCTION_55	FOR_1	IF_6	ELSE_1	CALL_9
0x4005519	            0x31f6	                            xor esi, esi	      4596	ops.c	FUNCTION_55	FOR_1	IF_6	ELSE_1	CALL_9
0x400551b	          0x4c89ef	                            mov rdi, r13	      4596	ops.c	FUNCTION_55	FOR_1	IF_6	ELSE_1	CALL_9
0x400551e	      0x4488442428	              mov byte [rsp + 0x28], r8b	      4596	ops.c	FUNCTION_55	FOR_1	IF_6	ELSE_1	CALL_9
0x4005523	      0xe800000000	                          call 0x4005528	      4596	ops.c	FUNCTION_55	FOR_1	IF_6	ELSE_1	CALL_9
0x4005528	    0x440fb6442428	           movzx r8d, byte [rsp + 0x28] 	      4596	ops.c	FUNCTION_55	FOR_1	IF_6	ELSE_1	CALL_9
0x400552e	          0x4889c3	                            mov rbx, rax	      4596	ops.c	FUNCTION_55	FOR_1	IF_6	ELSE_1	CALL_9
0x4005531	      0xe9c8feffff	                           jmp 0x40053fe	      4596	ops.c	FUNCTION_55	FOR_1	IF_6	ELSE_1	CALL_9
0x4005536	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4596	ops.c	FUNCTION_55	FOR_1	IF_6	ELSE_1	CALL_9
0x4005540	          0x4863d0	                         movsxd rdx, eax	      4646	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3
0x4005543	          0x4531e4	                          xor r12d, r12d	      4628	ops.c	FUNCTION_55	FOR_1
0x4005546	          0x83f801	                              cmp eax, 1	      4647	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3	IF_15
0x4005549	       0xfb67413ff	         movzx esi, byte [rbx + rdx - 1]	      4646	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3
0x400554e	        0x89742410	             mov dword [rsp + 0x10], esi	      4646	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3
0x4005552	     0xf84e6fdffff	                            je 0x400533e	      4647	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3	IF_15
0x4005558	    0x440fb66413fe	        movzx r12d, byte [rbx + rdx - 2]	      4648	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3	IF_15
0x400555e	      0xe9dbfdffff	                           jmp 0x400533e	      4648	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3	IF_15
0x4005563	       0xf1f440000	                   nop dword [rax + rax]	      4648	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3	IF_15
0x4005568	      0x488b442408	                mov rax, qword [rsp + 8]	      4560	ops.c	FUNCTION_55	IF_3	CALL_4
0x400556d	      0xbe01000000	                              mov esi, 1	      4560	ops.c	FUNCTION_55	IF_3	CALL_4
0x4005572	    0x488d3c850000	                        lea rdi, [rax*4]	      4560	ops.c	FUNCTION_55	IF_3	CALL_4
0x400557a	      0xe800000000	                          call 0x400557f	      4560	ops.c	FUNCTION_55	IF_3	CALL_4
0x400557f	          0x4885c0	                           test rax, rax	      4561	ops.c	FUNCTION_55	IF_3	IF_4
0x4005582	      0x4889442430	             mov qword [rsp + 0x30], rax	      4560	ops.c	FUNCTION_55	IF_3	CALL_4
0x4005587	     0xf85c9fcffff	                           jne 0x4005256	      4561	ops.c	FUNCTION_55	IF_3	IF_4
0x400558d	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      4563	ops.c	FUNCTION_55	IF_3	IF_4	CALL_5
0x4005592	      0xe800000000	                          call 0x4005597	      4563	ops.c	FUNCTION_55	IF_3	IF_4	CALL_5
0x4005597	    0x660f1f840000	                    nop word [rax + rax]	      4563	ops.c	FUNCTION_55	IF_3	IF_4	CALL_5
0x40055a0	            0x31c0	                            xor eax, eax	      4564	ops.c	FUNCTION_55	IF_3	IF_4
0x40055a2	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      4741	ops.c	FUNCTION_55
0x40055a7	    0x644833342528	                xor rsi, qword fs:[0x28]	      4741	ops.c	FUNCTION_55
0x40055b0	     0xf859c030000	                           jne 0x4005952	      4741	ops.c	FUNCTION_55
0x40055b6	        0x4883c458	                           add rsp, 0x58	      4741	ops.c	FUNCTION_55
0x40055ba	              0x5b	                                 pop rbx	      4741	ops.c	FUNCTION_55
0x40055bb	              0x5d	                                 pop rbp	      4741	ops.c	FUNCTION_55
0x40055bc	            0x415c	                                 pop r12	      4741	ops.c	FUNCTION_55
0x40055be	            0x415d	                                 pop r13	      4741	ops.c	FUNCTION_55
0x40055c0	            0x415e	                                 pop r14	      4741	ops.c	FUNCTION_55
0x40055c2	            0x415f	                                 pop r15	      4741	ops.c	FUNCTION_55
0x40055c4	              0xc3	                                     ret	      4741	ops.c	FUNCTION_55
0x40055c5	           0xf1f00	                         nop dword [rax]	      4741	ops.c	FUNCTION_55
0x40055c8	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	      4741	ops.c	FUNCTION_55
0x40055cc	            0x89c8	                            mov eax, ecx	      4741	ops.c	FUNCTION_55
0x40055ce	        0x2b442404	                sub eax, dword [rsp + 4]	      4741	ops.c	FUNCTION_55
0x40055d2	          0x4863e9	                         movsxd rbp, ecx	      4741	ops.c	FUNCTION_55
0x40055d5	          0x8d7d01	                      lea edi, [rbp + 1]	      4741	ops.c	FUNCTION_55
0x40055d8	        0x89442438	             mov dword [rsp + 0x38], eax	      4741	ops.c	FUNCTION_55
0x40055dc	      0x4c8b742408	                mov r14, qword [rsp + 8]	      4660	ops.c	FUNCTION_55
0x40055e1	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      4660	ops.c	FUNCTION_55
0x40055e6	    0x420fb64431ff	         movzx eax, byte [rcx + r14 - 1]	      4660	ops.c	FUNCTION_55
0x40055ec	        0x8844241c	               mov byte [rsp + 0x1c], al	      4660	ops.c	FUNCTION_55
0x40055f0	      0xe800000000	                          call 0x40055f5	      4663	ops.c	FUNCTION_55	CALL_20
0x40055f5	        0x498d56ff	                      lea rdx, [r14 - 1]	      4674	ops.c	FUNCTION_55	FOR_2
0x40055f9	          0x4989c7	                            mov r15, rax	      4663	ops.c	FUNCTION_55	CALL_20
0x40055fc	          0x4801c5	                            add rbp, rax	      4664	ops.c	FUNCTION_55
0x40055ff	          0x4c89f0	                            mov rax, r14	      4674	ops.c	FUNCTION_55	FOR_2
0x4005602	    0x41be01000000	                             mov r14d, 1	      4674	ops.c	FUNCTION_55	FOR_2
0x4005608	      0x4c897c2408	                mov qword [rsp + 8], r15	        90	string3.h	FUNCTION_95	CALL_6
0x400560d	        0xc6450000	                       mov byte [rbp], 0	      4665	ops.c	FUNCTION_55
0x4005611	          0x4989df	                            mov r15, rbx	        90	string3.h	FUNCTION_95	CALL_6
0x4005614	      0x4889542410	             mov qword [rsp + 0x10], rdx	      4674	ops.c	FUNCTION_55	FOR_2
0x4005619	          0x4c89eb	                            mov rbx, r13	        90	string3.h	FUNCTION_95	CALL_6
0x400561c	          0x4929c6	                            sub r14, rax	        90	string3.h	FUNCTION_95	CALL_6
0x400561f	          0x4989d4	                            mov r12, rdx	      4674	ops.c	FUNCTION_55	FOR_2
0x4005622	      0x448b6c2404	               mov r13d, dword [rsp + 4]	        90	string3.h	FUNCTION_95	CALL_6
0x4005627	      0xe997000000	                           jmp 0x40056c3	        90	string3.h	FUNCTION_95	CALL_6
0x400562c	         0xf1f4000	                         nop dword [rax]	        90	string3.h	FUNCTION_95	CALL_6
0x4005630	          0x4889e9	                            mov rcx, rbp	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x4005633	      0x482b4c2408	                sub rcx, qword [rsp + 8]	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x4005638	          0x4c89e7	                            mov rdi, r12	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x400563b	          0x4d89f8	                             mov r8, r15	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x400563e	            0x31f6	                            xor esi, esi	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x4005640	          0x4c89f2	                            mov rdx, r14	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x4005643	          0x4929d8	                             sub r8, rbx	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x4005646	          0x4801c1	                            add rcx, rax	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x4005649	    0x488b05000000	            mov rax, qword [0x04005650] 	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x4005650	          0x4c29c1	                             sub rcx, r8	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x4005653	        0x48037838	             add rdi, qword [rax + 0x38]	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x4005657	      0xe800000000	                          call 0x400565c	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x400565c	          0x4d85e4	                           test r12, r12	      4685	ops.c	FUNCTION_55	FOR_2	IF_18
0x400565f	     0xf84eb000000	                            je 0x4005750	      4685	ops.c	FUNCTION_55	FOR_2	IF_18
0x4005665	    0x488b05000000	            mov rax, qword [0x0400566c] 	      4687	ops.c	FUNCTION_55	FOR_2	CALL_24
0x400566c	          0x4c89e7	                            mov rdi, r12	      4687	ops.c	FUNCTION_55	FOR_2	CALL_24
0x400566f	        0x48037838	             add rdi, qword [rax + 0x38]	      4687	ops.c	FUNCTION_55	FOR_2	CALL_24
0x4005673	        0x4883ef01	                              sub rdi, 1	      4687	ops.c	FUNCTION_55	FOR_2	CALL_24
0x4005677	      0xe800000000	                          call 0x400567c	      4687	ops.c	FUNCTION_55	FOR_2	CALL_24
0x400567c	          0x8b3c24	                    mov edi, dword [rsp]	      4689	ops.c	FUNCTION_55	FOR_2	IF_19
0x400567f	          0x4889c3	                            mov rbx, rax	      4687	ops.c	FUNCTION_55	FOR_2	CALL_24
0x4005682	          0x4989c7	                            mov r15, rax	      4687	ops.c	FUNCTION_55	FOR_2	CALL_24
0x4005685	            0x85ff	                           test edi, edi	      4689	ops.c	FUNCTION_55	FOR_2	IF_19
0x4005687	            0x740e	                            je 0x4005697	      4689	ops.c	FUNCTION_55	FOR_2	IF_19
0x4005689	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      4690	ops.c	FUNCTION_55	FOR_2	IF_19
0x400568e	      0x4e6344a0fc	      movsxd r8, dword [rax + r12*4 - 4]	      4690	ops.c	FUNCTION_55	FOR_2	IF_19
0x4005693	        0x4e8d3c03	                     lea r15, [rbx + r8]	      4690	ops.c	FUNCTION_55	FOR_2	IF_19
0x4005697	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      4692	ops.c	FUNCTION_55	FOR_2	IF_20
0x400569b	            0x85f6	                           test esi, esi	      4692	ops.c	FUNCTION_55	FOR_2	IF_20
0x400569d	            0x7411	                            je 0x40056b0	      4692	ops.c	FUNCTION_55	FOR_2	IF_20
0x400569f	        0x4983fc01	                              cmp r12, 1	      4692	ops.c	FUNCTION_55	FOR_2	IF_20
0x40056a3	            0x7e0b	                           jle 0x40056b0	      4692	ops.c	FUNCTION_55	FOR_2	IF_20
0x40056a5	          0x4c89ff	                            mov rdi, r15	      4693	ops.c	FUNCTION_55	FOR_2	CALL_25
0x40056a8	      0xe800000000	                          call 0x40056ad	      4693	ops.c	FUNCTION_55	FOR_2	CALL_25
0x40056ad	          0x4989c7	                            mov r15, rax	      4693	ops.c	FUNCTION_55	FOR_2	CALL_25
0x40056b0	          0x4c89ff	                            mov rdi, r15	      4694	ops.c	FUNCTION_55	FOR_2	CALL_26
0x40056b3	        0x4983ec01	                              sub r12, 1	      4674	ops.c	FUNCTION_55	FOR_2
0x40056b7	        0x4983c601	                              add r14, 1	      4674	ops.c	FUNCTION_55	FOR_2
0x40056bb	      0xe800000000	                          call 0x40056c0	      4694	ops.c	FUNCTION_55	FOR_2	CALL_26
0x40056c0	          0x4189c5	                           mov r13d, eax	      4694	ops.c	FUNCTION_55	FOR_2	CALL_26
0x40056c3	          0x4963d5	                        movsxd rdx, r13d	      4676	ops.c	FUNCTION_55	FOR_2
0x40056c6	          0x4c89fe	                            mov rsi, r15	        59	string3.h	FUNCTION_93	CALL_3
0x40056c9	          0x4829d5	                            sub rbp, rdx	      4676	ops.c	FUNCTION_55	FOR_2
0x40056cc	          0x4889ef	                            mov rdi, rbp	        59	string3.h	FUNCTION_93	CALL_3
0x40056cf	      0xe800000000	                          call 0x40056d4	        59	string3.h	FUNCTION_93	CALL_3
0x40056d4	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4678	ops.c	FUNCTION_55	FOR_2	IF_17
0x40056d9	      0x420fb60420	             movzx eax, byte [rax + r12]	      4678	ops.c	FUNCTION_55	FOR_2	IF_17
0x40056de	            0x84c0	                             test al, al	      4678	ops.c	FUNCTION_55	FOR_2	IF_17
0x40056e0	     0xf844affffff	                            je 0x4005630	      4678	ops.c	FUNCTION_55	FOR_2	IF_17
0x40056e6	           0xfb6d0	                           movzx edx, al	      4680	ops.c	FUNCTION_55	FOR_2	IF_17
0x40056e9	          0x4829d5	                            sub rbp, rdx	      4680	ops.c	FUNCTION_55	FOR_2	IF_17
0x40056ec	          0x83fa08	                              cmp edx, 8	        90	string3.h	FUNCTION_95	CALL_6
0x40056ef	            0x732f	                           jae 0x4005720	        90	string3.h	FUNCTION_95	CALL_6
0x40056f1	          0xf6c204	                              test dl, 4	        90	string3.h	FUNCTION_95	CALL_6
0x40056f4	     0xf85ee010000	                           jne 0x40058e8	        90	string3.h	FUNCTION_95	CALL_6
0x40056fa	            0x85d2	                           test edx, edx	        90	string3.h	FUNCTION_95	CALL_6
0x40056fc	     0xf842effffff	                            je 0x4005630	        90	string3.h	FUNCTION_95	CALL_6
0x4005702	          0xf6c202	                              test dl, 2	        90	string3.h	FUNCTION_95	CALL_6
0x4005705	        0xc6450020	                    mov byte [rbp], 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x4005709	     0xf8528020000	                           jne 0x4005937	        90	string3.h	FUNCTION_95	CALL_6
0x400570f	      0x488b442420	            mov rax, qword [rsp + 0x20] 	        90	string3.h	FUNCTION_95	CALL_6
0x4005714	      0x420fb60420	             movzx eax, byte [rax + r12]	        90	string3.h	FUNCTION_95	CALL_6
0x4005719	      0xe912ffffff	                           jmp 0x4005630	        90	string3.h	FUNCTION_95	CALL_6
0x400571e	            0x6690	                                     nop	        90	string3.h	FUNCTION_95	CALL_6
0x4005720	        0x488d7d08	                      lea rdi, [rbp + 8]	        90	string3.h	FUNCTION_95	CALL_6
0x4005724	          0x4889e9	                            mov rcx, rbp	        90	string3.h	FUNCTION_95	CALL_6
0x4005727	    0x48b820202020	          movabs rax, 0x2020202020202020	        90	string3.h	FUNCTION_95	CALL_6
0x4005731	        0x48894500	                    mov qword [rbp], rax	        90	string3.h	FUNCTION_95	CALL_6
0x4005735	      0x48894415f8	          mov qword [rbp + rdx - 8], rax	        90	string3.h	FUNCTION_95	CALL_6
0x400573a	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_95	CALL_6
0x400573e	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_95	CALL_6
0x4005741	             0x1d1	                            add ecx, edx	        90	string3.h	FUNCTION_95	CALL_6
0x4005743	            0x89ca	                            mov edx, ecx	        90	string3.h	FUNCTION_95	CALL_6
0x4005745	          0xc1ea03	                              shr edx, 3	        90	string3.h	FUNCTION_95	CALL_6
0x4005748	            0x89d1	                            mov ecx, edx	        90	string3.h	FUNCTION_95	CALL_6
0x400574a	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_95	CALL_6
0x400574d	            0xebc0	                           jmp 0x400570f	        90	string3.h	FUNCTION_95	CALL_6
0x400574f	              0x90	                                     nop	        90	string3.h	FUNCTION_95	CALL_6
0x4005750	    0x488b05000000	            mov rax, qword [0x04005757] 	      4696	ops.c	FUNCTION_55	CALL_27
0x4005757	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      4696	ops.c	FUNCTION_55	CALL_27
0x400575c	            0x31d2	                            xor edx, edx	      4696	ops.c	FUNCTION_55	CALL_27
0x400575e	      0x44896c2404	               mov dword [rsp + 4], r13d	      4696	ops.c	FUNCTION_55	CALL_27
0x4005763	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      4696	ops.c	FUNCTION_55	CALL_27
0x4005767	          0x4c89fe	                            mov rsi, r15	      4696	ops.c	FUNCTION_55	CALL_27
0x400576a	      0xe800000000	                          call 0x400576f	      4696	ops.c	FUNCTION_55	CALL_27
0x400576f	        0x8b4c243c	            mov ecx, dword [rsp + 0x3c] 	      4698	ops.c	FUNCTION_55	IF_21
0x4005773	    0x488b1d000000	            mov rbx, qword [0x0400577a] 	      4701	ops.c	FUNCTION_55	IF_21
0x400577a	            0x85c9	                           test ecx, ecx	      4698	ops.c	FUNCTION_55	IF_21
0x400577c	     0xf85ae000000	                           jne 0x4005830	      4698	ops.c	FUNCTION_55	IF_21
0x4005782	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	      4708	ops.c	FUNCTION_55
0x4005786	      0x448b742404	               mov r14d, dword [rsp + 4]	      4707	ops.c	FUNCTION_55	CALL_29
0x400578b	            0x31c9	                            xor ecx, ecx	      4707	ops.c	FUNCTION_55	CALL_29
0x400578d	        0x488d5701	                      lea rdx, [rdi + 1]	      4707	ops.c	FUNCTION_55	CALL_29
0x4005791	          0x4489f6	                           mov esi, r14d	      4707	ops.c	FUNCTION_55	CALL_29
0x4005794	      0xe800000000	                          call 0x4005799	      4707	ops.c	FUNCTION_55	CALL_29
0x4005799	    0x488b05000000	            mov rax, qword [0x040057a0] 	      4715	ops.c	FUNCTION_55
0x40057a0	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4717	ops.c	FUNCTION_55	CALL_30
0x40057a5	            0x31f6	                            xor esi, esi	      4717	ops.c	FUNCTION_55	CALL_30
0x40057a7	        0x488b6838	            mov rbp, qword [rax + 0x38] 	      4715	ops.c	FUNCTION_55
0x40057ab	        0x488d5501	                      lea rdx, [rbp + 1]	      4716	ops.c	FUNCTION_55
0x40057af	        0x48895038	             mov qword [rax + 0x38], rdx	      4716	ops.c	FUNCTION_55
0x40057b3	      0xe800000000	                          call 0x40057b8	      4717	ops.c	FUNCTION_55	CALL_30
0x40057b8	    0x488b1d000000	            mov rbx, qword [0x040057bf] 	      4718	ops.c	FUNCTION_55
0x40057bf	    0x488b3d000000	            mov rdi, qword [0x040057c6] 	      4726	ops.c	FUNCTION_55	CALL_31
0x40057c6	      0xbe71000000	                           mov esi, 0x71	      4726	ops.c	FUNCTION_55	CALL_31
0x40057cb	        0x48896b38	             mov qword [rbx + 0x38], rbp	      4718	ops.c	FUNCTION_55
0x40057cf	      0xe800000000	                          call 0x40057d4	      4726	ops.c	FUNCTION_55	CALL_31
0x40057d4	          0x4885c0	                           test rax, rax	      4726	ops.c	FUNCTION_55	CALL_31
0x40057d7	          0x4489f2	                           mov edx, r14d	      4726	ops.c	FUNCTION_55	CALL_31
0x40057da	     0xf8426010000	                            je 0x4005906	      4726	ops.c	FUNCTION_55	CALL_31
0x40057e0	          0x895340	             mov dword [rbx + 0x40], edx	      4725	ops.c	FUNCTION_55
0x40057e3	      0xbb01000000	                              mov ebx, 1	      4538	ops.c	FUNCTION_55
0x40057e8	      0xe800000000	                          call 0x40057ed	      4727	ops.c	FUNCTION_55	CALL_32
0x40057ed	    0x488b05000000	            mov rax, qword [0x040057f4] 	      4730	ops.c	FUNCTION_55
0x40057f4	    0xc74044000000	               mov dword [rax + 0x44], 0	      4730	ops.c	FUNCTION_55
0x40057fb	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      4732	ops.c	FUNCTION_55
0x4005802	      0xe9d9fcffff	                           jmp 0x40054e0	      4732	ops.c	FUNCTION_55
0x4005807	    0x660f1f840000	                    nop word [rax + rax]	      4732	ops.c	FUNCTION_55
0x4005810	        0x488d343a	                    lea rsi, [rdx + rdi]	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x4005814	          0x4889df	                            mov rdi, rbx	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x4005817	    0xff1500000000	                 call qword [0x0400581d]	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x400581d	          0x8d7801	                      lea edi, [rax + 1]	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x4005820	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x4005825	          0x4863ff	                         movsxd rdi, edi	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x4005828	          0x48f7df	                                 neg rdi	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x400582b	      0xe902fbffff	                           jmp 0x4005332	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x4005830	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      4701	ops.c	FUNCTION_55	IF_21
0x4005834	        0x488b6b08	                mov rbp, qword [rbx + 8]	      4701	ops.c	FUNCTION_55	IF_21
0x4005838	          0x4c89ff	                            mov rdi, r15	      4702	ops.c	FUNCTION_55	IF_21	CALL_28
0x400583b	    0x488985001200	          mov qword [rbp + 0x1200], rax 	      4701	ops.c	FUNCTION_55	IF_21
0x4005842	      0xe800000000	                          call 0x4005847	      4702	ops.c	FUNCTION_55	IF_21	CALL_28
0x4005847	    0x898508120000	          mov dword [rbp + 0x1208], eax 	      4702	ops.c	FUNCTION_55	IF_21	CALL_28
0x400584d	      0xe930ffffff	                           jmp 0x4005782	      4702	ops.c	FUNCTION_55	IF_21	CALL_28
0x4005852	      0x4489642410	            mov dword [rsp + 0x10], r12d	      4614	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_10
0x4005857	      0xe930fcffff	                           jmp 0x400548c	      4614	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_10
0x400585c	         0xf1f4000	                         nop dword [rax]	      4614	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_10
0x4005860	      0xbf6a000000	                           mov edi, 0x6a	      4542	ops.c	FUNCTION_55	CALL_1
0x4005865	        0x89542404	                mov dword [rsp + 4], edx	      4542	ops.c	FUNCTION_55	CALL_1
0x4005869	      0xe800000000	                          call 0x400586e	      4542	ops.c	FUNCTION_55	CALL_1
0x400586e	            0x85c0	                           test eax, eax	      4542	ops.c	FUNCTION_55	CALL_1
0x4005870	        0x8b542404	                mov edx, dword [rsp + 4]	      4542	ops.c	FUNCTION_55	CALL_1
0x4005874	           0xf95c0	                                setne al	      4542	ops.c	FUNCTION_55	CALL_1
0x4005877	           0xfb6c0	                           movzx eax, al	      4542	ops.c	FUNCTION_55	CALL_1
0x400587a	          0x890424	                    mov dword [rsp], eax	      4542	ops.c	FUNCTION_55	CALL_1
0x400587d	      0xe97af9ffff	                           jmp 0x40051fc	      4542	ops.c	FUNCTION_55	CALL_1
0x4005882	    0x660f1f440000	                    nop word [rax + rax]	      4542	ops.c	FUNCTION_55	CALL_1
0x4005888	          0x4889df	                            mov rdi, rbx	      4609	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_14
0x400588b	    0xff1500000000	                 call qword [0x04005891]	      4609	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_14
0x4005891	      0x3dff000000	                           cmp eax, 0xff	      4609	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_14
0x4005896	     0xf8ee1fbffff	                           jle 0x400547d	      4609	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_14
0x400589c	    0x817c2410ff00	           cmp dword [rsp + 0x10], 0xff 	      4609	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_14
0x40058a4	     0xf8ff6f9ffff	                            jg 0x40052a0	      4609	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_14
0x40058aa	      0xe9cefbffff	                           jmp 0x400547d	      4609	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_14
0x40058af	    0x488b3d000000	            mov rdi, qword [0x040058b6] 	      4621	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11	CALL_15
0x40058b6	      0xbe6a000000	                           mov esi, 0x6a	      4621	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11	CALL_15
0x40058bb	      0xe800000000	                          call 0x40058c0	      4621	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11	CALL_15
0x40058c0	          0x4885c0	                           test rax, rax	      4621	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11	CALL_15
0x40058c3	     0xf85d7f9ffff	                           jne 0x40052a0	      4621	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11	CALL_15
0x40058c9	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      4622	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x40058cd	          0x83f83f	                           cmp eax, 0x3f	      4622	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x40058d0	     0xf84d1fbffff	                            je 0x40054a7	      4622	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x40058d6	          0x83f821	                           cmp eax, 0x21	      4622	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x40058d9	     0xf85c1f9ffff	                           jne 0x40052a0	      4622	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x40058df	      0xe9c3fbffff	                           jmp 0x40054a7	      4622	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x40058e4	         0xf1f4000	                         nop dword [rax]	      4622	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x40058e8	    0xc74500202020	             mov dword [rbp], 0x20202020	        90	string3.h	FUNCTION_95	CALL_6
0x40058ef	    0xc74415fc2020	   mov dword [rbp + rdx - 4], 0x20202020	        90	string3.h	FUNCTION_95	CALL_6
0x40058f7	      0x488b442420	            mov rax, qword [rsp + 0x20] 	        90	string3.h	FUNCTION_95	CALL_6
0x40058fc	      0x420fb60420	             movzx eax, byte [rax + r12]	        90	string3.h	FUNCTION_95	CALL_6
0x4005901	      0xe92afdffff	                           jmp 0x4005630	        90	string3.h	FUNCTION_95	CALL_6
0x4005906	       0xfb644241c	           movzx eax, byte [rsp + 0x1c] 	      4660	ops.c	FUNCTION_55
0x400590b	        0x8b542438	            mov edx, dword [rsp + 0x38] 	      4726	ops.c	FUNCTION_55	CALL_31
0x400590f	            0x29c2	                            sub edx, eax	      4726	ops.c	FUNCTION_55	CALL_31
0x4005911	      0xe9cafeffff	                           jmp 0x40057e0	      4726	ops.c	FUNCTION_55	CALL_31
0x4005916	            0x31ed	                            xor ebp, ebp	      4573	ops.c	FUNCTION_55	FOR_1
0x4005918	      0xbf01000000	                              mov edi, 1	      4573	ops.c	FUNCTION_55	FOR_1
0x400591d	    0xc74424380000	               mov dword [rsp + 0x38], 0	      4573	ops.c	FUNCTION_55	FOR_1
0x4005925	    0xc74424040000	                  mov dword [rsp + 4], 0	      4534	ops.c	FUNCTION_55
0x400592d	          0x4531ed	                          xor r13d, r13d	      4528	ops.c	FUNCTION_55
0x4005930	            0x31db	                            xor ebx, ebx	      4527	ops.c	FUNCTION_55
0x4005932	      0xe9a5fcffff	                           jmp 0x40055dc	      4527	ops.c	FUNCTION_55
0x4005937	    0x41b820200000	                         mov r8d, 0x2020	        90	string3.h	FUNCTION_95	CALL_6
0x400593d	    0x6644894415fe	           mov word [rbp + rdx - 2], r8w	        90	string3.h	FUNCTION_95	CALL_6
0x4005943	      0x488b442420	            mov rax, qword [rsp + 0x20] 	        90	string3.h	FUNCTION_95	CALL_6
0x4005948	      0x420fb60420	             movzx eax, byte [rax + r12]	        90	string3.h	FUNCTION_95	CALL_6
0x400594d	      0xe9defcffff	                           jmp 0x4005630	        90	string3.h	FUNCTION_95	CALL_6
0x4005952	      0xe800000000	                          call 0x4005957	      4741	ops.c	FUNCTION_55
x11_export_final_selection	SWITCH,0:IF,8:WHILE,0:DO,0:FOR,0:ELSE,4:CALL,9:functions,0	99
0x4009d40	              0x55	                                push rbp	      6473	ops.c	FUNCTION_73
0x4009d41	              0x53	                                push rbx	      6473	ops.c	FUNCTION_73
0x4009d42	        0x4883ec48	                           sub rsp, 0x48	      6473	ops.c	FUNCTION_73
0x4009d46	    0x8b3500000000	            mov esi, dword [0x04009d4c] 	      6480	ops.c	FUNCTION_73	IF_1
0x4009d4c	    0x488b1d000000	            mov rbx, qword [0x04009d53] 	      6485	ops.c	FUNCTION_73	ELSE_1
0x4009d53	    0x64488b042528	                mov rax, qword fs:[0x28]	      6473	ops.c	FUNCTION_73
0x4009d5c	      0x4889442438	             mov qword [rsp + 0x38], rax	      6473	ops.c	FUNCTION_73
0x4009d61	            0x31c0	                            xor eax, eax	      6473	ops.c	FUNCTION_73
0x4009d63	    0x48c744241000	               mov qword [rsp + 0x10], 0	      6475	ops.c	FUNCTION_73
0x4009d6c	    0x48c744241800	               mov qword [rsp + 0x18], 0	      6476	ops.c	FUNCTION_73
0x4009d75	            0x85f6	                           test esi, esi	      6480	ops.c	FUNCTION_73	IF_1
0x4009d77	            0x7408	                            je 0x4009d81	      6480	ops.c	FUNCTION_73	IF_1
0x4009d79	      0xe800000000	                          call 0x4009d7e	      6481	ops.c	FUNCTION_73	IF_1
0x4009d7e	          0x4889c3	                            mov rbx, rax	      6481	ops.c	FUNCTION_73	IF_1
0x4009d81	    0x8b0d00000000	            mov ecx, dword [0x04009d87] 	      6491	ops.c	FUNCTION_73	IF_2
0x4009d87	            0x85c9	                           test ecx, ecx	      6491	ops.c	FUNCTION_73	IF_2
0x4009d89	            0x7535	                           jne 0x4009dc0	      6491	ops.c	FUNCTION_73	IF_2
0x4009d8b	    0x8b1500000000	            mov edx, dword [0x04009d91] 	      6493	ops.c	FUNCTION_73	ELSE_2	IF_3
0x4009d91	            0x85d2	                           test edx, edx	      6493	ops.c	FUNCTION_73	ELSE_2	IF_3
0x4009d93	     0xf8587000000	                           jne 0x4009e20	      6493	ops.c	FUNCTION_73	ELSE_2	IF_3
0x4009d99	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      6493	ops.c	FUNCTION_73	ELSE_2	IF_3
0x4009d9e	      0xe800000000	                          call 0x4009da3	      6547	ops.c	FUNCTION_73	CALL_9
0x4009da3	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      6548	ops.c	FUNCTION_73
0x4009da8	    0x644833042528	                xor rax, qword fs:[0x28]	      6548	ops.c	FUNCTION_73
0x4009db1	     0xf852e010000	                           jne 0x4009ee5	      6548	ops.c	FUNCTION_73
0x4009db7	        0x4883c448	                           add rsp, 0x48	      6548	ops.c	FUNCTION_73
0x4009dbb	              0x5b	                                 pop rbx	      6548	ops.c	FUNCTION_73
0x4009dbc	              0x5d	                                 pop rbp	      6548	ops.c	FUNCTION_73
0x4009dbd	              0xc3	                                     ret	      6548	ops.c	FUNCTION_73
0x4009dbe	            0x6690	                                     nop	      6548	ops.c	FUNCTION_73
0x4009dc0	      0x488d742418	                   lea rsi, [rsp + 0x18]	      6492	ops.c	FUNCTION_73	CALL_1
0x4009dc5	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      6492	ops.c	FUNCTION_73	CALL_1
0x4009dca	      0xba00000000	                              mov edx, 0	      6492	ops.c	FUNCTION_73	CALL_1
0x4009dcf	      0xe800000000	                          call 0x4009dd4	      6492	ops.c	FUNCTION_73	CALL_1
0x4009dd4	          0x4885db	                           test rbx, rbx	      6497	ops.c	FUNCTION_73	IF_4
0x4009dd7	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      6497	ops.c	FUNCTION_73	IF_4
0x4009ddc	            0x74c0	                            je 0x4009d9e	      6497	ops.c	FUNCTION_73	IF_4
0x4009dde	            0x85c0	                           test eax, eax	      6497	ops.c	FUNCTION_73	IF_4
0x4009de0	            0x78bc	                            js 0x4009d9e	      6497	ops.c	FUNCTION_73	IF_4
0x4009de2	          0x4885ff	                           test rdi, rdi	      6497	ops.c	FUNCTION_73	IF_4
0x4009de5	            0x74b7	                            je 0x4009d9e	      6497	ops.c	FUNCTION_73	IF_4
0x4009de7	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      6498	ops.c	FUNCTION_73	IF_4
0x4009dec	        0x488d42ff	                      lea rax, [rdx - 1]	      6498	ops.c	FUNCTION_73	IF_4
0x4009df0	    0x483dfeff0f00	                        cmp rax, 0xffffe	      6498	ops.c	FUNCTION_73	IF_4
0x4009df6	            0x77a6	                            ja 0x4009d9e	      6498	ops.c	FUNCTION_73	IF_4
0x4009df8	    0x8b0500000000	            mov eax, dword [0x04009dfe] 	      6507	ops.c	FUNCTION_73	IF_4	IF_5
0x4009dfe	            0x85c0	                           test eax, eax	      6507	ops.c	FUNCTION_73	IF_4	IF_5
0x4009e00	            0x753e	                           jne 0x4009e40	      6507	ops.c	FUNCTION_73	IF_4	IF_5
0x4009e02	          0x4889fe	                            mov rsi, rdi	      6542	ops.c	FUNCTION_73	IF_4	IF_8	CALL_7
0x4009e05	            0x31c9	                            xor ecx, ecx	      6542	ops.c	FUNCTION_73	IF_4	IF_8	CALL_7
0x4009e07	          0x4889df	                            mov rdi, rbx	      6542	ops.c	FUNCTION_73	IF_4	IF_8	CALL_7
0x4009e0a	      0xe800000000	                          call 0x4009e0f	      6542	ops.c	FUNCTION_73	IF_4	IF_8	CALL_7
0x4009e0f	          0x4889df	                            mov rdi, rbx	      6543	ops.c	FUNCTION_73	IF_4	IF_8	CALL_8
0x4009e12	      0xe800000000	                          call 0x4009e17	      6543	ops.c	FUNCTION_73	IF_4	IF_8	CALL_8
0x4009e17	      0xe97dffffff	                           jmp 0x4009d99	      6543	ops.c	FUNCTION_73	IF_4	IF_8	CALL_8
0x4009e1c	         0xf1f4000	                         nop dword [rax]	      6543	ops.c	FUNCTION_73	IF_4	IF_8	CALL_8
0x4009e20	      0x488d742418	                   lea rsi, [rsp + 0x18]	      6494	ops.c	FUNCTION_73	ELSE_2	IF_3
0x4009e25	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      6494	ops.c	FUNCTION_73	ELSE_2	IF_3
0x4009e2a	      0xba00000000	                              mov edx, 0	      6494	ops.c	FUNCTION_73	ELSE_2	IF_3
0x4009e2f	      0xe800000000	                          call 0x4009e34	      6494	ops.c	FUNCTION_73	ELSE_2	IF_3
0x4009e34	            0xeb9e	                           jmp 0x4009dd4	      6494	ops.c	FUNCTION_73	ELSE_2	IF_3
0x4009e36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6494	ops.c	FUNCTION_73	ELSE_2	IF_3
0x4009e40	    0x488b35000000	            mov rsi, qword [0x04009e47] 	      6512	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0x4009e47	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      6512	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0x4009e4c	      0xba00000000	                              mov edx, 0	      6512	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0x4009e51	    0xc74424200000	               mov dword [rsp + 0x20], 0	      6511	ops.c	FUNCTION_73	IF_4	IF_5
0x4009e59	      0xe800000000	                          call 0x4009e5e	      6512	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0x4009e5e	          0x83f801	                              cmp eax, 1	      6512	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0x4009e61	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      6512	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0x4009e66	     0xf8532ffffff	                           jne 0x4009d9e	      6512	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0x4009e6c	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      6514	ops.c	FUNCTION_73	IF_4	IF_5	IF_6
0x4009e71	          0x4889fe	                            mov rsi, rdi	      6518	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_4
0x4009e74	      0x488d54240c	                    lea rdx, [rsp + 0xc]	      6518	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_4
0x4009e79	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      6518	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_4
0x4009e7e	    0xc74424300100	               mov dword [rsp + 0x30], 1	      6517	ops.c	FUNCTION_73	IF_4	IF_5	IF_6
0x4009e86	        0x8944240c	              mov dword [rsp + 0xc], eax	      6514	ops.c	FUNCTION_73	IF_4	IF_5	IF_6
0x4009e8a	      0xe800000000	                          call 0x4009e8f	      6518	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_4
0x4009e8f	          0x4889c5	                            mov rbp, rax	      6518	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_4
0x4009e92	      0x486344240c	          movsxd rax, dword [rsp + 0xc] 	      6519	ops.c	FUNCTION_73	IF_4	IF_5	IF_6
0x4009e97	          0x4885ed	                           test rbp, rbp	      6520	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	IF_7
0x4009e9a	      0x4889442418	             mov qword [rsp + 0x18], rax	      6519	ops.c	FUNCTION_73	IF_4	IF_5	IF_6
0x4009e9f	            0x742c	                            je 0x4009ecd	      6520	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	IF_7
0x4009ea1	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      6522	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	IF_7	CALL_5
0x4009ea6	      0xe800000000	                          call 0x4009eab	      6522	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	IF_7	CALL_5
0x4009eab	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x4009eb0	            0x31d2	                            xor edx, edx	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x4009eb2	            0x31f6	                            xor esi, esi	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x4009eb4	      0x48896c2410	             mov qword [rsp + 0x10], rbp	      6523	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	IF_7
0x4009eb9	      0xe800000000	                          call 0x4009ebe	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x4009ebe	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x4009ec3	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x4009ec8	      0xe935ffffff	                           jmp 0x4009e02	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x4009ecd	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x4009ed2	            0x31d2	                            xor edx, edx	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x4009ed4	            0x31f6	                            xor esi, esi	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x4009ed6	      0xe800000000	                          call 0x4009edb	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x4009edb	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x4009ee0	      0xe9b9feffff	                           jmp 0x4009d9e	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x4009ee5	      0xe800000000	                          call 0x4009eea	      6548	ops.c	FUNCTION_73
stuffescaped	SWITCH,0:IF,4:WHILE,2:DO,0:FOR,0:ELSE,1:CALL,4:functions,0	67
0x4000680	              0x55	                                push rbp	      1466	ops.c	FUNCTION_27
0x4000681	              0x53	                                push rbx	      1466	ops.c	FUNCTION_27
0x4000682	            0x89f3	                            mov ebx, esi	      1466	ops.c	FUNCTION_27
0x4000684	        0x4883ec18	                           sub rsp, 0x18	      1466	ops.c	FUNCTION_27
0x4000688	      0x48897c2408	                mov qword [rsp + 8], rdi	      1466	ops.c	FUNCTION_27
0x400068d	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1466	ops.c	FUNCTION_27
0x4000692	           0xfb607	                   movzx eax, byte [rdi]	      1466	ops.c	FUNCTION_27
0x4000695	            0x84c0	                             test al, al	      1470	ops.c	FUNCTION_27	WHILE_1
0x4000697	            0x7434	                            je 0x40006cd	      1470	ops.c	FUNCTION_27	WHILE_1
0x4000699	            0x85db	                           test ebx, ebx	      1470	ops.c	FUNCTION_27	WHILE_1
0x400069b	          0x4889fe	                            mov rsi, rdi	      1470	ops.c	FUNCTION_27	WHILE_1
0x400069e	           0xf94c1	                                 sete cl	      1470	ops.c	FUNCTION_27	WHILE_1
0x40006a1	            0xeb15	                           jmp 0x40006b8	      1470	ops.c	FUNCTION_27	WHILE_1
0x40006a3	       0xf1f440000	                   nop dword [rax + rax]	      1470	ops.c	FUNCTION_27	WHILE_1
0x40006a8	            0x84c9	                             test cl, cl	      1481	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x40006aa	            0x7418	                            je 0x40006c4	      1481	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x40006ac	        0x4883c601	                              add rsi, 1	      1482	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x40006b0	      0x4889742408	                mov qword [rsp + 8], rsi	      1482	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x40006b5	           0xfb606	                   movzx eax, byte [rsi]	      1482	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x40006b8	          0x8d50e0	                   lea edx, [rax - 0x20]	      1476	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x40006bb	          0x80fa5e	                            cmp dl, 0x5e	      1476	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x40006be	            0x76ec	                           jbe 0x40006ac	      1476	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x40006c0	            0x3c80	                            cmp al, 0x80	      1481	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x40006c2	            0x74e4	                            je 0x40006a8	      1481	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x40006c4	          0x4839f7	                            cmp rdi, rsi	      1483	ops.c	FUNCTION_27	WHILE_1	IF_1
0x40006c7	            0x720f	                            jb 0x40006d8	      1483	ops.c	FUNCTION_27	WHILE_1	IF_1
0x40006c9	            0x84c0	                             test al, al	      1487	ops.c	FUNCTION_27	WHILE_1	IF_2
0x40006cb	            0x751f	                           jne 0x40006ec	      1487	ops.c	FUNCTION_27	WHILE_1	IF_2
0x40006cd	        0x4883c418	                           add rsp, 0x18	      1500	ops.c	FUNCTION_27
0x40006d1	              0x5b	                                 pop rbx	      1500	ops.c	FUNCTION_27
0x40006d2	              0x5d	                                 pop rbp	      1500	ops.c	FUNCTION_27
0x40006d3	              0xc3	                                     ret	      1500	ops.c	FUNCTION_27
0x40006d4	         0xf1f4000	                         nop dword [rax]	      1500	ops.c	FUNCTION_27
0x40006d8	          0x4829fe	                            sub rsi, rdi	      1484	ops.c	FUNCTION_27	WHILE_1	CALL_1
0x40006db	      0xe800000000	                          call 0x40006e0	      1484	ops.c	FUNCTION_27	WHILE_1	CALL_1
0x40006e0	      0x488b742408	                mov rsi, qword [rsp + 8]	      1484	ops.c	FUNCTION_27	WHILE_1	CALL_1
0x40006e5	           0xfb606	                   movzx eax, byte [rsi]	      1484	ops.c	FUNCTION_27	WHILE_1	CALL_1
0x40006e8	            0x84c0	                             test al, al	      1487	ops.c	FUNCTION_27	WHILE_1	IF_2
0x40006ea	            0x74e1	                            je 0x40006cd	      1487	ops.c	FUNCTION_27	WHILE_1	IF_2
0x40006ec	    0x8b0500000000	            mov eax, dword [0x040006f2] 	      1490	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_3
0x40006f2	            0x85c0	                           test eax, eax	      1490	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_3
0x40006f4	            0x7547	                           jne 0x400073d	      1490	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_3
0x40006f6	        0x488d4601	                      lea rax, [rsi + 1]	      1494	ops.c	FUNCTION_27	WHILE_1	IF_2	ELSE_1
0x40006fa	      0x4889442408	                mov qword [rsp + 8], rax	      1494	ops.c	FUNCTION_27	WHILE_1	IF_2	ELSE_1
0x40006ff	           0xfb62e	                   movzx ebp, byte [rsi]	      1494	ops.c	FUNCTION_27	WHILE_1	IF_2	ELSE_1
0x4000702	            0x85db	                           test ebx, ebx	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x4000704	            0x7415	                            je 0x400071b	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x4000706	          0x83fd1f	                           cmp ebp, 0x1f	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x4000709	           0xf9ec1	                                setle cl	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x400070c	          0x83fd09	                              cmp ebp, 9	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x400070f	           0xf95c2	                                setne dl	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x4000712	            0x84d1	                             test cl, dl	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x4000714	            0x7511	                           jne 0x4000727	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x4000716	          0x83fd7f	                           cmp ebp, 0x7f	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x4000719	            0x740c	                            je 0x4000727	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x400071b	            0x89ef	                            mov edi, ebp	      1497	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_4
0x400071d	      0xe800000000	                          call 0x4000722	      1497	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_4
0x4000722	      0xe966ffffff	                           jmp 0x400068d	      1497	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_4
0x4000727	      0xbf16000000	                           mov edi, 0x16	      1496	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_3
0x400072c	      0xe800000000	                          call 0x4000731	      1496	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_3
0x4000731	            0x89ef	                            mov edi, ebp	      1497	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_4
0x4000733	      0xe800000000	                          call 0x4000738	      1497	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_4
0x4000738	      0xe950ffffff	                           jmp 0x400068d	      1497	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_4
0x400073d	      0x488d7c2408	                      lea rdi, [rsp + 8]	      1491	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_2
0x4000742	      0xe800000000	                          call 0x4000747	      1491	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_2
0x4000747	            0x89c5	                            mov ebp, eax	      1491	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_2
0x4000749	            0xebb7	                           jmp 0x4000702	      1491	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_2
insert_reg	SWITCH,0:IF,9:WHILE,0:DO,0:FOR,1:ELSE,3:CALL,10:functions,0	96
0x4007bf0	              0x55	                                push rbp	      1402	ops.c	FUNCTION_26
0x4007bf1	              0x53	                                push rbx	      1402	ops.c	FUNCTION_26
0x4007bf2	            0x89f5	                            mov ebp, esi	      1402	ops.c	FUNCTION_26
0x4007bf4	            0x89fb	                            mov ebx, edi	      1402	ops.c	FUNCTION_26
0x4007bf6	        0x4883ec28	                           sub rsp, 0x28	      1402	ops.c	FUNCTION_26
0x4007bfa	    0x64488b042528	                mov rax, qword fs:[0x28]	      1402	ops.c	FUNCTION_26
0x4007c03	      0x4889442418	             mov qword [rsp + 0x18], rax	      1402	ops.c	FUNCTION_26
0x4007c08	            0x31c0	                            xor eax, eax	      1402	ops.c	FUNCTION_26
0x4007c0a	      0xe800000000	                          call 0x4007c0f	      1414	ops.c	FUNCTION_26	CALL_1
0x4007c0f	    0x8b0500000000	            mov eax, dword [0x04007c15] 	      1415	ops.c	FUNCTION_26	IF_1
0x4007c15	            0x85c0	                           test eax, eax	      1415	ops.c	FUNCTION_26	IF_1
0x4007c17	            0x7564	                           jne 0x4007c7d	      1415	ops.c	FUNCTION_26	IF_1
0x4007c19	            0x85db	                           test ebx, ebx	      1419	ops.c	FUNCTION_26	IF_2	CALL_2
0x4007c1b	            0x7553	                           jne 0x4007c70	      1419	ops.c	FUNCTION_26	IF_2	CALL_2
0x4007c1d	            0x89df	                            mov edi, ebx	      1423	ops.c	FUNCTION_26	CALL_3
0x4007c1f	      0xe800000000	                          call 0x4007c24	      1423	ops.c	FUNCTION_26	CALL_3
0x4007c24	          0x83f82e	                           cmp eax, 0x2e	      1426	ops.c	FUNCTION_26	IF_3
0x4007c27	            0x89c3	                            mov ebx, eax	      1423	ops.c	FUNCTION_26	CALL_3
0x4007c29	     0xf8401010000	                            je 0x4007d30	      1426	ops.c	FUNCTION_26	IF_3
0x4007c2f	      0x488d54240c	                    lea rdx, [rsp + 0xc]	      1428	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x4007c34	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1428	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x4007c39	      0xb901000000	                              mov ecx, 1	      1428	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x4007c3e	            0x89c7	                            mov edi, eax	      1428	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x4007c40	      0xe800000000	                          call 0x4007c45	      1428	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x4007c45	            0x85c0	                           test eax, eax	      1428	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x4007c47	            0x7467	                            je 0x4007cb0	      1428	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x4007c49	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1430	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_5
0x4007c4e	          0x4885ff	                           test rdi, rdi	      1430	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_5
0x4007c51	            0x742a	                            je 0x4007c7d	      1430	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_5
0x4007c53	            0x89ee	                            mov esi, ebp	      1432	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_6
0x4007c55	      0xe8268affff	                   call sym.stuffescaped	      1432	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_6
0x4007c5a	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      1433	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_6
0x4007c5e	            0x85c0	                           test eax, eax	      1433	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_6
0x4007c60	            0x753e	                           jne 0x4007ca0	      1433	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_6
0x4007c62	      0xb801000000	                              mov eax, 1	      1404	ops.c	FUNCTION_26
0x4007c67	            0xeb16	                           jmp 0x4007c7f	      1404	ops.c	FUNCTION_26
0x4007c69	     0xf1f80000000	                         nop dword [rax]	      1404	ops.c	FUNCTION_26
0x4007c70	            0x31f6	                            xor esi, esi	      1419	ops.c	FUNCTION_26	IF_2	CALL_2
0x4007c72	            0x89df	                            mov edi, ebx	      1419	ops.c	FUNCTION_26	IF_2	CALL_2
0x4007c74	      0xe800000000	                          call 0x4007c79	      1419	ops.c	FUNCTION_26	IF_2	CALL_2
0x4007c79	            0x85c0	                           test eax, eax	      1419	ops.c	FUNCTION_26	IF_2	CALL_2
0x4007c7b	            0x75a0	                           jne 0x4007c1d	      1419	ops.c	FUNCTION_26	IF_2	CALL_2
0x4007c7d	            0x31c0	                            xor eax, eax	      1416	ops.c	FUNCTION_26	IF_1
0x4007c7f	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1458	ops.c	FUNCTION_26
0x4007c84	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1458	ops.c	FUNCTION_26
0x4007c8d	     0xf85b3000000	                           jne 0x4007d46	      1458	ops.c	FUNCTION_26
0x4007c93	        0x4883c428	                           add rsp, 0x28	      1458	ops.c	FUNCTION_26
0x4007c97	              0x5b	                                 pop rbx	      1458	ops.c	FUNCTION_26
0x4007c98	              0x5d	                                 pop rbp	      1458	ops.c	FUNCTION_26
0x4007c99	              0xc3	                                     ret	      1458	ops.c	FUNCTION_26
0x4007c9a	    0x660f1f440000	                    nop word [rax + rax]	      1458	ops.c	FUNCTION_26
0x4007ca0	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1434	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_7
0x4007ca5	      0xe800000000	                          call 0x4007caa	      1434	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_7
0x4007caa	            0xebb6	                           jmp 0x4007c62	      1434	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_7
0x4007cac	         0xf1f4000	                         nop dword [rax]	      1434	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_7
0x4007cb0	            0x31f6	                            xor esi, esi	      1438	ops.c	FUNCTION_26	ELSE_2	IF_7	CALL_8
0x4007cb2	            0x89df	                            mov edi, ebx	      1438	ops.c	FUNCTION_26	ELSE_2	IF_7	CALL_8
0x4007cb4	      0xe800000000	                          call 0x4007cb9	      1438	ops.c	FUNCTION_26	ELSE_2	IF_7	CALL_8
0x4007cb9	    0x488b15000000	            mov rdx, qword [0x04007cc0] 	      1440	ops.c	FUNCTION_26	ELSE_2	IF_8
0x4007cc0	            0x85c0	                           test eax, eax	      1439	ops.c	FUNCTION_26	ELSE_2	IF_7
0x4007cc2	      0xb801000000	                              mov eax, 1	      1439	ops.c	FUNCTION_26	ELSE_2	IF_7
0x4007cc7	           0xf45e8	                         cmovne ebp, eax	      1439	ops.c	FUNCTION_26	ELSE_2	IF_7
0x4007cca	          0x488b02	                    mov rax, qword [rdx]	      1440	ops.c	FUNCTION_26	ELSE_2	IF_8
0x4007ccd	          0x4885c0	                           test rax, rax	      1440	ops.c	FUNCTION_26	ELSE_2	IF_8
0x4007cd0	            0x74ab	                            je 0x4007c7d	      1440	ops.c	FUNCTION_26	ELSE_2	IF_8
0x4007cd2	      0x48837a0800	                  cmp qword [rdx + 8], 0	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x4007cd7	            0x7e89	                           jle 0x4007c62	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x4007cd9	            0x31db	                            xor ebx, ebx	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x4007cdb	            0xeb06	                           jmp 0x4007ce3	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x4007cdd	           0xf1f00	                         nop dword [rax]	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x4007ce0	          0x488b00	                    mov rax, qword [rax]	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x4007ce3	        0x488b3cd8	            mov rdi, qword [rax + rbx*8]	      1446	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_9
0x4007ce7	            0x89ee	                            mov esi, ebp	      1446	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_9
0x4007ce9	      0xe89289ffff	                   call sym.stuffescaped	      1446	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_9
0x4007cee	    0x488b05000000	            mov rax, qword [0x04007cf5] 	      1451	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_9
0x4007cf5	        0x80781001	                cmp byte [rax + 0x10], 1	      1451	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_9
0x4007cf9	            0x740d	                            je 0x4007d08	      1451	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_9
0x4007cfb	        0x488b5008	                mov rdx, qword [rax + 8]	      1451	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_9
0x4007cff	        0x488d4aff	                      lea rcx, [rdx - 1]	      1451	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_9
0x4007d03	          0x4839d9	                            cmp rcx, rbx	      1451	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_9
0x4007d06	            0x7e15	                           jle 0x4007d1d	      1451	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_9
0x4007d08	      0xbf0a000000	                            mov edi, 0xa	      1452	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_10
0x4007d0d	      0xe800000000	                          call 0x4007d12	      1452	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_10
0x4007d12	    0x488b05000000	            mov rax, qword [0x04007d19] 	      1452	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_10
0x4007d19	        0x488b5008	                mov rdx, qword [rax + 8]	      1452	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_10
0x4007d1d	        0x4883c301	                              add rbx, 1	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x4007d21	          0x4839d3	                            cmp rbx, rdx	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x4007d24	            0x7cba	                            jl 0x4007ce0	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x4007d26	      0xe937ffffff	                           jmp 0x4007c62	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x4007d2b	       0xf1f440000	                   nop dword [rax + rax]	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x4007d30	      0xba01000000	                              mov edx, 1	      1427	ops.c	FUNCTION_26	CALL_4
0x4007d35	      0xbe01000000	                              mov esi, 1	      1427	ops.c	FUNCTION_26	CALL_4
0x4007d3a	            0x31ff	                            xor edi, edi	      1427	ops.c	FUNCTION_26	CALL_4
0x4007d3c	      0xe800000000	                          call 0x4007d41	      1427	ops.c	FUNCTION_26	CALL_4
0x4007d41	      0xe939ffffff	                           jmp 0x4007c7f	      1427	ops.c	FUNCTION_26	CALL_4
0x4007d46	      0xe800000000	                          call 0x4007d4b	      1458	ops.c	FUNCTION_26
ends_in_white	SWITCH,0:IF,1:WHILE,0:DO,0:FOR,0:ELSE,0:CALL,3:functions,0	17
0x4000040	              0x53	                                push rbx	      5231	ops.c	FUNCTION_61
0x4000041	      0xe800000000	                          call 0x4000046	      5232	ops.c	FUNCTION_61	CALL_1
0x4000046	          0x4889c3	                            mov rbx, rax	      5232	ops.c	FUNCTION_61	CALL_1
0x4000049	            0x31c0	                            xor eax, eax	      5232	ops.c	FUNCTION_61	CALL_1
0x400004b	          0x803b00	                       cmp byte [rbx], 0	      5235	ops.c	FUNCTION_61	IF_1
0x400004e	            0x741e	                            je 0x400006e	      5235	ops.c	FUNCTION_61	IF_1
0x4000050	          0x4889df	                            mov rdi, rbx	      5239	ops.c	FUNCTION_61	CALL_2
0x4000053	      0xe800000000	                          call 0x4000058	      5239	ops.c	FUNCTION_61	CALL_2
0x4000058	       0xfb65403ff	         movzx edx, byte [rbx + rax - 1]	      5240	ops.c	FUNCTION_61	CALL_3
0x400005d	          0x80fa20	                            cmp dl, 0x20	      5240	ops.c	FUNCTION_61	CALL_3
0x4000060	           0xf94c1	                                 sete cl	      5240	ops.c	FUNCTION_61	CALL_3
0x4000063	          0x80fa09	                               cmp dl, 9	      5240	ops.c	FUNCTION_61	CALL_3
0x4000066	           0xf94c0	                                 sete al	      5240	ops.c	FUNCTION_61	CALL_3
0x4000069	             0x9c8	                             or eax, ecx	      5240	ops.c	FUNCTION_61	CALL_3
0x400006b	           0xfb6c0	                           movzx eax, al	      5240	ops.c	FUNCTION_61	CALL_3
0x400006e	              0x5b	                                 pop rbx	      5241	ops.c	FUNCTION_61
0x400006f	              0xc3	                                     ret	      5241	ops.c	FUNCTION_61
write_reg_contents	SWITCH,0:IF,0:WHILE,0:DO,0:FOR,0:ELSE,0:CALL,1:functions,0	3
0x400bef0	          0x4531c9	                            xor r9d, r9d	      6994	ops.c	FUNCTION_85	CALL_1
0x400bef3	    0x41b8ff000000	                           mov r8d, 0xff	      6994	ops.c	FUNCTION_85	CALL_1
0x400bef9	      0xe9d2fdffff	           jmp sym.write_reg_contents_ex	      6994	ops.c	FUNCTION_85	CALL_1
op_format	SWITCH,0:IF,6:WHILE,0:DO,0:FOR,0:ELSE,0:CALL,5:functions,1	106
0x40060d0	            0x4155	                                push r13	      4828	ops.c	FUNCTION_57
0x40060d2	            0x4154	                                push r12	      4828	ops.c	FUNCTION_57
0x40060d4	          0x4189f4	                           mov r12d, esi	      4828	ops.c	FUNCTION_57
0x40060d7	              0x55	                                push rbp	      4828	ops.c	FUNCTION_57
0x40060d8	              0x53	                                push rbx	      4828	ops.c	FUNCTION_57
0x40060d9	          0x4889fb	                            mov rbx, rdi	      4828	ops.c	FUNCTION_57
0x40060dc	        0x4883ec08	                              sub rsp, 8	      4828	ops.c	FUNCTION_57
0x40060e0	    0x488b05000000	            mov rax, qword [0x040060e7] 	      4829	ops.c	FUNCTION_57
0x40060e7	        0x488b7740	            mov rsi, qword [rdi + 0x40] 	      4833	ops.c	FUNCTION_57
0x40060eb	        0x488b7f48	            mov rdi, qword [rdi + 0x48] 	      4833	ops.c	FUNCTION_57
0x40060ef	          0x4c8b28	                    mov r13, qword [rax]	      4829	ops.c	FUNCTION_57
0x40060f2	    0x488b05000000	            mov rax, qword [0x040060f9] 	      4833	ops.c	FUNCTION_57
0x40060f9	        0x48897038	             mov qword [rax + 0x38], rsi	      4833	ops.c	FUNCTION_57
0x40060fd	        0x48897840	             mov qword [rax + 0x40], rdi	      4833	ops.c	FUNCTION_57
0x4006101	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      4835	ops.c	FUNCTION_57	IF_1	CALL_1
0x4006105	        0x488d7001	                      lea rsi, [rax + 1]	      4835	ops.c	FUNCTION_57	IF_1	CALL_1
0x4006109	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      4835	ops.c	FUNCTION_57	IF_1	CALL_1
0x400610d	        0x488d78ff	                      lea rdi, [rax - 1]	      4835	ops.c	FUNCTION_57	IF_1	CALL_1
0x4006111	      0xe800000000	                          call 0x4006116	      4835	ops.c	FUNCTION_57	IF_1	CALL_1
0x4006116	            0x85c0	                           test eax, eax	      4835	ops.c	FUNCTION_57	IF_1	CALL_1
0x4006118	     0xf8434010000	                            je 0x4006252	      4835	ops.c	FUNCTION_57	IF_1	CALL_1
0x400611e	    0x488b0d000000	            mov rcx, qword [0x04006125] 	      4838	ops.c	FUNCTION_57
0x4006125	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      4838	ops.c	FUNCTION_57
0x4006129	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      4838	ops.c	FUNCTION_57
0x400612d	        0x48894138	             mov qword [rcx + 0x38], rax	      4838	ops.c	FUNCTION_57
0x4006131	        0x48895140	             mov qword [rcx + 0x40], rdx	      4838	ops.c	FUNCTION_57
0x4006135	          0x8b4b5c	            mov ecx, dword [rbx + 0x5c] 	      4840	ops.c	FUNCTION_57	IF_2
0x4006138	            0x85c9	                           test ecx, ecx	      4840	ops.c	FUNCTION_57	IF_2
0x400613a	     0xf8520010000	                           jne 0x4006260	      4840	ops.c	FUNCTION_57	IF_2
0x4006140	    0x488b0d000000	            mov rcx, qword [0x04006147] 	      4845	ops.c	FUNCTION_57
0x4006147	          0x4585e4	                         test r12d, r12d	      4849	ops.c	FUNCTION_57	IF_3
0x400614a	    0x488981e01100	          mov qword [rcx + 0x11e0], rax 	      4845	ops.c	FUNCTION_57
0x4006151	    0x488991e81100	          mov qword [rcx + 0x11e8], rdx 	      4845	ops.c	FUNCTION_57
0x4006158	            0x7416	                            je 0x4006170	      4849	ops.c	FUNCTION_57	IF_3
0x400615a	        0x488b4340	            mov rax, qword [rbx + 0x40] 	      4850	ops.c	FUNCTION_57	IF_3
0x400615e	        0x488b5348	            mov rdx, qword [rbx + 0x48] 	      4850	ops.c	FUNCTION_57	IF_3
0x4006162	    0x488905000000	            mov qword [0x04006169], rax 	      4850	ops.c	FUNCTION_57	IF_3
0x4006169	    0x488915000000	            mov qword [0x04006170], rdx 	      4850	ops.c	FUNCTION_57	IF_3
0x4006170	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      4852	ops.c	FUNCTION_57	CALL_3
0x4006174	          0x4489e6	                           mov esi, r12d	      4852	ops.c	FUNCTION_57	CALL_3
0x4006177	      0xe800000000	                          call 0x400617c	      4852	ops.c	FUNCTION_57	CALL_3
0x400617c	          0x8b5318	            mov edx, dword [rbx + 0x18] 	      4859	ops.c	FUNCTION_57	IF_4
0x400617f	            0x85d2	                           test edx, edx	      4859	ops.c	FUNCTION_57	IF_4
0x4006181	            0x741f	                            je 0x40061a2	      4859	ops.c	FUNCTION_57	IF_4
0x4006183	    0x488b15000000	            mov rdx, qword [0x0400618a] 	      4859	ops.c	FUNCTION_57	IF_4
0x400618a	    0x488b0d000000	            mov rcx, qword [0x04006191] 	      4859	ops.c	FUNCTION_57	IF_4
0x4006191	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      4859	ops.c	FUNCTION_57	IF_4
0x4006195	          0x483b01	                    cmp rax, qword [rcx]	      4859	ops.c	FUNCTION_57	IF_4
0x4006198	            0x7d08	                           jge 0x40061a2	      4859	ops.c	FUNCTION_57	IF_4
0x400619a	        0x4883c001	                              add rax, 1	      4860	ops.c	FUNCTION_57	IF_4
0x400619e	        0x48894238	             mov qword [rdx + 0x38], rax	      4860	ops.c	FUNCTION_57	IF_4
0x40061a2	      0xbf05000000	                              mov edi, 5	      4861	ops.c	FUNCTION_57	CALL_4
0x40061a7	      0xe800000000	                          call 0x40061ac	      4861	ops.c	FUNCTION_57	CALL_4
0x40061ac	    0x488b05000000	            mov rax, qword [0x040061b3] 	      4862	ops.c	FUNCTION_57
0x40061b3	          0x488b28	                    mov rbp, qword [rax]	      4862	ops.c	FUNCTION_57
0x40061b6	          0x4c29ed	                            sub rbp, r13	      4862	ops.c	FUNCTION_57
0x40061b9	          0x4889ef	                            mov rdi, rbp	      4863	ops.c	FUNCTION_57	CALL_5
0x40061bc	      0xe800000000	                          call 0x40061c1	      4863	ops.c	FUNCTION_57	CALL_5
0x40061c1	    0x488b05000000	            mov rax, qword [0x040061c8] 	      4866	ops.c	FUNCTION_57
0x40061c8	    0x488b15000000	            mov rdx, qword [0x040061cf] 	      4866	ops.c	FUNCTION_57
0x40061cf	          0x4585e4	                         test r12d, r12d	      4868	ops.c	FUNCTION_57	IF_5
0x40061d2	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      4866	ops.c	FUNCTION_57
0x40061d6	        0x488b7840	            mov rdi, qword [rax + 0x40] 	      4866	ops.c	FUNCTION_57
0x40061da	    0x4889b2001200	          mov qword [rdx + 0x1200], rsi 	      4866	ops.c	FUNCTION_57
0x40061e1	    0x4889ba081200	          mov qword [rdx + 0x1208], rdi 	      4866	ops.c	FUNCTION_57
0x40061e8	            0x7421	                            je 0x400620b	      4868	ops.c	FUNCTION_57	IF_5
0x40061ea	    0x488b35000000	            mov rsi, qword [0x040061f1] 	      4870	ops.c	FUNCTION_57	IF_5
0x40061f1	    0x488b3d000000	            mov rdi, qword [0x040061f8] 	      4870	ops.c	FUNCTION_57	IF_5
0x40061f8	    0x48c705000000	               mov qword [0x04006203], 0	      4871	ops.c	FUNCTION_57	IF_5
0x4006203	        0x48897038	             mov qword [rax + 0x38], rsi	      4870	ops.c	FUNCTION_57	IF_5
0x4006207	        0x48897840	             mov qword [rax + 0x40], rdi	      4870	ops.c	FUNCTION_57	IF_5
0x400620b	          0x8b435c	            mov eax, dword [rbx + 0x5c] 	      4874	ops.c	FUNCTION_57	IF_6
0x400620e	            0x85c0	                           test eax, eax	      4874	ops.c	FUNCTION_57	IF_6
0x4006210	            0x7440	                            je 0x4006252	      4874	ops.c	FUNCTION_57	IF_6
0x4006212	    0x488b05000000	            mov rax, qword [0x04006219] 	      4878	ops.c	FUNCTION_57	IF_6
0x4006219	          0x4885c0	                           test rax, rax	      4878	ops.c	FUNCTION_57	IF_6
0x400621c	            0x7512	                           jne 0x4006230	      4878	ops.c	FUNCTION_57	IF_6
0x400621e	            0xeb32	                           jmp 0x4006252	      4878	ops.c	FUNCTION_57	IF_6
0x4006220	          0x4801ea	                            add rdx, rbp	      4885	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x4006223	        0x48895058	             mov qword [rax + 0x58], rdx	      4885	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x4006227	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4878	ops.c	FUNCTION_57	IF_6
0x400622b	          0x4885c0	                           test rax, rax	      4878	ops.c	FUNCTION_57	IF_6
0x400622e	            0x7422	                            je 0x4006252	      4878	ops.c	FUNCTION_57	IF_6
0x4006230	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      4880	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1
0x4006234	          0x4885d2	                           test rdx, rdx	      4880	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1
0x4006237	            0x74ee	                            je 0x4006227	      4880	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1
0x4006239	        0x488b4868	            mov rcx, qword [rax + 0x68] 	      4884	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x400623d	          0x4839ca	                            cmp rdx, rcx	      4884	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x4006240	            0x7fde	                            jg 0x4006220	      4884	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x4006242	          0x4801e9	                            add rcx, rbp	      4887	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	ELSE_1
0x4006245	        0x48894868	             mov qword [rax + 0x68], rcx	      4887	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	ELSE_1
0x4006249	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4878	ops.c	FUNCTION_57	IF_6
0x400624d	          0x4885c0	                           test rax, rax	      4878	ops.c	FUNCTION_57	IF_6
0x4006250	            0x75de	                           jne 0x4006230	      4878	ops.c	FUNCTION_57	IF_6
0x4006252	        0x4883c408	                              add rsp, 8	      4891	ops.c	FUNCTION_57	ELSE_1
0x4006256	              0x5b	                                 pop rbx	      4891	ops.c	FUNCTION_57	ELSE_1
0x4006257	              0x5d	                                 pop rbp	      4891	ops.c	FUNCTION_57	ELSE_1
0x4006258	            0x415c	                                 pop r12	      4891	ops.c	FUNCTION_57	ELSE_1
0x400625a	            0x415d	                                 pop r13	      4891	ops.c	FUNCTION_57	ELSE_1
0x400625c	              0xc3	                                     ret	      4891	ops.c	FUNCTION_57	ELSE_1
0x400625d	           0xf1f00	                         nop dword [rax]	      4891	ops.c	FUNCTION_57	ELSE_1
0x4006260	      0xbf14000000	                           mov edi, 0x14	      4842	ops.c	FUNCTION_57	CALL_2
0x4006265	      0xe800000000	                          call 0x400626a	      4842	ops.c	FUNCTION_57	CALL_2
0x400626a	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      4842	ops.c	FUNCTION_57	CALL_2
0x400626e	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      4842	ops.c	FUNCTION_57	CALL_2
0x4006272	      0xe9c9feffff	                           jmp 0x4006140	      4842	ops.c	FUNCTION_57	CALL_2
copy_yank_reg	SWITCH,0:IF,2:WHILE,0:DO,0:FOR,1:ELSE,1:CALL,4:functions,0	57
0x4000750	            0x4154	                                push r12	      3426	ops.c	FUNCTION_47
0x4000752	    0x4c8b25000000	            mov r12, qword [0x04000759] 	      3427	ops.c	FUNCTION_47
0x4000759	              0x55	                                push rbp	      3426	ops.c	FUNCTION_47
0x400075a	    0x48893d000000	            mov qword [0x04000761], rdi 	      3430	ops.c	FUNCTION_47
0x4000761	              0x53	                                push rbx	      3426	ops.c	FUNCTION_47
0x4000762	        0x488b7f08	                mov rdi, qword [rdi + 8]	      3045	ops.c	FUNCTION_44	CALL_1
0x4000766	      0xe875fcffff	                      call sym.free_yank	      3045	ops.c	FUNCTION_44	CALL_1
0x400076b	    0x488b1d000000	            mov rbx, qword [0x04000772] 	      3432	ops.c	FUNCTION_47
0x4000772	        0x498b0424	                    mov rax, qword [r12]	      3432	ops.c	FUNCTION_47
0x4000776	      0xbe01000000	                              mov esi, 1	      3433	ops.c	FUNCTION_47	CALL_2
0x400077b	          0x488903	                    mov qword [rbx], rax	      3432	ops.c	FUNCTION_47
0x400077e	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      3432	ops.c	FUNCTION_47
0x4000783	        0x48897b08	                mov qword [rbx + 8], rdi	      3432	ops.c	FUNCTION_47
0x4000787	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      3432	ops.c	FUNCTION_47
0x400078c	        0x48c1e703	                              shl rdi, 3	      3433	ops.c	FUNCTION_47	CALL_2
0x4000790	        0x48894310	             mov qword [rbx + 0x10], rax	      3432	ops.c	FUNCTION_47
0x4000794	      0x498b442418	            mov rax, qword [r12 + 0x18] 	      3432	ops.c	FUNCTION_47
0x4000799	        0x48894318	             mov qword [rbx + 0x18], rax	      3432	ops.c	FUNCTION_47
0x400079d	      0xe800000000	                          call 0x40007a2	      3433	ops.c	FUNCTION_47	CALL_2
0x40007a2	    0x488b15000000	            mov rdx, qword [0x040007a9] 	      3435	ops.c	FUNCTION_47	IF_1
0x40007a9	          0x488903	                    mov qword [rbx], rax	      3433	ops.c	FUNCTION_47	CALL_2
0x40007ac	          0x488b02	                    mov rax, qword [rdx]	      3435	ops.c	FUNCTION_47	IF_1
0x40007af	          0x4885c0	                           test rax, rax	      3435	ops.c	FUNCTION_47	IF_1
0x40007b2	            0x7464	                            je 0x4000818	      3435	ops.c	FUNCTION_47	IF_1
0x40007b4	      0x48837a0800	                  cmp qword [rdx + 8], 0	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x40007b9	            0x7e4a	                           jle 0x4000805	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x40007bb	            0x31db	                            xor ebx, ebx	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x40007bd	            0xeb15	                           jmp 0x40007d4	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x40007bf	              0x90	                                     nop	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x40007c0	    0x488b05000000	            mov rax, qword [0x040007c7] 	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x40007c7	        0x4883c301	                              add rbx, 1	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x40007cb	        0x48395808	                cmp qword [rax + 8], rbx	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x40007cf	            0x7e34	                           jle 0x4000805	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x40007d1	          0x488b00	                    mov rax, qword [rax]	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x40007d4	        0x488d2cd8	                  lea rbp, [rax + rbx*8]	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x40007d8	        0x498b0424	                    mov rax, qword [r12]	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x40007dc	        0x488b3cd8	            mov rdi, qword [rax + rbx*8]	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x40007e0	      0xe800000000	                          call 0x40007e5	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x40007e5	          0x4885c0	                           test rax, rax	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x40007e8	        0x48894500	                    mov qword [rbp], rax	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x40007ec	            0x75d2	                           jne 0x40007c0	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x40007ee	          0x4889df	                            mov rdi, rbx	      3441	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_4
0x40007f1	      0xe8eafbffff	                      call sym.free_yank	      3441	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_4
0x40007f6	    0x488b05000000	            mov rax, qword [0x040007fd] 	      3442	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2
0x40007fd	    0x48c740080000	                  mov qword [rax + 8], 0	      3442	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2
0x4000805	              0x5b	                                 pop rbx	      3446	ops.c	FUNCTION_47
0x4000806	    0x4c8925000000	            mov qword [0x0400080d], r12 	      3445	ops.c	FUNCTION_47
0x400080d	              0x5d	                                 pop rbp	      3446	ops.c	FUNCTION_47
0x400080e	            0x415c	                                 pop r12	      3446	ops.c	FUNCTION_47
0x4000810	              0xc3	                                     ret	      3446	ops.c	FUNCTION_47
0x4000811	     0xf1f80000000	                         nop dword [rax]	      3446	ops.c	FUNCTION_47
0x4000818	    0x48c742080000	                  mov qword [rdx + 8], 0	      3436	ops.c	FUNCTION_47	IF_1
0x4000820	    0x4c8925000000	            mov qword [0x04000827], r12 	      3445	ops.c	FUNCTION_47
0x4000827	              0x5b	                                 pop rbx	      3446	ops.c	FUNCTION_47
0x4000828	              0x5d	                                 pop rbp	      3446	ops.c	FUNCTION_47
0x4000829	            0x415c	                                 pop r12	      3446	ops.c	FUNCTION_47
0x400082b	              0xc3	                                     ret	      3446	ops.c	FUNCTION_47
put_reedit_in_typebuf	SWITCH,0:IF,3:WHILE,0:DO,0:FOR,0:ELSE,1:CALL,1:functions,0	34
0x40004e0	        0x4883ec18	                           sub rsp, 0x18	      1332	ops.c	FUNCTION_24
0x40004e4	    0x64488b042528	                mov rax, qword fs:[0x28]	      1332	ops.c	FUNCTION_24
0x40004ed	      0x4889442408	                mov qword [rsp + 8], rax	      1332	ops.c	FUNCTION_24
0x40004f2	            0x31c0	                            xor eax, eax	      1332	ops.c	FUNCTION_24
0x40004f4	    0x8b0500000000	            mov eax, dword [0x040004fa] 	      1335	ops.c	FUNCTION_24	IF_1
0x40004fa	            0x85c0	                           test eax, eax	      1335	ops.c	FUNCTION_24	IF_1
0x40004fc	            0x743e	                            je 0x400053c	      1335	ops.c	FUNCTION_24	IF_1
0x40004fe	          0x83f856	                           cmp eax, 0x56	      1337	ops.c	FUNCTION_24	IF_1	IF_2
0x4000501	            0x7455	                            je 0x4000558	      1337	ops.c	FUNCTION_24	IF_1	IF_2
0x4000503	          0x83f849	                           cmp eax, 0x49	      1345	ops.c	FUNCTION_24	IF_1	ELSE_1
0x4000506	      0xba69000000	                           mov edx, 0x69	      1345	ops.c	FUNCTION_24	IF_1	ELSE_1
0x400050b	      0xc644240100	                   mov byte [rsp + 1], 0	      1346	ops.c	FUNCTION_24	IF_1	ELSE_1
0x4000510	           0xf44c2	                          cmove eax, edx	      1345	ops.c	FUNCTION_24	IF_1	ELSE_1
0x4000513	          0x880424	                      mov byte [rsp], al	      1345	ops.c	FUNCTION_24	IF_1	ELSE_1
0x4000516	          0x4189f8	                            mov r8d, edi	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x4000519	            0x31d2	                            xor edx, edx	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x400051b	      0xb901000000	                              mov ecx, 1	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x4000520	      0xbeffffffff	                     mov esi, 0xffffffff	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x4000525	          0x4889e7	                            mov rdi, rsp	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x4000528	      0xe800000000	                          call 0x400052d	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x400052d	          0x83f801	                              cmp eax, 1	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x4000530	            0x750a	                           jne 0x400053c	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x4000532	    0xc70500000000	               mov dword [0x0400053c], 0	      1349	ops.c	FUNCTION_24	IF_1	IF_3
0x400053c	      0x488b442408	                mov rax, qword [rsp + 8]	      1351	ops.c	FUNCTION_24
0x4000541	    0x644833042528	                xor rax, qword fs:[0x28]	      1351	ops.c	FUNCTION_24
0x400054a	            0x751c	                           jne 0x4000568	      1351	ops.c	FUNCTION_24
0x400054c	        0x4883c418	                           add rsp, 0x18	      1351	ops.c	FUNCTION_24
0x4000550	              0xc3	                                     ret	      1351	ops.c	FUNCTION_24
0x4000551	     0xf1f80000000	                         nop dword [rax]	      1351	ops.c	FUNCTION_24
0x4000558	        0xc6042467	                    mov byte [rsp], 0x67	      1339	ops.c	FUNCTION_24	IF_1	IF_2
0x400055c	      0xc644240152	                mov byte [rsp + 1], 0x52	      1340	ops.c	FUNCTION_24	IF_1	IF_2
0x4000561	      0xc644240200	                   mov byte [rsp + 2], 0	      1341	ops.c	FUNCTION_24	IF_1	IF_2
0x4000566	            0xebae	                           jmp 0x4000516	      1341	ops.c	FUNCTION_24	IF_1	IF_2
0x4000568	      0xe800000000	                          call 0x400056d	      1351	ops.c	FUNCTION_24
cmdline_paste_reg	SWITCH,0:IF,4:WHILE,0:DO,0:FOR,1:ELSE,0:CALL,4:functions,0	58
0x4002e10	            0x4154	                                push r12	      1606	ops.c	FUNCTION_29
0x4002e12	              0x55	                                push rbp	      1606	ops.c	FUNCTION_29
0x4002e13	            0x89f5	                            mov ebp, esi	      1606	ops.c	FUNCTION_29
0x4002e15	              0x53	                                push rbx	      1606	ops.c	FUNCTION_29
0x4002e16	            0x31f6	                            xor esi, esi	      1610	ops.c	FUNCTION_29	IF_1	CALL_1
0x4002e18	          0x4189d4	                           mov r12d, edx	      1606	ops.c	FUNCTION_29
0x4002e1b	      0xe800000000	                          call 0x4002e20	      1610	ops.c	FUNCTION_29	IF_1	CALL_1
0x4002e20	    0x488b15000000	            mov rdx, qword [0x04002e27] 	      1612	ops.c	FUNCTION_29	IF_2
0x4002e27	            0x85c0	                           test eax, eax	      1611	ops.c	FUNCTION_29	IF_1
0x4002e29	      0xb801000000	                              mov eax, 1	      1611	ops.c	FUNCTION_29	IF_1
0x4002e2e	           0xf45e8	                         cmovne ebp, eax	      1611	ops.c	FUNCTION_29	IF_1
0x4002e31	          0x488b02	                    mov rax, qword [rdx]	      1612	ops.c	FUNCTION_29	IF_2
0x4002e34	          0x4885c0	                           test rax, rax	      1612	ops.c	FUNCTION_29	IF_2
0x4002e37	            0x747f	                            je 0x4002eb8	      1612	ops.c	FUNCTION_29	IF_2
0x4002e39	      0x48837a0800	                  cmp qword [rdx + 8], 0	      1615	ops.c	FUNCTION_29	FOR_1
0x4002e3e	     0xf8e7c000000	                           jle 0x4002ec0	      1615	ops.c	FUNCTION_29	FOR_1
0x4002e44	            0x31db	                            xor ebx, ebx	      1615	ops.c	FUNCTION_29	FOR_1
0x4002e46	            0xeb2b	                           jmp 0x4002e73	      1615	ops.c	FUNCTION_29	FOR_1
0x4002e48	     0xf1f84000000	                   nop dword [rax + rax]	      1615	ops.c	FUNCTION_29	FOR_1
0x4002e50	      0xe800000000	                          call 0x4002e55	      1626	ops.c	FUNCTION_29	FOR_1	CALL_4
0x4002e55	    0x8b0500000000	            mov eax, dword [0x04002e5b] 	      1627	ops.c	FUNCTION_29	FOR_1	IF_4
0x4002e5b	            0x85c0	                           test eax, eax	      1627	ops.c	FUNCTION_29	FOR_1	IF_4
0x4002e5d	            0x7559	                           jne 0x4002eb8	      1627	ops.c	FUNCTION_29	FOR_1	IF_4
0x4002e5f	    0x488b05000000	            mov rax, qword [0x04002e66] 	      1615	ops.c	FUNCTION_29	FOR_1
0x4002e66	        0x4883c301	                              add rbx, 1	      1615	ops.c	FUNCTION_29	FOR_1
0x4002e6a	        0x48395808	                cmp qword [rax + 8], rbx	      1615	ops.c	FUNCTION_29	FOR_1
0x4002e6e	            0x7e50	                           jle 0x4002ec0	      1615	ops.c	FUNCTION_29	FOR_1
0x4002e70	          0x488b00	                    mov rax, qword [rax]	      1615	ops.c	FUNCTION_29	FOR_1
0x4002e73	        0x488b3cd8	            mov rdi, qword [rax + rbx*8]	      1617	ops.c	FUNCTION_29	FOR_1	CALL_2
0x4002e77	            0x89ee	                            mov esi, ebp	      1617	ops.c	FUNCTION_29	FOR_1	CALL_2
0x4002e79	      0xe800000000	                          call 0x4002e7e	      1617	ops.c	FUNCTION_29	FOR_1	CALL_2
0x4002e7e	    0x488b05000000	            mov rax, qword [0x04002e85] 	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x4002e85	        0x80781001	                cmp byte [rax + 0x10], 1	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x4002e89	            0x740d	                            je 0x4002e98	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x4002e8b	        0x488b4008	                mov rax, qword [rax + 8]	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x4002e8f	        0x4883e801	                              sub rax, 1	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x4002e93	          0x4839d8	                            cmp rax, rbx	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x4002e96	            0x7eb8	                           jle 0x4002e50	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x4002e98	          0x4585e4	                         test r12d, r12d	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x4002e9b	            0x75b3	                           jne 0x4002e50	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x4002e9d	            0x89ee	                            mov esi, ebp	      1622	ops.c	FUNCTION_29	FOR_1	CALL_3
0x4002e9f	      0xbf00000000	                              mov edi, 0	      1622	ops.c	FUNCTION_29	FOR_1	CALL_3
0x4002ea4	      0xe800000000	                          call 0x4002ea9	      1622	ops.c	FUNCTION_29	FOR_1	CALL_3
0x4002ea9	      0xe800000000	                          call 0x4002eae	      1626	ops.c	FUNCTION_29	FOR_1	CALL_4
0x4002eae	    0x8b0500000000	            mov eax, dword [0x04002eb4] 	      1627	ops.c	FUNCTION_29	FOR_1	IF_4
0x4002eb4	            0x85c0	                           test eax, eax	      1627	ops.c	FUNCTION_29	FOR_1	IF_4
0x4002eb6	            0x74a7	                            je 0x4002e5f	      1627	ops.c	FUNCTION_29	FOR_1	IF_4
0x4002eb8	              0x5b	                                 pop rbx	      1631	ops.c	FUNCTION_29
0x4002eb9	            0x31c0	                            xor eax, eax	      1613	ops.c	FUNCTION_29	IF_2
0x4002ebb	              0x5d	                                 pop rbp	      1631	ops.c	FUNCTION_29
0x4002ebc	            0x415c	                                 pop r12	      1631	ops.c	FUNCTION_29
0x4002ebe	              0xc3	                                     ret	      1631	ops.c	FUNCTION_29
0x4002ebf	              0x90	                                     nop	      1631	ops.c	FUNCTION_29
0x4002ec0	              0x5b	                                 pop rbx	      1631	ops.c	FUNCTION_29
0x4002ec1	      0xb801000000	                              mov eax, 1	      1630	ops.c	FUNCTION_29
0x4002ec6	              0x5d	                                 pop rbp	      1631	ops.c	FUNCTION_29
0x4002ec7	            0x415c	                                 pop r12	      1631	ops.c	FUNCTION_29
0x4002ec9	              0xc3	                                     ret	      1631	ops.c	FUNCTION_29
write_viminfo_registers	SWITCH,1:IF,15:WHILE,0:DO,0:FOR,4:ELSE,2:CALL,14:functions,0	307
0x4006ef0	            0x4157	                                push r15	      6312	ops.c	FUNCTION_72
0x4006ef2	            0x4156	                                push r14	      6312	ops.c	FUNCTION_72
0x4006ef4	      0xba05000000	                              mov edx, 5	      6322	ops.c	FUNCTION_72	CALL_2
0x4006ef9	            0x4155	                                push r13	      6312	ops.c	FUNCTION_72
0x4006efb	            0x4154	                                push r12	      6312	ops.c	FUNCTION_72
0x4006efd	      0xbe00000000	                              mov esi, 0	      6322	ops.c	FUNCTION_72	CALL_2
0x4006f02	              0x55	                                push rbp	      6312	ops.c	FUNCTION_72
0x4006f03	              0x53	                                push rbx	      6312	ops.c	FUNCTION_72
0x4006f04	          0x4889fd	                            mov rbp, rdi	      6312	ops.c	FUNCTION_72
0x4006f07	            0x31ff	                            xor edi, edi	      6322	ops.c	FUNCTION_72	CALL_2
0x4006f09	        0x4883ec38	                           sub rsp, 0x38	      6312	ops.c	FUNCTION_72
0x4006f0d	      0xe800000000	                          call 0x4006f12	      6322	ops.c	FUNCTION_72	CALL_2
0x4006f12	          0x4889ee	                            mov rsi, rbp	      6322	ops.c	FUNCTION_72	CALL_2
0x4006f15	          0x4889c7	                            mov rdi, rax	      6322	ops.c	FUNCTION_72	CALL_2
0x4006f18	      0xe800000000	                          call 0x4006f1d	      6322	ops.c	FUNCTION_72	CALL_2
0x4006f1d	      0xbf3c000000	                           mov edi, 0x3c	      6325	ops.c	FUNCTION_72	CALL_3
0x4006f22	      0xe800000000	                          call 0x4006f27	      6325	ops.c	FUNCTION_72	CALL_3
0x4006f27	            0x85c0	                           test eax, eax	      6326	ops.c	FUNCTION_72	IF_1
0x4006f29	        0x89442420	             mov dword [rsp + 0x20], eax	      6325	ops.c	FUNCTION_72	CALL_3
0x4006f2d	     0xf8824040000	                            js 0x4007357	      6326	ops.c	FUNCTION_72	IF_1
0x4006f33	      0x448b442420	            mov r8d, dword [rsp + 0x20] 	      6328	ops.c	FUNCTION_72	IF_2
0x4006f38	          0x4585c0	                           test r8d, r8d	      6328	ops.c	FUNCTION_72	IF_2
0x4006f3b	            0x7513	                           jne 0x4006f50	      6328	ops.c	FUNCTION_72	IF_2
0x4006f3d	        0x4883c438	                           add rsp, 0x38	      6439	ops.c	FUNCTION_72
0x4006f41	              0x5b	                                 pop rbx	      6439	ops.c	FUNCTION_72
0x4006f42	              0x5d	                                 pop rbp	      6439	ops.c	FUNCTION_72
0x4006f43	            0x415c	                                 pop r12	      6439	ops.c	FUNCTION_72
0x4006f45	            0x415d	                                 pop r13	      6439	ops.c	FUNCTION_72
0x4006f47	            0x415e	                                 pop r14	      6439	ops.c	FUNCTION_72
0x4006f49	            0x415f	                                 pop r15	      6439	ops.c	FUNCTION_72
0x4006f4b	              0xc3	                                     ret	      6439	ops.c	FUNCTION_72
0x4006f4c	         0xf1f4000	                         nop dword [rax]	      6439	ops.c	FUNCTION_72
0x4006f50	      0xbf73000000	                           mov edi, 0x73	      6330	ops.c	FUNCTION_72	CALL_5
0x4006f55	      0xe800000000	                          call 0x4006f5a	      6330	ops.c	FUNCTION_72	CALL_5
0x4006f5a	            0x85c0	                           test eax, eax	      6331	ops.c	FUNCTION_72	IF_3
0x4006f5c	        0x89442424	             mov dword [rsp + 0x24], eax	      6330	ops.c	FUNCTION_72	CALL_5
0x4006f60	            0x74db	                            je 0x4006f3d	      6331	ops.c	FUNCTION_72	IF_3
0x4006f62	            0x4898	                                    cdqe	      6331	ops.c	FUNCTION_72	IF_3
0x4006f64	    0x48c704240000	                      mov qword [rsp], 0	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x4006f6c	          0x4531f6	                          xor r14d, r14d	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x4006f6f	        0x48c1e00a	                            shl rax, 0xa	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x4006f73	      0x4889442428	             mov qword [rsp + 0x28], rax	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x4006f78	     0xf1f84000000	                   nop dword [rax + rax]	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x4006f80	        0x418d46db	                   lea eax, [r14 - 0x25]	      6343	ops.c	FUNCTION_72	FOR_1	IF_5
0x4006f84	          0x83f802	                              cmp eax, 2	      6343	ops.c	FUNCTION_72	FOR_1	IF_5
0x4006f87	     0xf8693020000	                           jbe 0x4007220	      6343	ops.c	FUNCTION_72	FOR_1	IF_5
0x4006f8d	    0x488b05000000	            mov rax, qword [0x04006f94] 	      6348	ops.c	FUNCTION_72	FOR_1	IF_6
0x4006f94	          0x4885c0	                           test rax, rax	      6348	ops.c	FUNCTION_72	FOR_1	IF_6
0x4006f97	     0xf84ab020000	                            je 0x4007248	      6348	ops.c	FUNCTION_72	FOR_1	IF_6
0x4006f9d	        0x488b0c24	                    mov rcx, qword [rsp]	      6349	ops.c	FUNCTION_72	FOR_1	IF_6
0x4006fa1	          0x4889cb	                            mov rbx, rcx	      6349	ops.c	FUNCTION_72	FOR_1	IF_6
0x4006fa4	    0x4881eb000000	                              sub rbx, 0	      6349	ops.c	FUNCTION_72	FOR_1	IF_6
0x4006fab	          0x4801c3	                            add rbx, rax	      6349	ops.c	FUNCTION_72	FOR_1	IF_6
0x4006fae	        0x48833b00	                      cmp qword [rbx], 0	      6349	ops.c	FUNCTION_72	FOR_1	IF_6
0x4006fb2	     0xf8490020000	                            je 0x4007248	      6349	ops.c	FUNCTION_72	FOR_1	IF_6
0x4006fb8	        0x48833900	                      cmp qword [rcx], 0	      6350	ops.c	FUNCTION_72	FOR_1	IF_6
0x4006fbc	            0x740e	                            je 0x4006fcc	      6350	ops.c	FUNCTION_72	FOR_1	IF_6
0x4006fbe	        0x488b4118	            mov rax, qword [rcx + 0x18] 	      6350	ops.c	FUNCTION_72	FOR_1	IF_6
0x4006fc2	        0x48394318	            cmp qword [rbx + 0x18], rax 	      6350	ops.c	FUNCTION_72	FOR_1	IF_6
0x4006fc6	            0x7f04	                            jg 0x4006fcc	      6350	ops.c	FUNCTION_72	FOR_1	IF_6
0x4006fc8	        0x488b1c24	                    mov rbx, qword [rsp]	      6356	ops.c	FUNCTION_72	FOR_1	ELSE_2
0x4006fcc	        0x488b4308	                mov rax, qword [rbx + 8]	      6359	ops.c	FUNCTION_72	FOR_1
0x4006fd0	            0x85c0	                           test eax, eax	      6360	ops.c	FUNCTION_72	FOR_1	IF_8
0x4006fd2	      0x4889442410	             mov qword [rsp + 0x10], rax	      6359	ops.c	FUNCTION_72	FOR_1
0x4006fd7	        0x8944240c	              mov dword [rsp + 0xc], eax	      6359	ops.c	FUNCTION_72	FOR_1
0x4006fdb	     0xf843f020000	                            je 0x4007220	      6360	ops.c	FUNCTION_72	FOR_1	IF_8
0x4006fe1	          0x83f801	                              cmp eax, 1	      6361	ops.c	FUNCTION_72	FOR_1	IF_8
0x4006fe4	     0xf84de020000	                            je 0x40072c8	      6361	ops.c	FUNCTION_72	FOR_1	IF_8
0x4006fea	        0x8b7c2424	            mov edi, dword [rsp + 0x24] 	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x4006fee	            0x85ff	                           test edi, edi	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x4006ff0	            0x7e4d	                           jle 0x400703f	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x4006ff2	        0x8b742410	            mov esi, dword [rsp + 0x10] 	      6369	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0x4006ff6	            0x85f6	                           test esi, esi	      6369	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0x4006ff8	     0xf8e51030000	                           jle 0x400734f	      6369	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0x4006ffe	          0x4c8b23	                    mov r12, qword [rbx]	      6369	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0x4007001	      0x48895c2418	             mov qword [rsp + 0x18], rbx	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x4007006	          0x4c89e3	                            mov rbx, r12	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x4007009	      0x448b64240c	            mov r12d, dword [rsp + 0xc] 	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x400700e	          0x4531ed	                          xor r13d, r13d	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x4007011	          0x4531ff	                          xor r15d, r15d	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x4007014	         0xf1f4000	                         nop dword [rax]	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x4007018	        0x4a8b3ceb	            mov rdi, qword [rbx + r13*8]	      6370	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0x400701c	        0x4983c501	                              add r13, 1	      6370	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0x4007020	      0xe800000000	                          call 0x4007025	      6370	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0x4007025	          0x4539ec	                          cmp r12d, r13d	      6369	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0x4007028	      0x4d8d7c0701	                lea r15, [r15 + rax + 1]	      6370	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0x400702d	            0x7fe9	                            jg 0x4007018	      6369	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0x400702f	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      6369	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0x4007034	      0x4c397c2428	            cmp qword [rsp + 0x28], r15 	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x4007039	     0xf8ce1010000	                            jl 0x4007220	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x400703f	      0x440fb66b10	          movzx r13d, byte [rbx + 0x10] 	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x4007044	        0x4180fd01	                             cmp r13b, 1	      6375	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x4007048	    0x41b900000000	                              mov r9d, 0	      6378	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x400704e	            0x7458	                            je 0x40070a8	      6375	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x4007050	    0x41b900000000	                              mov r9d, 0	      6381	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x4007056	            0x7250	                            jb 0x40070a8	      6375	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x4007058	        0x4180fd02	                             cmp r13b, 2	      6375	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x400705c	    0x41b900000000	                              mov r9d, 0	      6384	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x4007062	            0x7444	                            je 0x40070a8	      6375	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x4007064	      0xba05000000	                              mov edx, 5	      6387	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_7
0x4007069	      0xbe00000000	                              mov esi, 0	      6387	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_7
0x400706e	            0x31ff	                            xor edi, edi	      6387	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_7
0x4007070	      0xe800000000	                          call 0x4007075	      6387	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_7
0x4007075	    0x488b3d000000	            mov rdi, qword [0x0400707c] 	        33	stdio2.h	FUNCTION_104	CALL_1
0x400707c	          0x4889c1	                            mov rcx, rax	        33	stdio2.h	FUNCTION_104	CALL_1
0x400707f	        0x450fb6c5	                         movzx r8d, r13b	        33	stdio2.h	FUNCTION_104	CALL_1
0x4007083	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_104	CALL_1
0x400708a	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_104	CALL_1
0x400708f	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_104	CALL_1
0x4007091	      0xe800000000	                          call 0x4007096	        33	stdio2.h	FUNCTION_104	CALL_1
0x4007096	    0x488b3d000000	            mov rdi, qword [0x0400709d] 	      6389	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_8
0x400709d	      0xe800000000	                          call 0x40070a2	      6389	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_8
0x40070a2	    0x41b900000000	                              mov r9d, 0	      6390	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x40070a8	        0x488b0424	                    mov rax, qword [rsp]	      6393	ops.c	FUNCTION_72	FOR_1	IF_11
0x40070ac	    0x483b05000000	            cmp rax, qword [0x040070b3] 	      6393	ops.c	FUNCTION_72	FOR_1	IF_11
0x40070b3	     0xf84b1020000	                            je 0x400736a	      6393	ops.c	FUNCTION_72	FOR_1	IF_11
0x40070b9	        0x418d4630	                   lea eax, [r14 + 0x30]	      6393	ops.c	FUNCTION_72	FOR_1	IF_11
0x40070bd	        0x4183fe09	                             cmp r14d, 9	      4212	ops.c	FUNCTION_51	ELSE_1	IF_2
0x40070c1	          0x4189c7	                           mov r15d, eax	      4212	ops.c	FUNCTION_51	ELSE_1	IF_2
0x40070c4	            0x7e11	                           jle 0x40070d7	      4212	ops.c	FUNCTION_51	ELSE_1	IF_2
0x40070c6	        0x4183fe24	                          cmp r14d, 0x24	      4214	ops.c	FUNCTION_51	ELSE_2	IF_3
0x40070ca	     0xf84d3020000	                            je 0x40073a3	      4214	ops.c	FUNCTION_51	ELSE_2	IF_3
0x40070d0	        0x418d4657	                   lea eax, [r14 + 0x57]	      4214	ops.c	FUNCTION_51	ELSE_2	IF_3
0x40070d4	          0x4189c7	                           mov r15d, eax	      4214	ops.c	FUNCTION_51	ELSE_2	IF_3
0x40070d7	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_35
0x40070d9	          0x4489f9	                           mov ecx, r15d	        97	stdio2.h	CALL_35
0x40070dc	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_35
0x40070e1	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_35
0x40070e6	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_35
0x40070e9	      0x4c894c2418	              mov qword [rsp + 0x18], r9	        97	stdio2.h	CALL_35
0x40070ee	      0xe800000000	                          call 0x40070f3	        97	stdio2.h	CALL_35
0x40070f3	    0x44393d000000	           cmp dword [0x040070fa], r15d 	      6397	ops.c	FUNCTION_72	FOR_1	IF_12
0x40070fa	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	      6397	ops.c	FUNCTION_72	FOR_1	IF_12
0x40070ff	     0xf8433020000	                            je 0x4007338	      6397	ops.c	FUNCTION_72	FOR_1	IF_12
0x4007105	        0x448b4314	            mov r8d, dword [rbx + 0x14] 	        97	stdio2.h	CALL_35
0x4007109	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_35
0x400710b	          0x4c89c9	                             mov rcx, r9	        97	stdio2.h	CALL_35
0x400710e	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_35
0x4007113	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_35
0x4007118	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_35
0x400711b	      0xe800000000	                          call 0x4007120	        97	stdio2.h	CALL_35
0x4007120	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x4007124	            0x85c0	                           test eax, eax	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x4007126	     0xf8e34010000	                           jle 0x4007260	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x400712c	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x4007130	            0x39c8	                            cmp eax, ecx	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x4007132	     0xf8d28010000	                           jge 0x4007260	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x4007138	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x400713c	        0x8944240c	              mov dword [rsp + 0xc], eax	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x4007140	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x4007144	          0x4531e4	                          xor r12d, r12d	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x4007147	          0x83e801	                              sub eax, 1	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x400714a	    0x4c8d2cc50800	                    lea r13, [rax*8 + 8]	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x4007152	    0x660f1f440000	                    nop word [rax + rax]	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x4007158	          0x4889ee	                            mov rsi, rbp	      6406	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_10
0x400715b	      0xbf09000000	                              mov edi, 9	      6406	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_10
0x4007160	      0xe800000000	                          call 0x4007165	      6406	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_10
0x4007165	          0x488b03	                    mov rax, qword [rbx]	      6407	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_11
0x4007168	          0x4889ef	                            mov rdi, rbp	      6407	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_11
0x400716b	        0x4a8b3420	              mov rsi, qword [rax + r12]	      6407	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_11
0x400716f	        0x4983c408	                              add r12, 8	      6407	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_11
0x4007173	      0xe800000000	                          call 0x4007178	      6407	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_11
0x4007178	          0x4d39e5	                            cmp r13, r12	      6404	ops.c	FUNCTION_72	FOR_1	FOR_3
0x400717b	            0x75db	                           jne 0x4007158	      6404	ops.c	FUNCTION_72	FOR_1	FOR_3
0x400717d	          0x4531c0	                            xor r8d, r8d	      6411	ops.c	FUNCTION_72	FOR_1
0x4007180	        0x488b0424	                    mov rax, qword [rsp]	      6411	ops.c	FUNCTION_72	FOR_1
0x4007184	    0x483905000000	            cmp qword [0x0400718b], rax 	      6411	ops.c	FUNCTION_72	FOR_1
0x400718b	        0x410f94c0	                                sete r8b	      6411	ops.c	FUNCTION_72	FOR_1
0x400718f	    0x443b3d000000	           cmp r15d, dword [0x04007196] 	      6422	ops.c	FUNCTION_72	FOR_1	IF_15
0x4007196	     0xf8464010000	                            je 0x4007300	      6422	ops.c	FUNCTION_72	FOR_1	IF_15
0x400719c	          0x8b4314	            mov eax, dword [rbx + 0x14] 	        97	stdio2.h	CALL_35
0x400719f	          0xff7318	                 push qword [rbx + 0x18]	        97	stdio2.h	CALL_35
0x40071a2	          0x4589f1	                           mov r9d, r14d	        97	stdio2.h	CALL_35
0x40071a5	              0x50	                                push rax	        97	stdio2.h	CALL_35
0x40071a6	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	        97	stdio2.h	CALL_35
0x40071aa	              0x50	                                push rax	        97	stdio2.h	CALL_35
0x40071ab	         0xfb64310	           movzx eax, byte [rbx + 0x10] 	        97	stdio2.h	CALL_35
0x40071af	              0x50	                                push rax	        97	stdio2.h	CALL_35
0x40071b0	      0xb903000000	                              mov ecx, 3	        97	stdio2.h	CALL_35
0x40071b5	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_35
0x40071ba	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_35
0x40071bf	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_35
0x40071c2	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_35
0x40071c4	          0x4531ed	                          xor r13d, r13d	        97	stdio2.h	CALL_35
0x40071c7	      0xe800000000	                          call 0x40071cc	        97	stdio2.h	CALL_35
0x40071cc	        0x4883c420	                           add rsp, 0x20	        97	stdio2.h	CALL_35
0x40071d0	      0x448b7c240c	            mov r15d, dword [rsp + 0xc] 	        97	stdio2.h	CALL_35
0x40071d5	    0x41bcb9010000	                         mov r12d, 0x1b9	        97	stdio2.h	CALL_35
0x40071db	       0xf1f440000	                   nop dword [rax + rax]	        97	stdio2.h	CALL_35
0x40071e0	          0x4889ee	                            mov rsi, rbp	      6431	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_12
0x40071e3	      0xbf2c000000	                           mov edi, 0x2c	      6431	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_12
0x40071e8	      0xe800000000	                          call 0x40071ed	      6431	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_12
0x40071ed	          0x488b03	                    mov rax, qword [rbx]	      6433	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_13
0x40071f0	      0x418d5424ff	                      lea edx, [r12 - 1]	      6432	ops.c	FUNCTION_72	FOR_1	FOR_4
0x40071f5	          0x4889ef	                            mov rdi, rbp	      6433	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_13
0x40071f8	        0x4a8b34e8	            mov rsi, qword [rax + r13*8]	      6433	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_13
0x40071fc	        0x4983c501	                              add r13, 1	      6433	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_13
0x4007200	      0xe800000000	                          call 0x4007205	      6433	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_13
0x4007205	          0x4539ef	                          cmp r15d, r13d	      6429	ops.c	FUNCTION_72	FOR_1	FOR_4
0x4007208	          0x4189c4	                           mov r12d, eax	      6433	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_13
0x400720b	            0x7fd3	                            jg 0x40071e0	      6429	ops.c	FUNCTION_72	FOR_1	FOR_4
0x400720d	          0x4889ee	                            mov rsi, rbp	      6436	ops.c	FUNCTION_72	FOR_1	CALL_14
0x4007210	      0xbf0a000000	                            mov edi, 0xa	      6436	ops.c	FUNCTION_72	FOR_1	CALL_14
0x4007215	      0xe800000000	                          call 0x400721a	      6436	ops.c	FUNCTION_72	FOR_1	CALL_14
0x400721a	    0x660f1f440000	                    nop word [rax + rax]	      6436	ops.c	FUNCTION_72	FOR_1	CALL_14
0x4007220	        0x4183c601	                             add r14d, 1	      6334	ops.c	FUNCTION_72	FOR_1
0x4007224	      0x4883042420	                   add qword [rsp], 0x20	      6334	ops.c	FUNCTION_72	FOR_1
0x4007229	        0x4183fe28	                          cmp r14d, 0x28	      6334	ops.c	FUNCTION_72	FOR_1
0x400722d	     0xf854dfdffff	                           jne 0x4006f80	      6334	ops.c	FUNCTION_72	FOR_1
0x4007233	        0x4883c438	                           add rsp, 0x38	      6439	ops.c	FUNCTION_72
0x4007237	              0x5b	                                 pop rbx	      6439	ops.c	FUNCTION_72
0x4007238	              0x5d	                                 pop rbp	      6439	ops.c	FUNCTION_72
0x4007239	            0x415c	                                 pop r12	      6439	ops.c	FUNCTION_72
0x400723b	            0x415d	                                 pop r13	      6439	ops.c	FUNCTION_72
0x400723d	            0x415e	                                 pop r14	      6439	ops.c	FUNCTION_72
0x400723f	            0x415f	                                 pop r15	      6439	ops.c	FUNCTION_72
0x4007241	              0xc3	                                     ret	      6439	ops.c	FUNCTION_72
0x4007242	    0x660f1f440000	                    nop word [rax + rax]	      6439	ops.c	FUNCTION_72
0x4007248	        0x488b0424	                    mov rax, qword [rsp]	      6353	ops.c	FUNCTION_72	FOR_1	ELSE_1	IF_7
0x400724c	        0x48833800	                      cmp qword [rax], 0	      6353	ops.c	FUNCTION_72	FOR_1	ELSE_1	IF_7
0x4007250	     0xf8572fdffff	                           jne 0x4006fc8	      6353	ops.c	FUNCTION_72	FOR_1	ELSE_1	IF_7
0x4007256	            0xebc8	                           jmp 0x4007220	      6353	ops.c	FUNCTION_72	FOR_1	ELSE_1	IF_7
0x4007258	     0xf1f84000000	                   nop dword [rax + rax]	      6353	ops.c	FUNCTION_72	FOR_1	ELSE_1	IF_7
0x4007260	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	      6404	ops.c	FUNCTION_72	FOR_1	FOR_3
0x4007264	            0x85c9	                           test ecx, ecx	      6404	ops.c	FUNCTION_72	FOR_1	FOR_3
0x4007266	     0xf8fd4feffff	                            jg 0x4007140	      6404	ops.c	FUNCTION_72	FOR_1	FOR_3
0x400726c	          0x4531c0	                            xor r8d, r8d	      6411	ops.c	FUNCTION_72	FOR_1
0x400726f	        0x488b0424	                    mov rax, qword [rsp]	      6411	ops.c	FUNCTION_72	FOR_1
0x4007273	    0x483905000000	            cmp qword [0x0400727a], rax 	      6411	ops.c	FUNCTION_72	FOR_1
0x400727a	        0x410f94c0	                                sete r8b	      6411	ops.c	FUNCTION_72	FOR_1
0x400727e	    0x443b3d000000	           cmp r15d, dword [0x04007285] 	      6422	ops.c	FUNCTION_72	FOR_1	IF_15
0x4007285	     0xf84fb000000	                            je 0x4007386	      6422	ops.c	FUNCTION_72	FOR_1	IF_15
0x400728b	          0x8b4314	            mov eax, dword [rbx + 0x14] 	        97	stdio2.h	CALL_35
0x400728e	          0xff7318	                 push qword [rbx + 0x18]	        97	stdio2.h	CALL_35
0x4007291	          0x4589f1	                           mov r9d, r14d	        97	stdio2.h	CALL_35
0x4007294	              0x50	                                push rax	        97	stdio2.h	CALL_35
0x4007295	        0x8b442420	            mov eax, dword [rsp + 0x20] 	        97	stdio2.h	CALL_35
0x4007299	              0x50	                                push rax	        97	stdio2.h	CALL_35
0x400729a	         0xfb64310	           movzx eax, byte [rbx + 0x10] 	        97	stdio2.h	CALL_35
0x400729e	              0x50	                                push rax	        97	stdio2.h	CALL_35
0x400729f	      0xb903000000	                              mov ecx, 3	        97	stdio2.h	CALL_35
0x40072a4	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_35
0x40072a9	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_35
0x40072ae	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_35
0x40072b1	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_35
0x40072b3	      0xe800000000	                          call 0x40072b8	        97	stdio2.h	CALL_35
0x40072b8	        0x4883c420	                           add rsp, 0x20	        97	stdio2.h	CALL_35
0x40072bc	      0xe94cffffff	                           jmp 0x400720d	        97	stdio2.h	CALL_35
0x40072c1	     0xf1f80000000	                         nop dword [rax]	        97	stdio2.h	CALL_35
0x40072c8	      0x440fb66b10	          movzx r13d, byte [rbx + 0x10] 	      6361	ops.c	FUNCTION_72	FOR_1	IF_8
0x40072cd	          0x4584ed	                         test r13b, r13b	      6361	ops.c	FUNCTION_72	FOR_1	IF_8
0x40072d0	            0x754e	                           jne 0x4007320	      6361	ops.c	FUNCTION_72	FOR_1	IF_8
0x40072d2	          0x4c8b23	                    mov r12, qword [rbx]	      6362	ops.c	FUNCTION_72	FOR_1	IF_8
0x40072d5	        0x498b0424	                    mov rax, qword [r12]	      6362	ops.c	FUNCTION_72	FOR_1	IF_8
0x40072d9	          0x803800	                       cmp byte [rax], 0	      6362	ops.c	FUNCTION_72	FOR_1	IF_8
0x40072dc	     0xf843effffff	                            je 0x4007220	      6362	ops.c	FUNCTION_72	FOR_1	IF_8
0x40072e2	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x40072e6	    0x41b900000000	                              mov r9d, 0	      6381	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x40072ec	            0x85c0	                           test eax, eax	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x40072ee	     0xf8f0dfdffff	                            jg 0x4007001	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x40072f4	      0xe9affdffff	                           jmp 0x40070a8	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x40072f9	     0xf1f80000000	                         nop dword [rax]	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x4007300	          0x8b4314	            mov eax, dword [rbx + 0x14] 	        97	stdio2.h	CALL_35
0x4007303	          0xff7318	                 push qword [rbx + 0x18]	        97	stdio2.h	CALL_35
0x4007306	          0x4589f1	                           mov r9d, r14d	        97	stdio2.h	CALL_35
0x4007309	        0x4183c802	                               or r8d, 2	        97	stdio2.h	CALL_35
0x400730d	              0x50	                                push rax	        97	stdio2.h	CALL_35
0x400730e	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	        97	stdio2.h	CALL_35
0x4007312	              0x50	                                push rax	        97	stdio2.h	CALL_35
0x4007313	         0xfb64310	           movzx eax, byte [rbx + 0x10] 	        97	stdio2.h	CALL_35
0x4007317	              0x50	                                push rax	        97	stdio2.h	CALL_35
0x4007318	      0xe993feffff	                           jmp 0x40071b0	        97	stdio2.h	CALL_35
0x400731d	           0xf1f00	                         nop dword [rax]	        97	stdio2.h	CALL_35
0x4007320	        0x8b542424	            mov edx, dword [rsp + 0x24] 	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x4007324	            0x85d2	                           test edx, edx	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x4007326	     0xf8fd2fcffff	                            jg 0x4006ffe	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x400732c	      0xe913fdffff	                           jmp 0x4007044	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x4007331	     0xf1f80000000	                         nop dword [rax]	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x4007338	          0x4889ee	                            mov rsi, rbp	        97	stdio2.h	CALL_35
0x400733b	      0xbf40000000	                           mov edi, 0x40	        97	stdio2.h	CALL_35
0x4007340	      0xe800000000	                          call 0x4007345	        97	stdio2.h	CALL_35
0x4007345	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	        97	stdio2.h	CALL_35
0x400734a	      0xe9b6fdffff	                           jmp 0x4007105	        97	stdio2.h	CALL_35
0x400734f	          0x4531ff	                          xor r15d, r15d	      6369	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0x4007352	      0xe9ddfcffff	                           jmp 0x4007034	      6369	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0x4007357	      0xbf22000000	                           mov edi, 0x22	      6327	ops.c	FUNCTION_72	CALL_4
0x400735c	      0xe800000000	                          call 0x4007361	      6327	ops.c	FUNCTION_72	CALL_4
0x4007361	        0x89442420	             mov dword [rsp + 0x20], eax	      6327	ops.c	FUNCTION_72	CALL_4
0x4007365	      0xe9c9fbffff	                           jmp 0x4006f33	      6327	ops.c	FUNCTION_72	CALL_4
0x400736a	          0x4889ee	                            mov rsi, rbp	        97	stdio2.h	CALL_35
0x400736d	      0xbf22000000	                           mov edi, 0x22	        97	stdio2.h	CALL_35
0x4007372	      0x4c894c2418	              mov qword [rsp + 0x18], r9	        97	stdio2.h	CALL_35
0x4007377	      0xe800000000	                          call 0x400737c	        97	stdio2.h	CALL_35
0x400737c	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	        97	stdio2.h	CALL_35
0x4007381	      0xe933fdffff	                           jmp 0x40070b9	        97	stdio2.h	CALL_35
0x4007386	          0x8b4314	            mov eax, dword [rbx + 0x14] 	        97	stdio2.h	CALL_35
0x4007389	          0xff7318	                 push qword [rbx + 0x18]	        97	stdio2.h	CALL_35
0x400738c	          0x4589f1	                           mov r9d, r14d	        97	stdio2.h	CALL_35
0x400738f	        0x4183c802	                               or r8d, 2	        97	stdio2.h	CALL_35
0x4007393	              0x50	                                push rax	        97	stdio2.h	CALL_35
0x4007394	        0x8b442420	            mov eax, dword [rsp + 0x20] 	        97	stdio2.h	CALL_35
0x4007398	              0x50	                                push rax	        97	stdio2.h	CALL_35
0x4007399	         0xfb64310	           movzx eax, byte [rbx + 0x10] 	        97	stdio2.h	CALL_35
0x400739d	              0x50	                                push rax	        97	stdio2.h	CALL_35
0x400739e	      0xe9fcfeffff	                           jmp 0x400729f	        97	stdio2.h	CALL_35
0x40073a3	    0x41bf2d000000	                          mov r15d, 0x2d	      4215	ops.c	FUNCTION_51	ELSE_2	IF_3
0x40073a9	      0xe929fdffff	                           jmp 0x40070d7	      4215	ops.c	FUNCTION_51	ELSE_2	IF_3
read_viminfo_register	SWITCH,0:IF,17:WHILE,1:DO,0:FOR,4:ELSE,6:CALL,22:functions,0	265
0x4006850	            0x4157	                                push r15	      6086	ops.c	FUNCTION_70
0x4006852	            0x4156	                                push r14	      6086	ops.c	FUNCTION_70
0x4006854	          0x4989ff	                            mov r15, rdi	      6086	ops.c	FUNCTION_70
0x4006857	            0x4155	                                push r13	      6086	ops.c	FUNCTION_70
0x4006859	            0x4154	                                push r12	      6086	ops.c	FUNCTION_70
0x400685b	              0x55	                                push rbp	      6086	ops.c	FUNCTION_70
0x400685c	              0x53	                                push rbx	      6086	ops.c	FUNCTION_70
0x400685d	            0x31ed	                            xor ebp, ebp	      6086	ops.c	FUNCTION_70
0x400685f	            0x89f3	                            mov ebx, esi	      6086	ops.c	FUNCTION_70
0x4006861	        0x4883ec28	                           sub rsp, 0x28	      6086	ops.c	FUNCTION_70
0x4006865	          0x4c8b27	                    mov r12, qword [rdi]	      6099	ops.c	FUNCTION_70
0x4006868	    0x64488b042528	                mov rax, qword fs:[0x28]	      6086	ops.c	FUNCTION_70
0x4006871	      0x4889442418	             mov qword [rsp + 0x18], rax	      6086	ops.c	FUNCTION_70
0x4006876	            0x31c0	                            xor eax, eax	      6086	ops.c	FUNCTION_70
0x4006878	      0x498d442401	                      lea rax, [r12 + 1]	      6099	ops.c	FUNCTION_70
0x400687d	      0x4889442410	             mov qword [rsp + 0x10], rax	      6099	ops.c	FUNCTION_70
0x4006882	    0x410fb6542401	               movzx edx, byte [r12 + 1]	      6102	ops.c	FUNCTION_70	IF_1
0x4006888	          0x80fa22	                            cmp dl, 0x22	      6102	ops.c	FUNCTION_70	IF_1
0x400688b	     0xf84cf020000	                            je 0x4006b60	      6102	ops.c	FUNCTION_70	IF_1
0x4006891	            0x89d1	                            mov ecx, edx	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x4006893	          0x83e1df	                     and ecx, 0xffffffdf	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x4006896	          0x83e941	                           sub ecx, 0x41	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x4006899	          0x80f919	                            cmp cl, 0x19	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x400689c	            0x7652	                           jbe 0x40068f0	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x400689e	           0xfb6ca	                           movzx ecx, dl	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x40068a1	          0x83e930	                           sub ecx, 0x30	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x40068a4	          0x83f909	                              cmp ecx, 9	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x40068a7	            0x7647	                           jbe 0x40068f0	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x40068a9	          0x80fa2d	                            cmp dl, 0x2d	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x40068ac	            0x7442	                            je 0x40068f0	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x40068ae	            0x31ff	                            xor edi, edi	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x40068b0	      0xba05000000	                              mov edx, 5	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x40068b5	      0xbe00000000	                              mov esi, 0	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x40068ba	      0xe800000000	                          call 0x40068bf	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x40068bf	          0x4c89e2	                            mov rdx, r12	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x40068c2	          0x4889c6	                            mov rsi, rax	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x40068c5	      0xbf00000000	                              mov edi, 0	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x40068ca	      0xe800000000	                          call 0x40068cf	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x40068cf	            0x89c2	                            mov edx, eax	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x40068d1	      0xb801000000	                              mov eax, 1	      6111	ops.c	FUNCTION_70	IF_2	IF_3
0x40068d6	            0x85d2	                           test edx, edx	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x40068d8	     0xf85b2010000	                           jne 0x4006a90	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x40068de	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x40068e3	          0x4531c9	                            xor r9d, r9d	      6112	ops.c	FUNCTION_70	IF_2
0x40068e6	            0xeb0e	                           jmp 0x40068f6	      6112	ops.c	FUNCTION_70	IF_2
0x40068e8	     0xf1f84000000	                   nop dword [rax + rax]	      6112	ops.c	FUNCTION_70	IF_2
0x40068f0	    0x41b901000000	                              mov r9d, 1	      6088	ops.c	FUNCTION_70
0x40068f6	        0x488d5001	                      lea rdx, [rax + 1]	      6114	ops.c	FUNCTION_70	CALL_4
0x40068fa	            0x31f6	                            xor esi, esi	      6114	ops.c	FUNCTION_70	CALL_4
0x40068fc	      0x4889542410	             mov qword [rsp + 0x10], rdx	      6114	ops.c	FUNCTION_70	CALL_4
0x4006901	           0xfb638	                   movzx edi, byte [rax]	      6114	ops.c	FUNCTION_70	CALL_4
0x4006904	      0xe800000000	                          call 0x4006909	      6114	ops.c	FUNCTION_70	CALL_4
0x4006909	            0x85db	                           test ebx, ebx	      6115	ops.c	FUNCTION_70	IF_4
0x400690b	     0xf84a7010000	                            je 0x4006ab8	      6115	ops.c	FUNCTION_70	IF_4
0x4006911	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      6118	ops.c	FUNCTION_70	IF_5
0x4006916	          0x803840	                    cmp byte [rax], 0x40	      6118	ops.c	FUNCTION_70	IF_5
0x4006919	     0xf846c020000	                            je 0x4006b8b	      6118	ops.c	FUNCTION_70	IF_5
0x400691f	          0x4585c9	                           test r9d, r9d	      6127	ops.c	FUNCTION_70	IF_7
0x4006922	     0xf84af010000	                            je 0x4006ad7	      6127	ops.c	FUNCTION_70	IF_7
0x4006928	            0x85ed	                           test ebp, ebp	      6135	ops.c	FUNCTION_70	IF_7	IF_8
0x400692a	            0x740e	                            je 0x400693a	      6135	ops.c	FUNCTION_70	IF_7	IF_8
0x400692c	    0x488b05000000	            mov rax, qword [0x04006933] 	      6136	ops.c	FUNCTION_70	IF_7	IF_8
0x4006933	    0x488905000000	            mov qword [0x0400693a], rax 	      6136	ops.c	FUNCTION_70	IF_7	IF_8
0x400693a	      0xbf20030000	                          mov edi, 0x320	      6137	ops.c	FUNCTION_70	IF_7	CALL_5
0x400693f	      0xe800000000	                          call 0x4006944	      6137	ops.c	FUNCTION_70	IF_7	CALL_5
0x4006944	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      6138	ops.c	FUNCTION_70	IF_7	CALL_7
0x4006949	          0x4889c5	                            mov rbp, rax	      6137	ops.c	FUNCTION_70	IF_7	CALL_5
0x400694c	      0xe800000000	                          call 0x4006951	      6138	ops.c	FUNCTION_70	IF_7	CALL_7
0x4006951	          0x4889c7	                            mov rdi, rax	      6138	ops.c	FUNCTION_70	IF_7	CALL_7
0x4006954	      0xe800000000	                          call 0x4006959	      6138	ops.c	FUNCTION_70	IF_7	CALL_7
0x4006959	      0xb904000000	                              mov ecx, 4	      6139	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0x400695e	      0x4889442410	             mov qword [rsp + 0x10], rax	      6138	ops.c	FUNCTION_70	IF_7	CALL_7
0x4006963	      0xbf00000000	                              mov edi, 0	      6139	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0x4006968	          0x4889c6	                            mov rsi, rax	      6139	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0x400696b	    0xc70424000000	                      mov dword [rsp], 0	      6140	ops.c	FUNCTION_70	IF_7	IF_9
0x4006972	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6139	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0x4006974	           0xf97c1	                                 seta cl	      6139	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0x4006977	           0xf92c2	                                 setb dl	      6139	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0x400697a	            0x38d1	                              cmp cl, dl	      6139	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0x400697c	            0x7427	                            je 0x40069a5	      6139	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0x400697e	      0xb905000000	                              mov ecx, 5	      6141	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0x4006983	          0x4889c6	                            mov rsi, rax	      6141	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0x4006986	      0xbf00000000	                              mov edi, 0	      6141	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0x400698b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6141	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0x400698d	           0xf97c2	                                 seta dl	      6141	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0x4006990	           0xf92c1	                                 setb cl	      6141	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0x4006993	            0x29ca	                            sub edx, ecx	      6141	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0x4006995	           0xfbed2	                           movsx edx, dl	      6141	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0x4006998	          0x83fa01	                              cmp edx, 1	      6142	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10
0x400699b	            0x19f6	                            sbb esi, esi	      6142	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10
0x400699d	            0xf7d6	                                 not esi	      6142	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10
0x400699f	          0x83c602	                              add esi, 2	      6142	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10
0x40069a2	          0x893424	                    mov dword [rsp], esi	      6142	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10
0x40069a5	          0x4889c7	                            mov rdi, rax	      6146	ops.c	FUNCTION_70	IF_7	CALL_11
0x40069a8	      0xbb01000000	                              mov ebx, 1	      6147	ops.c	FUNCTION_70	IF_7	CALL_12
0x40069ad	      0xe800000000	                          call 0x40069b2	      6146	ops.c	FUNCTION_70	IF_7	CALL_11
0x40069b2	          0x4889c7	                            mov rdi, rax	      6146	ops.c	FUNCTION_70	IF_7	CALL_11
0x40069b5	      0xe800000000	                          call 0x40069ba	      6146	ops.c	FUNCTION_70	IF_7	CALL_11
0x40069ba	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      6147	ops.c	FUNCTION_70	IF_7	CALL_12
0x40069bf	      0x4889442410	             mov qword [rsp + 0x10], rax	      6146	ops.c	FUNCTION_70	IF_7	CALL_11
0x40069c4	      0xe800000000	                          call 0x40069c9	      6147	ops.c	FUNCTION_70	IF_7	CALL_12
0x40069c9	        0x89442404	                mov dword [rsp + 4], eax	      6147	ops.c	FUNCTION_70	IF_7	CALL_12
0x40069cd	    0x41bd64000000	                          mov r13d, 0x64	      6147	ops.c	FUNCTION_70	IF_7	CALL_12
0x40069d3	          0x4531e4	                          xor r12d, r12d	      6147	ops.c	FUNCTION_70	IF_7	CALL_12
0x40069d6	            0xeb20	                           jmp 0x40069f8	      6147	ops.c	FUNCTION_70	IF_7	CALL_12
0x40069d8	     0xf1f84000000	                   nop dword [rax + rax]	      6147	ops.c	FUNCTION_70	IF_7	CALL_12
0x40069e0	          0x498b07	                    mov rax, qword [r15]	      6151	ops.c	FUNCTION_70	WHILE_1
0x40069e3	           0xfb610	                   movzx edx, byte [rax]	      6151	ops.c	FUNCTION_70	WHILE_1
0x40069e6	          0x80fa09	                               cmp dl, 9	      6151	ops.c	FUNCTION_70	WHILE_1
0x40069e9	            0x7405	                            je 0x40069f0	      6151	ops.c	FUNCTION_70	WHILE_1
0x40069eb	          0x80fa3c	                            cmp dl, 0x3c	      6151	ops.c	FUNCTION_70	WHILE_1
0x40069ee	            0x7517	                           jne 0x4006a07	      6151	ops.c	FUNCTION_70	WHILE_1
0x40069f0	            0x85db	                           test ebx, ebx	      6153	ops.c	FUNCTION_70	WHILE_1	IF_11
0x40069f2	     0xf8528010000	                           jne 0x4006b20	      6153	ops.c	FUNCTION_70	WHILE_1	IF_11
0x40069f8	          0x4c89ff	                            mov rdi, r15	      6150	ops.c	FUNCTION_70	WHILE_1	CALL_13
0x40069fb	      0xe800000000	                          call 0x4006a00	      6150	ops.c	FUNCTION_70	WHILE_1	CALL_13
0x4006a00	            0x85c0	                           test eax, eax	      6150	ops.c	FUNCTION_70	WHILE_1	CALL_13
0x4006a02	          0x4189c6	                           mov r14d, eax	      6150	ops.c	FUNCTION_70	WHILE_1	CALL_13
0x4006a05	            0x74d9	                            je 0x40069e0	      6150	ops.c	FUNCTION_70	WHILE_1	CALL_13
0x4006a07	            0x85db	                           test ebx, ebx	      6180	ops.c	FUNCTION_70	ELSE_3	IF_15
0x4006a09	     0xf84e1000000	                            je 0x4006af0	      6180	ops.c	FUNCTION_70	ELSE_3	IF_15
0x4006a0f	    0x488b05000000	            mov rax, qword [0x04006a16] 	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x4006a16	      0xbb01000000	                              mov ebx, 1	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x4006a1b	      0x4883780800	                  cmp qword [rax + 8], 0	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x4006a20	            0x7e27	                           jle 0x4006a49	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x4006a22	    0x660f1f440000	                    nop word [rax + rax]	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x4006a28	          0x488b00	                    mov rax, qword [rax]	      6184	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_17
0x4006a2b	      0x488b7cd8f8	        mov rdi, qword [rax + rbx*8 - 8]	      6184	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_17
0x4006a30	      0xe800000000	                          call 0x4006a35	      6184	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_17
0x4006a35	    0x488b05000000	            mov rax, qword [0x04006a3c] 	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x4006a3c	          0x4889da	                            mov rdx, rbx	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x4006a3f	        0x4883c301	                              add rbx, 1	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x4006a43	        0x483b5008	                cmp rdx, qword [rax + 8]	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x4006a47	            0x7cdf	                            jl 0x4006a28	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x4006a49	          0x488b38	                    mov rdi, qword [rax]	      6185	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_18
0x4006a4c	      0xe800000000	                          call 0x4006a51	      6185	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_18
0x4006a51	         0xfb60424	                   movzx eax, byte [rsp]	      6187	ops.c	FUNCTION_70	ELSE_3	IF_15
0x4006a55	    0x488b1d000000	            mov rbx, qword [0x04006a5c] 	      6187	ops.c	FUNCTION_70	ELSE_3	IF_15
0x4006a5c	          0x4585e4	                         test r12d, r12d	      6191	ops.c	FUNCTION_70	ELSE_3	IF_15	IF_16
0x4006a5f	    0x48c743180000	               mov qword [rbx + 0x18], 0	      6190	ops.c	FUNCTION_70	ELSE_3	IF_15
0x4006a67	          0x884310	               mov byte [rbx + 0x10], al	      6187	ops.c	FUNCTION_70	ELSE_3	IF_15
0x4006a6a	        0x8b442404	                mov eax, dword [rsp + 4]	      6188	ops.c	FUNCTION_70	ELSE_3	IF_15
0x4006a6e	          0x894314	             mov dword [rbx + 0x14], eax	      6188	ops.c	FUNCTION_70	ELSE_3	IF_15
0x4006a71	          0x4963c4	                        movsxd rax, r12d	      6189	ops.c	FUNCTION_70	ELSE_3	IF_15
0x4006a74	        0x48894308	                mov qword [rbx + 8], rax	      6189	ops.c	FUNCTION_70	ELSE_3	IF_15
0x4006a78	     0xf851c010000	                           jne 0x4006b9a	      6191	ops.c	FUNCTION_70	ELSE_3	IF_15	IF_16
0x4006a7e	    0x48c703000000	                      mov qword [rbx], 0	      6193	ops.c	FUNCTION_70	ELSE_3	IF_15	IF_16
0x4006a85	          0x4889ef	                            mov rdi, rbp	      6215	ops.c	FUNCTION_70	CALL_22
0x4006a88	      0xe800000000	                          call 0x4006a8d	      6215	ops.c	FUNCTION_70	CALL_22
0x4006a8d	          0x4489f0	                           mov eax, r14d	      6217	ops.c	FUNCTION_70
0x4006a90	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      6218	ops.c	FUNCTION_70
0x4006a95	    0x644833342528	                xor rsi, qword fs:[0x28]	      6218	ops.c	FUNCTION_70
0x4006a9e	     0xf85c3010000	                           jne 0x4006c67	      6218	ops.c	FUNCTION_70
0x4006aa4	        0x4883c428	                           add rsp, 0x28	      6218	ops.c	FUNCTION_70
0x4006aa8	              0x5b	                                 pop rbx	      6218	ops.c	FUNCTION_70
0x4006aa9	              0x5d	                                 pop rbp	      6218	ops.c	FUNCTION_70
0x4006aaa	            0x415c	                                 pop r12	      6218	ops.c	FUNCTION_70
0x4006aac	            0x415d	                                 pop r13	      6218	ops.c	FUNCTION_70
0x4006aae	            0x415e	                                 pop r14	      6218	ops.c	FUNCTION_70
0x4006ab0	            0x415f	                                 pop r15	      6218	ops.c	FUNCTION_70
0x4006ab2	              0xc3	                                     ret	      6218	ops.c	FUNCTION_70
0x4006ab3	       0xf1f440000	                   nop dword [rax + rax]	      6218	ops.c	FUNCTION_70
0x4006ab8	    0x488b05000000	            mov rax, qword [0x04006abf] 	      6115	ops.c	FUNCTION_70	IF_4
0x4006abf	        0x48833800	                      cmp qword [rax], 0	      6115	ops.c	FUNCTION_70	IF_4
0x4006ac3	     0xf8476010000	                            je 0x4006c3f	      6115	ops.c	FUNCTION_70	IF_4
0x4006ac9	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      6118	ops.c	FUNCTION_70	IF_5
0x4006ace	          0x803840	                    cmp byte [rax], 0x40	      6118	ops.c	FUNCTION_70	IF_5
0x4006ad1	     0xf84a3000000	                            je 0x4006b7a	      6118	ops.c	FUNCTION_70	IF_5
0x4006ad7	            0x31db	                            xor ebx, ebx	      6144	ops.c	FUNCTION_70	IF_7	ELSE_2
0x4006ad9	    0xc74424040000	                  mov dword [rsp + 4], 0	      6096	ops.c	FUNCTION_70
0x4006ae1	    0xc70424000000	                      mov dword [rsp], 0	      6095	ops.c	FUNCTION_70
0x4006ae8	            0x31ed	                            xor ebp, ebp	      6094	ops.c	FUNCTION_70
0x4006aea	      0xe9defeffff	                           jmp 0x40069cd	      6094	ops.c	FUNCTION_70
0x4006aef	              0x90	                                     nop	      6094	ops.c	FUNCTION_70
0x4006af0	          0x4585e4	                         test r12d, r12d	      6212	ops.c	FUNCTION_70	ELSE_6	FOR_4
0x4006af3	            0x7e90	                           jle 0x4006a85	      6212	ops.c	FUNCTION_70	ELSE_6	FOR_4
0x4006af5	      0x418d4424ff	                      lea eax, [r12 - 1]	      6212	ops.c	FUNCTION_70	ELSE_6	FOR_4
0x4006afa	          0x4889eb	                            mov rbx, rbp	      6212	ops.c	FUNCTION_70	ELSE_6	FOR_4
0x4006afd	      0x4c8d64c508	              lea r12, [rbp + rax*8 + 8]	      6212	ops.c	FUNCTION_70	ELSE_6	FOR_4
0x4006b02	    0x660f1f440000	                    nop word [rax + rax]	      6212	ops.c	FUNCTION_70	ELSE_6	FOR_4
0x4006b08	          0x488b3b	                    mov rdi, qword [rbx]	      6213	ops.c	FUNCTION_70	ELSE_6	CALL_21
0x4006b0b	        0x4883c308	                              add rbx, 8	      6213	ops.c	FUNCTION_70	ELSE_6	CALL_21
0x4006b0f	      0xe800000000	                          call 0x4006b14	      6213	ops.c	FUNCTION_70	ELSE_6	CALL_21
0x4006b14	          0x4c39e3	                            cmp rbx, r12	      6212	ops.c	FUNCTION_70	ELSE_6	FOR_4
0x4006b17	            0x75ef	                           jne 0x4006b08	      6212	ops.c	FUNCTION_70	ELSE_6	FOR_4
0x4006b19	      0xe967ffffff	                           jmp 0x4006a85	      6212	ops.c	FUNCTION_70	ELSE_6	FOR_4
0x4006b1e	            0x6690	                                     nop	      6212	ops.c	FUNCTION_70	ELSE_6	FOR_4
0x4006b20	          0x4539ec	                          cmp r12d, r13d	      6155	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0x4006b23	     0xf84c8000000	                            je 0x4006bf1	      6155	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0x4006b29	      0xba01000000	                              mov edx, 1	      6171	ops.c	FUNCTION_70	WHILE_1	IF_11	CALL_16
0x4006b2e	      0xbe01000000	                              mov esi, 1	      6171	ops.c	FUNCTION_70	WHILE_1	IF_11	CALL_16
0x4006b33	          0x4c89ff	                            mov rdi, r15	      6171	ops.c	FUNCTION_70	WHILE_1	IF_11	CALL_16
0x4006b36	      0xe800000000	                          call 0x4006b3b	      6171	ops.c	FUNCTION_70	WHILE_1	IF_11	CALL_16
0x4006b3b	          0x4885c0	                           test rax, rax	      6172	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x4006b3e	      0x4889442410	             mov qword [rsp + 0x10], rax	      6171	ops.c	FUNCTION_70	WHILE_1	IF_11	CALL_16
0x4006b43	     0xf8417010000	                            je 0x4006c60	      6172	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x4006b49	          0x4963d4	                        movsxd rdx, r12d	      6173	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x4006b4c	      0xbb01000000	                              mov ebx, 1	      6173	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x4006b51	        0x4183c401	                             add r12d, 1	      6173	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x4006b55	      0x488944d500	            mov qword [rbp + rdx*8], rax	      6173	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x4006b5a	      0xe999feffff	                           jmp 0x40069f8	      6173	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x4006b5f	              0x90	                                     nop	      6173	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x4006b60	      0x498d442402	                      lea rax, [r12 + 2]	      6105	ops.c	FUNCTION_70	IF_1
0x4006b65	      0xbd01000000	                              mov ebp, 1	      6104	ops.c	FUNCTION_70	IF_1
0x4006b6a	      0x4889442410	             mov qword [rsp + 0x10], rax	      6105	ops.c	FUNCTION_70	IF_1
0x4006b6f	    0x410fb6542402	               movzx edx, byte [r12 + 2]	      6105	ops.c	FUNCTION_70	IF_1
0x4006b75	      0xe917fdffff	                           jmp 0x4006891	      6105	ops.c	FUNCTION_70	IF_1
0x4006b7a	    0x8b1500000000	            mov edx, dword [0x04006b80] 	      6121	ops.c	FUNCTION_70	IF_5	IF_6
0x4006b80	            0x85d2	                           test edx, edx	      6121	ops.c	FUNCTION_70	IF_5	IF_6
0x4006b82	     0xf854fffffff	                           jne 0x4006ad7	      6121	ops.c	FUNCTION_70	IF_5	IF_6
0x4006b88	          0x4531c9	                            xor r9d, r9d	      6116	ops.c	FUNCTION_70	IF_4
0x4006b8b	         0xfb640ff	               movzx eax, byte [rax - 1]	      6122	ops.c	FUNCTION_70	IF_5	IF_6
0x4006b8f	    0x890500000000	            mov dword [0x04006b95], eax 	      6122	ops.c	FUNCTION_70	IF_5	IF_6
0x4006b95	      0xe985fdffff	                           jmp 0x400691f	      6122	ops.c	FUNCTION_70	IF_5	IF_6
0x4006b9a	    0x428d3ce50000	                        lea edi, [r12*8]	      6199	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	CALL_19
0x4006ba2	      0xe800000000	                          call 0x4006ba7	      6199	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	CALL_19
0x4006ba7	          0x488903	                    mov qword [rbx], rax	      6198	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4
0x4006baa	      0x418d4424ff	                      lea eax, [r12 - 1]	      6198	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4
0x4006baf	            0x31db	                            xor ebx, ebx	      6198	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4
0x4006bb1	    0x4c8d24c50800	                    lea r12, [rax*8 + 8]	      6198	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4
0x4006bb9	            0xeb1b	                           jmp 0x4006bd6	      6198	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4
0x4006bbb	       0xf1f440000	                   nop dword [rax + rax]	      6198	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4
0x4006bc0	      0x488b541d00	              mov rdx, qword [rbp + rbx]	      6205	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0x4006bc5	        0x48891418	              mov qword [rax + rbx], rdx	      6205	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0x4006bc9	        0x4883c308	                              add rbx, 8	      6205	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0x4006bcd	          0x4c39e3	                            cmp rbx, r12	      6200	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3
0x4006bd0	     0xf84affeffff	                            je 0x4006a85	      6200	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3
0x4006bd6	    0x488b05000000	            mov rax, qword [0x04006bdd] 	      6202	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	IF_17
0x4006bdd	          0x488b00	                    mov rax, qword [rax]	      6202	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	IF_17
0x4006be0	          0x4885c0	                           test rax, rax	      6202	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	IF_17
0x4006be3	            0x75db	                           jne 0x4006bc0	      6202	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	IF_17
0x4006be5	      0x488b7c1d00	              mov rdi, qword [rbp + rbx]	      6203	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	CALL_20
0x4006bea	      0xe800000000	                          call 0x4006bef	      6203	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	CALL_20
0x4006bef	            0xebd8	                           jmp 0x4006bc9	      6203	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	CALL_20
0x4006bf1	          0x4489e7	                           mov edi, r12d	      6157	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0x4006bf4	        0x438d1c24	                    lea ebx, [r12 + r12]	      6158	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	CALL_14
0x4006bf8	          0xc1e704	                              shl edi, 4	      6157	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0x4006bfb	      0xe800000000	                          call 0x4006c00	      6157	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0x4006c00	          0x4885c0	                           test rax, rax	      6160	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	IF_13
0x4006c03	     0xf84e7feffff	                            je 0x4006af0	      6160	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	IF_13
0x4006c09	            0x31d2	                            xor edx, edx	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x4006c0b	          0x4585e4	                         test r12d, r12d	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x4006c0e	            0x7e12	                           jle 0x4006c22	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x4006c10	      0x488b4cd500	            mov rcx, qword [rbp + rdx*8]	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x4006c15	        0x48890cd0	            mov qword [rax + rdx*8], rcx	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x4006c19	        0x4883c201	                              add rdx, 1	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x4006c1d	          0x4139d5	                           cmp r13d, edx	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x4006c20	            0x7fee	                            jg 0x4006c10	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x4006c22	          0x4889ef	                            mov rdi, rbp	      6167	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	CALL_15
0x4006c25	      0x4889442408	                mov qword [rsp + 8], rax	      6167	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	CALL_15
0x4006c2a	          0x4189dd	                           mov r13d, ebx	      6169	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0x4006c2d	      0xe800000000	                          call 0x4006c32	      6167	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	CALL_15
0x4006c32	      0x488b442408	                mov rax, qword [rsp + 8]	      6167	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	CALL_15
0x4006c37	          0x4889c5	                            mov rbp, rax	      6167	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	CALL_15
0x4006c3a	      0xe9eafeffff	                           jmp 0x4006b29	      6167	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	CALL_15
0x4006c3f	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      6118	ops.c	FUNCTION_70	IF_5
0x4006c44	          0x803840	                    cmp byte [rax], 0x40	      6118	ops.c	FUNCTION_70	IF_5
0x4006c47	     0xf85d2fcffff	                           jne 0x400691f	      6118	ops.c	FUNCTION_70	IF_5
0x4006c4d	    0x8b0d00000000	            mov ecx, dword [0x04006c53] 	      6121	ops.c	FUNCTION_70	IF_5	IF_6
0x4006c53	            0x85c9	                           test ecx, ecx	      6121	ops.c	FUNCTION_70	IF_5	IF_6
0x4006c55	     0xf85c4fcffff	                           jne 0x400691f	      6121	ops.c	FUNCTION_70	IF_5	IF_6
0x4006c5b	      0xe92bffffff	                           jmp 0x4006b8b	      6121	ops.c	FUNCTION_70	IF_5	IF_6
0x4006c60	            0x31db	                            xor ebx, ebx	      6176	ops.c	FUNCTION_70	WHILE_1	IF_11	ELSE_3
0x4006c62	      0xe991fdffff	                           jmp 0x40069f8	      6176	ops.c	FUNCTION_70	WHILE_1	IF_11	ELSE_3
0x4006c67	      0xe800000000	                          call 0x4006c6c	      6218	ops.c	FUNCTION_70
shift_delete_registers	SWITCH,0:IF,1:WHILE,0:DO,0:FOR,1:ELSE,0:CALL,1:functions,0	24
0x4002f30	        0x4883ec08	                              sub rsp, 8	      1664	ops.c	FUNCTION_31
0x4002f34	    0x488b3d000000	            mov rdi, qword [0x04002f3b] 	      3045	ops.c	FUNCTION_44	CALL_1
0x4002f3b	    0x48c705000000	               mov qword [0x04002f46], 0	      1667	ops.c	FUNCTION_31
0x4002f46	      0xe895d4ffff	                      call sym.free_yank	      3045	ops.c	FUNCTION_44	CALL_1
0x4002f4b	      0xb800000000	                              mov eax, 0	      3045	ops.c	FUNCTION_44	CALL_1
0x4002f50	          0x488b10	                    mov rdx, qword [rax]	      1670	ops.c	FUNCTION_31	FOR_1
0x4002f53	        0x4883e820	                           sub rax, 0x20	      1670	ops.c	FUNCTION_31	FOR_1
0x4002f57	        0x48895040	             mov qword [rax + 0x40], rdx	      1670	ops.c	FUNCTION_31	FOR_1
0x4002f5b	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1670	ops.c	FUNCTION_31	FOR_1
0x4002f5f	        0x48895048	             mov qword [rax + 0x48], rdx	      1670	ops.c	FUNCTION_31	FOR_1
0x4002f63	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      1670	ops.c	FUNCTION_31	FOR_1
0x4002f67	        0x48895050	             mov qword [rax + 0x50], rdx	      1670	ops.c	FUNCTION_31	FOR_1
0x4002f6b	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1670	ops.c	FUNCTION_31	FOR_1
0x4002f6f	        0x48895058	             mov qword [rax + 0x58], rdx	      1670	ops.c	FUNCTION_31	FOR_1
0x4002f73	    0x483d00000000	                              cmp rax, 0	      1669	ops.c	FUNCTION_31	FOR_1
0x4002f79	            0x75d5	                           jne 0x4002f50	      1669	ops.c	FUNCTION_31	FOR_1
0x4002f7b	    0x8b0500000000	            mov eax, dword [0x04002f81] 	      1672	ops.c	FUNCTION_31	IF_1
0x4002f81	    0x48c705000000	               mov qword [0x04002f8c], 0	      1671	ops.c	FUNCTION_31
0x4002f8c	            0x85c0	                           test eax, eax	      1672	ops.c	FUNCTION_31	IF_1
0x4002f8e	            0x750b	                           jne 0x4002f9b	      1672	ops.c	FUNCTION_31	IF_1
0x4002f90	    0x48c705000000	               mov qword [0x04002f9b], 0	      1673	ops.c	FUNCTION_31	IF_1
0x4002f9b	    0x48c705000000	               mov qword [0x04002fa6], 0	      1674	ops.c	FUNCTION_31
0x4002fa6	        0x4883c408	                              add rsp, 8	      1675	ops.c	FUNCTION_31
0x4002faa	              0xc3	                                     ret	      1675	ops.c	FUNCTION_31
swapchar	SWITCH,0:IF,11:WHILE,0:DO,0:FOR,0:ELSE,4:CALL,17:functions,0	165
0x40037d0	            0x4157	                                push r15	      2541	ops.c	FUNCTION_38
0x40037d2	            0x4156	                                push r14	      2541	ops.c	FUNCTION_38
0x40037d4	            0x4155	                                push r13	      2541	ops.c	FUNCTION_38
0x40037d6	            0x4154	                                push r12	      2541	ops.c	FUNCTION_38
0x40037d8	          0x4989f4	                            mov r12, rsi	      2541	ops.c	FUNCTION_38
0x40037db	              0x55	                                push rbp	      2541	ops.c	FUNCTION_38
0x40037dc	              0x53	                                push rbx	      2541	ops.c	FUNCTION_38
0x40037dd	            0x89fd	                            mov ebp, edi	      2541	ops.c	FUNCTION_38
0x40037df	          0x4889f7	                            mov rdi, rsi	      2545	ops.c	FUNCTION_38	CALL_1
0x40037e2	        0x4883ec18	                           sub rsp, 0x18	      2541	ops.c	FUNCTION_38
0x40037e6	      0xe800000000	                          call 0x40037eb	      2545	ops.c	FUNCTION_38	CALL_1
0x40037eb	          0x83f87f	                           cmp eax, 0x7f	      2548	ops.c	FUNCTION_38	IF_1
0x40037ee	            0x89c3	                            mov ebx, eax	      2545	ops.c	FUNCTION_38	CALL_1
0x40037f0	        0x410f9fc5	                               setg r13b	      2548	ops.c	FUNCTION_38	IF_1
0x40037f4	          0x83fd0f	                            cmp ebp, 0xf	      2548	ops.c	FUNCTION_38	IF_1
0x40037f7	            0x7517	                           jne 0x4003810	      2548	ops.c	FUNCTION_38	IF_1
0x40037f9	          0x4584ed	                         test r13b, r13b	      2548	ops.c	FUNCTION_38	IF_1
0x40037fc	            0x7412	                            je 0x4003810	      2548	ops.c	FUNCTION_38	IF_1
0x40037fe	            0x31c0	                            xor eax, eax	      2602	ops.c	FUNCTION_38
0x4003800	        0x4883c418	                           add rsp, 0x18	      2603	ops.c	FUNCTION_38
0x4003804	              0x5b	                                 pop rbx	      2603	ops.c	FUNCTION_38
0x4003805	              0x5d	                                 pop rbp	      2603	ops.c	FUNCTION_38
0x4003806	            0x415c	                                 pop r12	      2603	ops.c	FUNCTION_38
0x4003808	            0x415d	                                 pop r13	      2603	ops.c	FUNCTION_38
0x400380a	            0x415e	                                 pop r14	      2603	ops.c	FUNCTION_38
0x400380c	            0x415f	                                 pop r15	      2603	ops.c	FUNCTION_38
0x400380e	              0xc3	                                     ret	      2603	ops.c	FUNCTION_38
0x400380f	              0x90	                                     nop	      2603	ops.c	FUNCTION_38
0x4003810	          0x83fd0b	                            cmp ebp, 0xb	      2552	ops.c	FUNCTION_38	IF_2
0x4003813	     0xf858f000000	                           jne 0x40038a8	      2552	ops.c	FUNCTION_38	IF_2
0x4003819	    0x81fbdf000000	                           cmp ebx, 0xdf	      2552	ops.c	FUNCTION_38	IF_2
0x400381f	     0xf8583000000	                           jne 0x40038a8	      2552	ops.c	FUNCTION_38	IF_2
0x4003825	    0x8b0d00000000	            mov ecx, dword [0x0400382b] 	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x400382b	            0x85c9	                           test ecx, ecx	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x400382d	            0x7515	                           jne 0x4003844	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x400382f	    0x488b35000000	            mov rsi, qword [0x04003836] 	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x4003836	      0xbf00000000	                              mov edi, 0	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x400383b	      0xb90b000000	                            mov ecx, 0xb	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x4003840	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x4003842	            0x7564	                           jne 0x40038a8	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x4003844	    0x488b05000000	            mov rax, qword [0x0400384b] 	      2555	ops.c	FUNCTION_38	IF_2
0x400384b	        0x498b3424	                    mov rsi, qword [r12]	      2558	ops.c	FUNCTION_38	IF_2
0x400384f	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      2558	ops.c	FUNCTION_38	IF_2
0x4003854	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2555	ops.c	FUNCTION_38	IF_2
0x4003858	        0x448b7840	           mov r15d, dword [rax + 0x40] 	      2555	ops.c	FUNCTION_38	IF_2
0x400385c	        0x448b7044	           mov r14d, dword [rax + 0x44] 	      2555	ops.c	FUNCTION_38	IF_2
0x4003860	        0x48897038	             mov qword [rax + 0x38], rsi	      2558	ops.c	FUNCTION_38	IF_2
0x4003864	        0x48897840	             mov qword [rax + 0x40], rdi	      2558	ops.c	FUNCTION_38	IF_2
0x4003868	            0x31ff	                            xor edi, edi	      2559	ops.c	FUNCTION_38	IF_2	CALL_3
0x400386a	      0x4889542408	                mov qword [rsp + 8], rdx	      2555	ops.c	FUNCTION_38	IF_2
0x400386f	      0xe800000000	                          call 0x4003874	      2559	ops.c	FUNCTION_38	IF_2	CALL_3
0x4003874	      0xbf53000000	                           mov edi, 0x53	      2560	ops.c	FUNCTION_38	IF_2	CALL_4
0x4003879	      0xe800000000	                          call 0x400387e	      2560	ops.c	FUNCTION_38	IF_2	CALL_4
0x400387e	      0xbf53000000	                           mov edi, 0x53	      2561	ops.c	FUNCTION_38	IF_2	CALL_5
0x4003883	      0xe800000000	                          call 0x4003888	      2561	ops.c	FUNCTION_38	IF_2	CALL_5
0x4003888	    0x488b05000000	            mov rax, qword [0x0400388f] 	      2562	ops.c	FUNCTION_38	IF_2
0x400388f	      0x488b542408	                mov rdx, qword [rsp + 8]	      2562	ops.c	FUNCTION_38	IF_2
0x4003894	          0x4c89e7	                            mov rdi, r12	      2563	ops.c	FUNCTION_38	IF_2	CALL_6
0x4003897	        0x48895038	             mov qword [rax + 0x38], rdx	      2562	ops.c	FUNCTION_38	IF_2
0x400389b	        0x44897840	            mov dword [rax + 0x40], r15d	      2562	ops.c	FUNCTION_38	IF_2
0x400389f	        0x44897044	            mov dword [rax + 0x44], r14d	      2562	ops.c	FUNCTION_38	IF_2
0x40038a3	      0xe800000000	                          call 0x40038a8	      2563	ops.c	FUNCTION_38	IF_2	CALL_6
0x40038a8	    0x8b1500000000	            mov edx, dword [0x040038ae] 	      2566	ops.c	FUNCTION_38	IF_3
0x40038ae	            0x85d2	                           test edx, edx	      2566	ops.c	FUNCTION_38	IF_3
0x40038b0	            0x740c	                            je 0x40038be	      2566	ops.c	FUNCTION_38	IF_3
0x40038b2	    0x81fbff000000	                           cmp ebx, 0xff	      2566	ops.c	FUNCTION_38	IF_3
0x40038b8	     0xf8f40ffffff	                            jg 0x40037fe	      2566	ops.c	FUNCTION_38	IF_3
0x40038be	            0x89df	                            mov edi, ebx	      2570	ops.c	FUNCTION_38	IF_4	CALL_7
0x40038c0	      0xe800000000	                          call 0x40038c5	      2570	ops.c	FUNCTION_38	IF_4	CALL_7
0x40038c5	            0x85c0	                           test eax, eax	      2570	ops.c	FUNCTION_38	IF_4	CALL_7
0x40038c7	            0x7477	                            je 0x4003940	      2570	ops.c	FUNCTION_38	IF_4	CALL_7
0x40038c9	          0x83fd0f	                            cmp ebp, 0xf	      2572	ops.c	FUNCTION_38	IF_4	IF_5
0x40038cc	     0xf849e000000	                            je 0x4003970	      2572	ops.c	FUNCTION_38	IF_4	IF_5
0x40038d2	          0x83fd0c	                            cmp ebp, 0xc	      2574	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x40038d5	     0xf8423ffffff	                            je 0x40037fe	      2574	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x40038db	            0x89df	                            mov edi, ebx	      2575	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x40038dd	      0xe800000000	                          call 0x40038e2	      2575	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x40038e2	            0x89c5	                            mov ebp, eax	      2575	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x40038e4	            0x39dd	                            cmp ebp, ebx	      2584	ops.c	FUNCTION_38	IF_10
0x40038e6	     0xf8412ffffff	                            je 0x40037fe	      2584	ops.c	FUNCTION_38	IF_10
0x40038ec	    0x8b0500000000	            mov eax, dword [0x040038f2] 	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x40038f2	            0x85c0	                           test eax, eax	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x40038f4	            0x7412	                            je 0x4003908	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x40038f6	          0x83fd7f	                           cmp ebp, 0x7f	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x40038f9	     0xf8f99000000	                            jg 0x4003998	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x40038ff	          0x4584ed	                         test r13b, r13b	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x4003902	     0xf8590000000	                           jne 0x4003998	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x4003908	        0x498b3424	                    mov rsi, qword [r12]	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x400390c	    0x488b3d000000	            mov rdi, qword [0x04003913] 	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x4003913	      0xba01000000	                              mov edx, 1	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x4003918	      0xe800000000	                          call 0x400391d	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x400391d	      0x4963542408	            movsxd rdx, dword [r12 + 8] 	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x4003922	        0x40882c10	               mov byte [rax + rdx], bpl	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x4003926	        0x4883c418	                           add rsp, 0x18	      2603	ops.c	FUNCTION_38
0x400392a	      0xb801000000	                              mov eax, 1	      2600	ops.c	FUNCTION_38	IF_10
0x400392f	              0x5b	                                 pop rbx	      2603	ops.c	FUNCTION_38
0x4003930	              0x5d	                                 pop rbp	      2603	ops.c	FUNCTION_38
0x4003931	            0x415c	                                 pop r12	      2603	ops.c	FUNCTION_38
0x4003933	            0x415d	                                 pop r13	      2603	ops.c	FUNCTION_38
0x4003935	            0x415e	                                 pop r14	      2603	ops.c	FUNCTION_38
0x4003937	            0x415f	                                 pop r15	      2603	ops.c	FUNCTION_38
0x4003939	              0xc3	                                     ret	      2603	ops.c	FUNCTION_38
0x400393a	    0x660f1f440000	                    nop word [rax + rax]	      2603	ops.c	FUNCTION_38
0x4003940	            0x89df	                            mov edi, ebx	      2577	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_10
0x4003942	      0xe800000000	                          call 0x4003947	      2577	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_10
0x4003947	            0x85c0	                           test eax, eax	      2577	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_10
0x4003949	     0xf84affeffff	                            je 0x40037fe	      2577	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_10
0x400394f	          0x83fd0f	                            cmp ebp, 0xf	      2579	ops.c	FUNCTION_38	ELSE_2	IF_7	IF_8
0x4003952	     0xf84a8000000	                            je 0x4003a00	      2579	ops.c	FUNCTION_38	ELSE_2	IF_7	IF_8
0x4003958	          0x83fd0b	                            cmp ebp, 0xb	      2581	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x400395b	     0xf849dfeffff	                            je 0x40037fe	      2581	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x4003961	            0x89df	                            mov edi, ebx	      2582	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x4003963	      0xe800000000	                          call 0x4003968	      2582	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x4003968	            0x89c5	                            mov ebp, eax	      2582	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x400396a	      0xe975ffffff	                           jmp 0x40038e4	      2582	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x400396f	              0x90	                                     nop	      2582	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x4003970	          0x8d4bac	                   lea ecx, [rbx - 0x54]	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4003973	      0xba4fecc44e	                     mov edx, 0x4ec4ec4f	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4003978	            0x89c8	                            mov eax, ecx	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x400397a	            0xf7ea	                                imul edx	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x400397c	            0x89c8	                            mov eax, ecx	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x400397e	          0xc1f81f	                           sar eax, 0x1f	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4003981	          0xc1fa03	                              sar edx, 3	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4003984	            0x29c2	                            sub edx, eax	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4003986	          0x6bea1a	                     imul ebp, edx, 0x1a	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4003989	            0x29e9	                            sub ecx, ebp	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x400398b	          0x8d6961	                   lea ebp, [rcx + 0x61]	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x400398e	      0xe951ffffff	                           jmp 0x40038e4	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4003993	       0xf1f440000	                   nop dword [rax + rax]	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4003998	    0x488b05000000	            mov rax, qword [0x0400399f] 	      2589	ops.c	FUNCTION_38	IF_10	IF_11
0x400399f	        0x498b3424	                    mov rsi, qword [r12]	      2591	ops.c	FUNCTION_38	IF_10	IF_11
0x40039a3	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      2591	ops.c	FUNCTION_38	IF_10	IF_11
0x40039a8	        0x4c8b7038	            mov r14, qword [rax + 0x38] 	      2589	ops.c	FUNCTION_38	IF_10	IF_11
0x40039ac	        0x448b6840	           mov r13d, dword [rax + 0x40] 	      2589	ops.c	FUNCTION_38	IF_10	IF_11
0x40039b0	          0x8b5844	            mov ebx, dword [rax + 0x44] 	      2589	ops.c	FUNCTION_38	IF_10	IF_11
0x40039b3	        0x48897038	             mov qword [rax + 0x38], rsi	      2591	ops.c	FUNCTION_38	IF_10	IF_11
0x40039b7	        0x48897840	             mov qword [rax + 0x40], rdi	      2591	ops.c	FUNCTION_38	IF_10	IF_11
0x40039bb	      0xe800000000	                          call 0x40039c0	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x40039c0	          0x4889c7	                            mov rdi, rax	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x40039c3	      0xe800000000	                          call 0x40039c8	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x40039c8	            0x31d2	                            xor edx, edx	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x40039ca	          0x4863f8	                         movsxd rdi, eax	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x40039cd	            0x31f6	                            xor esi, esi	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x40039cf	      0xe800000000	                          call 0x40039d4	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x40039d4	            0x89ef	                            mov edi, ebp	      2594	ops.c	FUNCTION_38	IF_10	IF_11	CALL_16
0x40039d6	      0xe800000000	                          call 0x40039db	      2594	ops.c	FUNCTION_38	IF_10	IF_11	CALL_16
0x40039db	    0x488b05000000	            mov rax, qword [0x040039e2] 	      2595	ops.c	FUNCTION_38	IF_10	IF_11
0x40039e2	        0x4c897038	             mov qword [rax + 0x38], r14	      2595	ops.c	FUNCTION_38	IF_10	IF_11
0x40039e6	        0x44896840	            mov dword [rax + 0x40], r13d	      2595	ops.c	FUNCTION_38	IF_10	IF_11
0x40039ea	          0x895844	             mov dword [rax + 0x44], ebx	      2595	ops.c	FUNCTION_38	IF_10	IF_11
0x40039ed	      0xb801000000	                              mov eax, 1	      2600	ops.c	FUNCTION_38	IF_10
0x40039f2	      0xe909feffff	                           jmp 0x4003800	      2588	ops.c	FUNCTION_38	IF_10	IF_11
0x40039f7	    0x660f1f840000	                    nop word [rax + rax]	      2588	ops.c	FUNCTION_38	IF_10	IF_11
0x4003a00	          0x8d4bcc	                   lea ecx, [rbx - 0x34]	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4003a03	      0xba4fecc44e	                     mov edx, 0x4ec4ec4f	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4003a08	            0x89c8	                            mov eax, ecx	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4003a0a	            0xf7ea	                                imul edx	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4003a0c	            0x89c8	                            mov eax, ecx	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4003a0e	          0xc1f81f	                           sar eax, 0x1f	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4003a11	          0xc1fa03	                              sar edx, 3	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4003a14	            0x29c2	                            sub edx, eax	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4003a16	          0x6bea1a	                     imul ebp, edx, 0x1a	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4003a19	            0x29e9	                            sub ecx, ebp	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4003a1b	          0x8d6941	                   lea ebp, [rcx + 0x41]	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4003a1e	      0xe9c1feffff	                           jmp 0x40038e4	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
do_put	SWITCH,0:IF,100:WHILE,1:DO,1:FOR,8:ELSE,27:CALL,105:functions,0	1331
0x4007d50	            0x4157	                                push r15	      3462	ops.c	FUNCTION_48
0x4007d52	            0x4156	                                push r14	      3462	ops.c	FUNCTION_48
0x4007d54	          0x4189cf	                           mov r15d, ecx	      3462	ops.c	FUNCTION_48
0x4007d57	            0x4155	                                push r13	      3462	ops.c	FUNCTION_48
0x4007d59	            0x4154	                                push r12	      3462	ops.c	FUNCTION_48
0x4007d5b	          0x4189f5	                           mov r13d, esi	      3462	ops.c	FUNCTION_48
0x4007d5e	              0x55	                                push rbp	      3462	ops.c	FUNCTION_48
0x4007d5f	              0x53	                                push rbx	      3462	ops.c	FUNCTION_48
0x4007d60	    0x4881ecd80000	                           sub rsp, 0xd8	      3462	ops.c	FUNCTION_48
0x4007d67	    0x89bc249c0000	             mov dword [rsp + 0x9c], edi	      3462	ops.c	FUNCTION_48
0x4007d6e	    0x488dbc249c00	                   lea rdi, [rsp + 0x9c]	      3494	ops.c	FUNCTION_48	CALL_1
0x4007d76	        0x48891424	                    mov qword [rsp], rdx	      3462	ops.c	FUNCTION_48
0x4007d7a	    0x64488b042528	                mov rax, qword fs:[0x28]	      3462	ops.c	FUNCTION_48
0x4007d83	    0x48898424c800	             mov qword [rsp + 0xc8], rax	      3462	ops.c	FUNCTION_48
0x4007d8b	            0x31c0	                            xor eax, eax	      3462	ops.c	FUNCTION_48
0x4007d8d	        0x894c2438	             mov dword [rsp + 0x38], ecx	      3462	ops.c	FUNCTION_48
0x4007d91	    0x48c78424c000	               mov qword [rsp + 0xc0], 0	      3488	ops.c	FUNCTION_48
0x4007d9d	    0xc78424a80000	               mov dword [rsp + 0xa8], 0	      3489	ops.c	FUNCTION_48
0x4007da8	      0xe800000000	                          call 0x4007dad	      3494	ops.c	FUNCTION_48	CALL_1
0x4007dad	    0x8bbc249c0000	            mov edi, dword [rsp + 0x9c] 	      3495	ops.c	FUNCTION_48	CALL_2
0x4007db4	      0xe800000000	                          call 0x4007db9	      3495	ops.c	FUNCTION_48	CALL_2
0x4007db9	        0x4183e701	                             and r15d, 1	      3498	ops.c	FUNCTION_48	IF_1
0x4007dbd	    0xc74424080000	                  mov dword [rsp + 8], 0	      3483	ops.c	FUNCTION_48
0x4007dc5	     0xf8575030000	                           jne 0x4008140	      3498	ops.c	FUNCTION_48	IF_1
0x4007dcb	    0x488b15000000	            mov rdx, qword [0x04007dd2] 	      3501	ops.c	FUNCTION_48
0x4007dd2	    0x488b05000000	            mov rax, qword [0x04007dd9] 	      3501	ops.c	FUNCTION_48
0x4007dd9	    0x8bbc249c0000	            mov edi, dword [rsp + 0x9c] 	      3508	ops.c	FUNCTION_48	IF_2
0x4007de0	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      3501	ops.c	FUNCTION_48
0x4007de4	        0x488b5a40	            mov rbx, qword [rdx + 0x40] 	      3501	ops.c	FUNCTION_48
0x4007de8	          0x83ff2e	                           cmp edi, 0x2e	      3508	ops.c	FUNCTION_48	IF_2
0x4007deb	    0x488988e01100	          mov qword [rax + 0x11e0], rcx 	      3501	ops.c	FUNCTION_48
0x4007df2	    0x488998e81100	          mov qword [rax + 0x11e8], rbx 	      3501	ops.c	FUNCTION_48
0x4007df9	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      3502	ops.c	FUNCTION_48
0x4007dfd	        0x488b5a40	            mov rbx, qword [rdx + 0x40] 	      3502	ops.c	FUNCTION_48
0x4007e01	    0x488988001200	          mov qword [rax + 0x1200], rcx 	      3502	ops.c	FUNCTION_48
0x4007e08	    0x488998081200	          mov qword [rax + 0x1208], rbx 	      3502	ops.c	FUNCTION_48
0x4007e0f	     0xf84db020000	                            je 0x40080f0	      3508	ops.c	FUNCTION_48	IF_2
0x4007e15	    0x488d9424a800	                   lea rdx, [rsp + 0xa8]	      3525	ops.c	FUNCTION_48	IF_5	CALL_8
0x4007e1d	    0x488db424c000	                   lea rsi, [rsp + 0xc0]	      3525	ops.c	FUNCTION_48	IF_5	CALL_8
0x4007e25	      0xb901000000	                              mov ecx, 1	      3525	ops.c	FUNCTION_48	IF_5	CALL_8
0x4007e2a	      0xe800000000	                          call 0x4007e2f	      3525	ops.c	FUNCTION_48	IF_5	CALL_8
0x4007e2f	            0x85c0	                           test eax, eax	      3525	ops.c	FUNCTION_48	IF_5	CALL_8
0x4007e31	            0x740f	                            je 0x4007e42	      3525	ops.c	FUNCTION_48	IF_5	CALL_8
0x4007e33	    0x4883bc24c000	               cmp qword [rsp + 0xc0], 0	      3527	ops.c	FUNCTION_48	IF_5	IF_6
0x4007e3c	     0xf8482020000	                            je 0x40080c4	      3527	ops.c	FUNCTION_48	IF_5	IF_6
0x4007e42	    0x488b05000000	            mov rax, qword [0x04007e49] 	      3533	ops.c	FUNCTION_48	CALL_9
0x4007e49	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      3533	ops.c	FUNCTION_48	CALL_9
0x4007e4d	        0x488d7701	                      lea rsi, [rdi + 1]	      3533	ops.c	FUNCTION_48	CALL_9
0x4007e51	      0xe800000000	                          call 0x4007e56	      3533	ops.c	FUNCTION_48	CALL_9
0x4007e56	    0x488b8424c000	            mov rax, qword [rsp + 0xc0] 	      3535	ops.c	FUNCTION_48	IF_7
0x4007e5e	          0x4885c0	                           test rax, rax	      3535	ops.c	FUNCTION_48	IF_7
0x4007e61	     0xf84ec0a0000	                            je 0x4008953	      3535	ops.c	FUNCTION_48	IF_7
0x4007e67	    0x83bc249c0000	           cmp dword [rsp + 0x9c], 0x3d 	      3539	ops.c	FUNCTION_48	IF_7	IF_8
0x4007e6f	     0xf8410030000	                            je 0x4008185	      3539	ops.c	FUNCTION_48	IF_7	IF_8
0x4007e75	      0xf644243808	               test byte [rsp + 0x38], 8	      3632	ops.c	FUNCTION_48	IF_23
0x4007e7a	     0xf85e1030000	                           jne 0x4008261	      3632	ops.c	FUNCTION_48	IF_23
0x4007e80	    0x4c8db424c000	                   lea r14, [rsp + 0xc0]	      3579	ops.c	FUNCTION_48	IF_7	ELSE_1
0x4007e88	    0x48c744242000	               mov qword [rsp + 0x20], 0	      3480	ops.c	FUNCTION_48
0x4007e91	          0x4531e4	                          xor r12d, r12d	      3537	ops.c	FUNCTION_48	IF_7
0x4007e94	      0xbd01000000	                              mov ebp, 1	      3578	ops.c	FUNCTION_48	IF_7	ELSE_1
0x4007e99	      0xe800000000	                          call 0x4007e9e	      3675	ops.c	FUNCTION_48	ELSE_6	IF_33	CALL_32
0x4007e9e	            0x85c0	                           test eax, eax	      3675	ops.c	FUNCTION_48	ELSE_6	IF_33	CALL_32
0x4007ea0	     0xf84f2010000	                            je 0x4008098	      3675	ops.c	FUNCTION_48	ELSE_6	IF_33	CALL_32
0x4007ea6	          0x498b3e	                    mov rdi, qword [r14]	      3678	ops.c	FUNCTION_48	CALL_33
0x4007ea9	      0xe800000000	                          call 0x4007eae	      3678	ops.c	FUNCTION_48	CALL_33
0x4007eae	          0x4585e4	                         test r12d, r12d	      3681	ops.c	FUNCTION_48	IF_34
0x4007eb1	      0x4889442410	             mov qword [rsp + 0x10], rax	      3678	ops.c	FUNCTION_48	CALL_33
0x4007eb6	        0x89442458	             mov dword [rsp + 0x58], eax	      3678	ops.c	FUNCTION_48	CALL_33
0x4007eba	       0xf94442440	                  sete byte [rsp + 0x40]	      3681	ops.c	FUNCTION_48	IF_34
0x4007ebf	    0x833d00000000	               cmp dword [0x04007ec6], 4	      3681	ops.c	FUNCTION_48	IF_34
0x4007ec6	       0xfb6442440	           movzx eax, byte [rsp + 0x40] 	      3681	ops.c	FUNCTION_48	IF_34
0x4007ecb	           0xf94c3	                                 sete bl	      3681	ops.c	FUNCTION_48	IF_34
0x4007ece	            0x20c3	                              and bl, al	      3681	ops.c	FUNCTION_48	IF_34
0x4007ed0	        0x885c2418	               mov byte [rsp + 0x18], bl	      3681	ops.c	FUNCTION_48	IF_34
0x4007ed4	     0xf8470120000	                            je 0x400914a	      3681	ops.c	FUNCTION_48	IF_34
0x4007eda	      0xe800000000	                          call 0x4007edf	      3683	ops.c	FUNCTION_48	IF_34	IF_35	CALL_34
0x4007edf	          0x83f809	                              cmp eax, 9	      3683	ops.c	FUNCTION_48	IF_34	IF_35	CALL_34
0x4007ee2	     0xf84d1140000	                            je 0x40093b9	      3683	ops.c	FUNCTION_48	IF_34	IF_35	CALL_34
0x4007ee8	    0x488b05000000	            mov rax, qword [0x04007eef] 	      3694	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x4007eef	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3694	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x4007ef2	            0x85c0	                           test eax, eax	      3694	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x4007ef4	     0xf8e99140000	                           jle 0x4009393	      3694	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x4007efa	      0xe800000000	                          call 0x4007eff	      3695	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x4007eff	            0x31ff	                            xor edi, edi	      3695	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x4007f01	        0x4183fd01	                             cmp r13d, 1	      3695	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x4007f05	        0x400f94c7	                                sete dil	      3695	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x4007f09	             0x1c7	                            add edi, eax	      3695	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x4007f0b	      0xe800000000	                          call 0x4007f10	      3695	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x4007f10	    0x488b1d000000	            mov rbx, qword [0x04007f17] 	      3695	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x4007f17	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      3699	ops.c	FUNCTION_48
0x4007f1b	          0x4531e4	                          xor r12d, r12d	      3700	ops.c	FUNCTION_48
0x4007f1e	    0x48898424b800	             mov qword [rsp + 0xb8], rax	      3699	ops.c	FUNCTION_48
0x4007f26	          0x8b4340	            mov eax, dword [rbx + 0x40] 	      3700	ops.c	FUNCTION_48
0x4007f29	    0x898424a40000	             mov dword [rsp + 0xa4], eax	      3700	ops.c	FUNCTION_48
0x4007f30	       0xfb6442418	           movzx eax, byte [rsp + 0x18] 	      3700	ops.c	FUNCTION_48
0x4007f35	        0x88442440	               mov byte [rsp + 0x40], al	      3700	ops.c	FUNCTION_48
0x4007f39	        0x4183fd01	                             cmp r13d, 1	      3891	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	CALL_62
0x4007f3d	     0xf8435120000	                            je 0x4009178	      3891	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	CALL_62
0x4007f43	    0x488b15000000	            mov rdx, qword [0x04007f4a] 	      3891	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	CALL_62
0x4007f4a	          0x4889d9	                            mov rcx, rbx	      3891	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	CALL_62
0x4007f4d	        0x488b7138	            mov rsi, qword [rcx + 0x38] 	      3917	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x4007f51	        0x488b7940	            mov rdi, qword [rcx + 0x40] 	      3917	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x4007f55	        0x4883fd01	                              cmp rbp, 1	      3929	ops.c	FUNCTION_48	ELSE_14	IF_67
0x4007f59	    0x4889b2e01100	          mov qword [rdx + 0x11e0], rsi 	      3917	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x4007f60	    0x4889bae81100	          mov qword [rdx + 0x11e8], rdi 	      3917	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x4007f67	     0xf8563150000	                           jne 0x40094d0	      3929	ops.c	FUNCTION_48	ELSE_14	IF_67
0x4007f6d	    0x448b15000000	           mov r10d, dword [0x04007f74] 	      3933	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68
0x4007f74	    0x48c744240800	                  mov qword [rsp + 8], 0	      3931	ops.c	FUNCTION_48	ELSE_14	IF_67
0x4007f7d	          0x4585d2	                         test r10d, r10d	      3933	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68
0x4007f80	            0x741a	                            je 0x4007f9c	      3933	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68
0x4007f82	    0x488b8a080300	           mov rcx, qword [rdx + 0x308] 	      3935	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68
0x4007f89	    0x488b82f80200	           mov rax, qword [rdx + 0x2f8] 	      3936	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x4007f90	          0x4839c1	                            cmp rcx, rax	      3936	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x4007f93	        0x480f4dc1	                         cmovge rax, rcx	      3936	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x4007f97	      0x4889442408	                mov qword [rsp + 8], rax	      3936	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x4007f9c	      0x448b6c2410	           mov r13d, dword [rsp + 0x10] 	      3936	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x4007fa1	        0x488b2c24	                    mov rbp, qword [rsp]	      3936	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x4007fa5	    0x488bbc24b800	            mov rdi, qword [rsp + 0xb8] 	      3936	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x4007fad	      0x48635c2458	         movsxd rbx, dword [rsp + 0x58] 	      3936	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x4007fb2	        0x440fafed	                          imul r13d, ebp	      3936	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x4007fb6	        0x418d4501	                      lea eax, [r13 + 1]	      3950	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x4007fba	        0x89442418	             mov dword [rsp + 0x18], eax	      3950	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x4007fbe	        0x418d45ff	                      lea eax, [r13 - 1]	      3967	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x4007fc2	        0x89442428	             mov dword [rsp + 0x28], eax	      3967	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x4007fc6	            0xeb55	                           jmp 0x400801d	      3967	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x4007fc8	     0xf1f84000000	                   nop dword [rax + rax]	      3967	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x4007fd0	      0xe800000000	                          call 0x4007fd5	      3944	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_64
0x4007fd5	    0x448b0d000000	            mov r9d, dword [0x04007fdc] 	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x4007fdc	        0x48890424	                    mov qword [rsp], rax	      3944	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_64
0x4007fe0	          0x4585c9	                           test r9d, r9d	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x4007fe3	     0xf8468060000	                            je 0x4008651	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x4007fe9	          0x4889c7	                            mov rdi, rax	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x4007fec	      0xe800000000	                          call 0x4007ff1	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x4007ff1	    0x398424a40000	            cmp dword [rsp + 0xa4], eax 	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x4007ff8	     0xf8e5c060000	                           jle 0x400865a	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x4007ffe	    0x488b8424b800	            mov rax, qword [rsp + 0xb8] 	      3947	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71
0x4008006	        0x488d7801	                      lea rdi, [rax + 1]	      3947	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71
0x400800a	    0x4889bc24b800	             mov qword [rsp + 0xb8], rdi	      3947	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71
0x4008012	      0x48397c2408	                cmp qword [rsp + 8], rdi	      3972	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x4008017	     0xf8cd40a0000	                            jl 0x4008af1	      3972	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x400801d	          0x4585ed	                         test r13d, r13d	      3942	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70
0x4008020	            0x7fae	                            jg 0x4007fd0	      3942	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70
0x4008022	    0x448b05000000	            mov r8d, dword [0x04008029] 	      3970	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_74
0x4008029	          0x4585c0	                           test r8d, r8d	      3970	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_74
0x400802c	     0xf850e060000	                           jne 0x4008640	      3970	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_74
0x4008032	    0x488b05000000	            mov rax, qword [0x04008039] 	      3977	ops.c	FUNCTION_48	ELSE_14	IF_67
0x4008039	    0x488b15000000	            mov rdx, qword [0x04008040] 	      3977	ops.c	FUNCTION_48	ELSE_14	IF_67
0x4008040	          0x4585ed	                         test r13d, r13d	      3979	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x4008043	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      3977	ops.c	FUNCTION_48	ELSE_14	IF_67
0x4008047	        0x488b5840	            mov rbx, qword [rax + 0x40] 	      3977	ops.c	FUNCTION_48	ELSE_14	IF_67
0x400804b	    0x48898a001200	          mov qword [rdx + 0x1200], rcx 	      3977	ops.c	FUNCTION_48	ELSE_14	IF_67
0x4008052	    0x48899a081200	          mov qword [rdx + 0x1208], rbx 	      3977	ops.c	FUNCTION_48	ELSE_14	IF_67
0x4008059	            0x7415	                            je 0x4008070	      3979	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x400805b	    0x8b3500000000	            mov esi, dword [0x04008061] 	      3979	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x4008061	            0x85f6	                           test esi, esi	      3979	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x4008063	            0x7507	                           jne 0x400806c	      3979	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x4008065	      0xf644243802	               test byte [rsp + 0x38], 2	      3979	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x400806a	            0x7404	                            je 0x4008070	      3979	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x400806c	        0x83404001	               add dword [rax + 0x40], 1	      3980	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x4008070	    0x8bb424a40000	            mov esi, dword [rsp + 0xa4] 	      3981	ops.c	FUNCTION_48	ELSE_14	IF_67	CALL_73
0x4008077	      0xe800000000	                          call 0x400807c	      3981	ops.c	FUNCTION_48	ELSE_14	IF_67	CALL_73
0x400807c	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      4136	ops.c	FUNCTION_48	CALL_102
0x4008081	      0xe800000000	                          call 0x4008086	      4136	ops.c	FUNCTION_48	CALL_102
0x4008086	    0x488b05000000	            mov rax, qword [0x0400808d] 	      4137	ops.c	FUNCTION_48
0x400808d	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      4137	ops.c	FUNCTION_48
0x4008094	         0xf1f4000	                         nop dword [rax]	      4137	ops.c	FUNCTION_48
0x4008098	    0x8b8424a80000	            mov eax, dword [rsp + 0xa8] 	      4140	ops.c	FUNCTION_48	IF_99
0x400809f	            0x85c0	                           test eax, eax	      4140	ops.c	FUNCTION_48	IF_99
0x40080a1	     0xf85cc000000	                           jne 0x4008173	      4140	ops.c	FUNCTION_48	IF_99
0x40080a7	    0x83bc249c0000	           cmp dword [rsp + 0x9c], 0x3d 	      4142	ops.c	FUNCTION_48	IF_100
0x40080af	     0xf849f010000	                            je 0x4008254	      4142	ops.c	FUNCTION_48	IF_100
0x40080b5	    0xc70500000000	               mov dword [0x040080bf], 0	      4145	ops.c	FUNCTION_48
0x40080bf	      0xe800000000	                          call 0x40080c4	      4148	ops.c	FUNCTION_48	CALL_105
0x40080c4	    0x488b8424c800	            mov rax, qword [rsp + 0xc8] 	      4149	ops.c	FUNCTION_48
0x40080cc	    0x644833042528	                xor rax, qword fs:[0x28]	      4149	ops.c	FUNCTION_48
0x40080d5	     0xf85e0140000	                           jne 0x40095bb	      4149	ops.c	FUNCTION_48
0x40080db	    0x4881c4d80000	                           add rsp, 0xd8	      4149	ops.c	FUNCTION_48
0x40080e2	              0x5b	                                 pop rbx	      4149	ops.c	FUNCTION_48
0x40080e3	              0x5d	                                 pop rbp	      4149	ops.c	FUNCTION_48
0x40080e4	            0x415c	                                 pop r12	      4149	ops.c	FUNCTION_48
0x40080e6	            0x415d	                                 pop r13	      4149	ops.c	FUNCTION_48
0x40080e8	            0x415e	                                 pop r14	      4149	ops.c	FUNCTION_48
0x40080ea	            0x415f	                                 pop r15	      4149	ops.c	FUNCTION_48
0x40080ec	              0xc3	                                     ret	      4149	ops.c	FUNCTION_48
0x40080ed	           0xf1f00	                         nop dword [rax]	      4149	ops.c	FUNCTION_48
0x40080f0	    0x8b3d00000000	            mov edi, dword [0x040080f6] 	      3510	ops.c	FUNCTION_48	IF_2	IF_3
0x40080f6	            0x85ff	                           test edi, edi	      3510	ops.c	FUNCTION_48	IF_2	IF_3
0x40080f8	            0x7554	                           jne 0x400814e	      3510	ops.c	FUNCTION_48	IF_2	IF_3
0x40080fa	        0x4183fd01	                             cmp r13d, 1	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x40080fe	            0x745f	                            je 0x400815f	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x4008100	      0x48833c24ff	     cmp qword [rsp], 0xffffffffffffffff	      3513	ops.c	FUNCTION_48	IF_2
0x4008105	      0xbf4f000000	                           mov edi, 0x4f	      3513	ops.c	FUNCTION_48	IF_2
0x400810a	      0xb869000000	                           mov eax, 0x69	      3513	ops.c	FUNCTION_48	IF_2
0x400810f	           0xf45f8	                         cmovne edi, eax	      3513	ops.c	FUNCTION_48	IF_2
0x4008112	        0x488b3424	                    mov rsi, qword [rsp]	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x4008116	            0x31d2	                            xor edx, edx	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x4008118	      0xe800000000	                          call 0x400811d	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x400811d	      0xf644243802	               test byte [rsp + 0x38], 2	      3516	ops.c	FUNCTION_48	IF_2	IF_4	CALL_6
0x4008122	            0x74a0	                            je 0x40080c4	      3516	ops.c	FUNCTION_48	IF_2	IF_4	CALL_6
0x4008124	      0xe800000000	                          call 0x4008129	      3516	ops.c	FUNCTION_48	IF_2	IF_4	CALL_6
0x4008129	            0x85c0	                           test eax, eax	      3516	ops.c	FUNCTION_48	IF_2	IF_4	CALL_6
0x400812b	            0x7497	                            je 0x40080c4	      3516	ops.c	FUNCTION_48	IF_2	IF_4	CALL_6
0x400812d	      0xbf6c000000	                           mov edi, 0x6c	      3517	ops.c	FUNCTION_48	IF_2	CALL_7
0x4008132	      0xe800000000	                          call 0x4008137	      3517	ops.c	FUNCTION_48	IF_2	CALL_7
0x4008137	            0xeb8b	                           jmp 0x40080c4	      3517	ops.c	FUNCTION_48	IF_2	CALL_7
0x4008139	     0xf1f80000000	                         nop dword [rax]	      3517	ops.c	FUNCTION_48	IF_2	CALL_7
0x4008140	      0xe800000000	                          call 0x4008145	      3499	ops.c	FUNCTION_48	CALL_3
0x4008145	        0x89442408	                mov dword [rsp + 8], eax	      3499	ops.c	FUNCTION_48	CALL_3
0x4008149	      0xe97dfcffff	                           jmp 0x4007dcb	      3499	ops.c	FUNCTION_48	CALL_3
0x400814e	    0x8b3d00000000	            mov edi, dword [0x04008154] 	      3511	ops.c	FUNCTION_48	IF_2	CALL_4
0x4008154	      0xe800000000	                          call 0x4008159	      3511	ops.c	FUNCTION_48	IF_2	CALL_4
0x4008159	        0x4183fd01	                             cmp r13d, 1	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x400815d	            0x75a1	                           jne 0x4008100	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x400815f	      0x48833c24ff	     cmp qword [rsp], 0xffffffffffffffff	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x4008164	      0xbf6f000000	                           mov edi, 0x6f	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x4008169	      0xb861000000	                           mov eax, 0x61	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x400816e	           0xf45f8	                         cmovne edi, eax	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x4008171	            0xeb9f	                           jmp 0x4008112	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x4008173	    0x488bbc24c000	            mov rdi, qword [rsp + 0xc0] 	      4141	ops.c	FUNCTION_48	CALL_103
0x400817b	      0xe800000000	                          call 0x4008180	      4141	ops.c	FUNCTION_48	CALL_103
0x4008180	      0xe922ffffff	                           jmp 0x40080a7	      4141	ops.c	FUNCTION_48	CALL_103
0x4008185	          0x4531f6	                          xor r14d, r14d	      4141	ops.c	FUNCTION_48	CALL_103
0x4008188	          0x4531e4	                          xor r12d, r12d	      4141	ops.c	FUNCTION_48	CALL_103
0x400818b	       0xf1f440000	                   nop dword [rax + rax]	      4141	ops.c	FUNCTION_48	CALL_103
0x4008190	    0x48898424b000	             mov qword [rsp + 0xb0], rax	      3547	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1
0x4008198	      0xbb01000000	                              mov ebx, 1	      3548	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1
0x400819d	            0xeb49	                           jmp 0x40081e8	      3548	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1
0x400819f	              0x90	                                     nop	      3548	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1
0x40081a0	      0x498944def8	        mov qword [r14 + rbx*8 - 8], rax	      3551	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_9
0x40081a5	    0x488bbc24b000	            mov rdi, qword [rsp + 0xb0] 	      3553	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	CALL_10
0x40081ad	      0xbe0a000000	                            mov esi, 0xa	      3553	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	CALL_10
0x40081b2	          0x4889dd	                            mov rbp, rbx	      3552	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1
0x40081b5	      0xe800000000	                          call 0x40081ba	      3553	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	CALL_10
0x40081ba	          0x4885c0	                           test rax, rax	      3554	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x40081bd	    0x48898424b000	             mov qword [rsp + 0xb0], rax	      3553	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	CALL_10
0x40081c5	            0x741d	                            je 0x40081e4	      3554	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x40081c7	          0xc60000	                       mov byte [rax], 0	      3557	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_11
0x40081ca	    0x488b9424b000	            mov rdx, qword [rsp + 0xb0] 	      3557	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_11
0x40081d2	        0x488d4201	                      lea rax, [rdx + 1]	      3558	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x40081d6	    0x48898424b000	             mov qword [rsp + 0xb0], rax	      3558	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x40081de	        0x807a0100	                   cmp byte [rdx + 1], 0	      3560	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_12
0x40081e2	            0x743c	                            je 0x4008220	      3560	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_12
0x40081e4	        0x4883c301	                              add rbx, 1	      3560	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_12
0x40081e8	          0x4885c0	                           test rax, rax	      3548	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1
0x40081eb	        0x488d6bff	                      lea rbp, [rbx - 1]	      3548	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1
0x40081ef	            0x7435	                            je 0x4008226	      3548	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1
0x40081f1	          0x4d85f6	                           test r14, r14	      3550	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_9
0x40081f4	            0x75aa	                           jne 0x40081a0	      3550	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_9
0x40081f6	      0xbe0a000000	                            mov esi, 0xa	      3553	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	CALL_10
0x40081fb	          0x4889c7	                            mov rdi, rax	      3553	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	CALL_10
0x40081fe	          0x4889dd	                            mov rbp, rbx	      3552	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1
0x4008201	      0xe800000000	                          call 0x4008206	      3553	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	CALL_10
0x4008206	          0x4889c2	                            mov rdx, rax	      3553	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	CALL_10
0x4008209	    0x48898424b000	             mov qword [rsp + 0xb0], rax	      3553	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	CALL_10
0x4008211	            0x31c0	                            xor eax, eax	      3554	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x4008213	          0x4885d2	                           test rdx, rdx	      3554	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x4008216	            0x75ba	                           jne 0x40081d2	      3554	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x4008218	            0xebca	                           jmp 0x40081e4	      3554	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x400821a	    0x660f1f440000	                    nop word [rax + rax]	      3554	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x4008220	    0x41bc01000000	                             mov r12d, 1	      3562	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_12
0x4008226	          0x4d85f6	                           test r14, r14	      3567	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	IF_13
0x4008229	     0xf8511030000	                           jne 0x4008540	      3567	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	IF_13
0x400822f	    0x8d3ced000000	                        lea edi, [rbp*8]	      3569	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	CALL_11
0x4008236	      0xe800000000	                          call 0x400823b	      3569	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	CALL_11
0x400823b	          0x4885c0	                           test rax, rax	      3571	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	IF_14
0x400823e	          0x4989c6	                            mov r14, rax	      3569	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	CALL_11
0x4008241	     0xf8451feffff	                            je 0x4008098	      3571	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	IF_14
0x4008247	    0x488b8424c000	            mov rax, qword [rsp + 0xc0] 	      3571	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	IF_14
0x400824f	      0xe93cffffff	                           jmp 0x4008190	      3571	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	IF_14
0x4008254	          0x4c89f7	                            mov rdi, r14	      4143	ops.c	FUNCTION_48	CALL_104
0x4008257	      0xe800000000	                          call 0x400825c	      4143	ops.c	FUNCTION_48	CALL_104
0x400825c	      0xe954feffff	                           jmp 0x40080b5	      4143	ops.c	FUNCTION_48	CALL_104
0x4008261	    0x4c8db424c000	                   lea r14, [rsp + 0xc0]	      3579	ops.c	FUNCTION_48	IF_7	ELSE_1
0x4008269	      0xbd01000000	                              mov ebp, 1	      3578	ops.c	FUNCTION_48	IF_7	ELSE_1
0x400826e	    0x48c744245000	               mov qword [rsp + 0x50], 0	      3473	ops.c	FUNCTION_48
0x4008277	    0x48c744242000	               mov qword [rsp + 0x20], 0	      3480	ops.c	FUNCTION_48
0x4008280	    0x488b05000000	            mov rax, qword [0x04008287] 	      3652	ops.c	FUNCTION_48	ELSE_3	IF_28
0x4008287	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	      3656	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_29
0x400828b	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      3652	ops.c	FUNCTION_48	ELSE_3	IF_28
0x400828f	    0x4889bc24b800	             mov qword [rsp + 0xb8], rdi	      3652	ops.c	FUNCTION_48	ELSE_3	IF_28
0x4008297	     0xf848c030000	                            je 0x4008629	      3656	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_29
0x400829d	    0x488d9424b800	                   lea rdx, [rsp + 0xb8]	      3659	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_28
0x40082a5	            0x31f6	                            xor esi, esi	      3659	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_28
0x40082a7	      0xe800000000	                          call 0x40082ac	      3659	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_28
0x40082ac	        0x4183fd01	                             cmp r13d, 1	      3661	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_30
0x40082b0	            0x7509	                           jne 0x40082bb	      3661	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_30
0x40082b2	    0x48838424b800	               add qword [rsp + 0xb8], 1	      3662	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_30
0x40082bb	    0x488b05000000	            mov rax, qword [0x040082c2] 	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x40082c2	        0x48833801	                      cmp qword [rax], 1	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x40082c6	     0xf84fc070000	                            je 0x4008ac8	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x40082cc	    0x488bb424b800	            mov rsi, qword [rsp + 0xb8] 	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x40082d4	        0x488d7eff	                      lea rdi, [rsi - 1]	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x40082d8	      0xe800000000	                          call 0x40082dd	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x40082dd	            0x85c0	                           test eax, eax	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x40082df	           0xf94c0	                                 sete al	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x40082e2	            0x84c0	                             test al, al	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x40082e4	     0xf85aefdffff	                           jne 0x4008098	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x40082ea	        0x4183fd01	                             cmp r13d, 1	      3668	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x40082ee	    0x488b1d000000	            mov rbx, qword [0x040082f5] 	      3669	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x40082f5	    0x488b8424b800	            mov rax, qword [rsp + 0xb8] 	      3669	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x40082fd	     0xf84190e0000	                            je 0x400911c	      3668	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x4008303	        0x48894338	             mov qword [rbx + 0x38], rax	      3671	ops.c	FUNCTION_48	ELSE_3	IF_28	ELSE_5
0x4008307	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	      3672	ops.c	FUNCTION_48	ELSE_3	IF_28
0x400830b	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	      3672	ops.c	FUNCTION_48	ELSE_3	IF_28
0x400830f	    0x41bc01000000	                             mov r12d, 1	      3672	ops.c	FUNCTION_48	ELSE_3	IF_28
0x4008315	    0x488b05000000	            mov rax, qword [0x0400831c] 	      3672	ops.c	FUNCTION_48	ELSE_3	IF_28
0x400831c	    0x4889b0e01100	          mov qword [rax + 0x11e0], rsi 	      3672	ops.c	FUNCTION_48	ELSE_3	IF_28
0x4008323	    0x4889b8e81100	          mov qword [rax + 0x11e8], rdi 	      3672	ops.c	FUNCTION_48	ELSE_3	IF_28
0x400832a	          0x498b3e	                    mov rdi, qword [r14]	      3678	ops.c	FUNCTION_48	CALL_33
0x400832d	      0xe800000000	                          call 0x4008332	      3678	ops.c	FUNCTION_48	CALL_33
0x4008332	          0x8b5340	            mov edx, dword [rbx + 0x40] 	      3700	ops.c	FUNCTION_48
0x4008335	        0x89442458	             mov dword [rsp + 0x58], eax	      3678	ops.c	FUNCTION_48	CALL_33
0x4008339	        0x4183fc02	                             cmp r12d, 2	      3705	ops.c	FUNCTION_48	IF_38
0x400833d	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      3699	ops.c	FUNCTION_48
0x4008341	    0x899424a40000	             mov dword [rsp + 0xa4], edx	      3700	ops.c	FUNCTION_48
0x4008348	    0x48898424b800	             mov qword [rsp + 0xb8], rax	      3699	ops.c	FUNCTION_48
0x4008350	     0xf84df070000	                            je 0x4008b35	      3705	ops.c	FUNCTION_48	IF_38
0x4008356	    0x41bc01000000	                             mov r12d, 1	      3705	ops.c	FUNCTION_48	IF_38
0x400835c	      0xc644244000	                mov byte [rsp + 0x40], 0	      3681	ops.c	FUNCTION_48	IF_34
0x4008361	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	      3922	ops.c	FUNCTION_48	ELSE_14	ELSE_16	IF_66
0x4008365	     0xf84910d0000	                            je 0x40090fc	      3922	ops.c	FUNCTION_48	ELSE_14	ELSE_16	IF_66
0x400836b	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      3924	ops.c	FUNCTION_48	ELSE_14
0x400836f	      0x4889442478	             mov qword [rsp + 0x78], rax	      3924	ops.c	FUNCTION_48	ELSE_14
0x4008374	          0x8b4340	            mov eax, dword [rbx + 0x40] 	      3924	ops.c	FUNCTION_48	ELSE_14
0x4008377	    0x898424980000	             mov dword [rsp + 0x98], eax	      3924	ops.c	FUNCTION_48	ELSE_14
0x400837e	          0x8b4344	            mov eax, dword [rbx + 0x44] 	      3924	ops.c	FUNCTION_48	ELSE_14
0x4008381	    0x898424800000	             mov dword [rsp + 0x80], eax	      3924	ops.c	FUNCTION_48	ELSE_14
0x4008388	      0x48833c2400	                      cmp qword [rsp], 0	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x400838d	      0x498d44eef8	              lea rax, [r14 + rbp*8 - 8]	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x4008392	      0x4889442460	             mov qword [rsp + 0x60], rax	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x4008397	     0xf8e0f100000	                           jle 0x40093ac	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x400839d	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x40083a2	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x40083a7	      0x44896c2474	            mov dword [rsp + 0x74], r13d	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x40083ac	    0x48c744241801	               mov qword [rsp + 0x18], 1	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x40083b5	          0x4989ed	                            mov r13, rbp	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x40083b8	    0xc74424700000	               mov dword [rsp + 0x70], 0	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x40083c0	    0xc744243c0100	               mov dword [rsp + 0x3c], 1	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x40083c8	          0x83e001	                              and eax, 1	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x40083cb	    0xc74424500000	               mov dword [rsp + 0x50], 0	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x40083d3	      0x4889442468	             mov qword [rsp + 0x68], rax	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x40083d8	        0x8b442458	            mov eax, dword [rsp + 0x58] 	        59	string3.h	FUNCTION_93	CALL_3
0x40083dc	          0x83c001	                              add eax, 1	        59	string3.h	FUNCTION_93	CALL_3
0x40083df	            0x4898	                                    cdqe	        59	string3.h	FUNCTION_93	CALL_3
0x40083e1	    0x488984248800	             mov qword [rsp + 0x88], rax	        59	string3.h	FUNCTION_93	CALL_3
0x40083e9	        0x488d45ff	                      lea rax, [rbp - 1]	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x40083ed	      0x4889442410	             mov qword [rsp + 0x10], rax	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x40083f2	      0x807c244000	                cmp byte [rsp + 0x40], 0	      3992	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x40083f7	     0xf8585050000	                           jne 0x4008982	      3992	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x40083fd	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      4025	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x4008402	          0x4c39e8	                            cmp rax, r13	      4025	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x4008405	     0xf8d57030000	                           jge 0x4008762	      4025	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x400840b	          0x4889c5	                            mov rbp, rax	      4025	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x400840e	            0xeb0d	                           jmp 0x400841d	      4025	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x4008410	        0x4883c501	                              add rbp, 1	      4025	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x4008414	          0x4c39ed	                            cmp rbp, r13	      4025	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x4008417	     0xf8445030000	                            je 0x4008762	      4025	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x400841d	          0x4585e4	                         test r12d, r12d	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x4008420	            0x7507	                           jne 0x4008429	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x4008422	      0x483b6c2410	            cmp rbp, qword [rsp + 0x10] 	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x4008427	            0x7d1d	                           jge 0x4008446	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x4008429	        0x498b34ee	            mov rsi, qword [r14 + rbp*8]	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x400842d	    0x488bbc24b800	            mov rdi, qword [rsp + 0xb8] 	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x4008435	            0x31c9	                            xor ecx, ecx	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x4008437	            0x31d2	                            xor edx, edx	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x4008439	      0xe800000000	                          call 0x400843e	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x400843e	            0x85c0	                           test eax, eax	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x4008440	     0xf8431030000	                            je 0x4008777	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x4008446	    0x488b8424b800	            mov rax, qword [rsp + 0xb8] 	      4031	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x400844e	        0x4883c301	                              add rbx, 1	      4032	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x4008452	          0x4585ff	                         test r15d, r15d	      4033	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x4008455	        0x488d7801	                      lea rdi, [rax + 1]	      4031	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x4008459	    0x4889bc24b800	             mov qword [rsp + 0xb8], rdi	      4031	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x4008461	            0x74ad	                            je 0x4008410	      4033	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x4008463	    0x488b05000000	            mov rax, qword [0x0400846a] 	      4035	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x400846a	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      4035	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x400846e	        0x48897838	             mov qword [rax + 0x38], rdi	      4036	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x4008472	      0x48894c2430	             mov qword [rsp + 0x30], rcx	      4035	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x4008477	          0x8b4840	            mov ecx, dword [rax + 0x40] 	      4035	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x400847a	        0x894c2428	             mov dword [rsp + 0x28], ecx	      4035	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x400847e	          0x8b4844	            mov ecx, dword [rax + 0x44] 	      4035	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x4008481	        0x894c2420	             mov dword [rsp + 0x20], ecx	      4035	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x4008485	      0xe800000000	                          call 0x400848a	      4037	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_88
0x400848a	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4038	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_82
0x400848f	        0x48390c24	                    cmp qword [rsp], rcx	      4038	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_82
0x4008493	          0x4889c2	                            mov rdx, rax	      4037	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_88
0x4008496	    0x48898424b000	             mov qword [rsp + 0xb0], rax	      4037	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_88
0x400849e	     0xf844e100000	                            je 0x40094f2	      4038	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_82
0x40084a4	           0xfb602	                   movzx eax, byte [rdx]	      4041	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83	CALL_90
0x40084a7	            0x3c23	                            cmp al, 0x23	      4041	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83	CALL_90
0x40084a9	     0xf84c1030000	                            je 0x4008870	      4041	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83	CALL_90
0x40084af	            0x31ff	                            xor edi, edi	      4046	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_18	IF_84
0x40084b1	            0x84c0	                             test al, al	      4045	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_18	IF_84
0x40084b3	            0x7425	                            je 0x40084da	      4045	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_18	IF_84
0x40084b5	        0x8b4c243c	            mov ecx, dword [rsp + 0x3c] 	      4047	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85
0x40084b9	            0x85c9	                           test ecx, ecx	      4047	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85
0x40084bb	     0xf848c020000	                            je 0x400874d	      4047	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85
0x40084c1	      0xe800000000	                          call 0x40084c6	      4049	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85	CALL_91
0x40084c6	        0x8b7c2408	                mov edi, dword [rsp + 8]	      4049	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85	CALL_91
0x40084ca	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	      4051	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85
0x40084d2	            0x89f9	                            mov ecx, edi	      4049	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85	CALL_91
0x40084d4	            0x29c1	                            sub ecx, eax	      4049	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85	CALL_91
0x40084d6	        0x894c2450	             mov dword [rsp + 0x50], ecx	      4049	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85	CALL_91
0x40084da	            0x31f6	                            xor esi, esi	      4055	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_93
0x40084dc	      0xe800000000	                          call 0x40084e1	      4055	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_93
0x40084e1	    0x488b05000000	            mov rax, qword [0x040084e8] 	      4056	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x40084e8	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      4056	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x40084ed	        0x48894838	             mov qword [rax + 0x38], rcx	      4056	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x40084f1	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	      4056	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x40084f5	          0x894840	             mov dword [rax + 0x40], ecx	      4056	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x40084f8	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	      4056	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x40084fc	          0x894844	             mov dword [rax + 0x44], ecx	      4056	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x40084ff	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4058	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_87
0x4008504	        0x48390c24	                    cmp qword [rsp], rcx	      4058	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_87
0x4008508	     0xf8502ffffff	                           jne 0x4008410	      4058	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_87
0x400850e	      0x483b6c2410	            cmp rbp, qword [rsp + 0x10] 	      4058	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_87
0x4008513	     0xf85f7feffff	                           jne 0x4008410	      4058	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_87
0x4008519	    0x488bbc24b800	            mov rdi, qword [rsp + 0xb8] 	      4059	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x4008521	      0xe800000000	                          call 0x4008526	      4059	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x4008526	          0x4889c7	                            mov rdi, rax	      4059	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x4008529	      0xe800000000	                          call 0x400852e	      4059	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x400852e	        0x29442470	             sub dword [rsp + 0x70], eax	      4059	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x4008532	      0xe9d9feffff	                           jmp 0x4008410	      4059	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x4008537	    0x660f1f840000	                    nop word [rax + rax]	      4059	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x4008540	    0x48c744245000	               mov qword [rsp + 0x50], 0	      3473	ops.c	FUNCTION_48
0x4008549	        0x4183fc01	                             cmp r12d, 1	      3592	ops.c	FUNCTION_48	IF_15
0x400854d	     0xf854c100000	                           jne 0x400959f	      3592	ops.c	FUNCTION_48	IF_15
0x4008553	      0xf644243810	           test byte [rsp + 0x38], 0x10 	      3594	ops.c	FUNCTION_48	IF_15	IF_16
0x4008558	    0x48c744242000	               mov qword [rsp + 0x20], 0	      3480	ops.c	FUNCTION_48
0x4008561	     0xf8528030000	                           jne 0x400888f	      3594	ops.c	FUNCTION_48	IF_15	IF_16
0x4008567	      0xf644243820	           test byte [rsp + 0x38], 0x20 	      3622	ops.c	FUNCTION_48	IF_15	IF_22
0x400856c	    0x488b15000000	            mov rdx, qword [0x04008573] 	      3625	ops.c	FUNCTION_48	IF_15	IF_22
0x4008573	    0x488b05000000	            mov rax, qword [0x0400857a] 	      3625	ops.c	FUNCTION_48	IF_15	IF_22
0x400857a	     0xf8588000000	                           jne 0x4008608	      3622	ops.c	FUNCTION_48	IF_15	IF_22
0x4008580	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      3628	ops.c	FUNCTION_48	IF_15
0x4008584	        0x488b5a40	            mov rbx, qword [rdx + 0x40] 	      3628	ops.c	FUNCTION_48	IF_15
0x4008588	          0x4885ed	                           test rbp, rbp	      3628	ops.c	FUNCTION_48	IF_15
0x400858b	    0x488988e01100	          mov qword [rax + 0x11e0], rcx 	      3628	ops.c	FUNCTION_48	IF_15
0x4008592	    0x488998e81100	          mov qword [rax + 0x11e8], rbx 	      3628	ops.c	FUNCTION_48	IF_15
0x4008599	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      3629	ops.c	FUNCTION_48	IF_15
0x400859d	        0x488b5a40	            mov rbx, qword [rdx + 0x40] 	      3629	ops.c	FUNCTION_48	IF_15
0x40085a1	           0xf94c2	                                 sete dl	      3629	ops.c	FUNCTION_48	IF_15
0x40085a4	          0x4d85f6	                           test r14, r14	      3629	ops.c	FUNCTION_48	IF_15
0x40085a7	    0x488988001200	          mov qword [rax + 0x1200], rcx 	      3629	ops.c	FUNCTION_48	IF_15
0x40085ae	    0x488998081200	          mov qword [rax + 0x1208], rbx 	      3629	ops.c	FUNCTION_48	IF_15
0x40085b5	           0xf94c0	                                 sete al	      3629	ops.c	FUNCTION_48	IF_15
0x40085b8	             0x9d0	                             or eax, edx	      3629	ops.c	FUNCTION_48	IF_15
0x40085ba	      0xf644243808	               test byte [rsp + 0x38], 8	      3632	ops.c	FUNCTION_48	IF_23
0x40085bf	     0xf84840e0000	                            je 0x4009449	      3632	ops.c	FUNCTION_48	IF_23
0x40085c5	            0x84c0	                             test al, al	      3635	ops.c	FUNCTION_48	IF_24
0x40085c7	     0xf84b3fcffff	                            je 0x4008280	      3635	ops.c	FUNCTION_48	IF_24
0x40085cd	    0x8bbc249c0000	            mov edi, dword [rsp + 0x9c] 	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x40085d4	      0xbb00000000	                              mov ebx, 0	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x40085d9	            0x85ff	                           test edi, edi	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x40085db	            0x7521	                           jne 0x40085fe	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x40085dd	            0x31ff	                            xor edi, edi	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x40085df	      0xba05000000	                              mov edx, 5	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x40085e4	      0xbe00000000	                              mov esi, 0	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x40085e9	      0xe800000000	                          call 0x40085ee	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x40085ee	          0x4889de	                            mov rsi, rbx	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x40085f1	          0x4889c7	                            mov rdi, rax	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x40085f4	      0xe800000000	                          call 0x40085f9	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x40085f9	      0xe99afaffff	                           jmp 0x4008098	      3639	ops.c	FUNCTION_48	IF_24
0x40085fe	      0xe800000000	                          call 0x4008603	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x4008603	          0x4889c3	                            mov rbx, rax	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x4008606	            0xebd5	                           jmp 0x40085dd	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x4008608	    0x488b88080300	           mov rcx, qword [rax + 0x308] 	      3625	ops.c	FUNCTION_48	IF_15	IF_22
0x400860f	    0x488b98100300	           mov rbx, qword [rax + 0x310] 	      3625	ops.c	FUNCTION_48	IF_15	IF_22
0x4008616	    0x41bd01000000	                             mov r13d, 1	      3626	ops.c	FUNCTION_48	IF_15	IF_22
0x400861c	        0x48894a38	             mov qword [rdx + 0x38], rcx	      3625	ops.c	FUNCTION_48	IF_15	IF_22
0x4008620	        0x48895a40	             mov qword [rdx + 0x40], rbx	      3625	ops.c	FUNCTION_48	IF_15	IF_22
0x4008624	      0xe957ffffff	                           jmp 0x4008580	      3625	ops.c	FUNCTION_48	IF_15	IF_22
0x4008629	    0x488db424b800	                   lea rsi, [rsp + 0xb8]	      3657	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_27
0x4008631	            0x31d2	                            xor edx, edx	      3657	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_27
0x4008633	      0xe800000000	                          call 0x4008638	      3657	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_27
0x4008638	      0xe97efcffff	                           jmp 0x40082bb	      3657	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_27
0x400863d	           0xf1f00	                         nop dword [rax]	      3657	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_27
0x4008640	        0x4883c701	                              add rdi, 1	      3971	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_74
0x4008644	    0x4889bc24b800	             mov qword [rsp + 0xb8], rdi	      3971	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_74
0x400864c	      0xe9c1f9ffff	                           jmp 0x4008012	      3971	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_74
0x4008651	        0x488b3c24	                    mov rdi, qword [rsp]	      3971	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_74
0x4008655	      0xe800000000	                          call 0x400865a	      3971	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_74
0x400865a	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	      3950	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x400865e	          0x8d3c01	                    lea edi, [rcx + rax]	      3950	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x4008661	      0xe800000000	                          call 0x4008666	      3950	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x4008666	          0x4885c0	                           test rax, rax	      3951	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_72
0x4008669	          0x4989c7	                            mov r15, rax	      3950	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x400866c	     0xf8426faffff	                            je 0x4008098	      3951	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_72
0x4008672	    0x48639424a400	         movsxd rdx, dword [rsp + 0xa4] 	        59	string3.h	FUNCTION_93	CALL_3
0x400867a	        0x488b3424	                    mov rsi, qword [rsp]	        59	string3.h	FUNCTION_93	CALL_3
0x400867e	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_93	CALL_3
0x4008681	      0xe800000000	                          call 0x4008686	        59	string3.h	FUNCTION_93	CALL_3
0x4008686	    0x48638424a400	         movsxd rax, dword [rsp + 0xa4] 	      3954	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70
0x400868e	          0x4885ed	                           test rbp, rbp	      3955	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x4008691	        0x498d0c07	                    lea rcx, [r15 + rax]	      3954	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70
0x4008695	    0x48898c24b000	             mov qword [rsp + 0xb0], rcx	      3954	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70
0x400869d	            0x7e3b	                           jle 0x40086da	      3955	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x400869f	          0x4531e4	                          xor r12d, r12d	      3955	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x40086a2	    0x660f1f440000	                    nop word [rax + rax]	      3955	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x40086a8	          0x498b36	                    mov rsi, qword [r14]	        59	string3.h	FUNCTION_93	CALL_3
0x40086ab	          0x4889cf	                            mov rdi, rcx	        59	string3.h	FUNCTION_93	CALL_3
0x40086ae	          0x4889da	                            mov rdx, rbx	        59	string3.h	FUNCTION_93	CALL_3
0x40086b1	        0x4983c401	                              add r12, 1	      3955	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x40086b5	      0xe800000000	                          call 0x40086ba	        59	string3.h	FUNCTION_93	CALL_3
0x40086ba	          0x4889d9	                            mov rcx, rbx	      3958	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x40086bd	    0x48038c24b000	             add rcx, qword [rsp + 0xb0]	      3958	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x40086c5	          0x4c39e5	                            cmp rbp, r12	      3955	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x40086c8	    0x48898c24b000	             mov qword [rsp + 0xb0], rcx	      3958	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x40086d0	            0x75d6	                           jne 0x40086a8	      3955	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x40086d2	    0x48638424a400	         movsxd rax, dword [rsp + 0xa4] 	      3955	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x40086da	        0x4c8b2424	                    mov r12, qword [rsp]	      3960	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x40086de	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      3960	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x40086e3	          0x4901c4	                            add r12, rax	      3960	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x40086e6	          0x4c89e7	                            mov rdi, r12	      3960	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x40086e9	      0xe800000000	                          call 0x40086ee	      3960	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x40086ee	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	        59	string3.h	FUNCTION_93	CALL_3
0x40086f3	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_93	CALL_3
0x40086f7	          0x4c89e6	                            mov rsi, r12	        59	string3.h	FUNCTION_93	CALL_3
0x40086fa	          0x4889cf	                            mov rdi, rcx	        59	string3.h	FUNCTION_93	CALL_3
0x40086fd	      0xe800000000	                          call 0x4008702	        59	string3.h	FUNCTION_93	CALL_3
0x4008702	    0x488bbc24b800	            mov rdi, qword [rsp + 0xb8] 	      3961	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_71
0x400870a	            0x31d2	                            xor edx, edx	      3961	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_71
0x400870c	          0x4c89fe	                            mov rsi, r15	      3961	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_71
0x400870f	      0xe800000000	                          call 0x4008714	      3961	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_71
0x4008714	    0x488b05000000	            mov rax, qword [0x0400871b] 	      3963	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x400871b	    0x488bbc24b800	            mov rdi, qword [rsp + 0xb8] 	      3963	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x4008723	        0x48397838	            cmp qword [rax + 0x38], rdi 	      3963	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x4008727	     0xf85f5f8ffff	                           jne 0x4008022	      3963	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x400872d	      0xe800000000	                          call 0x4008732	      3966	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73	CALL_72
0x4008732	    0x488b05000000	            mov rax, qword [0x04008739] 	      3967	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x4008739	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	      3967	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x400873d	    0x488bbc24b800	            mov rdi, qword [rsp + 0xb8] 	      3967	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x4008745	           0x14840	             add dword [rax + 0x40], ecx	      3967	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x4008748	      0xe9d5f8ffff	                           jmp 0x4008022	      3967	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x400874d	      0xe800000000	                          call 0x4008752	      4053	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_20	IF_86	CALL_92
0x4008752	         0x3442450	             add eax, dword [rsp + 0x50]	      4053	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_20	IF_86	CALL_92
0x4008756	       0xf4844243c	           cmovs eax, dword [rsp + 0x3c]	      4053	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_20	IF_86	CALL_92
0x400875b	            0x89c7	                            mov edi, eax	      4053	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_20	IF_86	CALL_92
0x400875d	      0xe978fdffff	                           jmp 0x40084da	      4053	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_20	IF_86	CALL_92
0x4008762	    0x488344241801	               add qword [rsp + 0x18], 1	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x4008768	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x400876d	        0x48390424	                    cmp qword [rsp], rax	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x4008771	     0xf8d7bfcffff	                           jge 0x40083f2	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x4008777	      0x448b6c2474	           mov r13d, dword [rsp + 0x74] 	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x400877c	      0x48895c2420	             mov qword [rsp + 0x20], rbx	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x4008781	        0x4183fc01	                             cmp r12d, 1	      4066	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88
0x4008785	    0x488b15000000	            mov rdx, qword [0x0400878c] 	      4068	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88
0x400878c	     0xf843f090000	                            je 0x40090d1	      4066	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88
0x4008792	    0x488b82e01100	          mov rax, qword [rdx + 0x11e0] 	      4066	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88
0x4008799	       0xfb67c2440	           movzx edi, byte [rsp + 0x40] 	      4074	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x400879e	          0x4801c7	                            add rdi, rax	      4074	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x40087a1	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4074	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x40087a6	      0x488d4438ff	                lea rax, [rax + rdi - 1]	      4074	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x40087ab	          0x483b02	                    cmp rax, qword [rdx]	      4074	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x40087ae	            0x7c11	                            jl 0x40087c1	      4074	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x40087b0	    0x488b05000000	            mov rax, qword [0x040087b7] 	      4077	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x40087b7	    0x8b90c0010000	           mov edx, dword [rax + 0x1c0] 	      4077	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x40087bd	            0x85d2	                           test edx, edx	      4077	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x40087bf	            0x7411	                            je 0x40087d2	      4077	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x40087c1	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      4080	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x40087c6	            0x31c9	                            xor ecx, ecx	      4080	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x40087c8	      0xbeffffff7f	                     mov esi, 0x7fffffff	      4080	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x40087cd	      0xe800000000	                          call 0x40087d2	      4080	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x40087d2	      0x807c244000	                cmp byte [rsp + 0x40], 0	      4084	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91
0x40087d7	     0xf84c9020000	                            je 0x4008aa6	      4084	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91
0x40087dd	    0x488b05000000	            mov rax, qword [0x040087e4] 	      4086	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91
0x40087e4	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      4085	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91	CALL_97
0x40087e9	    0x8bb424a40000	            mov esi, dword [rsp + 0xa4] 	      4085	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91	CALL_97
0x40087f0	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      4086	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91
0x40087f4	        0x488d5701	                      lea rdx, [rdi + 1]	      4085	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91	CALL_97
0x40087f8	      0xe800000000	                          call 0x40087fd	      4085	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91	CALL_97
0x40087fd	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      4094	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x4008802	    0x488b2d000000	            mov rbp, qword [0x04008809] 	      4092	ops.c	FUNCTION_48	ELSE_14	ELSE_17
0x4008809	    0x488b9c24b800	            mov rbx, qword [rsp + 0xb8] 	      4092	ops.c	FUNCTION_48	ELSE_14	ELSE_17
0x4008811	          0x488b38	                    mov rdi, qword [rax]	      4094	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x4008814	    0x48899d001200	          mov qword [rbp + 0x1200], rbx 	      4092	ops.c	FUNCTION_48	ELSE_14	ELSE_17
0x400881b	      0xe800000000	                          call 0x4008820	      4094	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x4008820	        0x2b442470	             sub eax, dword [rsp + 0x70]	      4094	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x4008824	          0x83f801	                              cmp eax, 1	      4095	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_92
0x4008827	    0x898424a40000	             mov dword [rsp + 0xa4], eax	      4094	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x400882e	     0xf8ed9080000	                           jle 0x400910d	      4095	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_92
0x4008834	          0x8d50ff	                      lea edx, [rax - 1]	      4096	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_92
0x4008837	    0x899508120000	          mov dword [rbp + 0x1208], edx 	      4096	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_92
0x400883d	      0xf644243804	               test byte [rsp + 0x38], 4	      4100	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93
0x4008842	     0xf856f080000	                           jne 0x40090b7	      4100	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93
0x4008848	      0xf644243802	               test byte [rsp + 0x38], 2	      4106	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94
0x400884d	     0xf84af020000	                            je 0x4008b02	      4106	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94
0x4008853	        0x4183fc01	                             cmp r12d, 1	      4109	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95
0x4008857	     0xf84360a0000	                            je 0x4009293	      4109	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95
0x400885d	    0x488b15000000	            mov rdx, qword [0x04008864] 	      4119	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	ELSE_24	ELSE_25
0x4008864	        0x48895a38	             mov qword [rdx + 0x38], rbx	      4119	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	ELSE_24	ELSE_25
0x4008868	          0x894240	             mov dword [rdx + 0x40], eax	      4120	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	ELSE_24	ELSE_25
0x400886b	      0xe90cf8ffff	                           jmp 0x400807c	      4120	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	ELSE_24	ELSE_25
0x4008870	      0xe800000000	                          call 0x4008875	      4041	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83	CALL_90
0x4008875	            0x31ff	                            xor edi, edi	      4042	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83
0x4008877	            0x85c0	                           test eax, eax	      4041	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83	CALL_90
0x4008879	     0xf855bfcffff	                           jne 0x40084da	      4041	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83	CALL_90
0x400887f	    0x488b8424b000	            mov rax, qword [rsp + 0xb0] 	      4041	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83	CALL_90
0x4008887	           0xfb600	                   movzx eax, byte [rax]	      4041	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83	CALL_90
0x400888a	      0xe920fcffff	                           jmp 0x40084af	      4041	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83	CALL_90
0x400888f	      0xe800000000	                          call 0x4008894	      3600	ops.c	FUNCTION_48	IF_15	IF_16	IF_17	CALL_13
0x4008894	            0x85c0	                           test eax, eax	      3600	ops.c	FUNCTION_48	IF_15	IF_16	IF_17	CALL_13
0x4008896	     0xf84fcf7ffff	                            je 0x4008098	      3600	ops.c	FUNCTION_48	IF_15	IF_16	IF_17	CALL_13
0x400889c	      0xe800000000	                          call 0x40088a1	      3602	ops.c	FUNCTION_48	IF_15	IF_16	CALL_14
0x40088a1	        0x4183fd01	                             cmp r13d, 1	      3603	ops.c	FUNCTION_48	IF_15	IF_16	IF_18
0x40088a5	          0x4889c3	                            mov rbx, rax	      3602	ops.c	FUNCTION_48	IF_15	IF_16	CALL_14
0x40088a8	     0xf84090a0000	                            je 0x40092b7	      3603	ops.c	FUNCTION_48	IF_15	IF_16	IF_18
0x40088ae	          0x4889df	                            mov rdi, rbx	      3605	ops.c	FUNCTION_48	IF_15	IF_16	CALL_16
0x40088b1	      0xe800000000	                          call 0x40088b6	      3605	ops.c	FUNCTION_48	IF_15	IF_16	CALL_16
0x40088b6	          0x4885c0	                           test rax, rax	      3606	ops.c	FUNCTION_48	IF_15	IF_16	IF_19
0x40088b9	    0x48898424b000	             mov qword [rsp + 0xb0], rax	      3605	ops.c	FUNCTION_48	IF_15	IF_16	CALL_16
0x40088c1	     0xf84d1f7ffff	                            je 0x4008098	      3606	ops.c	FUNCTION_48	IF_15	IF_16	IF_19
0x40088c7	    0x488b15000000	            mov rdx, qword [0x040088ce] 	      3608	ops.c	FUNCTION_48	IF_15	IF_16	CALL_17
0x40088ce	            0x31c9	                            xor ecx, ecx	      3608	ops.c	FUNCTION_48	IF_15	IF_16	CALL_17
0x40088d0	          0x4889c6	                            mov rsi, rax	      3608	ops.c	FUNCTION_48	IF_15	IF_16	CALL_17
0x40088d3	        0x488b7a38	            mov rdi, qword [rdx + 0x38] 	      3608	ops.c	FUNCTION_48	IF_15	IF_16	CALL_17
0x40088d7	            0x31d2	                            xor edx, edx	      3608	ops.c	FUNCTION_48	IF_15	IF_16	CALL_17
0x40088d9	      0xe800000000	                          call 0x40088de	      3608	ops.c	FUNCTION_48	IF_15	IF_16	CALL_17
0x40088de	    0x488bbc24b000	            mov rdi, qword [rsp + 0xb0] 	      3609	ops.c	FUNCTION_48	IF_15	IF_16	CALL_18
0x40088e6	      0xe800000000	                          call 0x40088eb	      3609	ops.c	FUNCTION_48	IF_15	IF_16	CALL_18
0x40088eb	      0xe800000000	                          call 0x40088f0	      3611	ops.c	FUNCTION_48	IF_15	IF_16	CALL_19
0x40088f0	          0x4889c2	                            mov rdx, rax	      3611	ops.c	FUNCTION_48	IF_15	IF_16	CALL_19
0x40088f3	    0x488b05000000	            mov rax, qword [0x040088fa] 	      3612	ops.c	FUNCTION_48	IF_15	IF_16
0x40088fa	        0x48635840	         movsxd rbx, dword [rax + 0x40] 	      3612	ops.c	FUNCTION_48	IF_15	IF_16
0x40088fe	          0x4801d3	                            add rbx, rdx	      3612	ops.c	FUNCTION_48	IF_15	IF_16
0x4008901	        0x4183fd01	                             cmp r13d, 1	      3613	ops.c	FUNCTION_48	IF_15	IF_16	IF_20
0x4008905	     0xf840d0b0000	                            je 0x4009418	      3613	ops.c	FUNCTION_48	IF_15	IF_16	IF_20
0x400890b	          0x4889de	                            mov rsi, rbx	      3615	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x400890e	          0x4889d7	                            mov rdi, rdx	      3615	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x4008911	          0x4829d6	                            sub rsi, rdx	      3615	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x4008914	      0xe800000000	                          call 0x4008919	      3615	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x4008919	          0x4885c0	                           test rax, rax	      3616	ops.c	FUNCTION_48	IF_15	IF_16	IF_21
0x400891c	    0x48898424b000	             mov qword [rsp + 0xb0], rax	      3615	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x4008924	     0xf846ef7ffff	                            je 0x4008098	      3616	ops.c	FUNCTION_48	IF_15	IF_16	IF_21
0x400892a	    0x488b15000000	            mov rdx, qword [0x04008931] 	      3618	ops.c	FUNCTION_48	IF_15	IF_16	CALL_22
0x4008931	          0x4889c6	                            mov rsi, rax	      3618	ops.c	FUNCTION_48	IF_15	IF_16	CALL_22
0x4008934	    0x41bd01000000	                             mov r13d, 1	      3620	ops.c	FUNCTION_48	IF_15	IF_16
0x400893a	        0x488b7a38	            mov rdi, qword [rdx + 0x38] 	      3618	ops.c	FUNCTION_48	IF_15	IF_16	CALL_22
0x400893e	            0x31d2	                            xor edx, edx	      3618	ops.c	FUNCTION_48	IF_15	IF_16	CALL_22
0x4008940	      0xe800000000	                          call 0x4008945	      3618	ops.c	FUNCTION_48	IF_15	IF_16	CALL_22
0x4008945	    0x48c744242001	               mov qword [rsp + 0x20], 1	      3619	ops.c	FUNCTION_48	IF_15	IF_16
0x400894e	      0xe914fcffff	                           jmp 0x4008567	      3619	ops.c	FUNCTION_48	IF_15	IF_16
0x4008953	    0x8bbc249c0000	            mov edi, dword [rsp + 0x9c] 	      3584	ops.c	FUNCTION_48	ELSE_2	CALL_12
0x400895a	            0x31f6	                            xor esi, esi	      3584	ops.c	FUNCTION_48	ELSE_2	CALL_12
0x400895c	      0xe800000000	                          call 0x4008961	      3584	ops.c	FUNCTION_48	ELSE_2	CALL_12
0x4008961	    0x488b05000000	            mov rax, qword [0x04008968] 	      3586	ops.c	FUNCTION_48	ELSE_2
0x4008968	        0x48634814	         movsxd rcx, dword [rax + 0x14] 	      3587	ops.c	FUNCTION_48	ELSE_2
0x400896c	      0x440fb66010	          movzx r12d, byte [rax + 0x10] 	      3586	ops.c	FUNCTION_48	ELSE_2
0x4008971	        0x488b6808	                mov rbp, qword [rax + 8]	      3588	ops.c	FUNCTION_48	ELSE_2
0x4008975	          0x4c8b30	                    mov r14, qword [rax]	      3589	ops.c	FUNCTION_48	ELSE_2
0x4008978	      0x48894c2450	             mov qword [rsp + 0x50], rcx	      3587	ops.c	FUNCTION_48	ELSE_2
0x400897d	      0xe9c7fbffff	                           jmp 0x4008549	      3587	ops.c	FUNCTION_48	ELSE_2
0x4008982	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      3999	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x4008987	          0x4889c7	                            mov rdi, rax	      4000	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_74
0x400898a	    0x48898424b800	             mov qword [rsp + 0xb8], rax	      3999	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x4008992	      0xe800000000	                          call 0x4008997	      4000	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_74
0x4008997	    0x48639424a400	         movsxd rdx, dword [rsp + 0xa4] 	      4000	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_74
0x400899f	        0x488d2c10	                    lea rbp, [rax + rdx]	      4000	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_74
0x40089a3	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      4001	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x40089a8	    0x4889ac24b000	             mov qword [rsp + 0xb0], rbp	      4000	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_74
0x40089b0	          0x488b38	                    mov rdi, qword [rax]	      4001	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x40089b3	      0xe800000000	                          call 0x40089b8	      4001	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x40089b8	          0x4889ef	                            mov rdi, rbp	      4002	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x40089bb	      0x4889442420	             mov qword [rsp + 0x20], rax	      4001	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x40089c0	      0xe800000000	                          call 0x40089c5	      4002	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x40089c5	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      4002	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x40089ca	        0x8d7c1001	                lea edi, [rax + rdx + 1]	      4002	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x40089ce	      0xe800000000	                          call 0x40089d3	      4002	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x40089d3	          0x4885c0	                           test rax, rax	      4003	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	IF_78
0x40089d6	          0x4889c5	                            mov rbp, rax	      4002	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x40089d9	     0xf84780b0000	                            je 0x4009557	      4003	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	IF_78
0x40089df	      0x488b442460	            mov rax, qword [rsp + 0x60] 	       110	string3.h	FUNCTION_98	CALL_3
0x40089e4	          0x4889ef	                            mov rdi, rbp	       110	string3.h	FUNCTION_98	CALL_3
0x40089e7	          0x488b30	                    mov rsi, qword [rax]	       110	string3.h	FUNCTION_98	CALL_3
0x40089ea	      0xe800000000	                          call 0x40089ef	       110	string3.h	FUNCTION_98	CALL_3
0x40089ef	    0x488bb424b000	            mov rsi, qword [rsp + 0xb0] 	       148	string3.h	FUNCTION_102	CALL_3
0x40089f7	          0x4889c7	                            mov rdi, rax	       148	string3.h	FUNCTION_102	CALL_3
0x40089fa	      0xe800000000	                          call 0x40089ff	       148	string3.h	FUNCTION_102	CALL_3
0x40089ff	    0x488bbc24b800	            mov rdi, qword [rsp + 0xb8] 	      4008	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_80
0x4008a07	            0x31c9	                            xor ecx, ecx	      4008	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_80
0x4008a09	            0x31d2	                            xor edx, edx	      4008	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_80
0x4008a0b	          0x4889ee	                            mov rsi, rbp	      4008	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_80
0x4008a0e	      0xe800000000	                          call 0x4008a13	      4008	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_80
0x4008a13	          0x4889ef	                            mov rdi, rbp	      4009	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_81
0x4008a16	      0xe800000000	                          call 0x4008a1b	      4009	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_81
0x4008a1b	    0x488bbc24b800	            mov rdi, qword [rsp + 0xb8] 	      4011	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_82
0x4008a23	      0xe800000000	                          call 0x4008a28	      4011	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_82
0x4008a28	        0x8b7c2458	            mov edi, dword [rsp + 0x58] 	      4012	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_83
0x4008a2c	     0x3bc24a40000	             add edi, dword [rsp + 0xa4]	      4012	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_83
0x4008a33	      0x4889442420	             mov qword [rsp + 0x20], rax	      4011	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_82
0x4008a38	          0x83c701	                              add edi, 1	      4012	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_83
0x4008a3b	      0xe800000000	                          call 0x4008a40	      4012	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_83
0x4008a40	          0x4885c0	                           test rax, rax	      4013	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	IF_79
0x4008a43	          0x4889c5	                            mov rbp, rax	      4012	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_83
0x4008a46	     0xf840b0b0000	                            je 0x4009557	      4013	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	IF_79
0x4008a4c	    0x48639424a400	         movsxd rdx, dword [rsp + 0xa4] 	        59	string3.h	FUNCTION_93	CALL_3
0x4008a54	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	        59	string3.h	FUNCTION_93	CALL_3
0x4008a59	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_93	CALL_3
0x4008a5c	      0xe800000000	                          call 0x4008a61	        59	string3.h	FUNCTION_93	CALL_3
0x4008a61	    0x4863bc24a400	         movsxd rdi, dword [rsp + 0xa4] 	        59	string3.h	FUNCTION_93	CALL_3
0x4008a69	    0x488b94248800	            mov rdx, qword [rsp + 0x88] 	        59	string3.h	FUNCTION_93	CALL_3
0x4008a71	          0x498b36	                    mov rsi, qword [r14]	        59	string3.h	FUNCTION_93	CALL_3
0x4008a74	          0x4801ef	                            add rdi, rbp	        59	string3.h	FUNCTION_93	CALL_3
0x4008a77	      0xe800000000	                          call 0x4008a7c	        59	string3.h	FUNCTION_93	CALL_3
0x4008a7c	    0x488bbc24b800	            mov rdi, qword [rsp + 0xb8] 	      4019	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_86
0x4008a84	            0x31d2	                            xor edx, edx	      4019	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_86
0x4008a86	          0x4889ee	                            mov rsi, rbp	      4019	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_86
0x4008a89	      0xe800000000	                          call 0x4008a8e	      4019	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_86
0x4008a8e	    0x488b9424b800	            mov rdx, qword [rsp + 0xb8] 	      4021	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x4008a96	    0x488b05000000	            mov rax, qword [0x04008a9d] 	      4021	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x4008a9d	        0x48895038	             mov qword [rax + 0x38], rdx	      4021	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x4008aa1	      0xe957f9ffff	                           jmp 0x40083fd	      4021	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x4008aa6	    0x488b05000000	            mov rax, qword [0x04008aad] 	      4088	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x4008aad	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      4088	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x4008ab2	            0x31f6	                            xor esi, esi	      4088	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x4008ab4	    0x488bb8e01100	          mov rdi, qword [rax + 0x11e0] 	      4088	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x4008abb	          0x4889fa	                            mov rdx, rdi	      4088	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x4008abe	      0xe800000000	                          call 0x4008ac3	      4088	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x4008ac3	      0xe935fdffff	                           jmp 0x40087fd	      4088	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x4008ac8	      0xbf01000000	                              mov edi, 1	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4008acd	      0xe800000000	                          call 0x4008ad2	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4008ad2	          0x803800	                       cmp byte [rax], 0	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4008ad5	     0xf85f1f7ffff	                           jne 0x40082cc	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4008adb	            0x31ff	                            xor edi, edi	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4008add	      0xbe02000000	                              mov esi, 2	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4008ae2	      0xe800000000	                          call 0x4008ae7	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4008ae7	            0x85c0	                           test eax, eax	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4008ae9	           0xf94c0	                                 sete al	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4008aec	      0xe9f1f7ffff	                           jmp 0x40082e2	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4008af1	        0x4883ef01	                              sub rdi, 1	      3975	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_75
0x4008af5	    0x4889bc24b800	             mov qword [rsp + 0xb8], rdi	      3975	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_75
0x4008afd	      0xe930f5ffff	                           jmp 0x4008032	      3975	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_75
0x4008b02	        0x4183fc01	                             cmp r12d, 1	      4123	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97
0x4008b06	    0x488b05000000	            mov rax, qword [0x04008b0d] 	      4126	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97
0x4008b0d	     0xf84f8070000	                            je 0x400930b	      4123	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97
0x4008b13	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	      4132	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_27
0x4008b18	        0x48894838	             mov qword [rax + 0x38], rcx	      4132	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_27
0x4008b1c	    0x8b8c24980000	            mov ecx, dword [rsp + 0x98] 	      4132	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_27
0x4008b23	          0x894840	             mov dword [rax + 0x40], ecx	      4132	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_27
0x4008b26	    0x8b8c24800000	            mov ecx, dword [rsp + 0x80] 	      4132	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_27
0x4008b2d	          0x894844	             mov dword [rax + 0x44], ecx	      4132	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_27
0x4008b30	      0xe947f5ffff	                           jmp 0x400807c	      4132	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_27
0x4008b35	      0xe800000000	                          call 0x4008b3a	      3707	ops.c	FUNCTION_48	IF_38	CALL_40
0x4008b3a	        0x4183fd01	                             cmp r13d, 1	      3710	ops.c	FUNCTION_48	IF_38	IF_39
0x4008b3e	    0x488b3d000000	            mov rdi, qword [0x04008b45] 	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x4008b45	            0x89c3	                            mov ebx, eax	      3707	ops.c	FUNCTION_48	IF_38	CALL_40
0x4008b47	        0x410f94c4	                               sete r12b	      3710	ops.c	FUNCTION_48	IF_38	IF_39
0x4008b4b	            0x85c0	                           test eax, eax	      3710	ops.c	FUNCTION_48	IF_38	IF_39
0x4008b4d	    0xc78424ac0000	               mov dword [rsp + 0xac], 0	      3708	ops.c	FUNCTION_48	IF_38
0x4008b58	        0x410f95c7	                              setne r15b	      3710	ops.c	FUNCTION_48	IF_38	IF_39
0x4008b5c	          0x4584e4	                         test r12b, r12b	      3710	ops.c	FUNCTION_48	IF_38	IF_39
0x4008b5f	        0x488d7738	                   lea rsi, [rdi + 0x38]	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x4008b63	     0xf84c3070000	                            je 0x400932c	      3710	ops.c	FUNCTION_48	IF_38	IF_39
0x4008b69	          0x4584ff	                         test r15b, r15b	      3710	ops.c	FUNCTION_48	IF_38	IF_39
0x4008b6c	     0xf84ba070000	                            je 0x400932c	      3710	ops.c	FUNCTION_48	IF_38	IF_39
0x4008b72	    0x833d00000000	               cmp dword [0x04008b79], 4	      3713	ops.c	FUNCTION_48	IF_38	IF_39	IF_40
0x4008b79	     0xf84f8070000	                            je 0x4009377	      3713	ops.c	FUNCTION_48	IF_38	IF_39	IF_40
0x4008b7f	    0x4c8d8424a400	                    lea r8, [rsp + 0xa4]	      3717	ops.c	FUNCTION_48	IF_38	IF_39	CALL_42
0x4008b87	            0x31c9	                            xor ecx, ecx	      3717	ops.c	FUNCTION_48	IF_38	IF_39	CALL_42
0x4008b89	            0x31d2	                            xor edx, edx	      3717	ops.c	FUNCTION_48	IF_38	IF_39	CALL_42
0x4008b8b	      0xe800000000	                          call 0x4008b90	      3717	ops.c	FUNCTION_48	IF_38	IF_39	CALL_42
0x4008b90	    0x8b0500000000	            mov eax, dword [0x04008b96] 	      3720	ops.c	FUNCTION_48	IF_38	IF_39	IF_41
0x4008b96	            0x85c0	                           test eax, eax	      3720	ops.c	FUNCTION_48	IF_38	IF_39	IF_41
0x4008b98	     0xf853d070000	                           jne 0x40092db	      3720	ops.c	FUNCTION_48	IF_38	IF_39	IF_41
0x4008b9e	          0x83fb09	                              cmp ebx, 9	      3726	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x4008ba1	    0x8b0d00000000	            mov ecx, dword [0x04008ba7] 	      3726	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x4008ba7	     0xf8439080000	                            je 0x40093e6	      3726	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x4008bad	    0x488b15000000	            mov rdx, qword [0x04008bb4] 	      3728	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x4008bb4	        0x83424001	               add dword [rdx + 0x40], 1	      3728	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x4008bb8	    0x8b8424a40000	            mov eax, dword [rsp + 0xa4] 	      3729	ops.c	FUNCTION_48	IF_38	IF_39
0x4008bbf	          0x83c001	                              add eax, 1	      3729	ops.c	FUNCTION_48	IF_38	IF_39
0x4008bc2	          0x8b7244	            mov esi, dword [rdx + 0x44] 	      3735	ops.c	FUNCTION_48	IF_38
0x4008bc5	             0x1f0	                            add eax, esi	      3735	ops.c	FUNCTION_48	IF_38
0x4008bc7	          0x83f904	                              cmp ecx, 4	      3736	ops.c	FUNCTION_48	IF_38	IF_43
0x4008bca	    0x898424a40000	             mov dword [rsp + 0xa4], eax	      3735	ops.c	FUNCTION_48	IF_38
0x4008bd1	     0xf8416060000	                            je 0x40091ed	      3736	ops.c	FUNCTION_48	IF_38	IF_43
0x4008bd7	          0x4885ed	                           test rbp, rbp	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008bda	    0xc74244000000	               mov dword [rdx + 0x44], 0	      3752	ops.c	FUNCTION_48	IF_38
0x4008be1	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	      3752	ops.c	FUNCTION_48	IF_38
0x4008be5	     0xf8ed5090000	                           jle 0x40095c0	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008beb	        0x488b0424	                    mov rax, qword [rsp]	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008bef	    0xc74424180000	               mov dword [rsp + 0x18], 0	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008bf7	          0x4531ff	                          xor r15d, r15d	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008bfa	          0x4531ed	                          xor r13d, r13d	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008bfd	    0xc74424780000	               mov dword [rsp + 0x78], 0	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008c05	    0x4889ac248000	             mov qword [rsp + 0x80], rbp	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008c0d	        0x4883e801	                              sub rax, 1	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008c11	      0x4889442408	                mov qword [rsp + 8], rax	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008c16	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008c20	    0x488b05000000	            mov rax, qword [0x04008c27] 	      3766	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49
0x4008c27	          0x488b38	                    mov rdi, qword [rax]	      3766	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49
0x4008c2a	          0x4839d7	                            cmp rdi, rdx	      3766	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49
0x4008c2d	            0x7d1f	                           jge 0x4008c4e	      3766	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49
0x4008c2f	            0x31c9	                            xor ecx, ecx	      3768	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x4008c31	      0xba01000000	                              mov edx, 1	      3768	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x4008c36	      0xbe00000000	                              mov esi, 0	      3768	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x4008c3b	      0xe800000000	                          call 0x4008c40	      3768	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x4008c40	            0x85c0	                           test eax, eax	      3768	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x4008c42	     0xf8414070000	                            je 0x400935c	      3768	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x4008c48	    0x488344242001	               add qword [rsp + 0x20], 1	      3771	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49
0x4008c4e	      0xe800000000	                          call 0x4008c53	      3774	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_46
0x4008c53	          0x4889c7	                            mov rdi, rax	      3775	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_47
0x4008c56	          0x4989c4	                            mov r12, rax	      3774	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_46
0x4008c59	      0xe800000000	                          call 0x4008c5e	      3775	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_47
0x4008c5e	      0x4889442428	             mov qword [rsp + 0x28], rax	      3775	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_47
0x4008c63	    0x8b8424a40000	            mov eax, dword [rsp + 0xa4] 	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x4008c6a	    0x4c89a424b000	             mov qword [rsp + 0xb0], r12	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x4008c72	            0x85c0	                           test eax, eax	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x4008c74	     0xf8eaf040000	                           jle 0x4009129	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x4008c7a	      0x41803c2400	                       cmp byte [r12], 0	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x4008c7f	     0xf84b6040000	                            je 0x400913b	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x4008c85	            0x31db	                            xor ebx, ebx	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x4008c87	            0xeb18	                           jmp 0x4008ca1	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x4008c89	     0xf1f80000000	                         nop dword [rax]	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x4008c90	    0x488b9424b000	            mov rdx, qword [rsp + 0xb0] 	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x4008c98	          0x803a00	                       cmp byte [rdx], 0	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x4008c9b	     0xf8446030000	                            je 0x4008fe7	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x4008ca1	    0x488db424b000	                   lea rsi, [rsp + 0xb0]	      3779	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3	CALL_48
0x4008ca9	            0x89da	                            mov edx, ebx	      3779	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3	CALL_48
0x4008cab	          0x4c89e7	                            mov rdi, r12	      3779	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3	CALL_48
0x4008cae	      0xe800000000	                          call 0x4008cb3	      3779	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3	CALL_48
0x4008cb3	    0x8b8c24a40000	            mov ecx, dword [rsp + 0xa4] 	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x4008cba	             0x1c3	                            add ebx, eax	      3780	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x4008cbc	            0x39d9	                            cmp ecx, ebx	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x4008cbe	            0x7fd0	                            jg 0x4008c90	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x4008cc0	    0x488b9424b000	            mov rdx, qword [rsp + 0xb0] 	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x4008cc8	          0x4189c7	                           mov r15d, eax	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x4008ccb	            0x89c8	                            mov eax, ecx	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x4008ccd	            0x89d1	                            mov ecx, edx	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x4008ccf	          0x4429e1	                           sub ecx, r12d	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x4008cd2	        0x894c2418	             mov dword [rsp + 0x18], ecx	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x4008cd6	            0x39d8	                            cmp eax, ebx	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008cd8	     0xf843e030000	                            je 0x400901c	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008cde	     0xf8d69030000	                           jge 0x400904d	      3788	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x4008ce4	            0x29c3	                            sub ebx, eax	      3790	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x4008ce6	          0x4489f8	                           mov eax, r15d	      3791	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x4008ce9	      0x836c241801	               sub dword [rsp + 0x18], 1	      3792	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x4008cee	            0x29d8	                            sub eax, ebx	      3791	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x4008cf0	        0x895c2440	             mov dword [rsp + 0x40], ebx	      3790	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x4008cf4	        0x8944243c	             mov dword [rsp + 0x3c], eax	      3791	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x4008cf8	    0x8b0500000000	            mov eax, dword [0x04008cfe] 	      3795	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x4008cfe	            0x85c0	                           test eax, eax	      3795	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x4008d00	     0xf8591030000	                           jne 0x4009097	      3795	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x4008d06	      0x4863442418	         movsxd rax, dword [rsp + 0x18] 	      3798	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x4008d0b	      0x41803c0409	                 cmp byte [r12 + rax], 9	      3798	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x4008d10	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	      3798	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x4008d14	     0xf8460030000	                            je 0x400907a	      3798	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x4008d1a	        0x89442430	             mov dword [rsp + 0x30], eax	      3798	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x4008d1e	    0xc74424680000	               mov dword [rsp + 0x68], 0	      3798	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x4008d26	    0xc74424400000	               mov dword [rsp + 0x40], 0	      3804	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x4008d2e	    0xc74424700000	               mov dword [rsp + 0x70], 0	      3803	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x4008d36	        0x4b8b34ee	            mov rsi, qword [r14 + r13*8]	      3808	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_49
0x4008d3a	          0x4889f7	                            mov rdi, rsi	      3808	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_49
0x4008d3d	      0x4889742458	             mov qword [rsp + 0x58], rsi	      3808	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_49
0x4008d42	      0xe800000000	                          call 0x4008d47	      3808	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_49
0x4008d47	        0x8b4c2450	            mov ecx, dword [rsp + 0x50] 	      3811	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008d4b	            0x85c0	                           test eax, eax	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x4008d4d	      0x4889442410	             mov qword [rsp + 0x10], rax	      3808	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_49
0x4008d52	          0x8d5901	                      lea ebx, [rcx + 1]	      3811	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008d55	            0x7e41	                           jle 0x4008d98	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x4008d57	          0x4863e8	                         movsxd rbp, eax	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x4008d5a	      0x4c89642460	             mov qword [rsp + 0x60], r12	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x4008d5f	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x4008d64	        0x488d45ff	                      lea rax, [rbp - 1]	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x4008d68	            0x31ed	                            xor ebp, ebp	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x4008d6a	          0x4989ec	                            mov r12, rbp	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x4008d6d	          0x4889c5	                            mov rbp, rax	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x4008d70	            0xeb0e	                           jmp 0x4008d80	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x4008d72	    0x660f1f440000	                    nop word [rax + rax]	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x4008d78	        0x4b8b34ee	            mov rsi, qword [r14 + r13*8]	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x4008d7c	        0x4983c401	                              add r12, 1	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x4008d80	          0x4c01e6	                            add rsi, r12	      3813	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x4008d83	            0x31d2	                            xor edx, edx	      3813	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x4008d85	            0x31ff	                            xor edi, edi	      3813	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x4008d87	      0xe800000000	                          call 0x4008d8c	      3813	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x4008d8c	            0x29c3	                            sub ebx, eax	      3813	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x4008d8e	          0x4c39e5	                            cmp rbp, r12	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x4008d91	            0x75e5	                           jne 0x4008d78	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x4008d93	      0x4c8b642460	            mov r12, qword [rsp + 0x60] 	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x4008d98	            0x85db	                           test ebx, ebx	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x4008d9a	      0xb800000000	                              mov eax, 0	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x4008d9f	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      3819	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_51
0x4008da4	           0xf49c3	                         cmovns eax, ebx	      3819	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_51
0x4008da7	        0x89442460	             mov dword [rsp + 0x60], eax	      3819	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_51
0x4008dab	         0x3442410	             add eax, dword [rsp + 0x10]	      3818	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008daf	         0xfaf0424	                   imul eax, dword [rsp]	      3818	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008db3	         0x3442430	             add eax, dword [rsp + 0x30]	      3818	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008db7	        0x8d7c0801	                lea edi, [rax + rcx + 1]	      3819	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_51
0x4008dbb	        0x89442474	             mov dword [rsp + 0x74], eax	      3818	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008dbf	        0x89442478	             mov dword [rsp + 0x78], eax	      3818	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008dc3	      0xe800000000	                          call 0x4008dc8	      3819	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_51
0x4008dc8	          0x4885c0	                           test rax, rax	      3820	ops.c	FUNCTION_48	IF_38	FOR_2	IF_56
0x4008dcb	      0x4889442430	             mov qword [rsp + 0x30], rax	      3819	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_51
0x4008dd0	     0xf84e9030000	                            je 0x40091bf	      3820	ops.c	FUNCTION_48	IF_38	FOR_2	IF_56
0x4008dd6	      0x4863442418	         movsxd rax, dword [rsp + 0x18] 	      3824	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_52
0x4008ddb	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      3823	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008de0	          0x4c89e6	                            mov rsi, r12	        59	string3.h	FUNCTION_93	CALL_3
0x4008de3	    0x4889bc24b000	             mov qword [rsp + 0xb0], rdi	      3823	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008deb	          0x4889c2	                            mov rdx, rax	        59	string3.h	FUNCTION_93	CALL_3
0x4008dee	          0x4889c3	                            mov rbx, rax	      3824	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_52
0x4008df1	      0x4889442458	             mov qword [rsp + 0x58], rax	      3824	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_52
0x4008df6	      0xe800000000	                          call 0x4008dfb	        59	string3.h	FUNCTION_93	CALL_3
0x4008dfb	      0x48636c243c	         movsxd rbp, dword [rsp + 0x3c] 	      3827	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_53
0x4008e00	          0x4889df	                            mov rdi, rbx	      3825	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008e03	    0x4803bc24b000	             add rdi, qword [rsp + 0xb0]	      3825	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008e0b	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x4008e10	          0x4889ea	                            mov rdx, rbp	        90	string3.h	FUNCTION_95	CALL_6
0x4008e13	    0x4889bc24b000	             mov qword [rsp + 0xb0], rdi	      3825	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008e1b	      0xe800000000	                          call 0x4008e20	        90	string3.h	FUNCTION_95	CALL_6
0x4008e20	          0x4889ef	                            mov rdi, rbp	      3828	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008e23	    0x4803bc24b000	             add rdi, qword [rsp + 0xb0]	      3828	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008e2b	      0x48833c2400	                      cmp qword [rsp], 0	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x4008e30	    0x4889bc24b000	             mov qword [rsp + 0xb0], rdi	      3828	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008e38	     0xf8ea3000000	                           jle 0x4008ee1	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x4008e3e	        0x8b442468	            mov eax, dword [rsp + 0x68] 	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x4008e42	      0x4863742460	         movsxd rsi, dword [rsp + 0x60] 	      3838	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x4008e47	            0x31db	                            xor ebx, ebx	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x4008e49	      0x48636c2410	         movsxd rbp, dword [rsp + 0x10] 	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x4008e4e	      0x4c89642460	             mov qword [rsp + 0x60], r12	      3838	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x4008e53	      0x44897c2468	            mov dword [rsp + 0x68], r15d	      3838	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x4008e58	          0x4989df	                            mov r15, rbx	      3838	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x4008e5b	          0x83f001	                              xor eax, 1	      3838	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x4008e5e	          0x83e001	                              and eax, 1	      3838	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x4008e61	      0x4889742410	             mov qword [rsp + 0x10], rsi	      3838	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x4008e66	          0x4189f4	                           mov r12d, esi	      3838	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x4008e69	            0x89c3	                            mov ebx, eax	      3838	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x4008e6b	            0xeb11	                           jmp 0x4008e7e	      3838	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x4008e6d	           0xf1f00	                         nop dword [rax]	      3838	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x4008e70	            0x84db	                             test bl, bl	      3836	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x4008e72	            0x7530	                           jne 0x4008ea4	      3836	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x4008e74	        0x4983c701	                              add r15, 1	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x4008e78	        0x4c393c24	                    cmp qword [rsp], r15	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x4008e7c	            0x7459	                            je 0x4008ed7	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x4008e7e	        0x4b8b34ee	            mov rsi, qword [r14 + r13*8]	        59	string3.h	FUNCTION_93	CALL_3
0x4008e82	          0x4889ea	                            mov rdx, rbp	        59	string3.h	FUNCTION_93	CALL_3
0x4008e85	      0xe800000000	                          call 0x4008e8a	        59	string3.h	FUNCTION_93	CALL_3
0x4008e8a	          0x4889ef	                            mov rdi, rbp	      3833	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x4008e8d	    0x4803bc24b000	             add rdi, qword [rsp + 0xb0]	      3833	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x4008e95	      0x4c3b7c2408	                cmp r15, qword [rsp + 8]	      3836	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x4008e9a	    0x4889bc24b000	             mov qword [rsp + 0xb0], rdi	      3833	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x4008ea2	            0x7dcc	                           jge 0x4008e70	      3836	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x4008ea4	          0x4585e4	                         test r12d, r12d	      3836	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x4008ea7	            0x74cb	                            je 0x4008e74	      3836	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x4008ea9	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        90	string3.h	FUNCTION_95	CALL_6
0x4008eae	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x4008eb3	        0x4983c701	                              add r15, 1	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x4008eb7	      0xe800000000	                          call 0x4008ebc	        90	string3.h	FUNCTION_95	CALL_6
0x4008ebc	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3839	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x4008ec1	    0x4803bc24b000	             add rdi, qword [rsp + 0xb0]	      3839	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x4008ec9	        0x4c393c24	                    cmp qword [rsp], r15	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x4008ecd	    0x4889bc24b000	             mov qword [rsp + 0xb0], rdi	      3839	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x4008ed5	            0x75a7	                           jne 0x4008e7e	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x4008ed7	      0x4c8b642460	            mov r12, qword [rsp + 0x60] 	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x4008edc	      0x448b7c2468	           mov r15d, dword [rsp + 0x68] 	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x4008ee1	      0x48635c2440	         movsxd rbx, dword [rsp + 0x40] 	      3843	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_56
0x4008ee6	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x4008eeb	          0x4889da	                            mov rdx, rbx	        90	string3.h	FUNCTION_95	CALL_6
0x4008eee	      0xe800000000	                          call 0x4008ef3	        90	string3.h	FUNCTION_95	CALL_6
0x4008ef3	      0x4863742470	         movsxd rsi, dword [rsp + 0x70] 	        59	string3.h	FUNCTION_93	CALL_3
0x4008ef8	        0x8b542428	            mov edx, dword [rsp + 0x28] 	        59	string3.h	FUNCTION_93	CALL_3
0x4008efc	          0x4889df	                            mov rdi, rbx	      3844	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008eff	        0x2b542418	             sub edx, dword [rsp + 0x18]	        59	string3.h	FUNCTION_93	CALL_3
0x4008f03	    0x4803bc24b000	             add rdi, qword [rsp + 0xb0]	      3844	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008f0b	            0x29f2	                            sub edx, esi	        59	string3.h	FUNCTION_93	CALL_3
0x4008f0d	      0x4803742458	             add rsi, qword [rsp + 0x58]	        59	string3.h	FUNCTION_93	CALL_3
0x4008f12	    0x4889bc24b000	             mov qword [rsp + 0xb0], rdi	      3844	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008f1a	          0x83c201	                              add edx, 1	        59	string3.h	FUNCTION_93	CALL_3
0x4008f1d	          0x4863d2	                         movsxd rdx, edx	        59	string3.h	FUNCTION_93	CALL_3
0x4008f20	          0x4c01e6	                            add rsi, r12	        59	string3.h	FUNCTION_93	CALL_3
0x4008f23	      0xe800000000	                          call 0x4008f28	        59	string3.h	FUNCTION_93	CALL_3
0x4008f28	    0x488b05000000	            mov rax, qword [0x04008f2f] 	      3848	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_58
0x4008f2f	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      3848	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_58
0x4008f34	            0x31d2	                            xor edx, edx	      3848	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_58
0x4008f36	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      3848	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_58
0x4008f3a	      0xe800000000	                          call 0x4008f3f	      3848	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_58
0x4008f3f	    0x488b05000000	            mov rax, qword [0x04008f46] 	      3850	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008f46	          0x4d85ed	                           test r13, r13	      3851	ops.c	FUNCTION_48	IF_38	FOR_2	IF_58
0x4008f49	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      3850	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008f4d	        0x488d5101	                      lea rdx, [rcx + 1]	      3850	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008f51	        0x48895038	             mov qword [rax + 0x38], rdx	      3850	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008f55	     0xf8422060000	                            je 0x400957d	      3851	ops.c	FUNCTION_48	IF_38	FOR_2	IF_58
0x4008f5b	        0x4983c501	                              add r13, 1	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008f5f	    0x4c3bac248000	            cmp r13, qword [rsp + 0x80] 	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008f67	     0xf85b3fcffff	                           jne 0x4008c20	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008f6d	        0x8b6c2474	            mov ebp, dword [rsp + 0x74] 	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008f71	         0x36c2418	             add ebp, dword [rsp + 0x18]	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008f75	          0x8d5dff	                      lea ebx, [rbp - 1]	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008f78	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      3855	ops.c	FUNCTION_48	IF_38	CALL_59
0x4008f7d	    0x488bbc24b800	            mov rdi, qword [rsp + 0xb8] 	      3855	ops.c	FUNCTION_48	IF_38	CALL_59
0x4008f85	            0x31f6	                            xor esi, esi	      3855	ops.c	FUNCTION_48	IF_38	CALL_59
0x4008f87	      0xe800000000	                          call 0x4008f8c	      3855	ops.c	FUNCTION_48	IF_38	CALL_59
0x4008f8c	    0x488b15000000	            mov rdx, qword [0x04008f93] 	      3858	ops.c	FUNCTION_48	IF_38
0x4008f93	    0x488b05000000	            mov rax, qword [0x04008f9a] 	      3858	ops.c	FUNCTION_48	IF_38
0x4008f9a	    0x488bb424b800	            mov rsi, qword [rsp + 0xb8] 	      3859	ops.c	FUNCTION_48	IF_38
0x4008fa2	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      3862	ops.c	FUNCTION_48	IF_38
0x4008fa6	        0x488b7a40	            mov rdi, qword [rdx + 0x40] 	      3858	ops.c	FUNCTION_48	IF_38
0x4008faa	    0x4889b0e01100	          mov qword [rax + 0x11e0], rsi 	      3859	ops.c	FUNCTION_48	IF_38
0x4008fb1	    0x899808120000	          mov dword [rax + 0x1208], ebx 	      3863	ops.c	FUNCTION_48	IF_38
0x4008fb7	    0xc7800c120000	            mov dword [rax + 0x120c], 0 	      3865	ops.c	FUNCTION_48	IF_38
0x4008fc1	        0x4883e901	                              sub rcx, 1	      3862	ops.c	FUNCTION_48	IF_38
0x4008fc5	      0xf644243802	               test byte [rsp + 0x38], 2	      3867	ops.c	FUNCTION_48	IF_38	IF_59
0x4008fca	    0x4889b8e81100	          mov qword [rax + 0x11e8], rdi 	      3858	ops.c	FUNCTION_48	IF_38
0x4008fd1	    0x488988001200	          mov qword [rax + 0x1200], rcx 	      3862	ops.c	FUNCTION_48	IF_38
0x4008fd8	     0xf857a020000	                           jne 0x4009258	      3867	ops.c	FUNCTION_48	IF_38	IF_59
0x4008fde	        0x48897238	             mov qword [rdx + 0x38], rsi	      3880	ops.c	FUNCTION_48	IF_38	ELSE_13
0x4008fe2	      0xe995f0ffff	                           jmp 0x400807c	      3880	ops.c	FUNCTION_48	IF_38	ELSE_13
0x4008fe7	          0x4189c7	                           mov r15d, eax	      3880	ops.c	FUNCTION_48	IF_38	ELSE_13
0x4008fea	            0x89c8	                            mov eax, ecx	      3880	ops.c	FUNCTION_48	IF_38	ELSE_13
0x4008fec	            0x89d1	                            mov ecx, edx	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x4008fee	          0x4429e1	                           sub ecx, r12d	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x4008ff1	        0x894c2418	             mov dword [rsp + 0x18], ecx	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x4008ff5	            0x29d8	                            sub eax, ebx	      3787	ops.c	FUNCTION_48	IF_38	FOR_2	IF_51
0x4008ff7	    0xc74424680100	               mov dword [rsp + 0x68], 1	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008fff	    0xc74424400000	               mov dword [rsp + 0x40], 0	      3761	ops.c	FUNCTION_48	IF_38	FOR_2
0x4009007	        0x8944243c	             mov dword [rsp + 0x3c], eax	      3787	ops.c	FUNCTION_48	IF_38	FOR_2	IF_51
0x400900b	        0x89442430	             mov dword [rsp + 0x30], eax	      3787	ops.c	FUNCTION_48	IF_38	FOR_2	IF_51
0x400900f	    0xc74424700000	               mov dword [rsp + 0x70], 0	      3763	ops.c	FUNCTION_48	IF_38	FOR_2
0x4009017	      0xe91afdffff	                           jmp 0x4008d36	      3763	ops.c	FUNCTION_48	IF_38	FOR_2
0x400901c	            0x31c0	                            xor eax, eax	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x400901e	          0x803a00	                       cmp byte [rdx], 0	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x4009021	    0xc74424300000	               mov dword [rsp + 0x30], 0	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x4009029	    0xc74424400000	               mov dword [rsp + 0x40], 0	      3761	ops.c	FUNCTION_48	IF_38	FOR_2
0x4009031	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	      3760	ops.c	FUNCTION_48	IF_38	FOR_2
0x4009039	    0xc74424700000	               mov dword [rsp + 0x70], 0	      3763	ops.c	FUNCTION_48	IF_38	FOR_2
0x4009041	           0xf94c0	                                 sete al	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x4009044	        0x89442468	             mov dword [rsp + 0x68], eax	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x4009048	      0xe9e9fcffff	                           jmp 0x4008d36	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x400904d	    0xc74424300000	               mov dword [rsp + 0x30], 0	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x4009055	    0xc74424680000	               mov dword [rsp + 0x68], 0	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x400905d	    0xc74424400000	               mov dword [rsp + 0x40], 0	      3761	ops.c	FUNCTION_48	IF_38	FOR_2
0x4009065	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	      3760	ops.c	FUNCTION_48	IF_38	FOR_2
0x400906d	    0xc74424700000	               mov dword [rsp + 0x70], 0	      3763	ops.c	FUNCTION_48	IF_38	FOR_2
0x4009075	      0xe9bcfcffff	                           jmp 0x4008d36	      3763	ops.c	FUNCTION_48	IF_38	FOR_2
0x400907a	         0x3442440	             add eax, dword [rsp + 0x40]	      3763	ops.c	FUNCTION_48	IF_38	FOR_2
0x400907e	    0xc74424680000	               mov dword [rsp + 0x68], 0	      3798	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x4009086	    0xc74424700100	               mov dword [rsp + 0x70], 1	      3793	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x400908e	        0x89442430	             mov dword [rsp + 0x30], eax	      3793	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x4009092	      0xe99ffcffff	                           jmp 0x4008d36	      3793	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x4009097	        0x8b5c2418	            mov ebx, dword [rsp + 0x18] 	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x400909b	          0x4c89e7	                            mov rdi, r12	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x400909e	          0x4863f3	                         movsxd rsi, ebx	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x40090a1	          0x4c01e6	                            add rsi, r12	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x40090a4	    0xff1500000000	                 call qword [0x040090aa]	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x40090aa	            0x89d9	                            mov ecx, ebx	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x40090ac	            0x29c1	                            sub ecx, eax	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x40090ae	        0x894c2418	             mov dword [rsp + 0x18], ecx	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x40090b2	      0xe94ffcffff	                           jmp 0x4008d06	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x40090b7	    0x488b05000000	            mov rax, qword [0x040090be] 	      4103	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93
0x40090be	      0xbf05000000	                              mov edi, 5	      4104	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93	CALL_100
0x40090c3	        0x48895838	             mov qword [rax + 0x38], rbx	      4103	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93
0x40090c7	      0xe800000000	                          call 0x40090cc	      4104	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93	CALL_100
0x40090cc	      0xe9abefffff	                           jmp 0x400807c	      4104	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93	CALL_100
0x40090d1	        0x4183fd01	                             cmp r13d, 1	      4069	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88	IF_89
0x40090d5	    0xc782e8110000	            mov dword [rdx + 0x11e8], 0 	      4068	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88
0x40090df	    0x488b82e01100	          mov rax, qword [rdx + 0x11e0] 	      4070	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88	IF_89
0x40090e6	     0xf85adf6ffff	                           jne 0x4008799	      4069	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88	IF_89
0x40090ec	        0x4883c001	                              add rax, 1	      4070	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88	IF_89
0x40090f0	    0x488982e01100	          mov qword [rdx + 0x11e0], rax 	      4070	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88	IF_89
0x40090f7	      0xe99df6ffff	                           jmp 0x4008799	      4070	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88	IF_89
0x40090fc	        0x4883e801	                              sub rax, 1	      3923	ops.c	FUNCTION_48	ELSE_14	ELSE_16	IF_66
0x4009100	    0x48898424b800	             mov qword [rsp + 0xb8], rax	      3923	ops.c	FUNCTION_48	ELSE_14	ELSE_16	IF_66
0x4009108	      0xe95ef2ffff	                           jmp 0x400836b	      3923	ops.c	FUNCTION_48	ELSE_14	ELSE_16	IF_66
0x400910d	    0xc78508120000	            mov dword [rbp + 0x1208], 0 	      4098	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22
0x4009117	      0xe921f7ffff	                           jmp 0x400883d	      4098	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22
0x400911c	        0x4883e801	                              sub rax, 1	      3669	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x4009120	        0x48894338	             mov qword [rbx + 0x38], rax	      3669	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x4009124	      0xe9def1ffff	                           jmp 0x4008307	      3669	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x4009129	          0x4c89e2	                            mov rdx, r12	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400912c	    0xc74424180000	               mov dword [rsp + 0x18], 0	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x4009134	            0x31db	                            xor ebx, ebx	      3762	ops.c	FUNCTION_48	IF_38	FOR_2
0x4009136	      0xe99bfbffff	                           jmp 0x4008cd6	      3762	ops.c	FUNCTION_48	IF_38	FOR_2
0x400913b	    0xc74424180000	               mov dword [rsp + 0x18], 0	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x4009143	            0x31db	                            xor ebx, ebx	      3762	ops.c	FUNCTION_48	IF_38	FOR_2
0x4009145	      0xe9abfeffff	                           jmp 0x4008ff5	      3762	ops.c	FUNCTION_48	IF_38	FOR_2
0x400914a	    0x488b1d000000	            mov rbx, qword [0x04009151] 	      3762	ops.c	FUNCTION_48	IF_38	FOR_2
0x4009151	          0x4585e4	                         test r12d, r12d	      3887	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x4009154	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      3699	ops.c	FUNCTION_48
0x4009158	          0x8b5340	            mov edx, dword [rbx + 0x40] 	      3700	ops.c	FUNCTION_48
0x400915b	    0x48898424b800	             mov qword [rsp + 0xb8], rax	      3699	ops.c	FUNCTION_48
0x4009163	    0x899424a40000	             mov dword [rsp + 0xa4], edx	      3700	ops.c	FUNCTION_48
0x400916a	     0xf84c9edffff	                            je 0x4007f39	      3887	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x4009170	      0xe9ecf1ffff	                           jmp 0x4008361	      3887	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x4009175	           0xf1f00	                         nop dword [rax]	      3887	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x4009178	      0xe800000000	                          call 0x400917d	      3891	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	CALL_62
0x400917d	            0x85c0	                           test eax, eax	      3891	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	CALL_62
0x400917f	            0x7459	                            je 0x40091da	      3891	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	CALL_62
0x4009181	    0x8b0500000000	            mov eax, dword [0x04009187] 	      3894	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63
0x4009187	            0x85c0	                           test eax, eax	      3894	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63
0x4009189	     0xf853d040000	                           jne 0x40095cc	      3894	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63
0x400918f	      0x448b5c2410	           mov r11d, dword [rsp + 0x10] 	      3910	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x4009194	    0x838424a40000	               add dword [rsp + 0xa4], 1	      3909	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15
0x400919c	          0x4585db	                         test r11d, r11d	      3910	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x400919f	            0x7439	                            je 0x40091da	      3910	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x40091a1	    0x488b0d000000	            mov rcx, qword [0x040091a8] 	      3912	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x40091a8	    0x488b15000000	            mov rdx, qword [0x040091af] 	      3913	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x40091af	        0x83414001	               add dword [rcx + 0x40], 1	      3912	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x40091b3	    0x838208120000	             add dword [rdx + 0x1208], 1	      3913	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x40091ba	      0xe98eedffff	                           jmp 0x4007f4d	      3913	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x40091bf	        0x8b6c2474	            mov ebp, dword [rsp + 0x74] 	      3913	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x40091c3	         0x36c2418	             add ebp, dword [rsp + 0x18]	      3913	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x40091c7	    0x488b05000000	            mov rax, qword [0x040091ce] 	      3913	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x40091ce	          0x8d5dff	                      lea ebx, [rbp - 1]	      3913	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x40091d1	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3913	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x40091d5	      0xe99efdffff	                           jmp 0x4008f78	      3913	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x40091da	    0x488b15000000	            mov rdx, qword [0x040091e1] 	      3913	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x40091e1	    0x488b0d000000	            mov rcx, qword [0x040091e8] 	      3913	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x40091e8	      0xe960edffff	                           jmp 0x4007f4d	      3913	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x40091ed	            0x85f6	                           test esi, esi	      3737	ops.c	FUNCTION_48	IF_38	IF_43
0x40091ef	     0xf8e0b020000	                           jle 0x4009400	      3737	ops.c	FUNCTION_48	IF_38	IF_43
0x40091f5	            0x85db	                           test ebx, ebx	      3740	ops.c	FUNCTION_48	IF_38	IF_43	IF_44
0x40091f7	            0x750f	                           jne 0x4009208	      3740	ops.c	FUNCTION_48	IF_38	IF_43	IF_44
0x40091f9	          0x4584e4	                         test r12b, r12b	      3740	ops.c	FUNCTION_48	IF_38	IF_43	IF_44
0x40091fc	            0x740a	                            je 0x4009208	      3740	ops.c	FUNCTION_48	IF_38	IF_43	IF_44
0x40091fe	          0x83c001	                              add eax, 1	      3741	ops.c	FUNCTION_48	IF_38	IF_43	IF_44
0x4009201	    0x898424a40000	             mov dword [rsp + 0xa4], eax	      3741	ops.c	FUNCTION_48	IF_38	IF_43	IF_44
0x4009208	        0x4183fd01	                             cmp r13d, 1	      3742	ops.c	FUNCTION_48	IF_38	IF_43	IF_45
0x400920c	            0x7409	                            je 0x4009217	      3742	ops.c	FUNCTION_48	IF_38	IF_43	IF_45
0x400920e	          0x4584ff	                         test r15b, r15b	      3742	ops.c	FUNCTION_48	IF_38	IF_43	IF_45
0x4009211	            0x7404	                            je 0x4009217	      3742	ops.c	FUNCTION_48	IF_38	IF_43	IF_45
0x4009213	        0x83424001	               add dword [rdx + 0x40], 1	      3743	ops.c	FUNCTION_48	IF_38	IF_43	IF_45
0x4009217	          0x83fb09	                              cmp ebx, 9	      3744	ops.c	FUNCTION_48	IF_38	IF_43	IF_46
0x400921a	     0xf85b7f9ffff	                           jne 0x4008bd7	      3744	ops.c	FUNCTION_48	IF_38	IF_43	IF_46
0x4009220	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	      3746	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x4009224	     0xf845f030000	                            je 0x4009589	      3746	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x400922a	        0x4183fd01	                             cmp r13d, 1	      3748	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x400922e	     0xf85a3f9ffff	                           jne 0x4008bd7	      3748	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x4009234	    0x8b8424a40000	            mov eax, dword [rsp + 0xa4] 	      3748	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x400923b	          0x83e801	                              sub eax, 1	      3748	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x400923e	    0x3b8424ac0000	            cmp eax, dword [rsp + 0xac] 	      3748	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x4009245	     0xf858cf9ffff	                           jne 0x4008bd7	      3748	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x400924b	        0x83424001	               add dword [rdx + 0x40], 1	      3749	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x400924f	      0xe983f9ffff	                           jmp 0x4008bd7	      3749	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x4009254	         0xf1f4000	                         nop dword [rax]	      3749	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x4009258	    0x488b88001200	          mov rcx, qword [rax + 0x1200] 	      3871	ops.c	FUNCTION_48	IF_38	IF_59
0x400925f	    0x488b98081200	          mov rbx, qword [rax + 0x1208] 	      3871	ops.c	FUNCTION_48	IF_38	IF_59
0x4009266	        0x48894a38	             mov qword [rdx + 0x38], rcx	      3871	ops.c	FUNCTION_48	IF_38	IF_59
0x400926a	        0x48895a40	             mov qword [rdx + 0x40], rbx	      3871	ops.c	FUNCTION_48	IF_38	IF_59
0x400926e	          0x896a40	             mov dword [rdx + 0x40], ebp	      3872	ops.c	FUNCTION_48	IF_38	IF_59
0x4009271	      0xe800000000	                          call 0x4009276	      3875	ops.c	FUNCTION_48	IF_38	IF_59	CALL_61
0x4009276	          0x4889c7	                            mov rdi, rax	      3875	ops.c	FUNCTION_48	IF_38	IF_59	CALL_61
0x4009279	      0xe800000000	                          call 0x400927e	      3875	ops.c	FUNCTION_48	IF_38	IF_59	CALL_61
0x400927e	    0x488b15000000	            mov rdx, qword [0x04009285] 	      3876	ops.c	FUNCTION_48	IF_38	IF_59	IF_60
0x4009285	          0x3b4240	            cmp eax, dword [rdx + 0x40] 	      3876	ops.c	FUNCTION_48	IF_38	IF_59	IF_60
0x4009288	     0xf8deeedffff	                           jge 0x400807c	      3876	ops.c	FUNCTION_48	IF_38	IF_59	IF_60
0x400928e	      0xe9d5f5ffff	                           jmp 0x4008868	      3876	ops.c	FUNCTION_48	IF_38	IF_59	IF_60
0x4009293	        0x488b5500	                    mov rdx, qword [rbp]	      4111	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x4009297	    0x488b05000000	            mov rax, qword [0x0400929e] 	      4112	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x400929e	          0x4839d3	                            cmp rbx, rdx	      4111	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x40092a1	     0xf8c95010000	                            jl 0x400943c	      4111	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x40092a7	        0x48895038	             mov qword [rax + 0x38], rdx	      4112	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x40092ab	    0xc74040000000	               mov dword [rax + 0x40], 0	      4115	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	ELSE_24
0x40092b2	      0xe9c5edffff	                           jmp 0x400807c	      4115	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	ELSE_24
0x40092b7	          0x803800	                       cmp byte [rax], 0	      3603	ops.c	FUNCTION_48	IF_15	IF_16	IF_18
0x40092ba	     0xf84eef5ffff	                            je 0x40088ae	      3603	ops.c	FUNCTION_48	IF_15	IF_16	IF_18
0x40092c0	    0x8b3500000000	            mov esi, dword [0x040092c6] 	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x40092c6	      0xb801000000	                              mov eax, 1	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x40092cb	            0x85f6	                           test esi, esi	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x40092cd	     0xf859a020000	                           jne 0x400956d	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x40092d3	          0x4801c3	                            add rbx, rax	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x40092d6	      0xe9d3f5ffff	                           jmp 0x40088ae	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x40092db	    0x488b15000000	            mov rdx, qword [0x040092e2] 	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x40092e2	      0x4889542408	                mov qword [rsp + 8], rdx	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x40092e7	      0xe800000000	                          call 0x40092ec	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x40092ec	      0x488b542408	                mov rdx, qword [rsp + 8]	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x40092f1	          0x4889c7	                            mov rdi, rax	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x40092f4	            0xffd2	                                call rdx	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x40092f6	    0x488b15000000	            mov rdx, qword [0x040092fd] 	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x40092fd	    0x8b0d00000000	            mov ecx, dword [0x04009303] 	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x4009303	           0x14240	             add dword [rdx + 0x40], eax	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x4009306	      0xe9adf8ffff	                           jmp 0x4008bb8	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x400930b	        0x4183fd01	                             cmp r13d, 1	      4127	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	IF_98
0x400930f	    0xc74040000000	               mov dword [rax + 0x40], 0	      4126	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97
0x4009316	            0x7505	                           jne 0x400931d	      4127	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	IF_98
0x4009318	      0x4883403801	               add qword [rax + 0x38], 1	      4128	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	IF_98
0x400931d	      0xbf05000000	                              mov edi, 5	      4129	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	CALL_101
0x4009322	      0xe800000000	                          call 0x4009327	      4129	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	CALL_101
0x4009327	      0xe950edffff	                           jmp 0x400807c	      4129	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	CALL_101
0x400932c	    0x488d9424a400	                   lea rdx, [rsp + 0xa4]	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x4009334	    0x4c8d8424ac00	                    lea r8, [rsp + 0xac]	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x400933c	            0x31c9	                            xor ecx, ecx	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x400933e	      0xe800000000	                          call 0x4009343	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x4009343	    0x8b8424a40000	            mov eax, dword [rsp + 0xa4] 	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x400934a	    0x488b15000000	            mov rdx, qword [0x04009351] 	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x4009351	    0x8b0d00000000	            mov ecx, dword [0x04009357] 	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x4009357	      0xe966f8ffff	                           jmp 0x4008bc2	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x400935c	        0x8b6c2478	            mov ebp, dword [rsp + 0x78] 	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x4009360	         0x36c2418	             add ebp, dword [rsp + 0x18]	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x4009364	    0x488b05000000	            mov rax, qword [0x0400936b] 	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x400936b	          0x8d5dff	                      lea ebx, [rbp - 1]	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x400936e	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x4009372	      0xe901fcffff	                           jmp 0x4008f78	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x4009377	    0x4c8d8424ac00	                    lea r8, [rsp + 0xac]	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x400937f	    0x488d9424a400	                   lea rdx, [rsp + 0xa4]	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x4009387	            0x31c9	                            xor ecx, ecx	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x4009389	      0xe800000000	                          call 0x400938e	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x400938e	      0xe9fdf7ffff	                           jmp 0x4008b90	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x4009393	      0xe800000000	                          call 0x4009398	      3694	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x4009398	            0x85c0	                           test eax, eax	      3694	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x400939a	     0xf845aebffff	                            je 0x4007efa	      3694	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x40093a0	    0x488b1d000000	            mov rbx, qword [0x040093a7] 	      3694	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x40093a7	      0xe96bebffff	                           jmp 0x4007f17	      3694	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x40093ac	    0xc74424700000	               mov dword [rsp + 0x70], 0	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x40093b4	      0xe9c8f3ffff	                           jmp 0x4008781	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x40093b9	        0x4183fd01	                             cmp r13d, 1	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x40093bd	    0x488b1d000000	            mov rbx, qword [0x040093c4] 	      3688	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x40093c4	     0xf846c010000	                            je 0x4009536	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x40093ca	          0x8b4344	            mov eax, dword [rbx + 0x44] 	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x40093cd	            0x85c0	                           test eax, eax	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x40093cf	           0xf9fc0	                                 setg al	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x40093d2	            0x84c0	                             test al, al	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x40093d4	     0xf8544010000	                           jne 0x400951e	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x40093da	    0xc74344000000	               mov dword [rbx + 0x44], 0	      3692	ops.c	FUNCTION_48	IF_34	IF_35	ELSE_7
0x40093e1	      0xe931ebffff	                           jmp 0x4007f17	      3692	ops.c	FUNCTION_48	IF_34	IF_35	ELSE_7
0x40093e6	          0x83f904	                              cmp ecx, 4	      3726	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x40093e9	    0x488b15000000	            mov rdx, qword [0x040093f0] 	      3726	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x40093f0	     0xf85b7f7ffff	                           jne 0x4008bad	      3726	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x40093f6	      0xe9bdf7ffff	                           jmp 0x4008bb8	      3726	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x40093fb	       0xf1f440000	                   nop dword [rax + rax]	      3726	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x4009400	    0x8b8c24ac0000	            mov ecx, dword [rsp + 0xac] 	      3738	ops.c	FUNCTION_48	IF_38	IF_43
0x4009407	          0x394a40	            cmp dword [rdx + 0x40], ecx 	      3738	ops.c	FUNCTION_48	IF_38	IF_43
0x400940a	     0xf85c7f7ffff	                           jne 0x4008bd7	      3738	ops.c	FUNCTION_48	IF_38	IF_43
0x4009410	      0xe9e0fdffff	                           jmp 0x40091f5	      3738	ops.c	FUNCTION_48	IF_38	IF_43
0x4009415	           0xf1f00	                         nop dword [rax]	      3738	ops.c	FUNCTION_48	IF_38	IF_43
0x4009418	          0x803b00	                       cmp byte [rbx], 0	      3613	ops.c	FUNCTION_48	IF_15	IF_16	IF_20
0x400941b	     0xf84eaf4ffff	                            je 0x400890b	      3613	ops.c	FUNCTION_48	IF_15	IF_16	IF_20
0x4009421	    0x8b0d00000000	            mov ecx, dword [0x04009427] 	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x4009427	      0xb801000000	                              mov eax, 1	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x400942c	            0x85c9	                           test ecx, ecx	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x400942e	     0xf8582000000	                           jne 0x40094b6	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x4009434	          0x4801c3	                            add rbx, rax	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x4009437	      0xe9cff4ffff	                           jmp 0x400890b	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x400943c	        0x4883c301	                              add rbx, 1	      4114	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	ELSE_24
0x4009440	        0x48895838	             mov qword [rax + 0x38], rbx	      4114	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	ELSE_24
0x4009444	      0xe962feffff	                           jmp 0x40092ab	      4114	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	ELSE_24
0x4009449	            0x84c0	                             test al, al	      3635	ops.c	FUNCTION_48	IF_24
0x400944b	     0xf857cf1ffff	                           jne 0x40085cd	      3635	ops.c	FUNCTION_48	IF_24
0x4009451	        0x4183fc02	                             cmp r12d, 2	      3642	ops.c	FUNCTION_48	IF_25
0x4009455	            0x7550	                           jne 0x40094a7	      3642	ops.c	FUNCTION_48	IF_25
0x4009457	    0x488b05000000	            mov rax, qword [0x0400945e] 	      3644	ops.c	FUNCTION_48	IF_25
0x400945e	    0x488b15000000	            mov rdx, qword [0x04009465] 	      3645	ops.c	FUNCTION_48	IF_25	IF_26
0x4009465	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3644	ops.c	FUNCTION_48	IF_25
0x4009469	          0x488b12	                    mov rdx, qword [rdx]	      3645	ops.c	FUNCTION_48	IF_25	IF_26
0x400946c	      0x488d742801	                lea rsi, [rax + rbp + 1]	      3644	ops.c	FUNCTION_48	IF_25
0x4009471	          0x4839d6	                            cmp rsi, rdx	      3645	ops.c	FUNCTION_48	IF_25	IF_26
0x4009474	    0x4889b424b800	             mov qword [rsp + 0xb8], rsi	      3644	ops.c	FUNCTION_48	IF_25
0x400947c	            0x7e0c	                           jle 0x400948a	      3645	ops.c	FUNCTION_48	IF_25	IF_26
0x400947e	        0x488d7201	                      lea rsi, [rdx + 1]	      3646	ops.c	FUNCTION_48	IF_25	IF_26
0x4009482	    0x4889b424b800	             mov qword [rsp + 0xb8], rsi	      3646	ops.c	FUNCTION_48	IF_25	IF_26
0x400948a	        0x488d78ff	                      lea rdi, [rax - 1]	      3647	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x400948e	      0xe800000000	                          call 0x4009493	      3647	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x4009493	            0x85c0	                           test eax, eax	      3647	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x4009495	     0xf84fdebffff	                            je 0x4008098	      3647	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x400949b	    0x488b1d000000	            mov rbx, qword [0x040094a2] 	      3647	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x40094a2	      0xe983eeffff	                           jmp 0x400832a	      3647	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x40094a7	        0x4183fc01	                             cmp r12d, 1	      3650	ops.c	FUNCTION_48	ELSE_3	IF_28
0x40094ab	     0xf85e8e9ffff	                           jne 0x4007e99	      3650	ops.c	FUNCTION_48	ELSE_3	IF_28
0x40094b1	      0xe9caedffff	                           jmp 0x4008280	      3650	ops.c	FUNCTION_48	ELSE_3	IF_28
0x40094b6	      0x4889542410	             mov qword [rsp + 0x10], rdx	      3650	ops.c	FUNCTION_48	ELSE_3	IF_28
0x40094bb	          0x4889df	                            mov rdi, rbx	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x40094be	    0xff1500000000	                 call qword [0x040094c4]	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x40094c4	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x40094c9	            0x4898	                                    cdqe	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x40094cb	      0xe964ffffff	                           jmp 0x4009434	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x40094d0	        0x488b4138	            mov rax, qword [rcx + 0x38] 	      3924	ops.c	FUNCTION_48	ELSE_14
0x40094d4	      0x4889442478	             mov qword [rsp + 0x78], rax	      3924	ops.c	FUNCTION_48	ELSE_14
0x40094d9	          0x8b4140	            mov eax, dword [rcx + 0x40] 	      3924	ops.c	FUNCTION_48	ELSE_14
0x40094dc	    0x898424980000	             mov dword [rsp + 0x98], eax	      3924	ops.c	FUNCTION_48	ELSE_14
0x40094e3	          0x8b4144	            mov eax, dword [rcx + 0x44] 	      3924	ops.c	FUNCTION_48	ELSE_14
0x40094e6	    0x898424800000	             mov dword [rsp + 0x80], eax	      3924	ops.c	FUNCTION_48	ELSE_14
0x40094ed	      0xe996eeffff	                           jmp 0x4008388	      3924	ops.c	FUNCTION_48	ELSE_14
0x40094f2	      0x483b6c2410	            cmp rbp, qword [rsp + 0x10] 	      4038	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_82
0x40094f7	     0xf85a7efffff	                           jne 0x40084a4	      4038	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_82
0x40094fd	          0x4889c7	                            mov rdi, rax	      4039	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_89
0x4009500	    0x488984249000	             mov qword [rsp + 0x90], rax	      4039	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_89
0x4009508	      0xe800000000	                          call 0x400950d	      4039	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_89
0x400950d	    0x488b94249000	            mov rdx, qword [rsp + 0x90] 	      4039	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_89
0x4009515	        0x89442470	             mov dword [rsp + 0x70], eax	      4039	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_89
0x4009519	      0xe986efffff	                           jmp 0x40084a4	      4039	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_89
0x400951e	      0xe800000000	                          call 0x4009523	      3690	ops.c	FUNCTION_48	IF_34	IF_35	CALL_36
0x4009523	            0x89c7	                            mov edi, eax	      3690	ops.c	FUNCTION_48	IF_34	IF_35	CALL_36
0x4009525	      0xe800000000	                          call 0x400952a	      3690	ops.c	FUNCTION_48	IF_34	IF_35	CALL_36
0x400952a	    0x488b1d000000	            mov rbx, qword [0x04009531] 	      3690	ops.c	FUNCTION_48	IF_34	IF_35	CALL_36
0x4009531	      0xe9e1e9ffff	                           jmp 0x4007f17	      3690	ops.c	FUNCTION_48	IF_34	IF_35	CALL_36
0x4009536	    0x488b05000000	            mov rax, qword [0x0400953d] 	      3688	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x400953d	        0x48635344	         movsxd rdx, dword [rbx + 0x44] 	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x4009541	    0x488b80a81500	          mov rax, qword [rax + 0x15a8] 	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x4009548	        0x4883e801	                              sub rax, 1	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x400954c	          0x4839c2	                            cmp rdx, rax	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x400954f	           0xf9cc0	                                 setl al	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x4009552	      0xe97bfeffff	                           jmp 0x40093d2	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x4009557	      0x48895c2420	             mov qword [rsp + 0x20], rbx	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x400955c	      0x448b6c2474	           mov r13d, dword [rsp + 0x74] 	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x4009561	    0x488b15000000	            mov rdx, qword [0x04009568] 	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x4009568	      0xe925f2ffff	                           jmp 0x4008792	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x400956d	          0x4889df	                            mov rdi, rbx	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x4009570	    0xff1500000000	                 call qword [0x04009576]	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x4009576	            0x4898	                                    cdqe	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x4009578	      0xe956fdffff	                           jmp 0x40092d3	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x400957d	        0x8b4c243c	            mov ecx, dword [rsp + 0x3c] 	      3852	ops.c	FUNCTION_48	IF_38	FOR_2	IF_58
0x4009581	           0x14840	             add dword [rax + 0x40], ecx	      3852	ops.c	FUNCTION_48	IF_38	FOR_2	IF_58
0x4009584	      0xe9d2f9ffff	                           jmp 0x4008f5b	      3852	ops.c	FUNCTION_48	IF_38	FOR_2	IF_58
0x4009589	          0x8b4240	            mov eax, dword [rdx + 0x40] 	      3746	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x400958c	            0x85c0	                           test eax, eax	      3746	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x400958e	     0xf8443f6ffff	                            je 0x4008bd7	      3746	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x4009594	          0x83e801	                              sub eax, 1	      3747	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x4009597	          0x894240	             mov dword [rdx + 0x40], eax	      3747	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x400959a	      0xe938f6ffff	                           jmp 0x4008bd7	      3747	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x400959f	          0x4d85f6	                           test r14, r14	      3747	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x40095a2	    0x48c744242000	               mov qword [rsp + 0x20], 0	      3480	ops.c	FUNCTION_48
0x40095ab	           0xf94c2	                                 sete dl	      3480	ops.c	FUNCTION_48
0x40095ae	          0x4885ed	                           test rbp, rbp	      3480	ops.c	FUNCTION_48
0x40095b1	           0xf94c0	                                 sete al	      3480	ops.c	FUNCTION_48
0x40095b4	             0x9d0	                             or eax, edx	      3480	ops.c	FUNCTION_48
0x40095b6	      0xe9ffefffff	                           jmp 0x40085ba	      3480	ops.c	FUNCTION_48
0x40095bb	      0xe800000000	                          call 0x40095c0	      4149	ops.c	FUNCTION_48
0x40095c0	      0xbbffffffff	                     mov ebx, 0xffffffff	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x40095c5	            0x31ed	                            xor ebp, ebp	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x40095c7	      0xe9acf9ffff	                           jmp 0x4008f78	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x40095cc	    0x488b1d000000	            mov rbx, qword [0x040095d3] 	      3896	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	CALL_63
0x40095d3	      0xe800000000	                          call 0x40095d8	      3896	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	CALL_63
0x40095d8	          0x4889c7	                            mov rdi, rax	      3896	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	CALL_63
0x40095db	            0xffd3	                                call rbx	      3896	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	CALL_63
0x40095dd	        0x8b5c2410	            mov ebx, dword [rsp + 0x10] 	      3900	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x40095e1	     0x18424a40000	             add dword [rsp + 0xa4], eax	      3899	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63
0x40095e8	            0x85db	                           test ebx, ebx	      3900	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x40095ea	     0xf84eafbffff	                            je 0x40091da	      3900	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x40095f0	    0x488b0d000000	            mov rcx, qword [0x040095f7] 	      3902	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x40095f7	    0x488b15000000	            mov rdx, qword [0x040095fe] 	      3903	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x40095fe	           0x14140	             add dword [rcx + 0x40], eax	      3902	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x4009601	     0x18208120000	           add dword [rdx + 0x1208], eax	      3903	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x4009607	      0xe941e9ffff	                           jmp 0x4007f4d	      3903	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
ex_display	SWITCH,0:IF,15:WHILE,0:DO,0:FOR,3:ELSE,2:CALL,41:functions,0	314
0x4009610	            0x4157	                                push r15	      4245	ops.c	FUNCTION_52
0x4009612	            0x4156	                                push r14	      4245	ops.c	FUNCTION_52
0x4009614	            0x4155	                                push r13	      4245	ops.c	FUNCTION_52
0x4009616	            0x4154	                                push r12	      4245	ops.c	FUNCTION_52
0x4009618	              0x55	                                push rbp	      4245	ops.c	FUNCTION_52
0x4009619	              0x53	                                push rbx	      4245	ops.c	FUNCTION_52
0x400961a	        0x4883ec48	                           sub rsp, 0x48	      4245	ops.c	FUNCTION_52
0x400961e	    0x64488b042528	                mov rax, qword fs:[0x28]	      4245	ops.c	FUNCTION_52
0x4009627	      0x4889442438	             mov qword [rsp + 0x38], rax	      4245	ops.c	FUNCTION_52
0x400962c	            0x31c0	                            xor eax, eax	      4245	ops.c	FUNCTION_52
0x400962e	          0x488b07	                    mov rax, qword [rdi]	      4252	ops.c	FUNCTION_52
0x4009631	          0x4885c0	                           test rax, rax	      4259	ops.c	FUNCTION_52	IF_1
0x4009634	      0x4889442408	                mov qword [rsp + 8], rax	      4252	ops.c	FUNCTION_52
0x4009639	            0x7417	                            je 0x4009652	      4259	ops.c	FUNCTION_52	IF_1
0x400963b	          0x803800	                       cmp byte [rax], 0	      4260	ops.c	FUNCTION_52	IF_1
0x400963e	          0x4889c1	                            mov rcx, rax	      4260	ops.c	FUNCTION_52	IF_1
0x4009641	      0xb800000000	                              mov eax, 0	      4260	ops.c	FUNCTION_52	IF_1
0x4009646	          0x4889c6	                            mov rsi, rax	      4260	ops.c	FUNCTION_52	IF_1
0x4009649	        0x480f45f1	                         cmovne rsi, rcx	      4260	ops.c	FUNCTION_52	IF_1
0x400964d	      0x4889742408	                mov qword [rsp + 8], rsi	      4260	ops.c	FUNCTION_52	IF_1
0x4009652	    0x8b0500000000	            mov eax, dword [0x04009658] 	      4261	ops.c	FUNCTION_52	CALL_1
0x4009658	            0x31ff	                            xor edi, edi	      4264	ops.c	FUNCTION_52	CALL_3
0x400965a	      0xba05000000	                              mov edx, 5	      4264	ops.c	FUNCTION_52	CALL_3
0x400965f	      0xbe00000000	                              mov esi, 0	      4264	ops.c	FUNCTION_52	CALL_3
0x4009664	    0x41beffffffff	                    mov r14d, 0xffffffff	      4264	ops.c	FUNCTION_52	CALL_3
0x400966a	        0x8944241c	             mov dword [rsp + 0x1c], eax	      4261	ops.c	FUNCTION_52	CALL_1
0x400966e	      0xe800000000	                          call 0x4009673	      4264	ops.c	FUNCTION_52	CALL_3
0x4009673	          0x4889c7	                            mov rdi, rax	      4264	ops.c	FUNCTION_52	CALL_3
0x4009676	      0xe800000000	                          call 0x400967b	      4264	ops.c	FUNCTION_52	CALL_3
0x400967b	    0x8b0500000000	            mov eax, dword [0x04009681] 	      4265	ops.c	FUNCTION_52	FOR_1
0x4009681	    0x48c744241000	               mov qword [rsp + 0x10], 0	      4265	ops.c	FUNCTION_52	FOR_1
0x400968a	    0xc74424180000	               mov dword [rsp + 0x18], 0	      4264	ops.c	FUNCTION_52	CALL_3
0x4009692	            0x85c0	                           test eax, eax	      4265	ops.c	FUNCTION_52	FOR_1
0x4009694	     0xf8577010000	                           jne 0x4009811	      4265	ops.c	FUNCTION_52	FOR_1
0x400969a	    0x660f1f440000	                    nop word [rax + rax]	      4265	ops.c	FUNCTION_52	FOR_1
0x40096a0	        0x4183feff	            cmp r14d, 0xffffffffffffffff	      4210	ops.c	FUNCTION_51	IF_1
0x40096a4	     0xf846e040000	                            je 0x4009b18	      4210	ops.c	FUNCTION_51	IF_1
0x40096aa	        0x4183fe09	                             cmp r14d, 9	      4212	ops.c	FUNCTION_51	ELSE_1	IF_2
0x40096ae	     0xf8e12030000	                           jle 0x40099c6	      4212	ops.c	FUNCTION_51	ELSE_1	IF_2
0x40096b4	        0x4183fe24	                          cmp r14d, 0x24	      4214	ops.c	FUNCTION_51	ELSE_2	IF_3
0x40096b8	     0xf84c2040000	                            je 0x4009b80	      4214	ops.c	FUNCTION_51	ELSE_2	IF_3
0x40096be	        0x4183fe25	                          cmp r14d, 0x25	      4217	ops.c	FUNCTION_51	ELSE_3	IF_4
0x40096c2	      0xbe2a000000	                           mov esi, 0x2a	      4218	ops.c	FUNCTION_51	ELSE_3	IF_4
0x40096c7	            0x7413	                            je 0x40096dc	      4217	ops.c	FUNCTION_51	ELSE_3	IF_4
0x40096c9	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      4217	ops.c	FUNCTION_51	ELSE_3	IF_4
0x40096cd	      0xbe2b000000	                           mov esi, 0x2b	      4217	ops.c	FUNCTION_51	ELSE_3	IF_4
0x40096d2	          0x83c056	                           add eax, 0x56	      4217	ops.c	FUNCTION_51	ELSE_3	IF_4
0x40096d5	        0x4183fe26	                          cmp r14d, 0x26	      4217	ops.c	FUNCTION_51	ELSE_3	IF_4
0x40096d9	           0xf45f0	                         cmovne esi, eax	      4217	ops.c	FUNCTION_51	ELSE_3	IF_4
0x40096dc	    0x48837c240800	                  cmp qword [rsp + 8], 0	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x40096e2	        0x89742424	             mov dword [rsp + 0x24], esi	      4267	ops.c	FUNCTION_52	FOR_1	CALL_4
0x40096e6	            0x7413	                            je 0x40096fb	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x40096e8	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x40096ed	      0xe800000000	                          call 0x40096f2	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x40096f2	          0x4885c0	                           test rax, rax	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x40096f5	     0xf84f2000000	                            je 0x40097ed	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x40096fb	      0x488d7c2424	                   lea rdi, [rsp + 0x24]	      4280	ops.c	FUNCTION_52	FOR_1	CALL_7
0x4009700	      0xe800000000	                          call 0x4009705	      4280	ops.c	FUNCTION_52	FOR_1	CALL_7
0x4009705	        0x8b7c2424	            mov edi, dword [rsp + 0x24] 	      4281	ops.c	FUNCTION_52	FOR_1	CALL_8
0x4009709	      0xe800000000	                          call 0x400970e	      4281	ops.c	FUNCTION_52	FOR_1	CALL_8
0x400970e	    0x8b3d00000000	            mov edi, dword [0x04009714] 	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x4009714	      0xe800000000	                          call 0x4009719	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x4009719	        0x3b442424	            cmp eax, dword [rsp + 0x24] 	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x400971d	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	      4292	ops.c	FUNCTION_52	FOR_1	ELSE_2
0x4009722	     0xf84c5000000	                            je 0x40097ed	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x4009728	    0x833d00000000	           cmp dword [0x0400972f], 0x22 	      4296	ops.c	FUNCTION_52	FOR_1	IF_5
0x400972f	     0xf849d020000	                            je 0x40099d2	      4296	ops.c	FUNCTION_52	FOR_1	IF_5
0x4009735	      0x49837d0000	                      cmp qword [r13], 0	      4301	ops.c	FUNCTION_52	FOR_1	IF_6
0x400973a	     0xf84a8000000	                            je 0x40097e8	      4301	ops.c	FUNCTION_52	FOR_1	IF_6
0x4009740	      0xbf0a000000	                            mov edi, 0xa	      4303	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_10
0x4009745	      0xe800000000	                          call 0x400974a	      4303	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_10
0x400974a	      0xbf22000000	                           mov edi, 0x22	      4304	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_11
0x400974f	      0xe800000000	                          call 0x4009754	      4304	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_11
0x4009754	        0x8b7c2424	            mov edi, dword [rsp + 0x24] 	      4305	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_12
0x4009758	      0xe800000000	                          call 0x400975d	      4305	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_12
0x400975d	      0xbf00000000	                              mov edi, 0	      4306	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_13
0x4009762	      0xe800000000	                          call 0x4009767	      4306	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_13
0x4009767	      0x49837d0800	                  cmp qword [r13 + 8], 0	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x400976c	    0x8b0500000000	            mov eax, dword [0x04009772] 	      4308	ops.c	FUNCTION_52	FOR_1	IF_6
0x4009772	          0x8d68fa	                      lea ebp, [rax - 6]	      4308	ops.c	FUNCTION_52	FOR_1	IF_6
0x4009775	            0x7e5c	                           jle 0x40097d3	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x4009777	          0x83fd01	                              cmp ebp, 1	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x400977a	            0x7e67	                           jle 0x40097e3	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x400977c	          0x4531e4	                          xor r12d, r12d	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x400977f	              0x90	                                     nop	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x4009780	        0x498b4500	                    mov rax, qword [r13]	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4009784	        0x4a8b1ce0	            mov rbx, qword [rax + r12*8]	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4009788	          0x803b00	                       cmp byte [rbx], 0	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x400978b	            0x7530	                           jne 0x40097bd	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x400978d	      0xe9fe010000	                           jmp 0x4009990	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4009792	    0x660f1f440000	                    nop word [rax + rax]	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4009798	          0x4889df	                            mov rdi, rbx	      4319	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3
0x400979b	    0xff1500000000	                 call qword [0x040097a1]	      4319	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3
0x40097a1	          0x4889df	                            mov rdi, rbx	      4321	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_16
0x40097a4	          0x4189c7	                           mov r15d, eax	      4319	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3
0x40097a7	            0x89c6	                            mov esi, eax	      4321	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_16
0x40097a9	      0xe800000000	                          call 0x40097ae	      4321	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_16
0x40097ae	          0x4963d7	                        movsxd rdx, r15d	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x40097b1	          0x4801d3	                            add rbx, rdx	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x40097b4	          0x803b00	                       cmp byte [rbx], 0	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x40097b7	     0xf84d3010000	                            je 0x4009990	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x40097bd	          0x4889df	                            mov rdi, rbx	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x40097c0	      0xe800000000	                          call 0x40097c5	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x40097c5	            0x29c5	                            sub ebp, eax	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x40097c7	            0x79cf	                           jns 0x4009798	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x40097c9	        0x4983c401	                              add r12, 1	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x40097cd	        0x4d3b6508	                cmp r12, qword [r13 + 8]	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x40097d1	            0x7c10	                            jl 0x40097e3	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x40097d3	          0x83fd01	                              cmp ebp, 1	      4327	ops.c	FUNCTION_52	FOR_1	IF_6	IF_8
0x40097d6	            0x7e0b	                           jle 0x40097e3	      4327	ops.c	FUNCTION_52	FOR_1	IF_6	IF_8
0x40097d8	      0x41807d1001	                cmp byte [r13 + 0x10], 1	      4327	ops.c	FUNCTION_52	FOR_1	IF_6	IF_8
0x40097dd	     0xf8401020000	                            je 0x40099e4	      4327	ops.c	FUNCTION_52	FOR_1	IF_6	IF_8
0x40097e3	      0xe800000000	                          call 0x40097e8	      4329	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_18
0x40097e8	      0xe800000000	                          call 0x40097ed	      4331	ops.c	FUNCTION_52	FOR_1	CALL_19
0x40097ed	      0x837c241828	           cmp dword [rsp + 0x18], 0x28 	      4265	ops.c	FUNCTION_52	FOR_1
0x40097f2	            0x741d	                            je 0x4009811	      4265	ops.c	FUNCTION_52	FOR_1
0x40097f4	    0x8b0500000000	            mov eax, dword [0x040097fa] 	      4265	ops.c	FUNCTION_52	FOR_1
0x40097fa	      0x8344241801	               add dword [rsp + 0x18], 1	      4265	ops.c	FUNCTION_52	FOR_1
0x40097ff	        0x4183c601	                             add r14d, 1	      4265	ops.c	FUNCTION_52	FOR_1
0x4009803	    0x488344241020	            add qword [rsp + 0x10], 0x20	      4265	ops.c	FUNCTION_52	FOR_1
0x4009809	            0x85c0	                           test eax, eax	      4265	ops.c	FUNCTION_52	FOR_1
0x400980b	     0xf848ffeffff	                            je 0x40096a0	      4265	ops.c	FUNCTION_52	FOR_1
0x4009811	      0xe800000000	                          call 0x4009816	      4337	ops.c	FUNCTION_52	IF_9	CALL_20
0x4009816	          0x4885c0	                           test rax, rax	      4337	ops.c	FUNCTION_52	IF_9	CALL_20
0x4009819	          0x4889c3	                            mov rbx, rax	      4337	ops.c	FUNCTION_52	IF_9	CALL_20
0x400981c	            0x742e	                            je 0x400984c	      4337	ops.c	FUNCTION_52	IF_9	CALL_20
0x400981e	    0x48837c240800	                  cmp qword [rsp + 8], 0	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x4009824	            0x7418	                            je 0x400983e	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x4009826	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x400982b	      0xbe2e000000	                           mov esi, 0x2e	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x4009830	      0xe800000000	                          call 0x4009835	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x4009835	          0x4885c0	                           test rax, rax	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x4009838	     0xf848b020000	                            je 0x4009ac9	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x400983e	    0x8b0500000000	            mov eax, dword [0x04009844] 	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x4009844	            0x85c0	                           test eax, eax	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x4009846	     0xf8461020000	                            je 0x4009aad	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x400984c	    0x48833d000000	               cmp qword [0x04009854], 0	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x4009854	            0x742e	                            je 0x4009884	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x4009856	    0x48837c240800	                  cmp qword [rsp + 8], 0	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x400985c	            0x7418	                            je 0x4009876	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x400985e	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x4009863	      0xbe3a000000	                           mov esi, 0x3a	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x4009868	      0xe800000000	                          call 0x400986d	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x400986d	          0x4885c0	                           test rax, rax	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x4009870	     0xf846a020000	                            je 0x4009ae0	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x4009876	    0x8b0500000000	            mov eax, dword [0x0400987c] 	      4348	ops.c	FUNCTION_52	IF_10
0x400987c	            0x85c0	                           test eax, eax	      4348	ops.c	FUNCTION_52	IF_10
0x400987e	     0xf840c020000	                            je 0x4009a90	      4348	ops.c	FUNCTION_52	IF_10
0x4009884	    0x488b05000000	            mov rax, qword [0x0400988b] 	      4357	ops.c	FUNCTION_52	IF_11
0x400988b	    0x4883b8980000	               cmp qword [rax + 0x98], 0	      4357	ops.c	FUNCTION_52	IF_11
0x4009893	     0xf848b010000	                            je 0x4009a24	      4357	ops.c	FUNCTION_52	IF_11
0x4009899	    0x48837c240800	                  cmp qword [rsp + 8], 0	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x400989f	     0xf8452010000	                            je 0x40099f7	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x40098a5	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x40098aa	      0xbe25000000	                           mov esi, 0x25	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x40098af	      0xe800000000	                          call 0x40098b4	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x40098b4	          0x4885c0	                           test rax, rax	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x40098b7	            0x740e	                            je 0x40098c7	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x40098b9	    0x8b0500000000	            mov eax, dword [0x040098bf] 	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x40098bf	            0x85c0	                           test eax, eax	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x40098c1	     0xf843e010000	                            je 0x4009a05	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x40098c7	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x40098cc	      0xbe25000000	                           mov esi, 0x25	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x40098d1	      0xe800000000	                          call 0x40098d6	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x40098d6	          0x4885c0	                           test rax, rax	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x40098d9	            0x740e	                            je 0x40098e9	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x40098db	    0x8b0500000000	            mov eax, dword [0x040098e1] 	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x40098e1	            0x85c0	                           test eax, eax	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x40098e3	     0xf8455010000	                            je 0x4009a3e	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x40098e9	      0xe800000000	                          call 0x40098ee	      4382	ops.c	FUNCTION_52	IF_14	CALL_34
0x40098ee	          0x4885c0	                           test rax, rax	      4382	ops.c	FUNCTION_52	IF_14	CALL_34
0x40098f1	            0x742e	                            je 0x4009921	      4382	ops.c	FUNCTION_52	IF_14	CALL_34
0x40098f3	    0x48837c240800	                  cmp qword [rsp + 8], 0	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x40098f9	            0x7418	                            je 0x4009913	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x40098fb	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x4009900	      0xbe2f000000	                           mov esi, 0x2f	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x4009905	      0xe800000000	                          call 0x400990a	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x400990a	          0x4885c0	                           test rax, rax	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x400990d	     0xf84ed010000	                            je 0x4009b00	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x4009913	    0x8b0500000000	            mov eax, dword [0x04009919] 	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x4009919	            0x85c0	                           test eax, eax	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x400991b	     0xf8451010000	                            je 0x4009a72	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x4009921	    0x48833d000000	               cmp qword [0x04009929], 0	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x4009929	            0x743e	                            je 0x4009969	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x400992b	    0x48837c240800	                  cmp qword [rsp + 8], 0	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x4009931	            0x7414	                            je 0x4009947	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x4009933	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x4009938	      0xbe3d000000	                           mov esi, 0x3d	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x400993d	      0xe800000000	                          call 0x4009942	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x4009942	          0x4885c0	                           test rax, rax	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x4009945	            0x7422	                            je 0x4009969	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x4009947	    0x8b0500000000	            mov eax, dword [0x0400994d] 	      4394	ops.c	FUNCTION_52	IF_15
0x400994d	            0x85c0	                           test eax, eax	      4394	ops.c	FUNCTION_52	IF_15
0x400994f	            0x7518	                           jne 0x4009969	      4394	ops.c	FUNCTION_52	IF_15
0x4009951	      0xbf00000000	                              mov edi, 0	      4396	ops.c	FUNCTION_52	IF_15	CALL_40
0x4009956	      0xe800000000	                          call 0x400995b	      4396	ops.c	FUNCTION_52	IF_15	CALL_40
0x400995b	    0x488b3d000000	            mov rdi, qword [0x04009962] 	      4397	ops.c	FUNCTION_52	IF_15	CALL_41
0x4009962	            0x31f6	                            xor esi, esi	      4397	ops.c	FUNCTION_52	IF_15	CALL_41
0x4009964	      0xe8c773ffff	                        call sym.dis_msg	      4397	ops.c	FUNCTION_52	IF_15	CALL_41
0x4009969	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4400	ops.c	FUNCTION_52
0x400996e	    0x644833042528	                xor rax, qword fs:[0x28]	      4400	ops.c	FUNCTION_52
0x4009977	     0xf8596010000	                           jne 0x4009b13	      4400	ops.c	FUNCTION_52
0x400997d	        0x4883c448	                           add rsp, 0x48	      4400	ops.c	FUNCTION_52
0x4009981	              0x5b	                                 pop rbx	      4400	ops.c	FUNCTION_52
0x4009982	              0x5d	                                 pop rbp	      4400	ops.c	FUNCTION_52
0x4009983	            0x415c	                                 pop r12	      4400	ops.c	FUNCTION_52
0x4009985	            0x415d	                                 pop r13	      4400	ops.c	FUNCTION_52
0x4009987	            0x415e	                                 pop r14	      4400	ops.c	FUNCTION_52
0x4009989	            0x415f	                                 pop r15	      4400	ops.c	FUNCTION_52
0x400998b	              0xc3	                                     ret	      4400	ops.c	FUNCTION_52
0x400998c	         0xf1f4000	                         nop dword [rax]	      4400	ops.c	FUNCTION_52
0x4009990	        0x4983c401	                              add r12, 1	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x4009994	        0x4d396508	                cmp qword [r13 + 8], r12	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x4009998	     0xf8e35feffff	                           jle 0x40097d3	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x400999e	          0x83fd01	                              cmp ebp, 1	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x40099a1	     0xf8e3cfeffff	                           jle 0x40097e3	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x40099a7	          0x4d85e4	                           test r12, r12	      4311	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7
0x40099aa	     0xf84d0fdffff	                            je 0x4009780	      4311	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7
0x40099b0	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      4313	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7	CALL_14
0x40099b4	      0xbf00000000	                              mov edi, 0	      4313	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7	CALL_14
0x40099b9	          0x83ed02	                              sub ebp, 2	      4314	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7
0x40099bc	      0xe800000000	                          call 0x40099c1	      4313	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7	CALL_14
0x40099c1	      0xe9bafdffff	                           jmp 0x4009780	      4313	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7	CALL_14
0x40099c6	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      4313	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7	CALL_14
0x40099ca	          0x8d702f	                   lea esi, [rax + 0x2f]	      4313	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7	CALL_14
0x40099cd	      0xe90afdffff	                           jmp 0x40096dc	      4313	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7	CALL_14
0x40099d2	    0x4c392d000000	            cmp qword [0x040099d9], r13 	      4296	ops.c	FUNCTION_52	FOR_1	IF_5
0x40099d9	     0xf8556fdffff	                           jne 0x4009735	      4296	ops.c	FUNCTION_52	FOR_1	IF_5
0x40099df	      0xe909feffff	                           jmp 0x40097ed	      4296	ops.c	FUNCTION_52	FOR_1	IF_5
0x40099e4	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      4328	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_17
0x40099e8	      0xbf00000000	                              mov edi, 0	      4328	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_17
0x40099ed	      0xe800000000	                          call 0x40099f2	      4328	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_17
0x40099f2	      0xe9ecfdffff	                           jmp 0x40097e3	      4328	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_17
0x40099f7	    0x8b0500000000	            mov eax, dword [0x040099fd] 	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x40099fd	            0x85c0	                           test eax, eax	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x40099ff	     0xf85d6feffff	                           jne 0x40098db	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x4009a05	      0xbf00000000	                              mov edi, 0	      4360	ops.c	FUNCTION_52	IF_11	CALL_28
0x4009a0a	      0xe800000000	                          call 0x4009a0f	      4360	ops.c	FUNCTION_52	IF_11	CALL_28
0x4009a0f	    0x488b05000000	            mov rax, qword [0x04009a16] 	      4361	ops.c	FUNCTION_52	IF_11	CALL_29
0x4009a16	            0x31f6	                            xor esi, esi	      4361	ops.c	FUNCTION_52	IF_11	CALL_29
0x4009a18	    0x488bb8980000	            mov rdi, qword [rax + 0x98] 	      4361	ops.c	FUNCTION_52	IF_11	CALL_29
0x4009a1f	      0xe80c73ffff	                        call sym.dis_msg	      4361	ops.c	FUNCTION_52	IF_11	CALL_29
0x4009a24	    0x48837c240800	                  cmp qword [rsp + 8], 0	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x4009a2a	     0xf8597feffff	                           jne 0x40098c7	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x4009a30	    0x8b0500000000	            mov eax, dword [0x04009a36] 	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x4009a36	            0x85c0	                           test eax, eax	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x4009a38	     0xf85abfeffff	                           jne 0x40098e9	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x4009a3e	      0x488d542430	                   lea rdx, [rsp + 0x30]	      4372	ops.c	FUNCTION_52	IF_12	IF_13	CALL_31
0x4009a43	      0x488d742428	                   lea rsi, [rsp + 0x28]	      4372	ops.c	FUNCTION_52	IF_12	IF_13	CALL_31
0x4009a48	            0x31ff	                            xor edi, edi	      4372	ops.c	FUNCTION_52	IF_12	IF_13	CALL_31
0x4009a4a	      0xe800000000	                          call 0x4009a4f	      4372	ops.c	FUNCTION_52	IF_12	IF_13	CALL_31
0x4009a4f	            0x85c0	                           test eax, eax	      4372	ops.c	FUNCTION_52	IF_12	IF_13	CALL_31
0x4009a51	     0xf8492feffff	                            je 0x40098e9	      4372	ops.c	FUNCTION_52	IF_12	IF_13	CALL_31
0x4009a57	      0xbf00000000	                              mov edi, 0	      4374	ops.c	FUNCTION_52	IF_12	IF_13	CALL_32
0x4009a5c	      0xe800000000	                          call 0x4009a61	      4374	ops.c	FUNCTION_52	IF_12	IF_13	CALL_32
0x4009a61	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      4375	ops.c	FUNCTION_52	IF_12	IF_13	CALL_33
0x4009a66	            0x31f6	                            xor esi, esi	      4375	ops.c	FUNCTION_52	IF_12	IF_13	CALL_33
0x4009a68	      0xe8c372ffff	                        call sym.dis_msg	      4375	ops.c	FUNCTION_52	IF_12	IF_13	CALL_33
0x4009a6d	      0xe977feffff	                           jmp 0x40098e9	      4375	ops.c	FUNCTION_52	IF_12	IF_13	CALL_33
0x4009a72	      0xbf00000000	                              mov edi, 0	      4385	ops.c	FUNCTION_52	IF_14	CALL_36
0x4009a77	      0xe800000000	                          call 0x4009a7c	      4385	ops.c	FUNCTION_52	IF_14	CALL_36
0x4009a7c	      0xe800000000	                          call 0x4009a81	      4386	ops.c	FUNCTION_52	IF_14	CALL_38
0x4009a81	            0x31f6	                            xor esi, esi	      4386	ops.c	FUNCTION_52	IF_14	CALL_38
0x4009a83	          0x4889c7	                            mov rdi, rax	      4386	ops.c	FUNCTION_52	IF_14	CALL_38
0x4009a86	      0xe8a572ffff	                        call sym.dis_msg	      4386	ops.c	FUNCTION_52	IF_14	CALL_38
0x4009a8b	      0xe991feffff	                           jmp 0x4009921	      4386	ops.c	FUNCTION_52	IF_14	CALL_38
0x4009a90	      0xbf00000000	                              mov edi, 0	      4350	ops.c	FUNCTION_52	IF_10	CALL_25
0x4009a95	      0xe800000000	                          call 0x4009a9a	      4350	ops.c	FUNCTION_52	IF_10	CALL_25
0x4009a9a	    0x488b3d000000	            mov rdi, qword [0x04009aa1] 	      4351	ops.c	FUNCTION_52	IF_10	CALL_26
0x4009aa1	            0x31f6	                            xor esi, esi	      4351	ops.c	FUNCTION_52	IF_10	CALL_26
0x4009aa3	      0xe88872ffff	                        call sym.dis_msg	      4351	ops.c	FUNCTION_52	IF_10	CALL_26
0x4009aa8	      0xe9d7fdffff	                           jmp 0x4009884	      4351	ops.c	FUNCTION_52	IF_10	CALL_26
0x4009aad	      0xbf00000000	                              mov edi, 0	      4340	ops.c	FUNCTION_52	IF_9	CALL_22
0x4009ab2	      0xe800000000	                          call 0x4009ab7	      4340	ops.c	FUNCTION_52	IF_9	CALL_22
0x4009ab7	      0xbe01000000	                              mov esi, 1	      4341	ops.c	FUNCTION_52	IF_9	CALL_23
0x4009abc	          0x4889df	                            mov rdi, rbx	      4341	ops.c	FUNCTION_52	IF_9	CALL_23
0x4009abf	      0xe86c72ffff	                        call sym.dis_msg	      4341	ops.c	FUNCTION_52	IF_9	CALL_23
0x4009ac4	      0xe983fdffff	                           jmp 0x400984c	      4341	ops.c	FUNCTION_52	IF_9	CALL_23
0x4009ac9	    0x48833d000000	               cmp qword [0x04009ad1], 0	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x4009ad1	     0xf8587fdffff	                           jne 0x400985e	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x4009ad7	      0xe9a8fdffff	                           jmp 0x4009884	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x4009adc	         0xf1f4000	                         nop dword [rax]	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x4009ae0	    0x488b05000000	            mov rax, qword [0x04009ae7] 	      4357	ops.c	FUNCTION_52	IF_11
0x4009ae7	    0x4883b8980000	               cmp qword [rax + 0x98], 0	      4357	ops.c	FUNCTION_52	IF_11
0x4009aef	     0xf85b0fdffff	                           jne 0x40098a5	      4357	ops.c	FUNCTION_52	IF_11
0x4009af5	      0xe92affffff	                           jmp 0x4009a24	      4357	ops.c	FUNCTION_52	IF_11
0x4009afa	    0x660f1f440000	                    nop word [rax + rax]	      4357	ops.c	FUNCTION_52	IF_11
0x4009b00	    0x48833d000000	               cmp qword [0x04009b08], 0	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x4009b08	     0xf8525feffff	                           jne 0x4009933	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x4009b0e	      0xe956feffff	                           jmp 0x4009969	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x4009b13	      0xe800000000	                          call 0x4009b18	      4400	ops.c	FUNCTION_52
0x4009b18	    0x48837c240800	                  cmp qword [rsp + 8], 0	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x4009b1e	    0xc74424242200	           mov dword [rsp + 0x24], 0x22 	      4267	ops.c	FUNCTION_52	FOR_1	CALL_4
0x4009b26	            0x7418	                            je 0x4009b40	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x4009b28	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x4009b2d	      0xbe22000000	                           mov esi, 0x22	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x4009b32	      0xe800000000	                          call 0x4009b37	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x4009b37	          0x4885c0	                           test rax, rax	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x4009b3a	     0xf84adfcffff	                            je 0x40097ed	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x4009b40	      0x488d7c2424	                   lea rdi, [rsp + 0x24]	      4280	ops.c	FUNCTION_52	FOR_1	CALL_7
0x4009b45	      0xe800000000	                          call 0x4009b4a	      4280	ops.c	FUNCTION_52	FOR_1	CALL_7
0x4009b4a	        0x8b7c2424	            mov edi, dword [rsp + 0x24] 	      4281	ops.c	FUNCTION_52	FOR_1	CALL_8
0x4009b4e	      0xe800000000	                          call 0x4009b53	      4281	ops.c	FUNCTION_52	FOR_1	CALL_8
0x4009b53	    0x4c8b2d000000	            mov r13, qword [0x04009b5a] 	      4286	ops.c	FUNCTION_52	FOR_1	IF_3	IF_4
0x4009b5a	    0x8b3d00000000	            mov edi, dword [0x04009b60] 	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x4009b60	      0xb800000000	                              mov eax, 0	      4289	ops.c	FUNCTION_52	FOR_1	IF_3	ELSE_1
0x4009b65	          0x4d85ed	                           test r13, r13	      4289	ops.c	FUNCTION_52	FOR_1	IF_3	ELSE_1
0x4009b68	        0x4c0f44e8	                          cmove r13, rax	      4289	ops.c	FUNCTION_52	FOR_1	IF_3	ELSE_1
0x4009b6c	      0xe800000000	                          call 0x4009b71	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x4009b71	        0x39442424	            cmp dword [rsp + 0x24], eax 	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x4009b75	     0xf85adfbffff	                           jne 0x4009728	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x4009b7b	      0xe974fcffff	                           jmp 0x40097f4	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x4009b80	      0xbe2d000000	                           mov esi, 0x2d	      4215	ops.c	FUNCTION_51	ELSE_2	IF_3
0x4009b85	      0xe952fbffff	                           jmp 0x40096dc	      4215	ops.c	FUNCTION_51	ELSE_2	IF_3
