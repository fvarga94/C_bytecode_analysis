skiptobin	CALL,1:WHILE,1:FOR,0:IF,0:functions,0:ELSE,0:DO,0:SWITCH,0	14
0x4002020	           0xfb617	                   movzx edx, byte [rdi]	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x4002023	          0x4889f8	                            mov rax, rdi	      1600	charset.c	FUNCTION_45
0x4002026	            0x84d2	                             test dl, dl	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x4002028	            0x7511	                           jne 0x400203b	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x400202a	            0xeb17	                           jmp 0x4002043	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x400202c	         0xf1f4000	                         nop dword [rax]	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x4002030	        0x4883c001	                              add rax, 1	      1604	charset.c	FUNCTION_45	WHILE_1
0x4002034	           0xfb610	                   movzx edx, byte [rax]	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x4002037	            0x84d2	                             test dl, dl	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x4002039	            0x7408	                            je 0x4002043	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x400203b	          0x83ea30	                           sub edx, 0x30	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x400203e	          0x83fa01	                              cmp edx, 1	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x4002041	            0x77ed	                            ja 0x4002030	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x4002043	            0xf3c3	                                     ret	      1606	charset.c	FUNCTION_45
ptr2cells	CALL,1:WHILE,0:FOR,0:IF,1:functions,0:ELSE,0:DO,0:SWITCH,0	11
0x4000690	    0x8b1500000000	            mov edx, dword [0x04000696] 	       764	charset.c	FUNCTION_13	IF_1
0x4000696	           0xfb607	                   movzx eax, byte [rdi]	       764	charset.c	FUNCTION_13	IF_1
0x4000699	            0x85d2	                           test edx, edx	       764	charset.c	FUNCTION_13	IF_1
0x400069b	            0x7404	                            je 0x40006a1	       764	charset.c	FUNCTION_13	IF_1
0x400069d	            0x84c0	                             test al, al	       764	charset.c	FUNCTION_13	IF_1
0x400069f	            0x780f	                            js 0x40006b0	       764	charset.c	FUNCTION_13	IF_1
0x40006a1	     0xfb680000000	                   movzx eax, byte [rax]	       768	charset.c	FUNCTION_13
0x40006a8	          0x83e007	                              and eax, 7	       768	charset.c	FUNCTION_13
0x40006ab	              0xc3	                                     ret	       769	charset.c	FUNCTION_13
0x40006ac	         0xf1f4000	                         nop dword [rax]	       769	charset.c	FUNCTION_13
0x40006b0	      0xe900000000	                           jmp 0x40006b5	       765	charset.c	FUNCTION_13	CALL_1
vim_isfilec_or_wc	CALL,2:WHILE,0:FOR,0:IF,0:functions,0:ELSE,0:DO,0:SWITCH,0	27
0x4000910	        0x4883ec18	                           sub rsp, 0x18	       954	charset.c	FUNCTION_27
0x4000914	    0x64488b042528	                mov rax, qword fs:[0x28]	       954	charset.c	FUNCTION_27
0x400091d	      0x4889442408	                mov qword [rsp + 8], rax	       954	charset.c	FUNCTION_27
0x4000922	            0x31c0	                            xor eax, eax	       954	charset.c	FUNCTION_27
0x4000924	    0x81ffff000000	                           cmp edi, 0xff	       943	charset.c	FUNCTION_26
0x400092a	        0x40883c24	                     mov byte [rsp], dil	       957	charset.c	FUNCTION_27
0x400092e	      0xc644240100	                   mov byte [rsp + 1], 0	       958	charset.c	FUNCTION_27
0x4000933	      0xb801000000	                              mov eax, 1	       959	charset.c	FUNCTION_27	CALL_2
0x4000938	            0x7f25	                            jg 0x400095f	       943	charset.c	FUNCTION_26
0x400093a	            0x85ff	                           test edi, edi	       943	charset.c	FUNCTION_26
0x400093c	            0x7e11	                           jle 0x400094f	       943	charset.c	FUNCTION_26
0x400093e	          0x4863d7	                         movsxd rdx, edi	       943	charset.c	FUNCTION_26
0x4000941	    0xf68200000000	                   test byte [rdx], 0x40	       943	charset.c	FUNCTION_26
0x4000948	            0x7515	                           jne 0x400095f	       943	charset.c	FUNCTION_26
0x400094a	          0x83ff5d	                           cmp edi, 0x5d	       959	charset.c	FUNCTION_27	CALL_2
0x400094d	            0x7410	                            je 0x400095f	       959	charset.c	FUNCTION_27	CALL_2
0x400094f	          0x4889e7	                            mov rdi, rsp	       959	charset.c	FUNCTION_27	CALL_2
0x4000952	      0xe800000000	                          call 0x4000957	       959	charset.c	FUNCTION_27	CALL_2
0x4000957	            0x85c0	                           test eax, eax	       959	charset.c	FUNCTION_27	CALL_2
0x4000959	           0xf95c0	                                setne al	       959	charset.c	FUNCTION_27	CALL_2
0x400095c	           0xfb6c0	                           movzx eax, al	       959	charset.c	FUNCTION_27	CALL_2
0x400095f	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       960	charset.c	FUNCTION_27
0x4000964	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       960	charset.c	FUNCTION_27
0x400096d	            0x7505	                           jne 0x4000974	       960	charset.c	FUNCTION_27
0x400096f	        0x4883c418	                           add rsp, 0x18	       960	charset.c	FUNCTION_27
0x4000973	              0xc3	                                     ret	       960	charset.c	FUNCTION_27
0x4000974	      0xe800000000	                          call 0x4000979	       960	charset.c	FUNCTION_27
getvcol_nolist	CALL,2:WHILE,0:FOR,0:IF,1:functions,0:ELSE,1:DO,0:SWITCH,0	29
0x4001d50	              0x53	                                push rbx	      1415	charset.c	ELSE_6	FUNCTION_36
0x4001d51	          0x4889fe	                            mov rsi, rdi	      1415	charset.c	ELSE_6	FUNCTION_36
0x4001d54	          0x4531c0	                            xor r8d, r8d	      1422	charset.c	ELSE_6	FUNCTION_36	CALL_1
0x4001d57	            0x31d2	                            xor edx, edx	      1422	charset.c	ELSE_6	FUNCTION_36	CALL_1
0x4001d59	        0x4883ec10	                           sub rsp, 0x10	      1415	charset.c	ELSE_6	FUNCTION_36
0x4001d5d	    0x488b3d000000	            mov rdi, qword [0x04001d64] 	      1416	charset.c	ELSE_6	FUNCTION_36
0x4001d64	    0x64488b042528	                mov rax, qword fs:[0x28]	      1415	charset.c	ELSE_6	FUNCTION_36
0x4001d6d	      0x4889442408	                mov qword [rsp + 8], rax	      1415	charset.c	ELSE_6	FUNCTION_36
0x4001d72	            0x31c0	                            xor eax, eax	      1415	charset.c	ELSE_6	FUNCTION_36
0x4001d74	          0x8b460c	              mov eax, dword [rsi + 0xc]	      1421	charset.c	ELSE_6	FUNCTION_36	IF_1
0x4001d77	      0x488d4c2404	                      lea rcx, [rsp + 4]	      1422	charset.c	ELSE_6	FUNCTION_36	CALL_1
0x4001d7c	    0x8b9f34020000	           mov ebx, dword [rdi + 0x234] 	      1416	charset.c	ELSE_6	FUNCTION_36
0x4001d82	    0xc78734020000	              mov dword [rdi + 0x234], 0	      1419	charset.c	ELSE_6	FUNCTION_36
0x4001d8c	            0x85c0	                           test eax, eax	      1421	charset.c	ELSE_6	FUNCTION_36	IF_1
0x4001d8e	            0x7530	                           jne 0x4001dc0	      1421	charset.c	ELSE_6	FUNCTION_36	IF_1
0x4001d90	      0xe800000000	                          call 0x4001d95	      1425	charset.c	ELSE_6	FUNCTION_36	CALL_2
0x4001d95	    0x488b05000000	            mov rax, qword [0x04001d9c] 	      1426	charset.c	ELSE_6	FUNCTION_36
0x4001d9c	      0x488b542408	                mov rdx, qword [rsp + 8]	      1428	charset.c	ELSE_6	FUNCTION_36
0x4001da1	    0x644833142528	                xor rdx, qword fs:[0x28]	      1428	charset.c	ELSE_6	FUNCTION_36
0x4001daa	    0x899834020000	            mov dword [rax + 0x234], ebx	      1426	charset.c	ELSE_6	FUNCTION_36
0x4001db0	        0x8b442404	                mov eax, dword [rsp + 4]	      1428	charset.c	ELSE_6	FUNCTION_36
0x4001db4	            0x7511	                           jne 0x4001dc7	      1428	charset.c	ELSE_6	FUNCTION_36
0x4001db6	        0x4883c410	                           add rsp, 0x10	      1428	charset.c	ELSE_6	FUNCTION_36
0x4001dba	              0x5b	                                 pop rbx	      1428	charset.c	ELSE_6	FUNCTION_36
0x4001dbb	              0xc3	                                     ret	      1428	charset.c	ELSE_6	FUNCTION_36
0x4001dbc	         0xf1f4000	                         nop dword [rax]	      1428	charset.c	ELSE_6	FUNCTION_36
0x4001dc0	      0xe800000000	                          call 0x4001dc5	      1422	charset.c	ELSE_6	FUNCTION_36	CALL_1
0x4001dc5	            0xebce	                           jmp 0x4001d95	      1422	charset.c	ELSE_6	FUNCTION_36	CALL_1
0x4001dc7	      0xe800000000	                          call 0x4001dcc	      1428	charset.c	ELSE_6	FUNCTION_36
transchar_hex	CALL,4:WHILE,0:FOR,0:IF,1:functions,0:ELSE,0:DO,0:SWITCH,0	49
0x4000470	    0x81feff000000	                           cmp esi, 0xff	       683	charset.c	FUNCTION_9	IF_1
0x4000476	          0xc6073c	                    mov byte [rdi], 0x3c	       681	charset.c	FUNCTION_9
0x4000479	            0x7f55	                            jg 0x40004d0	       683	charset.c	FUNCTION_9	IF_1
0x400047b	      0xb904000000	                              mov ecx, 4	       683	charset.c	FUNCTION_9	IF_1
0x4000480	    0x41b803000000	                              mov r8d, 3	       683	charset.c	FUNCTION_9	IF_1
0x4000486	    0x41b902000000	                              mov r9d, 2	       683	charset.c	FUNCTION_9	IF_1
0x400048c	    0x41ba01000000	                             mov r10d, 1	       683	charset.c	FUNCTION_9	IF_1
0x4000492	            0x89f0	                            mov eax, esi	       703	charset.c	FUNCTION_10	IF_1
0x4000494	          0xc1e804	                              shr eax, 4	       703	charset.c	FUNCTION_10	IF_1
0x4000497	          0x83e00f	                            and eax, 0xf	       703	charset.c	FUNCTION_10	IF_1
0x400049a	        0x448d5830	                  lea r11d, [rax + 0x30]	       704	charset.c	FUNCTION_10	IF_1
0x400049e	          0x8d5057	                   lea edx, [rax + 0x57]	       704	charset.c	FUNCTION_10	IF_1
0x40004a1	          0x83f809	                              cmp eax, 9	       704	charset.c	FUNCTION_10	IF_1
0x40004a4	          0x4489d8	                           mov eax, r11d	       704	charset.c	FUNCTION_10	IF_1
0x40004a7	           0xf47c2	                          cmova eax, edx	       704	charset.c	FUNCTION_10	IF_1
0x40004aa	          0x83e60f	                            and esi, 0xf	       703	charset.c	FUNCTION_10	IF_1
0x40004ad	        0x42880417	                mov byte [rdi + r10], al	       689	charset.c	FUNCTION_9	CALL_3
0x40004b1	          0x8d5630	                   lea edx, [rsi + 0x30]	       704	charset.c	FUNCTION_10	IF_1
0x40004b4	          0x8d4657	                   lea eax, [rsi + 0x57]	       704	charset.c	FUNCTION_10	IF_1
0x40004b7	          0x83fe09	                              cmp esi, 9	       704	charset.c	FUNCTION_10	IF_1
0x40004ba	           0xf46c2	                         cmovbe eax, edx	       704	charset.c	FUNCTION_10	IF_1
0x40004bd	        0x4288040f	                 mov byte [rdi + r9], al	       690	charset.c	FUNCTION_9	CALL_4
0x40004c1	      0x42c604073e	               mov byte [rdi + r8], 0x3e	       691	charset.c	FUNCTION_9
0x40004c6	        0xc6040f00	                 mov byte [rdi + rcx], 0	       692	charset.c	FUNCTION_9
0x40004ca	              0xc3	                                     ret	       692	charset.c	FUNCTION_9
0x40004cb	       0xf1f440000	                   nop dword [rax + rax]	       692	charset.c	FUNCTION_9
0x40004d0	            0x89f0	                            mov eax, esi	       703	charset.c	FUNCTION_10	IF_1
0x40004d2	    0x41b805000000	                              mov r8d, 5	       686	charset.c	FUNCTION_9	IF_1	CALL_2
0x40004d8	    0x41b904000000	                              mov r9d, 4	       686	charset.c	FUNCTION_9	IF_1	CALL_2
0x40004de	          0xc1e80c	                            shr eax, 0xc	       703	charset.c	FUNCTION_10	IF_1
0x40004e1	    0x41ba03000000	                             mov r10d, 3	       686	charset.c	FUNCTION_9	IF_1	CALL_2
0x40004e7	          0x83e00f	                            and eax, 0xf	       703	charset.c	FUNCTION_10	IF_1
0x40004ea	          0x8d4830	                   lea ecx, [rax + 0x30]	       704	charset.c	FUNCTION_10	IF_1
0x40004ed	          0x8d5057	                   lea edx, [rax + 0x57]	       704	charset.c	FUNCTION_10	IF_1
0x40004f0	          0x83f809	                              cmp eax, 9	       704	charset.c	FUNCTION_10	IF_1
0x40004f3	            0x89c8	                            mov eax, ecx	       704	charset.c	FUNCTION_10	IF_1
0x40004f5	           0xf47c2	                          cmova eax, edx	       704	charset.c	FUNCTION_10	IF_1
0x40004f8	          0x884701	                  mov byte [rdi + 1], al	       685	charset.c	FUNCTION_9	IF_1	CALL_1
0x40004fb	            0x89f0	                            mov eax, esi	       703	charset.c	FUNCTION_10	IF_1
0x40004fd	          0xc1e808	                              shr eax, 8	       703	charset.c	FUNCTION_10	IF_1
0x4000500	          0x83e00f	                            and eax, 0xf	       703	charset.c	FUNCTION_10	IF_1
0x4000503	          0x8d4830	                   lea ecx, [rax + 0x30]	       704	charset.c	FUNCTION_10	IF_1
0x4000506	          0x8d5057	                   lea edx, [rax + 0x57]	       704	charset.c	FUNCTION_10	IF_1
0x4000509	          0x83f809	                              cmp eax, 9	       704	charset.c	FUNCTION_10	IF_1
0x400050c	            0x89c8	                            mov eax, ecx	       704	charset.c	FUNCTION_10	IF_1
0x400050e	      0xb906000000	                              mov ecx, 6	       686	charset.c	FUNCTION_9	IF_1	CALL_2
0x4000513	           0xf47c2	                          cmova eax, edx	       704	charset.c	FUNCTION_10	IF_1
0x4000516	          0x884702	                  mov byte [rdi + 2], al	       686	charset.c	FUNCTION_9	IF_1	CALL_2
0x4000519	      0xe974ffffff	                           jmp 0x4000492	       686	charset.c	FUNCTION_9	IF_1	CALL_2
trans_characters	CALL,5:WHILE,1:FOR,0:IF,3:functions,0:ELSE,1:DO,0:SWITCH,0	64
0x4000b50	            0x4157	                                push r15	       319	charset.c	FUNCTION_3
0x4000b52	            0x4156	                                push r14	       319	charset.c	FUNCTION_3
0x4000b54	          0x4189f6	                           mov r14d, esi	       319	charset.c	FUNCTION_3
0x4000b57	            0x4155	                                push r13	       319	charset.c	FUNCTION_3
0x4000b59	            0x4154	                                push r12	       319	charset.c	FUNCTION_3
0x4000b5b	              0x55	                                push rbp	       319	charset.c	FUNCTION_3
0x4000b5c	              0x53	                                push rbx	       319	charset.c	FUNCTION_3
0x4000b5d	          0x4889fb	                            mov rbx, rdi	       319	charset.c	FUNCTION_3
0x4000b60	        0x4883ec08	                              sub rsp, 8	       319	charset.c	FUNCTION_3
0x4000b64	      0xe800000000	                          call 0x4000b69	       325	charset.c	FUNCTION_3	CALL_1
0x4000b69	          0x4129c6	                           sub r14d, eax	       326	charset.c	FUNCTION_3
0x4000b6c	          0x803b00	                       cmp byte [rbx], 0	       327	charset.c	FUNCTION_3	WHILE_1
0x4000b6f	     0xf848d000000	                            je 0x4000c02	       327	charset.c	FUNCTION_3	WHILE_1
0x4000b75	          0x4189c4	                           mov r12d, eax	       327	charset.c	FUNCTION_3	WHILE_1
0x4000b78	            0xeb21	                           jmp 0x4000b9b	       327	charset.c	FUNCTION_3	WHILE_1
0x4000b7a	    0x660f1f440000	                    nop word [rax + rax]	       327	charset.c	FUNCTION_3	WHILE_1
0x4000b80	          0x4889df	                            mov rdi, rbx	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x4000b83	    0xff1500000000	                 call qword [0x04000b89]	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x4000b89	          0x83f801	                              cmp eax, 1	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x4000b8c	            0x7e17	                           jle 0x4000ba5	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x4000b8e	          0x4129c4	                           sub r12d, eax	       332	charset.c	FUNCTION_3	WHILE_1	IF_1
0x4000b91	            0x4898	                                    cdqe	       332	charset.c	FUNCTION_3	WHILE_1	IF_1
0x4000b93	          0x4801c3	                            add rbx, rax	       332	charset.c	FUNCTION_3	WHILE_1	IF_1
0x4000b96	          0x803b00	                       cmp byte [rbx], 0	       327	charset.c	FUNCTION_3	WHILE_1
0x4000b99	            0x7467	                            je 0x4000c02	       327	charset.c	FUNCTION_3	WHILE_1
0x4000b9b	    0x8b0500000000	            mov eax, dword [0x04000ba1] 	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x4000ba1	            0x85c0	                           test eax, eax	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x4000ba3	            0x75db	                           jne 0x4000b80	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x4000ba5	           0xfb63b	                   movzx edi, byte [rbx]	       336	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_2
0x4000ba8	      0xe800000000	                          call 0x4000bad	       336	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_2
0x4000bad	          0x4889c7	                            mov rdi, rax	       337	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_3
0x4000bb0	          0x4989c5	                            mov r13, rax	       336	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_2
0x4000bb3	      0xe800000000	                          call 0x4000bb8	       337	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_3
0x4000bb8	          0x4863e8	                         movsxd rbp, eax	       337	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_3
0x4000bbb	          0x83f801	                              cmp eax, 1	       338	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2
0x4000bbe	        0x4c8d3c2b	                    lea r15, [rbx + rbp]	       338	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2
0x4000bc2	            0x7e24	                           jle 0x4000be8	       338	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2
0x4000bc4	          0x8d50ff	                      lea edx, [rax - 1]	       340	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2
0x4000bc7	          0x4129d6	                           sub r14d, edx	       340	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2
0x4000bca	          0x4585f6	                         test r14d, r14d	       341	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	IF_3
0x4000bcd	            0x7e33	                           jle 0x4000c02	       341	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	IF_3
0x4000bcf	          0x4863e8	                         movsxd rbp, eax	       343	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	CALL_4
0x4000bd2	        0x488d7301	                      lea rsi, [rbx + 1]	        59	string3.h	FUNCTION_67	CALL_3
0x4000bd6	          0x4963d4	                        movsxd rdx, r12d	        59	string3.h	FUNCTION_67	CALL_3
0x4000bd9	        0x488d0c2b	                    lea rcx, [rbx + rbp]	       343	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	CALL_4
0x4000bdd	          0x4889cf	                            mov rdi, rcx	        59	string3.h	FUNCTION_67	CALL_3
0x4000be0	      0xe800000000	                          call 0x4000be5	        59	string3.h	FUNCTION_67	CALL_3
0x4000be5	          0x4989c7	                            mov r15, rax	        59	string3.h	FUNCTION_67	CALL_3
0x4000be8	          0x4889df	                            mov rdi, rbx	        59	string3.h	FUNCTION_67	CALL_3
0x4000beb	          0x4889ea	                            mov rdx, rbp	        59	string3.h	FUNCTION_67	CALL_3
0x4000bee	          0x4c89ee	                            mov rsi, r13	        59	string3.h	FUNCTION_67	CALL_3
0x4000bf1	          0x4c89fb	                            mov rbx, r15	       346	charset.c	FUNCTION_3	WHILE_1	ELSE_1
0x4000bf4	        0x4183ec01	                             sub r12d, 1	       346	charset.c	FUNCTION_3	WHILE_1	ELSE_1
0x4000bf8	      0xe800000000	                          call 0x4000bfd	        59	string3.h	FUNCTION_67	CALL_3
0x4000bfd	          0x803b00	                       cmp byte [rbx], 0	       327	charset.c	FUNCTION_3	WHILE_1
0x4000c00	            0x7599	                           jne 0x4000b9b	       327	charset.c	FUNCTION_3	WHILE_1
0x4000c02	        0x4883c408	                              add rsp, 8	       350	charset.c	FUNCTION_3
0x4000c06	              0x5b	                                 pop rbx	       350	charset.c	FUNCTION_3
0x4000c07	              0x5d	                                 pop rbp	       350	charset.c	FUNCTION_3
0x4000c08	            0x415c	                                 pop r12	       350	charset.c	FUNCTION_3
0x4000c0a	            0x415d	                                 pop r13	       350	charset.c	FUNCTION_3
0x4000c0c	            0x415e	                                 pop r14	       350	charset.c	FUNCTION_3
0x4000c0e	            0x415f	                                 pop r15	       350	charset.c	FUNCTION_3
0x4000c10	              0xc3	                                     ret	       350	charset.c	FUNCTION_3
skiptohex	CALL,1:WHILE,1:FOR,0:IF,0:functions,0:ELSE,0:DO,0:SWITCH,0	26
0x4002080	           0xfb617	                   movzx edx, byte [rdi]	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x4002083	          0x4889f8	                            mov rax, rdi	      1626	charset.c	FUNCTION_47
0x4002086	            0x84d2	                             test dl, dl	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x4002088	            0x7437	                            je 0x40020c1	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x400208a	           0xfb6ca	                           movzx ecx, dl	      1656	charset.c	FUNCTION_49
0x400208d	          0x83e930	                           sub ecx, 0x30	      1656	charset.c	FUNCTION_49
0x4002090	          0x83f909	                              cmp ecx, 9	      1656	charset.c	FUNCTION_49
0x4002093	            0x762c	                           jbe 0x40020c1	      1656	charset.c	FUNCTION_49
0x4002095	          0x83e2df	                     and edx, 0xffffffdf	      1656	charset.c	FUNCTION_49
0x4002098	          0x83ea41	                           sub edx, 0x41	      1656	charset.c	FUNCTION_49
0x400209b	          0x80fa05	                               cmp dl, 5	      1656	charset.c	FUNCTION_49
0x400209e	            0x7623	                           jbe 0x40020c3	      1656	charset.c	FUNCTION_49
0x40020a0	        0x4883c001	                              add rax, 1	      1630	charset.c	FUNCTION_47	WHILE_1
0x40020a4	           0xfb610	                   movzx edx, byte [rax]	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x40020a7	            0x84d2	                             test dl, dl	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x40020a9	            0x7416	                            je 0x40020c1	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x40020ab	           0xfb6ca	                           movzx ecx, dl	      1656	charset.c	FUNCTION_49
0x40020ae	          0x83e930	                           sub ecx, 0x30	      1656	charset.c	FUNCTION_49
0x40020b1	          0x83f909	                              cmp ecx, 9	      1656	charset.c	FUNCTION_49
0x40020b4	            0x760b	                           jbe 0x40020c1	      1656	charset.c	FUNCTION_49
0x40020b6	          0x83e2df	                     and edx, 0xffffffdf	      1656	charset.c	FUNCTION_49
0x40020b9	          0x83ea41	                           sub edx, 0x41	      1656	charset.c	FUNCTION_49
0x40020bc	          0x80fa05	                               cmp dl, 5	      1656	charset.c	FUNCTION_49
0x40020bf	            0x77df	                            ja 0x40020a0	      1656	charset.c	FUNCTION_49
0x40020c1	            0xf3c3	                                     ret	      1632	charset.c	FUNCTION_47
0x40020c3	            0xf3c3	                                     ret	      1632	charset.c	FUNCTION_47
vim_strnsize	CALL,2:WHILE,1:FOR,0:IF,1:functions,0:ELSE,1:DO,0:SWITCH,0	50
0x40006c0	            0x4155	                                push r13	       787	charset.c	FUNCTION_15
0x40006c2	            0x4154	                                push r12	       787	charset.c	FUNCTION_15
0x40006c4	          0x4531e4	                          xor r12d, r12d	       788	charset.c	FUNCTION_15
0x40006c7	              0x55	                                push rbp	       787	charset.c	FUNCTION_15
0x40006c8	              0x53	                                push rbx	       787	charset.c	FUNCTION_15
0x40006c9	          0x4889fd	                            mov rbp, rdi	       787	charset.c	FUNCTION_15
0x40006cc	            0x89f3	                            mov ebx, esi	       787	charset.c	FUNCTION_15
0x40006ce	        0x4883ec08	                              sub rsp, 8	       787	charset.c	FUNCTION_15
0x40006d2	         0xfb64500	                   movzx eax, byte [rbp]	       790	charset.c	FUNCTION_15	WHILE_1
0x40006d6	            0x84c0	                             test al, al	       790	charset.c	FUNCTION_15	WHILE_1
0x40006d8	            0x742d	                            je 0x4000707	       790	charset.c	FUNCTION_15	WHILE_1
0x40006da	          0x83eb01	                              sub ebx, 1	       790	charset.c	FUNCTION_15	WHILE_1
0x40006dd	            0x7828	                            js 0x4000707	       790	charset.c	FUNCTION_15	WHILE_1
0x40006df	    0x8b1500000000	            mov edx, dword [0x040006e5] 	       793	charset.c	FUNCTION_15	WHILE_1	IF_1
0x40006e5	            0x85d2	                           test edx, edx	       793	charset.c	FUNCTION_15	WHILE_1	IF_1
0x40006e7	            0x7547	                           jne 0x4000730	       793	charset.c	FUNCTION_15	WHILE_1	IF_1
0x40006e9	    0x8b0d00000000	            mov ecx, dword [0x040006ef] 	       720	charset.c	FUNCTION_11	IF_1
0x40006ef	        0x4883c501	                              add rbp, 1	       803	charset.c	FUNCTION_15	WHILE_1	CALL_2
0x40006f3	            0x85c9	                           test ecx, ecx	       720	charset.c	FUNCTION_11	IF_1
0x40006f5	            0x7421	                            je 0x4000718	       720	charset.c	FUNCTION_11	IF_1
0x40006f7	          0x83f87f	                           cmp eax, 0x7f	       720	charset.c	FUNCTION_11	IF_1
0x40006fa	            0x7e1c	                           jle 0x4000718	       720	charset.c	FUNCTION_11	IF_1
0x40006fc	         0xfb64500	                   movzx eax, byte [rbp]	       790	charset.c	FUNCTION_15	WHILE_1
0x4000700	          0x4101d4	                           add r12d, edx	       803	charset.c	FUNCTION_15	WHILE_1	CALL_2
0x4000703	            0x84c0	                             test al, al	       790	charset.c	FUNCTION_15	WHILE_1
0x4000705	            0x75d3	                           jne 0x40006da	       790	charset.c	FUNCTION_15	WHILE_1
0x4000707	        0x4883c408	                              add rsp, 8	       806	charset.c	FUNCTION_15
0x400070b	          0x4489e0	                           mov eax, r12d	       806	charset.c	FUNCTION_15
0x400070e	              0x5b	                                 pop rbx	       806	charset.c	FUNCTION_15
0x400070f	              0x5d	                                 pop rbp	       806	charset.c	FUNCTION_15
0x4000710	            0x415c	                                 pop r12	       806	charset.c	FUNCTION_15
0x4000712	            0x415d	                                 pop r13	       806	charset.c	FUNCTION_15
0x4000714	              0xc3	                                     ret	       806	charset.c	FUNCTION_15
0x4000715	           0xf1f00	                         nop dword [rax]	       806	charset.c	FUNCTION_15
0x4000718	            0x4898	                                    cdqe	       723	charset.c	FUNCTION_11
0x400071a	     0xfb690000000	                   movzx edx, byte [rax]	       723	charset.c	FUNCTION_11
0x4000721	          0x83e207	                              and edx, 7	       723	charset.c	FUNCTION_11
0x4000724	            0xebd6	                           jmp 0x40006fc	       723	charset.c	FUNCTION_11
0x4000726	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       723	charset.c	FUNCTION_11
0x4000730	          0x4889ef	                            mov rdi, rbp	       795	charset.c	FUNCTION_15	WHILE_1	IF_1
0x4000733	    0xff1500000000	                 call qword [0x04000739]	       795	charset.c	FUNCTION_15	WHILE_1	IF_1
0x4000739	          0x4889ef	                            mov rdi, rbp	       797	charset.c	FUNCTION_15	WHILE_1	IF_1	CALL_1
0x400073c	          0x4189c5	                           mov r13d, eax	       795	charset.c	FUNCTION_15	WHILE_1	IF_1
0x400073f	      0xe800000000	                          call 0x4000744	       797	charset.c	FUNCTION_15	WHILE_1	IF_1	CALL_1
0x4000744	          0x4101c4	                           add r12d, eax	       797	charset.c	FUNCTION_15	WHILE_1	IF_1	CALL_1
0x4000747	          0x4963c5	                        movsxd rax, r13d	       798	charset.c	FUNCTION_15	WHILE_1	IF_1
0x400074a	        0x4183ed01	                             sub r13d, 1	       799	charset.c	FUNCTION_15	WHILE_1	IF_1
0x400074e	          0x4801c5	                            add rbp, rax	       798	charset.c	FUNCTION_15	WHILE_1	IF_1
0x4000751	          0x4429eb	                           sub ebx, r13d	       799	charset.c	FUNCTION_15	WHILE_1	IF_1
0x4000754	      0xe979ffffff	                           jmp 0x40006d2	       799	charset.c	FUNCTION_15	WHILE_1	IF_1
getwhitecols_curline	CALL,2:WHILE,0:FOR,0:IF,0:functions,0:ELSE,0:DO,0:SWITCH,0	22
0x4001f20	        0x4883ec08	                              sub rsp, 8	      1544	charset.c	FUNCTION_40
0x4001f24	      0xe800000000	                          call 0x4001f29	      1545	charset.c	FUNCTION_40	CALL_2
0x4001f29	           0xfb610	                   movzx edx, byte [rax]	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4001f2c	          0x80fa20	                            cmp dl, 0x20	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4001f2f	            0x7405	                            je 0x4001f36	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4001f31	          0x80fa09	                               cmp dl, 9	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4001f34	            0x7526	                           jne 0x4001f5c	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4001f36	          0x4889c2	                            mov rdx, rax	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4001f39	     0xf1f80000000	                         nop dword [rax]	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4001f40	        0x4883c201	                              add rdx, 1	      1534	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1
0x4001f44	           0xfb60a	                   movzx ecx, byte [rdx]	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4001f47	          0x80f920	                            cmp cl, 0x20	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4001f4a	            0x74f4	                            je 0x4001f40	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4001f4c	          0x80f909	                               cmp cl, 9	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4001f4f	            0x74ef	                            je 0x4001f40	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4001f51	            0x89d6	                            mov esi, edx	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4001f53	            0x29c6	                            sub esi, eax	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4001f55	            0x89f0	                            mov eax, esi	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4001f57	        0x4883c408	                              add rsp, 8	      1546	charset.c	FUNCTION_40
0x4001f5b	              0xc3	                                     ret	      1546	charset.c	FUNCTION_40
0x4001f5c	            0x31c0	                            xor eax, eax	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4001f5e	            0xebf7	                           jmp 0x4001f57	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
transchar	CALL,5:WHILE,0:FOR,0:IF,2:functions,0:ELSE,1:DO,0:SWITCH,0	56
0x4000a50	              0x55	                                push rbp	       555	charset.c	FUNCTION_6
0x4000a51	              0x53	                                push rbx	       555	charset.c	FUNCTION_6
0x4000a52	            0x89fd	                            mov ebp, edi	       555	charset.c	FUNCTION_6
0x4000a54	        0x4883ec08	                              sub rsp, 8	       555	charset.c	FUNCTION_6
0x4000a58	            0x85ff	                           test edi, edi	       559	charset.c	FUNCTION_6	IF_1	CALL_1
0x4000a5a	            0x7844	                            js 0x4000aa0	       559	charset.c	FUNCTION_6	IF_1	CALL_1
0x4000a5c	    0x8b1500000000	            mov edx, dword [0x04000a62] 	       567	charset.c	FUNCTION_6	IF_2
0x4000a62	            0x31db	                            xor ebx, ebx	       558	charset.c	FUNCTION_6
0x4000a64	            0x85d2	                           test edx, edx	       567	charset.c	FUNCTION_6	IF_2
0x4000a66	            0x7512	                           jne 0x4000a7a	       567	charset.c	FUNCTION_6	IF_2
0x4000a68	          0x8d45e0	                   lea eax, [rbp - 0x20]	       567	charset.c	FUNCTION_6	IF_2
0x4000a6b	          0x83f85e	                           cmp eax, 0x5e	       567	charset.c	FUNCTION_6	IF_2
0x4000a6e	            0x765e	                           jbe 0x4000ace	       567	charset.c	FUNCTION_6	IF_2
0x4000a70	    0x8b0500000000	            mov eax, dword [0x04000a76] 	       574	charset.c	FUNCTION_6	IF_2	CALL_3
0x4000a76	            0x85c0	                           test eax, eax	       574	charset.c	FUNCTION_6	IF_2	CALL_3
0x4000a78	            0x757e	                           jne 0x4000af8	       574	charset.c	FUNCTION_6	IF_2	CALL_3
0x4000a7a	    0x81fdff000000	                           cmp ebp, 0xff	       576	charset.c	FUNCTION_6	IF_2	CALL_4
0x4000a80	            0x7e41	                           jle 0x4000ac3	       576	charset.c	FUNCTION_6	IF_2	CALL_4
0x4000a82	          0x4863fb	                         movsxd rdi, ebx	       583	charset.c	FUNCTION_6	CALL_5
0x4000a85	            0x89ee	                            mov esi, ebp	       583	charset.c	FUNCTION_6	CALL_5
0x4000a87	    0x4881c7000000	                              add rdi, 0	       583	charset.c	FUNCTION_6	CALL_5
0x4000a8e	      0xe800000000	                          call 0x4000a93	       583	charset.c	FUNCTION_6	CALL_5
0x4000a93	        0x4883c408	                              add rsp, 8	       585	charset.c	FUNCTION_6
0x4000a97	      0xb800000000	                              mov eax, 0	       585	charset.c	FUNCTION_6
0x4000a9c	              0x5b	                                 pop rbx	       585	charset.c	FUNCTION_6
0x4000a9d	              0x5d	                                 pop rbp	       585	charset.c	FUNCTION_6
0x4000a9e	              0xc3	                                     ret	       585	charset.c	FUNCTION_6
0x4000a9f	              0x90	                                     nop	       585	charset.c	FUNCTION_6
0x4000aa0	    0x8b0d00000000	            mov ecx, dword [0x04000aa6] 	       567	charset.c	FUNCTION_6	IF_2
0x4000aa6	            0xf7dd	                                 neg ebp	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0x4000aa8	    0xc60500000000	            mov byte [0x04000aaf], 0x7e 	       561	charset.c	FUNCTION_6	IF_1
0x4000aaf	    0xc60500000000	            mov byte [0x04000ab6], 0x40 	       562	charset.c	FUNCTION_6	IF_1
0x4000ab6	        0x400fb6ed	                          movzx ebp, bpl	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0x4000aba	      0xbb02000000	                              mov ebx, 2	       563	charset.c	FUNCTION_6	IF_1
0x4000abf	            0x85c9	                           test ecx, ecx	       567	charset.c	FUNCTION_6	IF_2
0x4000ac1	            0x74a5	                            je 0x4000a68	       567	charset.c	FUNCTION_6	IF_2
0x4000ac3	            0x89ef	                            mov edi, ebp	       576	charset.c	FUNCTION_6	IF_2	CALL_4
0x4000ac5	      0xe800000000	                          call 0x4000aca	       576	charset.c	FUNCTION_6	IF_2	CALL_4
0x4000aca	            0x85c0	                           test eax, eax	       576	charset.c	FUNCTION_6	IF_2	CALL_4
0x4000acc	            0x74b4	                            je 0x4000a82	       576	charset.c	FUNCTION_6	IF_2	CALL_4
0x4000ace	          0x4863c3	                         movsxd rax, ebx	       579	charset.c	FUNCTION_6	IF_2
0x4000ad1	          0x83c301	                              add ebx, 1	       580	charset.c	FUNCTION_6	IF_2
0x4000ad4	          0x4863db	                         movsxd rbx, ebx	       580	charset.c	FUNCTION_6	IF_2
0x4000ad7	    0x4088a8000000	                     mov byte [rax], bpl	       579	charset.c	FUNCTION_6	IF_2
0x4000ade	      0xb800000000	                              mov eax, 0	       585	charset.c	FUNCTION_6
0x4000ae3	    0xc68300000000	                       mov byte [rbx], 0	       580	charset.c	FUNCTION_6	IF_2
0x4000aea	        0x4883c408	                              add rsp, 8	       585	charset.c	FUNCTION_6
0x4000aee	              0x5b	                                 pop rbx	       585	charset.c	FUNCTION_6
0x4000aef	              0x5d	                                 pop rbp	       585	charset.c	FUNCTION_6
0x4000af0	              0xc3	                                     ret	       585	charset.c	FUNCTION_6
0x4000af1	     0xf1f80000000	                         nop dword [rax]	       585	charset.c	FUNCTION_6
0x4000af8	            0x89ef	                            mov edi, ebp	       574	charset.c	FUNCTION_6	IF_2	CALL_3
0x4000afa	      0xe800000000	                          call 0x4000aff	       574	charset.c	FUNCTION_6	IF_2	CALL_3
0x4000aff	            0x85c0	                           test eax, eax	       574	charset.c	FUNCTION_6	IF_2	CALL_3
0x4000b01	     0xf8473ffffff	                            je 0x4000a7a	       574	charset.c	FUNCTION_6	IF_2	CALL_3
0x4000b07	            0xebc5	                           jmp 0x4000ace	       574	charset.c	FUNCTION_6	IF_2	CALL_3
vim_iswordc	CALL,1:WHILE,0:FOR,0:IF,0:functions,0:ELSE,0:DO,0:SWITCH,0	2
0x4000870	    0x488b35000000	            mov rsi, qword [0x04000877] 	       896	charset.c	FUNCTION_22	CALL_1
0x4000877	      0xe964ffffff	                 jmp sym.vim_iswordc_buf	       896	charset.c	FUNCTION_22	CALL_1
linetabsize	CALL,1:WHILE,0:FOR,0:IF,0:functions,0:ELSE,0:DO,0:SWITCH,0	31
0x40017e0	              0x55	                                push rbp	       845	charset.c	FUNCTION_18
0x40017e1	              0x53	                                push rbx	       845	charset.c	FUNCTION_18
0x40017e2	        0x4883ec18	                           sub rsp, 0x18	       845	charset.c	FUNCTION_18
0x40017e6	    0x64488b042528	                mov rax, qword fs:[0x28]	       845	charset.c	FUNCTION_18
0x40017ef	      0x4889442408	                mov qword [rsp + 8], rax	       845	charset.c	FUNCTION_18
0x40017f4	            0x31c0	                            xor eax, eax	       845	charset.c	FUNCTION_18
0x40017f6	          0x803f00	                       cmp byte [rdi], 0	       858	charset.c	FUNCTION_19	WHILE_1
0x40017f9	        0x48893c24	                    mov qword [rsp], rdi	       858	charset.c	FUNCTION_19	WHILE_1
0x40017fd	            0x743a	                            je 0x4001839	       858	charset.c	FUNCTION_19	WHILE_1
0x40017ff	          0x4889fd	                            mov rbp, rdi	       858	charset.c	FUNCTION_19	WHILE_1
0x4001802	            0x31db	                            xor ebx, ebx	       858	charset.c	FUNCTION_19	WHILE_1
0x4001804	         0xf1f4000	                         nop dword [rax]	       858	charset.c	FUNCTION_19	WHILE_1
0x4001808	            0x89da	                            mov edx, ebx	       859	charset.c	FUNCTION_19	CALL_1
0x400180a	          0x4889e6	                            mov rsi, rsp	       859	charset.c	FUNCTION_19	CALL_1
0x400180d	          0x4889ef	                            mov rdi, rbp	       859	charset.c	FUNCTION_19	CALL_1
0x4001810	      0xe800000000	                          call 0x4001815	       859	charset.c	FUNCTION_19	CALL_1
0x4001815	             0x1c3	                            add ebx, eax	       859	charset.c	FUNCTION_19	CALL_1
0x4001817	        0x488b0424	                    mov rax, qword [rsp]	       858	charset.c	FUNCTION_19	WHILE_1
0x400181b	          0x803800	                       cmp byte [rax], 0	       858	charset.c	FUNCTION_19	WHILE_1
0x400181e	            0x75e8	                           jne 0x4001808	       858	charset.c	FUNCTION_19	WHILE_1
0x4001820	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       847	charset.c	FUNCTION_18
0x4001825	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       847	charset.c	FUNCTION_18
0x400182e	            0x89d8	                            mov eax, ebx	       847	charset.c	FUNCTION_18
0x4001830	            0x750b	                           jne 0x400183d	       847	charset.c	FUNCTION_18
0x4001832	        0x4883c418	                           add rsp, 0x18	       847	charset.c	FUNCTION_18
0x4001836	              0x5b	                                 pop rbx	       847	charset.c	FUNCTION_18
0x4001837	              0x5d	                                 pop rbp	       847	charset.c	FUNCTION_18
0x4001838	              0xc3	                                     ret	       847	charset.c	FUNCTION_18
0x4001839	            0x31db	                            xor ebx, ebx	       855	charset.c	FUNCTION_19
0x400183b	            0xebe3	                           jmp 0x4001820	       855	charset.c	FUNCTION_19
0x400183d	      0xe800000000	                          call 0x4001842	       847	charset.c	FUNCTION_18
transchar_nonprint	CALL,6:WHILE,0:FOR,0:IF,9:functions,0:ELSE,8:DO,0:SWITCH,0	57
0x4000520	              0x53	                                push rbx	       611	charset.c	FUNCTION_8
0x4000521	          0x4889fb	                            mov rbx, rdi	       611	charset.c	FUNCTION_8
0x4000524	        0x4883ec10	                           sub rsp, 0x10	       611	charset.c	FUNCTION_8
0x4000528	          0x83fe0a	                            cmp esi, 0xa	       612	charset.c	FUNCTION_8	IF_1
0x400052b	            0x7453	                            je 0x4000580	       612	charset.c	FUNCTION_8	IF_1
0x400052d	          0x83fe0d	                            cmp esi, 0xd	       614	charset.c	FUNCTION_8	ELSE_1	IF_2	CALL_1
0x4000530	     0xf8482000000	                            je 0x40005b8	       614	charset.c	FUNCTION_8	ELSE_1	IF_2	CALL_1
0x4000536	    0xf60500000000	               test byte [0x0400053d], 4	       617	charset.c	FUNCTION_8	IF_3
0x400053d	            0x750f	                           jne 0x400054e	       617	charset.c	FUNCTION_8	IF_3
0x400053f	          0x83fe7f	                           cmp esi, 0x7f	       624	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x4000542	            0x7e47	                           jle 0x400058b	       624	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x4000544	    0x8b0500000000	            mov eax, dword [0x0400054a] 	       640	charset.c	FUNCTION_8	ELSE_5	IF_7
0x400054a	            0x85c0	                           test eax, eax	       640	charset.c	FUNCTION_8	ELSE_5	IF_7
0x400054c	            0x7412	                            je 0x4000560	       640	charset.c	FUNCTION_8	ELSE_5	IF_7
0x400054e	        0x4883c410	                           add rsp, 0x10	       674	charset.c	FUNCTION_8
0x4000552	          0x4889df	                            mov rdi, rbx	       642	charset.c	FUNCTION_8	ELSE_5	IF_7	CALL_5
0x4000555	              0x5b	                                 pop rbx	       674	charset.c	FUNCTION_8
0x4000556	      0xe915ffffff	                   jmp sym.transchar_hex	       642	charset.c	FUNCTION_8	ELSE_5	IF_7	CALL_5
0x400055b	       0xf1f440000	                   nop dword [rax + rax]	       642	charset.c	FUNCTION_8	ELSE_5	IF_7	CALL_5
0x4000560	    0x8d8660ffffff	                   lea eax, [rsi - 0xa0]	       646	charset.c	FUNCTION_8	ELSE_6	IF_8
0x4000566	          0x83f85e	                           cmp eax, 0x5e	       646	charset.c	FUNCTION_8	ELSE_6	IF_8
0x4000569	            0x7635	                           jbe 0x40005a0	       646	charset.c	FUNCTION_8	ELSE_6	IF_8
0x400056b	          0x83f6c0	                     xor esi, 0xffffffc0	       670	charset.c	FUNCTION_8	ELSE_8
0x400056e	          0xc6077e	                    mov byte [rdi], 0x7e	       666	charset.c	FUNCTION_8	ELSE_8
0x4000571	        0xc6470200	                   mov byte [rdi + 2], 0	       672	charset.c	FUNCTION_8	ELSE_8
0x4000575	        0x40887701	                 mov byte [rdi + 1], sil	       670	charset.c	FUNCTION_8	ELSE_8
0x4000579	        0x4883c410	                           add rsp, 0x10	       674	charset.c	FUNCTION_8
0x400057d	              0x5b	                                 pop rbx	       674	charset.c	FUNCTION_8
0x400057e	              0xc3	                                     ret	       674	charset.c	FUNCTION_8
0x400057f	              0x90	                                     nop	       674	charset.c	FUNCTION_8
0x4000580	            0x31f6	                            xor esi, esi	       613	charset.c	FUNCTION_8	IF_1
0x4000582	    0xf60500000000	               test byte [0x04000589], 4	       617	charset.c	FUNCTION_8	IF_3
0x4000589	            0x75c3	                           jne 0x400054e	       617	charset.c	FUNCTION_8	IF_3
0x400058b	          0x83f640	                           xor esi, 0x40	       634	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x400058e	          0xc6035e	                    mov byte [rbx], 0x5e	       627	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x4000591	        0xc6430200	                   mov byte [rbx + 2], 0	       637	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x4000595	        0x40887301	                 mov byte [rbx + 1], sil	       634	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x4000599	        0x4883c410	                           add rsp, 0x10	       674	charset.c	FUNCTION_8
0x400059d	              0x5b	                                 pop rbx	       674	charset.c	FUNCTION_8
0x400059e	              0xc3	                                     ret	       674	charset.c	FUNCTION_8
0x400059f	              0x90	                                     nop	       674	charset.c	FUNCTION_8
0x40005a0	          0x83c680	             add esi, 0xffffffffffffff80	       649	charset.c	FUNCTION_8	ELSE_6	IF_8
0x40005a3	          0xc6077c	                    mov byte [rdi], 0x7c	       648	charset.c	FUNCTION_8	ELSE_6	IF_8
0x40005a6	        0xc6470200	                   mov byte [rdi + 2], 0	       650	charset.c	FUNCTION_8	ELSE_6	IF_8
0x40005aa	        0x40887701	                 mov byte [rdi + 1], sil	       649	charset.c	FUNCTION_8	ELSE_6	IF_8
0x40005ae	        0x4883c410	                           add rsp, 0x10	       674	charset.c	FUNCTION_8
0x40005b2	              0x5b	                                 pop rbx	       674	charset.c	FUNCTION_8
0x40005b3	              0xc3	                                     ret	       674	charset.c	FUNCTION_8
0x40005b4	         0xf1f4000	                         nop dword [rax]	       674	charset.c	FUNCTION_8
0x40005b8	    0x488b3d000000	            mov rdi, qword [0x040005bf] 	       614	charset.c	FUNCTION_8	ELSE_1	IF_2	CALL_1
0x40005bf	        0x8974240c	              mov dword [rsp + 0xc], esi	       614	charset.c	FUNCTION_8	ELSE_1	IF_2	CALL_1
0x40005c3	      0xe800000000	                          call 0x40005c8	       614	charset.c	FUNCTION_8	ELSE_1	IF_2	CALL_1
0x40005c8	        0x8b74240c	              mov esi, dword [rsp + 0xc]	       615	charset.c	FUNCTION_8	ELSE_1	IF_2
0x40005cc	          0x83f802	                              cmp eax, 2	       615	charset.c	FUNCTION_8	ELSE_1	IF_2
0x40005cf	      0xb80a000000	                            mov eax, 0xa	       615	charset.c	FUNCTION_8	ELSE_1	IF_2
0x40005d4	           0xf44f0	                          cmove esi, eax	       615	charset.c	FUNCTION_8	ELSE_1	IF_2
0x40005d7	            0xeba9	                           jmp 0x4000582	       615	charset.c	FUNCTION_8	ELSE_1	IF_2
chartabsize	CALL,0:WHILE,0:FOR,0:IF,0:functions,0:ELSE,0:DO,0:SWITCH,0	19
0x4000770	          0x803f09	                       cmp byte [rdi], 9	       828	charset.c	FUNCTION_16
0x4000773	            0x740b	                            je 0x4000780	       828	charset.c	FUNCTION_16
0x4000775	      0xe916ffffff	                       jmp sym.ptr2cells	       828	charset.c	FUNCTION_16
0x400077a	    0x660f1f440000	                    nop word [rax + rax]	       828	charset.c	FUNCTION_16
0x4000780	    0x488b05000000	            mov rax, qword [0x04000787] 	       828	charset.c	FUNCTION_16
0x4000787	    0x8b9034020000	           mov edx, dword [rax + 0x234] 	       828	charset.c	FUNCTION_16
0x400078d	            0x85d2	                           test edx, edx	       828	charset.c	FUNCTION_16
0x400078f	            0x740a	                            je 0x400079b	       828	charset.c	FUNCTION_16
0x4000791	    0x8b0500000000	            mov eax, dword [0x04000797] 	       828	charset.c	FUNCTION_16
0x4000797	            0x85c0	                           test eax, eax	       828	charset.c	FUNCTION_16
0x4000799	            0x74da	                            je 0x4000775	       828	charset.c	FUNCTION_16
0x400079b	    0x488b05000000	            mov rax, qword [0x040007a2] 	       828	charset.c	FUNCTION_16
0x40007a2	    0x488b88a81500	          mov rcx, qword [rax + 0x15a8] 	       828	charset.c	FUNCTION_16
0x40007a9	            0x89f0	                            mov eax, esi	       828	charset.c	FUNCTION_16
0x40007ab	              0x99	                                     cdq	       828	charset.c	FUNCTION_16
0x40007ac	            0xf7f9	                                idiv ecx	       828	charset.c	FUNCTION_16
0x40007ae	            0x89c8	                            mov eax, ecx	       828	charset.c	FUNCTION_16
0x40007b0	            0x29d0	                            sub eax, edx	       828	charset.c	FUNCTION_16
0x40007b2	              0xc3	                                     ret	       829	charset.c	FUNCTION_16
lbr_chartabsize	CALL,2:WHILE,0:FOR,0:IF,2:functions,0:ELSE,0:DO,0:SWITCH,0	46
0x40016a0	          0x4889f9	                            mov rcx, rdi	      1001	charset.c	FUNCTION_30
0x40016a3	    0x488b3d000000	            mov rdi, qword [0x040016aa] 	      1003	charset.c	FUNCTION_30	IF_1
0x40016aa	          0x4989f1	                             mov r9, rsi	      1001	charset.c	FUNCTION_30
0x40016ad	    0x448b97300200	          mov r10d, dword [rdi + 0x230] 	      1003	charset.c	FUNCTION_30	IF_1
0x40016b4	          0x4585d2	                         test r10d, r10d	      1003	charset.c	FUNCTION_30	IF_1
0x40016b7	            0x7557	                           jne 0x4001710	      1003	charset.c	FUNCTION_30	IF_1
0x40016b9	    0x488b05000000	            mov rax, qword [0x040016c0] 	      1003	charset.c	FUNCTION_30	IF_1
0x40016c0	          0x803800	                       cmp byte [rax], 0	      1003	charset.c	FUNCTION_30	IF_1
0x40016c3	            0x754b	                           jne 0x4001710	      1003	charset.c	FUNCTION_30	IF_1
0x40016c5	    0x448b87b40100	           mov r8d, dword [rdi + 0x1b4] 	      1003	charset.c	FUNCTION_30	IF_1
0x40016cc	          0x4585c0	                           test r8d, r8d	      1003	charset.c	FUNCTION_30	IF_1
0x40016cf	            0x753f	                           jne 0x4001710	      1003	charset.c	FUNCTION_30	IF_1
0x40016d1	    0x8bb794020000	           mov esi, dword [rdi + 0x294] 	      1007	charset.c	FUNCTION_30	IF_1	IF_2
0x40016d7	            0x85f6	                           test esi, esi	      1007	charset.c	FUNCTION_30	IF_1	IF_2
0x40016d9	            0x7565	                           jne 0x4001740	      1007	charset.c	FUNCTION_30	IF_1	IF_2
0x40016db	        0x41803909	                        cmp byte [r9], 9	      1010	charset.c	FUNCTION_30	IF_1
0x40016df	            0x754f	                           jne 0x4001730	      1010	charset.c	FUNCTION_30	IF_1
0x40016e1	    0x8b8f34020000	           mov ecx, dword [rdi + 0x234] 	      1010	charset.c	FUNCTION_30	IF_1
0x40016e7	            0x85c9	                           test ecx, ecx	      1010	charset.c	FUNCTION_30	IF_1
0x40016e9	            0x740a	                            je 0x40016f5	      1010	charset.c	FUNCTION_30	IF_1
0x40016eb	    0x8b0500000000	            mov eax, dword [0x040016f1] 	      1010	charset.c	FUNCTION_30	IF_1
0x40016f1	            0x85c0	                           test eax, eax	      1010	charset.c	FUNCTION_30	IF_1
0x40016f3	            0x743b	                            je 0x4001730	      1010	charset.c	FUNCTION_30	IF_1
0x40016f5	    0x488b05000000	            mov rax, qword [0x040016fc] 	      1010	charset.c	FUNCTION_30	IF_1
0x40016fc	    0x488b88a81500	          mov rcx, qword [rax + 0x15a8] 	      1010	charset.c	FUNCTION_30	IF_1
0x4001703	            0x89d0	                            mov eax, edx	      1010	charset.c	FUNCTION_30	IF_1
0x4001705	              0x99	                                     cdq	      1010	charset.c	FUNCTION_30	IF_1
0x4001706	            0xf7f9	                                idiv ecx	      1010	charset.c	FUNCTION_30	IF_1
0x4001708	            0x89c8	                            mov eax, ecx	      1010	charset.c	FUNCTION_30	IF_1
0x400170a	            0x29d0	                            sub eax, edx	      1010	charset.c	FUNCTION_30	IF_1
0x400170c	              0xc3	                                     ret	      1015	charset.c	FUNCTION_30
0x400170d	           0xf1f00	                         nop dword [rax]	      1015	charset.c	FUNCTION_30
0x4001710	          0x4885c9	                           test rcx, rcx	      1013	charset.c	FUNCTION_30	CALL_2
0x4001713	          0x4889ce	                            mov rsi, rcx	      1013	charset.c	FUNCTION_30	CALL_2
0x4001716	            0x89d1	                            mov ecx, edx	      1013	charset.c	FUNCTION_30	CALL_2
0x4001718	        0x490f44f1	                           cmove rsi, r9	      1013	charset.c	FUNCTION_30	CALL_2
0x400171c	          0x4c89ca	                             mov rdx, r9	      1013	charset.c	FUNCTION_30	CALL_2
0x400171f	          0x4531c0	                            xor r8d, r8d	      1013	charset.c	FUNCTION_30	CALL_2
0x4001722	      0xe939f8ffff	             jmp sym.win_lbr_chartabsize	      1013	charset.c	FUNCTION_30	CALL_2
0x4001727	    0x660f1f840000	                    nop word [rax + rax]	      1013	charset.c	FUNCTION_30	CALL_2
0x4001730	          0x4c89cf	                             mov rdi, r9	      1010	charset.c	FUNCTION_30	IF_1
0x4001733	      0xe958efffff	                       jmp sym.ptr2cells	      1010	charset.c	FUNCTION_30	IF_1
0x4001738	     0xf1f84000000	                   nop dword [rax + rax]	      1010	charset.c	FUNCTION_30	IF_1
0x4001740	            0x31c9	                            xor ecx, ecx	      1008	charset.c	FUNCTION_30	IF_1	CALL_1
0x4001742	          0x4c89ce	                             mov rsi, r9	      1008	charset.c	FUNCTION_30	IF_1	CALL_1
0x4001745	      0xe946f7ffff	           jmp sym.win_nolbr_chartabsize	      1008	charset.c	FUNCTION_30	IF_1	CALL_1
transchar_byte	CALL,2:WHILE,0:FOR,0:IF,1:functions,0:ELSE,0:DO,0:SWITCH,0	14
0x4000b10	    0x8b0500000000	            mov eax, dword [0x04000b16] 	       595	charset.c	FUNCTION_7	IF_1
0x4000b16	            0x85c0	                           test eax, eax	       595	charset.c	FUNCTION_7	IF_1
0x4000b18	            0x7405	                            je 0x4000b1f	       595	charset.c	FUNCTION_7	IF_1
0x4000b1a	          0x83ff7f	                           cmp edi, 0x7f	       595	charset.c	FUNCTION_7	IF_1
0x4000b1d	            0x7f09	                            jg 0x4000b28	       595	charset.c	FUNCTION_7	IF_1
0x4000b1f	      0xe92cffffff	                       jmp sym.transchar	       600	charset.c	FUNCTION_7	CALL_2
0x4000b24	         0xf1f4000	                         nop dword [rax]	       600	charset.c	FUNCTION_7	CALL_2
0x4000b28	        0x4883ec08	                              sub rsp, 8	       594	charset.c	FUNCTION_7
0x4000b2c	            0x89fe	                            mov esi, edi	       594	charset.c	FUNCTION_7
0x4000b2e	      0xbf00000000	                              mov edi, 0	       597	charset.c	FUNCTION_7	IF_1	CALL_1
0x4000b33	      0xe800000000	                          call 0x4000b38	       597	charset.c	FUNCTION_7	IF_1	CALL_1
0x4000b38	      0xb800000000	                              mov eax, 0	       601	charset.c	FUNCTION_7
0x4000b3d	        0x4883c408	                              add rsp, 8	       601	charset.c	FUNCTION_7
0x4000b41	              0xc3	                                     ret	       601	charset.c	FUNCTION_7
init_chartab	CALL,1:WHILE,0:FOR,0:IF,0:functions,0:ELSE,0:DO,0:SWITCH,0	3
0x4002af0	    0x488b3d000000	            mov rdi, qword [0x04002af7] 	        73	charset.c	FUNCTION_1	CALL_1
0x4002af7	      0xbe01000000	                              mov esi, 1	        73	charset.c	FUNCTION_1	CALL_1
0x4002afc	      0xe94ff9ffff	                jmp sym.buf_init_chartab	        73	charset.c	FUNCTION_1	CALL_1
skiptowhite_esc	CALL,0:WHILE,1:FOR,0:IF,1:functions,0:ELSE,0:DO,0:SWITCH,0	25
0x40023a0	           0xfb617	                   movzx edx, byte [rdi]	      1801	charset.c	FUNCTION_56	WHILE_1
0x40023a3	          0x4889f8	                            mov rax, rdi	      1800	charset.c	FUNCTION_56
0x40023a6	          0xf6c2df	                           test dl, 0xdf	      1801	charset.c	FUNCTION_56	WHILE_1
0x40023a9	            0x7439	                            je 0x40023e4	      1801	charset.c	FUNCTION_56	WHILE_1
0x40023ab	          0x80fa09	                               cmp dl, 9	      1801	charset.c	FUNCTION_56	WHILE_1
0x40023ae	            0x7434	                            je 0x40023e4	      1801	charset.c	FUNCTION_56	WHILE_1
0x40023b0	          0x80fa5c	                            cmp dl, 0x5c	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x40023b3	            0x741b	                            je 0x40023d0	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x40023b5	          0x80fa16	                            cmp dl, 0x16	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x40023b8	            0x7416	                            je 0x40023d0	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x40023ba	         0xfb65001	               movzx edx, byte [rax + 1]	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x40023be	        0x4883c001	                              add rax, 1	      1805	charset.c	FUNCTION_56	WHILE_1
0x40023c2	          0xf6c2df	                           test dl, 0xdf	      1801	charset.c	FUNCTION_56	WHILE_1
0x40023c5	            0x741d	                            je 0x40023e4	      1801	charset.c	FUNCTION_56	WHILE_1
0x40023c7	          0x80fa09	                               cmp dl, 9	      1801	charset.c	FUNCTION_56	WHILE_1
0x40023ca	            0x75e4	                           jne 0x40023b0	      1801	charset.c	FUNCTION_56	WHILE_1
0x40023cc	            0xf3c3	                                     ret	      1801	charset.c	FUNCTION_56	WHILE_1
0x40023ce	            0x6690	                                     nop	      1801	charset.c	FUNCTION_56	WHILE_1
0x40023d0	        0x80780100	                   cmp byte [rax + 1], 0	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x40023d4	            0x740a	                            je 0x40023e0	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x40023d6	         0xfb65002	               movzx edx, byte [rax + 2]	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x40023da	        0x4883c001	                              add rax, 1	      1804	charset.c	FUNCTION_56	WHILE_1	IF_1
0x40023de	            0xebde	                           jmp 0x40023be	      1804	charset.c	FUNCTION_56	WHILE_1	IF_1
0x40023e0	        0x4883c001	                              add rax, 1	      1805	charset.c	FUNCTION_56	WHILE_1
0x40023e4	            0xf3c3	                                     ret	      1808	charset.c	FUNCTION_56
win_linetabsize	CALL,2:WHILE,0:FOR,1:IF,0:functions,0:ELSE,0:DO,0:SWITCH,0	51
0x4001610	            0x4157	                                push r15	       868	charset.c	FUNCTION_20
0x4001612	            0x4156	                                push r14	       868	charset.c	FUNCTION_20
0x4001614	          0x4c63f2	                         movsxd r14, edx	       868	charset.c	FUNCTION_20
0x4001617	            0x4155	                                push r13	       868	charset.c	FUNCTION_20
0x4001619	            0x4154	                                push r12	       868	charset.c	FUNCTION_20
0x400161b	          0x4d89f5	                            mov r13, r14	       868	charset.c	FUNCTION_20
0x400161e	              0x55	                                push rbp	       868	charset.c	FUNCTION_20
0x400161f	              0x53	                                push rbx	       868	charset.c	FUNCTION_20
0x4001620	            0x31ed	                            xor ebp, ebp	       872	charset.c	FUNCTION_20	FOR_1
0x4001622	          0x4901f6	                            add r14, rsi	       872	charset.c	FUNCTION_20	FOR_1
0x4001625	          0x4989ff	                            mov r15, rdi	       872	charset.c	FUNCTION_20	FOR_1
0x4001628	          0x4989f4	                            mov r12, rsi	       872	charset.c	FUNCTION_20	FOR_1
0x400162b	        0x4883ec08	                              sub rsp, 8	       868	charset.c	FUNCTION_20
0x400162f	          0x803e00	                       cmp byte [rsi], 0	       872	charset.c	FUNCTION_20	FOR_1
0x4001632	          0x4889f3	                            mov rbx, rsi	       872	charset.c	FUNCTION_20	FOR_1
0x4001635	            0x7511	                           jne 0x4001648	       872	charset.c	FUNCTION_20	FOR_1
0x4001637	            0xeb54	                           jmp 0x400168d	       872	charset.c	FUNCTION_20	FOR_1
0x4001639	     0xf1f80000000	                         nop dword [rax]	       872	charset.c	FUNCTION_20	FOR_1
0x4001640	          0x4801c3	                            add rbx, rax	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x4001643	          0x803b00	                       cmp byte [rbx], 0	       872	charset.c	FUNCTION_20	FOR_1
0x4001646	            0x7445	                            je 0x400168d	       872	charset.c	FUNCTION_20	FOR_1
0x4001648	    0x4181fdffffff	                    cmp r13d, 0x7fffffff	       872	charset.c	FUNCTION_20	FOR_1
0x400164f	            0x7405	                            je 0x4001656	       872	charset.c	FUNCTION_20	FOR_1
0x4001651	          0x4c39f3	                            cmp rbx, r14	       872	charset.c	FUNCTION_20	FOR_1
0x4001654	            0x7337	                           jae 0x400168d	       872	charset.c	FUNCTION_20	FOR_1
0x4001656	          0x4531c0	                            xor r8d, r8d	       874	charset.c	FUNCTION_20	CALL_2
0x4001659	            0x89e9	                            mov ecx, ebp	       874	charset.c	FUNCTION_20	CALL_2
0x400165b	          0x4889da	                            mov rdx, rbx	       874	charset.c	FUNCTION_20	CALL_2
0x400165e	          0x4c89e6	                            mov rsi, r12	       874	charset.c	FUNCTION_20	CALL_2
0x4001661	          0x4c89ff	                            mov rdi, r15	       874	charset.c	FUNCTION_20	CALL_2
0x4001664	      0xe800000000	                          call 0x4001669	       874	charset.c	FUNCTION_20	CALL_2
0x4001669	    0x8b1500000000	            mov edx, dword [0x0400166f] 	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x400166f	             0x1c5	                            add ebp, eax	       874	charset.c	FUNCTION_20	CALL_2
0x4001671	      0xb801000000	                              mov eax, 1	       874	charset.c	FUNCTION_20	CALL_2
0x4001676	            0x85d2	                           test edx, edx	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x4001678	            0x74c6	                            je 0x4001640	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x400167a	          0x4889df	                            mov rdi, rbx	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x400167d	    0xff1500000000	                 call qword [0x04001683]	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x4001683	            0x4898	                                    cdqe	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x4001685	          0x4801c3	                            add rbx, rax	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x4001688	          0x803b00	                       cmp byte [rbx], 0	       872	charset.c	FUNCTION_20	FOR_1
0x400168b	            0x75bb	                           jne 0x4001648	       872	charset.c	FUNCTION_20	FOR_1
0x400168d	        0x4883c408	                              add rsp, 8	       876	charset.c	FUNCTION_20
0x4001691	            0x89e8	                            mov eax, ebp	       876	charset.c	FUNCTION_20
0x4001693	              0x5b	                                 pop rbx	       876	charset.c	FUNCTION_20
0x4001694	              0x5d	                                 pop rbp	       876	charset.c	FUNCTION_20
0x4001695	            0x415c	                                 pop r12	       876	charset.c	FUNCTION_20
0x4001697	            0x415d	                                 pop r13	       876	charset.c	FUNCTION_20
0x4001699	            0x415e	                                 pop r14	       876	charset.c	FUNCTION_20
0x400169b	            0x415f	                                 pop r15	       876	charset.c	FUNCTION_20
0x400169d	              0xc3	                                     ret	       876	charset.c	FUNCTION_20
win_lbr_chartabsize	CALL,22:WHILE,0:FOR,1:IF,24:functions,0:ELSE,3:DO,0:SWITCH,0	448
0x4000f60	            0x4157	                                push r15	      1047	charset.c	FUNCTION_32
0x4000f62	            0x4156	                                push r14	      1047	charset.c	FUNCTION_32
0x4000f64	          0x4189ce	                           mov r14d, ecx	      1047	charset.c	FUNCTION_32
0x4000f67	            0x4155	                                push r13	      1047	charset.c	FUNCTION_32
0x4000f69	            0x4154	                                push r12	      1047	charset.c	FUNCTION_32
0x4000f6b	          0x4989f5	                            mov r13, rsi	      1047	charset.c	FUNCTION_32
0x4000f6e	              0x55	                                push rbp	      1047	charset.c	FUNCTION_32
0x4000f6f	              0x53	                                push rbx	      1047	charset.c	FUNCTION_32
0x4000f70	          0x4889fd	                            mov rbp, rdi	      1047	charset.c	FUNCTION_32
0x4000f73	          0x4989d4	                            mov r12, rdx	      1047	charset.c	FUNCTION_32
0x4000f76	        0x4883ec28	                           sub rsp, 0x28	      1047	charset.c	FUNCTION_32
0x4000f7a	    0x8bb730020000	           mov esi, dword [rdi + 0x230] 	      1068	charset.c	FUNCTION_32	IF_1
0x4000f80	           0xfb602	                   movzx eax, byte [rdx]	      1062	charset.c	FUNCTION_32
0x4000f83	            0x85f6	                           test esi, esi	      1068	charset.c	FUNCTION_32	IF_1
0x4000f85	            0x7561	                           jne 0x4000fe8	      1068	charset.c	FUNCTION_32	IF_1
0x4000f87	    0x8bbfb4010000	           mov edi, dword [rdi + 0x1b4] 	      1068	charset.c	FUNCTION_32	IF_1
0x4000f8d	            0x85ff	                           test edi, edi	      1068	charset.c	FUNCTION_32	IF_1
0x4000f8f	            0x7557	                           jne 0x4000fe8	      1068	charset.c	FUNCTION_32	IF_1
0x4000f91	    0x488b15000000	            mov rdx, qword [0x04000f98] 	      1068	charset.c	FUNCTION_32	IF_1
0x4000f98	          0x803a00	                       cmp byte [rdx], 0	      1068	charset.c	FUNCTION_32	IF_1
0x4000f9b	            0x754b	                           jne 0x4000fe8	      1068	charset.c	FUNCTION_32	IF_1
0x4000f9d	    0x8b8d94020000	           mov ecx, dword [rbp + 0x294] 	      1072	charset.c	FUNCTION_32	IF_1	IF_2
0x4000fa3	            0x85c9	                           test ecx, ecx	      1072	charset.c	FUNCTION_32	IF_1	IF_2
0x4000fa5	     0xf851d040000	                           jne 0x40013c8	      1072	charset.c	FUNCTION_32	IF_1	IF_2
0x4000fab	            0x3c09	                               cmp al, 9	      1075	charset.c	FUNCTION_32	IF_1
0x4000fad	     0xf855d020000	                           jne 0x4001210	      1075	charset.c	FUNCTION_32	IF_1
0x4000fb3	    0x8b9534020000	           mov edx, dword [rbp + 0x234] 	      1075	charset.c	FUNCTION_32	IF_1
0x4000fb9	            0x85d2	                           test edx, edx	      1075	charset.c	FUNCTION_32	IF_1
0x4000fbb	            0x740e	                            je 0x4000fcb	      1075	charset.c	FUNCTION_32	IF_1
0x4000fbd	    0x8b0500000000	            mov eax, dword [0x04000fc3] 	      1075	charset.c	FUNCTION_32	IF_1
0x4000fc3	            0x85c0	                           test eax, eax	      1075	charset.c	FUNCTION_32	IF_1
0x4000fc5	     0xf8445020000	                            je 0x4001210	      1075	charset.c	FUNCTION_32	IF_1
0x4000fcb	        0x488b4508	                mov rax, qword [rbp + 8]	      1075	charset.c	FUNCTION_32	IF_1
0x4000fcf	    0x488b98a81500	          mov rbx, qword [rax + 0x15a8] 	      1075	charset.c	FUNCTION_32	IF_1
0x4000fd6	          0x4489f0	                           mov eax, r14d	      1075	charset.c	FUNCTION_32	IF_1
0x4000fd9	              0x99	                                     cdq	      1075	charset.c	FUNCTION_32	IF_1
0x4000fda	            0xf7fb	                                idiv ebx	      1075	charset.c	FUNCTION_32	IF_1
0x4000fdc	            0x89d8	                            mov eax, ebx	      1075	charset.c	FUNCTION_32	IF_1
0x4000fde	            0x29d0	                            sub eax, edx	      1075	charset.c	FUNCTION_32	IF_1
0x4000fe0	      0xe98b000000	                           jmp 0x4001070	      1075	charset.c	FUNCTION_32	IF_1
0x4000fe5	           0xf1f00	                         nop dword [rax]	      1075	charset.c	FUNCTION_32	IF_1
0x4000fe8	            0x3c09	                               cmp al, 9	       835	charset.c	FUNCTION_17
0x4000fea	     0xf8490000000	                            je 0x4001080	       835	charset.c	FUNCTION_17
0x4000ff0	          0x4c89e7	                            mov rdi, r12	       835	charset.c	FUNCTION_17
0x4000ff3	        0x4c890424	                     mov qword [rsp], r8	       835	charset.c	FUNCTION_17
0x4000ff7	          0x4531ff	                          xor r15d, r15d	      1052	charset.c	FUNCTION_32
0x4000ffa	      0xe800000000	                          call 0x4000fff	       835	charset.c	FUNCTION_17
0x4000fff	    0x8bb530020000	           mov esi, dword [rbp + 0x230] 	       835	charset.c	FUNCTION_17
0x4001005	            0x89c3	                            mov ebx, eax	       835	charset.c	FUNCTION_17
0x4001007	      0x410fb61424	                   movzx edx, byte [r12]	      1083	charset.c	FUNCTION_32
0x400100c	        0x4c8b0424	                     mov r8, qword [rsp]	      1083	charset.c	FUNCTION_32
0x4001010	            0x85f6	                           test esi, esi	      1091	charset.c	FUNCTION_32	IF_4
0x4001012	     0xf85c4000000	                           jne 0x40010dc	      1091	charset.c	FUNCTION_32	IF_4
0x4001018	    0x448b0d000000	            mov r9d, dword [0x0400101f] 	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_12
0x400101f	          0x4585c9	                           test r9d, r9d	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_12
0x4001022	            0x7409	                            je 0x400102d	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_12
0x4001024	          0x83fb02	                              cmp ebx, 2	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_12
0x4001027	     0xf8403020000	                            je 0x4001230	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_12
0x400102d	          0x4531ff	                          xor r15d, r15d	      1056	charset.c	FUNCTION_32
0x4001030	    0x488b05000000	            mov rax, qword [0x04001037] 	      1147	charset.c	FUNCTION_32	IF_10
0x4001037	          0x803800	                       cmp byte [rax], 0	      1147	charset.c	FUNCTION_32	IF_10
0x400103a	            0x750d	                           jne 0x4001049	      1147	charset.c	FUNCTION_32	IF_10
0x400103c	    0x8bb5b4010000	           mov esi, dword [rbp + 0x1b4] 	      1147	charset.c	FUNCTION_32	IF_10
0x4001042	          0x4531e4	                          xor r12d, r12d	      1146	charset.c	FUNCTION_32
0x4001045	            0x85f6	                           test esi, esi	      1147	charset.c	FUNCTION_32	IF_10
0x4001047	            0x7416	                            je 0x400105f	      1147	charset.c	FUNCTION_32	IF_10
0x4001049	    0x8b8d94020000	           mov ecx, dword [rbp + 0x294] 	      1147	charset.c	FUNCTION_32	IF_10
0x400104f	            0x85c9	                           test ecx, ecx	      1147	charset.c	FUNCTION_32	IF_10
0x4001051	            0x7409	                            je 0x400105c	      1147	charset.c	FUNCTION_32	IF_10
0x4001053	          0x4585f6	                         test r14d, r14d	      1147	charset.c	FUNCTION_32	IF_10
0x4001056	     0xf8514020000	                           jne 0x4001270	      1147	charset.c	FUNCTION_32	IF_10
0x400105c	          0x4531e4	                          xor r12d, r12d	      1146	charset.c	FUNCTION_32
0x400105f	          0x4d85c0	                             test r8, r8	      1201	charset.c	FUNCTION_32	IF_24
0x4001062	     0xf84f8020000	                            je 0x4001360	      1201	charset.c	FUNCTION_32	IF_24
0x4001068	          0x4501fc	                          add r12d, r15d	      1202	charset.c	FUNCTION_32	IF_24
0x400106b	            0x89d8	                            mov eax, ebx	      1203	charset.c	FUNCTION_32
0x400106d	          0x458920	                    mov dword [r8], r12d	      1202	charset.c	FUNCTION_32	IF_24
0x4001070	        0x4883c428	                           add rsp, 0x28	      1205	charset.c	FUNCTION_32
0x4001074	              0x5b	                                 pop rbx	      1205	charset.c	FUNCTION_32
0x4001075	              0x5d	                                 pop rbp	      1205	charset.c	FUNCTION_32
0x4001076	            0x415c	                                 pop r12	      1205	charset.c	FUNCTION_32
0x4001078	            0x415d	                                 pop r13	      1205	charset.c	FUNCTION_32
0x400107a	            0x415e	                                 pop r14	      1205	charset.c	FUNCTION_32
0x400107c	            0x415f	                                 pop r15	      1205	charset.c	FUNCTION_32
0x400107e	              0xc3	                                     ret	      1205	charset.c	FUNCTION_32
0x400107f	              0x90	                                     nop	      1205	charset.c	FUNCTION_32
0x4001080	    0x8b8534020000	           mov eax, dword [rbp + 0x234] 	       835	charset.c	FUNCTION_17
0x4001086	            0x85c0	                           test eax, eax	       835	charset.c	FUNCTION_17
0x4001088	            0x742e	                            je 0x40010b8	       835	charset.c	FUNCTION_17
0x400108a	    0x8b0500000000	            mov eax, dword [0x04001090] 	       835	charset.c	FUNCTION_17
0x4001090	            0x85c0	                           test eax, eax	       835	charset.c	FUNCTION_17
0x4001092	            0x7524	                           jne 0x40010b8	       835	charset.c	FUNCTION_17
0x4001094	          0x4c89e7	                            mov rdi, r12	       835	charset.c	FUNCTION_17
0x4001097	        0x4c890424	                     mov qword [rsp], r8	       835	charset.c	FUNCTION_17
0x400109b	      0xe800000000	                          call 0x40010a0	       835	charset.c	FUNCTION_17
0x40010a0	      0x410fb61424	                   movzx edx, byte [r12]	      1083	charset.c	FUNCTION_32
0x40010a5	    0x8bb530020000	           mov esi, dword [rbp + 0x230] 	      1083	charset.c	FUNCTION_32
0x40010ab	            0x89c3	                            mov ebx, eax	       835	charset.c	FUNCTION_17
0x40010ad	        0x4c8b0424	                     mov r8, qword [rsp]	       835	charset.c	FUNCTION_17
0x40010b1	            0xeb1d	                           jmp 0x40010d0	       835	charset.c	FUNCTION_17
0x40010b3	       0xf1f440000	                   nop dword [rax + rax]	       835	charset.c	FUNCTION_17
0x40010b8	        0x488b4508	                mov rax, qword [rbp + 8]	       835	charset.c	FUNCTION_17
0x40010bc	    0x488b98a81500	          mov rbx, qword [rax + 0x15a8] 	       835	charset.c	FUNCTION_17
0x40010c3	          0x4489f0	                           mov eax, r14d	       835	charset.c	FUNCTION_17
0x40010c6	              0x99	                                     cdq	       835	charset.c	FUNCTION_17
0x40010c7	            0xf7fb	                                idiv ebx	       835	charset.c	FUNCTION_17
0x40010c9	            0x29d3	                            sub ebx, edx	       835	charset.c	FUNCTION_17
0x40010cb	      0xba09000000	                              mov edx, 9	      1083	charset.c	FUNCTION_32
0x40010d0	            0x85f6	                           test esi, esi	      1091	charset.c	FUNCTION_32	IF_4
0x40010d2	        0x448d7bff	                     lea r15d, [rbx - 1]	      1085	charset.c	FUNCTION_32	IF_3
0x40010d6	     0xf843cffffff	                            je 0x4001018	      1091	charset.c	FUNCTION_32	IF_4
0x40010dc	          0x4863c2	                         movsxd rax, edx	      1092	charset.c	FUNCTION_32	IF_4	CALL_3
0x40010df	    0x80b800000000	                       cmp byte [rax], 0	      1092	charset.c	FUNCTION_32	IF_4	CALL_3
0x40010e6	     0xf842cffffff	                            je 0x4001018	      1092	charset.c	FUNCTION_32	IF_4	CALL_3
0x40010ec	    0x410fb6442401	               movzx eax, byte [r12 + 1]	      1093	charset.c	FUNCTION_32	IF_4	CALL_4
0x40010f2	    0x80b800000000	                       cmp byte [rax], 0	      1093	charset.c	FUNCTION_32	IF_4	CALL_4
0x40010f9	     0xf8519ffffff	                           jne 0x4001018	      1093	charset.c	FUNCTION_32	IF_4	CALL_4
0x40010ff	    0x8b8594020000	           mov eax, dword [rbp + 0x294] 	      1094	charset.c	FUNCTION_32	IF_4
0x4001105	            0x85c0	                           test eax, eax	      1094	charset.c	FUNCTION_32	IF_4
0x4001107	     0xf840bffffff	                            je 0x4001018	      1094	charset.c	FUNCTION_32	IF_4
0x400110d	    0x8b85ac000000	            mov eax, dword [rbp + 0xac] 	      1095	charset.c	FUNCTION_32	IF_4
0x4001113	            0x85c0	                           test eax, eax	      1095	charset.c	FUNCTION_32	IF_4
0x4001115	     0xf84fdfeffff	                            je 0x4001018	      1095	charset.c	FUNCTION_32	IF_4
0x400111b	          0x4889ef	                            mov rdi, rbp	      1101	charset.c	FUNCTION_32	IF_4	CALL_5
0x400111e	        0x4c890424	                     mov qword [rsp], r8	      1101	charset.c	FUNCTION_32	IF_4	CALL_5
0x4001122	      0xe800000000	                          call 0x4001127	      1101	charset.c	FUNCTION_32	IF_4	CALL_5
0x4001127	    0x8b95ac000000	            mov edx, dword [rbp + 0xac] 	      1103	charset.c	FUNCTION_32	IF_4
0x400112d	        0x4c8b0424	                     mov r8, qword [rsp]	      1104	charset.c	FUNCTION_32	IF_4	IF_5
0x4001131	            0x29c2	                            sub edx, eax	      1103	charset.c	FUNCTION_32	IF_4
0x4001133	            0x89d0	                            mov eax, edx	      1103	charset.c	FUNCTION_32	IF_4
0x4001135	          0x4429f8	                           sub eax, r15d	      1103	charset.c	FUNCTION_32	IF_4
0x4001138	          0x4139c6	                           cmp r14d, eax	      1104	charset.c	FUNCTION_32	IF_4	IF_5
0x400113b	        0x89442418	             mov dword [rsp + 0x18], eax	      1103	charset.c	FUNCTION_32	IF_4
0x400113f	     0xf8d7c040000	                           jge 0x40015c1	      1104	charset.c	FUNCTION_32	IF_4	IF_5
0x4001145	          0x4489f6	                           mov esi, r14d	      1106	charset.c	FUNCTION_32	IF_4	IF_5
0x4001148	      0xe98a000000	                           jmp 0x40011d7	      1106	charset.c	FUNCTION_32	IF_4	IF_5
0x400114d	           0xf1f00	                         nop dword [rax]	      1106	charset.c	FUNCTION_32	IF_4	IF_5
0x4001150	          0x4c01e1	                            add rcx, r12	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x4001153	           0xfb611	                   movzx edx, byte [rcx]	      1116	charset.c	FUNCTION_32	IF_4	FOR_1
0x4001156	           0xfb6c2	                           movzx eax, dl	      1116	charset.c	FUNCTION_32	IF_4	FOR_1
0x4001159	            0x85c0	                           test eax, eax	      1117	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7
0x400115b	     0xf84ccfeffff	                            je 0x400102d	      1117	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7
0x4001161	    0x80b800000000	                       cmp byte [rax], 0	      1118	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_8
0x4001168	            0x7517	                           jne 0x4001181	      1118	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_8
0x400116a	          0x4439f6	                           cmp esi, r14d	      1120	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_10
0x400116d	            0x7412	                            je 0x4001181	      1120	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_10
0x400116f	      0x410fb60424	                   movzx eax, byte [r12]	      1120	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_10
0x4001174	    0x80b800000000	                       cmp byte [rax], 0	      1120	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_10
0x400117b	     0xf85acfeffff	                           jne 0x400102d	      1120	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_10
0x4001181	          0x80fa09	                               cmp dl, 9	       835	charset.c	FUNCTION_17
0x4001184	            0x7520	                           jne 0x40011a6	       835	charset.c	FUNCTION_17
0x4001186	    0x448b9d340200	          mov r11d, dword [rbp + 0x234] 	       835	charset.c	FUNCTION_17
0x400118d	          0x4585db	                         test r11d, r11d	       835	charset.c	FUNCTION_17
0x4001190	     0xf845a020000	                            je 0x40013f0	       835	charset.c	FUNCTION_17
0x4001196	    0x448b15000000	           mov r10d, dword [0x0400119d] 	       835	charset.c	FUNCTION_17
0x400119d	          0x4585d2	                         test r10d, r10d	       835	charset.c	FUNCTION_17
0x40011a0	     0xf854a020000	                           jne 0x40013f0	       835	charset.c	FUNCTION_17
0x40011a6	          0x4889cf	                            mov rdi, rcx	       835	charset.c	FUNCTION_17
0x40011a9	      0x4c89442410	              mov qword [rsp + 0x10], r8	       835	charset.c	FUNCTION_17
0x40011ae	        0x89742408	                mov dword [rsp + 8], esi	       835	charset.c	FUNCTION_17
0x40011b2	        0x48890c24	                    mov qword [rsp], rcx	       835	charset.c	FUNCTION_17
0x40011b6	      0xe800000000	                          call 0x40011bb	       835	charset.c	FUNCTION_17
0x40011bb	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	       835	charset.c	FUNCTION_17
0x40011c0	        0x8b742408	                mov esi, dword [rsp + 8]	       835	charset.c	FUNCTION_17
0x40011c4	        0x488b0c24	                    mov rcx, qword [rsp]	       835	charset.c	FUNCTION_17
0x40011c8	             0x1c6	                            add esi, eax	      1123	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_11
0x40011ca	        0x39742418	            cmp dword [rsp + 0x18], esi 	      1124	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x40011ce	     0xf8eda030000	                           jle 0x40015ae	      1124	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x40011d4	          0x4989cc	                            mov r12, rcx	      1124	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x40011d7	    0x8b0500000000	            mov eax, dword [0x040011dd] 	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x40011dd	      0xb901000000	                              mov ecx, 1	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x40011e2	            0x85c0	                           test eax, eax	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x40011e4	     0xf8466ffffff	                            je 0x4001150	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x40011ea	      0x4c89442408	                 mov qword [rsp + 8], r8	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x40011ef	          0x893424	                    mov dword [rsp], esi	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x40011f2	          0x4c89e7	                            mov rdi, r12	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x40011f5	    0xff1500000000	                 call qword [0x040011fb]	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x40011fb	          0x8b3424	                    mov esi, dword [rsp]	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x40011fe	          0x4863c8	                         movsxd rcx, eax	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x4001201	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x4001206	      0xe945ffffff	                           jmp 0x4001150	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x400120b	       0xf1f440000	                   nop dword [rax + rax]	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x4001210	        0x4883c428	                           add rsp, 0x28	      1205	charset.c	FUNCTION_32
0x4001214	          0x4c89e7	                            mov rdi, r12	      1075	charset.c	FUNCTION_32	IF_1
0x4001217	              0x5b	                                 pop rbx	      1205	charset.c	FUNCTION_32
0x4001218	              0x5d	                                 pop rbp	      1205	charset.c	FUNCTION_32
0x4001219	            0x415c	                                 pop r12	      1205	charset.c	FUNCTION_32
0x400121b	            0x415d	                                 pop r13	      1205	charset.c	FUNCTION_32
0x400121d	            0x415e	                                 pop r14	      1205	charset.c	FUNCTION_32
0x400121f	            0x415f	                                 pop r15	      1205	charset.c	FUNCTION_32
0x4001221	      0xe96af4ffff	                       jmp sym.ptr2cells	      1075	charset.c	FUNCTION_32	IF_1
0x4001226	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1075	charset.c	FUNCTION_32	IF_1
0x4001230	    0x80ba00000000	                       cmp byte [rdx], 1	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_12
0x4001237	     0xf8e7b010000	                           jle 0x40013b8	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_12
0x400123d	    0x8bbd94020000	           mov edi, dword [rbp + 0x294] 	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x4001243	            0x85ff	                           test edi, edi	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x4001245	     0xf85a5020000	                           jne 0x40014f0	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x400124b	    0x488b05000000	            mov rax, qword [0x04001252] 	      1147	charset.c	FUNCTION_32	IF_10
0x4001252	          0x4531ff	                          xor r15d, r15d	      1056	charset.c	FUNCTION_32
0x4001255	      0xbb02000000	                              mov ebx, 2	      1147	charset.c	FUNCTION_32	IF_10
0x400125a	          0x803800	                       cmp byte [rax], 0	      1147	charset.c	FUNCTION_32	IF_10
0x400125d	     0xf84d9fdffff	                            je 0x400103c	      1147	charset.c	FUNCTION_32	IF_10
0x4001263	          0x4531e4	                          xor r12d, r12d	      1146	charset.c	FUNCTION_32
0x4001266	      0xbb02000000	                              mov ebx, 2	      1147	charset.c	FUNCTION_32	IF_10
0x400126b	      0xe9effdffff	                           jmp 0x400105f	      1147	charset.c	FUNCTION_32	IF_10
0x4001270	          0x4889ef	                            mov rdi, rbp	      1150	charset.c	FUNCTION_32	IF_10	CALL_14
0x4001273	        0x4c890424	                     mov qword [rsp], r8	      1150	charset.c	FUNCTION_32	IF_10	CALL_14
0x4001277	      0xe800000000	                          call 0x400127c	      1150	charset.c	FUNCTION_32	IF_10	CALL_14
0x400127c	    0x448ba5ac0000	           mov r12d, dword [rbp + 0xac] 	      1154	charset.c	FUNCTION_32	IF_10	IF_11
0x4001283	        0x468d0c38	                    lea r9d, [rax + r15]	      1153	charset.c	FUNCTION_32	IF_10
0x4001287	            0x89c1	                            mov ecx, eax	      1150	charset.c	FUNCTION_32	IF_10	CALL_14
0x4001289	        0x4c8b0424	                     mov r8, qword [rsp]	      1154	charset.c	FUNCTION_32	IF_10	IF_11
0x400128d	          0x4501f1	                           add r9d, r14d	      1153	charset.c	FUNCTION_32	IF_10
0x4001290	          0x4531f6	                          xor r14d, r14d	      1149	charset.c	FUNCTION_32	IF_10
0x4001293	          0x4539e1	                           cmp r9d, r12d	      1154	charset.c	FUNCTION_32	IF_10	IF_11
0x4001296	     0xf8d74010000	                           jge 0x4001410	      1154	charset.c	FUNCTION_32	IF_10	IF_11
0x400129c	          0x4585c9	                           test r9d, r9d	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x400129f	     0xf85cb000000	                           jne 0x4001370	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x40012a5	    0x488b3d000000	            mov rdi, qword [0x040012ac] 	      1176	charset.c	FUNCTION_32	IF_10	IF_17	IF_18
0x40012ac	          0x4531e4	                          xor r12d, r12d	      1175	charset.c	FUNCTION_32	IF_10	IF_17
0x40012af	          0x803f00	                       cmp byte [rdi], 0	      1176	charset.c	FUNCTION_32	IF_10	IF_17	IF_18
0x40012b2	     0xf8488000000	                            je 0x4001340	      1176	charset.c	FUNCTION_32	IF_10	IF_17	IF_18
0x40012b8	    0x8bb5ac000000	            mov esi, dword [rbp + 0xac] 	      1178	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x40012be	        0x418d041e	                    lea eax, [r14 + rbx]	      1178	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x40012c2	             0x1c8	                            add eax, ecx	      1178	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x40012c4	            0x39f0	                            cmp eax, esi	      1178	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x40012c6	     0xf8e9f020000	                           jle 0x400156b	      1178	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x40012cc	            0x89f0	                            mov eax, esi	      1181	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x40012ce	            0x31d2	                            xor edx, edx	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x40012d0	          0x4429f0	                           sub eax, r14d	      1181	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x40012d3	            0x29c8	                            sub eax, ecx	      1181	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x40012d5	          0x4585c9	                           test r9d, r9d	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x40012d8	            0x7408	                            je 0x40012e2	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x40012da	          0x4501ce	                           add r14d, r9d	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x40012dd	            0x89f2	                            mov edx, esi	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x40012df	          0x4429f2	                           sub edx, r14d	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x40012e2	            0x85c0	                           test eax, eax	      1183	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_20
0x40012e4	      0x4c89442408	                 mov qword [rsp + 8], r8	      1183	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_20
0x40012e9	        0x44890c24	                    mov dword [rsp], r9d	      1183	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_20
0x40012ed	           0xf45f0	                         cmovne esi, eax	      1183	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_20
0x40012f0	            0x89d8	                            mov eax, ebx	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_19
0x40012f2	            0x29d0	                            sub eax, edx	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_19
0x40012f4	              0x99	                                     cdq	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_19
0x40012f5	            0xf7fe	                                idiv esi	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_19
0x40012f7	      0xbeffffff7f	                     mov esi, 0x7fffffff	       778	charset.c	FUNCTION_14	CALL_1
0x40012fc	          0x4189d6	                           mov r14d, edx	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_19
0x40012ff	          0x4189c4	                           mov r12d, eax	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_19
0x4001302	      0xe800000000	                          call 0x4001307	       778	charset.c	FUNCTION_14	CALL_1
0x4001307	        0x440fafe0	                          imul r12d, eax	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_19
0x400130b	          0x4585f6	                         test r14d, r14d	      1186	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_21
0x400130e	        0x448b0c24	                    mov r9d, dword [rsp]	      1186	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_21
0x4001312	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      1186	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_21
0x4001317	            0x7427	                            je 0x4001340	      1186	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_21
0x4001319	    0x488b3d000000	            mov rdi, qword [0x04001320] 	       778	charset.c	FUNCTION_14	CALL_1
0x4001320	      0xbeffffff7f	                     mov esi, 0x7fffffff	       778	charset.c	FUNCTION_14	CALL_1
0x4001325	      0xe800000000	                          call 0x400132a	       778	charset.c	FUNCTION_14	CALL_1
0x400132a	        0x448b0c24	                    mov r9d, dword [rsp]	       778	charset.c	FUNCTION_14	CALL_1
0x400132e	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       778	charset.c	FUNCTION_14	CALL_1
0x4001333	          0x4101c4	                           add r12d, eax	      1188	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_20
0x4001336	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1188	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_20
0x4001340	    0x8b85b4010000	           mov eax, dword [rbp + 0x1b4] 	      1193	charset.c	FUNCTION_32	IF_10	IF_17	IF_22
0x4001346	            0x85c0	                           test eax, eax	      1193	charset.c	FUNCTION_32	IF_10	IF_17	IF_22
0x4001348	            0x7546	                           jne 0x4001390	      1193	charset.c	FUNCTION_32	IF_10	IF_17	IF_22
0x400134a	          0x4401e3	                           add ebx, r12d	      1196	charset.c	FUNCTION_32	IF_10	IF_17
0x400134d	      0xb800000000	                              mov eax, 0	      1198	charset.c	FUNCTION_32	IF_10	IF_17	IF_23
0x4001352	          0x4585c9	                           test r9d, r9d	      1198	charset.c	FUNCTION_32	IF_10	IF_17	IF_23
0x4001355	        0x440f45e0	                        cmovne r12d, eax	      1198	charset.c	FUNCTION_32	IF_10	IF_17	IF_23
0x4001359	      0xe901fdffff	                           jmp 0x400105f	      1198	charset.c	FUNCTION_32	IF_10	IF_17	IF_23
0x400135e	            0x6690	                                     nop	      1198	charset.c	FUNCTION_32	IF_10	IF_17	IF_23
0x4001360	            0x89d8	                            mov eax, ebx	      1203	charset.c	FUNCTION_32
0x4001362	      0xe909fdffff	                           jmp 0x4001070	      1203	charset.c	FUNCTION_32
0x4001367	    0x660f1f840000	                    nop word [rax + rax]	      1203	charset.c	FUNCTION_32
0x4001370	        0x418d0419	                     lea eax, [r9 + rbx]	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x4001374	          0x4531e4	                          xor r12d, r12d	      1146	charset.c	FUNCTION_32
0x4001377	          0x4401f0	                           add eax, r14d	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x400137a	    0x3b85ac000000	            cmp eax, dword [rbp + 0xac] 	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x4001380	     0xf8ed9fcffff	                           jle 0x400105f	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x4001386	      0xe91affffff	                           jmp 0x40012a5	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x400138b	       0xf1f440000	                   nop dword [rax + rax]	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x4001390	          0x4c89ee	                            mov rsi, r13	      1194	charset.c	FUNCTION_32	IF_10	IF_17	CALL_22
0x4001393	          0x4889ef	                            mov rdi, rbp	      1194	charset.c	FUNCTION_32	IF_10	IF_17	CALL_22
0x4001396	      0x4c89442408	                 mov qword [rsp + 8], r8	      1194	charset.c	FUNCTION_32	IF_10	IF_17	CALL_22
0x400139b	        0x44890c24	                    mov dword [rsp], r9d	      1194	charset.c	FUNCTION_32	IF_10	IF_17	CALL_22
0x400139f	      0xe800000000	                          call 0x40013a4	      1194	charset.c	FUNCTION_32	IF_10	IF_17	CALL_22
0x40013a4	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      1194	charset.c	FUNCTION_32	IF_10	IF_17	CALL_22
0x40013a9	          0x4101c4	                           add r12d, eax	      1194	charset.c	FUNCTION_32	IF_10	IF_17	CALL_22
0x40013ac	        0x448b0c24	                    mov r9d, dword [rsp]	      1194	charset.c	FUNCTION_32	IF_10	IF_17	CALL_22
0x40013b0	            0xeb98	                           jmp 0x400134a	      1194	charset.c	FUNCTION_32	IF_10	IF_17	CALL_22
0x40013b2	    0x660f1f440000	                    nop word [rax + rax]	      1194	charset.c	FUNCTION_32	IF_10	IF_17	CALL_22
0x40013b8	          0x4531ff	                          xor r15d, r15d	      1056	charset.c	FUNCTION_32
0x40013bb	      0xbb02000000	                              mov ebx, 2	      1056	charset.c	FUNCTION_32
0x40013c0	      0xe96bfcffff	                           jmp 0x4001030	      1056	charset.c	FUNCTION_32
0x40013c5	           0xf1f00	                         nop dword [rax]	      1056	charset.c	FUNCTION_32
0x40013c8	        0x4883c428	                           add rsp, 0x28	      1205	charset.c	FUNCTION_32
0x40013cc	          0x4489f2	                           mov edx, r14d	      1073	charset.c	FUNCTION_32	IF_1	CALL_1
0x40013cf	          0x4c89e6	                            mov rsi, r12	      1073	charset.c	FUNCTION_32	IF_1	CALL_1
0x40013d2	              0x5b	                                 pop rbx	      1205	charset.c	FUNCTION_32
0x40013d3	          0x4889ef	                            mov rdi, rbp	      1073	charset.c	FUNCTION_32	IF_1	CALL_1
0x40013d6	          0x4c89c1	                             mov rcx, r8	      1073	charset.c	FUNCTION_32	IF_1	CALL_1
0x40013d9	              0x5d	                                 pop rbp	      1205	charset.c	FUNCTION_32
0x40013da	            0x415c	                                 pop r12	      1205	charset.c	FUNCTION_32
0x40013dc	            0x415d	                                 pop r13	      1205	charset.c	FUNCTION_32
0x40013de	            0x415e	                                 pop r14	      1205	charset.c	FUNCTION_32
0x40013e0	            0x415f	                                 pop r15	      1205	charset.c	FUNCTION_32
0x40013e2	      0xe9a9faffff	           jmp sym.win_nolbr_chartabsize	      1073	charset.c	FUNCTION_32	IF_1	CALL_1
0x40013e7	    0x660f1f840000	                    nop word [rax + rax]	      1073	charset.c	FUNCTION_32	IF_1	CALL_1
0x40013f0	        0x488b4508	                mov rax, qword [rbp + 8]	       835	charset.c	FUNCTION_17
0x40013f4	    0x488bb8a81500	          mov rdi, qword [rax + 0x15a8] 	       835	charset.c	FUNCTION_17
0x40013fb	            0x89f0	                            mov eax, esi	       835	charset.c	FUNCTION_17
0x40013fd	              0x99	                                     cdq	       835	charset.c	FUNCTION_17
0x40013fe	            0xf7ff	                                idiv edi	       835	charset.c	FUNCTION_17
0x4001400	            0x89f8	                            mov eax, edi	       835	charset.c	FUNCTION_17
0x4001402	            0x29d0	                            sub eax, edx	       835	charset.c	FUNCTION_17
0x4001404	      0xe9bffdffff	                           jmp 0x40011c8	       835	charset.c	FUNCTION_17
0x4001409	     0xf1f80000000	                         nop dword [rax]	       835	charset.c	FUNCTION_17
0x4001410	          0x4529e1	                           sub r9d, r12d	      1156	charset.c	FUNCTION_32	IF_10	IF_11
0x4001413	          0x4889ef	                            mov rdi, rbp	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_15
0x4001416	      0x4c89442410	              mov qword [rsp + 0x10], r8	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_15
0x400141b	        0x44890c24	                    mov dword [rsp], r9d	      1156	charset.c	FUNCTION_32	IF_10	IF_11
0x400141f	        0x89442408	                mov dword [rsp + 8], eax	      1156	charset.c	FUNCTION_32	IF_10	IF_11
0x4001423	      0xe800000000	                          call 0x4001428	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_15
0x4001428	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_15
0x400142c	        0x448b0c24	                    mov r9d, dword [rsp]	      1158	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x4001430	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      1158	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x4001435	            0x89cf	                            mov edi, ecx	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_15
0x4001437	            0x29c7	                            sub edi, eax	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_15
0x4001439	          0x4129fc	                           sub r12d, edi	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_15
0x400143c	          0x4585e4	                         test r12d, r12d	      1158	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x400143f	        0x400f9fc6	                                setg sil	      1158	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x4001443	          0x4539e1	                           cmp r9d, r12d	      1158	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x4001446	     0xf8cd4000000	                            jl 0x4001520	      1158	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x400144c	          0x4084f6	                           test sil, sil	      1158	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x400144f	     0xf84cb000000	                            je 0x4001520	      1158	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x4001455	          0x4489c8	                            mov eax, r9d	      1159	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x4001458	    0x488b3d000000	            mov rdi, qword [0x0400145f] 	      1160	charset.c	FUNCTION_32	IF_10	IF_11	IF_13
0x400145f	              0x99	                                     cdq	      1159	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x4001460	          0x41f7fc	                               idiv r12d	      1159	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x4001463	          0x803f00	                       cmp byte [rdi], 0	      1160	charset.c	FUNCTION_32	IF_10	IF_11	IF_13
0x4001466	          0x4189d1	                            mov r9d, edx	      1159	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x4001469	            0x7447	                            je 0x40014b2	      1160	charset.c	FUNCTION_32	IF_10	IF_11	IF_13
0x400146b	    0x8b1500000000	            mov edx, dword [0x04001471] 	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x4001471	      0x4c89442418	              mov qword [rsp + 0x18], r8	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x4001476	      0x4088742410	              mov byte [rsp + 0x10], sil	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x400147b	        0x894c2408	                mov dword [rsp + 8], ecx	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x400147f	        0x44890c24	                    mov dword [rsp], r9d	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x4001483	            0x85d2	                           test edx, edx	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x4001485	     0xf8504010000	                           jne 0x400158f	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x400148b	      0xe800000000	                          call 0x4001490	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x4001490	       0xfb6742410	           movzx esi, byte [rsp + 0x10] 	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x4001495	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x400149a	          0x4189c6	                           mov r14d, eax	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x400149d	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x40014a1	        0x448b0c24	                    mov r9d, dword [rsp]	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x40014a5	          0x4489c8	                            mov eax, r9d	      1164	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	IF_14
0x40014a8	          0x4429f0	                           sub eax, r14d	      1164	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	IF_14
0x40014ab	          0x4539f1	                           cmp r9d, r14d	      1164	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	IF_14
0x40014ae	        0x440f4dc8	                         cmovge r9d, eax	      1164	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	IF_14
0x40014b2	          0x4539e1	                           cmp r9d, r12d	      1166	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x40014b5	            0x7c7c	                            jl 0x4001533	      1166	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x40014b7	          0x4084f6	                           test sil, sil	      1166	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x40014ba	            0x7477	                            je 0x4001533	      1166	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x40014bc	          0x4489c8	                            mov eax, r9d	      1167	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x40014bf	              0x99	                                     cdq	      1167	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x40014c0	          0x41f7fc	                               idiv r12d	      1167	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x40014c3	          0x4189d1	                            mov r9d, edx	      1167	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x40014c6	          0x4889ef	                            mov rdi, rbp	      1171	charset.c	FUNCTION_32	IF_10	IF_11	CALL_18
0x40014c9	      0x4c89442410	              mov qword [rsp + 0x10], r8	      1171	charset.c	FUNCTION_32	IF_10	IF_11	CALL_18
0x40014ce	        0x894c2408	                mov dword [rsp + 8], ecx	      1171	charset.c	FUNCTION_32	IF_10	IF_11	CALL_18
0x40014d2	        0x44890c24	                    mov dword [rsp], r9d	      1171	charset.c	FUNCTION_32	IF_10	IF_11	CALL_18
0x40014d6	      0xe800000000	                          call 0x40014db	      1171	charset.c	FUNCTION_32	IF_10	IF_11	CALL_18
0x40014db	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      1171	charset.c	FUNCTION_32	IF_10	IF_11	CALL_18
0x40014df	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      1171	charset.c	FUNCTION_32	IF_10	IF_11	CALL_18
0x40014e4	        0x448b0c24	                    mov r9d, dword [rsp]	      1171	charset.c	FUNCTION_32	IF_10	IF_11	CALL_18
0x40014e8	            0x29c1	                            sub ecx, eax	      1171	charset.c	FUNCTION_32	IF_10	IF_11	CALL_18
0x40014ea	      0xe9adfdffff	                           jmp 0x400129c	      1171	charset.c	FUNCTION_32	IF_10	IF_11	CALL_18
0x40014ef	              0x90	                                     nop	      1171	charset.c	FUNCTION_32	IF_10	IF_11	CALL_18
0x40014f0	          0x4489f6	                           mov esi, r14d	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x40014f3	          0x4889ef	                            mov rdi, rbp	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x40014f6	        0x4c890424	                     mov qword [rsp], r8	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x40014fa	      0xe800000000	                          call 0x40014ff	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x40014ff	            0x85c0	                           test eax, eax	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x4001501	        0x4c8b0424	                     mov r8, qword [rsp]	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x4001505	     0xf84adfeffff	                            je 0x40013b8	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x400150b	    0x41bf01000000	                             mov r15d, 1	      1137	charset.c	FUNCTION_32	ELSE_1	IF_9
0x4001511	      0xbb03000000	                              mov ebx, 3	      1136	charset.c	FUNCTION_32	ELSE_1	IF_9
0x4001516	      0xe915fbffff	                           jmp 0x4001030	      1136	charset.c	FUNCTION_32	ELSE_1	IF_9
0x400151b	       0xf1f440000	                   nop dword [rax + rax]	      1136	charset.c	FUNCTION_32	ELSE_1	IF_9
0x4001520	    0x488b3d000000	            mov rdi, qword [0x04001527] 	      1160	charset.c	FUNCTION_32	IF_10	IF_11	IF_13
0x4001527	          0x4531f6	                          xor r14d, r14d	      1149	charset.c	FUNCTION_32	IF_10
0x400152a	          0x803f00	                       cmp byte [rdi], 0	      1160	charset.c	FUNCTION_32	IF_10	IF_11	IF_13
0x400152d	     0xf8538ffffff	                           jne 0x400146b	      1160	charset.c	FUNCTION_32	IF_10	IF_11	IF_13
0x4001533	          0x4585c9	                           test r9d, r9d	      1168	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x4001536	            0x7e8e	                           jle 0x40014c6	      1168	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x4001538	          0x4084f6	                           test sil, sil	      1168	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x400153b	            0x7489	                            je 0x40014c6	      1168	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x400153d	          0x4889ef	                            mov rdi, rbp	      1169	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x4001540	      0x4c89442410	              mov qword [rsp + 0x10], r8	      1169	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x4001545	        0x894c2408	                mov dword [rsp + 8], ecx	      1169	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x4001549	        0x44890c24	                    mov dword [rsp], r9d	      1169	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x400154d	      0xe800000000	                          call 0x4001552	      1169	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x4001552	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      1169	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x4001556	        0x448b0c24	                    mov r9d, dword [rsp]	      1169	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x400155a	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      1169	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x400155f	            0x89cf	                            mov edi, ecx	      1169	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x4001561	            0x29c7	                            sub edi, eax	      1169	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x4001563	          0x4101f9	                            add r9d, edi	      1169	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x4001566	      0xe95bffffff	                           jmp 0x40014c6	      1169	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x400156b	      0xbeffffff7f	                     mov esi, 0x7fffffff	       778	charset.c	FUNCTION_14	CALL_1
0x4001570	      0x4c89442408	                 mov qword [rsp + 8], r8	       778	charset.c	FUNCTION_14	CALL_1
0x4001575	        0x44890c24	                    mov dword [rsp], r9d	       778	charset.c	FUNCTION_14	CALL_1
0x4001579	      0xe800000000	                          call 0x400157e	       778	charset.c	FUNCTION_14	CALL_1
0x400157e	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       778	charset.c	FUNCTION_14	CALL_1
0x4001583	          0x4189c4	                           mov r12d, eax	       778	charset.c	FUNCTION_14	CALL_1
0x4001586	        0x448b0c24	                    mov r9d, dword [rsp]	       778	charset.c	FUNCTION_14	CALL_1
0x400158a	      0xe9b1fdffff	                           jmp 0x4001340	       778	charset.c	FUNCTION_14	CALL_1
0x400158f	      0xe800000000	                          call 0x4001594	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x4001594	        0x448b0c24	                    mov r9d, dword [rsp]	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x4001598	          0x4189c6	                           mov r14d, eax	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x400159b	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x400159f	       0xfb6742410	           movzx esi, byte [rsp + 0x10] 	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x40015a4	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x40015a9	      0xe9f7feffff	                           jmp 0x40014a5	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x40015ae	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      1126	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x40015b2	          0x4429f0	                           sub eax, r14d	      1126	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x40015b5	        0x428d1c38	                    lea ebx, [rax + r15]	      1126	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x40015b9	          0x4531ff	                          xor r15d, r15d	      1056	charset.c	FUNCTION_32
0x40015bc	      0xe96ffaffff	                           jmp 0x4001030	      1128	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x40015c1	          0x4889ef	                            mov rdi, rbp	      1107	charset.c	FUNCTION_32	IF_4	IF_5	CALL_6
0x40015c4	      0x4c89442408	                 mov qword [rsp + 8], r8	      1107	charset.c	FUNCTION_32	IF_4	IF_5	CALL_6
0x40015c9	          0x891424	                    mov dword [rsp], edx	      1107	charset.c	FUNCTION_32	IF_4	IF_5	CALL_6
0x40015cc	      0xe800000000	                          call 0x40015d1	      1107	charset.c	FUNCTION_32	IF_4	IF_5	CALL_6
0x40015d1	          0x8b1424	                    mov edx, dword [rsp]	      1107	charset.c	FUNCTION_32	IF_4	IF_5	CALL_6
0x40015d4	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      1108	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x40015d9	          0x8d0c02	                    lea ecx, [rdx + rax]	      1107	charset.c	FUNCTION_32	IF_4	IF_5	CALL_6
0x40015dc	            0x89d7	                            mov edi, edx	      1106	charset.c	FUNCTION_32	IF_4	IF_5
0x40015de	        0x89542418	             mov dword [rsp + 0x18], edx	      1106	charset.c	FUNCTION_32	IF_4	IF_5
0x40015e2	            0x85c9	                           test ecx, ecx	      1108	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x40015e4	     0xf8e5bfbffff	                           jle 0x4001145	      1108	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x40015ea	          0x4489f0	                           mov eax, r14d	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x40015ed	            0x29d0	                            sub eax, edx	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x40015ef	              0x99	                                     cdq	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x40015f0	            0xf7f9	                                idiv ecx	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x40015f2	          0x83c001	                              add eax, 1	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x40015f5	           0xfafc1	                           imul eax, ecx	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x40015f8	          0x4429f8	                           sub eax, r15d	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x40015fb	             0x1c7	                            add edi, eax	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x40015fd	        0x897c2418	             mov dword [rsp + 0x18], edi	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4001601	      0xe93ffbffff	                           jmp 0x4001145	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
vim_iswordp	CALL,1:WHILE,0:FOR,0:IF,0:functions,0:ELSE,0:DO,0:SWITCH,0	2
0x40008d0	    0x488b35000000	            mov rsi, qword [0x040008d7] 	       921	charset.c	FUNCTION_24	CALL_1
0x40008d7	            0xeba7	                 jmp sym.vim_iswordp_buf	       921	charset.c	FUNCTION_24	CALL_1
skiphex	CALL,1:WHILE,1:FOR,0:IF,0:functions,0:ELSE,0:DO,0:SWITCH,0	14
0x4001ff0	          0x4889f8	                            mov rax, rdi	      1586	charset.c	FUNCTION_44
0x4001ff3	            0xeb07	                           jmp 0x4001ffc	      1589	charset.c	FUNCTION_44	WHILE_1	CALL_1
0x4001ff5	           0xf1f00	                         nop dword [rax]	      1589	charset.c	FUNCTION_44	WHILE_1	CALL_1
0x4001ff8	        0x4883c001	                              add rax, 1	      1590	charset.c	FUNCTION_44	WHILE_1
0x4001ffc	           0xfb610	                   movzx edx, byte [rax]	      1589	charset.c	FUNCTION_44	WHILE_1	CALL_1
0x4001fff	            0x89d1	                            mov ecx, edx	      1589	charset.c	FUNCTION_44	WHILE_1	CALL_1
0x4002001	          0x83ea30	                           sub edx, 0x30	      1656	charset.c	FUNCTION_49
0x4002004	          0x83fa09	                              cmp edx, 9	      1656	charset.c	FUNCTION_49
0x4002007	            0x76ef	                           jbe 0x4001ff8	      1656	charset.c	FUNCTION_49
0x4002009	          0x83e1df	                     and ecx, 0xffffffdf	      1656	charset.c	FUNCTION_49
0x400200c	          0x83e941	                           sub ecx, 0x41	      1656	charset.c	FUNCTION_49
0x400200f	          0x80f905	                               cmp cl, 5	      1656	charset.c	FUNCTION_49
0x4002012	            0x76e4	                           jbe 0x4001ff8	      1656	charset.c	FUNCTION_49
0x4002014	            0xf3c3	                                     ret	      1592	charset.c	FUNCTION_44
getvcol	CALL,9:WHILE,0:FOR,2:IF,16:functions,0:ELSE,6:DO,0:SWITCH,0	240
0x4001850	            0x4157	                                push r15	      1278	charset.c	FUNCTION_35
0x4001852	            0x4156	                                push r14	      1278	charset.c	FUNCTION_35
0x4001854	            0x4155	                                push r13	      1278	charset.c	FUNCTION_35
0x4001856	            0x4154	                                push r12	      1278	charset.c	FUNCTION_35
0x4001858	          0x4989f5	                            mov r13, rsi	      1278	charset.c	FUNCTION_35
0x400185b	              0x55	                                push rbp	      1278	charset.c	FUNCTION_35
0x400185c	              0x53	                                push rbx	      1278	charset.c	FUNCTION_35
0x400185d	          0x4889fd	                            mov rbp, rdi	      1278	charset.c	FUNCTION_35
0x4001860	            0x31db	                            xor ebx, ebx	      1291	charset.c	FUNCTION_35	IF_1
0x4001862	        0x4883ec38	                           sub rsp, 0x38	      1278	charset.c	FUNCTION_35
0x4001866	        0x488b7f08	                mov rdi, qword [rdi + 8]	      1285	charset.c	FUNCTION_35
0x400186a	          0x488b36	                    mov rsi, qword [rsi]	      1289	charset.c	FUNCTION_35	CALL_1
0x400186d	      0x4889542408	                mov qword [rsp + 8], rdx	      1278	charset.c	FUNCTION_35
0x4001872	            0x31d2	                            xor edx, edx	      1289	charset.c	FUNCTION_35	CALL_1
0x4001874	        0x48890c24	                    mov qword [rsp], rcx	      1278	charset.c	FUNCTION_35
0x4001878	    0x64488b042528	                mov rax, qword fs:[0x28]	      1278	charset.c	FUNCTION_35
0x4001881	      0x4889442428	             mov qword [rsp + 0x28], rax	      1278	charset.c	FUNCTION_35
0x4001886	            0x31c0	                            xor eax, eax	      1278	charset.c	FUNCTION_35
0x4001888	      0x4c89442410	              mov qword [rsp + 0x10], r8	      1278	charset.c	FUNCTION_35
0x400188d	    0x4c8bb7a81500	          mov r14, qword [rdi + 0x15a8] 	      1285	charset.c	FUNCTION_35
0x4001894	      0xe800000000	                          call 0x4001899	      1289	charset.c	FUNCTION_35	CALL_1
0x4001899	          0x4989c4	                            mov r12, rax	      1289	charset.c	FUNCTION_35	CALL_1
0x400189c	        0x418b4508	                mov eax, dword [r13 + 8]	      1290	charset.c	FUNCTION_35	IF_1
0x40018a0	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      1290	charset.c	FUNCTION_35	IF_1
0x40018a5	            0x741f	                            je 0x40018c6	      1290	charset.c	FUNCTION_35	IF_1
0x40018a7	      0x41803c2400	                       cmp byte [r12], 0	      1296	charset.c	FUNCTION_35	ELSE_1	IF_2
0x40018ac	          0x4863d8	                         movsxd rbx, eax	      1296	charset.c	FUNCTION_35	ELSE_1	IF_2
0x40018af	     0xf84eb010000	                            je 0x4001aa0	      1296	charset.c	FUNCTION_35	ELSE_1	IF_2
0x40018b5	    0x8b0500000000	            mov eax, dword [0x040018bb] 	      1300	charset.c	FUNCTION_35	ELSE_1	IF_3
0x40018bb	          0x4c01e3	                            add rbx, r12	      1298	charset.c	FUNCTION_35	ELSE_1
0x40018be	            0x85c0	                           test eax, eax	      1300	charset.c	FUNCTION_35	ELSE_1	IF_3
0x40018c0	     0xf85f5010000	                           jne 0x4001abb	      1300	charset.c	FUNCTION_35	ELSE_1	IF_3
0x40018c6	    0x8b8534020000	           mov eax, dword [rbp + 0x234] 	      1312	charset.c	FUNCTION_35	IF_4
0x40018cc	            0x85c0	                           test eax, eax	      1312	charset.c	FUNCTION_35	IF_4
0x40018ce	            0x7478	                            je 0x4001948	      1312	charset.c	FUNCTION_35	IF_4
0x40018d0	    0x8b0500000000	            mov eax, dword [0x040018d6] 	      1312	charset.c	FUNCTION_35	IF_4
0x40018d6	            0x85c0	                           test eax, eax	      1312	charset.c	FUNCTION_35	IF_4
0x40018d8	            0x756e	                           jne 0x4001948	      1312	charset.c	FUNCTION_35	IF_4
0x40018da	          0x4d89e6	                            mov r14, r12	      1289	charset.c	FUNCTION_35	CALL_1
0x40018dd	          0x4531ff	                          xor r15d, r15d	      1289	charset.c	FUNCTION_35	CALL_1
0x40018e0	            0xeb09	                           jmp 0x40018eb	      1289	charset.c	FUNCTION_35	CALL_1
0x40018e2	    0x660f1f440000	                    nop word [rax + rax]	      1289	charset.c	FUNCTION_35	CALL_1
0x40018e8	          0x4901c6	                            add r14, rax	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x40018eb	      0x4c8d442424	                    lea r8, [rsp + 0x24]	      1376	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_6
0x40018f0	          0x4c89f2	                            mov rdx, r14	      1376	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_6
0x40018f3	          0x4489f9	                           mov ecx, r15d	      1376	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_6
0x40018f6	          0x4c89e6	                            mov rsi, r12	      1376	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_6
0x40018f9	          0x4889ef	                            mov rdi, rbp	      1376	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_6
0x40018fc	    0xc74424240000	               mov dword [rsp + 0x24], 0	      1375	charset.c	FUNCTION_35	ELSE_5	FOR_2
0x4001904	      0xe800000000	                          call 0x4001909	      1376	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_6
0x4001909	        0x41803e00	                       cmp byte [r14], 0	      1378	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_11
0x400190d	            0x89c2	                            mov edx, eax	      1376	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_6
0x400190f	     0xf8423010000	                            je 0x4001a38	      1378	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_11
0x4001915	          0x4885db	                           test rbx, rbx	      1384	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_12
0x4001918	            0x7409	                            je 0x4001923	      1384	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_12
0x400191a	          0x4939de	                            cmp r14, rbx	      1384	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_12
0x400191d	     0xf831a010000	                           jae 0x4001a3d	      1384	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_12
0x4001923	    0x8b3500000000	            mov esi, dword [0x04001929] 	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x4001929	          0x4101d7	                           add r15d, edx	      1387	charset.c	FUNCTION_35	ELSE_5	FOR_2
0x400192c	      0xb801000000	                              mov eax, 1	      1387	charset.c	FUNCTION_35	ELSE_5	FOR_2
0x4001931	            0x85f6	                           test esi, esi	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x4001933	            0x74b3	                            je 0x40018e8	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x4001935	          0x4c89f7	                            mov rdi, r14	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x4001938	    0xff1500000000	                 call qword [0x0400193e]	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x400193e	            0x4898	                                    cdqe	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x4001940	            0xeba6	                           jmp 0x40018e8	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x4001942	    0x660f1f440000	                    nop word [rax + rax]	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x4001948	    0x448bbd300200	          mov r15d, dword [rbp + 0x230] 	      1314	charset.c	FUNCTION_35	IF_4
0x400194f	          0x4585ff	                         test r15d, r15d	      1314	charset.c	FUNCTION_35	IF_4
0x4001952	            0x7586	                           jne 0x40018da	      1314	charset.c	FUNCTION_35	IF_4
0x4001954	    0x488b05000000	            mov rax, qword [0x0400195b] 	      1314	charset.c	FUNCTION_35	IF_4
0x400195b	          0x803800	                       cmp byte [rax], 0	      1314	charset.c	FUNCTION_35	IF_4
0x400195e	     0xf8576ffffff	                           jne 0x40018da	      1314	charset.c	FUNCTION_35	IF_4
0x4001964	    0x448b9db40100	          mov r11d, dword [rbp + 0x1b4] 	      1314	charset.c	FUNCTION_35	IF_4
0x400196b	          0x4585db	                         test r11d, r11d	      1314	charset.c	FUNCTION_35	IF_4
0x400196e	     0xf8566ffffff	                           jne 0x40018da	      1314	charset.c	FUNCTION_35	IF_4
0x4001974	    0xc74424240000	               mov dword [rsp + 0x24], 0	      1324	charset.c	FUNCTION_35	IF_4	FOR_1
0x400197c	      0x410fb60424	                   movzx eax, byte [r12]	      1326	charset.c	FUNCTION_35	IF_4	FOR_1
0x4001981	            0x85c0	                           test eax, eax	      1328	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x4001983	     0xf8436020000	                            je 0x4001bbf	      1328	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x4001989	      0x4489742418	            mov dword [rsp + 0x18], r14d	      1285	charset.c	FUNCTION_35
0x400198e	          0x4531ff	                          xor r15d, r15d	      1285	charset.c	FUNCTION_35
0x4001991	          0x4d89e6	                            mov r14, r12	      1285	charset.c	FUNCTION_35
0x4001994	            0xeb6c	                           jmp 0x4001a02	      1285	charset.c	FUNCTION_35
0x4001996	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1285	charset.c	FUNCTION_35
0x40019a0	    0x448b0d000000	            mov r9d, dword [0x040019a7] 	      1343	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	IF_8
0x40019a7	          0x4585c9	                           test r9d, r9d	      1343	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	IF_8
0x40019aa	            0x7409	                            je 0x40019b5	      1343	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	IF_8
0x40019ac	          0x83f87f	                           cmp eax, 0x7f	      1343	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	IF_8
0x40019af	     0xf8ffb010000	                            jg 0x4001bb0	      1343	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	IF_8
0x40019b5	     0xfb690000000	                   movzx edx, byte [rax]	      1346	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3
0x40019bc	          0x83e207	                              and edx, 7	      1346	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3
0x40019bf	          0x83fa02	                              cmp edx, 2	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x40019c2	     0xf8493010000	                            je 0x4001b5b	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x40019c8	          0x4885db	                           test rbx, rbx	      1363	charset.c	FUNCTION_35	IF_4	FOR_1	IF_10
0x40019cb	            0x7405	                            je 0x40019d2	      1363	charset.c	FUNCTION_35	IF_4	FOR_1	IF_10
0x40019cd	          0x4c39f3	                            cmp rbx, r14	      1363	charset.c	FUNCTION_35	IF_4	FOR_1	IF_10
0x40019d0	            0x766b	                           jbe 0x4001a3d	      1363	charset.c	FUNCTION_35	IF_4	FOR_1	IF_10
0x40019d2	    0x8b3d00000000	            mov edi, dword [0x040019d8] 	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x40019d8	          0x4101d7	                           add r15d, edx	      1366	charset.c	FUNCTION_35	IF_4	FOR_1
0x40019db	      0xb801000000	                              mov eax, 1	      1366	charset.c	FUNCTION_35	IF_4	FOR_1
0x40019e0	            0x85ff	                           test edi, edi	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x40019e2	            0x740b	                            je 0x40019ef	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x40019e4	          0x4c89f7	                            mov rdi, r14	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x40019e7	    0xff1500000000	                 call qword [0x040019ed]	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x40019ed	            0x4898	                                    cdqe	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x40019ef	          0x4901c6	                            add r14, rax	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x40019f2	    0xc74424240000	               mov dword [rsp + 0x24], 0	      1324	charset.c	FUNCTION_35	IF_4	FOR_1
0x40019fa	        0x410fb606	                   movzx eax, byte [r14]	      1326	charset.c	FUNCTION_35	IF_4	FOR_1
0x40019fe	            0x85c0	                           test eax, eax	      1328	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x4001a00	            0x7436	                            je 0x4001a38	      1328	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x4001a02	          0x83f809	                              cmp eax, 9	      1334	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x4001a05	     0xf843d010000	                            je 0x4001b48	      1334	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x4001a0b	    0x448b15000000	           mov r10d, dword [0x04001a12] 	      1339	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7
0x4001a12	          0x4585d2	                         test r10d, r10d	      1339	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7
0x4001a15	            0x7589	                           jne 0x40019a0	      1339	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7
0x4001a17	     0xfb690000000	                   movzx edx, byte [rax]	      1360	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	ELSE_4
0x4001a1e	          0x83e207	                              and edx, 7	      1360	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	ELSE_4
0x4001a21	          0x4885db	                           test rbx, rbx	      1363	charset.c	FUNCTION_35	IF_4	FOR_1	IF_10
0x4001a24	            0x7405	                            je 0x4001a2b	      1363	charset.c	FUNCTION_35	IF_4	FOR_1	IF_10
0x4001a26	          0x4c39f3	                            cmp rbx, r14	      1363	charset.c	FUNCTION_35	IF_4	FOR_1	IF_10
0x4001a29	            0x7612	                           jbe 0x4001a3d	      1363	charset.c	FUNCTION_35	IF_4	FOR_1	IF_10
0x4001a2b	          0x4101d7	                           add r15d, edx	      1366	charset.c	FUNCTION_35	IF_4	FOR_1
0x4001a2e	      0xb801000000	                              mov eax, 1	      1366	charset.c	FUNCTION_35	IF_4	FOR_1
0x4001a33	            0xebba	                           jmp 0x40019ef	      1366	charset.c	FUNCTION_35	IF_4	FOR_1
0x4001a35	           0xf1f00	                         nop dword [rax]	      1366	charset.c	FUNCTION_35	IF_4	FOR_1
0x4001a38	      0xba01000000	                              mov edx, 1	      1380	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_11
0x4001a3d	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1391	charset.c	FUNCTION_35	IF_13
0x4001a42	          0x4885c9	                           test rcx, rcx	      1391	charset.c	FUNCTION_35	IF_13
0x4001a45	            0x7409	                            je 0x4001a50	      1391	charset.c	FUNCTION_35	IF_13
0x4001a47	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      1392	charset.c	FUNCTION_35	IF_13
0x4001a4b	          0x4401f8	                           add eax, r15d	      1392	charset.c	FUNCTION_35	IF_13
0x4001a4e	            0x8901	                    mov dword [rcx], eax	      1392	charset.c	FUNCTION_35	IF_13
0x4001a50	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1393	charset.c	FUNCTION_35	IF_14
0x4001a55	          0x4885f6	                           test rsi, rsi	      1393	charset.c	FUNCTION_35	IF_14
0x4001a58	            0x7407	                            je 0x4001a61	      1393	charset.c	FUNCTION_35	IF_14
0x4001a5a	      0x418d4417ff	                lea eax, [r15 + rdx - 1]	      1394	charset.c	FUNCTION_35	IF_14
0x4001a5f	            0x8906	                    mov dword [rsi], eax	      1394	charset.c	FUNCTION_35	IF_14
0x4001a61	      0x48833c2400	                      cmp qword [rsp], 0	      1395	charset.c	FUNCTION_35	IF_15
0x4001a66	            0x7415	                            je 0x4001a7d	      1395	charset.c	FUNCTION_35	IF_15
0x4001a68	        0x41803e09	                       cmp byte [r14], 9	      1397	charset.c	FUNCTION_35	IF_15	IF_16
0x4001a6c	            0x746a	                            je 0x4001ad8	      1397	charset.c	FUNCTION_35	IF_15	IF_16
0x4001a6e	      0x448b542424	           mov r10d, dword [rsp + 0x24] 	      1406	charset.c	FUNCTION_35	IF_15	ELSE_6
0x4001a73	        0x488b0424	                    mov rax, qword [rsp]	      1406	charset.c	FUNCTION_35	IF_15	ELSE_6
0x4001a77	          0x4501fa	                          add r10d, r15d	      1406	charset.c	FUNCTION_35	IF_15	ELSE_6
0x4001a7a	          0x448910	                   mov dword [rax], r10d	      1406	charset.c	FUNCTION_35	IF_15	ELSE_6
0x4001a7d	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1408	charset.c	FUNCTION_35	ELSE_6
0x4001a82	    0x644833042528	                xor rax, qword fs:[0x28]	      1408	charset.c	FUNCTION_35	ELSE_6
0x4001a8b	     0xf857b010000	                           jne 0x4001c0c	      1408	charset.c	FUNCTION_35	ELSE_6
0x4001a91	        0x4883c438	                           add rsp, 0x38	      1408	charset.c	FUNCTION_35	ELSE_6
0x4001a95	              0x5b	                                 pop rbx	      1408	charset.c	FUNCTION_35	ELSE_6
0x4001a96	              0x5d	                                 pop rbp	      1408	charset.c	FUNCTION_35	ELSE_6
0x4001a97	            0x415c	                                 pop r12	      1408	charset.c	FUNCTION_35	ELSE_6
0x4001a99	            0x415d	                                 pop r13	      1408	charset.c	FUNCTION_35	ELSE_6
0x4001a9b	            0x415e	                                 pop r14	      1408	charset.c	FUNCTION_35	ELSE_6
0x4001a9d	            0x415f	                                 pop r15	      1408	charset.c	FUNCTION_35	ELSE_6
0x4001a9f	              0xc3	                                     ret	      1408	charset.c	FUNCTION_35	ELSE_6
0x4001aa0	    0x8b0500000000	            mov eax, dword [0x04001aa6] 	      1300	charset.c	FUNCTION_35	ELSE_1	IF_3
0x4001aa6	            0x31db	                            xor ebx, ebx	      1297	charset.c	FUNCTION_35	ELSE_1	IF_2
0x4001aa8	    0x41c745080000	                  mov dword [r13 + 8], 0	      1297	charset.c	FUNCTION_35	ELSE_1	IF_2
0x4001ab0	          0x4c01e3	                            add rbx, r12	      1298	charset.c	FUNCTION_35	ELSE_1
0x4001ab3	            0x85c0	                           test eax, eax	      1300	charset.c	FUNCTION_35	ELSE_1	IF_3
0x4001ab5	     0xf840bfeffff	                            je 0x40018c6	      1300	charset.c	FUNCTION_35	ELSE_1	IF_3
0x4001abb	          0x4889de	                            mov rsi, rbx	      1302	charset.c	FUNCTION_35	ELSE_1	IF_3
0x4001abe	          0x4c89e7	                            mov rdi, r12	      1302	charset.c	FUNCTION_35	ELSE_1	IF_3
0x4001ac1	    0xff1500000000	                 call qword [0x04001ac7]	      1302	charset.c	FUNCTION_35	ELSE_1	IF_3
0x4001ac7	            0x4898	                                    cdqe	      1302	charset.c	FUNCTION_35	ELSE_1	IF_3
0x4001ac9	          0x4829c3	                            sub rbx, rax	      1302	charset.c	FUNCTION_35	ELSE_1	IF_3
0x4001acc	      0xe9f5fdffff	                           jmp 0x40018c6	      1302	charset.c	FUNCTION_35	ELSE_1	IF_3
0x4001ad1	     0xf1f80000000	                         nop dword [rax]	      1302	charset.c	FUNCTION_35	ELSE_1	IF_3
0x4001ad8	    0xf60500000000	               test byte [0x04001adf], 1	      1398	charset.c	FUNCTION_35	IF_15	IF_16
0x4001adf	            0x748d	                            je 0x4001a6e	      1398	charset.c	FUNCTION_35	IF_15	IF_16
0x4001ae1	    0x8b8d34020000	           mov ecx, dword [rbp + 0x234] 	      1399	charset.c	FUNCTION_35	IF_15	IF_16
0x4001ae7	            0x85c9	                           test ecx, ecx	      1399	charset.c	FUNCTION_35	IF_15	IF_16
0x4001ae9	            0x7583	                           jne 0x4001a6e	      1399	charset.c	FUNCTION_35	IF_15	IF_16
0x4001aeb	        0x89542408	                mov dword [rsp + 8], edx	      1399	charset.c	FUNCTION_35	IF_15	IF_16
0x4001aef	      0xe800000000	                          call 0x4001af4	      1400	charset.c	FUNCTION_35	IF_15	IF_16	CALL_8
0x4001af4	            0x85c0	                           test eax, eax	      1400	charset.c	FUNCTION_35	IF_15	IF_16	CALL_8
0x4001af6	     0xf8572ffffff	                           jne 0x4001a6e	      1400	charset.c	FUNCTION_35	IF_15	IF_16	CALL_8
0x4001afc	    0x8b0500000000	            mov eax, dword [0x04001b02] 	      1401	charset.c	FUNCTION_35	IF_15	IF_16
0x4001b02	        0x8b542408	                mov edx, dword [rsp + 8]	      1401	charset.c	FUNCTION_35	IF_15	IF_16
0x4001b06	            0x85c0	                           test eax, eax	      1401	charset.c	FUNCTION_35	IF_15	IF_16
0x4001b08	            0x7427	                            je 0x4001b31	      1401	charset.c	FUNCTION_35	IF_15	IF_16
0x4001b0a	    0x488b05000000	            mov rax, qword [0x04001b11] 	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4001b11	          0x803865	                    cmp byte [rax], 0x65	      1401	charset.c	FUNCTION_35	IF_15	IF_16
0x4001b14	     0xf8454ffffff	                            je 0x4001a6e	      1401	charset.c	FUNCTION_35	IF_15	IF_16
0x4001b1a	    0x488b05000000	            mov rax, qword [0x04001b21] 	      1397	charset.c	FUNCTION_35	IF_15	IF_16
0x4001b21	        0x49394500	                    cmp qword [r13], rax	      1397	charset.c	FUNCTION_35	IF_15	IF_16
0x4001b25	     0xf84a4000000	                            je 0x4001bcf	      1397	charset.c	FUNCTION_35	IF_15	IF_16
0x4001b2b	     0xf8c3dffffff	                            jl 0x4001a6e	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4001b31	        0x488b3424	                    mov rsi, qword [rsp]	      1404	charset.c	FUNCTION_35	IF_15	IF_16
0x4001b35	      0x418d4417ff	                lea eax, [r15 + rdx - 1]	      1404	charset.c	FUNCTION_35	IF_15	IF_16
0x4001b3a	            0x8906	                    mov dword [rsi], eax	      1404	charset.c	FUNCTION_35	IF_15	IF_16
0x4001b3c	      0xe93cffffff	                           jmp 0x4001a7d	      1404	charset.c	FUNCTION_35	IF_15	IF_16
0x4001b41	     0xf1f80000000	                         nop dword [rax]	      1404	charset.c	FUNCTION_35	IF_15	IF_16
0x4001b48	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	      1335	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x4001b4c	          0x4489f8	                           mov eax, r15d	      1335	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x4001b4f	              0x99	                                     cdq	      1335	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x4001b50	            0xf7f9	                                idiv ecx	      1335	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x4001b52	            0x29d1	                            sub ecx, edx	      1335	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x4001b54	            0x89ca	                            mov edx, ecx	      1335	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x4001b56	      0xe96dfeffff	                           jmp 0x40019c8	      1335	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x4001b5b	    0x448b85940200	           mov r8d, dword [rbp + 0x294] 	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x4001b62	          0x4585c0	                           test r8d, r8d	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x4001b65	     0xf845dfeffff	                            je 0x40019c8	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x4001b6b	        0x410fb606	                   movzx eax, byte [r14]	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x4001b6f	    0x80b800000000	                       cmp byte [rax], 1	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x4001b76	     0xf8e4cfeffff	                           jle 0x40019c8	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x4001b7c	          0x4489fe	                           mov esi, r15d	      1352	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_4
0x4001b7f	          0x4889ef	                            mov rdi, rbp	      1352	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_4
0x4001b82	        0x8954241c	             mov dword [rsp + 0x1c], edx	      1352	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_4
0x4001b86	      0xe800000000	                          call 0x4001b8b	      1352	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_4
0x4001b8b	            0x85c0	                           test eax, eax	      1352	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_4
0x4001b8d	        0x8b54241c	            mov edx, dword [rsp + 0x1c] 	      1352	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_4
0x4001b91	     0xf8431feffff	                            je 0x40019c8	      1352	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_4
0x4001b97	    0xc74424240100	               mov dword [rsp + 0x24], 1	      1355	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9
0x4001b9f	      0xba03000000	                              mov edx, 3	      1354	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9
0x4001ba4	      0xe91ffeffff	                           jmp 0x40019c8	      1354	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9
0x4001ba9	     0xf1f80000000	                         nop dword [rax]	      1354	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9
0x4001bb0	          0x4c89f7	                            mov rdi, r14	      1344	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	CALL_2
0x4001bb3	      0xe800000000	                          call 0x4001bb8	      1344	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	CALL_2
0x4001bb8	            0x89c2	                            mov edx, eax	      1344	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	CALL_2
0x4001bba	      0xe900feffff	                           jmp 0x40019bf	      1344	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	CALL_2
0x4001bbf	          0x4d89e6	                            mov r14, r12	      1328	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x4001bc2	      0xba01000000	                              mov edx, 1	      1330	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x4001bc7	          0x4531ff	                          xor r15d, r15d	      1328	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x4001bca	      0xe96efeffff	                           jmp 0x4001a3d	      1328	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x4001bcf	    0x8b0500000000	            mov eax, dword [0x04001bd5] 	      1397	charset.c	FUNCTION_35	IF_15	IF_16
0x4001bd5	        0x41394508	                cmp dword [r13 + 8], eax	      1397	charset.c	FUNCTION_35	IF_15	IF_16
0x4001bd9	            0x7425	                            je 0x4001c00	      1397	charset.c	FUNCTION_35	IF_15	IF_16
0x4001bdb	     0xf8c8dfeffff	                            jl 0x4001a6e	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4001be1	    0x488b05000000	            mov rax, qword [0x04001be8] 	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4001be8	        0x49394508	                cmp qword [r13 + 8], rax	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4001bec	     0xf853fffffff	                           jne 0x4001b31	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4001bf2	      0xe977feffff	                           jmp 0x4001a6e	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4001bf7	    0x660f1f840000	                    nop word [rax + rax]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4001c00	    0x8b0500000000	            mov eax, dword [0x04001c06] 	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4001c06	        0x4139450c	              cmp dword [r13 + 0xc], eax	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4001c0a	            0xebcf	                           jmp 0x4001bdb	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4001c0c	      0xe800000000	                          call 0x4001c11	      1408	charset.c	FUNCTION_35	ELSE_6
backslash_halve_save	CALL,2:WHILE,0:FOR,0:IF,1:functions,0:ELSE,0:DO,0:SWITCH,0	16
0x4003070	              0x55	                                push rbp	      2090	charset.c	FUNCTION_64
0x4003071	              0x53	                                push rbx	      2090	charset.c	FUNCTION_64
0x4003072	          0x4889fb	                            mov rbx, rdi	      2090	charset.c	FUNCTION_64
0x4003075	        0x4883ec08	                              sub rsp, 8	      2090	charset.c	FUNCTION_64
0x4003079	      0xe800000000	                          call 0x400307e	      2093	charset.c	FUNCTION_64	CALL_1
0x400307e	          0x4889c5	                            mov rbp, rax	      2093	charset.c	FUNCTION_64	CALL_1
0x4003081	          0x4889d8	                            mov rax, rbx	      2093	charset.c	FUNCTION_64	CALL_1
0x4003084	          0x4885ed	                           test rbp, rbp	      2094	charset.c	FUNCTION_64	IF_1
0x4003087	            0x740b	                            je 0x4003094	      2094	charset.c	FUNCTION_64	IF_1
0x4003089	          0x4889ef	                            mov rdi, rbp	      2096	charset.c	FUNCTION_64	CALL_2
0x400308c	      0xe800000000	                          call 0x4003091	      2096	charset.c	FUNCTION_64	CALL_2
0x4003091	          0x4889e8	                            mov rax, rbp	      2097	charset.c	FUNCTION_64
0x4003094	        0x4883c408	                              add rsp, 8	      2098	charset.c	FUNCTION_64
0x4003098	              0x5b	                                 pop rbx	      2098	charset.c	FUNCTION_64
0x4003099	              0x5d	                                 pop rbp	      2098	charset.c	FUNCTION_64
0x400309a	              0xc3	                                     ret	      2098	charset.c	FUNCTION_64
buf_init_chartab	CALL,18:WHILE,7:FOR,3:IF,31:functions,0:ELSE,18:DO,0:SWITCH,0	404
0x4002450	            0x4157	                                push r15	        80	charset.c	FUNCTION_2
0x4002452	            0x4156	                                push r14	        80	charset.c	FUNCTION_2
0x4002454	            0x4155	                                push r13	        80	charset.c	FUNCTION_2
0x4002456	            0x4154	                                push r12	        80	charset.c	FUNCTION_2
0x4002458	          0x4989fc	                            mov r12, rdi	        80	charset.c	FUNCTION_2
0x400245b	              0x55	                                push rbp	        80	charset.c	FUNCTION_2
0x400245c	              0x53	                                push rbx	        80	charset.c	FUNCTION_2
0x400245d	        0x4883ec28	                           sub rsp, 0x28	        80	charset.c	FUNCTION_2
0x4002461	    0x8b3d00000000	            mov edi, dword [0x04002467] 	        80	charset.c	FUNCTION_2
0x4002467	    0x64488b042528	                mov rax, qword fs:[0x28]	        80	charset.c	FUNCTION_2
0x4002470	      0x4889442418	             mov qword [rsp + 0x18], rax	        80	charset.c	FUNCTION_2
0x4002475	            0x31c0	                            xor eax, eax	        80	charset.c	FUNCTION_2
0x4002477	            0x85f6	                           test esi, esi	        88	charset.c	FUNCTION_2	IF_1
0x4002479	     0xf8411010000	                            je 0x4002590	        88	charset.c	FUNCTION_2	IF_1
0x400247f	    0x8b0500000000	            mov eax, dword [0x04002485] 	        88	charset.c	FUNCTION_2	IF_1
0x4002485	      0xba00000000	                              mov edx, 0	        88	charset.c	FUNCTION_2	IF_1
0x400248a	          0x83e004	                              and eax, 4	        88	charset.c	FUNCTION_2	IF_1
0x400248d	          0x83f801	                              cmp eax, 1	        88	charset.c	FUNCTION_2	IF_1
0x4002490	      0xb800000000	                              mov eax, 0	        88	charset.c	FUNCTION_2	IF_1
0x4002495	            0x19c9	                            sbb ecx, ecx	        88	charset.c	FUNCTION_2	IF_1
0x4002497	          0x83e1fe	                     and ecx, 0xfffffffe	        88	charset.c	FUNCTION_2	IF_1
0x400249a	          0x83c104	                              add ecx, 4	        88	charset.c	FUNCTION_2	IF_1
0x400249d	           0xf1f00	                         nop dword [rax]	        88	charset.c	FUNCTION_2	IF_1
0x40024a0	            0x880a	                      mov byte [rdx], cl	       100	charset.c	FUNCTION_2	IF_1	WHILE_1
0x40024a2	        0x4883c201	                              add rdx, 1	       100	charset.c	FUNCTION_2	IF_1	WHILE_1
0x40024a6	          0x4839d0	                            cmp rax, rdx	        99	charset.c	FUNCTION_2	IF_1	WHILE_1
0x40024a9	            0x75f5	                           jne 0x40024a0	        99	charset.c	FUNCTION_2	IF_1	WHILE_1
0x40024ab	      0xba00000000	                              mov edx, 0	        99	charset.c	FUNCTION_2	IF_1	WHILE_1
0x40024b0	          0xc60011	                    mov byte [rax], 0x11	       106	charset.c	FUNCTION_2	IF_1	WHILE_2	WHILE_3
0x40024b3	        0x4883c001	                              add rax, 1	       106	charset.c	FUNCTION_2	IF_1	WHILE_2	WHILE_3
0x40024b7	          0x4839c2	                            cmp rdx, rax	       104	charset.c	FUNCTION_2	IF_1	WHILE_2	WHILE_3
0x40024ba	            0x75f4	                           jne 0x40024b0	       104	charset.c	FUNCTION_2	IF_1	WHILE_2	WHILE_3
0x40024bc	    0x8b1d00000000	            mov ebx, dword [0x040024c2] 	       108	charset.c	FUNCTION_2	IF_1	IF_2
0x40024c2	      0xb87f000000	                           mov eax, 0x7f	       106	charset.c	FUNCTION_2	IF_1	WHILE_2	WHILE_3
0x40024c7	            0x85db	                           test ebx, ebx	       108	charset.c	FUNCTION_2	IF_1	IF_2
0x40024c9	     0xf8579040000	                           jne 0x4002948	       108	charset.c	FUNCTION_2	IF_1	IF_2
0x40024cf	    0x448b05000000	            mov r8d, dword [0x040024d6] 	       108	charset.c	FUNCTION_2	IF_1	IF_2
0x40024d6	    0x8b3d00000000	            mov edi, dword [0x040024dc] 	       108	charset.c	FUNCTION_2	IF_1	IF_2
0x40024dc	            0xeb19	                           jmp 0x40024f7	       108	charset.c	FUNCTION_2	IF_1	IF_2
0x40024de	            0x6690	                                     nop	       108	charset.c	FUNCTION_2	IF_1	IF_2
0x40024e0	            0x85ff	                           test edi, edi	       124	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5	CALL_1
0x40024e2	          0x4863d0	                         movsxd rdx, eax	       124	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5	CALL_1
0x40024e5	            0x7533	                           jne 0x400251a	       124	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5	CALL_1
0x40024e7	    0x888a00000000	                      mov byte [rdx], cl	       129	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_3
0x40024ed	          0x83c001	                              add eax, 1	       129	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_3
0x40024f0	      0x3d00010000	                          cmp eax, 0x100	       114	charset.c	FUNCTION_2	IF_1	WHILE_5
0x40024f5	            0x7440	                            je 0x4002537	       114	charset.c	FUNCTION_2	IF_1	WHILE_5
0x40024f7	          0x4585c0	                           test r8d, r8d	       118	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0x40024fa	            0x740b	                            je 0x4002507	       118	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0x40024fc	      0x3d9f000000	                           cmp eax, 0x9f	       118	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0x4002501	     0xf8f97050000	                            jg 0x4002a9e	       118	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0x4002507	    0x81ffcc260000	                         cmp edi, 0x26cc	       121	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x400250d	            0x75d1	                           jne 0x40024e0	       121	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x400250f	      0x3d8e000000	                           cmp eax, 0x8e	       121	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x4002514	     0xf8473050000	                            je 0x4002a8d	       121	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x400251a	          0x4863d0	                         movsxd rdx, eax	       124	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5	CALL_1
0x400251d	    0x80ba00000000	                       cmp byte [rdx], 2	       124	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5	CALL_1
0x4002524	            0x75c1	                           jne 0x40024e7	       124	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5	CALL_1
0x4002526	          0x83c001	                              add eax, 1	       125	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5
0x4002529	    0xc68200000000	                    mov byte [rdx], 0x12	       125	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5
0x4002530	      0x3d00010000	                          cmp eax, 0x100	       114	charset.c	FUNCTION_2	IF_1	WHILE_5
0x4002535	            0x75c0	                           jne 0x40024f7	       114	charset.c	FUNCTION_2	IF_1	WHILE_5
0x4002537	    0x448b1d000000	           mov r11d, dword [0x0400253e] 	       137	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x400253e	      0xba00000000	                              mov edx, 0	       137	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4002543	      0xb900000000	                              mov ecx, 0	       137	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4002548	      0xb801000000	                              mov eax, 1	       137	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x400254d	          0x4585db	                         test r11d, r11d	       137	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4002550	        0x410f95c0	                               setne r8b	       137	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4002554	            0xeb28	                           jmp 0x400257e	       137	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4002556	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       137	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4002560	          0x803901	                       cmp byte [rcx], 1	       135	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6	CALL_2
0x4002563	     0xf8ebf030000	                           jle 0x4002928	       135	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6	CALL_2
0x4002569	          0x800a40	                     or byte [rdx], 0x40	       138	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x400256c	          0x83c001	                              add eax, 1	       134	charset.c	FUNCTION_2	IF_1	FOR_1
0x400256f	        0x4883c201	                              add rdx, 1	       134	charset.c	FUNCTION_2	IF_1	FOR_1
0x4002573	        0x4883c101	                              add rcx, 1	       134	charset.c	FUNCTION_2	IF_1	FOR_1
0x4002577	      0x3d00010000	                          cmp eax, 0x100	       134	charset.c	FUNCTION_2	IF_1	FOR_1
0x400257c	            0x7412	                            je 0x4002590	       134	charset.c	FUNCTION_2	IF_1	FOR_1
0x400257e	            0x85ff	                           test edi, edi	       135	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6	CALL_2
0x4002580	            0x75de	                           jne 0x4002560	       135	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6	CALL_2
0x4002582	      0x3d9f000000	                           cmp eax, 0x9f	       137	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4002587	            0x7ee3	                           jle 0x400256c	       137	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4002589	          0x4584c0	                           test r8b, r8b	       137	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x400258c	            0x75db	                           jne 0x4002569	       137	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x400258e	            0xebdc	                           jmp 0x400256c	       137	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4002590	            0x85ff	                           test edi, edi	       147	charset.c	FUNCTION_2	IF_7
0x4002592	    0x49c78424a009	              mov qword [r12 + 0x9a0], 0	        90	string3.h	FUNCTION_69	CALL_6
0x400259e	    0x49c78424a809	              mov qword [r12 + 0x9a8], 0	        90	string3.h	FUNCTION_69	CALL_6
0x40025aa	    0x49c78424b009	              mov qword [r12 + 0x9b0], 0	        90	string3.h	FUNCTION_69	CALL_6
0x40025b6	    0x49c78424b809	              mov qword [r12 + 0x9b8], 0	        90	string3.h	FUNCTION_69	CALL_6
0x40025c2	            0x7443	                            je 0x4002607	       147	charset.c	FUNCTION_2	IF_7
0x40025c4	            0x31c0	                            xor eax, eax	       147	charset.c	FUNCTION_2	IF_7
0x40025c6	      0xbf01000000	                              mov edi, 1	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x40025cb	            0xeb0f	                           jmp 0x40025dc	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x40025cd	           0xf1f00	                         nop dword [rax]	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x40025d0	        0x4883c001	                              add rax, 1	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x40025d4	    0x483d00010000	                          cmp rax, 0x100	       148	charset.c	FUNCTION_2	IF_7	FOR_2
0x40025da	            0x742b	                            je 0x4002607	       148	charset.c	FUNCTION_2	IF_7	FOR_2
0x40025dc	    0x80b800000000	                       cmp byte [rax], 2	       151	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8	CALL_4
0x40025e3	            0x75eb	                           jne 0x40025d0	       151	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8	CALL_4
0x40025e5	            0x89c2	                            mov edx, eax	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x40025e7	            0x89c1	                            mov ecx, eax	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x40025e9	            0x89fb	                            mov ebx, edi	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x40025eb	          0xc1ea03	                              shr edx, 3	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x40025ee	          0x83e107	                              and ecx, 7	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x40025f1	        0x4883c001	                              add rax, 1	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x40025f5	            0xd3e3	                             shl ebx, cl	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x40025f7	    0x41089c14a009	         or byte [r12 + rdx + 0x9a0], bl	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x40025ff	    0x483d00010000	                          cmp rax, 0x100	       148	charset.c	FUNCTION_2	IF_7	FOR_2
0x4002605	            0x75d5	                           jne 0x40025dc	       148	charset.c	FUNCTION_2	IF_7	FOR_2
0x4002607	    0x458b94242015	         mov r10d, dword [r12 + 0x1520] 	       160	charset.c	FUNCTION_2	IF_9
0x400260f	          0x4585d2	                         test r10d, r10d	       160	charset.c	FUNCTION_2	IF_9
0x4002612	            0x7409	                            je 0x400261d	       160	charset.c	FUNCTION_2	IF_9
0x4002614	    0x41808c24a509	             or byte [r12 + 0x9a5], 0x20	       161	charset.c	FUNCTION_2	IF_9
0x400261d	          0x83fe01	                              cmp esi, 1	       168	charset.c	FUNCTION_2	FOR_3
0x4002620	            0x19ed	                            sbb ebp, ebp	       168	charset.c	FUNCTION_2	FOR_3
0x4002622	          0x83e503	                              and ebp, 3	       168	charset.c	FUNCTION_2	FOR_3
0x4002625	            0x85ed	                           test ebp, ebp	       170	charset.c	FUNCTION_2	FOR_3	IF_10
0x4002627	     0xf84a5040000	                            je 0x4002ad2	       170	charset.c	FUNCTION_2	FOR_3	IF_10
0x400262d	          0x83fd01	                              cmp ebp, 1	       172	charset.c	FUNCTION_2	FOR_3	ELSE_4	IF_11
0x4002630	     0xf848b040000	                            je 0x4002ac1	       172	charset.c	FUNCTION_2	FOR_3	ELSE_4	IF_11
0x4002636	          0x83fd02	                              cmp ebp, 2	       174	charset.c	FUNCTION_2	FOR_3	ELSE_5	IF_12
0x4002639	     0xf8471040000	                            je 0x4002ab0	       174	charset.c	FUNCTION_2	FOR_3	ELSE_5	IF_12
0x400263f	    0x498b8424b814	          mov rax, qword [r12 + 0x14b8] 	       177	charset.c	FUNCTION_2	FOR_3	ELSE_6
0x4002647	      0x4889442410	             mov qword [rsp + 0x10], rax	       177	charset.c	FUNCTION_2	FOR_3	ELSE_6
0x400264c	           0xfb610	                   movzx edx, byte [rax]	       177	charset.c	FUNCTION_2	FOR_3	ELSE_6
0x400264f	              0x90	                                     nop	       177	charset.c	FUNCTION_2	FOR_3	ELSE_6
0x4002650	            0x84d2	                             test dl, dl	       179	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x4002652	     0xf8422010000	                            je 0x400277a	       179	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x4002658	          0x4531f6	                          xor r14d, r14d	       181	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x400265b	          0x80fa5e	                            cmp dl, 0x5e	       183	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x400265e	     0xf846c020000	                            je 0x40028d0	       183	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x4002664	          0x83ea30	                           sub edx, 0x30	       188	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_14	CALL_5
0x4002667	          0x83fa09	                              cmp edx, 9	       188	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_14	CALL_5
0x400266a	     0xf8698010000	                           jbe 0x4002808	       188	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_14	CALL_5
0x4002670	    0x448b0d000000	            mov r9d, dword [0x04002677] 	       192	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_7	IF_15
0x4002677	          0x4585c9	                           test r9d, r9d	       192	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_7	IF_15
0x400267a	     0xf8578020000	                           jne 0x40028f8	       192	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_7	IF_15
0x4002680	        0x488d5001	                      lea rdx, [rax + 1]	       196	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8
0x4002684	      0x4889542410	             mov qword [rsp + 0x10], rdx	       196	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8
0x4002689	           0xfb618	                   movzx ebx, byte [rax]	       196	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8
0x400268c	           0xfb602	                   movzx eax, byte [rdx]	       198	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x400268f	            0x3c2d	                            cmp al, 0x2d	       198	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x4002691	     0xf848d010000	                            je 0x4002824	       198	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x4002697	          0x8d53ff	                      lea edx, [rbx - 1]	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x400269a	    0x81fafe000000	                           cmp edx, 0xfe	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40026a0	            0x7708	                            ja 0x40026aa	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40026a2	            0x84c0	                             test al, al	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40026a4	            0x742a	                            je 0x40026d0	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40026a6	            0x3c2c	                            cmp al, 0x2c	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40026a8	            0x7426	                            je 0x40026d0	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40026aa	            0x31c0	                            xor eax, eax	       213	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40026ac	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       308	charset.c	FUNCTION_2
0x40026b1	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       308	charset.c	FUNCTION_2
0x40026ba	     0xf85c8030000	                           jne 0x4002a88	       308	charset.c	FUNCTION_2
0x40026c0	        0x4883c428	                           add rsp, 0x28	       308	charset.c	FUNCTION_2
0x40026c4	              0x5b	                                 pop rbx	       308	charset.c	FUNCTION_2
0x40026c5	              0x5d	                                 pop rbp	       308	charset.c	FUNCTION_2
0x40026c6	            0x415c	                                 pop r12	       308	charset.c	FUNCTION_2
0x40026c8	            0x415d	                                 pop r13	       308	charset.c	FUNCTION_2
0x40026ca	            0x415e	                                 pop r14	       308	charset.c	FUNCTION_2
0x40026cc	            0x415f	                                 pop r15	       308	charset.c	FUNCTION_2
0x40026ce	              0xc3	                                     ret	       308	charset.c	FUNCTION_2
0x40026cf	              0x90	                                     nop	       308	charset.c	FUNCTION_2
0x40026d0	          0x4531ff	                          xor r15d, r15d	       182	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x40026d3	          0x83fb40	                           cmp ebx, 0x40	       223	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20	IF_21
0x40026d6	          0x4189dd	                           mov r13d, ebx	       223	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20	IF_21
0x40026d9	     0xf842f020000	                            je 0x400290e	       223	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20	IF_21
0x40026df	      0xbe01000000	                              mov esi, 1	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	ELSE_18
0x40026e4	            0xeb1e	                           jmp 0x4002704	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	ELSE_18
0x40026e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	ELSE_18
0x40026f0	            0x89c1	                            mov ecx, eax	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x40026f2	            0xf7d1	                                 not ecx	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x40026f4	    0x41208c14a009	        and byte [r12 + rdx + 0x9a0], cl	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x40026fc	          0x83c301	                              add ebx, 1	       296	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7
0x40026ff	          0x4439eb	                           cmp ebx, r13d	       232	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7
0x4002702	            0x7f46	                            jg 0x400274a	       232	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7
0x4002704	          0x4585ff	                         test r15d, r15d	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x4002707	     0xf8593000000	                           jne 0x40027a0	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x400270d	            0x85ed	                           test ebp, ebp	       243	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23
0x400270f	     0xf8475020000	                            je 0x400298a	       243	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23
0x4002715	          0x83fd01	                              cmp ebp, 1	       250	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25
0x4002718	     0xf84a0020000	                            je 0x40029be	       250	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25
0x400271e	          0x83fd02	                              cmp ebp, 2	       281	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28
0x4002721	     0xf8483020000	                            je 0x40029aa	       281	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28
0x4002727	            0x89d9	                            mov ecx, ebx	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x4002729	            0x89da	                            mov edx, ebx	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x400272b	            0x89f0	                            mov eax, esi	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x400272d	          0x83e107	                              and ecx, 7	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x4002730	          0xc1ea03	                              shr edx, 3	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x4002733	            0xd3e0	                             shl eax, cl	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x4002735	          0x4585f6	                         test r14d, r14d	       290	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x4002738	            0x75b6	                           jne 0x40026f0	       290	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x400273a	          0x83c301	                              add ebx, 1	       296	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7
0x400273d	    0x41088414a009	         or byte [r12 + rdx + 0x9a0], al	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	ELSE_18
0x4002745	          0x4439eb	                           cmp ebx, r13d	       232	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7
0x4002748	            0x7eba	                           jle 0x4002704	       232	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7
0x400274a	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       232	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7
0x400274f	        0x440fb63f	                  movzx r15d, byte [rdi]	       232	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7
0x4002753	      0xe800000000	                          call 0x4002758	       300	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	CALL_18
0x4002758	        0x4180ff2c	                          cmp r15b, 0x2c	       301	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_31
0x400275c	      0x4889442410	             mov qword [rsp + 0x10], rax	       300	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	CALL_18
0x4002761	           0xfb610	                   movzx edx, byte [rax]	       301	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_31
0x4002764	     0xf85e6feffff	                           jne 0x4002650	       301	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_31
0x400276a	            0x84d2	                             test dl, dl	       301	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_31
0x400276c	     0xf8438ffffff	                            je 0x40026aa	       301	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_31
0x4002772	            0x84d2	                             test dl, dl	       179	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x4002774	     0xf85defeffff	                           jne 0x4002658	       179	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x400277a	          0x83c501	                              add ebp, 1	       168	charset.c	FUNCTION_2	FOR_3
0x400277d	          0x83fd04	                              cmp ebp, 4	       168	charset.c	FUNCTION_2	FOR_3
0x4002780	     0xf859ffeffff	                           jne 0x4002625	       168	charset.c	FUNCTION_2	FOR_3
0x4002786	    0xc70500000000	               mov dword [0x04002790], 1	       306	charset.c	FUNCTION_2
0x4002790	      0xb801000000	                              mov eax, 1	       307	charset.c	FUNCTION_2
0x4002795	      0xe912ffffff	                           jmp 0x40026ac	       307	charset.c	FUNCTION_2
0x400279a	    0x660f1f440000	                    nop word [rax + rax]	       307	charset.c	FUNCTION_2
0x40027a0	            0x89df	                            mov edi, ebx	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x40027a2	        0x8974240c	              mov dword [rsp + 0xc], esi	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x40027a6	      0xe800000000	                          call 0x40027ab	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x40027ab	            0x85c0	                           test eax, eax	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x40027ad	        0x8b74240c	              mov esi, dword [rsp + 0xc]	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x40027b1	     0xf8556ffffff	                           jne 0x400270d	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x40027b7	            0x89df	                            mov edi, ebx	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x40027b9	      0xe800000000	                          call 0x40027be	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x40027be	            0x85c0	                           test eax, eax	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x40027c0	        0x8b74240c	              mov esi, dword [rsp + 0xc]	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x40027c4	     0xf8543ffffff	                           jne 0x400270d	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x40027ca	    0x8b3d00000000	            mov edi, dword [0x040027d0] 	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x40027d0	            0x85ff	                           test edi, edi	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x40027d2	     0xf8424ffffff	                            je 0x40026fc	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x40027d8	            0x89df	                            mov edi, ebx	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x40027da	      0xe800000000	                          call 0x40027df	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x40027df	            0x85c0	                           test eax, eax	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x40027e1	        0x8b74240c	              mov esi, dword [rsp + 0xc]	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x40027e5	     0xf8522ffffff	                           jne 0x400270d	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x40027eb	            0x89df	                            mov edi, ebx	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x40027ed	      0xe800000000	                          call 0x40027f2	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x40027f2	            0x85c0	                           test eax, eax	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x40027f4	        0x8b74240c	              mov esi, dword [rsp + 0xc]	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x40027f8	     0xf850fffffff	                           jne 0x400270d	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x40027fe	      0xe9f9feffff	                           jmp 0x40026fc	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x4002803	       0xf1f440000	                   nop dword [rax + rax]	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x4002808	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       189	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	CALL_6
0x400280d	      0xe800000000	                          call 0x4002812	       189	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	CALL_6
0x4002812	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       189	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	CALL_6
0x4002817	            0x89c3	                            mov ebx, eax	       189	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	CALL_6
0x4002819	           0xfb602	                   movzx eax, byte [rdx]	       198	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x400281c	            0x3c2d	                            cmp al, 0x2d	       198	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x400281e	     0xf8573feffff	                           jne 0x4002697	       198	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x4002824	        0x807a0100	                   cmp byte [rdx + 1], 0	       198	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x4002828	     0xf847cfeffff	                            je 0x40026aa	       198	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x400282e	        0x488d4201	                      lea rax, [rdx + 1]	       200	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x4002832	      0x4889442410	             mov qword [rsp + 0x10], rax	       200	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x4002837	         0xfb64201	               movzx eax, byte [rdx + 1]	       201	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	IF_17	CALL_8
0x400283b	          0x83e830	                           sub eax, 0x30	       201	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	IF_17	CALL_8
0x400283e	          0x83f809	                              cmp eax, 9	       201	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	IF_17	CALL_8
0x4002841	     0xf861f010000	                           jbe 0x4002966	       201	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	IF_17	CALL_8
0x4002847	    0x448b05000000	            mov r8d, dword [0x0400284e] 	       205	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_9	IF_18
0x400284e	          0x4585c0	                           test r8d, r8d	       205	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_9	IF_18
0x4002851	     0xf8521010000	                           jne 0x4002978	       205	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_9	IF_18
0x4002857	        0x488d4202	                      lea rax, [rdx + 2]	       209	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_10
0x400285b	      0x4889442410	             mov qword [rsp + 0x10], rax	       209	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_10
0x4002860	      0x440fb66a01	              movzx r13d, byte [rdx + 1]	       209	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_10
0x4002865	          0x8d43ff	                      lea eax, [rbx - 1]	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x4002868	      0x3dfe000000	                           cmp eax, 0xfe	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x400286d	     0xf8737feffff	                            ja 0x40026aa	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x4002873	          0x4439eb	                           cmp ebx, r13d	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x4002876	           0xf9fc2	                                 setg dl	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x4002879	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x400287d	           0xf95c0	                                setne al	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x4002880	            0x84c2	                             test dl, al	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x4002882	     0xf8522feffff	                           jne 0x40026aa	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x4002888	    0x4181fdff0000	                          cmp r13d, 0xff	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x400288f	     0xf8f15feffff	                            jg 0x40026aa	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x4002895	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x400289a	        0x440fb63f	                  movzx r15d, byte [rdi]	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x400289e	          0x4584ff	                         test r15b, r15b	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40028a1	            0x740a	                            je 0x40028ad	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40028a3	        0x4180ff2c	                          cmp r15b, 0x2c	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40028a7	     0xf85fdfdffff	                           jne 0x40026aa	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40028ad	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	       215	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20
0x40028b1	     0xf8419feffff	                            je 0x40026d0	       215	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20
0x40028b7	          0x4439eb	                           cmp ebx, r13d	       232	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7
0x40028ba	     0xf8f93feffff	                            jg 0x4002753	       232	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7
0x40028c0	          0x4531ff	                          xor r15d, r15d	       182	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x40028c3	      0xe917feffff	                           jmp 0x40026df	       182	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x40028c8	     0xf1f84000000	                   nop dword [rax + rax]	       182	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x40028d0	        0x80780100	                   cmp byte [rax + 1], 0	       183	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x40028d4	     0xf8496fdffff	                            je 0x4002670	       183	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x40028da	        0x488d4801	                      lea rcx, [rax + 1]	       186	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x40028de	    0x41be01000000	                             mov r14d, 1	       185	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x40028e4	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       186	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x40028e9	         0xfb65001	               movzx edx, byte [rax + 1]	       186	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x40028ed	          0x4889c8	                            mov rax, rcx	       186	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x40028f0	      0xe96ffdffff	                           jmp 0x4002664	       186	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x40028f5	           0xf1f00	                         nop dword [rax]	       186	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x40028f8	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       193	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_7	IF_15
0x40028fd	      0xe800000000	                          call 0x4002902	       193	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_7	IF_15
0x4002902	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       193	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_7	IF_15
0x4002907	            0x89c3	                            mov ebx, eax	       193	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_7	IF_15
0x4002909	      0xe97efdffff	                           jmp 0x400268c	       193	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_7	IF_15
0x400290e	    0x41bf01000000	                             mov r15d, 1	       225	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20	IF_21
0x4002914	    0x41bdff000000	                          mov r13d, 0xff	       227	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20	IF_21
0x400291a	      0xbb01000000	                              mov ebx, 1	       226	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20	IF_21
0x400291f	      0xe9bbfdffff	                           jmp 0x40026df	       226	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20	IF_21
0x4002924	         0xf1f4000	                         nop dword [rax]	       226	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20	IF_21
0x4002928	      0x3d8e000000	                           cmp eax, 0x8e	       136	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x400292d	     0xf854ffcffff	                           jne 0x4002582	       136	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4002933	    0x81ffcc260000	                         cmp edi, 0x26cc	       136	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4002939	     0xf8543fcffff	                           jne 0x4002582	       136	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x400293f	      0xe925fcffff	                           jmp 0x4002569	       136	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4002944	         0xf1f4000	                         nop dword [rax]	       136	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4002948	      0xb800000000	                              mov eax, 0	       136	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x400294d	           0xf1f00	                         nop dword [rax]	       136	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4002950	          0xc60211	                    mov byte [rdx], 0x11	       111	charset.c	FUNCTION_2	IF_1	IF_2	WHILE_4
0x4002953	        0x4883c201	                              add rdx, 1	       111	charset.c	FUNCTION_2	IF_1	IF_2	WHILE_4
0x4002957	          0x4839d0	                            cmp rax, rdx	       110	charset.c	FUNCTION_2	IF_1	IF_2	WHILE_4
0x400295a	            0x75f4	                           jne 0x4002950	       110	charset.c	FUNCTION_2	IF_1	IF_2	WHILE_4
0x400295c	      0xb8e1000000	                           mov eax, 0xe1	       111	charset.c	FUNCTION_2	IF_1	IF_2	WHILE_4
0x4002961	      0xe969fbffff	                           jmp 0x40024cf	       111	charset.c	FUNCTION_2	IF_1	IF_2	WHILE_4
0x4002966	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       202	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	CALL_9
0x400296b	      0xe800000000	                          call 0x4002970	       202	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	CALL_9
0x4002970	          0x4189c5	                           mov r13d, eax	       202	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	CALL_9
0x4002973	      0xe9edfeffff	                           jmp 0x4002865	       202	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	CALL_9
0x4002978	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       206	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_9	IF_18
0x400297d	      0xe800000000	                          call 0x4002982	       206	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_9	IF_18
0x4002982	          0x4189c5	                           mov r13d, eax	       206	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_9	IF_18
0x4002985	      0xe9dbfeffff	                           jmp 0x4002865	       206	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_9	IF_18
0x400298a	          0x4585f6	                         test r14d, r14d	       245	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	IF_24
0x400298d	          0x4863c3	                         movsxd rax, ebx	       246	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	IF_24
0x4002990	            0x740c	                            je 0x400299e	       245	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	IF_24
0x4002992	    0x80a000000000	                    and byte [rax], 0xdf	       246	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	IF_24
0x4002999	      0xe95efdffff	                           jmp 0x40026fc	       246	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	IF_24
0x400299e	    0x808800000000	                     or byte [rax], 0x20	       248	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	ELSE_12
0x40029a5	      0xe952fdffff	                           jmp 0x40026fc	       248	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	ELSE_12
0x40029aa	          0x4585f6	                         test r14d, r14d	       283	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	IF_29
0x40029ad	          0x4863c3	                         movsxd rax, ebx	       284	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	IF_29
0x40029b0	            0x745e	                            je 0x4002a10	       283	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	IF_29
0x40029b2	    0x80a000000000	                    and byte [rax], 0xbf	       284	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	IF_29
0x40029b9	      0xe93efdffff	                           jmp 0x40026fc	       284	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	IF_29
0x40029be	          0x8d43e0	                   lea eax, [rbx - 0x20]	       252	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26
0x40029c1	          0x83f85e	                           cmp eax, 0x5e	       252	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26
0x40029c4	            0x766a	                           jbe 0x4002a30	       252	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26
0x40029c6	    0x8b0d00000000	            mov ecx, dword [0x040029cc] 	       264	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_17
0x40029cc	          0x4863d3	                         movsxd rdx, ebx	       264	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_17
0x40029cf	            0x85c9	                           test ecx, ecx	       264	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_17
0x40029d1	            0x7549	                           jne 0x4002a1c	       264	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_17
0x40029d3	          0x4585f6	                         test r14d, r14d	       268	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x40029d6	     0xf8491000000	                            je 0x4002a6d	       268	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x40029dc	     0xfb68a000000	                   movzx ecx, byte [rdx]	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x40029e3	    0x8b0500000000	            mov eax, dword [0x040029e9] 	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x40029e9	          0x83e004	                              and eax, 4	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x40029ec	          0x83e1f8	                     and ecx, 0xfffffff8	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x40029ef	          0x83f801	                              cmp eax, 1	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x40029f2	            0x19c0	                            sbb eax, eax	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x40029f4	          0x83e0fe	                     and eax, 0xfffffffe	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x40029f7	        0x8d440804	                lea eax, [rax + rcx + 4]	       272	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x40029fb	          0x83e0ef	                     and eax, 0xffffffef	       272	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x40029fe	    0x888200000000	                      mov byte [rdx], al	       272	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x4002a04	      0xe9f3fcffff	                           jmp 0x40026fc	       272	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x4002a09	     0xf1f80000000	                         nop dword [rax]	       272	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x4002a10	    0x808800000000	                     or byte [rax], 0x40	       286	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	ELSE_16
0x4002a17	      0xe9e0fcffff	                           jmp 0x40026fc	       286	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	ELSE_16
0x4002a1c	    0x80ba00000000	                       cmp byte [rdx], 2	       264	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_17
0x4002a23	            0x75ae	                           jne 0x40029d3	       264	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_17
0x4002a25	      0xe9d2fcffff	                           jmp 0x40026fc	       264	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_17
0x4002a2a	    0x660f1f440000	                    nop word [rax + rax]	       264	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_17
0x4002a30	    0x8b0500000000	            mov eax, dword [0x04002a36] 	       257	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26
0x4002a36	            0x85c0	                           test eax, eax	       257	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26
0x4002a38	     0xf84befcffff	                            je 0x40026fc	       257	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26
0x4002a3e	            0x89df	                            mov edi, ebx	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_16
0x4002a40	        0x8974240c	              mov dword [rsp + 0xc], esi	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_16
0x4002a44	      0xe800000000	                          call 0x4002a49	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_16
0x4002a49	            0x85c0	                           test eax, eax	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_16
0x4002a4b	        0x8b74240c	              mov esi, dword [rsp + 0xc]	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_16
0x4002a4f	     0xf8571ffffff	                           jne 0x40029c6	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_16
0x4002a55	            0x89df	                            mov edi, ebx	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_16
0x4002a57	      0xe800000000	                          call 0x4002a5c	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_16
0x4002a5c	            0x85c0	                           test eax, eax	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_16
0x4002a5e	        0x8b74240c	              mov esi, dword [rsp + 0xc]	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_16
0x4002a62	     0xf855effffff	                           jne 0x40029c6	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_16
0x4002a68	      0xe98ffcffff	                           jmp 0x40026fc	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_16
0x4002a6d	     0xfb682000000	                   movzx eax, byte [rdx]	       277	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x4002a74	          0x83e0f8	                     and eax, 0xfffffff8	       277	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x4002a77	          0x83c001	                              add eax, 1	       277	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x4002a7a	          0x83c810	                            or eax, 0x10	       277	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x4002a7d	    0x888200000000	                      mov byte [rdx], al	       277	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x4002a83	      0xe974fcffff	                           jmp 0x40026fc	       277	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x4002a88	      0xe800000000	                          call 0x4002a8d	       308	charset.c	FUNCTION_2
0x4002a8d	    0xc60500000000	            mov byte [0x04002a94], 0x11 	       122	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x4002a94	      0xb88f000000	                           mov eax, 0x8f	       122	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x4002a99	      0xe959faffff	                           jmp 0x40024f7	       122	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x4002a9e	          0x4863d0	                         movsxd rdx, eax	       119	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0x4002aa1	          0x83c001	                              add eax, 1	       119	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0x4002aa4	    0xc68200000000	                    mov byte [rdx], 0x11	       119	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0x4002aab	      0xe940faffff	                           jmp 0x40024f0	       119	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0x4002ab0	    0x488b05000000	            mov rax, qword [0x04002ab7] 	       175	charset.c	FUNCTION_2	FOR_3	ELSE_5	IF_12
0x4002ab7	      0x4889442410	             mov qword [rsp + 0x10], rax	       175	charset.c	FUNCTION_2	FOR_3	ELSE_5	IF_12
0x4002abc	      0xe98bfbffff	                           jmp 0x400264c	       175	charset.c	FUNCTION_2	FOR_3	ELSE_5	IF_12
0x4002ac1	    0x488b05000000	            mov rax, qword [0x04002ac8] 	       173	charset.c	FUNCTION_2	FOR_3	ELSE_4	IF_11
0x4002ac8	      0x4889442410	             mov qword [rsp + 0x10], rax	       173	charset.c	FUNCTION_2	FOR_3	ELSE_4	IF_11
0x4002acd	      0xe97afbffff	                           jmp 0x400264c	       173	charset.c	FUNCTION_2	FOR_3	ELSE_4	IF_11
0x4002ad2	    0x488b05000000	            mov rax, qword [0x04002ad9] 	       171	charset.c	FUNCTION_2	FOR_3	IF_10
0x4002ad9	      0x4889442410	             mov qword [rsp + 0x10], rax	       171	charset.c	FUNCTION_2	FOR_3	IF_10
0x4002ade	      0xe969fbffff	                           jmp 0x400264c	       171	charset.c	FUNCTION_2	FOR_3	IF_10
skiptodigit	CALL,1:WHILE,1:FOR,0:IF,0:functions,0:ELSE,0:DO,0:SWITCH,0	14
0x4002050	           0xfb617	                   movzx edx, byte [rdi]	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x4002053	          0x4889f8	                            mov rax, rdi	      1613	charset.c	FUNCTION_46
0x4002056	          0x8d4ad0	                   lea ecx, [rdx - 0x30]	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x4002059	          0x80f909	                               cmp cl, 9	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x400205c	            0x7711	                            ja 0x400206f	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x400205e	            0xeb13	                           jmp 0x4002073	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x4002060	        0x4883c001	                              add rax, 1	      1617	charset.c	FUNCTION_46	WHILE_1
0x4002064	           0xfb610	                   movzx edx, byte [rax]	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x4002067	          0x8d4ad0	                   lea ecx, [rdx - 0x30]	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x400206a	          0x80f909	                               cmp cl, 9	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x400206d	            0x7604	                           jbe 0x4002073	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x400206f	            0x84d2	                             test dl, dl	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x4002071	            0x75ed	                           jne 0x4002060	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x4002073	            0xf3c3	                                     ret	      1619	charset.c	FUNCTION_46
backslash_halve	CALL,2:WHILE,0:FOR,1:IF,1:functions,0:ELSE,0:DO,0:SWITCH,0	30
0x4003010	           0xfb607	                   movzx eax, byte [rdi]	      2080	charset.c	FUNCTION_63	FOR_1
0x4003013	            0x84c0	                             test al, al	      2080	charset.c	FUNCTION_63	FOR_1
0x4003015	            0x742f	                            je 0x4003046	      2080	charset.c	FUNCTION_63	FOR_1
0x4003017	              0x55	                                push rbp	      2079	charset.c	FUNCTION_63
0x4003018	              0x53	                                push rbx	      2079	charset.c	FUNCTION_63
0x4003019	        0x488d5f01	                      lea rbx, [rdi + 1]	      2079	charset.c	FUNCTION_63
0x400301d	        0x4883ec08	                              sub rsp, 8	      2079	charset.c	FUNCTION_63
0x4003021	            0xeb10	                           jmp 0x4003033	      2079	charset.c	FUNCTION_63
0x4003023	       0xf1f440000	                   nop dword [rax + rax]	      2079	charset.c	FUNCTION_63
0x4003028	           0xfb603	                   movzx eax, byte [rbx]	      2079	charset.c	FUNCTION_63
0x400302b	        0x4883c301	                              add rbx, 1	      2079	charset.c	FUNCTION_63
0x400302f	            0x84c0	                             test al, al	      2080	charset.c	FUNCTION_63	FOR_1
0x4003031	            0x740d	                            je 0x4003040	      2080	charset.c	FUNCTION_63	FOR_1
0x4003033	            0x3c5c	                            cmp al, 0x5c	      2068	charset.c	FUNCTION_62
0x4003035	        0x488d6bff	                      lea rbp, [rbx - 1]	      2068	charset.c	FUNCTION_62
0x4003039	            0x75ed	                           jne 0x4003028	      2068	charset.c	FUNCTION_62
0x400303b	          0x803b00	                       cmp byte [rbx], 0	      2068	charset.c	FUNCTION_62
0x400303e	            0x7510	                           jne 0x4003050	      2068	charset.c	FUNCTION_62
0x4003040	        0x4883c408	                              add rsp, 8	      2083	charset.c	FUNCTION_63
0x4003044	              0x5b	                                 pop rbx	      2083	charset.c	FUNCTION_63
0x4003045	              0x5d	                                 pop rbp	      2083	charset.c	FUNCTION_63
0x4003046	            0xf3c3	                                     ret	      2083	charset.c	FUNCTION_63
0x4003048	     0xf1f84000000	                   nop dword [rax + rax]	      2083	charset.c	FUNCTION_63
0x4003050	          0x4889df	                            mov rdi, rbx	      2082	charset.c	FUNCTION_63	FOR_1	IF_1
0x4003053	      0xe800000000	                          call 0x4003058	      2082	charset.c	FUNCTION_63	FOR_1	IF_1
0x4003058	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_67	CALL_3
0x400305c	          0x4889de	                            mov rsi, rbx	        59	string3.h	FUNCTION_67	CALL_3
0x400305f	          0x4889ef	                            mov rdi, rbp	        59	string3.h	FUNCTION_67	CALL_3
0x4003062	      0xe800000000	                          call 0x4003067	        59	string3.h	FUNCTION_67	CALL_3
0x4003067	            0xebbf	                           jmp 0x4003028	        59	string3.h	FUNCTION_67	CALL_3
vim_isdigit	CALL,0:WHILE,0:FOR,0:IF,0:functions,0:ELSE,0:DO,0:SWITCH,0	5
0x40020d0	          0x83ef30	                           sub edi, 0x30	      1643	charset.c	FUNCTION_48
0x40020d3	            0x31c0	                            xor eax, eax	      1643	charset.c	FUNCTION_48
0x40020d5	          0x83ff09	                              cmp edi, 9	      1643	charset.c	FUNCTION_48
0x40020d8	           0xf96c0	                                setbe al	      1643	charset.c	FUNCTION_48
0x40020db	              0xc3	                                     ret	      1644	charset.c	FUNCTION_48
skiptowhite	CALL,0:WHILE,1:FOR,0:IF,0:functions,0:ELSE,0:DO,0:SWITCH,0	13
0x4002370	           0xfb617	                   movzx edx, byte [rdi]	      1790	charset.c	FUNCTION_55	WHILE_1
0x4002373	          0x4889f8	                            mov rax, rdi	      1789	charset.c	FUNCTION_55
0x4002376	          0xf6c2df	                           test dl, 0xdf	      1790	charset.c	FUNCTION_55	WHILE_1
0x4002379	            0x7511	                           jne 0x400238c	      1790	charset.c	FUNCTION_55	WHILE_1
0x400237b	            0xeb14	                           jmp 0x4002391	      1790	charset.c	FUNCTION_55	WHILE_1
0x400237d	           0xf1f00	                         nop dword [rax]	      1790	charset.c	FUNCTION_55	WHILE_1
0x4002380	        0x4883c001	                              add rax, 1	      1791	charset.c	FUNCTION_55	WHILE_1
0x4002384	           0xfb610	                   movzx edx, byte [rax]	      1790	charset.c	FUNCTION_55	WHILE_1
0x4002387	          0xf6c2df	                           test dl, 0xdf	      1790	charset.c	FUNCTION_55	WHILE_1
0x400238a	            0x7405	                            je 0x4002391	      1790	charset.c	FUNCTION_55	WHILE_1
0x400238c	          0x80fa09	                               cmp dl, 9	      1790	charset.c	FUNCTION_55	WHILE_1
0x400238f	            0x75ef	                           jne 0x4002380	      1790	charset.c	FUNCTION_55	WHILE_1
0x4002391	            0xf3c3	                                     ret	      1793	charset.c	FUNCTION_55
lbr_chartabsize_adv	CALL,2:WHILE,0:FOR,0:IF,0:functions,0:ELSE,0:DO,0:SWITCH,0	27
0x4001750	              0x55	                                push rbp	      1025	charset.c	FUNCTION_31
0x4001751	              0x53	                                push rbx	      1025	charset.c	FUNCTION_31
0x4001752	          0x4889f3	                            mov rbx, rsi	      1025	charset.c	FUNCTION_31
0x4001755	        0x4883ec08	                              sub rsp, 8	      1025	charset.c	FUNCTION_31
0x4001759	          0x488b36	                    mov rsi, qword [rsi]	      1028	charset.c	FUNCTION_31	CALL_1
0x400175c	      0xe800000000	                          call 0x4001761	      1028	charset.c	FUNCTION_31	CALL_1
0x4001761	            0x89c5	                            mov ebp, eax	      1028	charset.c	FUNCTION_31	CALL_1
0x4001763	    0x8b0500000000	            mov eax, dword [0x04001769] 	      1029	charset.c	FUNCTION_31	CALL_2
0x4001769	            0x85c0	                           test eax, eax	      1029	charset.c	FUNCTION_31	CALL_2
0x400176b	            0x7513	                           jne 0x4001780	      1029	charset.c	FUNCTION_31	CALL_2
0x400176d	      0xb801000000	                              mov eax, 1	      1029	charset.c	FUNCTION_31	CALL_2
0x4001772	          0x480103	                    add qword [rbx], rax	      1029	charset.c	FUNCTION_31	CALL_2
0x4001775	        0x4883c408	                              add rsp, 8	      1031	charset.c	FUNCTION_31
0x4001779	            0x89e8	                            mov eax, ebp	      1031	charset.c	FUNCTION_31
0x400177b	              0x5b	                                 pop rbx	      1031	charset.c	FUNCTION_31
0x400177c	              0x5d	                                 pop rbp	      1031	charset.c	FUNCTION_31
0x400177d	              0xc3	                                     ret	      1031	charset.c	FUNCTION_31
0x400177e	            0x6690	                                     nop	      1031	charset.c	FUNCTION_31
0x4001780	          0x488b3b	                    mov rdi, qword [rbx]	      1029	charset.c	FUNCTION_31	CALL_2
0x4001783	    0xff1500000000	                 call qword [0x04001789]	      1029	charset.c	FUNCTION_31	CALL_2
0x4001789	            0x4898	                                    cdqe	      1029	charset.c	FUNCTION_31	CALL_2
0x400178b	          0x480103	                    add qword [rbx], rax	      1029	charset.c	FUNCTION_31	CALL_2
0x400178e	        0x4883c408	                              add rsp, 8	      1031	charset.c	FUNCTION_31
0x4001792	            0x89e8	                            mov eax, ebp	      1031	charset.c	FUNCTION_31
0x4001794	              0x5b	                                 pop rbx	      1031	charset.c	FUNCTION_31
0x4001795	              0x5d	                                 pop rbp	      1031	charset.c	FUNCTION_31
0x4001796	              0xc3	                                     ret	      1031	charset.c	FUNCTION_31
in_win_border	CALL,2:WHILE,0:FOR,0:IF,4:functions,0:ELSE,0:DO,0:SWITCH,0	38
0x4000e30	            0x4154	                                push r12	      1245	charset.c	FUNCTION_34
0x4000e32	              0x55	                                push rbp	      1245	charset.c	FUNCTION_34
0x4000e33	              0x53	                                push rbx	      1245	charset.c	FUNCTION_34
0x4000e34	    0x8b9fac000000	            mov ebx, dword [rdi + 0xac] 	      1249	charset.c	FUNCTION_34	IF_1
0x4000e3a	            0x85db	                           test ebx, ebx	      1249	charset.c	FUNCTION_34	IF_1
0x4000e3c	            0x750a	                           jne 0x4000e48	      1249	charset.c	FUNCTION_34	IF_1
0x4000e3e	            0x31c0	                            xor eax, eax	      1250	charset.c	FUNCTION_34	IF_1
0x4000e40	              0x5b	                                 pop rbx	      1260	charset.c	FUNCTION_34
0x4000e41	              0x5d	                                 pop rbp	      1260	charset.c	FUNCTION_34
0x4000e42	            0x415c	                                 pop r12	      1260	charset.c	FUNCTION_34
0x4000e44	              0xc3	                                     ret	      1260	charset.c	FUNCTION_34
0x4000e45	           0xf1f00	                         nop dword [rax]	      1260	charset.c	FUNCTION_34
0x4000e48	          0x4189f4	                           mov r12d, esi	      1260	charset.c	FUNCTION_34
0x4000e4b	          0x4889fd	                            mov rbp, rdi	      1260	charset.c	FUNCTION_34
0x4000e4e	      0xe800000000	                          call 0x4000e53	      1251	charset.c	FUNCTION_34	CALL_1
0x4000e53	            0x29c3	                            sub ebx, eax	      1251	charset.c	FUNCTION_34	CALL_1
0x4000e55	          0x8d43ff	                      lea eax, [rbx - 1]	      1252	charset.c	FUNCTION_34	IF_2
0x4000e58	          0x4439e0	                           cmp eax, r12d	      1252	charset.c	FUNCTION_34	IF_2
0x4000e5b	            0x7fe1	                            jg 0x4000e3e	      1252	charset.c	FUNCTION_34	IF_2
0x4000e5d	      0xb801000000	                              mov eax, 1	      1255	charset.c	FUNCTION_34	IF_3
0x4000e62	            0x74dc	                            je 0x4000e40	      1254	charset.c	FUNCTION_34	IF_3
0x4000e64	          0x4889ef	                            mov rdi, rbp	      1256	charset.c	FUNCTION_34	CALL_2
0x4000e67	      0xe800000000	                          call 0x4000e6c	      1256	charset.c	FUNCTION_34	CALL_2
0x4000e6c	          0x8d0c03	                    lea ecx, [rbx + rax]	      1256	charset.c	FUNCTION_34	CALL_2
0x4000e6f	            0x85c9	                           test ecx, ecx	      1257	charset.c	FUNCTION_34	IF_4
0x4000e71	            0x7ecb	                           jle 0x4000e3e	      1257	charset.c	FUNCTION_34	IF_4
0x4000e73	          0x4489e0	                           mov eax, r12d	      1259	charset.c	FUNCTION_34
0x4000e76	            0x29d8	                            sub eax, ebx	      1259	charset.c	FUNCTION_34
0x4000e78	              0x99	                                     cdq	      1259	charset.c	FUNCTION_34
0x4000e79	            0xf7f9	                                idiv ecx	      1259	charset.c	FUNCTION_34
0x4000e7b	          0x83e901	                              sub ecx, 1	      1259	charset.c	FUNCTION_34
0x4000e7e	            0x31c0	                            xor eax, eax	      1259	charset.c	FUNCTION_34
0x4000e80	              0x5b	                                 pop rbx	      1260	charset.c	FUNCTION_34
0x4000e81	              0x5d	                                 pop rbp	      1260	charset.c	FUNCTION_34
0x4000e82	            0x415c	                                 pop r12	      1260	charset.c	FUNCTION_34
0x4000e84	            0x39ca	                            cmp edx, ecx	      1259	charset.c	FUNCTION_34
0x4000e86	           0xf94c0	                                 sete al	      1259	charset.c	FUNCTION_34
0x4000e89	              0xc3	                                     ret	      1260	charset.c	FUNCTION_34
vim_str2nr	CALL,6:WHILE,4:FOR,1:IF,26:functions,0:ELSE,11:DO,0:SWITCH,0	263
0x4002b50	           0xfb607	                   movzx eax, byte [rdi]	      1878	charset.c	FUNCTION_59	IF_1
0x4002b53	            0x4157	                                push r15	      1871	charset.c	FUNCTION_59
0x4002b55	          0x4989fa	                            mov r10, rdi	      1871	charset.c	FUNCTION_59
0x4002b58	            0x4156	                                push r14	      1871	charset.c	FUNCTION_59
0x4002b5a	            0x4155	                                push r13	      1871	charset.c	FUNCTION_59
0x4002b5c	            0x4154	                                push r12	      1871	charset.c	FUNCTION_59
0x4002b5e	          0x4531e4	                          xor r12d, r12d	      1871	charset.c	FUNCTION_59
0x4002b61	              0x55	                                push rbp	      1871	charset.c	FUNCTION_59
0x4002b62	              0x53	                                push rbx	      1871	charset.c	FUNCTION_59
0x4002b63	      0x448b5c2438	           mov r11d, dword [rsp + 0x38] 	      1871	charset.c	FUNCTION_59
0x4002b68	            0x3c2d	                            cmp al, 0x2d	      1878	charset.c	FUNCTION_59	IF_1
0x4002b6a	     0xf84c0010000	                            je 0x4002d30	      1878	charset.c	FUNCTION_59	IF_1
0x4002b70	            0x31ed	                            xor ebp, ebp	      1873	charset.c	FUNCTION_59
0x4002b72	            0x3c30	                            cmp al, 0x30	      1885	charset.c	FUNCTION_59	IF_2
0x4002b74	     0xf847e000000	                            je 0x4002bf8	      1885	charset.c	FUNCTION_59	IF_2
0x4002b7a	          0x83f909	                              cmp ecx, 9	      1923	charset.c	FUNCTION_59	IF_7
0x4002b7d	     0xf84f5000000	                            je 0x4002c78	      1923	charset.c	FUNCTION_59	IF_7
0x4002b83	          0x83fd30	                           cmp ebp, 0x30	      1940	charset.c	FUNCTION_59	ELSE_4	IF_11
0x4002b86	     0xf84bc010000	                            je 0x4002d48	      1940	charset.c	FUNCTION_59	ELSE_4	IF_11
0x4002b8c	          0x83f90a	                            cmp ecx, 0xa	      1940	charset.c	FUNCTION_59	ELSE_4	IF_11
0x4002b8f	     0xf84b3010000	                            je 0x4002d48	      1940	charset.c	FUNCTION_59	ELSE_4	IF_11
0x4002b95	            0x85ed	                           test ebp, ebp	      1955	charset.c	FUNCTION_59	ELSE_6	IF_14
0x4002b97	     0xf8583020000	                           jne 0x4002e20	      1955	charset.c	FUNCTION_59	ELSE_6	IF_14
0x4002b9d	          0x83f90c	                            cmp ecx, 0xc	      1955	charset.c	FUNCTION_59	ELSE_6	IF_14
0x4002ba0	     0xf847a020000	                            je 0x4002e20	      1955	charset.c	FUNCTION_59	ELSE_6	IF_14
0x4002ba6	        0x418d4bff	                      lea ecx, [r11 - 1]	      1955	charset.c	FUNCTION_59	ELSE_6	IF_14
0x4002baa	    0x49bb98999999	          movabs r11, 0x1999999999999998	      1978	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x4002bb4	      0x498d5c0a01	                lea rbx, [r10 + rcx + 1]	      1978	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x4002bb9	            0x31c9	                            xor ecx, ecx	      1955	charset.c	FUNCTION_59	ELSE_6	IF_14
0x4002bbb	            0xeb1e	                           jmp 0x4002bdb	      1955	charset.c	FUNCTION_59	ELSE_6	IF_14
0x4002bbd	           0xf1f00	                         nop dword [rax]	      1955	charset.c	FUNCTION_59	ELSE_6	IF_14
0x4002bc0	        0x488d0c89	                  lea rcx, [rcx + rcx*4]	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x4002bc4	            0x4898	                                    cdqe	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x4002bc6	        0x488d0c48	                  lea rcx, [rax + rcx*2]	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x4002bca	        0x4983c201	                              add r10, 1	      1982	charset.c	FUNCTION_59	ELSE_8	WHILE_4
0x4002bce	          0x4939da	                            cmp r10, rbx	      1983	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_19
0x4002bd1	     0xf84e9020000	                            je 0x4002ec0	      1983	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_19
0x4002bd7	        0x410fb602	                   movzx eax, byte [r10]	      1983	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_19
0x4002bdb	          0x83e830	                           sub eax, 0x30	      1975	charset.c	FUNCTION_59	ELSE_8	WHILE_4	CALL_6
0x4002bde	          0x83f809	                              cmp eax, 9	      1975	charset.c	FUNCTION_59	ELSE_8	WHILE_4	CALL_6
0x4002be1	     0xf87d9020000	                            ja 0x4002ec0	      1975	charset.c	FUNCTION_59	ELSE_8	WHILE_4	CALL_6
0x4002be7	          0x4c39d9	                            cmp rcx, r11	      1978	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x4002bea	            0x76d4	                           jbe 0x4002bc0	      1978	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x4002bec	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1981	charset.c	FUNCTION_59	ELSE_8	WHILE_4	ELSE_9
0x4002bf3	            0xebd5	                           jmp 0x4002bca	      1981	charset.c	FUNCTION_59	ELSE_8	WHILE_4	ELSE_9
0x4002bf5	           0xf1f00	                         nop dword [rax]	      1981	charset.c	FUNCTION_59	ELSE_8	WHILE_4	ELSE_9
0x4002bf8	      0x410fb65a01	               movzx ebx, byte [r10 + 1]	      1885	charset.c	FUNCTION_59	IF_2
0x4002bfd	        0x448d6bc8	                  lea r13d, [rbx - 0x38]	      1885	charset.c	FUNCTION_59	IF_2
0x4002c01	        0x4180fd01	                             cmp r13b, 1	      1885	charset.c	FUNCTION_59	IF_2
0x4002c05	     0xf866fffffff	                           jbe 0x4002b7a	      1885	charset.c	FUNCTION_59	IF_2
0x4002c0b	          0x4585db	                         test r11d, r11d	      1886	charset.c	FUNCTION_59	IF_2
0x4002c0e	        0x410f94c5	                               sete r13b	      1886	charset.c	FUNCTION_59	IF_2
0x4002c12	        0x4183fb01	                             cmp r11d, 1	      1886	charset.c	FUNCTION_59	IF_2
0x4002c16	            0x7f09	                            jg 0x4002c21	      1886	charset.c	FUNCTION_59	IF_2
0x4002c18	          0x4584ed	                         test r13b, r13b	      1886	charset.c	FUNCTION_59	IF_2
0x4002c1b	     0xf8459ffffff	                            je 0x4002b7a	      1886	charset.c	FUNCTION_59	IF_2
0x4002c21	          0xf6c104	                              test cl, 4	      1889	charset.c	FUNCTION_59	IF_2	IF_3
0x4002c24	           0xfb6eb	                           movzx ebp, bl	      1888	charset.c	FUNCTION_59	IF_2
0x4002c27	     0xf859a020000	                           jne 0x4002ec7	      1889	charset.c	FUNCTION_59	IF_2	IF_3
0x4002c2d	          0xf6c101	                              test cl, 1	      1894	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x4002c30	     0xf8460010000	                            je 0x4002d96	      1894	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x4002c36	          0x4189de	                           mov r14d, ebx	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x4002c39	        0x4183e6df	                    and r14d, 0xffffffdf	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x4002c3d	        0x4180fe42	                          cmp r14b, 0x42	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x4002c41	     0xf854f010000	                           jne 0x4002d96	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x4002c47	      0x450fb67202	              movzx r14d, byte [r10 + 2]	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x4002c4c	          0x4589f7	                          mov r15d, r14d	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x4002c4f	        0x4183ee30	                          sub r14d, 0x30	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x4002c53	        0x4183fe01	                             cmp r14d, 1	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x4002c57	     0xf8739010000	                            ja 0x4002d96	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x4002c5d	        0x4183fb02	                             cmp r11d, 2	      1896	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x4002c61	            0x7f09	                            jg 0x4002c6c	      1896	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x4002c63	          0x4584ed	                         test r13b, r13b	      1896	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x4002c66	     0xf842a010000	                            je 0x4002d96	      1896	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x4002c6c	        0x4983c202	                              add r10, 2	      1898	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x4002c70	        0x410fb6c7	                         movzx eax, r15b	      1898	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x4002c74	         0xf1f4000	                         nop dword [rax]	      1898	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x4002c78	          0x83fd01	                              cmp ebp, 1	      1922	charset.c	FUNCTION_59
0x4002c7b	            0x19c9	                            sbb ecx, ecx	      1922	charset.c	FUNCTION_59
0x4002c7d	          0x83e1fe	                     and ecx, 0xfffffffe	      1922	charset.c	FUNCTION_59
0x4002c80	          0x83c103	                              add ecx, 3	      1922	charset.c	FUNCTION_59
0x4002c83	          0x4129cb	                           sub r11d, ecx	      1922	charset.c	FUNCTION_59
0x4002c86	            0x31c9	                            xor ecx, ecx	      1927	charset.c	FUNCTION_59	IF_7	IF_8
0x4002c88	      0x4b8d5c1a01	                lea rbx, [r10 + r11 + 1]	      1927	charset.c	FUNCTION_59	IF_7	IF_8
0x4002c8d	    0x49bbfeffffff	         movabs r11, 0x7ffffffffffffffe 	      1931	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x4002c97	            0xeb1d	                           jmp 0x4002cb6	      1931	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x4002c99	     0xf1f80000000	                         nop dword [rax]	      1931	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x4002ca0	          0x83e830	                           sub eax, 0x30	      1932	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x4002ca3	        0x4983c201	                              add r10, 1	      1935	charset.c	FUNCTION_59	IF_7	WHILE_1
0x4002ca7	            0x4898	                                    cdqe	      1932	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x4002ca9	          0x4939da	                            cmp r10, rbx	      1936	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_10
0x4002cac	        0x488d0c48	                  lea rcx, [rax + rcx*2]	      1932	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x4002cb0	            0x7426	                            je 0x4002cd8	      1936	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_10
0x4002cb2	        0x410fb602	                   movzx eax, byte [r10]	      1936	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_10
0x4002cb6	        0x448d68d0	                  lea r13d, [rax - 0x30]	      1928	charset.c	FUNCTION_59	IF_7	WHILE_1
0x4002cba	        0x4180fd01	                             cmp r13b, 1	      1928	charset.c	FUNCTION_59	IF_7	WHILE_1
0x4002cbe	            0x7718	                            ja 0x4002cd8	      1928	charset.c	FUNCTION_59	IF_7	WHILE_1
0x4002cc0	          0x4c39d9	                            cmp rcx, r11	      1931	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x4002cc3	            0x76db	                           jbe 0x4002ca0	      1931	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x4002cc5	        0x4983c201	                              add r10, 1	      1935	charset.c	FUNCTION_59	IF_7	WHILE_1
0x4002cc9	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1934	charset.c	FUNCTION_59	IF_7	WHILE_1	ELSE_3
0x4002cd0	          0x4939da	                            cmp r10, rbx	      1936	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_10
0x4002cd3	            0x75dd	                           jne 0x4002cb2	      1936	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_10
0x4002cd5	           0xf1f00	                         nop dword [rax]	      1936	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_10
0x4002cd8	          0x4885f6	                           test rsi, rsi	      1988	charset.c	FUNCTION_59	IF_20
0x4002cdb	            0x7402	                            je 0x4002cdf	      1988	charset.c	FUNCTION_59	IF_20
0x4002cdd	            0x892e	                    mov dword [rsi], ebp	      1989	charset.c	FUNCTION_59	IF_20
0x4002cdf	          0x4885d2	                           test rdx, rdx	      1990	charset.c	FUNCTION_59	IF_21
0x4002ce2	            0x7406	                            je 0x4002cea	      1990	charset.c	FUNCTION_59	IF_21
0x4002ce4	          0x4929fa	                            sub r10, rdi	      1991	charset.c	FUNCTION_59	IF_21
0x4002ce7	          0x448912	                   mov dword [rdx], r10d	      1991	charset.c	FUNCTION_59	IF_21
0x4002cea	          0x4d85c0	                             test r8, r8	      1992	charset.c	FUNCTION_59	IF_22
0x4002ced	            0x7417	                            je 0x4002d06	      1992	charset.c	FUNCTION_59	IF_22
0x4002cef	          0x4585e4	                         test r12d, r12d	      1994	charset.c	FUNCTION_59	IF_22	IF_23
0x4002cf2	            0x742c	                            je 0x4002d20	      1994	charset.c	FUNCTION_59	IF_22	IF_23
0x4002cf4	          0x4885c9	                           test rcx, rcx	      1997	charset.c	FUNCTION_59	IF_22	IF_23	IF_24
0x4002cf7	     0xf88fb000000	                            js 0x4002df8	      1997	charset.c	FUNCTION_59	IF_22	IF_23	IF_24
0x4002cfd	          0x4889c8	                            mov rax, rcx	      2000	charset.c	FUNCTION_59	IF_22	IF_23	ELSE_10
0x4002d00	          0x48f7d8	                                 neg rax	      2000	charset.c	FUNCTION_59	IF_22	IF_23	ELSE_10
0x4002d03	          0x498900	                     mov qword [r8], rax	      2000	charset.c	FUNCTION_59	IF_22	IF_23	ELSE_10
0x4002d06	          0x4d85c9	                             test r9, r9	      2009	charset.c	FUNCTION_59	IF_26
0x4002d09	            0x7403	                            je 0x4002d0e	      2009	charset.c	FUNCTION_59	IF_26
0x4002d0b	          0x498909	                     mov qword [r9], rcx	      2010	charset.c	FUNCTION_59	IF_26
0x4002d0e	              0x5b	                                 pop rbx	      2011	charset.c	FUNCTION_59
0x4002d0f	              0x5d	                                 pop rbp	      2011	charset.c	FUNCTION_59
0x4002d10	            0x415c	                                 pop r12	      2011	charset.c	FUNCTION_59
0x4002d12	            0x415d	                                 pop r13	      2011	charset.c	FUNCTION_59
0x4002d14	            0x415e	                                 pop r14	      2011	charset.c	FUNCTION_59
0x4002d16	            0x415f	                                 pop r15	      2011	charset.c	FUNCTION_59
0x4002d18	              0xc3	                                     ret	      2011	charset.c	FUNCTION_59
0x4002d19	     0xf1f80000000	                         nop dword [rax]	      2011	charset.c	FUNCTION_59
0x4002d20	          0x4885c9	                           test rcx, rcx	      2004	charset.c	FUNCTION_59	IF_22	ELSE_11	IF_25
0x4002d23	     0xf88e7000000	                            js 0x4002e10	      2004	charset.c	FUNCTION_59	IF_22	ELSE_11	IF_25
0x4002d29	          0x498908	                     mov qword [r8], rcx	      2006	charset.c	FUNCTION_59	IF_22	ELSE_11
0x4002d2c	            0xebd8	                           jmp 0x4002d06	      2006	charset.c	FUNCTION_59	IF_22	ELSE_11
0x4002d2e	            0x6690	                                     nop	      2006	charset.c	FUNCTION_59	IF_22	ELSE_11
0x4002d30	        0x4c8d5701	                      lea r10, [rdi + 1]	      1881	charset.c	FUNCTION_59	IF_1
0x4002d34	         0xfb64701	               movzx eax, byte [rdi + 1]	      1881	charset.c	FUNCTION_59	IF_1
0x4002d38	    0x41bc01000000	                             mov r12d, 1	      1880	charset.c	FUNCTION_59	IF_1
0x4002d3e	      0xe92dfeffff	                           jmp 0x4002b70	      1880	charset.c	FUNCTION_59	IF_1
0x4002d43	       0xf1f440000	                   nop dword [rax + rax]	      1880	charset.c	FUNCTION_59	IF_1
0x4002d48	        0x418d4bff	                      lea ecx, [r11 - 1]	      1880	charset.c	FUNCTION_59	IF_1
0x4002d4c	    0x49bbfeffffff	         movabs r11, 0x1ffffffffffffffe 	      1946	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x4002d56	      0x498d5c0a01	                lea rbx, [r10 + rcx + 1]	      1946	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x4002d5b	            0x31c9	                            xor ecx, ecx	      1940	charset.c	FUNCTION_59	ELSE_4	IF_11
0x4002d5d	            0xeb1b	                           jmp 0x4002d7a	      1940	charset.c	FUNCTION_59	ELSE_4	IF_11
0x4002d5f	              0x90	                                     nop	      1940	charset.c	FUNCTION_59	ELSE_4	IF_11
0x4002d60	          0x83e830	                           sub eax, 0x30	      1947	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x4002d63	            0x4898	                                    cdqe	      1947	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x4002d65	        0x488d0cc8	                  lea rcx, [rax + rcx*8]	      1947	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x4002d69	        0x4983c201	                              add r10, 1	      1950	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2
0x4002d6d	          0x4939da	                            cmp r10, rbx	      1951	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_13
0x4002d70	     0xf8462ffffff	                            je 0x4002cd8	      1951	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_13
0x4002d76	        0x410fb602	                   movzx eax, byte [r10]	      1951	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_13
0x4002d7a	        0x448d68d0	                  lea r13d, [rax - 0x30]	      1943	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2
0x4002d7e	        0x4180fd07	                             cmp r13b, 7	      1943	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2
0x4002d82	     0xf8750ffffff	                            ja 0x4002cd8	      1943	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2
0x4002d88	          0x4c39d9	                            cmp rcx, r11	      1946	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x4002d8b	            0x76d3	                           jbe 0x4002d60	      1946	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x4002d8d	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1949	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	ELSE_5
0x4002d94	            0xebd3	                           jmp 0x4002d69	      1949	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	ELSE_5
0x4002d96	            0x31ed	                            xor ebp, ebp	      1873	charset.c	FUNCTION_59
0x4002d98	          0xf6c102	                              test cl, 2	      1903	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5
0x4002d9b	     0xf84d9fdffff	                            je 0x4002b7a	      1903	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5
0x4002da1	        0x4183fb01	                             cmp r11d, 1	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x4002da5	     0xf84cffdffff	                            je 0x4002b7a	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x4002dab	          0x83eb30	                           sub ebx, 0x30	      1908	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x4002dae	          0x80fb07	                               cmp bl, 7	      1908	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x4002db1	     0xf87c3fdffff	                            ja 0x4002b7a	      1908	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x4002db7	        0x458d73fe	                     lea r14d, [r11 - 2]	      1908	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x4002dbb	          0x4c89d3	                            mov rbx, r10	      1908	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x4002dbe	          0x4d01d6	                            add r14, r10	      1908	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x4002dc1	            0xeb22	                           jmp 0x4002de5	      1908	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x4002dc3	       0xf1f440000	                   nop dword [rax + rax]	      1908	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x4002dc8	         0xfb66b02	               movzx ebp, byte [rbx + 2]	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x4002dcc	          0x4189ed	                           mov r13d, ebp	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x4002dcf	          0x83ed30	                           sub ebp, 0x30	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x4002dd2	          0x83fd09	                              cmp ebp, 9	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x4002dd5	            0x7713	                            ja 0x4002dea	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x4002dd7	        0x4883c301	                              add rbx, 1	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x4002ddb	        0x4180fd37	                          cmp r13b, 0x37	      1908	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x4002ddf	     0xf873b010000	                            ja 0x4002f20	      1908	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x4002de5	          0x4c39f3	                            cmp rbx, r14	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x4002de8	            0x75de	                           jne 0x4002dc8	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x4002dea	      0xbd30000000	                           mov ebp, 0x30	      1913	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1
0x4002def	      0xe986fdffff	                           jmp 0x4002b7a	      1913	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1
0x4002df4	         0xf1f4000	                         nop dword [rax]	      1913	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1
0x4002df8	    0x48b800000000	          movabs rax, 0x8000000000000000	      1998	charset.c	FUNCTION_59	IF_22	IF_23	IF_24
0x4002e02	          0x498900	                     mov qword [r8], rax	      1998	charset.c	FUNCTION_59	IF_22	IF_23	IF_24
0x4002e05	      0xe9fcfeffff	                           jmp 0x4002d06	      1998	charset.c	FUNCTION_59	IF_22	IF_23	IF_24
0x4002e0a	    0x660f1f440000	                    nop word [rax + rax]	      1998	charset.c	FUNCTION_59	IF_22	IF_23	IF_24
0x4002e10	    0x48b9ffffffff	         movabs rcx, 0x7fffffffffffffff 	      1998	charset.c	FUNCTION_59	IF_22	IF_23	IF_24
0x4002e1a	      0xe90affffff	                           jmp 0x4002d29	      1998	charset.c	FUNCTION_59	IF_22	IF_23	IF_24
0x4002e1f	              0x90	                                     nop	      1998	charset.c	FUNCTION_59	IF_22	IF_23	IF_24
0x4002e20	          0x83fd01	                              cmp ebp, 1	      1959	charset.c	FUNCTION_59	ELSE_6	IF_14	IF_15
0x4002e23	    0x48bbfeffffff	          movabs rbx, 0xffffffffffffffe 	      1963	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	IF_16
0x4002e2d	            0x19c9	                            sbb ecx, ecx	      1959	charset.c	FUNCTION_59	ELSE_6	IF_14	IF_15
0x4002e2f	          0x83e1fe	                     and ecx, 0xfffffffe	      1959	charset.c	FUNCTION_59	ELSE_6	IF_14	IF_15
0x4002e32	          0x83c103	                              add ecx, 3	      1959	charset.c	FUNCTION_59	ELSE_6	IF_14	IF_15
0x4002e35	          0x4129cb	                           sub r11d, ecx	      1959	charset.c	FUNCTION_59	ELSE_6	IF_14	IF_15
0x4002e38	            0x31c9	                            xor ecx, ecx	      1959	charset.c	FUNCTION_59	ELSE_6	IF_14	IF_15
0x4002e3a	      0x4f8d6c1a01	                lea r13, [r10 + r11 + 1]	      1959	charset.c	FUNCTION_59	ELSE_6	IF_14	IF_15
0x4002e3f	            0xeb1f	                           jmp 0x4002e60	      1959	charset.c	FUNCTION_59	ELSE_6	IF_14	IF_15
0x4002e41	     0xf1f80000000	                         nop dword [rax]	      1959	charset.c	FUNCTION_59	ELSE_6	IF_14	IF_15
0x4002e48	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1966	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	ELSE_7
0x4002e4f	        0x4983c201	                              add r10, 1	      1967	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3
0x4002e53	          0x4d39ea	                            cmp r10, r13	      1968	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	IF_17
0x4002e56	     0xf847cfeffff	                            je 0x4002cd8	      1968	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	IF_17
0x4002e5c	        0x410fb602	                   movzx eax, byte [r10]	      1968	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	IF_17
0x4002e60	        0x440fb6d8	                          movzx r11d, al	      1654	charset.c	FUNCTION_49
0x4002e64	        0x458d7bd0	                  lea r15d, [r11 - 0x30]	      1656	charset.c	FUNCTION_49
0x4002e68	        0x458d739f	                  lea r14d, [r11 - 0x61]	      1655	charset.c	FUNCTION_49
0x4002e6c	        0x4183ff09	                             cmp r15d, 9	      1656	charset.c	FUNCTION_49
0x4002e70	            0x773e	                            ja 0x4002eb0	      1656	charset.c	FUNCTION_49
0x4002e72	          0x4839d9	                            cmp rcx, rbx	      1963	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	IF_16
0x4002e75	            0x77d1	                            ja 0x4002e48	      1963	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	IF_16
0x4002e77	        0x48c1e104	                              shl rcx, 4	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x4002e7b	        0x4183fe05	                             cmp r14d, 5	      2020	charset.c	FUNCTION_60	IF_1
0x4002e7f	            0x770f	                            ja 0x4002e90	      2020	charset.c	FUNCTION_60	IF_1
0x4002e81	        0x4183eb57	                          sub r11d, 0x57	      2021	charset.c	FUNCTION_60	IF_1
0x4002e85	          0x4d63db	                        movsxd r11, r11d	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x4002e88	          0x4c01d9	                            add rcx, r11	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x4002e8b	            0xebc2	                           jmp 0x4002e4f	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x4002e8d	           0xf1f00	                         nop dword [rax]	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x4002e90	        0x458d73bf	                  lea r14d, [r11 - 0x41]	      2022	charset.c	FUNCTION_60	IF_2
0x4002e94	        0x418d43c9	                   lea eax, [r11 - 0x37]	      2023	charset.c	FUNCTION_60	IF_2
0x4002e98	        0x4183eb30	                          sub r11d, 0x30	      2023	charset.c	FUNCTION_60	IF_2
0x4002e9c	        0x4183fe05	                             cmp r14d, 5	      2023	charset.c	FUNCTION_60	IF_2
0x4002ea0	        0x440f46d8	                        cmovbe r11d, eax	      2023	charset.c	FUNCTION_60	IF_2
0x4002ea4	            0xebdf	                           jmp 0x4002e85	      2023	charset.c	FUNCTION_60	IF_2
0x4002ea6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2023	charset.c	FUNCTION_60	IF_2
0x4002eb0	          0x83e0df	                     and eax, 0xffffffdf	      1656	charset.c	FUNCTION_49
0x4002eb3	          0x83e841	                           sub eax, 0x41	      1656	charset.c	FUNCTION_49
0x4002eb6	            0x3c05	                               cmp al, 5	      1656	charset.c	FUNCTION_49
0x4002eb8	            0x76b8	                           jbe 0x4002e72	      1656	charset.c	FUNCTION_49
0x4002eba	      0xe919feffff	                           jmp 0x4002cd8	      1656	charset.c	FUNCTION_49
0x4002ebf	              0x90	                                     nop	      1656	charset.c	FUNCTION_49
0x4002ec0	            0x31ed	                            xor ebp, ebp	      1656	charset.c	FUNCTION_49
0x4002ec2	      0xe911feffff	                           jmp 0x4002cd8	      1656	charset.c	FUNCTION_49
0x4002ec7	          0x4189de	                           mov r14d, ebx	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x4002eca	        0x4183e6df	                    and r14d, 0xffffffdf	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x4002ece	        0x4180fe58	                          cmp r14b, 0x58	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x4002ed2	     0xf8555fdffff	                           jne 0x4002c2d	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x4002ed8	      0x450fb67202	              movzx r14d, byte [r10 + 2]	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x4002edd	          0x4589f7	                          mov r15d, r14d	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x4002ee0	        0x4183ee30	                          sub r14d, 0x30	      1656	charset.c	FUNCTION_49
0x4002ee4	        0x4183fe09	                             cmp r14d, 9	      1656	charset.c	FUNCTION_49
0x4002ee8	            0x7615	                           jbe 0x4002eff	      1656	charset.c	FUNCTION_49
0x4002eea	          0x4589fe	                          mov r14d, r15d	      1656	charset.c	FUNCTION_49
0x4002eed	        0x4183e6df	                    and r14d, 0xffffffdf	      1656	charset.c	FUNCTION_49
0x4002ef1	        0x4183ee41	                          sub r14d, 0x41	      1656	charset.c	FUNCTION_49
0x4002ef5	        0x4180fe05	                             cmp r14b, 5	      1656	charset.c	FUNCTION_49
0x4002ef9	     0xf8797feffff	                            ja 0x4002d96	      1656	charset.c	FUNCTION_49
0x4002eff	        0x4183fb02	                             cmp r11d, 2	      1891	charset.c	FUNCTION_59	IF_2	IF_3
0x4002f03	            0x7f09	                            jg 0x4002f0e	      1891	charset.c	FUNCTION_59	IF_2	IF_3
0x4002f05	          0x4584ed	                         test r13b, r13b	      1891	charset.c	FUNCTION_59	IF_2	IF_3
0x4002f08	     0xf8488feffff	                            je 0x4002d96	      1891	charset.c	FUNCTION_59	IF_2	IF_3
0x4002f0e	        0x4983c202	                              add r10, 2	      1893	charset.c	FUNCTION_59	IF_2	IF_3
0x4002f12	        0x410fb6c7	                         movzx eax, r15b	      1893	charset.c	FUNCTION_59	IF_2	IF_3
0x4002f16	      0xe95ffcffff	                           jmp 0x4002b7a	      1893	charset.c	FUNCTION_59	IF_2	IF_3
0x4002f1b	       0xf1f440000	                   nop dword [rax + rax]	      1893	charset.c	FUNCTION_59	IF_2	IF_3
0x4002f20	            0x31ed	                            xor ebp, ebp	      1873	charset.c	FUNCTION_59
0x4002f22	      0xe953fcffff	                           jmp 0x4002b7a	      1873	charset.c	FUNCTION_59
transstr	CALL,13:WHILE,2:FOR,0:IF,7:functions,0:ELSE,6:DO,0:SWITCH,0	148
0x4000c20	            0x4157	                                push r15	       360	charset.c	FUNCTION_4
0x4000c22	            0x4156	                                push r14	       360	charset.c	FUNCTION_4
0x4000c24	            0x4155	                                push r13	       360	charset.c	FUNCTION_4
0x4000c26	            0x4154	                                push r12	       360	charset.c	FUNCTION_4
0x4000c28	              0x55	                                push rbp	       360	charset.c	FUNCTION_4
0x4000c29	              0x53	                                push rbx	       360	charset.c	FUNCTION_4
0x4000c2a	          0x4889fb	                            mov rbx, rdi	       360	charset.c	FUNCTION_4
0x4000c2d	        0x4883ec28	                           sub rsp, 0x28	       360	charset.c	FUNCTION_4
0x4000c31	    0x8b3500000000	            mov esi, dword [0x04000c37] 	       369	charset.c	FUNCTION_4	IF_1
0x4000c37	    0x64488b042528	                mov rax, qword fs:[0x28]	       360	charset.c	FUNCTION_4
0x4000c40	      0x4889442418	             mov qword [rsp + 0x18], rax	       360	charset.c	FUNCTION_4
0x4000c45	            0x31c0	                            xor eax, eax	       360	charset.c	FUNCTION_4
0x4000c47	            0x85f6	                           test esi, esi	       369	charset.c	FUNCTION_4	IF_1
0x4000c49	     0xf84c1010000	                            je 0x4000e10	       369	charset.c	FUNCTION_4	IF_1
0x4000c4f	          0x4889fd	                            mov rbp, rdi	       369	charset.c	FUNCTION_4	IF_1
0x4000c52	          0x4531ed	                          xor r13d, r13d	       369	charset.c	FUNCTION_4	IF_1
0x4000c55	          0x4989e6	                            mov r14, rsp	       385	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_2
0x4000c58	     0xf1f84000000	                   nop dword [rax + rax]	       385	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_2
0x4000c60	        0x807d0000	                       cmp byte [rbp], 0	       375	charset.c	FUNCTION_4	IF_1	WHILE_1
0x4000c64	            0x7440	                            je 0x4000ca6	       375	charset.c	FUNCTION_4	IF_1	WHILE_1
0x4000c66	          0x4889ef	                            mov rdi, rbp	       377	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000c69	    0xff1500000000	                 call qword [0x04000c6f]	       377	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000c6f	          0x83f801	                              cmp eax, 1	       377	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000c72	          0x4189c4	                           mov r12d, eax	       377	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000c75	     0xf8eb5000000	                           jle 0x4000d30	       377	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000c7b	          0x4889ef	                            mov rdi, rbp	       379	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000c7e	    0xff1500000000	                 call qword [0x04000c84]	       379	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000c84	          0x4189c7	                           mov r15d, eax	       379	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000c87	          0x4963c4	                        movsxd rax, r12d	       380	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000c8a	          0x4489ff	                           mov edi, r15d	       381	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3	CALL_1
0x4000c8d	          0x4801c5	                            add rbp, rax	       380	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000c90	      0xe800000000	                          call 0x4000c95	       381	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3	CALL_1
0x4000c95	            0x85c0	                           test eax, eax	       381	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3	CALL_1
0x4000c97	     0xf8423010000	                            je 0x4000dc0	       381	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3	CALL_1
0x4000c9d	          0x4501e5	                          add r13d, r12d	       382	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3
0x4000ca0	        0x807d0000	                       cmp byte [rbp], 0	       375	charset.c	FUNCTION_4	IF_1	WHILE_1
0x4000ca4	            0x75c0	                           jne 0x4000c66	       375	charset.c	FUNCTION_4	IF_1	WHILE_1
0x4000ca6	        0x418d7d01	                      lea edi, [r13 + 1]	       398	charset.c	FUNCTION_4	IF_1	CALL_5
0x4000caa	      0xe800000000	                          call 0x4000caf	       398	charset.c	FUNCTION_4	IF_1	CALL_5
0x4000caf	          0x4989c4	                            mov r12, rax	       398	charset.c	FUNCTION_4	IF_1	CALL_5
0x4000cb2	          0x4d85e4	                           test r12, r12	       403	charset.c	FUNCTION_4	IF_5
0x4000cb5	            0x744b	                            je 0x4000d02	       403	charset.c	FUNCTION_4	IF_5
0x4000cb7	      0x41c6042400	                       mov byte [r12], 0	       405	charset.c	FUNCTION_4	IF_5
0x4000cbc	           0xfb63b	                   movzx edi, byte [rbx]	       407	charset.c	FUNCTION_4	IF_5	WHILE_2
0x4000cbf	          0x4084ff	                           test dil, dil	       407	charset.c	FUNCTION_4	IF_5	WHILE_2
0x4000cc2	            0x743e	                            je 0x4000d02	       407	charset.c	FUNCTION_4	IF_5	WHILE_2
0x4000cc4	    0x8b0500000000	            mov eax, dword [0x04000cca] 	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000cca	            0x85c0	                           test eax, eax	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000ccc	            0x7418	                            je 0x4000ce6	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000cce	          0x4889df	                            mov rdi, rbx	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000cd1	    0xff1500000000	                 call qword [0x04000cd7]	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000cd7	          0x4863e8	                         movsxd rbp, eax	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000cda	          0x83fd01	                              cmp ebp, 1	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000cdd	     0xf8f95000000	                            jg 0x4000d78	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000ce3	           0xfb63b	                   movzx edi, byte [rbx]	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000ce6	      0xe800000000	                          call 0x4000ceb	       421	charset.c	FUNCTION_4	IF_5	WHILE_2	CALL_13
0x4000ceb	        0x4883c301	                              add rbx, 1	       421	charset.c	FUNCTION_4	IF_5	WHILE_2	CALL_13
0x4000cef	          0x4c89e7	                            mov rdi, r12	       148	string3.h	FUNCTION_76	CALL_3
0x4000cf2	          0x4889c6	                            mov rsi, rax	       148	string3.h	FUNCTION_76	CALL_3
0x4000cf5	      0xe800000000	                          call 0x4000cfa	       148	string3.h	FUNCTION_76	CALL_3
0x4000cfa	           0xfb63b	                   movzx edi, byte [rbx]	       407	charset.c	FUNCTION_4	IF_5	WHILE_2
0x4000cfd	          0x4084ff	                           test dil, dil	       407	charset.c	FUNCTION_4	IF_5	WHILE_2
0x4000d00	            0x75c2	                           jne 0x4000cc4	       407	charset.c	FUNCTION_4	IF_5	WHILE_2
0x4000d02	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       425	charset.c	FUNCTION_4
0x4000d07	    0x644833342528	                xor rsi, qword fs:[0x28]	       425	charset.c	FUNCTION_4
0x4000d10	          0x4c89e0	                            mov rax, r12	       425	charset.c	FUNCTION_4
0x4000d13	     0xf8511010000	                           jne 0x4000e2a	       425	charset.c	FUNCTION_4
0x4000d19	        0x4883c428	                           add rsp, 0x28	       425	charset.c	FUNCTION_4
0x4000d1d	              0x5b	                                 pop rbx	       425	charset.c	FUNCTION_4
0x4000d1e	              0x5d	                                 pop rbp	       425	charset.c	FUNCTION_4
0x4000d1f	            0x415c	                                 pop r12	       425	charset.c	FUNCTION_4
0x4000d21	            0x415d	                                 pop r13	       425	charset.c	FUNCTION_4
0x4000d23	            0x415e	                                 pop r14	       425	charset.c	FUNCTION_4
0x4000d25	            0x415f	                                 pop r15	       425	charset.c	FUNCTION_4
0x4000d27	              0xc3	                                     ret	       425	charset.c	FUNCTION_4
0x4000d28	     0xf1f84000000	                   nop dword [rax + rax]	       425	charset.c	FUNCTION_4
0x4000d30	    0x8b0d00000000	            mov ecx, dword [0x04000d36] 	       720	charset.c	FUNCTION_11	IF_1
0x4000d36	        0x488d5501	                      lea rdx, [rbp + 1]	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x4000d3a	         0xfb64500	                   movzx eax, byte [rbp]	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x4000d3e	            0x85c9	                           test ecx, ecx	       720	charset.c	FUNCTION_11	IF_1
0x4000d40	            0x7416	                            je 0x4000d58	       720	charset.c	FUNCTION_11	IF_1
0x4000d42	          0x83f87f	                           cmp eax, 0x7f	       720	charset.c	FUNCTION_11	IF_1
0x4000d45	            0x7e11	                           jle 0x4000d58	       720	charset.c	FUNCTION_11	IF_1
0x4000d47	        0x4183c504	                             add r13d, 4	       395	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	ELSE_3
0x4000d4b	          0x4889d5	                            mov rbp, rdx	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x4000d4e	      0xe90dffffff	                           jmp 0x4000c60	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x4000d53	       0xf1f440000	                   nop dword [rax + rax]	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x4000d58	     0xfb680000000	                   movzx eax, byte [rax]	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x4000d5f	          0x83e007	                              and eax, 7	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x4000d62	            0x84c0	                             test al, al	       392	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	IF_4
0x4000d64	           0xfb6c8	                           movzx ecx, al	       723	charset.c	FUNCTION_11
0x4000d67	            0x74de	                            je 0x4000d47	       392	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	IF_4
0x4000d69	          0x4101cd	                           add r13d, ecx	       393	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	IF_4
0x4000d6c	          0x4889d5	                            mov rbp, rdx	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x4000d6f	      0xe9ecfeffff	                           jmp 0x4000c60	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x4000d74	         0xf1f4000	                         nop dword [rax]	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x4000d78	          0x4889df	                            mov rdi, rbx	       412	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000d7b	    0xff1500000000	                 call qword [0x04000d81]	       412	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000d81	            0x89c7	                            mov edi, eax	       413	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	IF_7	CALL_8
0x4000d83	          0x4189c5	                           mov r13d, eax	       412	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000d86	      0xe800000000	                          call 0x4000d8b	       413	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	IF_7	CALL_8
0x4000d8b	            0x85c0	                           test eax, eax	       413	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	IF_7	CALL_8
0x4000d8d	            0x7419	                            je 0x4000da8	       413	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	IF_7	CALL_8
0x4000d8f	          0x4889ea	                            mov rdx, rbp	       156	string3.h	FUNCTION_77	CALL_3
0x4000d92	          0x4889de	                            mov rsi, rbx	       156	string3.h	FUNCTION_77	CALL_3
0x4000d95	          0x4c89e7	                            mov rdi, r12	       156	string3.h	FUNCTION_77	CALL_3
0x4000d98	      0xe800000000	                          call 0x4000d9d	       156	string3.h	FUNCTION_77	CALL_3
0x4000d9d	          0x4801eb	                            add rbx, rbp	       417	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000da0	      0xe917ffffff	                           jmp 0x4000cbc	       417	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000da5	           0xf1f00	                         nop dword [rax]	       417	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000da8	          0x4c89e7	                            mov rdi, r12	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0x4000dab	      0xe800000000	                          call 0x4000db0	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0x4000db0	        0x498d3c04	                    lea rdi, [r12 + rax]	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0x4000db4	          0x4489ee	                           mov esi, r13d	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0x4000db7	      0xe800000000	                          call 0x4000dbc	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0x4000dbc	            0xebdf	                           jmp 0x4000d9d	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0x4000dbe	            0x6690	                                     nop	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0x4000dc0	          0x4489fe	                           mov esi, r15d	       385	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_2
0x4000dc3	          0x4c89f7	                            mov rdi, r14	       385	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_2
0x4000dc6	      0xe800000000	                          call 0x4000dcb	       385	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_2
0x4000dcb	          0x4c89f2	                            mov rdx, r14	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x4000dce	            0x8b0a	                    mov ecx, dword [rdx]	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x4000dd0	        0x4883c204	                              add rdx, 4	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x4000dd4	    0x8d81fffefefe	              lea eax, [rcx - 0x1010101]	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x4000dda	            0xf7d1	                                 not ecx	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x4000ddc	            0x21c8	                            and eax, ecx	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x4000dde	      0x2580808080	                     and eax, 0x80808080	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x4000de3	            0x74e9	                            je 0x4000dce	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x4000de5	            0x89c1	                            mov ecx, eax	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x4000de7	          0xc1e910	                           shr ecx, 0x10	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x4000dea	      0xa980800000	                        test eax, 0x8080	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x4000def	           0xf44c1	                          cmove eax, ecx	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x4000df2	        0x488d4a02	                      lea rcx, [rdx + 2]	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x4000df6	            0x89c6	                            mov esi, eax	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x4000df8	        0x480f44d1	                          cmove rdx, rcx	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x4000dfc	          0x4000c6	                             add sil, al	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x4000dff	        0x4883da03	                              sbb rdx, 3	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x4000e03	          0x4c29f2	                            sub rdx, r14	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x4000e06	          0x4101d5	                           add r13d, edx	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x4000e09	      0xe952feffff	                           jmp 0x4000c60	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x4000e0e	            0x6690	                                     nop	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x4000e10	      0xbeffffff7f	                     mov esi, 0x7fffffff	       778	charset.c	FUNCTION_14	CALL_1
0x4000e15	      0xe800000000	                          call 0x4000e1a	       778	charset.c	FUNCTION_14	CALL_1
0x4000e1a	          0x8d7801	                      lea edi, [rax + 1]	       402	charset.c	FUNCTION_4	CALL_7
0x4000e1d	      0xe800000000	                          call 0x4000e22	       402	charset.c	FUNCTION_4	CALL_7
0x4000e22	          0x4989c4	                            mov r12, rax	       402	charset.c	FUNCTION_4	CALL_7
0x4000e25	      0xe988feffff	                           jmp 0x4000cb2	       402	charset.c	FUNCTION_4	CALL_7
0x4000e2a	      0xe800000000	                          call 0x4000e2f	       425	charset.c	FUNCTION_4
vim_iswordp_buf	CALL,2:WHILE,0:FOR,0:IF,1:functions,0:ELSE,0:DO,0:SWITCH,0	17
0x4000880	    0x8b1500000000	            mov edx, dword [0x04000886] 	       930	charset.c	FUNCTION_25	IF_1	CALL_1
0x4000886	           0xfb607	                   movzx eax, byte [rdi]	       927	charset.c	FUNCTION_25
0x4000889	            0x85d2	                           test edx, edx	       930	charset.c	FUNCTION_25	IF_1	CALL_1
0x400088b	            0x7433	                            je 0x40008c0	       930	charset.c	FUNCTION_25	IF_1	CALL_1
0x400088d	          0x4863d0	                         movsxd rdx, eax	       930	charset.c	FUNCTION_25	IF_1	CALL_1
0x4000890	    0x80ba00000000	                       cmp byte [rdx], 1	       930	charset.c	FUNCTION_25	IF_1	CALL_1
0x4000897	            0x7e27	                           jle 0x40008c0	       930	charset.c	FUNCTION_25	IF_1	CALL_1
0x4000899	        0x4883ec18	                           sub rsp, 0x18	       926	charset.c	FUNCTION_25
0x400089d	      0x4889742408	                mov qword [rsp + 8], rsi	       926	charset.c	FUNCTION_25
0x40008a2	    0xff1500000000	                 call qword [0x040008a8]	       931	charset.c	FUNCTION_25	IF_1
0x40008a8	      0x488b742408	                mov rsi, qword [rsp + 8]	       931	charset.c	FUNCTION_25	IF_1
0x40008ad	            0x89c7	                            mov edi, eax	       933	charset.c	FUNCTION_25	CALL_2
0x40008af	        0x4883c418	                           add rsp, 0x18	       934	charset.c	FUNCTION_25
0x40008b3	      0xe928ffffff	                 jmp sym.vim_iswordc_buf	       933	charset.c	FUNCTION_25	CALL_2
0x40008b8	     0xf1f84000000	                   nop dword [rax + rax]	       933	charset.c	FUNCTION_25	CALL_2
0x40008c0	            0x89c7	                            mov edi, eax	       933	charset.c	FUNCTION_25	CALL_2
0x40008c2	      0xe919ffffff	                 jmp sym.vim_iswordc_buf	       933	charset.c	FUNCTION_25	CALL_2
getvcols	CALL,5:WHILE,0:FOR,0:IF,4:functions,0:ELSE,4:DO,0:SWITCH,0	82
0x4001dd0	            0x4156	                                push r14	      1497	charset.c	FUNCTION_38
0x4001dd2	            0x4155	                                push r13	      1497	charset.c	FUNCTION_38
0x4001dd4	          0x4989ce	                            mov r14, rcx	      1497	charset.c	FUNCTION_38
0x4001dd7	            0x4154	                                push r12	      1497	charset.c	FUNCTION_38
0x4001dd9	              0x55	                                push rbp	      1497	charset.c	FUNCTION_38
0x4001dda	          0x4989fd	                            mov r13, rdi	      1497	charset.c	FUNCTION_38
0x4001ddd	              0x53	                                push rbx	      1497	charset.c	FUNCTION_38
0x4001dde	          0x4989d4	                            mov r12, rdx	      1497	charset.c	FUNCTION_38
0x4001de1	          0x4889f3	                            mov rbx, rsi	      1497	charset.c	FUNCTION_38
0x4001de4	          0x4c89c5	                             mov rbp, r8	      1497	charset.c	FUNCTION_38
0x4001de7	        0x4883ec20	                           sub rsp, 0x20	      1497	charset.c	FUNCTION_38
0x4001deb	    0x64488b042528	                mov rax, qword fs:[0x28]	      1497	charset.c	FUNCTION_38
0x4001df4	      0x4889442418	             mov qword [rsp + 0x18], rax	      1497	charset.c	FUNCTION_38
0x4001df9	            0x31c0	                            xor eax, eax	      1497	charset.c	FUNCTION_38
0x4001dfb	          0x488b02	                    mov rax, qword [rdx]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x4001dfe	          0x483906	                    cmp qword [rsi], rax	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x4001e01	     0xf84c1000000	                            je 0x4001ec8	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x4001e07	           0xf9cc0	                                 setl al	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x4001e0a	            0x31c9	                            xor ecx, ecx	      1502	charset.c	FUNCTION_38	IF_1	CALL_2
0x4001e0c	      0x4c8d442410	                    lea r8, [rsp + 0x10]	      1502	charset.c	FUNCTION_38	IF_1	CALL_2
0x4001e11	            0x84c0	                             test al, al	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x4001e13	      0x488d542408	                      lea rdx, [rsp + 8]	      1502	charset.c	FUNCTION_38	IF_1	CALL_2
0x4001e18	            0x7456	                            je 0x4001e70	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x4001e1a	          0x4889de	                            mov rsi, rbx	      1502	charset.c	FUNCTION_38	IF_1	CALL_2
0x4001e1d	          0x4c89ef	                            mov rdi, r13	      1502	charset.c	FUNCTION_38	IF_1	CALL_2
0x4001e20	      0xe800000000	                          call 0x4001e25	      1502	charset.c	FUNCTION_38	IF_1	CALL_2
0x4001e25	      0x4c8d442414	                    lea r8, [rsp + 0x14]	      1503	charset.c	FUNCTION_38	IF_1	CALL_3
0x4001e2a	      0x488d54240c	                    lea rdx, [rsp + 0xc]	      1503	charset.c	FUNCTION_38	IF_1	CALL_3
0x4001e2f	            0x31c9	                            xor ecx, ecx	      1503	charset.c	FUNCTION_38	IF_1	CALL_3
0x4001e31	          0x4c89e6	                            mov rsi, r12	      1503	charset.c	FUNCTION_38	IF_1	CALL_3
0x4001e34	          0x4c89ef	                            mov rdi, r13	      1503	charset.c	FUNCTION_38	IF_1	CALL_3
0x4001e37	      0xe800000000	                          call 0x4001e3c	      1503	charset.c	FUNCTION_38	IF_1	CALL_3
0x4001e3c	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      1510	charset.c	FUNCTION_38	IF_2
0x4001e40	        0x8b442408	                mov eax, dword [rsp + 8]	      1510	charset.c	FUNCTION_38	IF_2
0x4001e44	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	      1514	charset.c	FUNCTION_38	ELSE_2	IF_3
0x4001e48	            0x39c2	                            cmp edx, eax	      1511	charset.c	FUNCTION_38	IF_2
0x4001e4a	           0xf4cc2	                          cmovl eax, edx	      1511	charset.c	FUNCTION_38	IF_2
0x4001e4d	          0x418906	                    mov dword [r14], eax	      1511	charset.c	FUNCTION_38	IF_2
0x4001e50	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      1514	charset.c	FUNCTION_38	ELSE_2	IF_3
0x4001e54	            0x39c1	                            cmp ecx, eax	      1514	charset.c	FUNCTION_38	ELSE_2	IF_3
0x4001e56	            0x7e40	                           jle 0x4001e98	      1514	charset.c	FUNCTION_38	ELSE_2	IF_3
0x4001e58	    0x488b35000000	            mov rsi, qword [0x04001e5f] 	      1516	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x4001e5f	          0x803e65	                    cmp byte [rsi], 0x65	      1516	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x4001e62	            0x755c	                           jne 0x4001ec0	      1516	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x4001e64	            0x39c2	                            cmp edx, eax	      1516	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x4001e66	            0x7e58	                           jle 0x4001ec0	      1516	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x4001e68	          0x83ea01	                              sub edx, 1	      1517	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x4001e6b	          0x895500	                    mov dword [rbp], edx	      1517	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x4001e6e	            0xeb2b	                           jmp 0x4001e9b	      1517	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x4001e70	          0x4c89e6	                            mov rsi, r12	      1507	charset.c	FUNCTION_38	ELSE_1	CALL_4
0x4001e73	          0x4c89ef	                            mov rdi, r13	      1507	charset.c	FUNCTION_38	ELSE_1	CALL_4
0x4001e76	      0xe800000000	                          call 0x4001e7b	      1507	charset.c	FUNCTION_38	ELSE_1	CALL_4
0x4001e7b	      0x4c8d442414	                    lea r8, [rsp + 0x14]	      1508	charset.c	FUNCTION_38	ELSE_1	CALL_5
0x4001e80	      0x488d54240c	                    lea rdx, [rsp + 0xc]	      1508	charset.c	FUNCTION_38	ELSE_1	CALL_5
0x4001e85	            0x31c9	                            xor ecx, ecx	      1508	charset.c	FUNCTION_38	ELSE_1	CALL_5
0x4001e87	          0x4889de	                            mov rsi, rbx	      1508	charset.c	FUNCTION_38	ELSE_1	CALL_5
0x4001e8a	          0x4c89ef	                            mov rdi, r13	      1508	charset.c	FUNCTION_38	ELSE_1	CALL_5
0x4001e8d	      0xe800000000	                          call 0x4001e92	      1508	charset.c	FUNCTION_38	ELSE_1	CALL_5
0x4001e92	            0xeba8	                           jmp 0x4001e3c	      1508	charset.c	FUNCTION_38	ELSE_1	CALL_5
0x4001e94	         0xf1f4000	                         nop dword [rax]	      1508	charset.c	FUNCTION_38	ELSE_1	CALL_5
0x4001e98	          0x894500	                    mov dword [rbp], eax	      1522	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x4001e9b	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x4001ea0	    0x644833042528	                xor rax, qword fs:[0x28]	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x4001ea9	            0x7534	                           jne 0x4001edf	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x4001eab	        0x4883c420	                           add rsp, 0x20	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x4001eaf	              0x5b	                                 pop rbx	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x4001eb0	              0x5d	                                 pop rbp	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x4001eb1	            0x415c	                                 pop r12	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x4001eb3	            0x415d	                                 pop r13	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x4001eb5	            0x415e	                                 pop r14	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x4001eb7	              0xc3	                                     ret	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x4001eb8	     0xf1f84000000	                   nop dword [rax + rax]	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x4001ec0	          0x894d00	                    mov dword [rbp], ecx	      1519	charset.c	FUNCTION_38	ELSE_2	IF_3	ELSE_3
0x4001ec3	            0xebd6	                           jmp 0x4001e9b	      1519	charset.c	FUNCTION_38	ELSE_2	IF_3	ELSE_3
0x4001ec5	           0xf1f00	                         nop dword [rax]	      1519	charset.c	FUNCTION_38	ELSE_2	IF_3	ELSE_3
0x4001ec8	          0x8b4208	                mov eax, dword [rdx + 8]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x4001ecb	          0x394608	                cmp dword [rsi + 8], eax	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x4001ece	     0xf8533ffffff	                           jne 0x4001e07	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x4001ed4	          0x8b420c	              mov eax, dword [rdx + 0xc]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x4001ed7	          0x39460c	              cmp dword [rsi + 0xc], eax	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x4001eda	      0xe928ffffff	                           jmp 0x4001e07	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x4001edf	      0xe800000000	                          call 0x4001ee4	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
hexhex2nr	CALL,4:WHILE,0:FOR,0:IF,1:functions,0:ELSE,0:DO,0:SWITCH,0	50
0x4002f60	           0xfb60f	                   movzx ecx, byte [rdi]	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x4002f63	          0x8d51d0	                   lea edx, [rcx - 0x30]	      1656	charset.c	FUNCTION_49
0x4002f66	            0x89c8	                            mov eax, ecx	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x4002f68	          0x8d719f	                   lea esi, [rcx - 0x61]	      1655	charset.c	FUNCTION_49
0x4002f6b	          0x83fa09	                              cmp edx, 9	      1656	charset.c	FUNCTION_49
0x4002f6e	            0x760a	                           jbe 0x4002f7a	      1656	charset.c	FUNCTION_49
0x4002f70	          0x83e0df	                     and eax, 0xffffffdf	      1656	charset.c	FUNCTION_49
0x4002f73	          0x83e841	                           sub eax, 0x41	      1656	charset.c	FUNCTION_49
0x4002f76	            0x3c05	                               cmp al, 5	      1656	charset.c	FUNCTION_49
0x4002f78	            0x771c	                            ja 0x4002f96	      1656	charset.c	FUNCTION_49
0x4002f7a	         0xfb65701	               movzx edx, byte [rdi + 1]	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x4002f7e	          0x8d7ad0	                   lea edi, [rdx - 0x30]	      1656	charset.c	FUNCTION_49
0x4002f81	            0x89d0	                            mov eax, edx	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x4002f83	        0x448d429f	                   lea r8d, [rdx - 0x61]	      1655	charset.c	FUNCTION_49
0x4002f87	          0x83ff09	                              cmp edi, 9	      1656	charset.c	FUNCTION_49
0x4002f8a	            0x7614	                           jbe 0x4002fa0	      1656	charset.c	FUNCTION_49
0x4002f8c	          0x83e0df	                     and eax, 0xffffffdf	      1656	charset.c	FUNCTION_49
0x4002f8f	          0x83e841	                           sub eax, 0x41	      1656	charset.c	FUNCTION_49
0x4002f92	            0x3c05	                               cmp al, 5	      1656	charset.c	FUNCTION_49
0x4002f94	            0x760a	                           jbe 0x4002fa0	      1656	charset.c	FUNCTION_49
0x4002f96	      0xb8ffffffff	                     mov eax, 0xffffffff	      2036	charset.c	FUNCTION_61	IF_1
0x4002f9b	              0xc3	                                     ret	      2036	charset.c	FUNCTION_61	IF_1
0x4002f9c	         0xf1f4000	                         nop dword [rax]	      2036	charset.c	FUNCTION_61	IF_1
0x4002fa0	          0x83fe05	                              cmp esi, 5	      2020	charset.c	FUNCTION_60	IF_1
0x4002fa3	          0x8d41a9	                   lea eax, [rcx - 0x57]	      2021	charset.c	FUNCTION_60	IF_1
0x4002fa6	            0x7728	                            ja 0x4002fd0	      2020	charset.c	FUNCTION_60	IF_1
0x4002fa8	          0xc1e004	                              shl eax, 4	      2037	charset.c	FUNCTION_61	CALL_4
0x4002fab	        0x4183f805	                              cmp r8d, 5	      2020	charset.c	FUNCTION_60	IF_1
0x4002faf	            0x7617	                           jbe 0x4002fc8	      2020	charset.c	FUNCTION_60	IF_1
0x4002fb1	          0x8d72bf	                   lea esi, [rdx - 0x41]	      2022	charset.c	FUNCTION_60	IF_2
0x4002fb4	          0x8d4ac9	                   lea ecx, [rdx - 0x37]	      2023	charset.c	FUNCTION_60	IF_2
0x4002fb7	          0x83ea30	                           sub edx, 0x30	      2023	charset.c	FUNCTION_60	IF_2
0x4002fba	          0x83fe05	                              cmp esi, 5	      2023	charset.c	FUNCTION_60	IF_2
0x4002fbd	           0xf46d1	                         cmovbe edx, ecx	      2023	charset.c	FUNCTION_60	IF_2
0x4002fc0	             0x1d0	                            add eax, edx	      2037	charset.c	FUNCTION_61	CALL_4
0x4002fc2	              0xc3	                                     ret	      2037	charset.c	FUNCTION_61	CALL_4
0x4002fc3	       0xf1f440000	                   nop dword [rax + rax]	      2037	charset.c	FUNCTION_61	CALL_4
0x4002fc8	          0x83ea57	                           sub edx, 0x57	      2021	charset.c	FUNCTION_60	IF_1
0x4002fcb	             0x1d0	                            add eax, edx	      2037	charset.c	FUNCTION_61	CALL_4
0x4002fcd	              0xc3	                                     ret	      2037	charset.c	FUNCTION_61	CALL_4
0x4002fce	            0x6690	                                     nop	      2037	charset.c	FUNCTION_61	CALL_4
0x4002fd0	          0x8d71bf	                   lea esi, [rcx - 0x41]	      2022	charset.c	FUNCTION_60	IF_2
0x4002fd3	          0x8d41c9	                   lea eax, [rcx - 0x37]	      2023	charset.c	FUNCTION_60	IF_2
0x4002fd6	          0x83e930	                           sub ecx, 0x30	      2023	charset.c	FUNCTION_60	IF_2
0x4002fd9	          0x83fe05	                              cmp esi, 5	      2023	charset.c	FUNCTION_60	IF_2
0x4002fdc	           0xf47c1	                          cmova eax, ecx	      2023	charset.c	FUNCTION_60	IF_2
0x4002fdf	          0xc1e004	                              shl eax, 4	      2037	charset.c	FUNCTION_61	CALL_4
0x4002fe2	        0x4183f805	                              cmp r8d, 5	      2020	charset.c	FUNCTION_60	IF_1
0x4002fe6	            0x77c9	                            ja 0x4002fb1	      2020	charset.c	FUNCTION_60	IF_1
0x4002fe8	            0xebde	                           jmp 0x4002fc8	      2020	charset.c	FUNCTION_60	IF_1
vim_isblankline	CALL,1:WHILE,0:FOR,0:IF,0:functions,0:ELSE,0:DO,0:SWITCH,0	19
0x4002b10	           0xfb60f	                   movzx ecx, byte [rdi]	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4002b13	          0x80f909	                               cmp cl, 9	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4002b16	            0x7408	                            je 0x4002b20	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4002b18	          0x80f920	                            cmp cl, 0x20	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4002b1b	            0x7514	                           jne 0x4002b31	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4002b1d	           0xf1f00	                         nop dword [rax]	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4002b20	        0x4883c701	                              add rdi, 1	      1534	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1
0x4002b24	           0xfb60f	                   movzx ecx, byte [rdi]	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4002b27	          0x80f920	                            cmp cl, 0x20	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4002b2a	            0x74f4	                            je 0x4002b20	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4002b2c	          0x80f909	                               cmp cl, 9	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4002b2f	            0x74ef	                            je 0x4002b20	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4002b31	            0x31c0	                            xor eax, eax	      1838	charset.c	FUNCTION_58
0x4002b33	          0x80f90d	                             cmp cl, 0xd	      1838	charset.c	FUNCTION_58
0x4002b36	            0x770b	                            ja 0x4002b43	      1838	charset.c	FUNCTION_58
0x4002b38	      0xb801240000	                         mov eax, 0x2401	      1838	charset.c	FUNCTION_58
0x4002b3d	          0x48d3e8	                             shr rax, cl	      1838	charset.c	FUNCTION_58
0x4002b40	          0x83e001	                              and eax, 1	      1838	charset.c	FUNCTION_58
0x4002b43	            0xf3c3	                                     ret	      1839	charset.c	FUNCTION_58
str_foldcase	CALL,15:WHILE,1:FOR,0:IF,14:functions,0:ELSE,5:DO,0:SWITCH,0	269
0x4000040	            0x4157	                                push r15	       441	charset.c	FUNCTION_5
0x4000042	            0x4156	                                push r14	       441	charset.c	FUNCTION_5
0x4000044	          0x4989d7	                            mov r15, rdx	       441	charset.c	FUNCTION_5
0x4000047	            0x4155	                                push r13	       441	charset.c	FUNCTION_5
0x4000049	            0x4154	                                push r12	       441	charset.c	FUNCTION_5
0x400004b	              0x55	                                push rbp	       441	charset.c	FUNCTION_5
0x400004c	              0x53	                                push rbx	       441	charset.c	FUNCTION_5
0x400004d	          0x4889fd	                            mov rbp, rdi	       441	charset.c	FUNCTION_5
0x4000050	        0x4883ec48	                           sub rsp, 0x48	       441	charset.c	FUNCTION_5
0x4000054	    0x64488b042528	                mov rax, qword fs:[0x28]	       441	charset.c	FUNCTION_5
0x400005d	      0x4889442438	             mov qword [rsp + 0x38], rax	       441	charset.c	FUNCTION_5
0x4000062	            0x31c0	                            xor eax, eax	       441	charset.c	FUNCTION_5
0x4000064	          0x4885d2	                           test rdx, rdx	       452	charset.c	FUNCTION_5	IF_1
0x4000067	        0x89742414	             mov dword [rsp + 0x14], esi	       441	charset.c	FUNCTION_5
0x400006b	        0x894c2418	             mov dword [rsp + 0x18], ecx	       441	charset.c	FUNCTION_5
0x400006f	     0xf844c030000	                            je 0x40003c1	       452	charset.c	FUNCTION_5	IF_1
0x4000075	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	       463	charset.c	FUNCTION_5	ELSE_1	IF_3
0x4000079	        0x8b742414	            mov esi, dword [rsp + 0x14] 	       463	charset.c	FUNCTION_5	ELSE_1	IF_3
0x400007d	            0x89c8	                            mov eax, ecx	       463	charset.c	FUNCTION_5	ELSE_1	IF_3
0x400007f	          0x83e801	                              sub eax, 1	       463	charset.c	FUNCTION_5	ELSE_1	IF_3
0x4000082	            0x39ce	                            cmp esi, ecx	       463	charset.c	FUNCTION_5	ELSE_1	IF_3
0x4000084	           0xf4cc6	                          cmovl eax, esi	       463	charset.c	FUNCTION_5	ELSE_1	IF_3
0x4000087	          0x4889fe	                            mov rsi, rdi	        59	string3.h	FUNCTION_67	CALL_3
0x400008a	          0x4c89ff	                            mov rdi, r15	        59	string3.h	FUNCTION_67	CALL_3
0x400008d	          0x4863d8	                         movsxd rbx, eax	       464	charset.c	FUNCTION_5	ELSE_1	CALL_4
0x4000090	        0x89442414	             mov dword [rsp + 0x14], eax	       463	charset.c	FUNCTION_5	ELSE_1	IF_3
0x4000094	          0x4889da	                            mov rdx, rbx	        59	string3.h	FUNCTION_67	CALL_3
0x4000097	      0xe800000000	                          call 0x400009c	        59	string3.h	FUNCTION_67	CALL_3
0x400009c	      0x41c6041f00	                 mov byte [r15 + rbx], 0	       469	charset.c	FUNCTION_5	ELSE_2
0x40000a1	            0x31db	                            xor ebx, ebx	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x40000a3	          0x4d85ff	                           test r15, r15	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x40000a6	          0x4c63f3	                         movsxd r14, ebx	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x40000a9	     0xf842a010000	                            je 0x40001d9	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x40000af	      0x43803c3700	                 cmp byte [r15 + r14], 0	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x40000b4	           0xf95c0	                                setne al	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x40000b7	            0x84c0	                             test al, al	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x40000b9	     0xf8431010000	                            je 0x40001f0	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x40000bf	    0x8b1500000000	            mov edx, dword [0x040000c5] 	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x40000c5	            0x85d2	                           test edx, edx	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x40000c7	     0xf84cb000000	                            je 0x4000198	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x40000cd	          0x4d85ff	                           test r15, r15	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x40000d0	     0xf848a010000	                            je 0x4000260	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x40000d6	        0x4b8d2c37	                    lea rbp, [r15 + r14]	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x40000da	          0x4889ef	                            mov rdi, rbp	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x40000dd	      0x48896c2408	                mov qword [rsp + 8], rbp	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x40000e2	      0xe800000000	                          call 0x40000e7	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x40000e7	          0x4889ef	                            mov rdi, rbp	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_7
0x40000ea	          0x4189c5	                           mov r13d, eax	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x40000ed	      0xe800000000	                          call 0x40000f2	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_7
0x40000f2	          0x4489ef	                           mov edi, r13d	       482	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_8
0x40000f5	          0x4c63e0	                         movsxd r12, eax	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_7
0x40000f8	      0xe800000000	                          call 0x40000fd	       482	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_8
0x40000fd	        0x4183fc01	                             cmp r12d, 1	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x4000101	          0x4189c1	                            mov r9d, eax	       482	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_8
0x4000104	      0x488b542408	                mov rdx, qword [rsp + 8]	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x4000109	        0x400f9fc6	                                setg sil	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x400010d	        0x4183fd7f	                          cmp r13d, 0x7f	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x4000111	           0xf9ec0	                                setle al	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x4000114	          0x4008c6	                              or sil, al	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x4000117	     0xf8433010000	                            je 0x4000250	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x400011d	          0x4539e9	                           cmp r9d, r13d	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x4000120	     0xf842a010000	                            je 0x4000250	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x4000126	          0x4489cf	                            mov edi, r9d	       489	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_9
0x4000129	      0x44894c2408	                mov dword [rsp + 8], r9d	       489	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_9
0x400012e	      0xe800000000	                          call 0x4000133	       489	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_9
0x4000133	          0x4439e0	                           cmp eax, r12d	       493	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8
0x4000136	          0x4189c2	                           mov r10d, eax	       489	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_9
0x4000139	      0x448b4c2408	                mov r9d, dword [rsp + 8]	       493	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8
0x400013e	            0x7430	                            je 0x4000170	       493	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8
0x4000140	          0x4539d4	                          cmp r12d, r10d	       495	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9
0x4000143	     0xf8d8f010000	                           jge 0x40002d8	       495	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9
0x4000149	          0x4d85ff	                           test r15, r15	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x400014c	     0xf84c8020000	                            je 0x400041a	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000152	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000156	          0x4401d0	                           add eax, r10d	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000159	          0x4429e0	                           sub eax, r12d	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x400015c	        0x39442418	            cmp dword [rsp + 0x18], eax 	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000160	     0xf8f02020000	                            jg 0x4000368	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000166	        0x4b8d2c37	                    lea rbp, [r15 + r14]	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x400016a	          0x4589e9	                           mov r9d, r13d	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x400016d	           0xf1f00	                         nop dword [rax]	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000170	          0x4889ee	                            mov rsi, rbp	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_13
0x4000173	          0x4489cf	                            mov edi, r9d	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_13
0x4000176	      0xe800000000	                          call 0x400017b	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_13
0x400017b	          0x4d85ff	                           test r15, r15	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x400017e	    0x488b05000000	            mov rax, qword [0x04000185] 	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x4000185	        0x4b8d1437	                    lea rdx, [r15 + r14]	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x4000189	            0x753b	                           jne 0x40001c6	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x400018b	          0x4c89f2	                            mov rdx, r14	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x400018e	      0x4803542430	             add rdx, qword [rsp + 0x30]	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x4000193	            0xeb31	                           jmp 0x40001c6	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x4000195	           0xf1f00	                         nop dword [rax]	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x4000198	    0x8b0500000000	            mov eax, dword [0x0400019e] 	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x400019e	            0x85c0	                           test eax, eax	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x40001a0	            0x747e	                            je 0x4000220	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x40001a2	          0x4d85ff	                           test r15, r15	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x40001a5	     0xf8485010000	                            je 0x4000330	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x40001ab	        0x4b8d2c37	                    lea rbp, [r15 + r14]	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x40001af	    0x488b05000000	            mov rax, qword [0x040001b6] 	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x40001b6	         0xfb64d00	                   movzx ecx, byte [rbp]	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x40001ba	          0x4889ea	                            mov rdx, rbp	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x40001bd	    0x80b900000000	                       cmp byte [rcx], 1	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x40001c4	            0x7e67	                           jle 0x400022d	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x40001c6	          0x4889d7	                            mov rdi, rdx	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x40001c9	            0xffd0	                                call rax	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x40001cb	             0x1c3	                            add ebx, eax	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x40001cd	          0x4d85ff	                           test r15, r15	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x40001d0	          0x4c63f3	                         movsxd r14, ebx	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x40001d3	     0xf85d6feffff	                           jne 0x40000af	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x40001d9	      0x488b6c2430	            mov rbp, qword [rsp + 0x30] 	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x40001de	    0x42807c350000	                 cmp byte [rbp + r14], 0	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x40001e4	           0xf95c0	                                setne al	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x40001e7	            0x84c0	                             test al, al	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x40001e9	     0xf85d0feffff	                           jne 0x40000bf	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x40001ef	              0x90	                                     nop	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x40001f0	          0x4d85ff	                           test r15, r15	       538	charset.c	FUNCTION_5	IF_14
0x40001f3	          0x4c89f8	                            mov rax, r15	       538	charset.c	FUNCTION_5	IF_14
0x40001f6	    0x480f44442430	           cmove rax, qword [rsp + 0x30]	       538	charset.c	FUNCTION_5	IF_14
0x40001fc	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       540	charset.c	FUNCTION_5
0x4000201	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       540	charset.c	FUNCTION_5
0x400020a	     0xf8555020000	                           jne 0x4000465	       540	charset.c	FUNCTION_5
0x4000210	        0x4883c448	                           add rsp, 0x48	       540	charset.c	FUNCTION_5
0x4000214	              0x5b	                                 pop rbx	       540	charset.c	FUNCTION_5
0x4000215	              0x5d	                                 pop rbp	       540	charset.c	FUNCTION_5
0x4000216	            0x415c	                                 pop r12	       540	charset.c	FUNCTION_5
0x4000218	            0x415d	                                 pop r13	       540	charset.c	FUNCTION_5
0x400021a	            0x415e	                                 pop r14	       540	charset.c	FUNCTION_5
0x400021c	            0x415f	                                 pop r15	       540	charset.c	FUNCTION_5
0x400021e	              0xc3	                                     ret	       540	charset.c	FUNCTION_5
0x400021f	              0x90	                                     nop	       540	charset.c	FUNCTION_5
0x4000220	          0x4d85ff	                           test r15, r15	       529	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_13
0x4000223	        0x4b8d2c37	                    lea rbp, [r15 + r14]	       529	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_13
0x4000227	     0xf844b010000	                            je 0x4000378	       529	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_13
0x400022d	      0xe800000000	                          call 0x4000232	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_15
0x4000232	         0xfb65500	                   movzx edx, byte [rbp]	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_15
0x4000236	          0x488b00	                    mov rax, qword [rax]	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_15
0x4000239	          0x8b0490	            mov eax, dword [rax + rdx*4]	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_15
0x400023c	          0x884500	                      mov byte [rbp], al	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_15
0x400023f	          0x83c301	                              add ebx, 1	       533	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4
0x4000242	      0xe95cfeffff	                           jmp 0x40000a3	       533	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4
0x4000247	    0x660f1f840000	                    nop word [rax + rax]	       533	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4
0x4000250	    0x488b05000000	            mov rax, qword [0x04000257] 	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x4000257	      0xe96affffff	                           jmp 0x40001c6	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x400025c	         0xf1f4000	                         nop dword [rax]	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x4000260	          0x4c89f7	                            mov rdi, r14	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x4000263	      0x48037c2430	             add rdi, qword [rsp + 0x30]	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x4000268	      0xe800000000	                          call 0x400026d	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x400026d	          0x4c89f7	                            mov rdi, r14	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_7
0x4000270	      0x48037c2430	             add rdi, qword [rsp + 0x30]	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_7
0x4000275	          0x4189c5	                           mov r13d, eax	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x4000278	      0xe800000000	                          call 0x400027d	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_7
0x400027d	          0x4489ef	                           mov edi, r13d	       482	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_8
0x4000280	          0x4c63e0	                         movsxd r12, eax	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_7
0x4000283	      0xe800000000	                          call 0x4000288	       482	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_8
0x4000288	        0x4183fd7f	                          cmp r13d, 0x7f	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x400028c	          0x4189c1	                            mov r9d, eax	       482	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_8
0x400028f	           0xf9ec2	                                setle dl	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x4000292	        0x4183fc01	                             cmp r12d, 1	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x4000296	           0xf9fc0	                                 setg al	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x4000299	             0x8c2	                               or dl, al	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x400029b	     0xf84b0010000	                            je 0x4000451	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x40002a1	          0x4539e9	                           cmp r9d, r13d	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x40002a4	     0xf84a7010000	                            je 0x4000451	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x40002aa	          0x4489cf	                            mov edi, r9d	       489	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_9
0x40002ad	      0x44894c2408	                mov dword [rsp + 8], r9d	       489	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_9
0x40002b2	      0xe800000000	                          call 0x40002b7	       489	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_9
0x40002b7	          0x4139c4	                           cmp r12d, eax	       493	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8
0x40002ba	          0x4189c2	                           mov r10d, eax	       489	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_9
0x40002bd	      0x448b4c2408	                mov r9d, dword [rsp + 8]	       493	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8
0x40002c2	     0xf8578feffff	                           jne 0x4000140	       493	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8
0x40002c8	          0x4c89f6	                            mov rsi, r14	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_13
0x40002cb	      0x4803742430	             add rsi, qword [rsp + 0x30]	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_13
0x40002d0	      0xe99efeffff	                           jmp 0x4000173	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_13
0x40002d5	           0xf1f00	                         nop dword [rax]	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_13
0x40002d8	          0x4489d5	                           mov ebp, r10d	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_13
0x40002db	          0x4429e5	                           sub ebp, r12d	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_13
0x40002de	          0x4d85ff	                           test r15, r15	       508	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12
0x40002e1	     0xf8498000000	                            je 0x400037f	       508	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12
0x40002e7	          0x4d01f4	                            add r12, r14	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x40002ea	      0x44894c2408	                mov dword [rsp + 8], r9d	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x40002ef	      0x448954241c	            mov dword [rsp + 0x1c], r10d	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x40002f4	          0x4d01fc	                            add r12, r15	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x40002f7	          0x4c89e7	                            mov rdi, r12	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x40002fa	      0xe800000000	                          call 0x40002ff	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x40002ff	      0x48637c241c	         movsxd rdi, dword [rsp + 0x1c] 	        59	string3.h	FUNCTION_67	CALL_3
0x4000304	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_67	CALL_3
0x4000308	          0x4c89e6	                            mov rsi, r12	        59	string3.h	FUNCTION_67	CALL_3
0x400030b	          0x4c01f7	                            add rdi, r14	        59	string3.h	FUNCTION_67	CALL_3
0x400030e	          0x4c01ff	                            add rdi, r15	        59	string3.h	FUNCTION_67	CALL_3
0x4000311	      0xe800000000	                          call 0x4000316	        59	string3.h	FUNCTION_67	CALL_3
0x4000316	         0x16c2414	             add dword [rsp + 0x14], ebp	       516	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3
0x400031a	      0x448b4c2408	                mov r9d, dword [rsp + 8]	       516	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3
0x400031f	        0x4b8d2c37	                    lea rbp, [r15 + r14]	       516	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3
0x4000323	      0xe948feffff	                           jmp 0x4000170	       516	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3
0x4000328	     0xf1f84000000	                   nop dword [rax + rax]	       516	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3
0x4000330	      0x488b6c2430	            mov rbp, qword [rsp + 0x30] 	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000335	      0x4a8d543500	                    lea rdx, [rbp + r14]	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x400033a	           0xfb602	                   movzx eax, byte [rdx]	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x400033d	    0x80b800000000	                       cmp byte [rax], 1	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000344	     0xf8f06ffffff	                            jg 0x4000250	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x400034a	      0xe800000000	                          call 0x400034f	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x400034f	      0x4a8d4c3500	                    lea rcx, [rbp + r14]	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x4000354	          0x488b00	                    mov rax, qword [rax]	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x4000357	           0xfb611	                   movzx edx, byte [rcx]	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x400035a	          0x8b0490	            mov eax, dword [rax + rdx*4]	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x400035d	            0x8801	                      mov byte [rcx], al	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x400035f	      0xe9dbfeffff	                           jmp 0x400023f	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x4000364	         0xf1f4000	                         nop dword [rax]	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x4000368	          0x4489d5	                           mov ebp, r10d	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x400036b	          0x4429e5	                           sub ebp, r12d	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x400036e	      0xe974ffffff	                           jmp 0x40002e7	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x4000373	       0xf1f440000	                   nop dword [rax + rax]	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x4000378	      0x488b6c2430	            mov rbp, qword [rsp + 0x30] 	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x400037d	            0xebcb	                           jmp 0x400034a	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x400037f	      0x4c8b6c2430	            mov r13, qword [rsp + 0x30] 	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000384	          0x4d01f4	                            add r12, r14	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000387	      0x44894c2408	                mov dword [rsp + 8], r9d	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x400038c	      0x448954241c	            mov dword [rsp + 0x1c], r10d	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000391	          0x4d01ec	                            add r12, r13	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000394	          0x4c89e7	                            mov rdi, r12	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000397	      0xe800000000	                          call 0x400039c	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x400039c	      0x48637c241c	         movsxd rdi, dword [rsp + 0x1c] 	        59	string3.h	FUNCTION_67	CALL_3
0x40003a1	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_67	CALL_3
0x40003a5	          0x4c89e6	                            mov rsi, r12	        59	string3.h	FUNCTION_67	CALL_3
0x40003a8	          0x4c01f7	                            add rdi, r14	        59	string3.h	FUNCTION_67	CALL_3
0x40003ab	          0x4c01ef	                            add rdi, r13	        59	string3.h	FUNCTION_67	CALL_3
0x40003ae	      0xe800000000	                          call 0x40003b3	        59	string3.h	FUNCTION_67	CALL_3
0x40003b3	         0x16c2420	             add dword [rsp + 0x20], ebp	       511	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12
0x40003b7	      0x448b4c2408	                mov r9d, dword [rsp + 8]	       511	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12
0x40003bc	      0xe907ffffff	                           jmp 0x40002c8	       511	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12
0x40003c1	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       454	charset.c	FUNCTION_5	IF_1	CALL_1
0x40003c6	      0xba0a000000	                            mov edx, 0xa	       454	charset.c	FUNCTION_5	IF_1	CALL_1
0x40003cb	      0xbe01000000	                              mov esi, 1	       454	charset.c	FUNCTION_5	IF_1	CALL_1
0x40003d0	      0xe800000000	                          call 0x40003d5	       454	charset.c	FUNCTION_5	IF_1	CALL_1
0x40003d5	      0x448b742414	           mov r14d, dword [rsp + 0x14] 	       455	charset.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x40003da	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       455	charset.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x40003df	        0x418d7601	                      lea esi, [r14 + 1]	       455	charset.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x40003e3	      0xe800000000	                          call 0x40003e8	       455	charset.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x40003e8	            0x89c2	                            mov edx, eax	       455	charset.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x40003ea	            0x31c0	                            xor eax, eax	       456	charset.c	FUNCTION_5	IF_1	IF_2
0x40003ec	            0x85d2	                           test edx, edx	       455	charset.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x40003ee	     0xf8408feffff	                            je 0x40001fc	       455	charset.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x40003f4	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	        59	string3.h	FUNCTION_67	CALL_3
0x40003f9	          0x4963de	                        movsxd rbx, r14d	       457	charset.c	FUNCTION_5	IF_1	CALL_3
0x40003fc	          0x4889ee	                            mov rsi, rbp	        59	string3.h	FUNCTION_67	CALL_3
0x40003ff	          0x4889da	                            mov rdx, rbx	        59	string3.h	FUNCTION_67	CALL_3
0x4000402	      0xe800000000	                          call 0x4000407	        59	string3.h	FUNCTION_67	CALL_3
0x4000407	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       467	charset.c	FUNCTION_5	IF_4
0x400040c	      0x4489742420	            mov dword [rsp + 0x20], r14d	       458	charset.c	FUNCTION_5	IF_1
0x4000411	        0xc6041800	                 mov byte [rax + rbx], 0	       467	charset.c	FUNCTION_5	IF_4
0x4000415	      0xe987fcffff	                           jmp 0x40000a1	       467	charset.c	FUNCTION_5	IF_4
0x400041a	          0x4489d5	                           mov ebp, r10d	       498	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x400041d	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       498	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x4000422	      0x44894c241c	             mov dword [rsp + 0x1c], r9d	       498	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x4000427	          0x4429e5	                           sub ebp, r12d	       498	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x400042a	      0x4489542408	               mov dword [rsp + 8], r10d	       498	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x400042f	          0x8d7501	                      lea esi, [rbp + 1]	       498	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x4000432	      0xe800000000	                          call 0x4000437	       498	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x4000437	            0x85c0	                           test eax, eax	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000439	      0x448b542408	               mov r10d, dword [rsp + 8]	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x400043e	      0x448b4c241c	            mov r9d, dword [rsp + 0x1c] 	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000443	     0xf8536ffffff	                           jne 0x400037f	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000449	          0x4589e9	                           mov r9d, r13d	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x400044c	      0xe977feffff	                           jmp 0x40002c8	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000451	          0x4c89f2	                            mov rdx, r14	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000454	    0x488b05000000	            mov rax, qword [0x0400045b] 	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x400045b	      0x4803542430	             add rdx, qword [rsp + 0x30]	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x4000460	      0xe961fdffff	                           jmp 0x40001c6	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x4000465	      0xe800000000	                          call 0x400046a	       540	charset.c	FUNCTION_5
char2cells	CALL,4:WHILE,0:FOR,0:IF,5:functions,0:ELSE,0:DO,0:SWITCH,0	39
0x4000610	            0x85ff	                           test edi, edi	       734	charset.c	FUNCTION_12	IF_1	CALL_1
0x4000612	              0x53	                                push rbx	       733	charset.c	FUNCTION_12
0x4000613	            0x7974	                           jns 0x4000689	       734	charset.c	FUNCTION_12	IF_1	CALL_1
0x4000615	            0xf7df	                                 neg edi	       735	charset.c	FUNCTION_12	CALL_3
0x4000617	      0xbb02000000	                              mov ebx, 2	       735	charset.c	FUNCTION_12	CALL_3
0x400061c	        0x400fb6ff	                          movzx edi, dil	       735	charset.c	FUNCTION_12	CALL_3
0x4000620	          0x83ff7f	                           cmp edi, 0x7f	       737	charset.c	FUNCTION_12	IF_2
0x4000623	            0x7e43	                           jle 0x4000668	       737	charset.c	FUNCTION_12	IF_2
0x4000625	    0x8b0500000000	            mov eax, dword [0x0400062b] 	       740	charset.c	FUNCTION_12	IF_2	IF_3
0x400062b	            0x85c0	                           test eax, eax	       740	charset.c	FUNCTION_12	IF_2	IF_3
0x400062d	            0x7551	                           jne 0x4000680	       740	charset.c	FUNCTION_12	IF_2	IF_3
0x400062f	    0x8b1500000000	            mov edx, dword [0x04000635] 	       744	charset.c	FUNCTION_12	IF_2	IF_4
0x4000635	            0x85d2	                           test edx, edx	       744	charset.c	FUNCTION_12	IF_2	IF_4
0x4000637	            0x742f	                            je 0x4000668	       744	charset.c	FUNCTION_12	IF_2	IF_4
0x4000639	    0x81ffff000000	                           cmp edi, 0xff	       744	charset.c	FUNCTION_12	IF_2	IF_4
0x400063f	            0x7e27	                           jle 0x4000668	       744	charset.c	FUNCTION_12	IF_2	IF_4
0x4000641	    0x81facc260000	                         cmp edx, 0x26cc	       746	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x4000647	      0xb802000000	                              mov eax, 2	       748	charset.c	FUNCTION_12	IF_2	IF_4
0x400064c	            0x7528	                           jne 0x4000676	       746	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x400064e	          0xc1ef08	                              shr edi, 8	       746	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x4000651	            0x31c0	                            xor eax, eax	       747	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x4000653	    0x81ff8e000000	                           cmp edi, 0x8e	       747	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x4000659	           0xf95c0	                                setne al	       747	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x400065c	          0x83c001	                              add eax, 1	       747	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x400065f	            0xeb15	                           jmp 0x4000676	       747	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x4000661	     0xf1f80000000	                         nop dword [rax]	       747	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x4000668	        0x400fb6ff	                          movzx edi, dil	       752	charset.c	FUNCTION_12
0x400066c	     0xfb687000000	                   movzx eax, byte [rdi]	       752	charset.c	FUNCTION_12
0x4000673	          0x83e007	                              and eax, 7	       752	charset.c	FUNCTION_12
0x4000676	             0x1d8	                            add eax, ebx	       752	charset.c	FUNCTION_12
0x4000678	              0x5b	                                 pop rbx	       753	charset.c	FUNCTION_12
0x4000679	              0xc3	                                     ret	       753	charset.c	FUNCTION_12
0x400067a	    0x660f1f440000	                    nop word [rax + rax]	       753	charset.c	FUNCTION_12
0x4000680	      0xe800000000	                          call 0x4000685	       741	charset.c	FUNCTION_12	IF_2	CALL_4
0x4000685	             0x1d8	                            add eax, ebx	       741	charset.c	FUNCTION_12	IF_2	CALL_4
0x4000687	              0x5b	                                 pop rbx	       753	charset.c	FUNCTION_12
0x4000688	              0xc3	                                     ret	       753	charset.c	FUNCTION_12
0x4000689	            0x31db	                            xor ebx, ebx	       734	charset.c	FUNCTION_12	IF_1	CALL_1
0x400068b	            0xeb93	                           jmp 0x4000620	       734	charset.c	FUNCTION_12	IF_1	CALL_1
skipbin	CALL,1:WHILE,1:FOR,0:IF,0:functions,0:ELSE,0:DO,0:SWITCH,0	12
0x4001fc0	           0xfb617	                   movzx edx, byte [rdi]	      1576	charset.c	FUNCTION_43	WHILE_1	CALL_1
0x4001fc3	          0x4889f8	                            mov rax, rdi	      1573	charset.c	FUNCTION_43
0x4001fc6	          0x83ea30	                           sub edx, 0x30	      1576	charset.c	FUNCTION_43	WHILE_1	CALL_1
0x4001fc9	          0x83fa01	                              cmp edx, 1	      1576	charset.c	FUNCTION_43	WHILE_1	CALL_1
0x4001fcc	            0x7711	                            ja 0x4001fdf	      1576	charset.c	FUNCTION_43	WHILE_1	CALL_1
0x4001fce	            0x6690	                                     nop	      1576	charset.c	FUNCTION_43	WHILE_1	CALL_1
0x4001fd0	        0x4883c001	                              add rax, 1	      1577	charset.c	FUNCTION_43	WHILE_1
0x4001fd4	           0xfb610	                   movzx edx, byte [rax]	      1576	charset.c	FUNCTION_43	WHILE_1	CALL_1
0x4001fd7	          0x83ea30	                           sub edx, 0x30	      1576	charset.c	FUNCTION_43	WHILE_1	CALL_1
0x4001fda	          0x83fa01	                              cmp edx, 1	      1576	charset.c	FUNCTION_43	WHILE_1	CALL_1
0x4001fdd	            0x76f1	                           jbe 0x4001fd0	      1576	charset.c	FUNCTION_43	WHILE_1	CALL_1
0x4001fdf	            0xf3c3	                                     ret	      1579	charset.c	FUNCTION_43
vim_isIDc	CALL,0:WHILE,0:FOR,0:IF,0:functions,0:ELSE,0:DO,0:SWITCH,0	9
0x40007c0	          0x8d57ff	                      lea edx, [rdi - 1]	       885	charset.c	FUNCTION_21
0x40007c3	            0x31c0	                            xor eax, eax	       885	charset.c	FUNCTION_21
0x40007c5	    0x81fafe000000	                           cmp edx, 0xfe	       885	charset.c	FUNCTION_21
0x40007cb	            0x7710	                            ja 0x40007dd	       885	charset.c	FUNCTION_21
0x40007cd	          0x4863ff	                         movsxd rdi, edi	       885	charset.c	FUNCTION_21
0x40007d0	     0xfb687000000	                   movzx eax, byte [rdi]	       885	charset.c	FUNCTION_21
0x40007d7	          0xc0e805	                               shr al, 5	       885	charset.c	FUNCTION_21
0x40007da	          0x83e001	                              and eax, 1	       885	charset.c	FUNCTION_21
0x40007dd	            0xf3c3	                                     ret	       886	charset.c	FUNCTION_21
