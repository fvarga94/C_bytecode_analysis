u_inssub	functions,0:CALL,1:DO,0:SWITCH,0:WHILE,0:FOR,0:IF,1:ELSE,0	11
0x40020a0	    0x8b0500000000	            mov eax, dword [0x040020a6] 	       304	undo.c	FUNCTION_6	IF_1
0x40020a6	          0x4889fe	                            mov rsi, rdi	       303	undo.c	FUNCTION_6
0x40020a9	            0x85c0	                           test eax, eax	       304	undo.c	FUNCTION_6	IF_1
0x40020ab	            0x740b	                            je 0x40020b8	       304	undo.c	FUNCTION_6	IF_1
0x40020ad	      0xb801000000	                              mov eax, 1	       308	undo.c	FUNCTION_6
0x40020b2	              0xc3	                                     ret	       308	undo.c	FUNCTION_6
0x40020b3	       0xf1f440000	                   nop dword [rax + rax]	       308	undo.c	FUNCTION_6
0x40020b8	        0x488d5701	                      lea rdx, [rdi + 1]	       307	undo.c	FUNCTION_6	CALL_1
0x40020bc	        0x488d7fff	                      lea rdi, [rdi - 1]	       307	undo.c	FUNCTION_6	CALL_1
0x40020c0	            0x31c9	                            xor ecx, ecx	       307	undo.c	FUNCTION_6	CALL_1
0x40020c2	      0xe939f8ffff	                    jmp sym.u_savecommon	       307	undo.c	FUNCTION_6	CALL_1
u_clearall	functions,0:CALL,0:DO,0:SWITCH,0:WHILE,0:FOR,0:IF,0:ELSE,0	8
0x4003de0	    0x48c787281200	            mov qword [rdi + 0x1228], 0 	      3412	undo.c	FUNCTION_57
0x4003deb	    0x48c787181200	            mov qword [rdi + 0x1218], 0 	      3412	undo.c	FUNCTION_57
0x4003df6	    0x48c787201200	            mov qword [rdi + 0x1220], 0 	      3412	undo.c	FUNCTION_57
0x4003e01	    0xc78734120000	            mov dword [rdi + 0x1234], 1 	      3413	undo.c	FUNCTION_57
0x4003e0b	    0xc78730120000	            mov dword [rdi + 0x1230], 0 	      3414	undo.c	FUNCTION_57
0x4003e15	    0x48c787601200	            mov qword [rdi + 0x1260], 0 	      3415	undo.c	FUNCTION_57
0x4003e20	    0x48c787681200	            mov qword [rdi + 0x1268], 0 	      3416	undo.c	FUNCTION_57
0x4003e2b	              0xc3	                                     ret	      3416	undo.c	FUNCTION_57
u_compute_hash	functions,0:CALL,5:DO,0:SWITCH,0:WHILE,0:FOR,1:IF,0:ELSE,0	40
0x4002110	            0x4154	                                push r12	       753	undo.c	FUNCTION_11
0x4002112	              0x55	                                push rbp	       753	undo.c	FUNCTION_11
0x4002113	          0x4989fc	                            mov r12, rdi	       753	undo.c	FUNCTION_11
0x4002116	              0x53	                                push rbx	       753	undo.c	FUNCTION_11
0x4002117	      0xbb01000000	                              mov ebx, 1	       753	undo.c	FUNCTION_11
0x400211c	        0x4883ec70	                           sub rsp, 0x70	       753	undo.c	FUNCTION_11
0x4002120	          0x4889e7	                            mov rdi, rsp	       758	undo.c	FUNCTION_11	CALL_1
0x4002123	    0x64488b042528	                mov rax, qword fs:[0x28]	       753	undo.c	FUNCTION_11
0x400212c	      0x4889442468	             mov qword [rsp + 0x68], rax	       753	undo.c	FUNCTION_11
0x4002131	            0x31c0	                            xor eax, eax	       753	undo.c	FUNCTION_11
0x4002133	      0xe800000000	                          call 0x4002138	       758	undo.c	FUNCTION_11	CALL_1
0x4002138	    0x488b05000000	            mov rax, qword [0x0400213f] 	       759	undo.c	FUNCTION_11	FOR_1
0x400213f	        0x48833800	                      cmp qword [rax], 0	       759	undo.c	FUNCTION_11	FOR_1
0x4002143	            0x7e34	                           jle 0x4002179	       759	undo.c	FUNCTION_11	FOR_1
0x4002145	           0xf1f00	                         nop dword [rax]	       759	undo.c	FUNCTION_11	FOR_1
0x4002148	          0x4889df	                            mov rdi, rbx	       761	undo.c	FUNCTION_11	FOR_1	CALL_2
0x400214b	        0x4883c301	                              add rbx, 1	       759	undo.c	FUNCTION_11	FOR_1
0x400214f	      0xe800000000	                          call 0x4002154	       761	undo.c	FUNCTION_11	FOR_1	CALL_2
0x4002154	          0x4889c7	                            mov rdi, rax	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0x4002157	          0x4889c5	                            mov rbp, rax	       761	undo.c	FUNCTION_11	FOR_1	CALL_2
0x400215a	      0xe800000000	                          call 0x400215f	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0x400215f	          0x8d5001	                      lea edx, [rax + 1]	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0x4002162	          0x4889ee	                            mov rsi, rbp	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0x4002165	          0x4889e7	                            mov rdi, rsp	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0x4002168	      0xe800000000	                          call 0x400216d	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0x400216d	    0x488b05000000	            mov rax, qword [0x04002174] 	       759	undo.c	FUNCTION_11	FOR_1
0x4002174	          0x483918	                    cmp qword [rax], rbx	       759	undo.c	FUNCTION_11	FOR_1
0x4002177	            0x7dcf	                           jge 0x4002148	       759	undo.c	FUNCTION_11	FOR_1
0x4002179	          0x4c89e6	                            mov rsi, r12	       764	undo.c	FUNCTION_11	CALL_5
0x400217c	          0x4889e7	                            mov rdi, rsp	       764	undo.c	FUNCTION_11	CALL_5
0x400217f	      0xe800000000	                          call 0x4002184	       764	undo.c	FUNCTION_11	CALL_5
0x4002184	      0x488b442468	            mov rax, qword [rsp + 0x68] 	       765	undo.c	FUNCTION_11
0x4002189	    0x644833042528	                xor rax, qword fs:[0x28]	       765	undo.c	FUNCTION_11
0x4002192	            0x7509	                           jne 0x400219d	       765	undo.c	FUNCTION_11
0x4002194	        0x4883c470	                           add rsp, 0x70	       765	undo.c	FUNCTION_11
0x4002198	              0x5b	                                 pop rbx	       765	undo.c	FUNCTION_11
0x4002199	              0x5d	                                 pop rbp	       765	undo.c	FUNCTION_11
0x400219a	            0x415c	                                 pop r12	       765	undo.c	FUNCTION_11
0x400219c	              0xc3	                                     ret	       765	undo.c	FUNCTION_11
0x400219d	      0xe800000000	                          call 0x40021a2	       765	undo.c	FUNCTION_11
u_blockfree	functions,0:CALL,2:DO,0:SWITCH,0:WHILE,1:FOR,0:IF,0:ELSE,0	14
0x40040c0	              0x53	                                push rbx	      3503	undo.c	FUNCTION_61
0x40040c1	    0x488bb7181200	          mov rsi, qword [rdi + 0x1218] 	      3504	undo.c	FUNCTION_61	WHILE_1
0x40040c8	          0x4889fb	                            mov rbx, rdi	      3503	undo.c	FUNCTION_61
0x40040cb	          0x4885f6	                           test rsi, rsi	      3504	undo.c	FUNCTION_61	WHILE_1
0x40040ce	            0x7416	                            je 0x40040e6	      3504	undo.c	FUNCTION_61	WHILE_1
0x40040d0	            0x31d2	                            xor edx, edx	      3505	undo.c	FUNCTION_61	CALL_1
0x40040d2	          0x4889df	                            mov rdi, rbx	      3505	undo.c	FUNCTION_61	CALL_1
0x40040d5	      0xe846c6ffff	                   call sym.u_freeheader	      3505	undo.c	FUNCTION_61	CALL_1
0x40040da	    0x488bb3181200	          mov rsi, qword [rbx + 0x1218] 	      3504	undo.c	FUNCTION_61	WHILE_1
0x40040e1	          0x4885f6	                           test rsi, rsi	      3504	undo.c	FUNCTION_61	WHILE_1
0x40040e4	            0x75ea	                           jne 0x40040d0	      3504	undo.c	FUNCTION_61	WHILE_1
0x40040e6	    0x488bbb601200	          mov rdi, qword [rbx + 0x1260] 	      3506	undo.c	FUNCTION_61	CALL_2
0x40040ed	              0x5b	                                 pop rbx	      3507	undo.c	FUNCTION_61
0x40040ee	      0xe900000000	                           jmp 0x40040f3	      3506	undo.c	FUNCTION_61	CALL_2
undo_read	functions,0:CALL,5:DO,0:SWITCH,0:WHILE,1:FOR,0:IF,6:ELSE,1	84
0x40003b0	            0x4157	                                push r15	      1066	undo.c	FUNCTION_24
0x40003b2	            0x4156	                                push r14	      1066	undo.c	FUNCTION_24
0x40003b4	          0x4989f7	                            mov r15, rsi	      1066	undo.c	FUNCTION_24
0x40003b7	            0x4155	                                push r13	      1066	undo.c	FUNCTION_24
0x40003b9	            0x4154	                                push r12	      1066	undo.c	FUNCTION_24
0x40003bb	          0x4989d6	                            mov r14, rdx	      1066	undo.c	FUNCTION_24
0x40003be	              0x55	                                push rbp	      1066	undo.c	FUNCTION_24
0x40003bf	              0x53	                                push rbx	      1066	undo.c	FUNCTION_24
0x40003c0	          0x4889fb	                            mov rbx, rdi	      1066	undo.c	FUNCTION_24
0x40003c3	        0x4883ec08	                              sub rsp, 8	      1066	undo.c	FUNCTION_24
0x40003c7	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	      1070	undo.c	FUNCTION_24	IF_1
0x40003cb	          0x4885ff	                           test rdi, rdi	      1070	undo.c	FUNCTION_24	IF_1
0x40003ce	     0xf84bc000000	                            je 0x4000490	      1070	undo.c	FUNCTION_24	IF_1
0x40003d4	            0x85d2	                           test edx, edx	      1075	undo.c	FUNCTION_24	IF_1	WHILE_1
0x40003d6	          0x4189d4	                           mov r12d, edx	      1072	undo.c	FUNCTION_24	IF_1
0x40003d9	     0xf8e97000000	                           jle 0x4000476	      1075	undo.c	FUNCTION_24	IF_1	WHILE_1
0x40003df	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      1075	undo.c	FUNCTION_24	IF_1	WHILE_1
0x40003e3	          0x4d89fd	                            mov r13, r15	      1075	undo.c	FUNCTION_24	IF_1	WHILE_1
0x40003e6	            0xeb0c	                           jmp 0x40003f4	      1075	undo.c	FUNCTION_24	IF_1	WHILE_1
0x40003e8	     0xf1f84000000	                   nop dword [rax + rax]	      1075	undo.c	FUNCTION_24	IF_1	WHILE_1
0x40003f0	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1075	undo.c	FUNCTION_24	IF_1	WHILE_1
0x40003f4	        0x488b6b28	            mov rbp, qword [rbx + 0x28] 	      1079	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2
0x40003f8	          0x4839f5	                            cmp rbp, rsi	      1079	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2
0x40003fb	            0x7744	                            ja 0x4000441	      1079	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2
0x40003fd	        0x488b4b08	                mov rcx, qword [rbx + 8]	       295	stdio2.h	FUNCTION_93	CALL_9
0x4000401	      0xba00200000	                         mov edx, 0x2000	       295	stdio2.h	FUNCTION_93	CALL_9
0x4000406	      0xbe01000000	                              mov esi, 1	       295	stdio2.h	FUNCTION_93	CALL_9
0x400040b	      0xe800000000	                          call 0x4000410	       295	stdio2.h	FUNCTION_93	CALL_9
0x4000410	          0x4885c0	                           test rax, rax	      1082	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	IF_3
0x4000413	     0xf8491000000	                            je 0x40004aa	      1082	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	IF_3
0x4000419	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1089	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_2
0x400041d	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1089	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_2
0x4000421	          0x4889c2	                            mov rdx, rax	      1089	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_2
0x4000424	        0x48894328	             mov qword [rbx + 0x28], rax	      1087	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2
0x4000428	    0x48c743200000	               mov qword [rbx + 0x20], 0	      1088	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2
0x4000430	      0xe800000000	                          call 0x4000435	      1089	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_2
0x4000435	        0x488b6b28	            mov rbp, qword [rbx + 0x28] 	      1089	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_2
0x4000439	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      1089	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_2
0x400043d	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1089	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_2
0x4000441	          0x4963c4	                        movsxd rax, r12d	      1091	undo.c	FUNCTION_24	IF_1	WHILE_1
0x4000444	          0x4829f5	                            sub rbp, rsi	      1092	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x4000447	          0x4839e8	                            cmp rax, rbp	      1092	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x400044a	        0x480f46e8	                         cmovbe rbp, rax	      1092	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x400044e	          0x4801fe	                            add rsi, rdi	        59	string3.h	FUNCTION_68	CALL_3
0x4000451	          0x4c89ef	                            mov rdi, r13	        59	string3.h	FUNCTION_68	CALL_3
0x4000454	          0x4889ea	                            mov rdx, rbp	        59	string3.h	FUNCTION_68	CALL_3
0x4000457	          0x4129ec	                           sub r12d, ebp	      1096	undo.c	FUNCTION_24	IF_1	WHILE_1
0x400045a	          0x4901ed	                            add r13, rbp	      1097	undo.c	FUNCTION_24	IF_1	WHILE_1
0x400045d	      0xe800000000	                          call 0x4000462	        59	string3.h	FUNCTION_68	CALL_3
0x4000462	          0x4889ee	                            mov rsi, rbp	      1095	undo.c	FUNCTION_24	IF_1	WHILE_1
0x4000465	        0x48037320	             add rsi, qword [rbx + 0x20]	      1095	undo.c	FUNCTION_24	IF_1	WHILE_1
0x4000469	          0x4585e4	                         test r12d, r12d	      1075	undo.c	FUNCTION_24	IF_1	WHILE_1
0x400046c	        0x48897320	             mov qword [rbx + 0x20], rsi	      1095	undo.c	FUNCTION_24	IF_1	WHILE_1
0x4000470	     0xf8f7affffff	                            jg 0x40003f0	      1075	undo.c	FUNCTION_24	IF_1	WHILE_1
0x4000476	        0x4883c408	                              add rsp, 8	      1110	undo.c	FUNCTION_24
0x400047a	      0xb801000000	                              mov eax, 1	      1075	undo.c	FUNCTION_24	IF_1	WHILE_1
0x400047f	              0x5b	                                 pop rbx	      1110	undo.c	FUNCTION_24
0x4000480	              0x5d	                                 pop rbp	      1110	undo.c	FUNCTION_24
0x4000481	            0x415c	                                 pop r12	      1110	undo.c	FUNCTION_24
0x4000483	            0x415d	                                 pop r13	      1110	undo.c	FUNCTION_24
0x4000485	            0x415e	                                 pop r14	      1110	undo.c	FUNCTION_24
0x4000487	            0x415f	                                 pop r15	      1110	undo.c	FUNCTION_24
0x4000489	              0xc3	                                     ret	      1110	undo.c	FUNCTION_24
0x400048a	    0x660f1f440000	                    nop word [rax + rax]	      1110	undo.c	FUNCTION_24
0x4000490	        0x488b4b08	                mov rcx, qword [rbx + 8]	       295	stdio2.h	FUNCTION_93	CALL_9
0x4000494	      0xba01000000	                              mov edx, 1	       295	stdio2.h	FUNCTION_93	CALL_9
0x4000499	          0x4c89f6	                            mov rsi, r14	       295	stdio2.h	FUNCTION_93	CALL_9
0x400049c	          0x4c89ff	                            mov rdi, r15	       295	stdio2.h	FUNCTION_93	CALL_9
0x400049f	      0xe800000000	                          call 0x40004a4	       295	stdio2.h	FUNCTION_93	CALL_9
0x40004a4	        0x4883f801	                              cmp rax, 1	      1102	undo.c	FUNCTION_24	ELSE_1	IF_5	CALL_4
0x40004a8	            0x74cc	                            je 0x4000476	      1102	undo.c	FUNCTION_24	ELSE_1	IF_5	CALL_4
0x40004aa	          0x4c89f2	                            mov rdx, r14	        90	string3.h	FUNCTION_70	CALL_6
0x40004ad	          0x4c89ff	                            mov rdi, r15	        90	string3.h	FUNCTION_70	CALL_6
0x40004b0	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_70	CALL_6
0x40004b2	      0xe800000000	                          call 0x40004b7	        90	string3.h	FUNCTION_70	CALL_6
0x40004b7	        0x4883c408	                              add rsp, 8	      1110	undo.c	FUNCTION_24
0x40004bb	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_70	CALL_6
0x40004bd	              0x5b	                                 pop rbx	      1110	undo.c	FUNCTION_24
0x40004be	              0x5d	                                 pop rbp	      1110	undo.c	FUNCTION_24
0x40004bf	            0x415c	                                 pop r12	      1110	undo.c	FUNCTION_24
0x40004c1	            0x415d	                                 pop r13	      1110	undo.c	FUNCTION_24
0x40004c3	            0x415e	                                 pop r14	      1110	undo.c	FUNCTION_24
0x40004c5	            0x415f	                                 pop r15	      1110	undo.c	FUNCTION_24
0x40004c7	              0xc3	                                     ret	      1110	undo.c	FUNCTION_24
u_getbot	functions,0:CALL,3:DO,0:SWITCH,0:WHILE,0:FOR,0:IF,3:ELSE,0	46
0x40017b0	    0x488b15000000	            mov rdx, qword [0x040017b7] 	      3242	undo.c	FUNCTION_51	IF_1
0x40017b7	              0x53	                                push rbx	      3256	undo.c	FUNCTION_52
0x40017b8	    0x488b82201200	          mov rax, qword [rdx + 0x1220] 	      3242	undo.c	FUNCTION_51	IF_1
0x40017bf	          0x4885c0	                           test rax, rax	      3242	undo.c	FUNCTION_51	IF_1
0x40017c2	     0xf8488000000	                            je 0x4001850	      3242	undo.c	FUNCTION_51	IF_1
0x40017c8	      0x4883783000	               cmp qword [rax + 0x30], 0	      3242	undo.c	FUNCTION_51	IF_1
0x40017cd	     0xf847d000000	                            je 0x4001850	      3242	undo.c	FUNCTION_51	IF_1
0x40017d3	        0x488b5838	            mov rbx, qword [rax + 0x38] 	      3264	undo.c	FUNCTION_52
0x40017d7	          0x4885db	                           test rbx, rbx	      3265	undo.c	FUNCTION_52	IF_2
0x40017da	            0x742d	                            je 0x4001809	      3265	undo.c	FUNCTION_52	IF_2
0x40017dc	          0x488b32	                    mov rsi, qword [rdx]	      3272	undo.c	FUNCTION_52	IF_2
0x40017df	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      3273	undo.c	FUNCTION_52	IF_2
0x40017e3	        0x48034b08	                add rcx, qword [rbx + 8]	      3273	undo.c	FUNCTION_52	IF_2
0x40017e7	          0x4889f7	                            mov rdi, rsi	      3273	undo.c	FUNCTION_52	IF_2
0x40017ea	        0x482b7b18	             sub rdi, qword [rbx + 0x18]	      3273	undo.c	FUNCTION_52	IF_2
0x40017ee	      0x488d4c3901	                lea rcx, [rcx + rdi + 1]	      3273	undo.c	FUNCTION_52	IF_2
0x40017f3	          0x4885c9	                           test rcx, rcx	      3274	undo.c	FUNCTION_52	IF_2	IF_3
0x40017f6	        0x48894b10	             mov qword [rbx + 0x10], rcx	      3273	undo.c	FUNCTION_52	IF_2
0x40017fa	            0x7e1c	                           jle 0x4001818	      3274	undo.c	FUNCTION_52	IF_2	IF_3
0x40017fc	          0x4839ce	                            cmp rsi, rcx	      3274	undo.c	FUNCTION_52	IF_2	IF_3
0x40017ff	            0x7c17	                            jl 0x4001818	      3274	undo.c	FUNCTION_52	IF_2	IF_3
0x4001801	    0x48c740380000	               mov qword [rax + 0x38], 0	      3283	undo.c	FUNCTION_52	IF_2
0x4001809	    0xc78234120000	            mov dword [rdx + 0x1234], 1 	      3286	undo.c	FUNCTION_52
0x4001813	              0x5b	                                 pop rbx	      3287	undo.c	FUNCTION_52
0x4001814	              0xc3	                                     ret	      3287	undo.c	FUNCTION_52
0x4001815	           0xf1f00	                         nop dword [rax]	      3287	undo.c	FUNCTION_52
0x4001818	      0xba05000000	                              mov edx, 5	      3276	undo.c	FUNCTION_52	IF_2	IF_3	CALL_3
0x400181d	      0xbe00000000	                              mov esi, 0	      3276	undo.c	FUNCTION_52	IF_2	IF_3	CALL_3
0x4001822	            0x31ff	                            xor edi, edi	      3276	undo.c	FUNCTION_52	IF_2	IF_3	CALL_3
0x4001824	      0xe800000000	                          call 0x4001829	      3276	undo.c	FUNCTION_52	IF_2	IF_3	CALL_3
0x4001829	          0x4889c7	                            mov rdi, rax	      3276	undo.c	FUNCTION_52	IF_2	IF_3	CALL_3
0x400182c	      0xe800000000	                          call 0x4001831	      3276	undo.c	FUNCTION_52	IF_2	IF_3	CALL_3
0x4001831	        0x488b4308	                mov rax, qword [rbx + 8]	      3277	undo.c	FUNCTION_52	IF_2	IF_3
0x4001835	    0x488b15000000	            mov rdx, qword [0x0400183c] 	      3277	undo.c	FUNCTION_52	IF_2	IF_3
0x400183c	        0x4883c001	                              add rax, 1	      3277	undo.c	FUNCTION_52	IF_2	IF_3
0x4001840	        0x48894310	             mov qword [rbx + 0x10], rax	      3277	undo.c	FUNCTION_52	IF_2	IF_3
0x4001844	    0x488b82201200	          mov rax, qword [rdx + 0x1220] 	      3277	undo.c	FUNCTION_52	IF_2	IF_3
0x400184b	            0xebb4	                           jmp 0x4001801	      3277	undo.c	FUNCTION_52	IF_2	IF_3
0x400184d	           0xf1f00	                         nop dword [rax]	      3277	undo.c	FUNCTION_52	IF_2	IF_3
0x4001850	            0x31ff	                            xor edi, edi	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
0x4001852	      0xba05000000	                              mov edx, 5	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
0x4001857	      0xbe00000000	                              mov esi, 0	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
0x400185c	      0xe800000000	                          call 0x4001861	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
0x4001861	              0x5b	                                 pop rbx	      3287	undo.c	FUNCTION_52
0x4001862	          0x4889c7	                            mov rdi, rax	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
0x4001865	      0xe900000000	                           jmp 0x400186a	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
u_undoredo	functions,0:CALL,31:DO,0:SWITCH,0:WHILE,1:FOR,5:IF,33:ELSE,12	499
0x4000aa0	            0x4157	                                push r15	      2615	undo.c	FUNCTION_41
0x4000aa2	            0x4156	                                push r14	      2615	undo.c	FUNCTION_41
0x4000aa4	            0x4155	                                push r13	      2615	undo.c	FUNCTION_41
0x4000aa6	            0x4154	                                push r12	      2615	undo.c	FUNCTION_41
0x4000aa8	              0x55	                                push rbp	      2615	undo.c	FUNCTION_41
0x4000aa9	              0x53	                                push rbx	      2615	undo.c	FUNCTION_41
0x4000aaa	    0x4881ec280200	                          sub rsp, 0x228	      2615	undo.c	FUNCTION_41
0x4000ab1	    0x64488b042528	                mov rax, qword fs:[0x28]	      2615	undo.c	FUNCTION_41
0x4000aba	    0x488984241802	            mov qword [rsp + 0x218], rax	      2615	undo.c	FUNCTION_41
0x4000ac2	            0x31c0	                            xor eax, eax	      2615	undo.c	FUNCTION_41
0x4000ac4	    0x488b05000000	            mov rax, qword [0x04000acb] 	      2630	undo.c	FUNCTION_41
0x4000acb	        0x897c2444	             mov dword [rsp + 0x44], edi	      2615	undo.c	FUNCTION_41
0x4000acf	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2630	undo.c	FUNCTION_41
0x4000ad6	          0x4889c3	                            mov rbx, rax	      2630	undo.c	FUNCTION_41
0x4000ad9	      0x4889442430	             mov qword [rsp + 0x30], rax	      2630	undo.c	FUNCTION_41
0x4000ade	      0xe800000000	                          call 0x4000ae3	      2634	undo.c	FUNCTION_41	CALL_1
0x4000ae3	          0x8b4358	            mov eax, dword [rbx + 0x58] 	      2639	undo.c	FUNCTION_41
0x4000ae6	        0x89442438	             mov dword [rsp + 0x38], eax	      2639	undo.c	FUNCTION_41
0x4000aea	    0x488b05000000	            mov rax, qword [0x04000af1] 	      2640	undo.c	FUNCTION_41
0x4000af1	    0x8b88c8000000	            mov ecx, dword [rax + 0xc8] 	      2640	undo.c	FUNCTION_41
0x4000af7	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2641	undo.c	FUNCTION_41
0x4000afa	          0x83e001	                              and eax, 1	      2641	undo.c	FUNCTION_41
0x4000afd	        0x894c2440	             mov dword [rsp + 0x40], ecx	      2640	undo.c	FUNCTION_41
0x4000b01	            0x89c1	                            mov ecx, eax	      2641	undo.c	FUNCTION_41
0x4000b03	      0xb802000000	                              mov eax, 2	      2641	undo.c	FUNCTION_41
0x4000b08	           0xf44c1	                          cmove eax, ecx	      2641	undo.c	FUNCTION_41
0x4000b0b	        0x8944243c	             mov dword [rsp + 0x3c], eax	      2641	undo.c	FUNCTION_41
0x4000b0f	      0xe800000000	                          call 0x4000b14	      2642	undo.c	FUNCTION_41	CALL_3
0x4000b14	    0x488b15000000	            mov rdx, qword [0x04000b1b] 	      2647	undo.c	FUNCTION_41	CALL_4
0x4000b1b	        0x4c8b7330	            mov r14, qword [rbx + 0x30] 	      2654	undo.c	FUNCTION_41	FOR_1
0x4000b1f	      0xb934000000	                           mov ecx, 0x34	        59	string3.h	FUNCTION_68	CALL_3
0x4000b24	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	        59	string3.h	FUNCTION_68	CALL_3
0x4000b29	    0x488b82f80200	           mov rax, qword [rdx + 0x2f8] 	      2648	undo.c	FUNCTION_41
0x4000b30	          0x4d85f6	                           test r14, r14	      2654	undo.c	FUNCTION_41	FOR_1
0x4000b33	    0x488db2580100	                  lea rsi, [rdx + 0x158]	        59	string3.h	FUNCTION_68	CALL_3
0x4000b3a	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	        59	string3.h	FUNCTION_68	CALL_3
0x4000b3d	    0xc782e8110000	            mov dword [rdx + 0x11e8], 0 	      2650	undo.c	FUNCTION_41
0x4000b47	    0x48c782001200	            mov qword [rdx + 0x1200], 0 	      2651	undo.c	FUNCTION_41
0x4000b52	      0x4889442468	             mov qword [rsp + 0x68], rax	      2648	undo.c	FUNCTION_41
0x4000b57	    0x8b8200030000	           mov eax, dword [rdx + 0x300] 	      2648	undo.c	FUNCTION_41
0x4000b5d	    0xc78208120000	            mov dword [rdx + 0x1208], 0 	      2652	undo.c	FUNCTION_41
0x4000b67	        0x89442464	             mov dword [rsp + 0x64], eax	      2648	undo.c	FUNCTION_41
0x4000b6b	    0x8b8204030000	           mov eax, dword [rdx + 0x304] 	      2648	undo.c	FUNCTION_41
0x4000b71	        0x89442460	             mov dword [rsp + 0x60], eax	      2648	undo.c	FUNCTION_41
0x4000b75	    0x488b82080300	           mov rax, qword [rdx + 0x308] 	      2648	undo.c	FUNCTION_41
0x4000b7c	      0x4889442448	             mov qword [rsp + 0x48], rax	      2648	undo.c	FUNCTION_41
0x4000b81	    0x8b8210030000	           mov eax, dword [rdx + 0x310] 	      2648	undo.c	FUNCTION_41
0x4000b87	        0x89442450	             mov dword [rsp + 0x50], eax	      2648	undo.c	FUNCTION_41
0x4000b8b	    0x8b8214030000	           mov eax, dword [rdx + 0x314] 	      2648	undo.c	FUNCTION_41
0x4000b91	        0x89442454	             mov dword [rsp + 0x54], eax	      2648	undo.c	FUNCTION_41
0x4000b95	    0x8b8218030000	           mov eax, dword [rdx + 0x318] 	      2648	undo.c	FUNCTION_41
0x4000b9b	        0x89442458	             mov dword [rsp + 0x58], eax	      2648	undo.c	FUNCTION_41
0x4000b9f	    0x8b821c030000	           mov eax, dword [rdx + 0x31c] 	      2648	undo.c	FUNCTION_41
0x4000ba5	        0x8944245c	             mov dword [rsp + 0x5c], eax	      2648	undo.c	FUNCTION_41
0x4000ba9	          0x488b02	                    mov rax, qword [rdx]	      2649	undo.c	FUNCTION_41
0x4000bac	    0x488982e01100	          mov qword [rdx + 0x11e0], rax 	      2649	undo.c	FUNCTION_41
0x4000bb3	     0xf84a0040000	                            je 0x4001059	      2654	undo.c	FUNCTION_41	FOR_1
0x4000bb9	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2654	undo.c	FUNCTION_41	FOR_1
0x4000bc2	    0x48c7442428ff	     mov qword [rsp + 0x28], 0x7fffffff 	      2654	undo.c	FUNCTION_41	FOR_1
0x4000bcb	       0xf1f440000	                   nop dword [rax + rax]	      2654	undo.c	FUNCTION_41	FOR_1
0x4000bd0	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	      2657	undo.c	FUNCTION_41	FOR_1
0x4000bd4	        0x498b4e08	                mov rcx, qword [r14 + 8]	      2656	undo.c	FUNCTION_41	FOR_1
0x4000bd8	          0x4885d2	                           test rdx, rdx	      2658	undo.c	FUNCTION_41	FOR_1	IF_1
0x4000bdb	        0x48890c24	                    mov qword [rsp], rcx	      2656	undo.c	FUNCTION_41	FOR_1
0x4000bdf	      0x4889542410	             mov qword [rsp + 0x10], rdx	      2657	undo.c	FUNCTION_41	FOR_1
0x4000be4	     0xf856e020000	                           jne 0x4000e58	      2658	undo.c	FUNCTION_41	FOR_1	IF_1
0x4000bea	        0x488d7001	                      lea rsi, [rax + 1]	      2659	undo.c	FUNCTION_41	FOR_1	IF_1
0x4000bee	          0x4839c1	                            cmp rcx, rax	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000bf1	      0x4889742410	             mov qword [rsp + 0x10], rsi	      2659	undo.c	FUNCTION_41	FOR_1	IF_1
0x4000bf6	     0xf8f7c020000	                            jg 0x4000e78	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000bfc	          0x4839f1	                            cmp rcx, rsi	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000bff	     0xf8d73020000	                           jge 0x4000e78	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000c05	        0x488b0c24	                    mov rcx, qword [rsp]	      2669	undo.c	FUNCTION_41	FOR_1
0x4000c09	      0x4c8b642410	            mov r12, qword [rsp + 0x10] 	      2669	undo.c	FUNCTION_41	FOR_1
0x4000c0e	        0x4d8b6e28	            mov r13, qword [r14 + 0x28] 	      2670	undo.c	FUNCTION_41	FOR_1
0x4000c12	          0x4929cc	                            sub r12, rcx	      2669	undo.c	FUNCTION_41	FOR_1
0x4000c15	      0x483b4c2428	            cmp rcx, qword [rsp + 0x28] 	      2672	undo.c	FUNCTION_41	FOR_1	IF_3
0x4000c1a	      0x498d7424ff	                      lea rsi, [r12 - 1]	      2669	undo.c	FUNCTION_41	FOR_1
0x4000c1f	      0x4889742408	                mov qword [rsp + 8], rsi	      2669	undo.c	FUNCTION_41	FOR_1
0x4000c24	            0x7d4a	                           jge 0x4000c70	      2672	undo.c	FUNCTION_41	FOR_1	IF_3
0x4000c26	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      2677	undo.c	FUNCTION_41	FOR_1	IF_3
0x4000c2b	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2677	undo.c	FUNCTION_41	FOR_1	IF_3
0x4000c2f	          0x4839c1	                            cmp rcx, rax	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000c32	     0xf8f10030000	                            jg 0x4000f48	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000c38	        0x488b0c24	                    mov rcx, qword [rsp]	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000c3c	      0x4a8d542901	                lea rdx, [rcx + r13 + 1]	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000c41	          0x4839d0	                            cmp rax, rdx	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000c44	     0xf8ffe020000	                            jg 0x4000f48	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000c4a	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      2680	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000c4f	    0x488b05000000	            mov rax, qword [0x04000c56] 	      2680	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000c56	        0x488b5640	            mov rdx, qword [rsi + 0x40] 	      2680	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000c5a	        0x488b7648	            mov rsi, qword [rsi + 0x48] 	      2680	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000c5e	        0x48895038	             mov qword [rax + 0x38], rdx	      2680	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000c62	        0x48897040	             mov qword [rax + 0x40], rsi	      2680	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000c66	        0x488d42ff	                      lea rax, [rdx - 1]	      2681	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000c6a	      0x4889442428	             mov qword [rsp + 0x28], rax	      2681	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000c6f	              0x90	                                     nop	      2681	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000c70	      0x488b442408	                mov rax, qword [rsp + 8]	      2707	undo.c	FUNCTION_41	FOR_1	IF_8
0x4000c75	          0x4885c0	                           test rax, rax	      2707	undo.c	FUNCTION_41	FOR_1	IF_8
0x4000c78	     0xf8eb2020000	                           jle 0x4000f30	      2707	undo.c	FUNCTION_41	FOR_1	IF_8
0x4000c7e	    0x4c8d3cc50000	                        lea r15, [rax*8]	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9
0x4000c86	            0x31f6	                            xor esi, esi	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9
0x4000c88	          0x4c89ff	                            mov rdi, r15	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9
0x4000c8b	      0xe800000000	                          call 0x4000c90	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9
0x4000c90	          0x4885c0	                           test rax, rax	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9
0x4000c93	      0x4889442418	             mov qword [rsp + 0x18], rax	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9
0x4000c98	     0xf8490030000	                            je 0x400102e	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9
0x4000c9e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000ca3	        0x4983fc01	                              cmp r12, 1	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000ca7	        0x4c8d78ff	                      lea r15, [rax - 1]	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000cab	     0xf8475030000	                            je 0x4001026	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000cb1	          0x4889c5	                            mov rbp, rax	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000cb4	          0x4c29e5	                            sub rbp, r12	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000cb7	          0x4929c4	                            sub r12, rax	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000cba	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000cbf	        0x4a8d1ce0	                  lea rbx, [rax + r12*8]	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000cc3	          0x4531e4	                          xor r12d, r12d	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000cc6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000cd0	          0x4c89ff	                            mov rdi, r15	      3516	undo.c	FUNCTION_62	CALL_2
0x4000cd3	      0xe800000000	                          call 0x4000cd8	      3516	undo.c	FUNCTION_62	CALL_2
0x4000cd8	          0x4889c7	                            mov rdi, rax	      3516	undo.c	FUNCTION_62	CALL_2
0x4000cdb	      0xe800000000	                          call 0x4000ce0	      3516	undo.c	FUNCTION_62	CALL_2
0x4000ce0	          0x4885c0	                           test rax, rax	      2729	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_10	CALL_13
0x4000ce3	      0x4a8944fbf8	        mov qword [rbx + r15*8 - 8], rax	      2729	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_10	CALL_13
0x4000ce8	     0xf84ea020000	                            je 0x4000fd8	      2729	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_10	CALL_13
0x4000cee	    0x488b05000000	            mov rax, qword [0x04000cf5] 	      2733	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_11
0x4000cf5	          0x4c89ff	                            mov rdi, r15	      2735	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	CALL_15
0x4000cf8	        0x48833801	                      cmp qword [rax], 1	      2734	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_11
0x4000cfc	      0xb801000000	                              mov eax, 1	      2734	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_11
0x4000d01	        0x440f44e0	                         cmove r12d, eax	      2734	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_11
0x4000d05	            0x31f6	                            xor esi, esi	      2735	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	CALL_15
0x4000d07	        0x4983ef01	                              sub r15, 1	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000d0b	      0xe800000000	                          call 0x4000d10	      2735	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	CALL_15
0x4000d10	          0x4c39fd	                            cmp rbp, r15	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000d13	            0x75bb	                           jne 0x4000cd0	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000d15	        0x4983fd00	                              cmp r13, 0	      2742	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12
0x4000d19	            0x7476	                            je 0x4000d91	      2742	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12
0x4000d1b	            0x7e6b	                           jle 0x4000d88	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x4000d1d	        0x488b0424	                    mov rax, qword [rsp]	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x4000d21	        0x4183e401	                             and r12d, 1	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x4000d25	            0x31ed	                            xor ebp, ebp	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x4000d27	      0x4d8d7c0500	                    lea r15, [r13 + rax]	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x4000d2c	          0x4889c3	                            mov rbx, rax	      2656	undo.c	FUNCTION_41	FOR_1
0x4000d2f	            0xeb35	                           jmp 0x4000d66	      2656	undo.c	FUNCTION_41	FOR_1
0x4000d31	     0xf1f80000000	                         nop dword [rax]	      2656	undo.c	FUNCTION_41	FOR_1
0x4000d38	          0x4584e4	                         test r12b, r12b	      2750	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	IF_13
0x4000d3b	            0x7436	                            je 0x4000d73	      2750	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	IF_13
0x4000d3d	      0xba01000000	                              mov edx, 1	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_16
0x4000d42	      0xbf01000000	                              mov edi, 1	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_16
0x4000d47	      0xe800000000	                          call 0x4000d4c	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_16
0x4000d4c	        0x498b4620	            mov rax, qword [r14 + 0x20] 	      2754	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_18
0x4000d50	        0x4883c301	                              add rbx, 1	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x4000d54	        0x488b3c28	              mov rdi, qword [rax + rbp]	      2754	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_18
0x4000d58	        0x4883c508	                              add rbp, 8	      2754	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_18
0x4000d5c	      0xe800000000	                          call 0x4000d61	      2754	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_18
0x4000d61	          0x4c39fb	                            cmp rbx, r15	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x4000d64	            0x7422	                            je 0x4000d88	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x4000d66	        0x498b4620	            mov rax, qword [r14 + 0x20] 	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_16
0x4000d6a	          0x4885db	                           test rbx, rbx	      2750	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	IF_13
0x4000d6d	        0x488b3428	              mov rsi, qword [rax + rbp]	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_16
0x4000d71	            0x74c5	                            je 0x4000d38	      2750	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	IF_13
0x4000d73	            0x31c9	                            xor ecx, ecx	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x4000d75	            0x31d2	                            xor edx, edx	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x4000d77	          0x4889df	                            mov rdi, rbx	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x4000d7a	      0xe800000000	                          call 0x4000d7f	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x4000d7f	            0xebcb	                           jmp 0x4000d4c	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x4000d81	     0xf1f80000000	                         nop dword [rax]	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x4000d88	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	      2756	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	CALL_19
0x4000d8c	      0xe800000000	                          call 0x4000d91	      2756	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	CALL_19
0x4000d91	      0x4c396c2408	                cmp qword [rsp + 8], r13	      2760	undo.c	FUNCTION_41	FOR_1	IF_14
0x4000d96	     0xf852c010000	                           jne 0x4000ec8	      2760	undo.c	FUNCTION_41	FOR_1	IF_14
0x4000d9c	        0x488b0424	                    mov rax, qword [rsp]	      2760	undo.c	FUNCTION_41	FOR_1	IF_14
0x4000da0	            0x31ed	                            xor ebp, ebp	      2760	undo.c	FUNCTION_41	FOR_1	IF_14
0x4000da2	        0x488d5801	                      lea rbx, [rax + 1]	      2760	undo.c	FUNCTION_41	FOR_1	IF_14
0x4000da6	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      2770	undo.c	FUNCTION_41	FOR_1	CALL_21
0x4000dab	            0x31f6	                            xor esi, esi	      2770	undo.c	FUNCTION_41	FOR_1	CALL_21
0x4000dad	          0x4889e9	                            mov rcx, rbp	      2770	undo.c	FUNCTION_41	FOR_1	CALL_21
0x4000db0	          0x4889df	                            mov rdi, rbx	      2770	undo.c	FUNCTION_41	FOR_1	CALL_21
0x4000db3	      0xe800000000	                          call 0x4000db8	      2770	undo.c	FUNCTION_41	FOR_1	CALL_21
0x4000db8	    0x488b15000000	            mov rdx, qword [0x04000dbf] 	      2773	undo.c	FUNCTION_41	FOR_1	IF_17
0x4000dbf	    0x48399ae01100	          cmp qword [rdx + 0x11e0], rbx 	      2773	undo.c	FUNCTION_41	FOR_1	IF_17
0x4000dc6	            0x7e07	                           jle 0x4000dcf	      2773	undo.c	FUNCTION_41	FOR_1	IF_17
0x4000dc8	    0x48899ae01100	          mov qword [rdx + 0x11e0], rbx 	      2774	undo.c	FUNCTION_41	FOR_1	IF_17
0x4000dcf	          0x4d85ed	                           test r13, r13	      2775	undo.c	FUNCTION_41	FOR_1	IF_18
0x4000dd2	    0x488b8a001200	          mov rcx, qword [rdx + 0x1200] 	      2775	undo.c	FUNCTION_41	FOR_1	IF_18
0x4000dd9	            0x7565	                           jne 0x4000e40	      2775	undo.c	FUNCTION_41	FOR_1	IF_18
0x4000ddb	        0x488b0424	                    mov rax, qword [rsp]	      2775	undo.c	FUNCTION_41	FOR_1	IF_18
0x4000ddf	          0x4839c8	                            cmp rax, rcx	      2775	undo.c	FUNCTION_41	FOR_1	IF_18
0x4000de2	            0x7c5c	                            jl 0x4000e40	      2775	undo.c	FUNCTION_41	FOR_1	IF_18
0x4000de4	    0x48899a001200	          mov qword [rdx + 0x1200], rbx 	      2776	undo.c	FUNCTION_41	FOR_1	IF_18
0x4000deb	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2781	undo.c	FUNCTION_41	FOR_1
0x4000df0	    0x48010d000000	            add qword [0x04000df7], rcx 	      2781	undo.c	FUNCTION_41	FOR_1
0x4000df7	        0x4883c001	                              add rax, 1	      2784	undo.c	FUNCTION_41	FOR_1
0x4000dfb	        0x49894610	             mov qword [r14 + 0x10], rax	      2784	undo.c	FUNCTION_41	FOR_1
0x4000dff	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2790	undo.c	FUNCTION_41	FOR_1
0x4000e04	    0x4c012d000000	            add qword [0x04000e0b], r13 	      2780	undo.c	FUNCTION_41	FOR_1
0x4000e0b	        0x49894e28	             mov qword [r14 + 0x28], rcx	      2782	undo.c	FUNCTION_41	FOR_1
0x4000e0f	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2783	undo.c	FUNCTION_41	FOR_1
0x4000e14	        0x49894e20	             mov qword [r14 + 0x20], rcx	      2783	undo.c	FUNCTION_41	FOR_1
0x4000e18	          0x498b0e	                    mov rcx, qword [r14]	      2789	undo.c	FUNCTION_41	FOR_1
0x4000e1b	          0x498906	                    mov qword [r14], rax	      2790	undo.c	FUNCTION_41	FOR_1
0x4000e1e	          0x4885c9	                           test rcx, rcx	      2654	undo.c	FUNCTION_41	FOR_1
0x4000e21	     0xf8432020000	                            je 0x4001059	      2654	undo.c	FUNCTION_41	FOR_1
0x4000e27	      0x4c89742420	             mov qword [rsp + 0x20], r14	      2654	undo.c	FUNCTION_41	FOR_1
0x4000e2c	          0x488b02	                    mov rax, qword [rdx]	      2654	undo.c	FUNCTION_41	FOR_1
0x4000e2f	          0x4989ce	                            mov r14, rcx	      2654	undo.c	FUNCTION_41	FOR_1
0x4000e32	      0xe999fdffff	                           jmp 0x4000bd0	      2654	undo.c	FUNCTION_41	FOR_1
0x4000e37	    0x660f1f840000	                    nop word [rax + rax]	      2654	undo.c	FUNCTION_41	FOR_1
0x4000e40	        0x488b0424	                    mov rax, qword [rsp]	      2777	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x4000e44	          0x4c01e8	                            add rax, r13	      2777	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x4000e47	          0x4839c8	                            cmp rax, rcx	      2777	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x4000e4a	            0x7e9f	                           jle 0x4000deb	      2777	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x4000e4c	    0x488982001200	          mov qword [rdx + 0x1200], rax 	      2778	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x4000e53	            0xeb96	                           jmp 0x4000deb	      2778	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x4000e55	           0xf1f00	                         nop dword [rax]	      2778	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x4000e58	        0x488b0c24	                    mov rcx, qword [rsp]	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000e5c	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000e61	          0x4839d1	                            cmp rcx, rdx	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000e64	            0x7d12	                           jge 0x4000e78	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000e66	          0x4839c1	                            cmp rcx, rax	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000e69	            0x7f0d	                            jg 0x4000e78	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000e6b	        0x4883c001	                              add rax, 1	      2661	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000e6f	          0x4839c2	                            cmp rdx, rax	      2661	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000e72	     0xf8e8dfdffff	                           jle 0x4000c05	      2661	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000e78	      0xe800000000	                          call 0x4000e7d	      2663	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_5
0x4000e7d	            0x31ff	                            xor edi, edi	      2664	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_7
0x4000e7f	      0xba05000000	                              mov edx, 5	      2664	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_7
0x4000e84	      0xbe00000000	                              mov esi, 0	      2664	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_7
0x4000e89	      0xe800000000	                          call 0x4000e8e	      2664	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_7
0x4000e8e	          0x4889c7	                            mov rdi, rax	      2664	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_7
0x4000e91	      0xe800000000	                          call 0x4000e96	      2664	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_7
0x4000e96	    0x488b84241802	           mov rax, qword [rsp + 0x218] 	      2665	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_8
0x4000e9e	    0x644833042528	                xor rax, qword fs:[0x28]	      2665	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_8
0x4000ea7	     0xf85bb040000	                           jne 0x4001368	      2665	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_8
0x4000ead	    0x4881c4280200	                          add rsp, 0x228	      2892	undo.c	FUNCTION_41
0x4000eb4	              0x5b	                                 pop rbx	      2892	undo.c	FUNCTION_41
0x4000eb5	              0x5d	                                 pop rbp	      2892	undo.c	FUNCTION_41
0x4000eb6	            0x415c	                                 pop r12	      2892	undo.c	FUNCTION_41
0x4000eb8	            0x415d	                                 pop r13	      2892	undo.c	FUNCTION_41
0x4000eba	            0x415e	                                 pop r14	      2892	undo.c	FUNCTION_41
0x4000ebc	            0x415f	                                 pop r15	      2892	undo.c	FUNCTION_41
0x4000ebe	      0xe900000000	                           jmp 0x4000ec3	      2665	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_8
0x4000ec3	       0xf1f440000	                   nop dword [rax + rax]	      2665	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_8
0x4000ec8	        0x488b0424	                    mov rax, qword [rsp]	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x4000ecc	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x4000ed1	          0x4c89ed	                            mov rbp, r13	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x4000ed4	      0xbaffffff7f	                     mov edx, 0x7fffffff	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x4000ed9	          0x4989c4	                            mov r12, rax	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x4000edc	          0x4829dd	                            sub rbp, rbx	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x4000edf	          0x4901dc	                            add r12, rbx	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x4000ee2	        0x488d5801	                      lea rbx, [rax + 1]	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x4000ee6	          0x4889e9	                            mov rcx, rbp	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x4000ee9	          0x4c89e6	                            mov rsi, r12	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x4000eec	          0x4889df	                            mov rdi, rbx	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x4000eef	      0xe800000000	                          call 0x4000ef4	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x4000ef4	    0x488b05000000	            mov rax, qword [0x04000efb] 	      2764	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x4000efb	    0x488b90e01100	          mov rdx, qword [rax + 0x11e0] 	      2764	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x4000f02	          0x4939d4	                            cmp r12, rdx	      2764	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x4000f05	            0x7d0a	                           jge 0x4000f11	      2764	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x4000f07	          0x4801ea	                            add rdx, rbp	      2765	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x4000f0a	    0x488990e01100	          mov qword [rax + 0x11e0], rdx 	      2765	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x4000f11	    0x488b90001200	          mov rdx, qword [rax + 0x1200] 	      2766	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x4000f18	          0x4939d4	                            cmp r12, rdx	      2766	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x4000f1b	     0xf8d85feffff	                           jge 0x4000da6	      2766	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x4000f21	          0x4801ea	                            add rdx, rbp	      2767	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x4000f24	    0x488990001200	          mov qword [rax + 0x1200], rdx 	      2767	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x4000f2b	      0xe976feffff	                           jmp 0x4000da6	      2767	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x4000f30	          0x4531e4	                          xor r12d, r12d	      2704	undo.c	FUNCTION_41	FOR_1
0x4000f33	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2739	undo.c	FUNCTION_41	FOR_1	ELSE_3
0x4000f3c	      0xe9d4fdffff	                           jmp 0x4000d15	      2739	undo.c	FUNCTION_41	FOR_1	ELSE_3
0x4000f41	     0xf1f80000000	                         nop dword [rax]	      2739	undo.c	FUNCTION_41	FOR_1	ELSE_3
0x4000f48	          0x4d85ed	                           test r13, r13	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000f4b	     0xf8e93000000	                           jle 0x4000fe4	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000f51	            0x31ed	                            xor ebp, ebp	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000f53	    0x48837c240800	                  cmp qword [rsp + 8], 0	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000f59	        0x488b0424	                    mov rax, qword [rsp]	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000f5d	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000f62	        0x488d5801	                      lea rbx, [rax + 1]	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000f66	            0x7f16	                            jg 0x4000f7e	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000f68	            0xeb7a	                           jmp 0x4000fe4	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000f6a	    0x660f1f440000	                    nop word [rax + rax]	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000f70	        0x4883c501	                              add rbp, 1	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000f74	          0x4939ed	                            cmp r13, rbp	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000f77	            0x7e77	                           jle 0x4000ff0	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000f79	          0x4939ef	                            cmp r15, rbp	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000f7c	            0x7e72	                           jle 0x4000ff0	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000f7e	        0x488d3c2b	                    lea rdi, [rbx + rbp]	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4000f82	      0xe800000000	                          call 0x4000f87	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4000f87	        0x498b5620	            mov rdx, qword [r14 + 0x20] 	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4000f8b	          0x4889c6	                            mov rsi, rax	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4000f8e	        0x488b3cea	            mov rdi, qword [rdx + rbp*8]	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4000f92	      0xe800000000	                          call 0x4000f97	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4000f97	            0x85c0	                           test eax, eax	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4000f99	            0x74d5	                            je 0x4000f70	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4000f9b	    0x48817c2428ff	     cmp qword [rsp + 0x28], 0x7fffffff 	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000fa4	            0x7563	                           jne 0x4001009	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000fa6	          0x4939ed	                            cmp r13, rbp	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000fa9	            0x755e	                           jne 0x4001009	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000fab	        0x49833e00	                      cmp qword [r14], 0	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000faf	     0xf85bbfcffff	                           jne 0x4000c70	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000fb5	        0x488b3424	                    mov rsi, qword [rsp]	      2694	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000fb9	    0x488b05000000	            mov rax, qword [0x04000fc0] 	      2694	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000fc0	        0x488d5601	                      lea rdx, [rsi + 1]	      2694	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000fc4	      0x4889742428	             mov qword [rsp + 0x28], rsi	      2694	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000fc9	        0x48895038	             mov qword [rax + 0x38], rdx	      2694	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000fcd	      0xe99efcffff	                           jmp 0x4000c70	      2694	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000fd2	    0x660f1f440000	                    nop word [rax + rax]	      2694	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000fd8	            0x31ff	                            xor edi, edi	      2730	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	CALL_14
0x4000fda	      0xe800000000	                          call 0x4000fdf	      2730	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	CALL_14
0x4000fdf	      0xe90afdffff	                           jmp 0x4000cee	      2730	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	CALL_14
0x4000fe4	            0x31ed	                            xor ebp, ebp	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000fe6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000ff0	          0x4939ed	                            cmp r13, rbp	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000ff3	            0x750b	                           jne 0x4001000	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000ff5	    0x48817c2428ff	     cmp qword [rsp + 0x28], 0x7fffffff 	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000ffe	            0x74ab	                            je 0x4000fab	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4001000	          0x4939ed	                            cmp r13, rbp	      2696	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4001003	     0xf8e67fcffff	                           jle 0x4000c70	      2696	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4001009	        0x48032c24	                    add rbp, qword [rsp]	      2698	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x400100d	    0x488b05000000	            mov rax, qword [0x04001014] 	      2699	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4001014	        0x488d5501	                      lea rdx, [rbp + 1]	      2699	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4001018	      0x48896c2428	             mov qword [rsp + 0x28], rbp	      2698	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x400101d	        0x48895038	             mov qword [rax + 0x38], rdx	      2699	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4001021	      0xe94afcffff	                           jmp 0x4000c70	      2699	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4001026	          0x4531e4	                          xor r12d, r12d	      2704	undo.c	FUNCTION_41	FOR_1
0x4001029	      0xe9e7fcffff	                           jmp 0x4000d15	      2704	undo.c	FUNCTION_41	FOR_1
0x400102e	          0x4c89ff	                            mov rdi, r15	      2712	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	CALL_11
0x4001031	      0xe800000000	                          call 0x4001036	      2712	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	CALL_11
0x4001036	          0x4c89f7	                            mov rdi, r14	      2712	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	CALL_11
0x4001039	     0xf1f80000000	                         nop dword [rax]	      2712	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	CALL_11
0x4001040	          0x488b1f	                    mov rbx, qword [rdi]	      2719	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4001043	        0x488b7728	            mov rsi, qword [rdi + 0x28] 	      2720	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1	CALL_12
0x4001047	      0xe824f0ffff	                    call sym.u_freeentry	      2720	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1	CALL_12
0x400104c	          0x4885db	                           test rbx, rbx	      2717	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x400104f	          0x4889df	                            mov rdi, rbx	      2717	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4001052	            0x75ec	                           jne 0x4001040	      2717	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4001054	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	      2717	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4001059	        0x8b742440	            mov esi, dword [rsp + 0x40] 	      2795	undo.c	FUNCTION_41
0x400105d	            0x31c0	                            xor eax, eax	      2795	undo.c	FUNCTION_41
0x400105f	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      2794	undo.c	FUNCTION_41
0x4001064	            0x85f6	                           test esi, esi	      2795	undo.c	FUNCTION_41
0x4001066	        0x4c897130	             mov qword [rcx + 0x30], r14	      2794	undo.c	FUNCTION_41
0x400106a	           0xf95c0	                                setne al	      2795	undo.c	FUNCTION_41
0x400106d	         0x344243c	             add eax, dword [rsp + 0x3c]	      2795	undo.c	FUNCTION_41
0x4001071	      0xf644243802	               test byte [rsp + 0x38], 2	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x4001076	          0x894158	             mov dword [rcx + 0x58], eax	      2795	undo.c	FUNCTION_41
0x4001079	            0x7411	                            je 0x400108c	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x400107b	    0x488b05000000	            mov rax, qword [0x04001082] 	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x4001082	        0x48833801	                      cmp qword [rax], 1	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x4001086	     0xf84a9020000	                            je 0x4001335	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x400108c	      0xf644243801	               test byte [rsp + 0x38], 1	      2798	undo.c	FUNCTION_41	IF_21
0x4001091	     0xf851a020000	                           jne 0x40012b1	      2798	undo.c	FUNCTION_41	IF_21
0x4001097	    0x488b3d000000	            mov rdi, qword [0x0400109e] 	      2803	undo.c	FUNCTION_41	ELSE_6	IF_22	CALL_24
0x400109e	      0xe800000000	                          call 0x40010a3	      2803	undo.c	FUNCTION_41	ELSE_6	IF_22	CALL_24
0x40010a3	            0x85c0	                           test eax, eax	      2803	undo.c	FUNCTION_41	ELSE_6	IF_22	CALL_24
0x40010a5	     0xf8464020000	                            je 0x400130f	      2803	undo.c	FUNCTION_41	ELSE_6	IF_22	CALL_24
0x40010ab	    0x488b15000000	            mov rdx, qword [0x040010b2] 	      2803	undo.c	FUNCTION_41	ELSE_6	IF_22	CALL_24
0x40010b2	            0x31c0	                            xor eax, eax	      2803	undo.c	FUNCTION_41	ELSE_6	IF_22	CALL_24
0x40010b4	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      2803	undo.c	FUNCTION_41	ELSE_6	IF_22	CALL_24
0x40010b9	            0xeb25	                           jmp 0x40010e0	      2803	undo.c	FUNCTION_41	ELSE_6	IF_22	CALL_24
0x40010bb	       0xf1f440000	                   nop dword [rax + rax]	      2803	undo.c	FUNCTION_41	ELSE_6	IF_22	CALL_24
0x40010c0	      0x488b740470	      mov rsi, qword [rsp + rax + 0x70] 	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x40010c5	      0x488b7c0478	      mov rdi, qword [rsp + rax + 0x78] 	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x40010ca	      0x4889740160	       mov qword [rcx + rax + 0x60], rsi	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x40010cf	      0x48897c0168	       mov qword [rcx + rax + 0x68], rdi	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x40010d4	        0x4883c010	                           add rax, 0x10	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x40010d8	    0x483da0010000	                          cmp rax, 0x1a0	      2810	undo.c	FUNCTION_41	FOR_5
0x40010de	            0x743f	                            je 0x400111f	      2810	undo.c	FUNCTION_41	FOR_5
0x40010e0	    0x48837c016000	         cmp qword [rcx + rax + 0x60], 0	      2812	undo.c	FUNCTION_41	FOR_5	IF_23
0x40010e6	            0x741a	                            je 0x4001102	      2812	undo.c	FUNCTION_41	FOR_5	IF_23
0x40010e8	      0x488b740160	      mov rsi, qword [rcx + rax + 0x60] 	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x40010ed	      0x488b7c0168	      mov rdi, qword [rcx + rax + 0x68] 	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x40010f2	    0x4889b4025801	      mov qword [rdx + rax + 0x158], rsi	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x40010fa	    0x4889bc026001	      mov qword [rdx + rax + 0x160], rdi	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x4001102	    0x48837c047000	         cmp qword [rsp + rax + 0x70], 0	      2814	undo.c	FUNCTION_41	FOR_5	IF_24
0x4001108	            0x75b6	                           jne 0x40010c0	      2814	undo.c	FUNCTION_41	FOR_5	IF_24
0x400110a	    0x48c744016000	         mov qword [rcx + rax + 0x60], 0	      2817	undo.c	FUNCTION_41	FOR_5	ELSE_7
0x4001113	        0x4883c010	                           add rax, 0x10	      2817	undo.c	FUNCTION_41	FOR_5	ELSE_7
0x4001117	    0x483da0010000	                          cmp rax, 0x1a0	      2810	undo.c	FUNCTION_41	FOR_5
0x400111d	            0x75c1	                           jne 0x40010e0	      2810	undo.c	FUNCTION_41	FOR_5
0x400111f	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      2819	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001124	    0x4883b9000200	              cmp qword [rcx + 0x200], 0	      2819	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400112c	     0xf849d000000	                            je 0x40011cf	      2819	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001132	    0x488b81000200	           mov rax, qword [rcx + 0x200] 	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001139	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400113e	    0x488982f80200	            mov qword [rdx + 0x2f8], rax	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001145	    0x488b81080200	           mov rax, qword [rcx + 0x208] 	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400114c	    0x488982000300	            mov qword [rdx + 0x300], rax	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001153	    0x488b81100200	           mov rax, qword [rcx + 0x210] 	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400115a	    0x488982080300	            mov qword [rdx + 0x308], rax	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001161	    0x488b81180200	           mov rax, qword [rcx + 0x218] 	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001168	    0x488982100300	            mov qword [rdx + 0x310], rax	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400116f	    0x488b81200200	           mov rax, qword [rcx + 0x220] 	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001176	    0x488982180300	            mov qword [rdx + 0x318], rax	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400117d	    0x4889b1000200	            mov qword [rcx + 0x200], rsi	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001184	          0x4889c8	                            mov rax, rcx	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001187	        0x8b4c2464	            mov ecx, dword [rsp + 0x64] 	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400118b	        0x8b742460	            mov esi, dword [rsp + 0x60] 	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400118f	    0x898808020000	            mov dword [rax + 0x208], ecx	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001195	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400119a	    0x89b00c020000	            mov dword [rax + 0x20c], esi	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x40011a0	        0x8b742450	            mov esi, dword [rsp + 0x50] 	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x40011a4	    0x488988100200	            mov qword [rax + 0x210], rcx	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x40011ab	        0x8b4c2454	            mov ecx, dword [rsp + 0x54] 	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x40011af	    0x89b018020000	            mov dword [rax + 0x218], esi	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x40011b5	        0x8b742458	            mov esi, dword [rsp + 0x58] 	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x40011b9	    0x89881c020000	            mov dword [rax + 0x21c], ecx	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x40011bf	        0x8b4c245c	            mov ecx, dword [rsp + 0x5c] 	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x40011c3	    0x89b020020000	            mov dword [rax + 0x220], esi	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x40011c9	    0x898824020000	            mov dword [rax + 0x224], ecx	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x40011cf	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      2830	undo.c	FUNCTION_41	IF_26
0x40011d4	    0x488b0d000000	            mov rcx, qword [0x040011db] 	      2830	undo.c	FUNCTION_41	IF_26
0x40011db	        0x488b7040	            mov rsi, qword [rax + 0x40] 	      2830	undo.c	FUNCTION_41	IF_26
0x40011df	        0x488b4138	            mov rax, qword [rcx + 0x38] 	      2830	undo.c	FUNCTION_41	IF_26
0x40011e3	        0x488d7e01	                      lea rdi, [rsi + 1]	      2831	undo.c	FUNCTION_41	IF_26
0x40011e7	          0x4839c7	                            cmp rdi, rax	      2831	undo.c	FUNCTION_41	IF_26
0x40011ea	            0x750e	                           jne 0x40011fa	      2831	undo.c	FUNCTION_41	IF_26
0x40011ec	        0x4883f801	                              cmp rax, 1	      2831	undo.c	FUNCTION_41	IF_26
0x40011f0	            0x7e08	                           jle 0x40011fa	      2831	undo.c	FUNCTION_41	IF_26
0x40011f2	        0x4883e801	                              sub rax, 1	      2832	undo.c	FUNCTION_41	IF_26
0x40011f6	        0x48894138	             mov qword [rcx + 0x38], rax	      2832	undo.c	FUNCTION_41	IF_26
0x40011fa	          0x483902	                    cmp qword [rdx], rax	      2833	undo.c	FUNCTION_41	IF_27
0x40011fd	     0xf8cb8000000	                            jl 0x40012bb	      2833	undo.c	FUNCTION_41	IF_27
0x4001203	          0x4839c6	                            cmp rsi, rax	      2835	undo.c	FUNCTION_41	IF_27	IF_28
0x4001206	     0xf84dc000000	                            je 0x40012e8	      2835	undo.c	FUNCTION_41	IF_27	IF_28
0x400120c	      0xbf06000000	                              mov edi, 6	      2846	undo.c	FUNCTION_41	IF_27	CALL_28
0x4001211	      0xe800000000	                          call 0x4001216	      2846	undo.c	FUNCTION_41	IF_27	CALL_28
0x4001216	      0xe800000000	                          call 0x400121b	      2861	undo.c	FUNCTION_41	CALL_29
0x400121b	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      2864	undo.c	FUNCTION_41
0x4001220	    0x488b05000000	            mov rax, qword [0x04001227] 	      2864	undo.c	FUNCTION_41
0x4001227	        0x488b5120	            mov rdx, qword [rcx + 0x20] 	      2864	undo.c	FUNCTION_41
0x400122b	    0x488990481200	          mov qword [rax + 0x1248], rdx 	      2864	undo.c	FUNCTION_41
0x4001232	        0x8b542444	            mov edx, dword [rsp + 0x44] 	      2865	undo.c	FUNCTION_41	IF_30
0x4001236	            0x85d2	                           test edx, edx	      2865	undo.c	FUNCTION_41	IF_30
0x4001238	     0xf8490000000	                            je 0x40012ce	      2865	undo.c	FUNCTION_41	IF_30
0x400123e	          0x488b11	                    mov rdx, qword [rcx]	      2869	undo.c	FUNCTION_41	IF_30	IF_31
0x4001241	          0x4885d2	                           test rdx, rdx	      2869	undo.c	FUNCTION_41	IF_30	IF_31
0x4001244	     0xf840e010000	                            je 0x4001358	      2869	undo.c	FUNCTION_41	IF_30	IF_31
0x400124a	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      2870	undo.c	FUNCTION_41	IF_30	IF_31
0x400124e	    0x488990481200	          mov qword [rax + 0x1248], rdx 	      2870	undo.c	FUNCTION_41	IF_30	IF_31
0x4001255	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      2876	undo.c	FUNCTION_41	ELSE_11	IF_32
0x400125a	    0x488b92300200	           mov rdx, qword [rdx + 0x230] 	      2876	undo.c	FUNCTION_41	ELSE_11	IF_32
0x4001261	          0x4885d2	                           test rdx, rdx	      2876	undo.c	FUNCTION_41	ELSE_11	IF_32
0x4001264	            0x740b	                            je 0x4001271	      2876	undo.c	FUNCTION_41	ELSE_11	IF_32
0x4001266	        0x4883ea01	                              sub rdx, 1	      2879	undo.c	FUNCTION_41	ELSE_11	IF_32	IF_33
0x400126a	    0x488990581200	          mov qword [rax + 0x1258], rdx 	      2879	undo.c	FUNCTION_41	ELSE_11	IF_32	IF_33
0x4001271	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      2886	undo.c	FUNCTION_41
0x4001276	    0x488b96280200	           mov rdx, qword [rsi + 0x228] 	      2886	undo.c	FUNCTION_41
0x400127d	    0x488990501200	          mov qword [rax + 0x1250], rdx 	      2886	undo.c	FUNCTION_41
0x4001284	    0x488b84241802	           mov rax, qword [rsp + 0x218] 	      2888	undo.c	FUNCTION_41	CALL_30
0x400128c	    0x644833042528	                xor rax, qword fs:[0x28]	      2888	undo.c	FUNCTION_41	CALL_30
0x4001295	     0xf85cd000000	                           jne 0x4001368	      2888	undo.c	FUNCTION_41	CALL_30
0x400129b	    0x4881c4280200	                          add rsp, 0x228	      2892	undo.c	FUNCTION_41
0x40012a2	              0x5b	                                 pop rbx	      2892	undo.c	FUNCTION_41
0x40012a3	              0x5d	                                 pop rbp	      2892	undo.c	FUNCTION_41
0x40012a4	            0x415c	                                 pop r12	      2892	undo.c	FUNCTION_41
0x40012a6	            0x415d	                                 pop r13	      2892	undo.c	FUNCTION_41
0x40012a8	            0x415e	                                 pop r14	      2892	undo.c	FUNCTION_41
0x40012aa	            0x415f	                                 pop r15	      2892	undo.c	FUNCTION_41
0x40012ac	      0xe900000000	                           jmp 0x40012b1	      2888	undo.c	FUNCTION_41	CALL_30
0x40012b1	      0xe800000000	                          call 0x40012b6	      2799	undo.c	FUNCTION_41	CALL_23
0x40012b6	      0xe9f0fdffff	                           jmp 0x40010ab	      2799	undo.c	FUNCTION_41	CALL_23
0x40012bb	    0xc74140000000	               mov dword [rcx + 0x40], 0	      2854	undo.c	FUNCTION_41	ELSE_10
0x40012c2	    0xc74144000000	               mov dword [rcx + 0x44], 0	      2856	undo.c	FUNCTION_41	ELSE_10
0x40012c9	      0xe948ffffff	                           jmp 0x4001216	      2856	undo.c	FUNCTION_41	ELSE_10
0x40012ce	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      2876	undo.c	FUNCTION_41	ELSE_11	IF_32
0x40012d3	    0x488b92300200	           mov rdx, qword [rdx + 0x230] 	      2876	undo.c	FUNCTION_41	ELSE_11	IF_32
0x40012da	          0x4885d2	                           test rdx, rdx	      2876	undo.c	FUNCTION_41	ELSE_11	IF_32
0x40012dd	            0x7492	                            je 0x4001271	      2876	undo.c	FUNCTION_41	ELSE_11	IF_32
0x40012df	    0x488990581200	          mov qword [rax + 0x1258], rdx 	      2881	undo.c	FUNCTION_41	ELSE_11	IF_32	ELSE_12
0x40012e6	            0xeb89	                           jmp 0x4001271	      2881	undo.c	FUNCTION_41	ELSE_11	IF_32	ELSE_12
0x40012e8	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	      2837	undo.c	FUNCTION_41	IF_27	IF_28
0x40012ed	          0x8b4348	            mov eax, dword [rbx + 0x48] 	      2837	undo.c	FUNCTION_41	IF_27	IF_28
0x40012f0	          0x894140	             mov dword [rcx + 0x40], eax	      2837	undo.c	FUNCTION_41	IF_27	IF_28
0x40012f3	      0xe800000000	                          call 0x40012f8	      2839	undo.c	FUNCTION_41	IF_27	IF_28	IF_29	CALL_26
0x40012f8	            0x85c0	                           test eax, eax	      2839	undo.c	FUNCTION_41	IF_27	IF_28	IF_29	CALL_26
0x40012fa	            0x7426	                            je 0x4001322	      2839	undo.c	FUNCTION_41	IF_27	IF_28	IF_29	CALL_26
0x40012fc	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      2839	undo.c	FUNCTION_41	IF_27	IF_28	IF_29	CALL_26
0x4001300	          0x4885ff	                           test rdi, rdi	      2839	undo.c	FUNCTION_41	IF_27	IF_28	IF_29	CALL_26
0x4001303	            0x781d	                            js 0x4001322	      2839	undo.c	FUNCTION_41	IF_27	IF_28	IF_29	CALL_26
0x4001305	      0xe800000000	                          call 0x400130a	      2840	undo.c	FUNCTION_41	IF_27	IF_28	CALL_27
0x400130a	      0xe907ffffff	                           jmp 0x4001216	      2840	undo.c	FUNCTION_41	IF_27	IF_28	CALL_27
0x400130f	    0x488b3d000000	            mov rdi, qword [0x04001316] 	      2805	undo.c	FUNCTION_41	ELSE_6	IF_22
0x4001316	            0x31f6	                            xor esi, esi	      2805	undo.c	FUNCTION_41	ELSE_6	IF_22
0x4001318	      0xe800000000	                          call 0x400131d	      2805	undo.c	FUNCTION_41	ELSE_6	IF_22
0x400131d	      0xe989fdffff	                           jmp 0x40010ab	      2805	undo.c	FUNCTION_41	ELSE_6	IF_22
0x4001322	    0x488b05000000	            mov rax, qword [0x04001329] 	      2842	undo.c	FUNCTION_41	IF_27	IF_28	ELSE_8
0x4001329	    0xc74044000000	               mov dword [rax + 0x44], 0	      2842	undo.c	FUNCTION_41	IF_27	IF_28	ELSE_8
0x4001330	      0xe9e1feffff	                           jmp 0x4001216	      2842	undo.c	FUNCTION_41	IF_27	IF_28	ELSE_8
0x4001335	      0xbf01000000	                              mov edi, 1	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x400133a	      0xe800000000	                          call 0x400133f	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x400133f	          0x803800	                       cmp byte [rax], 0	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x4001342	     0xf8544fdffff	                           jne 0x400108c	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x4001348	    0x488b05000000	            mov rax, qword [0x0400134f] 	      2797	undo.c	FUNCTION_41	IF_20
0x400134f	        0x83481001	                or dword [rax + 0x10], 1	      2797	undo.c	FUNCTION_41	IF_20
0x4001353	      0xe934fdffff	                           jmp 0x400108c	      2797	undo.c	FUNCTION_41	IF_20
0x4001358	    0x48c780481200	            mov qword [rax + 0x1248], 0 	      2872	undo.c	FUNCTION_41	IF_30	ELSE_11
0x4001363	      0xe9edfeffff	                           jmp 0x4001255	      2872	undo.c	FUNCTION_41	IF_30	ELSE_11
0x4001368	      0xe800000000	                          call 0x400136d	      2888	undo.c	FUNCTION_41	CALL_30
undo_time	functions,0:CALL,14:DO,0:SWITCH,0:WHILE,6:FOR,1:IF,47:ELSE,18	466
0x4003150	            0x4157	                                push r15	      2266	undo.c	FUNCTION_40
0x4003152	            0x4156	                                push r14	      2266	undo.c	FUNCTION_40
0x4003154	            0x4155	                                push r13	      2266	undo.c	FUNCTION_40
0x4003156	            0x4154	                                push r12	      2266	undo.c	FUNCTION_40
0x4003158	              0x55	                                push rbp	      2266	undo.c	FUNCTION_40
0x4003159	              0x53	                                push rbx	      2266	undo.c	FUNCTION_40
0x400315a	        0x4883ec48	                           sub rsp, 0x48	      2266	undo.c	FUNCTION_40
0x400315e	    0x4c8b0d000000	              mov r9, qword [0x04003165]	      2283	undo.c	FUNCTION_40	IF_1
0x4003165	      0x48897c2410	             mov qword [rsp + 0x10], rdi	      2266	undo.c	FUNCTION_40
0x400316a	        0x894c240c	              mov dword [rsp + 0xc], ecx	      2266	undo.c	FUNCTION_40
0x400316e	    0x418bb9341200	           mov edi, dword [r9 + 0x1234] 	      2283	undo.c	FUNCTION_40	IF_1
0x4003175	            0x85ff	                           test edi, edi	      2283	undo.c	FUNCTION_40	IF_1
0x4003177	     0xf84af040000	                            je 0x400362c	      2283	undo.c	FUNCTION_40	IF_1
0x400317d	      0x41f6411001	                test byte [r9 + 0x10], 1	      2288	undo.c	FUNCTION_40	IF_2
0x4003182	    0x48c705000000	               mov qword [0x0400318d], 0	      2286	undo.c	FUNCTION_40
0x400318d	    0x48c705000000	               mov qword [0x04003198], 0	      2287	undo.c	FUNCTION_40
0x4003198	            0x740b	                            je 0x40031a5	      2288	undo.c	FUNCTION_40	IF_2
0x400319a	    0x48c705000000	mov qword [0x040031a5], 0xffffffffffffffff 	      2289	undo.c	FUNCTION_40	IF_2
0x40031a5	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      2293	undo.c	FUNCTION_40	IF_3
0x40031a9	            0x85c9	                           test ecx, ecx	      2293	undo.c	FUNCTION_40	IF_3
0x40031ab	     0xf84af030000	                            je 0x4003560	      2293	undo.c	FUNCTION_40	IF_3
0x40031b1	    0x498b81481200	           mov rax, qword [r9 + 0x1248] 	      2293	undo.c	FUNCTION_40	IF_3
0x40031b8	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	      2293	undo.c	FUNCTION_40	IF_3
0x40031bd	    0x49c7c7ffffff	             mov r15, 0xffffffffffffffff	      2296	undo.c	FUNCTION_40	IF_3
0x40031c4	      0x4889442428	             mov qword [rsp + 0x28], rax	      2296	undo.c	FUNCTION_40	IF_3
0x40031c9	          0x4d85f6	                           test r14, r14	      2363	undo.c	FUNCTION_40	IF_16
0x40031cc	     0xf840c050000	                            je 0x40036de	      2363	undo.c	FUNCTION_40	IF_16
0x40031d2	    0x8b0500000000	            mov eax, dword [0x040031d8] 	      2363	undo.c	FUNCTION_40	IF_16
0x40031d8	    0x4d8b99281200	           mov r11, qword [r9 + 0x1228] 	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x40031df	          0x4531ed	                          xor r13d, r13d	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x40031e2	      0x488b6c2428	            mov rbp, qword [rsp + 0x28] 	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x40031e7	      0x4c897c2418	             mov qword [rsp + 0x18], r15	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x40031ec	    0x41b801000000	                              mov r8d, 1	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x40031f2	          0x4d89ca	                             mov r10, r9	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x40031f5	          0x8d4801	                      lea ecx, [rax + 1]	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x40031f8	          0x4d85db	                           test r11, r11	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x40031fb	          0x4c89d8	                            mov rax, r11	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x40031fe	            0x89cb	                            mov ebx, ecx	      2383	undo.c	FUNCTION_40	FOR_1
0x4003200	        0x448d6101	                     lea r12d, [rcx + 1]	      2383	undo.c	FUNCTION_40	FOR_1
0x4003204	     0xf84eb030000	                            je 0x40035f5	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x400320a	      0x4c89542420	             mov qword [rsp + 0x20], r10	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x400320f	            0xeb3e	                           jmp 0x400324f	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x4003211	     0xf1f80000000	                         nop dword [rax]	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x4003218	        0x4183f801	                              cmp r8d, 1	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x400321c	    0x488bb8280200	           mov rdi, qword [rax + 0x228] 	      2395	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_18
0x4003223	     0xf84b2060000	                            je 0x40038db	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x4003229	        0x488b7808	                mov rdi, qword [rax + 8]	      2436	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x400322d	          0x4885ff	                           test rdi, rdi	      2436	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x4003230	     0xf8422020000	                            je 0x4003458	      2436	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x4003236	        0x448b4f28	            mov r9d, dword [rdi + 0x28] 	      2436	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x400323a	          0x4539e1	                           cmp r9d, r12d	      2437	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x400323d	     0xf8415020000	                            je 0x4003458	      2437	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x4003243	          0x4439c9	                            cmp ecx, r9d	      2437	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x4003246	     0xf840c020000	                            je 0x4003458	      2437	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x400324c	          0x4889f8	                            mov rax, rdi	      2437	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x400324f	            0x85f6	                           test esi, esi	      2394	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_18
0x4003251	          0x894828	             mov dword [rax + 0x28], ecx	      2393	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1
0x4003254	            0x75c2	                           jne 0x4003218	      2394	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_18
0x4003256	            0x85d2	                           test edx, edx	      2396	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_11	IF_19
0x4003258	     0xf843a020000	                            je 0x4003498	      2396	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_11	IF_19
0x400325e	        0x4183f801	                              cmp r8d, 1	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x4003262	    0x488bb8300200	           mov rdi, qword [rax + 0x230] 	      2397	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_11	IF_19
0x4003269	     0xf845c050000	                            je 0x40037cb	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x400326f	          0x4c39f7	                            cmp rdi, r14	      2429	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x4003272	            0x75b5	                           jne 0x4003229	      2429	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x4003274	            0x85f6	                           test esi, esi	      2429	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x4003276	            0x75b1	                           jne 0x4003229	      2429	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x4003278	        0x488b6820	            mov rbp, qword [rax + 0x20] 	      2431	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x400327c	    0x448925000000	           mov dword [0x04003283], r12d 	      2431	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x4003283	    0x8b0500000000	            mov eax, dword [0x04003289] 	      2501	undo.c	FUNCTION_40	IF_33	WHILE_2
0x4003289	          0x4589ee	                          mov r14d, r13d	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x400328c	        0x4183f601	                             xor r14d, 1	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x4003290	        0x4183e601	                             and r14d, 1	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x4003294	            0x85c0	                           test eax, eax	      2501	undo.c	FUNCTION_40	IF_33	WHILE_2
0x4003296	     0xf8496010000	                            je 0x4003432	      2501	undo.c	FUNCTION_40	IF_33	WHILE_2
0x400329c	         0xf1f4000	                         nop dword [rax]	      2501	undo.c	FUNCTION_40	IF_33	WHILE_2
0x40032a0	          0x4885ed	                           test rbp, rbp	      2521	undo.c	FUNCTION_40	IF_33	IF_37
0x40032a3	     0xf8e68020000	                           jle 0x4003511	      2521	undo.c	FUNCTION_40	IF_33	IF_37
0x40032a9	    0x41bc01000000	                             mov r12d, 1	      2521	undo.c	FUNCTION_40	IF_33	IF_37
0x40032af	        0x4183e501	                             and r13d, 1	      2573	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x40032b3	       0xf1f440000	                   nop dword [rax + rax]	      2573	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x40032b8	    0x8b0500000000	            mov eax, dword [0x040032be] 	      2526	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x40032be	            0x85c0	                           test eax, eax	      2526	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x40032c0	     0xf8551020000	                           jne 0x4003517	      2526	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x40032c6	            0x31ff	                            xor edi, edi	      2529	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	CALL_11
0x40032c8	      0xe800000000	                          call 0x40032cd	      2529	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	CALL_11
0x40032cd	    0x488b35000000	            mov rsi, qword [0x040032d4] 	      2531	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x40032d4	    0x488b8e281200	          mov rcx, qword [rsi + 0x1228] 	      2531	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x40032db	          0x4885c9	                           test rcx, rcx	      2532	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_38
0x40032de	            0x7510	                           jne 0x40032f0	      2532	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_38
0x40032e0	      0xe932020000	                           jmp 0x4003517	      2532	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_38
0x40032e5	           0xf1f00	                         nop dword [rax]	      2532	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_38
0x40032e8	          0x395828	            cmp dword [rax + 0x28], ebx 	      2537	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x40032eb	            0x750c	                           jne 0x40032f9	      2537	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x40032ed	          0x4889c1	                            mov rcx, rax	      2537	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x40032f0	        0x488b4118	            mov rax, qword [rcx + 0x18] 	      2536	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x40032f4	          0x4885c0	                           test rax, rax	      2536	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x40032f7	            0x75ef	                           jne 0x40032e8	      2536	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x40032f9	          0x4989ce	                            mov r14, rcx	      2536	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x40032fc	            0xeb0a	                           jmp 0x4003308	      2536	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x40032fe	            0x6690	                                     nop	      2536	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x4003300	          0x395a28	            cmp dword [rdx + 0x28], ebx 	      2543	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x4003303	            0x750c	                           jne 0x4003311	      2543	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x4003305	          0x4989d6	                            mov r14, rdx	      2543	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x4003308	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	      2542	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x400330c	          0x4885d2	                           test rdx, rdx	      2542	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x400330f	            0x75ef	                           jne 0x4003300	      2542	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x4003311	          0x4c39f1	                            cmp rcx, r14	      2545	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x4003314	            0x7511	                           jne 0x4003327	      2545	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x4003316	            0xeb52	                           jmp 0x400336a	      2545	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x4003318	     0xf1f84000000	                   nop dword [rax + rax]	      2545	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x4003320	          0x4889c1	                            mov rcx, rax	      2545	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x4003323	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2545	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x4003327	          0x4885c0	                           test rax, rax	      2549	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	WHILE_6
0x400332a	            0x75f4	                           jne 0x4003320	      2549	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	WHILE_6
0x400332c	          0x4885d2	                           test rdx, rdx	      2551	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_40
0x400332f	            0x7408	                            je 0x4003339	      2551	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_40
0x4003331	        0x498b4618	            mov rax, qword [r14 + 0x18] 	      2553	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_40
0x4003335	        0x48894218	             mov qword [rdx + 0x18], rax	      2552	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_40
0x4003339	        0x498b4618	            mov rax, qword [r14 + 0x18] 	      2554	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x400333d	        0x48895010	             mov qword [rax + 0x10], rdx	      2554	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x4003341	    0x49c746180000	               mov qword [r14 + 0x18], 0	      2556	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x4003349	        0x49894e10	             mov qword [r14 + 0x10], rcx	      2557	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x400334d	        0x4c897118	             mov qword [rcx + 0x18], r14	      2558	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x4003351	    0x483b8e181200	          cmp rcx, qword [rsi + 0x1218] 	      2560	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_41
0x4003358	     0xf84c2020000	                            je 0x4003620	      2560	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_41
0x400335e	          0x498b06	                    mov rax, qword [r14]	      2563	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_42
0x4003361	          0x4885c0	                           test rax, rax	      2563	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_42
0x4003364	            0x7404	                            je 0x400336a	      2563	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_42
0x4003366	        0x4c897008	                mov qword [rax + 8], r14	      2564	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_42
0x400336a	        0x41395e28	            cmp dword [r14 + 0x28], ebx 	      2568	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_43
0x400336e	    0x4c89b6281200	          mov qword [rsi + 0x1228], r14 	      2566	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4003375	     0xf859c010000	                           jne 0x4003517	      2568	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_43
0x400337b	        0x49396e20	            cmp qword [r14 + 0x20], rbp 	      2573	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x400337f	            0x7509	                           jne 0x400338a	      2573	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x4003381	          0x4584ed	                         test r13b, r13b	      2573	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x4003384	     0xf8518040000	                           jne 0x40037a2	      2573	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x400338a	            0x31ff	                            xor edi, edi	      2579	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	CALL_12
0x400338c	      0xe80fd7ffff	                     call sym.u_undoredo	      2579	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	CALL_12
0x4003391	        0x498b4608	                mov rax, qword [r14 + 8]	      2583	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_45
0x4003395	    0x488b15000000	            mov rdx, qword [0x0400339c] 	      2584	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_45
0x400339c	          0x4885c0	                           test rax, rax	      2583	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_45
0x400339f	     0xf846b020000	                            je 0x4003610	      2583	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_45
0x40033a5	        0x49396e20	            cmp qword [r14 + 0x20], rbp 	      2588	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_46
0x40033a9	    0x488982281200	          mov qword [rdx + 0x1228], rax 	      2585	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x40033b0	     0xf8438030000	                            je 0x40036ee	      2588	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_46
0x40033b6	        0x498b4608	                mov rax, qword [r14 + 8]	      2591	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x40033ba	          0x4885c0	                           test rax, rax	      2592	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47
0x40033bd	            0x740c	                            je 0x40033cb	      2592	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47
0x40033bf	          0x4531e4	                          xor r12d, r12d	      2586	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x40033c2	          0x395828	            cmp dword [rax + 0x28], ebx 	      2592	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47
0x40033c5	     0xf84edfeffff	                            je 0x40032b8	      2592	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47
0x40033cb	      0xbf00000000	                              mov edi, 0	      2595	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47	CALL_13
0x40033d0	          0x4531e4	                          xor r12d, r12d	      2586	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x40033d3	      0xe800000000	                          call 0x40033d8	      2595	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47	CALL_13
0x40033d8	      0xe93a010000	                           jmp 0x4003517	      2596	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47
0x40033dd	           0xf1f00	                         nop dword [rax]	      2596	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47
0x40033e0	          0x4c8b3a	                    mov r15, qword [rdx]	      2510	undo.c	FUNCTION_40	IF_33	WHILE_2	ELSE_18
0x40033e3	          0x4d85ff	                           test r15, r15	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x40033e6	     0xf84b4feffff	                            je 0x40032a0	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x40033ec	          0x4885ed	                           test rbp, rbp	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x40033ef	            0x7e0a	                           jle 0x40033fb	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x40033f1	        0x41395f28	            cmp dword [r15 + 0x28], ebx 	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x40033f5	     0xf85aefeffff	                           jne 0x40032a9	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x40033fb	        0x49396f20	            cmp qword [r15 + 0x20], rbp 	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x40033ff	            0x7509	                           jne 0x400340a	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x4003401	          0x4584f6	                         test r14b, r14b	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x4003404	     0xf8596feffff	                           jne 0x40032a0	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x400340a	    0x4c89b8281200	          mov qword [rax + 0x1228], r15 	      2514	undo.c	FUNCTION_40	IF_33	WHILE_2
0x4003411	      0xbf01000000	                              mov edi, 1	      2515	undo.c	FUNCTION_40	IF_33	WHILE_2	CALL_10
0x4003416	      0xe885d6ffff	                     call sym.u_undoredo	      2515	undo.c	FUNCTION_40	IF_33	WHILE_2	CALL_10
0x400341b	          0x4885ed	                           test rbp, rbp	      2516	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_36
0x400341e	     0xf8fb1020000	                            jg 0x40036d5	      2516	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_36
0x4003424	    0x8b0500000000	            mov eax, dword [0x0400342a] 	      2501	undo.c	FUNCTION_40	IF_33	WHILE_2
0x400342a	            0x85c0	                           test eax, eax	      2501	undo.c	FUNCTION_40	IF_33	WHILE_2
0x400342c	     0xf856efeffff	                           jne 0x40032a0	      2501	undo.c	FUNCTION_40	IF_33	WHILE_2
0x4003432	            0x31ff	                            xor edi, edi	      2504	undo.c	FUNCTION_40	IF_33	WHILE_2	CALL_9
0x4003434	      0xe800000000	                          call 0x4003439	      2504	undo.c	FUNCTION_40	IF_33	WHILE_2	CALL_9
0x4003439	    0x488b05000000	            mov rax, qword [0x04003440] 	      2506	undo.c	FUNCTION_40	IF_33	WHILE_2
0x4003440	    0x488b90281200	          mov rdx, qword [rax + 0x1228] 	      2506	undo.c	FUNCTION_40	IF_33	WHILE_2
0x4003447	          0x4885d2	                           test rdx, rdx	      2507	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_34
0x400344a	            0x7594	                           jne 0x40033e0	      2507	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_34
0x400344c	    0x4c8bb8201200	          mov r15, qword [rax + 0x1220] 	      2508	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_34
0x4003453	            0xeb8e	                           jmp 0x40033e3	      2508	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_34
0x4003455	           0xf1f00	                         nop dword [rax]	      2508	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_34
0x4003458	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      2441	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x400345c	          0x4885ff	                           test rdi, rdi	      2441	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x400345f	            0x7412	                            je 0x4003473	      2441	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x4003461	        0x448b4f28	            mov r9d, dword [rdi + 0x28] 	      2442	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x4003465	          0x4439c9	                            cmp ecx, r9d	      2443	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x4003468	            0x7409	                            je 0x4003473	      2443	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x400346a	          0x4539e1	                           cmp r9d, r12d	      2443	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x400346d	     0xf85d9fdffff	                           jne 0x400324c	      2443	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x4003473	          0x488b38	                    mov rdi, qword [rax]	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x4003476	          0x4885ff	                           test rdi, rdi	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x4003479	            0x7435	                            je 0x40034b0	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x400347b	        0x4c8b4818	              mov r9, qword [rax + 0x18]	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x400347f	          0x4d85c9	                             test r9, r9	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x4003482	     0xf84b0000000	                            je 0x4003538	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x4003488	        0x44896028	            mov dword [rax + 0x28], r12d	      2461	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15
0x400348c	          0x4c89c8	                             mov rax, r9	      2461	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15
0x400348f	      0xe9bbfdffff	                           jmp 0x400324f	      2461	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15
0x4003494	         0xf1f4000	                         nop dword [rax]	      2461	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15
0x4003498	        0x4183f801	                              cmp r8d, 1	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x400349c	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      2399	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12
0x40034a0	     0xf85c9fdffff	                           jne 0x400326f	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x40034a6	      0x48897c2430	             mov qword [rsp + 0x30], rdi	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x40034ab	      0xe92d030000	                           jmp 0x40037dd	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x40034b0	        0x488b7818	            mov rdi, qword [rax + 0x18] 	      2462	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	IF_27
0x40034b4	        0x44896028	            mov dword [rax + 0x28], r12d	      2461	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15
0x40034b8	          0x4885ff	                           test rdi, rdi	      2462	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	IF_27
0x40034bb	     0xf858bfdffff	                           jne 0x400324c	      2462	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	IF_27
0x40034c1	      0x4c8b542420	            mov r10, qword [rsp + 0x20] 	      2462	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	IF_27
0x40034c6	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      2472	undo.c	FUNCTION_40	FOR_1	IF_29
0x40034ca	            0x85c0	                           test eax, eax	      2472	undo.c	FUNCTION_40	FOR_1	IF_29
0x40034cc	     0xf8524020000	                           jne 0x40036f6	      2472	undo.c	FUNCTION_40	FOR_1	IF_29
0x40034d2	      0x4c3b7c2418	            cmp r15, qword [rsp + 0x18] 	      2478	undo.c	FUNCTION_40	FOR_1	IF_30
0x40034d7	     0xf848a020000	                            je 0x4003767	      2478	undo.c	FUNCTION_40	FOR_1	IF_30
0x40034dd	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2491	undo.c	FUNCTION_40	FOR_1	IF_32
0x40034e3	      0xb801000000	                              mov eax, 1	      2491	undo.c	FUNCTION_40	FOR_1	IF_32
0x40034e8	        0x440f48e8	                         cmovs r13d, eax	      2491	undo.c	FUNCTION_40	FOR_1	IF_32
0x40034ec	        0x4183c001	                              add r8d, 1	      2377	undo.c	FUNCTION_40	FOR_1
0x40034f0	          0x83c102	                              add ecx, 2	      2377	undo.c	FUNCTION_40	FOR_1
0x40034f3	            0x31f6	                            xor esi, esi	      2488	undo.c	FUNCTION_40	FOR_1
0x40034f5	            0x31d2	                            xor edx, edx	      2489	undo.c	FUNCTION_40	FOR_1
0x40034f7	        0x4183f803	                              cmp r8d, 3	      2377	undo.c	FUNCTION_40	FOR_1
0x40034fb	     0xf85df000000	                           jne 0x40035e0	      2377	undo.c	FUNCTION_40	FOR_1
0x4003501	          0x4885ed	                           test rbp, rbp	      2496	undo.c	FUNCTION_40	IF_33
0x4003504	    0x448925000000	           mov dword [0x0400350b], r12d 	      2496	undo.c	FUNCTION_40	IF_33
0x400350b	     0xf8472fdffff	                            je 0x4003283	      2496	undo.c	FUNCTION_40	IF_33
0x4003511	    0x41bc01000000	                             mov r12d, 1	      2280	undo.c	FUNCTION_40
0x4003517	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      2601	undo.c	FUNCTION_40	CALL_14
0x400351b	        0x4883c448	                           add rsp, 0x48	      2602	undo.c	FUNCTION_40
0x400351f	          0x4489e7	                           mov edi, r12d	      2601	undo.c	FUNCTION_40	CALL_14
0x4003522	              0x5b	                                 pop rbx	      2602	undo.c	FUNCTION_40
0x4003523	              0x5d	                                 pop rbp	      2602	undo.c	FUNCTION_40
0x4003524	            0x415c	                                 pop r12	      2602	undo.c	FUNCTION_40
0x4003526	            0x415d	                                 pop r13	      2602	undo.c	FUNCTION_40
0x4003528	            0x415e	                                 pop r14	      2602	undo.c	FUNCTION_40
0x400352a	            0x415f	                                 pop r15	      2602	undo.c	FUNCTION_40
0x400352c	      0xe93fdeffff	                      jmp sym.u_undo_end	      2601	undo.c	FUNCTION_40	CALL_14
0x4003531	     0xf1f80000000	                         nop dword [rax]	      2601	undo.c	FUNCTION_40	CALL_14
0x4003538	        0x448b4f28	            mov r9d, dword [rdi + 0x28] 	      2449	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x400353c	          0x4439c9	                            cmp ecx, r9d	      2450	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x400353f	     0xf8474010000	                            je 0x40036b9	      2450	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x4003545	          0x4539e1	                           cmp r9d, r12d	      2450	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x4003548	     0xf846b010000	                            je 0x40036b9	      2450	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x400354e	          0x4c39d8	                            cmp rax, r11	      2453	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25	IF_26
0x4003551	     0xf85f5fcffff	                           jne 0x400324c	      2453	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25	IF_26
0x4003557	        0x45896328	            mov dword [r11 + 0x28], r12d	      2454	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25	IF_26
0x400355b	      0xe9ecfcffff	                           jmp 0x400324c	      2454	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25	IF_26
0x4003560	            0x85f6	                           test esi, esi	      2300	undo.c	FUNCTION_40	ELSE_1	IF_4
0x4003562	            0x7439	                            je 0x400359d	      2300	undo.c	FUNCTION_40	ELSE_1	IF_4
0x4003564	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2301	undo.c	FUNCTION_40	ELSE_1	IF_4
0x4003569	          0x4989c6	                            mov r14, rax	      2301	undo.c	FUNCTION_40	ELSE_1	IF_4
0x400356c	    0x4d03b1501200	            add r14, qword [r9 + 0x1250]	      2301	undo.c	FUNCTION_40	ELSE_1	IF_4
0x4003573	          0x4885c0	                           test rax, rax	      2341	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x4003576	     0xf8911010000	                           jns 0x400368d	      2341	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x400357c	          0x4d85f6	                           test r14, r14	      2343	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11	IF_12
0x400357f	     0xf8859010000	                            js 0x40036de	      2343	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11	IF_12
0x4003585	    0x498b81481200	           mov rax, qword [r9 + 0x1248] 	      2343	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11	IF_12
0x400358c	    0x49c7c7ffffff	             mov r15, 0xffffffffffffffff	      2345	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x4003593	      0x4889442428	             mov qword [rsp + 0x28], rax	      2345	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x4003598	      0xe92cfcffff	                           jmp 0x40031c9	      2345	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x400359d	            0x85d2	                           test edx, edx	      2302	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5
0x400359f	     0xf85ad000000	                           jne 0x4003652	      2302	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5
0x40035a5	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      2340	undo.c	FUNCTION_40	ELSE_1	ELSE_6
0x40035aa	    0x498b81481200	           mov rax, qword [r9 + 0x1248] 	      2340	undo.c	FUNCTION_40	ELSE_1	ELSE_6
0x40035b1	          0x4885db	                           test rbx, rbx	      2341	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x40035b4	        0x4c8d3403	                    lea r14, [rbx + rax]	      2340	undo.c	FUNCTION_40	ELSE_1	ELSE_6
0x40035b8	            0x78c2	                            js 0x400357c	      2341	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x40035ba	    0x498b91381200	           mov rdx, qword [r9 + 0x1238] 	      2341	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x40035c1	        0x4c8d7a02	                      lea r15, [rdx + 2]	      2354	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_9
0x40035c5	            0x31d2	                            xor edx, edx	      2354	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_9
0x40035c7	      0x4889442428	             mov qword [rsp + 0x28], rax	      2354	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_9
0x40035cc	        0x498d47ff	                      lea rax, [r15 - 1]	      2356	undo.c	FUNCTION_40	ELSE_1	ELSE_7	IF_15
0x40035d0	          0x4d39f7	                            cmp r15, r14	      2356	undo.c	FUNCTION_40	ELSE_1	ELSE_7	IF_15
0x40035d3	        0x4c0f4ef0	                         cmovle r14, rax	      2356	undo.c	FUNCTION_40	ELSE_1	ELSE_7	IF_15
0x40035d7	      0xe9edfbffff	                           jmp 0x40031c9	      2356	undo.c	FUNCTION_40	ELSE_1	ELSE_7	IF_15
0x40035dc	         0xf1f4000	                         nop dword [rax]	      2356	undo.c	FUNCTION_40	ELSE_1	ELSE_7	IF_15
0x40035e0	          0x4d85db	                           test r11, r11	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x40035e3	          0x4989ee	                            mov r14, rbp	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x40035e6	            0x89cb	                            mov ebx, ecx	      2383	undo.c	FUNCTION_40	FOR_1
0x40035e8	        0x448d6101	                     lea r12d, [rcx + 1]	      2383	undo.c	FUNCTION_40	FOR_1
0x40035ec	          0x4c89d8	                            mov rax, r11	      2383	undo.c	FUNCTION_40	FOR_1
0x40035ef	     0xf8515fcffff	                           jne 0x400320a	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x40035f5	    0x498b82201200	          mov rax, qword [r10 + 0x1220] 	      2387	undo.c	FUNCTION_40	FOR_1	IF_17
0x40035fc	          0x4885c0	                           test rax, rax	      2391	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1
0x40035ff	     0xf8505fcffff	                           jne 0x400320a	      2391	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1
0x4003605	      0xe9bcfeffff	                           jmp 0x40034c6	      2391	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1
0x400360a	    0x660f1f440000	                    nop word [rax + rax]	      2391	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1
0x4003610	    0x4c89b2201200	          mov qword [rdx + 0x1220], r14 	      2584	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_45
0x4003617	        0x498b4608	                mov rax, qword [r14 + 8]	      2584	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_45
0x400361b	      0xe985fdffff	                           jmp 0x40033a5	      2584	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_45
0x4003620	    0x4c89b6181200	          mov qword [rsi + 0x1218], r14 	      2561	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_41
0x4003627	      0xe932fdffff	                           jmp 0x400335e	      2561	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_41
0x400362c	      0xbf01000000	                              mov edi, 1	      2284	undo.c	FUNCTION_40	CALL_1
0x4003631	        0x89542420	             mov dword [rsp + 0x20], edx	      2284	undo.c	FUNCTION_40	CALL_1
0x4003635	        0x89742418	             mov dword [rsp + 0x18], esi	      2284	undo.c	FUNCTION_40	CALL_1
0x4003639	      0xe800000000	                          call 0x400363e	      2284	undo.c	FUNCTION_40	CALL_1
0x400363e	    0x4c8b0d000000	              mov r9, qword [0x04003645]	      2284	undo.c	FUNCTION_40	CALL_1
0x4003645	        0x8b542420	            mov edx, dword [rsp + 0x20] 	      2284	undo.c	FUNCTION_40	CALL_1
0x4003649	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      2284	undo.c	FUNCTION_40	CALL_1
0x400364d	      0xe92bfbffff	                           jmp 0x400317d	      2284	undo.c	FUNCTION_40	CALL_1
0x4003652	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2304	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6
0x4003658	     0xf88cb000000	                            js 0x4003729	      2304	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6
0x400365e	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	      2329	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5
0x4003663	    0x4d03b1581200	            add r14, qword [r9 + 0x1258]	      2329	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5
0x400366a	    0x498b81401200	           mov rax, qword [r9 + 0x1240] 	      2330	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x4003671	          0x4939c6	                            cmp r14, rax	      2330	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x4003674	            0x7e4f	                           jle 0x40036c5	      2330	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x4003676	    0x498b91381200	           mov rdx, qword [r9 + 0x1238] 	      2334	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x400367d	    0x498b81481200	           mov rax, qword [r9 + 0x1248] 	      2334	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x4003684	        0x4c8d7201	                      lea r14, [rdx + 1]	      2334	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x4003688	      0xe934ffffff	                           jmp 0x40035c1	      2334	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x400368d	        0x89542420	             mov dword [rsp + 0x20], edx	      2334	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x4003691	        0x89742418	             mov dword [rsp + 0x18], esi	      2334	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x4003695	      0xe800000000	                          call 0x400369a	      2350	undo.c	FUNCTION_40	ELSE_1	ELSE_7	CALL_2
0x400369a	    0x4c8b0d000000	              mov r9, qword [0x040036a1]	      2350	undo.c	FUNCTION_40	ELSE_1	ELSE_7	CALL_2
0x40036a1	        0x4c8d7801	                      lea r15, [rax + 1]	      2350	undo.c	FUNCTION_40	ELSE_1	ELSE_7	CALL_2
0x40036a5	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      2350	undo.c	FUNCTION_40	ELSE_1	ELSE_7	CALL_2
0x40036a9	        0x8b542420	            mov edx, dword [rsp + 0x20] 	      2350	undo.c	FUNCTION_40	ELSE_1	ELSE_7	CALL_2
0x40036ad	    0x498b81481200	           mov rax, qword [r9 + 0x1248] 	      2350	undo.c	FUNCTION_40	ELSE_1	ELSE_7	CALL_2
0x40036b4	      0xe90effffff	                           jmp 0x40035c7	      2350	undo.c	FUNCTION_40	ELSE_1	ELSE_7	CALL_2
0x40036b9	        0x44896028	            mov dword [rax + 0x28], r12d	      2461	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15
0x40036bd	          0x4889f8	                            mov rax, rdi	      2461	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15
0x40036c0	      0xe98afbffff	                           jmp 0x400324f	      2461	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15
0x40036c5	        0x4c8d7802	                      lea r15, [rax + 2]	      2352	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_8	IF_14
0x40036c9	    0x498b81481200	           mov rax, qword [r9 + 0x1248] 	      2352	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_8	IF_14
0x40036d0	      0xe9f2feffff	                           jmp 0x40035c7	      2352	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_8	IF_14
0x40036d5	        0x45896728	            mov dword [r15 + 0x28], r12d	      2517	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_36
0x40036d9	      0xe946fdffff	                           jmp 0x4003424	      2517	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_36
0x40036de	    0x8b1d00000000	            mov ebx, dword [0x040036e4] 	      2365	undo.c	FUNCTION_40	IF_16
0x40036e4	          0x4531ed	                          xor r13d, r13d	      2279	undo.c	FUNCTION_40
0x40036e7	            0x31ed	                            xor ebp, ebp	      2366	undo.c	FUNCTION_40	IF_16
0x40036e9	      0xe995fbffff	                           jmp 0x4003283	      2366	undo.c	FUNCTION_40	IF_16
0x40036ee	          0x4531e4	                          xor r12d, r12d	      2586	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x40036f1	      0xe921feffff	                           jmp 0x4003517	      2586	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x40036f6	      0xbe00000000	                              mov esi, 0	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x40036fb	            0x31ff	                            xor edi, edi	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x40036fd	      0xba05000000	                              mov edx, 5	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x4003702	    0x448925000000	           mov dword [0x04003709], r12d 	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x4003709	      0xe800000000	                          call 0x400370e	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x400370e	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x4003713	        0x4883c448	                           add rsp, 0x48	      2602	undo.c	FUNCTION_40
0x4003717	          0x4889c7	                            mov rdi, rax	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x400371a	              0x5b	                                 pop rbx	      2602	undo.c	FUNCTION_40
0x400371b	              0x5d	                                 pop rbp	      2602	undo.c	FUNCTION_40
0x400371c	            0x415c	                                 pop r12	      2602	undo.c	FUNCTION_40
0x400371e	            0x415d	                                 pop r13	      2602	undo.c	FUNCTION_40
0x4003720	            0x415e	                                 pop r14	      2602	undo.c	FUNCTION_40
0x4003722	            0x415f	                                 pop r15	      2602	undo.c	FUNCTION_40
0x4003724	      0xe900000000	                           jmp 0x4003729	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x4003729	    0x498b81281200	           mov rax, qword [r9 + 0x1228] 	      2309	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6
0x4003730	          0x4885c0	                           test rax, rax	      2310	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_7
0x4003733	     0xf8486000000	                            je 0x40037bf	      2310	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_7
0x4003739	          0x488b00	                    mov rax, qword [rax]	      2311	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_7
0x400373c	          0x4885c0	                           test rax, rax	      2314	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x400373f	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	      2317	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x4003744	            0x746c	                            je 0x40037b2	      2314	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x4003746	    0x4883b8300200	              cmp qword [rax + 0x230], 0	      2314	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x400374e	            0x7462	                            je 0x40037b2	      2314	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x4003750	    0x4d03b1581200	            add r14, qword [r9 + 0x1258]	      2317	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x4003757	          0x4d85f6	                           test r14, r14	      2324	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_9
0x400375a	      0xb800000000	                              mov eax, 0	      2324	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_9
0x400375f	           0xf4ed0	                         cmovle edx, eax	      2324	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_9
0x4003762	      0xe915feffff	                           jmp 0x400357c	      2324	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_9
0x4003767	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2480	undo.c	FUNCTION_40	FOR_1	IF_30	IF_31
0x400376d	    0x448925000000	           mov dword [0x04003774], r12d 	      2480	undo.c	FUNCTION_40	FOR_1	IF_30	IF_31
0x4003774	      0xba05000000	                              mov edx, 5	      2481	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_6
0x4003779	      0xbe00000000	                              mov esi, 0	      2481	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_6
0x400377e	            0x7805	                            js 0x4003785	      2480	undo.c	FUNCTION_40	FOR_1	IF_30	IF_31
0x4003780	      0xbe00000000	                              mov esi, 0	      2483	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_8
0x4003785	            0x31ff	                            xor edi, edi	      2483	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_8
0x4003787	      0xe800000000	                          call 0x400378c	      2483	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_8
0x400378c	        0x4883c448	                           add rsp, 0x48	      2602	undo.c	FUNCTION_40
0x4003790	          0x4889c7	                            mov rdi, rax	      2483	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_8
0x4003793	              0x5b	                                 pop rbx	      2602	undo.c	FUNCTION_40
0x4003794	              0x5d	                                 pop rbp	      2602	undo.c	FUNCTION_40
0x4003795	            0x415c	                                 pop r12	      2602	undo.c	FUNCTION_40
0x4003797	            0x415d	                                 pop r13	      2602	undo.c	FUNCTION_40
0x4003799	            0x415e	                                 pop r14	      2602	undo.c	FUNCTION_40
0x400379b	            0x415f	                                 pop r15	      2602	undo.c	FUNCTION_40
0x400379d	      0xe900000000	                           jmp 0x40037a2	      2483	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_8
0x40037a2	        0x4883ed01	                              sub rbp, 1	      2575	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x40037a6	    0x4889ae481200	          mov qword [rsi + 0x1248], rbp 	      2575	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x40037ad	      0xe965fdffff	                           jmp 0x4003517	      2576	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x40037b2	    0x4d03b1581200	            add r14, qword [r9 + 0x1258]	      2320	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	ELSE_4
0x40037b9	        0x4983c601	                              add r14, 1	      2320	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	ELSE_4
0x40037bd	            0xeb98	                           jmp 0x4003757	      2320	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	ELSE_4
0x40037bf	    0x498b81201200	           mov rax, qword [r9 + 0x1220] 	      2313	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	ELSE_3
0x40037c6	      0xe971ffffff	                           jmp 0x400373c	      2313	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	ELSE_3
0x40037cb	          0x4885ff	                           test rdi, rdi	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x40037ce	     0xf849bfaffff	                            je 0x400326f	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x40037d4	        0x4c8b4820	              mov r9, qword [rax + 0x20]	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x40037d8	      0x4c894c2430	              mov qword [rsp + 0x30], r9	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x40037dd	      0x4c8b542428	            mov r10, qword [rsp + 0x28] 	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40037e2	      0x4c39542430	            cmp qword [rsp + 0x30], r10 	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40037e7	        0x410f9fc1	                                setg r9b	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40037eb	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40037f1	     0xf8890000000	                            js 0x4003887	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40037f7	          0x4584c9	                           test r9b, r9b	      2407	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40037fa	     0xf846ffaffff	                            je 0x400326f	      2407	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003800	            0x85f6	                           test esi, esi	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003802	            0x743d	                            je 0x4003841	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003804	      0x48397c2418	            cmp qword [rsp + 0x18], rdi 	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003809	            0x7536	                           jne 0x4003841	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400380b	      0x48396c2430	            cmp qword [rsp + 0x30], rbp 	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003810	        0x410f9fc1	                                setg r9b	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003814	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400381a	            0x7909	                           jns 0x4003825	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400381c	      0x48396c2430	            cmp qword [rsp + 0x30], rbp 	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003821	        0x410f9cc1	                                setl r9b	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003825	          0x4584c9	                           test r9b, r9b	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003828	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400382d	    0x480f456c2430	          cmovne rbp, qword [rsp + 0x30]	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003833	        0x4c0f45cf	                          cmovne r9, rdi	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003837	      0x4c894c2418	              mov qword [rsp + 0x18], r9	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400383c	      0xe92efaffff	                           jmp 0x400326f	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003841	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003846	          0x4d39d7	                            cmp r15, r10	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003849	            0x747c	                            je 0x40038c7	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400384b	          0x4c39f7	                            cmp rdi, r14	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400384e	            0x7e55	                           jle 0x40038a5	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003850	          0x4d39f2	                            cmp r10, r14	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003853	          0x4989f9	                             mov r9, rdi	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003856	            0x7e3d	                           jle 0x4003895	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003858	          0x4d29f1	                             sub r9, r14	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400385b	      0x4c894c2438	              mov qword [rsp + 0x38], r9	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003860	          0x4d89d1	                             mov r9, r10	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003863	      0x4c8b542438	            mov r10, qword [rsp + 0x38] 	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003868	          0x4d29f1	                             sub r9, r14	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400386b	          0x4d39ca	                             cmp r10, r9	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400386e	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003873	    0x480f4e6c2430	          cmovle rbp, qword [rsp + 0x30]	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003879	        0x4c0f4ecf	                          cmovle r9, rdi	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400387d	      0x4c894c2418	              mov qword [rsp + 0x18], r9	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003882	      0xe9e8f9ffff	                           jmp 0x400326f	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003887	      0x4c39542430	            cmp qword [rsp + 0x30], r10 	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400388c	        0x410f9ec1	                               setle r9b	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003890	      0xe962ffffff	                           jmp 0x40037f7	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003895	          0x4d29f1	                             sub r9, r14	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003898	          0x4d89ca	                             mov r10, r9	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400389b	          0x4d89f1	                             mov r9, r14	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400389e	      0x4c2b4c2418	              sub r9, qword [rsp + 0x18]	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40038a3	            0xebc6	                           jmp 0x400386b	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40038a5	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40038aa	          0x4d89f1	                             mov r9, r14	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40038ad	          0x4d39f2	                            cmp r10, r14	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40038b0	            0x7e24	                           jle 0x40038d6	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40038b2	          0x4929f9	                             sub r9, rdi	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40038b5	      0x4c894c2438	              mov qword [rsp + 0x38], r9	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40038ba	          0x4d89d1	                             mov r9, r10	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40038bd	      0x4c8b542438	            mov r10, qword [rsp + 0x38] 	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40038c2	          0x4d29f1	                             sub r9, r14	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40038c5	            0xeba4	                           jmp 0x400386b	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40038c7	      0x488b6c2430	            mov rbp, qword [rsp + 0x30] 	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40038cc	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40038d1	      0xe999f9ffff	                           jmp 0x400326f	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40038d6	          0x4929f9	                             sub r9, rdi	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40038d9	            0xebbd	                           jmp 0x4003898	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40038db	            0x85d2	                           test edx, edx	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x40038dd	     0xf84f1feffff	                            je 0x40037d4	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x40038e3	          0x4885ff	                           test rdi, rdi	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x40038e6	     0xf843df9ffff	                            je 0x4003229	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x40038ec	      0xe9e3feffff	                           jmp 0x40037d4	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
undo_write	functions,0:CALL,4:DO,0:SWITCH,0:WHILE,1:FOR,0:IF,4:ELSE,0	62
0x4000230	            0x4156	                                push r14	       886	undo.c	FUNCTION_15
0x4000232	            0x4155	                                push r13	       886	undo.c	FUNCTION_15
0x4000234	    0x41bd00200000	                        mov r13d, 0x2000	       886	undo.c	FUNCTION_15
0x400023a	            0x4154	                                push r12	       886	undo.c	FUNCTION_15
0x400023c	              0x55	                                push rbp	       886	undo.c	FUNCTION_15
0x400023d	          0x4989f4	                            mov r12, rsi	       886	undo.c	FUNCTION_15
0x4000240	              0x53	                                push rbx	       886	undo.c	FUNCTION_15
0x4000241	      0x48837f1800	               cmp qword [rdi + 0x18], 0	       888	undo.c	FUNCTION_15	IF_1
0x4000246	          0x4889fb	                            mov rbx, rdi	       886	undo.c	FUNCTION_15
0x4000249	          0x4889d5	                            mov rbp, rdx	       886	undo.c	FUNCTION_15
0x400024c	            0x7534	                           jne 0x4000282	       888	undo.c	FUNCTION_15	IF_1
0x400024e	            0xeb7f	                           jmp 0x40002cf	       888	undo.c	FUNCTION_15	IF_1
0x4000250	          0x4d89ee	                            mov r14, r13	       895	undo.c	FUNCTION_15	IF_1	WHILE_1
0x4000253	          0x4c89e6	                            mov rsi, r12	        59	string3.h	FUNCTION_68	CALL_3
0x4000256	          0x4929fe	                            sub r14, rdi	       895	undo.c	FUNCTION_15	IF_1	WHILE_1
0x4000259	        0x48037b18	             add rdi, qword [rbx + 0x18]	        59	string3.h	FUNCTION_68	CALL_3
0x400025d	          0x4c89f2	                            mov rdx, r14	        59	string3.h	FUNCTION_68	CALL_3
0x4000260	          0x4c29f5	                            sub rbp, r14	       898	undo.c	FUNCTION_15	IF_1	WHILE_1
0x4000263	          0x4d01f4	                            add r12, r14	       899	undo.c	FUNCTION_15	IF_1	WHILE_1
0x4000266	      0xe800000000	                          call 0x400026b	        59	string3.h	FUNCTION_68	CALL_3
0x400026b	    0x48c743200020	         mov qword [rbx + 0x20], 0x2000 	       900	undo.c	FUNCTION_15	IF_1	WHILE_1
0x4000273	          0x4889df	                            mov rdi, rbx	       901	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2	CALL_2
0x4000276	      0xe835ffffff	                     call sym.undo_flush	       901	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2	CALL_2
0x400027b	            0x85c0	                           test eax, eax	       901	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2	CALL_2
0x400027d	          0x4189c6	                           mov r14d, eax	       901	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2	CALL_2
0x4000280	            0x741c	                            je 0x400029e	       901	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2	CALL_2
0x4000282	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       893	undo.c	FUNCTION_15	IF_1	WHILE_1
0x4000286	      0x488d443d00	                    lea rax, [rbp + rdi]	       893	undo.c	FUNCTION_15	IF_1	WHILE_1
0x400028b	    0x483dff1f0000	                         cmp rax, 0x1fff	       893	undo.c	FUNCTION_15	IF_1	WHILE_1
0x4000291	            0x77bd	                            ja 0x4000250	       893	undo.c	FUNCTION_15	IF_1	WHILE_1
0x4000293	          0x4885ed	                           test rbp, rbp	       904	undo.c	FUNCTION_15	IF_1	IF_3
0x4000296	    0x41be01000000	                             mov r14d, 1	       909	undo.c	FUNCTION_15	IF_1
0x400029c	            0x7512	                           jne 0x40002b0	       904	undo.c	FUNCTION_15	IF_1	IF_3
0x400029e	              0x5b	                                 pop rbx	       915	undo.c	FUNCTION_15
0x400029f	          0x4489f0	                           mov eax, r14d	       915	undo.c	FUNCTION_15
0x40002a2	              0x5d	                                 pop rbp	       915	undo.c	FUNCTION_15
0x40002a3	            0x415c	                                 pop r12	       915	undo.c	FUNCTION_15
0x40002a5	            0x415d	                                 pop r13	       915	undo.c	FUNCTION_15
0x40002a7	            0x415e	                                 pop r14	       915	undo.c	FUNCTION_15
0x40002a9	              0xc3	                                     ret	       915	undo.c	FUNCTION_15
0x40002aa	    0x660f1f440000	                    nop word [rax + rax]	       915	undo.c	FUNCTION_15
0x40002b0	        0x48037b18	             add rdi, qword [rbx + 0x18]	        59	string3.h	FUNCTION_68	CALL_3
0x40002b4	          0x4889ea	                            mov rdx, rbp	        59	string3.h	FUNCTION_68	CALL_3
0x40002b7	          0x4c89e6	                            mov rsi, r12	        59	string3.h	FUNCTION_68	CALL_3
0x40002ba	      0xe800000000	                          call 0x40002bf	        59	string3.h	FUNCTION_68	CALL_3
0x40002bf	        0x48016b20	            add qword [rbx + 0x20], rbp 	       907	undo.c	FUNCTION_15	IF_1	IF_3
0x40002c3	          0x4489f0	                           mov eax, r14d	       915	undo.c	FUNCTION_15
0x40002c6	              0x5b	                                 pop rbx	       915	undo.c	FUNCTION_15
0x40002c7	              0x5d	                                 pop rbp	       915	undo.c	FUNCTION_15
0x40002c8	            0x415c	                                 pop r12	       915	undo.c	FUNCTION_15
0x40002ca	            0x415d	                                 pop r13	       915	undo.c	FUNCTION_15
0x40002cc	            0x415e	                                 pop r14	       915	undo.c	FUNCTION_15
0x40002ce	              0xc3	                                     ret	       915	undo.c	FUNCTION_15
0x40002cf	        0x488b4f08	                mov rcx, qword [rdi + 8]	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x40002d3	      0xba01000000	                              mov edx, 1	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x40002d8	          0x4889ee	                            mov rsi, rbp	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x40002db	          0x4c89e7	                            mov rdi, r12	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x40002de	          0x4531f6	                          xor r14d, r14d	       902	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2
0x40002e1	      0xe800000000	                          call 0x40002e6	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x40002e6	        0x4883f801	                              cmp rax, 1	       902	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2
0x40002ea	        0x410f94c6	                               sete r14b	       902	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2
0x40002ee	            0xebae	                           jmp 0x400029e	       902	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2
read_string_decrypt	functions,0:CALL,4:DO,0:SWITCH,0:WHILE,0:FOR,0:IF,3:ELSE,0	50
0x40004d0	            0x4154	                                push r12	      1121	undo.c	FUNCTION_25
0x40004d2	              0x55	                                push rbp	      1121	undo.c	FUNCTION_25
0x40004d3	          0x4863ee	                         movsxd rbp, esi	      1121	undo.c	FUNCTION_25
0x40004d6	              0x53	                                push rbx	      1121	undo.c	FUNCTION_25
0x40004d7	          0x4989fc	                            mov r12, rdi	      1121	undo.c	FUNCTION_25
0x40004da	          0x8d7d01	                      lea edi, [rbp + 1]	      1122	undo.c	FUNCTION_25	CALL_1
0x40004dd	        0x4883ec10	                           sub rsp, 0x10	      1121	undo.c	FUNCTION_25
0x40004e1	      0xe800000000	                          call 0x40004e6	      1122	undo.c	FUNCTION_25	CALL_1
0x40004e6	          0x4885c0	                           test rax, rax	      1124	undo.c	FUNCTION_25	IF_1
0x40004e9	            0x7445	                            je 0x4000530	      1124	undo.c	FUNCTION_25	IF_1
0x40004eb	            0x85ed	                           test ebp, ebp	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x40004ed	          0x4889c3	                            mov rbx, rax	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x40004f0	            0x7e12	                           jle 0x4000504	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x40004f2	          0x4889ea	                            mov rdx, rbp	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x40004f5	          0x4889c6	                            mov rsi, rax	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x40004f8	          0x4c89e7	                            mov rdi, r12	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x40004fb	      0xe8b0feffff	                      call sym.undo_read	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x4000500	            0x85c0	                           test eax, eax	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x4000502	            0x745c	                            je 0x4000560	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x4000504	        0xc6042b00	                 mov byte [rbx + rbp], 0	      1131	undo.c	FUNCTION_25	IF_1
0x4000508	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	      1133	undo.c	FUNCTION_25	IF_1	IF_3
0x400050d	          0x4889d8	                            mov rax, rbx	      1133	undo.c	FUNCTION_25	IF_1	IF_3
0x4000510	          0x4885ff	                           test rdi, rdi	      1133	undo.c	FUNCTION_25	IF_1	IF_3
0x4000513	            0x7408	                            je 0x400051d	      1133	undo.c	FUNCTION_25	IF_1	IF_3
0x4000515	    0x49837c241800	               cmp qword [r12 + 0x18], 0	      1133	undo.c	FUNCTION_25	IF_1	IF_3
0x400051b	            0x7423	                            je 0x4000540	      1133	undo.c	FUNCTION_25	IF_1	IF_3
0x400051d	        0x4883c410	                           add rsp, 0x10	      1138	undo.c	FUNCTION_25
0x4000521	              0x5b	                                 pop rbx	      1138	undo.c	FUNCTION_25
0x4000522	              0x5d	                                 pop rbp	      1138	undo.c	FUNCTION_25
0x4000523	            0x415c	                                 pop r12	      1138	undo.c	FUNCTION_25
0x4000525	              0xc3	                                     ret	      1138	undo.c	FUNCTION_25
0x4000526	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1138	undo.c	FUNCTION_25
0x4000530	        0x4883c410	                           add rsp, 0x10	      1138	undo.c	FUNCTION_25
0x4000534	            0x31c0	                            xor eax, eax	      1138	undo.c	FUNCTION_25
0x4000536	              0x5b	                                 pop rbx	      1138	undo.c	FUNCTION_25
0x4000537	              0x5d	                                 pop rbp	      1138	undo.c	FUNCTION_25
0x4000538	            0x415c	                                 pop r12	      1138	undo.c	FUNCTION_25
0x400053a	              0xc3	                                     ret	      1138	undo.c	FUNCTION_25
0x400053b	       0xf1f440000	                   nop dword [rax + rax]	      1138	undo.c	FUNCTION_25
0x4000540	          0x4889ea	                            mov rdx, rbp	      1134	undo.c	FUNCTION_25	IF_1	CALL_4
0x4000543	          0x4889de	                            mov rsi, rbx	      1134	undo.c	FUNCTION_25	IF_1	CALL_4
0x4000546	      0x48895c2408	                mov qword [rsp + 8], rbx	      1134	undo.c	FUNCTION_25	IF_1	CALL_4
0x400054b	      0xe800000000	                          call 0x4000550	      1134	undo.c	FUNCTION_25	IF_1	CALL_4
0x4000550	      0x488b442408	                mov rax, qword [rsp + 8]	      1134	undo.c	FUNCTION_25	IF_1	CALL_4
0x4000555	            0xebc6	                           jmp 0x400051d	      1134	undo.c	FUNCTION_25	IF_1	CALL_4
0x4000557	    0x660f1f840000	                    nop word [rax + rax]	      1134	undo.c	FUNCTION_25	IF_1	CALL_4
0x4000560	          0x4889df	                            mov rdi, rbx	      1128	undo.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x4000563	      0xe800000000	                          call 0x4000568	      1128	undo.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x4000568	            0x31c0	                            xor eax, eax	      1129	undo.c	FUNCTION_25	IF_1	IF_2
0x400056a	            0xebb1	                           jmp 0x400051d	      1129	undo.c	FUNCTION_25	IF_1	IF_2
u_savesub	functions,0:CALL,1:DO,0:SWITCH,0:WHILE,0:FOR,0:IF,1:ELSE,0	10
0x4002070	    0x8b0500000000	            mov eax, dword [0x04002076] 	       289	undo.c	FUNCTION_5	IF_1
0x4002076	            0x85c0	                           test eax, eax	       289	undo.c	FUNCTION_5	IF_1
0x4002078	            0x7406	                            je 0x4002080	       289	undo.c	FUNCTION_5	IF_1
0x400207a	      0xb801000000	                              mov eax, 1	       293	undo.c	FUNCTION_5
0x400207f	              0xc3	                                     ret	       293	undo.c	FUNCTION_5
0x4002080	        0x488d7701	                      lea rsi, [rdi + 1]	       292	undo.c	FUNCTION_5	CALL_1
0x4002084	            0x31c9	                            xor ecx, ecx	       292	undo.c	FUNCTION_5	CALL_1
0x4002086	        0x4883ef01	                              sub rdi, 1	       292	undo.c	FUNCTION_5	CALL_1
0x400208a	          0x4889f2	                            mov rdx, rsi	       292	undo.c	FUNCTION_5	CALL_1
0x400208d	      0xe96ef8ffff	                    jmp sym.u_savecommon	       292	undo.c	FUNCTION_5	CALL_1
u_savedel	functions,0:CALL,1:DO,0:SWITCH,0:WHILE,0:FOR,0:IF,1:ELSE,0	14
0x40020d0	    0x8b0500000000	            mov eax, dword [0x040020d6] 	       320	undo.c	FUNCTION_7	IF_1
0x40020d6	            0x85c0	                           test eax, eax	       320	undo.c	FUNCTION_7	IF_1
0x40020d8	            0x7526	                           jne 0x4002100	       320	undo.c	FUNCTION_7	IF_1
0x40020da	    0x488b05000000	            mov rax, qword [0x040020e1] 	       324	undo.c	FUNCTION_7
0x40020e1	      0xba02000000	                              mov edx, 2	       323	undo.c	FUNCTION_7	CALL_1
0x40020e6	          0x483930	                    cmp qword [rax], rsi	       323	undo.c	FUNCTION_7	CALL_1
0x40020e9	        0x480f45d7	                         cmovne rdx, rdi	       323	undo.c	FUNCTION_7	CALL_1
0x40020ed	          0x4801fe	                            add rsi, rdi	       323	undo.c	FUNCTION_7	CALL_1
0x40020f0	            0x31c9	                            xor ecx, ecx	       323	undo.c	FUNCTION_7	CALL_1
0x40020f2	        0x4883ef01	                              sub rdi, 1	       323	undo.c	FUNCTION_7	CALL_1
0x40020f6	      0xe905f8ffff	                    jmp sym.u_savecommon	       323	undo.c	FUNCTION_7	CALL_1
0x40020fb	       0xf1f440000	                   nop dword [rax + rax]	       323	undo.c	FUNCTION_7	CALL_1
0x4002100	      0xb801000000	                              mov eax, 1	       325	undo.c	FUNCTION_7
0x4002105	              0xc3	                                     ret	       325	undo.c	FUNCTION_7
u_add_time	functions,0:CALL,8:DO,0:SWITCH,0:WHILE,0:FOR,0:IF,2:ELSE,2	57
0x40005b0	            0x4154	                                push r12	      3113	undo.c	FUNCTION_45
0x40005b2	              0x55	                                push rbp	      3113	undo.c	FUNCTION_45
0x40005b3	          0x4889f5	                            mov rbp, rsi	      3113	undo.c	FUNCTION_45
0x40005b6	              0x53	                                push rbx	      3113	undo.c	FUNCTION_45
0x40005b7	          0x4889fb	                            mov rbx, rdi	      3113	undo.c	FUNCTION_45
0x40005ba	        0x4883ec10	                           sub rsp, 0x10	      3113	undo.c	FUNCTION_45
0x40005be	      0x4889542408	                mov qword [rsp + 8], rdx	      3113	undo.c	FUNCTION_45
0x40005c3	      0xe800000000	                          call 0x40005c8	      3117	undo.c	FUNCTION_45	IF_1	CALL_1
0x40005c8	      0x482b442408	                sub rax, qword [rsp + 8]	      3117	undo.c	FUNCTION_45	IF_1	CALL_1
0x40005cd	        0x4883f863	                           cmp rax, 0x63	      3117	undo.c	FUNCTION_45	IF_1	CALL_1
0x40005d1	            0x7e3d	                           jle 0x4000610	      3117	undo.c	FUNCTION_45	IF_1	CALL_1
0x40005d3	      0x488d7c2408	                      lea rdi, [rsp + 8]	      3119	undo.c	FUNCTION_45	IF_1	CALL_2
0x40005d8	      0xe800000000	                          call 0x40005dd	      3119	undo.c	FUNCTION_45	IF_1	CALL_2
0x40005dd	          0x4989c4	                            mov r12, rax	      3119	undo.c	FUNCTION_45	IF_1	CALL_2
0x40005e0	      0xe800000000	                          call 0x40005e5	      3120	undo.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x40005e5	      0x482b442408	                sub rax, qword [rsp + 8]	      3120	undo.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x40005ea	          0x4c89e1	                            mov rcx, r12	      3122	undo.c	FUNCTION_45	IF_1	CALL_4
0x40005ed	    0x483dbfa80000	                         cmp rax, 0xa8bf	      3120	undo.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x40005f3	            0x7f5b	                            jg 0x4000650	      3120	undo.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x40005f5	          0x4889ee	                            mov rsi, rbp	      3122	undo.c	FUNCTION_45	IF_1	CALL_4
0x40005f8	          0x4889df	                            mov rdi, rbx	      3122	undo.c	FUNCTION_45	IF_1	CALL_4
0x40005fb	      0xba00000000	                              mov edx, 0	      3122	undo.c	FUNCTION_45	IF_1	CALL_4
0x4000600	      0xe800000000	                          call 0x4000605	      3122	undo.c	FUNCTION_45	IF_1	CALL_4
0x4000605	        0x4883c410	                           add rsp, 0x10	      3131	undo.c	FUNCTION_45
0x4000609	              0x5b	                                 pop rbx	      3131	undo.c	FUNCTION_45
0x400060a	              0x5d	                                 pop rbp	      3131	undo.c	FUNCTION_45
0x400060b	            0x415c	                                 pop r12	      3131	undo.c	FUNCTION_45
0x400060d	              0xc3	                                     ret	      3131	undo.c	FUNCTION_45
0x400060e	            0x6690	                                     nop	      3131	undo.c	FUNCTION_45
0x4000610	      0xe800000000	                          call 0x4000615	      3130	undo.c	FUNCTION_45	CALL_8
0x4000615	      0x482b442408	                sub rax, qword [rsp + 8]	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x400061a	      0xba05000000	                              mov edx, 5	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x400061f	      0xbe00000000	                              mov esi, 0	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x4000624	            0x31ff	                            xor edi, edi	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x4000626	          0x4989c4	                            mov r12, rax	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x4000629	      0xe800000000	                          call 0x400062e	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x400062e	          0x4c89e1	                            mov rcx, r12	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x4000631	          0x4889c2	                            mov rdx, rax	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x4000634	          0x4889ee	                            mov rsi, rbp	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x4000637	          0x4889df	                            mov rdi, rbx	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x400063a	            0x31c0	                            xor eax, eax	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x400063c	      0xe800000000	                          call 0x4000641	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x4000641	        0x4883c410	                           add rsp, 0x10	      3131	undo.c	FUNCTION_45
0x4000645	              0x5b	                                 pop rbx	      3131	undo.c	FUNCTION_45
0x4000646	              0x5d	                                 pop rbp	      3131	undo.c	FUNCTION_45
0x4000647	            0x415c	                                 pop r12	      3131	undo.c	FUNCTION_45
0x4000649	              0xc3	                                     ret	      3131	undo.c	FUNCTION_45
0x400064a	    0x660f1f440000	                    nop word [rax + rax]	      3131	undo.c	FUNCTION_45
0x4000650	          0x4889ee	                            mov rsi, rbp	      3125	undo.c	FUNCTION_45	IF_1	CALL_5
0x4000653	          0x4889df	                            mov rdi, rbx	      3125	undo.c	FUNCTION_45	IF_1	CALL_5
0x4000656	      0xba00000000	                              mov edx, 0	      3125	undo.c	FUNCTION_45	IF_1	CALL_5
0x400065b	      0xe800000000	                          call 0x4000660	      3125	undo.c	FUNCTION_45	IF_1	CALL_5
0x4000660	        0x4883c410	                           add rsp, 0x10	      3131	undo.c	FUNCTION_45
0x4000664	              0x5b	                                 pop rbx	      3131	undo.c	FUNCTION_45
0x4000665	              0x5d	                                 pop rbp	      3131	undo.c	FUNCTION_45
0x4000666	            0x415c	                                 pop r12	      3131	undo.c	FUNCTION_45
0x4000668	              0xc3	                                     ret	      3131	undo.c	FUNCTION_45
u_free_uhp	functions,0:CALL,2:DO,0:SWITCH,0:WHILE,1:FOR,0:IF,0:ELSE,0	19
0x4000170	              0x55	                                push rbp	       865	undo.c	FUNCTION_14
0x4000171	              0x53	                                push rbx	       865	undo.c	FUNCTION_14
0x4000172	          0x4889fd	                            mov rbp, rdi	       865	undo.c	FUNCTION_14
0x4000175	        0x4883ec08	                              sub rsp, 8	       865	undo.c	FUNCTION_14
0x4000179	        0x488b7f30	            mov rdi, qword [rdi + 0x30] 	       869	undo.c	FUNCTION_14
0x400017d	          0x4885ff	                           test rdi, rdi	       870	undo.c	FUNCTION_14	WHILE_1
0x4000180	            0x741a	                            je 0x400019c	       870	undo.c	FUNCTION_14	WHILE_1
0x4000182	    0x660f1f440000	                    nop word [rax + rax]	       870	undo.c	FUNCTION_14	WHILE_1
0x4000188	          0x488b1f	                    mov rbx, qword [rdi]	       872	undo.c	FUNCTION_14	WHILE_1
0x400018b	        0x488b7728	            mov rsi, qword [rdi + 0x28] 	       873	undo.c	FUNCTION_14	WHILE_1	CALL_1
0x400018f	      0xe8dcfeffff	                    call sym.u_freeentry	       873	undo.c	FUNCTION_14	WHILE_1	CALL_1
0x4000194	          0x4885db	                           test rbx, rbx	       870	undo.c	FUNCTION_14	WHILE_1
0x4000197	          0x4889df	                            mov rdi, rbx	       870	undo.c	FUNCTION_14	WHILE_1
0x400019a	            0x75ec	                           jne 0x4000188	       870	undo.c	FUNCTION_14	WHILE_1
0x400019c	        0x4883c408	                              add rsp, 8	       877	undo.c	FUNCTION_14
0x40001a0	          0x4889ef	                            mov rdi, rbp	       876	undo.c	FUNCTION_14	CALL_2
0x40001a3	              0x5b	                                 pop rbx	       877	undo.c	FUNCTION_14
0x40001a4	              0x5d	                                 pop rbp	       877	undo.c	FUNCTION_14
0x40001a5	      0xe900000000	                           jmp 0x40001aa	       876	undo.c	FUNCTION_14	CALL_2
ex_undolist	functions,0:CALL,21:DO,0:SWITCH,0:WHILE,2:FOR,1:IF,9:ELSE,5	196
0x4003900	            0x4156	                                push r14	      3007	undo.c	FUNCTION_44
0x4003902	            0x4155	                                push r13	      3007	undo.c	FUNCTION_44
0x4003904	      0xba14000000	                           mov edx, 0x14	      3022	undo.c	FUNCTION_44	CALL_1
0x4003909	            0x4154	                                push r12	      3007	undo.c	FUNCTION_44
0x400390b	              0x55	                                push rbp	      3007	undo.c	FUNCTION_44
0x400390c	      0xbe08000000	                              mov esi, 8	      3022	undo.c	FUNCTION_44	CALL_1
0x4003911	              0x53	                                push rbx	      3007	undo.c	FUNCTION_44
0x4003912	        0x4883ec20	                           sub rsp, 0x20	      3007	undo.c	FUNCTION_44
0x4003916	    0x448b2d000000	           mov r13d, dword [0x0400391d] 	      3020	undo.c	FUNCTION_44
0x400391d	          0x4889e7	                            mov rdi, rsp	      3022	undo.c	FUNCTION_44	CALL_1
0x4003920	    0x64488b042528	                mov rax, qword fs:[0x28]	      3007	undo.c	FUNCTION_44
0x4003929	      0x4889442418	             mov qword [rsp + 0x18], rax	      3007	undo.c	FUNCTION_44
0x400392e	            0x31c0	                            xor eax, eax	      3007	undo.c	FUNCTION_44
0x4003930	        0x458d6501	                     lea r12d, [r13 + 1]	      3020	undo.c	FUNCTION_44
0x4003934	        0x4183c502	                             add r13d, 2	      3021	undo.c	FUNCTION_44
0x4003938	    0x44892d000000	           mov dword [0x0400393f], r13d 	      3021	undo.c	FUNCTION_44
0x400393f	      0xe800000000	                          call 0x4003944	      3022	undo.c	FUNCTION_44	CALL_1
0x4003944	    0x488b05000000	            mov rax, qword [0x0400394b] 	      3024	undo.c	FUNCTION_44
0x400394b	    0x488b98181200	          mov rbx, qword [rax + 0x1218] 	      3024	undo.c	FUNCTION_44
0x4003952	          0x4885db	                           test rbx, rbx	      3025	undo.c	FUNCTION_44	WHILE_1
0x4003955	     0xf8492010000	                            je 0x4003aed	      3025	undo.c	FUNCTION_44	WHILE_1
0x400395b	      0xbd01000000	                              mov ebp, 1	      3025	undo.c	FUNCTION_44	WHILE_1
0x4003960	        0x488b4308	                mov rax, qword [rbx + 8]	      3027	undo.c	FUNCTION_44	WHILE_1	IF_1
0x4003964	          0x4885c0	                           test rax, rax	      3027	undo.c	FUNCTION_44	WHILE_1	IF_1
0x4003967	            0x7428	                            je 0x4003991	      3027	undo.c	FUNCTION_44	WHILE_1	IF_1
0x4003969	        0x44896328	            mov dword [rbx + 0x28], r12d	      3046	undo.c	FUNCTION_44	WHILE_1
0x400396d	          0x8b5028	            mov edx, dword [rax + 0x28] 	      3049	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4003970	          0x4139d5	                           cmp r13d, edx	      3050	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4003973	     0xf8407010000	                            je 0x4003a80	      3050	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4003979	          0x4139d4	                           cmp r12d, edx	      3050	undo.c	FUNCTION_44	WHILE_1	IF_4
0x400397c	     0xf84fe000000	                            je 0x4003a80	      3050	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4003982	          0x4889c3	                            mov rbx, rax	      3053	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4003985	          0x83c501	                              add ebp, 1	      3053	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4003988	        0x488b4308	                mov rax, qword [rbx + 8]	      3027	undo.c	FUNCTION_44	WHILE_1	IF_1
0x400398c	          0x4885c0	                           test rax, rax	      3027	undo.c	FUNCTION_44	WHILE_1	IF_1
0x400398f	            0x75d8	                           jne 0x4003969	      3027	undo.c	FUNCTION_44	WHILE_1	IF_1
0x4003991	          0x8b4328	            mov eax, dword [rbx + 0x28] 	      3027	undo.c	FUNCTION_44	WHILE_1	IF_1
0x4003994	          0x4139c5	                           cmp r13d, eax	      3028	undo.c	FUNCTION_44	WHILE_1	IF_1
0x4003997	     0xf842b010000	                            je 0x4003ac8	      3028	undo.c	FUNCTION_44	WHILE_1	IF_1
0x400399d	          0x4139c4	                           cmp r12d, eax	      3028	undo.c	FUNCTION_44	WHILE_1	IF_1
0x40039a0	     0xf8422010000	                            je 0x4003ac8	      3028	undo.c	FUNCTION_44	WHILE_1	IF_1
0x40039a6	      0xbe01000000	                              mov esi, 1	      3030	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_2	CALL_2
0x40039ab	          0x4889e7	                            mov rdi, rsp	      3030	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_2	CALL_2
0x40039ae	      0xe800000000	                          call 0x40039b3	      3030	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_2	CALL_2
0x40039b3	            0x85c0	                           test eax, eax	      3030	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_2	CALL_2
0x40039b5	     0xf8432010000	                            je 0x4003aed	      3030	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_2	CALL_2
0x40039bb	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x40039bf	    0x488b3d000000	            mov rdi, qword [0x040039c6] 	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x40039c6	          0x4189e8	                            mov r8d, ebp	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x40039c9	      0xba00000000	                              mov edx, 0	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x40039ce	      0xbe01040000	                          mov esi, 0x401	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x40039d3	            0x31c0	                            xor eax, eax	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x40039d5	      0xe800000000	                          call 0x40039da	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x40039da	    0x4c8b35000000	            mov r14, qword [0x040039e1] 	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x40039e1	          0x4c89f7	                            mov rdi, r14	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x40039e4	      0xe800000000	                          call 0x40039e9	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x40039e9	    0x488b93280200	           mov rdx, qword [rbx + 0x228] 	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x40039f0	      0xbe01040000	                          mov esi, 0x401	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x40039f5	        0x498d3c06	                    lea rdi, [r14 + rax]	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x40039f9	          0x4829c6	                            sub rsi, rax	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x40039fc	      0xe8afcbffff	                     call sym.u_add_time	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x4003a01	    0x4883bb300200	              cmp qword [rbx + 0x230], 0	      3036	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3
0x4003a09	            0x7f0f	                            jg 0x4003a1a	      3036	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3
0x4003a0b	            0xeb3d	                           jmp 0x4003a4a	      3036	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3
0x4003a0d	           0xf1f00	                         nop dword [rax]	      3036	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3
0x4003a10	      0xba20000000	                           mov edx, 0x20	       148	string3.h	FUNCTION_77	CALL_3
0x4003a15	      0x6641891406	                mov word [r14 + rax], dx	       148	string3.h	FUNCTION_77	CALL_3
0x4003a1a	    0x4c8b35000000	            mov r14, qword [0x04003a21] 	      3038	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	WHILE_2	CALL_7
0x4003a21	          0x4c89f7	                            mov rdi, r14	      3038	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	WHILE_2	CALL_7
0x4003a24	      0xe800000000	                          call 0x4003a29	      3038	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	WHILE_2	CALL_7
0x4003a29	        0x4883f820	                           cmp rax, 0x20	      3038	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	WHILE_2	CALL_7
0x4003a2d	            0x76e1	                           jbe 0x4003a10	      3038	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	WHILE_2	CALL_7
0x4003a2f	    0x488b8b300200	           mov rcx, qword [rbx + 0x230] 	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x4003a36	      0xba00000000	                              mov edx, 0	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x4003a3b	      0xbe01040000	                          mov esi, 0x401	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x4003a40	          0x4c89f7	                            mov rdi, r14	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x4003a43	            0x31c0	                            xor eax, eax	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x4003a45	      0xe800000000	                          call 0x4003a4a	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x4003a4a	        0x48630424	                 movsxd rax, dword [rsp]	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4003a4e	    0x488b3d000000	            mov rdi, qword [0x04003a55] 	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4003a55	          0x8d5001	                      lea edx, [rax + 1]	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4003a58	          0x891424	                    mov dword [rsp], edx	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4003a5b	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4003a60	        0x4c8d34c2	                  lea r14, [rdx + rax*8]	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4003a64	      0xe800000000	                          call 0x4003a69	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4003a69	          0x498906	                    mov qword [r14], rax	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4003a6c	        0x488b4308	                mov rax, qword [rbx + 8]	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4003a70	        0x44896328	            mov dword [rbx + 0x28], r12d	      3046	undo.c	FUNCTION_44	WHILE_1
0x4003a74	          0x4885c0	                           test rax, rax	      3049	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4003a77	     0xf85f0feffff	                           jne 0x400396d	      3049	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4003a7d	           0xf1f00	                         nop dword [rax]	      3049	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4003a80	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      3057	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4003a84	          0x4885c0	                           test rax, rax	      3057	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4003a87	            0x7417	                            je 0x4003aa0	      3057	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4003a89	          0x8b5028	            mov edx, dword [rax + 0x28] 	      3058	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4003a8c	          0x4139d4	                           cmp r12d, edx	      3059	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4003a8f	            0x740f	                            je 0x4003aa0	      3059	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4003a91	          0x4139d5	                           cmp r13d, edx	      3059	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4003a94	            0x740a	                            je 0x4003aa0	      3059	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4003a96	          0x4889c3	                            mov rbx, rax	      3059	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4003a99	      0xe9c2feffff	                           jmp 0x4003960	      3059	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4003a9e	            0x6690	                                     nop	      3059	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4003aa0	          0x488b13	                    mov rdx, qword [rbx]	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4003aa3	          0x4885d2	                           test rdx, rdx	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4003aa6	            0x7428	                            je 0x4003ad0	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4003aa8	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4003aac	          0x4885c0	                           test rax, rax	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4003aaf	     0xf84f3000000	                            je 0x4003ba8	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4003ab5	        0x44896b28	            mov dword [rbx + 0x28], r13d	      3075	undo.c	FUNCTION_44	WHILE_1	ELSE_3
0x4003ab9	          0x4889c3	                            mov rbx, rax	      3076	undo.c	FUNCTION_44	WHILE_1	ELSE_3	IF_7
0x4003abc	      0xe99ffeffff	                           jmp 0x4003960	      3076	undo.c	FUNCTION_44	WHILE_1	ELSE_3	IF_7
0x4003ac1	     0xf1f80000000	                         nop dword [rax]	      3076	undo.c	FUNCTION_44	WHILE_1	ELSE_3	IF_7
0x4003ac8	        0x44896328	            mov dword [rbx + 0x28], r12d	      3046	undo.c	FUNCTION_44	WHILE_1
0x4003acc	            0xebb2	                           jmp 0x4003a80	      3046	undo.c	FUNCTION_44	WHILE_1
0x4003ace	            0x6690	                                     nop	      3046	undo.c	FUNCTION_44	WHILE_1
0x4003ad0	        0x44896b28	            mov dword [rbx + 0x28], r13d	      3075	undo.c	FUNCTION_44	WHILE_1	ELSE_3
0x4003ad4	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      3076	undo.c	FUNCTION_44	WHILE_1	ELSE_3	IF_7
0x4003ad8	          0x4885db	                           test rbx, rbx	      3076	undo.c	FUNCTION_44	WHILE_1	ELSE_3	IF_7
0x4003adb	     0xf857ffeffff	                           jne 0x4003960	      3076	undo.c	FUNCTION_44	WHILE_1	ELSE_3	IF_7
0x4003ae1	          0x83ed01	                              sub ebp, 1	      3081	undo.c	FUNCTION_44	WHILE_1	ELSE_3	ELSE_4
0x4003ae4	          0x4885d2	                           test rdx, rdx	      3025	undo.c	FUNCTION_44	WHILE_1
0x4003ae7	     0xf85fc000000	                           jne 0x4003be9	      3025	undo.c	FUNCTION_44	WHILE_1
0x4003aed	          0x8b3424	                    mov esi, dword [rsp]	      3086	undo.c	FUNCTION_44	IF_8
0x4003af0	            0x85f6	                           test esi, esi	      3086	undo.c	FUNCTION_44	IF_8
0x4003af2	     0xf84c8000000	                            je 0x4003bc0	      3086	undo.c	FUNCTION_44	IF_8
0x4003af8	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3090	undo.c	FUNCTION_44	ELSE_5	CALL_13
0x4003afd	      0xe800000000	                          call 0x4003b02	      3090	undo.c	FUNCTION_44	ELSE_5	CALL_13
0x4003b02	      0xe800000000	                          call 0x4003b07	      3092	undo.c	FUNCTION_44	ELSE_5	CALL_14
0x4003b07	    0x8b1d00000000	            mov ebx, dword [0x04003b0d] 	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x4003b0d	            0x31ff	                            xor edi, edi	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x4003b0f	      0xba05000000	                              mov edx, 5	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x4003b14	      0xbe00000000	                              mov esi, 0	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x4003b19	      0xe800000000	                          call 0x4003b1e	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x4003b1e	            0x89de	                            mov esi, ebx	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x4003b20	          0x4889c7	                            mov rdi, rax	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x4003b23	      0xe800000000	                          call 0x4003b28	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x4003b28	          0x8b0424	                    mov eax, dword [rsp]	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4003b2b	            0x85c0	                           test eax, eax	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4003b2d	            0x7e49	                           jle 0x4003b78	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4003b2f	    0x8b0500000000	            mov eax, dword [0x04003b35] 	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4003b35	            0x85c0	                           test eax, eax	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4003b37	            0x753f	                           jne 0x4003b78	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4003b39	            0x31ed	                            xor ebp, ebp	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4003b3b	            0x31db	                            xor ebx, ebx	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4003b3d	            0xeb25	                           jmp 0x4003b64	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4003b3f	              0x90	                                     nop	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4003b40	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3100	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_19
0x4003b45	          0x83c301	                              add ebx, 1	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4003b48	        0x488b3c28	              mov rdi, qword [rax + rbp]	      3100	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_19
0x4003b4c	      0xe800000000	                          call 0x4003b51	      3100	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_19
0x4003b51	          0x391c24	                    cmp dword [rsp], ebx	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4003b54	            0x7e22	                           jle 0x4003b78	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4003b56	    0x8b0500000000	            mov eax, dword [0x04003b5c] 	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4003b5c	        0x4883c508	                              add rbp, 8	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4003b60	            0x85c0	                           test eax, eax	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4003b62	            0x7514	                           jne 0x4003b78	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4003b64	      0xbf0a000000	                            mov edi, 0xa	      3097	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_18
0x4003b69	      0xe800000000	                          call 0x4003b6e	      3097	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_18
0x4003b6e	    0x8b0500000000	            mov eax, dword [0x04003b74] 	      3098	undo.c	FUNCTION_44	ELSE_5	FOR_1	IF_9
0x4003b74	            0x85c0	                           test eax, eax	      3098	undo.c	FUNCTION_44	ELSE_5	FOR_1	IF_9
0x4003b76	            0x74c8	                            je 0x4003b40	      3098	undo.c	FUNCTION_44	ELSE_5	FOR_1	IF_9
0x4003b78	      0xe800000000	                          call 0x4003b7d	      3102	undo.c	FUNCTION_44	ELSE_5	CALL_20
0x4003b7d	          0x4889e7	                            mov rdi, rsp	      3104	undo.c	FUNCTION_44	ELSE_5	CALL_21
0x4003b80	      0xe800000000	                          call 0x4003b85	      3104	undo.c	FUNCTION_44	ELSE_5	CALL_21
0x4003b85	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3106	undo.c	FUNCTION_44
0x4003b8a	    0x644833042528	                xor rax, qword fs:[0x28]	      3106	undo.c	FUNCTION_44
0x4003b93	            0x755c	                           jne 0x4003bf1	      3106	undo.c	FUNCTION_44
0x4003b95	        0x4883c420	                           add rsp, 0x20	      3106	undo.c	FUNCTION_44
0x4003b99	              0x5b	                                 pop rbx	      3106	undo.c	FUNCTION_44
0x4003b9a	              0x5d	                                 pop rbp	      3106	undo.c	FUNCTION_44
0x4003b9b	            0x415c	                                 pop r12	      3106	undo.c	FUNCTION_44
0x4003b9d	            0x415d	                                 pop r13	      3106	undo.c	FUNCTION_44
0x4003b9f	            0x415e	                                 pop r14	      3106	undo.c	FUNCTION_44
0x4003ba1	              0xc3	                                     ret	      3106	undo.c	FUNCTION_44
0x4003ba2	    0x660f1f440000	                    nop word [rax + rax]	      3106	undo.c	FUNCTION_44
0x4003ba8	          0x8b4228	            mov eax, dword [rdx + 0x28] 	      3065	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4003bab	          0x4139c5	                           cmp r13d, eax	      3066	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4003bae	            0x7430	                            je 0x4003be0	      3066	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4003bb0	          0x4139c4	                           cmp r12d, eax	      3066	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4003bb3	            0x742b	                            je 0x4003be0	      3066	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4003bb5	          0x83ed01	                              sub ebp, 1	      3069	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4003bb8	          0x4889d3	                            mov rbx, rdx	      3069	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4003bbb	      0xe9a0fdffff	                           jmp 0x4003960	      3069	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4003bc0	            0x31ff	                            xor edi, edi	      3087	undo.c	FUNCTION_44	CALL_12
0x4003bc2	      0xba05000000	                              mov edx, 5	      3087	undo.c	FUNCTION_44	CALL_12
0x4003bc7	      0xbe00000000	                              mov esi, 0	      3087	undo.c	FUNCTION_44	CALL_12
0x4003bcc	      0xe800000000	                          call 0x4003bd1	      3087	undo.c	FUNCTION_44	CALL_12
0x4003bd1	          0x4889c7	                            mov rdi, rax	      3087	undo.c	FUNCTION_44	CALL_12
0x4003bd4	      0xe800000000	                          call 0x4003bd9	      3087	undo.c	FUNCTION_44	CALL_12
0x4003bd9	            0xebaa	                           jmp 0x4003b85	      3087	undo.c	FUNCTION_44	CALL_12
0x4003bdb	       0xf1f440000	                   nop dword [rax + rax]	      3087	undo.c	FUNCTION_44	CALL_12
0x4003be0	        0x44896b28	            mov dword [rbx + 0x28], r13d	      3075	undo.c	FUNCTION_44	WHILE_1	ELSE_3
0x4003be4	      0xe9f8feffff	                           jmp 0x4003ae1	      3075	undo.c	FUNCTION_44	WHILE_1	ELSE_3
0x4003be9	          0x4889d3	                            mov rbx, rdx	      3075	undo.c	FUNCTION_44	WHILE_1	ELSE_3
0x4003bec	      0xe96ffdffff	                           jmp 0x4003960	      3075	undo.c	FUNCTION_44	WHILE_1	ELSE_3
0x4003bf1	      0xe800000000	                          call 0x4003bf6	      3106	undo.c	FUNCTION_44
curbufIsChanged	functions,0:CALL,1:DO,0:SWITCH,0:WHILE,0:FOR,0:IF,0:ELSE,0	2
0x4004e80	    0x488b3d000000	            mov rdi, qword [0x04004e87] 	      3549	undo.c	FUNCTION_65	CALL_1
0x4004e87	            0xebc7	                    jmp sym.bufIsChanged	      3549	undo.c	FUNCTION_65	CALL_1
u_redo	functions,0:CALL,2:DO,0:SWITCH,0:WHILE,0:FOR,0:IF,1:ELSE,0	18
0x40023d0	              0x53	                                push rbx	      2174	undo.c	FUNCTION_38
0x40023d1	            0x89fb	                            mov ebx, edi	      2174	undo.c	FUNCTION_38
0x40023d3	    0x488b3d000000	            mov rdi, qword [0x040023da] 	      2175	undo.c	FUNCTION_38	IF_1	CALL_1
0x40023da	      0xbe75000000	                           mov esi, 0x75	      2175	undo.c	FUNCTION_38	IF_1	CALL_1
0x40023df	      0xe800000000	                          call 0x40023e4	      2175	undo.c	FUNCTION_38	IF_1	CALL_1
0x40023e4	          0x4885c0	                           test rax, rax	      2175	undo.c	FUNCTION_38	IF_1	CALL_1
0x40023e7	            0x7417	                            je 0x4002400	      2175	undo.c	FUNCTION_38	IF_1	CALL_1
0x40023e9	      0xe800000000	                          call 0x40023ee	      2188	undo.c	FUNCTION_39	IF_1	CALL_1
0x40023ee	            0x85c0	                           test eax, eax	      2188	undo.c	FUNCTION_39	IF_1	CALL_1
0x40023f0	            0x7506	                           jne 0x40023f8	      2188	undo.c	FUNCTION_39	IF_1	CALL_1
0x40023f2	              0x5b	                                 pop rbx	      2178	undo.c	FUNCTION_38
0x40023f3	              0xc3	                                     ret	      2178	undo.c	FUNCTION_38
0x40023f4	         0xf1f4000	                         nop dword [rax]	      2178	undo.c	FUNCTION_38
0x40023f8	            0x89df	                            mov edi, ebx	      2178	undo.c	FUNCTION_38
0x40023fa	              0x5b	                                 pop rbx	      2178	undo.c	FUNCTION_38
0x40023fb	      0xe9f0f1ffff	                   jmp sym.u_doit.part.9	      2178	undo.c	FUNCTION_38
0x4002400	    0xc70500000000	               mov dword [0x0400240a], 0	      2176	undo.c	FUNCTION_38	IF_1
0x400240a	            0xebdd	                           jmp 0x40023e9	      2176	undo.c	FUNCTION_38	IF_1
ex_undojoin	functions,0:CALL,3:DO,0:SWITCH,0:WHILE,0:FOR,0:IF,4:ELSE,1	24
0x4003c00	    0x488b05000000	            mov rax, qword [0x04003c07] 	      3139	undo.c	FUNCTION_46	IF_1
0x4003c07	    0x4883b8201200	             cmp qword [rax + 0x1220], 0	      3139	undo.c	FUNCTION_46	IF_1
0x4003c0f	            0x745e	                            je 0x4003c6f	      3139	undo.c	FUNCTION_46	IF_1
0x4003c11	    0x4883b8281200	             cmp qword [rax + 0x1228], 0	      3141	undo.c	FUNCTION_46	IF_2
0x4003c19	            0x7425	                            je 0x4003c40	      3141	undo.c	FUNCTION_46	IF_2
0x4003c1b	        0x4883ec08	                              sub rsp, 8	      3138	undo.c	FUNCTION_46
0x4003c1f	            0x31ff	                            xor edi, edi	      3143	undo.c	FUNCTION_46	IF_2	CALL_2
0x4003c21	      0xba05000000	                              mov edx, 5	      3143	undo.c	FUNCTION_46	IF_2	CALL_2
0x4003c26	      0xbe00000000	                              mov esi, 0	      3143	undo.c	FUNCTION_46	IF_2	CALL_2
0x4003c2b	      0xe800000000	                          call 0x4003c30	      3143	undo.c	FUNCTION_46	IF_2	CALL_2
0x4003c30	        0x4883c408	                              add rsp, 8	      3153	undo.c	FUNCTION_46	ELSE_1
0x4003c34	          0x4889c7	                            mov rdi, rax	      3143	undo.c	FUNCTION_46	IF_2	CALL_2
0x4003c37	      0xe900000000	                           jmp 0x4003c3c	      3143	undo.c	FUNCTION_46	IF_2	CALL_2
0x4003c3c	         0xf1f4000	                         nop dword [rax]	      3143	undo.c	FUNCTION_46	IF_2	CALL_2
0x4003c40	    0x8b9034120000	          mov edx, dword [rax + 0x1234] 	      3146	undo.c	FUNCTION_46	IF_3
0x4003c46	            0x85d2	                           test edx, edx	      3146	undo.c	FUNCTION_46	IF_3
0x4003c48	            0x7425	                            je 0x4003c6f	      3146	undo.c	FUNCTION_46	IF_3
0x4003c4a	    0x488b90481600	          mov rdx, qword [rax + 0x1648] 	       367	undo.c	FUNCTION_9	IF_1
0x4003c51	    0x4881fac01dfe	             cmp rdx, 0xfffffffffffe1dc0	       368	undo.c	FUNCTION_9	IF_1
0x4003c58	    0x480f44150000	           cmove rdx, qword [0x04003c60]	       368	undo.c	FUNCTION_9	IF_1
0x4003c60	          0x4885d2	                           test rdx, rdx	      3148	undo.c	FUNCTION_46	IF_4	CALL_3
0x4003c63	            0x780a	                            js 0x4003c6f	      3148	undo.c	FUNCTION_46	IF_4	CALL_3
0x4003c65	    0xc78034120000	            mov dword [rax + 0x1234], 0 	      3152	undo.c	FUNCTION_46	ELSE_1
0x4003c6f	            0xf3c3	                                     ret	      3152	undo.c	FUNCTION_46	ELSE_1
u_save_cursor	functions,0:CALL,1:DO,0:SWITCH,0:WHILE,0:FOR,0:IF,0:ELSE,0	5
0x4003f90	    0x488b05000000	            mov rax, qword [0x04003f97] 	       254	undo.c	FUNCTION_3
0x4003f97	        0x488b7838	            mov rdi, qword [rax + 0x38] 	       254	undo.c	FUNCTION_3
0x4003f9b	        0x488d7701	                      lea rsi, [rdi + 1]	       253	undo.c	FUNCTION_3	CALL_1
0x4003f9f	        0x4883ef01	                              sub rdi, 1	       253	undo.c	FUNCTION_3	CALL_1
0x4003fa3	      0xe968ffffff	                          jmp sym.u_save	       253	undo.c	FUNCTION_3	CALL_1
u_update_save_nr	functions,0:CALL,0:DO,0:SWITCH,0:WHILE,0:FOR,0:IF,2:ELSE,1	15
0x4003d90	    0x488b87401200	          mov rax, qword [rdi + 0x1240] 	      3211	undo.c	FUNCTION_49
0x4003d97	    0x488b97281200	          mov rdx, qword [rdi + 0x1228] 	      3213	undo.c	FUNCTION_49
0x4003d9e	        0x4883c001	                              add rax, 1	      3211	undo.c	FUNCTION_49
0x4003da2	          0x4885d2	                           test rdx, rdx	      3214	undo.c	FUNCTION_49	IF_1
0x4003da5	    0x488987401200	          mov qword [rdi + 0x1240], rax 	      3211	undo.c	FUNCTION_49
0x4003dac	    0x488987581200	          mov qword [rdi + 0x1258], rax 	      3212	undo.c	FUNCTION_49
0x4003db3	            0x741b	                            je 0x4003dd0	      3214	undo.c	FUNCTION_49	IF_1
0x4003db5	          0x488b12	                    mov rdx, qword [rdx]	      3215	undo.c	FUNCTION_49	IF_1
0x4003db8	          0x4885d2	                           test rdx, rdx	      3218	undo.c	FUNCTION_49	IF_2
0x4003dbb	            0x7407	                            je 0x4003dc4	      3218	undo.c	FUNCTION_49	IF_2
0x4003dbd	    0x488982300200	            mov qword [rdx + 0x230], rax	      3219	undo.c	FUNCTION_49	IF_2
0x4003dc4	            0xf3c3	                                     ret	      3219	undo.c	FUNCTION_49	IF_2
0x4003dc6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3219	undo.c	FUNCTION_49	IF_2
0x4003dd0	    0x488b97201200	          mov rdx, qword [rdi + 0x1220] 	      3217	undo.c	FUNCTION_49	ELSE_1
0x4003dd7	            0xebdf	                           jmp 0x4003db8	      3217	undo.c	FUNCTION_49	ELSE_1
bufIsChanged	functions,0:CALL,2:DO,0:SWITCH,0:WHILE,0:FOR,0:IF,1:ELSE,0	13
0x4004e50	              0x53	                                push rbx	      3528	undo.c	FUNCTION_63
0x4004e51	          0x4889fb	                            mov rbx, rdi	      3528	undo.c	FUNCTION_63
0x4004e54	    0x488bbf481c00	          mov rdi, qword [rdi + 0x1c48] 	      3530	undo.c	FUNCTION_63	IF_1	CALL_1
0x4004e5b	      0xe800000000	                          call 0x4004e60	      3530	undo.c	FUNCTION_63	IF_1	CALL_1
0x4004e60	            0x85c0	                           test eax, eax	      3530	undo.c	FUNCTION_63	IF_1	CALL_1
0x4004e62	            0x740c	                            je 0x4004e70	      3530	undo.c	FUNCTION_63	IF_1	CALL_1
0x4004e64	      0xb801000000	                              mov eax, 1	      3534	undo.c	FUNCTION_63
0x4004e69	              0x5b	                                 pop rbx	      3534	undo.c	FUNCTION_63
0x4004e6a	              0xc3	                                     ret	      3534	undo.c	FUNCTION_63
0x4004e6b	       0xf1f440000	                   nop dword [rax + rax]	      3534	undo.c	FUNCTION_63
0x4004e70	          0x4889df	                            mov rdi, rbx	      3533	undo.c	FUNCTION_63	CALL_2
0x4004e73	              0x5b	                                 pop rbx	      3534	undo.c	FUNCTION_63
0x4004e74	            0xeb9a	             jmp sym.bufIsChangedNotTerm	      3533	undo.c	FUNCTION_63	CALL_2
u_find_first_changed	functions,0:CALL,4:DO,0:SWITCH,0:WHILE,0:FOR,1:IF,4:ELSE,0	61
0x4003cb0	    0x488b3d000000	            mov rdi, qword [0x04003cb7] 	      3173	undo.c	FUNCTION_48
0x4003cb7	            0x4156	                                push r14	      3172	undo.c	FUNCTION_48
0x4003cb9	            0x4155	                                push r13	      3172	undo.c	FUNCTION_48
0x4003cbb	            0x4154	                                push r12	      3172	undo.c	FUNCTION_48
0x4003cbd	              0x55	                                push rbp	      3172	undo.c	FUNCTION_48
0x4003cbe	              0x53	                                push rbx	      3172	undo.c	FUNCTION_48
0x4003cbf	    0x4883bf281200	             cmp qword [rdi + 0x1228], 0	      3177	undo.c	FUNCTION_48	IF_1
0x4003cc7	    0x488baf201200	          mov rbp, qword [rdi + 0x1220] 	      3173	undo.c	FUNCTION_48
0x4003cce	     0xf858f000000	                           jne 0x4003d63	      3177	undo.c	FUNCTION_48	IF_1
0x4003cd4	          0x4885ed	                           test rbp, rbp	      3177	undo.c	FUNCTION_48	IF_1
0x4003cd7	     0xf8486000000	                            je 0x4003d63	      3177	undo.c	FUNCTION_48	IF_1
0x4003cdd	        0x4c8b6d30	            mov r13, qword [rbp + 0x30] 	      3181	undo.c	FUNCTION_48
0x4003ce1	      0x49837d0800	                  cmp qword [r13 + 8], 0	      3182	undo.c	FUNCTION_48	IF_2
0x4003ce6	            0x757b	                           jne 0x4003d63	      3182	undo.c	FUNCTION_48	IF_2
0x4003ce8	      0x49837d1000	               cmp qword [r13 + 0x10], 0	      3182	undo.c	FUNCTION_48	IF_2
0x4003ced	            0x7574	                           jne 0x4003d63	      3182	undo.c	FUNCTION_48	IF_2
0x4003cef	          0x488b07	                    mov rax, qword [rdi]	      3185	undo.c	FUNCTION_48	FOR_1
0x4003cf2	        0x4883f801	                              cmp rax, 1	      3185	undo.c	FUNCTION_48	FOR_1
0x4003cf6	            0x7e74	                           jle 0x4003d6c	      3185	undo.c	FUNCTION_48	FOR_1
0x4003cf8	      0x49837d2800	               cmp qword [r13 + 0x28], 0	      3186	undo.c	FUNCTION_48	FOR_1
0x4003cfd	     0xf8e7c000000	                           jle 0x4003d7f	      3186	undo.c	FUNCTION_48	FOR_1
0x4003d03	          0x4531e4	                          xor r12d, r12d	      3186	undo.c	FUNCTION_48	FOR_1
0x4003d06	      0xbb01000000	                              mov ebx, 1	      3186	undo.c	FUNCTION_48	FOR_1
0x4003d0b	            0xeb23	                           jmp 0x4003d30	      3186	undo.c	FUNCTION_48	FOR_1
0x4003d0d	           0xf1f00	                         nop dword [rax]	      3186	undo.c	FUNCTION_48	FOR_1
0x4003d10	    0x488b3d000000	            mov rdi, qword [0x04003d17] 	      3185	undo.c	FUNCTION_48	FOR_1
0x4003d17	        0x4883c301	                              add rbx, 1	      3186	undo.c	FUNCTION_48	FOR_1
0x4003d1b	        0x498b5528	            mov rdx, qword [r13 + 0x28] 	      3186	undo.c	FUNCTION_48	FOR_1
0x4003d1f	          0x488b07	                    mov rax, qword [rdi]	      3185	undo.c	FUNCTION_48	FOR_1
0x4003d22	          0x4839d8	                            cmp rax, rbx	      3185	undo.c	FUNCTION_48	FOR_1
0x4003d25	            0x7e51	                           jle 0x4003d78	      3185	undo.c	FUNCTION_48	FOR_1
0x4003d27	        0x4983c408	                              add r12, 8	      3185	undo.c	FUNCTION_48	FOR_1
0x4003d2b	          0x4839da	                            cmp rdx, rbx	      3186	undo.c	FUNCTION_48	FOR_1
0x4003d2e	            0x7c48	                            jl 0x4003d78	      3186	undo.c	FUNCTION_48	FOR_1
0x4003d30	        0x498b4520	            mov rax, qword [r13 + 0x20] 	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4003d34	            0x31d2	                            xor edx, edx	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4003d36	          0x4889de	                            mov rsi, rbx	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4003d39	        0x4e8b3420	              mov r14, qword [rax + r12]	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4003d3d	      0xe800000000	                          call 0x4003d42	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4003d42	          0x4889c7	                            mov rdi, rax	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4003d45	          0x4c89f6	                            mov rsi, r14	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4003d48	      0xe800000000	                          call 0x4003d4d	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4003d4d	            0x85c0	                           test eax, eax	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4003d4f	            0x74bf	                            je 0x4003d10	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4003d51	    0xc74548000000	               mov dword [rbp + 0x48], 0	      3197	undo.c	FUNCTION_48	IF_4	CALL_4
0x4003d58	    0xc7454c000000	               mov dword [rbp + 0x4c], 0	      3197	undo.c	FUNCTION_48	IF_4	CALL_4
0x4003d5f	        0x48895d40	            mov qword [rbp + 0x40], rbx 	      3198	undo.c	FUNCTION_48	IF_4
0x4003d63	              0x5b	                                 pop rbx	      3200	undo.c	FUNCTION_48
0x4003d64	              0x5d	                                 pop rbp	      3200	undo.c	FUNCTION_48
0x4003d65	            0x415c	                                 pop r12	      3200	undo.c	FUNCTION_48
0x4003d67	            0x415d	                                 pop r13	      3200	undo.c	FUNCTION_48
0x4003d69	            0x415e	                                 pop r14	      3200	undo.c	FUNCTION_48
0x4003d6b	              0xc3	                                     ret	      3200	undo.c	FUNCTION_48
0x4003d6c	        0x498b5528	            mov rdx, qword [r13 + 0x28] 	      3200	undo.c	FUNCTION_48
0x4003d70	      0xbb01000000	                              mov ebx, 1	      3185	undo.c	FUNCTION_48	FOR_1
0x4003d75	           0xf1f00	                         nop dword [rax]	      3185	undo.c	FUNCTION_48	FOR_1
0x4003d78	          0x4839d0	                            cmp rax, rdx	      3194	undo.c	FUNCTION_48	IF_4
0x4003d7b	            0x75d4	                           jne 0x4003d51	      3194	undo.c	FUNCTION_48	IF_4
0x4003d7d	            0xebe4	                           jmp 0x4003d63	      3194	undo.c	FUNCTION_48	IF_4
0x4003d7f	      0xbb01000000	                              mov ebx, 1	      3186	undo.c	FUNCTION_48	FOR_1
0x4003d84	            0xebcb	                           jmp 0x4003d51	      3186	undo.c	FUNCTION_48	FOR_1
undo_flush	functions,0:CALL,2:DO,0:SWITCH,0:WHILE,0:FOR,0:IF,2:ELSE,0	34
0x40001b0	        0x488b7718	            mov rsi, qword [rdi + 0x18] 	       921	undo.c	FUNCTION_16	IF_1
0x40001b4	          0x4885f6	                           test rsi, rsi	       921	undo.c	FUNCTION_16	IF_1
0x40001b7	            0x7467	                            je 0x4000220	       921	undo.c	FUNCTION_16	IF_1
0x40001b9	        0x488b4f10	            mov rcx, qword [rdi + 0x10] 	       921	undo.c	FUNCTION_16	IF_1
0x40001bd	          0x4885c9	                           test rcx, rcx	       921	undo.c	FUNCTION_16	IF_1
0x40001c0	            0x745e	                            je 0x4000220	       921	undo.c	FUNCTION_16	IF_1
0x40001c2	        0x488b5720	            mov rdx, qword [rdi + 0x20] 	       921	undo.c	FUNCTION_16	IF_1
0x40001c6	      0xb801000000	                              mov eax, 1	       928	undo.c	FUNCTION_16
0x40001cb	          0x4885d2	                           test rdx, rdx	       921	undo.c	FUNCTION_16	IF_1
0x40001ce	            0x7508	                           jne 0x40001d8	       921	undo.c	FUNCTION_16	IF_1
0x40001d0	              0xc3	                                     ret	       929	undo.c	FUNCTION_16
0x40001d1	     0xf1f80000000	                         nop dword [rax]	       929	undo.c	FUNCTION_16
0x40001d8	              0x53	                                push rbx	       920	undo.c	FUNCTION_16
0x40001d9	          0x4889fb	                            mov rbx, rdi	       920	undo.c	FUNCTION_16
0x40001dc	          0x4889cf	                            mov rdi, rcx	       923	undo.c	FUNCTION_16	IF_1	CALL_1
0x40001df	      0xe800000000	                          call 0x40001e4	       923	undo.c	FUNCTION_16	IF_1	CALL_1
0x40001e4	        0x488b4b08	                mov rcx, qword [rbx + 8]	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x40001e8	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x40001ec	      0xba01000000	                              mov edx, 1	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x40001f1	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x40001f5	      0xe800000000	                          call 0x40001fa	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x40001fa	          0x4889c2	                            mov rdx, rax	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x40001fd	            0x31c0	                            xor eax, eax	       925	undo.c	FUNCTION_16	IF_1	IF_2
0x40001ff	        0x4883fa01	                              cmp rdx, 1	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4000203	            0x740b	                            je 0x4000210	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4000205	              0x5b	                                 pop rbx	       929	undo.c	FUNCTION_16
0x4000206	            0xf3c3	                                     ret	       929	undo.c	FUNCTION_16
0x4000208	     0xf1f84000000	                   nop dword [rax + rax]	       929	undo.c	FUNCTION_16
0x4000210	    0x48c743200000	               mov qword [rbx + 0x20], 0	       926	undo.c	FUNCTION_16	IF_1
0x4000218	      0xb801000000	                              mov eax, 1	       928	undo.c	FUNCTION_16
0x400021d	              0x5b	                                 pop rbx	       929	undo.c	FUNCTION_16
0x400021e	            0xebe6	                           jmp 0x4000206	       929	undo.c	FUNCTION_16
0x4000220	      0xb801000000	                              mov eax, 1	       928	undo.c	FUNCTION_16
0x4000225	              0xc3	                                     ret	       928	undo.c	FUNCTION_16
u_unch_branch	functions,0:CALL,1:DO,0:SWITCH,0:WHILE,0:FOR,1:IF,1:ELSE,0	15
0x4000040	          0x4885ff	                           test rdi, rdi	      3227	undo.c	FUNCTION_50	FOR_1
0x4000043	            0x7427	                            je 0x400006c	      3227	undo.c	FUNCTION_50	FOR_1
0x4000045	              0x53	                                push rbx	      3224	undo.c	FUNCTION_50
0x4000046	          0x4889fb	                            mov rbx, rdi	      3224	undo.c	FUNCTION_50
0x4000049	     0xf1f80000000	                         nop dword [rax]	      3224	undo.c	FUNCTION_50
0x4000050	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3230	undo.c	FUNCTION_50	FOR_1	IF_1
0x4000054	        0x834b5801	                or dword [rbx + 0x58], 1	      3229	undo.c	FUNCTION_50	FOR_1
0x4000058	          0x4885ff	                           test rdi, rdi	      3230	undo.c	FUNCTION_50	FOR_1	IF_1
0x400005b	            0x7405	                            je 0x4000062	      3230	undo.c	FUNCTION_50	FOR_1	IF_1
0x400005d	      0xe8deffffff	                  call sym.u_unch_branch	      3231	undo.c	FUNCTION_50	FOR_1	CALL_1
0x4000062	        0x488b5b08	                mov rbx, qword [rbx + 8]	      3227	undo.c	FUNCTION_50	FOR_1
0x4000066	          0x4885db	                           test rbx, rbx	      3227	undo.c	FUNCTION_50	FOR_1
0x4000069	            0x75e5	                           jne 0x4000050	      3227	undo.c	FUNCTION_50	FOR_1
0x400006b	              0x5b	                                 pop rbx	      3233	undo.c	FUNCTION_50
0x400006c	            0xf3c3	                                     ret	      3233	undo.c	FUNCTION_50
unserialize_pos	functions,0:CALL,4:DO,0:SWITCH,0:WHILE,0:FOR,0:IF,3:ELSE,0	26
0x40009f0	            0x4154	                                push r12	      1462	undo.c	FUNCTION_32
0x40009f2	              0x55	                                push rbp	      1462	undo.c	FUNCTION_32
0x40009f3	          0x4889fd	                            mov rbp, rdi	      1462	undo.c	FUNCTION_32
0x40009f6	              0x53	                                push rbx	      1462	undo.c	FUNCTION_32
0x40009f7	          0x4889f3	                            mov rbx, rsi	      1462	undo.c	FUNCTION_32
0x40009fa	      0xe881ffffff	                   call sym.undo_read_4c	      1463	undo.c	FUNCTION_32	CALL_1
0x40009ff	            0x4898	                                    cdqe	      1463	undo.c	FUNCTION_32	CALL_1
0x4000a01	      0xba00000000	                              mov edx, 0	      1463	undo.c	FUNCTION_32	CALL_1
0x4000a06	          0x4889ef	                            mov rdi, rbp	      1466	undo.c	FUNCTION_32	CALL_2
0x4000a09	          0x4885c0	                           test rax, rax	      1463	undo.c	FUNCTION_32	CALL_1
0x4000a0c	        0x480f48c2	                          cmovs rax, rdx	      1463	undo.c	FUNCTION_32	CALL_1
0x4000a10	          0x4531e4	                          xor r12d, r12d	      1466	undo.c	FUNCTION_32	CALL_2
0x4000a13	          0x488903	                    mov qword [rbx], rax	      1463	undo.c	FUNCTION_32	CALL_1
0x4000a16	      0xe865ffffff	                   call sym.undo_read_4c	      1466	undo.c	FUNCTION_32	CALL_2
0x4000a1b	            0x85c0	                           test eax, eax	      1466	undo.c	FUNCTION_32	CALL_2
0x4000a1d	          0x4889ef	                            mov rdi, rbp	      1470	undo.c	FUNCTION_32	CALL_3
0x4000a20	        0x410f48c4	                         cmovs eax, r12d	      1466	undo.c	FUNCTION_32	CALL_2
0x4000a24	          0x894308	                mov dword [rbx + 8], eax	      1466	undo.c	FUNCTION_32	CALL_2
0x4000a27	      0xe854ffffff	                   call sym.undo_read_4c	      1470	undo.c	FUNCTION_32	CALL_3
0x4000a2c	            0x85c0	                           test eax, eax	      1470	undo.c	FUNCTION_32	CALL_3
0x4000a2e	        0x410f48c4	                         cmovs eax, r12d	      1470	undo.c	FUNCTION_32	CALL_3
0x4000a32	          0x89430c	              mov dword [rbx + 0xc], eax	      1470	undo.c	FUNCTION_32	CALL_3
0x4000a35	              0x5b	                                 pop rbx	      1476	undo.c	FUNCTION_32
0x4000a36	              0x5d	                                 pop rbp	      1476	undo.c	FUNCTION_32
0x4000a37	            0x415c	                                 pop r12	      1476	undo.c	FUNCTION_32
0x4000a39	              0xc3	                                     ret	      1476	undo.c	FUNCTION_32
u_unchanged	functions,0:CALL,1:DO,0:SWITCH,0:WHILE,0:FOR,0:IF,0:ELSE,0	7
0x4003c80	        0x4883ec08	                              sub rsp, 8	      3161	undo.c	ELSE_1	FUNCTION_47
0x4003c84	          0x4889f8	                            mov rax, rdi	      3161	undo.c	ELSE_1	FUNCTION_47
0x4003c87	    0x488bbf181200	          mov rdi, qword [rdi + 0x1218] 	      3162	undo.c	ELSE_1	FUNCTION_47	CALL_1
0x4003c8e	      0xe8adc3ffff	                  call sym.u_unch_branch	      3162	undo.c	ELSE_1	FUNCTION_47	CALL_1
0x4003c93	    0xc78054170000	            mov dword [rax + 0x1754], 0 	      3163	undo.c	ELSE_1	FUNCTION_47
0x4003c9d	        0x4883c408	                              add rsp, 8	      3164	undo.c	ELSE_1	FUNCTION_47
0x4003ca1	              0xc3	                                     ret	      3164	undo.c	ELSE_1	FUNCTION_47
u_savecommon	functions,0:CALL,37:DO,0:SWITCH,0:WHILE,2:FOR,2:IF,37:ELSE,11	419
0x4001900	            0x4157	                                push r15	       387	undo.c	FUNCTION_10
0x4001902	            0x4156	                                push r14	       387	undo.c	FUNCTION_10
0x4001904	          0x4989d6	                            mov r14, rdx	       387	undo.c	FUNCTION_10
0x4001907	            0x4155	                                push r13	       387	undo.c	FUNCTION_10
0x4001909	            0x4154	                                push r12	       387	undo.c	FUNCTION_10
0x400190b	          0x4989f5	                            mov r13, rsi	       387	undo.c	FUNCTION_10
0x400190e	              0x55	                                push rbp	       387	undo.c	FUNCTION_10
0x400190f	              0x53	                                push rbx	       387	undo.c	FUNCTION_10
0x4001910	          0x4889fb	                            mov rbx, rdi	       387	undo.c	FUNCTION_10
0x4001913	        0x4883ec18	                           sub rsp, 0x18	       387	undo.c	FUNCTION_10
0x4001917	    0x64488b042528	                mov rax, qword fs:[0x28]	       387	undo.c	FUNCTION_10
0x4001920	      0x4889442408	                mov qword [rsp + 8], rax	       387	undo.c	FUNCTION_10
0x4001925	            0x31c0	                            xor eax, eax	       387	undo.c	FUNCTION_10
0x4001927	    0x488b05000000	            mov rax, qword [0x0400192e] 	       387	undo.c	FUNCTION_10
0x400192e	            0x85c9	                           test ecx, ecx	       396	undo.c	FUNCTION_10	IF_1
0x4001930	          0x4889c7	                            mov rdi, rax	       396	undo.c	FUNCTION_10	IF_1
0x4001933	     0xf848c020000	                            je 0x4001bc5	       396	undo.c	FUNCTION_10	IF_1
0x4001939	    0x8b8834120000	          mov ecx, dword [rax + 0x1234] 	       452	undo.c	FUNCTION_10	IF_7
0x400193f	          0x4d89ec	                            mov r12, r13	       447	undo.c	FUNCTION_10
0x4001942	          0x4929dc	                            sub r12, rbx	       447	undo.c	FUNCTION_10
0x4001945	        0x4983ec01	                              sub r12, 1	       447	undo.c	FUNCTION_10
0x4001949	            0x85c9	                           test ecx, ecx	       452	undo.c	FUNCTION_10	IF_7
0x400194b	     0xf84e7000000	                            je 0x4001a38	       452	undo.c	FUNCTION_10	IF_7
0x4001951	    0xc7809c090000	              mov dword [rax + 0x99c], 1	       456	undo.c	FUNCTION_10	IF_7
0x400195b	    0x488b80481600	          mov rax, qword [rax + 0x1648] 	       367	undo.c	FUNCTION_9	IF_1
0x4001962	    0x483dc01dfeff	             cmp rax, 0xfffffffffffe1dc0	       368	undo.c	FUNCTION_9	IF_1
0x4001968	    0x480f44050000	           cmove rax, qword [0x04001970]	       368	undo.c	FUNCTION_9	IF_1
0x4001970	          0x4885c0	                           test rax, rax	       459	undo.c	FUNCTION_10	IF_7	IF_8	CALL_13
0x4001973	     0xf88f3050000	                            js 0x4001f6c	       459	undo.c	FUNCTION_10	IF_7	IF_8	CALL_13
0x4001979	            0x31f6	                            xor esi, esi	       465	undo.c	FUNCTION_10	IF_7	IF_8
0x400197b	      0xbf38020000	                          mov edi, 0x238	       465	undo.c	FUNCTION_10	IF_7	IF_8
0x4001980	      0xe800000000	                          call 0x4001985	       465	undo.c	FUNCTION_10	IF_7	IF_8
0x4001985	          0x4885c0	                           test rax, rax	       466	undo.c	FUNCTION_10	IF_7	IF_8	IF_9
0x4001988	          0x4889c5	                            mov rbp, rax	       465	undo.c	FUNCTION_10	IF_7	IF_8
0x400198b	     0xf84f8010000	                            je 0x4001b89	       466	undo.c	FUNCTION_10	IF_7	IF_8	IF_9
0x4001991	    0x488b3d000000	            mov rdi, qword [0x04001998] 	       466	undo.c	FUNCTION_10	IF_7	IF_8	IF_9
0x4001998	    0x488bb7281200	          mov rsi, qword [rdi + 0x1228] 	       479	undo.c	FUNCTION_10	IF_7	ELSE_1
0x400199f	          0x4885f6	                           test rsi, rsi	       480	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x40019a2	        0x48893424	                    mov qword [rsp], rsi	       479	undo.c	FUNCTION_10	IF_7	ELSE_1
0x40019a6	            0x7418	                            je 0x40019c0	       480	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x40019a8	          0x488b06	                    mov rax, qword [rsi]	       482	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x40019ab	    0x48c787281200	            mov qword [rdi + 0x1228], 0 	       483	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x40019b6	    0x488987201200	          mov qword [rdi + 0x1220], rax 	       482	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x40019bd	           0xf1f00	                         nop dword [rax]	       482	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x40019c0	    0x488b87481600	          mov rax, qword [rdi + 0x1648] 	       367	undo.c	FUNCTION_9	IF_1
0x40019c7	    0x486397301200	       movsxd rdx, dword [rdi + 0x1230] 	       489	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_14
0x40019ce	    0x483dc01dfeff	             cmp rax, 0xfffffffffffe1dc0	       368	undo.c	FUNCTION_9	IF_1
0x40019d4	    0x480f44050000	           cmove rax, qword [0x040019dc]	       368	undo.c	FUNCTION_9	IF_1
0x40019dc	          0x4839c2	                            cmp rdx, rax	       489	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_14
0x40019df	     0xf8ecb030000	                           jle 0x4001db0	       489	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_14
0x40019e5	    0x488b87181200	          mov rax, qword [rdi + 0x1218] 	       490	undo.c	FUNCTION_10	IF_7	WHILE_1
0x40019ec	          0x4885c0	                           test rax, rax	       490	undo.c	FUNCTION_10	IF_7	WHILE_1
0x40019ef	     0xf84bb030000	                            je 0x4001db0	       490	undo.c	FUNCTION_10	IF_7	WHILE_1
0x40019f5	          0x4839f0	                            cmp rax, rsi	       494	undo.c	FUNCTION_10	IF_7	WHILE_1	IF_11
0x40019f8	            0x7422	                            je 0x4001a1c	       494	undo.c	FUNCTION_10	IF_7	WHILE_1	IF_11
0x40019fa	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       497	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x40019fe	          0x4885f6	                           test rsi, rsi	       497	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x4001a01	            0x7510	                           jne 0x4001a13	       497	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x4001a03	      0xe947050000	                           jmp 0x4001f4f	       497	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x4001a08	     0xf1f84000000	                   nop dword [rax + rax]	       497	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x4001a10	          0x4889c6	                            mov rsi, rax	       497	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x4001a13	        0x488b4610	            mov rax, qword [rsi + 0x10] 	       497	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x4001a17	          0x4885c0	                           test rax, rax	       503	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	WHILE_2
0x4001a1a	            0x75f4	                           jne 0x4001a10	       503	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	WHILE_2
0x4001a1c	          0x4889e2	                            mov rdx, rsp	       505	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	CALL_17
0x4001a1f	      0xe84cecffff	                   call sym.u_freebranch	       505	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	CALL_17
0x4001a24	    0x488b3d000000	            mov rdi, qword [0x04001a2b] 	       505	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	CALL_17
0x4001a2b	        0x488b3424	                    mov rsi, qword [rsp]	       505	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	CALL_17
0x4001a2f	            0xeb8f	                           jmp 0x40019c0	       505	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	CALL_17
0x4001a31	     0xf1f80000000	                         nop dword [rax]	       505	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	CALL_17
0x4001a38	    0x488b90481600	          mov rdx, qword [rax + 0x1648] 	       367	undo.c	FUNCTION_9	IF_1
0x4001a3f	    0x4881fac01dfe	             cmp rdx, 0xfffffffffffe1dc0	       368	undo.c	FUNCTION_9	IF_1
0x4001a46	    0x480f44150000	           cmove rdx, qword [0x04001a4e]	       368	undo.c	FUNCTION_9	IF_1
0x4001a4e	          0x4885d2	                           test rdx, rdx	       569	undo.c	FUNCTION_10	ELSE_6	IF_21	CALL_24
0x4001a51	     0xf8832050000	                            js 0x4001f89	       569	undo.c	FUNCTION_10	ELSE_6	IF_21	CALL_24
0x4001a57	        0x4983fc01	                              cmp r12, 1	       581	undo.c	FUNCTION_10	ELSE_6	IF_22
0x4001a5b	     0xf841f020000	                            je 0x4001c80	       581	undo.c	FUNCTION_10	ELSE_6	IF_22
0x4001a61	      0xe84afdffff	                       call sym.u_getbot	       643	undo.c	FUNCTION_10	ELSE_6	CALL_27
0x4001a66	            0x31f6	                            xor esi, esi	       658	undo.c	FUNCTION_10
0x4001a68	      0xbf30000000	                           mov edi, 0x30	       658	undo.c	FUNCTION_10
0x4001a6d	      0xe800000000	                          call 0x4001a72	       658	undo.c	FUNCTION_10
0x4001a72	          0x4885c0	                           test rax, rax	       659	undo.c	FUNCTION_10	IF_30
0x4001a75	          0x4889c5	                            mov rbp, rax	       658	undo.c	FUNCTION_10
0x4001a78	     0xf840b010000	                            je 0x4001b89	       659	undo.c	FUNCTION_10	IF_30
0x4001a7e	        0x488d7808	                      lea rdi, [rax + 8]	        90	string3.h	FUNCTION_70	CALL_6
0x4001a82	          0x4889c1	                            mov rcx, rax	        90	string3.h	FUNCTION_70	CALL_6
0x4001a85	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_70	CALL_6
0x4001a8c	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_70	CALL_6
0x4001a8e	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_70	CALL_6
0x4001a92	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_70	CALL_6
0x4001a95	          0x83c130	                           add ecx, 0x30	        90	string3.h	FUNCTION_70	CALL_6
0x4001a98	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_70	CALL_6
0x4001a9b	          0x4d85f6	                           test r14, r14	       668	undo.c	FUNCTION_10	IF_31
0x4001a9e	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_70	CALL_6
0x4001aa1	        0x4c896528	            mov qword [rbp + 0x28], r12 	       666	undo.c	FUNCTION_10
0x4001aa5	        0x48895d08	                mov qword [rbp + 8], rbx	       667	undo.c	FUNCTION_10
0x4001aa9	     0xf84a0010000	                            je 0x4001c4f	       668	undo.c	FUNCTION_10	IF_31
0x4001aaf	        0x4c897510	            mov qword [rbp + 0x10], r14 	       669	undo.c	FUNCTION_10	IF_31
0x4001ab3	          0x4d85e4	                           test r12, r12	       682	undo.c	FUNCTION_10	IF_33
0x4001ab6	     0xf8eb7010000	                           jle 0x4001c73	       682	undo.c	FUNCTION_10	IF_33
0x4001abc	    0x4a8d3ce50000	                        lea rdi, [r12*8]	       684	undo.c	FUNCTION_10	IF_33	IF_34
0x4001ac4	            0x31f6	                            xor esi, esi	       684	undo.c	FUNCTION_10	IF_33	IF_34
0x4001ac6	        0x4883c301	                              add rbx, 1	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0x4001aca	          0x4531ed	                          xor r13d, r13d	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0x4001acd	      0xe800000000	                          call 0x4001ad2	       684	undo.c	FUNCTION_10	IF_33	IF_34
0x4001ad2	          0x4885c0	                           test rax, rax	       684	undo.c	FUNCTION_10	IF_33	IF_34
0x4001ad5	        0x48894520	            mov qword [rbp + 0x20], rax 	       684	undo.c	FUNCTION_10	IF_33	IF_34
0x4001ad9	            0x7508	                           jne 0x4001ae3	       684	undo.c	FUNCTION_10	IF_33	IF_34
0x4001adb	      0xe99f000000	                           jmp 0x4001b7f	       684	undo.c	FUNCTION_10	IF_33	IF_34
0x4001ae0	          0x4c89f3	                            mov rbx, r14	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4001ae3	      0xe800000000	                          call 0x4001ae8	       692	undo.c	FUNCTION_10	IF_33	FOR_2	CALL_30
0x4001ae8	    0x8b0500000000	            mov eax, dword [0x04001aee] 	       693	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35
0x4001aee	            0x85c0	                           test eax, eax	       693	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35
0x4001af0	     0xf85ad040000	                           jne 0x4001fa3	       693	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35
0x4001af6	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4001afa	          0x4889df	                            mov rdi, rbx	      3516	undo.c	FUNCTION_62	CALL_2
0x4001afd	        0x4c8d7301	                      lea r14, [rbx + 1]	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4001b01	        0x4e8d3ce8	                  lea r15, [rax + r13*8]	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4001b05	      0xe800000000	                          call 0x4001b0a	      3516	undo.c	FUNCTION_62	CALL_2
0x4001b0a	          0x4889c7	                            mov rdi, rax	      3516	undo.c	FUNCTION_62	CALL_2
0x4001b0d	      0xe800000000	                          call 0x4001b12	      3516	undo.c	FUNCTION_62	CALL_2
0x4001b12	          0x4885c0	                           test rax, rax	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4001b15	          0x498907	                    mov qword [r15], rax	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4001b18	     0xf8475040000	                            je 0x4001f93	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4001b1e	        0x4983c501	                              add r13, 1	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0x4001b22	          0x4d39ec	                            cmp r12, r13	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0x4001b25	            0x75b9	                           jne 0x4001ae0	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0x4001b27	    0x488b05000000	            mov rax, qword [0x04001b2e] 	       707	undo.c	FUNCTION_10
0x4001b2e	    0xc70500000000	               mov dword [0x04001b38], 0	       710	undo.c	FUNCTION_10
0x4001b38	    0x488b90201200	          mov rdx, qword [rax + 0x1220] 	       707	undo.c	FUNCTION_10
0x4001b3f	        0x488b4a30	            mov rcx, qword [rdx + 0x30] 	       707	undo.c	FUNCTION_10
0x4001b43	        0x48894d00	                    mov qword [rbp], rcx	       707	undo.c	FUNCTION_10
0x4001b47	        0x48896a30	             mov qword [rdx + 0x30], rbp	       708	undo.c	FUNCTION_10
0x4001b4b	      0xbd01000000	                              mov ebp, 1	       715	undo.c	FUNCTION_10
0x4001b50	    0xc78034120000	            mov dword [rax + 0x1234], 0 	       709	undo.c	FUNCTION_10
0x4001b5a	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       727	undo.c	FUNCTION_10
0x4001b5f	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       727	undo.c	FUNCTION_10
0x4001b68	            0x89e8	                            mov eax, ebp	       727	undo.c	FUNCTION_10
0x4001b6a	     0xf85db040000	                           jne 0x400204b	       727	undo.c	FUNCTION_10
0x4001b70	        0x4883c418	                           add rsp, 0x18	       727	undo.c	FUNCTION_10
0x4001b74	              0x5b	                                 pop rbx	       727	undo.c	FUNCTION_10
0x4001b75	              0x5d	                                 pop rbp	       727	undo.c	FUNCTION_10
0x4001b76	            0x415c	                                 pop r12	       727	undo.c	FUNCTION_10
0x4001b78	            0x415d	                                 pop r13	       727	undo.c	FUNCTION_10
0x4001b7a	            0x415e	                                 pop r14	       727	undo.c	FUNCTION_10
0x4001b7c	            0x415f	                                 pop r15	       727	undo.c	FUNCTION_10
0x4001b7e	              0xc3	                                     ret	       727	undo.c	FUNCTION_10
0x4001b7f	            0x31f6	                            xor esi, esi	       687	undo.c	FUNCTION_10	IF_33	IF_34	CALL_29
0x4001b81	          0x4889ef	                            mov rdi, rbp	       687	undo.c	FUNCTION_10	IF_33	IF_34	CALL_29
0x4001b84	      0xe8e7e4ffff	                    call sym.u_freeentry	       687	undo.c	FUNCTION_10	IF_33	IF_34	CALL_29
0x4001b89	            0x31ff	                            xor edi, edi	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4001b8b	      0xba05000000	                              mov edx, 5	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4001b90	      0xbe00000000	                              mov esi, 0	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4001b95	    0xc70500000000	               mov dword [0x04001b9f], 0	       718	undo.c	FUNCTION_10
0x4001b9f	      0xe800000000	                          call 0x4001ba4	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4001ba4	      0xbe01000000	                              mov esi, 1	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4001ba9	          0x4889c7	                            mov rdi, rax	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4001bac	      0xe800000000	                          call 0x4001bb1	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4001bb1	          0x83f879	                           cmp eax, 0x79	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4001bb4	     0xf84ce010000	                            je 0x4001d88	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4001bba	            0x31ff	                            xor edi, edi	       725	undo.c	FUNCTION_10	CALL_37
0x4001bbc	            0x31ed	                            xor ebp, ebp	       726	undo.c	FUNCTION_10
0x4001bbe	      0xe800000000	                          call 0x4001bc3	       725	undo.c	FUNCTION_10	CALL_37
0x4001bc3	            0xeb95	                           jmp 0x4001b5a	       726	undo.c	FUNCTION_10
0x4001bc5	      0xe800000000	                          call 0x4001bca	       400	undo.c	FUNCTION_10	IF_1	IF_2	CALL_1
0x4001bca	            0x85c0	                           test eax, eax	       400	undo.c	FUNCTION_10	IF_1	IF_2	CALL_1
0x4001bcc	            0x89c5	                            mov ebp, eax	       400	undo.c	FUNCTION_10	IF_1	IF_2	CALL_1
0x4001bce	            0x748a	                            je 0x4001b5a	       400	undo.c	FUNCTION_10	IF_1	IF_2	CALL_1
0x4001bd0	      0xe800000000	                          call 0x4001bd5	       408	undo.c	FUNCTION_10	IF_1	IF_3	CALL_2
0x4001bd5	            0x85c0	                           test eax, eax	       408	undo.c	FUNCTION_10	IF_1	IF_3	CALL_2
0x4001bd7	            0x7430	                            je 0x4001c09	       408	undo.c	FUNCTION_10	IF_1	IF_3	CALL_2
0x4001bd9	          0x4c89ee	                            mov rsi, r13	       410	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_3
0x4001bdc	          0x4889df	                            mov rdi, rbx	       410	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_3
0x4001bdf	      0xe800000000	                          call 0x4001be4	       410	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_3
0x4001be4	            0x85c0	                           test eax, eax	       410	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_3
0x4001be6	            0x89c5	                            mov ebp, eax	       410	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_3
0x4001be8	      0xba05000000	                              mov edx, 5	       412	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_5
0x4001bed	      0xbe00000000	                              mov esi, 0	       412	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_5
0x4001bf2	            0x7545	                           jne 0x4001c39	       410	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_3
0x4001bf4	    0x488b05000000	            mov rax, qword [0x04001bfb] 	       415	undo.c	FUNCTION_10	IF_1	IF_3	IF_5
0x4001bfb	    0x8bb060150000	          mov esi, dword [rax + 0x1560] 	       415	undo.c	FUNCTION_10	IF_1	IF_3	IF_5
0x4001c01	            0x85f6	                           test esi, esi	       415	undo.c	FUNCTION_10	IF_1	IF_3	IF_5
0x4001c03	     0xf85ec030000	                           jne 0x4001ff5	       415	undo.c	FUNCTION_10	IF_1	IF_3	IF_5
0x4001c09	      0xe800000000	                          call 0x4001c0e	       424	undo.c	FUNCTION_10	IF_1	CALL_8
0x4001c0e	            0x31ff	                            xor edi, edi	       433	undo.c	FUNCTION_10	IF_1	CALL_9
0x4001c10	      0xe800000000	                          call 0x4001c15	       433	undo.c	FUNCTION_10	IF_1	CALL_9
0x4001c15	    0x488b05000000	            mov rax, qword [0x04001c1c] 	       434	undo.c	FUNCTION_10	IF_1	IF_6
0x4001c1c	          0x488b08	                    mov rcx, qword [rax]	       434	undo.c	FUNCTION_10	IF_1	IF_6
0x4001c1f	          0x4889c7	                            mov rdi, rax	       434	undo.c	FUNCTION_10	IF_1	IF_6
0x4001c22	        0x488d5101	                      lea rdx, [rcx + 1]	       434	undo.c	FUNCTION_10	IF_1	IF_6
0x4001c26	          0x4939d5	                            cmp r13, rdx	       434	undo.c	FUNCTION_10	IF_1	IF_6
0x4001c29	     0xf8e0afdffff	                           jle 0x4001939	       434	undo.c	FUNCTION_10	IF_1	IF_6
0x4001c2f	      0xba05000000	                              mov edx, 5	       438	undo.c	FUNCTION_10	IF_1	IF_6	CALL_11
0x4001c34	      0xbe00000000	                              mov esi, 0	       438	undo.c	FUNCTION_10	IF_1	IF_6	CALL_11
0x4001c39	            0x31ff	                            xor edi, edi	       438	undo.c	FUNCTION_10	IF_1	IF_6	CALL_11
0x4001c3b	            0x31ed	                            xor ebp, ebp	       439	undo.c	FUNCTION_10	IF_1	IF_6
0x4001c3d	      0xe800000000	                          call 0x4001c42	       438	undo.c	FUNCTION_10	IF_1	IF_6	CALL_11
0x4001c42	          0x4889c7	                            mov rdi, rax	       438	undo.c	FUNCTION_10	IF_1	IF_6	CALL_11
0x4001c45	      0xe800000000	                          call 0x4001c4a	       438	undo.c	FUNCTION_10	IF_1	IF_6	CALL_11
0x4001c4a	      0xe90bffffff	                           jmp 0x4001b5a	       439	undo.c	FUNCTION_10	IF_1	IF_6
0x4001c4f	    0x488b05000000	            mov rax, qword [0x04001c56] 	       674	undo.c	FUNCTION_10	ELSE_9	IF_32
0x4001c56	          0x488b10	                    mov rdx, qword [rax]	       674	undo.c	FUNCTION_10	ELSE_9	IF_32
0x4001c59	          0x4939d5	                            cmp r13, rdx	       674	undo.c	FUNCTION_10	ELSE_9	IF_32
0x4001c5c	     0xf8e3a010000	                           jle 0x4001d9c	       674	undo.c	FUNCTION_10	ELSE_9	IF_32
0x4001c62	          0x4d85e4	                           test r12, r12	       682	undo.c	FUNCTION_10	IF_33
0x4001c65	    0x48c745100000	               mov qword [rbp + 0x10], 0	       675	undo.c	FUNCTION_10	ELSE_9	IF_32
0x4001c6d	     0xf8f49feffff	                            jg 0x4001abc	       682	undo.c	FUNCTION_10	IF_33
0x4001c73	    0x48c745200000	               mov qword [rbp + 0x20], 0	       706	undo.c	FUNCTION_10	ELSE_11
0x4001c7b	      0xe9a7feffff	                           jmp 0x4001b27	       706	undo.c	FUNCTION_10	ELSE_11
0x4001c80	    0x488b90201200	          mov rdx, qword [rax + 0x1220] 	      3242	undo.c	FUNCTION_51	IF_1
0x4001c87	          0x4885d2	                           test rdx, rdx	      3242	undo.c	FUNCTION_51	IF_1
0x4001c8a	     0xf848f030000	                            je 0x400201f	      3242	undo.c	FUNCTION_51	IF_1
0x4001c90	        0x488b6a30	            mov rbp, qword [rdx + 0x30] 	      3242	undo.c	FUNCTION_51	IF_1
0x4001c94	          0x4885ed	                           test rbp, rbp	      3242	undo.c	FUNCTION_51	IF_1
0x4001c97	     0xf8482030000	                            je 0x400201f	      3242	undo.c	FUNCTION_51	IF_1
0x4001c9d	        0x4c8b4238	              mov r8, qword [rdx + 0x38]	      3242	undo.c	FUNCTION_51	IF_1
0x4001ca1	            0x31ff	                            xor edi, edi	      3242	undo.c	FUNCTION_51	IF_1
0x4001ca3	          0x4531ff	                          xor r15d, r15d	      3242	undo.c	FUNCTION_51	IF_1
0x4001ca6	            0xeb3e	                           jmp 0x4001ce6	      3242	undo.c	FUNCTION_51	IF_1
0x4001ca8	     0xf1f84000000	                   nop dword [rax + rax]	      3242	undo.c	FUNCTION_51	IF_1
0x4001cb0	        0x488b4d08	                mov rcx, qword [rbp + 8]	       599	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001cb4	          0x4839cb	                            cmp rbx, rcx	       599	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001cb7	            0x7c0c	                            jl 0x4001cc5	       599	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001cb9	          0x4801ca	                            add rdx, rcx	       600	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001cbc	          0x4839d3	                            cmp rbx, rdx	       600	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001cbf	     0xf8c9cfdffff	                            jl 0x4001a61	       600	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001cc5	        0x4883c701	                              add rdi, 1	       585	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x4001cc9	        0x488b5500	                    mov rdx, qword [rbp]	       638	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x4001ccd	        0x4883ff0a	                            cmp rdi, 0xa	       585	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x4001cd1	     0xf848afdffff	                            je 0x4001a61	       585	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x4001cd7	          0x4885d2	                           test rdx, rdx	       587	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_23
0x4001cda	          0x4989ef	                            mov r15, rbp	       587	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_23
0x4001cdd	     0xf847efdffff	                            je 0x4001a61	       587	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_23
0x4001ce3	          0x4889d5	                            mov rbp, rdx	       587	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_23
0x4001ce6	          0x4c39c5	                             cmp rbp, r8	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001ce9	     0xf8484020000	                            je 0x4001f73	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001cef	        0x488b5528	            mov rdx, qword [rbp + 0x28] 	       593	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001cf3	        0x488b4d10	            mov rcx, qword [rbp + 0x10] 	       594	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001cf7	          0x4889d6	                            mov rsi, rdx	       593	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001cfa	        0x48037508	                add rsi, qword [rbp + 8]	       593	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001cfe	        0x4883c601	                              add rsi, 1	       593	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001d02	          0x4885c9	                           test rcx, rcx	       596	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001d05	            0x7507	                           jne 0x4001d0e	       596	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001d07	          0x488b08	                    mov rcx, qword [rax]	       596	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001d0a	        0x4883c101	                              add rcx, 1	       596	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001d0e	          0x4839f1	                            cmp rcx, rsi	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001d11	     0xf854afdffff	                           jne 0x4001a61	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001d17	        0x4883fa01	                              cmp rdx, 1	       598	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001d1b	            0x7f93	                            jg 0x4001cb0	       598	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001d1d	            0x75a6	                           jne 0x4001cc5	       604	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x4001d1f	        0x483b5d08	                cmp rbx, qword [rbp + 8]	       604	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x4001d23	            0x75a0	                           jne 0x4001cc5	       604	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x4001d25	          0x4885ff	                           test rdi, rdi	       606	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4001d28	            0x7430	                            je 0x4001d5a	       606	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4001d2a	      0xe881faffff	                       call sym.u_getbot	       611	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26	CALL_26
0x4001d2f	    0x488b05000000	            mov rax, qword [0x04001d36] 	       612	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4001d36	        0x488b5500	                    mov rdx, qword [rbp]	       620	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4001d3a	    0xc78034120000	            mov dword [rax + 0x1234], 0 	       612	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4001d44	          0x498917	                    mov qword [r15], rdx	       620	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4001d47	    0x488b90201200	          mov rdx, qword [rax + 0x1220] 	       621	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4001d4e	        0x488b4a30	            mov rcx, qword [rdx + 0x30] 	       621	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4001d52	        0x48894d00	                    mov qword [rbp], rcx	       621	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4001d56	        0x48896a30	             mov qword [rdx + 0x30], rbp	       622	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4001d5a	          0x4d85f6	                           test r14, r14	       626	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_27
0x4001d5d	     0xf85da020000	                           jne 0x400203d	       626	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_27
0x4001d63	          0x488b10	                    mov rdx, qword [rax]	       628	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_7	IF_28
0x4001d66	          0x4939d5	                            cmp r13, rdx	       628	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_7	IF_28
0x4001d69	     0xf8ee1020000	                           jle 0x4002050	       628	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_7	IF_28
0x4001d6f	    0x48c745100000	               mov qword [rbp + 0x10], 0	       629	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_7	IF_28
0x4001d77	      0xbd01000000	                              mov ebp, 1	       635	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x4001d7c	      0xe9d9fdffff	                           jmp 0x4001b5a	       635	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x4001d81	     0xf1f80000000	                         nop dword [rax]	       635	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x4001d88	    0xc70500000000	               mov dword [0x04001d92], 1	       722	undo.c	FUNCTION_10	IF_37
0x4001d92	      0xbd01000000	                              mov ebp, 1	       723	undo.c	FUNCTION_10	IF_37
0x4001d97	      0xe9befdffff	                           jmp 0x4001b5a	       723	undo.c	FUNCTION_10	IF_37
0x4001d9c	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	       679	undo.c	FUNCTION_10	ELSE_10
0x4001da3	        0x48895518	            mov qword [rbp + 0x18], rdx 	       678	undo.c	FUNCTION_10	ELSE_10
0x4001da7	        0x48896838	             mov qword [rax + 0x38], rbp	       679	undo.c	FUNCTION_10	ELSE_10
0x4001dab	      0xe903fdffff	                           jmp 0x4001ab3	       679	undo.c	FUNCTION_10	ELSE_10
0x4001db0	          0x4885ed	                           test rbp, rbp	       512	undo.c	FUNCTION_10	IF_7	IF_13
0x4001db3	     0xf84fc010000	                            je 0x4001fb5	       512	undo.c	FUNCTION_10	IF_7	IF_13
0x4001db9	    0x48c745080000	                  mov qword [rbp + 8], 0	       520	undo.c	FUNCTION_10	IF_7
0x4001dc1	    0x488b87201200	          mov rax, qword [rdi + 0x1220] 	       521	undo.c	FUNCTION_10	IF_7
0x4001dc8	          0x4885f6	                           test rsi, rsi	       523	undo.c	FUNCTION_10	IF_7	IF_15
0x4001dcb	        0x48897510	            mov qword [rbp + 0x10], rsi 	       522	undo.c	FUNCTION_10	IF_7
0x4001dcf	        0x48894500	                    mov qword [rbp], rax	       521	undo.c	FUNCTION_10	IF_7
0x4001dd3	     0xf8403020000	                            je 0x4001fdc	       523	undo.c	FUNCTION_10	IF_7	IF_15
0x4001dd9	        0x488b4618	            mov rax, qword [rsi + 0x18] 	       525	undo.c	FUNCTION_10	IF_7	IF_15
0x4001ddd	          0x4885c0	                           test rax, rax	       526	undo.c	FUNCTION_10	IF_7	IF_15	IF_16
0x4001de0	        0x48894518	            mov qword [rbp + 0x18], rax 	       525	undo.c	FUNCTION_10	IF_7	IF_15
0x4001de4	            0x7404	                            je 0x4001dea	       526	undo.c	FUNCTION_10	IF_7	IF_15	IF_16
0x4001de6	        0x48896810	             mov qword [rax + 0x10], rbp	       527	undo.c	FUNCTION_10	IF_7	IF_15	IF_16
0x4001dea	        0x48896e18	             mov qword [rsi + 0x18], rbp	       528	undo.c	FUNCTION_10	IF_7	IF_15
0x4001dee	    0x4839b7181200	          cmp qword [rdi + 0x1218], rsi 	       529	undo.c	FUNCTION_10	IF_7	IF_15	IF_17
0x4001df5	     0xf8418020000	                            je 0x4002013	       529	undo.c	FUNCTION_10	IF_7	IF_15	IF_17
0x4001dfb	    0x488b87201200	          mov rax, qword [rdi + 0x1220] 	       534	undo.c	FUNCTION_10	IF_7	IF_18
0x4001e02	          0x4885c0	                           test rax, rax	       534	undo.c	FUNCTION_10	IF_7	IF_18
0x4001e05	            0x7404	                            je 0x4001e0b	       534	undo.c	FUNCTION_10	IF_7	IF_18
0x4001e07	        0x48896808	                mov qword [rax + 8], rbp	       535	undo.c	FUNCTION_10	IF_7	IF_18
0x4001e0b	    0x488b87381200	          mov rax, qword [rdi + 0x1238] 	       537	undo.c	FUNCTION_10	IF_7
0x4001e12	        0x4883c001	                              add rax, 1	       537	undo.c	FUNCTION_10	IF_7
0x4001e16	    0x488987381200	          mov qword [rdi + 0x1238], rax 	       537	undo.c	FUNCTION_10	IF_7
0x4001e1d	        0x48894520	            mov qword [rbp + 0x20], rax 	       537	undo.c	FUNCTION_10	IF_7
0x4001e21	    0x488987481200	          mov qword [rdi + 0x1248], rax 	       538	undo.c	FUNCTION_10	IF_7
0x4001e28	      0xe800000000	                          call 0x4001e2d	       539	undo.c	FUNCTION_10	IF_7	CALL_20
0x4001e2d	    0x488b15000000	            mov rdx, qword [0x04001e34] 	       541	undo.c	FUNCTION_10	IF_7
0x4001e34	    0x488985280200	           mov qword [rbp + 0x228], rax 	       539	undo.c	FUNCTION_10	IF_7	CALL_20
0x4001e3b	        0x4883c001	                              add rax, 1	       541	undo.c	FUNCTION_10	IF_7
0x4001e3f	    0x48c785300200	              mov qword [rbp + 0x230], 0	       540	undo.c	FUNCTION_10	IF_7
0x4001e4a	    0x488982501200	          mov qword [rdx + 0x1250], rax 	       541	undo.c	FUNCTION_10	IF_7
0x4001e51	    0x488b05000000	            mov rax, qword [0x04001e58] 	       546	undo.c	FUNCTION_10	IF_7
0x4001e58	    0xc74528000000	               mov dword [rbp + 0x28], 0	       543	undo.c	FUNCTION_10	IF_7
0x4001e5f	    0x48c745300000	               mov qword [rbp + 0x30], 0	       544	undo.c	FUNCTION_10	IF_7
0x4001e67	    0x48c745380000	               mov qword [rbp + 0x38], 0	       545	undo.c	FUNCTION_10	IF_7
0x4001e6f	        0x488b5040	            mov rdx, qword [rax + 0x40] 	       546	undo.c	FUNCTION_10	IF_7
0x4001e73	        0x488b4038	            mov rax, qword [rax + 0x38] 	       546	undo.c	FUNCTION_10	IF_7
0x4001e77	        0x48895548	            mov qword [rbp + 0x48], rdx 	       546	undo.c	FUNCTION_10	IF_7
0x4001e7b	        0x48894540	            mov qword [rbp + 0x40], rax 	       546	undo.c	FUNCTION_10	IF_7
0x4001e7f	      0xe800000000	                          call 0x4001e84	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_21
0x4001e84	            0x85c0	                           test eax, eax	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_21
0x4001e86	     0xf84d3000000	                            je 0x4001f5f	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_21
0x4001e8c	    0x488b05000000	            mov rax, qword [0x04001e93] 	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_21
0x4001e93	          0x8b5044	            mov edx, dword [rax + 0x44] 	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_21
0x4001e96	            0x85d2	                           test edx, edx	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_21
0x4001e98	     0xf8ec1000000	                           jle 0x4001f5f	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_21
0x4001e9e	      0xe800000000	                          call 0x4001ea3	       549	undo.c	FUNCTION_10	IF_7	CALL_22
0x4001ea3	            0x4898	                                    cdqe	       549	undo.c	FUNCTION_10	IF_7	CALL_22
0x4001ea5	        0x48894550	            mov qword [rbp + 0x50], rax 	       549	undo.c	FUNCTION_10	IF_7	CALL_22
0x4001ea9	    0x4c8b3d000000	            mov r15, qword [0x04001eb0] 	       555	undo.c	FUNCTION_10	IF_7
0x4001eb0	            0x31d2	                            xor edx, edx	       555	undo.c	FUNCTION_10	IF_7
0x4001eb2	      0xb902000000	                              mov ecx, 2	       556	undo.c	FUNCTION_10	IF_7
0x4001eb7	        0x488d7d60	                   lea rdi, [rbp + 0x60]	        59	string3.h	FUNCTION_68	CALL_3
0x4001ebb	    0x418b87c80000	            mov eax, dword [r15 + 0xc8] 	       555	undo.c	FUNCTION_10	IF_7
0x4001ec2	    0x498db7580100	                  lea rsi, [r15 + 0x158]	        59	string3.h	FUNCTION_68	CALL_3
0x4001ec9	            0x85c0	                           test eax, eax	       555	undo.c	FUNCTION_10	IF_7
0x4001ecb	        0x418b4710	            mov eax, dword [r15 + 0x10] 	       556	undo.c	FUNCTION_10	IF_7
0x4001ecf	           0xf95c2	                                setne dl	       555	undo.c	FUNCTION_10	IF_7
0x4001ed2	          0x83e001	                              and eax, 1	       556	undo.c	FUNCTION_10	IF_7
0x4001ed5	           0xf45c1	                         cmovne eax, ecx	       556	undo.c	FUNCTION_10	IF_7
0x4001ed8	             0x1d0	                            add eax, edx	       555	undo.c	FUNCTION_10	IF_7
0x4001eda	      0xbaa0010000	                          mov edx, 0x1a0	        59	string3.h	FUNCTION_68	CALL_3
0x4001edf	          0x894558	            mov dword [rbp + 0x58], eax 	       555	undo.c	FUNCTION_10	IF_7
0x4001ee2	      0xe800000000	                          call 0x4001ee7	        59	string3.h	FUNCTION_68	CALL_3
0x4001ee7	    0x498b87f80200	           mov rax, qword [r15 + 0x2f8] 	       560	undo.c	FUNCTION_10	IF_7
0x4001eee	    0x4983bf181200	             cmp qword [r15 + 0x1218], 0	       563	undo.c	FUNCTION_10	IF_7	IF_20
0x4001ef6	    0x488985000200	           mov qword [rbp + 0x200], rax 	       560	undo.c	FUNCTION_10	IF_7
0x4001efd	    0x498b87000300	           mov rax, qword [r15 + 0x300] 	       560	undo.c	FUNCTION_10	IF_7
0x4001f04	    0x488985080200	           mov qword [rbp + 0x208], rax 	       560	undo.c	FUNCTION_10	IF_7
0x4001f0b	    0x498b87080300	           mov rax, qword [r15 + 0x308] 	       560	undo.c	FUNCTION_10	IF_7
0x4001f12	    0x488985100200	           mov qword [rbp + 0x210], rax 	       560	undo.c	FUNCTION_10	IF_7
0x4001f19	    0x498b87100300	           mov rax, qword [r15 + 0x310] 	       560	undo.c	FUNCTION_10	IF_7
0x4001f20	    0x488985180200	           mov qword [rbp + 0x218], rax 	       560	undo.c	FUNCTION_10	IF_7
0x4001f27	    0x498b87180300	           mov rax, qword [r15 + 0x318] 	       560	undo.c	FUNCTION_10	IF_7
0x4001f2e	    0x488985200200	           mov qword [rbp + 0x220], rax 	       560	undo.c	FUNCTION_10	IF_7
0x4001f35	    0x4989af201200	          mov qword [r15 + 0x1220], rbp 	       562	undo.c	FUNCTION_10	IF_7
0x4001f3c	     0xf84a7000000	                            je 0x4001fe9	       563	undo.c	FUNCTION_10	IF_7	IF_20
0x4001f42	    0x418387301200	             add dword [r15 + 0x1230], 1	       565	undo.c	FUNCTION_10	IF_7
0x4001f4a	      0xe917fbffff	                           jmp 0x4001a66	       565	undo.c	FUNCTION_10	IF_7
0x4001f4f	          0x4889e2	                            mov rdx, rsp	       499	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x4001f52	          0x4889c6	                            mov rsi, rax	       499	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x4001f55	      0xe8c6e7ffff	                   call sym.u_freeheader	       499	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x4001f5a	      0xe9c5faffff	                           jmp 0x4001a24	       499	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x4001f5f	    0x48c74550ffff	mov qword [rbp + 0x50], 0xffffffffffffffff 	       551	undo.c	FUNCTION_10	IF_7	ELSE_5
0x4001f67	      0xe93dffffff	                           jmp 0x4001ea9	       551	undo.c	FUNCTION_10	IF_7	ELSE_5
0x4001f6c	            0x31ed	                            xor ebp, ebp	       473	undo.c	FUNCTION_10	IF_7	ELSE_1
0x4001f6e	      0xe925faffff	                           jmp 0x4001998	       473	undo.c	FUNCTION_10	IF_7	ELSE_1
0x4001f73	          0x488b08	                    mov rcx, qword [rax]	       598	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001f76	        0x48394d18	            cmp qword [rbp + 0x18], rcx 	       598	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001f7a	     0xf85e1faffff	                           jne 0x4001a61	       598	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001f80	        0x488b5528	            mov rdx, qword [rbp + 0x28] 	       598	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001f84	      0xe98efdffff	                           jmp 0x4001d17	       598	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001f89	      0xbd01000000	                              mov ebp, 1	       570	undo.c	FUNCTION_10	ELSE_6	IF_21
0x4001f8e	      0xe9c7fbffff	                           jmp 0x4001b5a	       570	undo.c	FUNCTION_10	ELSE_6	IF_21
0x4001f93	          0x4c89ee	                            mov rsi, r13	       700	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_33
0x4001f96	          0x4889ef	                            mov rdi, rbp	       700	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_33
0x4001f99	      0xe8d2e0ffff	                    call sym.u_freeentry	       700	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_33
0x4001f9e	      0xe9e6fbffff	                           jmp 0x4001b89	       701	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36
0x4001fa3	          0x4889ef	                            mov rdi, rbp	       695	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35	CALL_31
0x4001fa6	          0x4c89ee	                            mov rsi, r13	       695	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35	CALL_31
0x4001fa9	            0x31ed	                            xor ebp, ebp	       696	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35
0x4001fab	      0xe8c0e0ffff	                    call sym.u_freeentry	       695	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35	CALL_31
0x4001fb0	      0xe9a5fbffff	                           jmp 0x4001b5a	       696	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35
0x4001fb5	          0x4885f6	                           test rsi, rsi	       514	undo.c	FUNCTION_10	IF_7	IF_13	IF_14
0x4001fb8	            0x740e	                            je 0x4001fc8	       514	undo.c	FUNCTION_10	IF_7	IF_13	IF_14
0x4001fba	            0x31d2	                            xor edx, edx	       515	undo.c	FUNCTION_10	IF_7	IF_13	CALL_19
0x4001fbc	      0xe8afe6ffff	                   call sym.u_freebranch	       515	undo.c	FUNCTION_10	IF_7	IF_13	CALL_19
0x4001fc1	    0x488b3d000000	            mov rdi, qword [0x04001fc8] 	       515	undo.c	FUNCTION_10	IF_7	IF_13	CALL_19
0x4001fc8	    0xc78734120000	            mov dword [rdi + 0x1234], 0 	       516	undo.c	FUNCTION_10	IF_7	IF_13
0x4001fd2	      0xbd01000000	                              mov ebp, 1	       517	undo.c	FUNCTION_10	IF_7	IF_13
0x4001fd7	      0xe97efbffff	                           jmp 0x4001b5a	       517	undo.c	FUNCTION_10	IF_7	IF_13
0x4001fdc	    0x48c745180000	               mov qword [rbp + 0x18], 0	       533	undo.c	FUNCTION_10	IF_7	ELSE_4
0x4001fe4	      0xe912feffff	                           jmp 0x4001dfb	       533	undo.c	FUNCTION_10	IF_7	ELSE_4
0x4001fe9	    0x4989af181200	          mov qword [r15 + 0x1218], rbp 	       564	undo.c	FUNCTION_10	IF_7	IF_20
0x4001ff0	      0xe94dffffff	                           jmp 0x4001f42	       564	undo.c	FUNCTION_10	IF_7	IF_20
0x4001ff5	            0x31ff	                            xor edi, edi	       417	undo.c	FUNCTION_10	IF_1	IF_3	IF_5	CALL_7
0x4001ff7	      0xba05000000	                              mov edx, 5	       417	undo.c	FUNCTION_10	IF_1	IF_3	IF_5	CALL_7
0x4001ffc	      0xbe00000000	                              mov esi, 0	       417	undo.c	FUNCTION_10	IF_1	IF_3	IF_5	CALL_7
0x4002001	      0xe800000000	                          call 0x4002006	       417	undo.c	FUNCTION_10	IF_1	IF_3	IF_5	CALL_7
0x4002006	          0x4889c7	                            mov rdi, rax	       417	undo.c	FUNCTION_10	IF_1	IF_3	IF_5	CALL_7
0x4002009	      0xe800000000	                          call 0x400200e	       417	undo.c	FUNCTION_10	IF_1	IF_3	IF_5	CALL_7
0x400200e	      0xe947fbffff	                           jmp 0x4001b5a	       418	undo.c	FUNCTION_10	IF_1	IF_3	IF_5
0x4002013	    0x4889af181200	          mov qword [rdi + 0x1218], rbp 	       530	undo.c	FUNCTION_10	IF_7	IF_15	IF_17
0x400201a	      0xe9dcfdffff	                           jmp 0x4001dfb	       530	undo.c	FUNCTION_10	IF_7	IF_15	IF_17
0x400201f	            0x31ff	                            xor edi, edi	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
0x4002021	      0xba05000000	                              mov edx, 5	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
0x4002026	      0xbe00000000	                              mov esi, 0	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
0x400202b	      0xe800000000	                          call 0x4002030	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
0x4002030	          0x4889c7	                            mov rdi, rax	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
0x4002033	      0xe800000000	                          call 0x4002038	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
0x4002038	      0xe924faffff	                           jmp 0x4001a61	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
0x400203d	        0x4c897510	            mov qword [rbp + 0x10], r14 	       627	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_27
0x4002041	      0xbd01000000	                              mov ebp, 1	       635	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x4002046	      0xe90ffbffff	                           jmp 0x4001b5a	       635	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x400204b	      0xe800000000	                          call 0x4002050	       727	undo.c	FUNCTION_10
0x4002050	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	       633	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_8
0x4002057	        0x48895518	            mov qword [rbp + 0x18], rdx 	       632	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_8
0x400205b	        0x48896838	             mov qword [rax + 0x38], rbp	       633	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_8
0x400205f	      0xbd01000000	                              mov ebp, 1	       635	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x4002064	      0xe9f1faffff	                           jmp 0x4001b5a	       635	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
u_undoline	functions,0:CALL,8:DO,0:SWITCH,0:WHILE,0:FOR,0:IF,5:ELSE,0	60
0x4003fb0	    0x8b0500000000	            mov eax, dword [0x04003fb6] 	      3465	undo.c	FUNCTION_60	IF_1
0x4003fb6	            0x85c0	                           test eax, eax	      3465	undo.c	FUNCTION_60	IF_1
0x4003fb8	            0x753d	                           jne 0x4003ff7	      3465	undo.c	FUNCTION_60	IF_1
0x4003fba	    0x488b05000000	            mov rax, qword [0x04003fc1] 	      3468	undo.c	FUNCTION_60	IF_2
0x4003fc1	    0x4883b8601200	             cmp qword [rax + 0x1260], 0	      3468	undo.c	FUNCTION_60	IF_2
0x4003fc9	            0x740c	                            je 0x4003fd7	      3468	undo.c	FUNCTION_60	IF_2
0x4003fcb	    0x488bb8681200	          mov rdi, qword [rax + 0x1268] 	      3469	undo.c	FUNCTION_60	IF_2
0x4003fd2	          0x483b38	                    cmp rdi, qword [rax]	      3469	undo.c	FUNCTION_60	IF_2
0x4003fd5	            0x7e09	                           jle 0x4003fe0	      3469	undo.c	FUNCTION_60	IF_2
0x4003fd7	      0xe900000000	                           jmp 0x4003fdc	      3471	undo.c	FUNCTION_60	IF_2	CALL_1
0x4003fdc	         0xf1f4000	                         nop dword [rax]	      3471	undo.c	FUNCTION_60	IF_2	CALL_1
0x4003fe0	        0x488d7701	                      lea rsi, [rdi + 1]	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x4003fe4	              0x53	                                push rbx	      3461	undo.c	FUNCTION_60
0x4003fe5	        0x4883ef01	                              sub rdi, 1	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x4003fe9	            0x31c9	                            xor ecx, ecx	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x4003feb	            0x31d2	                            xor edx, edx	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x4003fed	      0xe800000000	                          call 0x4003ff2	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x4003ff2	            0x85c0	                           test eax, eax	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x4003ff4	            0x750a	                           jne 0x4004000	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x4003ff6	              0x5b	                                 pop rbx	      3496	undo.c	FUNCTION_60
0x4003ff7	            0xf3c3	                                     ret	      3496	undo.c	FUNCTION_60
0x4003ff9	     0xf1f80000000	                         nop dword [rax]	      3496	undo.c	FUNCTION_60
0x4004000	    0x488b05000000	            mov rax, qword [0x04004007] 	      3479	undo.c	FUNCTION_60	CALL_3
0x4004007	    0x488bb8681200	          mov rdi, qword [rax + 0x1268] 	      3516	undo.c	FUNCTION_62	CALL_2
0x400400e	      0xe800000000	                          call 0x4004013	      3516	undo.c	FUNCTION_62	CALL_2
0x4004013	          0x4889c7	                            mov rdi, rax	      3516	undo.c	FUNCTION_62	CALL_2
0x4004016	      0xe800000000	                          call 0x400401b	      3516	undo.c	FUNCTION_62	CALL_2
0x400401b	          0x4885c0	                           test rax, rax	      3480	undo.c	FUNCTION_60	IF_4
0x400401e	          0x4889c3	                            mov rbx, rax	      3516	undo.c	FUNCTION_62	CALL_2
0x4004021	     0xf848c000000	                            je 0x40040b3	      3480	undo.c	FUNCTION_60	IF_4
0x4004027	    0x488b05000000	            mov rax, qword [0x0400402e] 	      3485	undo.c	FUNCTION_60	CALL_5
0x400402e	      0xba01000000	                              mov edx, 1	      3485	undo.c	FUNCTION_60	CALL_5
0x4004033	    0x488bb0601200	          mov rsi, qword [rax + 0x1260] 	      3485	undo.c	FUNCTION_60	CALL_5
0x400403a	    0x488bb8681200	          mov rdi, qword [rax + 0x1268] 	      3485	undo.c	FUNCTION_60	CALL_5
0x4004041	      0xe800000000	                          call 0x4004046	      3485	undo.c	FUNCTION_60	CALL_5
0x4004046	    0x488b05000000	            mov rax, qword [0x0400404d] 	      3486	undo.c	FUNCTION_60	CALL_6
0x400404d	            0x31f6	                            xor esi, esi	      3486	undo.c	FUNCTION_60	CALL_6
0x400404f	    0x488bb8681200	          mov rdi, qword [rax + 0x1268] 	      3486	undo.c	FUNCTION_60	CALL_6
0x4004056	      0xe800000000	                          call 0x400405b	      3486	undo.c	FUNCTION_60	CALL_6
0x400405b	    0x488b05000000	            mov rax, qword [0x04004062] 	      3487	undo.c	FUNCTION_60	CALL_7
0x4004062	    0x488bb8601200	          mov rdi, qword [rax + 0x1260] 	      3487	undo.c	FUNCTION_60	CALL_7
0x4004069	      0xe800000000	                          call 0x400406e	      3487	undo.c	FUNCTION_60	CALL_7
0x400406e	    0x488b15000000	            mov rdx, qword [0x04004075] 	      3488	undo.c	FUNCTION_60
0x4004075	    0x488b05000000	            mov rax, qword [0x0400407c] 	      3491	undo.c	FUNCTION_60	IF_5
0x400407c	    0x488b8a681200	          mov rcx, qword [rdx + 0x1268] 	      3491	undo.c	FUNCTION_60	IF_5
0x4004083	        0x48394838	            cmp qword [rax + 0x38], rcx 	      3491	undo.c	FUNCTION_60	IF_5
0x4004087	    0x48899a601200	          mov qword [rdx + 0x1260], rbx 	      3488	undo.c	FUNCTION_60
0x400408e	    0x8bb270120000	          mov esi, dword [rdx + 0x1270] 	      3490	undo.c	FUNCTION_60
0x4004094	            0x7412	                            je 0x40040a8	      3491	undo.c	FUNCTION_60	IF_5
0x4004096	          0x897040	             mov dword [rax + 0x40], esi	      3493	undo.c	FUNCTION_60
0x4004099	        0x48894838	             mov qword [rax + 0x38], rcx	      3494	undo.c	FUNCTION_60
0x400409d	              0x5b	                                 pop rbx	      3496	undo.c	FUNCTION_60
0x400409e	      0xe900000000	                           jmp 0x40040a3	      3495	undo.c	FUNCTION_60	CALL_8
0x40040a3	       0xf1f440000	                   nop dword [rax + rax]	      3495	undo.c	FUNCTION_60	CALL_8
0x40040a8	          0x8b7840	            mov edi, dword [rax + 0x40] 	      3492	undo.c	FUNCTION_60	IF_5
0x40040ab	    0x89ba70120000	          mov dword [rdx + 0x1270], edi 	      3492	undo.c	FUNCTION_60	IF_5
0x40040b1	            0xebe3	                           jmp 0x4004096	      3492	undo.c	FUNCTION_60	IF_5
0x40040b3	              0x5b	                                 pop rbx	      3496	undo.c	FUNCTION_60
0x40040b4	            0x31ff	                            xor edi, edi	      3482	undo.c	FUNCTION_60	IF_4	CALL_4
0x40040b6	      0xe900000000	                           jmp 0x40040bb	      3482	undo.c	FUNCTION_60	IF_4	CALL_4
u_eval_tree	functions,0:CALL,10:DO,0:SWITCH,0:WHILE,1:FOR,0:IF,6:ELSE,0	78
0x4004e90	          0x4885ff	                           test rdi, rdi	      3563	undo.c	FUNCTION_66	WHILE_1
0x4004e93	     0xf8431010000	                            je 0x4004fca	      3563	undo.c	FUNCTION_66	WHILE_1
0x4004e99	            0x4155	                                push r13	      3559	undo.c	FUNCTION_66
0x4004e9b	            0x4154	                                push r12	      3559	undo.c	FUNCTION_66
0x4004e9d	          0x4989f5	                            mov r13, rsi	      3559	undo.c	FUNCTION_66
0x4004ea0	              0x55	                                push rbp	      3559	undo.c	FUNCTION_66
0x4004ea1	              0x53	                                push rbx	      3559	undo.c	FUNCTION_66
0x4004ea2	          0x4889fb	                            mov rbx, rdi	      3559	undo.c	FUNCTION_66
0x4004ea5	        0x4883ec08	                              sub rsp, 8	      3559	undo.c	FUNCTION_66
0x4004ea9	            0xeb75	                           jmp 0x4004f20	      3559	undo.c	FUNCTION_66
0x4004eab	       0xf1f440000	                   nop dword [rax + rax]	      3559	undo.c	FUNCTION_66
0x4004eb0	    0x483998281200	          cmp qword [rax + 0x1228], rbx 	      3572	undo.c	FUNCTION_66	WHILE_1	IF_3
0x4004eb7	     0xf84e3000000	                            je 0x4004fa0	      3572	undo.c	FUNCTION_66	WHILE_1	IF_3
0x4004ebd	    0x488b93300200	           mov rdx, qword [rbx + 0x230] 	      3574	undo.c	FUNCTION_66	WHILE_1	IF_4
0x4004ec4	          0x4885d2	                           test rdx, rdx	      3574	undo.c	FUNCTION_66	WHILE_1	IF_4
0x4004ec7	            0x7e0f	                           jle 0x4004ed8	      3574	undo.c	FUNCTION_66	WHILE_1	IF_4
0x4004ec9	            0x31c9	                            xor ecx, ecx	      3575	undo.c	FUNCTION_66	WHILE_1	CALL_6
0x4004ecb	      0xbe00000000	                              mov esi, 0	      3575	undo.c	FUNCTION_66	WHILE_1	CALL_6
0x4004ed0	          0x4889ef	                            mov rdi, rbp	      3575	undo.c	FUNCTION_66	WHILE_1	CALL_6
0x4004ed3	      0xe800000000	                          call 0x4004ed8	      3575	undo.c	FUNCTION_66	WHILE_1	CALL_6
0x4004ed8	      0x48837b1000	               cmp qword [rbx + 0x10], 0	      3577	undo.c	FUNCTION_66	WHILE_1	IF_5
0x4004edd	            0x7429	                            je 0x4004f08	      3577	undo.c	FUNCTION_66	WHILE_1	IF_5
0x4004edf	      0xe800000000	                          call 0x4004ee4	      3579	undo.c	FUNCTION_66	WHILE_1	IF_5	CALL_7
0x4004ee4	          0x4885c0	                           test rax, rax	      3581	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6
0x4004ee7	          0x4989c4	                            mov r12, rax	      3579	undo.c	FUNCTION_66	WHILE_1	IF_5	CALL_7
0x4004eea	            0x741c	                            je 0x4004f08	      3581	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6
0x4004eec	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3584	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_8
0x4004ef0	          0x4889c6	                            mov rsi, rax	      3584	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_8
0x4004ef3	      0xe800000000	                          call 0x4004ef8	      3584	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_8
0x4004ef8	          0x4c89e2	                            mov rdx, r12	      3585	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_9
0x4004efb	      0xbe00000000	                              mov esi, 0	      3585	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_9
0x4004f00	          0x4889ef	                            mov rdi, rbp	      3585	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_9
0x4004f03	      0xe800000000	                          call 0x4004f08	      3585	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_9
0x4004f08	          0x4889ee	                            mov rsi, rbp	      3589	undo.c	FUNCTION_66	WHILE_1	CALL_10
0x4004f0b	          0x4c89ef	                            mov rdi, r13	      3589	undo.c	FUNCTION_66	WHILE_1	CALL_10
0x4004f0e	      0xe800000000	                          call 0x4004f13	      3589	undo.c	FUNCTION_66	WHILE_1	CALL_10
0x4004f13	        0x488b5b08	                mov rbx, qword [rbx + 8]	      3590	undo.c	FUNCTION_66	WHILE_1
0x4004f17	          0x4885db	                           test rbx, rbx	      3563	undo.c	FUNCTION_66	WHILE_1
0x4004f1a	     0xf84a0000000	                            je 0x4004fc0	      3563	undo.c	FUNCTION_66	WHILE_1
0x4004f20	      0xe800000000	                          call 0x4004f25	      3565	undo.c	FUNCTION_66	WHILE_1	CALL_1
0x4004f25	          0x4885c0	                           test rax, rax	      3566	undo.c	FUNCTION_66	WHILE_1	IF_1
0x4004f28	          0x4889c5	                            mov rbp, rax	      3565	undo.c	FUNCTION_66	WHILE_1	CALL_1
0x4004f2b	     0xf848f000000	                            je 0x4004fc0	      3566	undo.c	FUNCTION_66	WHILE_1	IF_1
0x4004f31	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      3568	undo.c	FUNCTION_66	WHILE_1	CALL_2
0x4004f35	            0x31c9	                            xor ecx, ecx	      3568	undo.c	FUNCTION_66	WHILE_1	CALL_2
0x4004f37	      0xbe00000000	                              mov esi, 0	      3568	undo.c	FUNCTION_66	WHILE_1	CALL_2
0x4004f3c	          0x4889c7	                            mov rdi, rax	      3568	undo.c	FUNCTION_66	WHILE_1	CALL_2
0x4004f3f	      0xe800000000	                          call 0x4004f44	      3568	undo.c	FUNCTION_66	WHILE_1	CALL_2
0x4004f44	    0x488b93280200	           mov rdx, qword [rbx + 0x228] 	      3569	undo.c	FUNCTION_66	WHILE_1	CALL_3
0x4004f4b	            0x31c9	                            xor ecx, ecx	      3569	undo.c	FUNCTION_66	WHILE_1	CALL_3
0x4004f4d	      0xbe00000000	                              mov esi, 0	      3569	undo.c	FUNCTION_66	WHILE_1	CALL_3
0x4004f52	          0x4889ef	                            mov rdi, rbp	      3569	undo.c	FUNCTION_66	WHILE_1	CALL_3
0x4004f55	      0xe800000000	                          call 0x4004f5a	      3569	undo.c	FUNCTION_66	WHILE_1	CALL_3
0x4004f5a	    0x488b05000000	            mov rax, qword [0x04004f61] 	      3570	undo.c	FUNCTION_66	WHILE_1	IF_2
0x4004f61	    0x483998201200	          cmp qword [rax + 0x1220], rbx 	      3570	undo.c	FUNCTION_66	WHILE_1	IF_2
0x4004f68	     0xf8542ffffff	                           jne 0x4004eb0	      3570	undo.c	FUNCTION_66	WHILE_1	IF_2
0x4004f6e	            0x31c9	                            xor ecx, ecx	      3571	undo.c	FUNCTION_66	WHILE_1	CALL_4
0x4004f70	      0xba01000000	                              mov edx, 1	      3571	undo.c	FUNCTION_66	WHILE_1	CALL_4
0x4004f75	      0xbe00000000	                              mov esi, 0	      3571	undo.c	FUNCTION_66	WHILE_1	CALL_4
0x4004f7a	          0x4889ef	                            mov rdi, rbp	      3571	undo.c	FUNCTION_66	WHILE_1	CALL_4
0x4004f7d	      0xe800000000	                          call 0x4004f82	      3571	undo.c	FUNCTION_66	WHILE_1	CALL_4
0x4004f82	    0x488b05000000	            mov rax, qword [0x04004f89] 	      3571	undo.c	FUNCTION_66	WHILE_1	CALL_4
0x4004f89	    0x483998281200	          cmp qword [rax + 0x1228], rbx 	      3572	undo.c	FUNCTION_66	WHILE_1	IF_3
0x4004f90	     0xf8527ffffff	                           jne 0x4004ebd	      3572	undo.c	FUNCTION_66	WHILE_1	IF_3
0x4004f96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3572	undo.c	FUNCTION_66	WHILE_1	IF_3
0x4004fa0	            0x31c9	                            xor ecx, ecx	      3573	undo.c	FUNCTION_66	WHILE_1	CALL_5
0x4004fa2	      0xba01000000	                              mov edx, 1	      3573	undo.c	FUNCTION_66	WHILE_1	CALL_5
0x4004fa7	      0xbe00000000	                              mov esi, 0	      3573	undo.c	FUNCTION_66	WHILE_1	CALL_5
0x4004fac	          0x4889ef	                            mov rdi, rbp	      3573	undo.c	FUNCTION_66	WHILE_1	CALL_5
0x4004faf	      0xe800000000	                          call 0x4004fb4	      3573	undo.c	FUNCTION_66	WHILE_1	CALL_5
0x4004fb4	      0xe904ffffff	                           jmp 0x4004ebd	      3573	undo.c	FUNCTION_66	WHILE_1	CALL_5
0x4004fb9	     0xf1f80000000	                         nop dword [rax]	      3573	undo.c	FUNCTION_66	WHILE_1	CALL_5
0x4004fc0	        0x4883c408	                              add rsp, 8	      3592	undo.c	FUNCTION_66
0x4004fc4	              0x5b	                                 pop rbx	      3592	undo.c	FUNCTION_66
0x4004fc5	              0x5d	                                 pop rbp	      3592	undo.c	FUNCTION_66
0x4004fc6	            0x415c	                                 pop r12	      3592	undo.c	FUNCTION_66
0x4004fc8	            0x415d	                                 pop r13	      3592	undo.c	FUNCTION_66
0x4004fca	            0xf3c3	                                     ret	      3592	undo.c	FUNCTION_66
u_freeheader	functions,0:CALL,2:DO,0:SWITCH,0:WHILE,0:FOR,1:IF,4:ELSE,2	45
0x4000720	            0x4154	                                push r12	      3297	undo.c	FUNCTION_53
0x4000722	              0x55	                                push rbp	      3297	undo.c	FUNCTION_53
0x4000723	          0x4989d4	                            mov r12, rdx	      3297	undo.c	FUNCTION_53
0x4000726	              0x53	                                push rbx	      3297	undo.c	FUNCTION_53
0x4000727	          0x4889f3	                            mov rbx, rsi	      3297	undo.c	FUNCTION_53
0x400072a	        0x488b7610	            mov rsi, qword [rsi + 0x10] 	      3302	undo.c	FUNCTION_53	IF_1
0x400072e	          0x4889fd	                            mov rbp, rdi	      3297	undo.c	FUNCTION_53
0x4000731	          0x4885f6	                           test rsi, rsi	      3302	undo.c	FUNCTION_53	IF_1
0x4000734	            0x7405	                            je 0x400073b	      3302	undo.c	FUNCTION_53	IF_1
0x4000736	      0xe835ffffff	                   call sym.u_freebranch	      3303	undo.c	FUNCTION_53	CALL_1
0x400073b	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3305	undo.c	FUNCTION_53	IF_2
0x400073f	          0x4885c0	                           test rax, rax	      3305	undo.c	FUNCTION_53	IF_2
0x4000742	            0x7408	                            je 0x400074c	      3305	undo.c	FUNCTION_53	IF_2
0x4000744	    0x48c740100000	               mov qword [rax + 0x10], 0	      3306	undo.c	FUNCTION_53	IF_2
0x400074c	          0x488b13	                    mov rdx, qword [rbx]	      3309	undo.c	FUNCTION_53	IF_3
0x400074f	        0x488b4308	                mov rax, qword [rbx + 8]	      3310	undo.c	FUNCTION_53	IF_3
0x4000753	          0x4885d2	                           test rdx, rdx	      3309	undo.c	FUNCTION_53	IF_3
0x4000756	            0x7440	                            je 0x4000798	      3309	undo.c	FUNCTION_53	IF_3
0x4000758	        0x48894208	                mov qword [rdx + 8], rax	      3312	undo.c	FUNCTION_53	ELSE_1
0x400075c	        0x488b4308	                mov rax, qword [rbx + 8]	      3314	undo.c	FUNCTION_53	IF_4
0x4000760	          0x4885c0	                           test rax, rax	      3314	undo.c	FUNCTION_53	IF_4
0x4000763	            0x750e	                           jne 0x4000773	      3314	undo.c	FUNCTION_53	IF_4
0x4000765	            0xeb49	                           jmp 0x40007b0	      3314	undo.c	FUNCTION_53	IF_4
0x4000767	    0x660f1f840000	                    nop word [rax + rax]	      3314	undo.c	FUNCTION_53	IF_4
0x4000770	          0x488b13	                    mov rdx, qword [rbx]	      3314	undo.c	FUNCTION_53	IF_4
0x4000773	          0x488910	                    mov qword [rax], rdx	      3319	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x4000776	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3318	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x400077a	          0x4885c0	                           test rax, rax	      3317	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x400077d	            0x75f1	                           jne 0x4000770	      3317	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x400077f	          0x4c89e2	                            mov rdx, r12	      3321	undo.c	FUNCTION_53	CALL_2
0x4000782	          0x4889de	                            mov rsi, rbx	      3321	undo.c	FUNCTION_53	CALL_2
0x4000785	          0x4889ef	                            mov rdi, rbp	      3321	undo.c	FUNCTION_53	CALL_2
0x4000788	              0x5b	                                 pop rbx	      3322	undo.c	FUNCTION_53
0x4000789	              0x5d	                                 pop rbp	      3322	undo.c	FUNCTION_53
0x400078a	            0x415c	                                 pop r12	      3322	undo.c	FUNCTION_53
0x400078c	      0xe93ff9ffff	                   jmp sym.u_freeentries	      3321	undo.c	FUNCTION_53	CALL_2
0x4000791	     0xf1f80000000	                         nop dword [rax]	      3321	undo.c	FUNCTION_53	CALL_2
0x4000798	    0x488985181200	          mov qword [rbp + 0x1218], rax 	      3310	undo.c	FUNCTION_53	IF_3
0x400079f	        0x488b4308	                mov rax, qword [rbx + 8]	      3314	undo.c	FUNCTION_53	IF_4
0x40007a3	          0x488b13	                    mov rdx, qword [rbx]	      3314	undo.c	FUNCTION_53	IF_4
0x40007a6	          0x4885c0	                           test rax, rax	      3314	undo.c	FUNCTION_53	IF_4
0x40007a9	            0x75c8	                           jne 0x4000773	      3314	undo.c	FUNCTION_53	IF_4
0x40007ab	       0xf1f440000	                   nop dword [rax + rax]	      3314	undo.c	FUNCTION_53	IF_4
0x40007b0	    0x488995201200	          mov qword [rbp + 0x1220], rdx 	      3315	undo.c	FUNCTION_53	IF_4
0x40007b7	            0xebc6	                           jmp 0x400077f	      3315	undo.c	FUNCTION_53	IF_4
corruption_error	functions,0:CALL,2:DO,0:SWITCH,0:WHILE,0:FOR,0:IF,0:ELSE,0	16
0x4000570	              0x55	                                push rbp	       859	undo.c	FUNCTION_13
0x4000571	              0x53	                                push rbx	       859	undo.c	FUNCTION_13
0x4000572	          0x4889f5	                            mov rbp, rsi	       859	undo.c	FUNCTION_13
0x4000575	          0x4889fb	                            mov rbx, rdi	       859	undo.c	FUNCTION_13
0x4000578	      0xba05000000	                              mov edx, 5	       860	undo.c	FUNCTION_13	CALL_2
0x400057d	      0xbe00000000	                              mov esi, 0	       860	undo.c	FUNCTION_13	CALL_2
0x4000582	        0x4883ec08	                              sub rsp, 8	       859	undo.c	FUNCTION_13
0x4000586	            0x31ff	                            xor edi, edi	       860	undo.c	FUNCTION_13	CALL_2
0x4000588	      0xe800000000	                          call 0x400058d	       860	undo.c	FUNCTION_13	CALL_2
0x400058d	        0x4883c408	                              add rsp, 8	       861	undo.c	FUNCTION_13
0x4000591	          0x4889ea	                            mov rdx, rbp	       860	undo.c	FUNCTION_13	CALL_2
0x4000594	          0x4889de	                            mov rsi, rbx	       860	undo.c	FUNCTION_13	CALL_2
0x4000597	              0x5b	                                 pop rbx	       861	undo.c	FUNCTION_13
0x4000598	              0x5d	                                 pop rbp	       861	undo.c	FUNCTION_13
0x4000599	          0x4889c7	                            mov rdi, rax	       860	undo.c	FUNCTION_13	CALL_2
0x400059c	      0xe900000000	                           jmp 0x40005a1	       860	undo.c	FUNCTION_13	CALL_2
u_undo	functions,0:CALL,3:DO,0:SWITCH,0:WHILE,0:FOR,0:IF,2:ELSE,1	33
0x40030c0	    0x488b05000000	            mov rax, qword [0x040030c7] 	      2155	undo.c	FUNCTION_37	IF_1
0x40030c7	              0x53	                                push rbx	      2149	undo.c	FUNCTION_37
0x40030c8	            0x89fb	                            mov ebx, edi	      2149	undo.c	FUNCTION_37
0x40030ca	    0x8b8834120000	          mov ecx, dword [rax + 0x1234] 	      2155	undo.c	FUNCTION_37	IF_1
0x40030d0	            0x85c9	                           test ecx, ecx	      2155	undo.c	FUNCTION_37	IF_1
0x40030d2	            0x744c	                            je 0x4003120	      2155	undo.c	FUNCTION_37	IF_1
0x40030d4	    0x488b3d000000	            mov rdi, qword [0x040030db] 	      2161	undo.c	FUNCTION_37	IF_2	CALL_2
0x40030db	      0xbe75000000	                           mov esi, 0x75	      2161	undo.c	FUNCTION_37	IF_2	CALL_2
0x40030e0	      0xe800000000	                          call 0x40030e5	      2161	undo.c	FUNCTION_37	IF_2	CALL_2
0x40030e5	          0x4885c0	                           test rax, rax	      2161	undo.c	FUNCTION_37	IF_2	CALL_2
0x40030e8	            0x744e	                            je 0x4003138	      2161	undo.c	FUNCTION_37	IF_2	CALL_2
0x40030ea	    0x8b1500000000	            mov edx, dword [0x040030f0] 	      2164	undo.c	FUNCTION_37	ELSE_1
0x40030f0	            0x31c0	                            xor eax, eax	      2164	undo.c	FUNCTION_37	ELSE_1
0x40030f2	            0x85d2	                           test edx, edx	      2164	undo.c	FUNCTION_37	ELSE_1
0x40030f4	           0xf94c0	                                 sete al	      2164	undo.c	FUNCTION_37	ELSE_1
0x40030f7	    0x890500000000	            mov dword [0x040030fd], eax 	      2164	undo.c	FUNCTION_37	ELSE_1
0x40030fd	      0xe800000000	                          call 0x4003102	      2188	undo.c	FUNCTION_39	IF_1	CALL_1
0x4003102	            0x85c0	                           test eax, eax	      2188	undo.c	FUNCTION_39	IF_1	CALL_1
0x4003104	            0x750a	                           jne 0x4003110	      2188	undo.c	FUNCTION_39	IF_1	CALL_1
0x4003106	              0x5b	                                 pop rbx	      2166	undo.c	FUNCTION_37
0x4003107	              0xc3	                                     ret	      2166	undo.c	FUNCTION_37
0x4003108	     0xf1f84000000	                   nop dword [rax + rax]	      2166	undo.c	FUNCTION_37
0x4003110	            0x89df	                            mov edi, ebx	      2166	undo.c	FUNCTION_37
0x4003112	              0x5b	                                 pop rbx	      2166	undo.c	FUNCTION_37
0x4003113	      0xe9d8e4ffff	                   jmp sym.u_doit.part.9	      2166	undo.c	FUNCTION_37
0x4003118	     0xf1f84000000	                   nop dword [rax + rax]	      2166	undo.c	FUNCTION_37
0x4003120	      0xbf01000000	                              mov edi, 1	      2157	undo.c	FUNCTION_37	IF_1	CALL_1
0x4003125	      0xbb01000000	                              mov ebx, 1	      2158	undo.c	FUNCTION_37	IF_1
0x400312a	      0xe800000000	                          call 0x400312f	      2157	undo.c	FUNCTION_37	IF_1	CALL_1
0x400312f	            0xeba3	                           jmp 0x40030d4	      2157	undo.c	FUNCTION_37	IF_1	CALL_1
0x4003131	     0xf1f80000000	                         nop dword [rax]	      2157	undo.c	FUNCTION_37	IF_1	CALL_1
0x4003138	    0xc70500000000	               mov dword [0x04003142], 1	      2162	undo.c	FUNCTION_37	IF_2
0x4003142	            0xebb9	                           jmp 0x40030fd	      2162	undo.c	FUNCTION_37	IF_2
u_freeentries	functions,0:CALL,2:DO,0:SWITCH,0:WHILE,0:FOR,1:IF,3:ELSE,0	39
0x40000d0	            0x4154	                                push r12	      3367	undo.c	FUNCTION_55
0x40000d2	              0x55	                                push rbp	      3367	undo.c	FUNCTION_55
0x40000d3	          0x4989fc	                            mov r12, rdi	      3367	undo.c	FUNCTION_55
0x40000d6	              0x53	                                push rbx	      3367	undo.c	FUNCTION_55
0x40000d7	    0x4839b7281200	          cmp qword [rdi + 0x1228], rsi 	      3371	undo.c	FUNCTION_55	IF_1
0x40000de	          0x4889f5	                            mov rbp, rsi	      3367	undo.c	FUNCTION_55
0x40000e1	            0x744d	                            je 0x4000130	      3371	undo.c	FUNCTION_55	IF_1
0x40000e3	    0x493bac242012	          cmp rbp, qword [r12 + 0x1220] 	      3373	undo.c	FUNCTION_55	IF_2
0x40000eb	            0x745b	                            je 0x4000148	      3373	undo.c	FUNCTION_55	IF_2
0x40000ed	          0x4885d2	                           test rdx, rdx	      3375	undo.c	FUNCTION_55	IF_3
0x40000f0	            0x7405	                            je 0x40000f7	      3375	undo.c	FUNCTION_55	IF_3
0x40000f2	          0x483b2a	                    cmp rbp, qword [rdx]	      3375	undo.c	FUNCTION_55	IF_3
0x40000f5	            0x7469	                            je 0x4000160	      3375	undo.c	FUNCTION_55	IF_3
0x40000f7	        0x488b7d30	            mov rdi, qword [rbp + 0x30] 	      3378	undo.c	FUNCTION_55	FOR_1
0x40000fb	          0x4885ff	                           test rdi, rdi	      3378	undo.c	FUNCTION_55	FOR_1
0x40000fe	            0x7414	                            je 0x4000114	      3378	undo.c	FUNCTION_55	FOR_1
0x4000100	          0x488b1f	                    mov rbx, qword [rdi]	      3380	undo.c	FUNCTION_55	FOR_1
0x4000103	        0x488b7728	            mov rsi, qword [rdi + 0x28] 	      3381	undo.c	FUNCTION_55	FOR_1	CALL_1
0x4000107	      0xe864ffffff	                    call sym.u_freeentry	      3381	undo.c	FUNCTION_55	FOR_1	CALL_1
0x400010c	          0x4885db	                           test rbx, rbx	      3378	undo.c	FUNCTION_55	FOR_1
0x400010f	          0x4889df	                            mov rdi, rbx	      3378	undo.c	FUNCTION_55	FOR_1
0x4000112	            0x75ec	                           jne 0x4000100	      3378	undo.c	FUNCTION_55	FOR_1
0x4000114	          0x4889ef	                            mov rdi, rbp	      3387	undo.c	FUNCTION_55	CALL_2
0x4000117	      0xe800000000	                          call 0x400011c	      3387	undo.c	FUNCTION_55	CALL_2
0x400011c	              0x5b	                                 pop rbx	      3389	undo.c	FUNCTION_55
0x400011d	    0x4183ac243012	             sub dword [r12 + 0x1230], 1	      3388	undo.c	FUNCTION_55
0x4000126	              0x5d	                                 pop rbp	      3389	undo.c	FUNCTION_55
0x4000127	            0x415c	                                 pop r12	      3389	undo.c	FUNCTION_55
0x4000129	              0xc3	                                     ret	      3389	undo.c	FUNCTION_55
0x400012a	    0x660f1f440000	                    nop word [rax + rax]	      3389	undo.c	FUNCTION_55
0x4000130	    0x493bac242012	          cmp rbp, qword [r12 + 0x1220] 	      3373	undo.c	FUNCTION_55	IF_2
0x4000138	    0x48c787281200	            mov qword [rdi + 0x1228], 0 	      3372	undo.c	FUNCTION_55	IF_1
0x4000143	            0x75a8	                           jne 0x40000ed	      3373	undo.c	FUNCTION_55	IF_2
0x4000145	           0xf1f00	                         nop dword [rax]	      3373	undo.c	FUNCTION_55	IF_2
0x4000148	    0x49c784242012	            mov qword [r12 + 0x1220], 0 	      3374	undo.c	FUNCTION_55	IF_2
0x4000154	            0xeb97	                           jmp 0x40000ed	      3374	undo.c	FUNCTION_55	IF_2
0x4000156	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3374	undo.c	FUNCTION_55	IF_2
0x4000160	    0x48c702000000	                      mov qword [rdx], 0	      3376	undo.c	FUNCTION_55	IF_3
0x4000167	            0xeb8e	                           jmp 0x40000f7	      3376	undo.c	FUNCTION_55	IF_3
u_freeentry	functions,0:CALL,3:DO,0:SWITCH,0:WHILE,1:FOR,0:IF,0:ELSE,0	24
0x4000070	          0x4885f6	                           test rsi, rsi	      3397	undo.c	FUNCTION_56	WHILE_1
0x4000073	            0x4154	                                push r12	      3396	undo.c	FUNCTION_56
0x4000075	          0x4989fc	                            mov r12, rdi	      3396	undo.c	FUNCTION_56
0x4000078	              0x55	                                push rbp	      3396	undo.c	FUNCTION_56
0x4000079	              0x53	                                push rbx	      3396	undo.c	FUNCTION_56
0x400007a	            0x7e2f	                           jle 0x40000ab	      3397	undo.c	FUNCTION_56	WHILE_1
0x400007c	        0x488d6eff	                      lea rbp, [rsi - 1]	      3397	undo.c	FUNCTION_56	WHILE_1
0x4000080	    0x488d1ced0000	                        lea rbx, [rbp*8]	      3397	undo.c	FUNCTION_56	WHILE_1
0x4000088	            0xeb0a	                           jmp 0x4000094	      3397	undo.c	FUNCTION_56	WHILE_1
0x400008a	    0x660f1f440000	                    nop word [rax + rax]	      3397	undo.c	FUNCTION_56	WHILE_1
0x4000090	        0x4883ed01	                              sub rbp, 1	      3397	undo.c	FUNCTION_56	WHILE_1
0x4000094	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      3398	undo.c	FUNCTION_56	CALL_1
0x4000099	        0x488b3c18	              mov rdi, qword [rax + rbx]	      3398	undo.c	FUNCTION_56	CALL_1
0x400009d	        0x4883eb08	                              sub rbx, 8	      3398	undo.c	FUNCTION_56	CALL_1
0x40000a1	      0xe800000000	                          call 0x40000a6	      3398	undo.c	FUNCTION_56	CALL_1
0x40000a6	          0x4885ed	                           test rbp, rbp	      3397	undo.c	FUNCTION_56	WHILE_1
0x40000a9	            0x75e5	                           jne 0x4000090	      3397	undo.c	FUNCTION_56	WHILE_1
0x40000ab	      0x498b7c2420	            mov rdi, qword [r12 + 0x20] 	      3399	undo.c	FUNCTION_56	CALL_2
0x40000b0	      0xe800000000	                          call 0x40000b5	      3399	undo.c	FUNCTION_56	CALL_2
0x40000b5	              0x5b	                                 pop rbx	      3404	undo.c	FUNCTION_56
0x40000b6	          0x4c89e7	                            mov rdi, r12	      3403	undo.c	FUNCTION_56	CALL_3
0x40000b9	              0x5d	                                 pop rbp	      3404	undo.c	FUNCTION_56
0x40000ba	            0x415c	                                 pop r12	      3404	undo.c	FUNCTION_56
0x40000bc	      0xe900000000	                           jmp 0x40000c1	      3403	undo.c	FUNCTION_56	CALL_3
u_clearline	functions,0:CALL,1:DO,0:SWITCH,0:WHILE,0:FOR,0:IF,1:ELSE,0	11
0x4003e30	    0x488b05000000	            mov rax, qword [0x04003e37] 	      3446	undo.c	FUNCTION_59	IF_1
0x4003e37	    0x488bb8601200	          mov rdi, qword [rax + 0x1260] 	      3446	undo.c	FUNCTION_59	IF_1
0x4003e3e	          0x4885ff	                           test rdi, rdi	      3446	undo.c	FUNCTION_59	IF_1
0x4003e41	            0x742a	                            je 0x4003e6d	      3446	undo.c	FUNCTION_59	IF_1
0x4003e43	        0x4883ec08	                              sub rsp, 8	      3445	undo.c	FUNCTION_59
0x4003e47	      0xe800000000	                          call 0x4003e4c	      3448	undo.c	FUNCTION_59	IF_1	CALL_1
0x4003e4c	    0x488b05000000	            mov rax, qword [0x04003e53] 	      3448	undo.c	FUNCTION_59	IF_1	CALL_1
0x4003e53	    0x48c780601200	            mov qword [rax + 0x1260], 0 	      3448	undo.c	FUNCTION_59	IF_1	CALL_1
0x4003e5e	    0x48c780681200	            mov qword [rax + 0x1268], 0 	      3449	undo.c	FUNCTION_59	IF_1
0x4003e69	        0x4883c408	                              add rsp, 8	      3451	undo.c	FUNCTION_59
0x4003e6d	            0xf3c3	                                     ret	      3451	undo.c	FUNCTION_59
serialize_pos	functions,0:CALL,4:DO,0:SWITCH,0:WHILE,0:FOR,0:IF,0:ELSE,0	19
0x4000370	              0x55	                                push rbp	      1447	undo.c	FUNCTION_31
0x4000371	              0x53	                                push rbx	      1447	undo.c	FUNCTION_31
0x4000372	          0x4889fd	                            mov rbp, rdi	      1447	undo.c	FUNCTION_31
0x4000375	          0x4889d3	                            mov rbx, rdx	      1447	undo.c	FUNCTION_31
0x4000378	      0xba04000000	                              mov edx, 4	      1448	undo.c	FUNCTION_31	CALL_1
0x400037d	        0x4883ec08	                              sub rsp, 8	      1447	undo.c	FUNCTION_31
0x4000381	      0xe86affffff	               call sym.undo_write_bytes	      1448	undo.c	FUNCTION_31	CALL_1
0x4000386	          0x4863f3	                         movsxd rsi, ebx	      1449	undo.c	FUNCTION_31	CALL_2
0x4000389	          0x4889ef	                            mov rdi, rbp	      1449	undo.c	FUNCTION_31	CALL_2
0x400038c	      0xba04000000	                              mov edx, 4	      1449	undo.c	FUNCTION_31	CALL_2
0x4000391	      0xe85affffff	               call sym.undo_write_bytes	      1449	undo.c	FUNCTION_31	CALL_2
0x4000396	        0x48c1fb20	                           sar rbx, 0x20	      1451	undo.c	FUNCTION_31	CALL_3
0x400039a	        0x4883c408	                              add rsp, 8	      1455	undo.c	FUNCTION_31
0x400039e	          0x4889ef	                            mov rdi, rbp	      1451	undo.c	FUNCTION_31	CALL_3
0x40003a1	          0x4889de	                            mov rsi, rbx	      1451	undo.c	FUNCTION_31	CALL_3
0x40003a4	      0xba04000000	                              mov edx, 4	      1451	undo.c	FUNCTION_31	CALL_3
0x40003a9	              0x5b	                                 pop rbx	      1455	undo.c	FUNCTION_31
0x40003aa	              0x5d	                                 pop rbp	      1455	undo.c	FUNCTION_31
0x40003ab	      0xe940ffffff	                jmp sym.undo_write_bytes	      1451	undo.c	FUNCTION_31	CALL_3
