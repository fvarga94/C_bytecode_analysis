open_app_context	FOR,0:functions,0:IF,1:ELSE,0:CALL,2:DO,0:SWITCH,0:WHILE,0	10
0x4003210	    0x48833d000000	               cmp qword [0x04003218], 0	      2029	ui.c	FUNCTION_61	IF_1
0x4003218	            0x7406	                            je 0x4003220	      2029	ui.c	FUNCTION_61	IF_1
0x400321a	              0xc3	                                     ret	      2034	ui.c	FUNCTION_61
0x400321b	       0xf1f440000	                   nop dword [rax + rax]	      2034	ui.c	FUNCTION_61
0x4003220	        0x4883ec08	                              sub rsp, 8	      2028	ui.c	FUNCTION_61
0x4003224	      0xe800000000	                          call 0x4003229	      2031	ui.c	FUNCTION_61	IF_1	CALL_1
0x4003229	      0xe800000000	                          call 0x400322e	      2032	ui.c	FUNCTION_61	IF_1	CALL_2
0x400322e	    0x488905000000	            mov qword [0x04003235], rax 	      2032	ui.c	FUNCTION_61	IF_1	CALL_2
0x4003235	        0x4883c408	                              add rsp, 8	      2034	ui.c	FUNCTION_61
0x4003239	              0xc3	                                     ret	      2034	ui.c	FUNCTION_61
clip_scroll_selection	FOR,0:functions,0:IF,5:ELSE,4:CALL,0:DO,0:SWITCH,0:WHILE,0	36
0x4001680	    0x66833d000000	                cmp word [0x04001688], 0	      1095	ui.c	FUNCTION_32	IF_1
0x4001688	            0x743a	                            je 0x40016c4	      1095	ui.c	FUNCTION_32	IF_1
0x400168a	    0x8b0500000000	            mov eax, dword [0x04001690] 	      1098	ui.c	FUNCTION_32
0x4001690	            0x29f8	                            sub eax, edi	      1098	ui.c	FUNCTION_32
0x4001692	            0x85c0	                           test eax, eax	      1099	ui.c	FUNCTION_32	IF_2
0x4001694	            0x7e5a	                           jle 0x40016f0	      1099	ui.c	FUNCTION_32	IF_2
0x4001696	    0x3b0500000000	            cmp eax, dword [0x0400169c] 	      1101	ui.c	FUNCTION_32	ELSE_1	IF_3
0x400169c	            0x7c32	                            jl 0x40016d0	      1101	ui.c	FUNCTION_32	ELSE_1	IF_3
0x400169e	            0x31d2	                            xor edx, edx	      1102	ui.c	FUNCTION_32	ELSE_1	IF_3
0x40016a0	    0x668915000000	               mov word [0x040016a7], dx	      1102	ui.c	FUNCTION_32	ELSE_1	IF_3
0x40016a7	    0x8b0500000000	            mov eax, dword [0x040016ad] 	      1107	ui.c	FUNCTION_32	IF_4
0x40016ad	            0x29f8	                            sub eax, edi	      1107	ui.c	FUNCTION_32	IF_4
0x40016af	            0x7832	                            js 0x40016e3	      1107	ui.c	FUNCTION_32	IF_4
0x40016b1	    0x8b1500000000	            mov edx, dword [0x040016b7] 	      1109	ui.c	FUNCTION_32	ELSE_3	IF_5
0x40016b7	            0x39d0	                            cmp eax, edx	      1109	ui.c	FUNCTION_32	ELSE_3	IF_5
0x40016b9	            0x7d45	                           jge 0x4001700	      1109	ui.c	FUNCTION_32	ELSE_3	IF_5
0x40016bb	            0x4898	                                    cdqe	      1112	ui.c	FUNCTION_32	ELSE_4
0x40016bd	    0x488905000000	            mov qword [0x040016c4], rax 	      1112	ui.c	FUNCTION_32	ELSE_4
0x40016c4	            0xf3c3	                                     ret	      1112	ui.c	FUNCTION_32	ELSE_4
0x40016c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1112	ui.c	FUNCTION_32	ELSE_4
0x40016d0	            0x4898	                                    cdqe	      1104	ui.c	FUNCTION_32	ELSE_2
0x40016d2	    0x488905000000	            mov qword [0x040016d9], rax 	      1104	ui.c	FUNCTION_32	ELSE_2
0x40016d9	    0x8b0500000000	            mov eax, dword [0x040016df] 	      1107	ui.c	FUNCTION_32	IF_4
0x40016df	            0x29f8	                            sub eax, edi	      1107	ui.c	FUNCTION_32	IF_4
0x40016e1	            0x79ce	                           jns 0x40016b1	      1107	ui.c	FUNCTION_32	IF_4
0x40016e3	            0x31c0	                            xor eax, eax	      1108	ui.c	FUNCTION_32	IF_4
0x40016e5	    0x668905000000	               mov word [0x040016ec], ax	      1108	ui.c	FUNCTION_32	IF_4
0x40016ec	              0xc3	                                     ret	      1108	ui.c	FUNCTION_32	IF_4
0x40016ed	           0xf1f00	                         nop dword [rax]	      1108	ui.c	FUNCTION_32	IF_4
0x40016f0	    0x48c705000000	               mov qword [0x040016fb], 0	      1100	ui.c	FUNCTION_32	IF_2
0x40016fb	            0xebaa	                           jmp 0x40016a7	      1100	ui.c	FUNCTION_32	IF_2
0x40016fd	           0xf1f00	                         nop dword [rax]	      1100	ui.c	FUNCTION_32	IF_2
0x4001700	          0x83ea01	                              sub edx, 1	      1110	ui.c	FUNCTION_32	ELSE_3	IF_5
0x4001703	          0x4863d2	                         movsxd rdx, edx	      1110	ui.c	FUNCTION_32	ELSE_3	IF_5
0x4001706	    0x488915000000	            mov qword [0x0400170d], rdx 	      1110	ui.c	FUNCTION_32	ELSE_3	IF_5
0x400170d	              0xc3	                                     ret	      1110	ui.c	FUNCTION_32	ELSE_3	IF_5
end_global_changes	FOR,0:functions,0:IF,5:ELSE,0:CALL,4:DO,0:SWITCH,0:WHILE,0	41
0x4001bd0	    0x8b0500000000	            mov eax, dword [0x04001bd6] 	       643	ui.c	FUNCTION_21	IF_1
0x4001bd6	          0x83e801	                              sub eax, 1	       643	ui.c	FUNCTION_21	IF_1
0x4001bd9	            0x85c0	                           test eax, eax	       643	ui.c	FUNCTION_21	IF_1
0x4001bdb	    0x890500000000	            mov dword [0x04001be1], eax 	       643	ui.c	FUNCTION_21	IF_1
0x4001be1	            0x7e05	                           jle 0x4001be8	       643	ui.c	FUNCTION_21	IF_1
0x4001be3	            0xf3c3	                                     ret	       668	ui.c	FUNCTION_21
0x4001be5	           0xf1f00	                         nop dword [rax]	       668	ui.c	FUNCTION_21
0x4001be8	    0x8b0d00000000	            mov ecx, dword [0x04001bee] 	       646	ui.c	FUNCTION_21	IF_2
0x4001bee	            0x85c9	                           test ecx, ecx	       646	ui.c	FUNCTION_21	IF_2
0x4001bf0	            0x754e	                           jne 0x4001c40	       646	ui.c	FUNCTION_21	IF_2
0x4001bf2	    0x8b1500000000	            mov edx, dword [0x04001bf8] 	       651	ui.c	FUNCTION_21	IF_2	IF_3
0x4001bf8	    0x8b0500000000	            mov eax, dword [0x04001bfe] 	       649	ui.c	FUNCTION_21	IF_2
0x4001bfe	    0xc70500000000	               mov dword [0x04001c08], 1	       648	ui.c	FUNCTION_21	IF_2
0x4001c08	    0xc70500000000	               mov dword [0x04001c12], 0	       650	ui.c	FUNCTION_21	IF_2
0x4001c12	            0x85d2	                           test edx, edx	       651	ui.c	FUNCTION_21	IF_2	IF_3
0x4001c14	    0x890500000000	            mov dword [0x04001c1a], eax 	       649	ui.c	FUNCTION_21	IF_2
0x4001c1a	            0x7424	                            je 0x4001c40	       651	ui.c	FUNCTION_21	IF_2	IF_3
0x4001c1c	        0x4883ec08	                              sub rsp, 8	       642	ui.c	FUNCTION_21
0x4001c20	            0xa801	                              test al, 1	       655	ui.c	FUNCTION_21	IF_2	IF_3	IF_4
0x4001c22	            0x752c	                           jne 0x4001c50	       655	ui.c	FUNCTION_21	IF_2	IF_3	IF_4
0x4001c24	            0xa802	                              test al, 2	       660	ui.c	FUNCTION_21	IF_2	IF_3	IF_5
0x4001c26	            0x7548	                           jne 0x4001c70	       660	ui.c	FUNCTION_21	IF_2	IF_3	IF_5
0x4001c28	    0xc70500000000	               mov dword [0x04001c32], 0	       667	ui.c	FUNCTION_21
0x4001c32	        0x4883c408	                              add rsp, 8	       668	ui.c	FUNCTION_21
0x4001c36	              0xc3	                                     ret	       668	ui.c	FUNCTION_21
0x4001c37	    0x660f1f840000	                    nop word [rax + rax]	       668	ui.c	FUNCTION_21
0x4001c40	    0xc70500000000	               mov dword [0x04001c4a], 0	       667	ui.c	FUNCTION_21
0x4001c4a	              0xc3	                                     ret	       667	ui.c	FUNCTION_21
0x4001c4b	       0xf1f440000	                   nop dword [rax + rax]	       667	ui.c	FUNCTION_21
0x4001c50	      0xbf00000000	                              mov edi, 0	       657	ui.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_1
0x4001c55	      0xe800000000	                          call 0x4001c5a	       657	ui.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_1
0x4001c5a	      0xbf00000000	                              mov edi, 0	       658	ui.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_2
0x4001c5f	      0xe800000000	                          call 0x4001c64	       658	ui.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_2
0x4001c64	    0x8b0500000000	            mov eax, dword [0x04001c6a] 	       658	ui.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_2
0x4001c6a	            0xebb8	                           jmp 0x4001c24	       658	ui.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_2
0x4001c6c	         0xf1f4000	                         nop dword [rax]	       658	ui.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_2
0x4001c70	      0xbf00000000	                              mov edi, 0	       662	ui.c	FUNCTION_21	IF_2	IF_3	IF_5	CALL_3
0x4001c75	      0xe800000000	                          call 0x4001c7a	       662	ui.c	FUNCTION_21	IF_2	IF_3	IF_5	CALL_3
0x4001c7a	      0xbf00000000	                              mov edi, 0	       663	ui.c	FUNCTION_21	IF_2	IF_3	IF_5	CALL_4
0x4001c7f	      0xe800000000	                          call 0x4001c84	       663	ui.c	FUNCTION_21	IF_2	IF_3	IF_5	CALL_4
0x4001c84	            0xeba2	                           jmp 0x4001c28	       663	ui.c	FUNCTION_21	IF_2	IF_3	IF_5	CALL_4
read_from_input_buf	FOR,0:functions,0:IF,3:ELSE,0:CALL,3:DO,0:SWITCH,0:WHILE,0	38
0x4003100	            0x4154	                                push r12	      1772	ui.c	FUNCTION_54
0x4003102	              0x55	                                push rbp	      1772	ui.c	FUNCTION_54
0x4003103	          0x4989fc	                            mov r12, rdi	      1772	ui.c	FUNCTION_54
0x4003106	              0x53	                                push rbx	      1772	ui.c	FUNCTION_54
0x4003107	        0x4883ec10	                           sub rsp, 0x10	      1772	ui.c	FUNCTION_54
0x400310b	    0x8b1d00000000	            mov ebx, dword [0x04003111] 	      1773	ui.c	FUNCTION_54	IF_1
0x4003111	            0x85db	                           test ebx, ebx	      1773	ui.c	FUNCTION_54	IF_1
0x4003113	            0x7453	                            je 0x4003168	      1773	ui.c	FUNCTION_54	IF_1
0x4003115	          0x4863c3	                         movsxd rax, ebx	      1775	ui.c	FUNCTION_54	IF_2
0x4003118	          0x4c89e7	                            mov rdi, r12	        59	string3.h	FUNCTION_83	CALL_3
0x400311b	          0x4839f0	                            cmp rax, rsi	        59	string3.h	FUNCTION_83	CALL_3
0x400311e	        0x480f4ef0	                         cmovle rsi, rax	        59	string3.h	FUNCTION_83	CALL_3
0x4003122	          0x4889f5	                            mov rbp, rsi	        59	string3.h	FUNCTION_83	CALL_3
0x4003125	          0x4889f2	                            mov rdx, rsi	        59	string3.h	FUNCTION_83	CALL_3
0x4003128	      0xbe00000000	                              mov esi, 0	        59	string3.h	FUNCTION_83	CALL_3
0x400312d	            0x29eb	                            sub ebx, ebp	      1778	ui.c	FUNCTION_54
0x400312f	      0xe800000000	                          call 0x4003134	        59	string3.h	FUNCTION_83	CALL_3
0x4003134	            0x85db	                           test ebx, ebx	      1779	ui.c	FUNCTION_54	IF_3
0x4003136	    0x891d00000000	            mov dword [0x0400313c], ebx 	      1778	ui.c	FUNCTION_54
0x400313c	            0x7419	                            je 0x4003157	      1779	ui.c	FUNCTION_54	IF_3
0x400313e	    0x488db5000000	                          lea rsi, [rbp]	        59	string3.h	FUNCTION_83	CALL_3
0x4003145	          0x4863d3	                         movsxd rdx, ebx	        59	string3.h	FUNCTION_83	CALL_3
0x4003148	      0xb906100000	                         mov ecx, 0x1006	        59	string3.h	FUNCTION_83	CALL_3
0x400314d	      0xbf00000000	                              mov edi, 0	        59	string3.h	FUNCTION_83	CALL_3
0x4003152	      0xe800000000	                          call 0x4003157	        59	string3.h	FUNCTION_83	CALL_3
0x4003157	        0x4883c410	                           add rsp, 0x10	      1782	ui.c	FUNCTION_54
0x400315b	            0x89e8	                            mov eax, ebp	      1782	ui.c	FUNCTION_54
0x400315d	              0x5b	                                 pop rbx	      1782	ui.c	FUNCTION_54
0x400315e	              0x5d	                                 pop rbp	      1782	ui.c	FUNCTION_54
0x400315f	            0x415c	                                 pop r12	      1782	ui.c	FUNCTION_54
0x4003161	              0xc3	                                     ret	      1782	ui.c	FUNCTION_54
0x4003162	    0x660f1f440000	                    nop word [rax + rax]	      1782	ui.c	FUNCTION_54
0x4003168	      0xbf01000000	                              mov edi, 1	      1774	ui.c	FUNCTION_54	CALL_1
0x400316d	      0x4889742408	                mov qword [rsp + 8], rsi	      1774	ui.c	FUNCTION_54	CALL_1
0x4003172	      0xe800000000	                          call 0x4003177	      1774	ui.c	FUNCTION_54	CALL_1
0x4003177	    0x8b1d00000000	            mov ebx, dword [0x0400317d] 	      1774	ui.c	FUNCTION_54	CALL_1
0x400317d	      0x488b742408	                mov rsi, qword [rsp + 8]	      1774	ui.c	FUNCTION_54	CALL_1
0x4003182	            0xeb91	                           jmp 0x4003115	      1774	ui.c	FUNCTION_54	CALL_1
ui_get_shellsize	FOR,0:functions,0:IF,2:ELSE,1:CALL,5:DO,0:SWITCH,0:WHILE,0	26
0x40010e0	    0x8b0500000000	            mov eax, dword [0x040010e6] 	       341	ui.c	FUNCTION_9	IF_1
0x40010e6	              0x53	                                push rbx	       337	ui.c	FUNCTION_9
0x40010e7	            0x85c0	                           test eax, eax	       341	ui.c	FUNCTION_9	IF_1
0x40010e9	            0x7415	                            je 0x4001100	       341	ui.c	FUNCTION_9	IF_1
0x40010eb	      0xe800000000	                          call 0x40010f0	       342	ui.c	FUNCTION_9	CALL_1
0x40010f0	            0x89c3	                            mov ebx, eax	       342	ui.c	FUNCTION_9	CALL_1
0x40010f2	      0xe800000000	                          call 0x40010f7	       347	ui.c	FUNCTION_9	CALL_3
0x40010f7	          0x83fb01	                              cmp ebx, 1	       350	ui.c	FUNCTION_9	IF_2
0x40010fa	            0x7415	                            je 0x4001111	       350	ui.c	FUNCTION_9	IF_2
0x40010fc	            0x89d8	                            mov eax, ebx	       356	ui.c	FUNCTION_9
0x40010fe	              0x5b	                                 pop rbx	       356	ui.c	FUNCTION_9
0x40010ff	              0xc3	                                     ret	       356	ui.c	FUNCTION_9
0x4001100	      0xe800000000	                          call 0x4001105	       345	ui.c	FUNCTION_9	CALL_2
0x4001105	            0x89c3	                            mov ebx, eax	       345	ui.c	FUNCTION_9	CALL_2
0x4001107	      0xe800000000	                          call 0x400110c	       347	ui.c	FUNCTION_9	CALL_3
0x400110c	          0x83fb01	                              cmp ebx, 1	       350	ui.c	FUNCTION_9	IF_2
0x400110f	            0x75eb	                           jne 0x40010fc	       350	ui.c	FUNCTION_9	IF_2
0x4001111	    0x488b35000000	            mov rsi, qword [0x04001118] 	       352	ui.c	FUNCTION_9	IF_2	CALL_4
0x4001118	      0xbf00000000	                              mov edi, 0	       352	ui.c	FUNCTION_9	IF_2	CALL_4
0x400111d	      0xe800000000	                          call 0x4001122	       352	ui.c	FUNCTION_9	IF_2	CALL_4
0x4001122	    0x488b35000000	            mov rsi, qword [0x04001129] 	       353	ui.c	FUNCTION_9	IF_2	CALL_5
0x4001129	      0xbf00000000	                              mov edi, 0	       353	ui.c	FUNCTION_9	IF_2	CALL_5
0x400112e	      0xe800000000	                          call 0x4001133	       353	ui.c	FUNCTION_9	IF_2	CALL_5
0x4001133	            0x89d8	                            mov eax, ebx	       356	ui.c	FUNCTION_9
0x4001135	              0x5b	                                 pop rbx	       356	ui.c	FUNCTION_9
0x4001136	              0xc3	                                     ret	       356	ui.c	FUNCTION_9
clip_modeless	FOR,0:functions,0:IF,5:ELSE,3:CALL,5:DO,0:SWITCH,0:WHILE,0	58
0x40028a0	     0xfb705000000	           movzx eax, word [0x040028a7] 	       737	ui.c	FUNCTION_25
0x40028a7	        0x66a9fdff	                         test ax, 0xfffd	       740	ui.c	FUNCTION_25
0x40028ab	            0x7543	                           jne 0x40028f0	       740	ui.c	FUNCTION_25
0x40028ad	    0xf60500000000	           test byte [0x040028b4], 0x20 	       739	ui.c	FUNCTION_25
0x40028b4	      0xb901000000	                              mov ecx, 1	       740	ui.c	FUNCTION_25
0x40028b9	            0x7435	                            je 0x40028f0	       739	ui.c	FUNCTION_25
0x40028bb	            0x85f6	                           test esi, esi	       742	ui.c	FUNCTION_25	IF_1
0x40028bd	            0x7451	                            je 0x4002910	       742	ui.c	FUNCTION_25	IF_1
0x40028bf	          0x83ff02	                              cmp edi, 2	       742	ui.c	FUNCTION_25	IF_1
0x40028c2	            0x754c	                           jne 0x4002910	       742	ui.c	FUNCTION_25	IF_1
0x40028c4	        0x4883ec18	                           sub rsp, 0x18	       734	ui.c	FUNCTION_25
0x40028c8	    0x66833d000000	                cmp word [0x040028d0], 0	       746	ui.c	FUNCTION_25	IF_1	IF_2
0x40028d0	            0x7456	                            je 0x4002928	       746	ui.c	FUNCTION_25	IF_1	IF_2
0x40028d2	    0x8b1500000000	            mov edx, dword [0x040028d8] 	       748	ui.c	FUNCTION_25	IF_1	CALL_2
0x40028d8	    0x8b3500000000	            mov esi, dword [0x040028de] 	       748	ui.c	FUNCTION_25	IF_1	CALL_2
0x40028de	      0xbf02000000	                              mov edi, 2	       748	ui.c	FUNCTION_25	IF_1	CALL_2
0x40028e3	        0x4883c418	                           add rsp, 0x18	       761	ui.c	FUNCTION_25
0x40028e7	      0xe9f4f9ffff	          jmp sym.clip_process_selection	       748	ui.c	FUNCTION_25	IF_1	CALL_2
0x40028ec	         0xf1f4000	                         nop dword [rax]	       748	ui.c	FUNCTION_25	IF_1	CALL_2
0x40028f0	            0x31c9	                            xor ecx, ecx	       740	ui.c	FUNCTION_25
0x40028f2	        0x6683f801	                               cmp ax, 1	       740	ui.c	FUNCTION_25
0x40028f6	            0x75c3	                           jne 0x40028bb	       740	ui.c	FUNCTION_25
0x40028f8	    0x8b0d00000000	            mov ecx, dword [0x040028fe] 	       740	ui.c	FUNCTION_25
0x40028fe	          0xc1e906	                              shr ecx, 6	       740	ui.c	FUNCTION_25
0x4002901	          0x83e101	                              and ecx, 1	       740	ui.c	FUNCTION_25
0x4002904	            0x85f6	                           test esi, esi	       742	ui.c	FUNCTION_25	IF_1
0x4002906	            0x75b7	                           jne 0x40028bf	       742	ui.c	FUNCTION_25	IF_1
0x4002908	     0xf1f84000000	                   nop dword [rax + rax]	       742	ui.c	FUNCTION_25	IF_1
0x4002910	            0x85f6	                           test esi, esi	       750	ui.c	FUNCTION_25	ELSE_1	IF_3
0x4002912	            0x7534	                           jne 0x4002948	       750	ui.c	FUNCTION_25	ELSE_1	IF_3
0x4002914	            0x85d2	                           test edx, edx	       752	ui.c	FUNCTION_25	ELSE_2	IF_4
0x4002916	            0x7460	                            je 0x4002978	       752	ui.c	FUNCTION_25	ELSE_2	IF_4
0x4002918	    0x66833d000000	                cmp word [0x04002920], 0	       756	ui.c	FUNCTION_25	ELSE_2	IF_4	IF_5
0x4002920	            0x753e	                           jne 0x4002960	       756	ui.c	FUNCTION_25	ELSE_2	IF_4	IF_5
0x4002922	            0xf3c3	                                     ret	       756	ui.c	FUNCTION_25	ELSE_2	IF_4	IF_5
0x4002924	         0xf1f4000	                         nop dword [rax]	       756	ui.c	FUNCTION_25	ELSE_2	IF_4	IF_5
0x4002928	    0x8b3500000000	            mov esi, dword [0x0400292e] 	       747	ui.c	FUNCTION_25	IF_1	CALL_1
0x400292e	    0x8b3d00000000	            mov edi, dword [0x04002934] 	       747	ui.c	FUNCTION_25	IF_1	CALL_1
0x4002934	            0x31d2	                            xor edx, edx	       747	ui.c	FUNCTION_25	IF_1	CALL_1
0x4002936	        0x894c240c	              mov dword [rsp + 0xc], ecx	       747	ui.c	FUNCTION_25	IF_1	CALL_1
0x400293a	      0xe800000000	                          call 0x400293f	       747	ui.c	FUNCTION_25	IF_1	CALL_1
0x400293f	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	       747	ui.c	FUNCTION_25	IF_1	CALL_1
0x4002943	            0xeb8d	                           jmp 0x40028d2	       747	ui.c	FUNCTION_25	IF_1	CALL_1
0x4002945	           0xf1f00	                         nop dword [rax]	       747	ui.c	FUNCTION_25	IF_1	CALL_1
0x4002948	    0x8b3500000000	            mov esi, dword [0x0400294e] 	       751	ui.c	FUNCTION_25	ELSE_1	IF_3
0x400294e	    0x8b3d00000000	            mov edi, dword [0x04002954] 	       751	ui.c	FUNCTION_25	ELSE_1	IF_3
0x4002954	            0x89ca	                            mov edx, ecx	       751	ui.c	FUNCTION_25	ELSE_1	IF_3
0x4002956	      0xe9e5e9ffff	            jmp sym.clip_start_selection	       751	ui.c	FUNCTION_25	ELSE_1	IF_3
0x400295b	       0xf1f440000	                   nop dword [rax + rax]	       751	ui.c	FUNCTION_25	ELSE_1	IF_3
0x4002960	    0x8b1500000000	            mov edx, dword [0x04002966] 	       757	ui.c	FUNCTION_25	ELSE_2	IF_4	CALL_4
0x4002966	    0x8b3500000000	            mov esi, dword [0x0400296c] 	       757	ui.c	FUNCTION_25	ELSE_2	IF_4	CALL_4
0x400296c	      0xe96ff9ffff	          jmp sym.clip_process_selection	       757	ui.c	FUNCTION_25	ELSE_2	IF_4	CALL_4
0x4002971	     0xf1f80000000	                         nop dword [rax]	       757	ui.c	FUNCTION_25	ELSE_2	IF_4	CALL_4
0x4002978	    0x8b1500000000	            mov edx, dword [0x0400297e] 	       760	ui.c	FUNCTION_25	CALL_5
0x400297e	    0x8b3500000000	            mov esi, dword [0x04002984] 	       760	ui.c	FUNCTION_25	CALL_5
0x4002984	            0x31c9	                            xor ecx, ecx	       760	ui.c	FUNCTION_25	CALL_5
0x4002986	      0xbf03000000	                              mov edi, 3	       760	ui.c	FUNCTION_25	CALL_5
0x400298b	      0xe950f9ffff	          jmp sym.clip_process_selection	       760	ui.c	FUNCTION_25	CALL_5
read_error_exit	FOR,0:functions,0:IF,1:ELSE,0:CALL,4:DO,0:SWITCH,0:WHILE,0	15
0x4002b80	        0x4883ec08	                              sub rsp, 8	      1948	ui.c	FUNCTION_56
0x4002b84	    0x8b0500000000	            mov eax, dword [0x04002b8a] 	      1949	ui.c	FUNCTION_56	IF_1
0x4002b8a	            0x85c0	                           test eax, eax	      1949	ui.c	FUNCTION_56	IF_1
0x4002b8c	            0x7407	                            je 0x4002b95	      1949	ui.c	FUNCTION_56	IF_1
0x4002b8e	            0x31ff	                            xor edi, edi	      1950	ui.c	FUNCTION_56	CALL_1
0x4002b90	      0xe800000000	                          call 0x4002b95	      1950	ui.c	FUNCTION_56	CALL_1
0x4002b95	      0xba05000000	                              mov edx, 5	      1951	ui.c	FUNCTION_56	CALL_3
0x4002b9a	      0xbe00000000	                              mov esi, 0	      1951	ui.c	FUNCTION_56	CALL_3
0x4002b9f	            0x31ff	                            xor edi, edi	      1951	ui.c	FUNCTION_56	CALL_3
0x4002ba1	      0xe800000000	                          call 0x4002ba6	      1951	ui.c	FUNCTION_56	CALL_3
0x4002ba6	    0x488b3d000000	            mov rdi, qword [0x04002bad] 	       110	string3.h	FUNCTION_88	CALL_3
0x4002bad	          0x4889c6	                            mov rsi, rax	       110	string3.h	FUNCTION_88	CALL_3
0x4002bb0	      0xe800000000	                          call 0x4002bb5	       110	string3.h	FUNCTION_88	CALL_3
0x4002bb5	        0x4883c408	                              add rsp, 8	      1953	ui.c	FUNCTION_56
0x4002bb9	      0xe900000000	                           jmp 0x4002bbe	      1952	ui.c	FUNCTION_56	CALL_4
clip_invert_area	FOR,0:functions,0:IF,7:ELSE,2:CALL,5:DO,0:SWITCH,0:WHILE,0	84
0x4000070	            0x4155	                                push r13	      1130	ui.c	ELSE_4	FUNCTION_33
0x4000072	            0x4154	                                push r12	      1130	ui.c	ELSE_4	FUNCTION_33
0x4000074	          0x4531e4	                          xor r12d, r12d	      1131	ui.c	ELSE_4	FUNCTION_33
0x4000077	              0x55	                                push rbp	      1130	ui.c	ELSE_4	FUNCTION_33
0x4000078	              0x53	                                push rbx	      1130	ui.c	ELSE_4	FUNCTION_33
0x4000079	            0x89fd	                            mov ebp, edi	      1130	ui.c	ELSE_4	FUNCTION_33
0x400007b	            0x89d3	                            mov ebx, edx	      1130	ui.c	ELSE_4	FUNCTION_33
0x400007d	          0x4189cd	                           mov r13d, ecx	      1130	ui.c	ELSE_4	FUNCTION_33
0x4000080	        0x4883ec08	                              sub rsp, 8	      1130	ui.c	ELSE_4	FUNCTION_33
0x4000084	        0x4183f802	                              cmp r8d, 2	      1131	ui.c	ELSE_4	FUNCTION_33
0x4000088	        0x410f94c4	                               sete r12b	      1131	ui.c	ELSE_4	FUNCTION_33
0x400008c	            0x39d7	                            cmp edi, edx	       773	ui.c	FUNCTION_26	IF_1
0x400008e	            0x7f18	                            jg 0x40000a8	       773	ui.c	FUNCTION_26	IF_1
0x4000090	            0x39ce	                            cmp esi, ecx	       775	ui.c	FUNCTION_26	IF_3
0x4000092	            0x7e64	                           jle 0x40000f8	       775	ui.c	FUNCTION_26	IF_3
0x4000094	            0x39d7	                            cmp edi, edx	       775	ui.c	FUNCTION_26	IF_3
0x4000096	            0x7c60	                            jl 0x40000f8	       775	ui.c	FUNCTION_26	IF_3
0x4000098	            0x89f0	                            mov eax, esi	       775	ui.c	FUNCTION_26	IF_3
0x400009a	            0x89d5	                            mov ebp, edx	       775	ui.c	FUNCTION_26	IF_3
0x400009c	            0x89ce	                            mov esi, ecx	       775	ui.c	FUNCTION_26	IF_3
0x400009e	          0x4189c5	                           mov r13d, eax	       775	ui.c	FUNCTION_26	IF_3
0x40000a1	            0x89fb	                            mov ebx, edi	       775	ui.c	FUNCTION_26	IF_3
0x40000a3	            0xeb60	                           jmp 0x4000105	       775	ui.c	FUNCTION_26	IF_3
0x40000a5	           0xf1f00	                         nop dword [rax]	       775	ui.c	FUNCTION_26	IF_3
0x40000a8	            0x89f0	                            mov eax, esi	       773	ui.c	FUNCTION_26	IF_1
0x40000aa	            0x89d5	                            mov ebp, edx	       773	ui.c	FUNCTION_26	IF_1
0x40000ac	            0x89ce	                            mov esi, ecx	       773	ui.c	FUNCTION_26	IF_1
0x40000ae	          0x4189c5	                           mov r13d, eax	       773	ui.c	FUNCTION_26	IF_1
0x40000b1	            0x89fb	                            mov ebx, edi	       773	ui.c	FUNCTION_26	IF_1
0x40000b3	            0x85f6	                           test esi, esi	      1159	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5
0x40000b5	            0x7e1a	                           jle 0x40000d1	      1159	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5
0x40000b7	    0x8b0d00000000	            mov ecx, dword [0x040000bd] 	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x40000bd	            0x89ef	                            mov edi, ebp	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x40000bf	          0x4589e0	                           mov r8d, r12d	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x40000c2	      0xba01000000	                              mov edx, 1	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x40000c7	          0x83c501	                              add ebp, 1	      1162	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5
0x40000ca	            0x29f1	                            sub ecx, esi	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x40000cc	      0xe87fffffff	          call sym.clip_invert_rectangle	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x40000d1	    0x488b05000000	            mov rax, qword [0x040000d8] 	      1166	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6
0x40000d8	          0x4963d5	                        movsxd rdx, r13d	      1166	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6
0x40000db	        0x4883e801	                              sub rax, 1	      1166	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6
0x40000df	          0x4839c2	                            cmp rdx, rax	      1166	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6
0x40000e2	            0x7c64	                            jl 0x4000148	      1166	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6
0x40000e4	            0x39dd	                            cmp ebp, ebx	      1173	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7
0x40000e6	            0x7e38	                           jle 0x4000120	      1173	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7
0x40000e8	        0x4883c408	                              add rsp, 8	      1177	ui.c	ELSE_4	FUNCTION_33
0x40000ec	              0x5b	                                 pop rbx	      1177	ui.c	ELSE_4	FUNCTION_33
0x40000ed	              0x5d	                                 pop rbp	      1177	ui.c	ELSE_4	FUNCTION_33
0x40000ee	            0x415c	                                 pop r12	      1177	ui.c	ELSE_4	FUNCTION_33
0x40000f0	            0x415d	                                 pop r13	      1177	ui.c	ELSE_4	FUNCTION_33
0x40000f2	              0xc3	                                     ret	      1177	ui.c	ELSE_4	FUNCTION_33
0x40000f3	       0xf1f440000	                   nop dword [rax + rax]	      1177	ui.c	ELSE_4	FUNCTION_33
0x40000f8	        0x4183f803	                              cmp r8d, 3	      1149	ui.c	ELSE_4	FUNCTION_33	ELSE_1	IF_3
0x40000fc	      0xb801000000	                              mov eax, 1	      1149	ui.c	ELSE_4	FUNCTION_33	ELSE_1	IF_3
0x4000101	        0x440f44e0	                         cmove r12d, eax	      1149	ui.c	ELSE_4	FUNCTION_33	ELSE_1	IF_3
0x4000105	            0x39dd	                            cmp ebp, ebx	      1152	ui.c	ELSE_4	FUNCTION_33	IF_4
0x4000107	            0x75aa	                           jne 0x40000b3	      1152	ui.c	ELSE_4	FUNCTION_33	IF_4
0x4000109	          0x4489e9	                           mov ecx, r13d	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x400010c	          0x4589e0	                           mov r8d, r12d	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x400010f	      0xba01000000	                              mov edx, 1	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x4000114	            0x29f1	                            sub ecx, esi	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x4000116	            0xeb18	                           jmp 0x4000130	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x4000118	     0xf1f84000000	                   nop dword [rax + rax]	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x4000120	            0x29eb	                            sub ebx, ebp	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x4000122	    0x8b0d00000000	            mov ecx, dword [0x04000128] 	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x4000128	          0x4589e0	                           mov r8d, r12d	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x400012b	          0x8d5301	                      lea edx, [rbx + 1]	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x400012e	            0x31f6	                            xor esi, esi	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x4000130	        0x4883c408	                              add rsp, 8	      1177	ui.c	ELSE_4	FUNCTION_33
0x4000134	            0x89ef	                            mov edi, ebp	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x4000136	              0x5b	                                 pop rbx	      1177	ui.c	ELSE_4	FUNCTION_33
0x4000137	              0x5d	                                 pop rbp	      1177	ui.c	ELSE_4	FUNCTION_33
0x4000138	            0x415c	                                 pop r12	      1177	ui.c	ELSE_4	FUNCTION_33
0x400013a	            0x415d	                                 pop r13	      1177	ui.c	ELSE_4	FUNCTION_33
0x400013c	      0xe90fffffff	           jmp sym.clip_invert_rectangle	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x4000141	     0xf1f80000000	                         nop dword [rax]	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x4000148	            0x89df	                            mov edi, ebx	      1168	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6	CALL_4
0x400014a	          0x4589e0	                           mov r8d, r12d	      1168	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6	CALL_4
0x400014d	          0x4489e9	                           mov ecx, r13d	      1168	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6	CALL_4
0x4000150	      0xba01000000	                              mov edx, 1	      1168	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6	CALL_4
0x4000155	            0x31f6	                            xor esi, esi	      1168	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6	CALL_4
0x4000157	          0x83eb01	                              sub ebx, 1	      1169	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6
0x400015a	      0xe8f1feffff	          call sym.clip_invert_rectangle	      1168	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6	CALL_4
0x400015f	            0xeb83	                           jmp 0x40000e4	      1168	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6	CALL_4
clip_x11_request_selection_cb	FOR,0:functions,0:IF,10:ELSE,4:CALL,12:DO,0:SWITCH,0:WHILE,0	170
0x4000710	            0x4157	                                push r15	      2137	ui.c	FUNCTION_65
0x4000712	            0x4156	                                push r14	      2137	ui.c	FUNCTION_65
0x4000714	      0xbf00000000	                              mov edi, 0	      2148	ui.c	FUNCTION_65	IF_1
0x4000719	            0x4155	                                push r13	      2137	ui.c	FUNCTION_65
0x400071b	            0x4154	                                push r12	      2137	ui.c	FUNCTION_65
0x400071d	          0x4989f4	                            mov r12, rsi	      2137	ui.c	FUNCTION_65
0x4000720	              0x55	                                push rbp	      2137	ui.c	FUNCTION_65
0x4000721	              0x53	                                push rbx	      2137	ui.c	FUNCTION_65
0x4000722	        0x4883ec58	                           sub rsp, 0x58	      2137	ui.c	FUNCTION_65
0x4000726	    0x64488b042528	                mov rax, qword fs:[0x28]	      2137	ui.c	FUNCTION_65
0x400072f	      0x4889442448	             mov qword [rsp + 0x48], rax	      2137	ui.c	FUNCTION_65
0x4000734	            0x31c0	                            xor eax, eax	      2137	ui.c	FUNCTION_65
0x4000736	    0x488b05000000	            mov rax, qword [0x0400073d] 	      2148	ui.c	FUNCTION_65	IF_1
0x400073d	          0x483902	                    cmp qword [rdx], rax	      2148	ui.c	FUNCTION_65	IF_1
0x4000740	      0xb800000000	                              mov eax, 0	      2148	ui.c	FUNCTION_65	IF_1
0x4000745	    0x488bb4249000	            mov rsi, qword [rsp + 0x90] 	      2137	ui.c	FUNCTION_65
0x400074d	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2141	ui.c	FUNCTION_65
0x4000756	        0x480f45c7	                         cmovne rax, rdi	      2148	ui.c	FUNCTION_65	IF_1
0x400075a	          0x4d85c0	                             test r8, r8	      2152	ui.c	FUNCTION_65	ELSE_1	IF_2
0x400075d	          0x4889c5	                            mov rbp, rax	      2148	ui.c	FUNCTION_65	IF_1
0x4000760	     0xf84aa000000	                            je 0x4000810	      2152	ui.c	FUNCTION_65	ELSE_1	IF_2
0x4000766	          0x498b19	                     mov rbx, qword [r9]	      2152	ui.c	FUNCTION_65	ELSE_1	IF_2
0x4000769	          0x4885db	                           test rbx, rbx	      2152	ui.c	FUNCTION_65	ELSE_1	IF_2
0x400076c	     0xf849e000000	                            je 0x4000810	      2152	ui.c	FUNCTION_65	ELSE_1	IF_2
0x4000772	          0x488b01	                    mov rax, qword [rcx]	      2160	ui.c	FUNCTION_65	IF_3
0x4000775	    0x483b05000000	            cmp rax, qword [0x0400077c] 	      2160	ui.c	FUNCTION_65	IF_3
0x400077c	          0x4d89c5	                             mov r13, r8	      2160	ui.c	FUNCTION_65	IF_3
0x400077f	     0xf840b010000	                            je 0x4000890	      2160	ui.c	FUNCTION_65	IF_3
0x4000785	    0x483b05000000	            cmp rax, qword [0x0400078c] 	      2167	ui.c	FUNCTION_65	ELSE_2	IF_4
0x400078c	     0xf84ae010000	                            je 0x4000940	      2167	ui.c	FUNCTION_65	ELSE_2	IF_4
0x4000792	    0x483b05000000	            cmp rax, qword [0x04000799] 	      2196	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000799	    0x488b15000000	            mov rdx, qword [0x040007a0] 	      2196	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40007a0	     0xf8402010000	                            je 0x40008a8	      2196	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40007a6	          0x4839d0	                            cmp rax, rdx	      2198	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40007a9	     0xf8499000000	                            je 0x4000848	      2198	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40007af	    0x8b3d00000000	            mov edi, dword [0x040007b5] 	      2200	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40007b5	            0x85ff	                           test edi, edi	      2200	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40007b7	            0x740d	                            je 0x40007c6	      2200	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40007b9	    0x483b05000000	            cmp rax, qword [0x040007c0] 	      2202	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40007c0	     0xf84e2000000	                            je 0x40008a8	      2202	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40007c6	          0x4d89ef	                            mov r15, r13	      2202	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40007c9	          0x4531f6	                          xor r14d, r14d	      2144	ui.c	FUNCTION_65
0x40007cc	    0x41b8ff000000	                           mov r8d, 0xff	      2138	ui.c	FUNCTION_65
0x40007d2	          0x4489c7	                            mov edi, r8d	      2230	ui.c	FUNCTION_65	CALL_9
0x40007d5	          0x4889e9	                            mov rcx, rbp	      2230	ui.c	FUNCTION_65	CALL_9
0x40007d8	          0x4889da	                            mov rdx, rbx	      2230	ui.c	FUNCTION_65	CALL_9
0x40007db	          0x4c89fe	                            mov rsi, r15	      2230	ui.c	FUNCTION_65	CALL_9
0x40007de	      0xe800000000	                          call 0x40007e3	      2230	ui.c	FUNCTION_65	CALL_9
0x40007e3	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2232	ui.c	FUNCTION_65	IF_10
0x40007e8	          0x4885ff	                           test rdi, rdi	      2232	ui.c	FUNCTION_65	IF_10
0x40007eb	            0x7405	                            je 0x40007f2	      2232	ui.c	FUNCTION_65	IF_10
0x40007ed	      0xe800000000	                          call 0x40007f2	      2233	ui.c	FUNCTION_65	CALL_10
0x40007f2	          0x4c89f7	                            mov rdi, r14	      2235	ui.c	FUNCTION_65	CALL_11
0x40007f5	      0xe800000000	                          call 0x40007fa	      2235	ui.c	FUNCTION_65	CALL_11
0x40007fa	          0x4c89ef	                            mov rdi, r13	      2237	ui.c	FUNCTION_65	CALL_12
0x40007fd	      0xe800000000	                          call 0x4000802	      2237	ui.c	FUNCTION_65	CALL_12
0x4000802	    0x41c704240100	                      mov dword [r12], 1	      2238	ui.c	FUNCTION_65
0x400080a	            0xeb14	                           jmp 0x4000820	      2238	ui.c	FUNCTION_65
0x400080c	         0xf1f4000	                         nop dword [rax]	      2238	ui.c	FUNCTION_65
0x4000810	          0x4889ef	                            mov rdi, rbp	      2154	ui.c	FUNCTION_65	ELSE_1	IF_2	CALL_1
0x4000813	      0xe800000000	                          call 0x4000818	      2154	ui.c	FUNCTION_65	ELSE_1	IF_2	CALL_1
0x4000818	    0x41c704240000	                      mov dword [r12], 0	      2155	ui.c	FUNCTION_65	ELSE_1	IF_2
0x4000820	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2239	ui.c	FUNCTION_65
0x4000825	    0x644833042528	                xor rax, qword fs:[0x28]	      2239	ui.c	FUNCTION_65
0x400082e	     0xf85b1010000	                           jne 0x40009e5	      2239	ui.c	FUNCTION_65
0x4000834	        0x4883c458	                           add rsp, 0x58	      2239	ui.c	FUNCTION_65
0x4000838	              0x5b	                                 pop rbx	      2239	ui.c	FUNCTION_65
0x4000839	              0x5d	                                 pop rbp	      2239	ui.c	FUNCTION_65
0x400083a	            0x415c	                                 pop r12	      2239	ui.c	FUNCTION_65
0x400083c	            0x415d	                                 pop r13	      2239	ui.c	FUNCTION_65
0x400083e	            0x415e	                                 pop r14	      2239	ui.c	FUNCTION_65
0x4000840	            0x415f	                                 pop r15	      2239	ui.c	FUNCTION_65
0x4000842	              0xc3	                                     ret	      2239	ui.c	FUNCTION_65
0x4000843	       0xf1f440000	                   nop dword [rax + rax]	      2239	ui.c	FUNCTION_65
0x4000848	      0x4889442428	             mov qword [rsp + 0x28], rax	      2211	ui.c	FUNCTION_65	ELSE_3	IF_7
0x400084d	            0x8b06	                    mov eax, dword [rsi]	      2212	ui.c	FUNCTION_65	ELSE_3	IF_7
0x400084f	    0xc74424140000	               mov dword [rsp + 0x14], 0	      2207	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000857	      0x4c89442420	              mov qword [rsp + 0x20], r8	      2210	ui.c	FUNCTION_65	ELSE_3	IF_7
0x400085c	      0x48895c2438	             mov qword [rsp + 0x38], rbx	      2213	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000861	        0x89442430	             mov dword [rsp + 0x30], eax	      2212	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000865	    0x8b0d00000000	            mov ecx, dword [0x0400086b] 	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x400086b	    0x488b3d000000	            mov rdi, qword [0x04000872] 	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4000872	            0x85c9	                           test ecx, ecx	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4000874	     0xf85b6000000	                           jne 0x4000930	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x400087a	      0x488d4c2414	                   lea rcx, [rsp + 0x14]	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x400087f	      0x488d542418	                   lea rdx, [rsp + 0x18]	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4000884	      0x488d742420	                   lea rsi, [rsp + 0x20]	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4000889	      0xe800000000	                          call 0x400088e	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x400088e	            0xeb63	                           jmp 0x40008f3	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4000890	        0x4d8d7801	                       lea r15, [r8 + 1]	      2162	ui.c	FUNCTION_65	IF_3
0x4000894	        0x4883eb01	                              sub rbx, 1	      2163	ui.c	FUNCTION_65	IF_3
0x4000898	        0x450fb600	                    movzx r8d, byte [r8]	      2162	ui.c	FUNCTION_65	IF_3
0x400089c	          0x4531f6	                          xor r14d, r14d	      2144	ui.c	FUNCTION_65
0x400089f	      0xe92effffff	                           jmp 0x40007d2	      2144	ui.c	FUNCTION_65
0x40008a4	         0xf1f4000	                         nop dword [rax]	      2144	ui.c	FUNCTION_65
0x40008a8	            0x8b0e	                    mov ecx, dword [rsi]	      2212	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40008aa	          0x4839d0	                            cmp rax, rdx	      2215	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8
0x40008ad	    0xc74424140000	               mov dword [rsp + 0x14], 0	      2207	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40008b5	      0x4c896c2420	             mov qword [rsp + 0x20], r13	      2210	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40008ba	      0x4889442428	             mov qword [rsp + 0x28], rax	      2211	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40008bf	      0x48895c2438	             mov qword [rsp + 0x38], rbx	      2213	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40008c4	        0x894c2430	             mov dword [rsp + 0x30], ecx	      2212	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40008c8	            0x749b	                            je 0x4000865	      2215	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8
0x40008ca	    0x8b1500000000	            mov edx, dword [0x040008d0] 	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x40008d0	    0x488b3d000000	            mov rdi, qword [0x040008d7] 	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x40008d7	            0x85d2	                           test edx, edx	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x40008d9	     0xf85f9000000	                           jne 0x40009d8	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x40008df	      0x488d4c2414	                   lea rcx, [rsp + 0x14]	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x40008e4	      0x488d542418	                   lea rdx, [rsp + 0x18]	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x40008e9	      0x488d742420	                   lea rsi, [rsp + 0x20]	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x40008ee	      0xe800000000	                          call 0x40008f3	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x40008f3	            0x85c0	                           test eax, eax	      2222	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x40008f5	            0x7529	                           jne 0x4000920	      2222	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x40008f7	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      2222	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x40008fb	            0x85c0	                           test eax, eax	      2222	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x40008fd	            0x7e21	                           jle 0x4000920	      2222	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x40008ff	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2227	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000904	          0x4531f6	                          xor r14d, r14d	      2144	ui.c	FUNCTION_65
0x4000907	          0x4c8b38	                    mov r15, qword [rax]	      2227	ui.c	FUNCTION_65	ELSE_3	IF_7
0x400090a	          0x4c89ff	                            mov rdi, r15	      2228	ui.c	FUNCTION_65	ELSE_3	IF_7	CALL_8
0x400090d	      0xe800000000	                          call 0x4000912	      2228	ui.c	FUNCTION_65	ELSE_3	IF_7	CALL_8
0x4000912	    0x41b8ff000000	                           mov r8d, 0xff	      2138	ui.c	FUNCTION_65
0x4000918	          0x4889c3	                            mov rbx, rax	      2228	ui.c	FUNCTION_65	ELSE_3	IF_7	CALL_8
0x400091b	      0xe9b2feffff	                           jmp 0x40007d2	      2228	ui.c	FUNCTION_65	ELSE_3	IF_7	CALL_8
0x4000920	    0x41c704240000	                      mov dword [r12], 0	      2224	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x4000928	      0xe9f3feffff	                           jmp 0x4000820	      2224	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x400092d	           0xf1f00	                         nop dword [rax]	      2224	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x4000930	      0xe800000000	                          call 0x4000935	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4000935	          0x4889c7	                            mov rdi, rax	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4000938	      0xe93dffffff	                           jmp 0x400087a	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x400093d	           0xf1f00	                         nop dword [rax]	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4000940	        0x4d8d7001	                       lea r14, [r8 + 1]	      2173	ui.c	FUNCTION_65	ELSE_2	IF_4
0x4000944	        0x450fb600	                    movzx r8d, byte [r8]	      2173	ui.c	FUNCTION_65	ELSE_2	IF_4
0x4000948	        0x4883eb01	                              sub rbx, 1	      2174	ui.c	FUNCTION_65	ELSE_2	IF_4
0x400094c	          0x4c89f7	                            mov rdi, r14	      2177	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_2
0x400094f	      0x448944240c	              mov dword [rsp + 0xc], r8d	      2173	ui.c	FUNCTION_65	ELSE_2	IF_4
0x4000954	      0xe800000000	                          call 0x4000959	      2177	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_2
0x4000959	    0x488b15000000	            mov rdx, qword [0x04000960] 	      2183	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_3
0x4000960	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2183	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_3
0x4000965	        0x4883c001	                              add rax, 1	      2177	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_2
0x4000969	          0x4c89f6	                            mov rsi, r14	      2183	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_3
0x400096c	        0x4d8d3c06	                    lea r15, [r14 + rax]	      2177	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_2
0x4000970	          0x4829c3	                            sub rbx, rax	      2178	ui.c	FUNCTION_65	ELSE_2	IF_4
0x4000973	    0xc74424200000	               mov dword [rsp + 0x20], 0	      2182	ui.c	FUNCTION_65	ELSE_2	IF_4
0x400097b	          0x4531f6	                          xor r14d, r14d	      2144	ui.c	FUNCTION_65
0x400097e	      0xe800000000	                          call 0x4000983	      2183	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_3
0x4000983	      0x448b442420	            mov r8d, dword [rsp + 0x20] 	      2184	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5
0x4000988	          0x4585c0	                           test r8d, r8d	      2184	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5
0x400098b	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      2184	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5
0x4000990	     0xf843cfeffff	                            je 0x40007d2	      2184	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5
0x4000996	      0x488d542414	                   lea rdx, [rsp + 0x14]	      2187	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_4
0x400099b	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2187	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_4
0x40009a0	          0x4c89fe	                            mov rsi, r15	      2187	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_4
0x40009a3	        0x895c2414	             mov dword [rsp + 0x14], ebx	      2186	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5
0x40009a7	      0xe800000000	                          call 0x40009ac	      2187	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_4
0x40009ac	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2191	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_5
0x40009b1	          0x4885c0	                           test rax, rax	      2191	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_5
0x40009b4	          0x4989c6	                            mov r14, rax	      2187	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_4
0x40009b7	        0x4c0f45f8	                         cmovne r15, rax	      2187	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_4
0x40009bb	            0x31d2	                            xor edx, edx	      2191	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_5
0x40009bd	            0x31f6	                            xor esi, esi	      2191	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_5
0x40009bf	      0x48635c2414	         movsxd rbx, dword [rsp + 0x14] 	      2188	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5
0x40009c4	      0xe800000000	                          call 0x40009c9	      2191	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_5
0x40009c9	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      2191	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_5
0x40009ce	      0xe9fffdffff	                           jmp 0x40007d2	      2191	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_5
0x40009d3	       0xf1f440000	                   nop dword [rax + rax]	      2191	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_5
0x40009d8	      0xe800000000	                          call 0x40009dd	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x40009dd	          0x4889c7	                            mov rdi, rax	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x40009e0	      0xe9fafeffff	                           jmp 0x40008df	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x40009e5	      0xe800000000	                          call 0x40009ea	      2239	ui.c	FUNCTION_65
get_input_buf	FOR,0:functions,0:IF,2:ELSE,0:CALL,4:DO,0:SWITCH,0:WHILE,0	27
0x40029e0	              0x55	                                push rbp	      1652	ui.c	FUNCTION_48
0x40029e1	              0x53	                                push rbx	      1652	ui.c	FUNCTION_48
0x40029e2	      0xbf18000000	                           mov edi, 0x18	      1656	ui.c	FUNCTION_48	CALL_1
0x40029e7	        0x4883ec08	                              sub rsp, 8	      1652	ui.c	FUNCTION_48
0x40029eb	      0xe800000000	                          call 0x40029f0	      1656	ui.c	FUNCTION_48	CALL_1
0x40029f0	          0x4885c0	                           test rax, rax	      1657	ui.c	FUNCTION_48	IF_1
0x40029f3	          0x4889c3	                            mov rbx, rax	      1656	ui.c	FUNCTION_48	CALL_1
0x40029f6	            0x7436	                            je 0x4002a2e	      1657	ui.c	FUNCTION_48	IF_1
0x40029f8	    0x8b0500000000	            mov eax, dword [0x040029fe] 	      1660	ui.c	FUNCTION_48	IF_1	CALL_2
0x40029fe	          0x8d7801	                      lea edi, [rax + 1]	      1660	ui.c	FUNCTION_48	IF_1	CALL_2
0x4002a01	      0xe800000000	                          call 0x4002a06	      1660	ui.c	FUNCTION_48	IF_1	CALL_2
0x4002a06	          0x4885c0	                           test rax, rax	      1661	ui.c	FUNCTION_48	IF_1	IF_2
0x4002a09	        0x48894310	             mov qword [rbx + 0x10], rax	      1660	ui.c	FUNCTION_48	IF_1	CALL_2
0x4002a0d	    0x8b2d00000000	            mov ebp, dword [0x04002a13] 	      1660	ui.c	FUNCTION_48	IF_1	CALL_2
0x4002a13	            0x7417	                            je 0x4002a2c	      1661	ui.c	FUNCTION_48	IF_1	IF_2
0x4002a15	    0x486315000000	         movsxd rdx, dword [0x04002a1c] 	      1662	ui.c	FUNCTION_48	IF_1	CALL_3
0x4002a1c	      0xbe00000000	                              mov esi, 0	        59	string3.h	FUNCTION_83	CALL_3
0x4002a21	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_83	CALL_3
0x4002a24	          0x4889d5	                            mov rbp, rdx	      1662	ui.c	FUNCTION_48	IF_1	CALL_3
0x4002a27	      0xe800000000	                          call 0x4002a2c	        59	string3.h	FUNCTION_83	CALL_3
0x4002a2c	            0x892b	                    mov dword [rbx], ebp	      1663	ui.c	FUNCTION_48	IF_1
0x4002a2e	    0xc70500000000	               mov dword [0x04002a38], 0	      1763	ui.c	FUNCTION_53
0x4002a38	        0x4883c408	                              add rsp, 8	      1667	ui.c	FUNCTION_48
0x4002a3c	          0x4889d8	                            mov rax, rbx	      1667	ui.c	FUNCTION_48
0x4002a3f	              0x5b	                                 pop rbx	      1667	ui.c	FUNCTION_48
0x4002a40	              0x5d	                                 pop rbp	      1667	ui.c	FUNCTION_48
0x4002a41	              0xc3	                                     ret	      1667	ui.c	FUNCTION_48
ui_set_shellsize	FOR,0:functions,0:IF,1:ELSE,1:CALL,2:DO,0:SWITCH,0:WHILE,0	8
0x4001140	    0x8b0500000000	            mov eax, dword [0x04001146] 	       368	ui.c	FUNCTION_10	IF_1
0x4001146	            0x85c0	                           test eax, eax	       368	ui.c	FUNCTION_10	IF_1
0x4001148	            0x7506	                           jne 0x4001150	       368	ui.c	FUNCTION_10	IF_1
0x400114a	      0xe900000000	                           jmp 0x400114f	       372	ui.c	FUNCTION_10	CALL_2
0x400114f	              0x90	                                     nop	       372	ui.c	FUNCTION_10	CALL_2
0x4001150	      0xba0f000000	                            mov edx, 0xf	       369	ui.c	FUNCTION_10	CALL_1
0x4001155	      0xbe01000000	                              mov esi, 1	       369	ui.c	FUNCTION_10	CALL_1
0x400115a	      0xe900000000	                           jmp 0x400115f	       369	ui.c	FUNCTION_10	CALL_1
clip_x11_lose_ownership_cb	FOR,0:functions,0:IF,1:ELSE,1:CALL,2:DO,0:SWITCH,0:WHILE,0	8
0x4001950	    0x488b05000000	            mov rax, qword [0x04001957] 	      2493	ui.c	FUNCTION_68	IF_1
0x4001957	          0x483906	                    cmp qword [rsi], rax	      2493	ui.c	FUNCTION_68	IF_1
0x400195a	            0x7414	                            je 0x4001970	      2493	ui.c	FUNCTION_68	IF_1
0x400195c	      0xbf00000000	                              mov edi, 0	      2496	ui.c	FUNCTION_68	CALL_2
0x4001961	      0xe9bafeffff	             jmp sym.clip_lose_selection	      2496	ui.c	FUNCTION_68	CALL_2
0x4001966	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2496	ui.c	FUNCTION_68	CALL_2
0x4001970	      0xbf00000000	                              mov edi, 0	      2494	ui.c	FUNCTION_68	CALL_1
0x4001975	      0xe9a6feffff	             jmp sym.clip_lose_selection	      2494	ui.c	FUNCTION_68	CALL_1
ui_breakcheck	FOR,0:functions,0:IF,0:ELSE,0:CALL,1:DO,0:SWITCH,0:WHILE,0	2
0x40011e0	            0x31ff	                            xor edi, edi	       396	ui.c	FUNCTION_12	CALL_1
0x40011e2	            0xebbc	             jmp sym.ui_breakcheck_force	       396	ui.c	FUNCTION_12	CALL_1
start_global_changes	FOR,0:functions,0:IF,2:ELSE,0:CALL,0:DO,0:SWITCH,0:WHILE,0	16
0x4001290	    0x8b0500000000	            mov eax, dword [0x04001296] 	       615	ui.c	FUNCTION_19	IF_1
0x4001296	          0x83c001	                              add eax, 1	       615	ui.c	FUNCTION_19	IF_1
0x4001299	          0x83f801	                              cmp eax, 1	       615	ui.c	FUNCTION_19	IF_1
0x400129c	    0x890500000000	            mov dword [0x040012a2], eax 	       615	ui.c	FUNCTION_19	IF_1
0x40012a2	            0x7e0c	                           jle 0x40012b0	       615	ui.c	FUNCTION_19	IF_1
0x40012a4	            0xf3c3	                                     ret	       615	ui.c	FUNCTION_19	IF_1
0x40012a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       615	ui.c	FUNCTION_19	IF_1
0x40012b0	    0x8b0500000000	            mov eax, dword [0x040012b6] 	       617	ui.c	FUNCTION_19
0x40012b6	    0xc70500000000	               mov dword [0x040012c0], 0	       618	ui.c	FUNCTION_19
0x40012c0	    0x890500000000	            mov dword [0x040012c6], eax 	       617	ui.c	FUNCTION_19
0x40012c6	    0x8b0500000000	            mov eax, dword [0x040012cc] 	       620	ui.c	FUNCTION_19	IF_2
0x40012cc	            0x85c0	                           test eax, eax	       620	ui.c	FUNCTION_19	IF_2
0x40012ce	            0x74d4	                            je 0x40012a4	       620	ui.c	FUNCTION_19	IF_2
0x40012d0	    0xc70500000000	               mov dword [0x040012da], 0	       622	ui.c	FUNCTION_19	IF_2
0x40012da	    0xc70500000000	               mov dword [0x040012e4], 0	       623	ui.c	FUNCTION_19	IF_2
0x40012e4	              0xc3	                                     ret	       623	ui.c	FUNCTION_19	IF_2
clip_x11_convert_selection_cb	FOR,0:functions,0:IF,14:ELSE,5:CALL,15:DO,0:SWITCH,0:WHILE,0	235
0x40002a0	            0x4157	                                push r15	      2355	ui.c	FUNCTION_67
0x40002a2	            0x4156	                                push r14	      2355	ui.c	FUNCTION_67
0x40002a4	            0x4155	                                push r13	      2355	ui.c	FUNCTION_67
0x40002a6	            0x4154	                                push r12	      2355	ui.c	FUNCTION_67
0x40002a8	              0x55	                                push rbp	      2355	ui.c	FUNCTION_67
0x40002a9	              0x53	                                push rbx	      2355	ui.c	FUNCTION_67
0x40002aa	      0xbb00000000	                              mov ebx, 0	      2364	ui.c	FUNCTION_67	IF_1
0x40002af	        0x4883ec58	                           sub rsp, 0x58	      2355	ui.c	FUNCTION_67
0x40002b3	    0x64488b042528	                mov rax, qword fs:[0x28]	      2355	ui.c	FUNCTION_67
0x40002bc	      0x4889442448	             mov qword [rsp + 0x48], rax	      2355	ui.c	FUNCTION_67
0x40002c1	            0x31c0	                            xor eax, eax	      2355	ui.c	FUNCTION_67
0x40002c3	    0x488b05000000	            mov rax, qword [0x040002ca] 	      2364	ui.c	FUNCTION_67	IF_1
0x40002ca	          0x483906	                    cmp qword [rsi], rax	      2364	ui.c	FUNCTION_67	IF_1
0x40002cd	      0xb800000000	                              mov eax, 0	      2364	ui.c	FUNCTION_67	IF_1
0x40002d2	    0x4c8ba4249000	            mov r12, qword [rsp + 0x90] 	      2355	ui.c	FUNCTION_67
0x40002da	        0x480f45d8	                         cmovne rbx, rax	      2364	ui.c	FUNCTION_67	IF_1
0x40002de	        0x448b5304	               mov r10d, dword [rbx + 4]	      2368	ui.c	FUNCTION_67	IF_2
0x40002e2	          0x4585d2	                         test r10d, r10d	      2368	ui.c	FUNCTION_67	IF_2
0x40002e5	            0x7459	                            je 0x4000340	      2368	ui.c	FUNCTION_67	IF_2
0x40002e7	          0x488b02	                    mov rax, qword [rdx]	      2372	ui.c	FUNCTION_67	IF_3
0x40002ea	    0x483b05000000	            cmp rax, qword [0x040002f1] 	      2372	ui.c	FUNCTION_67	IF_3
0x40002f1	          0x4989d7	                            mov r15, rdx	      2372	ui.c	FUNCTION_67	IF_3
0x40002f4	          0x4989cd	                            mov r13, rcx	      2372	ui.c	FUNCTION_67	IF_3
0x40002f7	          0x4c89c5	                             mov rbp, r8	      2372	ui.c	FUNCTION_67	IF_3
0x40002fa	          0x4d89ce	                             mov r14, r9	      2372	ui.c	FUNCTION_67	IF_3
0x40002fd	     0xf848d010000	                            je 0x4000490	      2372	ui.c	FUNCTION_67	IF_3
0x4000303	        0x4883f81f	                           cmp rax, 0x1f	      2399	ui.c	FUNCTION_67	IF_5
0x4000307	            0x746f	                            je 0x4000378	      2399	ui.c	FUNCTION_67	IF_5
0x4000309	    0x483b05000000	            cmp rax, qword [0x04000310] 	      2401	ui.c	FUNCTION_67	IF_5
0x4000310	            0x7466	                            je 0x4000378	      2401	ui.c	FUNCTION_67	IF_5
0x4000312	    0x483b05000000	            cmp rax, qword [0x04000319] 	      2402	ui.c	FUNCTION_67	IF_5
0x4000319	            0x744d	                            je 0x4000368	      2402	ui.c	FUNCTION_67	IF_5
0x400031b	    0x483b05000000	            cmp rax, qword [0x04000322] 	      2404	ui.c	FUNCTION_67	IF_5
0x4000322	            0x7454	                            je 0x4000378	      2404	ui.c	FUNCTION_67	IF_5
0x4000324	    0x483b05000000	            cmp rax, qword [0x0400032b] 	      2405	ui.c	FUNCTION_67	IF_5
0x400032b	            0x744b	                            je 0x4000378	      2405	ui.c	FUNCTION_67	IF_5
0x400032d	    0x483b05000000	            cmp rax, qword [0x04000334] 	      2406	ui.c	FUNCTION_67	IF_5
0x4000334	            0x7442	                            je 0x4000378	      2406	ui.c	FUNCTION_67	IF_5
0x4000336	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2406	ui.c	FUNCTION_67	IF_5
0x4000340	            0x31c0	                            xor eax, eax	      2431	ui.c	FUNCTION_67	ELSE_2	IF_10
0x4000342	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      2488	ui.c	FUNCTION_67
0x4000347	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      2488	ui.c	FUNCTION_67
0x4000350	     0xf85a7030000	                           jne 0x40006fd	      2488	ui.c	FUNCTION_67
0x4000356	        0x4883c458	                           add rsp, 0x58	      2488	ui.c	FUNCTION_67
0x400035a	              0x5b	                                 pop rbx	      2488	ui.c	FUNCTION_67
0x400035b	              0x5d	                                 pop rbp	      2488	ui.c	FUNCTION_67
0x400035c	            0x415c	                                 pop r12	      2488	ui.c	FUNCTION_67
0x400035e	            0x415d	                                 pop r13	      2488	ui.c	FUNCTION_67
0x4000360	            0x415e	                                 pop r14	      2488	ui.c	FUNCTION_67
0x4000362	            0x415f	                                 pop r15	      2488	ui.c	FUNCTION_67
0x4000364	              0xc3	                                     ret	      2488	ui.c	FUNCTION_67
0x4000365	           0xf1f00	                         nop dword [rax]	      2488	ui.c	FUNCTION_67
0x4000368	    0x8b3d00000000	            mov edi, dword [0x0400036e] 	      2402	ui.c	FUNCTION_67	IF_5
0x400036e	            0x85ff	                           test edi, edi	      2402	ui.c	FUNCTION_67	IF_5
0x4000370	            0x74a9	                            je 0x400031b	      2402	ui.c	FUNCTION_67	IF_5
0x4000372	    0x660f1f440000	                    nop word [rax + rax]	      2402	ui.c	FUNCTION_67	IF_5
0x4000378	          0x4889df	                            mov rdi, rbx	      2409	ui.c	FUNCTION_67	CALL_1
0x400037b	      0xe800000000	                          call 0x4000380	      2409	ui.c	FUNCTION_67	CALL_1
0x4000380	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2410	ui.c	FUNCTION_67	CALL_2
0x4000385	          0x4889da	                            mov rdx, rbx	      2410	ui.c	FUNCTION_67	CALL_2
0x4000388	          0x4c89f6	                            mov rsi, r14	      2410	ui.c	FUNCTION_67	CALL_2
0x400038b	      0xe800000000	                          call 0x4000390	      2410	ui.c	FUNCTION_67	CALL_2
0x4000390	            0x85c0	                           test eax, eax	      2411	ui.c	FUNCTION_67	IF_6
0x4000392	          0x4189c0	                            mov r8d, eax	      2410	ui.c	FUNCTION_67	CALL_2
0x4000395	            0x78a9	                            js 0x4000340	      2411	ui.c	FUNCTION_67	IF_6
0x4000397	          0x498b07	                    mov rax, qword [r15]	      2415	ui.c	FUNCTION_67	IF_7
0x400039a	    0x483b05000000	            cmp rax, qword [0x040003a1] 	      2415	ui.c	FUNCTION_67	IF_7
0x40003a1	     0xf84d1010000	                            je 0x4000578	      2415	ui.c	FUNCTION_67	IF_7
0x40003a7	          0x498b1e	                    mov rbx, qword [r14]	      2415	ui.c	FUNCTION_67	IF_7
0x40003aa	    0x483905000000	            cmp qword [0x040003b1], rax 	      2420	ui.c	FUNCTION_67	IF_8
0x40003b1	     0xf8499010000	                            je 0x4000550	      2420	ui.c	FUNCTION_67	IF_8
0x40003b7	    0x488b05000000	            mov rax, qword [0x040003be] 	      2424	ui.c	FUNCTION_67	IF_9
0x40003be	          0x4839d8	                            cmp rax, rbx	      2424	ui.c	FUNCTION_67	IF_9
0x40003c1	            0x720c	                            jb 0x40003cf	      2424	ui.c	FUNCTION_67	IF_9
0x40003c3	          0x48d1e8	                              shr rax, 1	      2424	ui.c	FUNCTION_67	IF_9
0x40003c6	          0x4839d8	                            cmp rax, rbx	      2424	ui.c	FUNCTION_67	IF_9
0x40003c9	     0xf8269010000	                            jb 0x4000538	      2424	ui.c	FUNCTION_67	IF_9
0x40003cf	    0x488b3d000000	            mov rdi, qword [0x040003d6] 	      2425	ui.c	FUNCTION_67	CALL_4
0x40003d6	          0x8d7301	                      lea esi, [rbx + 1]	      2425	ui.c	FUNCTION_67	CALL_4
0x40003d9	      0x4489442404	                mov dword [rsp + 4], r8d	      2425	ui.c	FUNCTION_67	CALL_4
0x40003de	      0xe800000000	                          call 0x40003e3	      2425	ui.c	FUNCTION_67	CALL_4
0x40003e3	      0x448b442404	                mov r8d, dword [rsp + 4]	      2425	ui.c	FUNCTION_67	CALL_4
0x40003e8	        0x48894500	                    mov qword [rbp], rax	      2425	ui.c	FUNCTION_67	CALL_4
0x40003ec	          0x4889c3	                            mov rbx, rax	      2425	ui.c	FUNCTION_67	CALL_4
0x40003ef	          0x4885db	                           test rbx, rbx	      2428	ui.c	FUNCTION_67	ELSE_2	IF_10
0x40003f2	     0xf8488020000	                            je 0x4000680	      2428	ui.c	FUNCTION_67	ELSE_2	IF_10
0x40003f8	          0x498b0f	                    mov rcx, qword [r15]	      2436	ui.c	FUNCTION_67	IF_11
0x40003fb	          0x498b16	                    mov rdx, qword [r14]	      2434	ui.c	FUNCTION_67
0x40003fe	    0x48891d000000	            mov qword [0x04000405], rbx 	      2433	ui.c	FUNCTION_67
0x4000405	        0x4883f91f	                           cmp rcx, 0x1f	      2436	ui.c	FUNCTION_67	IF_11
0x4000409	    0x488915000000	            mov qword [0x04000410], rdx 	      2434	ui.c	FUNCTION_67
0x4000410	     0xf8428020000	                            je 0x400063e	      2436	ui.c	FUNCTION_67	IF_11
0x4000416	    0x483b0d000000	            cmp rcx, qword [0x0400041d] 	      2438	ui.c	FUNCTION_67	IF_11
0x400041d	     0xf840d020000	                            je 0x4000630	      2438	ui.c	FUNCTION_67	IF_11
0x4000423	    0x483b0d000000	            cmp rcx, qword [0x0400042a] 	      2445	ui.c	FUNCTION_67	ELSE_3	IF_12
0x400042a	     0xf8460010000	                            je 0x4000590	      2445	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4000430	    0x483b0d000000	            cmp rcx, qword [0x04000437] 	      2445	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4000437	     0xf8453010000	                            je 0x4000590	      2445	ui.c	FUNCTION_67	ELSE_3	IF_12
0x400043d	    0x483b0d000000	            cmp rcx, qword [0x04000444] 	      2469	ui.c	FUNCTION_67	ELSE_4	IF_14
0x4000444	     0xf8446020000	                            je 0x4000690	      2469	ui.c	FUNCTION_67	ELSE_4	IF_14
0x400044a	          0x448803	                     mov byte [rbx], r8b	      2481	ui.c	FUNCTION_67	ELSE_5
0x400044d	          0x498b16	                    mov rdx, qword [r14]	        59	string3.h	FUNCTION_83	CALL_3
0x4000450	        0x488d7b01	                      lea rdi, [rbx + 1]	        59	string3.h	FUNCTION_83	CALL_3
0x4000454	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        59	string3.h	FUNCTION_83	CALL_3
0x4000459	        0x4883ea01	                              sub rdx, 1	        59	string3.h	FUNCTION_83	CALL_3
0x400045d	      0xe800000000	                          call 0x4000462	        59	string3.h	FUNCTION_83	CALL_3
0x4000462	    0x488b05000000	            mov rax, qword [0x04000469] 	      2483	ui.c	FUNCTION_67	ELSE_5
0x4000469	        0x49894500	                    mov qword [r13], rax	      2483	ui.c	FUNCTION_67	ELSE_5
0x400046d	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2486	ui.c	FUNCTION_67	CALL_15
0x4000472	    0x41c704240800	                      mov dword [r12], 8	      2485	ui.c	FUNCTION_67
0x400047a	      0xe800000000	                          call 0x400047f	      2486	ui.c	FUNCTION_67	CALL_15
0x400047f	      0xb801000000	                              mov eax, 1	      2487	ui.c	FUNCTION_67
0x4000484	      0xe9b9feffff	                           jmp 0x4000342	      2487	ui.c	FUNCTION_67
0x4000489	     0xf1f80000000	                         nop dword [rax]	      2487	ui.c	FUNCTION_67
0x4000490	    0x49c700000000	                       mov qword [r8], 0	      2376	ui.c	FUNCTION_67	IF_3
0x4000497	    0x488905000000	            mov qword [0x0400049e], rax 	      2378	ui.c	FUNCTION_67	IF_3
0x400049e	    0x488b05000000	            mov rax, qword [0x040004a5] 	      2380	ui.c	FUNCTION_67	IF_3
0x40004a5	    0x448b05000000	            mov r8d, dword [0x040004ac] 	      2384	ui.c	FUNCTION_67	IF_3	IF_4
0x40004ac	    0x488905000000	            mov qword [0x040004b3], rax 	      2380	ui.c	FUNCTION_67	IF_3
0x40004b3	    0x488b05000000	            mov rax, qword [0x040004ba] 	      2382	ui.c	FUNCTION_67	IF_3
0x40004ba	          0x4585c0	                           test r8d, r8d	      2384	ui.c	FUNCTION_67	IF_3	IF_4
0x40004bd	    0x488905000000	            mov qword [0x040004c4], rax 	      2382	ui.c	FUNCTION_67	IF_3
0x40004c4	     0xf8496010000	                            je 0x4000660	      2384	ui.c	FUNCTION_67	IF_3	IF_4
0x40004ca	    0x488b05000000	            mov rax, qword [0x040004d1] 	      2385	ui.c	FUNCTION_67	IF_3	IF_4
0x40004d1	      0xbe07000000	                              mov esi, 7	      2385	ui.c	FUNCTION_67	IF_3	IF_4
0x40004d6	      0xba05000000	                              mov edx, 5	      2385	ui.c	FUNCTION_67	IF_3	IF_4
0x40004db	      0xb904000000	                              mov ecx, 4	      2385	ui.c	FUNCTION_67	IF_3	IF_4
0x40004e0	    0x488905000000	            mov qword [0x040004e7], rax 	      2385	ui.c	FUNCTION_67	IF_3	IF_4
0x40004e7	      0xb806000000	                              mov eax, 6	      2385	ui.c	FUNCTION_67	IF_3	IF_4
0x40004ec	    0x48c704cd0000	                 mov qword [rcx*8], 0x1f	      2387	ui.c	FUNCTION_67	IF_3
0x40004f8	    0x488b0d000000	            mov rcx, qword [0x040004ff] 	      2388	ui.c	FUNCTION_67	IF_3
0x40004ff	    0x48890cd50000	                  mov qword [rdx*8], rcx	      2388	ui.c	FUNCTION_67	IF_3
0x4000507	    0x488b15000000	            mov rdx, qword [0x0400050e] 	      2389	ui.c	FUNCTION_67	IF_3
0x400050e	    0x488914c50000	                  mov qword [rax*8], rdx	      2389	ui.c	FUNCTION_67	IF_3
0x4000516	    0x49c745000400	                      mov qword [r13], 4	      2391	ui.c	FUNCTION_67	IF_3
0x400051e	      0xb801000000	                              mov eax, 1	      2396	ui.c	FUNCTION_67	IF_3
0x4000523	    0x41c704242000	                   mov dword [r12], 0x20	      2394	ui.c	FUNCTION_67	IF_3
0x400052b	          0x498936	                    mov qword [r14], rsi	      2395	ui.c	FUNCTION_67	IF_3
0x400052e	      0xe90ffeffff	                           jmp 0x4000342	      2396	ui.c	FUNCTION_67	IF_3
0x4000533	       0xf1f440000	                   nop dword [rax + rax]	      2396	ui.c	FUNCTION_67	IF_3
0x4000538	    0x488b1d000000	            mov rbx, qword [0x0400053f] 	      2427	ui.c	FUNCTION_67	ELSE_2
0x400053f	        0x48895d00	                    mov qword [rbp], rbx	      2427	ui.c	FUNCTION_67	ELSE_2
0x4000543	      0xe9a7feffff	                           jmp 0x40003ef	      2427	ui.c	FUNCTION_67	ELSE_2
0x4000548	     0xf1f84000000	                   nop dword [rax + rax]	      2427	ui.c	FUNCTION_67	ELSE_2
0x4000550	    0x488b3d000000	            mov rdi, qword [0x04000557] 	      2421	ui.c	FUNCTION_67	CALL_3
0x4000557	      0x4489442404	                mov dword [rsp + 4], r8d	      2421	ui.c	FUNCTION_67	CALL_3
0x400055c	      0xe800000000	                          call 0x4000561	      2421	ui.c	FUNCTION_67	CALL_3
0x4000561	      0x488d5c0302	                lea rbx, [rbx + rax + 2]	      2421	ui.c	FUNCTION_67	CALL_3
0x4000566	      0x448b442404	                mov r8d, dword [rsp + 4]	      2421	ui.c	FUNCTION_67	CALL_3
0x400056b	          0x49891e	                    mov qword [r14], rbx	      2421	ui.c	FUNCTION_67	CALL_3
0x400056e	      0xe944feffff	                           jmp 0x40003b7	      2421	ui.c	FUNCTION_67	CALL_3
0x4000573	       0xf1f440000	                   nop dword [rax + rax]	      2421	ui.c	FUNCTION_67	CALL_3
0x4000578	          0x498b06	                    mov rax, qword [r14]	      2416	ui.c	FUNCTION_67	IF_7
0x400057b	        0x488d5801	                      lea rbx, [rax + 1]	      2416	ui.c	FUNCTION_67	IF_7
0x400057f	          0x49891e	                    mov qword [r14], rbx	      2416	ui.c	FUNCTION_67	IF_7
0x4000582	          0x498b07	                    mov rax, qword [r15]	      2416	ui.c	FUNCTION_67	IF_7
0x4000585	      0xe920feffff	                           jmp 0x40003aa	      2416	ui.c	FUNCTION_67	IF_7
0x400058a	    0x660f1f440000	                    nop word [rax + rax]	      2416	ui.c	FUNCTION_67	IF_7
0x4000590	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        59	string3.h	FUNCTION_83	CALL_3
0x4000595	          0x4889df	                            mov rdi, rbx	        59	string3.h	FUNCTION_83	CALL_3
0x4000598	      0x48895c2418	             mov qword [rsp + 0x18], rbx	      2448	ui.c	FUNCTION_67	ELSE_3	IF_12
0x400059d	      0xe800000000	                          call 0x40005a2	        59	string3.h	FUNCTION_83	CALL_3
0x40005a2	          0x498b06	                    mov rax, qword [r14]	      2453	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40005a5	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      2453	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40005aa	        0xc6040200	                 mov byte [rdx + rax], 0	      2453	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40005ae	    0x8b0500000000	            mov eax, dword [0x040005b4] 	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x40005b4	    0x488b3d000000	            mov rdi, qword [0x040005bb] 	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x40005bb	            0x85c0	                           test eax, eax	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x40005bd	     0xf852d010000	                           jne 0x40006f0	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x40005c3	      0x4c8d442420	                    lea r8, [rsp + 0x20]	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x40005c8	      0x488d742418	                   lea rsi, [rsp + 0x18]	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x40005cd	      0xb901000000	                              mov ecx, 1	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x40005d2	      0xba01000000	                              mov edx, 1	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x40005d7	      0xe800000000	                          call 0x40005dc	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x40005dc	            0x85c0	                           test eax, eax	      2456	ui.c	FUNCTION_67	ELSE_3	IF_12	IF_13
0x40005de	     0xf859c000000	                           jne 0x4000680	      2456	ui.c	FUNCTION_67	ELSE_3	IF_12	IF_13
0x40005e4	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2461	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40005e9	    0x488b3d000000	            mov rdi, qword [0x040005f0] 	      2464	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_10
0x40005f0	        0x48894500	                    mov qword [rbp], rax	      2461	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40005f4	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2462	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40005f9	          0x498906	                    mov qword [r14], rax	      2462	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40005fc	    0x488b05000000	            mov rax, qword [0x04000603] 	      2463	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4000603	        0x49894500	                    mov qword [r13], rax	      2463	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4000607	      0xe800000000	                          call 0x400060c	      2464	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_10
0x400060c	        0x488b4500	                    mov rax, qword [rbp]	      2465	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4000610	    0x488905000000	            mov qword [0x04000617], rax 	      2465	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4000617	          0x498b06	                    mov rax, qword [r14]	      2466	ui.c	FUNCTION_67	ELSE_3	IF_12
0x400061a	    0x488905000000	            mov qword [0x04000621], rax 	      2466	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4000621	      0xe947feffff	                           jmp 0x400046d	      2446	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4000626	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2446	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4000630	    0x8b3500000000	            mov esi, dword [0x04000636] 	      2438	ui.c	FUNCTION_67	IF_11
0x4000636	            0x85f6	                           test esi, esi	      2438	ui.c	FUNCTION_67	IF_11
0x4000638	     0xf84e5fdffff	                            je 0x4000423	      2438	ui.c	FUNCTION_67	IF_11
0x400063e	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        59	string3.h	FUNCTION_83	CALL_3
0x4000643	          0x4889df	                            mov rdi, rbx	        59	string3.h	FUNCTION_83	CALL_3
0x4000646	      0xe800000000	                          call 0x400064b	        59	string3.h	FUNCTION_83	CALL_3
0x400064b	          0x498b07	                    mov rax, qword [r15]	      2443	ui.c	FUNCTION_67	IF_11
0x400064e	        0x49894500	                    mov qword [r13], rax	      2443	ui.c	FUNCTION_67	IF_11
0x4000652	      0xe916feffff	                           jmp 0x400046d	      2443	ui.c	FUNCTION_67	IF_11
0x4000657	    0x660f1f840000	                    nop word [rax + rax]	      2443	ui.c	FUNCTION_67	IF_11
0x4000660	      0xbe06000000	                              mov esi, 6	      2443	ui.c	FUNCTION_67	IF_11
0x4000665	      0xb805000000	                              mov eax, 5	      2443	ui.c	FUNCTION_67	IF_11
0x400066a	      0xba04000000	                              mov edx, 4	      2443	ui.c	FUNCTION_67	IF_11
0x400066f	      0xb903000000	                              mov ecx, 3	      2382	ui.c	FUNCTION_67	IF_3
0x4000674	      0xe973feffff	                           jmp 0x40004ec	      2382	ui.c	FUNCTION_67	IF_3
0x4000679	     0xf1f80000000	                         nop dword [rax]	      2382	ui.c	FUNCTION_67	IF_3
0x4000680	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2430	ui.c	FUNCTION_67	ELSE_2	IF_10	CALL_5
0x4000685	      0xe800000000	                          call 0x400068a	      2430	ui.c	FUNCTION_67	ELSE_2	IF_10	CALL_5
0x400068a	      0xe9b1fcffff	                           jmp 0x4000340	      2430	ui.c	FUNCTION_67	ELSE_2	IF_10	CALL_5
0x400068f	              0x90	                                     nop	      2430	ui.c	FUNCTION_67	ELSE_2	IF_10	CALL_5
0x4000690	    0x488b3d000000	            mov rdi, qword [0x04000697] 	      2471	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_11
0x4000697	      0x48894c2408	                mov qword [rsp + 8], rcx	      2471	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_11
0x400069c	      0x4489442404	                mov dword [rsp + 4], r8d	      2471	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_11
0x40006a1	      0xe800000000	                          call 0x40006a6	      2471	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_11
0x40006a6	      0x448b442404	                mov r8d, dword [rsp + 4]	      2473	ui.c	FUNCTION_67	ELSE_4	IF_14
0x40006ab	        0x488d7b01	                      lea rdi, [rbx + 1]	       110	string3.h	FUNCTION_88	CALL_3
0x40006af	          0x4889c5	                            mov rbp, rax	      2471	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_11
0x40006b2	          0x4863ed	                         movsxd rbp, ebp	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x40006b5	          0x448803	                     mov byte [rbx], r8b	      2473	ui.c	FUNCTION_67	ELSE_4	IF_14
0x40006b8	    0x488b35000000	            mov rsi, qword [0x040006bf] 	       110	string3.h	FUNCTION_88	CALL_3
0x40006bf	      0xe800000000	                          call 0x40006c4	       110	string3.h	FUNCTION_88	CALL_3
0x40006c4	          0x498b16	                    mov rdx, qword [r14]	        59	string3.h	FUNCTION_83	CALL_3
0x40006c7	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        59	string3.h	FUNCTION_83	CALL_3
0x40006cc	      0x488d7c2b02	                lea rdi, [rbx + rbp + 2]	        59	string3.h	FUNCTION_83	CALL_3
0x40006d1	        0x4883ea02	                              sub rdx, 2	        59	string3.h	FUNCTION_83	CALL_3
0x40006d5	          0x4829ea	                            sub rdx, rbp	        59	string3.h	FUNCTION_83	CALL_3
0x40006d8	      0xe800000000	                          call 0x40006dd	        59	string3.h	FUNCTION_83	CALL_3
0x40006dd	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2476	ui.c	FUNCTION_67	ELSE_4	IF_14
0x40006e2	        0x49894d00	                    mov qword [r13], rcx	      2476	ui.c	FUNCTION_67	ELSE_4	IF_14
0x40006e6	      0xe982fdffff	                           jmp 0x400046d	      2476	ui.c	FUNCTION_67	ELSE_4	IF_14
0x40006eb	       0xf1f440000	                   nop dword [rax + rax]	      2476	ui.c	FUNCTION_67	ELSE_4	IF_14
0x40006f0	      0xe800000000	                          call 0x40006f5	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x40006f5	          0x4889c7	                            mov rdi, rax	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x40006f8	      0xe9c6feffff	                           jmp 0x40005c3	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x40006fd	      0xe800000000	                          call 0x4000702	      2488	ui.c	FUNCTION_67
clip_gen_lose_selection	FOR,0:functions,0:IF,1:ELSE,1:CALL,3:DO,0:SWITCH,0:WHILE,0	6
0x4001800	    0x8b0500000000	            mov eax, dword [0x04001806] 	      1510	ui.c	FUNCTION_40	IF_1
0x4001806	            0x85c0	                           test eax, eax	      1510	ui.c	FUNCTION_40	IF_1
0x4001808	            0x7506	                           jne 0x4001810	      1510	ui.c	FUNCTION_40	IF_1
0x400180a	      0xe900000000	                           jmp 0x400180f	      1514	ui.c	FUNCTION_40	CALL_2
0x400180f	              0x90	                                     nop	      1514	ui.c	FUNCTION_40	CALL_2
0x4001810	      0xe900000000	                           jmp 0x4001815	      1511	ui.c	FUNCTION_40	CALL_1
clip_copy_modeless_selection	FOR,4:functions,0:IF,24:ELSE,9:CALL,15:DO,0:SWITCH,0:WHILE,0	339
0x4001d60	            0x4157	                                push r15	      1206	ui.c	FUNCTION_35
0x4001d62	            0x4156	                                push r14	      1206	ui.c	FUNCTION_35
0x4001d64	            0x4155	                                push r13	      1206	ui.c	FUNCTION_35
0x4001d66	            0x4154	                                push r12	      1206	ui.c	FUNCTION_35
0x4001d68	              0x55	                                push rbp	      1206	ui.c	FUNCTION_35
0x4001d69	              0x53	                                push rbx	      1206	ui.c	FUNCTION_35
0x4001d6a	        0x4883ec48	                           sub rsp, 0x48	      1206	ui.c	FUNCTION_35
0x4001d6e	    0x8b3500000000	            mov esi, dword [0x04001d74] 	      1221	ui.c	FUNCTION_35
0x4001d74	    0x488b0d000000	            mov rcx, qword [0x04001d7b] 	      1218	ui.c	FUNCTION_35
0x4001d7b	    0x8b0500000000	            mov eax, dword [0x04001d81] 	      1219	ui.c	FUNCTION_35
0x4001d81	    0x488b15000000	            mov rdx, qword [0x04001d88] 	      1220	ui.c	FUNCTION_35
0x4001d88	            0x89f3	                            mov ebx, esi	      1221	ui.c	FUNCTION_35
0x4001d8a	        0x89742420	             mov dword [rsp + 0x20], esi	      1221	ui.c	FUNCTION_35
0x4001d8e	    0x488b35000000	            mov rsi, qword [0x04001d95] 	      1224	ui.c	FUNCTION_35	IF_1
0x4001d95	        0x894c2408	                mov dword [rsp + 8], ecx	      1218	ui.c	FUNCTION_35
0x4001d99	        0x89442438	             mov dword [rsp + 0x38], eax	      1219	ui.c	FUNCTION_35
0x4001d9d	        0x8954240c	              mov dword [rsp + 0xc], edx	      1220	ui.c	FUNCTION_35
0x4001da1	          0x4885f6	                           test rsi, rsi	      1224	ui.c	FUNCTION_35	IF_1
0x4001da4	     0xf8405050000	                            je 0x40022af	      1224	ui.c	FUNCTION_35	IF_1
0x4001daa	            0x39d1	                            cmp ecx, edx	      1230	ui.c	FUNCTION_35	IF_2
0x4001dac	     0xf8ec6030000	                           jle 0x4002178	      1230	ui.c	FUNCTION_35	IF_2
0x4001db2	      0x48635c240c	          movsxd rbx, dword [rsp + 0xc] 	      1241	ui.c	FUNCTION_35
0x4001db7	    0x448b0d000000	            mov r9d, dword [0x04001dbe] 	      1242	ui.c	FUNCTION_35	IF_4
0x4001dbe	        0x897c2434	             mov dword [rsp + 0x34], edi	      1242	ui.c	FUNCTION_35	IF_4
0x4001dc2	          0x4585c9	                           test r9d, r9d	      1242	ui.c	FUNCTION_35	IF_4
0x4001dc5	    0x488d049d0000	                        lea rax, [rbx*4]	      1241	ui.c	FUNCTION_35
0x4001dcd	      0x4889442418	             mov qword [rsp + 0x18], rax	      1241	ui.c	FUNCTION_35
0x4001dd2	    0x488b05000000	            mov rax, qword [0x04001dd9] 	      1241	ui.c	FUNCTION_35
0x4001dd9	          0x8b0498	            mov eax, dword [rax + rbx*4]	      1241	ui.c	FUNCTION_35
0x4001ddc	        0x488d3c06	                    lea rdi, [rsi + rax]	      1241	ui.c	FUNCTION_35
0x4001de0	     0xf854a040000	                           jne 0x4002230	      1242	ui.c	FUNCTION_35	IF_4
0x4001de6	    0x8b0500000000	            mov eax, dword [0x04001dec] 	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x4001dec	            0x85c0	                           test eax, eax	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x4001dee	     0xf85cc030000	                           jne 0x40021c0	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x4001df4	        0x8b7c2408	                mov edi, dword [rsp + 8]	      1249	ui.c	FUNCTION_35
0x4001df8	        0x2b7c240c	              sub edi, dword [rsp + 0xc]	      1249	ui.c	FUNCTION_35
0x4001dfc	          0x83c701	                              add edi, 1	      1249	ui.c	FUNCTION_35
0x4001dff	     0xfaf3d000000	            imul edi, dword [0x04001e06]	      1249	ui.c	FUNCTION_35
0x4001e06	          0x83c701	                              add edi, 1	      1249	ui.c	FUNCTION_35
0x4001e09	            0x85c0	                           test eax, eax	      1253	ui.c	FUNCTION_35	ELSE_3	IF_7
0x4001e0b	     0xf85cf030000	                           jne 0x40021e0	      1253	ui.c	FUNCTION_35	ELSE_3	IF_7
0x4001e11	          0x4863ff	                         movsxd rdi, edi	      1256	ui.c	FUNCTION_35	CALL_1
0x4001e14	      0xbe01000000	                              mov esi, 1	      1256	ui.c	FUNCTION_35	CALL_1
0x4001e19	      0xe800000000	                          call 0x4001e1e	      1256	ui.c	FUNCTION_35	CALL_1
0x4001e1e	          0x4885c0	                           test rax, rax	      1257	ui.c	FUNCTION_35	IF_8
0x4001e21	      0x4889442428	             mov qword [rsp + 0x28], rax	      1256	ui.c	FUNCTION_35	CALL_1
0x4001e26	     0xf8483040000	                            je 0x40022af	      1257	ui.c	FUNCTION_35	IF_8
0x4001e2c	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      1261	ui.c	FUNCTION_35	FOR_1
0x4001e30	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      1261	ui.c	FUNCTION_35	FOR_1
0x4001e34	            0x39ca	                            cmp edx, ecx	      1261	ui.c	FUNCTION_35	FOR_1
0x4001e36	     0xf8f82040000	                            jg 0x40022be	      1261	ui.c	FUNCTION_35	FOR_1
0x4001e3c	        0x488d4bff	                      lea rcx, [rbx - 1]	      1261	ui.c	FUNCTION_35	FOR_1
0x4001e40	      0x448b742420	           mov r14d, dword [rsp + 0x20] 	      1261	ui.c	FUNCTION_35	FOR_1
0x4001e45	            0x89d3	                            mov ebx, edx	      1261	ui.c	FUNCTION_35	FOR_1
0x4001e47	          0x4989c7	                            mov r15, rax	      1261	ui.c	FUNCTION_35	FOR_1
0x4001e4a	    0xc74424300000	               mov dword [rsp + 0x30], 0	      1261	ui.c	FUNCTION_35	FOR_1
0x4001e52	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      1261	ui.c	FUNCTION_35	FOR_1
0x4001e57	    0x660f1f840000	                    nop word [rax + rax]	      1261	ui.c	FUNCTION_35	FOR_1
0x4001e60	        0x395c2408	                cmp dword [rsp + 8], ebx	      1268	ui.c	FUNCTION_35	FOR_1	IF_10
0x4001e64	    0x4c8b0d000000	              mov r9, qword [0x04001e6b]	      1268	ui.c	FUNCTION_35	FOR_1	IF_10
0x4001e6b	     0xf8454040000	                            je 0x40022c5	      1268	ui.c	FUNCTION_35	FOR_1	IF_10
0x4001e71	      0x44894c2404	                mov dword [rsp + 4], r9d	      1271	ui.c	FUNCTION_35	FOR_1	ELSE_5
0x4001e76	    0x448b05000000	            mov r8d, dword [0x04001e7d] 	      1451	ui.c	FUNCTION_37	IF_1
0x4001e7d	            0x31c0	                            xor eax, eax	      1452	ui.c	FUNCTION_37	IF_1
0x4001e7f	          0x4139d8	                            cmp r8d, ebx	      1451	ui.c	FUNCTION_37	IF_1
0x4001e82	            0x7e07	                           jle 0x4001e8b	      1451	ui.c	FUNCTION_37	IF_1
0x4001e84	            0x89df	                            mov edi, ebx	      1451	ui.c	FUNCTION_37	IF_1
0x4001e86	      0xe865ebffff	       call sym.clip_get_line_end.part.0	      1451	ui.c	FUNCTION_37	IF_1
0x4001e8b	      0x4863742404	            movsxd rsi, dword [rsp + 4] 	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x4001e90	          0x4c39ce	                             cmp rsi, r9	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x4001e93	            0x7c12	                            jl 0x4001ea7	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x4001e95	        0x395c2408	                cmp dword [rsp + 8], ebx	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x4001e99	     0xf8f41010000	                            jg 0x4001fe0	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x4001e9f	            0x39c6	                            cmp esi, eax	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x4001ea1	     0xf8f39010000	                            jg 0x4001fe0	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x4001ea7	        0x395c240c	              cmp dword [rsp + 0xc], ebx	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x4001eab	            0x7d21	                           jge 0x4001ece	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x4001ead	    0x488b05000000	            mov rax, qword [0x04001eb4] 	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x4001eb4	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x4001eb9	        0x803c3000	                 cmp byte [rax + rsi], 0	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x4001ebd	            0x750f	                           jne 0x4001ece	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x4001ebf	        0x41c6070a	                     mov byte [r15], 0xa	      1290	ui.c	FUNCTION_35	FOR_1	IF_14
0x4001ec3	    0x448b05000000	            mov r8d, dword [0x04001eca] 	      1290	ui.c	FUNCTION_35	FOR_1	IF_14
0x4001eca	        0x4983c701	                              add r15, 1	      1290	ui.c	FUNCTION_35	FOR_1	IF_14
0x4001ece	          0x4439c3	                            cmp ebx, r8d	      1292	ui.c	FUNCTION_35	FOR_1	IF_15
0x4001ed1	     0xf8db9000000	                           jge 0x4001f90	      1292	ui.c	FUNCTION_35	FOR_1	IF_15
0x4001ed7	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      1292	ui.c	FUNCTION_35	FOR_1	IF_15
0x4001edb	    0x3b0d00000000	            cmp ecx, dword [0x04001ee1] 	      1292	ui.c	FUNCTION_35	FOR_1	IF_15
0x4001ee1	     0xf8fa9000000	                            jg 0x4001f90	      1292	ui.c	FUNCTION_35	FOR_1	IF_15
0x4001ee7	    0x8b0500000000	            mov eax, dword [0x04001eed] 	      1295	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x4001eed	            0x85c0	                           test eax, eax	      1295	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x4001eef	     0xf8413010000	                            je 0x4002008	      1295	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x4001ef5	    0x488b35000000	            mov rsi, qword [0x04001efc] 	      1299	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x4001efc	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1299	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x4001f01	          0x8b3c16	              mov edi, dword [rsi + rdx]	      1299	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x4001f04	    0x48033d000000	             add rdi, qword [0x04001f0b]	      1299	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x4001f0b	          0x4139ce	                           cmp r14d, ecx	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4001f0e	            0x7c34	                            jl 0x4001f44	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4001f10	            0xeb7e	                           jmp 0x4001f90	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4001f12	    0x660f1f440000	                    nop word [rax + rax]	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4001f18	          0x4801f8	                            add rax, rdi	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4001f1b	           0xfb610	                   movzx edx, byte [rax]	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4001f1e	          0x418817	                      mov byte [r15], dl	      1309	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6
0x4001f21	           0xfb600	                   movzx eax, byte [rax]	      1310	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18	CALL_3
0x4001f24	    0x80b800000000	                       cmp byte [rax], 2	      1310	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18	CALL_3
0x4001f2b	     0xf848f000000	                            je 0x4001fc0	      1310	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18	CALL_3
0x4001f31	        0x4983c701	                              add r15, 1	      1309	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6
0x4001f35	        0x4183c601	                             add r14d, 1	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4001f39	          0x4439f1	                           cmp ecx, r14d	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4001f3c	            0x7e52	                           jle 0x4001f90	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4001f3e	    0x8b0500000000	            mov eax, dword [0x04001f44] 	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4001f44	      0x3dcc260000	                         cmp eax, 0x26cc	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001f49	          0x4963c6	                        movsxd rax, r14d	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001f4c	            0x75ca	                           jne 0x4001f18	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001f4e	          0x4801f8	                            add rax, rdi	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001f51	           0xfb610	                   movzx edx, byte [rax]	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001f54	          0x80fa8e	                            cmp dl, 0x8e	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001f57	            0x75c5	                           jne 0x4001f1e	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001f59	          0x418817	                      mov byte [r15], dl	      1304	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001f5c	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001f61	          0x4489f2	                           mov edx, r14d	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001f64	    0x488b05000000	            mov rax, qword [0x04001f6b] 	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001f6b	        0x4183c601	                             add r14d, 1	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4001f6f	        0x4983c702	                              add r15, 2	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001f73	           0x31430	              add edx, dword [rax + rsi]	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001f76	          0x4889d0	                            mov rax, rdx	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001f79	    0x488b15000000	            mov rdx, qword [0x04001f80] 	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001f80	         0xfb60402	             movzx eax, byte [rdx + rax]	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001f84	        0x418847ff	                  mov byte [r15 - 1], al	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001f88	          0x4439f1	                           cmp ecx, r14d	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4001f8b	            0x7fb1	                            jg 0x4001f3e	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4001f8d	           0xf1f00	                         nop dword [rax]	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4001f90	          0x83c301	                              add ebx, 1	      1261	ui.c	FUNCTION_35	FOR_1
0x4001f93	        0x395c2408	                cmp dword [rsp + 8], ebx	      1261	ui.c	FUNCTION_35	FOR_1
0x4001f97	     0xf8c53010000	                            jl 0x40020f0	      1261	ui.c	FUNCTION_35	FOR_1
0x4001f9d	        0x395c240c	              cmp dword [rsp + 0xc], ebx	      1266	ui.c	FUNCTION_35	FOR_1	ELSE_4
0x4001fa1	      0xba00000000	                              mov edx, 0	      1266	ui.c	FUNCTION_35	FOR_1	ELSE_4
0x4001fa6	       0xf44542420	           cmove edx, dword [rsp + 0x20]	      1266	ui.c	FUNCTION_35	FOR_1	ELSE_4
0x4001fab	    0x488344241804	               add qword [rsp + 0x18], 4	      1266	ui.c	FUNCTION_35	FOR_1	ELSE_4
0x4001fb1	    0x488344241001	               add qword [rsp + 0x10], 1	      1266	ui.c	FUNCTION_35	FOR_1	ELSE_4
0x4001fb7	          0x4189d6	                           mov r14d, edx	      1266	ui.c	FUNCTION_35	FOR_1	ELSE_4
0x4001fba	      0xe9a1feffff	                           jmp 0x4001e60	      1266	ui.c	FUNCTION_35	FOR_1	ELSE_4
0x4001fbf	              0x90	                                     nop	      1266	ui.c	FUNCTION_35	FOR_1	ELSE_4
0x4001fc0	        0x4183c601	                             add r14d, 1	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x4001fc4	        0x4983c702	                              add r15, 2	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x4001fc8	          0x4963c6	                        movsxd rax, r14d	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x4001fcb	         0xfb60407	             movzx eax, byte [rdi + rax]	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x4001fcf	        0x418847ff	                  mov byte [r15 - 1], al	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x4001fd3	      0xe95dffffff	                           jmp 0x4001f35	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x4001fd8	     0xf1f84000000	                   nop dword [rax + rax]	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x4001fe0	          0x4139c6	                           cmp r14d, eax	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x4001fe3	        0x410f4dc6	                        cmovge eax, r14d	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x4001fe7	        0x395c2408	                cmp dword [rsp + 8], ebx	      1285	ui.c	FUNCTION_35	FOR_1	IF_11	IF_13
0x4001feb	        0x89442404	                mov dword [rsp + 4], eax	      1285	ui.c	FUNCTION_35	FOR_1	IF_11	IF_13
0x4001fef	      0xb801000000	                              mov eax, 1	      1285	ui.c	FUNCTION_35	FOR_1	IF_11	IF_13
0x4001ff4	       0xf45442430	          cmovne eax, dword [rsp + 0x30]	      1285	ui.c	FUNCTION_35	FOR_1	IF_11	IF_13
0x4001ff9	        0x89442430	             mov dword [rsp + 0x30], eax	      1285	ui.c	FUNCTION_35	FOR_1	IF_11	IF_13
0x4001ffd	      0xe9a5feffff	                           jmp 0x4001ea7	      1285	ui.c	FUNCTION_35	FOR_1	IF_11	IF_13
0x4002002	    0x660f1f440000	                    nop word [rax + rax]	      1285	ui.c	FUNCTION_35	FOR_1	IF_11	IF_13
0x4002008	    0x8b3500000000	            mov esi, dword [0x0400200e] 	      1314	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x400200e	            0x85f6	                           test esi, esi	      1314	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x4002010	     0xf84da010000	                            je 0x40021f0	      1314	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x4002016	    0x488b05000000	            mov rax, qword [0x0400201d] 	      1320	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x400201d	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1320	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x4002022	      0x443b742404	               cmp r14d, dword [rsp + 4]	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x4002027	          0x8b0408	              mov eax, dword [rax + rcx]	      1320	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x400202a	        0x89442424	             mov dword [rsp + 0x24], eax	      1320	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x400202e	     0xf8d5cffffff	                           jge 0x4001f90	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x4002034	        0x895c243c	             mov dword [rsp + 0x3c], ebx	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x4002038	            0xeb34	                           jmp 0x400206e	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x400203a	    0x660f1f440000	                    nop word [rax + rax]	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x4002040	    0x488b05000000	            mov rax, qword [0x04002047] 	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4002047	        0x4983c701	                              add r15, 1	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x400204b	         0xfb60428	             movzx eax, byte [rax + rbp]	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x400204f	        0x418847ff	                  mov byte [r15 - 1], al	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4002053	    0x488b05000000	            mov rax, qword [0x0400205a] 	      1340	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_22
0x400205a	      0x807c280101	            cmp byte [rax + rbp + 1], 1 	      1341	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_22
0x400205f	        0x4183d601	                             adc r14d, 1	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x4002063	      0x4439742404	               cmp dword [rsp + 4], r14d	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x4002068	     0xf8efa000000	                           jle 0x4002168	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x400206e	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4002072	        0x428d2c30	                    lea ebp, [rax + r14]	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4002076	    0x488b05000000	            mov rax, qword [0x0400207d] 	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x400207d	          0x4863ed	                         movsxd rbp, ebp	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4002080	          0x8b3ca8	            mov edi, dword [rax + rbp*4]	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4002083	    0x4c8d24ad0000	                        lea r12, [rbp*4]	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x400208b	            0x85ff	                           test edi, edi	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x400208d	            0x74b1	                            je 0x4002040	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x400208f	          0x4c89fe	                            mov rsi, r15	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x4002092	      0xe800000000	                          call 0x4002097	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x4002097	    0x8b0d00000000	            mov ecx, dword [0x0400209d] 	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x400209d	            0x4898	                                    cdqe	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x400209f	          0x4901c7	                            add r15, rax	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x40020a2	            0x85c9	                           test ecx, ecx	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x40020a4	            0x7ead	                           jle 0x4002053	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x40020a6	    0x488b05000000	            mov rax, qword [0x040020ad] 	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x40020ad	          0x4531ed	                          xor r13d, r13d	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x40020b0	      0xbb00000000	                              mov ebx, 0	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x40020b5	          0x8b3ca8	            mov edi, dword [rax + rbp*4]	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x40020b8	            0x85ff	                           test edi, edi	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x40020ba	            0x7513	                           jne 0x40020cf	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x40020bc	            0xeb95	                           jmp 0x4002053	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x40020be	            0x6690	                                     nop	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x40020c0	          0x488b03	                    mov rax, qword [rbx]	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x40020c3	        0x4883c308	                              add rbx, 8	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x40020c7	        0x428b3c20	              mov edi, dword [rax + r12]	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x40020cb	            0x85ff	                           test edi, edi	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x40020cd	            0x7484	                            je 0x4002053	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x40020cf	          0x4c89fe	                            mov rsi, r15	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x40020d2	        0x4183c501	                             add r13d, 1	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x40020d6	      0xe800000000	                          call 0x40020db	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x40020db	            0x4898	                                    cdqe	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x40020dd	          0x4901c7	                            add r15, rax	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x40020e0	    0x44392d000000	           cmp dword [0x040020e7], r13d 	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x40020e7	            0x7fd7	                            jg 0x40020c0	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x40020e9	      0xe965ffffff	                           jmp 0x4002053	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x40020ee	            0x6690	                                     nop	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x40020f0	        0x8b542430	            mov edx, dword [rsp + 0x30] 	      1355	ui.c	FUNCTION_35	IF_23
0x40020f4	            0x85d2	                           test edx, edx	      1355	ui.c	FUNCTION_35	IF_23
0x40020f6	     0xf84b4000000	                            je 0x40021b0	      1355	ui.c	FUNCTION_35	IF_23
0x40020fc	        0x498d4f01	                      lea rcx, [r15 + 1]	      1355	ui.c	FUNCTION_35	IF_23
0x4002100	      0x482b4c2428	             sub rcx, qword [rsp + 0x28]	      1355	ui.c	FUNCTION_35	IF_23
0x4002105	        0x41c6070a	                     mov byte [r15], 0xa	      1356	ui.c	FUNCTION_35	IF_23
0x4002109	          0x4889cb	                            mov rbx, rcx	      1356	ui.c	FUNCTION_35	IF_23
0x400210c	      0xbf00000000	                              mov edi, 0	      1359	ui.c	FUNCTION_35	CALL_7
0x4002111	      0xe800000000	                          call 0x4002116	      1359	ui.c	FUNCTION_35	CALL_7
0x4002116	      0xbf00000000	                              mov edi, 0	      1360	ui.c	FUNCTION_35	CALL_8
0x400211b	      0xe800000000	                          call 0x4002120	      1360	ui.c	FUNCTION_35	CALL_8
0x4002120	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      1363	ui.c	FUNCTION_35	CALL_9
0x4002125	            0x31ff	                            xor edi, edi	      1363	ui.c	FUNCTION_35	CALL_9
0x4002127	      0xb900000000	                              mov ecx, 0	      1363	ui.c	FUNCTION_35	CALL_9
0x400212c	          0x4889da	                            mov rdx, rbx	      1363	ui.c	FUNCTION_35	CALL_9
0x400212f	      0xe800000000	                          call 0x4002134	      1363	ui.c	FUNCTION_35	CALL_9
0x4002134	      0xbf00000000	                              mov edi, 0	      1366	ui.c	FUNCTION_35	CALL_10
0x4002139	      0xe800000000	                          call 0x400213e	      1366	ui.c	FUNCTION_35	CALL_10
0x400213e	        0x8b442434	            mov eax, dword [rsp + 0x34] 	      1369	ui.c	FUNCTION_35	IF_24
0x4002142	            0x85c0	                           test eax, eax	      1369	ui.c	FUNCTION_35	IF_24
0x4002144	     0xf852e010000	                           jne 0x4002278	      1369	ui.c	FUNCTION_35	IF_24
0x400214a	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1378	ui.c	FUNCTION_35	CALL_15
0x400214f	        0x4883c448	                           add rsp, 0x48	      1379	ui.c	FUNCTION_35
0x4002153	              0x5b	                                 pop rbx	      1379	ui.c	FUNCTION_35
0x4002154	              0x5d	                                 pop rbp	      1379	ui.c	FUNCTION_35
0x4002155	            0x415c	                                 pop r12	      1379	ui.c	FUNCTION_35
0x4002157	            0x415d	                                 pop r13	      1379	ui.c	FUNCTION_35
0x4002159	            0x415e	                                 pop r14	      1379	ui.c	FUNCTION_35
0x400215b	            0x415f	                                 pop r15	      1379	ui.c	FUNCTION_35
0x400215d	      0xe900000000	                           jmp 0x4002162	      1378	ui.c	FUNCTION_35	CALL_15
0x4002162	    0x660f1f440000	                    nop word [rax + rax]	      1378	ui.c	FUNCTION_35	CALL_15
0x4002168	        0x8b5c243c	            mov ebx, dword [rsp + 0x3c] 	      1378	ui.c	FUNCTION_35	CALL_15
0x400216c	      0xe91ffeffff	                           jmp 0x4001f90	      1378	ui.c	FUNCTION_35	CALL_15
0x4002171	     0xf1f80000000	                         nop dword [rax]	      1378	ui.c	FUNCTION_35	CALL_15
0x4002178	            0x7510	                           jne 0x400218a	      1235	ui.c	FUNCTION_35	ELSE_1	IF_3
0x400217a	            0x39d8	                            cmp eax, ebx	      1235	ui.c	FUNCTION_35	ELSE_1	IF_3
0x400217c	        0x894c240c	              mov dword [rsp + 0xc], ecx	      1235	ui.c	FUNCTION_35	ELSE_1	IF_3
0x4002180	        0x89542408	                mov dword [rsp + 8], edx	      1235	ui.c	FUNCTION_35	ELSE_1	IF_3
0x4002184	     0xf8f28fcffff	                            jg 0x4001db2	      1235	ui.c	FUNCTION_35	ELSE_1	IF_3
0x400218a	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      1235	ui.c	FUNCTION_35	ELSE_1	IF_3
0x400218e	        0x8b5c2438	            mov ebx, dword [rsp + 0x38] 	      1219	ui.c	FUNCTION_35
0x4002192	        0x894c240c	              mov dword [rsp + 0xc], ecx	      1235	ui.c	FUNCTION_35	ELSE_1	IF_3
0x4002196	        0x89542408	                mov dword [rsp + 8], edx	      1235	ui.c	FUNCTION_35	ELSE_1	IF_3
0x400219a	        0x895c2420	             mov dword [rsp + 0x20], ebx	      1219	ui.c	FUNCTION_35
0x400219e	        0x89442438	             mov dword [rsp + 0x38], eax	      1221	ui.c	FUNCTION_35
0x40021a2	      0xe90bfcffff	                           jmp 0x4001db2	      1221	ui.c	FUNCTION_35
0x40021a7	    0x660f1f840000	                    nop word [rax + rax]	      1221	ui.c	FUNCTION_35
0x40021b0	          0x4c89fb	                            mov rbx, r15	      1221	ui.c	FUNCTION_35
0x40021b3	      0x482b5c2428	             sub rbx, qword [rsp + 0x28]	      1221	ui.c	FUNCTION_35
0x40021b8	      0xe94fffffff	                           jmp 0x400210c	      1221	ui.c	FUNCTION_35
0x40021bd	           0xf1f00	                         nop dword [rax]	      1221	ui.c	FUNCTION_35
0x40021c0	      0x4863542420	         movsxd rdx, dword [rsp + 0x20] 	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x40021c5	        0x803c1701	                 cmp byte [rdi + rdx], 1	      1245	ui.c	FUNCTION_35	ELSE_2	IF_5
0x40021c9	          0x4889d6	                            mov rsi, rdx	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x40021cc	          0x83de00	                              sbb esi, 0	      1245	ui.c	FUNCTION_35	ELSE_2	IF_5
0x40021cf	        0x89742420	             mov dword [rsp + 0x20], esi	      1245	ui.c	FUNCTION_35	ELSE_2	IF_5
0x40021d3	      0xe91cfcffff	                           jmp 0x4001df4	      1245	ui.c	FUNCTION_35	ELSE_2	IF_5
0x40021d8	     0xf1f84000000	                   nop dword [rax + rax]	      1245	ui.c	FUNCTION_35	ELSE_2	IF_5
0x40021e0	          0x8d04bf	                  lea eax, [rdi + rdi*4]	      1254	ui.c	FUNCTION_35	ELSE_3	IF_7
0x40021e3	          0x8d3c87	                  lea edi, [rdi + rax*4]	      1254	ui.c	FUNCTION_35	ELSE_3	IF_7
0x40021e6	      0xe926fcffff	                           jmp 0x4001e11	      1254	ui.c	FUNCTION_35	ELSE_3	IF_7
0x40021eb	       0xf1f440000	                   nop dword [rax + rax]	      1254	ui.c	FUNCTION_35	ELSE_3	IF_7
0x40021f0	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       126	string3.h	FUNCTION_90	CALL_3
0x40021f5	    0x488b05000000	            mov rax, qword [0x040021fc] 	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x40021fc	          0x4c89ff	                            mov rdi, r15	       126	string3.h	FUNCTION_90	CALL_3
0x40021ff	      0x448b642404	               mov r12d, dword [rsp + 4]	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x4002204	          0x8b3410	              mov esi, dword [rax + rdx]	       126	string3.h	FUNCTION_90	CALL_3
0x4002207	          0x4963d6	                        movsxd rdx, r14d	       126	string3.h	FUNCTION_90	CALL_3
0x400220a	          0x4529f4	                          sub r12d, r14d	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x400220d	          0x4963ec	                        movsxd rbp, r12d	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x4002210	          0x4901ef	                            add r15, rbp	      1349	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9
0x4002213	          0x4801d6	                            add rsi, rdx	       126	string3.h	FUNCTION_90	CALL_3
0x4002216	    0x480335000000	             add rsi, qword [0x0400221d]	       126	string3.h	FUNCTION_90	CALL_3
0x400221d	          0x4889ea	                            mov rdx, rbp	       126	string3.h	FUNCTION_90	CALL_3
0x4002220	      0xe800000000	                          call 0x4002225	       126	string3.h	FUNCTION_90	CALL_3
0x4002225	      0xe966fdffff	                           jmp 0x4001f90	       126	string3.h	FUNCTION_90	CALL_3
0x400222a	    0x660f1f440000	                    nop word [rax + rax]	       126	string3.h	FUNCTION_90	CALL_3
0x4002230	      0x448b742420	           mov r14d, dword [rsp + 0x20] 	      1243	ui.c	FUNCTION_35	IF_4
0x4002235	          0x4963f6	                        movsxd rsi, r14d	      1243	ui.c	FUNCTION_35	IF_4
0x4002238	          0x4801fe	                            add rsi, rdi	      1243	ui.c	FUNCTION_35	IF_4
0x400223b	    0xff1500000000	                 call qword [0x04002241]	      1243	ui.c	FUNCTION_35	IF_4
0x4002241	        0x8b7c2408	                mov edi, dword [rsp + 8]	      1249	ui.c	FUNCTION_35
0x4002245	        0x2b7c240c	              sub edi, dword [rsp + 0xc]	      1249	ui.c	FUNCTION_35
0x4002249	          0x4489f2	                           mov edx, r14d	      1243	ui.c	FUNCTION_35	IF_4
0x400224c	    0x448b05000000	            mov r8d, dword [0x04002253] 	      1251	ui.c	FUNCTION_35	IF_6
0x4002253	            0x29c2	                            sub edx, eax	      1243	ui.c	FUNCTION_35	IF_4
0x4002255	        0x89542420	             mov dword [rsp + 0x20], edx	      1243	ui.c	FUNCTION_35	IF_4
0x4002259	          0x83c701	                              add edi, 1	      1249	ui.c	FUNCTION_35
0x400225c	     0xfaf3d000000	            imul edi, dword [0x04002263]	      1249	ui.c	FUNCTION_35
0x4002263	          0x83c701	                              add edi, 1	      1249	ui.c	FUNCTION_35
0x4002266	          0x4585c0	                           test r8d, r8d	      1251	ui.c	FUNCTION_35	IF_6
0x4002269	            0x7467	                            je 0x40022d2	      1251	ui.c	FUNCTION_35	IF_6
0x400226b	             0x1ff	                            add edi, edi	      1252	ui.c	FUNCTION_35	IF_6
0x400226d	      0xe99ffbffff	                           jmp 0x4001e11	      1252	ui.c	FUNCTION_35	IF_6
0x4002272	    0x660f1f440000	                    nop word [rax + rax]	      1252	ui.c	FUNCTION_35	IF_6
0x4002278	      0xbf00000000	                              mov edi, 0	      1372	ui.c	FUNCTION_35	IF_24	CALL_11
0x400227d	      0xe800000000	                          call 0x4002282	      1372	ui.c	FUNCTION_35	IF_24	CALL_11
0x4002282	      0xbf00000000	                              mov edi, 0	      1373	ui.c	FUNCTION_35	IF_24	CALL_12
0x4002287	      0xe800000000	                          call 0x400228c	      1373	ui.c	FUNCTION_35	IF_24	CALL_12
0x400228c	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      1374	ui.c	FUNCTION_35	IF_24	CALL_13
0x4002291	            0x31ff	                            xor edi, edi	      1374	ui.c	FUNCTION_35	IF_24	CALL_13
0x4002293	      0xb900000000	                              mov ecx, 0	      1374	ui.c	FUNCTION_35	IF_24	CALL_13
0x4002298	          0x4889da	                            mov rdx, rbx	      1374	ui.c	FUNCTION_35	IF_24	CALL_13
0x400229b	      0xe800000000	                          call 0x40022a0	      1374	ui.c	FUNCTION_35	IF_24	CALL_13
0x40022a0	      0xbf00000000	                              mov edi, 0	      1375	ui.c	FUNCTION_35	IF_24	CALL_14
0x40022a5	      0xe800000000	                          call 0x40022aa	      1375	ui.c	FUNCTION_35	IF_24	CALL_14
0x40022aa	      0xe99bfeffff	                           jmp 0x400214a	      1375	ui.c	FUNCTION_35	IF_24	CALL_14
0x40022af	        0x4883c448	                           add rsp, 0x48	      1379	ui.c	FUNCTION_35
0x40022b3	              0x5b	                                 pop rbx	      1379	ui.c	FUNCTION_35
0x40022b4	              0x5d	                                 pop rbp	      1379	ui.c	FUNCTION_35
0x40022b5	            0x415c	                                 pop r12	      1379	ui.c	FUNCTION_35
0x40022b7	            0x415d	                                 pop r13	      1379	ui.c	FUNCTION_35
0x40022b9	            0x415e	                                 pop r14	      1379	ui.c	FUNCTION_35
0x40022bb	            0x415f	                                 pop r15	      1379	ui.c	FUNCTION_35
0x40022bd	              0xc3	                                     ret	      1379	ui.c	FUNCTION_35
0x40022be	            0x31db	                            xor ebx, ebx	      1261	ui.c	FUNCTION_35	FOR_1
0x40022c0	      0xe947feffff	                           jmp 0x400210c	      1261	ui.c	FUNCTION_35	FOR_1
0x40022c5	        0x8b442438	            mov eax, dword [rsp + 0x38] 	      1269	ui.c	FUNCTION_35	FOR_1	IF_10
0x40022c9	        0x89442404	                mov dword [rsp + 4], eax	      1269	ui.c	FUNCTION_35	FOR_1	IF_10
0x40022cd	      0xe9a4fbffff	                           jmp 0x4001e76	      1269	ui.c	FUNCTION_35	FOR_1	IF_10
0x40022d2	    0x8b0500000000	            mov eax, dword [0x040022d8] 	      1269	ui.c	FUNCTION_35	FOR_1	IF_10
0x40022d8	      0xe92cfbffff	                           jmp 0x4001e09	      1269	ui.c	FUNCTION_35	FOR_1	IF_10
clip_x11_notify_cb	FOR,0:functions,0:IF,0:ELSE,0:CALL,0:DO,0:SWITCH,0:WHILE,0	1
0x4000040	            0xf3c3	                                     ret	      2508	ui.c	FUNCTION_70
ui_wait_for_chars_or_timer	FOR,0:functions,0:IF,6:ELSE,0:CALL,3:DO,0:SWITCH,0:WHILE,1	73
0x4000f70	        0x4883ff09	                              cmp rdi, 9	       227	ui.c	FUNCTION_4	IF_1
0x4000f74	          0x4889f0	                            mov rax, rsi	       221	ui.c	FUNCTION_4
0x4000f77	     0xf86a3000000	                           jbe 0x4001020	       227	ui.c	FUNCTION_4	IF_1
0x4000f7d	            0x4157	                                push r15	       221	ui.c	FUNCTION_4
0x4000f7f	            0x4156	                                push r14	       221	ui.c	FUNCTION_4
0x4000f81	          0x4889f8	                            mov rax, rdi	       221	ui.c	FUNCTION_4
0x4000f84	            0x4155	                                push r13	       221	ui.c	FUNCTION_4
0x4000f86	            0x4154	                                push r12	       221	ui.c	FUNCTION_4
0x4000f88	        0x48c1e83f	                           shr rax, 0x3f	       221	ui.c	FUNCTION_4
0x4000f8c	              0x55	                                push rbp	       221	ui.c	FUNCTION_4
0x4000f8d	              0x53	                                push rbx	       221	ui.c	FUNCTION_4
0x4000f8e	          0x4989f4	                            mov r12, rsi	       221	ui.c	FUNCTION_4
0x4000f91	          0x4889d3	                            mov rbx, rdx	       221	ui.c	FUNCTION_4
0x4000f94	          0x4889fd	                            mov rbp, rdi	       221	ui.c	FUNCTION_4
0x4000f97	          0x4989ff	                            mov r15, rdi	       224	ui.c	FUNCTION_4
0x4000f9a	        0x4883ec28	                           sub rsp, 0x28	       221	ui.c	FUNCTION_4
0x4000f9e	    0x448b35000000	           mov r14d, dword [0x04000fa5] 	       224	ui.c	FUNCTION_4
0x4000fa5	        0x894c240c	              mov dword [rsp + 0xc], ecx	       224	ui.c	FUNCTION_4
0x4000fa9	      0x4889442410	             mov qword [rsp + 0x10], rax	       224	ui.c	FUNCTION_4
0x4000fae	            0xeb4b	                           jmp 0x4000ffb	       224	ui.c	FUNCTION_4
0x4000fb0	      0xe800000000	                          call 0x4000fb5	       234	ui.c	FUNCTION_4	WHILE_1	CALL_2
0x4000fb5	    0x443b35000000	           cmp r14d, dword [0x04000fbc] 	       235	ui.c	FUNCTION_4	WHILE_1	IF_2
0x4000fbc	            0x7549	                           jne 0x4001007	       235	ui.c	FUNCTION_4	WHILE_1	IF_2
0x4000fbe	            0x85c0	                           test eax, eax	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4000fc0	            0x7e0d	                           jle 0x4000fcf	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4000fc2	          0x4885ed	                           test rbp, rbp	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4000fc5	          0x4c63e8	                         movsxd r13, eax	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4000fc8	            0x7e08	                           jle 0x4000fd2	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4000fca	          0x4d39ef	                            cmp r15, r13	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4000fcd	            0x7d03	                           jge 0x4000fd2	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4000fcf	          0x4d63ef	                        movsxd r13, r15d	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4000fd2	        0x8b54240c	              mov edx, dword [rsp + 0xc]	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x4000fd6	          0x4889de	                            mov rsi, rbx	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x4000fd9	          0x4c89ef	                            mov rdi, r13	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x4000fdc	          0x41ffd4	                                call r12	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x4000fdf	            0x85c0	                           test eax, eax	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x4000fe1	            0x754d	                           jne 0x4001030	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x4000fe3	          0x4885db	                           test rbx, rbx	       244	ui.c	FUNCTION_4	WHILE_1	IF_5
0x4000fe6	            0x7406	                            je 0x4000fee	       244	ui.c	FUNCTION_4	WHILE_1	IF_5
0x4000fe8	            0x8b03	                    mov eax, dword [rbx]	       244	ui.c	FUNCTION_4	WHILE_1	IF_5
0x4000fea	            0x85c0	                           test eax, eax	       244	ui.c	FUNCTION_4	WHILE_1	IF_5
0x4000fec	            0x7519	                           jne 0x4001007	       244	ui.c	FUNCTION_4	WHILE_1	IF_5
0x4000fee	          0x4c89f8	                            mov rax, r15	       249	ui.c	FUNCTION_4	WHILE_1	IF_6
0x4000ff1	          0x4c29e8	                            sub rax, r13	       249	ui.c	FUNCTION_4	WHILE_1	IF_6
0x4000ff4	          0x4885ed	                           test rbp, rbp	       249	ui.c	FUNCTION_4	WHILE_1	IF_6
0x4000ff7	        0x4c0f4ff8	                          cmovg r15, rax	       249	ui.c	FUNCTION_4	WHILE_1	IF_6
0x4000ffb	          0x4d85ff	                           test r15, r15	       230	ui.c	FUNCTION_4	WHILE_1
0x4000ffe	            0x7fb0	                            jg 0x4000fb0	       230	ui.c	FUNCTION_4	WHILE_1
0x4001000	      0x807c241000	                cmp byte [rsp + 0x10], 0	       230	ui.c	FUNCTION_4	WHILE_1
0x4001005	            0x75a9	                           jne 0x4000fb0	       230	ui.c	FUNCTION_4	WHILE_1
0x4001007	        0x4883c428	                           add rsp, 0x28	       252	ui.c	FUNCTION_4
0x400100b	            0x31c0	                            xor eax, eax	       238	ui.c	FUNCTION_4	WHILE_1	IF_2
0x400100d	              0x5b	                                 pop rbx	       252	ui.c	FUNCTION_4
0x400100e	              0x5d	                                 pop rbp	       252	ui.c	FUNCTION_4
0x400100f	            0x415c	                                 pop r12	       252	ui.c	FUNCTION_4
0x4001011	            0x415d	                                 pop r13	       252	ui.c	FUNCTION_4
0x4001013	            0x415e	                                 pop r14	       252	ui.c	FUNCTION_4
0x4001015	            0x415f	                                 pop r15	       252	ui.c	FUNCTION_4
0x4001017	              0xc3	                                     ret	       252	ui.c	FUNCTION_4
0x4001018	     0xf1f84000000	                   nop dword [rax + rax]	       252	ui.c	FUNCTION_4
0x4001020	            0x89ca	                            mov edx, ecx	       228	ui.c	FUNCTION_4	CALL_1
0x4001022	            0x31f6	                            xor esi, esi	       228	ui.c	FUNCTION_4	CALL_1
0x4001024	            0xffe0	                                 jmp rax	       228	ui.c	FUNCTION_4	CALL_1
0x4001026	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       228	ui.c	FUNCTION_4	CALL_1
0x4001030	        0x4883c428	                           add rsp, 0x28	       252	ui.c	FUNCTION_4
0x4001034	      0xb801000000	                              mov eax, 1	       243	ui.c	FUNCTION_4	WHILE_1	IF_4
0x4001039	              0x5b	                                 pop rbx	       252	ui.c	FUNCTION_4
0x400103a	              0x5d	                                 pop rbp	       252	ui.c	FUNCTION_4
0x400103b	            0x415c	                                 pop r12	       252	ui.c	FUNCTION_4
0x400103d	            0x415d	                                 pop r13	       252	ui.c	FUNCTION_4
0x400103f	            0x415e	                                 pop r14	       252	ui.c	FUNCTION_4
0x4001041	            0x415f	                                 pop r15	       252	ui.c	FUNCTION_4
0x4001043	              0xc3	                                     ret	       252	ui.c	FUNCTION_4
clip_init	FOR,1:functions,0:IF,1:ELSE,0:CALL,0:DO,0:SWITCH,0:WHILE,0	20
0x40011f0	      0xb800000000	                              mov eax, 0	       462	ui.c	FUNCTION_14	FOR_1	IF_1
0x40011f5	            0x31d2	                            xor edx, edx	       460	ui.c	FUNCTION_14	FOR_1
0x40011f7	    0x893d00000000	            mov dword [0x040011fd], edi 	       454	ui.c	FUNCTION_14	FOR_1
0x40011fd	    0x483d00000000	                              cmp rax, 0	       462	ui.c	FUNCTION_14	FOR_1	IF_1
0x4001203	    0xc70500000000	               mov dword [0x0400120d], 0	       455	ui.c	FUNCTION_14	FOR_1
0x400120d	    0x48c705000000	               mov qword [0x04001218], 0	       456	ui.c	FUNCTION_14	FOR_1
0x4001218	    0xc70500000000	               mov dword [0x04001222], 0	       457	ui.c	FUNCTION_14	FOR_1
0x4001222	    0x48c705000000	               mov qword [0x0400122d], 0	       458	ui.c	FUNCTION_14	FOR_1
0x400122d	    0xc70500000000	               mov dword [0x04001237], 0	       459	ui.c	FUNCTION_14	FOR_1
0x4001237	    0x668915000000	               mov word [0x0400123e], dx	       460	ui.c	FUNCTION_14	FOR_1
0x400123e	            0x7443	                            je 0x4001283	       462	ui.c	FUNCTION_14	FOR_1	IF_1
0x4001240	            0x31c0	                            xor eax, eax	       460	ui.c	FUNCTION_14	FOR_1
0x4001242	    0x893d00000000	            mov dword [0x04001248], edi 	       454	ui.c	FUNCTION_14	FOR_1
0x4001248	    0xc70500000000	               mov dword [0x04001252], 0	       455	ui.c	FUNCTION_14	FOR_1
0x4001252	    0x48c705000000	               mov qword [0x0400125d], 0	       456	ui.c	FUNCTION_14	FOR_1
0x400125d	    0xc70500000000	               mov dword [0x04001267], 0	       457	ui.c	FUNCTION_14	FOR_1
0x4001267	    0x48c705000000	               mov qword [0x04001272], 0	       458	ui.c	FUNCTION_14	FOR_1
0x4001272	    0xc70500000000	               mov dword [0x0400127c], 0	       459	ui.c	FUNCTION_14	FOR_1
0x400127c	    0x668905000000	               mov word [0x04001283], ax	       460	ui.c	FUNCTION_14	FOR_1
0x4001283	              0xc3	                                     ret	       460	ui.c	FUNCTION_14	FOR_1
clip_gen_request_selection	FOR,0:functions,0:IF,1:ELSE,1:CALL,3:DO,0:SWITCH,0:WHILE,0	6
0x4002990	    0x8b0500000000	            mov eax, dword [0x04002996] 	      1551	ui.c	FUNCTION_42	IF_1
0x4002996	            0x85c0	                           test eax, eax	      1551	ui.c	FUNCTION_42	IF_1
0x4002998	            0x7506	                           jne 0x40029a0	      1551	ui.c	FUNCTION_42	IF_1
0x400299a	      0xe900000000	                           jmp 0x400299f	      1555	ui.c	FUNCTION_42	CALL_2
0x400299f	              0x90	                                     nop	      1555	ui.c	FUNCTION_42	CALL_2
0x40029a0	      0xe900000000	                           jmp 0x40029a5	      1552	ui.c	FUNCTION_42	CALL_1
clip_process_selection	FOR,0:functions,0:IF,20:ELSE,6:CALL,28:DO,0:SWITCH,1:WHILE,0	332
0x40022e0	          0x83ff03	                              cmp edi, 3	       864	ui.c	FUNCTION_28	IF_1
0x40022e3	            0x4156	                                push r14	       859	ui.c	FUNCTION_28
0x40022e5	            0x4155	                                push r13	       859	ui.c	FUNCTION_28
0x40022e7	            0x4154	                                push r12	       859	ui.c	FUNCTION_28
0x40022e9	              0x55	                                push rbp	       859	ui.c	FUNCTION_28
0x40022ea	              0x53	                                push rbx	       859	ui.c	FUNCTION_28
0x40022eb	     0xf845f010000	                            je 0x4002450	       864	ui.c	FUNCTION_28	IF_1
0x40022f1	            0x85d2	                           test edx, edx	      2006	ui.c	FUNCTION_60	IF_1
0x40022f3	          0x4189fd	                           mov r13d, edi	      2006	ui.c	FUNCTION_60	IF_1
0x40022f6	          0x4189ce	                           mov r14d, ecx	      2006	ui.c	FUNCTION_60	IF_1
0x40022f9	     0xf8871020000	                            js 0x4002570	      2006	ui.c	FUNCTION_60	IF_1
0x40022ff	    0x8b1d00000000	            mov ebx, dword [0x04002305] 	      2008	ui.c	FUNCTION_60	IF_2
0x4002305	            0x39da	                            cmp edx, ebx	      2008	ui.c	FUNCTION_60	IF_2
0x4002307	     0xf8d03010000	                           jge 0x4002410	      2008	ui.c	FUNCTION_60	IF_2
0x400230d	          0x4863ea	                         movsxd rbp, edx	      2008	ui.c	FUNCTION_60	IF_2
0x4002310	            0x89d3	                            mov ebx, edx	      2008	ui.c	FUNCTION_60	IF_2
0x4002312	            0x31ff	                            xor edi, edi	      1994	ui.c	FUNCTION_59	IF_1
0x4002314	            0x85f6	                           test esi, esi	      1993	ui.c	FUNCTION_59	IF_1
0x4002316	            0x780e	                            js 0x4002326	      1993	ui.c	FUNCTION_59	IF_1
0x4002318	    0x8b0500000000	            mov eax, dword [0x0400231e] 	      1995	ui.c	FUNCTION_59	IF_2
0x400231e	          0x8d78ff	                      lea edi, [rax - 1]	      1996	ui.c	FUNCTION_59	IF_2
0x4002321	            0x39f0	                            cmp eax, esi	      1996	ui.c	FUNCTION_59	IF_2
0x4002323	           0xf4ffe	                          cmovg edi, esi	      1996	ui.c	FUNCTION_59	IF_2
0x4002326	            0x89de	                            mov esi, ebx	       900	ui.c	FUNCTION_28	CALL_9
0x4002328	      0xe800000000	                          call 0x400232d	       900	ui.c	FUNCTION_28	CALL_9
0x400232d	    0x3b0500000000	            cmp eax, dword [0x04002333] 	       903	ui.c	FUNCTION_28	IF_6
0x4002333	          0x4189c4	                           mov r12d, eax	       900	ui.c	FUNCTION_28	CALL_9
0x4002336	     0xf8484010000	                            je 0x40024c0	       903	ui.c	FUNCTION_28	IF_6
0x400233c	    0x66833d000000	                cmp word [0x04002344], 2	       910	ui.c	FUNCTION_28	IF_7
0x4002344	            0x750a	                           jne 0x4002350	       910	ui.c	FUNCTION_28	IF_7
0x4002346	        0x4183fd02	                             cmp r13d, 2	       910	ui.c	FUNCTION_28	IF_7
0x400234a	     0xf8450030000	                            je 0x40026a0	       910	ui.c	FUNCTION_28	IF_7
0x4002350	     0xfb705000000	           movzx eax, word [0x04002357] 	       910	ui.c	FUNCTION_28	IF_7
0x4002357	    0x41ba01000000	                             mov r10d, 1	       942	ui.c	FUNCTION_28
0x400235d	          0x4585f6	                         test r14d, r14d	       948	ui.c	FUNCTION_28	IF_10
0x4002360	    0x664489150000	            mov word [0x04002368], r10w 	       942	ui.c	FUNCTION_28
0x4002368	     0xf84b2000000	                            je 0x4002420	       948	ui.c	FUNCTION_28	IF_10
0x400236e	          0x83c001	                              add eax, 1	       948	ui.c	FUNCTION_28	IF_10
0x4002371	        0x6683f802	                               cmp ax, 2	       948	ui.c	FUNCTION_28	IF_10
0x4002375	     0xf8665010000	                           jbe 0x40024e0	       948	ui.c	FUNCTION_28	IF_10
0x400237b	          0x4531c9	                            xor r9d, r9d	       949	ui.c	FUNCTION_28	IF_10
0x400237e	    0x6644890d0000	              mov word [0x04002386], r9w	       949	ui.c	FUNCTION_28	IF_10
0x4002386	    0x48392d000000	            cmp qword [0x0400238d], rbp 	       955	ui.c	FUNCTION_28	SWITCH_1	IF_11
0x400238d	            0x7418	                            je 0x40023a7	       955	ui.c	FUNCTION_28	SWITCH_1	IF_11
0x400238f	            0x31c0	                            xor eax, eax	      1451	ui.c	FUNCTION_37	IF_1
0x4002391	    0x3b1d00000000	            cmp ebx, dword [0x04002397] 	      1451	ui.c	FUNCTION_37	IF_1
0x4002397	            0x7d07	                           jge 0x40023a0	      1451	ui.c	FUNCTION_37	IF_1
0x4002399	            0x89df	                            mov edi, ebx	      1451	ui.c	FUNCTION_37	IF_1
0x400239b	      0xe850e6ffff	       call sym.clip_get_line_end.part.0	      1451	ui.c	FUNCTION_37	IF_1
0x40023a0	    0x668905000000	               mov word [0x040023a7], ax	       956	ui.c	FUNCTION_28	SWITCH_1	CALL_13
0x40023a7	     0xfb73d000000	           movzx edi, word [0x040023ae] 	       959	ui.c	FUNCTION_28	SWITCH_1	IF_12	CALL_14
0x40023ae	     0xfb735000000	           movzx esi, word [0x040023b5] 	       959	ui.c	FUNCTION_28	SWITCH_1	IF_12	CALL_14
0x40023b5	            0x39df	                            cmp edi, ebx	       773	ui.c	FUNCTION_26	IF_1
0x40023b7	     0xf8c2b020000	                            jl 0x40025e8	       773	ui.c	FUNCTION_26	IF_1
0x40023bd	     0xf8e15020000	                           jle 0x40025d8	       774	ui.c	FUNCTION_26	IF_2
0x40023c3	    0x8b0500000000	            mov eax, dword [0x040023c9] 	       978	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15
0x40023c9	            0x85c0	                           test eax, eax	       978	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15
0x40023cb	     0xf858f030000	                           jne 0x4002760	       978	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15
0x40023d1	      0xb901000000	                              mov ecx, 1	       862	ui.c	FUNCTION_28
0x40023d6	     0xfb705000000	           movzx eax, word [0x040023dd] 	       982	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16
0x40023dd	             0x1f1	                            add ecx, esi	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x40023df	            0x89fa	                            mov edx, edi	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x40023e1	          0x4139c4	                           cmp r12d, eax	       982	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16
0x40023e4	     0xf8c66040000	                            jl 0x4002850	       982	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16
0x40023ea	            0x89c6	                            mov esi, eax	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x40023ec	            0x89df	                            mov edi, ebx	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x40023ee	      0xe82de7ffff	call sym.clip_update_modeless_selection.constprop.12	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x40023f3	       0xf1f440000	                   nop dword [rax + rax]	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x40023f8	    0x48892d000000	            mov qword [0x040023ff], rbp 	      1024	ui.c	FUNCTION_28
0x40023ff	    0x448925000000	           mov dword [0x04002406], r12d 	      1025	ui.c	FUNCTION_28
0x4002406	              0x5b	                                 pop rbx	      1031	ui.c	FUNCTION_28
0x4002407	              0x5d	                                 pop rbp	      1031	ui.c	FUNCTION_28
0x4002408	            0x415c	                                 pop r12	      1031	ui.c	FUNCTION_28
0x400240a	            0x415d	                                 pop r13	      1031	ui.c	FUNCTION_28
0x400240c	            0x415e	                                 pop r14	      1031	ui.c	FUNCTION_28
0x400240e	              0xc3	                                     ret	      1031	ui.c	FUNCTION_28
0x400240f	              0x90	                                     nop	      1031	ui.c	FUNCTION_28
0x4002410	          0x83eb01	                              sub ebx, 1	      2009	ui.c	FUNCTION_60	IF_2
0x4002413	          0x4863eb	                         movsxd rbp, ebx	      2009	ui.c	FUNCTION_60	IF_2
0x4002416	      0xe9f7feffff	                           jmp 0x4002312	      2009	ui.c	FUNCTION_60	IF_2
0x400241b	       0xf1f440000	                   nop dword [rax + rax]	      2009	ui.c	FUNCTION_60	IF_2
0x4002420	        0x6683f801	                               cmp ax, 1	       951	ui.c	FUNCTION_28	SWITCH_1
0x4002424	     0xf8456010000	                            je 0x4002580	       951	ui.c	FUNCTION_28	SWITCH_1
0x400242a	     0xf8256ffffff	                            jb 0x4002386	       951	ui.c	FUNCTION_28	SWITCH_1
0x4002430	        0x6683f802	                               cmp ax, 2	       951	ui.c	FUNCTION_28	SWITCH_1
0x4002434	            0x75c2	                           jne 0x40023f8	       951	ui.c	FUNCTION_28	SWITCH_1
0x4002436	    0x48392d000000	            cmp qword [0x0400243d], rbp 	      1011	ui.c	FUNCTION_28	SWITCH_1	IF_19
0x400243d	     0xf85b8000000	                           jne 0x40024fb	      1011	ui.c	FUNCTION_28	SWITCH_1	IF_19
0x4002443	          0x4585f6	                         test r14d, r14d	      1011	ui.c	FUNCTION_28	SWITCH_1	IF_19
0x4002446	            0x74be	                            je 0x4002406	      1011	ui.c	FUNCTION_28	SWITCH_1	IF_19
0x4002448	      0xe9ae000000	                           jmp 0x40024fb	      1011	ui.c	FUNCTION_28	SWITCH_1	IF_19
0x400244d	           0xf1f00	                         nop dword [rax]	      1011	ui.c	FUNCTION_28	SWITCH_1	IF_19
0x4002450	    0x488b05000000	            mov rax, qword [0x04002457] 	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x4002457	    0x483905000000	            cmp qword [0x0400245e], rax 	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x400245e	     0xf8404020000	                            je 0x4002668	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x4002464	    0x8b0500000000	            mov eax, dword [0x0400246a] 	       691	ui.c	FUNCTION_23	CALL_1
0x400246a	            0x85c0	                           test eax, eax	       691	ui.c	FUNCTION_23	CALL_1
0x400246c	     0xf85be000000	                           jne 0x4002530	       691	ui.c	FUNCTION_23	CALL_1
0x4002472	    0x8b0500000000	            mov eax, dword [0x04002478] 	       881	ui.c	FUNCTION_28	IF_1	IF_4	CALL_3
0x4002478	            0x85c0	                           test eax, eax	       881	ui.c	FUNCTION_28	IF_1	IF_4	CALL_3
0x400247a	            0x750a	                           jne 0x4002486	       881	ui.c	FUNCTION_28	IF_1	IF_4	CALL_3
0x400247c	    0x8b0500000000	            mov eax, dword [0x04002482] 	       882	ui.c	FUNCTION_28	IF_1	IF_4
0x4002482	            0x85c0	                           test eax, eax	       882	ui.c	FUNCTION_28	IF_1	IF_4
0x4002484	            0x741a	                            je 0x40024a0	       882	ui.c	FUNCTION_28	IF_1	IF_4
0x4002486	            0x31ff	                            xor edi, edi	       887	ui.c	FUNCTION_28	IF_1	CALL_5
0x4002488	      0xe800000000	                          call 0x400248d	       887	ui.c	FUNCTION_28	IF_1	CALL_5
0x400248d	    0x8b0500000000	            mov eax, dword [0x04002493] 	       889	ui.c	FUNCTION_28	IF_1	IF_5
0x4002493	            0x85c0	                           test eax, eax	       889	ui.c	FUNCTION_28	IF_1	IF_5
0x4002495	            0x7409	                            je 0x40024a0	       889	ui.c	FUNCTION_28	IF_1	IF_5
0x4002497	            0x31f6	                            xor esi, esi	       890	ui.c	FUNCTION_28	IF_1	CALL_6
0x4002499	            0x31ff	                            xor edi, edi	       890	ui.c	FUNCTION_28	IF_1	CALL_6
0x400249b	      0xe800000000	                          call 0x40024a0	       890	ui.c	FUNCTION_28	IF_1	CALL_6
0x40024a0	    0x41be02000000	                             mov r14d, 2	       893	ui.c	FUNCTION_28	IF_1
0x40024a6	              0x5b	                                 pop rbx	      1031	ui.c	FUNCTION_28
0x40024a7	    0x664489350000	            mov word [0x040024af], r14w 	       893	ui.c	FUNCTION_28	IF_1
0x40024af	              0x5d	                                 pop rbp	      1031	ui.c	FUNCTION_28
0x40024b0	            0x415c	                                 pop r12	      1031	ui.c	FUNCTION_28
0x40024b2	            0x415d	                                 pop r13	      1031	ui.c	FUNCTION_28
0x40024b4	            0x415e	                                 pop r14	      1031	ui.c	FUNCTION_28
0x40024b6	              0xc3	                                     ret	      1031	ui.c	FUNCTION_28
0x40024b7	    0x660f1f840000	                    nop word [rax + rax]	      1031	ui.c	FUNCTION_28
0x40024c0	    0x48392d000000	            cmp qword [0x040024c7], rbp 	       903	ui.c	FUNCTION_28	IF_6
0x40024c7	     0xf856ffeffff	                           jne 0x400233c	       903	ui.c	FUNCTION_28	IF_6
0x40024cd	          0x4585f6	                         test r14d, r14d	       903	ui.c	FUNCTION_28	IF_6
0x40024d0	     0xf8430ffffff	                            je 0x4002406	       903	ui.c	FUNCTION_28	IF_6
0x40024d6	      0xe961feffff	                           jmp 0x400233c	       903	ui.c	FUNCTION_28	IF_6
0x40024db	       0xf1f440000	                   nop dword [rax + rax]	       903	ui.c	FUNCTION_28	IF_6
0x40024e0	        0x6683f801	                               cmp ax, 1	       951	ui.c	FUNCTION_28	SWITCH_1
0x40024e4	    0x668905000000	               mov word [0x040024eb], ax	       948	ui.c	FUNCTION_28	IF_10
0x40024eb	     0xf848f000000	                            je 0x4002580	       951	ui.c	FUNCTION_28	SWITCH_1
0x40024f1	        0x6683f802	                               cmp ax, 2	       951	ui.c	FUNCTION_28	SWITCH_1
0x40024f5	     0xf858bfeffff	                           jne 0x4002386	       951	ui.c	FUNCTION_28	SWITCH_1
0x40024fb	     0xfb73d000000	           movzx edi, word [0x04002502] 	      1014	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_25
0x4002502	            0x39df	                            cmp edi, ebx	       773	ui.c	FUNCTION_26	IF_1
0x4002504	     0xf8c46010000	                            jl 0x4002650	       773	ui.c	FUNCTION_26	IF_1
0x400250a	     0xfb705000000	           movzx eax, word [0x04002511] 	      1015	ui.c	FUNCTION_28	SWITCH_1	IF_20
0x4002511	     0xf8e29010000	                           jle 0x4002640	       774	ui.c	FUNCTION_26	IF_2
0x4002517	    0x8b0d00000000	            mov ecx, dword [0x0400251d] 	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x400251d	            0x89fa	                            mov edx, edi	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x400251f	            0x31f6	                            xor esi, esi	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x4002521	            0x89df	                            mov edi, ebx	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x4002523	      0xe8f8e5ffff	call sym.clip_update_modeless_selection.constprop.12	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x4002528	      0xe9cbfeffff	                           jmp 0x40023f8	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x400252d	           0xf1f00	                         nop dword [rax]	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x4002530	      0xe80be5ffff	     call sym.clip_isautosel_star.part.4	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x4002535	            0x85c0	                           test eax, eax	       881	ui.c	FUNCTION_28	IF_1	IF_4	CALL_3
0x4002537	     0xf8549ffffff	                           jne 0x4002486	       881	ui.c	FUNCTION_28	IF_1	IF_4	CALL_3
0x400253d	    0x8b0500000000	            mov eax, dword [0x04002543] 	       881	ui.c	FUNCTION_28	IF_1	IF_4	CALL_3
0x4002543	            0x85c0	                           test eax, eax	       881	ui.c	FUNCTION_28	IF_1	IF_4	CALL_3
0x4002545	     0xf8431ffffff	                            je 0x400247c	       881	ui.c	FUNCTION_28	IF_1	IF_4	CALL_3
0x400254b	    0x488b3d000000	            mov rdi, qword [0x04002552] 	       884	ui.c	FUNCTION_28	IF_1	IF_4	CALL_4
0x4002552	      0xbe41000000	                           mov esi, 0x41	       884	ui.c	FUNCTION_28	IF_1	IF_4	CALL_4
0x4002557	      0xe800000000	                          call 0x400255c	       884	ui.c	FUNCTION_28	IF_1	IF_4	CALL_4
0x400255c	          0x4885c0	                           test rax, rax	       882	ui.c	FUNCTION_28	IF_1	IF_4
0x400255f	     0xf8521ffffff	                           jne 0x4002486	       882	ui.c	FUNCTION_28	IF_1	IF_4
0x4002565	      0xe923ffffff	                           jmp 0x400248d	       882	ui.c	FUNCTION_28	IF_1	IF_4
0x400256a	    0x660f1f440000	                    nop word [rax + rax]	       882	ui.c	FUNCTION_28	IF_1	IF_4
0x4002570	            0x31ed	                            xor ebp, ebp	      2006	ui.c	FUNCTION_60	IF_1
0x4002572	            0x31db	                            xor ebx, ebx	      2007	ui.c	FUNCTION_60	IF_1
0x4002574	      0xe999fdffff	                           jmp 0x4002312	      2007	ui.c	FUNCTION_60	IF_1
0x4002579	     0xf1f80000000	                         nop dword [rax]	      2007	ui.c	FUNCTION_60	IF_1
0x4002580	    0x48392d000000	            cmp qword [0x04002587], rbp 	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x4002587	     0xf84fb010000	                            je 0x4002788	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x400258d	    0x3b1d00000000	            cmp ebx, dword [0x04002593] 	      1397	ui.c	FUNCTION_36	IF_1
0x4002593	            0x7d0d	                           jge 0x40025a2	      1397	ui.c	FUNCTION_36	IF_1
0x4002595	    0x443b25000000	           cmp r12d, dword [0x0400259c] 	      1397	ui.c	FUNCTION_36	IF_1
0x400259c	     0xf8c9e020000	                            jl 0x4002840	      1397	ui.c	FUNCTION_36	IF_1
0x40025a2	     0xfb73d000000	           movzx edi, word [0x040025a9] 	      1001	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_22
0x40025a9	     0xfb735000000	           movzx esi, word [0x040025b0] 	      1001	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_22
0x40025b0	            0x39df	                            cmp edi, ebx	       773	ui.c	FUNCTION_26	IF_1
0x40025b2	            0x7c74	                            jl 0x4002628	       773	ui.c	FUNCTION_26	IF_1
0x40025b4	            0x7e6a	                           jle 0x4002620	       774	ui.c	FUNCTION_26	IF_2
0x40025b6	     0xfb70d000000	           movzx ecx, word [0x040025bd] 	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x40025bd	     0xfb735000000	           movzx esi, word [0x040025c4] 	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x40025c4	            0x89fa	                            mov edx, edi	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x40025c6	            0x89df	                            mov edi, ebx	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x40025c8	      0xe853e5ffff	call sym.clip_update_modeless_selection.constprop.12	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x40025cd	      0xe926feffff	                           jmp 0x40023f8	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x40025d2	    0x660f1f440000	                    nop word [rax + rax]	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x40025d8	          0x4139f4	                           cmp r12d, esi	       776	ui.c	FUNCTION_26	IF_4
0x40025db	     0xf8ce2fdffff	                            jl 0x40023c3	       776	ui.c	FUNCTION_26	IF_4
0x40025e1	     0xf1f80000000	                         nop dword [rax]	       776	ui.c	FUNCTION_26	IF_4
0x40025e8	     0xfb705000000	           movzx eax, word [0x040025ef] 	       962	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13
0x40025ef	          0x4139c4	                           cmp r12d, eax	       962	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13
0x40025f2	     0xf8dc8010000	                           jge 0x40027c0	       962	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13
0x40025f8	    0x448b05000000	            mov r8d, dword [0x040025ff] 	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x40025ff	    0x41bd01000000	                             mov r13d, 1	       862	ui.c	FUNCTION_28
0x4002605	          0x4585c0	                           test r8d, r8d	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x4002608	     0xf8502020000	                           jne 0x4002810	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x400260e	      0x438d4c2500	                    lea ecx, [r13 + r12]	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x4002613	            0x89da	                            mov edx, ebx	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x4002615	      0xe806e5ffff	call sym.clip_update_modeless_selection.constprop.12	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x400261a	      0xe9d9fdffff	                           jmp 0x40023f8	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x400261f	              0x90	                                     nop	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x4002620	          0x4139f4	                           cmp r12d, esi	       776	ui.c	FUNCTION_26	IF_4
0x4002623	            0x7c91	                            jl 0x40025b6	       776	ui.c	FUNCTION_26	IF_4
0x4002625	           0xf1f00	                         nop dword [rax]	       776	ui.c	FUNCTION_26	IF_4
0x4002628	     0xfb70d000000	           movzx ecx, word [0x0400262f] 	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x400262f	            0x89da	                            mov edx, ebx	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x4002631	      0xe8eae4ffff	call sym.clip_update_modeless_selection.constprop.12	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x4002636	      0xe9bdfdffff	                           jmp 0x40023f8	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x400263b	       0xf1f440000	                   nop dword [rax + rax]	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x4002640	          0x4139c4	                           cmp r12d, eax	       776	ui.c	FUNCTION_26	IF_4
0x4002643	     0xf8ccefeffff	                            jl 0x4002517	       776	ui.c	FUNCTION_26	IF_4
0x4002649	     0xf1f80000000	                         nop dword [rax]	       776	ui.c	FUNCTION_26	IF_4
0x4002650	    0x8b0d00000000	            mov ecx, dword [0x04002656] 	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x4002656	            0x89da	                            mov edx, ebx	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x4002658	            0x31f6	                            xor esi, esi	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x400265a	      0xe8c1e4ffff	call sym.clip_update_modeless_selection.constprop.12	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x400265f	      0xe994fdffff	                           jmp 0x40023f8	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x4002664	         0xf1f4000	                         nop dword [rax]	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x4002668	    0x8b0500000000	            mov eax, dword [0x0400266e] 	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x400266e	    0x390500000000	            cmp dword [0x04002674], eax 	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x4002674	     0xf85eafdffff	                           jne 0x4002464	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x400267a	    0x8b1500000000	            mov edx, dword [0x04002680] 	       870	ui.c	FUNCTION_28	IF_1	IF_2	IF_3
0x4002680	            0x85d2	                           test edx, edx	       870	ui.c	FUNCTION_28	IF_1	IF_2	IF_3
0x4002682	            0x7409	                            je 0x400268d	       870	ui.c	FUNCTION_28	IF_1	IF_2	IF_3
0x4002684	            0x31f6	                            xor esi, esi	       871	ui.c	FUNCTION_28	IF_1	IF_2	CALL_1
0x4002686	            0x31ff	                            xor edi, edi	       871	ui.c	FUNCTION_28	IF_1	IF_2	CALL_1
0x4002688	      0xe800000000	                          call 0x400268d	       871	ui.c	FUNCTION_28	IF_1	IF_2	CALL_1
0x400268d	            0x31c0	                            xor eax, eax	       873	ui.c	FUNCTION_28	IF_1	IF_2
0x400268f	    0x668905000000	               mov word [0x04002696], ax	       873	ui.c	FUNCTION_28	IF_1	IF_2
0x4002696	      0xe96bfdffff	                           jmp 0x4002406	       874	ui.c	FUNCTION_28	IF_1	IF_2
0x400269b	       0xf1f440000	                   nop dword [rax + rax]	       874	ui.c	FUNCTION_28	IF_1	IF_2
0x40026a0	    0x488b05000000	            mov rax, qword [0x040026a7] 	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x40026a7	    0x8b0d00000000	            mov ecx, dword [0x040026ad] 	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x40026ad	            0x39d8	                            cmp eax, ebx	       773	ui.c	FUNCTION_26	IF_1
0x40026af	     0xf8d8b000000	                           jge 0x4002740	       773	ui.c	FUNCTION_26	IF_1
0x40026b5	    0x488b15000000	            mov rdx, qword [0x040026bc] 	       919	ui.c	FUNCTION_28	IF_7	IF_8
0x40026bc	    0x8b3500000000	            mov esi, dword [0x040026c2] 	       918	ui.c	FUNCTION_28	IF_7	IF_8	CALL_11
0x40026c2	            0x39da	                            cmp edx, ebx	       773	ui.c	FUNCTION_26	IF_1
0x40026c4	     0xf8c26010000	                            jl 0x40027f0	       773	ui.c	FUNCTION_26	IF_1
0x40026ca	            0x7f09	                            jg 0x40026d5	       774	ui.c	FUNCTION_26	IF_2
0x40026cc	          0x4139f4	                           cmp r12d, esi	       776	ui.c	FUNCTION_26	IF_4
0x40026cf	     0xf8d1b010000	                           jge 0x40027f0	       776	ui.c	FUNCTION_26	IF_4
0x40026d5	          0x4839d0	                            cmp rax, rdx	       920	ui.c	FUNCTION_28	IF_7	IF_8
0x40026d8	     0xf849e010000	                            je 0x400287c	       920	ui.c	FUNCTION_28	IF_7	IF_8
0x40026de	          0x8d3c02	                    lea edi, [rdx + rax]	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x40026e1	            0x29df	                            sub edi, ebx	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x40026e3	            0x29df	                            sub edi, ebx	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x40026e5	          0x83ff00	                              cmp edi, 0	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x40026e8	     0xf8ee4000000	                           jle 0x40027d2	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x40026ee	          0x8d46ff	                      lea eax, [rsi - 1]	       928	ui.c	FUNCTION_28	IF_7	IF_8
0x40026f1	    0x668915000000	               mov word [0x040026f8], dx	       927	ui.c	FUNCTION_28	IF_7	IF_8
0x40026f8	    0x668935000000	               mov word [0x040026ff], si	       929	ui.c	FUNCTION_28	IF_7	IF_8
0x40026ff	    0x668905000000	               mov word [0x04002706], ax	       928	ui.c	FUNCTION_28	IF_7	IF_8
0x4002706	     0xfb705000000	           movzx eax, word [0x0400270d] 	       937	ui.c	FUNCTION_28	IF_7	IF_9
0x400270d	        0x6683f801	                               cmp ax, 1	       937	ui.c	FUNCTION_28	IF_7	IF_9
0x4002711	     0xf8540fcffff	                           jne 0x4002357	       937	ui.c	FUNCTION_28	IF_7	IF_9
0x4002717	          0x4585f6	                         test r14d, r14d	       937	ui.c	FUNCTION_28	IF_7	IF_9
0x400271a	     0xf853f010000	                           jne 0x400285f	       937	ui.c	FUNCTION_28	IF_7	IF_9
0x4002720	          0x4531db	                          xor r11d, r11d	       938	ui.c	FUNCTION_28	IF_7	IF_9
0x4002723	    0x41bd01000000	                             mov r13d, 1	       942	ui.c	FUNCTION_28
0x4002729	    0x6644891d0000	            mov word [0x04002731], r11w 	       938	ui.c	FUNCTION_28	IF_7	IF_9
0x4002731	    0x6644892d0000	            mov word [0x04002739], r13w 	       942	ui.c	FUNCTION_28
0x4002739	      0xe948fcffff	                           jmp 0x4002386	       942	ui.c	FUNCTION_28
0x400273e	            0x6690	                                     nop	       942	ui.c	FUNCTION_28
0x4002740	            0x7f0e	                            jg 0x4002750	       774	ui.c	FUNCTION_26	IF_2
0x4002742	          0x4139cc	                           cmp r12d, ecx	       776	ui.c	FUNCTION_26	IF_4
0x4002745	     0xf8d6affffff	                           jge 0x40026b5	       776	ui.c	FUNCTION_26	IF_4
0x400274b	       0xf1f440000	                   nop dword [rax + rax]	       776	ui.c	FUNCTION_26	IF_4
0x4002750	    0x8b3500000000	            mov esi, dword [0x04002756] 	       776	ui.c	FUNCTION_26	IF_4
0x4002756	    0x488b15000000	            mov rdx, qword [0x0400275d] 	       776	ui.c	FUNCTION_26	IF_4
0x400275d	            0xeb8f	                           jmp 0x40026ee	       776	ui.c	FUNCTION_26	IF_4
0x400275f	              0x90	                                     nop	       776	ui.c	FUNCTION_26	IF_4
0x4002760	      0xe800000000	                          call 0x4002765	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x4002765	            0x85c0	                           test eax, eax	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x4002767	     0xfb735000000	           movzx esi, word [0x0400276e] 	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x400276e	     0xfb73d000000	           movzx edi, word [0x04002775] 	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x4002775	     0xf8456fcffff	                            je 0x40023d1	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x400277b	      0xb902000000	                              mov ecx, 2	       980	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15
0x4002780	      0xe951fcffff	                           jmp 0x40023d6	       980	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15
0x4002785	           0xf1f00	                         nop dword [rax]	       980	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15
0x4002788	     0xfb705000000	           movzx eax, word [0x0400278f] 	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x400278f	          0x4139c4	                           cmp r12d, eax	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x4002792	     0xf8cf5fdffff	                            jl 0x400258d	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x4002798	     0xfb705000000	           movzx eax, word [0x0400279f] 	       994	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x400279f	          0x4139c4	                           cmp r12d, eax	       994	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x40027a2	     0xf8de5fdffff	                           jge 0x400258d	       994	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x40027a8	          0x4585f6	                         test r14d, r14d	       994	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x40027ab	     0xf8455fcffff	                            je 0x4002406	       994	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x40027b1	      0xe9d7fdffff	                           jmp 0x400258d	       994	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x40027b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       994	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x40027c0	    0x8b0d00000000	            mov ecx, dword [0x040027c6] 	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x40027c6	            0x89da	                            mov edx, ebx	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x40027c8	      0xe853e3ffff	call sym.clip_update_modeless_selection.constprop.12	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x40027cd	      0xe926fcffff	                           jmp 0x40023f8	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x40027d2	            0x751c	                           jne 0x40027f0	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x40027d4	          0x8d3c31	                    lea edi, [rcx + rsi]	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x40027d7	          0x4189f8	                            mov r8d, edi	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x40027da	        0x41c1e81f	                           shr r8d, 0x1f	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x40027de	          0x4401c7	                            add edi, r8d	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x40027e1	            0xd1ff	                              sar edi, 1	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x40027e3	          0x4139fc	                           cmp r12d, edi	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x40027e6	     0xf8c02ffffff	                            jl 0x40026ee	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x40027ec	         0xf1f4000	                         nop dword [rax]	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x40027f0	    0x668905000000	               mov word [0x040027f7], ax	       933	ui.c	FUNCTION_28	IF_7	ELSE_1
0x40027f7	    0x66890d000000	               mov word [0x040027fe], cx	       934	ui.c	FUNCTION_28	IF_7	ELSE_1
0x40027fe	    0x66890d000000	               mov word [0x04002805], cx	       935	ui.c	FUNCTION_28	IF_7	ELSE_1
0x4002805	      0xe9fcfeffff	                           jmp 0x4002706	       935	ui.c	FUNCTION_28	IF_7	ELSE_1
0x400280a	    0x660f1f440000	                    nop word [rax + rax]	       935	ui.c	FUNCTION_28	IF_7	ELSE_1
0x4002810	          0x4489e6	                           mov esi, r12d	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x4002813	            0x89df	                            mov edi, ebx	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x4002815	      0xe800000000	                          call 0x400281a	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x400281a	            0x85c0	                           test eax, eax	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x400281c	     0xfb735000000	           movzx esi, word [0x04002823] 	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x4002823	     0xfb73d000000	           movzx edi, word [0x0400282a] 	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x400282a	     0xf84defdffff	                            je 0x400260e	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x4002830	    0x41bd02000000	                             mov r13d, 2	       969	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14
0x4002836	      0xe9d3fdffff	                           jmp 0x400260e	       969	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14
0x400283b	       0xf1f440000	                   nop dword [rax + rax]	       969	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14
0x4002840	          0x4489e6	                           mov esi, r12d	       969	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14
0x4002843	            0x89df	                            mov edi, ebx	       969	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14
0x4002845	      0xe876e3ffff	call sym.clip_get_word_boundaries.isra.1.part.2.constprop.13	       969	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14
0x400284a	      0xe953fdffff	                           jmp 0x40025a2	       969	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14
0x400284f	              0x90	                                     nop	       969	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14
0x4002850	          0x4489e6	                           mov esi, r12d	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x4002853	            0x89df	                            mov edi, ebx	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x4002855	      0xe8c6e2ffff	call sym.clip_update_modeless_selection.constprop.12	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x400285a	      0xe999fbffff	                           jmp 0x40023f8	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x400285f	      0xba01000000	                              mov edx, 1	       942	ui.c	FUNCTION_28
0x4002864	      0xb902000000	                              mov ecx, 2	       948	ui.c	FUNCTION_28	IF_10
0x4002869	    0x668915000000	               mov word [0x04002870], dx	       942	ui.c	FUNCTION_28
0x4002870	    0x66890d000000	               mov word [0x04002877], cx	       948	ui.c	FUNCTION_28	IF_10
0x4002877	      0xe9bafbffff	                           jmp 0x4002436	       948	ui.c	FUNCTION_28	IF_10
0x400287c	          0x4189f0	                            mov r8d, esi	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x400287f	          0x4489e7	                           mov edi, r12d	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x4002882	          0x4529e0	                           sub r8d, r12d	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x4002885	            0x29cf	                            sub edi, ecx	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x4002887	          0x4139f8	                            cmp r8d, edi	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x400288a	     0xf8f5efeffff	                            jg 0x40026ee	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x4002890	      0xe949feffff	                           jmp 0x40026de	       921	ui.c	FUNCTION_28	IF_7	IF_8
clip_x11_request_selection	FOR,1:functions,0:IF,5:ELSE,0:CALL,11:DO,0:SWITCH,1:WHILE,1	118
0x40035d0	            0x4156	                                push r14	      2246	ui.c	FUNCTION_66
0x40035d2	            0x4155	                                push r13	      2246	ui.c	FUNCTION_66
0x40035d4	          0x4989fe	                            mov r14, rdi	      2246	ui.c	FUNCTION_66
0x40035d7	            0x4154	                                push r12	      2246	ui.c	FUNCTION_66
0x40035d9	              0x55	                                push rbp	      2246	ui.c	FUNCTION_66
0x40035da	          0x4989d5	                            mov r13, rdx	      2246	ui.c	FUNCTION_66
0x40035dd	              0x53	                                push rbx	      2246	ui.c	FUNCTION_66
0x40035de	            0x31ed	                            xor ebp, ebp	      2254	ui.c	FUNCTION_66	FOR_1
0x40035e0	          0x4889f3	                            mov rbx, rsi	      2246	ui.c	FUNCTION_66
0x40035e3	    0x4881ecd00000	                           sub rsp, 0xd0	      2246	ui.c	FUNCTION_66
0x40035ea	    0x64488b042528	                mov rax, qword fs:[0x28]	      2246	ui.c	FUNCTION_66
0x40035f3	    0x48898424c800	             mov qword [rsp + 0xc8], rax	      2246	ui.c	FUNCTION_66
0x40035fb	            0x31c0	                            xor eax, eax	      2246	ui.c	FUNCTION_66
0x40035fd	          0x83fd04	                              cmp ebp, 4	      2262	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4003600	     0xf87a1010000	                            ja 0x40037a7	      2262	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4003606	            0x89e8	                            mov eax, ebp	      2262	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4003608	    0xff24c5000000	                       jmp qword [rax*8]	      2262	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x400360f	    0x8b0d00000000	            mov ecx, dword [0x04003615] 	      2278	ui.c	FUNCTION_66	FOR_1	IF_1
0x4003615	    0x488b05000000	            mov rax, qword [0x0400361c] 	      2269	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x400361c	            0x85c9	                           test ecx, ecx	      2278	ui.c	FUNCTION_66	FOR_1	IF_1
0x400361e	          0x4889c2	                            mov rdx, rax	      2269	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4003621	            0x7521	                           jne 0x4003644	      2278	ui.c	FUNCTION_66	FOR_1	IF_1
0x4003623	      0xbd03000000	                              mov ebp, 3	      2260	ui.c	FUNCTION_66	FOR_1
0x4003628	      0xe95a010000	                           jmp 0x4003787	      2260	ui.c	FUNCTION_66	FOR_1
0x400362d	    0x488b15000000	            mov rdx, qword [0x04003634] 	      2267	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4003634	    0x488b05000000	            mov rax, qword [0x0400363b] 	      2267	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x400363b	          0x4839c2	                            cmp rdx, rax	      2276	ui.c	FUNCTION_66	FOR_1	IF_1
0x400363e	     0xf841a010000	                            je 0x400375e	      2276	ui.c	FUNCTION_66	FOR_1	IF_1
0x4003644	        0x498b7550	            mov rsi, qword [r13 + 0x50] 	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x4003648	          0x4531c9	                            xor r9d, r9d	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x400364b	    0x41b800000000	                              mov r8d, 0	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x4003651	      0xb900000000	                              mov ecx, 0	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x4003656	          0x4c89f7	                            mov rdi, r14	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x4003659	    0xc70500000000	               mov dword [0x04003663], 2	      2285	ui.c	FUNCTION_66	FOR_1
0x4003663	      0xe800000000	                          call 0x4003668	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x4003668	          0x4889df	                            mov rdi, rbx	      2291	ui.c	FUNCTION_66	FOR_1	CALL_2
0x400366b	      0xe800000000	                          call 0x4003670	      2291	ui.c	FUNCTION_66	FOR_1	CALL_2
0x4003670	            0x31ff	                            xor edi, edi	      2298	ui.c	FUNCTION_66	FOR_1	CALL_3
0x4003672	      0xe800000000	                          call 0x4003677	      2298	ui.c	FUNCTION_66	FOR_1	CALL_3
0x4003677	        0x4c8d6002	                      lea r12, [rax + 2]	      2320	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_3	CALL_8
0x400367b	            0xeb0b	                           jmp 0x4003688	      2299	ui.c	FUNCTION_66	FOR_1	WHILE_1
0x400367d	           0xf1f00	                         nop dword [rax]	      2299	ui.c	FUNCTION_66	FOR_1	WHILE_1
0x4003680	          0x4889e7	                            mov rdi, rsp	      2311	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_7
0x4003683	      0xe800000000	                          call 0x4003688	      2311	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_7
0x4003688	    0x8b1500000000	            mov edx, dword [0x0400368e] 	      2299	ui.c	FUNCTION_66	FOR_1	WHILE_1
0x400368e	          0x83fa02	                              cmp edx, 2	      2299	ui.c	FUNCTION_66	FOR_1	WHILE_1
0x4003691	            0x7575	                           jne 0x4003708	      2299	ui.c	FUNCTION_66	FOR_1	WHILE_1
0x4003693	          0x4889e2	                            mov rdx, rsp	      2301	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_4
0x4003696	      0xbe1c000000	                           mov esi, 0x1c	      2301	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_4
0x400369b	          0x4889df	                            mov rdi, rbx	      2301	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_4
0x400369e	      0xe800000000	                          call 0x40036a3	      2301	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_4
0x40036a3	            0x85c0	                           test eax, eax	      2301	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_4
0x40036a5	            0x75d9	                           jne 0x4003680	      2301	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_4
0x40036a7	          0x4889e2	                            mov rdx, rsp	      2302	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_5
0x40036aa	      0xbe1f000000	                           mov esi, 0x1f	      2302	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_5
0x40036af	          0x4889df	                            mov rdi, rbx	      2302	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_5
0x40036b2	      0xe800000000	                          call 0x40036b7	      2302	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_5
0x40036b7	            0x85c0	                           test eax, eax	      2302	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_5
0x40036b9	            0x75c5	                           jne 0x4003680	      2302	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_5
0x40036bb	          0x4889e2	                            mov rdx, rsp	      2303	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_6
0x40036be	      0xbe1e000000	                           mov esi, 0x1e	      2303	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_6
0x40036c3	          0x4889df	                            mov rdi, rbx	      2303	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_6
0x40036c6	      0xe800000000	                          call 0x40036cb	      2303	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_6
0x40036cb	            0x85c0	                           test eax, eax	      2303	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_6
0x40036cd	            0x75b1	                           jne 0x4003680	      2303	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_6
0x40036cf	            0x31ff	                            xor edi, edi	      2320	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_3	CALL_8
0x40036d1	      0xe800000000	                          call 0x40036d6	      2320	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_3	CALL_8
0x40036d6	          0x4c39e0	                            cmp rax, r12	      2320	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_3	CALL_8
0x40036d9	     0xf8fb4000000	                            jg 0x4003793	      2320	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_3	CALL_8
0x40036df	            0x31f6	                            xor esi, esi	      2327	ui.c	FUNCTION_66	FOR_1	WHILE_1	CALL_9
0x40036e1	          0x4889df	                            mov rdi, rbx	      2327	ui.c	FUNCTION_66	FOR_1	WHILE_1	CALL_9
0x40036e4	      0xe800000000	                          call 0x40036e9	      2327	ui.c	FUNCTION_66	FOR_1	WHILE_1	CALL_9
0x40036e9	      0xbe01000000	                              mov esi, 1	       291	ui.c	FUNCTION_6	CALL_2
0x40036ee	      0xbf01000000	                              mov edi, 1	       291	ui.c	FUNCTION_6	CALL_2
0x40036f3	      0xe800000000	                          call 0x40036f8	       291	ui.c	FUNCTION_6	CALL_2
0x40036f8	    0x8b1500000000	            mov edx, dword [0x040036fe] 	      2299	ui.c	FUNCTION_66	FOR_1	WHILE_1
0x40036fe	          0x83fa02	                              cmp edx, 2	      2299	ui.c	FUNCTION_66	FOR_1	WHILE_1
0x4003701	            0x7490	                            je 0x4003693	      2299	ui.c	FUNCTION_66	FOR_1	WHILE_1
0x4003703	       0xf1f440000	                   nop dword [rax + rax]	      2299	ui.c	FUNCTION_66	FOR_1	WHILE_1
0x4003708	          0x83fa01	                              cmp edx, 1	      2333	ui.c	FUNCTION_66	FOR_1	IF_4
0x400370b	            0x7417	                            je 0x4003724	      2333	ui.c	FUNCTION_66	FOR_1	IF_4
0x400370d	          0x83c501	                              add ebp, 1	      2260	ui.c	FUNCTION_66	FOR_1
0x4003710	          0x83fd06	                              cmp ebp, 6	      2254	ui.c	FUNCTION_66	FOR_1
0x4003713	     0xf85e4feffff	                           jne 0x40035fd	      2254	ui.c	FUNCTION_66	FOR_1
0x4003719	          0x4c89ee	                            mov rsi, r13	      2343	ui.c	FUNCTION_66	CALL_11
0x400371c	          0x4889df	                            mov rdi, rbx	      2343	ui.c	FUNCTION_66	CALL_11
0x400371f	      0xe800000000	                          call 0x4003724	      2343	ui.c	FUNCTION_66	CALL_11
0x4003724	    0x488b8424c800	            mov rax, qword [rsp + 0xc8] 	      2344	ui.c	FUNCTION_66
0x400372c	    0x644833042528	                xor rax, qword fs:[0x28]	      2344	ui.c	FUNCTION_66
0x4003735	            0x756b	                           jne 0x40037a2	      2344	ui.c	FUNCTION_66
0x4003737	    0x4881c4d00000	                           add rsp, 0xd0	      2344	ui.c	FUNCTION_66
0x400373e	              0x5b	                                 pop rbx	      2344	ui.c	FUNCTION_66
0x400373f	              0x5d	                                 pop rbp	      2344	ui.c	FUNCTION_66
0x4003740	            0x415c	                                 pop r12	      2344	ui.c	FUNCTION_66
0x4003742	            0x415d	                                 pop r13	      2344	ui.c	FUNCTION_66
0x4003744	            0x415e	                                 pop r14	      2344	ui.c	FUNCTION_66
0x4003746	              0xc3	                                     ret	      2344	ui.c	FUNCTION_66
0x4003747	    0x488b15000000	            mov rdx, qword [0x0400374e] 	      2272	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x400374e	    0x488b05000000	            mov rax, qword [0x04003755] 	      2272	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4003755	          0x4839c2	                            cmp rdx, rax	      2276	ui.c	FUNCTION_66	FOR_1	IF_1
0x4003758	     0xf85e6feffff	                           jne 0x4003644	      2276	ui.c	FUNCTION_66	FOR_1	IF_1
0x400375e	    0x8b0500000000	            mov eax, dword [0x04003764] 	      2278	ui.c	FUNCTION_66	FOR_1	IF_1
0x4003764	            0x85c0	                           test eax, eax	      2278	ui.c	FUNCTION_66	FOR_1	IF_1
0x4003766	            0x74a5	                            je 0x400370d	      2278	ui.c	FUNCTION_66	FOR_1	IF_1
0x4003768	      0xe9d7feffff	                           jmp 0x4003644	      2278	ui.c	FUNCTION_66	FOR_1	IF_1
0x400376d	    0x488b15000000	            mov rdx, qword [0x04003774] 	      2265	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4003774	    0x488b05000000	            mov rax, qword [0x0400377b] 	      2265	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x400377b	      0xe9bbfeffff	                           jmp 0x400363b	      2265	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4003780	    0x488b05000000	            mov rax, qword [0x04003787] 	      2265	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4003787	    0x488b15000000	            mov rdx, qword [0x0400378e] 	      2271	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x400378e	      0xe9a8feffff	                           jmp 0x400363b	      2271	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4003793	    0x833d00000000	               cmp dword [0x0400379a], 1	      2333	ui.c	FUNCTION_66	FOR_1	IF_4
0x400379a	     0xf8579ffffff	                           jne 0x4003719	      2333	ui.c	FUNCTION_66	FOR_1	IF_4
0x40037a0	            0xeb82	                           jmp 0x4003724	      2333	ui.c	FUNCTION_66	FOR_1	IF_4
0x40037a2	      0xe800000000	                          call 0x40037a7	      2344	ui.c	FUNCTION_66
0x40037a7	      0xba1f000000	                           mov edx, 0x1f	      2273	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x40037ac	    0x488b05000000	            mov rax, qword [0x040037b3] 	      2273	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x40037b3	      0xe983feffff	                           jmp 0x400363b	      2273	ui.c	FUNCTION_66	FOR_1	SWITCH_1
mouse_comp_pos	FOR,0:functions,0:IF,9:ELSE,2:CALL,9:DO,0:SWITCH,0:WHILE,1	127
0x40037c0	            0x4157	                                push r15	      3077	ui.c	FUNCTION_76
0x40037c2	            0x4156	                                push r14	      3077	ui.c	FUNCTION_76
0x40037c4	          0x4989fe	                            mov r14, rdi	      3077	ui.c	FUNCTION_76
0x40037c7	            0x4155	                                push r13	      3077	ui.c	FUNCTION_76
0x40037c9	            0x4154	                                push r12	      3077	ui.c	FUNCTION_76
0x40037cb	          0x4989d5	                            mov r13, rdx	      3077	ui.c	FUNCTION_76
0x40037ce	              0x55	                                push rbp	      3077	ui.c	FUNCTION_76
0x40037cf	              0x53	                                push rbx	      3077	ui.c	FUNCTION_76
0x40037d0	          0x4989f4	                            mov r12, rsi	      3077	ui.c	FUNCTION_76
0x40037d3	        0x4883ec28	                           sub rsp, 0x28	      3077	ui.c	FUNCTION_76
0x40037d7	            0x8b2a	                    mov ebp, dword [rdx]	      3078	ui.c	FUNCTION_76
0x40037d9	            0x8b1e	                    mov ebx, dword [rsi]	      3079	ui.c	FUNCTION_76
0x40037db	      0x48894c2408	                mov qword [rsp + 8], rcx	      3077	ui.c	FUNCTION_76
0x40037e0	    0x8b8f54020000	           mov ecx, dword [rdi + 0x254] 	      3086	ui.c	FUNCTION_76	IF_1
0x40037e6	    0x64488b042528	                mov rax, qword fs:[0x28]	      3077	ui.c	FUNCTION_76
0x40037ef	      0x4889442418	             mov qword [rsp + 0x18], rax	      3077	ui.c	FUNCTION_76
0x40037f4	            0x31c0	                            xor eax, eax	      3077	ui.c	FUNCTION_76
0x40037f6	            0x85c9	                           test ecx, ecx	      3086	ui.c	FUNCTION_76	IF_1
0x40037f8	            0x7408	                            je 0x4003802	      3086	ui.c	FUNCTION_76	IF_1
0x40037fa	            0xf7d5	                                 not ebp	      3087	ui.c	FUNCTION_76	IF_1
0x40037fc	     0x3afac000000	             add ebp, dword [rdi + 0xac]	      3087	ui.c	FUNCTION_76	IF_1
0x4003802	        0x498b7678	            mov rsi, qword [r14 + 0x78] 	      3090	ui.c	FUNCTION_76
0x4003806	            0x85db	                           test ebx, ebx	      3092	ui.c	FUNCTION_76	WHILE_1
0x4003808	      0x4889742410	             mov qword [rsp + 0x10], rsi	      3090	ui.c	FUNCTION_76
0x400380d	            0x7f64	                            jg 0x4003873	      3092	ui.c	FUNCTION_76	WHILE_1
0x400380f	      0xe9bc000000	                           jmp 0x40038d0	      3092	ui.c	FUNCTION_76	WHILE_1
0x4003814	         0xf1f4000	                         nop dword [rax]	      3092	ui.c	FUNCTION_76	WHILE_1
0x4003818	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3092	ui.c	FUNCTION_76	WHILE_1
0x400381d	      0xba01000000	                              mov edx, 1	      3110	ui.c	FUNCTION_76	WHILE_1	CALL_4
0x4003822	          0x4c89f7	                            mov rdi, r14	      3110	ui.c	FUNCTION_76	WHILE_1	CALL_4
0x4003825	      0xe800000000	                          call 0x400382a	      3110	ui.c	FUNCTION_76	WHILE_1	CALL_4
0x400382a	          0x4189c7	                           mov r15d, eax	      3110	ui.c	FUNCTION_76	WHILE_1	CALL_4
0x400382d	          0x4439fb	                           cmp ebx, r15d	      3111	ui.c	FUNCTION_76	WHILE_1	IF_4
0x4003830	     0xf8c9a000000	                            jl 0x40038d0	      3111	ui.c	FUNCTION_76	WHILE_1	IF_4
0x4003836	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x400383b	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x4003840	          0x4531c9	                            xor r9d, r9d	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x4003843	            0x31d2	                            xor edx, edx	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x4003845	    0x41b801000000	                              mov r8d, 1	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x400384b	          0x4c89f7	                            mov rdi, r14	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x400384e	      0xe800000000	                          call 0x4003853	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x4003853	        0x498b4608	                mov rax, qword [r14 + 8]	      3116	ui.c	FUNCTION_76	WHILE_1	IF_5
0x4003857	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3116	ui.c	FUNCTION_76	WHILE_1	IF_5
0x400385c	          0x483930	                    cmp qword [rax], rsi	      3116	ui.c	FUNCTION_76	WHILE_1	IF_5
0x400385f	     0xf841b010000	                            je 0x4003980	      3116	ui.c	FUNCTION_76	WHILE_1	IF_5
0x4003865	        0x4883c601	                              add rsi, 1	      3122	ui.c	FUNCTION_76	WHILE_1
0x4003869	          0x4429fb	                           sub ebx, r15d	      3092	ui.c	FUNCTION_76	WHILE_1
0x400386c	      0x4889742410	             mov qword [rsp + 0x10], rsi	      3122	ui.c	FUNCTION_76	WHILE_1
0x4003871	            0x745d	                            je 0x40038d0	      3092	ui.c	FUNCTION_76	WHILE_1
0x4003873	    0x418b96c00100	           mov edx, dword [r14 + 0x1c0] 	      3096	ui.c	FUNCTION_76	WHILE_1	IF_2
0x400387a	            0x85d2	                           test edx, edx	      3096	ui.c	FUNCTION_76	WHILE_1	IF_2
0x400387c	            0x749f	                            je 0x400381d	      3096	ui.c	FUNCTION_76	WHILE_1	IF_2
0x400387e	          0x4531c9	                            xor r9d, r9d	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4003881	            0x31c9	                            xor ecx, ecx	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4003883	            0x31d2	                            xor edx, edx	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4003885	    0x41b801000000	                              mov r8d, 1	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x400388b	          0x4c89f7	                            mov rdi, r14	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x400388e	      0xe800000000	                          call 0x4003893	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4003893	            0x85c0	                           test eax, eax	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4003895	            0x7581	                           jne 0x4003818	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4003897	        0x498b7678	            mov rsi, qword [r14 + 0x78] 	      3102	ui.c	FUNCTION_76	WHILE_1	IF_2	IF_3
0x400389b	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3102	ui.c	FUNCTION_76	WHILE_1	IF_2	IF_3
0x40038a0	          0x4839c6	                            cmp rsi, rax	      3102	ui.c	FUNCTION_76	WHILE_1	IF_2	IF_3
0x40038a3	     0xf85b7000000	                           jne 0x4003960	      3102	ui.c	FUNCTION_76	WHILE_1	IF_2	IF_3
0x40038a9	    0x412b9e840000	             sub ebx, dword [r14 + 0x84]	      3103	ui.c	FUNCTION_76	WHILE_1	IF_2	IF_3
0x40038b0	      0xba01000000	                              mov edx, 1	      3106	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_3
0x40038b5	          0x4c89f7	                            mov rdi, r14	      3106	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_3
0x40038b8	      0xe800000000	                          call 0x40038bd	      3106	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_3
0x40038bd	          0x4189c7	                           mov r15d, eax	      3106	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_3
0x40038c0	          0x4439fb	                           cmp ebx, r15d	      3111	ui.c	FUNCTION_76	WHILE_1	IF_4
0x40038c3	     0xf8d6dffffff	                           jge 0x4003836	      3111	ui.c	FUNCTION_76	WHILE_1	IF_4
0x40038c9	     0xf1f80000000	                         nop dword [rax]	      3111	ui.c	FUNCTION_76	WHILE_1	IF_4
0x40038d0	          0x4c89f7	                            mov rdi, r14	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x40038d3	      0xe800000000	                          call 0x40038d8	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x40038d8	          0x4c89f7	                            mov rdi, r14	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x40038db	          0x4189c7	                           mov r15d, eax	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x40038de	      0xe800000000	                          call 0x40038e3	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x40038e3	          0x4129c7	                           sub r15d, eax	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x40038e6	    0x418b86ac0000	            mov eax, dword [r14 + 0xac] 	      3131	ui.c	FUNCTION_76	IF_6
0x40038ed	          0x4439fd	                           cmp ebp, r15d	      3131	ui.c	FUNCTION_76	IF_6
0x40038f0	        0x410f4cef	                         cmovl ebp, r15d	      3131	ui.c	FUNCTION_76	IF_6
0x40038f4	          0x4429f8	                           sub eax, r15d	      3131	ui.c	FUNCTION_76	IF_6
0x40038f7	          0x4531ff	                          xor r15d, r15d	      3133	ui.c	FUNCTION_76	IF_6
0x40038fa	           0xfafc3	                           imul eax, ebx	      3131	ui.c	FUNCTION_76	IF_6
0x40038fd	             0x1c5	                            add ebp, eax	      3131	ui.c	FUNCTION_76	IF_6
0x40038ff	    0x4103ae980000	             add ebp, dword [r14 + 0x98]	      3133	ui.c	FUNCTION_76	IF_6
0x4003906	    0x418b86940200	           mov eax, dword [r14 + 0x294] 	      3136	ui.c	FUNCTION_76	IF_8
0x400390d	            0x85c0	                           test eax, eax	      3136	ui.c	FUNCTION_76	IF_8
0x400390f	            0x7507	                           jne 0x4003918	      3136	ui.c	FUNCTION_76	IF_8
0x4003911	    0x4103ae940000	             add ebp, dword [r14 + 0x94]	      3137	ui.c	FUNCTION_76	IF_8
0x4003918	          0x4c89f7	                            mov rdi, r14	      3140	ui.c	FUNCTION_76	CALL_8
0x400391b	      0xe800000000	                          call 0x4003920	      3140	ui.c	FUNCTION_76	CALL_8
0x4003920	            0x29c5	                            sub ebp, eax	      3141	ui.c	FUNCTION_76	IF_9
0x4003922	            0x786c	                            js 0x4003990	      3141	ui.c	FUNCTION_76	IF_9
0x4003924	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3151	ui.c	FUNCTION_76
0x4003929	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3151	ui.c	FUNCTION_76
0x400392e	        0x41896d00	                    mov dword [r13], ebp	      3149	ui.c	FUNCTION_76
0x4003932	        0x41891c24	                    mov dword [r12], ebx	      3150	ui.c	FUNCTION_76
0x4003936	          0x488901	                    mov qword [rcx], rax	      3151	ui.c	FUNCTION_76
0x4003939	          0x4489f8	                           mov eax, r15d	      3153	ui.c	FUNCTION_76
0x400393c	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      3153	ui.c	FUNCTION_76
0x4003941	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3153	ui.c	FUNCTION_76
0x400394a	            0x7552	                           jne 0x400399e	      3153	ui.c	FUNCTION_76
0x400394c	        0x4883c428	                           add rsp, 0x28	      3153	ui.c	FUNCTION_76
0x4003950	              0x5b	                                 pop rbx	      3153	ui.c	FUNCTION_76
0x4003951	              0x5d	                                 pop rbp	      3153	ui.c	FUNCTION_76
0x4003952	            0x415c	                                 pop r12	      3153	ui.c	FUNCTION_76
0x4003954	            0x415d	                                 pop r13	      3153	ui.c	FUNCTION_76
0x4003956	            0x415e	                                 pop r14	      3153	ui.c	FUNCTION_76
0x4003958	            0x415f	                                 pop r15	      3153	ui.c	FUNCTION_76
0x400395a	              0xc3	                                     ret	      3153	ui.c	FUNCTION_76
0x400395b	       0xf1f440000	                   nop dword [rax + rax]	      3153	ui.c	FUNCTION_76
0x4003960	          0x4889c6	                            mov rsi, rax	      3105	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_2
0x4003963	          0x4c89f7	                            mov rdi, r14	      3105	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_2
0x4003966	      0xe800000000	                          call 0x400396b	      3105	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_2
0x400396b	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3105	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_2
0x4003970	            0x29c3	                            sub ebx, eax	      3105	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_2
0x4003972	      0xe939ffffff	                           jmp 0x40038b0	      3105	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_2
0x4003977	    0x660f1f840000	                    nop word [rax + rax]	      3105	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_2
0x4003980	    0x41bf01000000	                             mov r15d, 1	      3118	ui.c	FUNCTION_76	WHILE_1	IF_5
0x4003986	      0xe97bffffff	                           jmp 0x4003906	      3118	ui.c	FUNCTION_76	WHILE_1	IF_5
0x400398b	       0xf1f440000	                   nop dword [rax + rax]	      3118	ui.c	FUNCTION_76	WHILE_1	IF_5
0x4003990	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3144	ui.c	FUNCTION_76	IF_9	CALL_9
0x4003995	            0x31ed	                            xor ebp, ebp	      3146	ui.c	FUNCTION_76	IF_9
0x4003997	      0xe800000000	                          call 0x400399c	      3144	ui.c	FUNCTION_76	IF_9	CALL_9
0x400399c	            0xeb86	                           jmp 0x4003924	      3144	ui.c	FUNCTION_76	IF_9	CALL_9
0x400399e	      0xe800000000	                          call 0x40039a3	      3153	ui.c	FUNCTION_76
clip_x11_lose_selection	FOR,0:functions,0:IF,0:ELSE,0:CALL,3:DO,0:SWITCH,0:WHILE,0	15
0x4003320	              0x55	                                push rbp	      2501	ui.c	FUNCTION_69
0x4003321	              0x53	                                push rbx	      2501	ui.c	FUNCTION_69
0x4003322	          0x4889f5	                            mov rbp, rsi	      2501	ui.c	FUNCTION_69
0x4003325	          0x4889fb	                            mov rbx, rdi	      2501	ui.c	FUNCTION_69
0x4003328	        0x4883ec08	                              sub rsp, 8	      2501	ui.c	FUNCTION_69
0x400332c	      0xe800000000	                          call 0x4003331	      2502	ui.c	FUNCTION_69	CALL_1
0x4003331	          0x4889c7	                            mov rdi, rax	      2502	ui.c	FUNCTION_69	CALL_1
0x4003334	      0xe800000000	                          call 0x4003339	      2502	ui.c	FUNCTION_69	CALL_1
0x4003339	        0x488b7550	            mov rsi, qword [rbp + 0x50] 	      2502	ui.c	FUNCTION_69	CALL_1
0x400333d	        0x4883c408	                              add rsp, 8	      2504	ui.c	FUNCTION_69
0x4003341	          0x4889df	                            mov rdi, rbx	      2502	ui.c	FUNCTION_69	CALL_1
0x4003344	              0x5b	                                 pop rbx	      2504	ui.c	FUNCTION_69
0x4003345	              0x5d	                                 pop rbp	      2504	ui.c	FUNCTION_69
0x4003346	          0x4889c2	                            mov rdx, rax	      2502	ui.c	FUNCTION_69	CALL_1
0x4003349	      0xe900000000	                           jmp 0x400334e	      2502	ui.c	FUNCTION_69	CALL_1
ui_char_avail	FOR,0:functions,0:IF,2:ELSE,0:CALL,4:DO,0:SWITCH,0:WHILE,0	17
0x4001050	        0x4883ec08	                              sub rsp, 8	       260	ui.c	FUNCTION_5
0x4001054	    0x8b0500000000	            mov eax, dword [0x0400105a] 	       262	ui.c	FUNCTION_5	IF_1
0x400105a	            0x85c0	                           test eax, eax	       262	ui.c	FUNCTION_5	IF_1
0x400105c	            0x7522	                           jne 0x4001080	       262	ui.c	FUNCTION_5	IF_1
0x400105e	      0xe800000000	                          call 0x4001063	       270	ui.c	FUNCTION_5	IF_2	CALL_3
0x4001063	            0x85c0	                           test eax, eax	       270	ui.c	FUNCTION_5	IF_2	CALL_3
0x4001065	            0x7409	                            je 0x4001070	       270	ui.c	FUNCTION_5	IF_2	CALL_3
0x4001067	            0x31c0	                            xor eax, eax	       277	ui.c	FUNCTION_5
0x4001069	        0x4883c408	                              add rsp, 8	       277	ui.c	FUNCTION_5
0x400106d	              0xc3	                                     ret	       277	ui.c	FUNCTION_5
0x400106e	            0x6690	                                     nop	       277	ui.c	FUNCTION_5
0x4001070	        0x4883c408	                              add rsp, 8	       277	ui.c	FUNCTION_5
0x4001074	      0xe900000000	                           jmp 0x4001079	       273	ui.c	FUNCTION_5	CALL_4
0x4001079	     0xf1f80000000	                         nop dword [rax]	       273	ui.c	FUNCTION_5	CALL_4
0x4001080	      0xe800000000	                          call 0x4001085	       264	ui.c	FUNCTION_5	IF_1	CALL_1
0x4001085	        0x4883c408	                              add rsp, 8	       277	ui.c	FUNCTION_5
0x4001089	      0xe900000000	                           jmp 0x400108e	       265	ui.c	FUNCTION_5	IF_1	CALL_2
vcol2col	FOR,0:functions,0:IF,0:ELSE,0:CALL,3:DO,0:SWITCH,0:WHILE,1	52
0x4004580	            0x4156	                                push r14	      3261	ui.c	FUNCTION_79
0x4004582	            0x4155	                                push r13	      3261	ui.c	FUNCTION_79
0x4004584	          0x4989fd	                            mov r13, rdi	      3261	ui.c	FUNCTION_79
0x4004587	            0x4154	                                push r12	      3261	ui.c	FUNCTION_79
0x4004589	              0x55	                                push rbp	      3261	ui.c	FUNCTION_79
0x400458a	          0x4189d6	                           mov r14d, edx	      3261	ui.c	FUNCTION_79
0x400458d	              0x53	                                push rbx	      3261	ui.c	FUNCTION_79
0x400458e	        0x488b7f08	                mov rdi, qword [rdi + 8]	      3267	ui.c	FUNCTION_79	CALL_1
0x4004592	            0x31d2	                            xor edx, edx	      3267	ui.c	FUNCTION_79	CALL_1
0x4004594	      0xe800000000	                          call 0x4004599	      3267	ui.c	FUNCTION_79	CALL_1
0x4004599	          0x4585f6	                         test r14d, r14d	      3268	ui.c	FUNCTION_79	WHILE_1
0x400459c	            0x7e68	                           jle 0x4004606	      3268	ui.c	FUNCTION_79	WHILE_1
0x400459e	          0x803800	                       cmp byte [rax], 0	      3268	ui.c	FUNCTION_79	WHILE_1
0x40045a1	          0x4989c4	                            mov r12, rax	      3268	ui.c	FUNCTION_79	WHILE_1
0x40045a4	            0x7460	                            je 0x4004606	      3268	ui.c	FUNCTION_79	WHILE_1
0x40045a6	          0x4889c3	                            mov rbx, rax	      3268	ui.c	FUNCTION_79	WHILE_1
0x40045a9	            0x31ed	                            xor ebp, ebp	      3268	ui.c	FUNCTION_79	WHILE_1
0x40045ab	            0xeb10	                           jmp 0x40045bd	      3268	ui.c	FUNCTION_79	WHILE_1
0x40045ad	           0xf1f00	                         nop dword [rax]	      3268	ui.c	FUNCTION_79	WHILE_1
0x40045b0	          0x4801c3	                            add rbx, rax	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x40045b3	          0x4139ee	                           cmp r14d, ebp	      3268	ui.c	FUNCTION_79	WHILE_1
0x40045b6	            0x7e40	                           jle 0x40045f8	      3268	ui.c	FUNCTION_79	WHILE_1
0x40045b8	          0x803b00	                       cmp byte [rbx], 0	      3268	ui.c	FUNCTION_79	WHILE_1
0x40045bb	            0x743b	                            je 0x40045f8	      3268	ui.c	FUNCTION_79	WHILE_1
0x40045bd	          0x4531c0	                            xor r8d, r8d	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x40045c0	            0x89e9	                            mov ecx, ebp	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x40045c2	          0x4889da	                            mov rdx, rbx	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x40045c5	          0x4c89e6	                            mov rsi, r12	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x40045c8	          0x4c89ef	                            mov rdi, r13	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x40045cb	      0xe800000000	                          call 0x40045d0	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x40045d0	    0x8b1500000000	            mov edx, dword [0x040045d6] 	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x40045d6	             0x1c5	                            add ebp, eax	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x40045d8	      0xb801000000	                              mov eax, 1	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x40045dd	            0x85d2	                           test edx, edx	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x40045df	            0x74cf	                            je 0x40045b0	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x40045e1	          0x4889df	                            mov rdi, rbx	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x40045e4	    0xff1500000000	                 call qword [0x040045ea]	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x40045ea	            0x4898	                                    cdqe	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x40045ec	          0x4801c3	                            add rbx, rax	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x40045ef	          0x4139ee	                           cmp r14d, ebp	      3268	ui.c	FUNCTION_79	WHILE_1
0x40045f2	            0x7fc4	                            jg 0x40045b8	      3268	ui.c	FUNCTION_79	WHILE_1
0x40045f4	         0xf1f4000	                         nop dword [rax]	      3268	ui.c	FUNCTION_79	WHILE_1
0x40045f8	            0x89d8	                            mov eax, ebx	      3268	ui.c	FUNCTION_79	WHILE_1
0x40045fa	          0x4429e0	                           sub eax, r12d	      3268	ui.c	FUNCTION_79	WHILE_1
0x40045fd	              0x5b	                                 pop rbx	      3274	ui.c	FUNCTION_79
0x40045fe	              0x5d	                                 pop rbp	      3274	ui.c	FUNCTION_79
0x40045ff	            0x415c	                                 pop r12	      3274	ui.c	FUNCTION_79
0x4004601	            0x415d	                                 pop r13	      3274	ui.c	FUNCTION_79
0x4004603	            0x415e	                                 pop r14	      3274	ui.c	FUNCTION_79
0x4004605	              0xc3	                                     ret	      3274	ui.c	FUNCTION_79
0x4004606	            0x31c0	                            xor eax, eax	      3268	ui.c	FUNCTION_79	WHILE_1
0x4004608	            0xebf3	                           jmp 0x40045fd	      3268	ui.c	FUNCTION_79	WHILE_1
clip_gen_owner_exists	FOR,0:functions,0:IF,1:ELSE,1:CALL,2:DO,0:SWITCH,0:WHILE,0	6
0x4003470	    0x8b0500000000	            mov eax, dword [0x04003476] 	      1566	ui.c	FUNCTION_43	IF_1
0x4003476	            0x85c0	                           test eax, eax	      1566	ui.c	FUNCTION_43	IF_1
0x4003478	            0x7506	                           jne 0x4003480	      1566	ui.c	FUNCTION_43	IF_1
0x400347a	            0xeba4	           jmp sym.clip_x11_owner_exists	      1570	ui.c	FUNCTION_43	CALL_2
0x400347c	         0xf1f4000	                         nop dword [rax]	      1570	ui.c	FUNCTION_43	CALL_2
0x4003480	      0xe900000000	                           jmp 0x4003485	      1567	ui.c	FUNCTION_43	CALL_1
im_save_status	FOR,0:functions,0:IF,3:ELSE,1:CALL,0:DO,0:SWITCH,0:WHILE,0	31
0x4004860	    0x448b0d000000	            mov r9d, dword [0x04004867] 	      3358	ui.c	FUNCTION_81	IF_1
0x4004867	          0x4585c9	                           test r9d, r9d	      3358	ui.c	FUNCTION_81	IF_1
0x400486a	            0x753a	                           jne 0x40048a6	      3358	ui.c	FUNCTION_81	IF_1
0x400486c	    0x448b05000000	            mov r8d, dword [0x04004873] 	      3358	ui.c	FUNCTION_81	IF_1
0x4004873	          0x4585c0	                           test r8d, r8d	      3358	ui.c	FUNCTION_81	IF_1
0x4004876	            0x742e	                            je 0x40048a6	      3358	ui.c	FUNCTION_81	IF_1
0x4004878	    0x8b3500000000	            mov esi, dword [0x0400487e] 	      3358	ui.c	FUNCTION_81	IF_1
0x400487e	            0x85f6	                           test esi, esi	      3358	ui.c	FUNCTION_81	IF_1
0x4004880	            0x7524	                           jne 0x40048a6	      3358	ui.c	FUNCTION_81	IF_1
0x4004882	    0x48833d000000	               cmp qword [0x0400488a], 0	      3360	ui.c	FUNCTION_81	IF_1
0x400488a	            0x741a	                            je 0x40048a6	      3360	ui.c	FUNCTION_81	IF_1
0x400488c	    0x8b0d00000000	            mov ecx, dword [0x04004892] 	      3363	ui.c	FUNCTION_81	IF_1
0x4004892	            0x85c9	                           test ecx, ecx	      3363	ui.c	FUNCTION_81	IF_1
0x4004894	            0x751a	                           jne 0x40048b0	      3363	ui.c	FUNCTION_81	IF_1
0x4004896	    0x8b0500000000	            mov eax, dword [0x0400489c] 	      3368	ui.c	FUNCTION_81	IF_1	IF_2
0x400489c	            0x85c0	                           test eax, eax	      3368	ui.c	FUNCTION_81	IF_1	IF_2
0x400489e	            0x7520	                           jne 0x40048c0	      3368	ui.c	FUNCTION_81	IF_1	IF_2
0x40048a0	        0x48833f02	                      cmp qword [rdi], 2	      3370	ui.c	FUNCTION_81	IF_1	ELSE_1	IF_3
0x40048a4	            0x742a	                            je 0x40048d0	      3370	ui.c	FUNCTION_81	IF_1	ELSE_1	IF_3
0x40048a6	            0xf3c3	                                     ret	      3370	ui.c	FUNCTION_81	IF_1	ELSE_1	IF_3
0x40048a8	     0xf1f84000000	                   nop dword [rax + rax]	      3370	ui.c	FUNCTION_81	IF_1	ELSE_1	IF_3
0x40048b0	    0x8b1500000000	            mov edx, dword [0x040048b6] 	      3363	ui.c	FUNCTION_81	IF_1
0x40048b6	            0x85d2	                           test edx, edx	      3363	ui.c	FUNCTION_81	IF_1
0x40048b8	            0x75dc	                           jne 0x4004896	      3363	ui.c	FUNCTION_81	IF_1
0x40048ba	            0xf3c3	                                     ret	      3363	ui.c	FUNCTION_81	IF_1
0x40048bc	         0xf1f4000	                         nop dword [rax]	      3363	ui.c	FUNCTION_81	IF_1
0x40048c0	    0x48c707020000	                      mov qword [rdi], 2	      3369	ui.c	FUNCTION_81	IF_1	IF_2
0x40048c7	              0xc3	                                     ret	      3369	ui.c	FUNCTION_81	IF_1	IF_2
0x40048c8	     0xf1f84000000	                   nop dword [rax + rax]	      3369	ui.c	FUNCTION_81	IF_1	IF_2
0x40048d0	    0x48c707000000	                      mov qword [rdi], 0	      3371	ui.c	FUNCTION_81	IF_1	ELSE_1	IF_3
0x40048d7	              0xc3	                                     ret	      3371	ui.c	FUNCTION_81	IF_1	ELSE_1	IF_3
ui_inchar_undo	FOR,0:functions,0:IF,3:ELSE,1:CALL,5:DO,0:SWITCH,0:WHILE,0	58
0x4000ea0	            0x4157	                                push r15	        77	ui.c	FUNCTION_2
0x4000ea2	            0x4156	                                push r14	        77	ui.c	FUNCTION_2
0x4000ea4	            0x4155	                                push r13	        77	ui.c	FUNCTION_2
0x4000ea6	            0x4154	                                push r12	        77	ui.c	FUNCTION_2
0x4000ea8	          0x4189f5	                           mov r13d, esi	        77	ui.c	FUNCTION_2
0x4000eab	              0x55	                                push rbp	        77	ui.c	FUNCTION_2
0x4000eac	              0x53	                                push rbx	        77	ui.c	FUNCTION_2
0x4000ead	          0x4989fc	                            mov r12, rdi	        77	ui.c	FUNCTION_2
0x4000eb0	            0x89f5	                            mov ebp, esi	        83	ui.c	FUNCTION_2	IF_1
0x4000eb2	        0x4883ec18	                           sub rsp, 0x18	        77	ui.c	FUNCTION_2
0x4000eb6	    0x48833d000000	               cmp qword [0x04000ebe], 0	        82	ui.c	FUNCTION_2	IF_1
0x4000ebe	            0x740c	                            je 0x4000ecc	        82	ui.c	FUNCTION_2	IF_1
0x4000ec0	    0x2b2d00000000	             sub ebp, dword [0x04000ec6]	        83	ui.c	FUNCTION_2	IF_1
0x4000ec6	     0x32d00000000	             add ebp, dword [0x04000ecc]	        83	ui.c	FUNCTION_2	IF_1
0x4000ecc	            0x89ef	                            mov edi, ebp	        84	ui.c	FUNCTION_2	CALL_1
0x4000ece	      0xe800000000	                          call 0x4000ed3	        84	ui.c	FUNCTION_2	CALL_1
0x4000ed3	          0x4885c0	                           test rax, rax	        85	ui.c	FUNCTION_2	IF_2
0x4000ed6	          0x4989c6	                            mov r14, rax	        84	ui.c	FUNCTION_2	CALL_1
0x4000ed9	            0x746d	                            je 0x4000f48	        85	ui.c	FUNCTION_2	IF_2
0x4000edb	    0x4c8b3d000000	            mov r15, qword [0x04000ee2] 	        87	ui.c	FUNCTION_2	IF_2	IF_3
0x4000ee2	          0x4d85ff	                           test r15, r15	        87	ui.c	FUNCTION_2	IF_2	IF_3
0x4000ee5	            0x7479	                            je 0x4000f60	        87	ui.c	FUNCTION_2	IF_2	IF_3
0x4000ee7	    0x48630d000000	         movsxd rcx, dword [0x04000eee] 	        89	ui.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x4000eee	    0x8b1d00000000	            mov ebx, dword [0x04000ef4] 	        89	ui.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x4000ef4	          0x4c89f7	                            mov rdi, r14	        59	string3.h	FUNCTION_83	CALL_3
0x4000ef7	            0x89da	                            mov edx, ebx	        59	string3.h	FUNCTION_83	CALL_3
0x4000ef9	            0x29ca	                            sub edx, ecx	        59	string3.h	FUNCTION_83	CALL_3
0x4000efb	        0x498d340f	                    lea rsi, [r15 + rcx]	        59	string3.h	FUNCTION_83	CALL_3
0x4000eff	      0x48894c2408	                mov qword [rsp + 8], rcx	        59	string3.h	FUNCTION_83	CALL_3
0x4000f04	          0x4863d2	                         movsxd rdx, edx	        59	string3.h	FUNCTION_83	CALL_3
0x4000f07	      0xe800000000	                          call 0x4000f0c	        59	string3.h	FUNCTION_83	CALL_3
0x4000f0c	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        59	string3.h	FUNCTION_83	CALL_3
0x4000f11	          0x4863fb	                         movsxd rdi, ebx	        59	string3.h	FUNCTION_83	CALL_3
0x4000f14	          0x4963d5	                        movsxd rdx, r13d	        59	string3.h	FUNCTION_83	CALL_3
0x4000f17	          0x4889fb	                            mov rbx, rdi	        59	string3.h	FUNCTION_83	CALL_3
0x4000f1a	          0x4c89e6	                            mov rsi, r12	        59	string3.h	FUNCTION_83	CALL_3
0x4000f1d	          0x4829cb	                            sub rbx, rcx	        59	string3.h	FUNCTION_83	CALL_3
0x4000f20	        0x498d3c1e	                    lea rdi, [r14 + rbx]	        59	string3.h	FUNCTION_83	CALL_3
0x4000f24	      0xe800000000	                          call 0x4000f29	        59	string3.h	FUNCTION_83	CALL_3
0x4000f29	          0x4c89ff	                            mov rdi, r15	        91	ui.c	FUNCTION_2	IF_2	IF_3	CALL_4
0x4000f2c	      0xe800000000	                          call 0x4000f31	        91	ui.c	FUNCTION_2	IF_2	IF_3	CALL_4
0x4000f31	    0x4c8935000000	            mov qword [0x04000f38], r14 	        95	ui.c	FUNCTION_2	IF_2
0x4000f38	    0x892d00000000	            mov dword [0x04000f3e], ebp 	        96	ui.c	FUNCTION_2	IF_2
0x4000f3e	    0xc70500000000	               mov dword [0x04000f48], 0	        97	ui.c	FUNCTION_2	IF_2
0x4000f48	        0x4883c418	                           add rsp, 0x18	        99	ui.c	FUNCTION_2
0x4000f4c	              0x5b	                                 pop rbx	        99	ui.c	FUNCTION_2
0x4000f4d	              0x5d	                                 pop rbp	        99	ui.c	FUNCTION_2
0x4000f4e	            0x415c	                                 pop r12	        99	ui.c	FUNCTION_2
0x4000f50	            0x415d	                                 pop r13	        99	ui.c	FUNCTION_2
0x4000f52	            0x415e	                                 pop r14	        99	ui.c	FUNCTION_2
0x4000f54	            0x415f	                                 pop r15	        99	ui.c	FUNCTION_2
0x4000f56	              0xc3	                                     ret	        99	ui.c	FUNCTION_2
0x4000f57	    0x660f1f840000	                    nop word [rax + rax]	        99	ui.c	FUNCTION_2
0x4000f60	          0x4963d5	                        movsxd rdx, r13d	        59	string3.h	FUNCTION_83	CALL_3
0x4000f63	          0x4c89e6	                            mov rsi, r12	        59	string3.h	FUNCTION_83	CALL_3
0x4000f66	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_83	CALL_3
0x4000f69	      0xe800000000	                          call 0x4000f6e	        59	string3.h	FUNCTION_83	CALL_3
0x4000f6e	            0xebc1	                           jmp 0x4000f31	        59	string3.h	FUNCTION_83	CALL_3
vim_is_input_buf_empty	FOR,0:functions,0:IF,0:ELSE,0:CALL,0:DO,0:SWITCH,0:WHILE,0	5
0x40029c0	    0x8b1500000000	            mov edx, dword [0x040029c6] 	      1627	ui.c	FUNCTION_45
0x40029c6	            0x31c0	                            xor eax, eax	      1627	ui.c	FUNCTION_45
0x40029c8	            0x85d2	                           test edx, edx	      1627	ui.c	FUNCTION_45
0x40029ca	           0xf94c0	                                 sete al	      1627	ui.c	FUNCTION_45
0x40029cd	              0xc3	                                     ret	      1628	ui.c	FUNCTION_45
clip_gen_own_selection	FOR,0:functions,0:IF,1:ELSE,1:CALL,3:DO,0:SWITCH,0:WHILE,0	6
0x4001710	    0x8b0500000000	            mov eax, dword [0x04001716] 	      1495	ui.c	FUNCTION_39	IF_1
0x4001716	            0x85c0	                           test eax, eax	      1495	ui.c	FUNCTION_39	IF_1
0x4001718	            0x7506	                           jne 0x4001720	      1495	ui.c	FUNCTION_39	IF_1
0x400171a	      0xe900000000	                           jmp 0x400171f	      1499	ui.c	FUNCTION_39	CALL_2
0x400171f	              0x90	                                     nop	      1499	ui.c	FUNCTION_39	CALL_2
0x4001720	      0xe900000000	                           jmp 0x4001725	      1496	ui.c	FUNCTION_39	CALL_1
vim_used_in_input_buf	FOR,0:functions,0:IF,0:ELSE,0:CALL,0:DO,0:SWITCH,0:WHILE,0	2
0x40029d0	    0x8b0500000000	            mov eax, dword [0x040029d6] 	      1643	ui.c	FUNCTION_47
0x40029d6	              0xc3	                                     ret	      1643	ui.c	FUNCTION_47
ui_inchar	FOR,0:functions,0:IF,11:ELSE,1:CALL,14:DO,0:SWITCH,0:WHILE,0	143
0x4002bc0	            0x4157	                                push r15	       121	ui.c	FUNCTION_3
0x4002bc2	            0x4156	                                push r14	       121	ui.c	FUNCTION_3
0x4002bc4	            0x4155	                                push r13	       121	ui.c	FUNCTION_3
0x4002bc6	            0x4154	                                push r12	       121	ui.c	FUNCTION_3
0x4002bc8	          0x4989fd	                            mov r13, rdi	       121	ui.c	FUNCTION_3
0x4002bcb	              0x55	                                push rbp	       121	ui.c	FUNCTION_3
0x4002bcc	              0x53	                                push rbx	       121	ui.c	FUNCTION_3
0x4002bcd	            0x89f5	                            mov ebp, esi	       121	ui.c	FUNCTION_3
0x4002bcf	        0x4883ec18	                           sub rsp, 0x18	       121	ui.c	FUNCTION_3
0x4002bd3	    0x4c8b25000000	            mov r12, qword [0x04002bda] 	       128	ui.c	FUNCTION_3	IF_1
0x4002bda	          0x4d85e4	                           test r12, r12	       128	ui.c	FUNCTION_3	IF_1
0x4002bdd	     0xf847d000000	                            je 0x4002c60	       128	ui.c	FUNCTION_3	IF_1
0x4002be3	    0x486315000000	         movsxd rdx, dword [0x04002bea] 	       130	ui.c	FUNCTION_3	IF_1	IF_2
0x4002bea	    0x48631d000000	         movsxd rbx, dword [0x04002bf1] 	       130	ui.c	FUNCTION_3	IF_1	IF_2
0x4002bf1	            0x89d0	                            mov eax, edx	       130	ui.c	FUNCTION_3	IF_1	IF_2
0x4002bf3	            0x29d8	                            sub eax, ebx	       130	ui.c	FUNCTION_3	IF_1	IF_2
0x4002bf5	            0x39f0	                            cmp eax, esi	       130	ui.c	FUNCTION_3	IF_1	IF_2
0x4002bf7	            0x7f37	                            jg 0x4002c30	       130	ui.c	FUNCTION_3	IF_1	IF_2
0x4002bf9	        0x498d341c	                    lea rsi, [r12 + rbx]	        59	string3.h	FUNCTION_83	CALL_3
0x4002bfd	      0xe800000000	                          call 0x4002c02	        59	string3.h	FUNCTION_83	CALL_3
0x4002c02	          0x4c89e7	                            mov rdi, r12	       133	ui.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x4002c05	      0xe800000000	                          call 0x4002c0a	       133	ui.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x4002c0a	    0x8b0500000000	            mov eax, dword [0x04002c10] 	       134	ui.c	FUNCTION_3	IF_1	IF_2
0x4002c10	    0x48c705000000	               mov qword [0x04002c1b], 0	       133	ui.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x4002c1b	        0x4883c418	                           add rsp, 0x18	       207	ui.c	FUNCTION_3
0x4002c1f	              0x5b	                                 pop rbx	       207	ui.c	FUNCTION_3
0x4002c20	              0x5d	                                 pop rbp	       207	ui.c	FUNCTION_3
0x4002c21	            0x415c	                                 pop r12	       207	ui.c	FUNCTION_3
0x4002c23	            0x415d	                                 pop r13	       207	ui.c	FUNCTION_3
0x4002c25	            0x415e	                                 pop r14	       207	ui.c	FUNCTION_3
0x4002c27	            0x415f	                                 pop r15	       207	ui.c	FUNCTION_3
0x4002c29	              0xc3	                                     ret	       207	ui.c	FUNCTION_3
0x4002c2a	    0x660f1f440000	                    nop word [rax + rax]	       207	ui.c	FUNCTION_3
0x4002c30	          0x4863d6	                         movsxd rdx, esi	        59	string3.h	FUNCTION_83	CALL_3
0x4002c33	          0x4863f3	                         movsxd rsi, ebx	        59	string3.h	FUNCTION_83	CALL_3
0x4002c36	             0x1eb	                            add ebx, ebp	       137	ui.c	FUNCTION_3	IF_1
0x4002c38	          0x4c01e6	                            add rsi, r12	        59	string3.h	FUNCTION_83	CALL_3
0x4002c3b	      0xe800000000	                          call 0x4002c40	        59	string3.h	FUNCTION_83	CALL_3
0x4002c40	    0x891d00000000	            mov dword [0x04002c46], ebx 	       137	ui.c	FUNCTION_3	IF_1
0x4002c46	        0x4883c418	                           add rsp, 0x18	       207	ui.c	FUNCTION_3
0x4002c4a	            0x89e8	                            mov eax, ebp	       138	ui.c	FUNCTION_3	IF_1
0x4002c4c	              0x5b	                                 pop rbx	       207	ui.c	FUNCTION_3
0x4002c4d	              0x5d	                                 pop rbp	       207	ui.c	FUNCTION_3
0x4002c4e	            0x415c	                                 pop r12	       207	ui.c	FUNCTION_3
0x4002c50	            0x415d	                                 pop r13	       207	ui.c	FUNCTION_3
0x4002c52	            0x415e	                                 pop r14	       207	ui.c	FUNCTION_3
0x4002c54	            0x415f	                                 pop r15	       207	ui.c	FUNCTION_3
0x4002c56	              0xc3	                                     ret	       207	ui.c	FUNCTION_3
0x4002c57	    0x660f1f840000	                    nop word [rax + rax]	       207	ui.c	FUNCTION_3
0x4002c60	          0x4885d2	                           test rdx, rdx	       143	ui.c	FUNCTION_3	IF_3
0x4002c63	          0x4889d3	                            mov rbx, rdx	       143	ui.c	FUNCTION_3	IF_3
0x4002c66	          0x4189cf	                           mov r15d, ecx	       143	ui.c	FUNCTION_3	IF_3
0x4002c69	        0x410f95c6	                              setne r14b	       143	ui.c	FUNCTION_3	IF_3
0x4002c6d	    0x833d00000000	               cmp dword [0x04002c74], 1	       143	ui.c	FUNCTION_3	IF_3
0x4002c74	            0x7509	                           jne 0x4002c7f	       143	ui.c	FUNCTION_3	IF_3
0x4002c76	          0x4584f6	                         test r14b, r14b	       143	ui.c	FUNCTION_3	IF_3
0x4002c79	     0xf8539010000	                           jne 0x4002db8	       143	ui.c	FUNCTION_3	IF_3
0x4002c7f	      0xe800000000	                          call 0x4002c84	       152	ui.c	FUNCTION_3	IF_4	CALL_5
0x4002c84	            0x85c0	                           test eax, eax	       152	ui.c	FUNCTION_3	IF_4	CALL_5
0x4002c86	            0x89c2	                            mov edx, eax	       152	ui.c	FUNCTION_3	IF_4	CALL_5
0x4002c88	     0xf8582000000	                           jne 0x4002d10	       152	ui.c	FUNCTION_3	IF_4	CALL_5
0x4002c8e	        0x4883fbff	             cmp rbx, 0xffffffffffffffff	       171	ui.c	FUNCTION_3	IF_7
0x4002c92	        0x410f94c4	                               sete r12b	       171	ui.c	FUNCTION_3	IF_7
0x4002c96	        0x4883fb64	                           cmp rbx, 0x64	       171	ui.c	FUNCTION_3	IF_7
0x4002c9a	           0xf9fc0	                                 setg al	       171	ui.c	FUNCTION_3	IF_7
0x4002c9d	          0x4108c4	                             or r12b, al	       171	ui.c	FUNCTION_3	IF_7
0x4002ca0	     0xf85ca000000	                           jne 0x4002d70	       171	ui.c	FUNCTION_3	IF_7
0x4002ca6	    0x8b0500000000	            mov eax, dword [0x04002cac] 	       183	ui.c	FUNCTION_3	IF_9
0x4002cac	          0x4489f9	                           mov ecx, r15d	       184	ui.c	FUNCTION_3	CALL_11
0x4002caf	          0x4889da	                            mov rdx, rbx	       184	ui.c	FUNCTION_3	CALL_11
0x4002cb2	            0x89ee	                            mov esi, ebp	       184	ui.c	FUNCTION_3	CALL_11
0x4002cb4	          0x4c89ef	                            mov rdi, r13	       184	ui.c	FUNCTION_3	CALL_11
0x4002cb7	            0x85c0	                           test eax, eax	       183	ui.c	FUNCTION_3	IF_9
0x4002cb9	            0x7445	                            je 0x4002d00	       183	ui.c	FUNCTION_3	IF_9
0x4002cbb	      0xe800000000	                          call 0x4002cc0	       184	ui.c	FUNCTION_3	CALL_11
0x4002cc0	            0x89c5	                            mov ebp, eax	       184	ui.c	FUNCTION_3	CALL_11
0x4002cc2	          0x4584e4	                         test r12b, r12b	       193	ui.c	FUNCTION_3	IF_10
0x4002cc5	     0xf8595000000	                           jne 0x4002d60	       193	ui.c	FUNCTION_3	IF_10
0x4002ccb	    0xc70500000000	               mov dword [0x04002cd5], 1	       197	ui.c	FUNCTION_3
0x4002cd5	    0x833d00000000	               cmp dword [0x04002cdc], 1	       203	ui.c	FUNCTION_3	IF_11
0x4002cdc	            0x7512	                           jne 0x4002cf0	       203	ui.c	FUNCTION_3	IF_11
0x4002cde	          0x4584f6	                         test r14b, r14b	       203	ui.c	FUNCTION_3	IF_11
0x4002ce1	            0x740d	                            je 0x4002cf0	       203	ui.c	FUNCTION_3	IF_11
0x4002ce3	      0xe800000000	                          call 0x4002ce8	       204	ui.c	FUNCTION_3	CALL_14
0x4002ce8	            0x89e8	                            mov eax, ebp	       206	ui.c	FUNCTION_3
0x4002cea	      0xe92cffffff	                           jmp 0x4002c1b	       206	ui.c	FUNCTION_3
0x4002cef	              0x90	                                     nop	       206	ui.c	FUNCTION_3
0x4002cf0	            0x89e8	                            mov eax, ebp	       206	ui.c	FUNCTION_3
0x4002cf2	      0xe924ffffff	                           jmp 0x4002c1b	       206	ui.c	FUNCTION_3
0x4002cf7	    0x660f1f840000	                    nop word [rax + rax]	       206	ui.c	FUNCTION_3
0x4002d00	      0xe800000000	                          call 0x4002d05	       190	ui.c	FUNCTION_3	CALL_12
0x4002d05	            0x89c5	                            mov ebp, eax	       190	ui.c	FUNCTION_3	CALL_12
0x4002d07	            0xebb9	                           jmp 0x4002cc2	       190	ui.c	FUNCTION_3	CALL_12
0x4002d09	     0xf1f80000000	                         nop dword [rax]	       190	ui.c	FUNCTION_3	CALL_12
0x4002d10	        0x4883fb0a	                            cmp rbx, 0xa	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x4002d14	      0xba0a000000	                            mov edx, 0xa	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x4002d19	            0x89ee	                            mov esi, ebp	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x4002d1b	        0x480f43d3	                         cmovae rdx, rbx	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x4002d1f	          0x4489f9	                           mov ecx, r15d	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x4002d22	          0x4c89ef	                            mov rdi, r13	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x4002d25	      0xe800000000	                          call 0x4002d2a	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x4002d2a	            0x85c0	                           test eax, eax	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x4002d2c	            0x89c5	                            mov ebp, eax	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x4002d2e	            0x7fa5	                            jg 0x4002cd5	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x4002d30	          0x4489ff	                           mov edi, r15d	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x4002d33	      0xe800000000	                          call 0x4002d38	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x4002d38	            0x85c0	                           test eax, eax	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x4002d3a	            0x7599	                           jne 0x4002cd5	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x4002d3c	          0x4885db	                           test rbx, rbx	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x4002d3f	            0x7994	                           jns 0x4002cd5	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x4002d41	        0x4883c301	                              add rbx, 1	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x4002d45	            0x747b	                            je 0x4002dc2	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x4002d47	      0x41c645000d	                     mov byte [r13], 0xd	       164	ui.c	FUNCTION_3	IF_4
0x4002d4c	      0xbd01000000	                              mov ebp, 1	       165	ui.c	FUNCTION_3	IF_4
0x4002d51	      0xe97fffffff	                           jmp 0x4002cd5	       166	ui.c	FUNCTION_3	IF_4
0x4002d56	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       166	ui.c	FUNCTION_3	IF_4
0x4002d60	      0xbfffffffff	                     mov edi, 0xffffffff	       195	ui.c	FUNCTION_3	CALL_13
0x4002d65	      0xe800000000	                          call 0x4002d6a	       195	ui.c	FUNCTION_3	CALL_13
0x4002d6a	      0xe95cffffff	                           jmp 0x4002ccb	       195	ui.c	FUNCTION_3	CALL_13
0x4002d6f	              0x90	                                     nop	       195	ui.c	FUNCTION_3	CALL_13
0x4002d70	      0xbffeffffff	                     mov edi, 0xfffffffe	       174	ui.c	FUNCTION_3	IF_7	CALL_9
0x4002d75	        0x8954240c	              mov dword [rsp + 0xc], edx	       174	ui.c	FUNCTION_3	IF_7	CALL_9
0x4002d79	      0xe800000000	                          call 0x4002d7e	       174	ui.c	FUNCTION_3	IF_7	CALL_9
0x4002d7e	    0x488b05000000	            mov rax, qword [0x04002d85] 	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x4002d85	    0x8b80401c0000	          mov eax, dword [rax + 0x1c40] 	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x4002d8b	     0xb0500000000	              or eax, dword [0x04002d91]	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x4002d91	        0x89442408	                mov dword [rsp + 8], eax	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x4002d95	      0xe800000000	                          call 0x4002d9a	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x4002d9a	        0x85442408	               test dword [rsp + 8], eax	       179	ui.c	FUNCTION_3	IF_7	IF_8
0x4002d9e	        0x8b54240c	              mov edx, dword [rsp + 0xc]	       179	ui.c	FUNCTION_3	IF_7	IF_8
0x4002da2	     0xf4415000000	           cmove edx, dword [0x04002da9]	       179	ui.c	FUNCTION_3	IF_7	IF_8
0x4002da9	    0x891500000000	            mov dword [0x04002daf], edx 	       179	ui.c	FUNCTION_3	IF_7	IF_8
0x4002daf	      0xe9f2feffff	                           jmp 0x4002ca6	       179	ui.c	FUNCTION_3	IF_7	IF_8
0x4002db4	         0xf1f4000	                         nop dword [rax]	       179	ui.c	FUNCTION_3	IF_7	IF_8
0x4002db8	      0xe800000000	                          call 0x4002dbd	       144	ui.c	FUNCTION_3	CALL_4
0x4002dbd	      0xe9bdfeffff	                           jmp 0x4002c7f	       144	ui.c	FUNCTION_3	CALL_4
0x4002dc2	    0x8b0500000000	            mov eax, dword [0x04002dc8] 	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x4002dc8	          0x83c001	                              add eax, 1	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x4002dcb	      0x3de8030000	                          cmp eax, 0x3e8	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x4002dd0	    0x890500000000	            mov dword [0x04002dd6], eax 	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x4002dd6	     0xf856bffffff	                           jne 0x4002d47	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x4002ddc	      0xe800000000	                          call 0x4002de1	       163	ui.c	FUNCTION_3	IF_4	CALL_8
0x4002de1	      0xe961ffffff	                           jmp 0x4002d47	       163	ui.c	FUNCTION_3	IF_4	CALL_8
clip_gen_set_selection	FOR,0:functions,0:IF,3:ELSE,1:CALL,3:DO,0:SWITCH,0:WHILE,0	22
0x4001980	    0x8b1500000000	            mov edx, dword [0x04001986] 	      1523	ui.c	FUNCTION_41	IF_1
0x4001986	            0x85d2	                           test edx, edx	      1523	ui.c	FUNCTION_41	IF_1
0x4001988	            0x7512	                           jne 0x400199c	      1523	ui.c	FUNCTION_41	IF_1
0x400198a	    0x4881ff000000	                              cmp rdi, 0	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x4001991	            0x7425	                            je 0x40019b8	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x4001993	    0x4881ff000000	                              cmp rdi, 0	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x400199a	            0x7434	                            je 0x40019d0	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x400199c	    0x8b0500000000	            mov eax, dword [0x040019a2] 	      1536	ui.c	FUNCTION_41	IF_3
0x40019a2	            0x85c0	                           test eax, eax	      1536	ui.c	FUNCTION_41	IF_3
0x40019a4	            0x750a	                           jne 0x40019b0	      1536	ui.c	FUNCTION_41	IF_3
0x40019a6	      0xe900000000	                           jmp 0x40019ab	      1540	ui.c	FUNCTION_41	CALL_2
0x40019ab	       0xf1f440000	                   nop dword [rax + rax]	      1540	ui.c	FUNCTION_41	CALL_2
0x40019b0	      0xe900000000	                           jmp 0x40019b5	      1537	ui.c	FUNCTION_41	CALL_1
0x40019b5	           0xf1f00	                         nop dword [rax]	      1537	ui.c	FUNCTION_41	CALL_1
0x40019b8	    0xf60500000000	               test byte [0x040019bf], 2	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x40019bf	            0x74d2	                            je 0x4001993	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x40019c1	    0xc70500000000	               mov dword [0x040019cb], 1	      1530	ui.c	FUNCTION_41	IF_1	IF_2
0x40019cb	              0xc3	                                     ret	      1531	ui.c	FUNCTION_41	IF_1	IF_2
0x40019cc	         0xf1f4000	                         nop dword [rax]	      1531	ui.c	FUNCTION_41	IF_1	IF_2
0x40019d0	    0xf60500000000	               test byte [0x040019d7], 1	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x40019d7	            0x74c3	                            je 0x400199c	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x40019d9	            0xebe6	                           jmp 0x40019c1	      1528	ui.c	FUNCTION_41	IF_1	IF_2
clip_x11_own_selection	FOR,0:functions,0:IF,3:ELSE,1:CALL,8:DO,0:SWITCH,0:WHILE,0	60
0x4003350	            0x4155	                                push r13	      2514	ui.c	FUNCTION_71
0x4003352	            0x4154	                                push r12	      2514	ui.c	FUNCTION_71
0x4003354	              0x55	                                push rbp	      2514	ui.c	FUNCTION_71
0x4003355	              0x53	                                push rbx	      2514	ui.c	FUNCTION_71
0x4003356	          0x4889f5	                            mov rbp, rsi	      2514	ui.c	FUNCTION_71
0x4003359	          0x4889fb	                            mov rbx, rdi	      2514	ui.c	FUNCTION_71
0x400335c	        0x4883ec08	                              sub rsp, 8	      2514	ui.c	FUNCTION_71
0x4003360	    0x8b3500000000	            mov esi, dword [0x04003366] 	      2520	ui.c	FUNCTION_71	IF_1
0x4003366	            0x85f6	                           test esi, esi	      2520	ui.c	FUNCTION_71	IF_1
0x4003368	            0x7456	                            je 0x40033c0	      2520	ui.c	FUNCTION_71	IF_1
0x400336a	      0xe800000000	                          call 0x400336f	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x400336f	          0x4889c7	                            mov rdi, rax	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4003372	      0xe800000000	                          call 0x4003377	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4003377	        0x488b7550	            mov rsi, qword [rbp + 0x50] 	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x400337b	    0x41b900000000	                              mov r9d, 0	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4003381	    0x41b800000000	                              mov r8d, 0	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4003387	      0xb900000000	                              mov ecx, 0	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x400338c	          0x4889c2	                            mov rdx, rax	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x400338f	          0x4889df	                            mov rdi, rbx	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4003392	      0xe800000000	                          call 0x4003397	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4003397	            0x84c0	                             test al, al	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4003399	            0x7467	                            je 0x4003402	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x400339b	          0x4889df	                            mov rdi, rbx	      2536	ui.c	FUNCTION_71	CALL_8
0x400339e	      0xe800000000	                          call 0x40033a3	      2536	ui.c	FUNCTION_71	CALL_8
0x40033a3	          0x4889c7	                            mov rdi, rax	      2536	ui.c	FUNCTION_71	CALL_8
0x40033a6	      0xe800000000	                          call 0x40033ab	      2536	ui.c	FUNCTION_71	CALL_8
0x40033ab	        0x4883c408	                              add rsp, 8	      2538	ui.c	FUNCTION_71
0x40033af	      0xb801000000	                              mov eax, 1	      2537	ui.c	FUNCTION_71
0x40033b4	              0x5b	                                 pop rbx	      2538	ui.c	FUNCTION_71
0x40033b5	              0x5d	                                 pop rbp	      2538	ui.c	FUNCTION_71
0x40033b6	            0x415c	                                 pop r12	      2538	ui.c	FUNCTION_71
0x40033b8	            0x415d	                                 pop r13	      2538	ui.c	FUNCTION_71
0x40033ba	              0xc3	                                     ret	      2538	ui.c	FUNCTION_71
0x40033bb	       0xf1f440000	                   nop dword [rax + rax]	      2538	ui.c	FUNCTION_71
0x40033c0	        0x4c8b6550	            mov r12, qword [rbp + 0x50] 	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x40033c4	    0x4c8b2d000000	            mov r13, qword [0x040033cb] 	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x40033cb	      0xe800000000	                          call 0x40033d0	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x40033d0	          0x4889df	                            mov rdi, rbx	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x40033d3	          0x4889c5	                            mov rbp, rax	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x40033d6	      0xe800000000	                          call 0x40033db	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x40033db	            0x6a00	                                  push 0	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x40033dd	            0x6a00	                                  push 0	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x40033df	          0x4c89e9	                            mov rcx, r13	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x40033e2	          0x4c89e2	                            mov rdx, r12	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x40033e5	    0x41b902000000	                              mov r9d, 2	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x40033eb	    0x41b820000000	                           mov r8d, 0x20	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x40033f1	          0x4889ee	                            mov rsi, rbp	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x40033f4	          0x4889c7	                            mov rdi, rax	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x40033f7	      0xe800000000	                          call 0x40033fc	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x40033fc	            0x85c0	                           test eax, eax	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x40033fe	              0x5a	                                 pop rdx	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x40033ff	              0x59	                                 pop rcx	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4003400	            0x7599	                           jne 0x400339b	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4003402	        0x4883c408	                              add rsp, 8	      2538	ui.c	FUNCTION_71
0x4003406	            0x31c0	                            xor eax, eax	      2526	ui.c	FUNCTION_71	IF_1	IF_2
0x4003408	              0x5b	                                 pop rbx	      2538	ui.c	FUNCTION_71
0x4003409	              0x5d	                                 pop rbp	      2538	ui.c	FUNCTION_71
0x400340a	            0x415c	                                 pop r12	      2538	ui.c	FUNCTION_71
0x400340c	            0x415d	                                 pop r13	      2538	ui.c	FUNCTION_71
0x400340e	              0xc3	                                     ret	      2538	ui.c	FUNCTION_71
clip_start_selection	FOR,0:functions,0:IF,4:ELSE,1:CALL,10:DO,0:SWITCH,1:WHILE,0	128
0x4001340	            0x4155	                                push r13	       785	ui.c	FUNCTION_27
0x4001342	            0x4154	                                push r12	       785	ui.c	FUNCTION_27
0x4001344	              0x55	                                push rbp	       785	ui.c	FUNCTION_27
0x4001345	              0x53	                                push rbx	       785	ui.c	FUNCTION_27
0x4001346	            0x89fd	                            mov ebp, edi	       785	ui.c	FUNCTION_27
0x4001348	            0x89d3	                            mov ebx, edx	       785	ui.c	FUNCTION_27
0x400134a	        0x4883ec18	                           sub rsp, 0x18	       785	ui.c	FUNCTION_27
0x400134e	    0x66833d000000	                cmp word [0x04001356], 2	       788	ui.c	FUNCTION_27	IF_1
0x4001356	     0xf8434020000	                            je 0x4001590	       788	ui.c	FUNCTION_27	IF_1
0x400135c	            0x85f6	                           test esi, esi	      2006	ui.c	FUNCTION_60	IF_1
0x400135e	     0xf88d4010000	                            js 0x4001538	      2006	ui.c	FUNCTION_60	IF_1
0x4001364	    0x8b0500000000	            mov eax, dword [0x0400136a] 	      2008	ui.c	FUNCTION_60	IF_2
0x400136a	            0x39c6	                            cmp esi, eax	      2008	ui.c	FUNCTION_60	IF_2
0x400136c	     0xf8dde000000	                           jge 0x4001450	      2008	ui.c	FUNCTION_60	IF_2
0x4001372	          0x4c63ee	                         movsxd r13, esi	      2008	ui.c	FUNCTION_60	IF_2
0x4001375	          0x4189f4	                           mov r12d, esi	      2008	ui.c	FUNCTION_60	IF_2
0x4001378	            0x31ff	                            xor edi, edi	      1994	ui.c	FUNCTION_59	IF_1
0x400137a	            0x85ed	                           test ebp, ebp	      1993	ui.c	FUNCTION_59	IF_1
0x400137c	            0x780e	                            js 0x400138c	      1993	ui.c	FUNCTION_59	IF_1
0x400137e	    0x8b0500000000	            mov eax, dword [0x04001384] 	      1995	ui.c	FUNCTION_59	IF_2
0x4001384	          0x8d78ff	                      lea edi, [rax - 1]	      1996	ui.c	FUNCTION_59	IF_2
0x4001387	            0x39e8	                            cmp eax, ebp	      1996	ui.c	FUNCTION_59	IF_2
0x4001389	           0xf4ffd	                          cmovg edi, ebp	      1996	ui.c	FUNCTION_59	IF_2
0x400138c	      0xe800000000	                          call 0x4001391	       794	ui.c	FUNCTION_27	CALL_4
0x4001391	    0x4c892d000000	            mov qword [0x04001398], r13 	       797	ui.c	FUNCTION_27
0x4001398	    0x890500000000	            mov dword [0x0400139e], eax 	       798	ui.c	FUNCTION_27
0x400139e	      0xbf01000000	                              mov edi, 1	       801	ui.c	FUNCTION_27
0x40013a3	    0x4c8b0d000000	              mov r9, qword [0x040013aa]	       799	ui.c	FUNCTION_27
0x40013aa	    0x4c8b15000000	            mov r10, qword [0x040013b1] 	       799	ui.c	FUNCTION_27
0x40013b1	            0x85db	                           test ebx, ebx	       803	ui.c	FUNCTION_27	IF_2
0x40013b3	    0x664489250000	            mov word [0x040013bb], r12w 	       800	ui.c	FUNCTION_27
0x40013bb	    0x66893d000000	               mov word [0x040013c2], di	       801	ui.c	FUNCTION_27
0x40013c2	    0x4c890d000000	              mov qword [0x040013c9], r9	       799	ui.c	FUNCTION_27
0x40013c9	    0x4c8915000000	            mov qword [0x040013d0], r10 	       799	ui.c	FUNCTION_27
0x40013d0	            0x741b	                            je 0x40013ed	       803	ui.c	FUNCTION_27	IF_2
0x40013d2	     0xfb705000000	           movzx eax, word [0x040013d9] 	       805	ui.c	FUNCTION_27	IF_2	IF_3
0x40013d9	          0x83c001	                              add eax, 1	       805	ui.c	FUNCTION_27	IF_2	IF_3
0x40013dc	        0x6683f802	                               cmp ax, 2	       805	ui.c	FUNCTION_27	IF_2	IF_3
0x40013e0	    0x668905000000	               mov word [0x040013e7], ax	       805	ui.c	FUNCTION_27	IF_2	IF_3
0x40013e7	     0xf86ab000000	                           jbe 0x4001498	       805	ui.c	FUNCTION_27	IF_2	IF_3
0x40013ed	    0x8b3500000000	            mov esi, dword [0x040013f3] 	       813	ui.c	FUNCTION_27	IF_4
0x40013f3	            0x31c9	                            xor ecx, ecx	       806	ui.c	FUNCTION_27	IF_2	IF_3
0x40013f5	    0x66890d000000	               mov word [0x040013fc], cx	       806	ui.c	FUNCTION_27	IF_2	IF_3
0x40013fc	            0x85f6	                           test esi, esi	       813	ui.c	FUNCTION_27	IF_4
0x40013fe	     0xf8454010000	                            je 0x4001558	       813	ui.c	FUNCTION_27	IF_4
0x4001404	      0xe800000000	                          call 0x4001409	       814	ui.c	FUNCTION_27	CALL_5
0x4001409	     0xfb705000000	           movzx eax, word [0x04001410] 	       814	ui.c	FUNCTION_27	CALL_5
0x4001410	        0x6683f801	                               cmp ax, 1	       817	ui.c	FUNCTION_27	SWITCH_1
0x4001414	     0xf8496000000	                            je 0x40014b0	       817	ui.c	FUNCTION_27	SWITCH_1
0x400141a	     0xf8225010000	                            jb 0x4001545	       817	ui.c	FUNCTION_27	SWITCH_1
0x4001420	        0x6683f802	                               cmp ax, 2	       817	ui.c	FUNCTION_27	SWITCH_1
0x4001424	            0x743a	                            je 0x4001460	       817	ui.c	FUNCTION_27	SWITCH_1
0x4001426	    0x4c8b0d000000	              mov r9, qword [0x0400142d]	       817	ui.c	FUNCTION_27	SWITCH_1
0x400142d	    0x4c8b15000000	            mov r10, qword [0x04001434] 	       817	ui.c	FUNCTION_27	SWITCH_1
0x4001434	    0x4c890d000000	              mov qword [0x0400143b], r9	       843	ui.c	FUNCTION_27
0x400143b	    0x4c8915000000	            mov qword [0x04001442], r10 	       843	ui.c	FUNCTION_27
0x4001442	        0x4883c418	                           add rsp, 0x18	       848	ui.c	FUNCTION_27
0x4001446	              0x5b	                                 pop rbx	       848	ui.c	FUNCTION_27
0x4001447	              0x5d	                                 pop rbp	       848	ui.c	FUNCTION_27
0x4001448	            0x415c	                                 pop r12	       848	ui.c	FUNCTION_27
0x400144a	            0x415d	                                 pop r13	       848	ui.c	FUNCTION_27
0x400144c	              0xc3	                                     ret	       848	ui.c	FUNCTION_27
0x400144d	           0xf1f00	                         nop dword [rax]	       848	ui.c	FUNCTION_27
0x4001450	          0x8d70ff	                      lea esi, [rax - 1]	      2009	ui.c	FUNCTION_60	IF_2
0x4001453	      0xe91affffff	                           jmp 0x4001372	      2009	ui.c	FUNCTION_60	IF_2
0x4001458	     0xf1f84000000	                   nop dword [rax + rax]	      2009	ui.c	FUNCTION_60	IF_2
0x4001460	    0x488b3d000000	            mov rdi, qword [0x04001467] 	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x4001467	    0x8b0d00000000	            mov ecx, dword [0x0400146d] 	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x400146d	    0x41b802000000	                              mov r8d, 2	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x4001473	            0x31f6	                            xor esi, esi	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x4001475	            0x89fa	                            mov edx, edi	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x4001477	      0xe8f4ebffff	               call sym.clip_invert_area	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x400147c	    0x488b05000000	            mov rax, qword [0x04001483] 	       839	ui.c	FUNCTION_27	SWITCH_1
0x4001483	    0xc70500000000	               mov dword [0x0400148d], 0	       838	ui.c	FUNCTION_27	SWITCH_1
0x400148d	    0x890500000000	            mov dword [0x04001493], eax 	       839	ui.c	FUNCTION_27	SWITCH_1
0x4001493	            0xeb91	                           jmp 0x4001426	       839	ui.c	FUNCTION_27	SWITCH_1
0x4001495	           0xf1f00	                         nop dword [rax]	       839	ui.c	FUNCTION_27	SWITCH_1
0x4001498	    0x8b1500000000	            mov edx, dword [0x0400149e] 	       813	ui.c	FUNCTION_27	IF_4
0x400149e	            0x85d2	                           test edx, edx	       813	ui.c	FUNCTION_27	IF_4
0x40014a0	     0xf855effffff	                           jne 0x4001404	       813	ui.c	FUNCTION_27	IF_4
0x40014a6	        0x6683f801	                               cmp ax, 1	       817	ui.c	FUNCTION_27	SWITCH_1
0x40014aa	     0xf856affffff	                           jne 0x400141a	       817	ui.c	FUNCTION_27	SWITCH_1
0x40014b0	    0x488b05000000	            mov rax, qword [0x040014b7] 	       825	ui.c	FUNCTION_27	SWITCH_1	CALL_7
0x40014b7	    0x3b0500000000	            cmp eax, dword [0x040014bd] 	      1397	ui.c	FUNCTION_36	IF_1
0x40014bd	            0x89c7	                            mov edi, eax	       825	ui.c	FUNCTION_27	SWITCH_1	CALL_7
0x40014bf	            0x7d19	                           jge 0x40014da	      1397	ui.c	FUNCTION_36	IF_1
0x40014c1	    0x8b3500000000	            mov esi, dword [0x040014c7] 	       825	ui.c	FUNCTION_27	SWITCH_1	CALL_7
0x40014c7	    0x3b3500000000	            cmp esi, dword [0x040014cd] 	      1397	ui.c	FUNCTION_36	IF_1
0x40014cd	            0x7d0b	                           jge 0x40014da	      1397	ui.c	FUNCTION_36	IF_1
0x40014cf	      0xe8ecf6ffff	call sym.clip_get_word_boundaries.isra.1.part.2.constprop.13	      1397	ui.c	FUNCTION_36	IF_1
0x40014d4	    0x8b3d00000000	            mov edi, dword [0x040014da] 	      1397	ui.c	FUNCTION_36	IF_1
0x40014da	     0xfb735000000	           movzx esi, word [0x040014e1] 	       826	ui.c	FUNCTION_27	SWITCH_1
0x40014e1	     0xfb70d000000	           movzx ecx, word [0x040014e8] 	       827	ui.c	FUNCTION_27	SWITCH_1
0x40014e8	    0x41b802000000	                              mov r8d, 2	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x40014ee	    0x8b1500000000	            mov edx, dword [0x040014f4] 	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x40014f4	    0x668935000000	               mov word [0x040014fb], si	       826	ui.c	FUNCTION_27	SWITCH_1
0x40014fb	    0x66890d000000	               mov word [0x04001502], cx	       827	ui.c	FUNCTION_27	SWITCH_1
0x4001502	      0xe869ebffff	               call sym.clip_invert_area	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x4001507	     0xfb705000000	           movzx eax, word [0x0400150e] 	       831	ui.c	FUNCTION_27	SWITCH_1
0x400150e	    0x4c8b0d000000	              mov r9, qword [0x04001515]	       831	ui.c	FUNCTION_27	SWITCH_1
0x4001515	    0x890500000000	            mov dword [0x0400151b], eax 	       831	ui.c	FUNCTION_27	SWITCH_1
0x400151b	     0xfb705000000	           movzx eax, word [0x04001522] 	       832	ui.c	FUNCTION_27	SWITCH_1
0x4001522	    0x4c8b15000000	            mov r10, qword [0x04001529] 	       832	ui.c	FUNCTION_27	SWITCH_1
0x4001529	    0x890500000000	            mov dword [0x0400152f], eax 	       832	ui.c	FUNCTION_27	SWITCH_1
0x400152f	      0xe900ffffff	                           jmp 0x4001434	       833	ui.c	FUNCTION_27	SWITCH_1
0x4001534	         0xf1f4000	                         nop dword [rax]	       833	ui.c	FUNCTION_27	SWITCH_1
0x4001538	          0x4531e4	                          xor r12d, r12d	      2006	ui.c	FUNCTION_60	IF_1
0x400153b	          0x4531ed	                          xor r13d, r13d	      2006	ui.c	FUNCTION_60	IF_1
0x400153e	            0x31f6	                            xor esi, esi	      2007	ui.c	FUNCTION_60	IF_1
0x4001540	      0xe933feffff	                           jmp 0x4001378	      2007	ui.c	FUNCTION_60	IF_1
0x4001545	    0x4c8b0d000000	              mov r9, qword [0x0400154c]	      2007	ui.c	FUNCTION_60	IF_1
0x400154c	    0x4c8b15000000	            mov r10, qword [0x04001553] 	      2007	ui.c	FUNCTION_60	IF_1
0x4001553	       0xf1f440000	                   nop dword [rax + rax]	      2007	ui.c	FUNCTION_60	IF_1
0x4001558	    0x8b0500000000	            mov eax, dword [0x0400155e] 	       820	ui.c	FUNCTION_27	SWITCH_1
0x400155e	    0x488b3d000000	            mov rdi, qword [0x04001565] 	       821	ui.c	FUNCTION_27	SWITCH_1	CALL_6
0x4001565	    0x668905000000	               mov word [0x0400156c], ax	       820	ui.c	FUNCTION_27	SWITCH_1
0x400156c	            0x31c0	                            xor eax, eax	      1451	ui.c	FUNCTION_37	IF_1
0x400156e	    0x3b3d00000000	            cmp edi, dword [0x04001574] 	      1451	ui.c	FUNCTION_37	IF_1
0x4001574	            0x7d05	                           jge 0x400157b	      1451	ui.c	FUNCTION_37	IF_1
0x4001576	      0xe875f4ffff	       call sym.clip_get_line_end.part.0	      1451	ui.c	FUNCTION_37	IF_1
0x400157b	    0x668905000000	               mov word [0x04001582], ax	       821	ui.c	FUNCTION_27	SWITCH_1	CALL_6
0x4001582	      0xe9adfeffff	                           jmp 0x4001434	       822	ui.c	FUNCTION_27	SWITCH_1
0x4001587	    0x660f1f840000	                    nop word [rax + rax]	       822	ui.c	FUNCTION_27	SWITCH_1
0x4001590	      0xbf00000000	                              mov edi, 0	       822	ui.c	FUNCTION_27	SWITCH_1
0x4001595	        0x8974240c	              mov dword [rsp + 0xc], esi	       822	ui.c	FUNCTION_27	SWITCH_1
0x4001599	      0xe802f5ffff	    call sym.clip_clear_selection.part.6	       822	ui.c	FUNCTION_27	SWITCH_1
0x400159e	        0x8b74240c	              mov esi, dword [rsp + 0xc]	       822	ui.c	FUNCTION_27	SWITCH_1
0x40015a2	      0xe9b5fdffff	                           jmp 0x400135c	       822	ui.c	FUNCTION_27	SWITCH_1
ui_breakcheck_force	FOR,0:functions,0:IF,1:ELSE,1:CALL,2:DO,0:SWITCH,0:WHILE,0	16
0x40011a0	              0x53	                                push rbx	       405	ui.c	FUNCTION_13
0x40011a1	    0x8b1d00000000	            mov ebx, dword [0x040011a7] 	       406	ui.c	FUNCTION_13
0x40011a7	          0x8d4301	                      lea eax, [rbx + 1]	       409	ui.c	FUNCTION_13
0x40011aa	    0x890500000000	            mov dword [0x040011b0], eax 	       409	ui.c	FUNCTION_13
0x40011b0	    0x8b0500000000	            mov eax, dword [0x040011b6] 	       412	ui.c	FUNCTION_13	IF_1
0x40011b6	            0x85c0	                           test eax, eax	       412	ui.c	FUNCTION_13	IF_1
0x40011b8	            0x7516	                           jne 0x40011d0	       412	ui.c	FUNCTION_13	IF_1
0x40011ba	      0xe800000000	                          call 0x40011bf	       416	ui.c	FUNCTION_13	CALL_2
0x40011bf	    0x891d00000000	            mov dword [0x040011c5], ebx 	       418	ui.c	FUNCTION_13
0x40011c5	              0x5b	                                 pop rbx	       419	ui.c	FUNCTION_13
0x40011c6	              0xc3	                                     ret	       419	ui.c	FUNCTION_13
0x40011c7	    0x660f1f840000	                    nop word [rax + rax]	       419	ui.c	FUNCTION_13
0x40011d0	      0xe800000000	                          call 0x40011d5	       413	ui.c	FUNCTION_13	CALL_1
0x40011d5	    0x891d00000000	            mov dword [0x040011db], ebx 	       418	ui.c	FUNCTION_13
0x40011db	              0x5b	                                 pop rbx	       419	ui.c	FUNCTION_13
0x40011dc	              0xc3	                                     ret	       419	ui.c	FUNCTION_13
ui_new_shellsize	FOR,0:functions,0:IF,2:ELSE,1:CALL,2:DO,0:SWITCH,0:WHILE,0	14
0x4001160	    0x8b0500000000	            mov eax, dword [0x04001166] 	       382	ui.c	FUNCTION_11	IF_1
0x4001166	            0x85c0	                           test eax, eax	       382	ui.c	FUNCTION_11	IF_1
0x4001168	            0x741e	                            je 0x4001188	       382	ui.c	FUNCTION_11	IF_1
0x400116a	    0x8b1500000000	            mov edx, dword [0x04001170] 	       382	ui.c	FUNCTION_11	IF_1
0x4001170	            0x85d2	                           test edx, edx	       382	ui.c	FUNCTION_11	IF_1
0x4001172	            0x7514	                           jne 0x4001188	       382	ui.c	FUNCTION_11	IF_1
0x4001174	    0x8b0500000000	            mov eax, dword [0x0400117a] 	       385	ui.c	FUNCTION_11	IF_1	IF_2
0x400117a	            0x85c0	                           test eax, eax	       385	ui.c	FUNCTION_11	IF_1	IF_2
0x400117c	            0x7512	                           jne 0x4001190	       385	ui.c	FUNCTION_11	IF_1	IF_2
0x400117e	      0xe900000000	                           jmp 0x4001183	       389	ui.c	FUNCTION_11	IF_1	CALL_2
0x4001183	       0xf1f440000	                   nop dword [rax + rax]	       389	ui.c	FUNCTION_11	IF_1	CALL_2
0x4001188	            0xf3c3	                                     ret	       389	ui.c	FUNCTION_11	IF_1	CALL_2
0x400118a	    0x660f1f440000	                    nop word [rax + rax]	       389	ui.c	FUNCTION_11	IF_1	CALL_2
0x4001190	      0xe900000000	                           jmp 0x4001195	       386	ui.c	FUNCTION_11	IF_1	CALL_1
ui_write	FOR,0:functions,0:IF,6:ELSE,0:CALL,5:DO,0:SWITCH,0:WHILE,0	63
0x4000db0	              0x55	                                push rbp	        29	ui.c	FUNCTION_1
0x4000db1	              0x53	                                push rbx	        29	ui.c	FUNCTION_1
0x4000db2	          0x4889fb	                            mov rbx, rdi	        29	ui.c	FUNCTION_1
0x4000db5	        0x4883ec18	                           sub rsp, 0x18	        29	ui.c	FUNCTION_1
0x4000db9	    0x448b0d000000	            mov r9d, dword [0x04000dc0] 	        31	ui.c	FUNCTION_1	IF_1
0x4000dc0	        0x8974240c	              mov dword [rsp + 0xc], esi	        29	ui.c	FUNCTION_1
0x4000dc4	          0x4585c9	                           test r9d, r9d	        31	ui.c	FUNCTION_1	IF_1
0x4000dc7	            0x741f	                            je 0x4000de8	        31	ui.c	FUNCTION_1	IF_1
0x4000dc9	    0x448b05000000	            mov r8d, dword [0x04000dd0] 	        31	ui.c	FUNCTION_1	IF_1
0x4000dd0	          0x4585c0	                           test r8d, r8d	        31	ui.c	FUNCTION_1	IF_1
0x4000dd3	            0x7513	                           jne 0x4000de8	        31	ui.c	FUNCTION_1	IF_1
0x4000dd5	    0x8b3d00000000	            mov edi, dword [0x04000ddb] 	        31	ui.c	FUNCTION_1	IF_1
0x4000ddb	            0x85ff	                           test edi, edi	        31	ui.c	FUNCTION_1	IF_1
0x4000ddd	     0xf848d000000	                            je 0x4000e70	        31	ui.c	FUNCTION_1	IF_1
0x4000de3	       0xf1f440000	                   nop dword [rax + rax]	        31	ui.c	FUNCTION_1	IF_1
0x4000de8	    0x8b0d00000000	            mov ecx, dword [0x04000dee] 	        41	ui.c	FUNCTION_1	IF_3
0x4000dee	            0x85c9	                           test ecx, ecx	        41	ui.c	FUNCTION_1	IF_3
0x4000df0	            0x752e	                           jne 0x4000e20	        41	ui.c	FUNCTION_1	IF_3
0x4000df2	    0x8b1500000000	            mov edx, dword [0x04000df8] 	        46	ui.c	FUNCTION_1	IF_3	IF_4
0x4000df8	            0x31ed	                            xor ebp, ebp	        44	ui.c	FUNCTION_1	IF_3
0x4000dfa	            0x85d2	                           test edx, edx	        46	ui.c	FUNCTION_1	IF_3	IF_4
0x4000dfc	            0x7538	                           jne 0x4000e36	        46	ui.c	FUNCTION_1	IF_3	IF_4
0x4000dfe	        0x8b74240c	              mov esi, dword [rsp + 0xc]	        55	ui.c	FUNCTION_1	IF_3	CALL_4
0x4000e02	          0x4889df	                            mov rdi, rbx	        55	ui.c	FUNCTION_1	IF_3	CALL_4
0x4000e05	      0xe800000000	                          call 0x4000e0a	        55	ui.c	FUNCTION_1	IF_3	CALL_4
0x4000e0a	    0x8b0500000000	            mov eax, dword [0x04000e10] 	        58	ui.c	FUNCTION_1	IF_3	IF_6
0x4000e10	            0x85c0	                           test eax, eax	        58	ui.c	FUNCTION_1	IF_3	IF_6
0x4000e12	            0x7544	                           jne 0x4000e58	        58	ui.c	FUNCTION_1	IF_3	IF_6
0x4000e14	        0x4883c418	                           add rsp, 0x18	        63	ui.c	FUNCTION_1
0x4000e18	              0x5b	                                 pop rbx	        63	ui.c	FUNCTION_1
0x4000e19	              0x5d	                                 pop rbp	        63	ui.c	FUNCTION_1
0x4000e1a	              0xc3	                                     ret	        63	ui.c	FUNCTION_1
0x4000e1b	       0xf1f440000	                   nop dword [rax + rax]	        63	ui.c	FUNCTION_1
0x4000e20	    0x48833d000000	               cmp qword [0x04000e28], 0	        41	ui.c	FUNCTION_1	IF_3
0x4000e28	            0x74ea	                            je 0x4000e14	        41	ui.c	FUNCTION_1	IF_3
0x4000e2a	    0x8b1500000000	            mov edx, dword [0x04000e30] 	        46	ui.c	FUNCTION_1	IF_3	IF_4
0x4000e30	            0x31ed	                            xor ebp, ebp	        44	ui.c	FUNCTION_1	IF_3
0x4000e32	            0x85d2	                           test edx, edx	        46	ui.c	FUNCTION_1	IF_3	IF_4
0x4000e34	            0x74c8	                            je 0x4000dfe	        46	ui.c	FUNCTION_1	IF_3	IF_4
0x4000e36	      0x488d54240c	                    lea rdx, [rsp + 0xc]	        49	ui.c	FUNCTION_1	IF_3	IF_4	CALL_3
0x4000e3b	          0x4889de	                            mov rsi, rbx	        49	ui.c	FUNCTION_1	IF_3	IF_4	CALL_3
0x4000e3e	      0xbf00000000	                              mov edi, 0	        49	ui.c	FUNCTION_1	IF_3	IF_4	CALL_3
0x4000e43	      0xe800000000	                          call 0x4000e48	        49	ui.c	FUNCTION_1	IF_3	IF_4	CALL_3
0x4000e48	          0x4885c0	                           test rax, rax	        50	ui.c	FUNCTION_1	IF_3	IF_4	IF_5
0x4000e4b	          0x4889c5	                            mov rbp, rax	        49	ui.c	FUNCTION_1	IF_3	IF_4	CALL_3
0x4000e4e	        0x480f45d8	                         cmovne rbx, rax	        50	ui.c	FUNCTION_1	IF_3	IF_4	IF_5
0x4000e52	            0xebaa	                           jmp 0x4000dfe	        50	ui.c	FUNCTION_1	IF_3	IF_4	IF_5
0x4000e54	         0xf1f4000	                         nop dword [rax]	        50	ui.c	FUNCTION_1	IF_3	IF_4	IF_5
0x4000e58	          0x4889ef	                            mov rdi, rbp	        59	ui.c	FUNCTION_1	IF_3	CALL_5
0x4000e5b	      0xe800000000	                          call 0x4000e60	        59	ui.c	FUNCTION_1	IF_3	CALL_5
0x4000e60	        0x4883c418	                           add rsp, 0x18	        63	ui.c	FUNCTION_1
0x4000e64	              0x5b	                                 pop rbx	        63	ui.c	FUNCTION_1
0x4000e65	              0x5d	                                 pop rbp	        63	ui.c	FUNCTION_1
0x4000e66	              0xc3	                                     ret	        63	ui.c	FUNCTION_1
0x4000e67	    0x660f1f840000	                    nop word [rax + rax]	        63	ui.c	FUNCTION_1
0x4000e70	          0x4889df	                            mov rdi, rbx	        33	ui.c	FUNCTION_1	IF_1	CALL_1
0x4000e73	      0xe800000000	                          call 0x4000e78	        33	ui.c	FUNCTION_1	IF_1	CALL_1
0x4000e78	    0x488b3d000000	            mov rdi, qword [0x04000e7f] 	        34	ui.c	FUNCTION_1	IF_1	IF_2
0x4000e7f	          0x4885ff	                           test rdi, rdi	        34	ui.c	FUNCTION_1	IF_1	IF_2
0x4000e82	            0x7490	                            je 0x4000e14	        34	ui.c	FUNCTION_1	IF_1	IF_2
0x4000e84	    0x8b3500000000	            mov esi, dword [0x04000e8a] 	        35	ui.c	FUNCTION_1	IF_1	CALL_2
0x4000e8a	      0xe800000000	                          call 0x4000e8f	        35	ui.c	FUNCTION_1	IF_1	CALL_2
0x4000e8f	            0xeb83	                           jmp 0x4000e14	        35	ui.c	FUNCTION_1	IF_1	CALL_2
ui_cursor_shape	FOR,0:functions,0:IF,0:ELSE,0:CALL,1:DO,0:SWITCH,0:WHILE,0	2
0x40031c0	            0x31ff	                            xor edi, edi	      1981	ui.c	FUNCTION_58	CALL_1
0x40031c2	            0xebcc	          jmp sym.ui_cursor_shape_forced	      1981	ui.c	FUNCTION_58	CALL_1
clip_x11_set_selection	FOR,0:functions,0:IF,0:ELSE,0:CALL,0:DO,0:SWITCH,0:WHILE,0	1
0x4003410	            0xf3c3	                                     ret	      2546	ui.c	FUNCTION_72
add_to_input_buf_csi	FOR,1:functions,0:IF,1:ELSE,0:CALL,2:DO,0:SWITCH,0:WHILE,0	40
0x4002ac0	        0x4883ec18	                           sub rsp, 0x18	      1716	ui.c	FUNCTION_51
0x4002ac4	    0x64488b042528	                mov rax, qword fs:[0x28]	      1716	ui.c	FUNCTION_51
0x4002acd	      0x4889442408	                mov qword [rsp + 8], rax	      1716	ui.c	FUNCTION_51
0x4002ad2	            0x31c0	                            xor eax, eax	      1716	ui.c	FUNCTION_51
0x4002ad4	            0x85f6	                           test esi, esi	      1720	ui.c	FUNCTION_51	FOR_1
0x4002ad6	            0x7e70	                           jle 0x4002b48	      1720	ui.c	FUNCTION_51	FOR_1
0x4002ad8	          0x8d46ff	                      lea eax, [rsi - 1]	      1720	ui.c	FUNCTION_51	FOR_1
0x4002adb	          0x4989fa	                            mov r10, rdi	      1720	ui.c	FUNCTION_51	FOR_1
0x4002ade	      0x4c8d5c0701	                lea r11, [rdi + rax + 1]	      1720	ui.c	FUNCTION_51	FOR_1
0x4002ae3	            0xeb12	                           jmp 0x4002af7	      1720	ui.c	FUNCTION_51	FOR_1
0x4002ae5	           0xf1f00	                         nop dword [rax]	      1720	ui.c	FUNCTION_51	FOR_1
0x4002ae8	        0x41803a9b	                    cmp byte [r10], 0x9b	      1723	ui.c	FUNCTION_51	FOR_1	IF_1
0x4002aec	            0x7428	                            je 0x4002b16	      1723	ui.c	FUNCTION_51	FOR_1	IF_1
0x4002aee	        0x4983c201	                              add r10, 1	      1723	ui.c	FUNCTION_51	FOR_1	IF_1
0x4002af2	          0x4d39da	                            cmp r10, r11	      1720	ui.c	FUNCTION_51	FOR_1
0x4002af5	            0x7451	                            je 0x4002b48	      1720	ui.c	FUNCTION_51	FOR_1
0x4002af7	    0x813d00000000	         cmp dword [0x04002b01], 0x1005 	      1698	ui.c	FUNCTION_50	IF_1
0x4002b01	            0x7fe5	                            jg 0x4002ae8	      1698	ui.c	FUNCTION_50	IF_1
0x4002b03	      0xbe01000000	                              mov esi, 1	      1698	ui.c	FUNCTION_50	IF_1
0x4002b08	          0x4c89d7	                            mov rdi, r10	      1698	ui.c	FUNCTION_50	IF_1
0x4002b0b	      0xe8c0dfffff	       call sym.add_to_input_buf.part.11	      1698	ui.c	FUNCTION_50	IF_1
0x4002b10	        0x41803a9b	                    cmp byte [r10], 0x9b	      1723	ui.c	FUNCTION_51	FOR_1	IF_1
0x4002b14	            0x75d8	                           jne 0x4002aee	      1723	ui.c	FUNCTION_51	FOR_1	IF_1
0x4002b16	    0x813d00000000	         cmp dword [0x04002b20], 0x1004 	      1698	ui.c	FUNCTION_50	IF_1
0x4002b20	        0xc60424fd	                    mov byte [rsp], 0xfd	      1726	ui.c	FUNCTION_51	FOR_1	IF_1
0x4002b24	      0xc644240151	                mov byte [rsp + 1], 0x51	      1727	ui.c	FUNCTION_51	FOR_1	IF_1
0x4002b29	            0x7fc3	                            jg 0x4002aee	      1698	ui.c	FUNCTION_50	IF_1
0x4002b2b	      0xbe02000000	                              mov esi, 2	      1698	ui.c	FUNCTION_50	IF_1
0x4002b30	          0x4889e7	                            mov rdi, rsp	      1698	ui.c	FUNCTION_50	IF_1
0x4002b33	      0xe898dfffff	       call sym.add_to_input_buf.part.11	      1698	ui.c	FUNCTION_50	IF_1
0x4002b38	        0x4983c201	                              add r10, 1	      1698	ui.c	FUNCTION_50	IF_1
0x4002b3c	          0x4d39da	                            cmp r10, r11	      1720	ui.c	FUNCTION_51	FOR_1
0x4002b3f	            0x75b6	                           jne 0x4002af7	      1720	ui.c	FUNCTION_51	FOR_1
0x4002b41	     0xf1f80000000	                         nop dword [rax]	      1720	ui.c	FUNCTION_51	FOR_1
0x4002b48	      0x488b442408	                mov rax, qword [rsp + 8]	      1731	ui.c	FUNCTION_51
0x4002b4d	    0x644833042528	                xor rax, qword fs:[0x28]	      1731	ui.c	FUNCTION_51
0x4002b56	            0x7505	                           jne 0x4002b5d	      1731	ui.c	FUNCTION_51
0x4002b58	        0x4883c418	                           add rsp, 0x18	      1731	ui.c	FUNCTION_51
0x4002b5c	              0xc3	                                     ret	      1731	ui.c	FUNCTION_51
0x4002b5d	      0xe800000000	                          call 0x4002b62	      1731	ui.c	FUNCTION_51
x11_setup_selection	FOR,0:functions,0:IF,0:ELSE,0:CALL,1:DO,0:SWITCH,0:WHILE,0	5
0x4003300	          0x4531c0	                            xor r8d, r8d	      2124	ui.c	ELSE_1	FUNCTION_64	CALL_1
0x4003303	      0xb900000000	                              mov ecx, 0	      2124	ui.c	ELSE_1	FUNCTION_64	CALL_1
0x4003308	            0x31d2	                            xor edx, edx	      2124	ui.c	ELSE_1	FUNCTION_64	CALL_1
0x400330a	      0xbe00004000	                       mov esi, 0x400000	      2124	ui.c	ELSE_1	FUNCTION_64	CALL_1
0x400330f	      0xe900000000	                           jmp 0x4003314	      2124	ui.c	ELSE_1	FUNCTION_64	CALL_1
ui_cursor_shape_forced	FOR,0:functions,0:IF,1:ELSE,1:CALL,4:DO,0:SWITCH,0:WHILE,0	11
0x4003190	        0x4883ec08	                              sub rsp, 8	      1961	ui.c	FUNCTION_57
0x4003194	    0x8b0500000000	            mov eax, dword [0x0400319a] 	      1963	ui.c	FUNCTION_57	IF_1
0x400319a	            0x85c0	                           test eax, eax	      1963	ui.c	FUNCTION_57	IF_1
0x400319c	            0x7512	                           jne 0x40031b0	      1963	ui.c	FUNCTION_57	IF_1
0x400319e	      0xe800000000	                          call 0x40031a3	      1967	ui.c	FUNCTION_57	CALL_2
0x40031a3	        0x4883c408	                              add rsp, 8	      1976	ui.c	FUNCTION_57
0x40031a7	      0xe900000000	                           jmp 0x40031ac	      1974	ui.c	FUNCTION_57	CALL_4
0x40031ac	         0xf1f4000	                         nop dword [rax]	      1974	ui.c	FUNCTION_57	CALL_4
0x40031b0	      0xe800000000	                          call 0x40031b5	      1964	ui.c	FUNCTION_57	CALL_1
0x40031b5	        0x4883c408	                              add rsp, 8	      1976	ui.c	FUNCTION_57
0x40031b9	      0xe900000000	                           jmp 0x40031be	      1974	ui.c	FUNCTION_57	CALL_4
set_input_buf	FOR,0:functions,0:IF,2:ELSE,0:CALL,3:DO,0:SWITCH,0:WHILE,0	20
0x4002a50	          0x4885ff	                           test rdi, rdi	      1678	ui.c	FUNCTION_49	IF_1
0x4002a53	            0x743b	                            je 0x4002a90	      1678	ui.c	FUNCTION_49	IF_1
0x4002a55	              0x53	                                push rbx	      1675	ui.c	FUNCTION_49
0x4002a56	        0x488b7710	            mov rsi, qword [rdi + 0x10] 	      1680	ui.c	FUNCTION_49	IF_1	IF_2
0x4002a5a	          0x4889fb	                            mov rbx, rdi	      1680	ui.c	FUNCTION_49	IF_1	IF_2
0x4002a5d	          0x4885f6	                           test rsi, rsi	      1680	ui.c	FUNCTION_49	IF_1	IF_2
0x4002a60	            0x7423	                            je 0x4002a85	      1680	ui.c	FUNCTION_49	IF_1	IF_2
0x4002a62	          0x486317	                 movsxd rdx, dword [rdi]	        59	string3.h	FUNCTION_83	CALL_3
0x4002a65	      0xb906100000	                         mov ecx, 0x1006	        59	string3.h	FUNCTION_83	CALL_3
0x4002a6a	      0xbf00000000	                              mov edi, 0	        59	string3.h	FUNCTION_83	CALL_3
0x4002a6f	      0xe800000000	                          call 0x4002a74	        59	string3.h	FUNCTION_83	CALL_3
0x4002a74	            0x8b03	                    mov eax, dword [rbx]	      1683	ui.c	FUNCTION_49	IF_1	IF_2
0x4002a76	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1684	ui.c	FUNCTION_49	IF_1	IF_2	CALL_2
0x4002a7a	    0x890500000000	            mov dword [0x04002a80], eax 	      1683	ui.c	FUNCTION_49	IF_1	IF_2
0x4002a80	      0xe800000000	                          call 0x4002a85	      1684	ui.c	FUNCTION_49	IF_1	IF_2	CALL_2
0x4002a85	          0x4889df	                            mov rdi, rbx	      1686	ui.c	FUNCTION_49	IF_1	CALL_3
0x4002a88	              0x5b	                                 pop rbx	      1688	ui.c	FUNCTION_49
0x4002a89	      0xe900000000	                           jmp 0x4002a8e	      1686	ui.c	FUNCTION_49	IF_1	CALL_3
0x4002a8e	            0x6690	                                     nop	      1686	ui.c	FUNCTION_49	IF_1	CALL_3
0x4002a90	            0xf3c3	                                     ret	      1686	ui.c	FUNCTION_49	IF_1	CALL_3
x11_setup_atoms	FOR,0:functions,0:IF,0:ELSE,0:CALL,8:DO,0:SWITCH,0:WHILE,0	44
0x4003240	              0x53	                                push rbx	      2048	ui.c	FUNCTION_62
0x4003241	            0x31d2	                            xor edx, edx	      2049	ui.c	FUNCTION_62	CALL_1
0x4003243	          0x4889fb	                            mov rbx, rdi	      2048	ui.c	FUNCTION_62
0x4003246	      0xbe00000000	                              mov esi, 0	      2049	ui.c	FUNCTION_62	CALL_1
0x400324b	      0xe800000000	                          call 0x4003250	      2049	ui.c	FUNCTION_62	CALL_1
0x4003250	          0x4889df	                            mov rdi, rbx	      2051	ui.c	FUNCTION_62	CALL_2
0x4003253	            0x31d2	                            xor edx, edx	      2051	ui.c	FUNCTION_62	CALL_2
0x4003255	      0xbe00000000	                              mov esi, 0	      2051	ui.c	FUNCTION_62	CALL_2
0x400325a	    0x488905000000	            mov qword [0x04003261], rax 	      2049	ui.c	FUNCTION_62	CALL_1
0x4003261	      0xe800000000	                          call 0x4003266	      2051	ui.c	FUNCTION_62	CALL_2
0x4003266	          0x4889df	                            mov rdi, rbx	      2052	ui.c	FUNCTION_62	CALL_3
0x4003269	            0x31d2	                            xor edx, edx	      2052	ui.c	FUNCTION_62	CALL_3
0x400326b	      0xbe00000000	                              mov esi, 0	      2052	ui.c	FUNCTION_62	CALL_3
0x4003270	    0x488905000000	            mov qword [0x04003277], rax 	      2051	ui.c	FUNCTION_62	CALL_2
0x4003277	      0xe800000000	                          call 0x400327c	      2052	ui.c	FUNCTION_62	CALL_3
0x400327c	          0x4889df	                            mov rdi, rbx	      2054	ui.c	FUNCTION_62	CALL_4
0x400327f	            0x31d2	                            xor edx, edx	      2054	ui.c	FUNCTION_62	CALL_4
0x4003281	      0xbe00000000	                              mov esi, 0	      2054	ui.c	FUNCTION_62	CALL_4
0x4003286	    0x488905000000	            mov qword [0x0400328d], rax 	      2052	ui.c	FUNCTION_62	CALL_3
0x400328d	      0xe800000000	                          call 0x4003292	      2054	ui.c	FUNCTION_62	CALL_4
0x4003292	          0x4889df	                            mov rdi, rbx	      2055	ui.c	FUNCTION_62	CALL_5
0x4003295	            0x31d2	                            xor edx, edx	      2055	ui.c	FUNCTION_62	CALL_5
0x4003297	      0xbe00000000	                              mov esi, 0	      2055	ui.c	FUNCTION_62	CALL_5
0x400329c	    0x488905000000	            mov qword [0x040032a3], rax 	      2054	ui.c	FUNCTION_62	CALL_4
0x40032a3	      0xe800000000	                          call 0x40032a8	      2055	ui.c	FUNCTION_62	CALL_5
0x40032a8	          0x4889df	                            mov rdi, rbx	      2056	ui.c	FUNCTION_62	CALL_6
0x40032ab	            0x31d2	                            xor edx, edx	      2056	ui.c	FUNCTION_62	CALL_6
0x40032ad	      0xbe00000000	                              mov esi, 0	      2056	ui.c	FUNCTION_62	CALL_6
0x40032b2	    0x488905000000	            mov qword [0x040032b9], rax 	      2055	ui.c	FUNCTION_62	CALL_5
0x40032b9	      0xe800000000	                          call 0x40032be	      2056	ui.c	FUNCTION_62	CALL_6
0x40032be	          0x4889df	                            mov rdi, rbx	      2058	ui.c	FUNCTION_62	CALL_7
0x40032c1	            0x31d2	                            xor edx, edx	      2058	ui.c	FUNCTION_62	CALL_7
0x40032c3	      0xbe00000000	                              mov esi, 0	      2058	ui.c	FUNCTION_62	CALL_7
0x40032c8	    0x488905000000	            mov qword [0x040032cf], rax 	      2056	ui.c	FUNCTION_62	CALL_6
0x40032cf	    0x48c705000000	               mov qword [0x040032da], 1	      2057	ui.c	FUNCTION_62
0x40032da	      0xe800000000	                          call 0x40032df	      2058	ui.c	FUNCTION_62	CALL_7
0x40032df	          0x4889df	                            mov rdi, rbx	      2059	ui.c	FUNCTION_62	CALL_8
0x40032e2	            0x31d2	                            xor edx, edx	      2059	ui.c	FUNCTION_62	CALL_8
0x40032e4	      0xbe00000000	                              mov esi, 0	      2059	ui.c	FUNCTION_62	CALL_8
0x40032e9	    0x488905000000	            mov qword [0x040032f0], rax 	      2058	ui.c	FUNCTION_62	CALL_7
0x40032f0	      0xe800000000	                          call 0x40032f5	      2059	ui.c	FUNCTION_62	CALL_8
0x40032f5	              0x5b	                                 pop rbx	      2060	ui.c	FUNCTION_62
0x40032f6	    0x488905000000	            mov qword [0x040032fd], rax 	      2059	ui.c	FUNCTION_62	CALL_8
0x40032fd	              0xc3	                                     ret	      2060	ui.c	FUNCTION_62
clip_invert_rectangle	FOR,0:functions,0:IF,1:ELSE,1:CALL,2:DO,0:SWITCH,0:WHILE,0	6
0x4000050	    0x8b0500000000	            mov eax, dword [0x04000056] 	      1192	ui.c	FUNCTION_34	IF_1
0x4000056	            0x85c0	                           test eax, eax	      1192	ui.c	FUNCTION_34	IF_1
0x4000058	            0x7506	                           jne 0x4000060	      1192	ui.c	FUNCTION_34	IF_1
0x400005a	      0xe900000000	                           jmp 0x400005f	      1196	ui.c	FUNCTION_34	CALL_2
0x400005f	              0x90	                                     nop	      1196	ui.c	FUNCTION_34	CALL_2
0x4000060	      0xe900000000	                           jmp 0x4000065	      1193	ui.c	FUNCTION_34	CALL_1
yank_cut_buffer0	FOR,0:functions,0:IF,6:ELSE,0:CALL,12:DO,0:SWITCH,0:WHILE,0	78
0x4003490	            0x4154	                                push r12	      2563	ui.c	FUNCTION_74
0x4003492	              0x55	                                push rbp	      2563	ui.c	FUNCTION_74
0x4003493	          0x4889f5	                            mov rbp, rsi	      2563	ui.c	FUNCTION_74
0x4003496	              0x53	                                push rbx	      2563	ui.c	FUNCTION_74
0x4003497	            0x31d2	                            xor edx, edx	      2565	ui.c	FUNCTION_74	CALL_1
0x4003499	        0x4883ec30	                           sub rsp, 0x30	      2563	ui.c	FUNCTION_74
0x400349d	      0x488d74240c	                    lea rsi, [rsp + 0xc]	      2565	ui.c	FUNCTION_74	CALL_1
0x40034a2	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      2564	ui.c	FUNCTION_74
0x40034aa	    0x64488b042528	                mov rax, qword fs:[0x28]	      2563	ui.c	FUNCTION_74
0x40034b3	      0x4889442428	             mov qword [rsp + 0x28], rax	      2563	ui.c	FUNCTION_74
0x40034b8	            0x31c0	                            xor eax, eax	      2563	ui.c	FUNCTION_74
0x40034ba	      0xe800000000	                          call 0x40034bf	      2565	ui.c	FUNCTION_74	CALL_1
0x40034bf	      0x486354240c	          movsxd rdx, dword [rsp + 0xc] 	      2567	ui.c	FUNCTION_74	IF_1
0x40034c4	            0x85d2	                           test edx, edx	      2567	ui.c	FUNCTION_74	IF_1
0x40034c6	            0x7e4f	                           jle 0x4003517	      2567	ui.c	FUNCTION_74	IF_1
0x40034c8	          0x4889c3	                            mov rbx, rax	      2567	ui.c	FUNCTION_74	IF_1
0x40034cb	    0x8b0500000000	            mov eax, dword [0x040034d1] 	      2576	ui.c	FUNCTION_74	IF_1	IF_2
0x40034d1	            0x85c0	                           test eax, eax	      2576	ui.c	FUNCTION_74	IF_1	IF_2
0x40034d3	            0x7563	                           jne 0x4003538	      2576	ui.c	FUNCTION_74	IF_1	IF_2
0x40034d5	          0x4889e9	                            mov rcx, rbp	      2596	ui.c	FUNCTION_74	IF_1	CALL_7
0x40034d8	          0x4889de	                            mov rsi, rbx	      2596	ui.c	FUNCTION_74	IF_1	CALL_7
0x40034db	            0x31ff	                            xor edi, edi	      2596	ui.c	FUNCTION_74	IF_1	CALL_7
0x40034dd	      0xe800000000	                          call 0x40034e2	      2596	ui.c	FUNCTION_74	IF_1	CALL_7
0x40034e2	          0x4889df	                            mov rdi, rbx	      2597	ui.c	FUNCTION_74	IF_1	CALL_8
0x40034e5	      0xe800000000	                          call 0x40034ea	      2597	ui.c	FUNCTION_74	IF_1	CALL_8
0x40034ea	    0x48833d000000	               cmp qword [0x040034f2], 0	      2598	ui.c	FUNCTION_74	IF_1	IF_6
0x40034f2	            0x7e23	                           jle 0x4003517	      2598	ui.c	FUNCTION_74	IF_1	IF_6
0x40034f4	      0xe800000000	                          call 0x40034f9	      2600	ui.c	FUNCTION_74	IF_1	IF_6	CALL_9
0x40034f9	      0xba05000000	                              mov edx, 5	      2601	ui.c	FUNCTION_74	IF_1	IF_6	CALL_11
0x40034fe	      0xbe00000000	                              mov esi, 0	      2601	ui.c	FUNCTION_74	IF_1	IF_6	CALL_11
0x4003503	            0x31ff	                            xor edi, edi	      2601	ui.c	FUNCTION_74	IF_1	IF_6	CALL_11
0x4003505	      0xe800000000	                          call 0x400350a	      2601	ui.c	FUNCTION_74	IF_1	IF_6	CALL_11
0x400350a	          0x4889c7	                            mov rdi, rax	      2601	ui.c	FUNCTION_74	IF_1	IF_6	CALL_11
0x400350d	      0xe800000000	                          call 0x4003512	      2601	ui.c	FUNCTION_74	IF_1	IF_6	CALL_11
0x4003512	      0xe800000000	                          call 0x4003517	      2602	ui.c	FUNCTION_74	IF_1	IF_6	CALL_12
0x4003517	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2605	ui.c	FUNCTION_74
0x400351c	    0x644833042528	                xor rax, qword fs:[0x28]	      2605	ui.c	FUNCTION_74
0x4003525	     0xf8598000000	                           jne 0x40035c3	      2605	ui.c	FUNCTION_74
0x400352b	        0x4883c430	                           add rsp, 0x30	      2605	ui.c	FUNCTION_74
0x400352f	              0x5b	                                 pop rbx	      2605	ui.c	FUNCTION_74
0x4003530	              0x5d	                                 pop rbp	      2605	ui.c	FUNCTION_74
0x4003531	            0x415c	                                 pop r12	      2605	ui.c	FUNCTION_74
0x4003533	              0xc3	                                     ret	      2605	ui.c	FUNCTION_74
0x4003534	         0xf1f4000	                         nop dword [rax]	      2605	ui.c	FUNCTION_74
0x4003538	    0x488b15000000	            mov rdx, qword [0x0400353f] 	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x400353f	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x4003544	      0xbe00000000	                              mov esi, 0	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x4003549	    0xc74424100000	               mov dword [rsp + 0x10], 0	      2581	ui.c	FUNCTION_74	IF_1	IF_2
0x4003551	      0xe800000000	                          call 0x4003556	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x4003556	          0x83f801	                              cmp eax, 1	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x4003559	      0x486354240c	          movsxd rdx, dword [rsp + 0xc] 	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x400355e	     0xf8571ffffff	                           jne 0x40034d5	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x4003564	      0x488d54240c	                    lea rdx, [rsp + 0xc]	      2584	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_3
0x4003569	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2584	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_3
0x400356e	          0x4889de	                            mov rsi, rbx	      2584	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_3
0x4003571	      0xe800000000	                          call 0x4003576	      2584	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_3
0x4003576	          0x4885c0	                           test rax, rax	      2585	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4
0x4003579	          0x4989c4	                            mov r12, rax	      2584	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_3
0x400357c	            0x742d	                            je 0x40035ab	      2585	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4
0x400357e	      0x486354240c	          movsxd rdx, dword [rsp + 0xc] 	      2587	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4003583	          0x4889e9	                            mov rcx, rbp	      2587	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4003586	          0x4889c6	                            mov rsi, rax	      2587	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4003589	            0x31ff	                            xor edi, edi	      2587	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_4
0x400358b	      0xe800000000	                          call 0x4003590	      2587	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4003590	          0x4c89e7	                            mov rdi, r12	      2588	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_5
0x4003593	      0xe800000000	                          call 0x4003598	      2588	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_5
0x4003598	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x400359d	            0x31d2	                            xor edx, edx	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x400359f	            0x31f6	                            xor esi, esi	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x40035a1	      0xe800000000	                          call 0x40035a6	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x40035a6	      0xe937ffffff	                           jmp 0x40034e2	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x40035ab	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x40035b0	            0x31d2	                            xor edx, edx	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x40035b2	            0x31f6	                            xor esi, esi	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x40035b4	      0xe800000000	                          call 0x40035b9	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x40035b9	      0x486354240c	          movsxd rdx, dword [rsp + 0xc] 	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x40035be	      0xe912ffffff	                           jmp 0x40034d5	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x40035c3	      0xe800000000	                          call 0x40035c8	      2605	ui.c	FUNCTION_74
mouse_find_win	FOR,3:functions,0:IF,5:ELSE,1:CALL,1:DO,0:SWITCH,0:WHILE,0	66
0x40039b0	    0x4c8b0d000000	              mov r9, qword [0x040039b7]	      3167	ui.c	FUNCTION_77
0x40039b7	    0x488b05000000	            mov rax, qword [0x040039be] 	      3166	ui.c	FUNCTION_77
0x40039be	    0x418b919c0000	              mov edx, dword [r9 + 0x9c]	      3167	ui.c	FUNCTION_77
0x40039c5	            0x2917	                    sub dword [rdi], edx	      3167	ui.c	FUNCTION_77
0x40039c7	    0x660f1f840000	                    nop word [rax + rax]	      3167	ui.c	FUNCTION_77
0x40039d0	           0xfb610	                   movzx edx, byte [rax]	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x40039d3	            0x84d2	                             test dl, dl	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x40039d5	     0xf8485000000	                            je 0x4003a60	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x40039db	        0x4c8b4030	              mov r8, qword [rax + 0x30]	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x40039df	          0x80fa01	                               cmp dl, 1	      3172	ui.c	FUNCTION_77	FOR_1	IF_2
0x40039e2	        0x498b4020	              mov rax, qword [r8 + 0x20]	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x40039e6	            0x7438	                            je 0x4003a20	      3172	ui.c	FUNCTION_77	FOR_1	IF_2
0x40039e8	          0x4885c0	                           test rax, rax	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x40039eb	     0xf848f000000	                            je 0x4003a80	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x40039f1	            0x8b17	                    mov edx, dword [rdi]	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x40039f3	        0x418b480c	               mov ecx, dword [r8 + 0xc]	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x40039f7	            0x39d1	                            cmp ecx, edx	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x40039f9	     0xf8f81000000	                            jg 0x4003a80	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x40039ff	              0x90	                                     nop	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x4003a00	        0x4c8b4020	              mov r8, qword [rax + 0x20]	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4003a04	            0x29ca	                            sub edx, ecx	      3187	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4003a06	            0x8917	                    mov dword [rdi], edx	      3187	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4003a08	          0x4d85c0	                             test r8, r8	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4003a0b	            0x74c3	                            je 0x40039d0	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4003a0d	          0x8b480c	              mov ecx, dword [rax + 0xc]	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x4003a10	            0x39d1	                            cmp ecx, edx	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x4003a12	            0x7fbc	                            jg 0x40039d0	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x4003a14	          0x4c89c0	                             mov rax, r8	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x4003a17	            0xebe7	                           jmp 0x4003a00	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x4003a19	     0xf1f80000000	                         nop dword [rax]	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x4003a20	          0x4885c0	                           test rax, rax	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4003a23	            0x745b	                            je 0x4003a80	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4003a25	            0x8b16	                    mov edx, dword [rsi]	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4003a27	        0x418b4804	                 mov ecx, dword [r8 + 4]	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4003a2b	            0x39ca	                            cmp edx, ecx	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4003a2d	            0x7d13	                           jge 0x4003a42	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4003a2f	            0xeb4f	                           jmp 0x4003a80	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4003a31	     0xf1f80000000	                         nop dword [rax]	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4003a38	          0x8b4804	                mov ecx, dword [rax + 4]	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4003a3b	            0x39d1	                            cmp ecx, edx	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4003a3d	            0x7f91	                            jg 0x40039d0	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4003a3f	          0x4c89c0	                             mov rax, r8	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4003a42	        0x4c8b4020	              mov r8, qword [rax + 0x20]	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4003a46	            0x29ca	                            sub edx, ecx	      3178	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4003a48	            0x8916	                    mov dword [rsi], edx	      3178	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4003a4a	          0x4d85c0	                             test r8, r8	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4003a4d	            0x75e9	                           jne 0x4003a38	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4003a4f	           0xfb610	                   movzx edx, byte [rax]	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x4003a52	            0x84d2	                             test dl, dl	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x4003a54	            0x7585	                           jne 0x40039db	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x4003a56	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x4003a60	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x4003a64	         0xf1f4000	                         nop dword [rax]	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x4003a68	          0x4c39c8	                             cmp rax, r9	      3194	ui.c	FUNCTION_77	IF_5
0x4003a6b	            0x741b	                            je 0x4003a88	      3194	ui.c	FUNCTION_77	IF_5
0x4003a6d	        0x4d8b4920	               mov r9, qword [r9 + 0x20]	      3193	ui.c	FUNCTION_77	CALL_1
0x4003a71	          0x4d85c9	                             test r9, r9	      3193	ui.c	FUNCTION_77	CALL_1
0x4003a74	            0x75f2	                           jne 0x4003a68	      3193	ui.c	FUNCTION_77	CALL_1
0x4003a76	            0x31c0	                            xor eax, eax	      3201	ui.c	FUNCTION_77
0x4003a78	              0xc3	                                     ret	      3202	ui.c	FUNCTION_77
0x4003a79	     0xf1f80000000	                         nop dword [rax]	      3202	ui.c	FUNCTION_77
0x4003a80	          0x4c89c0	                             mov rax, r8	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x4003a83	      0xe948ffffff	                           jmp 0x40039d0	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x4003a88	    0x8b90a8010000	           mov edx, dword [rax + 0x1a8] 	      3197	ui.c	FUNCTION_77	IF_5
0x4003a8e	            0x2917	                    sub dword [rdi], edx	      3197	ui.c	FUNCTION_77	IF_5
0x4003a90	              0xc3	                                     ret	      3199	ui.c	FUNCTION_77	IF_5
clip_x11_owner_exists	FOR,0:functions,0:IF,0:ELSE,0:CALL,1:DO,0:SWITCH,0:WHILE,0	18
0x4003420	        0x4883ec18	                           sub rsp, 0x18	      2551	ui.c	FUNCTION_73
0x4003424	    0x8b0500000000	            mov eax, dword [0x0400342a] 	      2552	ui.c	FUNCTION_73	CALL_1
0x400342a	        0x488b7750	            mov rsi, qword [rdi + 0x50] 	      2552	ui.c	FUNCTION_73	CALL_1
0x400342e	    0x488b3d000000	            mov rdi, qword [0x04003435] 	      2552	ui.c	FUNCTION_73	CALL_1
0x4003435	            0x85c0	                           test eax, eax	      2552	ui.c	FUNCTION_73	CALL_1
0x4003437	            0x7517	                           jne 0x4003450	      2552	ui.c	FUNCTION_73	CALL_1
0x4003439	      0xe800000000	                          call 0x400343e	      2552	ui.c	FUNCTION_73	CALL_1
0x400343e	          0x4885c0	                           test rax, rax	      2552	ui.c	FUNCTION_73	CALL_1
0x4003441	           0xf95c0	                                setne al	      2552	ui.c	FUNCTION_73	CALL_1
0x4003444	        0x4883c418	                           add rsp, 0x18	      2553	ui.c	FUNCTION_73
0x4003448	           0xfb6c0	                           movzx eax, al	      2552	ui.c	FUNCTION_73	CALL_1
0x400344b	              0xc3	                                     ret	      2553	ui.c	FUNCTION_73
0x400344c	         0xf1f4000	                         nop dword [rax]	      2553	ui.c	FUNCTION_73
0x4003450	      0x4889742408	                mov qword [rsp + 8], rsi	      2553	ui.c	FUNCTION_73
0x4003455	      0xe800000000	                          call 0x400345a	      2552	ui.c	FUNCTION_73	CALL_1
0x400345a	      0x488b742408	                mov rsi, qword [rsp + 8]	      2552	ui.c	FUNCTION_73	CALL_1
0x400345f	          0x4889c7	                            mov rdi, rax	      2552	ui.c	FUNCTION_73	CALL_1
0x4003462	            0xebd5	                           jmp 0x4003439	      2552	ui.c	FUNCTION_73	CALL_1
clip_may_redraw_selection	FOR,0:functions,0:IF,4:ELSE,0:CALL,1:DO,0:SWITCH,0:WHILE,0	33
0x40015b0	    0x66833d000000	                cmp word [0x040015b8], 0	      1044	ui.c	FUNCTION_29	IF_1
0x40015b8	            0x7430	                            je 0x40015ea	      1044	ui.c	FUNCTION_29	IF_1
0x40015ba	    0x488b0d000000	            mov rcx, qword [0x040015c1] 	      1045	ui.c	FUNCTION_29	IF_1
0x40015c1	          0x4863c7	                         movsxd rax, edi	      1045	ui.c	FUNCTION_29	IF_1
0x40015c4	          0x4839c8	                            cmp rax, rcx	      1045	ui.c	FUNCTION_29	IF_1
0x40015c7	            0x7c21	                            jl 0x40015ea	      1045	ui.c	FUNCTION_29	IF_1
0x40015c9	    0x4c8b05000000	              mov r8, qword [0x040015d0]	      1046	ui.c	FUNCTION_29	IF_1
0x40015d0	          0x4c39c0	                             cmp rax, r8	      1046	ui.c	FUNCTION_29	IF_1
0x40015d3	            0x7f15	                            jg 0x40015ea	      1046	ui.c	FUNCTION_29	IF_1
0x40015d5	          0x4839c8	                            cmp rax, rcx	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x40015d8	          0x4189f1	                            mov r9d, esi	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x40015db	            0x7433	                            je 0x4001610	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x40015dd	          0x4c39c0	                             cmp rax, r8	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x40015e0	          0x8d0c16	                    lea ecx, [rsi + rdx]	      1042	ui.c	FUNCTION_29
0x40015e3	            0x741b	                            je 0x4001600	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x40015e5	          0x4139c9	                            cmp r9d, ecx	      1052	ui.c	FUNCTION_29	IF_1	IF_4
0x40015e8	            0x7c06	                            jl 0x40015f0	      1052	ui.c	FUNCTION_29	IF_1	IF_4
0x40015ea	            0xf3c3	                                     ret	      1052	ui.c	FUNCTION_29	IF_1	IF_4
0x40015ec	         0xf1f4000	                         nop dword [rax]	      1052	ui.c	FUNCTION_29	IF_1	IF_4
0x40015f0	          0x4531c0	                            xor r8d, r8d	      1053	ui.c	FUNCTION_29	IF_1	CALL_1
0x40015f3	            0x89fa	                            mov edx, edi	      1053	ui.c	FUNCTION_29	IF_1	CALL_1
0x40015f5	          0x4489ce	                            mov esi, r9d	      1053	ui.c	FUNCTION_29	IF_1	CALL_1
0x40015f8	      0xe973eaffff	                jmp sym.clip_invert_area	      1053	ui.c	FUNCTION_29	IF_1	CALL_1
0x40015fd	           0xf1f00	                         nop dword [rax]	      1053	ui.c	FUNCTION_29	IF_1	CALL_1
0x4001600	    0x8b0500000000	            mov eax, dword [0x04001606] 	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x4001606	            0x39c1	                            cmp ecx, eax	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x4001608	           0xf4fc8	                          cmovg ecx, eax	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x400160b	            0xebd8	                           jmp 0x40015e5	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x400160d	           0xf1f00	                         nop dword [rax]	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x4001610	    0x448b0d000000	            mov r9d, dword [0x04001617] 	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x4001617	          0x4439ce	                            cmp esi, r9d	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x400161a	        0x440f4dce	                         cmovge r9d, esi	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x400161e	            0xebbd	                           jmp 0x40015dd	      1048	ui.c	FUNCTION_29	IF_1	IF_2
is_clipboard_needs_update	FOR,0:functions,0:IF,0:ELSE,0:CALL,0:DO,0:SWITCH,0:WHILE,0	2
0x40012f0	    0x8b0500000000	            mov eax, dword [0x040012f6] 	       635	ui.c	FUNCTION_20
0x40012f6	              0xc3	                                     ret	       635	ui.c	FUNCTION_20
jump_to_mouse	FOR,2:functions,0:IF,57:ELSE,18:CALL,33:DO,0:SWITCH,0:WHILE,0	597
0x4003aa0	            0x4157	                                push r15	      2641	ui.c	FUNCTION_75
0x4003aa2	            0x4156	                                push r14	      2641	ui.c	FUNCTION_75
0x4003aa4	            0x4155	                                push r13	      2641	ui.c	FUNCTION_75
0x4003aa6	            0x4154	                                push r12	      2641	ui.c	FUNCTION_75
0x4003aa8	          0x4189fd	                           mov r13d, edi	      2641	ui.c	FUNCTION_75
0x4003aab	              0x55	                                push rbp	      2641	ui.c	FUNCTION_75
0x4003aac	              0x53	                                push rbx	      2641	ui.c	FUNCTION_75
0x4003aad	          0x4889f3	                            mov rbx, rsi	      2641	ui.c	FUNCTION_75
0x4003ab0	        0x4883ec38	                           sub rsp, 0x38	      2641	ui.c	FUNCTION_75
0x4003ab4	    0x8b0d00000000	            mov ecx, dword [0x04003aba] 	      2657	ui.c	FUNCTION_75
0x4003aba	    0xc70500000000	               mov dword [0x04003ac4], 0	      2662	ui.c	FUNCTION_75
0x4003ac4	    0x64488b042528	                mov rax, qword fs:[0x28]	      2641	ui.c	FUNCTION_75
0x4003acd	      0x4889442428	             mov qword [rsp + 0x28], rax	      2641	ui.c	FUNCTION_75
0x4003ad2	            0x31c0	                            xor eax, eax	      2641	ui.c	FUNCTION_75
0x4003ad4	    0x8b0500000000	            mov eax, dword [0x04003ada] 	      2656	ui.c	FUNCTION_75
0x4003ada	          0x83e720	                           and edi, 0x20	      2665	ui.c	FUNCTION_75	IF_1
0x4003add	    0xc70500000000	               mov dword [0x04003ae7], 0	      2663	ui.c	FUNCTION_75
0x4003ae7	        0x894c2424	             mov dword [rsp + 0x24], ecx	      2657	ui.c	FUNCTION_75
0x4003aeb	        0x89442420	             mov dword [rsp + 0x20], eax	      2656	ui.c	FUNCTION_75
0x4003aef	            0x7433	                            je 0x4003b24	      2665	ui.c	FUNCTION_75	IF_1
0x4003af1	    0x48833d000000	               cmp qword [0x04003af9], 0	      2669	ui.c	FUNCTION_75	IF_1	IF_2
0x4003af9	            0x7414	                            je 0x4003b0f	      2669	ui.c	FUNCTION_75	IF_1	IF_2
0x4003afb	    0x448b25000000	           mov r12d, dword [0x04003b02] 	      2670	ui.c	FUNCTION_75	IF_1	IF_2
0x4003b02	          0x4489ee	                           mov esi, r13d	      2670	ui.c	FUNCTION_75	IF_1	IF_2
0x4003b05	          0x83e6fa	                     and esi, 0xfffffffa	      2670	ui.c	FUNCTION_75	IF_1	IF_2
0x4003b08	          0x4585e4	                         test r12d, r12d	      2670	ui.c	FUNCTION_75	IF_1	IF_2
0x4003b0b	        0x440f44ee	                         cmove r13d, esi	      2670	ui.c	FUNCTION_75	IF_1	IF_2
0x4003b0f	    0x48c705000000	               mov qword [0x04003b1a], 0	      2671	ui.c	FUNCTION_75	IF_1
0x4003b1a	    0xc70500000000	               mov dword [0x04003b24], 0	      2672	ui.c	FUNCTION_75	IF_1
0x4003b24	        0x41f6c504	                            test r13b, 4	      2675	ui.c	FUNCTION_75	IF_3
0x4003b28	            0x740c	                            je 0x4003b36	      2675	ui.c	FUNCTION_75	IF_3
0x4003b2a	    0x3b0500000000	            cmp eax, dword [0x04003b30] 	      2676	ui.c	FUNCTION_75	IF_3
0x4003b30	     0xf848a010000	                            je 0x4003cc0	      2676	ui.c	FUNCTION_75	IF_3
0x4003b36	        0x41f6c508	                            test r13b, 8	      2717	ui.c	FUNCTION_75	IF_11
0x4003b3a	    0x890500000000	            mov dword [0x04003b40], eax 	      2714	ui.c	FUNCTION_75
0x4003b40	    0x890d00000000	            mov dword [0x04003b46], ecx 	      2715	ui.c	FUNCTION_75
0x4003b46	     0xf8584010000	                           jne 0x4003cd0	      2717	ui.c	FUNCTION_75	IF_11
0x4003b4c	            0x85c0	                           test eax, eax	      2723	ui.c	FUNCTION_75	IF_12
0x4003b4e	     0xf88bc010000	                            js 0x4003d10	      2723	ui.c	FUNCTION_75	IF_12
0x4003b54	          0x4863f0	                         movsxd rsi, eax	      2723	ui.c	FUNCTION_75	IF_12
0x4003b57	    0x483b35000000	            cmp rsi, qword [0x04003b5e] 	      2723	ui.c	FUNCTION_75	IF_12
0x4003b5e	     0xf8dac020000	                           jge 0x4003e10	      2723	ui.c	FUNCTION_75	IF_12
0x4003b64	            0x85c9	                           test ecx, ecx	      2723	ui.c	FUNCTION_75	IF_12
0x4003b66	     0xf88a4020000	                            js 0x4003e10	      2723	ui.c	FUNCTION_75	IF_12
0x4003b6c	          0x4863f9	                         movsxd rdi, ecx	      2723	ui.c	FUNCTION_75	IF_12
0x4003b6f	    0x483b3d000000	            cmp rdi, qword [0x04003b76] 	      2723	ui.c	FUNCTION_75	IF_12
0x4003b76	      0xbd20000000	                           mov ebp, 0x20	      2727	ui.c	FUNCTION_75	ELSE_1
0x4003b7b	            0x7f1f	                            jg 0x4003b9c	      2723	ui.c	FUNCTION_75	IF_12
0x4003b7d	    0x488b3d000000	            mov rdi, qword [0x04003b84] 	      2724	ui.c	FUNCTION_75	IF_12
0x4003b84	          0x4885ff	                           test rdi, rdi	      2724	ui.c	FUNCTION_75	IF_12
0x4003b87	            0x7413	                            je 0x4003b9c	      2724	ui.c	FUNCTION_75	IF_12
0x4003b89	    0x4c8b0d000000	              mov r9, qword [0x04003b90]	      2725	ui.c	FUNCTION_75	IF_12
0x4003b90	          0x4189c8	                            mov r8d, ecx	      2725	ui.c	FUNCTION_75	IF_12
0x4003b93	        0x450304b1	             add r8d, dword [r9 + rsi*4]	      2725	ui.c	FUNCTION_75	IF_12
0x4003b97	      0x420fb62c07	              movzx ebp, byte [rdi + r8]	      2725	ui.c	FUNCTION_75	IF_12
0x4003b9c	    0x4c8b35000000	            mov r14, qword [0x04003ba3] 	      2730	ui.c	FUNCTION_75	ELSE_1
0x4003ba3	        0x41f6c501	                            test r13b, 1	      2733	ui.c	FUNCTION_75	ELSE_1	IF_13
0x4003ba7	        0x418b7e40	            mov edi, dword [r14 + 0x40] 	      2731	ui.c	FUNCTION_75	ELSE_1
0x4003bab	        0x4d8b6638	            mov r12, qword [r14 + 0x38] 	      2731	ui.c	FUNCTION_75	ELSE_1
0x4003baf	        0x897c2408	                mov dword [rsp + 8], edi	      2731	ui.c	FUNCTION_75	ELSE_1
0x4003bb3	        0x418b7e44	            mov edi, dword [r14 + 0x44] 	      2731	ui.c	FUNCTION_75	ELSE_1
0x4003bb7	        0x897c240c	              mov dword [rsp + 0xc], edi	      2731	ui.c	FUNCTION_75	ELSE_1
0x4003bbb	     0xf8579010000	                           jne 0x4003d3a	      2733	ui.c	FUNCTION_75	ELSE_1	IF_13
0x4003bc1	            0x85c9	                           test ecx, ecx	      2735	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_14
0x4003bc3	     0xf8837020000	                            js 0x4003e00	      2735	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_14
0x4003bc9	      0x4c8d7c2424	                   lea r15, [rsp + 0x24]	      2739	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_5
0x4003bce	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2739	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_5
0x4003bd3	          0x4c89fe	                            mov rsi, r15	      2739	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_5
0x4003bd6	      0x48897c2410	             mov qword [rsp + 0x10], rdi	      2739	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_5
0x4003bdb	      0xe800000000	                          call 0x4003be0	      2739	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_5
0x4003be0	          0x4885c0	                           test rax, rax	      2740	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_15
0x4003be3	          0x4889c2	                            mov rdx, rax	      2739	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_5
0x4003be6	     0xf8414020000	                            je 0x4003e00	      2740	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_15
0x4003bec	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      2745	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x4003bf0	    0x48c705000000	               mov qword [0x04003bfb], 0	      2742	ui.c	FUNCTION_75	ELSE_1	IF_13
0x4003bfb	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2745	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x4003bfe	     0xf846c040000	                            je 0x4004070	      2745	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x4003c04	    0x8b8aa0000000	            mov ecx, dword [rdx + 0xa0] 	      2759	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x4003c0a	    0xc70500000000	               mov dword [0x04003c14], 0	      2753	ui.c	FUNCTION_75	ELSE_1	IF_13
0x4003c14	            0x39c8	                            cmp eax, ecx	      2759	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x4003c16	     0xf8d54020000	                           jge 0x4003e70	      2759	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x4003c1c	    0x8b8aac000000	            mov ecx, dword [rdx + 0xac] 	      2766	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x4003c22	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      2766	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x4003c26	    0xc70500000000	               mov dword [0x04003c30], 0	      2765	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2
0x4003c30	            0x39c8	                            cmp eax, ecx	      2766	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x4003c32	     0xf8c38030000	                            jl 0x4003f70	      2766	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x4003c38	            0x29c8	                            sub eax, ecx	      2768	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x4003c3a	    0x488915000000	            mov qword [0x04003c41], rdx 	      2769	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x4003c41	          0x83c001	                              add eax, 1	      2768	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x4003c44	    0x890500000000	            mov dword [0x04003c4a], eax 	      2768	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x4003c4a	    0x448b0d000000	            mov r9d, dword [0x04003c51] 	      2786	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4003c51	          0x4585c9	                           test r9d, r9d	      2786	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4003c54	            0x742e	                            je 0x4003c84	      2786	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4003c56	    0x488b05000000	            mov rax, qword [0x04003c5d] 	      2787	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4003c5d	        0x488b4808	                mov rcx, qword [rax + 8]	      2787	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4003c61	        0x48394a08	                cmp qword [rdx + 8], rcx	      2787	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4003c65	     0xf8405060000	                            je 0x4004270	      2787	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4003c6b	      0x4889542418	             mov qword [rsp + 0x18], rdx	      2787	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4003c70	      0xe800000000	                          call 0x4003c75	      2802	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21	CALL_8
0x4003c75	      0xbf14000000	                           mov edi, 0x14	      2803	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21	CALL_9
0x4003c7a	      0xe800000000	                          call 0x4003c7f	      2803	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21	CALL_9
0x4003c7f	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      2803	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21	CALL_9
0x4003c84	    0x448b15000000	           mov r10d, dword [0x04003c8b] 	      2806	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4003c8b	          0x4585d2	                         test r10d, r10d	      2806	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4003c8e	     0xf847c020000	                            je 0x4003f10	      2806	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4003c94	    0x483b15000000	            cmp rdx, qword [0x04003c9b] 	      2806	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4003c9b	     0xf846f020000	                            je 0x4003f10	      2806	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4003ca1	    0x448b0d000000	            mov r9d, dword [0x04003ca8] 	      2812	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22	IF_23
0x4003ca8	    0xc70500000000	               mov dword [0x04003cb2], 0	      2810	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4003cb2	          0x4585c9	                           test r9d, r9d	      2812	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22	IF_23
0x4003cb5	            0x7527	                           jne 0x4003cde	      2812	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22	IF_23
0x4003cb7	      0xb808000000	                              mov eax, 8	      2814	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4003cbc	            0xeb25	                           jmp 0x4003ce3	      2814	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4003cbe	            0x6690	                                     nop	      2814	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4003cc0	    0x3b0d00000000	            cmp ecx, dword [0x04003cc6] 	      2677	ui.c	FUNCTION_75	IF_3
0x4003cc6	     0xf856afeffff	                           jne 0x4003b36	      2677	ui.c	FUNCTION_75	IF_3
0x4003ccc	         0xf1f4000	                         nop dword [rax]	      2677	ui.c	FUNCTION_75	IF_3
0x4003cd0	    0x8b2d00000000	            mov ebp, dword [0x04003cd6] 	      2682	ui.c	FUNCTION_75	IF_3	IF_4
0x4003cd6	            0x85ed	                           test ebp, ebp	      2682	ui.c	FUNCTION_75	IF_3	IF_4
0x4003cd8	     0xf84a2000000	                            je 0x4003d80	      2682	ui.c	FUNCTION_75	IF_3	IF_4
0x4003cde	      0xb802000000	                              mov eax, 2	      2875	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x4003ce3	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      3064	ui.c	FUNCTION_75
0x4003ce8	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      3064	ui.c	FUNCTION_75
0x4003cf1	     0xf8582080000	                           jne 0x4004579	      3064	ui.c	FUNCTION_75
0x4003cf7	        0x4883c438	                           add rsp, 0x38	      3064	ui.c	FUNCTION_75
0x4003cfb	              0x5b	                                 pop rbx	      3064	ui.c	FUNCTION_75
0x4003cfc	              0x5d	                                 pop rbp	      3064	ui.c	FUNCTION_75
0x4003cfd	            0x415c	                                 pop r12	      3064	ui.c	FUNCTION_75
0x4003cff	            0x415d	                                 pop r13	      3064	ui.c	FUNCTION_75
0x4003d01	            0x415e	                                 pop r14	      3064	ui.c	FUNCTION_75
0x4003d03	            0x415f	                                 pop r15	      3064	ui.c	FUNCTION_75
0x4003d05	              0xc3	                                     ret	      3064	ui.c	FUNCTION_75
0x4003d06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3064	ui.c	FUNCTION_75
0x4003d10	    0x4c8b35000000	            mov r14, qword [0x04003d17] 	      2730	ui.c	FUNCTION_75	ELSE_1
0x4003d17	        0x41f6c501	                            test r13b, 1	      2733	ui.c	FUNCTION_75	ELSE_1	IF_13
0x4003d1b	      0xbd20000000	                           mov ebp, 0x20	      2727	ui.c	FUNCTION_75	ELSE_1
0x4003d20	        0x418b7640	            mov esi, dword [r14 + 0x40] 	      2731	ui.c	FUNCTION_75	ELSE_1
0x4003d24	        0x4d8b6638	            mov r12, qword [r14 + 0x38] 	      2731	ui.c	FUNCTION_75	ELSE_1
0x4003d28	        0x89742408	                mov dword [rsp + 8], esi	      2731	ui.c	FUNCTION_75	ELSE_1
0x4003d2c	        0x418b7644	            mov esi, dword [r14 + 0x44] 	      2731	ui.c	FUNCTION_75	ELSE_1
0x4003d30	        0x8974240c	              mov dword [rsp + 0xc], esi	      2731	ui.c	FUNCTION_75	ELSE_1
0x4003d34	     0xf84c6000000	                            je 0x4003e00	      2733	ui.c	FUNCTION_75	ELSE_1	IF_13
0x4003d3a	    0x448b15000000	           mov r10d, dword [0x04003d41] 	      2865	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x4003d41	            0x85d2	                           test edx, edx	      2865	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x4003d43	           0xf94c2	                                 sete dl	      2865	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x4003d46	          0x4585d2	                         test r10d, r10d	      2865	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x4003d49	            0x7455	                            je 0x4003da0	      2865	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x4003d4b	            0x84d2	                             test dl, dl	      2865	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x4003d4d	            0x7451	                            je 0x4003da0	      2865	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x4003d4f	    0x488b3d000000	            mov rdi, qword [0x04003d56] 	      2867	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x4003d56	          0x4885ff	                           test rdi, rdi	      2867	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x4003d59	            0x7483	                            je 0x4003cde	      2867	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x4003d5b	    0x2b879c000000	             sub eax, dword [rdi + 0x9c]	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x4003d61	    0x2b87a0000000	             sub eax, dword [rdi + 0xa0]	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x4003d67	          0x8d5801	                      lea ebx, [rax + 1]	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x4003d6a	          0x4429d3	                           sub ebx, r10d	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x4003d6d	            0x89de	                            mov esi, ebx	      2872	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31	CALL_13
0x4003d6f	      0xe800000000	                          call 0x4003d74	      2872	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31	CALL_13
0x4003d74	     0x91d00000000	              or dword [0x04003d7a], ebx	      2873	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x4003d7a	      0xe95fffffff	                           jmp 0x4003cde	      2873	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x4003d7f	              0x90	                                     nop	      2873	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x4003d80	    0x8b1d00000000	            mov ebx, dword [0x04003d86] 	      2684	ui.c	FUNCTION_75	IF_3	IF_5
0x4003d86	            0x85db	                           test ebx, ebx	      2684	ui.c	FUNCTION_75	IF_3	IF_5
0x4003d88	     0xf8492000000	                            je 0x4003e20	      2684	ui.c	FUNCTION_75	IF_3	IF_5
0x4003d8e	      0xb804000000	                              mov eax, 4	      2887	ui.c	FUNCTION_75	ELSE_8	IF_32
0x4003d93	      0xe94bffffff	                           jmp 0x4003ce3	      2887	ui.c	FUNCTION_75	ELSE_8	IF_32
0x4003d98	     0xf1f84000000	                   nop dword [rax + rax]	      2887	ui.c	FUNCTION_75	ELSE_8	IF_32
0x4003da0	    0x448b15000000	           mov r10d, dword [0x04003da7] 	      2877	ui.c	FUNCTION_75	ELSE_8	IF_32
0x4003da7	          0x4585d2	                         test r10d, r10d	      2877	ui.c	FUNCTION_75	ELSE_8	IF_32
0x4003daa	            0x7434	                            je 0x4003de0	      2877	ui.c	FUNCTION_75	ELSE_8	IF_32
0x4003dac	            0x84d2	                             test dl, dl	      2877	ui.c	FUNCTION_75	ELSE_8	IF_32
0x4003dae	            0x7430	                            je 0x4003de0	      2877	ui.c	FUNCTION_75	ELSE_8	IF_32
0x4003db0	    0x488b3d000000	            mov rdi, qword [0x04003db7] 	      2879	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4003db7	          0x4885ff	                           test rdi, rdi	      2879	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4003dba	            0x74d2	                            je 0x4003d8e	      2879	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4003dbc	    0x2b8fa8000000	             sub ecx, dword [rdi + 0xa8]	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4003dc2	    0x2b8fac000000	             sub ecx, dword [rdi + 0xac]	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4003dc8	          0x8d5901	                      lea ebx, [rcx + 1]	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4003dcb	          0x4429d3	                           sub ebx, r10d	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4003dce	            0x89de	                            mov esi, ebx	      2884	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33	CALL_14
0x4003dd0	      0xe800000000	                          call 0x4003dd5	      2884	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33	CALL_14
0x4003dd5	     0x91d00000000	              or dword [0x04003ddb], ebx	      2885	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4003ddb	            0xebb1	                           jmp 0x4003d8e	      2885	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4003ddd	           0xf1f00	                         nop dword [rax]	      2885	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4003de0	    0x8b3500000000	            mov esi, dword [0x04003de6] 	      2890	ui.c	FUNCTION_75	ELSE_9	IF_34
0x4003de6	            0x85f6	                           test esi, esi	      2890	ui.c	FUNCTION_75	ELSE_9	IF_34
0x4003de8	     0xf8492010000	                            je 0x4003f80	      2890	ui.c	FUNCTION_75	ELSE_9	IF_34
0x4003dee	      0xb808080000	                          mov eax, 0x808	      2751	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x4003df3	      0xe9ebfeffff	                           jmp 0x4003ce3	      2751	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x4003df8	     0xf1f84000000	                   nop dword [rax + rax]	      2751	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x4003e00	            0x31c0	                            xor eax, eax	      2695	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	IF_8
0x4003e02	      0xe9dcfeffff	                           jmp 0x4003ce3	      2695	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	IF_8
0x4003e07	    0x660f1f840000	                    nop word [rax + rax]	      2695	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	IF_8
0x4003e10	      0xbd20000000	                           mov ebp, 0x20	      2727	ui.c	FUNCTION_75	ELSE_1
0x4003e15	      0xe982fdffff	                           jmp 0x4003b9c	      2727	ui.c	FUNCTION_75	ELSE_1
0x4003e1a	    0x660f1f440000	                    nop word [rax + rax]	      2727	ui.c	FUNCTION_75	ELSE_1
0x4003e20	    0x448b1d000000	           mov r11d, dword [0x04003e27] 	      2687	ui.c	FUNCTION_75	IF_3	IF_6
0x4003e27	          0x4585db	                         test r11d, r11d	      2687	ui.c	FUNCTION_75	IF_3	IF_6
0x4003e2a	     0xf84a0000000	                            je 0x4003ed0	      2687	ui.c	FUNCTION_75	IF_3	IF_6
0x4003e30	    0xf60500000000	           test byte [0x04003e37], 0x60 	      2691	ui.c	FUNCTION_75	IF_3	IF_6	IF_7
0x4003e37	            0x74b5	                            je 0x4003dee	      2691	ui.c	FUNCTION_75	IF_3	IF_6	IF_7
0x4003e39	        0x4183e520	                          and r13d, 0x20	      2691	ui.c	FUNCTION_75	IF_3	IF_6	IF_7
0x4003e3d	            0x75af	                           jne 0x4003dee	      2691	ui.c	FUNCTION_75	IF_3	IF_6	IF_7
0x4003e3f	      0x488d742424	                   lea rsi, [rsp + 0x24]	      2693	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_1
0x4003e44	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2693	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_1
0x4003e49	      0xe800000000	                          call 0x4003e4e	      2693	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_1
0x4003e4e	          0x4885c0	                           test rax, rax	      2694	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	IF_8
0x4003e51	            0x74ad	                            je 0x4003e00	      2694	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	IF_8
0x4003e53	        0x8b742424	            mov esi, dword [rsp + 0x24] 	      2696	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_2
0x4003e57	          0x4889c7	                            mov rdi, rax	      2696	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_2
0x4003e5a	      0xe800000000	                          call 0x4003e5f	      2696	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_2
0x4003e5f	      0xb808080000	                          mov eax, 0x808	      2698	ui.c	FUNCTION_75	IF_3	IF_6
0x4003e64	      0xe97afeffff	                           jmp 0x4003ce3	      2698	ui.c	FUNCTION_75	IF_3	IF_6
0x4003e69	     0xf1f80000000	                         nop dword [rax]	      2698	ui.c	FUNCTION_75	IF_3	IF_6
0x4003e70	            0x29c8	                            sub eax, ecx	      2761	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x4003e72	    0x8b8aac000000	            mov ecx, dword [rdx + 0xac] 	      2766	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x4003e78	    0x488915000000	            mov qword [0x04003e7f], rdx 	      2762	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x4003e7f	          0x83c001	                              add eax, 1	      2761	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x4003e82	    0x890500000000	            mov dword [0x04003e88], eax 	      2761	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x4003e88	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      2766	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x4003e8c	            0x39c1	                            cmp ecx, eax	      2766	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x4003e8e	     0xf8fdc000000	                            jg 0x4003f70	      2766	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x4003e94	            0x29c8	                            sub eax, ecx	      2768	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x4003e96	          0x4889d7	                            mov rdi, rdx	      2778	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20	CALL_7
0x4003e99	    0x488915000000	            mov qword [0x04003ea0], rdx 	      2769	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x4003ea0	          0x83c001	                              add eax, 1	      2768	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x4003ea3	      0x4889542418	             mov qword [rsp + 0x18], rdx	      2778	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20	CALL_7
0x4003ea8	    0x890500000000	            mov dword [0x04003eae], eax 	      2768	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x4003eae	      0xe800000000	                          call 0x4003eb3	      2778	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20	CALL_7
0x4003eb3	            0x85c0	                           test eax, eax	      2778	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20	CALL_7
0x4003eb5	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      2778	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20	CALL_7
0x4003eba	     0xf85b0000000	                           jne 0x4003f70	      2778	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20	CALL_7
0x4003ec0	    0xc70500000000	               mov dword [0x04003eca], 0	      2781	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	ELSE_4
0x4003eca	      0xe97bfdffff	                           jmp 0x4003c4a	      2781	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	ELSE_4
0x4003ecf	              0x90	                                     nop	      2781	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	ELSE_4
0x4003ed0	        0x4183e510	                          and r13d, 0x10	      2701	ui.c	FUNCTION_75	IF_3	IF_9
0x4003ed4	     0xf8583040000	                           jne 0x400435d	      2701	ui.c	FUNCTION_75	IF_3	IF_9
0x4003eda	    0x448b15000000	           mov r10d, dword [0x04003ee1] 	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x4003ee1	      0xb801000000	                              mov eax, 1	      2711	ui.c	FUNCTION_75	IF_3
0x4003ee6	          0x4585d2	                         test r10d, r10d	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x4003ee9	     0xf84f4fdffff	                            je 0x4003ce3	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x4003eef	    0x488b15000000	            mov rdx, qword [0x04003ef6] 	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x4003ef6	        0x8b5c2420	            mov ebx, dword [rsp + 0x20] 	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x4003efa	    0x399a9c000000	            cmp dword [rdx + 0x9c], ebx 	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x4003f00	     0xf8fb1fdffff	                            jg 0x4003cb7	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x4003f06	      0xe9d8fdffff	                           jmp 0x4003ce3	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x4003f0b	       0xf1f440000	                   nop dword [rax + rax]	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x4003f10	    0x48833d000000	               cmp qword [0x04003f18], 0	      2825	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_24
0x4003f18	            0x7406	                            je 0x4003f20	      2825	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_24
0x4003f1a	        0x41f6c520	                         test r13b, 0x20	      2825	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_24
0x4003f1e	            0x740d	                            je 0x4003f2d	      2825	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_24
0x4003f20	      0xbe01000000	                              mov esi, 1	      2826	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_10
0x4003f25	          0x4889d7	                            mov rdi, rdx	      2826	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_10
0x4003f28	      0xe800000000	                          call 0x4003f2d	      2826	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_10
0x4003f2d	    0x488b3d000000	            mov rdi, qword [0x04003f34] 	      2828	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_25
0x4003f34	          0x4939fe	                            cmp r14, rdi	      2828	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_25
0x4003f37	     0xf84ab010000	                            je 0x40040e8	      2828	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_25
0x4003f3d	      0xe800000000	                          call 0x4003f42	      2832	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_25	CALL_11
0x4003f42	      0xe800000000	                          call 0x4003f47	      2836	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_25	CALL_12
0x4003f47	    0x448b05000000	            mov r8d, dword [0x04003f4e] 	      2839	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26
0x4003f4e	          0x4585c0	                           test r8d, r8d	      2839	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26
0x4003f51	     0xf84d1020000	                            je 0x4004228	      2839	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26
0x4003f57	    0x4c3b35000000	            cmp r14, qword [0x04003f5e] 	      2842	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26	IF_27
0x4003f5e	     0xf847afdffff	                            je 0x4003cde	      2842	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26	IF_27
0x4003f64	      0xb802010000	                          mov eax, 0x102	      2845	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26	ELSE_5
0x4003f69	      0xe975fdffff	                           jmp 0x4003ce3	      2845	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26	ELSE_5
0x4003f6e	            0x6690	                                     nop	      2845	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26	ELSE_5
0x4003f70	    0xc70500000000	               mov dword [0x04003f7a], 0	      2779	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20
0x4003f7a	      0xe9cbfcffff	                           jmp 0x4003c4a	      2779	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20
0x4003f7f	              0x90	                                     nop	      2779	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20
0x4003f80	        0x41f6c510	                         test r13b, 0x10	      2899	ui.c	FUNCTION_75	ELSE_10	IF_35
0x4003f84	          0x4d89f2	                            mov r10, r14	      2899	ui.c	FUNCTION_75	ELSE_10	IF_35
0x4003f87	     0xf85c3020000	                           jne 0x4004250	      2899	ui.c	FUNCTION_75	ELSE_10	IF_35
0x4003f8d	    0x8b0d00000000	            mov ecx, dword [0x04003f93] 	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x4003f93	    0x418b929c0000	            mov edx, dword [r10 + 0x9c] 	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x4003f9a	            0x85c9	                           test ecx, ecx	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x4003f9c	            0x7408	                            je 0x4003fa6	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x4003f9e	            0x39c2	                            cmp edx, eax	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x4003fa0	     0xf8f11fdffff	                            jg 0x4003cb7	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x4003fa6	    0x410392a80100	            add edx, dword [r10 + 0x1a8]	      2911	ui.c	FUNCTION_75	ELSE_10	CALL_17
0x4003fad	            0x29d0	                            sub eax, edx	      2911	ui.c	FUNCTION_75	ELSE_10	CALL_17
0x4003faf	        0x8b542424	            mov edx, dword [rsp + 0x24] 	      2912	ui.c	FUNCTION_75	ELSE_10
0x4003fb3	    0x412b92a80000	             sub edx, dword [r10 + 0xa8]	      2912	ui.c	FUNCTION_75	ELSE_10
0x4003fba	            0x85c0	                           test eax, eax	      2918	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4003fbc	        0x89442420	             mov dword [rsp + 0x20], eax	      2911	ui.c	FUNCTION_75	ELSE_10	CALL_17
0x4003fc0	        0x89542424	             mov dword [rsp + 0x24], edx	      2912	ui.c	FUNCTION_75	ELSE_10
0x4003fc4	     0xf88a7030000	                            js 0x4004371	      2918	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4003fca	    0x413b82a00000	            cmp eax, dword [r10 + 0xa0] 	      2955	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4003fd1	     0xf8c49030000	                            jl 0x4004320	      2955	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4003fd7	        0x498b7a78	            mov rdi, qword [r10 + 0x78] 	      2955	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4003fdb	      0xba01000000	                              mov edx, 1	      2955	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4003fe0	          0x4531ff	                          xor r15d, r15d	      2955	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4003fe3	       0xf1f440000	                   nop dword [rax + rax]	      2955	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4003fe8	    0x488b05000000	            mov rax, qword [0x04003fef] 	      2958	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2
0x4003fef	          0x483938	                    cmp qword [rax], rdi	      2958	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2
0x4003ff2	     0xf8ed8020000	                           jle 0x40042d0	      2958	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2
0x4003ff8	    0x418b82840000	            mov eax, dword [r10 + 0x84] 	      2961	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_42
0x4003fff	            0x85c0	                           test eax, eax	      2961	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_42
0x4004001	     0xf8e89000000	                           jle 0x4004090	      2961	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_42
0x4004007	        0x4183c701	                             add r15d, 1	      2962	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_42
0x400400b	            0x85d2	                           test edx, edx	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x400400d	            0x7517	                           jne 0x4004026	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x400400f	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x4004013	    0x412b82a00000	             sub eax, dword [r10 + 0xa0]	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x400401a	          0x83c001	                              add eax, 1	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x400401d	          0x4139c7	                           cmp r15d, eax	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x4004020	     0xf8faa020000	                            jg 0x40042d0	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x4004026	        0x498b7a78	            mov rdi, qword [r10 + 0x78] 	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x400402a	        0x498d5278	                   lea rdx, [r10 + 0x78]	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x400402e	            0x31f6	                            xor esi, esi	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x4004030	      0xe800000000	                          call 0x4004035	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x4004035	    0x4c8b15000000	            mov r10, qword [0x0400403c] 	      2971	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44
0x400403c	            0x85c0	                           test eax, eax	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x400403e	        0x498b7a78	            mov rdi, qword [r10 + 0x78] 	      2971	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44
0x4004042	            0x7410	                            je 0x4004054	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x4004044	    0x488b05000000	            mov rax, qword [0x0400404b] 	      2971	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44
0x400404b	          0x483b38	                    cmp rdi, qword [rax]	      2971	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44
0x400404e	     0xf847c020000	                            je 0x40042d0	      2971	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44
0x4004054	    0x418b82840000	            mov eax, dword [r10 + 0x84] 	      2975	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x400405b	            0x85c0	                           test eax, eax	      2975	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x400405d	            0x7e51	                           jle 0x40040b0	      2975	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x400405f	          0x83e801	                              sub eax, 1	      2976	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x4004062	            0x31d2	                            xor edx, edx	      2976	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x4004064	    0x418982840000	             mov dword [r10 + 0x84], eax	      2976	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x400406b	      0xe978ffffff	                           jmp 0x4003fe8	      2976	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x4004070	        0x8b742424	            mov esi, dword [rsp + 0x24] 	      2749	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16	CALL_6
0x4004074	          0x4889d7	                            mov rdi, rdx	      2749	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16	CALL_6
0x4004077	      0xe800000000	                          call 0x400407c	      2749	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16	CALL_6
0x400407c	    0xc70500000000	               mov dword [0x04004086], 1	      2750	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x4004086	      0xe963fdffff	                           jmp 0x4003dee	      2750	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x400408b	       0xf1f440000	                   nop dword [rax + rax]	      2750	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x4004090	        0x89542410	             mov dword [rsp + 0x10], edx	      2750	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x4004094	      0xe800000000	                          call 0x4004099	      2965	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	CALL_24
0x4004099	    0x4c8b15000000	            mov r10, qword [0x040040a0] 	      2965	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	CALL_24
0x40040a0	          0x4101c7	                           add r15d, eax	      2965	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	CALL_24
0x40040a3	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      2965	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	CALL_24
0x40040a7	      0xe95fffffff	                           jmp 0x400400b	      2965	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	CALL_24
0x40040ac	         0xf1f4000	                         nop dword [rax]	      2965	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	CALL_24
0x40040b0	        0x488d7701	                      lea rsi, [rdi + 1]	      2980	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x40040b4	          0x4c89d7	                            mov rdi, r10	      2983	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15	CALL_26
0x40040b7	      0x4c89542410	             mov qword [rsp + 0x10], r10	      2983	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15	CALL_26
0x40040bc	        0x49897278	             mov qword [r10 + 0x78], rsi	      2980	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x40040c0	      0xe800000000	                          call 0x40040c5	      2983	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15	CALL_26
0x40040c5	      0x4c8b542410	            mov r10, qword [rsp + 0x10] 	      2982	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x40040ca	            0x31d2	                            xor edx, edx	      2982	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x40040cc	    0x418982840000	             mov dword [r10 + 0x84], eax	      2982	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x40040d3	    0x4c8b15000000	            mov r10, qword [0x040040da] 	      2982	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x40040da	        0x498b7a78	            mov rdi, qword [r10 + 0x78] 	      2982	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x40040de	      0xe905ffffff	                           jmp 0x4003fe8	      2982	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x40040e3	       0xf1f440000	                   nop dword [rax + rax]	      2982	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x40040e8	    0x8b1500000000	            mov edx, dword [0x040040ee] 	      2839	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26
0x40040ee	            0x85d2	                           test edx, edx	      2839	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26
0x40040f0	     0xf85e8fbffff	                           jne 0x4003cde	      2839	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26
0x40040f6	    0x8b0500000000	            mov eax, dword [0x040040fc] 	      2847	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28
0x40040fc	            0x85c0	                           test eax, eax	      2847	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28
0x40040fe	     0xf858afcffff	                           jne 0x4003d8e	      2847	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28
0x4004104	          0x4d89f2	                            mov r10, r14	      2847	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28
0x4004107	        0x498b4278	            mov rax, qword [r10 + 0x78] 	      2856	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x400410b	        0x8b542424	            mov edx, dword [rsp + 0x24] 	      2856	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x400410f	        0x49894238	             mov qword [r10 + 0x38], rax	      2856	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x4004113	    0x488905000000	            mov qword [0x0400411a], rax 	      2859	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x400411a	    0x418b82840000	            mov eax, dword [r10 + 0x84] 	      2861	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x4004121	    0x890500000000	            mov dword [0x04004127], eax 	      2861	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x4004127	    0x458b8a540200	           mov r9d, dword [r10 + 0x254] 	      3012	ui.c	FUNCTION_75	IF_48
0x400412e	          0x4863d2	                         movsxd rdx, edx	      3012	ui.c	FUNCTION_75	IF_48
0x4004131	          0x4585c9	                           test r9d, r9d	      3012	ui.c	FUNCTION_75	IF_48
0x4004134	     0xf84c6000000	                            je 0x4004200	      3012	ui.c	FUNCTION_75	IF_48
0x400413a	    0x496382ac0000	         movsxd rax, dword [r10 + 0xac] 	      3012	ui.c	FUNCTION_75	IF_48
0x4004141	    0x492b82c80100	            sub rax, qword [r10 + 0x1c8]	      3012	ui.c	FUNCTION_75	IF_48
0x4004148	          0x4839c2	                            cmp rdx, rax	      3012	ui.c	FUNCTION_75	IF_48
0x400414b	           0xf9cc0	                                 setl al	      3012	ui.c	FUNCTION_75	IF_48
0x400414e	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x4004153	        0x498d4a38	                   lea rcx, [r10 + 0x38]	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x4004157	            0x84c0	                             test al, al	      3019	ui.c	FUNCTION_75	IF_48
0x4004159	          0x4c89fa	                            mov rdx, r15	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x400415c	      0xb820000000	                           mov eax, 0x20	      3019	ui.c	FUNCTION_75	IF_48
0x4004161	          0x4c89d7	                            mov rdi, r10	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x4004164	           0xf45e8	                         cmovne ebp, eax	      3019	ui.c	FUNCTION_75	IF_48
0x4004167	      0xe800000000	                          call 0x400416c	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x400416c	            0x85c0	                           test eax, eax	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x400416e	            0x740a	                            je 0x400417a	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x4004170	    0xc70500000000	               mov dword [0x0400417a], 1	      3024	ui.c	FUNCTION_75	IF_49
0x400417a	        0x4183e502	                             and r13d, 2	      3027	ui.c	FUNCTION_75	IF_50
0x400417e	            0x740e	                            je 0x400418e	      3027	ui.c	FUNCTION_75	IF_50
0x4004180	    0x8b3d00000000	            mov edi, dword [0x04004186] 	      3027	ui.c	FUNCTION_75	IF_50
0x4004186	            0x85ff	                           test edi, edi	      3027	ui.c	FUNCTION_75	IF_50
0x4004188	     0xf8435030000	                            je 0x40044c3	      3027	ui.c	FUNCTION_75	IF_50
0x400418e	    0x488b05000000	            mov rax, qword [0x04004195] 	      3040	ui.c	FUNCTION_75
0x4004195	        0x8b7c2424	            mov edi, dword [rsp + 0x24] 	      3040	ui.c	FUNCTION_75
0x4004199	    0xc7404c000000	               mov dword [rax + 0x4c], 0	      3041	ui.c	FUNCTION_75
0x40041a0	          0x897848	             mov dword [rax + 0x48], edi	      3040	ui.c	FUNCTION_75
0x40041a3	      0xe800000000	                          call 0x40041a8	      3042	ui.c	FUNCTION_75	IF_52	CALL_33
0x40041a8	            0x85c0	                           test eax, eax	      3042	ui.c	FUNCTION_75	IF_52	CALL_33
0x40041aa	            0x7544	                           jne 0x40041f0	      3042	ui.c	FUNCTION_75	IF_52	CALL_33
0x40041ac	          0x4885db	                           test rbx, rbx	      3044	ui.c	FUNCTION_75	IF_52	IF_53
0x40041af	            0x7406	                            je 0x40041b7	      3044	ui.c	FUNCTION_75	IF_52	IF_53
0x40041b1	    0xc70301000000	                      mov dword [rbx], 1	      3045	ui.c	FUNCTION_75	IF_52	IF_53
0x40041b7	    0xc70500000000	               mov dword [0x040041c1], 1	      3046	ui.c	FUNCTION_75	IF_52
0x40041c1	    0x4c3935000000	            cmp qword [0x040041c8], r14 	      3052	ui.c	FUNCTION_75	IF_55
0x40041c8	      0xb801010000	                          mov eax, 0x101	      3054	ui.c	FUNCTION_75	IF_55
0x40041cd	     0xf84d1020000	                            je 0x40044a4	      3052	ui.c	FUNCTION_75	IF_55
0x40041d3	          0x83fd2b	                           cmp ebp, 0x2b	      3057	ui.c	FUNCTION_75	IF_56
0x40041d6	     0xf8479010000	                            je 0x4004355	      3057	ui.c	FUNCTION_75	IF_56
0x40041dc	            0x89c2	                            mov edx, eax	      3060	ui.c	FUNCTION_75	ELSE_18	IF_57
0x40041de	          0x80ce02	                                or dh, 2	      3060	ui.c	FUNCTION_75	ELSE_18	IF_57
0x40041e1	          0x83fd20	                           cmp ebp, 0x20	      3060	ui.c	FUNCTION_75	ELSE_18	IF_57
0x40041e4	           0xf45c2	                         cmovne eax, edx	      3060	ui.c	FUNCTION_75	ELSE_18	IF_57
0x40041e7	      0xe9f7faffff	                           jmp 0x4003ce3	      3060	ui.c	FUNCTION_75	ELSE_18	IF_57
0x40041ec	         0xf1f4000	                         nop dword [rax]	      3060	ui.c	FUNCTION_75	ELSE_18	IF_57
0x40041f0	          0x4885db	                           test rbx, rbx	      3048	ui.c	FUNCTION_75	ELSE_17	IF_54
0x40041f3	            0x74cc	                            je 0x40041c1	      3048	ui.c	FUNCTION_75	ELSE_17	IF_54
0x40041f5	    0xc70300000000	                      mov dword [rbx], 0	      3049	ui.c	FUNCTION_75	ELSE_17	IF_54
0x40041fb	            0xebc4	                           jmp 0x40041c1	      3049	ui.c	FUNCTION_75	ELSE_17	IF_54
0x40041fd	           0xf1f00	                         nop dword [rax]	      3049	ui.c	FUNCTION_75	ELSE_17	IF_54
0x4004200	    0x448b05000000	            mov r8d, dword [0x04004207] 	      3012	ui.c	FUNCTION_75	IF_48
0x4004207	            0x31c0	                            xor eax, eax	      3012	ui.c	FUNCTION_75	IF_48
0x4004209	          0x4585c0	                           test r8d, r8d	      3012	ui.c	FUNCTION_75	IF_48
0x400420c	           0xf95c0	                                setne al	      3012	ui.c	FUNCTION_75	IF_48
0x400420f	    0x490382c80100	            add rax, qword [r10 + 0x1c8]	      3012	ui.c	FUNCTION_75	IF_48
0x4004216	          0x4839c2	                            cmp rdx, rax	      3012	ui.c	FUNCTION_75	IF_48
0x4004219	           0xf9dc0	                                setge al	      3012	ui.c	FUNCTION_75	IF_48
0x400421c	      0xe92dffffff	                           jmp 0x400414e	      3012	ui.c	FUNCTION_75	IF_48
0x4004221	     0xf1f80000000	                         nop dword [rax]	      3012	ui.c	FUNCTION_75	IF_48
0x4004228	    0x8b3d00000000	            mov edi, dword [0x0400422e] 	      2847	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28
0x400422e	    0x4c8b15000000	            mov r10, qword [0x04004235] 	      2847	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28
0x4004235	            0x85ff	                           test edi, edi	      2847	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28
0x4004237	     0xf84cafeffff	                            je 0x4004107	      2847	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28
0x400423d	          0x4d39d6	                            cmp r14, r10	      2850	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28	IF_29
0x4004240	     0xf8448fbffff	                            je 0x4003d8e	      2850	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28	IF_29
0x4004246	      0xb804010000	                          mov eax, 0x104	      2853	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28	ELSE_6
0x400424b	      0xe993faffff	                           jmp 0x4003ce3	      2853	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28	ELSE_6
0x4004250	      0xe800000000	                          call 0x4004255	      2901	ui.c	FUNCTION_75	ELSE_10	IF_35	CALL_15
0x4004255	      0xbf14000000	                           mov edi, 0x14	      2902	ui.c	FUNCTION_75	ELSE_10	IF_35	CALL_16
0x400425a	      0xe800000000	                          call 0x400425f	      2902	ui.c	FUNCTION_75	ELSE_10	IF_35	CALL_16
0x400425f	    0x4c8b15000000	            mov r10, qword [0x04004266] 	      2902	ui.c	FUNCTION_75	ELSE_10	IF_35	CALL_16
0x4004266	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      2902	ui.c	FUNCTION_75	ELSE_10	IF_35	CALL_16
0x400426a	      0xe91efdffff	                           jmp 0x4003f8d	      2902	ui.c	FUNCTION_75	ELSE_10	IF_35	CALL_16
0x400426f	              0x90	                                     nop	      2902	ui.c	FUNCTION_75	ELSE_10	IF_35	CALL_16
0x4004270	    0x448b05000000	            mov r8d, dword [0x04004277] 	      2788	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4004277	          0x4585c0	                           test r8d, r8d	      2788	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x400427a	     0xf8504faffff	                           jne 0x4003c84	      2788	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4004280	    0x8b3d00000000	            mov edi, dword [0x04004286] 	      2788	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4004286	            0x85ff	                           test edi, edi	      2788	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4004288	     0xf85f6f9ffff	                           jne 0x4003c84	      2788	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x400428e	    0x8bb254020000	           mov esi, dword [rdx + 0x254] 	      2786	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4004294	      0x48634c2424	         movsxd rcx, dword [rsp + 0x24] 	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4004299	            0x85f6	                           test esi, esi	      2786	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x400429b	     0xf8490020000	                            je 0x4004531	      2786	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40042a1	    0x486382ac0000	         movsxd rax, dword [rdx + 0xac] 	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40042a8	    0x482b82c80100	            sub rax, qword [rdx + 0x1c8]	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40042af	          0x4839c1	                            cmp rcx, rax	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40042b2	     0xf8dccf9ffff	                           jge 0x4003c84	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40042b8	        0x41f6c510	                         test r13b, 0x10	      2800	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40042bc	     0xf84c2f9ffff	                            je 0x4003c84	      2800	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40042c2	      0xe9a4f9ffff	                           jmp 0x4003c6b	      2800	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40042c7	    0x660f1f840000	                    nop word [rax + rax]	      2800	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40042d0	          0x4c89d7	                            mov rdi, r10	      2988	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	CALL_27
0x40042d3	            0x31f6	                            xor esi, esi	      2988	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	CALL_27
0x40042d5	      0x4c8d7c2424	                   lea r15, [rsp + 0x24]	      2988	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	CALL_27
0x40042da	      0xe800000000	                          call 0x40042df	      2988	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	CALL_27
0x40042df	      0xbf0a000000	                            mov edi, 0xa	      2990	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	CALL_28
0x40042e4	      0xe800000000	                          call 0x40042e9	      2990	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	CALL_28
0x40042e9	    0x4c8b15000000	            mov r10, qword [0x040042f0] 	      2991	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x40042f0	        0x8b542424	            mov edx, dword [rsp + 0x24] 	      2991	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x40042f4	    0x418b82a00000	            mov eax, dword [r10 + 0xa0] 	      2993	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x40042fb	    0x4183a2b40000	      and dword [r10 + 0xb4], 0xffffff8e	      2991	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4004303	          0x83e801	                              sub eax, 1	      2993	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4004306	        0x89442420	             mov dword [rsp + 0x20], eax	      2993	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x400430a	      0x488d442420	                   lea rax, [rsp + 0x20]	      2993	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x400430f	      0x4889442410	             mov qword [rsp + 0x10], rax	      2993	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4004314	      0xe90efeffff	                           jmp 0x4004127	      2993	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4004319	     0xf1f80000000	                         nop dword [rax]	      2993	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4004320	            0x85c0	                           test eax, eax	      2995	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46
0x4004322	            0x751d	                           jne 0x4004341	      2995	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46
0x4004324	    0x448b1d000000	           mov r11d, dword [0x0400432b] 	      3000	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x400432b	          0x4585db	                         test r11d, r11d	      3000	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x400432e	            0x7e11	                           jle 0x4004341	      3000	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4004330	        0x498b4a08	                mov rcx, qword [r10 + 8]	      3002	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4004334	        0x498b4238	            mov rax, qword [r10 + 0x38] 	      3001	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4004338	          0x483b01	                    cmp rax, qword [rcx]	      3001	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x400433b	     0xf841e020000	                            je 0x400455f	      3001	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4004341	      0x488d442420	                   lea rax, [rsp + 0x20]	      3001	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4004346	      0x4c8d7c2424	                   lea r15, [rsp + 0x24]	      3001	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x400434b	      0x4889442410	             mov qword [rsp + 0x10], rax	      3001	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4004350	      0xe9d2fdffff	                           jmp 0x4004127	      3001	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4004355	          0x80cc04	                                or ah, 4	      3058	ui.c	FUNCTION_75	IF_56
0x4004358	      0xe986f9ffff	                           jmp 0x4003ce3	      3058	ui.c	FUNCTION_75	IF_56
0x400435d	      0xe800000000	                          call 0x4004362	      2703	ui.c	FUNCTION_75	IF_3	IF_9	CALL_3
0x4004362	      0xbf14000000	                           mov edi, 0x14	      2704	ui.c	FUNCTION_75	IF_3	IF_9	CALL_4
0x4004367	      0xe800000000	                          call 0x400436c	      2704	ui.c	FUNCTION_75	IF_3	IF_9	CALL_4
0x400436c	      0xe969fbffff	                           jmp 0x4003eda	      2704	ui.c	FUNCTION_75	IF_3	IF_9	CALL_4
0x4004371	        0x498b7278	            mov rsi, qword [r10 + 0x78] 	      2704	ui.c	FUNCTION_75	IF_3	IF_9	CALL_4
0x4004375	    0xc74424100100	               mov dword [rsp + 0x10], 1	      2918	ui.c	FUNCTION_75	ELSE_10	IF_37
0x400437d	          0x4531ff	                          xor r15d, r15d	      2918	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4004380	            0xeb1a	                           jmp 0x400439c	      2918	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4004382	    0x660f1f440000	                    nop word [rax + rax]	      2918	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4004388	    0x418382840000	               add dword [r10 + 0x84], 1	      2937	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40
0x4004390	        0x498b7278	            mov rsi, qword [r10 + 0x78] 	      2937	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40
0x4004394	    0xc74424100000	               mov dword [rsp + 0x10], 0	      2937	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40
0x400439c	        0x4883fe01	                              cmp rsi, 1	      2921	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1
0x40043a0	     0xf8eb5000000	                           jle 0x400445b	      2921	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1
0x40043a6	    0x418b82840000	            mov eax, dword [r10 + 0x84] 	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x40043ad	          0x4c89d7	                            mov rdi, r10	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x40043b0	        0x89442418	             mov dword [rsp + 0x18], eax	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x40043b4	      0xe800000000	                          call 0x40043b9	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x40043b9	        0x39442418	            cmp dword [rsp + 0x18], eax 	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x40043bd	            0x7d79	                           jge 0x4004438	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x40043bf	        0x4183c701	                             add r15d, 1	      2925	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38
0x40043c3	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      2929	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x40043c7	            0x85c0	                           test eax, eax	      2929	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x40043c9	            0x750b	                           jne 0x40043d6	      2929	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x40043cb	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      2929	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x40043cf	            0xf7d8	                                 neg eax	      2929	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x40043d1	          0x4139c7	                           cmp r15d, eax	      2929	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x40043d4	            0x7f7e	                            jg 0x4004454	      2929	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x40043d6	    0x488b05000000	            mov rax, qword [0x040043dd] 	      2933	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_20
0x40043dd	            0x31d2	                            xor edx, edx	      2933	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_20
0x40043df	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      2933	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_20
0x40043e3	        0x488d7078	                   lea rsi, [rax + 0x78]	      2933	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_20
0x40043e7	      0xe800000000	                          call 0x40043ec	      2933	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_20
0x40043ec	    0x488b3d000000	            mov rdi, qword [0x040043f3] 	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x40043f3	    0x8b8784000000	            mov eax, dword [rdi + 0x84] 	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x40043f9	        0x488b7778	            mov rsi, qword [rdi + 0x78] 	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x40043fd	        0x89442410	             mov dword [rsp + 0x10], eax	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x4004401	      0xe800000000	                          call 0x4004406	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x4004406	        0x39442410	            cmp dword [rsp + 0x10], eax 	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x400440a	    0x4c8b15000000	            mov r10, qword [0x04004411] 	      2937	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40
0x4004411	     0xf8c71ffffff	                            jl 0x4004388	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x4004417	        0x498b4278	            mov rax, qword [r10 + 0x78] 	      2941	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	ELSE_12
0x400441b	    0x41c782840000	               mov dword [r10 + 0x84], 0	      2943	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	ELSE_12
0x4004426	        0x488d70ff	                      lea rsi, [rax - 1]	      2941	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	ELSE_12
0x400442a	        0x49897278	             mov qword [r10 + 0x78], rsi	      2941	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	ELSE_12
0x400442e	      0xe961ffffff	                           jmp 0x4004394	      2941	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	ELSE_12
0x4004433	       0xf1f440000	                   nop dword [rax + rax]	      2941	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	ELSE_12
0x4004438	    0x488b05000000	            mov rax, qword [0x0400443f] 	      2928	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_19
0x400443f	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      2928	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_19
0x4004443	        0x4883ef01	                              sub rdi, 1	      2928	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_19
0x4004447	      0xe800000000	                          call 0x400444c	      2928	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_19
0x400444c	          0x4101c7	                           add r15d, eax	      2928	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_19
0x400444f	      0xe96fffffff	                           jmp 0x40043c3	      2928	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_19
0x4004454	    0x4c8b15000000	            mov r10, qword [0x0400445b] 	      2928	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_19
0x400445b	          0x4c89d7	                            mov rdi, r10	      2948	ui.c	FUNCTION_75	ELSE_10	IF_37	CALL_22
0x400445e	            0x31f6	                            xor esi, esi	      2948	ui.c	FUNCTION_75	ELSE_10	IF_37	CALL_22
0x4004460	      0x4c8d7c2424	                   lea r15, [rsp + 0x24]	      2948	ui.c	FUNCTION_75	ELSE_10	IF_37	CALL_22
0x4004465	      0xe800000000	                          call 0x400446a	      2948	ui.c	FUNCTION_75	ELSE_10	IF_37	CALL_22
0x400446a	    0x488b05000000	            mov rax, qword [0x04004471] 	      2950	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4004471	      0xbf0a000000	                            mov edi, 0xa	      2952	ui.c	FUNCTION_75	ELSE_10	IF_37	CALL_23
0x4004476	    0x83a0b4000000	      and dword [rax + 0xb4], 0xffffff8e	      2950	ui.c	FUNCTION_75	ELSE_10	IF_37
0x400447d	      0xe800000000	                          call 0x4004482	      2952	ui.c	FUNCTION_75	ELSE_10	IF_37	CALL_23
0x4004482	      0x488d442420	                   lea rax, [rsp + 0x20]	      2952	ui.c	FUNCTION_75	ELSE_10	IF_37	CALL_23
0x4004487	    0xc74424200000	               mov dword [rsp + 0x20], 0	      2953	ui.c	FUNCTION_75	ELSE_10	IF_37
0x400448f	    0x4c8b15000000	            mov r10, qword [0x04004496] 	      2953	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4004496	        0x8b542424	            mov edx, dword [rsp + 0x24] 	      2953	ui.c	FUNCTION_75	ELSE_10	IF_37
0x400449a	      0x4889442410	             mov qword [rsp + 0x10], rax	      2953	ui.c	FUNCTION_75	ELSE_10	IF_37
0x400449f	      0xe983fcffff	                           jmp 0x4004127	      2953	ui.c	FUNCTION_75	ELSE_10	IF_37
0x40044a4	        0x4d396638	            cmp qword [r14 + 0x38], r12 	      3052	ui.c	FUNCTION_75	IF_55
0x40044a8	     0xf8525fdffff	                           jne 0x40041d3	      3052	ui.c	FUNCTION_75	IF_55
0x40044ae	        0x8b5c2408	                mov ebx, dword [rsp + 8]	      3051	ui.c	FUNCTION_75
0x40044b2	        0x41395e40	            cmp dword [r14 + 0x40], ebx 	      3051	ui.c	FUNCTION_75
0x40044b6	      0xba01000000	                              mov edx, 1	      3051	ui.c	FUNCTION_75
0x40044bb	           0xf44c2	                          cmove eax, edx	      3051	ui.c	FUNCTION_75
0x40044be	      0xe910fdffff	                           jmp 0x40041d3	      3051	ui.c	FUNCTION_75
0x40044c3	      0xe800000000	                          call 0x40044c8	      3029	ui.c	FUNCTION_75	IF_50	CALL_30
0x40044c8	        0x8b442408	                mov eax, dword [rsp + 8]	      3030	ui.c	FUNCTION_75	IF_50
0x40044cc	      0xbf6f000000	                           mov edi, 0x6f	      3034	ui.c	FUNCTION_75	IF_50	CALL_31
0x40044d1	    0x4c8925000000	            mov qword [0x040044d8], r12 	      3030	ui.c	FUNCTION_75	IF_50
0x40044d8	    0xc70500000000	               mov dword [0x040044e2], 1	      3031	ui.c	FUNCTION_75	IF_50
0x40044e2	    0xc70500000000	               mov dword [0x040044ec], 1	      3032	ui.c	FUNCTION_75	IF_50
0x40044ec	    0x890500000000	            mov dword [0x040044f2], eax 	      3030	ui.c	FUNCTION_75	IF_50
0x40044f2	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      3030	ui.c	FUNCTION_75	IF_50
0x40044f6	    0x890500000000	            mov dword [0x040044fc], eax 	      3030	ui.c	FUNCTION_75	IF_50
0x40044fc	      0xe800000000	                          call 0x4004501	      3034	ui.c	FUNCTION_75	IF_50	CALL_31
0x4004501	      0xe800000000	                          call 0x4004506	      3035	ui.c	FUNCTION_75	IF_50	CALL_32
0x4004506	    0x8b3500000000	            mov esi, dword [0x0400450c] 	      3036	ui.c	FUNCTION_75	IF_50	IF_51
0x400450c	            0x85f6	                           test esi, esi	      3036	ui.c	FUNCTION_75	IF_50	IF_51
0x400450e	     0xf847afcffff	                            je 0x400418e	      3036	ui.c	FUNCTION_75	IF_50	IF_51
0x4004514	    0x8b0d00000000	            mov ecx, dword [0x0400451a] 	      3036	ui.c	FUNCTION_75	IF_50	IF_51
0x400451a	            0x85c9	                           test ecx, ecx	      3036	ui.c	FUNCTION_75	IF_50	IF_51
0x400451c	     0xf856cfcffff	                           jne 0x400418e	      3036	ui.c	FUNCTION_75	IF_50	IF_51
0x4004522	    0xc70500000000	               mov dword [0x0400452c], 1	      3037	ui.c	FUNCTION_75	IF_50	IF_51
0x400452c	      0xe95dfcffff	                           jmp 0x400418e	      3037	ui.c	FUNCTION_75	IF_50	IF_51
0x4004531	    0x448b1d000000	           mov r11d, dword [0x04004538] 	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4004538	          0x4585db	                         test r11d, r11d	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x400453b	        0x400f95c6	                               setne sil	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x400453f	          0x4839c2	                            cmp rdx, rax	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4004542	           0xf95c0	                                setne al	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4004545	             0x9f0	                             or eax, esi	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4004547	           0xfb6c0	                           movzx eax, al	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x400454a	    0x480382c80100	            add rax, qword [rdx + 0x1c8]	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4004551	          0x4839c1	                            cmp rcx, rax	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4004554	     0xf8c2af7ffff	                            jl 0x4003c84	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x400455a	      0xe959fdffff	                           jmp 0x40042b8	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x400455f	        0x493b4278	            cmp rax, qword [r10 + 0x78] 	      3003	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4004563	     0xf85d8fdffff	                           jne 0x4004341	      3003	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4004569	    0x4181a2b40000	      and dword [r10 + 0xb4], 0xffffff7f	      3004	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4004574	      0xe9c8fdffff	                           jmp 0x4004341	      3004	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4004579	      0xe800000000	                          call 0x400457e	      3064	ui.c	FUNCTION_75
ui_suspend	FOR,0:functions,0:IF,1:ELSE,0:CALL,2:DO,0:SWITCH,0:WHILE,0	6
0x40010c0	    0x8b0500000000	            mov eax, dword [0x040010c6] 	       303	ui.c	FUNCTION_7	IF_1
0x40010c6	            0x85c0	                           test eax, eax	       303	ui.c	FUNCTION_7	IF_1
0x40010c8	            0x7506	                           jne 0x40010d0	       303	ui.c	FUNCTION_7	IF_1
0x40010ca	      0xe900000000	                           jmp 0x40010cf	       309	ui.c	FUNCTION_7	CALL_2
0x40010cf	              0x90	                                     nop	       309	ui.c	FUNCTION_7	CALL_2
0x40010d0	      0xe900000000	                           jmp 0x40010d5	       305	ui.c	FUNCTION_7	IF_1	CALL_1
get_fpos_of_mouse	FOR,0:functions,0:IF,7:ELSE,0:CALL,3:DO,0:SWITCH,0:WHILE,0	63
0x4004610	              0x55	                                push rbp	      3213	ui.c	FUNCTION_78
0x4004611	              0x53	                                push rbx	      3213	ui.c	FUNCTION_78
0x4004612	        0x4883ec18	                           sub rsp, 0x18	      3213	ui.c	FUNCTION_78
0x4004616	    0x8b1500000000	            mov edx, dword [0x0400461c] 	      3216	ui.c	FUNCTION_78
0x400461c	    0x64488b042528	                mov rax, qword fs:[0x28]	      3213	ui.c	FUNCTION_78
0x4004625	      0x4889442408	                mov qword [rsp + 8], rax	      3213	ui.c	FUNCTION_78
0x400462a	            0x31c0	                            xor eax, eax	      3213	ui.c	FUNCTION_78
0x400462c	    0x8b0500000000	            mov eax, dword [0x04004632] 	      3215	ui.c	FUNCTION_78
0x4004632	        0x89542404	                mov dword [rsp + 4], edx	      3216	ui.c	FUNCTION_78
0x4004636	          0x890424	                    mov dword [rsp], eax	      3215	ui.c	FUNCTION_78
0x4004639	          0xc1e81f	                           shr eax, 0x1f	      3218	ui.c	FUNCTION_78	IF_1
0x400463c	            0x84c0	                             test al, al	      3218	ui.c	FUNCTION_78	IF_1
0x400463e	            0x7538	                           jne 0x4004678	      3218	ui.c	FUNCTION_78	IF_1
0x4004640	          0xc1ea1f	                           shr edx, 0x1f	      3218	ui.c	FUNCTION_78	IF_1
0x4004643	            0x84d2	                             test dl, dl	      3218	ui.c	FUNCTION_78	IF_1
0x4004645	            0x7531	                           jne 0x4004678	      3218	ui.c	FUNCTION_78	IF_1
0x4004647	      0x488d742404	                      lea rsi, [rsp + 4]	      3222	ui.c	FUNCTION_78	CALL_1
0x400464c	          0x4889fd	                            mov rbp, rdi	      3222	ui.c	FUNCTION_78	CALL_1
0x400464f	          0x4889e7	                            mov rdi, rsp	      3222	ui.c	FUNCTION_78	CALL_1
0x4004652	      0xe800000000	                          call 0x4004657	      3222	ui.c	FUNCTION_78	CALL_1
0x4004657	          0x4885c0	                           test rax, rax	      3223	ui.c	FUNCTION_78	IF_2
0x400465a	          0x4889c3	                            mov rbx, rax	      3222	ui.c	FUNCTION_78	CALL_1
0x400465d	            0x7419	                            je 0x4004678	      3223	ui.c	FUNCTION_78	IF_2
0x400465f	          0x8b0424	                    mov eax, dword [rsp]	      3228	ui.c	FUNCTION_78	IF_3
0x4004662	    0x3983a0000000	            cmp dword [rbx + 0xa0], eax 	      3228	ui.c	FUNCTION_78	IF_3
0x4004668	            0x7f2e	                            jg 0x4004698	      3228	ui.c	FUNCTION_78	IF_3
0x400466a	      0xb802000000	                              mov eax, 2	      3229	ui.c	FUNCTION_78	IF_3
0x400466f	            0xeb09	                           jmp 0x400467a	      3229	ui.c	FUNCTION_78	IF_3
0x4004671	     0xf1f80000000	                         nop dword [rax]	      3229	ui.c	FUNCTION_78	IF_3
0x4004678	            0x31c0	                            xor eax, eax	      3219	ui.c	FUNCTION_78	IF_1
0x400467a	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3248	ui.c	FUNCTION_78
0x400467f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3248	ui.c	FUNCTION_78
0x4004688	            0x7567	                           jne 0x40046f1	      3248	ui.c	FUNCTION_78
0x400468a	        0x4883c418	                           add rsp, 0x18	      3248	ui.c	FUNCTION_78
0x400468e	              0x5b	                                 pop rbx	      3248	ui.c	FUNCTION_78
0x400468f	              0x5d	                                 pop rbp	      3248	ui.c	FUNCTION_78
0x4004690	              0xc3	                                     ret	      3248	ui.c	FUNCTION_78
0x4004691	     0xf1f80000000	                         nop dword [rax]	      3248	ui.c	FUNCTION_78
0x4004698	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      3230	ui.c	FUNCTION_78	IF_4
0x400469c	    0x398bac000000	            cmp dword [rbx + 0xac], ecx 	      3230	ui.c	FUNCTION_78	IF_4
0x40046a2	      0xb804000000	                              mov eax, 4	      3231	ui.c	FUNCTION_78	IF_4
0x40046a7	            0x7ed1	                           jle 0x400467a	      3230	ui.c	FUNCTION_78	IF_4
0x40046a9	    0x483b1d000000	            cmp rbx, qword [0x040046b0] 	      3233	ui.c	FUNCTION_78	IF_5
0x40046b0	            0x75c6	                           jne 0x4004678	      3233	ui.c	FUNCTION_78	IF_5
0x40046b2	      0x488d542404	                      lea rdx, [rsp + 4]	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x40046b7	          0x4889e9	                            mov rcx, rbp	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x40046ba	          0x4889e6	                            mov rsi, rsp	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x40046bd	          0x4889df	                            mov rdi, rbx	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x40046c0	      0xe800000000	                          call 0x40046c5	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x40046c5	            0x85c0	                           test eax, eax	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x40046c7	            0x75a1	                           jne 0x400466a	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x40046c9	        0x8b542404	                mov edx, dword [rsp + 4]	      3240	ui.c	FUNCTION_78	CALL_3
0x40046cd	        0x488b7500	                    mov rsi, qword [rbp]	      3240	ui.c	FUNCTION_78	CALL_3
0x40046d1	          0x4889df	                            mov rdi, rbx	      3240	ui.c	FUNCTION_78	CALL_3
0x40046d4	      0xe800000000	                          call 0x40046d9	      3240	ui.c	FUNCTION_78	CALL_3
0x40046d9	            0x85c0	                           test eax, eax	      3242	ui.c	FUNCTION_78	IF_7
0x40046db	            0x7e03	                           jle 0x40046e0	      3242	ui.c	FUNCTION_78	IF_7
0x40046dd	          0x83e801	                              sub eax, 1	      3243	ui.c	FUNCTION_78	IF_7
0x40046e0	          0x894508	                mov dword [rbp + 8], eax	      3243	ui.c	FUNCTION_78	IF_7
0x40046e3	    0xc7450c000000	                mov dword [rbp + 0xc], 0	      3245	ui.c	FUNCTION_78
0x40046ea	      0xb801000000	                              mov eax, 1	      3247	ui.c	FUNCTION_78
0x40046ef	            0xeb89	                           jmp 0x400467a	      3247	ui.c	FUNCTION_78
0x40046f1	      0xe800000000	                          call 0x40046f6	      3248	ui.c	FUNCTION_78
ui_focus_change	FOR,0:functions,0:IF,8:ELSE,2:CALL,12:DO,0:SWITCH,0:WHILE,0	90
0x4004700	              0x55	                                push rbp	      3287	ui.c	FUNCTION_80
0x4004701	              0x53	                                push rbx	      3287	ui.c	FUNCTION_80
0x4004702	        0x4883ec08	                              sub rsp, 8	      3287	ui.c	FUNCTION_80
0x4004706	            0x85ff	                           test edi, edi	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x4004708	     0xf85da000000	                           jne 0x40047e8	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x400470e	    0x4c8b05000000	              mov r8, qword [0x04004715]	      3309	ui.c	FUNCTION_80	CALL_4
0x4004715	            0x31db	                            xor ebx, ebx	      3289	ui.c	FUNCTION_80
0x4004717	      0xbf35000000	                           mov edi, 0x35	      3309	ui.c	FUNCTION_80	CALL_4
0x400471c	            0x31c9	                            xor ecx, ecx	      3309	ui.c	FUNCTION_80	CALL_4
0x400471e	            0x31d2	                            xor edx, edx	      3309	ui.c	FUNCTION_80	CALL_4
0x4004720	            0x31f6	                            xor esi, esi	      3309	ui.c	FUNCTION_80	CALL_4
0x4004722	      0xe800000000	                          call 0x4004727	      3309	ui.c	FUNCTION_80	CALL_4
0x4004727	             0x9d8	                             or eax, ebx	      3312	ui.c	FUNCTION_80	IF_2
0x4004729	     0xf8491000000	                            je 0x40047c0	      3312	ui.c	FUNCTION_80	IF_2
0x400472f	    0x8b0500000000	            mov eax, dword [0x04004735] 	      3318	ui.c	FUNCTION_80	IF_2	IF_3
0x4004735	    0xc70500000000	               mov dword [0x0400473f], 0	      3316	ui.c	FUNCTION_80	IF_2
0x400473f	            0xa808	                              test al, 8	      3318	ui.c	FUNCTION_80	IF_2	IF_3
0x4004741	     0xf85d1000000	                           jne 0x4004818	      3318	ui.c	FUNCTION_80	IF_2	IF_3
0x4004747	            0x89c2	                            mov edx, eax	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4004749	          0x80e6fd	                            and dh, 0xfd	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400474c	    0x81fa00040000	                          cmp edx, 0x400	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4004752	           0xf94c1	                                 sete cl	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4004755	      0x3d01020000	                          cmp eax, 0x201	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400475a	           0xf94c2	                                 sete dl	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400475d	             0x9ca	                             or edx, ecx	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400475f	      0x3d00030000	                          cmp eax, 0x300	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4004764	           0xf94c1	                                 sete cl	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4004767	             0x8ca	                               or dl, cl	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4004769	            0x752d	                           jne 0x4004798	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400476b	      0x3d00080000	                          cmp eax, 0x800	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4004770	            0x7426	                            je 0x4004798	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4004772	    0x8b3500000000	            mov esi, dword [0x04004778] 	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4004778	            0x85f6	                           test esi, esi	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400477a	            0x751c	                           jne 0x4004798	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400477c	            0xa811	                           test al, 0x11	      3323	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5
0x400477e	            0x741d	                            je 0x400479d	      3323	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5
0x4004780	    0x8b0d00000000	            mov ecx, dword [0x04004786] 	      3325	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	IF_6
0x4004786	            0x85c9	                           test ecx, ecx	      3325	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	IF_6
0x4004788	     0xf85b7000000	                           jne 0x4004845	      3325	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	IF_6
0x400478e	      0xe800000000	                          call 0x4004793	      3327	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	CALL_8
0x4004793	            0xeb08	                           jmp 0x400479d	      3327	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	CALL_8
0x4004795	           0xf1f00	                         nop dword [rax]	      3327	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	CALL_8
0x4004798	      0xe800000000	                          call 0x400479d	      3322	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400479d	      0xe800000000	                          call 0x40047a2	      3329	ui.c	FUNCTION_80	IF_2	CALL_9
0x40047a2	            0x31ff	                            xor edi, edi	      3330	ui.c	FUNCTION_80	IF_2	CALL_10
0x40047a4	      0xbe01000000	                              mov esi, 1	      3330	ui.c	FUNCTION_80	IF_2	CALL_10
0x40047a9	      0xe800000000	                          call 0x40047ae	      3330	ui.c	FUNCTION_80	IF_2	CALL_10
0x40047ae	    0x8b1500000000	            mov edx, dword [0x040047b4] 	      3332	ui.c	FUNCTION_80	IF_2	IF_7
0x40047b4	            0x85d2	                           test edx, edx	      3332	ui.c	FUNCTION_80	IF_2	IF_7
0x40047b6	            0x7408	                            je 0x40047c0	      3332	ui.c	FUNCTION_80	IF_2	IF_7
0x40047b8	            0x31ff	                            xor edi, edi	      3333	ui.c	FUNCTION_80	IF_2	CALL_11
0x40047ba	      0xe800000000	                          call 0x40047bf	      3333	ui.c	FUNCTION_80	IF_2	CALL_11
0x40047bf	              0x90	                                     nop	      3333	ui.c	FUNCTION_80	IF_2	CALL_11
0x40047c0	    0x8b0500000000	            mov eax, dword [0x040047c6] 	      3338	ui.c	FUNCTION_80	IF_8
0x40047c6	            0x85c0	                           test eax, eax	      3338	ui.c	FUNCTION_80	IF_8
0x40047c8	            0x750e	                           jne 0x40047d8	      3338	ui.c	FUNCTION_80	IF_8
0x40047ca	        0x4883c408	                              add rsp, 8	      3341	ui.c	FUNCTION_80
0x40047ce	              0x5b	                                 pop rbx	      3341	ui.c	FUNCTION_80
0x40047cf	              0x5d	                                 pop rbp	      3341	ui.c	FUNCTION_80
0x40047d0	              0xc3	                                     ret	      3341	ui.c	FUNCTION_80
0x40047d1	     0xf1f80000000	                         nop dword [rax]	      3341	ui.c	FUNCTION_80
0x40047d8	        0x4883c408	                              add rsp, 8	      3341	ui.c	FUNCTION_80
0x40047dc	              0x5b	                                 pop rbx	      3341	ui.c	FUNCTION_80
0x40047dd	              0x5d	                                 pop rbp	      3341	ui.c	FUNCTION_80
0x40047de	      0xe900000000	                           jmp 0x40047e3	      3339	ui.c	FUNCTION_80	CALL_12
0x40047e3	       0xf1f440000	                   nop dword [rax + rax]	      3339	ui.c	FUNCTION_80	CALL_12
0x40047e8	    0x488b05000000	            mov rax, qword [0x040047ef] 	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x40047ef	            0x31ff	                            xor edi, edi	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x40047f1	            0x31db	                            xor ebx, ebx	      3289	ui.c	FUNCTION_80
0x40047f3	        0x488d6802	                      lea rbp, [rax + 2]	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x40047f7	      0xe800000000	                          call 0x40047fc	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x40047fc	          0x4839c5	                            cmp rbp, rax	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x40047ff	            0x7c27	                            jl 0x4004828	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x4004801	    0x4c8b05000000	              mov r8, qword [0x04004808]	      3309	ui.c	FUNCTION_80	CALL_4
0x4004808	      0xbf34000000	                           mov edi, 0x34	      3309	ui.c	FUNCTION_80	CALL_4
0x400480d	      0xe90affffff	                           jmp 0x400471c	      3309	ui.c	FUNCTION_80	CALL_4
0x4004812	    0x660f1f440000	                    nop word [rax + rax]	      3309	ui.c	FUNCTION_80	CALL_4
0x4004818	      0xe800000000	                          call 0x400481d	      3319	ui.c	FUNCTION_80	IF_2	CALL_5
0x400481d	      0xe97bffffff	                           jmp 0x400479d	      3319	ui.c	FUNCTION_80	IF_2	CALL_5
0x4004822	    0x660f1f440000	                    nop word [rax + rax]	      3319	ui.c	FUNCTION_80	IF_2	CALL_5
0x4004828	    0x8b3d00000000	            mov edi, dword [0x0400482e] 	      3296	ui.c	FUNCTION_80	IF_1	CALL_2
0x400482e	      0xe800000000	                          call 0x4004833	      3296	ui.c	FUNCTION_80	IF_1	CALL_2
0x4004833	            0x31ff	                            xor edi, edi	      3303	ui.c	FUNCTION_80	IF_1	CALL_3
0x4004835	            0x89c3	                            mov ebx, eax	      3296	ui.c	FUNCTION_80	IF_1	CALL_2
0x4004837	      0xe800000000	                          call 0x400483c	      3303	ui.c	FUNCTION_80	IF_1	CALL_3
0x400483c	    0x488905000000	            mov qword [0x04004843], rax 	      3303	ui.c	FUNCTION_80	IF_1	CALL_3
0x4004843	            0xebbc	                           jmp 0x4004801	      3303	ui.c	FUNCTION_80	IF_1	CALL_3
0x4004845	            0x31ff	                            xor edi, edi	      3326	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	CALL_7
0x4004847	      0xe800000000	                          call 0x400484c	      3326	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	CALL_7
0x400484c	      0xe93dffffff	                           jmp 0x400478e	      3326	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	CALL_7
clip_auto_select	FOR,0:functions,0:IF,2:ELSE,0:CALL,4:DO,0:SWITCH,0:WHILE,0	27
0x4001cf0	        0x4883ec08	                              sub rsp, 8	       675	ui.c	FUNCTION_22
0x4001cf4	    0x8b0d00000000	            mov ecx, dword [0x04001cfa] 	       691	ui.c	FUNCTION_23	CALL_1
0x4001cfa	            0x85c9	                           test ecx, ecx	       691	ui.c	FUNCTION_23	CALL_1
0x4001cfc	            0x7532	                           jne 0x4001d30	       691	ui.c	FUNCTION_23	CALL_1
0x4001cfe	    0x8b1500000000	            mov edx, dword [0x04001d04] 	       676	ui.c	FUNCTION_22	IF_1	CALL_1
0x4001d04	            0x85d2	                           test edx, edx	       676	ui.c	FUNCTION_22	IF_1	CALL_1
0x4001d06	            0x7531	                           jne 0x4001d39	       676	ui.c	FUNCTION_22	IF_1	CALL_1
0x4001d08	    0x8b0500000000	            mov eax, dword [0x04001d0e] 	       705	ui.c	FUNCTION_24	CALL_1
0x4001d0e	            0x85c0	                           test eax, eax	       678	ui.c	FUNCTION_22	IF_2	CALL_3
0x4001d10	            0x750e	                           jne 0x4001d20	       678	ui.c	FUNCTION_22	IF_2	CALL_3
0x4001d12	        0x4883c408	                              add rsp, 8	       680	ui.c	FUNCTION_22
0x4001d16	              0xc3	                                     ret	       680	ui.c	FUNCTION_22
0x4001d17	    0x660f1f840000	                    nop word [rax + rax]	       680	ui.c	FUNCTION_22
0x4001d20	      0xbf00000000	                              mov edi, 0	       679	ui.c	FUNCTION_22	CALL_4
0x4001d25	        0x4883c408	                              add rsp, 8	       680	ui.c	FUNCTION_22
0x4001d29	      0xe962ffffff	             jmp sym.clip_copy_selection	       679	ui.c	FUNCTION_22	CALL_4
0x4001d2e	            0x6690	                                     nop	       679	ui.c	FUNCTION_22	CALL_4
0x4001d30	      0xe80bedffff	     call sym.clip_isautosel_star.part.4	       679	ui.c	FUNCTION_22	CALL_4
0x4001d35	            0x85c0	                           test eax, eax	       676	ui.c	FUNCTION_22	IF_1	CALL_1
0x4001d37	            0x740a	                            je 0x4001d43	       676	ui.c	FUNCTION_22	IF_1	CALL_1
0x4001d39	      0xbf00000000	                              mov edi, 0	       677	ui.c	FUNCTION_22	CALL_2
0x4001d3e	      0xe84dffffff	            call sym.clip_copy_selection	       677	ui.c	FUNCTION_22	CALL_2
0x4001d43	    0x8b0500000000	            mov eax, dword [0x04001d49] 	       705	ui.c	FUNCTION_24	CALL_1
0x4001d49	            0x85c0	                           test eax, eax	       705	ui.c	FUNCTION_24	CALL_1
0x4001d4b	            0x74bb	                            je 0x4001d08	       705	ui.c	FUNCTION_24	CALL_1
0x4001d4d	      0xe81eedffff	     call sym.clip_isautosel_plus.part.5	       705	ui.c	FUNCTION_24	CALL_1
0x4001d52	            0xebba	                           jmp 0x4001d0e	       705	ui.c	FUNCTION_24	CALL_1
clip_x11_timestamp_cb	FOR,0:functions,0:IF,6:ELSE,1:CALL,3:DO,0:SWITCH,0:WHILE,0	73
0x4000170	              0x55	                                push rbp	      2081	ui.c	FUNCTION_63
0x4000171	              0x53	                                push rbx	      2081	ui.c	FUNCTION_63
0x4000172	        0x4883ec38	                           sub rsp, 0x38	      2081	ui.c	FUNCTION_63
0x4000176	    0x64488b042528	                mov rax, qword fs:[0x28]	      2081	ui.c	FUNCTION_63
0x400017f	      0x4889442428	             mov qword [rsp + 0x28], rax	      2081	ui.c	FUNCTION_63
0x4000184	            0x31c0	                            xor eax, eax	      2081	ui.c	FUNCTION_63
0x4000186	          0x833a1c	                   cmp dword [rdx], 0x1c	      2090	ui.c	FUNCTION_63	IF_1
0x4000189	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2085	ui.c	FUNCTION_63
0x4000192	            0x741c	                            je 0x40001b0	      2090	ui.c	FUNCTION_63	IF_1
0x4000194	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2119	ui.c	FUNCTION_63	ELSE_1
0x4000199	    0x644833042528	                xor rax, qword fs:[0x28]	      2119	ui.c	FUNCTION_63	ELSE_1
0x40001a2	     0xf85dd000000	                           jne 0x4000285	      2119	ui.c	FUNCTION_63	ELSE_1
0x40001a8	        0x4883c438	                           add rsp, 0x38	      2119	ui.c	FUNCTION_63	ELSE_1
0x40001ac	              0x5b	                                 pop rbx	      2119	ui.c	FUNCTION_63	ELSE_1
0x40001ad	              0x5d	                                 pop rbp	      2119	ui.c	FUNCTION_63	ELSE_1
0x40001ae	              0xc3	                                     ret	      2119	ui.c	FUNCTION_63	ELSE_1
0x40001af	              0x90	                                     nop	      2119	ui.c	FUNCTION_63	ELSE_1
0x40001b0	          0x8b4238	            mov eax, dword [rdx + 0x38] 	      2090	ui.c	FUNCTION_63	IF_1
0x40001b3	          0x4889d3	                            mov rbx, rdx	      2090	ui.c	FUNCTION_63	IF_1
0x40001b6	            0x85c0	                           test eax, eax	      2090	ui.c	FUNCTION_63	IF_1
0x40001b8	            0x75da	                           jne 0x4000194	      2090	ui.c	FUNCTION_63	IF_1
0x40001ba	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	      2091	ui.c	FUNCTION_63	IF_1
0x40001be	    0x483b15000000	            cmp rdx, qword [0x040001c5] 	      2091	ui.c	FUNCTION_63	IF_1
0x40001c5	          0x4889fd	                            mov rbp, rdi	      2091	ui.c	FUNCTION_63	IF_1
0x40001c8	            0x7409	                            je 0x40001d3	      2091	ui.c	FUNCTION_63	IF_1
0x40001ca	    0x483b15000000	            cmp rdx, qword [0x040001d1] 	      2092	ui.c	FUNCTION_63	IF_1
0x40001d1	            0x75c1	                           jne 0x4000194	      2092	ui.c	FUNCTION_63	IF_1
0x40001d3	      0x488d442420	                   lea rax, [rsp + 0x20]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x40001d8	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x40001dc	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x40001e0	          0x4531c9	                            xor r9d, r9d	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x40001e3	          0x4531c0	                            xor r8d, r8d	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x40001e6	            0x31c9	                            xor ecx, ecx	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x40001e8	              0x50	                                push rax	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x40001e9	      0x488d442420	                   lea rax, [rsp + 0x20]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x40001ee	              0x50	                                push rax	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x40001ef	      0x488d442420	                   lea rax, [rsp + 0x20]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x40001f4	              0x50	                                push rax	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x40001f5	      0x488d44241c	                   lea rax, [rsp + 0x1c]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x40001fa	              0x50	                                push rax	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x40001fb	      0x488d442428	                   lea rax, [rsp + 0x28]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4000200	              0x50	                                push rax	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4000201	    0xff3500000000	                 push qword [0x04000207]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4000207	      0xe800000000	                          call 0x400020c	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x400020c	        0x4883c430	                           add rsp, 0x30	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4000210	            0x85c0	                           test eax, eax	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4000212	            0x7580	                           jne 0x4000194	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4000214	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2100	ui.c	FUNCTION_63	IF_3
0x4000219	          0x4885ff	                           test rdi, rdi	      2100	ui.c	FUNCTION_63	IF_3
0x400021c	            0x7405	                            je 0x4000223	      2100	ui.c	FUNCTION_63	IF_3
0x400021e	      0xe800000000	                          call 0x4000223	      2101	ui.c	FUNCTION_63	CALL_2
0x4000223	    0x488b05000000	            mov rax, qword [0x0400022a] 	      2104	ui.c	FUNCTION_63	IF_4
0x400022a	      0x4839442408	                cmp qword [rsp + 8], rax	      2104	ui.c	FUNCTION_63	IF_4
0x400022f	     0xf855fffffff	                           jne 0x4000194	      2104	ui.c	FUNCTION_63	IF_4
0x4000235	      0x837c240420	               cmp dword [rsp + 4], 0x20	      2104	ui.c	FUNCTION_63	IF_4
0x400023a	     0xf8554ffffff	                           jne 0x4000194	      2104	ui.c	FUNCTION_63	IF_4
0x4000240	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x4000244	        0x488b7328	            mov rsi, qword [rbx + 0x28] 	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x4000248	    0x41b900000000	                              mov r9d, 0	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x400024e	    0x41b800000000	                              mov r8d, 0	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x4000254	      0xb900000000	                              mov ecx, 0	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x4000259	          0x4889ef	                            mov rdi, rbp	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x400025c	      0xe800000000	                          call 0x4000261	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x4000261	            0x3c01	                               cmp al, 1	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x4000263	     0xf852bffffff	                           jne 0x4000194	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x4000269	    0x488b05000000	            mov rax, qword [0x04000270] 	      2114	ui.c	FUNCTION_63	IF_5	IF_6
0x4000270	        0x48394328	            cmp qword [rbx + 0x28], rax 	      2114	ui.c	FUNCTION_63	IF_5	IF_6
0x4000274	            0x7414	                            je 0x400028a	      2114	ui.c	FUNCTION_63	IF_5	IF_6
0x4000276	    0xc70500000000	               mov dword [0x04000280], 1	      2117	ui.c	FUNCTION_63	IF_5	ELSE_1
0x4000280	      0xe90fffffff	                           jmp 0x4000194	      2117	ui.c	FUNCTION_63	IF_5	ELSE_1
0x4000285	      0xe800000000	                          call 0x400028a	      2119	ui.c	FUNCTION_63	ELSE_1
0x400028a	    0xc70500000000	               mov dword [0x04000294], 1	      2115	ui.c	FUNCTION_63	IF_5	IF_6
0x4000294	      0xe9fbfeffff	                           jmp 0x4000194	      2115	ui.c	FUNCTION_63	IF_5	IF_6
clip_may_clear_selection	FOR,0:functions,0:IF,1:ELSE,0:CALL,1:DO,0:SWITCH,0:WHILE,0	12
0x4001640	    0x66833d000000	                cmp word [0x04001648], 2	      1079	ui.c	FUNCTION_31	IF_1
0x4001648	            0x7406	                            je 0x4001650	      1079	ui.c	FUNCTION_31	IF_1
0x400164a	            0xf3c3	                                     ret	      1079	ui.c	FUNCTION_31	IF_1
0x400164c	         0xf1f4000	                         nop dword [rax]	      1079	ui.c	FUNCTION_31	IF_1
0x4001650	          0x4863f6	                         movsxd rsi, esi	      1080	ui.c	FUNCTION_31	IF_1
0x4001653	    0x483b35000000	            cmp rsi, qword [0x0400165a] 	      1080	ui.c	FUNCTION_31	IF_1
0x400165a	            0x7cee	                            jl 0x400164a	      1080	ui.c	FUNCTION_31	IF_1
0x400165c	          0x4863ff	                         movsxd rdi, edi	      1081	ui.c	FUNCTION_31	IF_1
0x400165f	    0x483b3d000000	            cmp rdi, qword [0x04001666] 	      1081	ui.c	FUNCTION_31	IF_1
0x4001666	            0x7fe2	                            jg 0x400164a	      1081	ui.c	FUNCTION_31	IF_1
0x4001668	      0xbf00000000	                              mov edi, 0	      1081	ui.c	FUNCTION_31	IF_1
0x400166d	      0xe92ef4ffff	     jmp sym.clip_clear_selection.part.6	      1081	ui.c	FUNCTION_31	IF_1
