utf_ptr2char	DO,0:IF,10:CALL,0:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	121
0x4000230	           0xfb617	                   movzx edx, byte [rdi]	      1793	mbyte.c	FUNCTION_35	IF_1
0x4000233	            0x84d2	                             test dl, dl	      1793	mbyte.c	FUNCTION_35	IF_1
0x4000235	            0x7809	                            js 0x4000240	      1793	mbyte.c	FUNCTION_35	IF_1
0x4000237	           0xfb6c2	                           movzx eax, dl	      1794	mbyte.c	FUNCTION_35	IF_1
0x400023a	              0xc3	                                     ret	      1794	mbyte.c	FUNCTION_35	IF_1
0x400023b	       0xf1f440000	                   nop dword [rax + rax]	      1794	mbyte.c	FUNCTION_35	IF_1
0x4000240	           0xfb6ca	                           movzx ecx, dl	      1796	mbyte.c	FUNCTION_35
0x4000243	          0x4889c8	                            mov rax, rcx	      1796	mbyte.c	FUNCTION_35
0x4000246	     0xfbe89000000	                   movsx ecx, byte [rcx]	      1796	mbyte.c	FUNCTION_35
0x400024d	          0x83f901	                              cmp ecx, 1	      1797	mbyte.c	FUNCTION_35	IF_2
0x4000250	            0x7e11	                           jle 0x4000263	      1797	mbyte.c	FUNCTION_35	IF_2
0x4000252	         0xfb67701	               movzx esi, byte [rdi + 1]	      1797	mbyte.c	FUNCTION_35	IF_2
0x4000256	          0x4189f0	                            mov r8d, esi	      1797	mbyte.c	FUNCTION_35	IF_2
0x4000259	        0x4183e0c0	                     and r8d, 0xffffffc0	      1797	mbyte.c	FUNCTION_35	IF_2
0x400025d	        0x4180f880	                           cmp r8b, 0x80	      1797	mbyte.c	FUNCTION_35	IF_2
0x4000261	            0x7405	                            je 0x4000268	      1797	mbyte.c	FUNCTION_35	IF_2
0x4000263	            0xf3c3	                                     ret	      1827	mbyte.c	FUNCTION_35
0x4000265	           0xf1f00	                         nop dword [rax]	      1827	mbyte.c	FUNCTION_35
0x4000268	          0x83f902	                              cmp ecx, 2	      1799	mbyte.c	FUNCTION_35	IF_2	IF_3
0x400026b	     0xf84a7000000	                            je 0x4000318	      1799	mbyte.c	FUNCTION_35	IF_2	IF_3
0x4000271	      0x440fb64702	               movzx r8d, byte [rdi + 2]	      1801	mbyte.c	FUNCTION_35	IF_2	IF_4
0x4000276	          0x4589c1	                            mov r9d, r8d	      1801	mbyte.c	FUNCTION_35	IF_2	IF_4
0x4000279	        0x4183e1c0	                     and r9d, 0xffffffc0	      1801	mbyte.c	FUNCTION_35	IF_2	IF_4
0x400027d	        0x4180f980	                           cmp r9b, 0x80	      1801	mbyte.c	FUNCTION_35	IF_2	IF_4
0x4000281	            0x75e0	                           jne 0x4000263	      1801	mbyte.c	FUNCTION_35	IF_2	IF_4
0x4000283	          0x83f903	                              cmp ecx, 3	      1803	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x4000286	     0xf849a000000	                            je 0x4000326	      1803	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x400028c	      0x440fb64f03	               movzx r9d, byte [rdi + 3]	      1806	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6
0x4000291	          0x4589ca	                           mov r10d, r9d	      1806	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6
0x4000294	        0x4183e2c0	                    and r10d, 0xffffffc0	      1806	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6
0x4000298	        0x4180fa80	                          cmp r10b, 0x80	      1806	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6
0x400029c	            0x75c5	                           jne 0x4000263	      1806	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6
0x400029e	          0x83f904	                              cmp ecx, 4	      1808	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x40002a1	     0xf8499000000	                            je 0x4000340	      1808	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x40002a7	      0x440fb65704	              movzx r10d, byte [rdi + 4]	      1811	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8
0x40002ac	          0x4589d3	                          mov r11d, r10d	      1811	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8
0x40002af	        0x4183e3c0	                    and r11d, 0xffffffc0	      1811	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8
0x40002b3	        0x4180fb80	                          cmp r11b, 0x80	      1811	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8
0x40002b7	            0x75aa	                           jne 0x4000263	      1811	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8
0x40002b9	          0x83f905	                              cmp ecx, 5	      1813	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x40002bc	     0xf84a4000000	                            je 0x4000366	      1813	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x40002c2	         0xfb67f05	               movzx edi, byte [rdi + 5]	      1817	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40002c6	          0x4189fb	                           mov r11d, edi	      1817	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40002c9	        0x4183e3c0	                    and r11d, 0xffffffc0	      1817	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40002cd	        0x4180fb80	                          cmp r11b, 0x80	      1817	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40002d1	            0x7590	                           jne 0x4000263	      1817	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40002d3	          0x83f906	                              cmp ecx, 6	      1817	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40002d6	            0x758b	                           jne 0x4000263	      1817	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40002d8	            0x89d1	                            mov ecx, edx	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40002da	          0x83e63f	                           and esi, 0x3f	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40002dd	          0x4489c0	                            mov eax, r8d	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40002e0	          0x83e101	                              and ecx, 1	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40002e3	          0xc1e618	                           shl esi, 0x18	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40002e6	          0x83e03f	                           and eax, 0x3f	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40002e9	          0xc1e11e	                           shl ecx, 0x1e	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40002ec	          0xc1e012	                           shl eax, 0x12	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40002ef	             0x1f1	                            add ecx, esi	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40002f1	             0x1c1	                            add ecx, eax	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40002f3	          0x4489c8	                            mov eax, r9d	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40002f6	          0x83e03f	                           and eax, 0x3f	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40002f9	          0xc1e00c	                            shl eax, 0xc	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40002fc	             0x1c1	                            add ecx, eax	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40002fe	          0x4489d0	                           mov eax, r10d	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x4000301	          0x83e03f	                           and eax, 0x3f	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x4000304	          0xc1e006	                              shl eax, 6	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x4000307	             0x1c1	                            add ecx, eax	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x4000309	            0x89f8	                            mov eax, edi	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x400030b	          0x83e03f	                           and eax, 0x3f	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x400030e	             0x1c8	                            add eax, ecx	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x4000310	              0xc3	                                     ret	      1827	mbyte.c	FUNCTION_35
0x4000311	     0xf1f80000000	                         nop dword [rax]	      1827	mbyte.c	FUNCTION_35
0x4000318	          0x83e21f	                           and edx, 0x1f	      1800	mbyte.c	FUNCTION_35	IF_2	IF_3
0x400031b	            0x89f0	                            mov eax, esi	      1800	mbyte.c	FUNCTION_35	IF_2	IF_3
0x400031d	          0xc1e206	                              shl edx, 6	      1800	mbyte.c	FUNCTION_35	IF_2	IF_3
0x4000320	          0x83e03f	                           and eax, 0x3f	      1800	mbyte.c	FUNCTION_35	IF_2	IF_3
0x4000323	             0x1d0	                            add eax, edx	      1800	mbyte.c	FUNCTION_35	IF_2	IF_3
0x4000325	              0xc3	                                     ret	      1800	mbyte.c	FUNCTION_35	IF_2	IF_3
0x4000326	          0xc1e00c	                            shl eax, 0xc	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x4000329	           0xfb7c8	                           movzx ecx, ax	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x400032c	            0x89f0	                            mov eax, esi	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x400032e	          0x83e03f	                           and eax, 0x3f	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x4000331	          0xc1e006	                              shl eax, 6	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x4000334	          0x8d1401	                    lea edx, [rcx + rax]	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x4000337	          0x4489c0	                            mov eax, r8d	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x400033a	          0x83e03f	                           and eax, 0x3f	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x400033d	             0x1d0	                            add eax, edx	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x400033f	              0xc3	                                     ret	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x4000340	            0x89d1	                            mov ecx, edx	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x4000342	            0x89f2	                            mov edx, esi	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x4000344	          0x4489c0	                            mov eax, r8d	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x4000347	          0x83e107	                              and ecx, 7	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x400034a	          0x83e23f	                           and edx, 0x3f	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x400034d	          0x83e03f	                           and eax, 0x3f	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x4000350	          0xc1e112	                           shl ecx, 0x12	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x4000353	          0xc1e20c	                            shl edx, 0xc	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x4000356	          0xc1e006	                              shl eax, 6	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x4000359	             0x1ca	                            add edx, ecx	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x400035b	             0x1c2	                            add edx, eax	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x400035d	          0x4489c8	                            mov eax, r9d	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x4000360	          0x83e03f	                           and eax, 0x3f	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x4000363	             0x1d0	                            add eax, edx	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x4000365	              0xc3	                                     ret	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x4000366	            0x89d1	                            mov ecx, edx	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4000368	            0x89f2	                            mov edx, esi	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x400036a	          0x4489c0	                            mov eax, r8d	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x400036d	          0x83e103	                              and ecx, 3	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4000370	          0x83e23f	                           and edx, 0x3f	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4000373	          0x83e03f	                           and eax, 0x3f	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4000376	          0xc1e118	                           shl ecx, 0x18	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4000379	          0xc1e212	                           shl edx, 0x12	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x400037c	          0xc1e00c	                            shl eax, 0xc	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x400037f	             0x1ca	                            add edx, ecx	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4000381	             0x1c2	                            add edx, eax	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4000383	          0x4489c8	                            mov eax, r9d	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4000386	          0x83e03f	                           and eax, 0x3f	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4000389	          0xc1e006	                              shl eax, 6	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x400038c	             0x1c2	                            add edx, eax	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x400038e	          0x4489d0	                           mov eax, r10d	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4000391	          0x83e03f	                           and eax, 0x3f	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4000394	             0x1d0	                            add eax, edx	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4000396	              0xc3	                                     ret	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
mb_tail_off	DO,0:IF,5:CALL,2:FOR,2:functions,0:ELSE,0:WHILE,0:SWITCH,0	65
0x4002b50	           0xfb60e	                   movzx ecx, byte [rsi]	      3935	mbyte.c	FUNCTION_73	IF_1
0x4002b53	            0x31c0	                            xor eax, eax	      3936	mbyte.c	FUNCTION_73	IF_1
0x4002b55	            0x84c9	                             test cl, cl	      3935	mbyte.c	FUNCTION_73	IF_1
0x4002b57	     0xf84bc000000	                            je 0x4002c19	      3935	mbyte.c	FUNCTION_73	IF_1
0x4002b5d	    0x8b0500000000	            mov eax, dword [0x04002b63] 	      3938	mbyte.c	FUNCTION_73	IF_2
0x4002b63	            0x85c0	                           test eax, eax	      3938	mbyte.c	FUNCTION_73	IF_2
0x4002b65	     0xf8485000000	                            je 0x4002bf0	      3938	mbyte.c	FUNCTION_73	IF_2
0x4002b6b	         0xfb64601	               movzx eax, byte [rsi + 1]	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4002b6f	          0x83e0c0	                     and eax, 0xffffffc0	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4002b72	            0x3c80	                            cmp al, 0x80	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4002b74	     0xf85a1000000	                           jne 0x4002c1b	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4002b7a	        0x4c8d4602	                       lea r8, [rsi + 2]	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4002b7e	            0x31c0	                            xor eax, eax	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4002b80	        0x410fb610	                    movzx edx, byte [r8]	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4002b84	          0x83c001	                              add eax, 1	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4002b87	        0x4983c001	                               add r8, 1	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4002b8b	          0x83e2c0	                     and edx, 0xffffffc0	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4002b8e	          0x80fa80	                            cmp dl, 0x80	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4002b91	            0x74ed	                            je 0x4002b80	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4002b93	          0x4839fe	                            cmp rsi, rdi	      3944	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x4002b96	     0xf8686000000	                           jbe 0x4002c22	      3944	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x4002b9c	            0x89ca	                            mov edx, ecx	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4002b9e	          0x83e2c0	                     and edx, 0xffffffc0	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4002ba1	          0x80fa80	                            cmp dl, 0x80	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4002ba4	            0x757c	                           jne 0x4002c22	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4002ba6	        0x488d56ff	                      lea rdx, [rsi - 1]	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4002baa	          0x4531c0	                            xor r8d, r8d	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4002bad	            0xeb15	                           jmp 0x4002bc4	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4002baf	              0x90	                                     nop	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4002bb0	           0xfb60a	                   movzx ecx, byte [rdx]	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4002bb3	        0x4883ea01	                              sub rdx, 1	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4002bb7	          0x4189c9	                            mov r9d, ecx	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4002bba	        0x4183e1c0	                     and r9d, 0xffffffc0	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4002bbe	        0x4180f980	                           cmp r9b, 0x80	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4002bc2	            0x7515	                           jne 0x4002bd9	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4002bc4	        0x4183c001	                              add r8d, 1	      3944	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x4002bc8	          0x4839d7	                            cmp rdi, rdx	      3944	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x4002bcb	            0x75e3	                           jne 0x4002bb0	      3944	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x4002bcd	          0x4489c2	                            mov edx, r8d	      3944	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x4002bd0	            0xf7da	                                 neg edx	      3944	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x4002bd2	          0x4863d2	                         movsxd rdx, edx	      3944	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x4002bd5	         0xfb60c16	             movzx ecx, byte [rsi + rdx]	      3944	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x4002bd9	     0xfbe89000000	                   movsx ecx, byte [rcx]	      3947	mbyte.c	FUNCTION_73	IF_2	IF_4
0x4002be0	      0x428d540001	                 lea edx, [rax + r8 + 1]	      3947	mbyte.c	FUNCTION_73	IF_2	IF_4
0x4002be5	            0x39d1	                            cmp ecx, edx	      3936	mbyte.c	FUNCTION_73	IF_1
0x4002be7	      0xba00000000	                              mov edx, 0	      3936	mbyte.c	FUNCTION_73	IF_1
0x4002bec	           0xf45c2	                         cmovne eax, edx	      3936	mbyte.c	FUNCTION_73	IF_1
0x4002bef	              0xc3	                                     ret	      3936	mbyte.c	FUNCTION_73	IF_1
0x4002bf0	    0x8b0500000000	            mov eax, dword [0x04002bf6] 	      3954	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x4002bf6	            0x85c0	                           test eax, eax	      3954	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x4002bf8	            0x741f	                            je 0x4002c19	      3954	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x4002bfa	            0x31c0	                            xor eax, eax	      3936	mbyte.c	FUNCTION_73	IF_1
0x4002bfc	        0x807e0100	                   cmp byte [rsi + 1], 0	      3954	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x4002c00	            0x7417	                            je 0x4002c19	      3954	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x4002c02	    0x80b900000000	                       cmp byte [rcx], 1	      3954	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x4002c09	            0x740e	                            je 0x4002c19	      3954	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x4002c0b	      0xe800000000	                          call 0x4002c10	      3958	mbyte.c	FUNCTION_73	CALL_2
0x4002c10	            0x89c2	                            mov edx, eax	      3958	mbyte.c	FUNCTION_73	CALL_2
0x4002c12	      0xb801000000	                              mov eax, 1	      3958	mbyte.c	FUNCTION_73	CALL_2
0x4002c17	            0x29d0	                            sub eax, edx	      3958	mbyte.c	FUNCTION_73	CALL_2
0x4002c19	            0xf3c3	                                     ret	      3959	mbyte.c	FUNCTION_73
0x4002c1b	            0x31c0	                            xor eax, eax	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4002c1d	      0xe971ffffff	                           jmp 0x4002b93	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4002c22	          0x4531c0	                            xor r8d, r8d	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4002c25	            0xebb2	                           jmp 0x4002bd9	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
preedit_get_status	DO,0:IF,0:CALL,0:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	2
0x4004280	    0x8b0500000000	            mov eax, dword [0x04004286] 	      5886	mbyte.c	FUNCTION_124
0x4004286	              0xc3	                                     ret	      5886	mbyte.c	FUNCTION_124
init_preedit_start_col	DO,0:IF,2:CALL,2:FOR,0:functions,0:ELSE,1:WHILE,0:SWITCH,0	22
0x4000800	        0x4883ec08	                              sub rsp, 8	      4834	mbyte.c	FUNCTION_97
0x4000804	    0xf60500000000	               test byte [0x0400080b], 8	      4835	mbyte.c	FUNCTION_97	IF_1
0x400080b	            0x7543	                           jne 0x4000850	      4835	mbyte.c	FUNCTION_97	IF_1
0x400080d	    0x488b3d000000	            mov rdi, qword [0x04000814] 	      4837	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x4000814	          0x4885ff	                           test rdi, rdi	      4837	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x4000817	            0x741a	                            je 0x4000833	      4837	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x4000819	      0x48837f0800	                  cmp qword [rdi + 8], 0	      4837	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x400081e	            0x7413	                            je 0x4000833	      4837	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x4000820	        0x488d7738	                   lea rsi, [rdi + 0x38]	      4838	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x4000824	          0x4531c0	                            xor r8d, r8d	      4838	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x4000827	            0x31c9	                            xor ecx, ecx	      4838	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x4000829	      0xba00000000	                              mov edx, 0	      4838	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x400082e	      0xe800000000	                          call 0x4000833	      4838	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x4000833	    0x488b05000000	            mov rax, qword [0x0400083a] 	      4840	mbyte.c	FUNCTION_97
0x400083a	    0x8b80c8000000	            mov eax, dword [rax + 0xc8] 	      4840	mbyte.c	FUNCTION_97
0x4000840	    0x890500000000	            mov dword [0x04000846], eax 	      4840	mbyte.c	FUNCTION_97
0x4000846	        0x4883c408	                              add rsp, 8	      4841	mbyte.c	FUNCTION_97
0x400084a	              0xc3	                                     ret	      4841	mbyte.c	FUNCTION_97
0x400084b	       0xf1f440000	                   nop dword [rax + rax]	      4841	mbyte.c	FUNCTION_97
0x4000850	      0xe800000000	                          call 0x4000855	      4836	mbyte.c	FUNCTION_97	CALL_1
0x4000855	    0x890500000000	            mov dword [0x0400085b], eax 	      4836	mbyte.c	FUNCTION_97	CALL_1
0x400085b	            0xebd6	                           jmp 0x4000833	      4836	mbyte.c	FUNCTION_97	CALL_1
mb_init	DO,0:IF,28:CALL,32:FOR,2:functions,0:ELSE,19:WHILE,0:SWITCH,0	280
0x4004d40	            0x4155	                                push r13	       516	mbyte.c	FUNCTION_4
0x4004d42	            0x4154	                                push r12	       516	mbyte.c	FUNCTION_4
0x4004d44	              0x55	                                push rbp	       516	mbyte.c	FUNCTION_4
0x4004d45	              0x53	                                push rbx	       516	mbyte.c	FUNCTION_4
0x4004d46	        0x4883ec48	                           sub rsp, 0x48	       516	mbyte.c	FUNCTION_4
0x4004d4a	    0x488b2d000000	            mov rbp, qword [0x04004d51] 	       528	mbyte.c	FUNCTION_4	IF_1
0x4004d51	    0x64488b042528	                mov rax, qword fs:[0x28]	       516	mbyte.c	FUNCTION_4
0x4004d5a	      0x4889442438	             mov qword [rsp + 0x38], rax	       516	mbyte.c	FUNCTION_4
0x4004d5f	            0x31c0	                            xor eax, eax	       516	mbyte.c	FUNCTION_4
0x4004d61	          0x4885ed	                           test rbp, rbp	       528	mbyte.c	FUNCTION_4	IF_1
0x4004d64	     0xf841b050000	                            je 0x4005285	       528	mbyte.c	FUNCTION_4	IF_1
0x4004d6a	      0xbf00000000	                              mov edi, 0	       569	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_7
0x4004d6f	      0xb905000000	                              mov ecx, 5	       569	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_7
0x4004d74	          0x4889ee	                            mov rsi, rbp	       569	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_7
0x4004d77	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       569	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_7
0x4004d79	     0xf84d7010000	                            je 0x4004f56	       569	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_7
0x4004d7f	      0xbf00000000	                              mov edi, 0	       570	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_8
0x4004d84	      0xb909000000	                              mov ecx, 9	       570	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_8
0x4004d89	          0x4889ee	                            mov rsi, rbp	       570	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_8
0x4004d8c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       570	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_8
0x4004d8e	     0xf84c2010000	                            je 0x4004f56	       570	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_8
0x4004d94	      0xbf00000000	                              mov edi, 0	       576	mbyte.c	FUNCTION_4	ELSE_5	IF_8	CALL_9
0x4004d99	      0xb906000000	                              mov ecx, 6	       576	mbyte.c	FUNCTION_4	ELSE_5	IF_8	CALL_9
0x4004d9e	          0x4889ee	                            mov rsi, rbp	       576	mbyte.c	FUNCTION_4	ELSE_5	IF_8	CALL_9
0x4004da1	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       576	mbyte.c	FUNCTION_4	ELSE_5	IF_8	CALL_9
0x4004da3	     0xf841b030000	                            je 0x40050c4	       576	mbyte.c	FUNCTION_4	ELSE_5	IF_8	CALL_9
0x4004da9	    0x41bc00000000	                             mov r12d, 0	       576	mbyte.c	FUNCTION_4	ELSE_5	IF_8	CALL_9
0x4004daf	    0x41bd00000000	                             mov r13d, 0	       576	mbyte.c	FUNCTION_4	ELSE_5	IF_8	CALL_9
0x4004db5	            0x31db	                            xor ebx, ebx	       576	mbyte.c	FUNCTION_4	ELSE_5	IF_8	CALL_9
0x4004db7	          0x4c89e6	                            mov rsi, r12	       576	mbyte.c	FUNCTION_4	ELSE_5	IF_8	CALL_9
0x4004dba	            0xeb18	                           jmp 0x4004dd4	       576	mbyte.c	FUNCTION_4	ELSE_5	IF_8	CALL_9
0x4004dbc	         0xf1f4000	                         nop dword [rax]	       576	mbyte.c	FUNCTION_4	ELSE_5	IF_8	CALL_9
0x4004dc0	          0x83c301	                              add ebx, 1	       455	mbyte.c	FUNCTION_2	FOR_1
0x4004dc3	          0x83fb3c	                           cmp ebx, 0x3c	       455	mbyte.c	FUNCTION_2	FOR_1
0x4004dc6	     0xf84c7020000	                            je 0x4005093	       455	mbyte.c	FUNCTION_2	FOR_1
0x4004dcc	        0x498b7500	                    mov rsi, qword [r13]	       455	mbyte.c	FUNCTION_2	FOR_1
0x4004dd0	        0x4983c510	                           add r13, 0x10	       455	mbyte.c	FUNCTION_2	FOR_1
0x4004dd4	          0x4889ef	                            mov rdi, rbp	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x4004dd7	      0xe800000000	                          call 0x4004ddc	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x4004ddc	            0x85c0	                           test eax, eax	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x4004dde	            0x75e0	                           jne 0x4004dc0	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x4004de0	          0x4863db	                         movsxd rbx, ebx	       590	mbyte.c	FUNCTION_4	ELSE_6	IF_10
0x4004de3	        0x48c1e304	                              shl rbx, 4	       590	mbyte.c	FUNCTION_4	ELSE_6	IF_10
0x4004de7	    0x488d83000000	                          lea rax, [rbx]	       590	mbyte.c	FUNCTION_4	ELSE_6	IF_10
0x4004dee	          0x8b5008	                mov edx, dword [rax + 8]	       590	mbyte.c	FUNCTION_4	ELSE_6	IF_10
0x4004df1	          0xf6c204	                              test dl, 4	       591	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11
0x4004df4	     0xf8453010000	                            je 0x4004f4d	       591	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11
0x4004dfa	    0xf7c240010000	                         test edx, 0x140	       595	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	IF_12
0x4004e00	    0xc70500000000	               mov dword [0x04004e0a], 1	       594	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11
0x4004e0a	     0xf8505040000	                           jne 0x4005215	       595	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	IF_12
0x4004e10	    0x81e280000000	                           and edx, 0x80	       597	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_7	IF_13
0x4004e16	     0xf8455040000	                            je 0x4005271	       597	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_7	IF_13
0x4004e1c	    0xc70500000000	               mov dword [0x04004e26], 4	       598	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_7	IF_13
0x4004e26	      0xb801000000	                              mov eax, 1	       598	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_7	IF_13
0x4004e2b	            0x89c2	                            mov edx, eax	       598	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_7	IF_13
0x4004e2d	            0x85d2	                           test edx, edx	       637	mbyte.c	FUNCTION_4	CALL_16
0x4004e2f	    0xc70500000000	               mov dword [0x04004e39], 0	       627	mbyte.c	FUNCTION_4
0x4004e39	    0x890500000000	            mov dword [0x04004e3f], eax 	       628	mbyte.c	FUNCTION_4
0x4004e3f	     0xf847a040000	                            je 0x40052bf	       637	mbyte.c	FUNCTION_4	CALL_16
0x4004e45	    0xc70500000000	               mov dword [0x04004e4f], 1	       636	mbyte.c	FUNCTION_4	CALL_15
0x4004e4f	    0x48c705000000	               mov qword [0x04004e5a], 0	       644	mbyte.c	FUNCTION_4	IF_17
0x4004e5a	    0x48c705000000	               mov qword [0x04004e65], 0	       645	mbyte.c	FUNCTION_4	IF_17
0x4004e65	    0x48c705000000	               mov qword [0x04004e70], 0	       646	mbyte.c	FUNCTION_4	IF_17
0x4004e70	    0x48c705000000	               mov qword [0x04004e7b], 0	       647	mbyte.c	FUNCTION_4	IF_17
0x4004e7b	    0x48c705000000	               mov qword [0x04004e86], 0	       648	mbyte.c	FUNCTION_4	IF_17
0x4004e86	    0x48c705000000	               mov qword [0x04004e91], 0	       649	mbyte.c	FUNCTION_4	IF_17
0x4004e91	    0x48c705000000	               mov qword [0x04004e9c], 0	       650	mbyte.c	FUNCTION_4	IF_17
0x4004e9c	    0x48c705000000	               mov qword [0x04004ea7], 0	       651	mbyte.c	FUNCTION_4	IF_17
0x4004ea7	    0x48c705000000	               mov qword [0x04004eb2], 0	       652	mbyte.c	FUNCTION_4	IF_17
0x4004eb2	    0x48c705000000	               mov qword [0x04004ebd], 0	       653	mbyte.c	FUNCTION_4	IF_17
0x4004ebd	    0x448b05000000	            mov r8d, dword [0x04004ec4] 	       689	mbyte.c	FUNCTION_4	IF_19
0x4004ec4	    0xc70424000000	                      mov dword [rsp], 0	       688	mbyte.c	FUNCTION_4
0x4004ecb	          0x4989e4	                            mov r12, rsp	       688	mbyte.c	FUNCTION_4
0x4004ece	          0x4585c0	                           test r8d, r8d	       689	mbyte.c	FUNCTION_4	IF_19
0x4004ed1	     0xf8566010000	                           jne 0x400503d	       689	mbyte.c	FUNCTION_4	IF_19
0x4004ed7	            0x31db	                            xor ebx, ebx	       636	mbyte.c	FUNCTION_4	CALL_15
0x4004ed9	            0xeb24	                           jmp 0x4004eff	       636	mbyte.c	FUNCTION_4	CALL_15
0x4004edb	       0xf1f440000	                   nop dword [rax + rax]	       636	mbyte.c	FUNCTION_4	CALL_15
0x4004ee0	     0xfb6ab000000	                   movzx ebp, byte [rbx]	       706	mbyte.c	FUNCTION_4	FOR_2	IF_21
0x4004ee7	    0x4088ab000000	                     mov byte [rbx], bpl	       770	mbyte.c	FUNCTION_4	FOR_2
0x4004eee	        0x4883c301	                              add rbx, 1	       770	mbyte.c	FUNCTION_4	FOR_2
0x4004ef2	    0x4881fb000100	                          cmp rbx, 0x100	       701	mbyte.c	FUNCTION_4	FOR_2
0x4004ef9	     0xf84b9000000	                            je 0x4004fb8	       701	mbyte.c	FUNCTION_4	FOR_2
0x4004eff	    0x8b3d00000000	            mov edi, dword [0x04004f05] 	       705	mbyte.c	FUNCTION_4	FOR_2	IF_21
0x4004f05	            0x85ff	                           test edi, edi	       705	mbyte.c	FUNCTION_4	FOR_2	IF_21
0x4004f07	            0x75d7	                           jne 0x4004ee0	       705	mbyte.c	FUNCTION_4	FOR_2	IF_21
0x4004f09	    0x8b3500000000	            mov esi, dword [0x04004f0f] 	       707	mbyte.c	FUNCTION_4	FOR_2	ELSE_14	IF_22
0x4004f0f	      0xbd01000000	                              mov ebp, 1	       707	mbyte.c	FUNCTION_4	FOR_2	ELSE_14	IF_22
0x4004f14	            0x85f6	                           test esi, esi	       707	mbyte.c	FUNCTION_4	FOR_2	ELSE_14	IF_22
0x4004f16	            0x74cf	                            je 0x4004ee7	       707	mbyte.c	FUNCTION_4	FOR_2	ELSE_14	IF_22
0x4004f18	          0x4885db	                           test rbx, rbx	       728	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	IF_23
0x4004f1b	            0x747d	                            je 0x4004f9a	       728	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	IF_23
0x4004f1d	          0x8b0c24	                    mov ecx, dword [rsp]	       735	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24
0x4004f20	        0x885c2420	               mov byte [rsp + 0x20], bl	       732	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16
0x4004f24	      0xc644242100	                mov byte [rsp + 0x21], 0	       733	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16
0x4004f29	            0x85c9	                           test ecx, ecx	       735	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24
0x4004f2b	            0x744b	                            je 0x4004f78	       735	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24
0x4004f2d	      0x488d742420	                   lea rsi, [rsp + 0x20]	      6717	mbyte.c	FUNCTION_144	CALL_1
0x4004f32	            0x31c9	                            xor ecx, ecx	      6717	mbyte.c	FUNCTION_144	CALL_1
0x4004f34	            0x31d2	                            xor edx, edx	      6717	mbyte.c	FUNCTION_144	CALL_1
0x4004f36	          0x4c89e7	                            mov rdi, r12	      6717	mbyte.c	FUNCTION_144	CALL_1
0x4004f39	      0xe800000000	                          call 0x4004f3e	      6717	mbyte.c	FUNCTION_144	CALL_1
0x4004f3e	          0x4885c0	                           test rax, rax	       742	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	IF_25
0x4004f41	            0x7465	                            je 0x4004fa8	       742	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	IF_25
0x4004f43	          0x4889c7	                            mov rdi, rax	       744	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	IF_25	CALL_23
0x4004f46	      0xe800000000	                          call 0x4004f4b	       744	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	IF_25	CALL_23
0x4004f4b	            0xeb9a	                           jmp 0x4004ee7	       744	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	IF_25	CALL_23
0x4004f4d	          0x83e202	                              and edx, 2	       602	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_8	ELSE_9	IF_14
0x4004f50	     0xf85d3020000	                           jne 0x4005229	       602	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_8	ELSE_9	IF_14
0x4004f56	    0xc70500000000	               mov dword [0x04004f60], 0	       573	mbyte.c	FUNCTION_4	ELSE_4	IF_7
0x4004f60	    0xc70500000000	               mov dword [0x04004f6a], 0	       574	mbyte.c	FUNCTION_4	ELSE_4	IF_7
0x4004f6a	            0x31c0	                            xor eax, eax	       574	mbyte.c	FUNCTION_4	ELSE_4	IF_7
0x4004f6c	      0xe9bafeffff	                           jmp 0x4004e2b	       574	mbyte.c	FUNCTION_4	ELSE_4	IF_7
0x4004f71	     0xf1f80000000	                         nop dword [rax]	       574	mbyte.c	FUNCTION_4	ELSE_4	IF_7
0x4004f78	            0x31f6	                            xor esi, esi	       759	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18
0x4004f7a	            0x31ff	                            xor edi, edi	       759	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18
0x4004f7c	      0xe800000000	                          call 0x4004f81	       759	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18
0x4004f81	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       760	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	IF_26
0x4004f86	      0xbe01000000	                              mov esi, 1	       760	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	IF_26
0x4004f8b	    0x890500000000	            mov dword [0x04004f91], eax 	       759	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18
0x4004f91	      0xe800000000	                          call 0x4004f96	       760	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	IF_26
0x4004f96	            0x85c0	                           test eax, eax	       760	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	IF_26
0x4004f98	            0x7e0e	                           jle 0x4004fa8	       760	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	IF_26
0x4004f9a	      0xbd01000000	                              mov ebp, 1	       760	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	IF_26
0x4004f9f	      0xe943ffffff	                           jmp 0x4004ee7	       760	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	IF_26
0x4004fa4	         0xf1f4000	                         nop dword [rax]	       760	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	IF_26
0x4004fa8	      0xbd02000000	                              mov ebp, 2	       760	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	IF_26
0x4004fad	      0xe935ffffff	                           jmp 0x4004ee7	       760	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	IF_26
0x4004fb2	    0x660f1f440000	                    nop word [rax + rax]	       760	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	IF_26
0x4004fb8	            0x31c9	                            xor ecx, ecx	      6531	mbyte.c	FUNCTION_140	CALL_1
0x4004fba	      0xba01000000	                              mov edx, 1	      6531	mbyte.c	FUNCTION_140	CALL_1
0x4004fbf	            0x31f6	                            xor esi, esi	      6531	mbyte.c	FUNCTION_140	CALL_1
0x4004fc1	    0x41b801000000	                              mov r8d, 1	      6531	mbyte.c	FUNCTION_140	CALL_1
0x4004fc7	          0x4c89e7	                            mov rdi, r12	      6531	mbyte.c	FUNCTION_140	CALL_1
0x4004fca	      0xe800000000	                          call 0x4004fcf	      6531	mbyte.c	FUNCTION_140	CALL_1
0x4004fcf	      0xe800000000	                          call 0x4004fd4	       778	mbyte.c	FUNCTION_4	CALL_25
0x4004fd4	            0x31ff	                            xor edi, edi	       781	mbyte.c	FUNCTION_4	CALL_26
0x4004fd6	      0xe800000000	                          call 0x4004fdb	       781	mbyte.c	FUNCTION_4	CALL_26
0x4004fdb	    0x8b1500000000	            mov edx, dword [0x04004fe1] 	       784	mbyte.c	FUNCTION_4	IF_27	CALL_27
0x4004fe1	            0x85d2	                           test edx, edx	       784	mbyte.c	FUNCTION_4	IF_27	CALL_27
0x4004fe3	     0xf85b1000000	                           jne 0x400509a	       784	mbyte.c	FUNCTION_4	IF_27	CALL_27
0x4004fe9	    0x488b35000000	            mov rsi, qword [0x04004ff0] 	       791	mbyte.c	FUNCTION_4	CALL_29
0x4004ff0	      0xbf00000000	                              mov edi, 0	       791	mbyte.c	FUNCTION_4	CALL_29
0x4004ff5	            0x31ed	                            xor ebp, ebp	       811	mbyte.c	FUNCTION_4
0x4004ff7	      0xe800000000	                          call 0x4004ffc	       791	mbyte.c	FUNCTION_4	CALL_29
0x4004ffc	    0x4c8b05000000	              mov r8, qword [0x04005003]	       804	mbyte.c	FUNCTION_4	CALL_31
0x4005003	            0x31c9	                            xor ecx, ecx	       804	mbyte.c	FUNCTION_4	CALL_31
0x4005005	      0xba00000000	                              mov edx, 0	       804	mbyte.c	FUNCTION_4	CALL_31
0x400500a	            0x31f6	                            xor esi, esi	       804	mbyte.c	FUNCTION_4	CALL_31
0x400500c	      0xbf21000000	                           mov edi, 0x21	       804	mbyte.c	FUNCTION_4	CALL_31
0x4005011	      0xe800000000	                          call 0x4005016	       804	mbyte.c	FUNCTION_4	CALL_31
0x4005016	      0xe800000000	                          call 0x400501b	       808	mbyte.c	FUNCTION_4	CALL_32
0x400501b	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       812	mbyte.c	FUNCTION_4
0x4005020	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       812	mbyte.c	FUNCTION_4
0x4005029	          0x4889e8	                            mov rax, rbp	       812	mbyte.c	FUNCTION_4
0x400502c	     0xf85a5020000	                           jne 0x40052d7	       812	mbyte.c	FUNCTION_4
0x4005032	        0x4883c448	                           add rsp, 0x48	       812	mbyte.c	FUNCTION_4
0x4005036	              0x5b	                                 pop rbx	       812	mbyte.c	FUNCTION_4
0x4005037	              0x5d	                                 pop rbp	       812	mbyte.c	FUNCTION_4
0x4005038	            0x415c	                                 pop r12	       812	mbyte.c	FUNCTION_4
0x400503a	            0x415d	                                 pop r13	       812	mbyte.c	FUNCTION_4
0x400503c	              0xc3	                                     ret	       812	mbyte.c	FUNCTION_4
0x400503d	      0xe800000000	                          call 0x4005042	       691	mbyte.c	FUNCTION_4	IF_19	CALL_17
0x4005042	          0x4885c0	                           test rax, rax	       692	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_18
0x4005045	          0x4889c3	                            mov rbx, rax	       691	mbyte.c	FUNCTION_4	IF_19	CALL_17
0x4005048	    0x488b2d000000	            mov rbp, qword [0x0400504f] 	       691	mbyte.c	FUNCTION_4	IF_19	CALL_17
0x400504f	            0x740f	                            je 0x4005060	       692	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_18
0x4005051	          0x4889ee	                            mov rsi, rbp	       692	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_18
0x4005054	          0x4889c7	                            mov rdi, rax	       692	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_18
0x4005057	      0xe800000000	                          call 0x400505c	       692	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_18
0x400505c	            0x85c0	                           test eax, eax	       692	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_18
0x400505e	            0x7426	                            je 0x4005086	       692	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_18
0x4005060	    0x41b801000000	                              mov r8d, 1	      6531	mbyte.c	FUNCTION_140	CALL_1
0x4005066	      0xb900000000	                              mov ecx, 0	      6531	mbyte.c	FUNCTION_140	CALL_1
0x400506b	      0xba01000000	                              mov edx, 1	      6531	mbyte.c	FUNCTION_140	CALL_1
0x4005070	          0x4889ee	                            mov rsi, rbp	      6531	mbyte.c	FUNCTION_140	CALL_1
0x4005073	          0x4889e7	                            mov rdi, rsp	      6531	mbyte.c	FUNCTION_140	CALL_1
0x4005076	          0x4989e4	                            mov r12, rsp	      6531	mbyte.c	FUNCTION_140	CALL_1
0x4005079	      0xe800000000	                          call 0x400507e	      6531	mbyte.c	FUNCTION_140	CALL_1
0x400507e	    0xc74424100100	               mov dword [rsp + 0x10], 1	       695	mbyte.c	FUNCTION_4	IF_19	IF_20
0x4005086	          0x4889df	                            mov rdi, rbx	       697	mbyte.c	FUNCTION_4	IF_19	CALL_20
0x4005089	      0xe800000000	                          call 0x400508e	       697	mbyte.c	FUNCTION_4	IF_19	CALL_20
0x400508e	      0xe944feffff	                           jmp 0x4004ed7	       697	mbyte.c	FUNCTION_4	IF_19	CALL_20
0x4005093	      0xbd00000000	                              mov ebp, 0	       615	mbyte.c	FUNCTION_4	ELSE_11
0x4005098	            0xeb81	                           jmp 0x400501b	       615	mbyte.c	FUNCTION_4	ELSE_11
0x400509a	      0xbf00000000	                              mov edi, 0	       784	mbyte.c	FUNCTION_4	IF_27	CALL_27
0x400509f	      0xe800000000	                          call 0x40050a4	       784	mbyte.c	FUNCTION_4	IF_27	CALL_27
0x40050a4	            0x85c0	                           test eax, eax	       784	mbyte.c	FUNCTION_4	IF_27	CALL_27
0x40050a6	     0xf84a4010000	                            je 0x4005250	       784	mbyte.c	FUNCTION_4	IF_27	CALL_27
0x40050ac	    0x8b0500000000	            mov eax, dword [0x040050b2] 	       791	mbyte.c	FUNCTION_4	CALL_29
0x40050b2	            0x85c0	                           test eax, eax	       791	mbyte.c	FUNCTION_4	CALL_29
0x40050b4	     0xf842fffffff	                            je 0x4004fe9	       791	mbyte.c	FUNCTION_4	CALL_29
0x40050ba	      0xbe00000000	                              mov esi, 0	       791	mbyte.c	FUNCTION_4	CALL_29
0x40050bf	      0xe92cffffff	                           jmp 0x4004ff0	       791	mbyte.c	FUNCTION_4	CALL_29
0x40050c4	      0xb801000000	                              mov eax, 1	       585	mbyte.c	FUNCTION_4	ELSE_5	IF_8
0x40050c9	    0x41bc00000000	                             mov r12d, 0	       585	mbyte.c	FUNCTION_4	ELSE_5	IF_8
0x40050cf	    0xc70500000000	               mov dword [0x040050d9], 0	       624	mbyte.c	FUNCTION_4	ELSE_11	IF_15
0x40050d9	    0xc70500000000	               mov dword [0x040050e3], 0	       625	mbyte.c	FUNCTION_4	ELSE_11	IF_15
0x40050e3	      0xb907000000	                              mov ecx, 7	       636	mbyte.c	FUNCTION_4	CALL_15
0x40050e8	    0x890500000000	            mov dword [0x040050ee], eax 	       627	mbyte.c	FUNCTION_4
0x40050ee	    0xc70500000000	               mov dword [0x040050f8], 1	       628	mbyte.c	FUNCTION_4
0x40050f8	          0x4889ee	                            mov rsi, rbp	       636	mbyte.c	FUNCTION_4	CALL_15
0x40050fb	          0x4c89e7	                            mov rdi, r12	       636	mbyte.c	FUNCTION_4	CALL_15
0x40050fe	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       636	mbyte.c	FUNCTION_4	CALL_15
0x4005100	     0xf8492000000	                            je 0x4005198	       636	mbyte.c	FUNCTION_4	CALL_15
0x4005106	      0xbf00000000	                              mov edi, 0	       637	mbyte.c	FUNCTION_4	CALL_16
0x400510b	      0xb90c000000	                            mov ecx, 0xc	       637	mbyte.c	FUNCTION_4	CALL_16
0x4005110	          0x4889ee	                            mov rsi, rbp	       637	mbyte.c	FUNCTION_4	CALL_16
0x4005113	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       636	mbyte.c	FUNCTION_4	CALL_15
0x4005115	           0xf94c2	                                 sete dl	       636	mbyte.c	FUNCTION_4	CALL_15
0x4005118	            0x85c0	                           test eax, eax	       655	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x400511a	           0xfb6d2	                           movzx edx, dl	       636	mbyte.c	FUNCTION_4	CALL_15
0x400511d	    0x891500000000	            mov dword [0x04005123], edx 	       636	mbyte.c	FUNCTION_4	CALL_15
0x4005123	            0x757d	                           jne 0x40051a2	       655	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x4005125	    0x48c705000000	               mov qword [0x04005130], 0	       670	mbyte.c	FUNCTION_4	ELSE_13
0x4005130	    0x48c705000000	               mov qword [0x0400513b], 0	       671	mbyte.c	FUNCTION_4	ELSE_13
0x400513b	    0x48c705000000	               mov qword [0x04005146], 0	       672	mbyte.c	FUNCTION_4	ELSE_13
0x4005146	    0x48c705000000	               mov qword [0x04005151], 0	       673	mbyte.c	FUNCTION_4	ELSE_13
0x4005151	    0x48c705000000	               mov qword [0x0400515c], 0	       674	mbyte.c	FUNCTION_4	ELSE_13
0x400515c	    0x48c705000000	               mov qword [0x04005167], 0	       675	mbyte.c	FUNCTION_4	ELSE_13
0x4005167	    0x48c705000000	               mov qword [0x04005172], 0	       676	mbyte.c	FUNCTION_4	ELSE_13
0x4005172	    0x48c705000000	               mov qword [0x0400517d], 0	       677	mbyte.c	FUNCTION_4	ELSE_13
0x400517d	    0x48c705000000	               mov qword [0x04005188], 0	       678	mbyte.c	FUNCTION_4	ELSE_13
0x4005188	    0x48c705000000	               mov qword [0x04005193], 0	       679	mbyte.c	FUNCTION_4	ELSE_13
0x4005193	      0xe925fdffff	                           jmp 0x4004ebd	       679	mbyte.c	FUNCTION_4	ELSE_13
0x4005198	    0xc70500000000	               mov dword [0x040051a2], 1	       636	mbyte.c	FUNCTION_4	CALL_15
0x40051a2	    0x48c705000000	               mov qword [0x040051ad], 0	       657	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x40051ad	    0x48c705000000	               mov qword [0x040051b8], 0	       658	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x40051b8	    0x48c705000000	               mov qword [0x040051c3], 0	       659	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x40051c3	    0x48c705000000	               mov qword [0x040051ce], 0	       660	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x40051ce	    0x48c705000000	               mov qword [0x040051d9], 0	       661	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x40051d9	    0x48c705000000	               mov qword [0x040051e4], 0	       662	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x40051e4	    0x48c705000000	               mov qword [0x040051ef], 0	       663	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x40051ef	    0x48c705000000	               mov qword [0x040051fa], 0	       664	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x40051fa	    0x48c705000000	               mov qword [0x04005205], 0	       665	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x4005205	    0x48c705000000	               mov qword [0x04005210], 0	       666	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x4005210	      0xe9a8fcffff	                           jmp 0x4004ebd	       666	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x4005215	    0xc70500000000	               mov dword [0x0400521f], 2	       596	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	IF_12
0x400521f	      0xb801000000	                              mov eax, 1	       596	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	IF_12
0x4005224	      0xe902fcffff	                           jmp 0x4004e2b	       596	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	IF_12
0x4005229	          0x8b400c	              mov eax, dword [rax + 0xc]	       605	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_8	ELSE_9	IF_14
0x400522c	            0x85c0	                           test eax, eax	       617	mbyte.c	FUNCTION_4	ELSE_11	IF_15
0x400522e	     0xf859bfeffff	                           jne 0x40050cf	       617	mbyte.c	FUNCTION_4	ELSE_11	IF_15
0x4005234	    0x8b1500000000	            mov edx, dword [0x0400523a] 	       617	mbyte.c	FUNCTION_4	ELSE_11	IF_15
0x400523a	            0x31c0	                            xor eax, eax	       617	mbyte.c	FUNCTION_4	ELSE_11	IF_15
0x400523c	            0x85d2	                           test edx, edx	       617	mbyte.c	FUNCTION_4	ELSE_11	IF_15
0x400523e	           0xf95c0	                                setne al	       617	mbyte.c	FUNCTION_4	ELSE_11	IF_15
0x4005241	      0xe9e7fbffff	                           jmp 0x4004e2d	       617	mbyte.c	FUNCTION_4	ELSE_11	IF_15
0x4005246	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       617	mbyte.c	FUNCTION_4	ELSE_11	IF_15
0x4005250	          0x4531c0	                            xor r8d, r8d	       785	mbyte.c	FUNCTION_4	IF_27	CALL_28
0x4005253	      0xb901000000	                              mov ecx, 1	       785	mbyte.c	FUNCTION_4	IF_27	CALL_28
0x4005258	      0xba00000000	                              mov edx, 0	       785	mbyte.c	FUNCTION_4	IF_27	CALL_28
0x400525d	      0xbeffffffff	                     mov esi, 0xffffffff	       785	mbyte.c	FUNCTION_4	IF_27	CALL_28
0x4005262	      0xbf00000000	                              mov edi, 0	       785	mbyte.c	FUNCTION_4	IF_27	CALL_28
0x4005267	      0xe800000000	                          call 0x400526c	       785	mbyte.c	FUNCTION_4	IF_27	CALL_28
0x400526c	      0xe93bfeffff	                           jmp 0x40050ac	       785	mbyte.c	FUNCTION_4	IF_27	CALL_28
0x4005271	    0xc70500000000	               mov dword [0x0400527b], 0	       600	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_8
0x400527b	      0xb801000000	                              mov eax, 1	       600	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_8
0x4005280	      0xe9a6fbffff	                           jmp 0x4004e2b	       600	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_8
0x4005285	      0xb800000000	                              mov eax, 0	       600	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_8
0x400528a	      0xba00000000	                              mov edx, 0	       600	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_8
0x400528f	              0x90	                                     nop	       600	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_8
0x4005290	          0xc60001	                       mov byte [rax], 1	       532	mbyte.c	FUNCTION_4	IF_1	FOR_1
0x4005293	        0x4883c001	                              add rax, 1	       532	mbyte.c	FUNCTION_4	IF_1	FOR_1
0x4005297	          0x4839c2	                            cmp rdx, rax	       531	mbyte.c	FUNCTION_4	IF_1	FOR_1
0x400529a	            0x75f4	                           jne 0x4005290	       531	mbyte.c	FUNCTION_4	IF_1	FOR_1
0x400529c	    0xc70500000000	               mov dword [0x040052a6], 0	       533	mbyte.c	FUNCTION_4	IF_1
0x40052a6	    0xc70500000000	               mov dword [0x040052b0], 1	       534	mbyte.c	FUNCTION_4	IF_1
0x40052b0	    0xc70500000000	               mov dword [0x040052ba], 0	       535	mbyte.c	FUNCTION_4	IF_1
0x40052ba	      0xe95cfdffff	                           jmp 0x400501b	       536	mbyte.c	FUNCTION_4	IF_1
0x40052bf	      0xbf00000000	                              mov edi, 0	       636	mbyte.c	FUNCTION_4	CALL_15
0x40052c4	      0xb907000000	                              mov ecx, 7	       636	mbyte.c	FUNCTION_4	CALL_15
0x40052c9	          0x4889ee	                            mov rsi, rbp	       636	mbyte.c	FUNCTION_4	CALL_15
0x40052cc	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       636	mbyte.c	FUNCTION_4	CALL_15
0x40052ce	            0x740c	                            je 0x40052dc	       636	mbyte.c	FUNCTION_4	CALL_15
0x40052d0	            0x31c0	                            xor eax, eax	       636	mbyte.c	FUNCTION_4	CALL_15
0x40052d2	      0xe92ffeffff	                           jmp 0x4005106	       636	mbyte.c	FUNCTION_4	CALL_15
0x40052d7	      0xe800000000	                          call 0x40052dc	       812	mbyte.c	FUNCTION_4
0x40052dc	    0xc70500000000	               mov dword [0x040052e6], 1	       636	mbyte.c	FUNCTION_4	CALL_15
0x40052e6	      0xe93afeffff	                           jmp 0x4005125	       636	mbyte.c	FUNCTION_4	CALL_15
im_preedit_changed_cb	DO,0:IF,12:CALL,17:FOR,1:functions,0:ELSE,5:WHILE,0:SWITCH,0	300
0x40056d0	            0x4156	                                push r14	      5335	mbyte.c	FUNCTION_113
0x40056d2	            0x4155	                                push r13	      5335	mbyte.c	FUNCTION_113
0x40056d4	            0x4154	                                push r12	      5335	mbyte.c	FUNCTION_113
0x40056d6	              0x55	                                push rbp	      5335	mbyte.c	FUNCTION_113
0x40056d7	              0x53	                                push rbx	      5335	mbyte.c	FUNCTION_113
0x40056d8	        0x4883ec50	                           sub rsp, 0x50	      5335	mbyte.c	FUNCTION_113
0x40056dc	    0x64488b042528	                mov rax, qword fs:[0x28]	      5335	mbyte.c	FUNCTION_113
0x40056e5	      0x4889442448	             mov qword [rsp + 0x48], rax	      5335	mbyte.c	FUNCTION_113
0x40056ea	            0x31c0	                            xor eax, eax	      5335	mbyte.c	FUNCTION_113
0x40056ec	    0x48833d000000	               cmp qword [0x040056f4], 0	      5343	mbyte.c	FUNCTION_113	IF_1
0x40056f4	    0x48c744241800	               mov qword [rsp + 0x18], 0	      5336	mbyte.c	FUNCTION_113
0x40056fd	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      5337	mbyte.c	FUNCTION_113
0x4005705	     0xf85e5000000	                           jne 0x40057f0	      5343	mbyte.c	FUNCTION_113	IF_1
0x400570b	      0x488d4c240c	                    lea rcx, [rsp + 0xc]	      5344	mbyte.c	FUNCTION_113	IF_1	CALL_1
0x4005710	      0x488d742418	                   lea rsi, [rsp + 0x18]	      5344	mbyte.c	FUNCTION_113	IF_1	CALL_1
0x4005715	            0x31d2	                            xor edx, edx	      5344	mbyte.c	FUNCTION_113	IF_1	CALL_1
0x4005717	      0xe800000000	                          call 0x400571c	      5344	mbyte.c	FUNCTION_113	IF_1	CALL_1
0x400571c	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5356	mbyte.c	FUNCTION_113	CALL_4
0x4005721	          0x4885c0	                           test rax, rax	      5356	mbyte.c	FUNCTION_113	CALL_4
0x4005724	     0xf84e2000000	                            je 0x400580c	      5356	mbyte.c	FUNCTION_113	CALL_4
0x400572a	    0x48833d000000	               cmp qword [0x04005732], 1	      5358	mbyte.c	FUNCTION_113	IF_2
0x4005732	     0xf84b8010000	                            je 0x40058f0	      5358	mbyte.c	FUNCTION_113	IF_2
0x4005738	    0x813d00000000	     cmp dword [0x04005742], 0x7fffffff 	      5374	mbyte.c	FUNCTION_113	ELSE_3	IF_4
0x4005742	     0xf8468030000	                            je 0x4005ab0	      5374	mbyte.c	FUNCTION_113	ELSE_3	IF_4
0x4005748	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      5381	mbyte.c	FUNCTION_113	ELSE_3	ELSE_4	IF_5
0x400574c	            0x85f6	                           test esi, esi	      5381	mbyte.c	FUNCTION_113	ELSE_3	ELSE_4	IF_5
0x400574e	            0x7509	                           jne 0x4005759	      5381	mbyte.c	FUNCTION_113	ELSE_3	ELSE_4	IF_5
0x4005750	          0x803800	                       cmp byte [rax], 0	      5381	mbyte.c	FUNCTION_113	ELSE_3	ELSE_4	IF_5
0x4005753	     0xf846c030000	                            je 0x4005ac5	      5381	mbyte.c	FUNCTION_113	ELSE_3	ELSE_4	IF_5
0x4005759	      0xe8e2aeffff	              call sym.im_delete_preedit	      5390	mbyte.c	FUNCTION_113	ELSE_3	CALL_8
0x400575e	    0x448b35000000	           mov r14d, dword [0x04005765] 	      5399	mbyte.c	FUNCTION_113	ELSE_3	IF_6
0x4005765	    0x4181feffffff	                    cmp r14d, 0x7fffffff	      5399	mbyte.c	FUNCTION_113	ELSE_3	IF_6
0x400576c	            0x7407	                            je 0x4005775	      5399	mbyte.c	FUNCTION_113	ELSE_3	IF_6
0x400576e	    0x448935000000	           mov dword [0x04005775], r14d 	      5400	mbyte.c	FUNCTION_113	ELSE_3	IF_6
0x4005775	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	      5401	mbyte.c	FUNCTION_113	ELSE_3
0x400577a	         0xfb64500	                   movzx eax, byte [rbp]	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x400577e	            0x84c0	                             test al, al	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x4005780	     0xf84eb030000	                            je 0x4005b71	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x4005786	          0x4989ec	                            mov r12, rbp	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x4005789	          0x4531ed	                          xor r13d, r13d	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x400578c	            0x31db	                            xor ebx, ebx	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x400578e	            0xeb46	                           jmp 0x40057d6	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x4005790	    0x830500000000	               add dword [0x04005797], 1	      5415	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7	IF_8
0x4005797	    0x4181feffffff	                    cmp r14d, 0x7fffffff	      5425	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_10
0x400579e	            0x740e	                            je 0x40057ae	      5425	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_10
0x40057a0	          0x4c89e7	                            mov rdi, r12	      5426	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_12
0x40057a3	      0xe800000000	                          call 0x40057a8	      5426	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_12
0x40057a8	     0x10500000000	             add dword [0x040057ae], eax	      5426	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_12
0x40057ae	      0x410fb60424	                   movzx eax, byte [r12]	      2102	mbyte.c	FUNCTION_46
0x40057b3	        0x4183c501	                             add r13d, 1	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x40057b7	    0x480fbe800000	                   movsx rax, byte [rax]	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x40057bf	          0x4901c4	                            add r12, rax	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x40057c2	      0x410fb60424	                   movzx eax, byte [r12]	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x40057c7	            0x84c0	                             test al, al	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x40057c9	     0xf84d1000000	                            je 0x40058a0	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x40057cf	    0x448b35000000	           mov r14d, dword [0x040057d6] 	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x40057d6	            0x84c0	                             test al, al	      5406	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_11
0x40057d8	            0x784e	                            js 0x4005828	      5406	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_11
0x40057da	      0x443b6c240c	            cmp r13d, dword [rsp + 0xc] 	      5414	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7	IF_8
0x40057df	            0x7caf	                            jl 0x4005790	      5414	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7	IF_8
0x40057e1	    0x830500000000	               add dword [0x040057e8], 1	      5417	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7	ELSE_5
0x40057e8	          0x83c301	                              add ebx, 1	      5423	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	ELSE_5	IF_9
0x40057eb	            0xebaa	                           jmp 0x4005797	      5423	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	ELSE_5	IF_9
0x40057ed	           0xf1f00	                         nop dword [rax]	      5423	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	ELSE_5	IF_9
0x40057f0	      0x488d742418	                   lea rsi, [rsp + 0x18]	      5348	mbyte.c	FUNCTION_113	ELSE_1	CALL_2
0x40057f5	            0x31c9	                            xor ecx, ecx	      5348	mbyte.c	FUNCTION_113	ELSE_1	CALL_2
0x40057f7	            0x31d2	                            xor edx, edx	      5348	mbyte.c	FUNCTION_113	ELSE_1	CALL_2
0x40057f9	      0xe800000000	                          call 0x40057fe	      5348	mbyte.c	FUNCTION_113	ELSE_1	CALL_2
0x40057fe	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5356	mbyte.c	FUNCTION_113	CALL_4
0x4005803	          0x4885c0	                           test rax, rax	      5356	mbyte.c	FUNCTION_113	CALL_4
0x4005806	     0xf851effffff	                           jne 0x400572a	      5356	mbyte.c	FUNCTION_113	CALL_4
0x400580c	      0xba00000000	                              mov edx, 0	      5356	mbyte.c	FUNCTION_113	CALL_4
0x4005811	      0xbe00000000	                              mov esi, 0	      5356	mbyte.c	FUNCTION_113	CALL_4
0x4005816	            0x31ff	                            xor edi, edi	      5356	mbyte.c	FUNCTION_113	CALL_4
0x4005818	      0xe800000000	                          call 0x400581d	      5356	mbyte.c	FUNCTION_113	CALL_4
0x400581d	      0xe99a000000	                           jmp 0x40058bc	      5356	mbyte.c	FUNCTION_113	CALL_4
0x4005822	    0x660f1f440000	                    nop word [rax + rax]	      5356	mbyte.c	FUNCTION_113	CALL_4
0x4005828	          0x4c89e7	                            mov rdi, r12	      5406	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_11
0x400582b	      0xe800000000	                          call 0x4005830	      5406	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_11
0x4005830	            0x4898	                                    cdqe	      1192	mbyte.c	FUNCTION_18	IF_1
0x4005832	    0x483905000000	            cmp qword [0x04005839], rax 	      1192	mbyte.c	FUNCTION_18	IF_1
0x4005839	            0x7f9f	                            jg 0x40057da	      1192	mbyte.c	FUNCTION_18	IF_1
0x400583b	      0xbf06010000	                          mov edi, 0x106	      1192	mbyte.c	FUNCTION_18	IF_1
0x4005840	            0x31f6	                            xor esi, esi	      1192	mbyte.c	FUNCTION_18	IF_1
0x4005842	            0xeb0b	                           jmp 0x400584f	      1192	mbyte.c	FUNCTION_18	IF_1
0x4005844	         0xf1f4000	                         nop dword [rax]	      1192	mbyte.c	FUNCTION_18	IF_1
0x4005848	          0x8d7201	                      lea esi, [rdx + 1]	      1202	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x400584b	            0x39fe	                            cmp esi, edi	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x400584d	            0x7f8b	                            jg 0x40057da	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x400584f	          0x8d143e	                    lea edx, [rsi + rdi]	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x4005852	            0xd1fa	                              sar edx, 1	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x4005854	          0x4863ca	                         movsxd rcx, edx	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4005857	        0x48c1e104	                              shl rcx, 4	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x400585b	    0x483b81000000	                    cmp rax, qword [rcx]	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4005862	            0x7fe4	                            jg 0x4005848	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4005864	    0x483b81000000	                    cmp rax, qword [rcx]	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x400586b	            0x7d0b	                           jge 0x4005878	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x400586d	          0x8d7aff	                      lea edi, [rdx - 1]	      1204	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4005870	            0xebd9	                           jmp 0x400584b	      1204	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4005872	    0x660f1f440000	                    nop word [rax + rax]	      1204	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4005878	    0x8b0500000000	            mov eax, dword [0x0400587e] 	      5412	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7
0x400587e	            0x85c0	                           test eax, eax	      5412	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7
0x4005880	     0xf8411ffffff	                            je 0x4005797	      5412	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7
0x4005886	      0x443b6c240c	            cmp r13d, dword [rsp + 0xc] 	      5414	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7	IF_8
0x400588b	     0xf8cfffeffff	                            jl 0x4005790	      5414	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7	IF_8
0x4005891	    0x830500000000	               add dword [0x04005898], 1	      5417	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7	ELSE_5
0x4005898	      0xe9fafeffff	                           jmp 0x4005797	      5417	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7	ELSE_5
0x400589d	           0xf1f00	                         nop dword [rax]	      5417	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7	ELSE_5
0x40058a0	          0x4c39e5	                            cmp rbp, r12	      5429	mbyte.c	FUNCTION_113	ELSE_3	IF_11
0x40058a3	     0xf8257020000	                            jb 0x4005b00	      5429	mbyte.c	FUNCTION_113	ELSE_3	IF_11
0x40058a9	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      5429	mbyte.c	FUNCTION_113	ELSE_3	IF_11
0x40058ae	      0xe800000000	                          call 0x40058b3	      5436	mbyte.c	FUNCTION_113	CALL_15
0x40058b3	      0xe800000000	                          call 0x40058b8	      5438	mbyte.c	FUNCTION_113	IF_12	CALL_16
0x40058b8	            0x85c0	                           test eax, eax	      5438	mbyte.c	FUNCTION_113	IF_12	CALL_16
0x40058ba	            0x7524	                           jne 0x40058e0	      5438	mbyte.c	FUNCTION_113	IF_12	CALL_16
0x40058bc	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      5440	mbyte.c	FUNCTION_113
0x40058c1	    0x644833042528	                xor rax, qword fs:[0x28]	      5440	mbyte.c	FUNCTION_113
0x40058ca	     0xf854b030000	                           jne 0x4005c1b	      5440	mbyte.c	FUNCTION_113
0x40058d0	        0x4883c450	                           add rsp, 0x50	      5440	mbyte.c	FUNCTION_113
0x40058d4	              0x5b	                                 pop rbx	      5440	mbyte.c	FUNCTION_113
0x40058d5	              0x5d	                                 pop rbp	      5440	mbyte.c	FUNCTION_113
0x40058d6	            0x415c	                                 pop r12	      5440	mbyte.c	FUNCTION_113
0x40058d8	            0x415d	                                 pop r13	      5440	mbyte.c	FUNCTION_113
0x40058da	            0x415e	                                 pop r14	      5440	mbyte.c	FUNCTION_113
0x40058dc	              0xc3	                                     ret	      5440	mbyte.c	FUNCTION_113
0x40058dd	           0xf1f00	                         nop dword [rax]	      5440	mbyte.c	FUNCTION_113
0x40058e0	      0xe800000000	                          call 0x40058e5	      5439	mbyte.c	FUNCTION_113	CALL_17
0x40058e5	            0xebd5	                           jmp 0x40058bc	      5439	mbyte.c	FUNCTION_113	CALL_17
0x40058e7	    0x660f1f840000	                    nop word [rax + rax]	      5439	mbyte.c	FUNCTION_113	CALL_17
0x40058f0	          0x803800	                       cmp byte [rax], 0	      5360	mbyte.c	FUNCTION_113	IF_2	IF_3
0x40058f3	     0xf84e5010000	                            je 0x4005ade	      5360	mbyte.c	FUNCTION_113	IF_2	IF_3
0x40058f9	    0x48833d000000	               cmp qword [0x04005901], 0	      4969	mbyte.c	FUNCTION_104	IF_1
0x4005901	    0xc70500000000	               mov dword [0x0400590b], 1	      5367	mbyte.c	FUNCTION_113	IF_2	ELSE_2
0x400590b	     0xf847c020000	                            je 0x4005b8d	      4969	mbyte.c	FUNCTION_104	IF_1
0x4005911	    0x488b35000000	            mov rsi, qword [0x04005918] 	      5041	mbyte.c	FUNCTION_104	CALL_33
0x4005918	    0x488b3d000000	            mov rdi, qword [0x0400591f] 	      5041	mbyte.c	FUNCTION_104	CALL_33
0x400591f	      0xe800000000	                          call 0x4005924	      5041	mbyte.c	FUNCTION_104	CALL_33
0x4005924	    0x8b0d00000000	            mov ecx, dword [0x0400592a] 	      5043	mbyte.c	FUNCTION_104	CALL_34
0x400592a	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      5043	mbyte.c	FUNCTION_104	CALL_34
0x400592f	      0xba00000000	                              mov edx, 0	      5043	mbyte.c	FUNCTION_104	CALL_34
0x4005934	      0xbe08000000	                              mov esi, 8	      5043	mbyte.c	FUNCTION_104	CALL_34
0x4005939	            0x31c0	                            xor eax, eax	      5043	mbyte.c	FUNCTION_104	CALL_34
0x400593b	      0xe800000000	                          call 0x4005940	      5043	mbyte.c	FUNCTION_104	CALL_34
0x4005940	      0x488d742430	                   lea rsi, [rsp + 0x30]	      5044	mbyte.c	FUNCTION_104	CALL_35
0x4005945	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      5044	mbyte.c	FUNCTION_104	CALL_35
0x400594a	      0xe800000000	                          call 0x400594f	      5044	mbyte.c	FUNCTION_104	CALL_35
0x400594f	    0x488b3d000000	            mov rdi, qword [0x04005956] 	      5045	mbyte.c	FUNCTION_104	CALL_36
0x4005956	      0x488d542430	                   lea rdx, [rsp + 0x30]	      5045	mbyte.c	FUNCTION_104	CALL_36
0x400595b	            0x31f6	                            xor esi, esi	      5045	mbyte.c	FUNCTION_104	CALL_36
0x400595d	      0xe800000000	                          call 0x4005962	      5045	mbyte.c	FUNCTION_104	CALL_36
0x4005962	    0x8b0d00000000	            mov ecx, dword [0x04005968] 	      5047	mbyte.c	FUNCTION_104	CALL_37
0x4005968	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      5047	mbyte.c	FUNCTION_104	CALL_37
0x400596d	      0xba00000000	                              mov edx, 0	      5047	mbyte.c	FUNCTION_104	CALL_37
0x4005972	      0xbe08000000	                              mov esi, 8	      5047	mbyte.c	FUNCTION_104	CALL_37
0x4005977	            0x31c0	                            xor eax, eax	      5047	mbyte.c	FUNCTION_104	CALL_37
0x4005979	      0xe800000000	                          call 0x400597e	      5047	mbyte.c	FUNCTION_104	CALL_37
0x400597e	      0x488d742430	                   lea rsi, [rsp + 0x30]	      5048	mbyte.c	FUNCTION_104	CALL_38
0x4005983	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      5048	mbyte.c	FUNCTION_104	CALL_38
0x4005988	      0xe800000000	                          call 0x400598d	      5048	mbyte.c	FUNCTION_104	CALL_38
0x400598d	    0x488b3d000000	            mov rdi, qword [0x04005994] 	      5049	mbyte.c	FUNCTION_104	CALL_39
0x4005994	      0x488d542430	                   lea rdx, [rsp + 0x30]	      5049	mbyte.c	FUNCTION_104	CALL_39
0x4005999	            0x31f6	                            xor esi, esi	      5049	mbyte.c	FUNCTION_104	CALL_39
0x400599b	      0xe800000000	                          call 0x40059a0	      5049	mbyte.c	FUNCTION_104	CALL_39
0x40059a0	    0x488b3d000000	            mov rdi, qword [0x040059a7] 	      5052	mbyte.c	FUNCTION_104	CALL_40
0x40059a7	      0x488d542428	                   lea rdx, [rsp + 0x28]	      5052	mbyte.c	FUNCTION_104	CALL_40
0x40059ac	      0x488d742420	                   lea rsi, [rsp + 0x20]	      5052	mbyte.c	FUNCTION_104	CALL_40
0x40059b1	            0x31c9	                            xor ecx, ecx	      5052	mbyte.c	FUNCTION_104	CALL_40
0x40059b3	      0xe800000000	                          call 0x40059b8	      5052	mbyte.c	FUNCTION_104	CALL_40
0x40059b8	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      5054	mbyte.c	FUNCTION_104	IF_4
0x40059bd	          0x803b00	                       cmp byte [rbx], 0	      5054	mbyte.c	FUNCTION_104	IF_4
0x40059c0	     0xf84b9000000	                            je 0x4005a7f	      5054	mbyte.c	FUNCTION_104	IF_4
0x40059c6	      0xe800000000	                          call 0x40059cb	      5056	mbyte.c	FUNCTION_104	IF_4	CALL_42
0x40059cb	    0x488b3d000000	            mov rdi, qword [0x040059d2] 	      5056	mbyte.c	FUNCTION_104	IF_4	CALL_42
0x40059d2	          0x4889c6	                            mov rsi, rax	      5056	mbyte.c	FUNCTION_104	IF_4	CALL_42
0x40059d5	          0x4889c5	                            mov rbp, rax	      5056	mbyte.c	FUNCTION_104	IF_4	CALL_42
0x40059d8	      0xe800000000	                          call 0x40059dd	      5056	mbyte.c	FUNCTION_104	IF_4	CALL_42
0x40059dd	          0x4889de	                            mov rsi, rbx	      5056	mbyte.c	FUNCTION_104	IF_4	CALL_42
0x40059e0	          0x4889c7	                            mov rdi, rax	      5056	mbyte.c	FUNCTION_104	IF_4	CALL_42
0x40059e3	      0xe800000000	                          call 0x40059e8	      5056	mbyte.c	FUNCTION_104	IF_4	CALL_42
0x40059e8	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      5057	mbyte.c	FUNCTION_104	IF_4	CALL_44
0x40059ed	    0x488b3d000000	            mov rdi, qword [0x040059f4] 	      5057	mbyte.c	FUNCTION_104	IF_4	CALL_44
0x40059f4	          0x4889ee	                            mov rsi, rbp	      5057	mbyte.c	FUNCTION_104	IF_4	CALL_44
0x40059f7	      0xe800000000	                          call 0x40059fc	      5057	mbyte.c	FUNCTION_104	IF_4	CALL_44
0x40059fc	          0x4889de	                            mov rsi, rbx	      5057	mbyte.c	FUNCTION_104	IF_4	CALL_44
0x40059ff	          0x4889c7	                            mov rdi, rax	      5057	mbyte.c	FUNCTION_104	IF_4	CALL_44
0x4005a02	      0xe800000000	                          call 0x4005a07	      5057	mbyte.c	FUNCTION_104	IF_4	CALL_44
0x4005a07	    0x488b3d000000	            mov rdi, qword [0x04005a0e] 	      5059	mbyte.c	FUNCTION_104	IF_4	CALL_46
0x4005a0e	          0x4889ee	                            mov rsi, rbp	      5059	mbyte.c	FUNCTION_104	IF_4	CALL_46
0x4005a11	      0xe800000000	                          call 0x4005a16	      5059	mbyte.c	FUNCTION_104	IF_4	CALL_46
0x4005a16	          0x4889c7	                            mov rdi, rax	      5059	mbyte.c	FUNCTION_104	IF_4	CALL_46
0x4005a19	      0xe800000000	                          call 0x4005a1e	      5059	mbyte.c	FUNCTION_104	IF_4	CALL_46
0x4005a1e	      0x488d542414	                   lea rdx, [rsp + 0x14]	      5060	mbyte.c	FUNCTION_104	IF_4	CALL_47
0x4005a23	      0x488d742410	                   lea rsi, [rsp + 0x10]	      5060	mbyte.c	FUNCTION_104	IF_4	CALL_47
0x4005a28	          0x4889c7	                            mov rdi, rax	      5060	mbyte.c	FUNCTION_104	IF_4	CALL_47
0x4005a2b	      0xe800000000	                          call 0x4005a30	      5060	mbyte.c	FUNCTION_104	IF_4	CALL_47
0x4005a30	        0x8b5c2414	            mov ebx, dword [rsp + 0x14] 	      5061	mbyte.c	FUNCTION_104	IF_4	CALL_48
0x4005a34	    0x391d00000000	            cmp dword [0x04005a3a], ebx 	      5061	mbyte.c	FUNCTION_104	IF_4	CALL_48
0x4005a3a	     0xf4d1d000000	          cmovge ebx, dword [0x04005a41]	      5061	mbyte.c	FUNCTION_104	IF_4	CALL_48
0x4005a41	        0x8b6c2410	            mov ebp, dword [rsp + 0x10] 	      5062	mbyte.c	FUNCTION_104	IF_4	CALL_50
0x4005a45	        0x895c2414	             mov dword [rsp + 0x14], ebx	      5061	mbyte.c	FUNCTION_104	IF_4	CALL_48
0x4005a49	      0xe800000000	                          call 0x4005a4e	      5062	mbyte.c	FUNCTION_104	IF_4	CALL_50
0x4005a4e	    0x488b3d000000	            mov rdi, qword [0x04005a55] 	      5062	mbyte.c	FUNCTION_104	IF_4	CALL_50
0x4005a55	          0x4889c6	                            mov rsi, rax	      5062	mbyte.c	FUNCTION_104	IF_4	CALL_50
0x4005a58	      0xe800000000	                          call 0x4005a5d	      5062	mbyte.c	FUNCTION_104	IF_4	CALL_50
0x4005a5d	            0x89da	                            mov edx, ebx	      5062	mbyte.c	FUNCTION_104	IF_4	CALL_50
0x4005a5f	          0x4889c7	                            mov rdi, rax	      5062	mbyte.c	FUNCTION_104	IF_4	CALL_50
0x4005a62	            0x89ee	                            mov esi, ebp	      5062	mbyte.c	FUNCTION_104	IF_4	CALL_50
0x4005a64	      0xe800000000	                          call 0x4005a69	      5062	mbyte.c	FUNCTION_104	IF_4	CALL_50
0x4005a69	    0x488b3d000000	            mov rdi, qword [0x04005a70] 	      5064	mbyte.c	FUNCTION_104	IF_4	CALL_51
0x4005a70	      0xe800000000	                          call 0x4005a75	      5064	mbyte.c	FUNCTION_104	IF_4	CALL_51
0x4005a75	      0xe8a6aaffff	 call sym.im_preedit_window_set_position	      5066	mbyte.c	FUNCTION_104	IF_4	CALL_52
0x4005a7a	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      5066	mbyte.c	FUNCTION_104	IF_4	CALL_52
0x4005a7f	          0x4889df	                            mov rdi, rbx	      5069	mbyte.c	FUNCTION_104	CALL_53
0x4005a82	      0xe800000000	                          call 0x4005a87	      5069	mbyte.c	FUNCTION_104	CALL_53
0x4005a87	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      5070	mbyte.c	FUNCTION_104	CALL_54
0x4005a8c	      0xe800000000	                          call 0x4005a91	      5070	mbyte.c	FUNCTION_104	CALL_54
0x4005a91	    0x8b3d00000000	            mov edi, dword [0x04005a97] 	      5085	mbyte.c	FUNCTION_106	IF_1
0x4005a97	            0x85ff	                           test edi, edi	      5085	mbyte.c	FUNCTION_106	IF_1
0x4005a99	     0xf840afeffff	                            je 0x40058a9	      5085	mbyte.c	FUNCTION_106	IF_1
0x4005a9f	      0xbf01000000	                              mov edi, 1	      5086	mbyte.c	FUNCTION_106	CALL_2
0x4005aa4	      0xe800000000	                          call 0x4005aa9	      5086	mbyte.c	FUNCTION_106	CALL_2
0x4005aa9	      0xe9fbfdffff	                           jmp 0x40058a9	      5086	mbyte.c	FUNCTION_106	CALL_2
0x4005aae	            0x6690	                                     nop	      5086	mbyte.c	FUNCTION_106	CALL_2
0x4005ab0	          0x803800	                       cmp byte [rax], 0	      5374	mbyte.c	FUNCTION_113	ELSE_3	IF_4
0x4005ab3	     0xf85c0000000	                           jne 0x4005b79	      5374	mbyte.c	FUNCTION_113	ELSE_3	IF_4
0x4005ab9	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      5381	mbyte.c	FUNCTION_113	ELSE_3	ELSE_4	IF_5
0x4005abd	            0x85d2	                           test edx, edx	      5381	mbyte.c	FUNCTION_113	ELSE_3	ELSE_4	IF_5
0x4005abf	     0xf8594fcffff	                           jne 0x4005759	      5381	mbyte.c	FUNCTION_113	ELSE_3	ELSE_4	IF_5
0x4005ac5	    0xc70500000000	               mov dword [0x04005acf], 0	      5383	mbyte.c	FUNCTION_113	ELSE_3	ELSE_4	IF_5
0x4005acf	    0xc70500000000	     mov dword [0x04005ad9], 0x7fffffff 	      5387	mbyte.c	FUNCTION_113	ELSE_3	ELSE_4	IF_5
0x4005ad9	      0xe97bfcffff	                           jmp 0x4005759	      5387	mbyte.c	FUNCTION_113	ELSE_3	ELSE_4	IF_5
0x4005ade	    0xc70500000000	               mov dword [0x04005ae8], 0	      5362	mbyte.c	FUNCTION_113	IF_2	IF_3
0x4005ae8	      0xe853abffff	              call sym.im_delete_preedit	      5363	mbyte.c	FUNCTION_113	IF_2	IF_3	CALL_5
0x4005aed	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      5363	mbyte.c	FUNCTION_113	IF_2	IF_3	CALL_5
0x4005af2	      0xe9b7fdffff	                           jmp 0x40058ae	      5363	mbyte.c	FUNCTION_113	IF_2	IF_3	CALL_5
0x4005af7	    0x660f1f840000	                    nop word [rax + rax]	      5363	mbyte.c	FUNCTION_113	IF_2	IF_3	CALL_5
0x4005b00	          0x4c89e6	                            mov rsi, r12	      5431	mbyte.c	FUNCTION_113	ELSE_3	IF_11	CALL_13
0x4005b03	          0x4889ef	                            mov rdi, rbp	      5431	mbyte.c	FUNCTION_113	ELSE_3	IF_11	CALL_13
0x4005b06	          0x4829ee	                            sub rsi, rbp	      5431	mbyte.c	FUNCTION_113	ELSE_3	IF_11	CALL_13
0x4005b09	      0xe832fbffff	                call sym.im_add_to_input	      5431	mbyte.c	FUNCTION_113	ELSE_3	IF_11	CALL_13
0x4005b0e	    0x8b0500000000	            mov eax, dword [0x04005b14] 	      5127	mbyte.c	FUNCTION_108	IF_1
0x4005b14	      0xc64424409b	            mov byte [rsp + 0x40], 0x9b 	      5125	mbyte.c	FUNCTION_108
0x4005b19	      0xc64424416b	            mov byte [rsp + 0x41], 0x6b 	      5125	mbyte.c	FUNCTION_108
0x4005b1e	      0xc64424426c	            mov byte [rsp + 0x42], 0x6c 	      5125	mbyte.c	FUNCTION_108
0x4005b23	            0xa801	                              test al, 1	      5127	mbyte.c	FUNCTION_108	IF_1
0x4005b25	     0xf857efdffff	                           jne 0x40058a9	      5127	mbyte.c	FUNCTION_108	IF_1
0x4005b2b	            0xa808	                              test al, 8	      5130	mbyte.c	FUNCTION_108	IF_2
0x4005b2d	            0x751b	                           jne 0x4005b4a	      5130	mbyte.c	FUNCTION_108	IF_2
0x4005b2f	    0x488b05000000	            mov rax, qword [0x04005b36] 	      5130	mbyte.c	FUNCTION_108	IF_2
0x4005b36	          0x4885c0	                           test rax, rax	      5130	mbyte.c	FUNCTION_108	IF_2
0x4005b39	            0x740f	                            je 0x4005b4a	      5130	mbyte.c	FUNCTION_108	IF_2
0x4005b3b	    0x8b8854020000	           mov ecx, dword [rax + 0x254] 	      5130	mbyte.c	FUNCTION_108	IF_2
0x4005b41	            0x85c9	                           test ecx, ecx	      5130	mbyte.c	FUNCTION_108	IF_2
0x4005b43	            0x7405	                            je 0x4005b4a	      5130	mbyte.c	FUNCTION_108	IF_2
0x4005b45	      0xc644244272	            mov byte [rsp + 0x42], 0x72 	      5131	mbyte.c	FUNCTION_108	IF_2
0x4005b4a	            0x85db	                           test ebx, ebx	      5133	mbyte.c	FUNCTION_108	FOR_1
0x4005b4c	     0xf8457fdffff	                            je 0x40058a9	      5133	mbyte.c	FUNCTION_108	FOR_1
0x4005b52	    0x660f1f440000	                    nop word [rax + rax]	      5133	mbyte.c	FUNCTION_108	FOR_1
0x4005b58	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      5134	mbyte.c	FUNCTION_108	CALL_1
0x4005b5d	      0xbe03000000	                              mov esi, 3	      5134	mbyte.c	FUNCTION_108	CALL_1
0x4005b62	      0xe800000000	                          call 0x4005b67	      5134	mbyte.c	FUNCTION_108	CALL_1
0x4005b67	          0x83eb01	                              sub ebx, 1	      5133	mbyte.c	FUNCTION_108	FOR_1
0x4005b6a	            0x75ec	                           jne 0x4005b58	      5133	mbyte.c	FUNCTION_108	FOR_1
0x4005b6c	      0xe938fdffff	                           jmp 0x40058a9	      5133	mbyte.c	FUNCTION_108	FOR_1
0x4005b71	          0x4889ef	                            mov rdi, rbp	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x4005b74	      0xe935fdffff	                           jmp 0x40058ae	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x4005b79	    0xc70500000000	               mov dword [0x04005b83], 1	      5376	mbyte.c	FUNCTION_113	ELSE_3	IF_4
0x4005b83	      0xe878acffff	         call sym.init_preedit_start_col	      5379	mbyte.c	FUNCTION_113	ELSE_3	IF_4	CALL_7
0x4005b88	      0xe9ccfbffff	                           jmp 0x4005759	      5379	mbyte.c	FUNCTION_113	ELSE_3	IF_4	CALL_7
0x4005b8d	      0xbf01000000	                              mov edi, 1	      4971	mbyte.c	FUNCTION_104	IF_1	CALL_1
0x4005b92	      0xe800000000	                          call 0x4005b97	      4971	mbyte.c	FUNCTION_104	IF_1	CALL_1
0x4005b97	    0x488905000000	            mov qword [0x04005b9e], rax 	      4971	mbyte.c	FUNCTION_104	IF_1	CALL_1
0x4005b9e	      0xe800000000	                          call 0x4005ba3	      4973	mbyte.c	FUNCTION_104	IF_1	CALL_4
0x4005ba3	    0x488b3d000000	            mov rdi, qword [0x04005baa] 	      4973	mbyte.c	FUNCTION_104	IF_1	CALL_4
0x4005baa	          0x4889c6	                            mov rsi, rax	      4973	mbyte.c	FUNCTION_104	IF_1	CALL_4
0x4005bad	          0x4889c3	                            mov rbx, rax	      4973	mbyte.c	FUNCTION_104	IF_1	CALL_4
0x4005bb0	      0xe800000000	                          call 0x4005bb5	      4973	mbyte.c	FUNCTION_104	IF_1	CALL_4
0x4005bb5	    0x488b3d000000	            mov rdi, qword [0x04005bbc] 	      4972	mbyte.c	FUNCTION_104	IF_1	CALL_3
0x4005bbc	          0x4889c5	                            mov rbp, rax	      4973	mbyte.c	FUNCTION_104	IF_1	CALL_4
0x4005bbf	          0x4889de	                            mov rsi, rbx	      4972	mbyte.c	FUNCTION_104	IF_1	CALL_3
0x4005bc2	      0xe800000000	                          call 0x4005bc7	      4972	mbyte.c	FUNCTION_104	IF_1	CALL_3
0x4005bc7	          0x4889ee	                            mov rsi, rbp	      4972	mbyte.c	FUNCTION_104	IF_1	CALL_3
0x4005bca	          0x4889c7	                            mov rdi, rax	      4972	mbyte.c	FUNCTION_104	IF_1	CALL_3
0x4005bcd	      0xe800000000	                          call 0x4005bd2	      4972	mbyte.c	FUNCTION_104	IF_1	CALL_3
0x4005bd2	      0xbf00000000	                              mov edi, 0	      4974	mbyte.c	FUNCTION_104	IF_1	CALL_5
0x4005bd7	      0xe800000000	                          call 0x4005bdc	      4974	mbyte.c	FUNCTION_104	IF_1	CALL_5
0x4005bdc	      0xbe00000000	                              mov esi, 0	      4975	mbyte.c	FUNCTION_104	IF_1	CALL_6
0x4005be1	          0x4889c7	                            mov rdi, rax	      4975	mbyte.c	FUNCTION_104	IF_1	CALL_6
0x4005be4	    0x488905000000	            mov qword [0x04005beb], rax 	      4974	mbyte.c	FUNCTION_104	IF_1	CALL_5
0x4005beb	      0xe800000000	                          call 0x4005bf0	      4975	mbyte.c	FUNCTION_104	IF_1	CALL_6
0x4005bf0	      0xe800000000	                          call 0x4005bf5	      4976	mbyte.c	FUNCTION_104	IF_1	CALL_8
0x4005bf5	    0x488b1d000000	            mov rbx, qword [0x04005bfc] 	      4976	mbyte.c	FUNCTION_104	IF_1	CALL_8
0x4005bfc	    0x488b3d000000	            mov rdi, qword [0x04005c03] 	      4976	mbyte.c	FUNCTION_104	IF_1	CALL_8
0x4005c03	          0x4889c6	                            mov rsi, rax	      4976	mbyte.c	FUNCTION_104	IF_1	CALL_8
0x4005c06	      0xe800000000	                          call 0x4005c0b	      4976	mbyte.c	FUNCTION_104	IF_1	CALL_8
0x4005c0b	          0x4889de	                            mov rsi, rbx	      4976	mbyte.c	FUNCTION_104	IF_1	CALL_8
0x4005c0e	          0x4889c7	                            mov rdi, rax	      4976	mbyte.c	FUNCTION_104	IF_1	CALL_8
0x4005c11	      0xe800000000	                          call 0x4005c16	      4976	mbyte.c	FUNCTION_104	IF_1	CALL_8
0x4005c16	      0xe9f6fcffff	                           jmp 0x4005911	      4976	mbyte.c	FUNCTION_104	IF_1	CALL_8
0x4005c1b	      0xe800000000	                   call sym.im_commit_cb	      5440	mbyte.c	FUNCTION_113
latin_ptr2cells	DO,0:IF,0:CALL,0:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	2
0x4000100	      0xb801000000	                              mov eax, 1	      1619	mbyte.c	FUNCTION_21
0x4000105	              0xc3	                                     ret	      1619	mbyte.c	FUNCTION_21
dbcs_char2cells	DO,0:IF,1:CALL,1:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	12
0x4000190	    0x813d00000000	         cmp dword [0x0400019a], 0x26cc 	      1711	mbyte.c	FUNCTION_28	IF_1
0x400019a	            0x7414	                            je 0x40001b0	      1711	mbyte.c	FUNCTION_28	IF_1
0x400019c	          0xc1ef08	                              shr edi, 8	      1714	mbyte.c	FUNCTION_28	CALL_1
0x400019f	     0xfbe87000000	                   movsx eax, byte [rdi]	      1714	mbyte.c	FUNCTION_28	CALL_1
0x40001a6	              0xc3	                                     ret	      1714	mbyte.c	FUNCTION_28	CALL_1
0x40001a7	    0x660f1f840000	                    nop word [rax + rax]	      1714	mbyte.c	FUNCTION_28	CALL_1
0x40001b0	            0x89f8	                            mov eax, edi	      1711	mbyte.c	FUNCTION_28	IF_1
0x40001b2	          0xc1e808	                              shr eax, 8	      1711	mbyte.c	FUNCTION_28	IF_1
0x40001b5	      0x3d8e000000	                           cmp eax, 0x8e	      1711	mbyte.c	FUNCTION_28	IF_1
0x40001ba	            0x75e0	                           jne 0x400019c	      1711	mbyte.c	FUNCTION_28	IF_1
0x40001bc	      0xb801000000	                              mov eax, 1	      1712	mbyte.c	FUNCTION_28	IF_1
0x40001c1	              0xc3	                                     ret	      1715	mbyte.c	FUNCTION_28
im_delete_preedit	DO,0:IF,2:CALL,4:FOR,2:functions,0:ELSE,0:WHILE,0:SWITCH,0	56
0x4000640	        0x4883ec28	                           sub rsp, 0x28	      5091	mbyte.c	FUNCTION_107
0x4000644	    0x64488b042528	                mov rax, qword fs:[0x28]	      5091	mbyte.c	FUNCTION_107
0x400064d	      0x4889442418	             mov qword [rsp + 0x18], rax	      5091	mbyte.c	FUNCTION_107
0x4000652	            0x31c0	                            xor eax, eax	      5091	mbyte.c	FUNCTION_107
0x4000654	    0x48833d000000	               cmp qword [0x0400065c], 1	      5095	mbyte.c	FUNCTION_107	IF_1
0x400065c	        0xc604249b	                    mov byte [rsp], 0x9b	      5092	mbyte.c	FUNCTION_107
0x4000660	      0xc64424016b	                mov byte [rsp + 1], 0x6b	      5092	mbyte.c	FUNCTION_107
0x4000665	      0xc644240262	                mov byte [rsp + 2], 0x62	      5092	mbyte.c	FUNCTION_107
0x400066a	      0xc64424109b	            mov byte [rsp + 0x10], 0x9b 	      5093	mbyte.c	FUNCTION_107
0x400066f	      0xc64424116b	            mov byte [rsp + 0x11], 0x6b 	      5093	mbyte.c	FUNCTION_107
0x4000674	      0xc644241244	            mov byte [rsp + 0x12], 0x44 	      5093	mbyte.c	FUNCTION_107
0x4000679	     0xf8491000000	                            je 0x4000710	      5095	mbyte.c	FUNCTION_107	IF_1
0x400067f	    0xf60500000000	               test byte [0x04000686], 1	      5101	mbyte.c	FUNCTION_107	IF_2
0x4000686	     0xf859c000000	                           jne 0x4000728	      5101	mbyte.c	FUNCTION_107	IF_2
0x400068c	    0x8b1500000000	            mov edx, dword [0x04000692] 	      5110	mbyte.c	FUNCTION_107	FOR_1
0x4000692	            0x85d2	                           test edx, edx	      5110	mbyte.c	FUNCTION_107	FOR_1
0x4000694	            0x7e2a	                           jle 0x40006c0	      5110	mbyte.c	FUNCTION_107	FOR_1
0x4000696	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5110	mbyte.c	FUNCTION_107	FOR_1
0x40006a0	      0xbe03000000	                              mov esi, 3	      5111	mbyte.c	FUNCTION_107	CALL_3
0x40006a5	          0x4889e7	                            mov rdi, rsp	      5111	mbyte.c	FUNCTION_107	CALL_3
0x40006a8	      0xe800000000	                          call 0x40006ad	      5111	mbyte.c	FUNCTION_107	CALL_3
0x40006ad	    0x8b0500000000	            mov eax, dword [0x040006b3] 	      5110	mbyte.c	FUNCTION_107	FOR_1
0x40006b3	          0x83e801	                              sub eax, 1	      5110	mbyte.c	FUNCTION_107	FOR_1
0x40006b6	            0x85c0	                           test eax, eax	      5110	mbyte.c	FUNCTION_107	FOR_1
0x40006b8	    0x890500000000	            mov dword [0x040006be], eax 	      5110	mbyte.c	FUNCTION_107	FOR_1
0x40006be	            0x7fe0	                            jg 0x40006a0	      5110	mbyte.c	FUNCTION_107	FOR_1
0x40006c0	    0x8b0500000000	            mov eax, dword [0x040006c6] 	      5113	mbyte.c	FUNCTION_107	FOR_2
0x40006c6	            0x85c0	                           test eax, eax	      5113	mbyte.c	FUNCTION_107	FOR_2
0x40006c8	            0x7e28	                           jle 0x40006f2	      5113	mbyte.c	FUNCTION_107	FOR_2
0x40006ca	    0x660f1f440000	                    nop word [rax + rax]	      5113	mbyte.c	FUNCTION_107	FOR_2
0x40006d0	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5114	mbyte.c	FUNCTION_107	CALL_4
0x40006d5	      0xbe03000000	                              mov esi, 3	      5114	mbyte.c	FUNCTION_107	CALL_4
0x40006da	      0xe800000000	                          call 0x40006df	      5114	mbyte.c	FUNCTION_107	CALL_4
0x40006df	    0x8b0500000000	            mov eax, dword [0x040006e5] 	      5113	mbyte.c	FUNCTION_107	FOR_2
0x40006e5	          0x83e801	                              sub eax, 1	      5113	mbyte.c	FUNCTION_107	FOR_2
0x40006e8	            0x85c0	                           test eax, eax	      5113	mbyte.c	FUNCTION_107	FOR_2
0x40006ea	    0x890500000000	            mov dword [0x040006f0], eax 	      5113	mbyte.c	FUNCTION_107	FOR_2
0x40006f0	            0x7fde	                            jg 0x40006d0	      5113	mbyte.c	FUNCTION_107	FOR_2
0x40006f2	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5115	mbyte.c	FUNCTION_107
0x40006f7	    0x644833042528	                xor rax, qword fs:[0x28]	      5115	mbyte.c	FUNCTION_107
0x4000700	            0x753f	                           jne 0x4000741	      5115	mbyte.c	FUNCTION_107
0x4000702	        0x4883c428	                           add rsp, 0x28	      5115	mbyte.c	FUNCTION_107
0x4000706	              0xc3	                                     ret	      5115	mbyte.c	FUNCTION_107
0x4000707	    0x660f1f840000	                    nop word [rax + rax]	      5115	mbyte.c	FUNCTION_107
0x4000710	    0x488b3d000000	            mov rdi, qword [0x04000717] 	      5076	mbyte.c	FUNCTION_105	IF_1
0x4000717	          0x4885ff	                           test rdi, rdi	      5076	mbyte.c	FUNCTION_105	IF_1
0x400071a	            0x74d6	                            je 0x40006f2	      5076	mbyte.c	FUNCTION_105	IF_1
0x400071c	      0xe800000000	                          call 0x4000721	      5077	mbyte.c	FUNCTION_105	CALL_1
0x4000721	            0xebcf	                           jmp 0x40006f2	      5077	mbyte.c	FUNCTION_105	CALL_1
0x4000723	       0xf1f440000	                   nop dword [rax + rax]	      5077	mbyte.c	FUNCTION_105	CALL_1
0x4000728	      0xe800000000	                          call 0x400072d	      5103	mbyte.c	FUNCTION_107	IF_2	CALL_2
0x400072d	            0x85c0	                           test eax, eax	      5103	mbyte.c	FUNCTION_107	IF_2	CALL_2
0x400072f	     0xf8557ffffff	                           jne 0x400068c	      5103	mbyte.c	FUNCTION_107	IF_2	CALL_2
0x4000735	    0xc70500000000	               mov dword [0x0400073f], 0	      5107	mbyte.c	FUNCTION_107	IF_2
0x400073f	            0xebb1	                           jmp 0x40006f2	      5108	mbyte.c	FUNCTION_107	IF_2
0x4000741	      0xe800000000	                          call 0x4000746	      5115	mbyte.c	FUNCTION_107
mb_off_next	DO,0:IF,5:CALL,0:FOR,2:functions,0:ELSE,0:WHILE,0:SWITCH,0	48
0x4002ab0	    0x8b0500000000	            mov eax, dword [0x04002ab6] 	      3900	mbyte.c	FUNCTION_72	IF_1
0x4002ab6	            0x85c0	                           test eax, eax	      3900	mbyte.c	FUNCTION_72	IF_1
0x4002ab8	     0xf8482000000	                            je 0x4002b40	      3900	mbyte.c	FUNCTION_72	IF_1
0x4002abe	        0x440fb606	                   movzx r8d, byte [rsi]	      3902	mbyte.c	FUNCTION_72	IF_1	IF_2
0x4002ac2	            0x31c0	                            xor eax, eax	      3903	mbyte.c	FUNCTION_72	IF_1	IF_2
0x4002ac4	          0x4584c0	                           test r8b, r8b	      3902	mbyte.c	FUNCTION_72	IF_1	IF_2
0x4002ac7	            0x7807	                            js 0x4002ad0	      3902	mbyte.c	FUNCTION_72	IF_1	IF_2
0x4002ac9	            0xf3c3	                                     ret	      3923	mbyte.c	FUNCTION_72
0x4002acb	       0xf1f440000	                   nop dword [rax + rax]	      3923	mbyte.c	FUNCTION_72
0x4002ad0	          0x4489c2	                            mov edx, r8d	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4002ad3	          0x83e2c0	                     and edx, 0xffffffc0	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4002ad6	          0x80fa80	                            cmp dl, 0x80	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4002ad9	            0x75ee	                           jne 0x4002ac9	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4002adb	        0x488d4e01	                      lea rcx, [rsi + 1]	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4002adf	              0x90	                                     nop	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4002ae0	           0xfb611	                   movzx edx, byte [rcx]	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4002ae3	          0x83c001	                              add eax, 1	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4002ae6	        0x4883c101	                              add rcx, 1	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4002aea	          0x83e2c0	                     and edx, 0xffffffc0	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4002aed	          0x80fa80	                            cmp dl, 0x80	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4002af0	            0x74ee	                            je 0x4002ae0	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4002af2	            0x31c9	                            xor ecx, ecx	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4002af4	          0x4839fe	                            cmp rsi, rdi	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4002af7	        0x488d56ff	                      lea rdx, [rsi - 1]	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4002afb	            0x7718	                            ja 0x4002b15	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4002afd	            0xeb2a	                           jmp 0x4002b29	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4002aff	              0x90	                                     nop	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4002b00	        0x440fb602	                   movzx r8d, byte [rdx]	      3912	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x4002b04	        0x4883ea01	                              sub rdx, 1	      3912	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x4002b08	          0x4589c1	                            mov r9d, r8d	      3912	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x4002b0b	        0x4183e1c0	                     and r9d, 0xffffffc0	      3912	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x4002b0f	        0x4180f980	                           cmp r9b, 0x80	      3912	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x4002b13	            0x7514	                           jne 0x4002b29	      3912	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x4002b15	          0x83c101	                              add ecx, 1	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4002b18	          0x4839d7	                            cmp rdi, rdx	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4002b1b	            0x75e3	                           jne 0x4002b00	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4002b1d	            0x89ca	                            mov edx, ecx	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4002b1f	            0xf7da	                                 neg edx	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4002b21	          0x4863d2	                         movsxd rdx, edx	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4002b24	      0x440fb60416	             movzx r8d, byte [rsi + rdx]	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4002b29	    0x410fbe900000	                    movsx edx, byte [r8]	      3914	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x4002b31	             0x1c1	                            add ecx, eax	      3914	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x4002b33	            0x39ca	                            cmp edx, ecx	      3903	mbyte.c	FUNCTION_72	IF_1	IF_2
0x4002b35	      0xba00000000	                              mov edx, 0	      3903	mbyte.c	FUNCTION_72	IF_1	IF_2
0x4002b3a	           0xf45c2	                         cmovne eax, edx	      3903	mbyte.c	FUNCTION_72	IF_1	IF_2
0x4002b3d	              0xc3	                                     ret	      3903	mbyte.c	FUNCTION_72	IF_1	IF_2
0x4002b3e	            0x6690	                                     nop	      3903	mbyte.c	FUNCTION_72	IF_1	IF_2
0x4002b40	    0xff2500000000	                  jmp qword [0x04002b46]	      3922	mbyte.c	FUNCTION_72
utf_uint2cells	DO,0:IF,1:CALL,2:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	27
0x4002030	    0x81ffff000000	                           cmp edi, 0xff	      1403	mbyte.c	ELSE_2	FUNCTION_19	IF_1	CALL_1
0x4002036	            0x7644	                           jbe 0x400207c	      1403	mbyte.c	ELSE_2	FUNCTION_19	IF_1	CALL_1
0x4002038	          0x4c63c7	                          movsxd r8, edi	      1192	mbyte.c	FUNCTION_18	IF_1
0x400203b	    0x4c3b05000000	              cmp r8, qword [0x04002042]	      1192	mbyte.c	FUNCTION_18	IF_1
0x4002042	            0x7c38	                            jl 0x400207c	      1192	mbyte.c	FUNCTION_18	IF_1
0x4002044	      0xbe06010000	                          mov esi, 0x106	      1192	mbyte.c	FUNCTION_18	IF_1
0x4002049	            0x31c9	                            xor ecx, ecx	      1192	mbyte.c	FUNCTION_18	IF_1
0x400204b	            0xeb0a	                           jmp 0x4002057	      1192	mbyte.c	FUNCTION_18	IF_1
0x400204d	           0xf1f00	                         nop dword [rax]	      1192	mbyte.c	FUNCTION_18	IF_1
0x4002050	          0x8d4801	                      lea ecx, [rax + 1]	      1202	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4002053	            0x39f1	                            cmp ecx, esi	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4002055	            0x7f25	                            jg 0x400207c	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4002057	          0x8d040e	                    lea eax, [rsi + rcx]	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x400205a	            0xd1f8	                              sar eax, 1	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x400205c	          0x4863d0	                         movsxd rdx, eax	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x400205f	        0x48c1e204	                              shl rdx, 4	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4002063	    0x4c3b82000000	                     cmp r8, qword [rdx]	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x400206a	            0x7fe4	                            jg 0x4002050	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x400206c	    0x4c3b82000000	                     cmp r8, qword [rdx]	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4002073	            0x7d13	                           jge 0x4002088	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4002075	          0x8d70ff	                      lea esi, [rax - 1]	      1204	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4002078	            0x39f1	                            cmp ecx, esi	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x400207a	            0x7edb	                           jle 0x4002057	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x400207c	      0xe92ffdffff	                  jmp sym.utf_char2cells	      1405	mbyte.c	ELSE_2	FUNCTION_19	CALL_2
0x4002081	     0xf1f80000000	                         nop dword [rax]	      1405	mbyte.c	ELSE_2	FUNCTION_19	CALL_2
0x4002088	            0x31c0	                            xor eax, eax	      1406	mbyte.c	ELSE_2	FUNCTION_19
0x400208a	              0xc3	                                     ret	      1406	mbyte.c	ELSE_2	FUNCTION_19
bomb_size	DO,0:IF,7:CALL,4:FOR,0:functions,0:ELSE,4:WHILE,0:SWITCH,0	54
0x4000f70	    0x488b15000000	            mov rdx, qword [0x04000f77] 	       826	mbyte.c	FUNCTION_5	IF_1
0x4000f77	            0x31c0	                            xor eax, eax	       824	mbyte.c	FUNCTION_5
0x4000f79	    0x8bb20c140000	          mov esi, dword [rdx + 0x140c] 	       826	mbyte.c	FUNCTION_5	IF_1
0x4000f7f	            0x85f6	                           test esi, esi	       826	mbyte.c	FUNCTION_5	IF_1
0x4000f81	     0xf84ac000000	                            je 0x4001033	       826	mbyte.c	FUNCTION_5	IF_1
0x4000f87	    0x8b8a08140000	          mov ecx, dword [rdx + 0x1408] 	       826	mbyte.c	FUNCTION_5	IF_1
0x4000f8d	            0x85c9	                           test ecx, ecx	       826	mbyte.c	FUNCTION_5	IF_1
0x4000f8f	     0xf859e000000	                           jne 0x4001033	       826	mbyte.c	FUNCTION_5	IF_1
0x4000f95	    0x488b92881400	          mov rdx, qword [rdx + 0x1488] 	       828	mbyte.c	FUNCTION_5	IF_1	IF_2
0x4000f9c	          0x803a00	                       cmp byte [rdx], 0	       828	mbyte.c	FUNCTION_5	IF_1	IF_2
0x4000f9f	            0x751f	                           jne 0x4000fc0	       828	mbyte.c	FUNCTION_5	IF_1	IF_2
0x4000fa1	    0x8b1500000000	            mov edx, dword [0x04000fa7] 	       830	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3
0x4000fa7	            0x85d2	                           test edx, edx	       830	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3
0x4000fa9	     0xf8484000000	                            je 0x4001033	       830	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3
0x4000faf	    0x8b0500000000	            mov eax, dword [0x04000fb5] 	       832	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3	IF_4
0x4000fb5	      0xba03000000	                              mov edx, 3	       835	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3	ELSE_1
0x4000fba	            0x85c0	                           test eax, eax	       835	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3	ELSE_1
0x4000fbc	           0xf44c2	                          cmove eax, edx	       835	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3	ELSE_1
0x4000fbf	              0xc3	                                     ret	       835	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3	ELSE_1
0x4000fc0	      0xb906000000	                              mov ecx, 6	       838	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5	CALL_1
0x4000fc5	          0x4889d6	                            mov rsi, rdx	       838	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5	CALL_1
0x4000fc8	      0xbf00000000	                              mov edi, 0	       838	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5	CALL_1
0x4000fcd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       838	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5	CALL_1
0x4000fcf	      0xb803000000	                              mov eax, 3	       835	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3	ELSE_1
0x4000fd4	        0x400f97c6	                                seta sil	       838	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5	CALL_1
0x4000fd8	           0xf92c1	                                 setb cl	       838	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5	CALL_1
0x4000fdb	          0x4038ce	                             cmp sil, cl	       838	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5	CALL_1
0x4000fde	            0x7453	                            je 0x4001033	       838	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5	CALL_1
0x4000fe0	      0xb905000000	                              mov ecx, 5	       840	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_2
0x4000fe5	          0x4889d6	                            mov rsi, rdx	       840	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_2
0x4000fe8	      0xbf00000000	                              mov edi, 0	       840	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_2
0x4000fed	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       840	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_2
0x4000fef	      0xb802000000	                              mov eax, 2	       842	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6
0x4000ff4	        0x400f97c6	                                seta sil	       840	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_2
0x4000ff8	           0xf92c1	                                 setb cl	       840	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_2
0x4000ffb	          0x4038ce	                             cmp sil, cl	       840	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_2
0x4000ffe	            0x7433	                            je 0x4001033	       840	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_2
0x4001000	      0xbf00000000	                              mov edi, 0	       841	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_3
0x4001005	      0xb906000000	                              mov ecx, 6	       841	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_3
0x400100a	          0x4889d6	                            mov rsi, rdx	       841	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_3
0x400100d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       841	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_3
0x400100f	            0x7422	                            je 0x4001033	       841	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_3
0x4001011	          0x4889d6	                            mov rsi, rdx	       843	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7	CALL_4
0x4001014	      0xbf00000000	                              mov edi, 0	       843	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7	CALL_4
0x4001019	      0xb905000000	                              mov ecx, 5	       843	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7	CALL_4
0x400101e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       843	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7	CALL_4
0x4001020	           0xf97c0	                                 seta al	       843	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7	CALL_4
0x4001023	           0xf92c2	                                 setb dl	       843	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7	CALL_4
0x4001026	            0x29d0	                            sub eax, edx	       843	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7	CALL_4
0x4001028	           0xfbec0	                           movsx eax, al	       843	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7	CALL_4
0x400102b	          0x83f801	                              cmp eax, 1	       844	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7
0x400102e	            0x19c0	                            sbb eax, eax	       844	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7
0x4001030	          0x83e004	                              and eax, 4	       844	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7
0x4001033	            0xf3c3	                                     ret	       847	mbyte.c	FUNCTION_5
utf_ambiguous_width	DO,0:IF,0:CALL,2:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	52
0x40022f0	            0x31c0	                            xor eax, eax	      2902	mbyte.c	FUNCTION_57	CALL_1
0x40022f2	          0x83ff7f	                           cmp edi, 0x7f	      2902	mbyte.c	FUNCTION_57	CALL_1
0x40022f5	     0xf8e95000000	                           jle 0x4002390	      2902	mbyte.c	FUNCTION_57	CALL_1
0x40022fb	          0x4863ff	                         movsxd rdi, edi	      1192	mbyte.c	FUNCTION_18	IF_1
0x40022fe	    0x48393d000000	            cmp qword [0x04002305], rdi 	      1192	mbyte.c	FUNCTION_18	IF_1
0x4002305	            0x7f39	                            jg 0x4002340	      1192	mbyte.c	FUNCTION_18	IF_1
0x4002307	      0xbeb2000000	                           mov esi, 0xb2	      1192	mbyte.c	FUNCTION_18	IF_1
0x400230c	            0x31c9	                            xor ecx, ecx	      1192	mbyte.c	FUNCTION_18	IF_1
0x400230e	            0xeb07	                           jmp 0x4002317	      1192	mbyte.c	FUNCTION_18	IF_1
0x4002310	          0x8d4801	                      lea ecx, [rax + 1]	      1202	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4002313	            0x39f1	                            cmp ecx, esi	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4002315	            0x7f29	                            jg 0x4002340	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4002317	          0x8d040e	                    lea eax, [rsi + rcx]	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x400231a	            0xd1f8	                              sar eax, 1	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x400231c	          0x4863d0	                         movsxd rdx, eax	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x400231f	        0x48c1e204	                              shl rdx, 4	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4002323	    0x483bba000000	                    cmp rdi, qword [rdx]	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x400232a	            0x7fe4	                            jg 0x4002310	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x400232c	    0x483bba000000	                    cmp rdi, qword [rdx]	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4002333	            0x7d63	                           jge 0x4002398	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4002335	          0x8d70ff	                      lea esi, [rax - 1]	      1204	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4002338	            0x39f1	                            cmp ecx, esi	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x400233a	            0x7edb	                           jle 0x4002317	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x400233c	         0xf1f4000	                         nop dword [rax]	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4002340	            0x31c0	                            xor eax, eax	      2902	mbyte.c	FUNCTION_57	CALL_1
0x4002342	    0x483b3d000000	            cmp rdi, qword [0x04002349] 	      1192	mbyte.c	FUNCTION_18	IF_1
0x4002349	            0x7c45	                            jl 0x4002390	      1192	mbyte.c	FUNCTION_18	IF_1
0x400234b	      0xbe8b000000	                           mov esi, 0x8b	      1192	mbyte.c	FUNCTION_18	IF_1
0x4002350	            0x31c9	                            xor ecx, ecx	      1192	mbyte.c	FUNCTION_18	IF_1
0x4002352	            0xeb0b	                           jmp 0x400235f	      1192	mbyte.c	FUNCTION_18	IF_1
0x4002354	         0xf1f4000	                         nop dword [rax]	      1192	mbyte.c	FUNCTION_18	IF_1
0x4002358	          0x8d4801	                      lea ecx, [rax + 1]	      1202	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x400235b	            0x39f1	                            cmp ecx, esi	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x400235d	            0x7f25	                            jg 0x4002384	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x400235f	          0x8d040e	                    lea eax, [rsi + rcx]	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x4002362	            0xd1f8	                              sar eax, 1	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x4002364	          0x4863d0	                         movsxd rdx, eax	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4002367	        0x48c1e204	                              shl rdx, 4	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x400236b	    0x483bba000000	                    cmp rdi, qword [rdx]	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4002372	            0x7fe4	                            jg 0x4002358	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4002374	    0x483bba000000	                    cmp rdi, qword [rdx]	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x400237b	            0x7d1b	                           jge 0x4002398	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x400237d	          0x8d70ff	                      lea esi, [rax - 1]	      1204	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4002380	            0x39f1	                            cmp ecx, esi	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4002382	            0x7edb	                           jle 0x400235f	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4002384	            0x31c0	                            xor eax, eax	      2902	mbyte.c	FUNCTION_57	CALL_1
0x4002386	              0xc3	                                     ret	      2902	mbyte.c	FUNCTION_57	CALL_1
0x4002387	    0x660f1f840000	                    nop word [rax + rax]	      2902	mbyte.c	FUNCTION_57	CALL_1
0x4002390	            0xf3c3	                                     ret	      2904	mbyte.c	FUNCTION_57
0x4002392	    0x660f1f440000	                    nop word [rax + rax]	      2904	mbyte.c	FUNCTION_57
0x4002398	      0xb801000000	                              mov eax, 1	      2902	mbyte.c	FUNCTION_57	CALL_1
0x400239d	              0xc3	                                     ret	      2902	mbyte.c	FUNCTION_57	CALL_1
utfc_ptr2len_len	DO,0:IF,6:CALL,3:FOR,0:functions,0:ELSE,0:WHILE,1:SWITCH,0	128
0x40015a0	            0x85f6	                           test esi, esi	      2192	mbyte.c	FUNCTION_49	IF_1
0x40015a2	            0x4155	                                push r13	      2186	mbyte.c	FUNCTION_49
0x40015a4	            0x4154	                                push r12	      2186	mbyte.c	FUNCTION_49
0x40015a6	              0x55	                                push rbp	      2186	mbyte.c	FUNCTION_49
0x40015a7	              0x53	                                push rbx	      2186	mbyte.c	FUNCTION_49
0x40015a8	     0xf8e02010000	                           jle 0x40016b0	      2192	mbyte.c	FUNCTION_49	IF_1
0x40015ae	        0x440fb607	                   movzx r8d, byte [rdi]	      2192	mbyte.c	FUNCTION_49	IF_1
0x40015b2	            0x31c0	                            xor eax, eax	      2193	mbyte.c	FUNCTION_49	IF_1
0x40015b4	          0x4584c0	                           test r8b, r8b	      2192	mbyte.c	FUNCTION_49	IF_1
0x40015b7	            0x7416	                            je 0x40015cf	      2192	mbyte.c	FUNCTION_49	IF_1
0x40015b9	     0xf8801010000	                            js 0x40016c0	      2194	mbyte.c	FUNCTION_49	IF_2
0x40015bf	          0x83fe01	                              cmp esi, 1	      2194	mbyte.c	FUNCTION_49	IF_2
0x40015c2	      0xb801000000	                              mov eax, 1	      2195	mbyte.c	FUNCTION_49	IF_2
0x40015c7	            0x7406	                            je 0x40015cf	      2194	mbyte.c	FUNCTION_49	IF_2
0x40015c9	        0x807f0100	                   cmp byte [rdi + 1], 0	      2194	mbyte.c	FUNCTION_49	IF_2
0x40015cd	            0x7807	                            js 0x40015d6	      2194	mbyte.c	FUNCTION_49	IF_2
0x40015cf	              0x5b	                                 pop rbx	      2236	mbyte.c	FUNCTION_49
0x40015d0	              0x5d	                                 pop rbp	      2236	mbyte.c	FUNCTION_49
0x40015d1	            0x415c	                                 pop r12	      2236	mbyte.c	FUNCTION_49
0x40015d3	            0x415d	                                 pop r13	      2236	mbyte.c	FUNCTION_49
0x40015d5	              0xc3	                                     ret	      2236	mbyte.c	FUNCTION_49
0x40015d6	        0x410fb6c0	                          movzx eax, r8b	      2120	mbyte.c	FUNCTION_47
0x40015da	    0x440fbea80000	                  movsx r13d, byte [rax]	      2120	mbyte.c	FUNCTION_47
0x40015e2	        0x4183fd01	                             cmp r13d, 1	      2121	mbyte.c	FUNCTION_47	IF_1
0x40015e6	     0xf85e6000000	                           jne 0x40016d2	      2121	mbyte.c	FUNCTION_47	IF_1
0x40015ec	          0x4d63c5	                         movsxd r8, r13d	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x40015ef	          0x4901f8	                             add r8, rdi	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x40015f2	        0x410fb610	                    movzx edx, byte [r8]	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x40015f6	            0x84d2	                             test dl, dl	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x40015f8	     0xf892e010000	                           jns 0x400172c	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x40015fe	          0x4889fd	                            mov rbp, rdi	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x4001601	            0x89f3	                            mov ebx, esi	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x4001603	            0x31ff	                            xor edi, edi	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x4001605	           0xf1f00	                         nop dword [rax]	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x4001608	     0xfbeb2000000	                   movsx esi, byte [rdx]	      2120	mbyte.c	FUNCTION_47
0x400160f	          0x4189d9	                            mov r9d, ebx	      2222	mbyte.c	FUNCTION_49	WHILE_1	CALL_2
0x4001612	    0x41bc01000000	                             mov r12d, 1	      2122	mbyte.c	FUNCTION_47	IF_1
0x4001618	          0x4529e9	                           sub r9d, r13d	      2222	mbyte.c	FUNCTION_49	WHILE_1	CALL_2
0x400161b	          0x83fe01	                              cmp esi, 1	      2121	mbyte.c	FUNCTION_47	IF_1
0x400161e	            0x7440	                            je 0x4001660	      2121	mbyte.c	FUNCTION_47	IF_1
0x4001620	          0x4139f1	                            cmp r9d, esi	      2121	mbyte.c	FUNCTION_47	IF_1
0x4001623	            0x89f2	                            mov edx, esi	      2121	mbyte.c	FUNCTION_47	IF_1
0x4001625	        0x410f4ed1	                         cmovle edx, r9d	      2121	mbyte.c	FUNCTION_47	IF_1
0x4001629	          0x83fa01	                              cmp edx, 1	      2127	mbyte.c	FUNCTION_47	FOR_1
0x400162c	            0x7e2f	                           jle 0x400165d	      2127	mbyte.c	FUNCTION_47	FOR_1
0x400162e	      0x410fb64001	                movzx eax, byte [r8 + 1]	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001633	          0x83e0c0	                     and eax, 0xffffffc0	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001636	            0x3c80	                            cmp al, 0x80	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001638	            0x7526	                           jne 0x4001660	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x400163a	          0x8d4afe	                      lea ecx, [rdx - 2]	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x400163d	          0x4c89c0	                             mov rax, r8	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001640	          0x4c01c1	                             add rcx, r8	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001643	            0xeb13	                           jmp 0x4001658	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001645	           0xf1f00	                         nop dword [rax]	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001648	         0xfb65002	               movzx edx, byte [rax + 2]	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x400164c	        0x4883c001	                              add rax, 1	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001650	          0x83e2c0	                     and edx, 0xffffffc0	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001653	          0x80fa80	                            cmp dl, 0x80	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001656	            0x7550	                           jne 0x40016a8	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001658	          0x4839c1	                            cmp rcx, rax	      2127	mbyte.c	FUNCTION_47	FOR_1
0x400165b	            0x75eb	                           jne 0x4001648	      2127	mbyte.c	FUNCTION_47	FOR_1
0x400165d	          0x4189f4	                           mov r12d, esi	      2127	mbyte.c	FUNCTION_47	FOR_1
0x4001660	          0x4539e1	                           cmp r9d, r12d	      2223	mbyte.c	FUNCTION_49	WHILE_1	IF_5
0x4001663	     0xf8cc3000000	                            jl 0x400172c	      2223	mbyte.c	FUNCTION_49	WHILE_1	IF_5
0x4001669	          0x4801ef	                            add rdi, rbp	      2226	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x400166c	          0x4c89c6	                             mov rsi, r8	      2226	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x400166f	      0xe800000000	                          call 0x4001674	      2226	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x4001674	            0x85c0	                           test eax, eax	      2226	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x4001676	     0xf84b0000000	                            je 0x400172c	      2226	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x400167c	        0x438d042c	                    lea eax, [r12 + r13]	      2233	mbyte.c	FUNCTION_49	WHILE_1
0x4001680	            0x39c3	                            cmp ebx, eax	      2211	mbyte.c	FUNCTION_49	WHILE_1
0x4001682	     0xf8e47ffffff	                           jle 0x40015cf	      2211	mbyte.c	FUNCTION_49	WHILE_1
0x4001688	          0x4c63c0	                          movsxd r8, eax	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x400168b	          0x4963fd	                        movsxd rdi, r13d	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x400168e	          0x4901e8	                             add r8, rbp	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x4001691	        0x410fb610	                    movzx edx, byte [r8]	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x4001695	            0x84d2	                             test dl, dl	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x4001697	     0xf8932ffffff	                           jns 0x40015cf	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x400169d	          0x4189c5	                           mov r13d, eax	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x40016a0	      0xe963ffffff	                           jmp 0x4001608	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x40016a5	           0xf1f00	                         nop dword [rax]	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x40016a8	    0x41bc01000000	                             mov r12d, 1	      2122	mbyte.c	FUNCTION_47	IF_1
0x40016ae	            0xebb0	                           jmp 0x4001660	      2122	mbyte.c	FUNCTION_47	IF_1
0x40016b0	              0x5b	                                 pop rbx	      2236	mbyte.c	FUNCTION_49
0x40016b1	            0x31c0	                            xor eax, eax	      2193	mbyte.c	FUNCTION_49	IF_1
0x40016b3	              0x5d	                                 pop rbp	      2236	mbyte.c	FUNCTION_49
0x40016b4	            0x415c	                                 pop r12	      2236	mbyte.c	FUNCTION_49
0x40016b6	            0x415d	                                 pop r13	      2236	mbyte.c	FUNCTION_49
0x40016b8	              0xc3	                                     ret	      2236	mbyte.c	FUNCTION_49
0x40016b9	     0xf1f80000000	                         nop dword [rax]	      2236	mbyte.c	FUNCTION_49
0x40016c0	        0x410fb6c0	                          movzx eax, r8b	      2120	mbyte.c	FUNCTION_47
0x40016c4	    0x440fbea80000	                  movsx r13d, byte [rax]	      2120	mbyte.c	FUNCTION_47
0x40016cc	        0x4183fd01	                             cmp r13d, 1	      2121	mbyte.c	FUNCTION_47	IF_1
0x40016d0	            0x7462	                            je 0x4001734	      2121	mbyte.c	FUNCTION_47	IF_1
0x40016d2	          0x4439ee	                           cmp esi, r13d	      2121	mbyte.c	FUNCTION_47	IF_1
0x40016d5	          0x4489ea	                           mov edx, r13d	      2121	mbyte.c	FUNCTION_47	IF_1
0x40016d8	           0xf4ed6	                         cmovle edx, esi	      2121	mbyte.c	FUNCTION_47	IF_1
0x40016db	          0x83fa01	                              cmp edx, 1	      2127	mbyte.c	FUNCTION_47	FOR_1
0x40016de	            0x7e35	                           jle 0x4001715	      2127	mbyte.c	FUNCTION_47	FOR_1
0x40016e0	         0xfb64701	               movzx eax, byte [rdi + 1]	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x40016e4	          0x83e0c0	                     and eax, 0xffffffc0	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x40016e7	            0x3c80	                            cmp al, 0x80	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x40016e9	            0x7553	                           jne 0x400173e	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x40016eb	          0x8d4afe	                      lea ecx, [rdx - 2]	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x40016ee	          0x4889f8	                            mov rax, rdi	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x40016f1	          0x4801f9	                            add rcx, rdi	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x40016f4	            0xeb1a	                           jmp 0x4001710	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x40016f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001700	         0xfb65002	               movzx edx, byte [rax + 2]	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001704	        0x4883c001	                              add rax, 1	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001708	          0x83e2c0	                     and edx, 0xffffffc0	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x400170b	          0x80fa80	                            cmp dl, 0x80	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x400170e	            0x752e	                           jne 0x400173e	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001710	          0x4839c1	                            cmp rcx, rax	      2127	mbyte.c	FUNCTION_47	FOR_1
0x4001713	            0x75eb	                           jne 0x4001700	      2127	mbyte.c	FUNCTION_47	FOR_1
0x4001715	          0x4439ee	                           cmp esi, r13d	      2201	mbyte.c	FUNCTION_49	IF_3
0x4001718	      0xb801000000	                              mov eax, 1	      2195	mbyte.c	FUNCTION_49	IF_2
0x400171d	     0xf8cacfeffff	                            jl 0x40015cf	      2201	mbyte.c	FUNCTION_49	IF_3
0x4001723	          0x4439ee	                           cmp esi, r13d	      2211	mbyte.c	FUNCTION_49	WHILE_1
0x4001726	     0xf8fc0feffff	                            jg 0x40015ec	      2211	mbyte.c	FUNCTION_49	WHILE_1
0x400172c	          0x4489e8	                           mov eax, r13d	      2211	mbyte.c	FUNCTION_49	WHILE_1
0x400172f	      0xe99bfeffff	                           jmp 0x40015cf	      2211	mbyte.c	FUNCTION_49	WHILE_1
0x4001734	      0xb801000000	                              mov eax, 1	      2195	mbyte.c	FUNCTION_49	IF_2
0x4001739	      0xe991feffff	                           jmp 0x40015cf	      2195	mbyte.c	FUNCTION_49	IF_2
0x400173e	          0x4584c0	                           test r8b, r8b	      2201	mbyte.c	FUNCTION_49	IF_3
0x4001741	            0x78f1	                            js 0x4001734	      2201	mbyte.c	FUNCTION_49	IF_3
0x4001743	    0x41bd01000000	                             mov r13d, 1	      2201	mbyte.c	FUNCTION_49	IF_3
0x4001749	            0xebd8	                           jmp 0x4001723	      2201	mbyte.c	FUNCTION_49	IF_3
mb_ptr2char_adv	DO,0:IF,0:CALL,0:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	16
0x4001250	              0x55	                                push rbp	      1893	mbyte.c	FUNCTION_37
0x4001251	              0x53	                                push rbx	      1893	mbyte.c	FUNCTION_37
0x4001252	          0x4889fb	                            mov rbx, rdi	      1893	mbyte.c	FUNCTION_37
0x4001255	        0x4883ec08	                              sub rsp, 8	      1893	mbyte.c	FUNCTION_37
0x4001259	          0x488b3f	                    mov rdi, qword [rdi]	      1896	mbyte.c	FUNCTION_37
0x400125c	    0xff1500000000	                 call qword [0x04001262]	      1896	mbyte.c	FUNCTION_37
0x4001262	          0x488b3b	                    mov rdi, qword [rbx]	      1897	mbyte.c	FUNCTION_37
0x4001265	            0x89c5	                            mov ebp, eax	      1896	mbyte.c	FUNCTION_37
0x4001267	    0xff1500000000	                 call qword [0x0400126d]	      1897	mbyte.c	FUNCTION_37
0x400126d	            0x4898	                                    cdqe	      1897	mbyte.c	FUNCTION_37
0x400126f	          0x480103	                    add qword [rbx], rax	      1897	mbyte.c	FUNCTION_37
0x4001272	        0x4883c408	                              add rsp, 8	      1899	mbyte.c	FUNCTION_37
0x4001276	            0x89e8	                            mov eax, ebp	      1899	mbyte.c	FUNCTION_37
0x4001278	              0x5b	                                 pop rbx	      1899	mbyte.c	FUNCTION_37
0x4001279	              0x5d	                                 pop rbp	      1899	mbyte.c	FUNCTION_37
0x400127a	              0xc3	                                     ret	      1899	mbyte.c	FUNCTION_37
utf_find_illegal	DO,0:IF,6:CALL,14:FOR,2:functions,0:ELSE,1:WHILE,1:SWITCH,0	209
0x40052f0	            0x4157	                                push r15	      3966	mbyte.c	FUNCTION_74
0x40052f2	            0x4156	                                push r14	      3966	mbyte.c	FUNCTION_74
0x40052f4	            0x4155	                                push r13	      3966	mbyte.c	FUNCTION_74
0x40052f6	            0x4154	                                push r12	      3966	mbyte.c	FUNCTION_74
0x40052f8	              0x55	                                push rbp	      3966	mbyte.c	FUNCTION_74
0x40052f9	              0x53	                                push rbx	      3966	mbyte.c	FUNCTION_74
0x40052fa	        0x4883ec38	                           sub rsp, 0x38	      3966	mbyte.c	FUNCTION_74
0x40052fe	    0x488b1d000000	            mov rbx, qword [0x04005305] 	      3967	mbyte.c	FUNCTION_74
0x4005305	    0x8b0d00000000	            mov ecx, dword [0x0400530b] 	      3974	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x400530b	    0x64488b042528	                mov rax, qword fs:[0x28]	      3966	mbyte.c	FUNCTION_74
0x4005314	      0x4889442428	             mov qword [rsp + 0x28], rax	      3966	mbyte.c	FUNCTION_74
0x4005319	            0x31c0	                            xor eax, eax	      3966	mbyte.c	FUNCTION_74
0x400531b	    0xc74424100000	               mov dword [rsp + 0x10], 0	      3973	mbyte.c	FUNCTION_74
0x4005323	          0x8b4344	            mov eax, dword [rbx + 0x44] 	      3967	mbyte.c	FUNCTION_74
0x4005326	            0x85c9	                           test ecx, ecx	      3974	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x4005328	        0x4c8b6b38	            mov r13, qword [rbx + 0x38] 	      3967	mbyte.c	FUNCTION_74
0x400532c	        0x448b6340	           mov r12d, dword [rbx + 0x40] 	      3967	mbyte.c	FUNCTION_74
0x4005330	        0x8944240c	              mov dword [rsp + 0xc], eax	      3967	mbyte.c	FUNCTION_74
0x4005334	            0x741e	                            je 0x4005354	      3974	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x4005336	    0x488b05000000	            mov rax, qword [0x0400533d] 	      3974	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x400533d	    0x4c8bb0881400	          mov r14, qword [rax + 0x1488] 	      3974	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x4005344	          0x4c89f7	                            mov rdi, r14	      3974	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x4005347	      0xe800000000	                          call 0x400534c	      3974	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x400534c	            0xa801	                              test al, 1	      3974	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x400534e	     0xf858c020000	                           jne 0x40055e0	      3974	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x4005354	    0xc74344000000	               mov dword [rbx + 0x44], 0	      3983	mbyte.c	FUNCTION_74
0x400535b	            0x31db	                            xor ebx, ebx	      3971	mbyte.c	FUNCTION_74
0x400535d	      0xe800000000	                          call 0x4005362	      3987	mbyte.c	FUNCTION_74	FOR_1	CALL_3
0x4005362	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      3988	mbyte.c	FUNCTION_74	FOR_1	IF_2
0x4005366	          0x4989c6	                            mov r14, rax	      3987	mbyte.c	FUNCTION_74	FOR_1	CALL_3
0x4005369	            0x85d2	                           test edx, edx	      3988	mbyte.c	FUNCTION_74	FOR_1	IF_2
0x400536b	     0xf85b7000000	                           jne 0x4005428	      3988	mbyte.c	FUNCTION_74	FOR_1	IF_2
0x4005371	        0x410fb636	                   movzx esi, byte [r14]	      3997	mbyte.c	FUNCTION_74	FOR_1	WHILE_1
0x4005375	          0x4084f6	                           test sil, sil	      3997	mbyte.c	FUNCTION_74	FOR_1	WHILE_1
0x4005378	            0x7470	                            je 0x40053ea	      3997	mbyte.c	FUNCTION_74	FOR_1	WHILE_1
0x400537a	    0x660f1f440000	                    nop word [rax + rax]	      3997	mbyte.c	FUNCTION_74	FOR_1	WHILE_1
0x4005380	        0x400fb6c6	                          movzx eax, sil	      2087	mbyte.c	FUNCTION_45
0x4005384	    0x440fbeb80000	                  movsx r15d, byte [rax]	      2087	mbyte.c	FUNCTION_45
0x400538c	        0x4183ff01	                             cmp r15d, 1	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4005390	          0x4489fd	                           mov ebp, r15d	      2087	mbyte.c	FUNCTION_45
0x4005393	            0x7e3c	                           jle 0x40053d1	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4005395	      0x410fb64601	               movzx eax, byte [r14 + 1]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x400539a	          0x83e0c0	                     and eax, 0xffffffc0	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x400539d	            0x3c80	                            cmp al, 0x80	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x400539f	     0xf85b3000000	                           jne 0x4005458	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40053a5	        0x418d4ffe	                      lea ecx, [r15 - 2]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40053a9	          0x4c89f0	                            mov rax, r14	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40053ac	          0x4c01f1	                            add rcx, r14	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40053af	            0xeb1b	                           jmp 0x40053cc	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40053b1	     0xf1f80000000	                         nop dword [rax]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40053b8	         0xfb65002	               movzx edx, byte [rax + 2]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40053bc	        0x4883c001	                              add rax, 1	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40053c0	          0x83e2c0	                     and edx, 0xffffffc0	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40053c3	          0x80fa80	                            cmp dl, 0x80	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40053c6	     0xf858c000000	                           jne 0x4005458	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40053cc	          0x4839c1	                            cmp rcx, rax	      2088	mbyte.c	FUNCTION_45	FOR_1
0x40053cf	            0x75e7	                           jne 0x40053b8	      2088	mbyte.c	FUNCTION_45	FOR_1
0x40053d1	          0x4084f6	                           test sil, sil	      4002	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4
0x40053d4	        0x480fbec5	                          movsx rax, bpl	      4002	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4
0x40053d8	     0xf8892000000	                            js 0x4005470	      4002	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4
0x40053de	          0x4901c6	                            add r14, rax	      4020	mbyte.c	FUNCTION_74	FOR_1	WHILE_1
0x40053e1	        0x410fb636	                   movzx esi, byte [r14]	      3997	mbyte.c	FUNCTION_74	FOR_1	WHILE_1
0x40053e5	          0x4084f6	                           test sil, sil	      3997	mbyte.c	FUNCTION_74	FOR_1	WHILE_1
0x40053e8	            0x7596	                           jne 0x4005380	      3997	mbyte.c	FUNCTION_74	FOR_1	WHILE_1
0x40053ea	    0x488b15000000	            mov rdx, qword [0x040053f1] 	      4022	mbyte.c	FUNCTION_74	FOR_1	IF_6
0x40053f1	    0x488b0d000000	            mov rcx, qword [0x040053f8] 	      4022	mbyte.c	FUNCTION_74	FOR_1	IF_6
0x40053f8	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      4022	mbyte.c	FUNCTION_74	FOR_1	IF_6
0x40053fc	          0x483b01	                    cmp rax, qword [rcx]	      4022	mbyte.c	FUNCTION_74	FOR_1	IF_6
0x40053ff	     0xf840f020000	                            je 0x4005614	      4022	mbyte.c	FUNCTION_74	FOR_1	IF_6
0x4005405	        0x4883c001	                              add rax, 1	      4024	mbyte.c	FUNCTION_74	FOR_1
0x4005409	    0xc74240000000	               mov dword [rdx + 0x40], 0	      4025	mbyte.c	FUNCTION_74	FOR_1
0x4005410	        0x48894238	             mov qword [rdx + 0x38], rax	      4024	mbyte.c	FUNCTION_74	FOR_1
0x4005414	      0xe800000000	                          call 0x4005419	      3987	mbyte.c	FUNCTION_74	FOR_1	CALL_3
0x4005419	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      3988	mbyte.c	FUNCTION_74	FOR_1	IF_2
0x400541d	          0x4989c6	                            mov r14, rax	      3987	mbyte.c	FUNCTION_74	FOR_1	CALL_3
0x4005420	            0x85d2	                           test edx, edx	      3988	mbyte.c	FUNCTION_74	FOR_1	IF_2
0x4005422	     0xf8449ffffff	                            je 0x4005371	      3988	mbyte.c	FUNCTION_74	FOR_1	IF_2
0x4005428	          0x4889df	                            mov rdi, rbx	      3990	mbyte.c	FUNCTION_74	FOR_1	IF_2	CALL_4
0x400542b	      0xe800000000	                          call 0x4005430	      3990	mbyte.c	FUNCTION_74	FOR_1	IF_2	CALL_4
0x4005430	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      6717	mbyte.c	FUNCTION_144	CALL_1
0x4005435	            0x31c9	                            xor ecx, ecx	      6717	mbyte.c	FUNCTION_144	CALL_1
0x4005437	            0x31d2	                            xor edx, edx	      6717	mbyte.c	FUNCTION_144	CALL_1
0x4005439	          0x4c89f6	                            mov rsi, r14	      6717	mbyte.c	FUNCTION_144	CALL_1
0x400543c	      0xe800000000	                          call 0x4005441	      6717	mbyte.c	FUNCTION_144	CALL_1
0x4005441	          0x4885c0	                           test rax, rax	      3992	mbyte.c	FUNCTION_74	FOR_1	IF_2	IF_3
0x4005444	          0x4989c6	                            mov r14, rax	      6717	mbyte.c	FUNCTION_144	CALL_1
0x4005447	     0xf84be010000	                            je 0x400560b	      3992	mbyte.c	FUNCTION_74	FOR_1	IF_2	IF_3
0x400544d	          0x4889c3	                            mov rbx, rax	      3992	mbyte.c	FUNCTION_74	FOR_1	IF_2	IF_3
0x4005450	      0xe91cffffff	                           jmp 0x4005371	      3992	mbyte.c	FUNCTION_74	FOR_1	IF_2	IF_3
0x4005455	           0xf1f00	                         nop dword [rax]	      3992	mbyte.c	FUNCTION_74	FOR_1	IF_2	IF_3
0x4005458	          0x4084f6	                           test sil, sil	      4002	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4
0x400545b	            0x782a	                            js 0x4005487	      4002	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4
0x400545d	      0xb801000000	                              mov eax, 1	      4002	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4
0x4005462	      0xe977ffffff	                           jmp 0x40053de	      4002	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4
0x4005467	    0x660f1f840000	                    nop word [rax + rax]	      4002	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4
0x4005470	        0x4183ff01	                             cmp r15d, 1	      4002	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4
0x4005474	            0x7411	                            je 0x4005487	      4002	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4
0x4005476	          0x4c89f7	                            mov rdi, r14	      4003	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_8
0x4005479	      0xe800000000	                          call 0x400547e	      4003	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_8
0x400547e	          0x83f87f	                           cmp eax, 0x7f	      2245	mbyte.c	FUNCTION_50	IF_1
0x4005481	     0xf8fe9000000	                            jg 0x4005570	      2245	mbyte.c	FUNCTION_50	IF_1
0x4005487	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      4005	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	IF_5
0x400548b	            0x85c0	                           test eax, eax	      4005	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	IF_5
0x400548d	     0xf8435010000	                            je 0x40055c8	      4005	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	IF_5
0x4005493	      0xe800000000	                          call 0x4005498	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x4005498	           0xfb610	                   movzx edx, byte [rax]	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x400549b	          0x4929de	                            sub r14, rbx	      4011	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1
0x400549e	            0x84d2	                             test dl, dl	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x40054a0	     0xf8482000000	                            je 0x4005528	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x40054a6	          0x4585f6	                         test r14d, r14d	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x40054a9	        0x458d4eff	                      lea r9d, [r14 - 1]	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x40054ad	            0x7e79	                           jle 0x4005528	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x40054af	    0x4c8b1d000000	            mov r11, qword [0x040054b6] 	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x40054b6	        0x458b4340	            mov r8d, dword [r11 + 0x40] 	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x40054ba	    0x660f1f440000	                    nop word [rax + rax]	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x40054c0	     0xfbeba000000	                   movsx edi, byte [rdx]	      2087	mbyte.c	FUNCTION_45
0x40054c7	          0x83ff01	                              cmp edi, 1	      2088	mbyte.c	FUNCTION_45	FOR_1
0x40054ca	          0x4189fa	                           mov r10d, edi	      2087	mbyte.c	FUNCTION_45
0x40054cd	            0x7e3a	                           jle 0x4005509	      2088	mbyte.c	FUNCTION_45	FOR_1
0x40054cf	         0xfb65001	               movzx edx, byte [rax + 1]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40054d3	          0x83e2c0	                     and edx, 0xffffffc0	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40054d6	          0x80fa80	                            cmp dl, 0x80	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40054d9	     0xf85cb000000	                           jne 0x40055aa	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40054df	          0x8d77fe	                      lea esi, [rdi - 2]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40054e2	          0x4889c2	                            mov rdx, rax	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40054e5	          0x4801c6	                            add rsi, rax	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40054e8	            0xeb1a	                           jmp 0x4005504	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40054ea	    0x660f1f440000	                    nop word [rax + rax]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40054f0	         0xfb64a02	               movzx ecx, byte [rdx + 2]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40054f4	        0x4883c201	                              add rdx, 1	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40054f8	          0x83e1c0	                     and ecx, 0xffffffc0	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40054fb	          0x80f980	                            cmp cl, 0x80	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40054fe	     0xf85a6000000	                           jne 0x40055aa	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4005504	          0x4839d6	                            cmp rsi, rdx	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4005507	            0x75e7	                           jne 0x40054f0	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4005509	        0x490fbed2	                         movsx rdx, r10b	      2088	mbyte.c	FUNCTION_45	FOR_1
0x400550d	          0x4101f8	                            add r8d, edi	      4015	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2
0x4005510	          0x4801d0	                            add rax, rdx	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x4005513	        0x45894340	             mov dword [r11 + 0x40], r8d	      4015	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2
0x4005517	           0xfb610	                   movzx edx, byte [rax]	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x400551a	            0x84d2	                             test dl, dl	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x400551c	            0x740a	                            je 0x4005528	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x400551e	        0x4183e901	                              sub r9d, 1	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x4005522	        0x4183f9ff	             cmp r9d, 0xffffffffffffffff	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x4005526	            0x7598	                           jne 0x40054c0	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x4005528	          0x4889df	                            mov rdi, rbx	      4033	mbyte.c	FUNCTION_74	CALL_13
0x400552b	      0xe800000000	                          call 0x4005530	      4033	mbyte.c	FUNCTION_74	CALL_13
0x4005530	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      6531	mbyte.c	FUNCTION_140	CALL_1
0x4005535	            0x31c9	                            xor ecx, ecx	      6531	mbyte.c	FUNCTION_140	CALL_1
0x4005537	            0x31f6	                            xor esi, esi	      6531	mbyte.c	FUNCTION_140	CALL_1
0x4005539	    0x41b801000000	                              mov r8d, 1	      6531	mbyte.c	FUNCTION_140	CALL_1
0x400553f	      0xba01000000	                              mov edx, 1	      6531	mbyte.c	FUNCTION_140	CALL_1
0x4005544	      0xe800000000	                          call 0x4005549	      6531	mbyte.c	FUNCTION_140	CALL_1
0x4005549	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      4035	mbyte.c	FUNCTION_74
0x400554e	    0x644833042528	                xor rax, qword fs:[0x28]	      4035	mbyte.c	FUNCTION_74
0x4005557	     0xf85d0000000	                           jne 0x400562d	      4035	mbyte.c	FUNCTION_74
0x400555d	        0x4883c438	                           add rsp, 0x38	      4035	mbyte.c	FUNCTION_74
0x4005561	              0x5b	                                 pop rbx	      4035	mbyte.c	FUNCTION_74
0x4005562	              0x5d	                                 pop rbp	      4035	mbyte.c	FUNCTION_74
0x4005563	            0x415c	                                 pop r12	      4035	mbyte.c	FUNCTION_74
0x4005565	            0x415d	                                 pop r13	      4035	mbyte.c	FUNCTION_74
0x4005567	            0x415e	                                 pop r14	      4035	mbyte.c	FUNCTION_74
0x4005569	            0x415f	                                 pop r15	      4035	mbyte.c	FUNCTION_74
0x400556b	              0xc3	                                     ret	      4035	mbyte.c	FUNCTION_74
0x400556c	         0xf1f4000	                         nop dword [rax]	      4035	mbyte.c	FUNCTION_74
0x4005570	      0x3dff070000	                          cmp eax, 0x7ff	      2247	mbyte.c	FUNCTION_50	IF_2
0x4005575	      0xba02000000	                              mov edx, 2	      2248	mbyte.c	FUNCTION_50	IF_2
0x400557a	            0x7e1c	                           jle 0x4005598	      2247	mbyte.c	FUNCTION_50	IF_2
0x400557c	      0x3dffff0000	                         cmp eax, 0xffff	      2249	mbyte.c	FUNCTION_50	IF_3
0x4005581	      0xba03000000	                              mov edx, 3	      2250	mbyte.c	FUNCTION_50	IF_3
0x4005586	            0x7e10	                           jle 0x4005598	      2249	mbyte.c	FUNCTION_50	IF_3
0x4005588	      0x3dffff1f00	                       cmp eax, 0x1fffff	      2251	mbyte.c	FUNCTION_50	IF_4
0x400558d	      0xba04000000	                              mov edx, 4	      2252	mbyte.c	FUNCTION_50	IF_4
0x4005592	            0x7f25	                            jg 0x40055b9	      2251	mbyte.c	FUNCTION_50	IF_4
0x4005594	         0xf1f4000	                         nop dword [rax]	      2251	mbyte.c	FUNCTION_50	IF_4
0x4005598	          0x4139d7	                           cmp r15d, edx	      4003	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_8
0x400559b	     0xf85e6feffff	                           jne 0x4005487	      4003	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_8
0x40055a1	        0x480fbec5	                          movsx rax, bpl	      4003	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_8
0x40055a5	      0xe934feffff	                           jmp 0x40053de	      4003	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_8
0x40055aa	      0xba01000000	                              mov edx, 1	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40055af	      0xbf01000000	                              mov edi, 1	      2090	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40055b4	      0xe954ffffff	                           jmp 0x400550d	      2090	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40055b9	            0x31d2	                            xor edx, edx	      2254	mbyte.c	FUNCTION_50	IF_5
0x40055bb	      0x3dffffff03	                      cmp eax, 0x3ffffff	      2254	mbyte.c	FUNCTION_50	IF_5
0x40055c0	           0xf9fc2	                                 setg dl	      2254	mbyte.c	FUNCTION_50	IF_5
0x40055c3	          0x83c205	                              add edx, 5	      2254	mbyte.c	FUNCTION_50	IF_5
0x40055c6	            0xebd0	                           jmp 0x4005598	      2254	mbyte.c	FUNCTION_50	IF_5
0x40055c8	      0xe800000000	                          call 0x40055cd	      4006	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_9
0x40055cd	    0x488b15000000	            mov rdx, qword [0x040055d4] 	      4006	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_9
0x40055d4	          0x4929c6	                            sub r14, rax	      4006	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_9
0x40055d7	        0x44017240	            add dword [rdx + 0x40], r14d	      4006	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_9
0x40055db	      0xe948ffffff	                           jmp 0x4005528	      4006	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_9
0x40055e0	    0x488b35000000	            mov rsi, qword [0x040055e7] 	      6531	mbyte.c	FUNCTION_140	CALL_1
0x40055e7	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      6531	mbyte.c	FUNCTION_140	CALL_1
0x40055ec	    0x41b801000000	                              mov r8d, 1	      6531	mbyte.c	FUNCTION_140	CALL_1
0x40055f2	          0x4c89f1	                            mov rcx, r14	      6531	mbyte.c	FUNCTION_140	CALL_1
0x40055f5	      0xba01000000	                              mov edx, 1	      6531	mbyte.c	FUNCTION_140	CALL_1
0x40055fa	      0xe800000000	                          call 0x40055ff	      6531	mbyte.c	FUNCTION_140	CALL_1
0x40055ff	    0x488b1d000000	            mov rbx, qword [0x04005606] 	      6531	mbyte.c	FUNCTION_140	CALL_1
0x4005606	      0xe949fdffff	                           jmp 0x4005354	      6531	mbyte.c	FUNCTION_140	CALL_1
0x400560b	    0x488b15000000	            mov rdx, qword [0x04005612] 	      6531	mbyte.c	FUNCTION_140	CALL_1
0x4005612	            0x31db	                            xor ebx, ebx	      3992	mbyte.c	FUNCTION_74	FOR_1	IF_2	IF_3
0x4005614	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      4029	mbyte.c	FUNCTION_74
0x4005618	        0x4c896a38	             mov qword [rdx + 0x38], r13	      4029	mbyte.c	FUNCTION_74
0x400561c	        0x44896240	            mov dword [rdx + 0x40], r12d	      4029	mbyte.c	FUNCTION_74
0x4005620	          0x894244	             mov dword [rdx + 0x44], eax	      4029	mbyte.c	FUNCTION_74
0x4005623	      0xe800000000	                          call 0x4005628	      4030	mbyte.c	FUNCTION_74	CALL_12
0x4005628	      0xe9fbfeffff	                           jmp 0x4005528	      4030	mbyte.c	FUNCTION_74	CALL_12
0x400562d	      0xe800000000	                          call 0x4005632	      4035	mbyte.c	FUNCTION_74
mb_get_class	DO,0:IF,0:CALL,1:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	2
0x40022d0	    0x488b35000000	            mov rsi, qword [0x040022d7] 	       879	mbyte.c	ELSE_1	FUNCTION_7	CALL_1
0x40022d7	      0xe964ffffff	                jmp sym.mb_get_class_buf	       879	mbyte.c	ELSE_1	FUNCTION_7	CALL_1
utf_isupper	DO,0:IF,0:CALL,1:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	8
0x40024e0	              0x53	                                push rbx	      3578	mbyte.c	FUNCTION_63
0x40024e1	            0x89fb	                            mov ebx, edi	      3578	mbyte.c	FUNCTION_63
0x40024e3	      0xe800000000	                          call 0x40024e8	      3579	mbyte.c	FUNCTION_63	CALL_1
0x40024e8	            0x39c3	                            cmp ebx, eax	      3579	mbyte.c	FUNCTION_63	CALL_1
0x40024ea	           0xf95c0	                                setne al	      3579	mbyte.c	FUNCTION_63	CALL_1
0x40024ed	           0xfb6c0	                           movzx eax, al	      3579	mbyte.c	FUNCTION_63	CALL_1
0x40024f0	              0x5b	                                 pop rbx	      3580	mbyte.c	FUNCTION_63
0x40024f1	              0xc3	                                     ret	      3580	mbyte.c	FUNCTION_63
mb_string2cells	DO,0:IF,0:CALL,0:FOR,1:functions,0:ELSE,0:WHILE,0:SWITCH,0	46
0x40011d0	            0x4157	                                push r15	      1723	mbyte.c	FUNCTION_29
0x40011d2	            0x4156	                                push r14	      1723	mbyte.c	FUNCTION_29
0x40011d4	            0x89f0	                            mov eax, esi	      1727	mbyte.c	FUNCTION_29	FOR_1
0x40011d6	            0x4155	                                push r13	      1723	mbyte.c	FUNCTION_29
0x40011d8	            0x4154	                                push r12	      1723	mbyte.c	FUNCTION_29
0x40011da	          0xc1e81f	                           shr eax, 0x1f	      1727	mbyte.c	FUNCTION_29	FOR_1
0x40011dd	              0x55	                                push rbp	      1723	mbyte.c	FUNCTION_29
0x40011de	              0x53	                                push rbx	      1723	mbyte.c	FUNCTION_29
0x40011df	        0x4883ec08	                              sub rsp, 8	      1723	mbyte.c	FUNCTION_29
0x40011e3	            0x85f6	                           test esi, esi	      1727	mbyte.c	FUNCTION_29	FOR_1
0x40011e5	            0x7456	                            je 0x400123d	      1727	mbyte.c	FUNCTION_29	FOR_1
0x40011e7	          0x803f00	                       cmp byte [rdi], 0	      1727	mbyte.c	FUNCTION_29	FOR_1
0x40011ea	            0x7451	                            je 0x400123d	      1727	mbyte.c	FUNCTION_29	FOR_1
0x40011ec	          0x4189c6	                           mov r14d, eax	      1727	mbyte.c	FUNCTION_29	FOR_1
0x40011ef	          0x4189f4	                           mov r12d, esi	      1727	mbyte.c	FUNCTION_29	FOR_1
0x40011f2	          0x4989fd	                            mov r13, rdi	      1727	mbyte.c	FUNCTION_29	FOR_1
0x40011f5	            0x31ed	                            xor ebp, ebp	      1727	mbyte.c	FUNCTION_29	FOR_1
0x40011f7	          0x4531ff	                          xor r15d, r15d	      1727	mbyte.c	FUNCTION_29	FOR_1
0x40011fa	          0x4889fb	                            mov rbx, rdi	      1727	mbyte.c	FUNCTION_29	FOR_1
0x40011fd	            0xeb0c	                           jmp 0x400120b	      1727	mbyte.c	FUNCTION_29	FOR_1
0x40011ff	              0x90	                                     nop	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4001200	          0x4963df	                        movsxd rbx, r15d	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4001203	          0x4c01eb	                            add rbx, r13	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4001206	          0x803b00	                       cmp byte [rbx], 0	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4001209	            0x7421	                            je 0x400122c	      1727	mbyte.c	FUNCTION_29	FOR_1
0x400120b	          0x4889df	                            mov rdi, rbx	      1728	mbyte.c	FUNCTION_29	FOR_1
0x400120e	    0xff1500000000	                 call qword [0x04001214]	      1728	mbyte.c	FUNCTION_29	FOR_1
0x4001214	          0x4889df	                            mov rdi, rbx	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4001217	             0x1c5	                            add ebp, eax	      1728	mbyte.c	FUNCTION_29	FOR_1
0x4001219	    0xff1500000000	                 call qword [0x0400121f]	      1727	mbyte.c	FUNCTION_29	FOR_1
0x400121f	          0x4101c7	                           add r15d, eax	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4001222	          0x4539fc	                          cmp r12d, r15d	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4001225	            0x7fd9	                            jg 0x4001200	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4001227	          0x4584f6	                         test r14b, r14b	      1727	mbyte.c	FUNCTION_29	FOR_1
0x400122a	            0x75d4	                           jne 0x4001200	      1727	mbyte.c	FUNCTION_29	FOR_1
0x400122c	        0x4883c408	                              add rsp, 8	      1730	mbyte.c	FUNCTION_29
0x4001230	            0x89e8	                            mov eax, ebp	      1730	mbyte.c	FUNCTION_29
0x4001232	              0x5b	                                 pop rbx	      1730	mbyte.c	FUNCTION_29
0x4001233	              0x5d	                                 pop rbp	      1730	mbyte.c	FUNCTION_29
0x4001234	            0x415c	                                 pop r12	      1730	mbyte.c	FUNCTION_29
0x4001236	            0x415d	                                 pop r13	      1730	mbyte.c	FUNCTION_29
0x4001238	            0x415e	                                 pop r14	      1730	mbyte.c	FUNCTION_29
0x400123a	            0x415f	                                 pop r15	      1730	mbyte.c	FUNCTION_29
0x400123c	              0xc3	                                     ret	      1730	mbyte.c	FUNCTION_29
0x400123d	            0x31ed	                            xor ebp, ebp	      1725	mbyte.c	FUNCTION_29
0x400123f	            0xebeb	                           jmp 0x400122c	      1725	mbyte.c	FUNCTION_29
mb_cptr2char_adv	DO,0:IF,1:CALL,1:FOR,0:functions,0:ELSE,1:WHILE,0:SWITCH,0	55
0x4001280	              0x55	                                push rbp	      1907	mbyte.c	FUNCTION_38
0x4001281	              0x53	                                push rbx	      1907	mbyte.c	FUNCTION_38
0x4001282	          0x4889fb	                            mov rbx, rdi	      1907	mbyte.c	FUNCTION_38
0x4001285	        0x4883ec08	                              sub rsp, 8	      1907	mbyte.c	FUNCTION_38
0x4001289	          0x488b3f	                    mov rdi, qword [rdi]	      1910	mbyte.c	FUNCTION_38
0x400128c	    0xff1500000000	                 call qword [0x04001292]	      1910	mbyte.c	FUNCTION_38
0x4001292	            0x89c5	                            mov ebp, eax	      1910	mbyte.c	FUNCTION_38
0x4001294	    0x8b0500000000	            mov eax, dword [0x0400129a] 	      1911	mbyte.c	FUNCTION_38	IF_1
0x400129a	          0x488b3b	                    mov rdi, qword [rbx]	      1912	mbyte.c	FUNCTION_38	CALL_1
0x400129d	            0x85c0	                           test eax, eax	      1911	mbyte.c	FUNCTION_38	IF_1
0x400129f	            0x745f	                            je 0x4001300	      1911	mbyte.c	FUNCTION_38	IF_1
0x40012a1	           0xfb617	                   movzx edx, byte [rdi]	      2085	mbyte.c	FUNCTION_45	IF_1
0x40012a4	            0x31c0	                            xor eax, eax	      2085	mbyte.c	FUNCTION_45	IF_1
0x40012a6	            0x84d2	                             test dl, dl	      2085	mbyte.c	FUNCTION_45	IF_1
0x40012a8	            0x743f	                            je 0x40012e9	      2085	mbyte.c	FUNCTION_45	IF_1
0x40012aa	     0xfbe92000000	                   movsx edx, byte [rdx]	      2087	mbyte.c	FUNCTION_45
0x40012b1	          0x83fa01	                              cmp edx, 1	      2088	mbyte.c	FUNCTION_45	FOR_1
0x40012b4	            0x89d6	                            mov esi, edx	      2087	mbyte.c	FUNCTION_45
0x40012b6	            0x7e2d	                           jle 0x40012e5	      2088	mbyte.c	FUNCTION_45	FOR_1
0x40012b8	         0xfb64701	               movzx eax, byte [rdi + 1]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40012bc	          0x83e0c0	                     and eax, 0xffffffc0	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40012bf	            0x3c80	                            cmp al, 0x80	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40012c1	            0x7555	                           jne 0x4001318	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40012c3	          0x8d4afe	                      lea ecx, [rdx - 2]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40012c6	          0x4889f8	                            mov rax, rdi	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40012c9	          0x4801f9	                            add rcx, rdi	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40012cc	            0xeb12	                           jmp 0x40012e0	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40012ce	            0x6690	                                     nop	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40012d0	         0xfb65002	               movzx edx, byte [rax + 2]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40012d4	        0x4883c001	                              add rax, 1	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40012d8	          0x83e2c0	                     and edx, 0xffffffc0	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40012db	          0x80fa80	                            cmp dl, 0x80	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40012de	            0x7538	                           jne 0x4001318	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40012e0	          0x4839c8	                            cmp rax, rcx	      2088	mbyte.c	FUNCTION_45	FOR_1
0x40012e3	            0x75eb	                           jne 0x40012d0	      2088	mbyte.c	FUNCTION_45	FOR_1
0x40012e5	        0x480fbec6	                          movsx rax, sil	      2088	mbyte.c	FUNCTION_45	FOR_1
0x40012e9	          0x4801f8	                            add rax, rdi	      1912	mbyte.c	FUNCTION_38	CALL_1
0x40012ec	          0x488903	                    mov qword [rbx], rax	      1912	mbyte.c	FUNCTION_38	CALL_1
0x40012ef	        0x4883c408	                              add rsp, 8	      1916	mbyte.c	FUNCTION_38
0x40012f3	            0x89e8	                            mov eax, ebp	      1916	mbyte.c	FUNCTION_38
0x40012f5	              0x5b	                                 pop rbx	      1916	mbyte.c	FUNCTION_38
0x40012f6	              0x5d	                                 pop rbp	      1916	mbyte.c	FUNCTION_38
0x40012f7	              0xc3	                                     ret	      1916	mbyte.c	FUNCTION_38
0x40012f8	     0xf1f84000000	                   nop dword [rax + rax]	      1916	mbyte.c	FUNCTION_38
0x4001300	    0xff1500000000	                 call qword [0x04001306]	      1914	mbyte.c	FUNCTION_38	ELSE_1
0x4001306	            0x4898	                                    cdqe	      1914	mbyte.c	FUNCTION_38	ELSE_1
0x4001308	          0x480103	                    add qword [rbx], rax	      1914	mbyte.c	FUNCTION_38	ELSE_1
0x400130b	        0x4883c408	                              add rsp, 8	      1916	mbyte.c	FUNCTION_38
0x400130f	            0x89e8	                            mov eax, ebp	      1916	mbyte.c	FUNCTION_38
0x4001311	              0x5b	                                 pop rbx	      1916	mbyte.c	FUNCTION_38
0x4001312	              0x5d	                                 pop rbp	      1916	mbyte.c	FUNCTION_38
0x4001313	              0xc3	                                     ret	      1916	mbyte.c	FUNCTION_38
0x4001314	         0xf1f4000	                         nop dword [rax]	      1916	mbyte.c	FUNCTION_38
0x4001318	      0xb801000000	                              mov eax, 1	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x400131d	            0xebca	                           jmp 0x40012e9	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
utf_convert	DO,0:IF,2:CALL,0:FOR,0:functions,0:ELSE,2:WHILE,1:SWITCH,0	56
0x4000460	          0x4863d2	                         movsxd rdx, edx	      3132	mbyte.c	FUNCTION_58
0x4000463	          0x4531d2	                          xor r10d, r10d	      3134	mbyte.c	FUNCTION_58
0x4000466	        0x48c1ea04	                              shr rdx, 4	      3132	mbyte.c	FUNCTION_58
0x400046a	          0x4189d0	                            mov r8d, edx	      3135	mbyte.c	FUNCTION_58
0x400046d	          0x4539c2	                           cmp r10d, r8d	      3136	mbyte.c	FUNCTION_58	WHILE_1
0x4000470	            0x7d4e	                           jge 0x40004c0	      3136	mbyte.c	FUNCTION_58	WHILE_1
0x4000472	        0x438d0c02	                     lea ecx, [r10 + r8]	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x4000476	          0x4189c9	                            mov r9d, ecx	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x4000479	        0x41c1e91f	                           shr r9d, 0x1f	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x400047d	          0x4101c9	                            add r9d, ecx	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x4000480	          0x41d1f9	                              sar r9d, 1	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x4000483	          0x4963c1	                         movsxd rax, r9d	      3140	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x4000486	        0x48c1e004	                              shl rax, 4	      3140	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x400048a	        0x3b7c0604	         cmp edi, dword [rsi + rax + 4] 	      3140	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x400048e	            0x7e2b	                           jle 0x40004bb	      3140	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x4000490	            0xeb5c	                           jmp 0x40004ee	      3140	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x4000492	    0x660f1f440000	                    nop word [rax + rax]	      3140	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x4000498	        0x438d0c0a	                     lea ecx, [r10 + r9]	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x400049c	          0x4189c8	                            mov r8d, ecx	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x400049f	        0x41c1e81f	                           shr r8d, 0x1f	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x40004a3	          0x4401c1	                            add ecx, r8d	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x40004a6	            0xd1f9	                              sar ecx, 1	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x40004a8	          0x4c63c1	                          movsxd r8, ecx	      3140	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x40004ab	            0x89c8	                            mov eax, ecx	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x40004ad	        0x49c1e004	                               shl r8, 4	      3140	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x40004b1	      0x42397c0604	          cmp dword [rsi + r8 + 4], edi 	      3140	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x40004b6	            0x7c40	                            jl 0x40004f8	      3140	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x40004b8	          0x4189c9	                            mov r9d, ecx	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x40004bb	          0x4539ca	                           cmp r10d, r9d	      3136	mbyte.c	FUNCTION_58	WHILE_1
0x40004be	            0x7cd8	                            jl 0x4000498	      3136	mbyte.c	FUNCTION_58	WHILE_1
0x40004c0	          0x4439d2	                           cmp edx, r10d	      3145	mbyte.c	FUNCTION_58	IF_2
0x40004c3	            0x7e26	                           jle 0x40004eb	      3145	mbyte.c	FUNCTION_58	IF_2
0x40004c5	          0x4d63d2	                        movsxd r10, r10d	      3146	mbyte.c	FUNCTION_58	IF_2
0x40004c8	        0x49c1e204	                              shl r10, 4	      3146	mbyte.c	FUNCTION_58	IF_2
0x40004cc	          0x4c01d6	                            add rsi, r10	      3146	mbyte.c	FUNCTION_58	IF_2
0x40004cf	            0x8b06	                    mov eax, dword [rsi]	      3146	mbyte.c	FUNCTION_58	IF_2
0x40004d1	            0x39c7	                            cmp edi, eax	      3146	mbyte.c	FUNCTION_58	IF_2
0x40004d3	            0x7c16	                            jl 0x40004eb	      3146	mbyte.c	FUNCTION_58	IF_2
0x40004d5	          0x3b7e04	                cmp edi, dword [rsi + 4]	      3147	mbyte.c	FUNCTION_58	IF_2
0x40004d8	            0x7f11	                            jg 0x40004eb	      3147	mbyte.c	FUNCTION_58	IF_2
0x40004da	            0x89fa	                            mov edx, edi	      3148	mbyte.c	FUNCTION_58	IF_2
0x40004dc	            0x29c2	                            sub edx, eax	      3148	mbyte.c	FUNCTION_58	IF_2
0x40004de	            0x89d0	                            mov eax, edx	      3148	mbyte.c	FUNCTION_58	IF_2
0x40004e0	              0x99	                                     cdq	      3148	mbyte.c	FUNCTION_58	IF_2
0x40004e1	          0xf77e08	                    idiv dword [rsi + 8]	      3148	mbyte.c	FUNCTION_58	IF_2
0x40004e4	            0x85d2	                           test edx, edx	      3148	mbyte.c	FUNCTION_58	IF_2
0x40004e6	            0x7503	                           jne 0x40004eb	      3148	mbyte.c	FUNCTION_58	IF_2
0x40004e8	           0x37e0c	              add edi, dword [rsi + 0xc]	      3149	mbyte.c	FUNCTION_58	IF_2
0x40004eb	            0x89f8	                            mov eax, edi	      3152	mbyte.c	FUNCTION_58	ELSE_2
0x40004ed	              0xc3	                                     ret	      3152	mbyte.c	FUNCTION_58	ELSE_2
0x40004ee	          0x4489c8	                            mov eax, r9d	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x40004f1	          0x4589c1	                            mov r9d, r8d	      3140	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x40004f4	         0xf1f4000	                         nop dword [rax]	      3140	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x40004f8	        0x448d5001	                     lea r10d, [rax + 1]	      3141	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x40004fc	          0x4589c8	                            mov r8d, r9d	      3141	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x40004ff	      0xe969ffffff	                           jmp 0x400046d	      3141	mbyte.c	FUNCTION_58	WHILE_1	IF_1
im_synthesize_keypress	DO,0:IF,0:CALL,10:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	41
0x4000860	            0x4154	                                push r12	      5659	mbyte.c	FUNCTION_120
0x4000862	              0x55	                                push rbp	      5659	mbyte.c	FUNCTION_120
0x4000863	            0x89fd	                            mov ebp, edi	      5659	mbyte.c	FUNCTION_120
0x4000865	              0x53	                                push rbx	      5659	mbyte.c	FUNCTION_120
0x4000866	      0xbf08000000	                              mov edi, 8	      5662	mbyte.c	FUNCTION_120	CALL_1
0x400086b	          0x4189f4	                           mov r12d, esi	      5659	mbyte.c	FUNCTION_120
0x400086e	      0xe800000000	                          call 0x4000873	      5662	mbyte.c	FUNCTION_120	CALL_1
0x4000873	          0x4889c3	                            mov rbx, rax	      5662	mbyte.c	FUNCTION_120	CALL_1
0x4000876	    0x488b05000000	            mov rax, qword [0x0400087d] 	      5667	mbyte.c	FUNCTION_120	CALL_4
0x400087d	        0x488b7850	            mov rdi, qword [rax + 0x50] 	      5667	mbyte.c	FUNCTION_120	CALL_4
0x4000881	      0xe800000000	                          call 0x4000886	      5667	mbyte.c	FUNCTION_120	CALL_4
0x4000886	    0x488b05000000	            mov rax, qword [0x0400088d] 	      5672	mbyte.c	FUNCTION_120
0x400088d	        0x488b7850	            mov rdi, qword [rax + 0x50] 	      5672	mbyte.c	FUNCTION_120
0x4000891	        0x44896318	            mov dword [rbx + 0x18], r12d	      5676	mbyte.c	FUNCTION_120
0x4000895	          0x896b1c	             mov dword [rbx + 0x1c], ebp	      5677	mbyte.c	FUNCTION_120
0x4000898	        0xc6431001	                mov byte [rbx + 0x10], 1	      5674	mbyte.c	FUNCTION_120
0x400089c	    0xc74314000000	               mov dword [rbx + 0x14], 0	      5675	mbyte.c	FUNCTION_120
0x40008a3	        0x48897b08	                mov qword [rbx + 8], rdi	      5672	mbyte.c	FUNCTION_120
0x40008a7	      0xe800000000	                          call 0x40008ac	      5679	mbyte.c	FUNCTION_120	CALL_7
0x40008ac	          0x4889c7	                            mov rdi, rax	      5679	mbyte.c	FUNCTION_120	CALL_7
0x40008af	      0xe800000000	                          call 0x40008b4	      5679	mbyte.c	FUNCTION_120	CALL_7
0x40008b4	            0x89ee	                            mov esi, ebp	      5679	mbyte.c	FUNCTION_120	CALL_7
0x40008b6	          0x4889c7	                            mov rdi, rax	      5679	mbyte.c	FUNCTION_120	CALL_7
0x40008b9	      0xe800000000	                          call 0x40008be	      5679	mbyte.c	FUNCTION_120	CALL_7
0x40008be	    0x488b3d000000	            mov rdi, qword [0x040008c5] 	      5683	mbyte.c	FUNCTION_120	CALL_8
0x40008c5	           0xfb6c0	                           movzx eax, al	      5678	mbyte.c	FUNCTION_120
0x40008c8	          0x4889de	                            mov rsi, rbx	      5683	mbyte.c	FUNCTION_120	CALL_8
0x40008cb	        0x66894330	               mov word [rbx + 0x30], ax	      5678	mbyte.c	FUNCTION_120
0x40008cf	    0xc74320000000	               mov dword [rbx + 0x20], 0	      5680	mbyte.c	FUNCTION_120
0x40008d6	    0x48c743280000	               mov qword [rbx + 0x28], 0	      5681	mbyte.c	FUNCTION_120
0x40008de	      0xe800000000	                          call 0x40008e3	      5683	mbyte.c	FUNCTION_120	CALL_8
0x40008e3	    0x488b3d000000	            mov rdi, qword [0x040008ea] 	      5688	mbyte.c	FUNCTION_120	CALL_9
0x40008ea	    0xc70309000000	                      mov dword [rbx], 9	      5686	mbyte.c	FUNCTION_120
0x40008f0	          0x4889de	                            mov rsi, rbx	      5688	mbyte.c	FUNCTION_120	CALL_9
0x40008f3	        0xc6431000	                mov byte [rbx + 0x10], 0	      5687	mbyte.c	FUNCTION_120
0x40008f7	      0xe800000000	                          call 0x40008fc	      5688	mbyte.c	FUNCTION_120	CALL_9
0x40008fc	          0x4889df	                            mov rdi, rbx	      5690	mbyte.c	FUNCTION_120	CALL_10
0x40008ff	              0x5b	                                 pop rbx	      5691	mbyte.c	FUNCTION_120
0x4000900	              0x5d	                                 pop rbp	      5691	mbyte.c	FUNCTION_120
0x4000901	            0x415c	                                 pop r12	      5691	mbyte.c	FUNCTION_120
0x4000903	      0xe900000000	                           jmp 0x4000908	      5690	mbyte.c	FUNCTION_120	CALL_10
im_get_status	DO,0:IF,1:CALL,1:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	29
0x4003e60	              0x53	                                push rbx	      5874	mbyte.c	FUNCTION_123
0x4003e61	    0x8b1d00000000	            mov ebx, dword [0x04003e67] 	      5876	mbyte.c	FUNCTION_123	IF_1
0x4003e67	            0x85db	                           test ebx, ebx	      5876	mbyte.c	FUNCTION_123	IF_1
0x4003e69	            0x750c	                           jne 0x4003e77	      5876	mbyte.c	FUNCTION_123	IF_1
0x4003e6b	    0x488b05000000	            mov rax, qword [0x04003e72] 	      5876	mbyte.c	FUNCTION_123	IF_1
0x4003e72	          0x803800	                       cmp byte [rax], 0	      5876	mbyte.c	FUNCTION_123	IF_1
0x4003e75	            0x7511	                           jne 0x4003e88	      5876	mbyte.c	FUNCTION_123	IF_1
0x4003e77	    0x8b1d00000000	            mov ebx, dword [0x04003e7d] 	      5879	mbyte.c	FUNCTION_123
0x4003e7d	            0x89d8	                            mov eax, ebx	      5880	mbyte.c	FUNCTION_123
0x4003e7f	              0x5b	                                 pop rbx	      5880	mbyte.c	FUNCTION_123
0x4003e80	              0xc3	                                     ret	      5880	mbyte.c	FUNCTION_123
0x4003e81	     0xf1f80000000	                         nop dword [rax]	      5880	mbyte.c	FUNCTION_123
0x4003e88	    0x8b0500000000	            mov eax, dword [0x04003e8e] 	      4813	mbyte.c	FUNCTION_96	IF_1	CALL_1
0x4003e8e	            0x85c0	                           test eax, eax	      4813	mbyte.c	FUNCTION_96	IF_1	CALL_1
0x4003e90	            0x75eb	                           jne 0x4003e7d	      4813	mbyte.c	FUNCTION_96	IF_1	CALL_1
0x4003e92	      0xe800000000	                          call 0x4003e97	      4813	mbyte.c	FUNCTION_96	IF_1	CALL_1
0x4003e97	            0x85c0	                           test eax, eax	      4813	mbyte.c	FUNCTION_96	IF_1	CALL_1
0x4003e99	            0x75e2	                           jne 0x4003e7d	      4813	mbyte.c	FUNCTION_96	IF_1	CALL_1
0x4003e9b	    0x488b3d000000	            mov rdi, qword [0x04003ea2] 	      4818	mbyte.c	FUNCTION_96	CALL_2
0x4003ea2	            0x31c9	                            xor ecx, ecx	      4818	mbyte.c	FUNCTION_96	CALL_2
0x4003ea4	            0x31d2	                            xor edx, edx	      4818	mbyte.c	FUNCTION_96	CALL_2
0x4003ea6	            0x31f6	                            xor esi, esi	      4818	mbyte.c	FUNCTION_96	CALL_2
0x4003ea8	    0x830500000000	               add dword [0x04003eaf], 1	      4817	mbyte.c	FUNCTION_96
0x4003eaf	            0x31db	                            xor ebx, ebx	      4820	mbyte.c	FUNCTION_96
0x4003eb1	      0xe800000000	                          call 0x4003eb6	      4818	mbyte.c	FUNCTION_96	CALL_2
0x4003eb6	    0x832d00000000	               sub dword [0x04003ebd], 1	      4819	mbyte.c	FUNCTION_96
0x4003ebd	            0x85c0	                           test eax, eax	      4820	mbyte.c	FUNCTION_96
0x4003ebf	           0xf9fc3	                                 setg bl	      4820	mbyte.c	FUNCTION_96
0x4003ec2	            0xebb9	                           jmp 0x4003e7d	      4820	mbyte.c	FUNCTION_96
im_preedit_start_cb	DO,0:IF,0:CALL,3:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	8
0x40007d0	        0x4883ec08	                              sub rsp, 8	      5258	mbyte.c	FUNCTION_111
0x40007d4	            0x31f6	                            xor esi, esi	      5265	mbyte.c	FUNCTION_111	CALL_2
0x40007d6	      0xbf01000000	                              mov edi, 1	      5265	mbyte.c	FUNCTION_111	CALL_2
0x40007db	    0xc70500000000	               mov dword [0x040007e5], 1	      5263	mbyte.c	FUNCTION_111
0x40007e5	    0xc70500000000	               mov dword [0x040007ef], 1	      5264	mbyte.c	FUNCTION_111
0x40007ef	      0xe800000000	                          call 0x40007f4	      5265	mbyte.c	FUNCTION_111	CALL_2
0x40007f4	        0x4883c408	                              add rsp, 8	      5267	mbyte.c	FUNCTION_111
0x40007f8	      0xe953ffffff	                    jmp sym.im_show_info	      5266	mbyte.c	FUNCTION_111	CALL_3
utf_class	DO,0:IF,0:CALL,1:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	2
0x40022e0	    0x488b35000000	            mov rsi, qword [0x040022e7] 	      2782	mbyte.c	FUNCTION_55	CALL_1
0x40022e7	      0xe944feffff	                   jmp sym.utf_class_buf	      2782	mbyte.c	FUNCTION_55	CALL_1
mb_charlen	DO,0:IF,1:CALL,0:FOR,1:functions,0:ELSE,0:WHILE,0:SWITCH,0	27
0x4002e00	          0x4885ff	                           test rdi, rdi	      4152	mbyte.c	FUNCTION_80	IF_1
0x4002e03	            0x743b	                            je 0x4002e40	      4152	mbyte.c	FUNCTION_80	IF_1
0x4002e05	              0x55	                                push rbp	      4148	mbyte.c	FUNCTION_80
0x4002e06	              0x53	                                push rbx	      4148	mbyte.c	FUNCTION_80
0x4002e07	          0x4889fb	                            mov rbx, rdi	      4148	mbyte.c	FUNCTION_80
0x4002e0a	        0x4883ec08	                              sub rsp, 8	      4148	mbyte.c	FUNCTION_80
0x4002e0e	          0x803f00	                       cmp byte [rdi], 0	      4155	mbyte.c	FUNCTION_80	FOR_1
0x4002e11	            0x7430	                            je 0x4002e43	      4155	mbyte.c	FUNCTION_80	FOR_1
0x4002e13	            0x31ed	                            xor ebp, ebp	      4155	mbyte.c	FUNCTION_80	FOR_1
0x4002e15	           0xf1f00	                         nop dword [rax]	      4155	mbyte.c	FUNCTION_80	FOR_1
0x4002e18	          0x4889df	                            mov rdi, rbx	      4156	mbyte.c	FUNCTION_80	FOR_1
0x4002e1b	          0x83c501	                              add ebp, 1	      4155	mbyte.c	FUNCTION_80	FOR_1
0x4002e1e	    0xff1500000000	                 call qword [0x04002e24]	      4156	mbyte.c	FUNCTION_80	FOR_1
0x4002e24	            0x4898	                                    cdqe	      4156	mbyte.c	FUNCTION_80	FOR_1
0x4002e26	          0x4801c3	                            add rbx, rax	      4156	mbyte.c	FUNCTION_80	FOR_1
0x4002e29	          0x803b00	                       cmp byte [rbx], 0	      4155	mbyte.c	FUNCTION_80	FOR_1
0x4002e2c	            0x75ea	                           jne 0x4002e18	      4155	mbyte.c	FUNCTION_80	FOR_1
0x4002e2e	            0x89e8	                            mov eax, ebp	      4155	mbyte.c	FUNCTION_80	FOR_1
0x4002e30	        0x4883c408	                              add rsp, 8	      4159	mbyte.c	FUNCTION_80
0x4002e34	              0x5b	                                 pop rbx	      4159	mbyte.c	FUNCTION_80
0x4002e35	              0x5d	                                 pop rbp	      4159	mbyte.c	FUNCTION_80
0x4002e36	              0xc3	                                     ret	      4159	mbyte.c	FUNCTION_80
0x4002e37	    0x660f1f840000	                    nop word [rax + rax]	      4159	mbyte.c	FUNCTION_80
0x4002e40	            0x31c0	                            xor eax, eax	      4153	mbyte.c	FUNCTION_80	IF_1
0x4002e42	              0xc3	                                     ret	      4159	mbyte.c	FUNCTION_80
0x4002e43	            0x31c0	                            xor eax, eax	      4153	mbyte.c	FUNCTION_80	IF_1
0x4002e45	            0xebe9	                           jmp 0x4002e30	      4153	mbyte.c	FUNCTION_80	IF_1
latin_ptr2len	DO,0:IF,0:CALL,1:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	3
0x4000060	           0xfb607	                   movzx eax, byte [rdi]	      1131	mbyte.c	FUNCTION_14	CALL_1
0x4000063	     0xfbe80000000	                   movsx eax, byte [rax]	      1131	mbyte.c	FUNCTION_14	CALL_1
0x400006a	              0xc3	                                     ret	      1132	mbyte.c	FUNCTION_14
im_show_info	DO,0:IF,1:CALL,3:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	10
0x4000750	              0x53	                                push rbx	      5145	mbyte.c	FUNCTION_109
0x4000751	    0x8b1d00000000	            mov ebx, dword [0x04000757] 	      5148	mbyte.c	FUNCTION_109
0x4000757	    0xc70500000000	               mov dword [0x04000761], 1	      5149	mbyte.c	FUNCTION_109
0x4000761	      0xe800000000	                          call 0x4000766	      5150	mbyte.c	FUNCTION_109	CALL_1
0x4000766	    0xf60500000000	           test byte [0x0400076d], 0x11 	      5152	mbyte.c	FUNCTION_109	IF_1
0x400076d	    0x891d00000000	            mov dword [0x04000773], ebx 	      5151	mbyte.c	FUNCTION_109
0x4000773	            0x7405	                            je 0x400077a	      5152	mbyte.c	FUNCTION_109	IF_1
0x4000775	      0xe800000000	                          call 0x400077a	      5153	mbyte.c	FUNCTION_109	CALL_2
0x400077a	              0x5b	                                 pop rbx	      5155	mbyte.c	FUNCTION_109
0x400077b	      0xe900000000	               jmp sym.im_preedit_end_cb	      5154	mbyte.c	FUNCTION_109	CALL_3
utfc_ptr2char	DO,0:IF,4:CALL,7:FOR,1:functions,0:ELSE,0:WHILE,0:SWITCH,0	133
0x4001750	            0x4157	                                push r15	      1975	mbyte.c	FUNCTION_42
0x4001752	            0x4156	                                push r14	      1975	mbyte.c	FUNCTION_42
0x4001754	            0x4155	                                push r13	      1975	mbyte.c	FUNCTION_42
0x4001756	            0x4154	                                push r12	      1975	mbyte.c	FUNCTION_42
0x4001758	          0x4989fc	                            mov r12, rdi	      1975	mbyte.c	FUNCTION_42
0x400175b	              0x55	                                push rbp	      1975	mbyte.c	FUNCTION_42
0x400175c	              0x53	                                push rbx	      1975	mbyte.c	FUNCTION_42
0x400175d	          0x4889f3	                            mov rbx, rsi	      1975	mbyte.c	FUNCTION_42
0x4001760	        0x4883ec10	                           sub rsp, 0x10	      1975	mbyte.c	FUNCTION_42
0x4001764	      0xe800000000	                          call 0x4001769	      1981	mbyte.c	FUNCTION_42	CALL_1
0x4001769	      0x410fb63c24	                   movzx edi, byte [r12]	      2085	mbyte.c	FUNCTION_45	IF_1
0x400176e	          0x4189c6	                           mov r14d, eax	      1981	mbyte.c	FUNCTION_42	CALL_1
0x4001771	          0x4084ff	                           test dil, dil	      2085	mbyte.c	FUNCTION_45	IF_1
0x4001774	     0xf8466010000	                            je 0x40018e0	      2085	mbyte.c	FUNCTION_45	IF_1
0x400177a	        0x400fb6c7	                          movzx eax, dil	      2087	mbyte.c	FUNCTION_45
0x400177e	    0x440fbea80000	                  movsx r13d, byte [rax]	      2087	mbyte.c	FUNCTION_45
0x4001786	        0x4183fd01	                             cmp r13d, 1	      2088	mbyte.c	FUNCTION_45	FOR_1
0x400178a	          0x4489ee	                           mov esi, r13d	      2087	mbyte.c	FUNCTION_45
0x400178d	     0xf8e43010000	                           jle 0x40018d6	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4001793	    0x410fb6442401	               movzx eax, byte [r12 + 1]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001799	          0x83e0c0	                     and eax, 0xffffffc0	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x400179c	            0x3c80	                            cmp al, 0x80	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x400179e	     0xf852c010000	                           jne 0x40018d0	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40017a4	        0x418d4dfe	                      lea ecx, [r13 - 2]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40017a8	          0x4c89e0	                            mov rax, r12	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40017ab	          0x4c01e1	                            add rcx, r12	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40017ae	            0xeb14	                           jmp 0x40017c4	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40017b0	         0xfb65002	               movzx edx, byte [rax + 2]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40017b4	        0x4883c001	                              add rax, 1	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40017b8	          0x83e2c0	                     and edx, 0xffffffc0	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40017bb	          0x80fa80	                            cmp dl, 0x80	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40017be	     0xf850c010000	                           jne 0x40018d0	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40017c4	          0x4839c8	                            cmp rax, rcx	      2088	mbyte.c	FUNCTION_45	FOR_1
0x40017c7	            0x75e7	                           jne 0x40017b0	      2088	mbyte.c	FUNCTION_45	FOR_1
0x40017c9	        0x4c0fbefe	                          movsx r15, sil	      2088	mbyte.c	FUNCTION_45	FOR_1
0x40017cd	          0x4d01e7	                            add r15, r12	      1986	mbyte.c	FUNCTION_42	IF_1
0x40017d0	            0x31ed	                            xor ebp, ebp	      1986	mbyte.c	FUNCTION_42	IF_1
0x40017d2	        0x41803f00	                       cmp byte [r15], 0	      1986	mbyte.c	FUNCTION_42	IF_1
0x40017d6	     0xf8906010000	                           jns 0x40018e2	      1986	mbyte.c	FUNCTION_42	IF_1
0x40017dc	          0x4c89fe	                            mov rsi, r15	      1987	mbyte.c	FUNCTION_42	IF_1	CALL_3
0x40017df	          0x4c89e7	                            mov rdi, r12	      1987	mbyte.c	FUNCTION_42	IF_1	CALL_3
0x40017e2	      0xe800000000	                          call 0x40017e7	      1987	mbyte.c	FUNCTION_42	IF_1	CALL_3
0x40017e7	            0x85c0	                           test eax, eax	      1987	mbyte.c	FUNCTION_42	IF_1	CALL_3
0x40017e9	     0xf84f3000000	                            je 0x40018e2	      1987	mbyte.c	FUNCTION_42	IF_1	CALL_3
0x40017ef	          0x4c89ff	                            mov rdi, r15	      1989	mbyte.c	FUNCTION_42	IF_1	CALL_4
0x40017f2	      0xbd01000000	                              mov ebp, 1	      1992	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x40017f7	          0x4d63fd	                        movsxd r15, r13d	      1992	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x40017fa	      0xe800000000	                          call 0x40017ff	      1989	mbyte.c	FUNCTION_42	IF_1	CALL_4
0x40017ff	            0x8903	                    mov dword [rbx], eax	      1992	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x4001801	    0x488b05000000	            mov rax, qword [0x04001808] 	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001808	        0x4c8d4b04	                       lea r9, [rbx + 4]	      1192	mbyte.c	FUNCTION_18	IF_1
0x400180c	      0x4889442408	                mov qword [rsp + 8], rax	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001811	          0x4d01e7	                            add r15, r12	      1995	mbyte.c	FUNCTION_42	IF_1	FOR_1	CALL_5
0x4001814	        0x410fb607	                   movzx eax, byte [r15]	      2085	mbyte.c	FUNCTION_45	IF_1
0x4001818	            0x84c0	                             test al, al	      2085	mbyte.c	FUNCTION_45	IF_1
0x400181a	     0xf849c000000	                            je 0x40018bc	      2085	mbyte.c	FUNCTION_45	IF_1
0x4001820	     0xfbe88000000	                   movsx ecx, byte [rax]	      2087	mbyte.c	FUNCTION_45
0x4001827	          0x83f901	                              cmp ecx, 1	      2088	mbyte.c	FUNCTION_45	FOR_1
0x400182a	            0x7e35	                           jle 0x4001861	      2088	mbyte.c	FUNCTION_45	FOR_1
0x400182c	      0x410fb64701	               movzx eax, byte [r15 + 1]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001831	          0x8d51fe	                      lea edx, [rcx - 2]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001834	          0x4c01fa	                            add rdx, r15	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001837	          0x83e0c0	                     and eax, 0xffffffc0	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x400183a	            0x3c80	                            cmp al, 0x80	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x400183c	            0x741e	                            je 0x400185c	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x400183e	      0xe9d5000000	                           jmp 0x4001918	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001843	       0xf1f440000	                   nop dword [rax + rax]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001848	      0x410fb64702	               movzx eax, byte [r15 + 2]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x400184d	        0x4983c701	                              add r15, 1	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001851	          0x83e0c0	                     and eax, 0xffffffc0	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001854	            0x3c80	                            cmp al, 0x80	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001856	     0xf85bc000000	                           jne 0x4001918	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x400185c	          0x4c39fa	                            cmp rdx, r15	      2088	mbyte.c	FUNCTION_45	FOR_1
0x400185f	            0x75e7	                           jne 0x4001848	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4001861	          0x4101cd	                           add r13d, ecx	      1995	mbyte.c	FUNCTION_42	IF_1	FOR_1	CALL_5
0x4001864	          0x4d63fd	                        movsxd r15, r13d	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x4001867	        0x4b8d3c3c	                    lea rdi, [r12 + r15]	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x400186b	          0x803f00	                       cmp byte [rdi], 0	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x400186e	            0x794c	                           jns 0x40018bc	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x4001870	        0x4c890c24	                     mov qword [rsp], r9	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x4001874	      0xe800000000	                          call 0x4001879	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x4001879	          0x4c63d0	                         movsxd r10, eax	      1192	mbyte.c	FUNCTION_18	IF_1
0x400187c	      0x4c3b542408	                cmp r10, qword [rsp + 8]	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001881	        0x4c8b0c24	                     mov r9, qword [rsp]	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001885	            0x7c35	                            jl 0x40018bc	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001887	      0xbf06010000	                          mov edi, 0x106	      1192	mbyte.c	FUNCTION_18	IF_1
0x400188c	            0x31f6	                            xor esi, esi	      1192	mbyte.c	FUNCTION_18	IF_1
0x400188e	            0xeb07	                           jmp 0x4001897	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001890	          0x8d7201	                      lea esi, [rdx + 1]	      1202	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4001893	            0x39fe	                            cmp esi, edi	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4001895	            0x7f25	                            jg 0x40018bc	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4001897	          0x8d1437	                    lea edx, [rdi + rsi]	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x400189a	            0xd1fa	                              sar edx, 1	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x400189c	          0x4863ca	                         movsxd rcx, edx	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x400189f	        0x48c1e104	                              shl rcx, 4	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x40018a3	    0x4c3b91000000	                    cmp r10, qword [rcx]	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x40018aa	            0x7fe4	                            jg 0x4001890	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x40018ac	    0x4c3b91000000	                    cmp r10, qword [rcx]	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x40018b3	            0x7d4b	                           jge 0x4001900	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x40018b5	          0x8d7aff	                      lea edi, [rdx - 1]	      1204	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x40018b8	            0x39fe	                            cmp esi, edi	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x40018ba	            0x7edb	                           jle 0x4001897	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x40018bc	          0x4c63c5	                          movsxd r8, ebp	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x40018bf	    0x4a8d2c850000	                         lea rbp, [r8*4]	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x40018c7	            0xeb19	                           jmp 0x40018e2	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x40018c9	     0xf1f80000000	                         nop dword [rax]	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x40018d0	    0x41bd01000000	                             mov r13d, 1	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40018d6	          0x4084ff	                           test dil, dil	      1985	mbyte.c	FUNCTION_42	IF_1
0x40018d9	            0x7947	                           jns 0x4001922	      1985	mbyte.c	FUNCTION_42	IF_1
0x40018db	       0xf1f440000	                   nop dword [rax + rax]	      1985	mbyte.c	FUNCTION_42	IF_1
0x40018e0	            0x31ed	                            xor ebp, ebp	      1985	mbyte.c	FUNCTION_42	IF_1
0x40018e2	    0xc7042b000000	                mov dword [rbx + rbp], 0	      2002	mbyte.c	FUNCTION_42	IF_4
0x40018e9	        0x4883c410	                           add rsp, 0x10	      2005	mbyte.c	FUNCTION_42
0x40018ed	          0x4489f0	                           mov eax, r14d	      2005	mbyte.c	FUNCTION_42
0x40018f0	              0x5b	                                 pop rbx	      2005	mbyte.c	FUNCTION_42
0x40018f1	              0x5d	                                 pop rbp	      2005	mbyte.c	FUNCTION_42
0x40018f2	            0x415c	                                 pop r12	      2005	mbyte.c	FUNCTION_42
0x40018f4	            0x415d	                                 pop r13	      2005	mbyte.c	FUNCTION_42
0x40018f6	            0x415e	                                 pop r14	      2005	mbyte.c	FUNCTION_42
0x40018f8	            0x415f	                                 pop r15	      2005	mbyte.c	FUNCTION_42
0x40018fa	              0xc3	                                     ret	      2005	mbyte.c	FUNCTION_42
0x40018fb	       0xf1f440000	                   nop dword [rax + rax]	      2005	mbyte.c	FUNCTION_42
0x4001900	          0x83c501	                              add ebp, 1	      1992	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x4001903	          0x418901	                     mov dword [r9], eax	      1992	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x4001906	        0x4983c104	                               add r9, 4	      1992	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x400190a	          0x83fd06	                              cmp ebp, 6	      1993	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_2
0x400190d	     0xf85fefeffff	                           jne 0x4001811	      1993	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_2
0x4001913	            0xebd4	                           jmp 0x40018e9	      1993	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_2
0x4001915	           0xf1f00	                         nop dword [rax]	      1993	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_2
0x4001918	      0xb901000000	                              mov ecx, 1	      2090	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x400191d	      0xe93fffffff	                           jmp 0x4001861	      2090	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001922	          0x4d63fd	                        movsxd r15, r13d	      2090	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001925	      0xe9a3feffff	                           jmp 0x40017cd	      2090	mbyte.c	FUNCTION_45	FOR_1	IF_2
xim_set_focus	DO,0:IF,4:CALL,2:FOR,0:functions,0:ELSE,1:WHILE,0:SWITCH,0	11
0x40036d0	    0x488b05000000	            mov rax, qword [0x040036d7] 	      4872	mbyte.c	FUNCTION_99	IF_1
0x40036d7	          0x4885c0	                           test rax, rax	      4872	mbyte.c	FUNCTION_99	IF_1
0x40036da	            0x741c	                            je 0x40036f8	      4872	mbyte.c	FUNCTION_99	IF_1
0x40036dc	            0x85ff	                           test edi, edi	      4874	mbyte.c	FUNCTION_99	IF_1	IF_2
0x40036de	          0x4889c7	                            mov rdi, rax	      4875	mbyte.c	FUNCTION_99	IF_1	CALL_1
0x40036e1	            0x750d	                           jne 0x40036f0	      4874	mbyte.c	FUNCTION_99	IF_1	IF_2
0x40036e3	      0xe900000000	                           jmp 0x40036e8	      4877	mbyte.c	FUNCTION_99	IF_1	CALL_2
0x40036e8	     0xf1f84000000	                   nop dword [rax + rax]	      4877	mbyte.c	FUNCTION_99	IF_1	CALL_2
0x40036f0	      0xe900000000	                           jmp 0x40036f5	      4875	mbyte.c	FUNCTION_99	IF_1	CALL_1
0x40036f5	           0xf1f00	                         nop dword [rax]	      4875	mbyte.c	FUNCTION_99	IF_1	CALL_1
0x40036f8	            0xf3c3	                                     ret	      4875	mbyte.c	FUNCTION_99	IF_1	CALL_1
mb_strnicmp	DO,0:IF,7:CALL,4:FOR,1:functions,0:ELSE,2:WHILE,0:SWITCH,0	254
0x4002500	            0x4157	                                push r15	      3668	mbyte.c	FUNCTION_65
0x4002502	            0x4156	                                push r14	      3668	mbyte.c	FUNCTION_65
0x4002504	          0x4989ff	                            mov r15, rdi	      3668	mbyte.c	FUNCTION_65
0x4002507	            0x4155	                                push r13	      3668	mbyte.c	FUNCTION_65
0x4002509	            0x4154	                                push r12	      3668	mbyte.c	FUNCTION_65
0x400250b	              0x55	                                push rbp	      3668	mbyte.c	FUNCTION_65
0x400250c	              0x53	                                push rbx	      3668	mbyte.c	FUNCTION_65
0x400250d	        0x4883ec48	                           sub rsp, 0x48	      3668	mbyte.c	FUNCTION_65
0x4002511	    0x64488b042528	                mov rax, qword fs:[0x28]	      3668	mbyte.c	FUNCTION_65
0x400251a	      0x4889442438	             mov qword [rsp + 0x38], rax	      3668	mbyte.c	FUNCTION_65
0x400251f	            0x31c0	                            xor eax, eax	      3668	mbyte.c	FUNCTION_65
0x4002521	    0x8b0500000000	            mov eax, dword [0x04002527] 	      3673	mbyte.c	FUNCTION_65	IF_1
0x4002527	        0x48893424	                    mov qword [rsp], rsi	      3668	mbyte.c	FUNCTION_65
0x400252b	            0x85c0	                           test eax, eax	      3673	mbyte.c	FUNCTION_65	IF_1
0x400252d	        0x8944240c	              mov dword [rsp + 0xc], eax	      3673	mbyte.c	FUNCTION_65	IF_1
0x4002531	     0xf85c9000000	                           jne 0x4002600	      3673	mbyte.c	FUNCTION_65	IF_1
0x4002537	            0x31db	                            xor ebx, ebx	      3679	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x4002539	            0x85d2	                           test edx, edx	      3679	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x400253b	          0x4189d4	                           mov r12d, edx	      3679	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x400253e	            0x7f32	                            jg 0x4002572	      3679	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x4002540	            0xeb7e	                           jmp 0x40025c0	      3679	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x4002542	    0x660f1f440000	                    nop word [rax + rax]	      3679	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x4002548	          0x4489e0	                           mov eax, r12d	      3698	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_6
0x400254b	          0x4c89f6	                            mov rsi, r14	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x400254e	          0x4889ef	                            mov rdi, rbp	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x4002551	            0x29d8	                            sub eax, ebx	      3698	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_6
0x4002553	          0x4139c5	                           cmp r13d, eax	      3698	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_6
0x4002556	        0x440f4fe8	                         cmovg r13d, eax	      3698	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_6
0x400255a	          0x4963d5	                        movsxd rdx, r13d	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x400255d	      0xe800000000	                          call 0x4002562	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x4002562	            0x85c0	                           test eax, eax	      3701	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_7
0x4002564	     0xf8586000000	                           jne 0x40025f0	      3701	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_7
0x400256a	          0x4401eb	                           add ebx, r13d	      3679	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x400256d	          0x4139dc	                           cmp r12d, ebx	      3679	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x4002570	            0x7e4e	                           jle 0x40025c0	      3679	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x4002572	          0x4863f3	                         movsxd rsi, ebx	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x4002575	        0x488b0424	                    mov rax, qword [rsp]	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x4002579	        0x498d2c37	                    lea rbp, [r15 + rsi]	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x400257d	        0x807d0000	                       cmp byte [rbp], 0	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x4002581	        0x4c8d3430	                    lea r14, [rax + rsi]	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x4002585	            0x7506	                           jne 0x400258d	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x4002587	        0x41803e00	                       cmp byte [r14], 0	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x400258b	            0x7433	                            je 0x40025c0	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x400258d	          0x4889ef	                            mov rdi, rbp	      3684	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x4002590	    0xff1500000000	                 call qword [0x04002596]	      3684	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x4002596	          0x83f801	                              cmp eax, 1	      3685	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3
0x4002599	          0x4189c5	                           mov r13d, eax	      3684	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x400259c	            0x7faa	                            jg 0x4002548	      3685	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3
0x400259e	         0xfb67d00	                   movzx edi, byte [rbp]	      3688	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4
0x40025a2	          0x413a3e	                     cmp dil, byte [r14]	      3688	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4
0x40025a5	            0x74c3	                            je 0x400256a	      3688	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4
0x40025a7	      0xe800000000	                          call 0x40025ac	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x40025ac	        0x410fb63e	                   movzx edi, byte [r14]	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x40025b0	            0x89c5	                            mov ebp, eax	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x40025b2	      0xe800000000	                          call 0x40025b7	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x40025b7	            0x29c5	                            sub ebp, eax	      3691	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	IF_5
0x40025b9	            0x74af	                            je 0x400256a	      3691	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	IF_5
0x40025bb	        0x896c240c	              mov dword [rsp + 0xc], ebp	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x40025bf	              0x90	                                     nop	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x40025c0	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      3707	mbyte.c	FUNCTION_65
0x40025c5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3707	mbyte.c	FUNCTION_65
0x40025ce	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      3707	mbyte.c	FUNCTION_65
0x40025d2	     0xf85f6020000	                           jne 0x40028ce	      3707	mbyte.c	FUNCTION_65
0x40025d8	        0x4883c448	                           add rsp, 0x48	      3707	mbyte.c	FUNCTION_65
0x40025dc	              0x5b	                                 pop rbx	      3707	mbyte.c	FUNCTION_65
0x40025dd	              0x5d	                                 pop rbp	      3707	mbyte.c	FUNCTION_65
0x40025de	            0x415c	                                 pop r12	      3707	mbyte.c	FUNCTION_65
0x40025e0	            0x415d	                                 pop r13	      3707	mbyte.c	FUNCTION_65
0x40025e2	            0x415e	                                 pop r14	      3707	mbyte.c	FUNCTION_65
0x40025e4	            0x415f	                                 pop r15	      3707	mbyte.c	FUNCTION_65
0x40025e6	              0xc3	                                     ret	      3707	mbyte.c	FUNCTION_65
0x40025e7	    0x660f1f840000	                    nop word [rax + rax]	      3707	mbyte.c	FUNCTION_65
0x40025f0	        0x8944240c	              mov dword [rsp + 0xc], eax	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x40025f4	            0xebca	                           jmp 0x40025c0	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x40025f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x4002600	        0x488b0424	                    mov rax, qword [rsp]	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x4002604	      0x48897c2410	             mov qword [rsp + 0x10], rdi	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x4002609	      0x4889542420	             mov qword [rsp + 0x20], rdx	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x400260e	      0x4889542428	             mov qword [rsp + 0x28], rdx	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x4002613	      0x4889442418	             mov qword [rsp + 0x18], rax	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x4002618	     0xf1f84000000	                   nop dword [rax + rax]	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x4002620	      0x488d742420	                   lea rsi, [rsp + 0x20]	      3594	mbyte.c	FUNCTION_64	FOR_1	CALL_1
0x4002625	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3594	mbyte.c	FUNCTION_64	FOR_1	CALL_1
0x400262a	      0xe871ddffff	         call sym.utf_safe_read_char_adv	      3594	mbyte.c	FUNCTION_64	FOR_1	CALL_1
0x400262f	      0x488d742428	                   lea rsi, [rsp + 0x28]	      3595	mbyte.c	FUNCTION_64	FOR_1	CALL_2
0x4002634	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      3595	mbyte.c	FUNCTION_64	FOR_1	CALL_2
0x4002639	            0x89c3	                            mov ebx, eax	      3594	mbyte.c	FUNCTION_64	FOR_1	CALL_1
0x400263b	      0xe860ddffff	         call sym.utf_safe_read_char_adv	      3595	mbyte.c	FUNCTION_64	FOR_1	CALL_2
0x4002640	            0x85db	                           test ebx, ebx	      3597	mbyte.c	FUNCTION_64	FOR_1	IF_1
0x4002642	          0x4189c3	                           mov r11d, eax	      3595	mbyte.c	FUNCTION_64	FOR_1	CALL_2
0x4002645	            0x7e5a	                           jle 0x40026a1	      3597	mbyte.c	FUNCTION_64	FOR_1	IF_1
0x4002647	            0x85c0	                           test eax, eax	      3597	mbyte.c	FUNCTION_64	FOR_1	IF_1
0x4002649	            0x7e56	                           jle 0x40026a1	      3597	mbyte.c	FUNCTION_64	FOR_1	IF_1
0x400264b	            0x39c3	                            cmp ebx, eax	      3600	mbyte.c	FUNCTION_64	FOR_1	IF_2
0x400264d	            0x74d1	                            je 0x4002620	      3600	mbyte.c	FUNCTION_64	FOR_1	IF_2
0x400264f	          0x83fb7f	                           cmp ebx, 0x7f	      3161	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x4002652	            0x7f34	                            jg 0x4002688	      3161	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x4002654	          0x8d43bf	                   lea eax, [rbx - 0x41]	      3163	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x4002657	        0x448d6b20	                  lea r13d, [rbx + 0x20]	      3163	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x400265b	          0x83f819	                           cmp eax, 0x19	      3163	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x400265e	        0x410f46dd	                        cmovbe ebx, r13d	      3163	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x4002662	        0x4183fb7f	                          cmp r11d, 0x7f	      3161	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x4002666	            0x7f2f	                            jg 0x4002697	      3161	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x4002668	        0x418d53bf	                   lea edx, [r11 - 0x41]	      3163	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x400266c	        0x418d4320	                   lea eax, [r11 + 0x20]	      3163	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x4002670	          0x83fa19	                           cmp edx, 0x19	      3163	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x4002673	        0x410f47c3	                         cmova eax, r11d	      3163	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x4002677	            0x29c3	                            sub ebx, eax	      3604	mbyte.c	FUNCTION_64	FOR_1	IF_3
0x4002679	            0x74a5	                            je 0x4002620	      3604	mbyte.c	FUNCTION_64	FOR_1	IF_3
0x400267b	        0x895c240c	              mov dword [rsp + 0xc], ebx	      3603	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x400267f	      0xe93cffffff	                           jmp 0x40025c0	      3603	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x4002684	         0xf1f4000	                         nop dword [rax]	      3603	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x4002688	            0x89df	                            mov edi, ebx	      3603	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x400268a	      0xe881e7ffff	               call sym.utf_fold.part.12	      3603	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x400268f	        0x4183fb7f	                          cmp r11d, 0x7f	      3161	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x4002693	            0x89c3	                            mov ebx, eax	      3161	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x4002695	            0x7ed1	                           jle 0x4002668	      3161	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x4002697	          0x4489df	                           mov edi, r11d	      3161	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x400269a	      0xe871e7ffff	               call sym.utf_fold.part.12	      3161	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x400269f	            0xebd6	                           jmp 0x4002677	      3161	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x40026a1	            0x85db	                           test ebx, ebx	      3610	mbyte.c	FUNCTION_64	IF_4
0x40026a3	     0xf843b010000	                            je 0x40027e4	      3610	mbyte.c	FUNCTION_64	IF_4
0x40026a9	          0x4585db	                         test r11d, r11d	      3610	mbyte.c	FUNCTION_64	IF_4
0x40026ac	     0xf8432010000	                            je 0x40027e4	      3610	mbyte.c	FUNCTION_64	IF_4
0x40026b2	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      3625	mbyte.c	FUNCTION_64	IF_6
0x40026b5	     0xf844c010000	                            je 0x4002807	      3625	mbyte.c	FUNCTION_64	IF_6
0x40026bb	        0x4183fbff	            cmp r11d, 0xffffffffffffffff	      3625	mbyte.c	FUNCTION_64	IF_6
0x40026bf	     0xf8542010000	                           jne 0x4002807	      3625	mbyte.c	FUNCTION_64	IF_6
0x40026c5	          0x83fb7f	                           cmp ebx, 0x7f	      3161	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x40026c8	     0xf8fcb010000	                            jg 0x4002899	      3161	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x40026ce	          0x8d43bf	                   lea eax, [rbx - 0x41]	      3163	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x40026d1	          0x8d7b20	                   lea edi, [rbx + 0x20]	      3163	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x40026d4	          0x83f819	                           cmp eax, 0x19	      3163	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x40026d7	           0xf47fb	                          cmova edi, ebx	      3163	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x40026da	      0x488d542430	                   lea rdx, [rsp + 0x30]	      3627	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x40026df	          0x4889d6	                            mov rsi, rdx	      3627	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x40026e2	      0xe800000000	                          call 0x40026e7	      3627	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x40026e7	      0x4c8b4c2428	              mov r9, qword [rsp + 0x28]	      3627	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x40026ec	            0x4898	                                    cdqe	      3627	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x40026ee	      0x4889542410	             mov qword [rsp + 0x10], rdx	      3628	mbyte.c	FUNCTION_64	IF_6
0x40026f3	      0x4889442420	             mov qword [rsp + 0x20], rax	      3627	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x40026f8	          0x4885c0	                           test rax, rax	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x40026fb	     0xf84b3010000	                            je 0x40028b4	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4002701	          0x4d85c9	                             test r9, r9	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4002704	     0xf8464010000	                            je 0x400286e	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x400270a	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x400270f	        0x440fb62e	                  movzx r13d, byte [rsi]	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4002713	          0x4584ed	                         test r13b, r13b	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4002716	     0xf84ad010000	                            je 0x40028c9	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x400271c	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4002721	           0xfb617	                   movzx edx, byte [rdi]	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4002724	            0x84d2	                             test dl, dl	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4002726	     0xf8486000000	                            je 0x40027b2	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x400272c	          0x4129d5	                           sub r13d, edx	      3639	mbyte.c	FUNCTION_64	WHILE_1	IF_8
0x400272f	     0xf855a010000	                           jne 0x400288f	      3639	mbyte.c	FUNCTION_64	WHILE_1	IF_8
0x4002735	          0x4989c2	                            mov r10, rax	      3639	mbyte.c	FUNCTION_64	WHILE_1	IF_8
0x4002738	        0x4883c601	                              add rsi, 1	      3639	mbyte.c	FUNCTION_64	WHILE_1	IF_8
0x400273c	        0x4883c701	                              add rdi, 1	      3639	mbyte.c	FUNCTION_64	WHILE_1	IF_8
0x4002740	          0x4d29ca	                             sub r10, r9	      3639	mbyte.c	FUNCTION_64	WHILE_1	IF_8
0x4002743	        0x488d50ff	                      lea rdx, [rax - 1]	      3639	mbyte.c	FUNCTION_64	WHILE_1	IF_8
0x4002747	          0x4929c1	                             sub r9, rax	      3639	mbyte.c	FUNCTION_64	WHILE_1	IF_8
0x400274a	            0xeb3c	                           jmp 0x4002788	      3639	mbyte.c	FUNCTION_64	WHILE_1	IF_8
0x400274c	         0xf1f4000	                         nop dword [rax]	      3639	mbyte.c	FUNCTION_64	WHILE_1	IF_8
0x4002750	          0x4c39d2	                            cmp rdx, r10	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4002753	     0xf841a010000	                            je 0x4002873	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4002759	           0xfb606	                   movzx eax, byte [rsi]	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x400275c	            0x84c0	                             test al, al	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x400275e	     0xf841d010000	                            je 0x4002881	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4002764	           0xfb60f	                   movzx ecx, byte [rdi]	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4002767	            0x84c9	                             test cl, cl	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4002769	     0xf84e2000000	                            je 0x4002851	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x400276f	        0x440fb6e8	                          movzx r13d, al	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x4002773	        0x4883c601	                              add rsi, 1	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x4002777	        0x4883c701	                              add rdi, 1	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x400277b	        0x4883ea01	                              sub rdx, 1	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x400277f	          0x4129cd	                           sub r13d, ecx	      3639	mbyte.c	FUNCTION_64	WHILE_1	IF_8
0x4002782	     0xf8507010000	                           jne 0x400288f	      3639	mbyte.c	FUNCTION_64	WHILE_1	IF_8
0x4002788	        0x4d8d0411	                      lea r8, [r9 + rdx]	      3639	mbyte.c	FUNCTION_64	WHILE_1	IF_8
0x400278c	          0x4885d2	                           test rdx, rdx	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x400278f	          0x4889f0	                            mov rax, rsi	      3642	mbyte.c	FUNCTION_64	WHILE_1
0x4002792	      0x4889742410	             mov qword [rsp + 0x10], rsi	      3642	mbyte.c	FUNCTION_64	WHILE_1
0x4002797	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      3643	mbyte.c	FUNCTION_64	WHILE_1
0x400279c	      0x4889542420	             mov qword [rsp + 0x20], rdx	      3644	mbyte.c	FUNCTION_64	WHILE_1
0x40027a1	      0x4c89442428	              mov qword [rsp + 0x28], r8	      3645	mbyte.c	FUNCTION_64	WHILE_1
0x40027a6	            0x75a8	                           jne 0x4002750	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x40027a8	          0x4d85c0	                             test r8, r8	      3650	mbyte.c	FUNCTION_64	IF_10
0x40027ab	            0x7420	                            je 0x40027cd	      3650	mbyte.c	FUNCTION_64	IF_10
0x40027ad	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      3650	mbyte.c	FUNCTION_64	IF_10
0x40027b2	          0x803f00	                       cmp byte [rdi], 0	      3650	mbyte.c	FUNCTION_64	IF_10
0x40027b5	            0x7509	                           jne 0x40027c0	      3650	mbyte.c	FUNCTION_64	IF_10
0x40027b7	    0x48c744242800	               mov qword [rsp + 0x28], 0	      3651	mbyte.c	FUNCTION_64	IF_10
0x40027c0	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      3653	mbyte.c	FUNCTION_64	IF_11
0x40027c6	            0x7532	                           jne 0x40027fa	      3653	mbyte.c	FUNCTION_64	IF_11
0x40027c8	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	      3653	mbyte.c	FUNCTION_64	IF_11
0x40027cd	          0x4531ed	                          xor r13d, r13d	      3653	mbyte.c	FUNCTION_64	IF_11
0x40027d0	          0x4d85c0	                             test r8, r8	      3653	mbyte.c	FUNCTION_64	IF_11
0x40027d3	        0x410f95c5	                              setne r13b	      3653	mbyte.c	FUNCTION_64	IF_11
0x40027d7	          0x41f7dd	                                neg r13d	      3653	mbyte.c	FUNCTION_64	IF_11
0x40027da	      0x44896c240c	             mov dword [rsp + 0xc], r13d	      3653	mbyte.c	FUNCTION_64	IF_11
0x40027df	      0xe9dcfdffff	                           jmp 0x40025c0	      3653	mbyte.c	FUNCTION_64	IF_11
0x40027e4	          0x4109db	                            or r11d, ebx	      3613	mbyte.c	FUNCTION_64	IF_4	IF_5
0x40027e7	      0x44895c240c	             mov dword [rsp + 0xc], r11d	      3613	mbyte.c	FUNCTION_64	IF_4	IF_5
0x40027ec	     0xf84cefdffff	                            je 0x40025c0	      3613	mbyte.c	FUNCTION_64	IF_4	IF_5
0x40027f2	            0x85db	                           test ebx, ebx	      3615	mbyte.c	FUNCTION_64	IF_4
0x40027f4	     0xf84c2000000	                            je 0x40028bc	      3615	mbyte.c	FUNCTION_64	IF_4
0x40027fa	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      3615	mbyte.c	FUNCTION_64	IF_4
0x4002802	      0xe9b9fdffff	                           jmp 0x40025c0	      3615	mbyte.c	FUNCTION_64	IF_4
0x4002807	        0x4183fbff	            cmp r11d, 0xffffffffffffffff	      3630	mbyte.c	FUNCTION_64	ELSE_1	IF_7
0x400280b	            0x7452	                            je 0x400285f	      3630	mbyte.c	FUNCTION_64	ELSE_1	IF_7
0x400280d	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      3630	mbyte.c	FUNCTION_64	ELSE_1	IF_7
0x4002810	            0x754d	                           jne 0x400285f	      3630	mbyte.c	FUNCTION_64	ELSE_1	IF_7
0x4002812	        0x4183fb7f	                          cmp r11d, 0x7f	      3161	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x4002816	     0xf8f8b000000	                            jg 0x40028a7	      3161	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x400281c	        0x418d53bf	                   lea edx, [r11 - 0x41]	      3163	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x4002820	        0x418d4320	                   lea eax, [r11 + 0x20]	      3163	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x4002824	          0x83fa19	                           cmp edx, 0x19	      3163	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x4002827	        0x410f47c3	                         cmova eax, r11d	      3163	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x400282b	      0x488d542430	                   lea rdx, [rsp + 0x30]	      3632	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x4002830	            0x89c7	                            mov edi, eax	      3632	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x4002832	          0x4889d6	                            mov rsi, rdx	      3632	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x4002835	      0xe800000000	                          call 0x400283a	      3632	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x400283a	          0x4c63c8	                          movsxd r9, eax	      3632	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x400283d	      0x4889542418	             mov qword [rsp + 0x18], rdx	      3633	mbyte.c	FUNCTION_64	ELSE_1	IF_7
0x4002842	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      3633	mbyte.c	FUNCTION_64	ELSE_1	IF_7
0x4002847	      0x4c894c2428	              mov qword [rsp + 0x28], r9	      3632	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x400284c	      0xe9a7feffff	                           jmp 0x40026f8	      3632	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x4002851	          0x4d85c0	                             test r8, r8	      3650	mbyte.c	FUNCTION_64	IF_10
0x4002854	     0xf8558ffffff	                           jne 0x40027b2	      3650	mbyte.c	FUNCTION_64	IF_10
0x400285a	      0xe961ffffff	                           jmp 0x40027c0	      3650	mbyte.c	FUNCTION_64	IF_10
0x400285f	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      3650	mbyte.c	FUNCTION_64	IF_10
0x4002864	      0x4c8b4c2428	              mov r9, qword [rsp + 0x28]	      3650	mbyte.c	FUNCTION_64	IF_10
0x4002869	      0xe98afeffff	                           jmp 0x40026f8	      3650	mbyte.c	FUNCTION_64	IF_10
0x400286e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3650	mbyte.c	FUNCTION_64	IF_10
0x4002873	          0x803800	                       cmp byte [rax], 0	      3648	mbyte.c	FUNCTION_64	IF_9
0x4002876	     0xf8544ffffff	                           jne 0x40027c0	      3648	mbyte.c	FUNCTION_64	IF_9
0x400287c	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	      3648	mbyte.c	FUNCTION_64	IF_9
0x4002881	    0x48c744242000	               mov qword [rsp + 0x20], 0	      3649	mbyte.c	FUNCTION_64	IF_9
0x400288a	      0xe919ffffff	                           jmp 0x40027a8	      3649	mbyte.c	FUNCTION_64	IF_9
0x400288f	      0x44896c240c	             mov dword [rsp + 0xc], r13d	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x4002894	      0xe927fdffff	                           jmp 0x40025c0	      3675	mbyte.c	FUNCTION_65	IF_1	CALL_1
0x4002899	            0x89df	                            mov edi, ebx	      3675	mbyte.c	FUNCTION_65	IF_1	CALL_1
0x400289b	      0xe870e5ffff	               call sym.utf_fold.part.12	      3675	mbyte.c	FUNCTION_65	IF_1	CALL_1
0x40028a0	            0x89c7	                            mov edi, eax	      3675	mbyte.c	FUNCTION_65	IF_1	CALL_1
0x40028a2	      0xe933feffff	                           jmp 0x40026da	      3675	mbyte.c	FUNCTION_65	IF_1	CALL_1
0x40028a7	          0x4489df	                           mov edi, r11d	      3675	mbyte.c	FUNCTION_65	IF_1	CALL_1
0x40028aa	      0xe861e5ffff	               call sym.utf_fold.part.12	      3675	mbyte.c	FUNCTION_65	IF_1	CALL_1
0x40028af	      0xe977ffffff	                           jmp 0x400282b	      3675	mbyte.c	FUNCTION_65	IF_1	CALL_1
0x40028b4	          0x4d89c8	                              mov r8, r9	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x40028b7	      0xe9ecfeffff	                           jmp 0x40027a8	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x40028bc	    0xc744240cffff	      mov dword [rsp + 0xc], 0xffffffff 	      3615	mbyte.c	FUNCTION_64	IF_4
0x40028c4	      0xe9f7fcffff	                           jmp 0x40025c0	      3615	mbyte.c	FUNCTION_64	IF_4
0x40028c9	          0x4d89c8	                              mov r8, r9	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x40028cc	            0xebb3	                           jmp 0x4002881	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x40028ce	      0xe800000000	                          call 0x40028d3	      3707	mbyte.c	FUNCTION_65
utf_islower	DO,0:IF,0:CALL,1:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	11
0x4002440	              0x53	                                push rbx	      3546	mbyte.c	FUNCTION_61
0x4002441	            0x89fb	                            mov ebx, edi	      3546	mbyte.c	FUNCTION_61
0x4002443	      0xe800000000	                          call 0x4002448	      3548	mbyte.c	FUNCTION_61	CALL_1
0x4002448	    0x81fbdf000000	                           cmp ebx, 0xdf	      3548	mbyte.c	FUNCTION_61	CALL_1
0x400244e	           0xf94c2	                                 sete dl	      3548	mbyte.c	FUNCTION_61	CALL_1
0x4002451	            0x39c3	                            cmp ebx, eax	      3548	mbyte.c	FUNCTION_61	CALL_1
0x4002453	           0xf95c0	                                setne al	      3548	mbyte.c	FUNCTION_61	CALL_1
0x4002456	             0x9d0	                             or eax, edx	      3548	mbyte.c	FUNCTION_61	CALL_1
0x4002458	           0xfb6c0	                           movzx eax, al	      3548	mbyte.c	FUNCTION_61	CALL_1
0x400245b	              0x5b	                                 pop rbx	      3549	mbyte.c	FUNCTION_61
0x400245c	              0xc3	                                     ret	      3549	mbyte.c	FUNCTION_61
latin_ptr2char	DO,0:IF,0:CALL,0:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	2
0x4000200	           0xfb607	                   movzx eax, byte [rdi]	      1770	mbyte.c	FUNCTION_33
0x4000203	              0xc3	                                     ret	      1771	mbyte.c	FUNCTION_33
utf_iscomposing_uint	DO,0:IF,0:CALL,1:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	27
0x4001c90	          0x4863ff	                         movsxd rdi, edi	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001c93	            0x31c0	                            xor eax, eax	      1193	mbyte.c	FUNCTION_18	IF_1
0x4001c95	    0x483b3d000000	            cmp rdi, qword [0x04001c9c] 	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001c9c	            0x7c47	                            jl 0x4001ce5	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001c9e	      0xbe06010000	                          mov esi, 0x106	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001ca3	            0x31c9	                            xor ecx, ecx	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001ca5	            0xeb10	                           jmp 0x4001cb7	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001ca7	    0x660f1f840000	                    nop word [rax + rax]	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001cb0	          0x8d4801	                      lea ecx, [rax + 1]	      1202	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4001cb3	            0x39f1	                            cmp ecx, esi	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4001cb5	            0x7f25	                            jg 0x4001cdc	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4001cb7	          0x8d040e	                    lea eax, [rsi + rcx]	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x4001cba	            0xd1f8	                              sar eax, 1	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x4001cbc	          0x4863d0	                         movsxd rdx, eax	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4001cbf	        0x48c1e204	                              shl rdx, 4	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4001cc3	    0x483bba000000	                    cmp rdi, qword [rdx]	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4001cca	            0x7fe4	                            jg 0x4001cb0	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4001ccc	    0x483bba000000	                    cmp rdi, qword [rdx]	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4001cd3	            0x7d0b	                           jge 0x4001ce0	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4001cd5	          0x8d70ff	                      lea esi, [rax - 1]	      1204	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4001cd8	            0x39f1	                            cmp ecx, esi	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4001cda	            0x7edb	                           jle 0x4001cb7	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4001cdc	            0x31c0	                            xor eax, eax	      1193	mbyte.c	FUNCTION_18	IF_1
0x4001cde	              0xc3	                                     ret	      1193	mbyte.c	FUNCTION_18	IF_1
0x4001cdf	              0x90	                                     nop	      1193	mbyte.c	FUNCTION_18	IF_1
0x4001ce0	      0xb801000000	                              mov eax, 1	      1206	mbyte.c	FUNCTION_18	WHILE_1	ELSE_2
0x4001ce5	            0xf3c3	                                     ret	      2318	mbyte.c	FUNCTION_52
remove_bom	DO,0:IF,2:CALL,2:FOR,0:functions,0:ELSE,1:WHILE,1:SWITCH,0	33
0x4001040	              0x55	                                push rbp	       854	mbyte.c	FUNCTION_6
0x4001041	              0x53	                                push rbx	       854	mbyte.c	FUNCTION_6
0x4001042	          0x4889fb	                            mov rbx, rdi	       854	mbyte.c	FUNCTION_6
0x4001045	        0x4883ec08	                              sub rsp, 8	       854	mbyte.c	FUNCTION_6
0x4001049	    0x8b0500000000	            mov eax, dword [0x0400104f] 	       855	mbyte.c	FUNCTION_6	IF_1
0x400104f	            0x85c0	                           test eax, eax	       855	mbyte.c	FUNCTION_6	IF_1
0x4001051	            0x7509	                           jne 0x400105c	       855	mbyte.c	FUNCTION_6	IF_1
0x4001053	            0xeb4b	                           jmp 0x40010a0	       855	mbyte.c	FUNCTION_6	IF_1
0x4001055	           0xf1f00	                         nop dword [rax]	       855	mbyte.c	FUNCTION_6	IF_1
0x4001058	        0x4883c301	                              add rbx, 1	       864	mbyte.c	FUNCTION_6	IF_1	WHILE_1	ELSE_1
0x400105c	          0x4889df	                            mov rdi, rbx	       859	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_1
0x400105f	      0xbeef000000	                           mov esi, 0xef	       859	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_1
0x4001064	      0xe800000000	                          call 0x4001069	       859	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_1
0x4001069	          0x4885c0	                           test rax, rax	       859	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_1
0x400106c	          0x4889c3	                            mov rbx, rax	       859	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_1
0x400106f	            0x742f	                            je 0x40010a0	       859	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_1
0x4001071	        0x807b01bb	                cmp byte [rbx + 1], 0xbb	       861	mbyte.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4001075	            0x75e1	                           jne 0x4001058	       861	mbyte.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4001077	        0x807b02bf	                cmp byte [rbx + 2], 0xbf	       861	mbyte.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x400107b	            0x75db	                           jne 0x4001058	       861	mbyte.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x400107d	        0x488d6b03	                      lea rbp, [rbx + 3]	       862	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x4001081	          0x4889ef	                            mov rdi, rbp	       862	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x4001084	      0xe800000000	                          call 0x4001089	       862	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x4001089	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_147	CALL_3
0x400108d	          0x4889ee	                            mov rsi, rbp	        59	string3.h	FUNCTION_147	CALL_3
0x4001090	          0x4889df	                            mov rdi, rbx	        59	string3.h	FUNCTION_147	CALL_3
0x4001093	      0xe800000000	                          call 0x4001098	        59	string3.h	FUNCTION_147	CALL_3
0x4001098	            0xebc2	                           jmp 0x400105c	        59	string3.h	FUNCTION_147	CALL_3
0x400109a	    0x660f1f440000	                    nop word [rax + rax]	        59	string3.h	FUNCTION_147	CALL_3
0x40010a0	        0x4883c408	                              add rsp, 8	       867	mbyte.c	FUNCTION_6	ELSE_1
0x40010a4	              0x5b	                                 pop rbx	       867	mbyte.c	FUNCTION_6	ELSE_1
0x40010a5	              0x5d	                                 pop rbp	       867	mbyte.c	FUNCTION_6	ELSE_1
0x40010a6	              0xc3	                                     ret	       867	mbyte.c	FUNCTION_6	ELSE_1
dbcs_ptr2char	DO,0:IF,1:CALL,1:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	10
0x4000210	           0xfb617	                   movzx edx, byte [rdi]	      1776	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x4000213	    0x80ba00000000	                       cmp byte [rdx], 1	      1776	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x400021a	          0x4889d0	                            mov rax, rdx	      1776	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x400021d	            0x7e0d	                           jle 0x400022c	      1776	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x400021f	         0xfb65701	               movzx edx, byte [rdi + 1]	      1776	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x4000223	            0x84d2	                             test dl, dl	      1776	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x4000225	            0x7405	                            je 0x400022c	      1776	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x4000227	          0xc1e008	                              shl eax, 8	      1777	mbyte.c	FUNCTION_34	IF_1
0x400022a	             0x1d0	                            add eax, edx	      1777	mbyte.c	FUNCTION_34	IF_1
0x400022c	            0xf3c3	                                     ret	      1779	mbyte.c	FUNCTION_34
im_set_position	DO,0:IF,0:CALL,0:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	48
0x4003700	              0x53	                                push rbx	      4883	mbyte.c	FUNCTION_100
0x4003701	        0x4883ec20	                           sub rsp, 0x20	      4883	mbyte.c	FUNCTION_100
0x4003705	    0x64488b042528	                mov rax, qword fs:[0x28]	      4883	mbyte.c	FUNCTION_100
0x400370e	      0x4889442418	             mov qword [rsp + 0x18], rax	      4883	mbyte.c	FUNCTION_100
0x4003713	            0x31c0	                            xor eax, eax	      4883	mbyte.c	FUNCTION_100
0x4003715	    0x48833d000000	               cmp qword [0x0400371d], 0	      4884	mbyte.c	FUNCTION_100	IF_1
0x400371d	            0x747d	                            je 0x400379c	      4884	mbyte.c	FUNCTION_100	IF_1
0x400371f	    0x8b1d00000000	            mov ebx, dword [0x04003725] 	      4888	mbyte.c	FUNCTION_100	IF_1	CALL_1
0x4003725	    0x8b0500000000	            mov eax, dword [0x0400372b] 	      4889	mbyte.c	FUNCTION_100	IF_1	CALL_2
0x400372b	          0x4189f0	                            mov r8d, esi	      4889	mbyte.c	FUNCTION_100	IF_1	CALL_2
0x400372e	    0x8b1500000000	            mov edx, dword [0x04003734] 	      4888	mbyte.c	FUNCTION_100	IF_1	CALL_1
0x4003734	            0x89d9	                            mov ecx, ebx	      4888	mbyte.c	FUNCTION_100	IF_1	CALL_1
0x4003736	           0xfafc7	                           imul eax, edi	      4889	mbyte.c	FUNCTION_100	IF_1	CALL_2
0x4003739	          0x4863ff	                         movsxd rdi, edi	      4254	mbyte.c	FUNCTION_83
0x400373c	           0xfafce	                           imul ecx, esi	      4888	mbyte.c	FUNCTION_100	IF_1	CALL_1
0x400373f	    0x8b3500000000	            mov esi, dword [0x04003745] 	      4253	mbyte.c	FUNCTION_83
0x4003745	             0x1d1	                            add ecx, edx	      4888	mbyte.c	FUNCTION_100	IF_1	CALL_1
0x4003747	             0x1c2	                            add edx, eax	      4889	mbyte.c	FUNCTION_100	IF_1	CALL_2
0x4003749	    0x488b05000000	            mov rax, qword [0x04003750] 	      4254	mbyte.c	FUNCTION_83
0x4003750	          0x890c24	                    mov dword [rsp], ecx	      4888	mbyte.c	FUNCTION_100	IF_1	CALL_1
0x4003753	        0x89542404	                mov dword [rsp + 4], edx	      4889	mbyte.c	FUNCTION_100	IF_1	CALL_2
0x4003757	          0x8b04b8	            mov eax, dword [rax + rdi*4]	      4254	mbyte.c	FUNCTION_83
0x400375a	             0x1c6	                            add esi, eax	      4253	mbyte.c	FUNCTION_83
0x400375c	        0x418d3c00	                     lea edi, [r8 + rax]	      4253	mbyte.c	FUNCTION_83
0x4003760	    0xff1500000000	                 call qword [0x04003766]	      4253	mbyte.c	FUNCTION_83
0x4003766	          0x83f801	                              cmp eax, 1	      4890	mbyte.c	FUNCTION_100	IF_1	CALL_3
0x4003769	    0x488b3d000000	            mov rdi, qword [0x04003770] 	      4893	mbyte.c	FUNCTION_100	IF_1	CALL_4
0x4003770	          0x4889e6	                            mov rsi, rsp	      4893	mbyte.c	FUNCTION_100	IF_1	CALL_4
0x4003773	           0xf9fc0	                                 setg al	      4890	mbyte.c	FUNCTION_100	IF_1	CALL_3
0x4003776	           0xfb6c0	                           movzx eax, al	      4890	mbyte.c	FUNCTION_100	IF_1	CALL_3
0x4003779	          0x83c001	                              add eax, 1	      4890	mbyte.c	FUNCTION_100	IF_1	CALL_3
0x400377c	           0xfafd8	                           imul ebx, eax	      4890	mbyte.c	FUNCTION_100	IF_1	CALL_3
0x400377f	    0x8b0500000000	            mov eax, dword [0x04003785] 	      4891	mbyte.c	FUNCTION_100	IF_1
0x4003785	        0x895c2408	                mov dword [rsp + 8], ebx	      4890	mbyte.c	FUNCTION_100	IF_1	CALL_3
0x4003789	        0x8944240c	              mov dword [rsp + 0xc], eax	      4891	mbyte.c	FUNCTION_100	IF_1
0x400378d	      0xe800000000	                          call 0x4003792	      4893	mbyte.c	FUNCTION_100	IF_1	CALL_4
0x4003792	    0x48833d000000	               cmp qword [0x0400379a], 1	      4895	mbyte.c	FUNCTION_100	IF_1	IF_2
0x400379a	            0x741c	                            je 0x40037b8	      4895	mbyte.c	FUNCTION_100	IF_1	IF_2
0x400379c	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4898	mbyte.c	FUNCTION_100
0x40037a1	    0x644833042528	                xor rax, qword fs:[0x28]	      4898	mbyte.c	FUNCTION_100
0x40037aa	            0x7513	                           jne 0x40037bf	      4898	mbyte.c	FUNCTION_100
0x40037ac	        0x4883c420	                           add rsp, 0x20	      4898	mbyte.c	FUNCTION_100
0x40037b0	              0x5b	                                 pop rbx	      4898	mbyte.c	FUNCTION_100
0x40037b1	              0xc3	                                     ret	      4898	mbyte.c	FUNCTION_100
0x40037b2	    0x660f1f440000	                    nop word [rax + rax]	      4898	mbyte.c	FUNCTION_100
0x40037b8	      0xe863cdffff	 call sym.im_preedit_window_set_position	      4896	mbyte.c	FUNCTION_100	IF_1	CALL_5
0x40037bd	            0xebdd	                           jmp 0x400379c	      4898	mbyte.c	FUNCTION_100
0x40037bf	      0xe800000000	                          call 0x40037c4	      4898	mbyte.c	FUNCTION_100
mb_adjust_cursor	DO,0:IF,0:CALL,1:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	4
0x4002da0	    0x488b05000000	            mov rax, qword [0x04002da7] 	      4094	mbyte.c	FUNCTION_77	CALL_1
0x4002da7	    0x488b3d000000	            mov rdi, qword [0x04002dae] 	      4094	mbyte.c	FUNCTION_77	CALL_1
0x4002dae	        0x488d7038	                   lea rsi, [rax + 0x38]	      4094	mbyte.c	FUNCTION_77	CALL_1
0x4002db2	      0xe939ffffff	                    jmp sym.mb_adjustpos	      4094	mbyte.c	FUNCTION_77	CALL_1
utf_ptr2cells	DO,0:IF,3:CALL,4:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	54
0x4002090	              0x55	                                push rbp	      1624	mbyte.c	FUNCTION_22
0x4002091	              0x53	                                push rbx	      1624	mbyte.c	FUNCTION_22
0x4002092	      0xb801000000	                              mov eax, 1	      1639	mbyte.c	FUNCTION_22
0x4002097	        0x4883ec08	                              sub rsp, 8	      1624	mbyte.c	FUNCTION_22
0x400209b	           0xfb62f	                   movzx ebp, byte [rdi]	      1628	mbyte.c	FUNCTION_22	IF_1
0x400209e	          0x4084ed	                           test bpl, bpl	      1628	mbyte.c	FUNCTION_22	IF_1
0x40020a1	            0x780d	                            js 0x40020b0	      1628	mbyte.c	FUNCTION_22	IF_1
0x40020a3	        0x4883c408	                              add rsp, 8	      1640	mbyte.c	FUNCTION_22
0x40020a7	              0x5b	                                 pop rbx	      1640	mbyte.c	FUNCTION_22
0x40020a8	              0x5d	                                 pop rbp	      1640	mbyte.c	FUNCTION_22
0x40020a9	              0xc3	                                     ret	      1640	mbyte.c	FUNCTION_22
0x40020aa	    0x660f1f440000	                    nop word [rax + rax]	      1640	mbyte.c	FUNCTION_22
0x40020b0	          0x4889fb	                            mov rbx, rdi	      1640	mbyte.c	FUNCTION_22
0x40020b3	      0xe800000000	                          call 0x40020b8	      1630	mbyte.c	FUNCTION_22	IF_1	CALL_1
0x40020b8	     0xfbeb5000000	                   movsx esi, byte [rbp]	      2087	mbyte.c	FUNCTION_45
0x40020bf	          0x83fe01	                              cmp esi, 1	      2088	mbyte.c	FUNCTION_45	FOR_1
0x40020c2	            0x7e31	                           jle 0x40020f5	      2088	mbyte.c	FUNCTION_45	FOR_1
0x40020c4	         0xfb65301	               movzx edx, byte [rbx + 1]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40020c8	          0x83e2c0	                     and edx, 0xffffffc0	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40020cb	          0x80fa80	                            cmp dl, 0x80	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40020ce	            0x7540	                           jne 0x4002110	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40020d0	          0x8d4efe	                      lea ecx, [rsi - 2]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40020d3	          0x4889df	                            mov rdi, rbx	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40020d6	          0x4801d9	                            add rcx, rbx	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40020d9	            0xeb15	                           jmp 0x40020f0	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40020db	       0xf1f440000	                   nop dword [rax + rax]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40020e0	         0xfb65702	               movzx edx, byte [rdi + 2]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40020e4	        0x4883c701	                              add rdi, 1	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40020e8	          0x83e2c0	                     and edx, 0xffffffc0	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40020eb	          0x80fa80	                            cmp dl, 0x80	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40020ee	            0x7520	                           jne 0x4002110	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40020f0	          0x4839cf	                            cmp rdi, rcx	      2088	mbyte.c	FUNCTION_45	FOR_1
0x40020f3	            0x75eb	                           jne 0x40020e0	      2088	mbyte.c	FUNCTION_45	FOR_1
0x40020f5	            0x85c0	                           test eax, eax	      1632	mbyte.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x40020f7	            0x7417	                            je 0x4002110	      1632	mbyte.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x40020f9	          0x83fe01	                              cmp esi, 1	      1632	mbyte.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x40020fc	            0x7412	                            je 0x4002110	      1632	mbyte.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x40020fe	          0x83f87f	                           cmp eax, 0x7f	      1635	mbyte.c	FUNCTION_22	IF_1	IF_3
0x4002101	            0x89c7	                            mov edi, eax	      1636	mbyte.c	FUNCTION_22	IF_1	CALL_3
0x4002103	            0x7e1b	                           jle 0x4002120	      1635	mbyte.c	FUNCTION_22	IF_1	IF_3
0x4002105	        0x4883c408	                              add rsp, 8	      1640	mbyte.c	FUNCTION_22
0x4002109	              0x5b	                                 pop rbx	      1640	mbyte.c	FUNCTION_22
0x400210a	              0x5d	                                 pop rbp	      1640	mbyte.c	FUNCTION_22
0x400210b	      0xe9a0fcffff	                  jmp sym.utf_char2cells	      1637	mbyte.c	FUNCTION_22	IF_1	CALL_4
0x4002110	        0x4883c408	                              add rsp, 8	      1640	mbyte.c	FUNCTION_22
0x4002114	      0xb804000000	                              mov eax, 4	      1633	mbyte.c	FUNCTION_22	IF_1	IF_2
0x4002119	              0x5b	                                 pop rbx	      1640	mbyte.c	FUNCTION_22
0x400211a	              0x5d	                                 pop rbp	      1640	mbyte.c	FUNCTION_22
0x400211b	              0xc3	                                     ret	      1640	mbyte.c	FUNCTION_22
0x400211c	         0xf1f4000	                         nop dword [rax]	      1640	mbyte.c	FUNCTION_22
0x4002120	        0x4883c408	                              add rsp, 8	      1640	mbyte.c	FUNCTION_22
0x4002124	              0x5b	                                 pop rbx	      1640	mbyte.c	FUNCTION_22
0x4002125	              0x5d	                                 pop rbp	      1640	mbyte.c	FUNCTION_22
0x4002126	      0xe900000000	                           jmp 0x400212b	      1636	mbyte.c	FUNCTION_22	IF_1	CALL_3
latin_char2bytes	DO,0:IF,0:CALL,0:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	3
0x4000050	          0x40883e	                     mov byte [rsi], dil	      1101	mbyte.c	FUNCTION_12
0x4000053	      0xb801000000	                              mov eax, 1	      1103	mbyte.c	FUNCTION_12
0x4000058	              0xc3	                                     ret	      1103	mbyte.c	FUNCTION_12
mb_unescape	DO,0:IF,5:CALL,0:FOR,1:functions,0:ELSE,3:WHILE,0:SWITCH,0	77
0x4002ea0	            0x4157	                                push r15	      4187	mbyte.c	FUNCTION_82
0x4002ea2	            0x4156	                                push r14	      4187	mbyte.c	FUNCTION_82
0x4002ea4	            0x4155	                                push r13	      4187	mbyte.c	FUNCTION_82
0x4002ea6	            0x4154	                                push r12	      4187	mbyte.c	FUNCTION_82
0x4002ea8	              0x55	                                push rbp	      4187	mbyte.c	FUNCTION_82
0x4002ea9	              0x53	                                push rbx	      4187	mbyte.c	FUNCTION_82
0x4002eaa	        0x4883ec08	                              sub rsp, 8	      4187	mbyte.c	FUNCTION_82
0x4002eae	          0x4c8b3f	                    mov r15, qword [rdi]	      4191	mbyte.c	FUNCTION_82
0x4002eb1	        0x410fb607	                   movzx eax, byte [r15]	      4196	mbyte.c	FUNCTION_82	FOR_1
0x4002eb5	            0x84c0	                             test al, al	      4196	mbyte.c	FUNCTION_82	FOR_1
0x4002eb7	            0x746f	                            je 0x4002f28	      4196	mbyte.c	FUNCTION_82	FOR_1
0x4002eb9	          0x4989fd	                            mov r13, rdi	      4196	mbyte.c	FUNCTION_82	FOR_1
0x4002ebc	    0x41bc00000000	                             mov r12d, 0	      4196	mbyte.c	FUNCTION_82	FOR_1
0x4002ec2	      0xbb01000000	                              mov ebx, 1	      4196	mbyte.c	FUNCTION_82	FOR_1
0x4002ec7	            0x31d2	                            xor edx, edx	      4196	mbyte.c	FUNCTION_82	FOR_1
0x4002ec9	            0x31ed	                            xor ebp, ebp	      4196	mbyte.c	FUNCTION_82	FOR_1
0x4002ecb	            0x3c80	                            cmp al, 0x80	      4198	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x4002ecd	            0x7471	                            je 0x4002f40	      4198	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x4002ecf	            0x3c9b	                            cmp al, 0x9b	      4205	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4002ed1	     0xf8499000000	                            je 0x4002f70	      4205	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4002ed7	          0x4189de	                           mov r14d, ebx	      4223	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x4002eda	        0x41880424	                      mov byte [r12], al	      4223	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x4002ede	          0x4863c3	                         movsxd rax, ebx	      4224	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x4002ee1	      0xbf00000000	                              mov edi, 0	      4228	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x4002ee6	    0xc68000000000	                       mov byte [rax], 0	      4224	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x4002eed	    0xff1500000000	                 call qword [0x04002ef3]	      4228	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x4002ef3	          0x83f801	                              cmp eax, 1	      4228	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x4002ef6	     0xf8fa4000000	                            jg 0x4002fa0	      4228	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x4002efc	    0x803d00000000	                cmp byte [0x04002f03], 0	      4235	mbyte.c	FUNCTION_82	FOR_1	IF_5
0x4002f03	            0x7923	                           jns 0x4002f28	      4235	mbyte.c	FUNCTION_82	FOR_1	IF_5
0x4002f05	          0x83c501	                              add ebp, 1	      4196	mbyte.c	FUNCTION_82	FOR_1
0x4002f08	          0x83c301	                              add ebx, 1	      4196	mbyte.c	FUNCTION_82	FOR_1
0x4002f0b	        0x4983c401	                              add r12, 1	      4196	mbyte.c	FUNCTION_82	FOR_1
0x4002f0f	          0x4863d5	                         movsxd rdx, ebp	      4196	mbyte.c	FUNCTION_82	FOR_1
0x4002f12	        0x4183fe04	                             cmp r14d, 4	      4196	mbyte.c	FUNCTION_82	FOR_1
0x4002f16	      0x410fb60417	             movzx eax, byte [r15 + rdx]	      4196	mbyte.c	FUNCTION_82	FOR_1
0x4002f1b	            0x740b	                            je 0x4002f28	      4196	mbyte.c	FUNCTION_82	FOR_1
0x4002f1d	            0x84c0	                             test al, al	      4196	mbyte.c	FUNCTION_82	FOR_1
0x4002f1f	            0x75aa	                           jne 0x4002ecb	      4196	mbyte.c	FUNCTION_82	FOR_1
0x4002f21	     0xf1f80000000	                         nop dword [rax]	      4196	mbyte.c	FUNCTION_82	FOR_1
0x4002f28	            0x31c0	                            xor eax, eax	      4238	mbyte.c	FUNCTION_82
0x4002f2a	        0x4883c408	                              add rsp, 8	      4239	mbyte.c	FUNCTION_82
0x4002f2e	              0x5b	                                 pop rbx	      4239	mbyte.c	FUNCTION_82
0x4002f2f	              0x5d	                                 pop rbp	      4239	mbyte.c	FUNCTION_82
0x4002f30	            0x415c	                                 pop r12	      4239	mbyte.c	FUNCTION_82
0x4002f32	            0x415d	                                 pop r13	      4239	mbyte.c	FUNCTION_82
0x4002f34	            0x415e	                                 pop r14	      4239	mbyte.c	FUNCTION_82
0x4002f36	            0x415f	                                 pop r15	      4239	mbyte.c	FUNCTION_82
0x4002f38	              0xc3	                                     ret	      4239	mbyte.c	FUNCTION_82
0x4002f39	     0xf1f80000000	                         nop dword [rax]	      4239	mbyte.c	FUNCTION_82
0x4002f40	    0x410fb64c1701	        movzx ecx, byte [r15 + rdx + 1] 	      4199	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x4002f46	          0x80f9fe	                            cmp cl, 0xfe	      4199	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x4002f49	            0x7435	                            je 0x4002f80	      4199	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x4002f4b	          0x80f9fd	                            cmp cl, 0xfd	      4210	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4002f4e	            0x75d8	                           jne 0x4002f28	      4210	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4002f50	    0x41807c170251	         cmp byte [r15 + rdx + 2], 0x51 	      4211	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4002f56	            0x75d0	                           jne 0x4002f28	      4211	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4002f58	          0x4189de	                           mov r14d, ebx	      4213	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4002f5b	      0x41c604249b	                    mov byte [r12], 0x9b	      4213	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4002f60	          0x83c502	                              add ebp, 2	      4214	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4002f63	      0xe976ffffff	                           jmp 0x4002ede	      4214	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4002f68	     0xf1f84000000	                   nop dword [rax + rax]	      4214	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4002f70	    0x410fb64c1701	        movzx ecx, byte [r15 + rdx + 1] 	      4214	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4002f76	            0xebd3	                           jmp 0x4002f4b	      4214	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4002f78	     0xf1f84000000	                   nop dword [rax + rax]	      4214	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4002f80	    0x41807c170258	         cmp byte [r15 + rdx + 2], 0x58 	      4200	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x4002f86	            0x75a0	                           jne 0x4002f28	      4200	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x4002f88	          0x4189de	                           mov r14d, ebx	      4202	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x4002f8b	        0x41880424	                      mov byte [r12], al	      4202	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x4002f8f	          0x83c502	                              add ebp, 2	      4203	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x4002f92	      0xe947ffffff	                           jmp 0x4002ede	      4203	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x4002f97	    0x660f1f840000	                    nop word [rax + rax]	      4203	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x4002fa0	          0x4863ed	                         movsxd rbp, ebp	      4230	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x4002fa3	      0x498d442f01	                lea rax, [r15 + rbp + 1]	      4230	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x4002fa8	        0x49894500	                    mov qword [r13], rax	      4230	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x4002fac	      0xb800000000	                              mov eax, 0	      4231	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x4002fb1	      0xe974ffffff	                           jmp 0x4002f2a	      4231	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
im_set_active	DO,0:IF,1:CALL,2:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	21
0x4003ed0	              0x53	                                push rbx	      4859	mbyte.c	FUNCTION_98
0x4003ed1	            0x89fb	                            mov ebx, edi	      4859	mbyte.c	FUNCTION_98
0x4003ed3	      0xe800000000	                          call 0x4003ed8	      4862	mbyte.c	FUNCTION_98	CALL_1
0x4003ed8	            0x31d2	                            xor edx, edx	      4862	mbyte.c	FUNCTION_98	CALL_1
0x4003eda	            0x85c0	                           test eax, eax	      4862	mbyte.c	FUNCTION_98	CALL_1
0x4003edc	           0xf95c2	                                setne dl	      4862	mbyte.c	FUNCTION_98	CALL_1
0x4003edf	            0x31c0	                            xor eax, eax	      4862	mbyte.c	FUNCTION_98	CALL_1
0x4003ee1	            0x85db	                           test ebx, ebx	      4863	mbyte.c	FUNCTION_98
0x4003ee3	            0x740d	                            je 0x4003ef2	      4863	mbyte.c	FUNCTION_98
0x4003ee5	    0x8b0d00000000	            mov ecx, dword [0x04003eeb] 	      4863	mbyte.c	FUNCTION_98
0x4003eeb	            0x31c0	                            xor eax, eax	      4863	mbyte.c	FUNCTION_98
0x4003eed	            0x85c9	                           test ecx, ecx	      4863	mbyte.c	FUNCTION_98
0x4003eef	           0xf94c0	                                 sete al	      4863	mbyte.c	FUNCTION_98
0x4003ef2	            0x39d0	                            cmp eax, edx	      4865	mbyte.c	FUNCTION_98	IF_1
0x4003ef4	    0x890500000000	            mov dword [0x04003efa], eax 	      4863	mbyte.c	FUNCTION_98
0x4003efa	            0x740c	                            je 0x4003f08	      4865	mbyte.c	FUNCTION_98	IF_1
0x4003efc	              0x5b	                                 pop rbx	      4867	mbyte.c	FUNCTION_98
0x4003efd	      0xe90efeffff	                       jmp sym.xim_reset	      4866	mbyte.c	FUNCTION_98	CALL_2
0x4003f02	    0x660f1f440000	                    nop word [rax + rax]	      4866	mbyte.c	FUNCTION_98	CALL_2
0x4003f08	              0x5b	                                 pop rbx	      4867	mbyte.c	FUNCTION_98
0x4003f09	              0xc3	                                     ret	      4867	mbyte.c	FUNCTION_98
enc_locale	DO,0:IF,4:CALL,7:FOR,0:functions,0:ELSE,2:WHILE,0:SWITCH,0	18
0x4003670	        0x4883ec08	                              sub rsp, 8	      4461	mbyte.c	FUNCTION_89
0x4003674	      0xbf0e000000	                            mov edi, 0xe	      4478	mbyte.c	FUNCTION_89	IF_3	CALL_5
0x4003679	      0xe800000000	                          call 0x400367e	      4478	mbyte.c	FUNCTION_89	IF_3	CALL_5
0x400367e	          0x4885c0	                           test rax, rax	      4478	mbyte.c	FUNCTION_89	IF_3	CALL_5
0x4003681	            0x7405	                            je 0x4003688	      4478	mbyte.c	FUNCTION_89	IF_3	CALL_5
0x4003683	          0x803800	                       cmp byte [rax], 0	      4478	mbyte.c	FUNCTION_89	IF_3	CALL_5
0x4003686	            0x751a	                           jne 0x40036a2	      4478	mbyte.c	FUNCTION_89	IF_3	CALL_5
0x4003688	            0x31f6	                            xor esi, esi	      4481	mbyte.c	FUNCTION_89	IF_3	IF_4	CALL_6
0x400368a	            0x31ff	                            xor edi, edi	      4481	mbyte.c	FUNCTION_89	IF_3	IF_4	CALL_6
0x400368c	      0xe800000000	                          call 0x4003691	      4481	mbyte.c	FUNCTION_89	IF_3	IF_4	CALL_6
0x4003691	          0x4885c0	                           test rax, rax	      4481	mbyte.c	FUNCTION_89	IF_3	IF_4	CALL_6
0x4003694	            0x740c	                            je 0x40036a2	      4481	mbyte.c	FUNCTION_89	IF_3	IF_4	CALL_6
0x4003696	          0x803800	                       cmp byte [rax], 0	      4483	mbyte.c	FUNCTION_89	IF_3	IF_4
0x4003699	      0xba00000000	                              mov edx, 0	      4483	mbyte.c	FUNCTION_89	IF_3	IF_4
0x400369e	        0x480f44c2	                          cmove rax, rdx	      4483	mbyte.c	FUNCTION_89	IF_3	IF_4
0x40036a2	          0x4889c7	                            mov rdi, rax	      4485	mbyte.c	FUNCTION_89	CALL_7
0x40036a5	        0x4883c408	                              add rsp, 8	      4487	mbyte.c	FUNCTION_89
0x40036a9	      0xe9f2fdffff	                  jmp sym.enc_locale_env	      4485	mbyte.c	FUNCTION_89	CALL_7
im_preedit_end_cb	DO,0:IF,1:CALL,4:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	12
0x4000780	        0x4883ec08	                              sub rsp, 8	      5274	mbyte.c	FUNCTION_112
0x4000784	      0xe8b7feffff	              call sym.im_delete_preedit	      5278	mbyte.c	FUNCTION_112	CALL_2
0x4000789	    0x48833d000000	               cmp qword [0x04000791], 0	      5281	mbyte.c	FUNCTION_112	IF_1
0x4000791	            0x750a	                           jne 0x400079d	      5281	mbyte.c	FUNCTION_112	IF_1
0x4000793	    0xc70500000000	     mov dword [0x0400079d], 0x7fffffff 	      5282	mbyte.c	FUNCTION_112	IF_1
0x400079d	            0x31f6	                            xor esi, esi	      5292	mbyte.c	FUNCTION_112	CALL_3
0x400079f	      0xbf01000000	                              mov edi, 1	      5292	mbyte.c	FUNCTION_112	CALL_3
0x40007a4	    0xc70500000000	               mov dword [0x040007ae], 0	      5283	mbyte.c	FUNCTION_112
0x40007ae	    0xc70500000000	               mov dword [0x040007b8], 0	      5291	mbyte.c	FUNCTION_112
0x40007b8	      0xe800000000	                          call 0x40007bd	      5292	mbyte.c	FUNCTION_112	CALL_3
0x40007bd	        0x4883c408	                              add rsp, 8	      5294	mbyte.c	FUNCTION_112
0x40007c1	            0xeb8d	                    jmp sym.im_show_info	      5293	mbyte.c	FUNCTION_112	CALL_4
mb_adjustpos	DO,0:IF,3:CALL,4:FOR,0:functions,0:ELSE,1:WHILE,0:SWITCH,0	53
0x4002cf0	              0x55	                                push rbp	      4103	mbyte.c	FUNCTION_78
0x4002cf1	              0x53	                                push rbx	      4103	mbyte.c	FUNCTION_78
0x4002cf2	        0x4883ec08	                              sub rsp, 8	      4103	mbyte.c	FUNCTION_78
0x4002cf6	          0x8b4608	                mov eax, dword [rsi + 8]	      4106	mbyte.c	FUNCTION_78	IF_1
0x4002cf9	            0x85c0	                           test eax, eax	      4106	mbyte.c	FUNCTION_78	IF_1
0x4002cfb	     0xf8e8f000000	                           jle 0x4002d90	      4106	mbyte.c	FUNCTION_78	IF_1
0x4002d01	          0x4889f3	                            mov rbx, rsi	      4106	mbyte.c	FUNCTION_78	IF_1
0x4002d04	          0x488b36	                    mov rsi, qword [rsi]	      4112	mbyte.c	FUNCTION_78	IF_1	CALL_1
0x4002d07	            0x31d2	                            xor edx, edx	      4112	mbyte.c	FUNCTION_78	IF_1	CALL_1
0x4002d09	      0xe800000000	                          call 0x4002d0e	      4112	mbyte.c	FUNCTION_78	IF_1	CALL_1
0x4002d0e	          0x803800	                       cmp byte [rax], 0	      4113	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x4002d11	          0x4889c5	                            mov rbp, rax	      4112	mbyte.c	FUNCTION_78	IF_1	CALL_1
0x4002d14	            0x751a	                           jne 0x4002d30	      4113	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x4002d16	        0x837b0c01	                cmp dword [rbx + 0xc], 1	      4120	mbyte.c	FUNCTION_78	IF_1	IF_3
0x4002d1a	    0xc74308000000	                  mov dword [rbx + 8], 0	      4114	mbyte.c	FUNCTION_78	IF_1	IF_2
0x4002d21	            0x7435	                            je 0x4002d58	      4120	mbyte.c	FUNCTION_78	IF_1	IF_3
0x4002d23	        0x4883c408	                              add rsp, 8	      4127	mbyte.c	FUNCTION_78
0x4002d27	              0x5b	                                 pop rbx	      4127	mbyte.c	FUNCTION_78
0x4002d28	              0x5d	                                 pop rbp	      4127	mbyte.c	FUNCTION_78
0x4002d29	              0xc3	                                     ret	      4127	mbyte.c	FUNCTION_78
0x4002d2a	    0x660f1f440000	                    nop word [rax + rax]	      4127	mbyte.c	FUNCTION_78
0x4002d30	          0x4889c7	                            mov rdi, rax	      4113	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x4002d33	      0xe800000000	                          call 0x4002d38	      4113	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x4002d38	        0x48637308	            movsxd rsi, dword [rbx + 8] 	      4113	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x4002d3c	            0x39c6	                            cmp esi, eax	      4113	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x4002d3e	            0x7fd6	                            jg 0x4002d16	      4113	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x4002d40	          0x4801ee	                            add rsi, rbp	      4116	mbyte.c	FUNCTION_78	IF_1	ELSE_1
0x4002d43	          0x4889ef	                            mov rdi, rbp	      4116	mbyte.c	FUNCTION_78	IF_1	ELSE_1
0x4002d46	    0xff1500000000	                 call qword [0x04002d4c]	      4116	mbyte.c	FUNCTION_78	IF_1	ELSE_1
0x4002d4c	          0x294308	                sub dword [rbx + 8], eax	      4116	mbyte.c	FUNCTION_78	IF_1	ELSE_1
0x4002d4f	        0x837b0c01	                cmp dword [rbx + 0xc], 1	      4120	mbyte.c	FUNCTION_78	IF_1	IF_3
0x4002d53	            0x75ce	                           jne 0x4002d23	      4120	mbyte.c	FUNCTION_78	IF_1	IF_3
0x4002d55	           0xf1f00	                         nop dword [rax]	      4120	mbyte.c	FUNCTION_78	IF_1	IF_3
0x4002d58	        0x48637b08	            movsxd rdi, dword [rbx + 8] 	      4121	mbyte.c	FUNCTION_78	IF_1	IF_3
0x4002d5c	          0x4801ef	                            add rdi, rbp	      4121	mbyte.c	FUNCTION_78	IF_1	IF_3
0x4002d5f	          0x803f09	                       cmp byte [rdi], 9	      4121	mbyte.c	FUNCTION_78	IF_1	IF_3
0x4002d62	            0x74bf	                            je 0x4002d23	      4121	mbyte.c	FUNCTION_78	IF_1	IF_3
0x4002d64	    0xff1500000000	                 call qword [0x04002d6a]	      4122	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_3
0x4002d6a	            0x89c7	                            mov edi, eax	      4122	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_3
0x4002d6c	      0xe800000000	                          call 0x4002d71	      4122	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_3
0x4002d71	            0x85c0	                           test eax, eax	      4122	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_3
0x4002d73	            0x74ae	                            je 0x4002d23	      4122	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_3
0x4002d75	        0x48637b08	            movsxd rdi, dword [rbx + 8] 	      4123	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_4
0x4002d79	          0x4801ef	                            add rdi, rbp	      4123	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_4
0x4002d7c	      0xe800000000	                          call 0x4002d81	      4123	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_4
0x4002d81	          0x83f801	                              cmp eax, 1	      4123	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_4
0x4002d84	            0x7e9d	                           jle 0x4002d23	      4123	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_4
0x4002d86	    0xc7430c000000	                mov dword [rbx + 0xc], 0	      4124	mbyte.c	FUNCTION_78	IF_1	IF_3
0x4002d8d	            0xeb94	                           jmp 0x4002d23	      4127	mbyte.c	FUNCTION_78
0x4002d8f	              0x90	                                     nop	      4127	mbyte.c	FUNCTION_78
0x4002d90	        0x837e0c01	                cmp dword [rsi + 0xc], 1	      4108	mbyte.c	FUNCTION_78	IF_1
0x4002d94	     0xf8f67ffffff	                            jg 0x4002d01	      4108	mbyte.c	FUNCTION_78	IF_1
0x4002d9a	            0xeb87	                           jmp 0x4002d23	      4108	mbyte.c	FUNCTION_78	IF_1
dbcs_ptr2len_len	DO,0:IF,3:CALL,1:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	22
0x40000c0	            0x85f6	                           test esi, esi	      1166	mbyte.c	FUNCTION_17	IF_1
0x40000c2	            0x7e2c	                           jle 0x40000f0	      1166	mbyte.c	FUNCTION_17	IF_1
0x40000c4	           0xfb617	                   movzx edx, byte [rdi]	      1166	mbyte.c	FUNCTION_17	IF_1
0x40000c7	            0x31c0	                            xor eax, eax	      1167	mbyte.c	FUNCTION_17	IF_1
0x40000c9	            0x84d2	                             test dl, dl	      1166	mbyte.c	FUNCTION_17	IF_1
0x40000cb	            0x7411	                            je 0x40000de	      1166	mbyte.c	FUNCTION_17	IF_1
0x40000cd	          0x83fe01	                              cmp esi, 1	      1168	mbyte.c	FUNCTION_17	IF_2
0x40000d0	            0x7426	                            je 0x40000f8	      1168	mbyte.c	FUNCTION_17	IF_2
0x40000d2	     0xfbe82000000	                   movsx eax, byte [rdx]	      1171	mbyte.c	FUNCTION_17	CALL_1
0x40000d9	          0x83f802	                              cmp eax, 2	      1172	mbyte.c	FUNCTION_17	IF_3
0x40000dc	            0x7402	                            je 0x40000e0	      1172	mbyte.c	FUNCTION_17	IF_3
0x40000de	            0xf3c3	                                     ret	      1175	mbyte.c	FUNCTION_17
0x40000e0	        0x807f0101	                   cmp byte [rdi + 1], 1	      1172	mbyte.c	FUNCTION_17	IF_3
0x40000e4	            0x19c0	                            sbb eax, eax	      1172	mbyte.c	FUNCTION_17	IF_3
0x40000e6	          0x83c002	                              add eax, 2	      1172	mbyte.c	FUNCTION_17	IF_3
0x40000e9	              0xc3	                                     ret	      1172	mbyte.c	FUNCTION_17	IF_3
0x40000ea	    0x660f1f440000	                    nop word [rax + rax]	      1172	mbyte.c	FUNCTION_17	IF_3
0x40000f0	            0x31c0	                            xor eax, eax	      1167	mbyte.c	FUNCTION_17	IF_1
0x40000f2	              0xc3	                                     ret	      1167	mbyte.c	FUNCTION_17	IF_1
0x40000f3	       0xf1f440000	                   nop dword [rax + rax]	      1167	mbyte.c	FUNCTION_17	IF_1
0x40000f8	      0xb801000000	                              mov eax, 1	      1173	mbyte.c	FUNCTION_17	IF_3
0x40000fd	              0xc3	                                     ret	      1175	mbyte.c	FUNCTION_17
im_get_feedback_attr	DO,1:IF,5:CALL,9:FOR,1:functions,0:ELSE,0:WHILE,0:SWITCH,0	140
0x40037d0	            0x4156	                                push r14	      5487	mbyte.c	FUNCTION_115
0x40037d2	            0x4155	                                push r13	      5487	mbyte.c	FUNCTION_115
0x40037d4	            0x4154	                                push r12	      5487	mbyte.c	FUNCTION_115
0x40037d6	              0x55	                                push rbp	      5487	mbyte.c	FUNCTION_115
0x40037d7	            0x89fd	                            mov ebp, edi	      5487	mbyte.c	FUNCTION_115
0x40037d9	              0x53	                                push rbx	      5487	mbyte.c	FUNCTION_115
0x40037da	        0x4883ec20	                           sub rsp, 0x20	      5487	mbyte.c	FUNCTION_115
0x40037de	    0x488b3d000000	            mov rdi, qword [0x040037e5] 	      5492	mbyte.c	FUNCTION_115	IF_1
0x40037e5	    0x64488b042528	                mov rax, qword fs:[0x28]	      5487	mbyte.c	FUNCTION_115
0x40037ee	      0x4889442418	             mov qword [rsp + 0x18], rax	      5487	mbyte.c	FUNCTION_115
0x40037f3	            0x31c0	                            xor eax, eax	      5487	mbyte.c	FUNCTION_115
0x40037f5	    0x48c744240800	                  mov qword [rsp + 8], 0	      5488	mbyte.c	FUNCTION_115
0x40037fe	    0x48c744241000	               mov qword [rsp + 0x10], 0	      5489	mbyte.c	FUNCTION_115
0x4003807	          0x4885ff	                           test rdi, rdi	      5492	mbyte.c	FUNCTION_115	IF_1
0x400380a	     0xf84c9010000	                            je 0x40039d9	      5492	mbyte.c	FUNCTION_115	IF_1
0x4003810	      0x488d542410	                   lea rdx, [rsp + 0x10]	      5495	mbyte.c	FUNCTION_115	CALL_1
0x4003815	      0x488d742408	                      lea rsi, [rsp + 8]	      5495	mbyte.c	FUNCTION_115	CALL_1
0x400381a	            0x31c9	                            xor ecx, ecx	      5495	mbyte.c	FUNCTION_115	CALL_1
0x400381c	    0x41beffffffff	                    mov r14d, 0xffffffff	      5490	mbyte.c	FUNCTION_115
0x4003822	      0xe800000000	                          call 0x4003827	      5495	mbyte.c	FUNCTION_115	CALL_1
0x4003827	      0x4c8b642408	                mov r12, qword [rsp + 8]	      5497	mbyte.c	FUNCTION_115	IF_2
0x400382c	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	      5497	mbyte.c	FUNCTION_115	IF_2
0x4003831	          0x4d85e4	                           test r12, r12	      5497	mbyte.c	FUNCTION_115	IF_2
0x4003834	     0xf8443010000	                            je 0x400397d	      5497	mbyte.c	FUNCTION_115	IF_2
0x400383a	          0x4d85ed	                           test r13, r13	      5497	mbyte.c	FUNCTION_115	IF_2
0x400383d	     0xf844c010000	                            je 0x400398f	      5497	mbyte.c	FUNCTION_115	IF_2
0x4003843	            0x85ed	                           test ebp, ebp	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x4003845	     0xf8e85010000	                           jle 0x40039d0	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x400384b	      0x41803c2400	                       cmp byte [r12], 0	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x4003850	     0xf842c010000	                            je 0x4003982	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x4003856	          0x4c89e7	                            mov rdi, r12	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x4003859	            0x31db	                            xor ebx, ebx	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x400385b	            0xeb12	                           jmp 0x400386f	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x400385d	           0xf1f00	                         nop dword [rax]	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x4003860	          0x4863fb	                         movsxd rdi, ebx	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x4003863	          0x4c01e7	                            add rdi, r12	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x4003866	          0x803f00	                       cmp byte [rdi], 0	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x4003869	     0xf8451010000	                            je 0x40039c0	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x400386f	      0xe800000000	                          call 0x4003874	      5503	mbyte.c	FUNCTION_115	IF_2	CALL_2
0x4003874	             0x1c3	                            add ebx, eax	      5503	mbyte.c	FUNCTION_115	IF_2	CALL_2
0x4003876	          0x83ed01	                              sub ebp, 1	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x4003879	            0x75e5	                           jne 0x4003860	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x400387b	          0x4863c3	                         movsxd rax, ebx	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x400387e	      0x41803c0400	                 cmp byte [r12 + rax], 0	      5505	mbyte.c	FUNCTION_115	IF_2	IF_3
0x4003883	     0xf8437010000	                            je 0x40039c0	      5505	mbyte.c	FUNCTION_115	IF_2	IF_3
0x4003889	          0x4c89ef	                            mov rdi, r13	      5511	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_3
0x400388c	          0x4531f6	                          xor r14d, r14d	      5510	mbyte.c	FUNCTION_115	IF_2	IF_3
0x400388f	      0xe800000000	                          call 0x4003894	      5511	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_3
0x4003894	          0x4889c5	                            mov rbp, rax	      5511	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_3
0x4003897	            0xeb17	                           jmp 0x40038b0	      5511	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_3
0x4003899	     0xf1f80000000	                         nop dword [rax]	      5511	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_3
0x40038a0	          0x4889ef	                            mov rdi, rbp	      5521	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_6
0x40038a3	      0xe800000000	                          call 0x40038a8	      5521	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_6
0x40038a8	            0x85c0	                           test eax, eax	      5521	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_6
0x40038aa	     0xf84c0000000	                            je 0x4003970	      5521	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_6
0x40038b0	      0x488d542404	                      lea rdx, [rsp + 4]	      5516	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	CALL_4
0x40038b5	          0x4889e6	                            mov rsi, rsp	      5516	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	CALL_4
0x40038b8	          0x4889ef	                            mov rdi, rbp	      5516	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	CALL_4
0x40038bb	      0xe800000000	                          call 0x40038c0	      5516	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	CALL_4
0x40038c0	          0x391c24	                    cmp dword [rsp], ebx	      5518	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	IF_4
0x40038c3	            0x7fdb	                            jg 0x40038a0	      5518	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	IF_4
0x40038c5	        0x395c2404	                cmp dword [rsp + 4], ebx	      5518	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	IF_4
0x40038c9	            0x7ed5	                           jle 0x40038a0	      5518	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	IF_4
0x40038cb	      0xbe0b000000	                            mov esi, 0xb	      5454	mbyte.c	FUNCTION_114	CALL_1
0x40038d0	          0x4889ef	                            mov rdi, rbp	      5454	mbyte.c	FUNCTION_114	CALL_1
0x40038d3	      0xe800000000	                          call 0x40038d8	      5454	mbyte.c	FUNCTION_114	CALL_1
0x40038d8	          0x4885c0	                           test rax, rax	      5455	mbyte.c	FUNCTION_114	IF_1
0x40038db	     0xf84e7000000	                            je 0x40039c8	      5455	mbyte.c	FUNCTION_114	IF_1
0x40038e1	        0x83781001	               cmp dword [rax + 0x10], 1	      5457	mbyte.c	FUNCTION_114	IF_1
0x40038e5	          0x4519e4	                          sbb r12d, r12d	      5457	mbyte.c	FUNCTION_114	IF_1
0x40038e8	          0x41f7d4	                                not r12d	      5457	mbyte.c	FUNCTION_114	IF_1
0x40038eb	        0x4183e408	                             and r12d, 8	      5457	mbyte.c	FUNCTION_114	IF_1
0x40038ef	      0xbe04000000	                              mov esi, 4	      5459	mbyte.c	FUNCTION_114	CALL_2
0x40038f4	          0x4889ef	                            mov rdi, rbp	      5459	mbyte.c	FUNCTION_114	CALL_2
0x40038f7	      0xe800000000	                          call 0x40038fc	      5459	mbyte.c	FUNCTION_114	CALL_2
0x40038fc	          0x4885c0	                           test rax, rax	      5460	mbyte.c	FUNCTION_114	IF_2
0x40038ff	            0x7411	                            je 0x4003912	      5460	mbyte.c	FUNCTION_114	IF_2
0x4003901	          0x4489e2	                           mov edx, r12d	      5461	mbyte.c	FUNCTION_114	IF_2
0x4003904	          0x83ca02	                               or edx, 2	      5461	mbyte.c	FUNCTION_114	IF_2
0x4003907	    0x817810bc0200	          cmp dword [rax + 0x10], 0x2bc 	      5461	mbyte.c	FUNCTION_114	IF_2
0x400390e	        0x440f4de2	                        cmovge r12d, edx	      5461	mbyte.c	FUNCTION_114	IF_2
0x4003912	      0xbe03000000	                              mov esi, 3	      5463	mbyte.c	FUNCTION_114	CALL_3
0x4003917	          0x4889ef	                            mov rdi, rbp	      5463	mbyte.c	FUNCTION_114	CALL_3
0x400391a	      0xe800000000	                          call 0x400391f	      5463	mbyte.c	FUNCTION_114	CALL_3
0x400391f	          0x4885c0	                           test rax, rax	      5464	mbyte.c	FUNCTION_114	IF_3
0x4003922	            0x740f	                            je 0x4003933	      5464	mbyte.c	FUNCTION_114	IF_3
0x4003924	          0x8b4010	            mov eax, dword [rax + 0x10] 	      5466	mbyte.c	FUNCTION_114	IF_3
0x4003927	          0x4489e2	                           mov edx, r12d	      5466	mbyte.c	FUNCTION_114	IF_3
0x400392a	          0x83ca04	                               or edx, 4	      5466	mbyte.c	FUNCTION_114	IF_3
0x400392d	            0x85c0	                           test eax, eax	      5466	mbyte.c	FUNCTION_114	IF_3
0x400392f	        0x440f45e2	                        cmovne r12d, edx	      5466	mbyte.c	FUNCTION_114	IF_3
0x4003933	      0xbe0a000000	                            mov esi, 0xa	      5468	mbyte.c	FUNCTION_114	CALL_4
0x4003938	          0x4889ef	                            mov rdi, rbp	      5468	mbyte.c	FUNCTION_114	CALL_4
0x400393b	      0xe800000000	                          call 0x4003940	      5468	mbyte.c	FUNCTION_114	CALL_4
0x4003940	          0x4885c0	                           test rax, rax	      5469	mbyte.c	FUNCTION_114	IF_4
0x4003943	            0x7416	                            je 0x400395b	      5469	mbyte.c	FUNCTION_114	IF_4
0x4003945	         0xfb75010	           movzx edx, word [rax + 0x10] 	      5474	mbyte.c	FUNCTION_114	IF_4	IF_5
0x4003949	          0x4489e1	                           mov ecx, r12d	      5475	mbyte.c	FUNCTION_114	IF_4	IF_5
0x400394c	        0x660b5012	                or dx, word [rax + 0x12]	      5474	mbyte.c	FUNCTION_114	IF_4	IF_5
0x4003950	          0x83c901	                               or ecx, 1	      5475	mbyte.c	FUNCTION_114	IF_4	IF_5
0x4003953	        0x660b5014	                or dx, word [rax + 0x14]	      5475	mbyte.c	FUNCTION_114	IF_4	IF_5
0x4003957	        0x440f44e1	                         cmove r12d, ecx	      5475	mbyte.c	FUNCTION_114	IF_4	IF_5
0x400395b	          0x4889ef	                            mov rdi, rbp	      5521	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_6
0x400395e	          0x4509e6	                           or r14d, r12d	      5519	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	CALL_5
0x4003961	      0xe800000000	                          call 0x4003966	      5521	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_6
0x4003966	            0x85c0	                           test eax, eax	      5521	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_6
0x4003968	     0xf8542ffffff	                           jne 0x40038b0	      5521	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_6
0x400396e	            0x6690	                                     nop	      5521	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_6
0x4003970	          0x4889ef	                            mov rdi, rbp	      5523	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_7
0x4003973	      0xe800000000	                          call 0x4003978	      5523	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_7
0x4003978	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	      5523	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_7
0x400397d	          0x4d85ed	                           test r13, r13	      5527	mbyte.c	FUNCTION_115	IF_5
0x4003980	            0x7408	                            je 0x400398a	      5527	mbyte.c	FUNCTION_115	IF_5
0x4003982	          0x4c89ef	                            mov rdi, r13	      5528	mbyte.c	FUNCTION_115	CALL_8
0x4003985	      0xe800000000	                          call 0x400398a	      5528	mbyte.c	FUNCTION_115	CALL_8
0x400398a	      0x4c8b642408	                mov r12, qword [rsp + 8]	      5528	mbyte.c	FUNCTION_115	CALL_8
0x400398f	          0x4c89e7	                            mov rdi, r12	      5529	mbyte.c	FUNCTION_115	CALL_9
0x4003992	      0xe800000000	                          call 0x4003997	      5529	mbyte.c	FUNCTION_115	CALL_9
0x4003997	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      5532	mbyte.c	FUNCTION_115
0x400399c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5532	mbyte.c	FUNCTION_115
0x40039a5	          0x4489f0	                           mov eax, r14d	      5532	mbyte.c	FUNCTION_115
0x40039a8	            0x7537	                           jne 0x40039e1	      5532	mbyte.c	FUNCTION_115
0x40039aa	        0x4883c420	                           add rsp, 0x20	      5532	mbyte.c	FUNCTION_115
0x40039ae	              0x5b	                                 pop rbx	      5532	mbyte.c	FUNCTION_115
0x40039af	              0x5d	                                 pop rbp	      5532	mbyte.c	FUNCTION_115
0x40039b0	            0x415c	                                 pop r12	      5532	mbyte.c	FUNCTION_115
0x40039b2	            0x415d	                                 pop r13	      5532	mbyte.c	FUNCTION_115
0x40039b4	            0x415e	                                 pop r14	      5532	mbyte.c	FUNCTION_115
0x40039b6	              0xc3	                                     ret	      5532	mbyte.c	FUNCTION_115
0x40039b7	    0x660f1f840000	                    nop word [rax + rax]	      5532	mbyte.c	FUNCTION_115
0x40039c0	    0x41beffffffff	                    mov r14d, 0xffffffff	      5490	mbyte.c	FUNCTION_115
0x40039c6	            0xebba	                           jmp 0x4003982	      5490	mbyte.c	FUNCTION_115
0x40039c8	          0x4531e4	                          xor r12d, r12d	      5452	mbyte.c	FUNCTION_114
0x40039cb	      0xe91fffffff	                           jmp 0x40038ef	      5452	mbyte.c	FUNCTION_114
0x40039d0	            0x31c0	                            xor eax, eax	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x40039d2	            0x31db	                            xor ebx, ebx	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x40039d4	      0xe9a5feffff	                           jmp 0x400387e	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x40039d9	    0x41beffffffff	                    mov r14d, 0xffffffff	      5493	mbyte.c	FUNCTION_115	IF_1
0x40039df	            0xebb6	                           jmp 0x4003997	      5493	mbyte.c	FUNCTION_115	IF_1
0x40039e1	      0xe800000000	                          call 0x40039e6	      5532	mbyte.c	FUNCTION_115
enc_locale_env	DO,0:IF,8:CALL,10:FOR,1:functions,0:ELSE,3:WHILE,0:SWITCH,0	120
0x40034a0	            0x4156	                                push r14	      4403	mbyte.c	FUNCTION_88
0x40034a2	            0x4155	                                push r13	      4403	mbyte.c	FUNCTION_88
0x40034a4	            0x4154	                                push r12	      4403	mbyte.c	FUNCTION_88
0x40034a6	              0x55	                                push rbp	      4403	mbyte.c	FUNCTION_88
0x40034a7	              0x53	                                push rbx	      4403	mbyte.c	FUNCTION_88
0x40034a8	        0x4883ec40	                           sub rsp, 0x40	      4403	mbyte.c	FUNCTION_88
0x40034ac	    0x64488b042528	                mov rax, qword fs:[0x28]	      4403	mbyte.c	FUNCTION_88
0x40034b5	      0x4889442438	             mov qword [rsp + 0x38], rax	      4403	mbyte.c	FUNCTION_88
0x40034ba	            0x31c0	                            xor eax, eax	      4403	mbyte.c	FUNCTION_88
0x40034bc	          0x4885ff	                           test rdi, rdi	      4409	mbyte.c	FUNCTION_88	IF_1
0x40034bf	     0xf840b010000	                            je 0x40035d0	      4409	mbyte.c	FUNCTION_88	IF_1
0x40034c5	          0x803f00	                       cmp byte [rdi], 0	      4409	mbyte.c	FUNCTION_88	IF_1
0x40034c8	          0x4989fc	                            mov r12, rdi	      4409	mbyte.c	FUNCTION_88	IF_1
0x40034cb	     0xf84ff000000	                            je 0x40035d0	      4409	mbyte.c	FUNCTION_88	IF_1
0x40034d1	      0xbe2e000000	                           mov esi, 0x2e	      4425	mbyte.c	FUNCTION_88	IF_5	CALL_4
0x40034d6	          0x4c89e7	                            mov rdi, r12	      4425	mbyte.c	FUNCTION_88	IF_5	CALL_4
0x40034d9	      0xe800000000	                          call 0x40034de	      4425	mbyte.c	FUNCTION_88	IF_5	CALL_4
0x40034de	          0x4885c0	                           test rax, rax	      4425	mbyte.c	FUNCTION_88	IF_5	CALL_4
0x40034e1	          0x4889c3	                            mov rbx, rax	      4425	mbyte.c	FUNCTION_88	IF_5	CALL_4
0x40034e4	     0xf843e010000	                            je 0x4003628	      4425	mbyte.c	FUNCTION_88	IF_5	CALL_4
0x40034ea	        0x4983c402	                              add r12, 2	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x40034ee	          0x4c39e0	                            cmp rax, r12	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x40034f1	        0x4c8d6001	                      lea r12, [rax + 1]	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x40034f5	     0xf862d010000	                           jbe 0x4003628	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x40034fb	      0xba03000000	                              mov edx, 3	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x4003500	      0xbe00000000	                              mov esi, 0	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x4003505	          0x4c89e7	                            mov rdi, r12	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x4003508	      0xe800000000	                          call 0x400350d	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x400350d	            0x85c0	                           test eax, eax	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x400350f	     0xf8513010000	                           jne 0x4003628	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x4003515	      0xe800000000	                          call 0x400351a	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x400351a	      0x480fbe4b04	               movsx rcx, byte [rbx + 4]	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x400351f	          0x488b00	                    mov rax, qword [rax]	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4003522	          0x4989e6	                            mov r14, rsp	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4003525	        0xf6044808	              test byte [rax + rcx*2], 8	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4003529	            0x7515	                           jne 0x4003540	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x400352b	          0x80f92d	                            cmp cl, 0x2d	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x400352e	            0x7410	                            je 0x4003540	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4003530	        0x807bfd5f	                cmp byte [rbx - 3], 0x5f	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4003534	     0xf84f6000000	                            je 0x4003630	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x400353a	    0x660f1f440000	                    nop word [rax + rax]	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4003540	            0x31ed	                            xor ebp, ebp	      4435	mbyte.c	FUNCTION_88	IF_5	IF_6
0x4003542	            0xeb35	                           jmp 0x4003579	      4435	mbyte.c	FUNCTION_88	IF_5	IF_6
0x4003544	         0xf1f4000	                         nop dword [rax]	      4435	mbyte.c	FUNCTION_88	IF_5	IF_6
0x4003548	          0x80fb2d	                            cmp bl, 0x2d	      4442	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x400354b	            0x743d	                            je 0x400358a	      4442	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x400354d	      0xe800000000	                          call 0x4003552	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x4003552	          0x488b08	                    mov rcx, qword [rax]	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x4003555	        0x480fbed3	                           movsx rdx, bl	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x4003559	        0xf6045108	              test byte [rcx + rdx*2], 8	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x400355d	            0x7440	                            je 0x400359f	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x400355f	          0x8d53bf	                   lea edx, [rbx - 0x41]	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4003562	          0x8d4320	                   lea eax, [rbx + 0x20]	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4003565	          0x80fa19	                            cmp dl, 0x19	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4003568	           0xf46d8	                         cmovbe ebx, eax	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x400356b	        0x41881c2e	                mov byte [r14 + rbp], bl	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x400356f	        0x4883c501	                              add rbp, 1	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4003573	        0x4883fd31	                           cmp rbp, 0x31	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x4003577	            0x7420	                            je 0x4003599	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x4003579	      0x410fb61c2c	             movzx ebx, byte [r12 + rbp]	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x400357e	          0x4c63ed	                         movsxd r13, ebp	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x4003581	            0x84db	                             test bl, bl	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x4003583	            0x741a	                            je 0x400359f	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x4003585	          0x80fb5f	                            cmp bl, 0x5f	      4442	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x4003588	            0x75be	                           jne 0x4003548	      4442	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x400358a	      0x41c6042e2d	              mov byte [r14 + rbp], 0x2d	      4443	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x400358f	        0x4883c501	                              add rbp, 1	      4443	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x4003593	        0x4883fd31	                           cmp rbp, 0x31	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x4003597	            0x75e0	                           jne 0x4003579	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x4003599	    0x41bd31000000	                          mov r13d, 0x31	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x400359f	          0x4c89f7	                            mov rdi, r14	      4451	mbyte.c	FUNCTION_88	CALL_10
0x40035a2	      0x42c6042c00	                 mov byte [rsp + r13], 0	      4449	mbyte.c	FUNCTION_88
0x40035a7	      0xe800000000	                          call 0x40035ac	      4451	mbyte.c	FUNCTION_88	CALL_10
0x40035ac	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      4452	mbyte.c	FUNCTION_88
0x40035b1	    0x644833342528	                xor rsi, qword fs:[0x28]	      4452	mbyte.c	FUNCTION_88
0x40035ba	     0xf859d000000	                           jne 0x400365d	      4452	mbyte.c	FUNCTION_88
0x40035c0	        0x4883c440	                           add rsp, 0x40	      4452	mbyte.c	FUNCTION_88
0x40035c4	              0x5b	                                 pop rbx	      4452	mbyte.c	FUNCTION_88
0x40035c5	              0x5d	                                 pop rbp	      4452	mbyte.c	FUNCTION_88
0x40035c6	            0x415c	                                 pop r12	      4452	mbyte.c	FUNCTION_88
0x40035c8	            0x415d	                                 pop r13	      4452	mbyte.c	FUNCTION_88
0x40035ca	            0x415e	                                 pop r14	      4452	mbyte.c	FUNCTION_88
0x40035cc	              0xc3	                                     ret	      4452	mbyte.c	FUNCTION_88
0x40035cd	           0xf1f00	                         nop dword [rax]	      4452	mbyte.c	FUNCTION_88
0x40035d0	      0xbf00000000	                              mov edi, 0	      4410	mbyte.c	FUNCTION_88	IF_1	IF_2	CALL_1
0x40035d5	      0xe800000000	                          call 0x40035da	      4410	mbyte.c	FUNCTION_88	IF_1	IF_2	CALL_1
0x40035da	          0x4885c0	                           test rax, rax	      4410	mbyte.c	FUNCTION_88	IF_1	IF_2	CALL_1
0x40035dd	          0x4989c4	                            mov r12, rax	      4410	mbyte.c	FUNCTION_88	IF_1	IF_2	CALL_1
0x40035e0	            0x7409	                            je 0x40035eb	      4410	mbyte.c	FUNCTION_88	IF_1	IF_2	CALL_1
0x40035e2	          0x803800	                       cmp byte [rax], 0	      4410	mbyte.c	FUNCTION_88	IF_1	IF_2	CALL_1
0x40035e5	     0xf85e6feffff	                           jne 0x40034d1	      4410	mbyte.c	FUNCTION_88	IF_1	IF_2	CALL_1
0x40035eb	      0xbf00000000	                              mov edi, 0	      4411	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3	CALL_2
0x40035f0	      0xe800000000	                          call 0x40035f5	      4411	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3	CALL_2
0x40035f5	          0x4885c0	                           test rax, rax	      4411	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3	CALL_2
0x40035f8	          0x4989c4	                            mov r12, rax	      4411	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3	CALL_2
0x40035fb	            0x7409	                            je 0x4003606	      4411	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3	CALL_2
0x40035fd	          0x803800	                       cmp byte [rax], 0	      4411	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3	CALL_2
0x4003600	     0xf85cbfeffff	                           jne 0x40034d1	      4411	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3	CALL_2
0x4003606	      0xbf00000000	                              mov edi, 0	      4412	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3
0x400360b	      0xe800000000	                          call 0x4003610	      4412	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3
0x4003610	          0x4885c0	                           test rax, rax	      4414	mbyte.c	FUNCTION_88	IF_4
0x4003613	          0x4989c4	                            mov r12, rax	      4412	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3
0x4003616	            0x7409	                            je 0x4003621	      4414	mbyte.c	FUNCTION_88	IF_4
0x4003618	          0x803800	                       cmp byte [rax], 0	      4414	mbyte.c	FUNCTION_88	IF_4
0x400361b	     0xf85b0feffff	                           jne 0x40034d1	      4414	mbyte.c	FUNCTION_88	IF_4
0x4003621	            0x31c0	                            xor eax, eax	      4415	mbyte.c	FUNCTION_88	IF_4
0x4003623	            0xeb87	                           jmp 0x40035ac	      4415	mbyte.c	FUNCTION_88	IF_4
0x4003625	           0xf1f00	                         nop dword [rax]	      4415	mbyte.c	FUNCTION_88	IF_4
0x4003628	          0x4989e6	                            mov r14, rsp	      4415	mbyte.c	FUNCTION_88	IF_4
0x400362b	      0xe910ffffff	                           jmp 0x4003540	      4415	mbyte.c	FUNCTION_88	IF_4
0x4003630	      0x4c8d64240a	                    lea r12, [rsp + 0xa]	       110	string3.h	FUNCTION_152	CALL_3
0x4003635	    0xc744240a6575	      mov dword [rsp + 0xa], 0x2d637565 	       110	string3.h	FUNCTION_152	CALL_3
0x400363d	    0x41c644240400	                   mov byte [r12 + 4], 0	       110	string3.h	FUNCTION_152	CALL_3
0x4003643	         0xfb643fe	               movzx eax, byte [rbx - 2]	      4432	mbyte.c	FUNCTION_88	IF_5	IF_6
0x4003647	        0x8844240e	                mov byte [rsp + 0xe], al	      4432	mbyte.c	FUNCTION_88	IF_5	IF_6
0x400364b	         0xfb643ff	               movzx eax, byte [rbx - 1]	      4433	mbyte.c	FUNCTION_88	IF_5	IF_6
0x400364f	      0xc644241000	                mov byte [rsp + 0x10], 0	      4434	mbyte.c	FUNCTION_88	IF_5	IF_6
0x4003654	        0x8844240f	                mov byte [rsp + 0xf], al	      4433	mbyte.c	FUNCTION_88	IF_5	IF_6
0x4003658	      0xe9e3feffff	                           jmp 0x4003540	      4435	mbyte.c	FUNCTION_88	IF_5	IF_6
0x400365d	      0xe800000000	                          call 0x4003662	      4452	mbyte.c	FUNCTION_88
mb_charlen_len	DO,0:IF,0:CALL,0:FOR,1:functions,0:ELSE,0:WHILE,0:SWITCH,0	27
0x4002e50	            0x4154	                                push r12	      4167	mbyte.c	FUNCTION_81
0x4002e52	              0x55	                                push rbp	      4167	mbyte.c	FUNCTION_81
0x4002e53	              0x53	                                push rbx	      4167	mbyte.c	FUNCTION_81
0x4002e54	          0x803f00	                       cmp byte [rdi], 0	      4171	mbyte.c	FUNCTION_81	FOR_1
0x4002e57	            0x7439	                            je 0x4002e92	      4171	mbyte.c	FUNCTION_81	FOR_1
0x4002e59	          0x4863f6	                         movsxd rsi, esi	      4171	mbyte.c	FUNCTION_81	FOR_1
0x4002e5c	          0x4889fb	                            mov rbx, rdi	      4171	mbyte.c	FUNCTION_81	FOR_1
0x4002e5f	            0x31ed	                            xor ebp, ebp	      4171	mbyte.c	FUNCTION_81	FOR_1
0x4002e61	        0x4c8d2437	                    lea r12, [rdi + rsi]	      4171	mbyte.c	FUNCTION_81	FOR_1
0x4002e65	            0xeb1f	                           jmp 0x4002e86	      4171	mbyte.c	FUNCTION_81	FOR_1
0x4002e67	    0x660f1f840000	                    nop word [rax + rax]	      4171	mbyte.c	FUNCTION_81	FOR_1
0x4002e70	          0x4889df	                            mov rdi, rbx	      4172	mbyte.c	FUNCTION_81	FOR_1
0x4002e73	          0x83c501	                              add ebp, 1	      4171	mbyte.c	FUNCTION_81	FOR_1
0x4002e76	    0xff1500000000	                 call qword [0x04002e7c]	      4172	mbyte.c	FUNCTION_81	FOR_1
0x4002e7c	            0x4898	                                    cdqe	      4172	mbyte.c	FUNCTION_81	FOR_1
0x4002e7e	          0x4801c3	                            add rbx, rax	      4172	mbyte.c	FUNCTION_81	FOR_1
0x4002e81	          0x803b00	                       cmp byte [rbx], 0	      4171	mbyte.c	FUNCTION_81	FOR_1
0x4002e84	            0x7405	                            je 0x4002e8b	      4171	mbyte.c	FUNCTION_81	FOR_1
0x4002e86	          0x4c39e3	                            cmp rbx, r12	      4171	mbyte.c	FUNCTION_81	FOR_1
0x4002e89	            0x72e5	                            jb 0x4002e70	      4171	mbyte.c	FUNCTION_81	FOR_1
0x4002e8b	            0x89e8	                            mov eax, ebp	      4175	mbyte.c	FUNCTION_81
0x4002e8d	              0x5b	                                 pop rbx	      4175	mbyte.c	FUNCTION_81
0x4002e8e	              0x5d	                                 pop rbp	      4175	mbyte.c	FUNCTION_81
0x4002e8f	            0x415c	                                 pop r12	      4175	mbyte.c	FUNCTION_81
0x4002e91	              0xc3	                                     ret	      4175	mbyte.c	FUNCTION_81
0x4002e92	            0x31ed	                            xor ebp, ebp	      4171	mbyte.c	FUNCTION_81	FOR_1
0x4002e94	            0xebf5	                           jmp 0x4002e8b	      4171	mbyte.c	FUNCTION_81	FOR_1
latin_ptr2cells_len	DO,0:IF,0:CALL,0:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	2
0x4000140	      0xb801000000	                              mov eax, 1	      1661	mbyte.c	FUNCTION_24
0x4000145	              0xc3	                                     ret	      1661	mbyte.c	FUNCTION_24
utfc_char2bytes	DO,0:IF,1:CALL,2:FOR,1:functions,0:ELSE,0:WHILE,0:SWITCH,0	32
0x4001b40	    0x488b05000000	            mov rax, qword [0x04001b47] 	      2063	mbyte.c	FUNCTION_44	CALL_1
0x4001b47	          0x4863cf	                         movsxd rcx, edi	      2063	mbyte.c	FUNCTION_44	CALL_1
0x4001b4a	          0x4989f1	                             mov r9, rsi	      2059	mbyte.c	FUNCTION_44
0x4001b4d	    0x4c8d148d0000	                        lea r10, [rcx*4]	      2063	mbyte.c	FUNCTION_44	CALL_1
0x4001b55	          0x8b3c88	            mov edi, dword [rax + rcx*4]	      2063	mbyte.c	FUNCTION_44	CALL_1
0x4001b58	      0xe800000000	                          call 0x4001b5d	      2063	mbyte.c	FUNCTION_44	CALL_1
0x4001b5d	            0x89c2	                            mov edx, eax	      2063	mbyte.c	FUNCTION_44	CALL_1
0x4001b5f	    0x8b0500000000	            mov eax, dword [0x04001b65] 	      2064	mbyte.c	FUNCTION_44	FOR_1
0x4001b65	            0x85c0	                           test eax, eax	      2064	mbyte.c	FUNCTION_44	FOR_1
0x4001b67	            0x7e46	                           jle 0x4001baf	      2064	mbyte.c	FUNCTION_44	FOR_1
0x4001b69	    0x488b05000000	            mov rax, qword [0x04001b70] 	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4001b70	          0x8b3c88	            mov edi, dword [rax + rcx*4]	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4001b73	            0x85ff	                           test edi, edi	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4001b75	            0x7438	                            je 0x4001baf	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4001b77	    0x41b800000000	                              mov r8d, 0	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4001b7d	            0x31c9	                            xor ecx, ecx	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4001b7f	            0xeb16	                           jmp 0x4001b97	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4001b81	     0xf1f80000000	                         nop dword [rax]	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4001b88	          0x498b00	                     mov rax, qword [r8]	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4001b8b	        0x4983c008	                               add r8, 8	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4001b8f	        0x428b3c10	              mov edi, dword [rax + r10]	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4001b93	            0x85ff	                           test edi, edi	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4001b95	            0x7418	                            je 0x4001baf	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4001b97	          0x4863f2	                         movsxd rsi, edx	      2068	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x4001b9a	          0x4c01ce	                             add rsi, r9	      2068	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x4001b9d	      0xe800000000	                          call 0x4001ba2	      2068	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x4001ba2	             0x1c2	                            add edx, eax	      2068	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x4001ba4	          0x83c101	                              add ecx, 1	      2064	mbyte.c	FUNCTION_44	FOR_1
0x4001ba7	    0x390d00000000	            cmp dword [0x04001bad], ecx 	      2064	mbyte.c	FUNCTION_44	FOR_1
0x4001bad	            0x7fd9	                            jg 0x4001b88	      2064	mbyte.c	FUNCTION_44	FOR_1
0x4001baf	            0x89d0	                            mov eax, edx	      2071	mbyte.c	FUNCTION_44
0x4001bb1	              0xc3	                                     ret	      2071	mbyte.c	FUNCTION_44
im_commit_cb	DO,0:IF,10:CALL,11:FOR,0:functions,0:ELSE,2:WHILE,0:SWITCH,0	93
0x4005c20	            0x4155	                                push r13	      5165	mbyte.c	FUNCTION_110
0x4005c22	            0x4154	                                push r12	      5165	mbyte.c	FUNCTION_110
0x4005c24	          0x4889f7	                            mov rdi, rsi	      5166	mbyte.c	FUNCTION_110	CALL_1
0x4005c27	              0x55	                                push rbp	      5165	mbyte.c	FUNCTION_110
0x4005c28	              0x53	                                push rbx	      5165	mbyte.c	FUNCTION_110
0x4005c29	          0x4889f5	                            mov rbp, rsi	      5165	mbyte.c	FUNCTION_110
0x4005c2c	    0x41bc01000000	                             mov r12d, 1	      5170	mbyte.c	FUNCTION_110
0x4005c32	        0x4883ec28	                           sub rsp, 0x28	      5165	mbyte.c	FUNCTION_110
0x4005c36	    0x64488b042528	                mov rax, qword fs:[0x28]	      5165	mbyte.c	FUNCTION_110
0x4005c3f	      0x4889442418	             mov qword [rsp + 0x18], rax	      5165	mbyte.c	FUNCTION_110
0x4005c44	            0x31c0	                            xor eax, eax	      5165	mbyte.c	FUNCTION_110
0x4005c46	      0xe800000000	                          call 0x4005c4b	      5166	mbyte.c	FUNCTION_110	CALL_1
0x4005c4b	    0x48833d000000	               cmp qword [0x04005c53], 0	      5177	mbyte.c	FUNCTION_110	IF_1
0x4005c53	          0x4889c3	                            mov rbx, rax	      5166	mbyte.c	FUNCTION_110	CALL_1
0x4005c56	        0x89442414	             mov dword [rsp + 0x14], eax	      5169	mbyte.c	FUNCTION_110
0x4005c5a	            0x7474	                            je 0x4005cd0	      5177	mbyte.c	FUNCTION_110	IF_1
0x4005c5c	    0x8b0500000000	            mov eax, dword [0x04005c62] 	      5218	mbyte.c	FUNCTION_110	IF_5
0x4005c62	            0x85c0	                           test eax, eax	      5218	mbyte.c	FUNCTION_110	IF_5
0x4005c64	            0x7413	                            je 0x4005c79	      5218	mbyte.c	FUNCTION_110	IF_5
0x4005c66	          0x83fb01	                              cmp ebx, 1	      5221	mbyte.c	FUNCTION_110	IF_5	IF_6
0x4005c69	     0xf84e9000000	                            je 0x4005d58	      5221	mbyte.c	FUNCTION_110	IF_5	IF_6
0x4005c6f	    0xc70500000000	               mov dword [0x04005c79], 0	      5230	mbyte.c	FUNCTION_110	IF_5	ELSE_2
0x4005c79	            0x89de	                            mov esi, ebx	      5235	mbyte.c	FUNCTION_110	CALL_9
0x4005c7b	          0x4889ef	                            mov rdi, rbp	      5235	mbyte.c	FUNCTION_110	CALL_9
0x4005c7e	      0xe8bdf9ffff	                call sym.im_add_to_input	      5235	mbyte.c	FUNCTION_110	CALL_9
0x4005c83	    0x48833d000000	               cmp qword [0x04005c8b], 0	      5237	mbyte.c	FUNCTION_110	IF_8
0x4005c8b	            0x7519	                           jne 0x4005ca6	      5237	mbyte.c	FUNCTION_110	IF_8
0x4005c8d	          0x4585e4	                         test r12d, r12d	      5242	mbyte.c	FUNCTION_110	IF_8	IF_9
0x4005c90	            0x750a	                           jne 0x4005c9c	      5242	mbyte.c	FUNCTION_110	IF_8	IF_9
0x4005c92	    0xc70500000000	     mov dword [0x04005c9c], 0x7fffffff 	      5243	mbyte.c	FUNCTION_110	IF_8	IF_9
0x4005c9c	    0xc70500000000	               mov dword [0x04005ca6], 1	      5246	mbyte.c	FUNCTION_110	IF_8
0x4005ca6	      0xe800000000	                          call 0x4005cab	      5249	mbyte.c	FUNCTION_110	IF_10	CALL_10
0x4005cab	            0x85c0	                           test eax, eax	      5249	mbyte.c	FUNCTION_110	IF_10	CALL_10
0x4005cad	            0x7569	                           jne 0x4005d18	      5249	mbyte.c	FUNCTION_110	IF_10	CALL_10
0x4005caf	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5251	mbyte.c	FUNCTION_110
0x4005cb4	    0x644833042528	                xor rax, qword fs:[0x28]	      5251	mbyte.c	FUNCTION_110
0x4005cbd	     0xf85da000000	                           jne 0x4005d9d	      5251	mbyte.c	FUNCTION_110
0x4005cc3	        0x4883c428	                           add rsp, 0x28	      5251	mbyte.c	FUNCTION_110
0x4005cc7	              0x5b	                                 pop rbx	      5251	mbyte.c	FUNCTION_110
0x4005cc8	              0x5d	                                 pop rbp	      5251	mbyte.c	FUNCTION_110
0x4005cc9	            0x415c	                                 pop r12	      5251	mbyte.c	FUNCTION_110
0x4005ccb	            0x415d	                                 pop r13	      5251	mbyte.c	FUNCTION_110
0x4005ccd	              0xc3	                                     ret	      5251	mbyte.c	FUNCTION_110
0x4005cce	            0x6690	                                     nop	      5251	mbyte.c	FUNCTION_110
0x4005cd0	      0xe86ba9ffff	              call sym.im_delete_preedit	      5181	mbyte.c	FUNCTION_110	IF_1	CALL_3
0x4005cd5	    0x813d00000000	     cmp dword [0x04005cdf], 0x7fffffff 	      5184	mbyte.c	FUNCTION_110	IF_1	IF_2
0x4005cdf	     0xf84ab000000	                            je 0x4005d90	      5184	mbyte.c	FUNCTION_110	IF_1	IF_2
0x4005ce5	    0x8b0d00000000	            mov ecx, dword [0x04005ceb] 	      5199	mbyte.c	FUNCTION_110	IF_1	IF_3
0x4005ceb	            0x85c9	                           test ecx, ecx	      5199	mbyte.c	FUNCTION_110	IF_1	IF_3
0x4005ced	            0x7531	                           jne 0x4005d20	      5199	mbyte.c	FUNCTION_110	IF_1	IF_3
0x4005cef	          0x4989ed	                            mov r13, rbp	      5199	mbyte.c	FUNCTION_110	IF_1	IF_3
0x4005cf2	        0x8b742414	            mov esi, dword [rsp + 0x14] 	      5207	mbyte.c	FUNCTION_110	IF_1	CALL_7
0x4005cf6	          0x4c89ef	                            mov rdi, r13	      5207	mbyte.c	FUNCTION_110	IF_1	CALL_7
0x4005cf9	      0xe800000000	                          call 0x4005cfe	      5207	mbyte.c	FUNCTION_110	IF_1	CALL_7
0x4005cfe	    0x8b1500000000	            mov edx, dword [0x04005d04] 	      5209	mbyte.c	FUNCTION_110	IF_1	IF_4
0x4005d04	            0x85d2	                           test edx, edx	      5209	mbyte.c	FUNCTION_110	IF_1	IF_4
0x4005d06	            0x7570	                           jne 0x4005d78	      5209	mbyte.c	FUNCTION_110	IF_1	IF_4
0x4005d08	     0x10500000000	             add dword [0x04005d0e], eax	      5211	mbyte.c	FUNCTION_110	IF_1
0x4005d0e	      0xe949ffffff	                           jmp 0x4005c5c	      5211	mbyte.c	FUNCTION_110	IF_1
0x4005d13	       0xf1f440000	                   nop dword [rax + rax]	      5211	mbyte.c	FUNCTION_110	IF_1
0x4005d18	      0xe800000000	                          call 0x4005d1d	      5250	mbyte.c	FUNCTION_110	CALL_11
0x4005d1d	            0xeb90	                           jmp 0x4005caf	      5250	mbyte.c	FUNCTION_110	CALL_11
0x4005d1f	              0x90	                                     nop	      5250	mbyte.c	FUNCTION_110	CALL_11
0x4005d20	      0x488d542414	                   lea rdx, [rsp + 0x14]	      6717	mbyte.c	FUNCTION_144	CALL_1
0x4005d25	            0x31c9	                            xor ecx, ecx	      6717	mbyte.c	FUNCTION_144	CALL_1
0x4005d27	          0x4889ee	                            mov rsi, rbp	      6717	mbyte.c	FUNCTION_144	CALL_1
0x4005d2a	      0xbf00000000	                              mov edi, 0	      6717	mbyte.c	FUNCTION_144	CALL_1
0x4005d2f	      0xe800000000	                          call 0x4005d34	      6717	mbyte.c	FUNCTION_144	CALL_1
0x4005d34	          0x4885c0	                           test rax, rax	      5202	mbyte.c	FUNCTION_110	IF_1	IF_3	CALL_6
0x4005d37	          0x4989c5	                            mov r13, rax	      6717	mbyte.c	FUNCTION_144	CALL_1
0x4005d3a	            0x75b6	                           jne 0x4005cf2	      5202	mbyte.c	FUNCTION_110	IF_1	IF_3	CALL_6
0x4005d3c	      0xba00000000	                              mov edx, 0	      5202	mbyte.c	FUNCTION_110	IF_1	IF_3	CALL_6
0x4005d41	      0xbe00000000	                              mov esi, 0	      5202	mbyte.c	FUNCTION_110	IF_1	IF_3	CALL_6
0x4005d46	            0x31ff	                            xor edi, edi	      5202	mbyte.c	FUNCTION_110	IF_1	IF_3	CALL_6
0x4005d48	      0xe800000000	                          call 0x4005d4d	      5202	mbyte.c	FUNCTION_110	IF_1	IF_3	CALL_6
0x4005d4d	      0xe95dffffff	                           jmp 0x4005caf	      5202	mbyte.c	FUNCTION_110	IF_1	IF_3	CALL_6
0x4005d52	    0x660f1f440000	                    nop word [rax + rax]	      5202	mbyte.c	FUNCTION_110	IF_1	IF_3	CALL_6
0x4005d58	         0xfbe5500	                   movsx edx, byte [rbp]	      5221	mbyte.c	FUNCTION_110	IF_5	IF_6
0x4005d5c	            0x39d0	                            cmp eax, edx	      5221	mbyte.c	FUNCTION_110	IF_5	IF_6
0x4005d5e	     0xf850bffffff	                           jne 0x4005c6f	      5221	mbyte.c	FUNCTION_110	IF_5	IF_6
0x4005d64	    0xc70500000000	               mov dword [0x04005d6e], 1	      5224	mbyte.c	FUNCTION_110	IF_5	IF_6
0x4005d6e	      0xe910ffffff	                           jmp 0x4005c83	      5224	mbyte.c	FUNCTION_110	IF_5	IF_6
0x4005d73	       0xf1f440000	                   nop dword [rax + rax]	      5224	mbyte.c	FUNCTION_110	IF_5	IF_6
0x4005d78	          0x4c89ef	                            mov rdi, r13	      5210	mbyte.c	FUNCTION_110	IF_1	CALL_8
0x4005d7b	        0x8944240c	              mov dword [rsp + 0xc], eax	      5210	mbyte.c	FUNCTION_110	IF_1	CALL_8
0x4005d7f	      0xe800000000	                          call 0x4005d84	      5210	mbyte.c	FUNCTION_110	IF_1	CALL_8
0x4005d84	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      5210	mbyte.c	FUNCTION_110	IF_1	CALL_8
0x4005d88	      0xe97bffffff	                           jmp 0x4005d08	      5210	mbyte.c	FUNCTION_110	IF_1	CALL_8
0x4005d8d	           0xf1f00	                         nop dword [rax]	      5210	mbyte.c	FUNCTION_110	IF_1	CALL_8
0x4005d90	      0xe86baaffff	         call sym.init_preedit_start_col	      5186	mbyte.c	FUNCTION_110	IF_1	IF_2	CALL_4
0x4005d95	          0x4531e4	                          xor r12d, r12d	      5187	mbyte.c	FUNCTION_110	IF_1	IF_2
0x4005d98	      0xe948ffffff	                           jmp 0x4005ce5	      5187	mbyte.c	FUNCTION_110	IF_1	IF_2
0x4005d9d	      0xe800000000	                  call section_end..text	      5251	mbyte.c	FUNCTION_110
latin_head_off	DO,0:IF,0:CALL,0:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	2
0x4000510	            0x31c0	                            xor eax, eax	      3766	mbyte.c	FUNCTION_67
0x4000512	              0xc3	                                     ret	      3766	mbyte.c	FUNCTION_67
xim_queue_key_press_event	DO,0:IF,11:CALL,5:FOR,0:functions,0:ELSE,1:WHILE,0:SWITCH,1	188
0x4003f10	              0x55	                                push rbp	      5737	mbyte.c	FUNCTION_122
0x4003f11	              0x53	                                push rbx	      5737	mbyte.c	FUNCTION_122
0x4003f12	        0x4883ec08	                              sub rsp, 8	      5737	mbyte.c	FUNCTION_122
0x4003f16	            0x85f6	                           test esi, esi	      5738	mbyte.c	FUNCTION_122	IF_1
0x4003f18	     0xf849c000000	                            je 0x4003fba	      5738	mbyte.c	FUNCTION_122	IF_1
0x4003f1e	          0x8b471c	            mov eax, dword [rdi + 0x1c] 	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003f21	      0x3db2ff0000	                         cmp eax, 0xffb2	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003f26	     0xf844c020000	                            je 0x4004178	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003f2c	            0x774a	                            ja 0x4003f78	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003f2e	      0x3dadff0000	                         cmp eax, 0xffad	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003f33	     0xf84f7020000	                            je 0x4004230	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003f39	     0xf8681010000	                           jbe 0x40040c0	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003f3f	      0x3dafff0000	                         cmp eax, 0xffaf	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003f44	     0xf8496020000	                            je 0x40041e0	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003f4a	     0xf8280020000	                            jb 0x40041d0	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003f50	      0x3db0ff0000	                         cmp eax, 0xffb0	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003f55	     0xf8445020000	                            je 0x40041a0	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003f5b	      0x3db1ff0000	                         cmp eax, 0xffb1	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003f60	     0xf8579010000	                           jne 0x40040df	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003f66	    0xc70500000000	           mov dword [0x04003f70], 0x31 	      5760	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003f70	            0xeb3e	                           jmp 0x4003fb0	      5760	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003f72	    0x660f1f440000	                    nop word [rax + rax]	      5760	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003f78	      0x3db6ff0000	                         cmp eax, 0xffb6	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003f7d	     0xf84bd020000	                            je 0x4004240	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003f83	     0xf87e7000000	                            ja 0x4004070	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003f89	      0x3db4ff0000	                         cmp eax, 0xffb4	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003f8e	     0xf848c020000	                            je 0x4004220	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003f94	      0x3db5ff0000	                         cmp eax, 0xffb5	      5762	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003f99	            0x19c0	                            sbb eax, eax	      5762	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003f9b	          0x83e0fe	                     and eax, 0xfffffffe	      5762	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003f9e	          0x83c035	                           add eax, 0x35	      5762	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003fa1	    0x890500000000	            mov dword [0x04003fa7], eax 	      5762	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003fa7	    0x660f1f840000	                    nop word [rax + rax]	      5762	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003fb0	    0xc70500000000	               mov dword [0x04003fba], 0	      5772	mbyte.c	FUNCTION_122	IF_1
0x4003fba	    0x488b05000000	            mov rax, qword [0x04003fc1] 	      5780	mbyte.c	FUNCTION_122	IF_2
0x4003fc1	          0x4885c0	                           test rax, rax	      5780	mbyte.c	FUNCTION_122	IF_2
0x4003fc4	     0xf8496000000	                            je 0x4004060	      5780	mbyte.c	FUNCTION_122	IF_2
0x4003fca	    0x8b1d00000000	            mov ebx, dword [0x04003fd0] 	      5780	mbyte.c	FUNCTION_122	IF_2
0x4003fd0	            0x85db	                           test ebx, ebx	      5780	mbyte.c	FUNCTION_122	IF_2
0x4003fd2	     0xf8588000000	                           jne 0x4004060	      5780	mbyte.c	FUNCTION_122	IF_2
0x4003fd8	    0xf70500000000	         test dword [0x04003fe2], 0x619 	      5781	mbyte.c	FUNCTION_122	IF_2
0x4003fe2	            0x747c	                            je 0x4004060	      5781	mbyte.c	FUNCTION_122	IF_2
0x4003fe4	    0x8b1500000000	            mov edx, dword [0x04003fea] 	      5788	mbyte.c	FUNCTION_122	IF_2	IF_3
0x4003fea	          0x39571c	            cmp dword [rdi + 0x1c], edx 	      5788	mbyte.c	FUNCTION_122	IF_2	IF_3
0x4003fed	          0x4889fd	                            mov rbp, rdi	      5788	mbyte.c	FUNCTION_122	IF_2	IF_3
0x4003ff0	     0xf84fa000000	                            je 0x40040f0	      5788	mbyte.c	FUNCTION_122	IF_2	IF_3
0x4003ff6	    0x81faffffff00	                       cmp edx, 0xffffff	      5832	mbyte.c	FUNCTION_122	IF_2	IF_8
0x4003ffc	            0x740a	                            je 0x4004008	      5832	mbyte.c	FUNCTION_122	IF_2	IF_8
0x4003ffe	    0x8b3500000000	            mov esi, dword [0x04004004] 	      5832	mbyte.c	FUNCTION_122	IF_2	IF_8
0x4004004	            0x85f6	                           test esi, esi	      5832	mbyte.c	FUNCTION_122	IF_2	IF_8
0x4004006	            0x7458	                            je 0x4004060	      5832	mbyte.c	FUNCTION_122	IF_2	IF_8
0x4004008	          0x4889ee	                            mov rsi, rbp	      5834	mbyte.c	FUNCTION_122	IF_2	IF_8	CALL_4
0x400400b	          0x4889c7	                            mov rdi, rax	      5834	mbyte.c	FUNCTION_122	IF_2	IF_8	CALL_4
0x400400e	      0xe800000000	                          call 0x4004013	      5834	mbyte.c	FUNCTION_122	IF_2	IF_8	CALL_4
0x4004013	    0x48833d000000	               cmp qword [0x0400401b], 0	      5846	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10
0x400401b	            0x752b	                           jne 0x4004048	      5846	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10
0x400401d	            0x85c0	                           test eax, eax	      5846	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10
0x400401f	            0x7527	                           jne 0x4004048	      5846	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10
0x4004021	    0x813d00000000	     cmp dword [0x0400402b], 0x7fffffff 	      5846	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10
0x400402b	            0x741b	                            je 0x4004048	      5846	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10
0x400402d	    0x817d1c0dff00	         cmp dword [rbp + 0x1c], 0xff0d 	      5847	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10
0x4004034	            0x7512	                           jne 0x4004048	      5847	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10
0x4004036	            0x31f6	                            xor esi, esi	      5849	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10	CALL_5
0x4004038	      0xbf0dff0000	                         mov edi, 0xff0d	      5849	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10	CALL_5
0x400403d	      0xe81ec8ffff	         call sym.im_synthesize_keypress	      5849	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10	CALL_5
0x4004042	            0xeb1e	                           jmp 0x4004062	      5850	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10
0x4004044	         0xf1f4000	                         nop dword [rax]	      5850	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10
0x4004048	    0x8b0d00000000	            mov ecx, dword [0x0400404e] 	      5856	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_11
0x400404e	            0x85c9	                           test ecx, ecx	      5856	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_11
0x4004050	            0x7456	                            je 0x40040a8	      5856	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_11
0x4004052	    0x8b1500000000	            mov edx, dword [0x04004058] 	      5856	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_11
0x4004058	            0x85d2	                           test edx, edx	      5856	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_11
0x400405a	            0x744c	                            je 0x40040a8	      5856	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_11
0x400405c	         0xf1f4000	                         nop dword [rax]	      5856	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_11
0x4004060	            0x31db	                            xor ebx, ebx	      5869	mbyte.c	FUNCTION_122
0x4004062	        0x4883c408	                              add rsp, 8	      5870	mbyte.c	FUNCTION_122
0x4004066	            0x89d8	                            mov eax, ebx	      5870	mbyte.c	FUNCTION_122
0x4004068	              0x5b	                                 pop rbx	      5870	mbyte.c	FUNCTION_122
0x4004069	              0x5d	                                 pop rbp	      5870	mbyte.c	FUNCTION_122
0x400406a	              0xc3	                                     ret	      5870	mbyte.c	FUNCTION_122
0x400406b	       0xf1f440000	                   nop dword [rax + rax]	      5870	mbyte.c	FUNCTION_122
0x4004070	      0x3db8ff0000	                         cmp eax, 0xffb8	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4004075	     0xf8485010000	                            je 0x4004200	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400407b	     0xf826f010000	                            jb 0x40041f0	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4004081	      0x3db9ff0000	                         cmp eax, 0xffb9	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4004086	     0xf8424010000	                            je 0x40041b0	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400408c	      0x3dbdff0000	                         cmp eax, 0xffbd	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4004091	            0x754c	                           jne 0x40040df	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4004093	    0xc70500000000	           mov dword [0x0400409d], 0x3d 	      5758	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400409d	      0xe90effffff	                           jmp 0x4003fb0	      5758	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40040a2	    0x660f1f440000	                    nop word [rax + rax]	      5758	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40040a8	            0x89c3	                            mov ebx, eax	      5834	mbyte.c	FUNCTION_122	IF_2	IF_8	CALL_4
0x40040aa	    0xc70500000000	               mov dword [0x040040b4], 0	      5862	mbyte.c	FUNCTION_122	IF_2	IF_8
0x40040b4	        0x4883c408	                              add rsp, 8	      5870	mbyte.c	FUNCTION_122
0x40040b8	            0x89d8	                            mov eax, ebx	      5870	mbyte.c	FUNCTION_122
0x40040ba	              0x5b	                                 pop rbx	      5870	mbyte.c	FUNCTION_122
0x40040bb	              0x5d	                                 pop rbp	      5870	mbyte.c	FUNCTION_122
0x40040bc	              0xc3	                                     ret	      5870	mbyte.c	FUNCTION_122
0x40040bd	           0xf1f00	                         nop dword [rax]	      5870	mbyte.c	FUNCTION_122
0x40040c0	      0x3daaff0000	                         cmp eax, 0xffaa	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40040c5	     0xf8445010000	                            je 0x4004210	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40040cb	      0x3dabff0000	                         cmp eax, 0xffab	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40040d0	     0xf84ba000000	                            je 0x4004190	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40040d6	          0x83f820	                           cmp eax, 0x20	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40040d9	     0xf84e1000000	                            je 0x40041c0	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40040df	    0xc70500000000	               mov dword [0x040040e9], 0	      5770	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40040e9	      0xe9c2feffff	                           jmp 0x4003fb0	      5770	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40040ee	            0x6690	                                     nop	      5770	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40040f0	          0x8b7718	            mov esi, dword [rdi + 0x18] 	      5789	mbyte.c	FUNCTION_122	IF_2	IF_3
0x40040f3	    0x8b0d00000000	            mov ecx, dword [0x040040f9] 	      5789	mbyte.c	FUNCTION_122	IF_2	IF_3
0x40040f9	            0x89f7	                            mov edi, esi	      5789	mbyte.c	FUNCTION_122	IF_2	IF_3
0x40040fb	            0x21cf	                            and edi, ecx	      5789	mbyte.c	FUNCTION_122	IF_2	IF_3
0x40040fd	            0x39f9	                            cmp ecx, edi	      5789	mbyte.c	FUNCTION_122	IF_2	IF_3
0x40040ff	     0xf85f1feffff	                           jne 0x4003ff6	      5789	mbyte.c	FUNCTION_122	IF_2	IF_3
0x4004105	            0x89c8	                            mov eax, ecx	      5800	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_4
0x4004107	          0x83c80d	                             or eax, 0xd	      5800	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_4
0x400410a	            0x21c6	                            and esi, eax	      5800	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_4
0x400410c	            0x39f1	                            cmp ecx, esi	      5800	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_4
0x400410e	     0xf854cffffff	                           jne 0x4004060	      5800	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_4
0x4004114	        0x837d0008	                      cmp dword [rbp], 8	      5804	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_5
0x4004118	      0xbb01000000	                              mov ebx, 1	      5805	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_5
0x400411d	     0xf853fffffff	                           jne 0x4004062	      5804	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_5
0x4004123	            0x31d2	                            xor edx, edx	      5807	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	CALL_1
0x4004125	      0xbe20000000	                           mov esi, 0x20	      5807	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	CALL_1
0x400412a	      0xbf00000000	                              mov edi, 0	      5807	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	CALL_1
0x400412f	      0xe800000000	                          call 0x4004134	      5807	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	CALL_1
0x4004134	            0x85c0	                           test eax, eax	      5807	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	CALL_1
0x4004136	     0xf8413010000	                            je 0x400424f	      5807	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	CALL_1
0x400413c	            0x31ff	                            xor edi, edi	      5809	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	CALL_2
0x400413e	      0xe800000000	                          call 0x4004143	      5809	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	CALL_2
0x4004143	    0x8b0500000000	            mov eax, dword [0x04004149] 	      5812	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6
0x4004149	    0x488b15000000	            mov rdx, qword [0x04004150] 	      5815	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	IF_7
0x4004150	          0x83f020	                           xor eax, 0x20	      5812	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6
0x4004153	            0xa820	                           test al, 0x20	      5813	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	IF_7
0x4004155	     0xf8407010000	                            je 0x4004262	      5813	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	IF_7
0x400415b	          0x83e0df	                     and eax, 0xffffffdf	      5816	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	IF_7
0x400415e	    0x48c782781200	            mov qword [rdx + 0x1278], 0 	      5815	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	IF_7
0x4004169	    0x890500000000	            mov dword [0x0400416f], eax 	      5816	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	IF_7
0x400416f	      0xe9eefeffff	                           jmp 0x4004062	      5816	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	IF_7
0x4004174	         0xf1f4000	                         nop dword [rax]	      5816	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	IF_7
0x4004178	    0xc70500000000	           mov dword [0x04004182], 0x32 	      5761	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4004182	      0xe929feffff	                           jmp 0x4003fb0	      5761	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4004187	    0x660f1f840000	                    nop word [rax + rax]	      5761	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4004190	    0xc70500000000	           mov dword [0x0400419a], 0x2b 	      5753	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400419a	      0xe911feffff	                           jmp 0x4003fb0	      5753	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400419f	              0x90	                                     nop	      5753	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40041a0	    0xc70500000000	           mov dword [0x040041aa], 0x30 	      5759	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40041aa	      0xe901feffff	                           jmp 0x4003fb0	      5759	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40041af	              0x90	                                     nop	      5759	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40041b0	    0xc70500000000	           mov dword [0x040041ba], 0x39 	      5768	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40041ba	      0xe9f1fdffff	                           jmp 0x4003fb0	      5768	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40041bf	              0x90	                                     nop	      5768	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40041c0	    0xc70500000000	           mov dword [0x040041ca], 0x20 	      5769	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40041ca	      0xe9e1fdffff	                           jmp 0x4003fb0	      5769	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40041cf	              0x90	                                     nop	      5769	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40041d0	    0xc70500000000	           mov dword [0x040041da], 0x2e 	      5757	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40041da	      0xe9d1fdffff	                           jmp 0x4003fb0	      5757	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40041df	              0x90	                                     nop	      5757	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40041e0	    0xc70500000000	           mov dword [0x040041ea], 0x2f 	      5755	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40041ea	      0xe9c1fdffff	                           jmp 0x4003fb0	      5755	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40041ef	              0x90	                                     nop	      5755	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40041f0	    0xc70500000000	           mov dword [0x040041fa], 0x37 	      5766	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40041fa	      0xe9b1fdffff	                           jmp 0x4003fb0	      5766	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40041ff	              0x90	                                     nop	      5766	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4004200	    0xc70500000000	           mov dword [0x0400420a], 0x38 	      5767	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400420a	      0xe9a1fdffff	                           jmp 0x4003fb0	      5767	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400420f	              0x90	                                     nop	      5767	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4004210	    0xc70500000000	           mov dword [0x0400421a], 0x2a 	      5756	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400421a	      0xe991fdffff	                           jmp 0x4003fb0	      5756	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400421f	              0x90	                                     nop	      5756	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4004220	    0xc70500000000	           mov dword [0x0400422a], 0x34 	      5763	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400422a	      0xe981fdffff	                           jmp 0x4003fb0	      5763	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400422f	              0x90	                                     nop	      5763	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4004230	    0xc70500000000	           mov dword [0x0400423a], 0x2d 	      5754	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400423a	      0xe971fdffff	                           jmp 0x4003fb0	      5754	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400423f	              0x90	                                     nop	      5754	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4004240	    0xc70500000000	           mov dword [0x0400424a], 0x36 	      5765	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400424a	      0xe961fdffff	                           jmp 0x4003fb0	      5765	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400424f	          0x4889ee	                            mov rsi, rbp	      5826	mbyte.c	FUNCTION_122	IF_2	IF_3	CALL_3
0x4004252	    0x488b3d000000	            mov rdi, qword [0x04004259] 	      5826	mbyte.c	FUNCTION_122	IF_2	IF_3	CALL_3
0x4004259	            0x4158	                                  pop r8	      5870	mbyte.c	FUNCTION_122
0x400425b	              0x5b	                                 pop rbx	      5870	mbyte.c	FUNCTION_122
0x400425c	              0x5d	                                 pop rbp	      5870	mbyte.c	FUNCTION_122
0x400425d	      0xe900000000	                           jmp 0x4004262	      5826	mbyte.c	FUNCTION_122	IF_2	IF_3	CALL_3
0x4004262	          0x83c820	                            or eax, 0x20	      5821	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	ELSE_1
0x4004265	    0x48c782781200	            mov qword [rdx + 0x1278], 1 	      5820	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	ELSE_1
0x4004270	    0x890500000000	            mov dword [0x04004276], eax 	      5821	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	ELSE_1
0x4004276	      0xe9e7fdffff	                           jmp 0x4004062	      5821	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	ELSE_1
utfc_ptr2len	DO,0:IF,4:CALL,3:FOR,1:functions,0:ELSE,0:WHILE,0:SWITCH,0	106
0x4001430	           0xfb60f	                   movzx ecx, byte [rdi]	      2141	mbyte.c	FUNCTION_48
0x4001433	            0x31c0	                            xor eax, eax	      2147	mbyte.c	FUNCTION_48	IF_1
0x4001435	            0x85c9	                           test ecx, ecx	      2146	mbyte.c	FUNCTION_48	IF_1
0x4001437	     0xf840e010000	                            je 0x400154b	      2146	mbyte.c	FUNCTION_48	IF_1
0x400143d	          0x83f97f	                           cmp ecx, 0x7f	      2148	mbyte.c	FUNCTION_48	IF_2
0x4001440	            0x89ca	                            mov edx, ecx	      2148	mbyte.c	FUNCTION_48	IF_2
0x4001442	     0xf8e08010000	                           jle 0x4001550	      2148	mbyte.c	FUNCTION_48	IF_2
0x4001448	            0x31c0	                            xor eax, eax	      2147	mbyte.c	FUNCTION_48	IF_1
0x400144a	            0x84d2	                             test dl, dl	      2085	mbyte.c	FUNCTION_45	IF_1
0x400144c	     0xf84f9000000	                            je 0x400154b	      2085	mbyte.c	FUNCTION_45	IF_1
0x4001452	          0x4863c1	                         movsxd rax, ecx	      2087	mbyte.c	FUNCTION_45
0x4001455	            0x4155	                                push r13	      2139	mbyte.c	FUNCTION_48
0x4001457	            0x4154	                                push r12	      2139	mbyte.c	FUNCTION_48
0x4001459	    0x440fbea00000	                  movsx r12d, byte [rax]	      2087	mbyte.c	FUNCTION_45
0x4001461	              0x55	                                push rbp	      2139	mbyte.c	FUNCTION_48
0x4001462	              0x53	                                push rbx	      2139	mbyte.c	FUNCTION_48
0x4001463	        0x4183fc01	                             cmp r12d, 1	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4001467	     0xf8e2d010000	                           jle 0x400159a	      2088	mbyte.c	FUNCTION_45	FOR_1
0x400146d	         0xfb64701	               movzx eax, byte [rdi + 1]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001471	          0x83e0c0	                     and eax, 0xffffffc0	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001474	            0x3c80	                            cmp al, 0x80	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001476	     0xf85e5000000	                           jne 0x4001561	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x400147c	      0x418d7424fe	                      lea esi, [r12 - 2]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001481	          0x4889f8	                            mov rax, rdi	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001484	          0x4801fe	                            add rsi, rdi	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001487	            0xeb1b	                           jmp 0x40014a4	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001489	     0xf1f80000000	                         nop dword [rax]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001490	         0xfb65002	               movzx edx, byte [rax + 2]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001494	        0x4883c001	                              add rax, 1	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001498	          0x83e2c0	                     and edx, 0xffffffc0	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x400149b	          0x80fa80	                            cmp dl, 0x80	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x400149e	     0xf85bd000000	                           jne 0x4001561	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40014a4	          0x4839c6	                            cmp rsi, rax	      2088	mbyte.c	FUNCTION_45	FOR_1
0x40014a7	            0x75e7	                           jne 0x4001490	      2088	mbyte.c	FUNCTION_45	FOR_1
0x40014a9	          0x4963f4	                        movsxd rsi, r12d	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x40014ac	        0x488d1c37	                    lea rbx, [rdi + rsi]	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x40014b0	        0x440fb62b	                  movzx r13d, byte [rbx]	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x40014b4	          0x4584ed	                         test r13b, r13b	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x40014b7	     0xf8985000000	                           jns 0x4001542	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x40014bd	          0x4889fd	                            mov rbp, rdi	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x40014c0	            0x31ff	                            xor edi, edi	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x40014c2	          0x4889de	                            mov rsi, rbx	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x40014c5	          0x4801ef	                            add rdi, rbp	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x40014c8	      0xe800000000	                          call 0x40014cd	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x40014cd	            0x85c0	                           test eax, eax	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x40014cf	            0x7471	                            je 0x4001542	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x40014d1	     0xf1f80000000	                         nop dword [rax]	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x40014d8	    0x410fbe850000	                   movsx eax, byte [r13]	      2087	mbyte.c	FUNCTION_45
0x40014e0	          0x83f801	                              cmp eax, 1	      2088	mbyte.c	FUNCTION_45	FOR_1
0x40014e3	            0x7e34	                           jle 0x4001519	      2088	mbyte.c	FUNCTION_45	FOR_1
0x40014e5	         0xfb65301	               movzx edx, byte [rbx + 1]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40014e9	          0x83e2c0	                     and edx, 0xffffffc0	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40014ec	          0x80fa80	                            cmp dl, 0x80	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40014ef	     0xf859b000000	                           jne 0x4001590	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40014f5	          0x8d48fe	                      lea ecx, [rax - 2]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40014f8	          0x4889de	                            mov rsi, rbx	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40014fb	          0x4801d9	                            add rcx, rbx	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40014fe	            0xeb14	                           jmp 0x4001514	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001500	         0xfb65602	               movzx edx, byte [rsi + 2]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001504	        0x4883c601	                              add rsi, 1	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001508	          0x83e2c0	                     and edx, 0xffffffc0	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x400150b	          0x80fa80	                            cmp dl, 0x80	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x400150e	     0xf857c000000	                           jne 0x4001590	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001514	          0x4839f1	                            cmp rcx, rsi	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4001517	            0x75e7	                           jne 0x4001500	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4001519	          0x4401e0	                           add eax, r12d	      2174	mbyte.c	FUNCTION_48	FOR_1	CALL_3
0x400151c	          0x4963fc	                        movsxd rdi, r12d	      2174	mbyte.c	FUNCTION_48	FOR_1	CALL_3
0x400151f	          0x4863f0	                         movsxd rsi, eax	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x4001522	      0x488d5c3500	                    lea rbx, [rbp + rsi]	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x4001527	        0x440fb62b	                  movzx r13d, byte [rbx]	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x400152b	          0x4584ed	                         test r13b, r13b	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x400152e	            0x7952	                           jns 0x4001582	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x4001530	          0x4801ef	                            add rdi, rbp	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x4001533	          0x4889de	                            mov rsi, rbx	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x4001536	          0x4189c4	                           mov r12d, eax	      2174	mbyte.c	FUNCTION_48	FOR_1	CALL_3
0x4001539	      0xe800000000	                          call 0x400153e	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x400153e	            0x85c0	                           test eax, eax	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x4001540	            0x7596	                           jne 0x40014d8	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x4001542	              0x5b	                                 pop rbx	      2176	mbyte.c	FUNCTION_48
0x4001543	          0x4489e0	                           mov eax, r12d	      2176	mbyte.c	FUNCTION_48
0x4001546	              0x5d	                                 pop rbp	      2176	mbyte.c	FUNCTION_48
0x4001547	            0x415c	                                 pop r12	      2176	mbyte.c	FUNCTION_48
0x4001549	            0x415d	                                 pop r13	      2176	mbyte.c	FUNCTION_48
0x400154b	            0xf3c3	                                     ret	      2176	mbyte.c	FUNCTION_48
0x400154d	           0xf1f00	                         nop dword [rax]	      2176	mbyte.c	FUNCTION_48
0x4001550	        0x807f0100	                   cmp byte [rdi + 1], 0	      2148	mbyte.c	FUNCTION_48	IF_2
0x4001554	      0xb801000000	                              mov eax, 1	      2149	mbyte.c	FUNCTION_48	IF_2
0x4001559	     0xf88e9feffff	                            js 0x4001448	      2148	mbyte.c	FUNCTION_48	IF_2
0x400155f	            0xf3c3	                                     ret	      2176	mbyte.c	FUNCTION_48
0x4001561	      0xb801000000	                              mov eax, 1	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001566	    0x41bc01000000	                             mov r12d, 1	      2090	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x400156c	          0x83f97f	                           cmp ecx, 0x7f	      2155	mbyte.c	FUNCTION_48	IF_3
0x400156f	     0xf8e34ffffff	                           jle 0x40014a9	      2155	mbyte.c	FUNCTION_48	IF_3
0x4001575	            0x84c0	                             test al, al	      2155	mbyte.c	FUNCTION_48	IF_3
0x4001577	     0xf842cffffff	                            je 0x40014a9	      2155	mbyte.c	FUNCTION_48	IF_3
0x400157d	      0xb801000000	                              mov eax, 1	      2149	mbyte.c	FUNCTION_48	IF_2
0x4001582	              0x5b	                                 pop rbx	      2176	mbyte.c	FUNCTION_48
0x4001583	              0x5d	                                 pop rbp	      2176	mbyte.c	FUNCTION_48
0x4001584	            0x415c	                                 pop r12	      2176	mbyte.c	FUNCTION_48
0x4001586	            0x415d	                                 pop r13	      2176	mbyte.c	FUNCTION_48
0x4001588	              0xc3	                                     ret	      2176	mbyte.c	FUNCTION_48
0x4001589	     0xf1f80000000	                         nop dword [rax]	      2176	mbyte.c	FUNCTION_48
0x4001590	      0xb801000000	                              mov eax, 1	      2090	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001595	      0xe97fffffff	                           jmp 0x4001519	      2090	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x400159a	           0xf94c0	                                 sete al	      2090	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x400159d	            0xebcd	                           jmp 0x400156c	      2090	mbyte.c	FUNCTION_45	FOR_1	IF_2
xim_reset	DO,0:IF,6:CALL,10:FOR,0:functions,0:ELSE,3:WHILE,0:SWITCH,0	67
0x4003d10	        0x4883ec18	                           sub rsp, 0x18	      5695	mbyte.c	FUNCTION_121
0x4003d14	    0x8b3500000000	            mov esi, dword [0x04003d1a] 	      5697	mbyte.c	FUNCTION_121	IF_1
0x4003d1a	    0x64488b042528	                mov rax, qword fs:[0x28]	      5695	mbyte.c	FUNCTION_121
0x4003d23	      0x4889442408	                mov qword [rsp + 8], rax	      5695	mbyte.c	FUNCTION_121
0x4003d28	            0x31c0	                            xor eax, eax	      5695	mbyte.c	FUNCTION_121
0x4003d2a	            0x85f6	                           test esi, esi	      5697	mbyte.c	FUNCTION_121	IF_1
0x4003d2c	            0x7510	                           jne 0x4003d3e	      5697	mbyte.c	FUNCTION_121	IF_1
0x4003d2e	    0x488b3d000000	            mov rdi, qword [0x04003d35] 	      5697	mbyte.c	FUNCTION_121	IF_1
0x4003d35	          0x803f00	                       cmp byte [rdi], 0	      5697	mbyte.c	FUNCTION_121	IF_1
0x4003d38	     0xf8592000000	                           jne 0x4003dd0	      5697	mbyte.c	FUNCTION_121	IF_1
0x4003d3e	    0x488b3d000000	            mov rdi, qword [0x04003d45] 	      5701	mbyte.c	FUNCTION_121	ELSE_1	IF_2
0x4003d45	          0x4885ff	                           test rdi, rdi	      5701	mbyte.c	FUNCTION_121	ELSE_1	IF_2
0x4003d48	            0x743e	                            je 0x4003d88	      5701	mbyte.c	FUNCTION_121	ELSE_1	IF_2
0x4003d4a	      0xe800000000	                          call 0x4003d4f	      5703	mbyte.c	FUNCTION_121	ELSE_1	IF_2	CALL_2
0x4003d4f	    0x8b1500000000	            mov edx, dword [0x04003d55] 	      5705	mbyte.c	FUNCTION_121	ELSE_1	IF_2	IF_3
0x4003d55	            0x85d2	                           test edx, edx	      5705	mbyte.c	FUNCTION_121	ELSE_1	IF_2	IF_3
0x4003d57	            0x7567	                           jne 0x4003dc0	      5705	mbyte.c	FUNCTION_121	ELSE_1	IF_2	IF_3
0x4003d59	    0x8b3d00000000	            mov edi, dword [0x04003d5f] 	      5709	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	CALL_4
0x4003d5f	      0xe800000000	                          call 0x4003d64	      5709	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	CALL_4
0x4003d64	    0x813d00000000	       cmp dword [0x04003d6e], 0xffffff 	      5711	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4
0x4003d6e	     0xf84cc000000	                            je 0x4003e40	      5711	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4
0x4003d74	    0x8b0500000000	            mov eax, dword [0x04003d7a] 	      5713	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5
0x4003d7a	            0x85c0	                           test eax, eax	      5713	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5
0x4003d7c	     0xf857e000000	                           jne 0x4003e00	      5713	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5
0x4003d82	    0x660f1f440000	                    nop word [rax + rax]	      5713	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5
0x4003d88	    0x48833d000000	               cmp qword [0x04003d90], 0	      5730	mbyte.c	FUNCTION_121	IF_6
0x4003d90	            0x750a	                           jne 0x4003d9c	      5730	mbyte.c	FUNCTION_121	IF_6
0x4003d92	    0xc70500000000	     mov dword [0x04003d9c], 0x7fffffff 	      5731	mbyte.c	FUNCTION_121	IF_6
0x4003d9c	      0x488b442408	                mov rax, qword [rsp + 8]	      5733	mbyte.c	FUNCTION_121
0x4003da1	    0x644833042528	                xor rax, qword fs:[0x28]	      5733	mbyte.c	FUNCTION_121
0x4003daa	    0xc70500000000	               mov dword [0x04003db4], 0	      5732	mbyte.c	FUNCTION_121
0x4003db4	     0xf85a0000000	                           jne 0x4003e5a	      5733	mbyte.c	FUNCTION_121
0x4003dba	        0x4883c418	                           add rsp, 0x18	      5733	mbyte.c	FUNCTION_121
0x4003dbe	              0xc3	                                     ret	      5733	mbyte.c	FUNCTION_121
0x4003dbf	              0x90	                                     nop	      5733	mbyte.c	FUNCTION_121
0x4003dc0	      0xe800000000	                          call 0x4003dc5	      5706	mbyte.c	FUNCTION_121	ELSE_1	IF_2	CALL_3
0x4003dc5	            0xebc1	                           jmp 0x4003d88	      5706	mbyte.c	FUNCTION_121	ELSE_1	IF_2	CALL_3
0x4003dc7	    0x660f1f840000	                    nop word [rax + rax]	      5706	mbyte.c	FUNCTION_121	ELSE_1	IF_2	CALL_3
0x4003dd0	    0x8b0d00000000	            mov ecx, dword [0x04003dd6] 	      4801	mbyte.c	FUNCTION_95	IF_1
0x4003dd6	      0xba00000000	                              mov edx, 0	      4801	mbyte.c	FUNCTION_95	IF_1
0x4003ddb	      0xb800000000	                              mov eax, 0	      4801	mbyte.c	FUNCTION_95	IF_1
0x4003de0	      0xbe01000000	                              mov esi, 1	      4804	mbyte.c	FUNCTION_95	CALL_1
0x4003de5	            0x85c9	                           test ecx, ecx	      4801	mbyte.c	FUNCTION_95	IF_1
0x4003de7	        0x480f45c2	                         cmovne rax, rdx	      4801	mbyte.c	FUNCTION_95	IF_1
0x4003deb	            0x31c9	                            xor ecx, ecx	      4804	mbyte.c	FUNCTION_95	CALL_1
0x4003ded	          0x4889e2	                            mov rdx, rsp	      4804	mbyte.c	FUNCTION_95	CALL_1
0x4003df0	        0x48890424	                    mov qword [rsp], rax	      4801	mbyte.c	FUNCTION_95	IF_1
0x4003df4	      0xe800000000	                          call 0x4003df9	      4804	mbyte.c	FUNCTION_95	CALL_1
0x4003df9	            0xeb8d	                           jmp 0x4003d88	      4804	mbyte.c	FUNCTION_95	CALL_1
0x4003dfb	       0xf1f440000	                   nop dword [rax + rax]	      4804	mbyte.c	FUNCTION_95	CALL_1
0x4003e00	    0x488b35000000	            mov rsi, qword [0x04003e07] 	      5715	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_5
0x4003e07	    0x488b3d000000	            mov rdi, qword [0x04003e0e] 	      5715	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_5
0x4003e0e	      0xe800000000	                          call 0x4003e13	      5715	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_5
0x4003e13	    0x8b3500000000	            mov esi, dword [0x04003e19] 	      5716	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_6
0x4003e19	    0x8b3d00000000	            mov edi, dword [0x04003e1f] 	      5716	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_6
0x4003e1f	      0xe83ccaffff	         call sym.im_synthesize_keypress	      5716	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_6
0x4003e24	    0x488b35000000	            mov rsi, qword [0x04003e2b] 	      5718	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_7
0x4003e2b	    0x488b3d000000	            mov rdi, qword [0x04003e32] 	      5718	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_7
0x4003e32	      0xe800000000	                          call 0x4003e37	      5718	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_7
0x4003e37	      0xe94cffffff	                           jmp 0x4003d88	      5718	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_7
0x4003e3c	         0xf1f4000	                         nop dword [rax]	      5718	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_7
0x4003e40	      0xe800000000	                          call 0x4003e45	      5723	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	ELSE_3	CALL_8
0x4003e45	      0xe800000000	                          call 0x4003e4a	      5724	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	ELSE_3	CALL_9
0x4003e4a	    0x8b3d00000000	            mov edi, dword [0x04003e50] 	      5725	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	ELSE_3	CALL_10
0x4003e50	      0xe800000000	                          call 0x4003e55	      5725	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	ELSE_3	CALL_10
0x4003e55	      0xe92effffff	                           jmp 0x4003d88	      5725	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	ELSE_3	CALL_10
0x4003e5a	      0xe800000000	                          call 0x4003e5f	      5733	mbyte.c	FUNCTION_121
show_utf8	DO,0:IF,4:CALL,7:FOR,1:functions,0:ELSE,0:WHILE,0:SWITCH,0	98
0x40028e0	            0x4157	                                push r15	      3715	mbyte.c	FUNCTION_66
0x40028e2	            0x4156	                                push r14	      3715	mbyte.c	FUNCTION_66
0x40028e4	            0x4155	                                push r13	      3715	mbyte.c	FUNCTION_66
0x40028e6	            0x4154	                                push r12	      3715	mbyte.c	FUNCTION_66
0x40028e8	              0x55	                                push rbp	      3715	mbyte.c	FUNCTION_66
0x40028e9	              0x53	                                push rbx	      3715	mbyte.c	FUNCTION_66
0x40028ea	        0x4883ec18	                           sub rsp, 0x18	      3715	mbyte.c	FUNCTION_66
0x40028ee	      0xe800000000	                          call 0x40028f3	      3724	mbyte.c	FUNCTION_66	CALL_1
0x40028f3	          0x4889c7	                            mov rdi, rax	      3725	mbyte.c	FUNCTION_66	CALL_2
0x40028f6	          0x4989c5	                            mov r13, rax	      3724	mbyte.c	FUNCTION_66	CALL_1
0x40028f9	      0xe800000000	                          call 0x40028fe	      3725	mbyte.c	FUNCTION_66	CALL_2
0x40028fe	          0x83f800	                              cmp eax, 0	      3726	mbyte.c	FUNCTION_66	IF_1
0x4002901	     0xf843f010000	                            je 0x4002a46	      3726	mbyte.c	FUNCTION_66	IF_1
0x4002907	    0x488b1d000000	            mov rbx, qword [0x0400290e] 	      3726	mbyte.c	FUNCTION_66	IF_1
0x400290e	     0xf8e1c010000	                           jle 0x4002a30	      3733	mbyte.c	FUNCTION_66	FOR_1
0x4002914	          0x83e801	                              sub eax, 1	      3733	mbyte.c	FUNCTION_66	FOR_1
0x4002917	          0x4d89ef	                            mov r15, r13	      3733	mbyte.c	FUNCTION_66	FOR_1
0x400291a	          0x4531f6	                          xor r14d, r14d	      3733	mbyte.c	FUNCTION_66	FOR_1
0x400291d	      0x498d440501	                lea rax, [r13 + rax + 1]	      3733	mbyte.c	FUNCTION_66	FOR_1
0x4002922	            0x31ed	                            xor ebp, ebp	      3733	mbyte.c	FUNCTION_66	FOR_1
0x4002924	      0x4889442408	                mov qword [rsp + 8], rax	      3733	mbyte.c	FUNCTION_66	FOR_1
0x4002929	            0xeb62	                           jmp 0x400298d	      3733	mbyte.c	FUNCTION_66	FOR_1
0x400292b	       0xf1f440000	                   nop dword [rax + rax]	      3733	mbyte.c	FUNCTION_66	FOR_1
0x4002930	        0x450fb607	                   movzx r8d, byte [r15]	      3733	mbyte.c	FUNCTION_66	FOR_1
0x4002934	        0x4183ee01	                             sub r14d, 1	      3733	mbyte.c	FUNCTION_66	FOR_1
0x4002938	        0x4180f80a	                            cmp r8b, 0xa	      3745	mbyte.c	FUNCTION_66	FOR_1
0x400293c	            0x7503	                           jne 0x4002941	      3745	mbyte.c	FUNCTION_66	FOR_1
0x400293e	          0x4531c0	                            xor r8d, r8d	      3745	mbyte.c	FUNCTION_66	FOR_1
0x4002941	          0x4c63e5	                         movsxd r12, ebp	      3745	mbyte.c	FUNCTION_66	FOR_1
0x4002944	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_158	CALL_1
0x4002949	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_158	CALL_1
0x4002950	        0x4a8d3c23	                    lea rdi, [rbx + r12]	        33	stdio2.h	FUNCTION_158	CALL_1
0x4002954	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_158	CALL_1
0x4002959	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_158	CALL_1
0x400295b	      0xe800000000	                          call 0x4002960	        33	stdio2.h	FUNCTION_158	CALL_1
0x4002960	    0x488b1d000000	            mov rbx, qword [0x04002967] 	      3748	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x4002967	        0x4a8d3c23	                    lea rdi, [rbx + r12]	      3748	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x400296b	      0xe800000000	                          call 0x4002970	      3748	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x4002970	             0x1c5	                            add ebp, eax	      3748	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x4002972	    0x81fded030000	                          cmp ebp, 0x3ed	      3749	mbyte.c	FUNCTION_66	FOR_1	IF_4
0x4002978	     0xf8fb2000000	                            jg 0x4002a30	      3749	mbyte.c	FUNCTION_66	FOR_1	IF_4
0x400297e	        0x4983c701	                              add r15, 1	      3749	mbyte.c	FUNCTION_66	FOR_1	IF_4
0x4002982	      0x4c397c2408	                cmp qword [rsp + 8], r15	      3733	mbyte.c	FUNCTION_66	FOR_1
0x4002987	     0xf84a3000000	                            je 0x4002a30	      3733	mbyte.c	FUNCTION_66	FOR_1
0x400298d	          0x4585f6	                         test r14d, r14d	      3735	mbyte.c	FUNCTION_66	FOR_1	IF_2
0x4002990	            0x759e	                           jne 0x4002930	      3735	mbyte.c	FUNCTION_66	FOR_1	IF_2
0x4002992	          0x4489f8	                           mov eax, r15d	      3738	mbyte.c	FUNCTION_66	FOR_1	IF_2	IF_3
0x4002995	          0x4429e8	                           sub eax, r13d	      3738	mbyte.c	FUNCTION_66	FOR_1	IF_2	IF_3
0x4002998	            0x85c0	                           test eax, eax	      3738	mbyte.c	FUNCTION_66	FOR_1	IF_2	IF_3
0x400299a	            0x7e1c	                           jle 0x40029b8	      3738	mbyte.c	FUNCTION_66	FOR_1	IF_2	IF_3
0x400299c	          0x4863fd	                         movsxd rdi, ebp	       110	string3.h	FUNCTION_152	CALL_3
0x400299f	      0xb82b200000	                         mov eax, 0x202b	       110	string3.h	FUNCTION_152	CALL_3
0x40029a4	          0x83c502	                              add ebp, 2	      3741	mbyte.c	FUNCTION_66	FOR_1	IF_2	IF_3
0x40029a7	          0x4801fb	                            add rbx, rdi	       110	string3.h	FUNCTION_152	CALL_3
0x40029aa	          0x668903	                      mov word [rbx], ax	       110	string3.h	FUNCTION_152	CALL_3
0x40029ad	        0xc6430200	                   mov byte [rbx + 2], 0	       110	string3.h	FUNCTION_152	CALL_3
0x40029b1	    0x488b1d000000	            mov rbx, qword [0x040029b8] 	       110	string3.h	FUNCTION_152	CALL_3
0x40029b8	        0x450fb607	                   movzx r8d, byte [r15]	      2085	mbyte.c	FUNCTION_45	IF_1
0x40029bc	    0x41beffffffff	                    mov r14d, 0xffffffff	      2085	mbyte.c	FUNCTION_45	IF_1
0x40029c2	          0x4584c0	                           test r8b, r8b	      2085	mbyte.c	FUNCTION_45	IF_1
0x40029c5	     0xf8476ffffff	                            je 0x4002941	      2085	mbyte.c	FUNCTION_45	IF_1
0x40029cb	        0x410fb6c0	                          movzx eax, r8b	      2087	mbyte.c	FUNCTION_45
0x40029cf	    0x440fbeb00000	                  movsx r14d, byte [rax]	      2087	mbyte.c	FUNCTION_45
0x40029d7	        0x4183fe01	                             cmp r14d, 1	      2088	mbyte.c	FUNCTION_45	FOR_1
0x40029db	            0x7e30	                           jle 0x4002a0d	      2088	mbyte.c	FUNCTION_45	FOR_1
0x40029dd	      0x410fb64701	               movzx eax, byte [r15 + 1]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40029e2	          0x83e0c0	                     and eax, 0xffffffc0	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40029e5	            0x3c80	                            cmp al, 0x80	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40029e7	            0x7537	                           jne 0x4002a20	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40029e9	        0x418d4efe	                      lea ecx, [r14 - 2]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40029ed	          0x4c89f8	                            mov rax, r15	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40029f0	          0x4c01f9	                            add rcx, r15	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40029f3	            0xeb13	                           jmp 0x4002a08	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40029f5	           0xf1f00	                         nop dword [rax]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40029f8	         0xfb65002	               movzx edx, byte [rax + 2]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x40029fc	        0x4883c001	                              add rax, 1	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4002a00	          0x83e2c0	                     and edx, 0xffffffc0	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4002a03	          0x80fa80	                            cmp dl, 0x80	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4002a06	            0x7518	                           jne 0x4002a20	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4002a08	          0x4839c1	                            cmp rcx, rax	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4002a0b	            0x75eb	                           jne 0x40029f8	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4002a0d	        0x4183ee01	                             sub r14d, 1	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4002a11	      0xe922ffffff	                           jmp 0x4002938	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4002a16	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4002a20	          0x4531f6	                          xor r14d, r14d	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4002a23	      0xe910ffffff	                           jmp 0x4002938	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4002a28	     0xf1f84000000	                   nop dword [rax + rax]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4002a30	          0x4889df	                            mov rdi, rbx	      3753	mbyte.c	FUNCTION_66	CALL_7
0x4002a33	        0x4883c418	                           add rsp, 0x18	      3754	mbyte.c	FUNCTION_66
0x4002a37	              0x5b	                                 pop rbx	      3754	mbyte.c	FUNCTION_66
0x4002a38	              0x5d	                                 pop rbp	      3754	mbyte.c	FUNCTION_66
0x4002a39	            0x415c	                                 pop r12	      3754	mbyte.c	FUNCTION_66
0x4002a3b	            0x415d	                                 pop r13	      3754	mbyte.c	FUNCTION_66
0x4002a3d	            0x415e	                                 pop r14	      3754	mbyte.c	FUNCTION_66
0x4002a3f	            0x415f	                                 pop r15	      3754	mbyte.c	FUNCTION_66
0x4002a41	      0xe900000000	                           jmp 0x4002a46	      3753	mbyte.c	FUNCTION_66	CALL_7
0x4002a46	      0xbf00000000	                              mov edi, 0	      3728	mbyte.c	FUNCTION_66	IF_1	CALL_3
0x4002a4b	            0xebe6	                           jmp 0x4002a33	      3728	mbyte.c	FUNCTION_66	IF_1	CALL_3
utf_valid_string	DO,0:IF,3:CALL,0:FOR,0:functions,0:ELSE,0:WHILE,2:SWITCH,0	34
0x4002c30	          0x4839f7	                            cmp rdi, rsi	      4049	mbyte.c	FUNCTION_75	WHILE_1
0x4002c33	           0xf92c0	                                 setb al	      4049	mbyte.c	FUNCTION_75	WHILE_1
0x4002c36	          0x4885f6	                           test rsi, rsi	      4049	mbyte.c	FUNCTION_75	WHILE_1
0x4002c39	            0x744d	                            je 0x4002c88	      4049	mbyte.c	FUNCTION_75	WHILE_1
0x4002c3b	            0x84c0	                             test al, al	      4049	mbyte.c	FUNCTION_75	WHILE_1
0x4002c3d	            0x7451	                            je 0x4002c90	      4049	mbyte.c	FUNCTION_75	WHILE_1
0x4002c3f	           0xfb607	                   movzx eax, byte [rdi]	      4051	mbyte.c	FUNCTION_75	WHILE_1
0x4002c42	    0x480fbe900000	                   movsx rdx, byte [rax]	      4051	mbyte.c	FUNCTION_75	WHILE_1
0x4002c4a	            0x85d2	                           test edx, edx	      4052	mbyte.c	FUNCTION_75	WHILE_1	IF_1
0x4002c4c	          0x4889d0	                            mov rax, rdx	      4051	mbyte.c	FUNCTION_75	WHILE_1
0x4002c4f	            0x742d	                            je 0x4002c7e	      4052	mbyte.c	FUNCTION_75	WHILE_1	IF_1
0x4002c51	          0x4885f6	                           test rsi, rsi	      4054	mbyte.c	FUNCTION_75	WHILE_1	IF_2
0x4002c54	            0x7408	                            je 0x4002c5e	      4054	mbyte.c	FUNCTION_75	WHILE_1	IF_2
0x4002c56	          0x4801f8	                            add rax, rdi	      4054	mbyte.c	FUNCTION_75	WHILE_1	IF_2
0x4002c59	          0x4839c6	                            cmp rsi, rax	      4054	mbyte.c	FUNCTION_75	WHILE_1	IF_2
0x4002c5c	            0x7220	                            jb 0x4002c7e	      4054	mbyte.c	FUNCTION_75	WHILE_1	IF_2
0x4002c5e	        0x4883c701	                              add rdi, 1	      4056	mbyte.c	FUNCTION_75	WHILE_1
0x4002c62	    0x660f1f440000	                    nop word [rax + rax]	      4056	mbyte.c	FUNCTION_75	WHILE_1
0x4002c68	          0x83ea01	                              sub edx, 1	      4057	mbyte.c	FUNCTION_75	WHILE_1	WHILE_2
0x4002c6b	            0x85d2	                           test edx, edx	      4057	mbyte.c	FUNCTION_75	WHILE_1	WHILE_2
0x4002c6d	            0x7ec1	                jle sym.utf_valid_string	      4057	mbyte.c	FUNCTION_75	WHILE_1	WHILE_2
0x4002c6f	        0x4883c701	                              add rdi, 1	      4058	mbyte.c	FUNCTION_75	WHILE_1	WHILE_2	IF_3
0x4002c73	         0xfb647ff	               movzx eax, byte [rdi - 1]	      4058	mbyte.c	FUNCTION_75	WHILE_1	WHILE_2	IF_3
0x4002c77	          0x83e0c0	                     and eax, 0xffffffc0	      4058	mbyte.c	FUNCTION_75	WHILE_1	WHILE_2	IF_3
0x4002c7a	            0x3c80	                            cmp al, 0x80	      4058	mbyte.c	FUNCTION_75	WHILE_1	WHILE_2	IF_3
0x4002c7c	            0x74ea	                            je 0x4002c68	      4058	mbyte.c	FUNCTION_75	WHILE_1	WHILE_2	IF_3
0x4002c7e	            0x31c0	                            xor eax, eax	      4053	mbyte.c	FUNCTION_75	WHILE_1	IF_1
0x4002c80	              0xc3	                                     ret	      4062	mbyte.c	FUNCTION_75
0x4002c81	     0xf1f80000000	                         nop dword [rax]	      4062	mbyte.c	FUNCTION_75
0x4002c88	          0x803f00	                       cmp byte [rdi], 0	      4049	mbyte.c	FUNCTION_75	WHILE_1
0x4002c8b	           0xf95c0	                                setne al	      4049	mbyte.c	FUNCTION_75	WHILE_1
0x4002c8e	            0xebab	                           jmp 0x4002c3b	      4049	mbyte.c	FUNCTION_75	WHILE_1
0x4002c90	      0xb801000000	                              mov eax, 1	      4061	mbyte.c	FUNCTION_75
0x4002c95	              0xc3	                                     ret	      4061	mbyte.c	FUNCTION_75
dbcs_ptr2cells	DO,0:IF,1:CALL,1:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	10
0x4000110	    0x813d00000000	         cmp dword [0x0400011a], 0x26cc 	      1647	mbyte.c	FUNCTION_23	IF_1
0x400011a	           0xfb607	                   movzx eax, byte [rdi]	      1647	mbyte.c	FUNCTION_23	IF_1
0x400011d	            0x7411	                            je 0x4000130	      1647	mbyte.c	FUNCTION_23	IF_1
0x400011f	     0xfbe80000000	                   movsx eax, byte [rax]	      1649	mbyte.c	FUNCTION_23	CALL_1
0x4000126	              0xc3	                                     ret	      1649	mbyte.c	FUNCTION_23	CALL_1
0x4000127	    0x660f1f840000	                    nop word [rax + rax]	      1649	mbyte.c	FUNCTION_23	CALL_1
0x4000130	            0x3c8e	                            cmp al, 0x8e	      1647	mbyte.c	FUNCTION_23	IF_1
0x4000132	            0x75eb	                           jne 0x400011f	      1647	mbyte.c	FUNCTION_23	IF_1
0x4000134	      0xb801000000	                              mov eax, 1	      1648	mbyte.c	FUNCTION_23	IF_1
0x4000139	              0xc3	                                     ret	      1650	mbyte.c	FUNCTION_23
im_is_preediting	DO,0:IF,0:CALL,0:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	2
0x4004290	    0x8b0500000000	            mov eax, dword [0x04004296] 	      5892	mbyte.c	FUNCTION_125
0x4004296	              0xc3	                                     ret	      5892	mbyte.c	FUNCTION_125
utf_ptr2cells_len	DO,0:IF,4:CALL,5:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	92
0x4001f10	            0x85f6	                           test esi, esi	      1669	mbyte.c	FUNCTION_25	IF_1
0x4001f12	     0xf8ec0000000	                           jle 0x4001fd8	      1669	mbyte.c	FUNCTION_25	IF_1
0x4001f18	           0xfb617	                   movzx edx, byte [rdi]	      1669	mbyte.c	FUNCTION_25	IF_1
0x4001f1b	      0xb801000000	                              mov eax, 1	      1682	mbyte.c	FUNCTION_25
0x4001f20	            0x84d2	                             test dl, dl	      1669	mbyte.c	FUNCTION_25	IF_1
0x4001f22	            0x7804	                            js 0x4001f28	      1669	mbyte.c	FUNCTION_25	IF_1
0x4001f24	              0xc3	                                     ret	      1683	mbyte.c	FUNCTION_25
0x4001f25	           0xf1f00	                         nop dword [rax]	      1683	mbyte.c	FUNCTION_25
0x4001f28	              0x55	                                push rbp	      1665	mbyte.c	FUNCTION_25
0x4001f29	              0x53	                                push rbx	      1665	mbyte.c	FUNCTION_25
0x4001f2a	          0x4889fb	                            mov rbx, rdi	      1665	mbyte.c	FUNCTION_25
0x4001f2d	        0x4883ec08	                              sub rsp, 8	      1665	mbyte.c	FUNCTION_25
0x4001f31	     0xfbeaa000000	                   movsx ebp, byte [rdx]	      2120	mbyte.c	FUNCTION_47
0x4001f38	          0x83fd01	                              cmp ebp, 1	      2121	mbyte.c	FUNCTION_47	IF_1
0x4001f3b	     0xf849f000000	                            je 0x4001fe0	      2121	mbyte.c	FUNCTION_47	IF_1
0x4001f41	            0x39ee	                            cmp esi, ebp	      2121	mbyte.c	FUNCTION_47	IF_1
0x4001f43	           0xf4ff5	                          cmovg esi, ebp	      2121	mbyte.c	FUNCTION_47	IF_1
0x4001f46	          0x83fe01	                              cmp esi, 1	      2127	mbyte.c	FUNCTION_47	FOR_1
0x4001f49	     0xf8ebe000000	                           jle 0x400200d	      2127	mbyte.c	FUNCTION_47	FOR_1
0x4001f4f	         0xfb64701	               movzx eax, byte [rdi + 1]	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001f53	          0x83e0c0	                     and eax, 0xffffffc0	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001f56	            0x3c80	                            cmp al, 0x80	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001f58	            0x756e	                           jne 0x4001fc8	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001f5a	          0x8d4efe	                      lea ecx, [rsi - 2]	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001f5d	          0x4889f8	                            mov rax, rdi	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001f60	          0x4801f9	                            add rcx, rdi	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001f63	            0xeb13	                           jmp 0x4001f78	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001f65	           0xf1f00	                         nop dword [rax]	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001f68	         0xfb65002	               movzx edx, byte [rax + 2]	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001f6c	        0x4883c001	                              add rax, 1	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001f70	          0x83e2c0	                     and edx, 0xffffffc0	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001f73	          0x80fa80	                            cmp dl, 0x80	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001f76	            0x7550	                           jne 0x4001fc8	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001f78	          0x4839c8	                            cmp rax, rcx	      2127	mbyte.c	FUNCTION_47	FOR_1
0x4001f7b	            0x75eb	                           jne 0x4001f68	      2127	mbyte.c	FUNCTION_47	FOR_1
0x4001f7d	          0x4889df	                            mov rdi, rbx	      1673	mbyte.c	FUNCTION_25	IF_1	CALL_2
0x4001f80	      0xe800000000	                          call 0x4001f85	      1673	mbyte.c	FUNCTION_25	IF_1	CALL_2
0x4001f85	          0x83fd01	                              cmp ebp, 1	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4001f88	            0x7e23	                           jle 0x4001fad	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4001f8a	          0x8d4dfe	                      lea ecx, [rbp - 2]	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4001f8d	          0x4889df	                            mov rdi, rbx	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4001f90	          0x4801d9	                            add rcx, rbx	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4001f93	            0xeb13	                           jmp 0x4001fa8	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4001f95	           0xf1f00	                         nop dword [rax]	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4001f98	         0xfb65702	               movzx edx, byte [rdi + 2]	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4001f9c	        0x4883c701	                              add rdi, 1	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4001fa0	          0x83e2c0	                     and edx, 0xffffffc0	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4001fa3	          0x80fa80	                            cmp dl, 0x80	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001fa6	            0x750e	                           jne 0x4001fb6	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001fa8	          0x4839f9	                            cmp rcx, rdi	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4001fab	            0x75eb	                           jne 0x4001f98	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4001fad	          0x83fd01	                              cmp ebp, 1	      1675	mbyte.c	FUNCTION_25	IF_1	IF_3	CALL_3
0x4001fb0	            0x7404	                            je 0x4001fb6	      1675	mbyte.c	FUNCTION_25	IF_1	IF_3	CALL_3
0x4001fb2	            0x85c0	                           test eax, eax	      1675	mbyte.c	FUNCTION_25	IF_1	IF_3	CALL_3
0x4001fb4	            0x753a	                           jne 0x4001ff0	      1675	mbyte.c	FUNCTION_25	IF_1	IF_3	CALL_3
0x4001fb6	      0xb804000000	                              mov eax, 4	      1676	mbyte.c	FUNCTION_25	IF_1	IF_3
0x4001fbb	        0x4883c408	                              add rsp, 8	      1683	mbyte.c	FUNCTION_25
0x4001fbf	              0x5b	                                 pop rbx	      1683	mbyte.c	FUNCTION_25
0x4001fc0	              0x5d	                                 pop rbp	      1683	mbyte.c	FUNCTION_25
0x4001fc1	              0xc3	                                     ret	      1683	mbyte.c	FUNCTION_25
0x4001fc2	    0x660f1f440000	                    nop word [rax + rax]	      1683	mbyte.c	FUNCTION_25
0x4001fc8	          0x83fd01	                              cmp ebp, 1	      1671	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0x4001fcb	            0x7e13	                           jle 0x4001fe0	      1671	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0x4001fcd	      0xb801000000	                              mov eax, 1	      1682	mbyte.c	FUNCTION_25
0x4001fd2	            0xebe7	                           jmp 0x4001fbb	      1682	mbyte.c	FUNCTION_25
0x4001fd4	         0xf1f4000	                         nop dword [rax]	      1682	mbyte.c	FUNCTION_25
0x4001fd8	      0xb801000000	                              mov eax, 1	      1682	mbyte.c	FUNCTION_25
0x4001fdd	              0xc3	                                     ret	      1683	mbyte.c	FUNCTION_25
0x4001fde	            0x6690	                                     nop	      1683	mbyte.c	FUNCTION_25
0x4001fe0	          0x4889df	                            mov rdi, rbx	      1673	mbyte.c	FUNCTION_25	IF_1	CALL_2
0x4001fe3	      0xe800000000	                          call 0x4001fe8	      1673	mbyte.c	FUNCTION_25	IF_1	CALL_2
0x4001fe8	            0xebc3	                           jmp 0x4001fad	      1673	mbyte.c	FUNCTION_25	IF_1	CALL_2
0x4001fea	    0x660f1f440000	                    nop word [rax + rax]	      1673	mbyte.c	FUNCTION_25	IF_1	CALL_2
0x4001ff0	          0x83f87f	                           cmp eax, 0x7f	      1678	mbyte.c	FUNCTION_25	IF_1	IF_4
0x4001ff3	            0x89c7	                            mov edi, eax	      1679	mbyte.c	FUNCTION_25	IF_1	CALL_4
0x4001ff5	            0x7e0b	                           jle 0x4002002	      1678	mbyte.c	FUNCTION_25	IF_1	IF_4
0x4001ff7	        0x4883c408	                              add rsp, 8	      1683	mbyte.c	FUNCTION_25
0x4001ffb	              0x5b	                                 pop rbx	      1683	mbyte.c	FUNCTION_25
0x4001ffc	              0x5d	                                 pop rbp	      1683	mbyte.c	FUNCTION_25
0x4001ffd	      0xe9aefdffff	                  jmp sym.utf_char2cells	      1680	mbyte.c	FUNCTION_25	IF_1	CALL_5
0x4002002	        0x4883c408	                              add rsp, 8	      1683	mbyte.c	FUNCTION_25
0x4002006	              0x5b	                                 pop rbx	      1683	mbyte.c	FUNCTION_25
0x4002007	              0x5d	                                 pop rbp	      1683	mbyte.c	FUNCTION_25
0x4002008	      0xe900000000	                           jmp 0x400200d	      1679	mbyte.c	FUNCTION_25	IF_1	CALL_4
0x400200d	      0xe800000000	                          call 0x4002012	      1673	mbyte.c	FUNCTION_25	IF_1	CALL_2
0x4002012	          0x83fd01	                              cmp ebp, 1	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4002015	            0x7e96	                           jle 0x4001fad	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4002017	         0xfb65301	               movzx edx, byte [rbx + 1]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x400201b	          0x83e2c0	                     and edx, 0xffffffc0	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x400201e	          0x80fa80	                            cmp dl, 0x80	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4002021	            0x7593	                           jne 0x4001fb6	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4002023	      0xe962ffffff	                           jmp 0x4001f8a	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
dbcs_char2len	DO,0:IF,1:CALL,0:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	5
0x4000040	            0x31c0	                            xor eax, eax	      1090	mbyte.c	FUNCTION_11
0x4000042	    0x81ffff000000	                           cmp edi, 0xff	      1090	mbyte.c	FUNCTION_11
0x4000048	           0xf9fc0	                                 setg al	      1090	mbyte.c	FUNCTION_11
0x400004b	          0x83c001	                              add eax, 1	      1090	mbyte.c	FUNCTION_11
0x400004e	              0xc3	                                     ret	      1091	mbyte.c	FUNCTION_11
utf_printable	DO,0:IF,0:CALL,2:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	27
0x4001d50	          0x4863ff	                         movsxd rdi, edi	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001d53	    0x483b3d000000	            cmp rdi, qword [0x04001d5a] 	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001d5a	      0xb801000000	                              mov eax, 1	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001d5f	            0x7c49	                            jl 0x4001daa	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001d61	      0xbe08000000	                              mov esi, 8	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001d66	            0x31c9	                            xor ecx, ecx	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001d68	            0xeb0d	                           jmp 0x4001d77	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001d6a	    0x660f1f440000	                    nop word [rax + rax]	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001d70	          0x8d4801	                      lea ecx, [rax + 1]	      1202	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4001d73	            0x39f1	                            cmp ecx, esi	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4001d75	            0x7f25	                            jg 0x4001d9c	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4001d77	          0x8d040e	                    lea eax, [rsi + rcx]	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x4001d7a	            0xd1f8	                              sar eax, 1	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x4001d7c	          0x4863d0	                         movsxd rdx, eax	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4001d7f	        0x48c1e204	                              shl rdx, 4	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4001d83	    0x483bba000000	                    cmp rdi, qword [rdx]	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4001d8a	            0x7fe4	                            jg 0x4001d70	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4001d8c	    0x483bba000000	                    cmp rdi, qword [rdx]	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4001d93	            0x7d13	                           jge 0x4001da8	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4001d95	          0x8d70ff	                      lea esi, [rax - 1]	      1204	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4001d98	            0x39f1	                            cmp ecx, esi	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4001d9a	            0x7edb	                           jle 0x4001d77	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4001d9c	      0xb801000000	                              mov eax, 1	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4001da1	              0xc3	                                     ret	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4001da2	    0x660f1f440000	                    nop word [rax + rax]	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4001da8	            0x31c0	                            xor eax, eax	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4001daa	            0xf3c3	                                     ret	      2625	mbyte.c	FUNCTION_54
utf_off2cells	DO,0:IF,0:CALL,0:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	10
0x40001e0	          0x83c701	                              add edi, 1	      1760	mbyte.c	FUNCTION_32
0x40001e3	      0xb801000000	                              mov eax, 1	      1760	mbyte.c	FUNCTION_32
0x40001e8	            0x39f7	                            cmp edi, esi	      1760	mbyte.c	FUNCTION_32
0x40001ea	            0x7312	                           jae 0x40001fe	      1760	mbyte.c	FUNCTION_32
0x40001ec	    0x488b05000000	            mov rax, qword [0x040001f3] 	      1760	mbyte.c	FUNCTION_32
0x40001f3	        0x803c3801	                 cmp byte [rax + rdi], 1	      1760	mbyte.c	FUNCTION_32
0x40001f7	            0x19c0	                            sbb eax, eax	      1760	mbyte.c	FUNCTION_32
0x40001f9	            0xf7d0	                                 not eax	      1760	mbyte.c	FUNCTION_32
0x40001fb	          0x83c002	                              add eax, 2	      1760	mbyte.c	FUNCTION_32
0x40001fe	            0xf3c3	                                     ret	      1761	mbyte.c	FUNCTION_32
latin_off2cells	DO,0:IF,0:CALL,0:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	2
0x40001d0	      0xb801000000	                              mov eax, 1	      1741	mbyte.c	FUNCTION_30
0x40001d5	              0xc3	                                     ret	      1741	mbyte.c	FUNCTION_30
utf_char2cells	DO,0:IF,8:CALL,6:FOR,0:functions,0:ELSE,1:WHILE,0:SWITCH,0	91
0x4001db0	              0x53	                                push rbx	      1418	mbyte.c	FUNCTION_20
0x4001db1	          0x4863df	                         movsxd rbx, edi	      1418	mbyte.c	FUNCTION_20
0x4001db4	    0x81fbff000000	                           cmp ebx, 0xff	      1577	mbyte.c	FUNCTION_20	IF_1
0x4001dba	            0x7f14	                            jg 0x4001dd0	      1577	mbyte.c	FUNCTION_20	IF_1
0x4001dbc	          0x83fb7f	                           cmp ebx, 0x7f	      1601	mbyte.c	FUNCTION_20	ELSE_1	IF_7	CALL_5
0x4001dbf	            0x7f77	                            jg 0x4001e38	      1601	mbyte.c	FUNCTION_20	ELSE_1	IF_7	CALL_5
0x4001dc1	      0xb801000000	                              mov eax, 1	      1607	mbyte.c	FUNCTION_20
0x4001dc6	              0x5b	                                 pop rbx	      1608	mbyte.c	FUNCTION_20
0x4001dc7	              0xc3	                                     ret	      1608	mbyte.c	FUNCTION_20
0x4001dc8	     0xf1f84000000	                   nop dword [rax + rax]	      1608	mbyte.c	FUNCTION_20
0x4001dd0	            0x89df	                            mov edi, ebx	      1591	mbyte.c	FUNCTION_20	IF_1	IF_4	CALL_2
0x4001dd2	      0xe800000000	                          call 0x4001dd7	      1591	mbyte.c	FUNCTION_20	IF_1	IF_4	CALL_2
0x4001dd7	            0x89c2	                            mov edx, eax	      1591	mbyte.c	FUNCTION_20	IF_1	IF_4	CALL_2
0x4001dd9	      0xb806000000	                              mov eax, 6	      1592	mbyte.c	FUNCTION_20	IF_1	IF_4
0x4001dde	            0x85d2	                           test edx, edx	      1591	mbyte.c	FUNCTION_20	IF_1	IF_4	CALL_2
0x4001de0	            0x74e4	                            je 0x4001dc6	      1591	mbyte.c	FUNCTION_20	IF_1	IF_4	CALL_2
0x4001de2	          0x4863fb	                         movsxd rdi, ebx	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001de5	    0x48393d000000	            cmp qword [0x04001dec], rdi 	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001dec	     0xf8fbe000000	                            jg 0x4001eb0	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001df2	      0xbe69000000	                           mov esi, 0x69	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001df7	            0x31c9	                            xor ecx, ecx	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001df9	            0xeb10	                           jmp 0x4001e0b	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001dfb	       0xf1f440000	                   nop dword [rax + rax]	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001e00	          0x8d4801	                      lea ecx, [rax + 1]	      1202	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4001e03	            0x39f1	                            cmp ecx, esi	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4001e05	     0xf8fa5000000	                            jg 0x4001eb0	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4001e0b	          0x8d0431	                    lea eax, [rcx + rsi]	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x4001e0e	            0xd1f8	                              sar eax, 1	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x4001e10	          0x4863d0	                         movsxd rdx, eax	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4001e13	        0x48c1e204	                              shl rdx, 4	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4001e17	    0x483bba000000	                    cmp rdi, qword [rdx]	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4001e1e	            0x7fe0	                            jg 0x4001e00	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4001e20	    0x483bba000000	                    cmp rdi, qword [rdx]	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4001e27	     0xf8dd3000000	                           jge 0x4001f00	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4001e2d	          0x8d70ff	                      lea esi, [rax - 1]	      1204	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4001e30	            0xebd1	                           jmp 0x4001e03	      1204	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4001e32	    0x660f1f440000	                    nop word [rax + rax]	      1204	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4001e38	            0x89df	                            mov edi, ebx	      1601	mbyte.c	FUNCTION_20	ELSE_1	IF_7	CALL_5
0x4001e3a	      0xe800000000	                          call 0x4001e3f	      1601	mbyte.c	FUNCTION_20	ELSE_1	IF_7	CALL_5
0x4001e3f	            0x89c2	                            mov edx, eax	      1601	mbyte.c	FUNCTION_20	ELSE_1	IF_7	CALL_5
0x4001e41	      0xb804000000	                              mov eax, 4	      1602	mbyte.c	FUNCTION_20	ELSE_1	IF_7
0x4001e46	            0x85d2	                           test edx, edx	      1601	mbyte.c	FUNCTION_20	ELSE_1	IF_7	CALL_5
0x4001e48	     0xf8478ffffff	                            je 0x4001dc6	      1601	mbyte.c	FUNCTION_20	ELSE_1	IF_7	CALL_5
0x4001e4e	    0x488b05000000	            mov rax, qword [0x04001e55] 	      1604	mbyte.c	FUNCTION_20	IF_8	CALL_6
0x4001e55	          0x803864	                    cmp byte [rax], 0x64	      1604	mbyte.c	FUNCTION_20	IF_8	CALL_6
0x4001e58	     0xf8563ffffff	                           jne 0x4001dc1	      1604	mbyte.c	FUNCTION_20	IF_8	CALL_6
0x4001e5e	    0x483b1d000000	            cmp rbx, qword [0x04001e65] 	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001e65	     0xf8c56ffffff	                            jl 0x4001dc1	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001e6b	      0xbeb2000000	                           mov esi, 0xb2	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001e70	            0x31c9	                            xor ecx, ecx	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001e72	            0xeb0f	                           jmp 0x4001e83	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001e74	         0xf1f4000	                         nop dword [rax]	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001e78	          0x8d4801	                      lea ecx, [rax + 1]	      1202	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4001e7b	            0x39f1	                            cmp ecx, esi	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4001e7d	     0xf8f3effffff	                            jg 0x4001dc1	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4001e83	          0x8d040e	                    lea eax, [rsi + rcx]	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x4001e86	            0xd1f8	                              sar eax, 1	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x4001e88	          0x4863d0	                         movsxd rdx, eax	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4001e8b	        0x48c1e204	                              shl rdx, 4	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4001e8f	    0x483b9a000000	                    cmp rbx, qword [rdx]	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4001e96	            0x7fe0	                            jg 0x4001e78	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4001e98	    0x483b9a000000	                    cmp rbx, qword [rdx]	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4001e9f	            0x7d5f	                           jge 0x4001f00	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4001ea1	          0x8d70ff	                      lea esi, [rax - 1]	      1204	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4001ea4	            0xebd5	                           jmp 0x4001e7b	      1204	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4001ea6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1204	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4001eb0	    0x48833d000000	               cmp qword [0x04001eb8], 0	      1596	mbyte.c	FUNCTION_20	IF_1	IF_6	CALL_4
0x4001eb8	            0x7494	                            je 0x4001e4e	      1596	mbyte.c	FUNCTION_20	IF_1	IF_6	CALL_4
0x4001eba	    0x483b3d000000	            cmp rdi, qword [0x04001ec1] 	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001ec1	            0x7c8b	                            jl 0x4001e4e	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001ec3	      0xbe26000000	                           mov esi, 0x26	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001ec8	            0x31c9	                            xor ecx, ecx	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001eca	            0xeb0f	                           jmp 0x4001edb	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001ecc	         0xf1f4000	                         nop dword [rax]	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001ed0	          0x8d4801	                      lea ecx, [rax + 1]	      1202	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4001ed3	            0x39f1	                            cmp ecx, esi	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4001ed5	     0xf8f73ffffff	                            jg 0x4001e4e	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4001edb	          0x8d040e	                    lea eax, [rsi + rcx]	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x4001ede	            0xd1f8	                              sar eax, 1	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x4001ee0	          0x4863d0	                         movsxd rdx, eax	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4001ee3	        0x48c1e204	                              shl rdx, 4	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4001ee7	    0x483bba000000	                    cmp rdi, qword [rdx]	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4001eee	            0x7fe0	                            jg 0x4001ed0	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4001ef0	    0x483bba000000	                    cmp rdi, qword [rdx]	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4001ef7	            0x7d07	                           jge 0x4001f00	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4001ef9	          0x8d70ff	                      lea esi, [rax - 1]	      1204	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4001efc	            0xebd5	                           jmp 0x4001ed3	      1204	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4001efe	            0x6690	                                     nop	      1204	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4001f00	      0xb802000000	                              mov eax, 2	      1594	mbyte.c	FUNCTION_20	IF_1	IF_5
0x4001f05	              0x5b	                                 pop rbx	      1608	mbyte.c	FUNCTION_20
0x4001f06	              0xc3	                                     ret	      1608	mbyte.c	FUNCTION_20
convert_input_safe	DO,0:IF,4:CALL,5:FOR,0:functions,0:ELSE,1:WHILE,0:SWITCH,0	70
0x4004c20	            0x4157	                                push r15	      6674	mbyte.c	FUNCTION_143
0x4004c22	            0x4156	                                push r14	      6674	mbyte.c	FUNCTION_143
0x4004c24	          0x4189f6	                           mov r14d, esi	      6674	mbyte.c	FUNCTION_143
0x4004c27	            0x4155	                                push r13	      6674	mbyte.c	FUNCTION_143
0x4004c29	            0x4154	                                push r12	      6674	mbyte.c	FUNCTION_143
0x4004c2b	          0x4189d4	                           mov r12d, edx	      6674	mbyte.c	FUNCTION_143
0x4004c2e	              0x55	                                push rbp	      6674	mbyte.c	FUNCTION_143
0x4004c2f	              0x53	                                push rbx	      6674	mbyte.c	FUNCTION_143
0x4004c30	          0x4889cd	                            mov rbp, rcx	      6674	mbyte.c	FUNCTION_143
0x4004c33	          0x4889fb	                            mov rbx, rdi	      6674	mbyte.c	FUNCTION_143
0x4004c36	          0x4d89c5	                             mov r13, r8	      6674	mbyte.c	FUNCTION_143
0x4004c39	        0x4883ec18	                           sub rsp, 0x18	      6674	mbyte.c	FUNCTION_143
0x4004c3d	    0x64488b042528	                mov rax, qword fs:[0x28]	      6674	mbyte.c	FUNCTION_143
0x4004c46	      0x4889442408	                mov qword [rsp + 8], rax	      6674	mbyte.c	FUNCTION_143
0x4004c4b	            0x31c0	                            xor eax, eax	      6674	mbyte.c	FUNCTION_143
0x4004c4d	      0x488d442404	                      lea rax, [rsp + 4]	      6679	mbyte.c	FUNCTION_143	CALL_1
0x4004c52	          0x4885c9	                           test rcx, rcx	      6679	mbyte.c	FUNCTION_143	CALL_1
0x4004c55	      0xb900000000	                              mov ecx, 0	      6679	mbyte.c	FUNCTION_143	CALL_1
0x4004c5a	          0x893424	                    mov dword [rsp], esi	      6676	mbyte.c	FUNCTION_143
0x4004c5d	          0x4889e2	                            mov rdx, rsp	      6679	mbyte.c	FUNCTION_143	CALL_1
0x4004c60	          0x4889fe	                            mov rsi, rdi	      6679	mbyte.c	FUNCTION_143	CALL_1
0x4004c63	        0x480f45c8	                         cmovne rcx, rax	      6679	mbyte.c	FUNCTION_143	CALL_1
0x4004c67	      0xbf00000000	                              mov edi, 0	      6679	mbyte.c	FUNCTION_143	CALL_1
0x4004c6c	    0xc74424040000	                  mov dword [rsp + 4], 0	      6677	mbyte.c	FUNCTION_143
0x4004c74	      0xe800000000	                          call 0x4004c79	      6679	mbyte.c	FUNCTION_143	CALL_1
0x4004c79	          0x4885c0	                           test rax, rax	      6681	mbyte.c	FUNCTION_143	IF_1
0x4004c7c	            0x7458	                            je 0x4004cd6	      6681	mbyte.c	FUNCTION_143	IF_1
0x4004c7e	        0x48631424	                 movsxd rdx, dword [rsp]	      6683	mbyte.c	FUNCTION_143	IF_1	IF_2
0x4004c82	          0x4989c7	                            mov r15, rax	      6683	mbyte.c	FUNCTION_143	IF_1	IF_2
0x4004c85	          0x4439e2	                           cmp edx, r12d	      6683	mbyte.c	FUNCTION_143	IF_1	IF_2
0x4004c88	            0x7f76	                            jg 0x4004d00	      6683	mbyte.c	FUNCTION_143	IF_1	IF_2
0x4004c8a	        0x8b7c2404	                mov edi, dword [rsp + 4]	      6685	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3
0x4004c8e	            0x85ff	                           test edi, edi	      6685	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3
0x4004c90	            0x7e31	                           jle 0x4004cc3	      6685	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3
0x4004c92	      0xe800000000	                          call 0x4004c97	      6688	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_2
0x4004c97	          0x4885c0	                           test rax, rax	      6689	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	IF_4
0x4004c9a	        0x48894500	                    mov qword [rbp], rax	      6688	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_2
0x4004c9e	            0x7417	                            je 0x4004cb7	      6689	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	IF_4
0x4004ca0	      0x4863542404	            movsxd rdx, dword [rsp + 4] 	      6690	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_3
0x4004ca5	          0x4963f6	                        movsxd rsi, r14d	        59	string3.h	FUNCTION_147	CALL_3
0x4004ca8	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_147	CALL_3
0x4004cab	          0x4829d6	                            sub rsi, rdx	        59	string3.h	FUNCTION_147	CALL_3
0x4004cae	        0x488d3433	                    lea rsi, [rbx + rsi]	        59	string3.h	FUNCTION_147	CALL_3
0x4004cb2	      0xe800000000	                          call 0x4004cb7	        59	string3.h	FUNCTION_147	CALL_3
0x4004cb7	        0x8b442404	                mov eax, dword [rsp + 4]	      6691	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3
0x4004cbb	        0x48631424	                 movsxd rdx, dword [rsp]	      6691	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3
0x4004cbf	        0x41894500	                    mov dword [r13], eax	      6691	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3
0x4004cc3	          0x4889df	                            mov rdi, rbx	        59	string3.h	FUNCTION_147	CALL_3
0x4004cc6	          0x4c89fe	                            mov rsi, r15	        59	string3.h	FUNCTION_147	CALL_3
0x4004cc9	      0xe800000000	                          call 0x4004cce	        59	string3.h	FUNCTION_147	CALL_3
0x4004cce	          0x4c89ff	                            mov rdi, r15	      6699	mbyte.c	FUNCTION_143	IF_1	CALL_5
0x4004cd1	      0xe800000000	                          call 0x4004cd6	      6699	mbyte.c	FUNCTION_143	IF_1	CALL_5
0x4004cd6	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      6702	mbyte.c	FUNCTION_143
0x4004cdb	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      6702	mbyte.c	FUNCTION_143
0x4004ce4	          0x8b0424	                    mov eax, dword [rsp]	      6702	mbyte.c	FUNCTION_143
0x4004ce7	            0x7525	                           jne 0x4004d0e	      6702	mbyte.c	FUNCTION_143
0x4004ce9	        0x4883c418	                           add rsp, 0x18	      6702	mbyte.c	FUNCTION_143
0x4004ced	              0x5b	                                 pop rbx	      6702	mbyte.c	FUNCTION_143
0x4004cee	              0x5d	                                 pop rbp	      6702	mbyte.c	FUNCTION_143
0x4004cef	            0x415c	                                 pop r12	      6702	mbyte.c	FUNCTION_143
0x4004cf1	            0x415d	                                 pop r13	      6702	mbyte.c	FUNCTION_143
0x4004cf3	            0x415e	                                 pop r14	      6702	mbyte.c	FUNCTION_143
0x4004cf5	            0x415f	                                 pop r15	      6702	mbyte.c	FUNCTION_143
0x4004cf7	              0xc3	                                     ret	      6702	mbyte.c	FUNCTION_143
0x4004cf8	     0xf1f84000000	                   nop dword [rax + rax]	      6702	mbyte.c	FUNCTION_143
0x4004d00	          0x4c89ff	                            mov rdi, r15	      6699	mbyte.c	FUNCTION_143	IF_1	CALL_5
0x4004d03	        0x44893424	                   mov dword [rsp], r14d	      6698	mbyte.c	FUNCTION_143	IF_1	ELSE_1
0x4004d07	      0xe800000000	                          call 0x4004d0c	      6699	mbyte.c	FUNCTION_143	IF_1	CALL_5
0x4004d0c	            0xebc8	                           jmp 0x4004cd6	      6699	mbyte.c	FUNCTION_143	IF_1	CALL_5
0x4004d0e	      0xe800000000	                          call 0x4004d13	      6702	mbyte.c	FUNCTION_143
mb_copy_char	DO,0:IF,0:CALL,1:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	18
0x4002a70	            0x4154	                                push r12	      3881	mbyte.c	FUNCTION_71
0x4002a72	          0x4989f4	                            mov r12, rsi	      3881	mbyte.c	FUNCTION_71
0x4002a75	              0x55	                                push rbp	      3881	mbyte.c	FUNCTION_71
0x4002a76	          0x4889fd	                            mov rbp, rdi	      3881	mbyte.c	FUNCTION_71
0x4002a79	              0x53	                                push rbx	      3881	mbyte.c	FUNCTION_71
0x4002a7a	          0x488b3f	                    mov rdi, qword [rdi]	      3882	mbyte.c	FUNCTION_71
0x4002a7d	    0xff1500000000	                 call qword [0x04002a83]	      3882	mbyte.c	FUNCTION_71
0x4002a83	        0x488b7500	                    mov rsi, qword [rbp]	        59	string3.h	FUNCTION_147	CALL_3
0x4002a87	        0x498b3c24	                    mov rdi, qword [r12]	        59	string3.h	FUNCTION_147	CALL_3
0x4002a8b	          0x4863d8	                         movsxd rbx, eax	      3884	mbyte.c	FUNCTION_71	CALL_1
0x4002a8e	          0x4889da	                            mov rdx, rbx	        59	string3.h	FUNCTION_147	CALL_3
0x4002a91	      0xe800000000	                          call 0x4002a96	        59	string3.h	FUNCTION_147	CALL_3
0x4002a96	        0x49011c24	                    add qword [r12], rbx	      3885	mbyte.c	FUNCTION_71
0x4002a9a	        0x48015d00	                    add qword [rbp], rbx	      3886	mbyte.c	FUNCTION_71
0x4002a9e	              0x5b	                                 pop rbx	      3887	mbyte.c	FUNCTION_71
0x4002a9f	              0x5d	                                 pop rbp	      3887	mbyte.c	FUNCTION_71
0x4002aa0	            0x415c	                                 pop r12	      3887	mbyte.c	FUNCTION_71
0x4002aa2	              0xc3	                                     ret	      3887	mbyte.c	FUNCTION_71
mb_fix_col	DO,0:IF,1:CALL,3:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	66
0x4003000	              0x55	                                push rbp	      4263	mbyte.c	FUNCTION_84
0x4003001	              0x53	                                push rbx	      4263	mbyte.c	FUNCTION_84
0x4003002	            0x89f5	                            mov ebp, esi	      4263	mbyte.c	FUNCTION_84
0x4003004	        0x4883ec08	                              sub rsp, 8	      4263	mbyte.c	FUNCTION_84
0x4003008	      0xe800000000	                          call 0x400300d	      4264	mbyte.c	FUNCTION_84	CALL_1
0x400300d	            0x89ef	                            mov edi, ebp	      4265	mbyte.c	FUNCTION_84	CALL_2
0x400300f	            0x89c3	                            mov ebx, eax	      4264	mbyte.c	FUNCTION_84	CALL_1
0x4003011	      0xe800000000	                          call 0x4003016	      4265	mbyte.c	FUNCTION_84	CALL_2
0x4003016	    0x448b05000000	            mov r8d, dword [0x0400301d] 	      4266	mbyte.c	FUNCTION_84	IF_1
0x400301d	            0x89d9	                            mov ecx, ebx	      4264	mbyte.c	FUNCTION_84	CALL_1
0x400301f	          0x4585c0	                           test r8d, r8d	      4266	mbyte.c	FUNCTION_84	IF_1
0x4003022	            0x7447	                            je 0x400306b	      4266	mbyte.c	FUNCTION_84	IF_1
0x4003024	            0x85db	                           test ebx, ebx	      4266	mbyte.c	FUNCTION_84	IF_1
0x4003026	    0x488b15000000	            mov rdx, qword [0x0400302d] 	      4266	mbyte.c	FUNCTION_84	IF_1
0x400302d	     0xf8e8d000000	                           jle 0x40030c0	      4266	mbyte.c	FUNCTION_84	IF_1
0x4003033	          0x4885d2	                           test rdx, rdx	      4266	mbyte.c	FUNCTION_84	IF_1
0x4003036	     0xf8484000000	                            je 0x40030c0	      4266	mbyte.c	FUNCTION_84	IF_1
0x400303c	    0x8b3d00000000	            mov edi, dword [0x04003042] 	      4267	mbyte.c	FUNCTION_84	IF_1
0x4003042	            0x85ff	                           test edi, edi	      4267	mbyte.c	FUNCTION_84	IF_1
0x4003044	            0x7532	                           jne 0x4003078	      4267	mbyte.c	FUNCTION_84	IF_1
0x4003046	    0x8b3500000000	            mov esi, dword [0x0400304c] 	      4271	mbyte.c	FUNCTION_84	IF_1
0x400304c	            0x89d9	                            mov ecx, ebx	      4271	mbyte.c	FUNCTION_84	IF_1
0x400304e	            0x85f6	                           test esi, esi	      4271	mbyte.c	FUNCTION_84	IF_1
0x4003050	            0x7419	                            je 0x400306b	      4271	mbyte.c	FUNCTION_84	IF_1
0x4003052	    0x488b0d000000	            mov rcx, qword [0x04003059] 	      4271	mbyte.c	FUNCTION_84	IF_1
0x4003059	            0x4898	                                    cdqe	      4271	mbyte.c	FUNCTION_84	IF_1
0x400305b	            0x89de	                            mov esi, ebx	      4271	mbyte.c	FUNCTION_84	IF_1
0x400305d	           0x33481	            add esi, dword [rcx + rax*4]	      4271	mbyte.c	FUNCTION_84	IF_1
0x4003060	            0x89d9	                            mov ecx, ebx	      4271	mbyte.c	FUNCTION_84	IF_1
0x4003062	        0x803c3200	                 cmp byte [rdx + rsi], 0	      4271	mbyte.c	FUNCTION_84	IF_1
0x4003066	            0x7503	                           jne 0x400306b	      4271	mbyte.c	FUNCTION_84	IF_1
0x4003068	          0x8d4bff	                      lea ecx, [rbx - 1]	      4272	mbyte.c	FUNCTION_84	IF_1
0x400306b	        0x4883c408	                              add rsp, 8	      4274	mbyte.c	FUNCTION_84
0x400306f	            0x89c8	                            mov eax, ecx	      4274	mbyte.c	FUNCTION_84
0x4003071	              0x5b	                                 pop rbx	      4274	mbyte.c	FUNCTION_84
0x4003072	              0x5d	                                 pop rbp	      4274	mbyte.c	FUNCTION_84
0x4003073	              0xc3	                                     ret	      4274	mbyte.c	FUNCTION_84
0x4003074	         0xf1f4000	                         nop dword [rax]	      4274	mbyte.c	FUNCTION_84
0x4003078	    0x488b35000000	            mov rsi, qword [0x0400307f] 	      4268	mbyte.c	FUNCTION_84	IF_1
0x400307f	            0x4898	                                    cdqe	      4268	mbyte.c	FUNCTION_84	IF_1
0x4003081	          0x8b3c86	            mov edi, dword [rsi + rax*4]	      4268	mbyte.c	FUNCTION_84	IF_1
0x4003084	          0x8d043b	                    lea eax, [rbx + rdi]	      4268	mbyte.c	FUNCTION_84	IF_1
0x4003087	        0x803c0200	                 cmp byte [rdx + rax], 0	      4268	mbyte.c	FUNCTION_84	IF_1
0x400308b	            0x7423	                            je 0x40030b0	      4268	mbyte.c	FUNCTION_84	IF_1
0x400308d	          0x4863f3	                         movsxd rsi, ebx	      4270	mbyte.c	FUNCTION_84	IF_1
0x4003090	          0x4801fe	                            add rsi, rdi	      4270	mbyte.c	FUNCTION_84	IF_1
0x4003093	          0x4801d7	                            add rdi, rdx	      4269	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x4003096	          0x4801d6	                            add rsi, rdx	      4270	mbyte.c	FUNCTION_84	IF_1
0x4003099	          0x4839fe	                            cmp rsi, rdi	      3799	mbyte.c	FUNCTION_69	IF_1
0x400309c	            0x76cd	                           jbe 0x400306b	      3799	mbyte.c	FUNCTION_69	IF_1
0x400309e	      0xe87dddffff	   call sym.dbcs_screen_head_off.part.15	      3799	mbyte.c	FUNCTION_69	IF_1
0x40030a3	            0x85c0	                           test eax, eax	      4269	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x40030a5	            0x75c1	                           jne 0x4003068	      4269	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x40030a7	            0xebc2	                           jmp 0x400306b	      4269	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x40030a9	     0xf1f80000000	                         nop dword [rax]	      4269	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x40030b0	    0x8b0500000000	            mov eax, dword [0x040030b6] 	      4271	mbyte.c	FUNCTION_84	IF_1
0x40030b6	            0x85c0	                           test eax, eax	      4271	mbyte.c	FUNCTION_84	IF_1
0x40030b8	            0x75ae	                           jne 0x4003068	      4271	mbyte.c	FUNCTION_84	IF_1
0x40030ba	            0xebaf	                           jmp 0x400306b	      4271	mbyte.c	FUNCTION_84	IF_1
0x40030bc	         0xf1f4000	                         nop dword [rax]	      4271	mbyte.c	FUNCTION_84	IF_1
0x40030c0	            0x89d9	                            mov ecx, ebx	      4264	mbyte.c	FUNCTION_84	CALL_1
0x40030c2	        0x4883c408	                              add rsp, 8	      4274	mbyte.c	FUNCTION_84
0x40030c6	            0x89c8	                            mov eax, ecx	      4274	mbyte.c	FUNCTION_84
0x40030c8	              0x5b	                                 pop rbx	      4274	mbyte.c	FUNCTION_84
0x40030c9	              0x5d	                                 pop rbp	      4274	mbyte.c	FUNCTION_84
0x40030ca	              0xc3	                                     ret	      4274	mbyte.c	FUNCTION_84
convert_input	DO,0:IF,0:CALL,1:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	3
0x4004d20	          0x4531c0	                            xor r8d, r8d	      6658	mbyte.c	FUNCTION_142	CALL_1
0x4004d23	            0x31c9	                            xor ecx, ecx	      6658	mbyte.c	FUNCTION_142	CALL_1
0x4004d25	      0xe9f6feffff	              jmp sym.convert_input_safe	      6658	mbyte.c	FUNCTION_142	CALL_1
utf_composinglike	DO,0:IF,2:CALL,5:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	62
0x4001370	            0x4154	                                push r12	      1955	mbyte.c	FUNCTION_41
0x4001372	              0x55	                                push rbp	      1955	mbyte.c	FUNCTION_41
0x4001373	              0x53	                                push rbx	      1955	mbyte.c	FUNCTION_41
0x4001374	          0x4889fb	                            mov rbx, rdi	      1955	mbyte.c	FUNCTION_41
0x4001377	          0x4889f7	                            mov rdi, rsi	      1958	mbyte.c	FUNCTION_41	CALL_1
0x400137a	      0xe800000000	                          call 0x400137f	      1958	mbyte.c	FUNCTION_41	CALL_1
0x400137f	          0x4863f8	                         movsxd rdi, eax	      1958	mbyte.c	FUNCTION_41	CALL_1
0x4001382	    0x48393d000000	            cmp qword [0x04001389], rdi 	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001389	          0x4989fc	                            mov r12, rdi	      1958	mbyte.c	FUNCTION_41	CALL_1
0x400138c	            0x7f42	                            jg 0x40013d0	      1192	mbyte.c	FUNCTION_18	IF_1
0x400138e	            0x31c9	                            xor ecx, ecx	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001390	      0xbe06010000	                          mov esi, 0x106	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001395	            0xeb10	                           jmp 0x40013a7	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001397	    0x660f1f840000	                    nop word [rax + rax]	      1192	mbyte.c	FUNCTION_18	IF_1
0x40013a0	          0x8d4801	                      lea ecx, [rax + 1]	      1202	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x40013a3	            0x39f1	                            cmp ecx, esi	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x40013a5	            0x7f29	                            jg 0x40013d0	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x40013a7	          0x8d040e	                    lea eax, [rsi + rcx]	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x40013aa	            0xd1f8	                              sar eax, 1	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x40013ac	          0x4863d0	                         movsxd rdx, eax	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x40013af	        0x48c1e204	                              shl rdx, 4	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x40013b3	    0x483bba000000	                    cmp rdi, qword [rdx]	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x40013ba	            0x7fe4	                            jg 0x40013a0	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x40013bc	    0x483bba000000	                    cmp rdi, qword [rdx]	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x40013c3	            0x7d4b	                           jge 0x4001410	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x40013c5	          0x8d70ff	                      lea esi, [rax - 1]	      1204	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x40013c8	            0x39f1	                            cmp ecx, esi	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x40013ca	            0x7edb	                           jle 0x40013a7	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x40013cc	         0xf1f4000	                         nop dword [rax]	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x40013d0	    0x8b2d00000000	            mov ebp, dword [0x040013d6] 	      1940	mbyte.c	FUNCTION_40	IF_1
0x40013d6	            0x85ed	                           test ebp, ebp	      1940	mbyte.c	FUNCTION_40	IF_1
0x40013d8	            0x743b	                            je 0x4001415	      1940	mbyte.c	FUNCTION_40	IF_1
0x40013da	    0x8b2d00000000	            mov ebp, dword [0x040013e0] 	      1940	mbyte.c	FUNCTION_40	IF_1
0x40013e0	            0x85ed	                           test ebp, ebp	      1940	mbyte.c	FUNCTION_40	IF_1
0x40013e2	            0x753c	                           jne 0x4001420	      1940	mbyte.c	FUNCTION_40	IF_1
0x40013e4	          0x4489e7	                           mov edi, r12d	      1940	mbyte.c	FUNCTION_40	IF_1
0x40013e7	      0xe8b4f7ffff	       call sym.arabic_maycombine.part.6	      1940	mbyte.c	FUNCTION_40	IF_1
0x40013ec	            0x85c0	                           test eax, eax	      1961	mbyte.c	FUNCTION_41	IF_2	CALL_3
0x40013ee	            0x7425	                            je 0x4001415	      1961	mbyte.c	FUNCTION_41	IF_2	CALL_3
0x40013f0	          0x4889df	                            mov rdi, rbx	      1963	mbyte.c	FUNCTION_41	CALL_5
0x40013f3	      0xe800000000	                          call 0x40013f8	      1963	mbyte.c	FUNCTION_41	CALL_5
0x40013f8	      0x3d44060000	                          cmp eax, 0x644	      1928	mbyte.c	FUNCTION_39	IF_1
0x40013fd	            0x7516	                           jne 0x4001415	      1928	mbyte.c	FUNCTION_39	IF_1
0x40013ff	              0x5b	                                 pop rbx	      1964	mbyte.c	FUNCTION_41
0x4001400	          0x4489e7	                           mov edi, r12d	      1964	mbyte.c	FUNCTION_41
0x4001403	              0x5d	                                 pop rbp	      1964	mbyte.c	FUNCTION_41
0x4001404	            0x415c	                                 pop r12	      1964	mbyte.c	FUNCTION_41
0x4001406	      0xe9b5f7ffff	           jmp sym.arabic_combine.part.7	      1964	mbyte.c	FUNCTION_41
0x400140b	       0xf1f440000	                   nop dword [rax + rax]	      1964	mbyte.c	FUNCTION_41
0x4001410	      0xbd01000000	                              mov ebp, 1	      1960	mbyte.c	FUNCTION_41	IF_1
0x4001415	            0x89e8	                            mov eax, ebp	      1964	mbyte.c	FUNCTION_41
0x4001417	              0x5b	                                 pop rbx	      1964	mbyte.c	FUNCTION_41
0x4001418	              0x5d	                                 pop rbp	      1964	mbyte.c	FUNCTION_41
0x4001419	            0x415c	                                 pop r12	      1964	mbyte.c	FUNCTION_41
0x400141b	              0xc3	                                     ret	      1964	mbyte.c	FUNCTION_41
0x400141c	         0xf1f4000	                         nop dword [rax]	      1964	mbyte.c	FUNCTION_41
0x4001420	            0x31ed	                            xor ebp, ebp	      1962	mbyte.c	FUNCTION_41	IF_2
0x4001422	            0x89e8	                            mov eax, ebp	      1964	mbyte.c	FUNCTION_41
0x4001424	              0x5b	                                 pop rbx	      1964	mbyte.c	FUNCTION_41
0x4001425	              0x5d	                                 pop rbp	      1964	mbyte.c	FUNCTION_41
0x4001426	            0x415c	                                 pop r12	      1964	mbyte.c	FUNCTION_41
0x4001428	              0xc3	                                     ret	      1964	mbyte.c	FUNCTION_41
im_shutdown	DO,0:IF,2:CALL,3:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	16
0x4003b30	        0x4883ec08	                              sub rsp, 8	      5569	mbyte.c	FUNCTION_117
0x4003b34	    0x488b3d000000	            mov rdi, qword [0x04003b3b] 	      5574	mbyte.c	FUNCTION_117	IF_1
0x4003b3b	          0x4885ff	                           test rdi, rdi	      5574	mbyte.c	FUNCTION_117	IF_1
0x4003b3e	            0x741c	                            je 0x4003b5c	      5574	mbyte.c	FUNCTION_117	IF_1
0x4003b40	      0xe800000000	                          call 0x4003b45	      5576	mbyte.c	FUNCTION_117	IF_1	CALL_2
0x4003b45	    0x488b3d000000	            mov rdi, qword [0x04003b4c] 	      5577	mbyte.c	FUNCTION_117	IF_1	CALL_3
0x4003b4c	      0xe800000000	                          call 0x4003b51	      5577	mbyte.c	FUNCTION_117	IF_1	CALL_3
0x4003b51	    0x48c705000000	               mov qword [0x04003b5c], 0	      5578	mbyte.c	FUNCTION_117	IF_1
0x4003b5c	    0x48833d000000	               cmp qword [0x04003b64], 0	      5582	mbyte.c	FUNCTION_117	IF_2
0x4003b64	    0xc70500000000	               mov dword [0x04003b6e], 0	      5580	mbyte.c	FUNCTION_117
0x4003b6e	    0x48c705000000	               mov qword [0x04003b79], 0	      5581	mbyte.c	FUNCTION_117
0x4003b79	            0x750a	                           jne 0x4003b85	      5582	mbyte.c	FUNCTION_117	IF_2
0x4003b7b	    0xc70500000000	     mov dword [0x04003b85], 0x7fffffff 	      5583	mbyte.c	FUNCTION_117	IF_2
0x4003b85	    0xc70500000000	               mov dword [0x04003b8f], 0	      5584	mbyte.c	FUNCTION_117
0x4003b8f	        0x4883c408	                              add rsp, 8	      5585	mbyte.c	FUNCTION_117
0x4003b93	              0xc3	                                     ret	      5585	mbyte.c	FUNCTION_117
dbcs_class	DO,0:IF,8:CALL,0:FOR,0:functions,0:ELSE,8:WHILE,0:SWITCH,4	78
0x40010b0	    0x8b0500000000	            mov eax, dword [0x040010b6] 	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x40010b6	      0x3db5030000	                          cmp eax, 0x3b5	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x40010bb	            0x7410	                            je 0x40010cd	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x40010bd	            0x7e21	                           jle 0x40010e0	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x40010bf	      0x3dcc260000	                         cmp eax, 0x26cc	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x40010c4	            0x742a	                            je 0x40010f0	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x40010c6	      0x3ddd260000	                         cmp eax, 0x26dd	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x40010cb	            0x751a	                           jne 0x40010e7	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x40010cd	          0x8d5750	                   lea edx, [rdi + 0x50]	      1013	mbyte.c	FUNCTION_9	SWITCH_1	IF_4
0x40010d0	      0xb814000000	                           mov eax, 0x14	      1015	mbyte.c	FUNCTION_9	SWITCH_1	IF_4
0x40010d5	          0x80fa18	                            cmp dl, 0x18	      1013	mbyte.c	FUNCTION_9	SWITCH_1	IF_4
0x40010d8	            0x7766	                            ja 0x4001140	      1013	mbyte.c	FUNCTION_9	SWITCH_1	IF_4
0x40010da	            0xf3c3	                                     ret	      1071	mbyte.c	FUNCTION_9	ELSE_8
0x40010dc	         0xf1f4000	                         nop dword [rax]	      1071	mbyte.c	FUNCTION_9	ELSE_8
0x40010e0	      0x3da4030000	                          cmp eax, 0x3a4	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x40010e5	            0x7409	                            je 0x40010f0	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x40010e7	      0xb803000000	                              mov eax, 3	      1070	mbyte.c	FUNCTION_9	ELSE_8
0x40010ec	              0xc3	                                     ret	      1070	mbyte.c	FUNCTION_9	ELSE_8
0x40010ed	           0xf1f00	                         nop dword [rax]	      1070	mbyte.c	FUNCTION_9	ELSE_8
0x40010f0	          0x83e77f	                           and edi, 0x7f	       945	mbyte.c	FUNCTION_9	SWITCH_1
0x40010f3	          0x83e67f	                           and esi, 0x7f	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x40010f6	        0x400fb6c7	                          movzx eax, dil	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x40010fa	          0xc1e008	                              shl eax, 8	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x40010fd	             0x9c6	                             or esi, eax	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x40010ff	    0x81fe25210000	                         cmp esi, 0x2125	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4001105	            0x7f61	                            jg 0x4001168	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4001107	    0x81fe22210000	                         cmp esi, 0x2122	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x400110d	      0xb801000000	                              mov eax, 1	       957	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4001112	            0x7dc6	                           jge 0x40010da	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4001114	            0x31c0	                            xor eax, eax	       952	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4001116	    0x81fe21210000	                         cmp esi, 0x2121	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x400111c	            0x74bc	                            je 0x40010da	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x400111e	          0x83ef21	                           sub edi, 0x21	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4001121	      0xb811000000	                           mov eax, 0x11	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4001126	        0x4080ff07	                              cmp dil, 7	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x400112a	            0x77ae	                            ja 0x40010da	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x400112c	        0x400fb6ff	                          movzx edi, dil	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4001130	    0x8b04bd000000	                  mov eax, dword [rdi*4]	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4001137	              0xc3	                                     ret	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4001138	     0xf1f84000000	                   nop dword [rax + rax]	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4001140	          0x8d5736	                   lea edx, [rdi + 0x36]	      1025	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_5	IF_6
0x4001143	      0xb815000000	                           mov eax, 0x15	      1027	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_5	IF_6
0x4001148	          0x80fa33	                            cmp dl, 0x33	      1025	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_5	IF_6
0x400114b	            0x768d	                           jbe 0x40010da	      1025	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_5	IF_6
0x400114d	        0x400fb6ff	                          movzx edi, dil	      1028	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4001151	    0x81efa1000000	                           sub edi, 0xa1	      1028	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4001157	          0x83ff0b	                            cmp edi, 0xb	      1028	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x400115a	            0x778b	                            ja 0x40010e7	      1028	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x400115c	    0xff24fd000000	                       jmp qword [rdi*8]	      1028	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4001163	       0xf1f440000	                   nop dword [rax + rax]	      1028	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4001168	    0x81fe3c210000	                         cmp esi, 0x213c	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x400116e	      0xb80d000000	                            mov eax, 0xd	       959	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4001173	            0x75a9	                           jne 0x400111e	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4001175	            0xf3c3	                                     ret	      1071	mbyte.c	FUNCTION_9	ELSE_8
0x4001177	      0xb816000000	                           mov eax, 0x16	      1033	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x400117c	              0xc3	                                     ret	      1071	mbyte.c	FUNCTION_9	ELSE_8
0x400117d	      0xb81e000000	                           mov eax, 0x1e	      1064	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_8
0x4001182	              0xc3	                                     ret	      1064	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_8
0x4001183	      0xb81d000000	                           mov eax, 0x1d	      1061	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_8
0x4001188	              0xc3	                                     ret	      1061	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_8
0x4001189	        0x4080feaf	                           cmp sil, 0xaf	      1051	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	IF_7
0x400118d	      0xb819000000	                           mov eax, 0x19	      1052	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	IF_7
0x4001192	     0xf8642ffffff	                           jbe 0x40010da	      1051	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	IF_7
0x4001198	        0x4080fef6	                           cmp sil, 0xf6	      1057	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_8
0x400119c	            0x19c0	                            sbb eax, eax	      1057	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_8
0x400119e	          0x83e006	                              and eax, 6	      1057	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_8
0x40011a1	          0x83c016	                           add eax, 0x16	      1057	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_8
0x40011a4	              0xc3	                                     ret	      1057	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_8
0x40011a5	      0xb81b000000	                           mov eax, 0x1b	      1048	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x40011aa	              0xc3	                                     ret	      1048	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x40011ab	      0xb81a000000	                           mov eax, 0x1a	      1045	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x40011b0	              0xc3	                                     ret	      1045	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x40011b1	      0xb819000000	                           mov eax, 0x19	      1042	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x40011b6	              0xc3	                                     ret	      1042	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x40011b7	      0xb818000000	                           mov eax, 0x18	      1039	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x40011bc	              0xc3	                                     ret	      1039	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x40011bd	      0xb817000000	                           mov eax, 0x17	      1036	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x40011c2	              0xc3	                                     ret	      1036	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
utfc_ptr2char_len	DO,0:IF,4:CALL,7:FOR,1:functions,0:ELSE,0:WHILE,0:SWITCH,0	152
0x4001930	            0x4157	                                push r15	      2016	mbyte.c	FUNCTION_43
0x4001932	            0x4156	                                push r14	      2016	mbyte.c	FUNCTION_43
0x4001934	          0x4189d6	                           mov r14d, edx	      2016	mbyte.c	FUNCTION_43
0x4001937	            0x4155	                                push r13	      2016	mbyte.c	FUNCTION_43
0x4001939	            0x4154	                                push r12	      2016	mbyte.c	FUNCTION_43
0x400193b	          0x4989fc	                            mov r12, rdi	      2016	mbyte.c	FUNCTION_43
0x400193e	              0x55	                                push rbp	      2016	mbyte.c	FUNCTION_43
0x400193f	              0x53	                                push rbx	      2016	mbyte.c	FUNCTION_43
0x4001940	          0x4889f3	                            mov rbx, rsi	      2016	mbyte.c	FUNCTION_43
0x4001943	        0x4883ec18	                           sub rsp, 0x18	      2016	mbyte.c	FUNCTION_43
0x4001947	      0xe800000000	                          call 0x400194c	      2022	mbyte.c	FUNCTION_43	CALL_1
0x400194c	          0x4189c7	                           mov r15d, eax	      2022	mbyte.c	FUNCTION_43	CALL_1
0x400194f	      0x410fb60424	                   movzx eax, byte [r12]	      2120	mbyte.c	FUNCTION_47
0x4001954	     0xfbea8000000	                   movsx ebp, byte [rax]	      2120	mbyte.c	FUNCTION_47
0x400195b	          0x4889c2	                            mov rdx, rax	      2120	mbyte.c	FUNCTION_47
0x400195e	          0x83fd01	                              cmp ebp, 1	      2121	mbyte.c	FUNCTION_47	IF_1
0x4001961	     0xf847e000000	                            je 0x40019e5	      2121	mbyte.c	FUNCTION_47	IF_1
0x4001967	          0x4139ee	                           cmp r14d, ebp	      2121	mbyte.c	FUNCTION_47	IF_1
0x400196a	            0x89e9	                            mov ecx, ebp	      2121	mbyte.c	FUNCTION_47	IF_1
0x400196c	        0x410f4ece	                        cmovle ecx, r14d	      2121	mbyte.c	FUNCTION_47	IF_1
0x4001970	          0x83f901	                              cmp ecx, 1	      2127	mbyte.c	FUNCTION_47	FOR_1
0x4001973	            0x7e30	                           jle 0x40019a5	      2127	mbyte.c	FUNCTION_47	FOR_1
0x4001975	    0x410fb6442401	               movzx eax, byte [r12 + 1]	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x400197b	          0x83e0c0	                     and eax, 0xffffffc0	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x400197e	            0x3c80	                            cmp al, 0x80	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001980	            0x755e	                           jne 0x40019e0	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001982	          0x8d71fe	                      lea esi, [rcx - 2]	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001985	          0x4c89e0	                            mov rax, r12	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001988	          0x4c01e6	                            add rsi, r12	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x400198b	            0xeb13	                           jmp 0x40019a0	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x400198d	           0xf1f00	                         nop dword [rax]	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001990	         0xfb64802	               movzx ecx, byte [rax + 2]	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001994	        0x4883c001	                              add rax, 1	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001998	          0x83e1c0	                     and ecx, 0xffffffc0	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x400199b	          0x80f980	                            cmp cl, 0x80	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x400199e	            0x7540	                           jne 0x40019e0	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x40019a0	          0x4839c6	                            cmp rsi, rax	      2127	mbyte.c	FUNCTION_47	FOR_1
0x40019a3	            0x75eb	                           jne 0x4001990	      2127	mbyte.c	FUNCTION_47	FOR_1
0x40019a5	          0x83fd01	                              cmp ebp, 1	      2025	mbyte.c	FUNCTION_43	IF_1
0x40019a8	            0x7e3b	                           jle 0x40019e5	      2025	mbyte.c	FUNCTION_43	IF_1
0x40019aa	          0x4139ee	                           cmp r14d, ebp	      2026	mbyte.c	FUNCTION_43	IF_1
0x40019ad	            0x7e41	                           jle 0x40019f0	      2026	mbyte.c	FUNCTION_43	IF_1
0x40019af	          0x4863d5	                         movsxd rdx, ebp	      2027	mbyte.c	FUNCTION_43	IF_1
0x40019b2	          0x4531ed	                          xor r13d, r13d	      2027	mbyte.c	FUNCTION_43	IF_1
0x40019b5	        0x498d0c14	                    lea rcx, [r12 + rdx]	      2027	mbyte.c	FUNCTION_43	IF_1
0x40019b9	          0x803900	                       cmp byte [rcx], 0	      2027	mbyte.c	FUNCTION_43	IF_1
0x40019bc	            0x7837	                            js 0x40019f5	      2027	mbyte.c	FUNCTION_43	IF_1
0x40019be	    0x42c7042b0000	                mov dword [rbx + r13], 0	      2045	mbyte.c	FUNCTION_43	IF_4
0x40019c6	        0x4883c418	                           add rsp, 0x18	      2048	mbyte.c	FUNCTION_43
0x40019ca	          0x4489f8	                           mov eax, r15d	      2048	mbyte.c	FUNCTION_43
0x40019cd	              0x5b	                                 pop rbx	      2048	mbyte.c	FUNCTION_43
0x40019ce	              0x5d	                                 pop rbp	      2048	mbyte.c	FUNCTION_43
0x40019cf	            0x415c	                                 pop r12	      2048	mbyte.c	FUNCTION_43
0x40019d1	            0x415d	                                 pop r13	      2048	mbyte.c	FUNCTION_43
0x40019d3	            0x415e	                                 pop r14	      2048	mbyte.c	FUNCTION_43
0x40019d5	            0x415f	                                 pop r15	      2048	mbyte.c	FUNCTION_43
0x40019d7	              0xc3	                                     ret	      2048	mbyte.c	FUNCTION_43
0x40019d8	     0xf1f84000000	                   nop dword [rax + rax]	      2048	mbyte.c	FUNCTION_43
0x40019e0	      0xbd01000000	                              mov ebp, 1	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x40019e5	            0x84d2	                             test dl, dl	      2025	mbyte.c	FUNCTION_43	IF_1
0x40019e7	            0x79c1	                           jns 0x40019aa	      2025	mbyte.c	FUNCTION_43	IF_1
0x40019e9	     0xf1f80000000	                         nop dword [rax]	      2025	mbyte.c	FUNCTION_43	IF_1
0x40019f0	          0x4531ed	                          xor r13d, r13d	      2025	mbyte.c	FUNCTION_43	IF_1
0x40019f3	            0xebc9	                           jmp 0x40019be	      2025	mbyte.c	FUNCTION_43	IF_1
0x40019f5	          0x4889ce	                            mov rsi, rcx	      2028	mbyte.c	FUNCTION_43	IF_1	CALL_3
0x40019f8	          0x4c89e7	                            mov rdi, r12	      2028	mbyte.c	FUNCTION_43	IF_1	CALL_3
0x40019fb	      0x4889542408	                mov qword [rsp + 8], rdx	      2028	mbyte.c	FUNCTION_43	IF_1	CALL_3
0x4001a00	        0x48890c24	                    mov qword [rsp], rcx	      2028	mbyte.c	FUNCTION_43	IF_1	CALL_3
0x4001a04	      0xe800000000	                          call 0x4001a09	      2028	mbyte.c	FUNCTION_43	IF_1	CALL_3
0x4001a09	            0x85c0	                           test eax, eax	      2028	mbyte.c	FUNCTION_43	IF_1	CALL_3
0x4001a0b	            0x74b1	                            je 0x40019be	      2028	mbyte.c	FUNCTION_43	IF_1	CALL_3
0x4001a0d	        0x488b0c24	                    mov rcx, qword [rsp]	      2030	mbyte.c	FUNCTION_43	IF_1	CALL_4
0x4001a11	    0x41bd01000000	                             mov r13d, 1	      2033	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x4001a17	          0x4889cf	                            mov rdi, rcx	      2030	mbyte.c	FUNCTION_43	IF_1	CALL_4
0x4001a1a	      0xe800000000	                          call 0x4001a1f	      2030	mbyte.c	FUNCTION_43	IF_1	CALL_4
0x4001a1f	            0x8903	                    mov dword [rbx], eax	      2033	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x4001a21	    0x488b05000000	            mov rax, qword [0x04001a28] 	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001a28	        0x4c8d5304	                      lea r10, [rbx + 4]	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001a2c	      0x488b542408	                mov rdx, qword [rsp + 8]	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001a31	      0x4889442410	             mov qword [rsp + 0x10], rax	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001a36	          0x4c01e2	                            add rdx, r12	      2036	mbyte.c	FUNCTION_43	IF_1	FOR_1	CALL_5
0x4001a39	      0xb901000000	                              mov ecx, 1	      2122	mbyte.c	FUNCTION_47	IF_1
0x4001a3e	           0xfb602	                   movzx eax, byte [rdx]	      2120	mbyte.c	FUNCTION_47
0x4001a41	     0xfbeb0000000	                   movsx esi, byte [rax]	      2120	mbyte.c	FUNCTION_47
0x4001a48	          0x83fe01	                              cmp esi, 1	      2121	mbyte.c	FUNCTION_47	IF_1
0x4001a4b	            0x7445	                            je 0x4001a92	      2121	mbyte.c	FUNCTION_47	IF_1
0x4001a4d	          0x4489f0	                           mov eax, r14d	      2036	mbyte.c	FUNCTION_43	IF_1	FOR_1	CALL_5
0x4001a50	            0x29e8	                            sub eax, ebp	      2036	mbyte.c	FUNCTION_43	IF_1	FOR_1	CALL_5
0x4001a52	            0x39f0	                            cmp eax, esi	      2036	mbyte.c	FUNCTION_43	IF_1	FOR_1	CALL_5
0x4001a54	           0xf4fc6	                          cmovg eax, esi	      2036	mbyte.c	FUNCTION_43	IF_1	FOR_1	CALL_5
0x4001a57	          0x83f801	                              cmp eax, 1	      2127	mbyte.c	FUNCTION_47	FOR_1
0x4001a5a	            0x7e34	                           jle 0x4001a90	      2127	mbyte.c	FUNCTION_47	FOR_1
0x4001a5c	         0xfb67a01	               movzx edi, byte [rdx + 1]	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001a60	          0x83e7c0	                     and edi, 0xffffffc0	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001a63	        0x4080ff80	                           cmp dil, 0x80	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001a67	            0x7529	                           jne 0x4001a92	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001a69	          0x8d48fe	                      lea ecx, [rax - 2]	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001a6c	          0x4801d1	                            add rcx, rdx	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001a6f	            0xeb1a	                           jmp 0x4001a8b	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001a71	     0xf1f80000000	                         nop dword [rax]	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001a78	         0xfb64202	               movzx eax, byte [rdx + 2]	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001a7c	        0x4883c201	                              add rdx, 1	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001a80	          0x83e0c0	                     and eax, 0xffffffc0	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001a83	            0x3c80	                            cmp al, 0x80	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001a85	     0xf85a5000000	                           jne 0x4001b30	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001a8b	          0x4839d1	                            cmp rcx, rdx	      2127	mbyte.c	FUNCTION_47	FOR_1
0x4001a8e	            0x75e8	                           jne 0x4001a78	      2127	mbyte.c	FUNCTION_47	FOR_1
0x4001a90	            0x89f1	                            mov ecx, esi	      2127	mbyte.c	FUNCTION_47	FOR_1
0x4001a92	             0x1cd	                            add ebp, ecx	      2036	mbyte.c	FUNCTION_43	IF_1	FOR_1	CALL_5
0x4001a94	          0x4139ee	                           cmp r14d, ebp	      2037	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x4001a97	     0xf8e83000000	                           jle 0x4001b20	      2037	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x4001a9d	          0x4863d5	                         movsxd rdx, ebp	      2038	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x4001aa0	        0x498d3c14	                    lea rdi, [r12 + rdx]	      2038	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x4001aa4	          0x803f00	                       cmp byte [rdi], 0	      2038	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x4001aa7	            0x7977	                           jns 0x4001b20	      2038	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x4001aa9	      0x4889542408	                mov qword [rsp + 8], rdx	      2038	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x4001aae	        0x4c891424	                    mov qword [rsp], r10	      2038	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x4001ab2	      0xe800000000	                          call 0x4001ab7	      2039	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3	CALL_7
0x4001ab7	          0x4c63d8	                         movsxd r11, eax	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001aba	      0x4c3b5c2410	            cmp r11, qword [rsp + 0x10] 	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001abf	        0x4c8b1424	                    mov r10, qword [rsp]	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001ac3	      0x488b542408	                mov rdx, qword [rsp + 8]	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001ac8	            0x7c56	                            jl 0x4001b20	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001aca	    0x41b806010000	                          mov r8d, 0x106	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001ad0	            0x31ff	                            xor edi, edi	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001ad2	            0xeb0c	                           jmp 0x4001ae0	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001ad4	         0xf1f4000	                         nop dword [rax]	      1192	mbyte.c	FUNCTION_18	IF_1
0x4001ad8	          0x8d7901	                      lea edi, [rcx + 1]	      1202	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4001adb	          0x4439c7	                            cmp edi, r8d	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4001ade	            0x7f40	                            jg 0x4001b20	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4001ae0	        0x428d0c07	                     lea ecx, [rdi + r8]	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x4001ae4	            0xd1f9	                              sar ecx, 1	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x4001ae6	          0x4863f1	                         movsxd rsi, ecx	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4001ae9	        0x48c1e604	                              shl rsi, 4	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4001aed	    0x4c3b9e000000	                    cmp r11, qword [rsi]	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4001af4	            0x7fe2	                            jg 0x4001ad8	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4001af6	    0x4c3b9e000000	                    cmp r11, qword [rsi]	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4001afd	            0x7d06	                           jge 0x4001b05	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4001aff	        0x448d41ff	                      lea r8d, [rcx - 1]	      1204	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4001b03	            0xebd6	                           jmp 0x4001adb	      1204	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4001b05	        0x4183c501	                             add r13d, 1	      2033	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x4001b09	          0x418902	                    mov dword [r10], eax	      2033	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x4001b0c	        0x4983c204	                              add r10, 4	      2033	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x4001b10	        0x4183fd06	                             cmp r13d, 6	      2034	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_2
0x4001b14	     0xf851cffffff	                           jne 0x4001a36	      2034	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_2
0x4001b1a	      0xe9a7feffff	                           jmp 0x40019c6	      2034	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_2
0x4001b1f	              0x90	                                     nop	      2034	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_2
0x4001b20	          0x4d63cd	                         movsxd r9, r13d	      2034	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_2
0x4001b23	    0x4e8d2c8d0000	                         lea r13, [r9*4]	      2034	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_2
0x4001b2b	      0xe98efeffff	                           jmp 0x40019be	      2034	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_2
0x4001b30	      0xb901000000	                              mov ecx, 1	      2122	mbyte.c	FUNCTION_47	IF_1
0x4001b35	      0xe958ffffff	                           jmp 0x4001a92	      2122	mbyte.c	FUNCTION_47	IF_1
im_xim_isvalid_imactivate	DO,0:IF,1:CALL,1:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	90
0x4003ba0	              0x55	                                push rbp	      5644	mbyte.c	FUNCTION_119
0x4003ba1	              0x53	                                push rbx	      5644	mbyte.c	FUNCTION_119
0x4003ba2	        0x4883ec08	                              sub rsp, 8	      5644	mbyte.c	FUNCTION_119
0x4003ba6	    0x488b1d000000	            mov rbx, qword [0x04003bad] 	      5645	mbyte.c	FUNCTION_119	IF_1
0x4003bad	          0x803b00	                       cmp byte [rbx], 0	      5645	mbyte.c	FUNCTION_119	IF_1
0x4003bb0	            0x7526	                           jne 0x4003bd8	      5645	mbyte.c	FUNCTION_119	IF_1
0x4003bb2	    0xc70500000000	       mov dword [0x04003bbc], 0xffffff 	      5647	mbyte.c	FUNCTION_119	IF_1
0x4003bbc	    0xc70500000000	               mov dword [0x04003bc6], 0	      5648	mbyte.c	FUNCTION_119	IF_1
0x4003bc6	      0xb801000000	                              mov eax, 1	      5649	mbyte.c	FUNCTION_119	IF_1
0x4003bcb	        0x4883c408	                              add rsp, 8	      5655	mbyte.c	FUNCTION_119
0x4003bcf	              0x5b	                                 pop rbx	      5655	mbyte.c	FUNCTION_119
0x4003bd0	              0x5d	                                 pop rbp	      5655	mbyte.c	FUNCTION_119
0x4003bd1	              0xc3	                                     ret	      5655	mbyte.c	FUNCTION_119
0x4003bd2	    0x660f1f440000	                    nop word [rax + rax]	      5655	mbyte.c	FUNCTION_119
0x4003bd8	      0xbe2d000000	                           mov esi, 0x2d	      5600	mbyte.c	FUNCTION_118	CALL_1
0x4003bdd	          0x4889df	                            mov rdi, rbx	      5600	mbyte.c	FUNCTION_118	CALL_1
0x4003be0	      0xe800000000	                          call 0x4003be5	      5600	mbyte.c	FUNCTION_118	CALL_1
0x4003be5	          0x4885c0	                           test rax, rax	      5601	mbyte.c	FUNCTION_118
0x4003be8	     0xf841a010000	                            je 0x4003d08	      5601	mbyte.c	FUNCTION_118
0x4003bee	        0x4883c001	                              add rax, 1	      5601	mbyte.c	FUNCTION_118
0x4003bf2	            0x31ed	                            xor ebp, ebp	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003bf4	          0x4839c3	                            cmp rbx, rax	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003bf7	            0x7337	                           jae 0x4003c30	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003bf9	     0xf1f80000000	                         nop dword [rax]	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003c00	        0x4883c301	                              add rbx, 1	      5605	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4003c04	         0xfb64bff	               movzx ecx, byte [rbx - 1]	      5605	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4003c08	          0x8d51d3	                   lea edx, [rcx - 0x2d]	      5605	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4003c0b	          0x80fa46	                            cmp dl, 0x46	      5605	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4003c0e	     0xf87e4000000	                            ja 0x4003cf8	      5605	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4003c14	           0xfb6d2	                           movzx edx, dl	      5605	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4003c17	    0xff24d5000000	                       jmp qword [rdx*8]	      5605	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4003c1e	            0x6690	                                     nop	      5605	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4003c20	          0x83cd20	                            or ebp, 0x20	      5613	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4003c23	          0x4839d8	                            cmp rax, rbx	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003c26	            0x75d8	                           jne 0x4003c00	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003c28	     0xf1f84000000	                   nop dword [rax + rax]	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003c30	          0x4889df	                            mov rdi, rbx	      5620	mbyte.c	FUNCTION_118	CALL_2
0x4003c33	      0xe800000000	                          call 0x4003c38	      5620	mbyte.c	FUNCTION_118	CALL_2
0x4003c38	            0x85c0	                           test eax, eax	      5622	mbyte.c	FUNCTION_118	IF_1
0x4003c3a	     0xf84b8000000	                            je 0x4003cf8	      5622	mbyte.c	FUNCTION_118	IF_1
0x4003c40	      0x3dffffff00	                       cmp eax, 0xffffff	      5622	mbyte.c	FUNCTION_118	IF_1
0x4003c45	     0xf84ad000000	                            je 0x4003cf8	      5622	mbyte.c	FUNCTION_118	IF_1
0x4003c4b	    0x890500000000	            mov dword [0x04003c51], eax 	      5626	mbyte.c	FUNCTION_118	IF_2
0x4003c51	    0x892d00000000	            mov dword [0x04003c57], ebp 	      5628	mbyte.c	FUNCTION_118	IF_3
0x4003c57	      0xb801000000	                              mov eax, 1	      5630	mbyte.c	FUNCTION_118
0x4003c5c	      0xe96affffff	                           jmp 0x4003bcb	      5630	mbyte.c	FUNCTION_118
0x4003c61	     0xf1f80000000	                         nop dword [rax]	      5630	mbyte.c	FUNCTION_118
0x4003c68	          0x83cd01	                               or ebp, 1	      5608	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4003c6b	          0x4839d8	                            cmp rax, rbx	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003c6e	            0x7590	                           jne 0x4003c00	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003c70	            0xebbe	                           jmp 0x4003c30	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003c72	    0x660f1f440000	                    nop word [rax + rax]	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003c78	          0x83cd02	                               or ebp, 2	      5609	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4003c7b	          0x4839d8	                            cmp rax, rbx	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003c7e	            0x7580	                           jne 0x4003c00	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003c80	            0xebae	                           jmp 0x4003c30	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003c82	    0x660f1f440000	                    nop word [rax + rax]	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003c88	          0x83cd04	                               or ebp, 4	      5610	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4003c8b	          0x4839d8	                            cmp rax, rbx	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003c8e	     0xf856cffffff	                           jne 0x4003c00	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003c94	            0xeb9a	                           jmp 0x4003c30	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003c96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003ca0	        0x4080cd80	                            or bpl, 0x80	      5615	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4003ca4	          0x4839d8	                            cmp rax, rbx	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003ca7	     0xf8553ffffff	                           jne 0x4003c00	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003cad	            0xeb81	                           jmp 0x4003c30	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003caf	              0x90	                                     nop	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003cb0	          0x83cd40	                            or ebp, 0x40	      5614	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4003cb3	          0x4839d8	                            cmp rax, rbx	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003cb6	     0xf8544ffffff	                           jne 0x4003c00	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003cbc	      0xe96fffffff	                           jmp 0x4003c30	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003cc1	     0xf1f80000000	                         nop dword [rax]	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003cc8	          0x83cd10	                            or ebp, 0x10	      5612	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4003ccb	          0x4839d8	                            cmp rax, rbx	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003cce	     0xf852cffffff	                           jne 0x4003c00	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003cd4	      0xe957ffffff	                           jmp 0x4003c30	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003cd9	     0xf1f80000000	                         nop dword [rax]	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003ce0	          0x83cd08	                               or ebp, 8	      5611	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4003ce3	          0x4839d8	                            cmp rax, rbx	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003ce6	     0xf8514ffffff	                           jne 0x4003c00	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003cec	      0xe93fffffff	                           jmp 0x4003c30	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003cf1	     0xf1f80000000	                         nop dword [rax]	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4003cf8	        0x4883c408	                              add rsp, 8	      5655	mbyte.c	FUNCTION_119
0x4003cfc	            0x31c0	                            xor eax, eax	      5623	mbyte.c	FUNCTION_118	IF_1
0x4003cfe	              0x5b	                                 pop rbx	      5655	mbyte.c	FUNCTION_119
0x4003cff	              0x5d	                                 pop rbp	      5655	mbyte.c	FUNCTION_119
0x4003d00	              0xc3	                                     ret	      5655	mbyte.c	FUNCTION_119
0x4003d01	     0xf1f80000000	                         nop dword [rax]	      5655	mbyte.c	FUNCTION_119
0x4003d08	            0x31ed	                            xor ebp, ebp	      5598	mbyte.c	FUNCTION_118
0x4003d0a	      0xe921ffffff	                           jmp 0x4003c30	      5598	mbyte.c	FUNCTION_118
im_preedit_window_set_position	DO,0:IF,3:CALL,10:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	70
0x4000520	            0x4154	                                push r12	      4929	mbyte.c	FUNCTION_103
0x4000522	              0x55	                                push rbp	      4929	mbyte.c	FUNCTION_103
0x4000523	              0x53	                                push rbx	      4929	mbyte.c	FUNCTION_103
0x4000524	        0x4883ec20	                           sub rsp, 0x20	      4929	mbyte.c	FUNCTION_103
0x4000528	    0x488b3d000000	            mov rdi, qword [0x0400052f] 	      4932	mbyte.c	FUNCTION_103	IF_1
0x400052f	    0x64488b042528	                mov rax, qword fs:[0x28]	      4929	mbyte.c	FUNCTION_103
0x4000538	      0x4889442418	             mov qword [rsp + 0x18], rax	      4929	mbyte.c	FUNCTION_103
0x400053d	            0x31c0	                            xor eax, eax	      4929	mbyte.c	FUNCTION_103
0x400053f	          0x4885ff	                           test rdi, rdi	      4932	mbyte.c	FUNCTION_103	IF_1
0x4000542	     0xf84cb000000	                            je 0x4000613	      4932	mbyte.c	FUNCTION_103	IF_1
0x4000548	      0x488d542414	                   lea rdx, [rsp + 0x14]	      4935	mbyte.c	FUNCTION_103	CALL_1
0x400054d	      0x488d742410	                   lea rsi, [rsp + 0x10]	      4935	mbyte.c	FUNCTION_103	CALL_1
0x4000552	      0xe800000000	                          call 0x4000557	      4935	mbyte.c	FUNCTION_103	CALL_1
0x4000557	    0x488b05000000	            mov rax, qword [0x0400055e] 	      4939	mbyte.c	FUNCTION_103	CALL_4
0x400055e	      0x488d542404	                      lea rdx, [rsp + 4]	      4939	mbyte.c	FUNCTION_103	CALL_4
0x4000563	          0x4889e6	                            mov rsi, rsp	      4939	mbyte.c	FUNCTION_103	CALL_4
0x4000566	        0x488b7850	            mov rdi, qword [rax + 0x50] 	      4939	mbyte.c	FUNCTION_103	CALL_4
0x400056a	      0xe800000000	                          call 0x400056f	      4939	mbyte.c	FUNCTION_103	CALL_4
0x400056f	      0xe800000000	                          call 0x4000574	      4941	mbyte.c	FUNCTION_103	CALL_6
0x4000574	    0x488b3d000000	            mov rdi, qword [0x0400057b] 	      4941	mbyte.c	FUNCTION_103	CALL_6
0x400057b	          0x4889c6	                            mov rsi, rax	      4941	mbyte.c	FUNCTION_103	CALL_6
0x400057e	          0x4989c4	                            mov r12, rax	      4941	mbyte.c	FUNCTION_103	CALL_6
0x4000581	      0xe800000000	                          call 0x4000586	      4941	mbyte.c	FUNCTION_103	CALL_6
0x4000586	      0x488d54240c	                    lea rdx, [rsp + 0xc]	      4941	mbyte.c	FUNCTION_103	CALL_6
0x400058b	      0x488d742408	                      lea rsi, [rsp + 8]	      4941	mbyte.c	FUNCTION_103	CALL_6
0x4000590	          0x4889c7	                            mov rdi, rax	      4941	mbyte.c	FUNCTION_103	CALL_6
0x4000593	      0xe800000000	                          call 0x4000598	      4941	mbyte.c	FUNCTION_103	CALL_6
0x4000598	    0x8b1d00000000	            mov ebx, dword [0x0400059e] 	      4942	mbyte.c	FUNCTION_103	CALL_7
0x400059e	    0x8b2d00000000	            mov ebp, dword [0x040005a4] 	      4943	mbyte.c	FUNCTION_103	CALL_8
0x40005a4	     0xfaf1d000000	            imul ebx, dword [0x040005ab]	      4942	mbyte.c	FUNCTION_103	CALL_7
0x40005ab	     0xfaf2d000000	            imul ebp, dword [0x040005b2]	      4943	mbyte.c	FUNCTION_103	CALL_8
0x40005b2	    0x8b0500000000	            mov eax, dword [0x040005b8] 	      4942	mbyte.c	FUNCTION_103	CALL_7
0x40005b8	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      4944	mbyte.c	FUNCTION_103	IF_2
0x40005bc	             0x1c3	                            add ebx, eax	      4942	mbyte.c	FUNCTION_103	CALL_7
0x40005be	           0x31c24	                    add ebx, dword [rsp]	      4942	mbyte.c	FUNCTION_103	CALL_7
0x40005c1	             0x1c5	                            add ebp, eax	      4943	mbyte.c	FUNCTION_103	CALL_8
0x40005c3	        0x8b442408	                mov eax, dword [rsp + 8]	      4944	mbyte.c	FUNCTION_103	IF_2
0x40005c7	         0x36c2404	                add ebp, dword [rsp + 4]	      4943	mbyte.c	FUNCTION_103	CALL_8
0x40005cb	          0x8d0c03	                    lea ecx, [rbx + rax]	      4944	mbyte.c	FUNCTION_103	IF_2
0x40005ce	          0x891c24	                    mov dword [rsp], ebx	      4942	mbyte.c	FUNCTION_103	CALL_7
0x40005d1	        0x896c2404	                mov dword [rsp + 4], ebp	      4943	mbyte.c	FUNCTION_103	CALL_8
0x40005d5	            0x39d1	                            cmp ecx, edx	      4944	mbyte.c	FUNCTION_103	IF_2
0x40005d7	            0x7e07	                           jle 0x40005e0	      4944	mbyte.c	FUNCTION_103	IF_2
0x40005d9	            0x89d3	                            mov ebx, edx	      4945	mbyte.c	FUNCTION_103	IF_2
0x40005db	            0x29c3	                            sub ebx, eax	      4945	mbyte.c	FUNCTION_103	IF_2
0x40005dd	          0x891c24	                    mov dword [rsp], ebx	      4945	mbyte.c	FUNCTION_103	IF_2
0x40005e0	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      4946	mbyte.c	FUNCTION_103	IF_3
0x40005e4	        0x8b542414	            mov edx, dword [rsp + 0x14] 	      4946	mbyte.c	FUNCTION_103	IF_3
0x40005e8	        0x8d4c0500	                    lea ecx, [rbp + rax]	      4946	mbyte.c	FUNCTION_103	IF_3
0x40005ec	            0x39d1	                            cmp ecx, edx	      4946	mbyte.c	FUNCTION_103	IF_3
0x40005ee	            0x7e08	                           jle 0x40005f8	      4946	mbyte.c	FUNCTION_103	IF_3
0x40005f0	            0x29c2	                            sub edx, eax	      4947	mbyte.c	FUNCTION_103	IF_3
0x40005f2	            0x89d5	                            mov ebp, edx	      4947	mbyte.c	FUNCTION_103	IF_3
0x40005f4	        0x89542404	                mov dword [rsp + 4], edx	      4947	mbyte.c	FUNCTION_103	IF_3
0x40005f8	    0x488b3d000000	            mov rdi, qword [0x040005ff] 	      4948	mbyte.c	FUNCTION_103	CALL_10
0x40005ff	          0x4c89e6	                            mov rsi, r12	      4948	mbyte.c	FUNCTION_103	CALL_10
0x4000602	      0xe800000000	                          call 0x4000607	      4948	mbyte.c	FUNCTION_103	CALL_10
0x4000607	            0x89ea	                            mov edx, ebp	      4948	mbyte.c	FUNCTION_103	CALL_10
0x4000609	            0x89de	                            mov esi, ebx	      4948	mbyte.c	FUNCTION_103	CALL_10
0x400060b	          0x4889c7	                            mov rdi, rax	      4948	mbyte.c	FUNCTION_103	CALL_10
0x400060e	      0xe800000000	                          call 0x4000613	      4948	mbyte.c	FUNCTION_103	CALL_10
0x4000613	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4949	mbyte.c	FUNCTION_103
0x4000618	    0x644833042528	                xor rax, qword fs:[0x28]	      4949	mbyte.c	FUNCTION_103
0x4000621	            0x7509	                           jne 0x400062c	      4949	mbyte.c	FUNCTION_103
0x4000623	        0x4883c420	                           add rsp, 0x20	      4949	mbyte.c	FUNCTION_103
0x4000627	              0x5b	                                 pop rbx	      4949	mbyte.c	FUNCTION_103
0x4000628	              0x5d	                                 pop rbp	      4949	mbyte.c	FUNCTION_103
0x4000629	            0x415c	                                 pop r12	      4949	mbyte.c	FUNCTION_103
0x400062b	              0xc3	                                     ret	      4949	mbyte.c	FUNCTION_103
0x400062c	      0xe800000000	                          call 0x4000631	      4949	mbyte.c	FUNCTION_103
dbcs_ptr2cells_len	DO,0:IF,1:CALL,1:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	12
0x4000150	          0x83fe01	                              cmp esi, 1	      1690	mbyte.c	FUNCTION_26	IF_1
0x4000153	            0x7e1f	                           jle 0x4000174	      1690	mbyte.c	FUNCTION_26	IF_1
0x4000155	    0x813d00000000	         cmp dword [0x0400015f], 0x26cc 	      1690	mbyte.c	FUNCTION_26	IF_1
0x400015f	           0xfb607	                   movzx eax, byte [rdi]	      1690	mbyte.c	FUNCTION_26	IF_1
0x4000162	            0x740c	                            je 0x4000170	      1690	mbyte.c	FUNCTION_26	IF_1
0x4000164	     0xfbe80000000	                   movsx eax, byte [rax]	      1692	mbyte.c	FUNCTION_26	CALL_1
0x400016b	              0xc3	                                     ret	      1692	mbyte.c	FUNCTION_26	CALL_1
0x400016c	         0xf1f4000	                         nop dword [rax]	      1692	mbyte.c	FUNCTION_26	CALL_1
0x4000170	            0x3c8e	                            cmp al, 0x8e	      1690	mbyte.c	FUNCTION_26	IF_1
0x4000172	            0x75f0	                           jne 0x4000164	      1690	mbyte.c	FUNCTION_26	IF_1
0x4000174	      0xb801000000	                              mov eax, 1	      1691	mbyte.c	FUNCTION_26	IF_1
0x4000179	              0xc3	                                     ret	      1693	mbyte.c	FUNCTION_26
latin_ptr2len_len	DO,0:IF,1:CALL,0:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	9
0x40000a0	            0x85f6	                           test esi, esi	      1156	mbyte.c	FUNCTION_16	IF_1
0x40000a2	            0x7e0c	                           jle 0x40000b0	      1156	mbyte.c	FUNCTION_16	IF_1
0x40000a4	            0x31c0	                            xor eax, eax	      1157	mbyte.c	FUNCTION_16	IF_1
0x40000a6	          0x803f00	                       cmp byte [rdi], 0	      1157	mbyte.c	FUNCTION_16	IF_1
0x40000a9	           0xf95c0	                                setne al	      1157	mbyte.c	FUNCTION_16	IF_1
0x40000ac	              0xc3	                                     ret	      1157	mbyte.c	FUNCTION_16	IF_1
0x40000ad	           0xf1f00	                         nop dword [rax]	      1157	mbyte.c	FUNCTION_16	IF_1
0x40000b0	            0x31c0	                            xor eax, eax	      1157	mbyte.c	FUNCTION_16	IF_1
0x40000b2	              0xc3	                                     ret	      1159	mbyte.c	FUNCTION_16
dbcs_screen_tail_off	DO,0:IF,1:CALL,2:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	24
0x4002ca0	           0xfb606	                   movzx eax, byte [rsi]	      4076	mbyte.c	FUNCTION_76	IF_1
0x4002ca3	            0x31c9	                            xor ecx, ecx	      4079	mbyte.c	FUNCTION_76	IF_1
0x4002ca5	            0x84c0	                             test al, al	      4076	mbyte.c	FUNCTION_76	IF_1
0x4002ca7	            0x7429	                            je 0x4002cd2	      4076	mbyte.c	FUNCTION_76	IF_1
0x4002ca9	        0x807e0100	                   cmp byte [rsi + 1], 0	      4076	mbyte.c	FUNCTION_76	IF_1
0x4002cad	            0x7423	                            je 0x4002cd2	      4076	mbyte.c	FUNCTION_76	IF_1
0x4002caf	    0x813d00000000	         cmp dword [0x04002cb9], 0x26cc 	      4077	mbyte.c	FUNCTION_76	IF_1
0x4002cb9	            0x7504	                           jne 0x4002cbf	      4077	mbyte.c	FUNCTION_76	IF_1
0x4002cbb	            0x3c8e	                            cmp al, 0x8e	      4077	mbyte.c	FUNCTION_76	IF_1
0x4002cbd	            0x7413	                            je 0x4002cd2	      4077	mbyte.c	FUNCTION_76	IF_1
0x4002cbf	    0x80b800000000	                       cmp byte [rax], 1	      4078	mbyte.c	FUNCTION_76	IF_1	CALL_1
0x4002cc6	            0x7420	                            je 0x4002ce8	      4078	mbyte.c	FUNCTION_76	IF_1	CALL_1
0x4002cc8	          0x4839fe	                            cmp rsi, rdi	      3799	mbyte.c	FUNCTION_69	IF_1
0x4002ccb	      0xb901000000	                              mov ecx, 1	      3799	mbyte.c	FUNCTION_69	IF_1
0x4002cd0	            0x7706	                            ja 0x4002cd8	      3799	mbyte.c	FUNCTION_69	IF_1
0x4002cd2	            0x89c8	                            mov eax, ecx	      4083	mbyte.c	FUNCTION_76
0x4002cd4	              0xc3	                                     ret	      4083	mbyte.c	FUNCTION_76
0x4002cd5	           0xf1f00	                         nop dword [rax]	      4083	mbyte.c	FUNCTION_76
0x4002cd8	      0xe843e1ffff	   call sym.dbcs_screen_head_off.part.15	      4083	mbyte.c	FUNCTION_76
0x4002cdd	            0x29c1	                            sub ecx, eax	      4083	mbyte.c	FUNCTION_76
0x4002cdf	            0xebf1	                           jmp 0x4002cd2	      4083	mbyte.c	FUNCTION_76
0x4002ce1	     0xf1f80000000	                         nop dword [rax]	      4083	mbyte.c	FUNCTION_76
0x4002ce8	            0x31c9	                            xor ecx, ecx	      4079	mbyte.c	FUNCTION_76	IF_1
0x4002cea	            0xebe6	                           jmp 0x4002cd2	      4079	mbyte.c	FUNCTION_76	IF_1
string_convert_ext	DO,0:IF,29:CALL,30:FOR,3:functions,0:ELSE,10:WHILE,0:SWITCH,3	461
0x40044b0	            0x4157	                                push r15	      6731	mbyte.c	FUNCTION_145
0x40044b2	            0x4156	                                push r14	      6731	mbyte.c	FUNCTION_145
0x40044b4	            0x4155	                                push r13	      6731	mbyte.c	FUNCTION_145
0x40044b6	            0x4154	                                push r12	      6731	mbyte.c	FUNCTION_145
0x40044b8	          0x4989f5	                            mov r13, rsi	      6731	mbyte.c	FUNCTION_145
0x40044bb	              0x55	                                push rbp	      6731	mbyte.c	FUNCTION_145
0x40044bc	              0x53	                                push rbx	      6731	mbyte.c	FUNCTION_145
0x40044bd	          0x4889fb	                            mov rbx, rdi	      6731	mbyte.c	FUNCTION_145
0x40044c0	        0x4883ec58	                           sub rsp, 0x58	      6731	mbyte.c	FUNCTION_145
0x40044c4	    0x64488b342528	                mov rsi, qword fs:[0x28]	      6731	mbyte.c	FUNCTION_145
0x40044cd	      0x4889742448	             mov qword [rsp + 0x48], rsi	      6731	mbyte.c	FUNCTION_145
0x40044d2	            0x31f6	                            xor esi, esi	      6731	mbyte.c	FUNCTION_145
0x40044d4	          0x4885d2	                           test rdx, rdx	      6739	mbyte.c	FUNCTION_145	IF_1
0x40044d7	      0x4889542408	                mov qword [rsp + 8], rdx	      6731	mbyte.c	FUNCTION_145
0x40044dc	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      6731	mbyte.c	FUNCTION_145
0x40044e1	     0xf84dd050000	                            je 0x4004ac4	      6739	mbyte.c	FUNCTION_145	IF_1
0x40044e7	      0x488b442408	                mov rax, qword [rsp + 8]	      6742	mbyte.c	FUNCTION_145	ELSE_1
0x40044ec	          0x448b20	                   mov r12d, dword [rax]	      6742	mbyte.c	FUNCTION_145	ELSE_1
0x40044ef	          0x4585e4	                         test r12d, r12d	      6743	mbyte.c	FUNCTION_145	IF_2
0x40044f2	            0x7412	                            je 0x4004506	      6743	mbyte.c	FUNCTION_145	IF_2
0x40044f4	          0x833b05	                      cmp dword [rbx], 5	      6746	mbyte.c	FUNCTION_145	SWITCH_1
0x40044f7	     0xf873c030000	                            ja 0x4004839	      6746	mbyte.c	FUNCTION_145	SWITCH_1
0x40044fd	            0x8b03	                    mov eax, dword [rbx]	      6746	mbyte.c	FUNCTION_145	SWITCH_1
0x40044ff	    0xff24c5000000	                       jmp qword [rax*8]	      6746	mbyte.c	FUNCTION_145	SWITCH_1
0x4004506	      0xbf00000000	                              mov edi, 0	      6744	mbyte.c	FUNCTION_145	CALL_2
0x400450b	      0xe800000000	                          call 0x4004510	      6744	mbyte.c	FUNCTION_145	CALL_2
0x4004510	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      6961	mbyte.c	FUNCTION_145
0x4004515	    0x644833342528	                xor rsi, qword fs:[0x28]	      6961	mbyte.c	FUNCTION_145
0x400451e	     0xf85ef060000	                           jne 0x4004c13	      6961	mbyte.c	FUNCTION_145
0x4004524	        0x4883c458	                           add rsp, 0x58	      6961	mbyte.c	FUNCTION_145
0x4004528	              0x5b	                                 pop rbx	      6961	mbyte.c	FUNCTION_145
0x4004529	              0x5d	                                 pop rbp	      6961	mbyte.c	FUNCTION_145
0x400452a	            0x415c	                                 pop r12	      6961	mbyte.c	FUNCTION_145
0x400452c	            0x415d	                                 pop r13	      6961	mbyte.c	FUNCTION_145
0x400452e	            0x415e	                                 pop r14	      6961	mbyte.c	FUNCTION_145
0x4004530	            0x415f	                                 pop r15	      6961	mbyte.c	FUNCTION_145
0x4004532	              0xc3	                                     ret	      6961	mbyte.c	FUNCTION_145
0x4004533	          0x4d63cc	                         movsxd r9, r12d	      4600	mbyte.c	FUNCTION_92
0x4004536	      0x4c896c2428	             mov qword [rsp + 0x28], r13	      4599	mbyte.c	FUNCTION_92
0x400453b	          0x4531f6	                          xor r14d, r14d	      4595	mbyte.c	FUNCTION_92
0x400453e	      0x4c894c2430	              mov qword [rsp + 0x30], r9	      4600	mbyte.c	FUNCTION_92
0x4004543	          0x4531ed	                          xor r13d, r13d	      4594	mbyte.c	FUNCTION_92
0x4004546	          0x4531ff	                          xor r15d, r15d	      4593	mbyte.c	FUNCTION_92
0x4004549	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	      4621	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x400454e	            0xeb3c	                           jmp 0x400458c	      4621	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x4004550	          0x4885ed	                           test rbp, rbp	      4631	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4004553	     0xf845f050000	                            je 0x4004ab8	      4631	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4004559	      0xe800000000	                          call 0x400455e	      4632	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x400455e	            0x8b00	                    mov eax, dword [rax]	      4632	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4004560	          0x83f816	                           cmp eax, 0x16	      4632	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4004563	     0xf844f060000	                            je 0x4004bb8	      4632	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4004569	          0x83f854	                           cmp eax, 0x54	      4643	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x400456c	     0xf84d6030000	                            je 0x4004948	      4643	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4004572	          0x83f816	                           cmp eax, 0x16	      4643	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4004575	     0xf84cd030000	                            je 0x4004948	      4643	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x400457b	          0x83f807	                              cmp eax, 7	      4663	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10
0x400457e	     0xf855e050000	                           jne 0x4004ae2	      4663	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10
0x4004584	      0x4c8b6c2438	            mov r13, qword [rsp + 0x38] 	      4670	mbyte.c	FUNCTION_92	FOR_1
0x4004589	          0x4d29f5	                            sub r13, r14	      4670	mbyte.c	FUNCTION_92	FOR_1
0x400458c	          0x4d85ff	                           test r15, r15	      4603	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x400458f	     0xf8473030000	                            je 0x4004908	      4603	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x4004595	      0xe800000000	                          call 0x400459a	      4603	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x400459a	          0x833807	                      cmp dword [rax], 7	      4603	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x400459d	     0xf8465030000	                            je 0x4004908	      4603	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x40045a3	        0x4b8d042e	                    lea rax, [r14 + r13]	      4617	mbyte.c	FUNCTION_92	FOR_1
0x40045a7	        0x488b7b08	                mov rdi, qword [rbx + 8]	      4621	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x40045ab	      0x4c8d442440	                    lea r8, [rsp + 0x40]	      4621	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x40045b0	      0x488d4c2438	                   lea rcx, [rsp + 0x38]	      4621	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x40045b5	      0x488d542430	                   lea rdx, [rsp + 0x30]	      4621	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x40045ba	      0x488d742428	                   lea rsi, [rsp + 0x28]	      4621	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x40045bf	      0x4889442438	             mov qword [rsp + 0x38], rax	      4617	mbyte.c	FUNCTION_92	FOR_1
0x40045c4	          0x4c89f8	                            mov rax, r15	      4618	mbyte.c	FUNCTION_92	FOR_1
0x40045c7	          0x4c29e8	                            sub rax, r13	      4618	mbyte.c	FUNCTION_92	FOR_1
0x40045ca	        0x4883e802	                              sub rax, 2	      4618	mbyte.c	FUNCTION_92	FOR_1
0x40045ce	      0x4889442440	             mov qword [rsp + 0x40], rax	      4618	mbyte.c	FUNCTION_92	FOR_1
0x40045d3	      0xe800000000	                          call 0x40045d8	      4621	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x40045d8	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      4621	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x40045dc	     0xf85ad040000	                           jne 0x4004a8f	      4621	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x40045e2	          0x8b5310	            mov edx, dword [rbx + 0x10] 	      4631	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x40045e5	            0x85d2	                           test edx, edx	      4631	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x40045e7	     0xf8463ffffff	                            je 0x4004550	      4631	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x40045ed	      0xe800000000	                          call 0x40045f2	      4631	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x40045f2	            0x8b00	                    mov eax, dword [rax]	      4631	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x40045f4	            0xeb85	                           jmp 0x400457b	      4631	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x40045f6	      0x438d7c2401	                lea edi, [r12 + r12 + 1]	      6749	mbyte.c	FUNCTION_145	SWITCH_1	CALL_3
0x40045fb	      0xe800000000	                          call 0x4004600	      6749	mbyte.c	FUNCTION_145	SWITCH_1	CALL_3
0x4004600	          0x4885c0	                           test rax, rax	      6750	mbyte.c	FUNCTION_145	SWITCH_1	IF_3
0x4004603	          0x4989c6	                            mov r14, rax	      6749	mbyte.c	FUNCTION_145	SWITCH_1	CALL_3
0x4004606	     0xf842d020000	                            je 0x4004839	      6750	mbyte.c	FUNCTION_145	SWITCH_1	IF_3
0x400460c	          0x4585e4	                         test r12d, r12d	      6753	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x400460f	     0xf8ee4050000	                           jle 0x4004bf9	      6753	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x4004615	      0x418d4424ff	                      lea eax, [r12 - 1]	      6753	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x400461a	          0x4c89f6	                            mov rsi, r14	      6753	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x400461d	      0x498d440501	                lea rax, [r13 + rax + 1]	      6753	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x4004622	            0xeb13	                           jmp 0x4004637	      6753	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x4004624	         0xf1f4000	                         nop dword [rax]	      6753	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x4004628	        0x4983c501	                              add r13, 1	      6753	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x400462c	            0x880e	                      mov byte [rsi], cl	      6757	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	IF_4
0x400462e	        0x4883c601	                              add rsi, 1	      6757	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	IF_4
0x4004632	          0x4939c5	                            cmp r13, rax	      6753	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x4004635	            0x742b	                            je 0x4004662	      6753	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x4004637	      0x410fb64d00	                   movzx ecx, byte [r13]	      6755	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x400463c	          0x83f97f	                           cmp ecx, 0x7f	      6756	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	IF_4
0x400463f	            0x89ca	                            mov edx, ecx	      6755	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x4004641	            0x7ee5	                           jle 0x4004628	      6756	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	IF_4
0x4004643	          0xc1e906	                              shr ecx, 6	      6760	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x4004646	          0x83e23f	                           and edx, 0x3f	      6761	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x4004649	        0x4983c501	                              add r13, 1	      6761	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x400464d	          0x83e940	                           sub ecx, 0x40	      6760	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x4004650	          0x83c280	             add edx, 0xffffffffffffff80	      6761	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x4004653	        0x4883c602	                              add rsi, 2	      6761	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x4004657	          0x884efe	                  mov byte [rsi - 2], cl	      6760	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x400465a	          0x8856ff	                  mov byte [rsi - 1], dl	      6761	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x400465d	          0x4939c5	                            cmp r13, rax	      6753	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x4004660	            0x75d5	                           jne 0x4004637	      6753	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x4004662	      0x488b442408	                mov rax, qword [rsp + 8]	      6765	mbyte.c	FUNCTION_145	SWITCH_1	IF_5
0x4004667	          0xc60600	                       mov byte [rsi], 0	      6764	mbyte.c	FUNCTION_145	SWITCH_1
0x400466a	          0x4885c0	                           test rax, rax	      6765	mbyte.c	FUNCTION_145	SWITCH_1	IF_5
0x400466d	     0xf843d040000	                            je 0x4004ab0	      6765	mbyte.c	FUNCTION_145	SWITCH_1	IF_5
0x4004673	          0x4c29f6	                            sub rsi, r14	      6766	mbyte.c	FUNCTION_145	SWITCH_1	IF_5
0x4004676	            0x8930	                    mov dword [rax], esi	      6766	mbyte.c	FUNCTION_145	SWITCH_1	IF_5
0x4004678	          0x4c89f0	                            mov rax, r14	      6766	mbyte.c	FUNCTION_145	SWITCH_1	IF_5
0x400467b	      0xe990feffff	                           jmp 0x4004510	      6766	mbyte.c	FUNCTION_145	SWITCH_1	IF_5
0x4004680	      0x438d7c6401	              lea edi, [r12 + r12*2 + 1]	      6770	mbyte.c	FUNCTION_145	SWITCH_1	CALL_4
0x4004685	      0xe800000000	                          call 0x400468a	      6770	mbyte.c	FUNCTION_145	SWITCH_1	CALL_4
0x400468a	          0x4885c0	                           test rax, rax	      6771	mbyte.c	FUNCTION_145	SWITCH_1	IF_6
0x400468d	          0x4989c6	                            mov r14, rax	      6770	mbyte.c	FUNCTION_145	SWITCH_1	CALL_4
0x4004690	     0xf84a3010000	                            je 0x4004839	      6771	mbyte.c	FUNCTION_145	SWITCH_1	IF_6
0x4004696	          0x4585e4	                         test r12d, r12d	      6774	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x4004699	     0xf8e62050000	                           jle 0x4004c01	      6774	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x400469f	      0x418d4424ff	                      lea eax, [r12 - 1]	      6774	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x40046a4	          0x4c89f3	                            mov rbx, r14	      6774	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x40046a7	      0x4d8d4c0501	                 lea r9, [r13 + rax + 1]	      6774	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x40046ac	          0x4d89cf	                             mov r15, r9	      6774	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x40046af	              0x90	                                     nop	      6774	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x40046b0	      0x410fb65500	                   movzx edx, byte [r13]	      6776	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x40046b5	          0x8d425c	                   lea eax, [rdx + 0x5c]	      6777	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40046b8	            0x3c1a	                            cmp al, 0x1a	      6777	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40046ba	     0xf8771010000	                            ja 0x4004831	      6777	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40046c0	           0xfb6c0	                           movzx eax, al	      6777	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40046c3	    0xff24c5000000	                       jmp qword [rax*8]	      6777	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40046ca	      0xbfac200000	                         mov edi, 0x20ac	      6779	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40046cf	              0x90	                                     nop	      6779	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40046d0	          0x4889de	                            mov rsi, rbx	      6788	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	CALL_5
0x40046d3	        0x4983c501	                              add r13, 1	      6788	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	CALL_5
0x40046d7	      0xe800000000	                          call 0x40046dc	      6788	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	CALL_5
0x40046dc	            0x4898	                                    cdqe	      6788	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	CALL_5
0x40046de	          0x4801c3	                            add rbx, rax	      6788	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	CALL_5
0x40046e1	          0x4d39fd	                            cmp r13, r15	      6774	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x40046e4	            0x75ca	                           jne 0x40046b0	      6774	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x40046e6	          0x4989d8	                             mov r8, rbx	      6774	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x40046e9	      0x488b442408	                mov rax, qword [rsp + 8]	      6791	mbyte.c	FUNCTION_145	SWITCH_1	IF_7
0x40046ee	        0x41c60000	                        mov byte [r8], 0	      6790	mbyte.c	FUNCTION_145	SWITCH_1
0x40046f2	          0x4885c0	                           test rax, rax	      6791	mbyte.c	FUNCTION_145	SWITCH_1	IF_7
0x40046f5	     0xf84b5030000	                            je 0x4004ab0	      6791	mbyte.c	FUNCTION_145	SWITCH_1	IF_7
0x40046fb	          0x4d29f0	                             sub r8, r14	      6792	mbyte.c	FUNCTION_145	SWITCH_1	IF_7
0x40046fe	          0x448900	                    mov dword [rax], r8d	      6792	mbyte.c	FUNCTION_145	SWITCH_1	IF_7
0x4004701	          0x4c89f0	                            mov rax, r14	      6792	mbyte.c	FUNCTION_145	SWITCH_1	IF_7
0x4004704	      0xe907feffff	                           jmp 0x4004510	      6792	mbyte.c	FUNCTION_145	SWITCH_1	IF_7
0x4004709	      0x418d7c2401	                      lea edi, [r12 + 1]	      6797	mbyte.c	FUNCTION_145	SWITCH_1	CALL_6
0x400470e	      0xe800000000	                          call 0x4004713	      6797	mbyte.c	FUNCTION_145	SWITCH_1	CALL_6
0x4004713	          0x4885c0	                           test rax, rax	      6798	mbyte.c	FUNCTION_145	SWITCH_1	IF_8
0x4004716	      0x4889442418	             mov qword [rsp + 0x18], rax	      6797	mbyte.c	FUNCTION_145	SWITCH_1	CALL_6
0x400471b	     0xf8418010000	                            je 0x4004839	      6798	mbyte.c	FUNCTION_145	SWITCH_1	IF_8
0x4004721	          0x4585e4	                         test r12d, r12d	      6801	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3
0x4004724	     0xf8edf040000	                           jle 0x4004c09	      6801	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3
0x400472a	          0x4889c5	                            mov rbp, rax	      6801	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3
0x400472d	          0x4531f6	                          xor r14d, r14d	      6801	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3
0x4004730	          0x4589e7	                          mov r15d, r12d	      6801	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3
0x4004733	       0xf1f440000	                   nop dword [rax + rax]	      6801	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3
0x4004738	          0x4963fe	                        movsxd rdi, r14d	      6803	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	CALL_7
0x400473b	          0x4589fa	                          mov r10d, r15d	      6803	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	CALL_7
0x400473e	          0x4c01ef	                            add rdi, r13	      6803	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	CALL_7
0x4004741	          0x4529f2	                          sub r10d, r14d	      6803	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	CALL_7
0x4004744	        0x440fb607	                   movzx r8d, byte [rdi]	      2120	mbyte.c	FUNCTION_47
0x4004748	    0x450fbea00000	                   movsx r12d, byte [r8]	      2120	mbyte.c	FUNCTION_47
0x4004750	          0x4d89c1	                              mov r9, r8	      2120	mbyte.c	FUNCTION_47
0x4004753	        0x4183fc01	                             cmp r12d, 1	      2121	mbyte.c	FUNCTION_47	IF_1
0x4004757	     0xf84e3000000	                            je 0x4004840	      2121	mbyte.c	FUNCTION_47	IF_1
0x400475d	          0x4539e2	                          cmp r10d, r12d	      2121	mbyte.c	FUNCTION_47	IF_1
0x4004760	          0x4489e2	                           mov edx, r12d	      2121	mbyte.c	FUNCTION_47	IF_1
0x4004763	        0x410f4ed2	                        cmovle edx, r10d	      2121	mbyte.c	FUNCTION_47	IF_1
0x4004767	          0x83fa01	                              cmp edx, 1	      2127	mbyte.c	FUNCTION_47	FOR_1
0x400476a	            0x7e3d	                           jle 0x40047a9	      2127	mbyte.c	FUNCTION_47	FOR_1
0x400476c	         0xfb64701	               movzx eax, byte [rdi + 1]	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4004770	          0x83e0c0	                     and eax, 0xffffffc0	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4004773	            0x3c80	                            cmp al, 0x80	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4004775	     0xf85c5000000	                           jne 0x4004840	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x400477b	          0x8d4afe	                      lea ecx, [rdx - 2]	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x400477e	          0x4889f8	                            mov rax, rdi	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4004781	          0x4801f9	                            add rcx, rdi	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4004784	            0xeb1e	                           jmp 0x40047a4	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4004786	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4004790	         0xfb65002	               movzx edx, byte [rax + 2]	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4004794	        0x4883c001	                              add rax, 1	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4004798	          0x83e2c0	                     and edx, 0xffffffc0	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x400479b	          0x80fa80	                            cmp dl, 0x80	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x400479e	     0xf859c000000	                           jne 0x4004840	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x40047a4	          0x4839c1	                            cmp rcx, rax	      2127	mbyte.c	FUNCTION_47	FOR_1
0x40047a7	            0x75e7	                           jne 0x4004790	      2127	mbyte.c	FUNCTION_47	FOR_1
0x40047a9	          0x4585e4	                         test r12d, r12d	      6804	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	IF_9
0x40047ac	     0xf85bc000000	                           jne 0x400486e	      6804	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	IF_9
0x40047b2	        0xc6450000	                       mov byte [rbp], 0	      6805	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	IF_9
0x40047b6	        0x4883c501	                              add rbp, 1	      6805	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	IF_9
0x40047ba	        0x4183c601	                             add r14d, 1	      6801	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3
0x40047be	          0x4539f7	                          cmp r15d, r14d	      6801	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3
0x40047c1	     0xf8f71ffffff	                            jg 0x4004738	      6801	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3
0x40047c7	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      6867	mbyte.c	FUNCTION_145	SWITCH_1	IF_18
0x40047cc	        0xc6450000	                       mov byte [rbp], 0	      6866	mbyte.c	FUNCTION_145	SWITCH_1
0x40047d0	          0x4885db	                           test rbx, rbx	      6867	mbyte.c	FUNCTION_145	SWITCH_1	IF_18
0x40047d3	     0xf8409040000	                            je 0x4004be2	      6867	mbyte.c	FUNCTION_145	SWITCH_1	IF_18
0x40047d9	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      6868	mbyte.c	FUNCTION_145	SWITCH_1	IF_18
0x40047de	          0x4889ee	                            mov rsi, rbp	      6868	mbyte.c	FUNCTION_145	SWITCH_1	IF_18
0x40047e1	          0x4829c6	                            sub rsi, rax	      6868	mbyte.c	FUNCTION_145	SWITCH_1	IF_18
0x40047e4	            0x8933	                    mov dword [rbx], esi	      6868	mbyte.c	FUNCTION_145	SWITCH_1	IF_18
0x40047e6	      0xe925fdffff	                           jmp 0x4004510	      6868	mbyte.c	FUNCTION_145	SWITCH_1	IF_18
0x40047eb	      0xbf7e010000	                          mov edi, 0x17e	      6783	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40047f0	      0xe9dbfeffff	                           jmp 0x40046d0	      6783	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40047f5	      0xbf7d010000	                          mov edi, 0x17d	      6782	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40047fa	      0xe9d1feffff	                           jmp 0x40046d0	      6782	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40047ff	      0xbf53010000	                          mov edi, 0x153	      6785	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x4004804	      0xe9c7feffff	                           jmp 0x40046d0	      6785	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x4004809	      0xbf52010000	                          mov edi, 0x152	      6784	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x400480e	      0xe9bdfeffff	                           jmp 0x40046d0	      6784	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x4004813	      0xbf78010000	                          mov edi, 0x178	      6786	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x4004818	      0xe9b3feffff	                           jmp 0x40046d0	      6786	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x400481d	      0xbf61010000	                          mov edi, 0x161	      6781	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x4004822	      0xe9a9feffff	                           jmp 0x40046d0	      6781	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x4004827	      0xbf60010000	                          mov edi, 0x160	      6780	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x400482c	      0xe99ffeffff	                           jmp 0x40046d0	      6780	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x4004831	           0xfb6fa	                           movzx edi, dl	      6776	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x4004834	      0xe997feffff	                           jmp 0x40046d0	      6776	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x4004839	            0x31c0	                            xor eax, eax	      6732	mbyte.c	FUNCTION_145
0x400483b	      0xe9d0fcffff	                           jmp 0x4004510	      6732	mbyte.c	FUNCTION_145
0x4004840	    0x410fbe800000	                    movsx eax, byte [r8]	      6808	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x4004848	            0x85c0	                           test eax, eax	      6810	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_11
0x400484a	     0xf8481030000	                            je 0x4004bd1	      6810	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_11
0x4004850	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      6816	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x4004856	            0x7409	                            je 0x4004861	      6816	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x4004858	          0x4139c2	                           cmp r10d, eax	      6816	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x400485b	     0xf8c8b030000	                            jl 0x4004bec	      6816	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x4004861	        0x44884d00	                     mov byte [rbp], r9b	      6822	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x4004865	        0x4883c501	                              add rbp, 1	      6822	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x4004869	      0xe94cffffff	                           jmp 0x40047ba	      6822	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x400486e	      0xe800000000	                          call 0x4004873	      6826	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	CALL_9
0x4004873	          0x833b04	                      cmp dword [rbx], 4	      6827	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13
0x4004876	     0xf843c010000	                            je 0x40049b8	      6827	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13
0x400487c	          0x4c63d0	                         movsxd r10, eax	      1192	mbyte.c	FUNCTION_18	IF_1
0x400487f	    0x4c3b15000000	            cmp r10, qword [0x04004886] 	      1192	mbyte.c	FUNCTION_18	IF_1
0x4004886	            0x7c41	                            jl 0x40048c9	      1192	mbyte.c	FUNCTION_18	IF_1
0x4004888	    0x41b906010000	                          mov r9d, 0x106	      6845	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x400488e	          0x4531c0	                            xor r8d, r8d	      6845	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004891	            0xeb0e	                           jmp 0x40048a1	      6845	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004893	       0xf1f440000	                   nop dword [rax + rax]	      6845	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004898	        0x448d4201	                      lea r8d, [rdx + 1]	      1202	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x400489c	          0x4539c8	                            cmp r8d, r9d	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x400489f	            0x7f28	                            jg 0x40048c9	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x40048a1	        0x438d1401	                      lea edx, [r9 + r8]	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x40048a5	            0xd1fa	                              sar edx, 1	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x40048a7	          0x4863ca	                         movsxd rcx, edx	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x40048aa	        0x48c1e104	                              shl rcx, 4	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x40048ae	    0x4c3991000000	                    cmp qword [rcx], r10	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x40048b5	            0x7ce1	                            jl 0x4004898	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x40048b7	    0x4c3991000000	                    cmp qword [rcx], r10	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x40048be	            0x7e3b	                           jle 0x40048fb	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x40048c0	        0x448d4aff	                      lea r9d, [rdx - 1]	      1204	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x40048c4	          0x4539c8	                            cmp r8d, r9d	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x40048c7	            0x7ed8	                           jle 0x40048a1	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x40048c9	      0x3dff000000	                           cmp eax, 0xff	      6849	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	IF_15
0x40048ce	     0xf8e69010000	                           jle 0x4004a3d	      6849	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	IF_15
0x40048d4	          0x8b4b10	            mov ecx, dword [rbx + 0x10] 	      6851	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_5	IF_16
0x40048d7	            0x85c9	                           test ecx, ecx	      6851	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_5	IF_16
0x40048d9	     0xf85f2020000	                           jne 0x4004bd1	      6851	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_5	IF_16
0x40048df	        0xc64500bf	                    mov byte [rbp], 0xbf	      6858	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6
0x40048e3	            0x89c7	                            mov edi, eax	      6859	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6	IF_17	CALL_12
0x40048e5	      0xe800000000	                          call 0x40048ea	      6859	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6	IF_17	CALL_12
0x40048ea	          0x83f801	                              cmp eax, 1	      6859	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6	IF_17	CALL_12
0x40048ed	     0xf8ee1010000	                           jle 0x4004ad4	      6859	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6	IF_17	CALL_12
0x40048f3	        0xc645013f	                mov byte [rbp + 1], 0x3f	      6860	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6	IF_17
0x40048f7	        0x4883c502	                              add rbp, 2	      6860	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6	IF_17
0x40048fb	      0x478d7426ff	               lea r14d, [r14 + r12 - 1]	      6863	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4
0x4004900	      0xe9b5feffff	                           jmp 0x40047ba	      6863	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4
0x4004905	           0xf1f00	                         nop dword [rax]	      6863	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4
0x4004908	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      4607	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x400490d	      0x4d8d7c4728	          lea r15, [r15 + rax*2 + 0x28] 	      4607	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x4004912	          0x4489ff	                           mov edi, r15d	      4608	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_1
0x4004915	      0xe800000000	                          call 0x400491a	      4608	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_1
0x400491a	          0x4885c0	                           test rax, rax	      4609	mbyte.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x400491d	          0x4989c4	                            mov r12, rax	      4608	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_1
0x4004920	            0x7409	                            je 0x400492b	      4609	mbyte.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x4004922	          0x4d85ed	                           test r13, r13	      4609	mbyte.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x4004925	     0xf8525010000	                           jne 0x4004a50	      4609	mbyte.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x400492b	          0x4c89f7	                            mov rdi, r14	      4611	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x400492e	      0xe800000000	                          call 0x4004933	      4611	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x4004933	          0x4d85e4	                           test r12, r12	      4613	mbyte.c	FUNCTION_92	FOR_1	IF_1	IF_3
0x4004936	     0xf84b3010000	                            je 0x4004aef	      4613	mbyte.c	FUNCTION_92	FOR_1	IF_1	IF_3
0x400493c	          0x4d89e6	                            mov r14, r12	      4613	mbyte.c	FUNCTION_92	FOR_1	IF_1	IF_3
0x400493f	      0xe95ffcffff	                           jmp 0x40045a3	      4613	mbyte.c	FUNCTION_92	FOR_1	IF_1	IF_3
0x4004944	         0xf1f4000	                         nop dword [rax]	      4613	mbyte.c	FUNCTION_92	FOR_1	IF_1	IF_3
0x4004948	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4649	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x400494d	        0x488d5001	                      lea rdx, [rax + 1]	      4649	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4004951	      0x4889542438	             mov qword [rsp + 0x38], rdx	      4649	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4004956	          0xc6003f	                    mov byte [rax], 0x3f	      4649	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4004959	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      4650	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x400495e	    0xff1500000000	                 call qword [0x04004964]	      4650	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x4004964	          0x83f801	                              cmp eax, 1	      4650	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x4004967	            0x7e11	                           jle 0x400497a	      4650	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x4004969	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4651	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x400496e	        0x488d5001	                      lea rdx, [rax + 1]	      4651	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x4004972	      0x4889542438	             mov qword [rsp + 0x38], rdx	      4651	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x4004977	          0xc6003f	                    mov byte [rax], 0x3f	      4651	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x400497a	    0x8b0500000000	            mov eax, dword [0x04004980] 	      4652	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_8
0x4004980	            0x85c0	                           test eax, eax	      4652	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_8
0x4004982	     0xf84e6000000	                            je 0x4004a6e	      4652	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_8
0x4004988	      0x4c8b642430	            mov r12, qword [rsp + 0x30] 	      4653	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	CALL_5
0x400498d	      0x4c8b6c2428	            mov r13, qword [rsp + 0x28] 	      4653	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	CALL_5
0x4004992	          0x4489e6	                           mov esi, r12d	      4653	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	CALL_5
0x4004995	          0x4c89ef	                            mov rdi, r13	      4653	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	CALL_5
0x4004998	      0xe800000000	                          call 0x400499d	      4653	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	CALL_5
0x400499d	            0x4898	                                    cdqe	      4660	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x400499f	          0x4901c5	                            add r13, rax	      4660	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x40049a2	          0x4929c4	                            sub r12, rax	      4661	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x40049a5	      0x4c896c2428	             mov qword [rsp + 0x28], r13	      4660	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x40049aa	      0x4c89642430	             mov qword [rsp + 0x30], r12	      4661	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x40049af	      0xe9d0fbffff	                           jmp 0x4004584	      4661	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x40049b4	         0xf1f4000	                         nop dword [rax]	      4661	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x40049b8	      0x3d52010000	                          cmp eax, 0x152	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40049bd	     0xf84c5010000	                            je 0x4004b88	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40049c3	     0xf8e2b010000	                           jle 0x4004af4	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40049c9	      0x3d78010000	                          cmp eax, 0x178	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40049ce	     0xf84a4010000	                            je 0x4004b78	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40049d4	            0x7f2e	                            jg 0x4004a04	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40049d6	      0x3d60010000	                          cmp eax, 0x160	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40049db	     0xf84c7010000	                            je 0x4004ba8	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40049e1	      0x3d61010000	                          cmp eax, 0x161	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40049e6	     0xf847c010000	                            je 0x4004b68	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40049ec	      0x3d53010000	                          cmp eax, 0x153	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40049f1	     0xf8585feffff	                           jne 0x400487c	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40049f7	    0x41babd000000	                          mov r10d, 0xbd	      6836	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40049fd	      0xb8bd000000	                           mov eax, 0xbd	      6836	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004a02	            0xeb2c	                           jmp 0x4004a30	      6836	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004a04	      0x3d7e010000	                          cmp eax, 0x17e	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004a09	     0xf8489010000	                            je 0x4004b98	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004a0f	      0x3dac200000	                         cmp eax, 0x20ac	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004a14	     0xf843e010000	                            je 0x4004b58	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004a1a	      0x3d7d010000	                          cmp eax, 0x17d	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004a1f	     0xf8557feffff	                           jne 0x400487c	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004a25	    0x41bab4000000	                          mov r10d, 0xb4	      6833	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004a2b	      0xb8b4000000	                           mov eax, 0xb4	      6833	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004a30	    0x4c3915000000	            cmp qword [0x04004a37], r10 	      1192	mbyte.c	FUNCTION_18	IF_1
0x4004a37	     0xf8e4bfeffff	                           jle 0x4004888	      1192	mbyte.c	FUNCTION_18	IF_1
0x4004a3d	          0x884500	                      mov byte [rbp], al	      6850	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	IF_15
0x4004a40	      0x478d7426ff	               lea r14d, [r14 + r12 - 1]	      6863	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4
0x4004a45	        0x4883c501	                              add rbp, 1	      6850	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	IF_15
0x4004a49	      0xe96cfdffff	                           jmp 0x40047ba	      6850	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	IF_15
0x4004a4e	            0x6690	                                     nop	      6850	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	IF_15
0x4004a50	          0x4c89f6	                            mov rsi, r14	        59	string3.h	FUNCTION_147	CALL_3
0x4004a53	          0x4c89ea	                            mov rdx, r13	        59	string3.h	FUNCTION_147	CALL_3
0x4004a56	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_147	CALL_3
0x4004a59	      0xe800000000	                          call 0x4004a5e	        59	string3.h	FUNCTION_147	CALL_3
0x4004a5e	          0x4c89f7	                            mov rdi, r14	      4611	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x4004a61	          0x4d89e6	                            mov r14, r12	      4611	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x4004a64	      0xe800000000	                          call 0x4004a69	      4611	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x4004a69	      0xe935fbffff	                           jmp 0x40045a3	      4611	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x4004a6e	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      4656	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	ELSE_2
0x4004a73	    0xff1500000000	                 call qword [0x04004a79]	      4656	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	ELSE_2
0x4004a79	      0x4c8b642430	            mov r12, qword [rsp + 0x30] 	      4657	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9
0x4004a7e	      0x4c8b6c2428	            mov r13, qword [rsp + 0x28] 	      4657	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9
0x4004a83	          0x4439e0	                           cmp eax, r12d	      4657	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9
0x4004a86	        0x410f4fc4	                         cmovg eax, r12d	      4657	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9
0x4004a8a	      0xe90effffff	                           jmp 0x400499d	      4657	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9
0x4004a8f	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4625	mbyte.c	FUNCTION_92	FOR_1	IF_4
0x4004a94	          0xc60000	                       mov byte [rax], 0	      4625	mbyte.c	FUNCTION_92	FOR_1	IF_4
0x4004a97	      0x488b742408	                mov rsi, qword [rsp + 8]	      4673	mbyte.c	FUNCTION_92	IF_11
0x4004a9c	          0x4885f6	                           test rsi, rsi	      4673	mbyte.c	FUNCTION_92	IF_11
0x4004a9f	            0x740f	                            je 0x4004ab0	      4673	mbyte.c	FUNCTION_92	IF_11
0x4004aa1	          0x4d85f6	                           test r14, r14	      4673	mbyte.c	FUNCTION_92	IF_11
0x4004aa4	            0x740a	                            je 0x4004ab0	      4673	mbyte.c	FUNCTION_92	IF_11
0x4004aa6	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4674	mbyte.c	FUNCTION_92	IF_11
0x4004aab	          0x4c29f0	                            sub rax, r14	      4674	mbyte.c	FUNCTION_92	IF_11
0x4004aae	            0x8906	                    mov dword [rsi], eax	      4674	mbyte.c	FUNCTION_92	IF_11
0x4004ab0	          0x4c89f0	                            mov rax, r14	      4674	mbyte.c	FUNCTION_92	IF_11
0x4004ab3	      0xe958faffff	                           jmp 0x4004510	      4674	mbyte.c	FUNCTION_92	IF_11
0x4004ab8	      0xe800000000	                          call 0x4004abd	      4674	mbyte.c	FUNCTION_92	IF_11
0x4004abd	            0x8b00	                    mov eax, dword [rax]	      4674	mbyte.c	FUNCTION_92	IF_11
0x4004abf	      0xe9a5faffff	                           jmp 0x4004569	      4674	mbyte.c	FUNCTION_92	IF_11
0x4004ac4	          0x4c89ef	                            mov rdi, r13	      6740	mbyte.c	FUNCTION_145	CALL_1
0x4004ac7	      0xe800000000	                          call 0x4004acc	      6740	mbyte.c	FUNCTION_145	CALL_1
0x4004acc	          0x4189c4	                           mov r12d, eax	      6740	mbyte.c	FUNCTION_145	CALL_1
0x4004acf	      0xe91bfaffff	                           jmp 0x40044ef	      6740	mbyte.c	FUNCTION_145	CALL_1
0x4004ad4	        0x4883c501	                              add rbp, 1	      6858	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6
0x4004ad8	      0x478d7426ff	               lea r14d, [r14 + r12 - 1]	      6863	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4
0x4004add	      0xe9d8fcffff	                           jmp 0x40047ba	      6863	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4
0x4004ae2	          0x4d85f6	                           test r14, r14	      4666	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10	CALL_6
0x4004ae5	            0x7408	                            je 0x4004aef	      4666	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10	CALL_6
0x4004ae7	          0x4c89f7	                            mov rdi, r14	      4666	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10	CALL_6
0x4004aea	      0xe800000000	                          call 0x4004aef	      4666	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10	CALL_6
0x4004aef	          0x4531f6	                          xor r14d, r14d	      4613	mbyte.c	FUNCTION_92	FOR_1	IF_1	IF_3
0x4004af2	            0xebbc	                           jmp 0x4004ab0	      4613	mbyte.c	FUNCTION_92	FOR_1	IF_1	IF_3
0x4004af4	      0x3db4000000	                           cmp eax, 0xb4	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004af9	            0x741b	                            je 0x4004b16	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004afb	            0x7f3a	                            jg 0x4004b37	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004afd	      0x3da6000000	                           cmp eax, 0xa6	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004b02	            0x7412	                            je 0x4004b16	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004b04	      0x3da8000000	                           cmp eax, 0xa8	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004b09	            0x740b	                            je 0x4004b16	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004b0b	      0x3da4000000	                           cmp eax, 0xa4	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004b10	     0xf8566fdffff	                           jne 0x400487c	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004b16	    0x48813d000000	          cmp qword [0x04004b21], 0x100 	      1192	mbyte.c	FUNCTION_18	IF_1
0x4004b21	      0xb800010000	                          mov eax, 0x100	      6845	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004b26	    0x41ba00010000	                         mov r10d, 0x100	      1192	mbyte.c	FUNCTION_18	IF_1
0x4004b2c	     0xf8fa2fdffff	                            jg 0x40048d4	      1192	mbyte.c	FUNCTION_18	IF_1
0x4004b32	      0xe951fdffff	                           jmp 0x4004888	      1192	mbyte.c	FUNCTION_18	IF_1
0x4004b37	      0x3db8000000	                           cmp eax, 0xb8	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004b3c	            0x74d8	                            je 0x4004b16	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004b3e	     0xf8c38fdffff	                            jl 0x400487c	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004b44	    0x8d9044ffffff	                   lea edx, [rax - 0xbc]	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004b4a	          0x83fa02	                              cmp edx, 2	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004b4d	            0x76c7	                           jbe 0x4004b16	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004b4f	      0xe928fdffff	                           jmp 0x400487c	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004b54	         0xf1f4000	                         nop dword [rax]	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004b58	    0x41baa4000000	                          mov r10d, 0xa4	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004b5e	      0xb8a4000000	                           mov eax, 0xa4	      6830	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004b63	      0xe9c8feffff	                           jmp 0x4004a30	      6830	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004b68	    0x41baa8000000	                          mov r10d, 0xa8	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004b6e	      0xb8a8000000	                           mov eax, 0xa8	      6832	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004b73	      0xe9b8feffff	                           jmp 0x4004a30	      6832	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004b78	    0x41babe000000	                          mov r10d, 0xbe	      6837	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004b7e	      0xb8be000000	                           mov eax, 0xbe	      6837	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004b83	      0xe9a8feffff	                           jmp 0x4004a30	      6837	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004b88	    0x41babc000000	                          mov r10d, 0xbc	      6835	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004b8e	      0xb8bc000000	                           mov eax, 0xbc	      6835	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004b93	      0xe998feffff	                           jmp 0x4004a30	      6835	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004b98	    0x41bab8000000	                          mov r10d, 0xb8	      6834	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004b9e	      0xb8b8000000	                           mov eax, 0xb8	      6834	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004ba3	      0xe988feffff	                           jmp 0x4004a30	      6834	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004ba8	    0x41baa6000000	                          mov r10d, 0xa6	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004bae	      0xb8a6000000	                           mov eax, 0xa6	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004bb3	      0xe978feffff	                           jmp 0x4004a30	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4004bb8	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4635	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4004bbd	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      4636	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4004bc2	          0xc60000	                       mov byte [rax], 0	      4635	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4004bc5	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      4636	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4004bca	            0x8906	                    mov dword [rsi], eax	      4636	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4004bcc	      0xe9c6feffff	                           jmp 0x4004a97	      4636	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4004bd1	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      6853	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_5	IF_16	CALL_11
0x4004bd6	      0xe800000000	                          call 0x4004bdb	      6853	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_5	IF_16	CALL_11
0x4004bdb	            0x31c0	                            xor eax, eax	      6854	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_5	IF_16
0x4004bdd	      0xe92ef9ffff	                           jmp 0x4004510	      6854	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_5	IF_16
0x4004be2	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      6854	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_5	IF_16
0x4004be7	      0xe924f9ffff	                           jmp 0x4004510	      6854	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_5	IF_16
0x4004bec	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      6819	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x4004bf1	          0x448910	                   mov dword [rax], r10d	      6819	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x4004bf4	      0xe9cefbffff	                           jmp 0x40047c7	      6820	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x4004bf9	          0x4889c6	                            mov rsi, rax	      6753	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x4004bfc	      0xe961faffff	                           jmp 0x4004662	      6753	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x4004c01	          0x4989c0	                             mov r8, rax	      6774	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x4004c04	      0xe9e0faffff	                           jmp 0x40046e9	      6774	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x4004c09	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	      6801	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3
0x4004c0e	      0xe9b4fbffff	                           jmp 0x40047c7	      6801	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3
0x4004c13	      0xe800000000	                          call 0x4004c18	      6961	mbyte.c	FUNCTION_145
mb_prevptr	DO,0:IF,1:CALL,1:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	19
0x4002dc0	          0x4839fe	                            cmp rsi, rdi	      4137	mbyte.c	FUNCTION_79	IF_1
0x4002dc3	              0x53	                                push rbx	      4136	mbyte.c	FUNCTION_79
0x4002dc4	          0x4889f3	                            mov rbx, rsi	      4136	mbyte.c	FUNCTION_79
0x4002dc7	            0x7614	                           jbe 0x4002ddd	      4137	mbyte.c	FUNCTION_79	IF_1
0x4002dc9	    0x8b1500000000	            mov edx, dword [0x04002dcf] 	      4138	mbyte.c	FUNCTION_79	CALL_1
0x4002dcf	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      4138	mbyte.c	FUNCTION_79	CALL_1
0x4002dd6	            0x85d2	                           test edx, edx	      4138	mbyte.c	FUNCTION_79	CALL_1
0x4002dd8	            0x750e	                           jne 0x4002de8	      4138	mbyte.c	FUNCTION_79	CALL_1
0x4002dda	          0x4801c3	                            add rbx, rax	      4138	mbyte.c	FUNCTION_79	CALL_1
0x4002ddd	          0x4889d8	                            mov rax, rbx	      4140	mbyte.c	FUNCTION_79
0x4002de0	              0x5b	                                 pop rbx	      4140	mbyte.c	FUNCTION_79
0x4002de1	              0xc3	                                     ret	      4140	mbyte.c	FUNCTION_79
0x4002de2	    0x660f1f440000	                    nop word [rax + rax]	      4140	mbyte.c	FUNCTION_79
0x4002de8	        0x488d3406	                    lea rsi, [rsi + rax]	      4138	mbyte.c	FUNCTION_79	CALL_1
0x4002dec	    0xff1500000000	                 call qword [0x04002df2]	      4138	mbyte.c	FUNCTION_79	CALL_1
0x4002df2	          0x83c001	                              add eax, 1	      4138	mbyte.c	FUNCTION_79	CALL_1
0x4002df5	            0x4898	                                    cdqe	      4138	mbyte.c	FUNCTION_79	CALL_1
0x4002df7	          0x48f7d8	                                 neg rax	      4138	mbyte.c	FUNCTION_79	CALL_1
0x4002dfa	            0xebde	                           jmp 0x4002dda	      4138	mbyte.c	FUNCTION_79	CALL_1
xim_init	DO,0:IF,1:CALL,5:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	66
0x40039f0	    0x488b05000000	            mov rax, qword [0x040039f7] 	      5541	mbyte.c	FUNCTION_116	CALL_2
0x40039f7	          0x4885c0	                           test rax, rax	      5541	mbyte.c	FUNCTION_116	CALL_2
0x40039fa	     0xf84f8000000	                            je 0x4003af8	      5541	mbyte.c	FUNCTION_116	CALL_2
0x4003a00	      0x4883785000	               cmp qword [rax + 0x50], 0	      5545	mbyte.c	FUNCTION_116	CALL_5
0x4003a05	     0xf8405010000	                            je 0x4003b10	      5545	mbyte.c	FUNCTION_116	CALL_5
0x4003a0b	        0x4883ec08	                              sub rsp, 8	      5536	mbyte.c	FUNCTION_116
0x4003a0f	      0xe800000000	                          call 0x4003a14	      5548	mbyte.c	FUNCTION_116	CALL_6
0x4003a14	          0x4889c7	                            mov rdi, rax	      5549	mbyte.c	FUNCTION_116	CALL_7
0x4003a17	    0x488905000000	            mov qword [0x04003a1e], rax 	      5548	mbyte.c	FUNCTION_116	CALL_6
0x4003a1e	      0xe800000000	                          call 0x4003a23	      5549	mbyte.c	FUNCTION_116	CALL_7
0x4003a23	    0x488b3d000000	            mov rdi, qword [0x04003a2a] 	      5551	mbyte.c	FUNCTION_116	CALL_9
0x4003a2a	      0xbe50000000	                           mov esi, 0x50	      5551	mbyte.c	FUNCTION_116	CALL_9
0x4003a2f	      0xe800000000	                          call 0x4003a34	      5551	mbyte.c	FUNCTION_116	CALL_9
0x4003a34	          0x4531c9	                            xor r9d, r9d	      5551	mbyte.c	FUNCTION_116	CALL_9
0x4003a37	          0x4531c0	                            xor r8d, r8d	      5551	mbyte.c	FUNCTION_116	CALL_9
0x4003a3a	            0x31c9	                            xor ecx, ecx	      5551	mbyte.c	FUNCTION_116	CALL_9
0x4003a3c	      0xba00000000	                              mov edx, 0	      5551	mbyte.c	FUNCTION_116	CALL_9
0x4003a41	      0xbe00000000	                              mov esi, 0	      5551	mbyte.c	FUNCTION_116	CALL_9
0x4003a46	          0x4889c7	                            mov rdi, rax	      5551	mbyte.c	FUNCTION_116	CALL_9
0x4003a49	      0xe800000000	                          call 0x4003a4e	      5551	mbyte.c	FUNCTION_116	CALL_9
0x4003a4e	    0x488b3d000000	            mov rdi, qword [0x04003a55] 	      5553	mbyte.c	FUNCTION_116	CALL_12
0x4003a55	      0xbe50000000	                           mov esi, 0x50	      5553	mbyte.c	FUNCTION_116	CALL_12
0x4003a5a	    0x488905000000	            mov qword [0x04003a61], rax 	      5551	mbyte.c	FUNCTION_116	CALL_9
0x4003a61	      0xe800000000	                          call 0x4003a66	      5553	mbyte.c	FUNCTION_116	CALL_12
0x4003a66	          0x4531c9	                            xor r9d, r9d	      5553	mbyte.c	FUNCTION_116	CALL_12
0x4003a69	          0x4531c0	                            xor r8d, r8d	      5553	mbyte.c	FUNCTION_116	CALL_12
0x4003a6c	            0x31c9	                            xor ecx, ecx	      5553	mbyte.c	FUNCTION_116	CALL_12
0x4003a6e	      0xba00000000	                              mov edx, 0	      5553	mbyte.c	FUNCTION_116	CALL_12
0x4003a73	      0xbe00000000	                              mov esi, 0	      5553	mbyte.c	FUNCTION_116	CALL_12
0x4003a78	          0x4889c7	                            mov rdi, rax	      5553	mbyte.c	FUNCTION_116	CALL_12
0x4003a7b	      0xe800000000	                          call 0x4003a80	      5553	mbyte.c	FUNCTION_116	CALL_12
0x4003a80	    0x488b3d000000	            mov rdi, qword [0x04003a87] 	      5555	mbyte.c	FUNCTION_116	CALL_15
0x4003a87	      0xbe50000000	                           mov esi, 0x50	      5555	mbyte.c	FUNCTION_116	CALL_15
0x4003a8c	      0xe800000000	                          call 0x4003a91	      5555	mbyte.c	FUNCTION_116	CALL_15
0x4003a91	          0x4531c9	                            xor r9d, r9d	      5555	mbyte.c	FUNCTION_116	CALL_15
0x4003a94	          0x4531c0	                            xor r8d, r8d	      5555	mbyte.c	FUNCTION_116	CALL_15
0x4003a97	            0x31c9	                            xor ecx, ecx	      5555	mbyte.c	FUNCTION_116	CALL_15
0x4003a99	      0xba00000000	                              mov edx, 0	      5555	mbyte.c	FUNCTION_116	CALL_15
0x4003a9e	      0xbe00000000	                              mov esi, 0	      5555	mbyte.c	FUNCTION_116	CALL_15
0x4003aa3	          0x4889c7	                            mov rdi, rax	      5555	mbyte.c	FUNCTION_116	CALL_15
0x4003aa6	      0xe800000000	                          call 0x4003aab	      5555	mbyte.c	FUNCTION_116	CALL_15
0x4003aab	    0x488b3d000000	            mov rdi, qword [0x04003ab2] 	      5557	mbyte.c	FUNCTION_116	CALL_18
0x4003ab2	      0xbe50000000	                           mov esi, 0x50	      5557	mbyte.c	FUNCTION_116	CALL_18
0x4003ab7	      0xe800000000	                          call 0x4003abc	      5557	mbyte.c	FUNCTION_116	CALL_18
0x4003abc	      0xbe00000000	                              mov esi, 0	      5557	mbyte.c	FUNCTION_116	CALL_18
0x4003ac1	          0x4889c7	                            mov rdi, rax	      5557	mbyte.c	FUNCTION_116	CALL_18
0x4003ac4	          0x4531c9	                            xor r9d, r9d	      5557	mbyte.c	FUNCTION_116	CALL_18
0x4003ac7	          0x4531c0	                            xor r8d, r8d	      5557	mbyte.c	FUNCTION_116	CALL_18
0x4003aca	            0x31c9	                            xor ecx, ecx	      5557	mbyte.c	FUNCTION_116	CALL_18
0x4003acc	      0xba00000000	                              mov edx, 0	      5557	mbyte.c	FUNCTION_116	CALL_18
0x4003ad1	      0xe800000000	                          call 0x4003ad6	      5557	mbyte.c	FUNCTION_116	CALL_18
0x4003ad6	    0x488b05000000	            mov rax, qword [0x04003add] 	      5563	mbyte.c	FUNCTION_116	CALL_22
0x4003add	    0x488b3d000000	            mov rdi, qword [0x04003ae4] 	      5563	mbyte.c	FUNCTION_116	CALL_22
0x4003ae4	        0x488b7050	            mov rsi, qword [rax + 0x50] 	      5563	mbyte.c	FUNCTION_116	CALL_22
0x4003ae8	        0x4883c408	                              add rsp, 8	      5565	mbyte.c	FUNCTION_116
0x4003aec	      0xe900000000	                           jmp 0x4003af1	      5563	mbyte.c	FUNCTION_116	CALL_22
0x4003af1	     0xf1f80000000	                         nop dword [rax]	      5563	mbyte.c	FUNCTION_116	CALL_22
0x4003af8	      0xba00000000	                              mov edx, 0	      5541	mbyte.c	FUNCTION_116	CALL_2
0x4003afd	      0xbe00000000	                              mov esi, 0	      5541	mbyte.c	FUNCTION_116	CALL_2
0x4003b02	            0x31ff	                            xor edi, edi	      5541	mbyte.c	FUNCTION_116	CALL_2
0x4003b04	      0xe900000000	                           jmp 0x4003b09	      5541	mbyte.c	FUNCTION_116	CALL_2
0x4003b09	     0xf1f80000000	                         nop dword [rax]	      5541	mbyte.c	FUNCTION_116	CALL_2
0x4003b10	      0xba00000000	                              mov edx, 0	      5545	mbyte.c	FUNCTION_116	CALL_5
0x4003b15	      0xbe00000000	                              mov esi, 0	      5545	mbyte.c	FUNCTION_116	CALL_5
0x4003b1a	            0x31ff	                            xor edi, edi	      5545	mbyte.c	FUNCTION_116	CALL_5
0x4003b1c	      0xe900000000	                           jmp 0x4003b21	      5545	mbyte.c	FUNCTION_116	CALL_5
utf_safe_read_char_adv	DO,0:IF,4:CALL,1:FOR,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	60
0x40003a0	            0x4157	                                push r15	      1847	mbyte.c	FUNCTION_36
0x40003a2	            0x4156	                                push r14	      1847	mbyte.c	FUNCTION_36
0x40003a4	            0x31c0	                            xor eax, eax	      1851	mbyte.c	FUNCTION_36	IF_1
0x40003a6	            0x4155	                                push r13	      1847	mbyte.c	FUNCTION_36
0x40003a8	            0x4154	                                push r12	      1847	mbyte.c	FUNCTION_36
0x40003aa	              0x55	                                push rbp	      1847	mbyte.c	FUNCTION_36
0x40003ab	              0x53	                                push rbx	      1847	mbyte.c	FUNCTION_36
0x40003ac	          0x488b1e	                    mov rbx, qword [rsi]	      1850	mbyte.c	FUNCTION_36	IF_1
0x40003af	          0x4885db	                           test rbx, rbx	      1850	mbyte.c	FUNCTION_36	IF_1
0x40003b2	            0x7442	                            je 0x40003f6	      1850	mbyte.c	FUNCTION_36	IF_1
0x40003b4	          0x4c8b2f	                    mov r13, qword [rdi]	      1853	mbyte.c	FUNCTION_36
0x40003b7	      0x410fb64500	                   movzx eax, byte [r13]	      1853	mbyte.c	FUNCTION_36
0x40003bc	    0x480fbea80000	                   movsx rbp, byte [rax]	      1853	mbyte.c	FUNCTION_36
0x40003c4	          0x4989c7	                            mov r15, rax	      1853	mbyte.c	FUNCTION_36
0x40003c7	        0x4080fd01	                              cmp bpl, 1	      1855	mbyte.c	FUNCTION_36	IF_2
0x40003cb	            0x743b	                            je 0x4000408	      1855	mbyte.c	FUNCTION_36	IF_2
0x40003cd	          0x4839eb	                            cmp rbx, rbp	      1862	mbyte.c	FUNCTION_36	IF_3
0x40003d0	            0x727e	                            jb 0x4000450	      1862	mbyte.c	FUNCTION_36	IF_3
0x40003d2	          0x4989fe	                            mov r14, rdi	      1862	mbyte.c	FUNCTION_36	IF_3
0x40003d5	          0x4c89ef	                            mov rdi, r13	      1867	mbyte.c	FUNCTION_36	IF_3	CALL_1
0x40003d8	          0x4989f4	                            mov r12, rsi	      1867	mbyte.c	FUNCTION_36	IF_3	CALL_1
0x40003db	      0xe800000000	                          call 0x40003e0	      1867	mbyte.c	FUNCTION_36	IF_3	CALL_1
0x40003e0	          0x4139c7	                           cmp r15d, eax	      1874	mbyte.c	FUNCTION_36	IF_3	IF_4
0x40003e3	            0x89c2	                            mov edx, eax	      1867	mbyte.c	FUNCTION_36	IF_3	CALL_1
0x40003e5	            0x7449	                            je 0x4000430	      1874	mbyte.c	FUNCTION_36	IF_3	IF_4
0x40003e7	          0x4901ed	                            add r13, rbp	      1877	mbyte.c	FUNCTION_36	IF_3	IF_4
0x40003ea	          0x4829eb	                            sub rbx, rbp	      1878	mbyte.c	FUNCTION_36	IF_3	IF_4
0x40003ed	            0x89d0	                            mov eax, edx	      1867	mbyte.c	FUNCTION_36	IF_3	CALL_1
0x40003ef	          0x4d892e	                    mov qword [r14], r13	      1877	mbyte.c	FUNCTION_36	IF_3	IF_4
0x40003f2	        0x49891c24	                    mov qword [r12], rbx	      1878	mbyte.c	FUNCTION_36	IF_3	IF_4
0x40003f6	              0x5b	                                 pop rbx	      1885	mbyte.c	FUNCTION_36
0x40003f7	              0x5d	                                 pop rbp	      1885	mbyte.c	FUNCTION_36
0x40003f8	            0x415c	                                 pop r12	      1885	mbyte.c	FUNCTION_36
0x40003fa	            0x415d	                                 pop r13	      1885	mbyte.c	FUNCTION_36
0x40003fc	            0x415e	                                 pop r14	      1885	mbyte.c	FUNCTION_36
0x40003fe	            0x415f	                                 pop r15	      1885	mbyte.c	FUNCTION_36
0x4000400	              0xc3	                                     ret	      1885	mbyte.c	FUNCTION_36
0x4000401	     0xf1f80000000	                         nop dword [rax]	      1885	mbyte.c	FUNCTION_36
0x4000408	        0x498d4501	                      lea rax, [r13 + 1]	      1859	mbyte.c	FUNCTION_36	IF_2
0x400040c	        0x4883eb01	                              sub rbx, 1	      1858	mbyte.c	FUNCTION_36	IF_2
0x4000410	          0x48891e	                    mov qword [rsi], rbx	      1858	mbyte.c	FUNCTION_36	IF_2
0x4000413	          0x488907	                    mov qword [rdi], rax	      1859	mbyte.c	FUNCTION_36	IF_2
0x4000416	      0x410fb64500	                   movzx eax, byte [r13]	      1859	mbyte.c	FUNCTION_36	IF_2
0x400041b	              0x5b	                                 pop rbx	      1885	mbyte.c	FUNCTION_36
0x400041c	              0x5d	                                 pop rbp	      1885	mbyte.c	FUNCTION_36
0x400041d	            0x415c	                                 pop r12	      1885	mbyte.c	FUNCTION_36
0x400041f	            0x415d	                                 pop r13	      1885	mbyte.c	FUNCTION_36
0x4000421	            0x415e	                                 pop r14	      1885	mbyte.c	FUNCTION_36
0x4000423	            0x415f	                                 pop r15	      1885	mbyte.c	FUNCTION_36
0x4000425	              0xc3	                                     ret	      1885	mbyte.c	FUNCTION_36
0x4000426	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1885	mbyte.c	FUNCTION_36
0x4000430	    0x81fac3000000	                           cmp edx, 0xc3	      1874	mbyte.c	FUNCTION_36	IF_3	IF_4
0x4000436	      0xb8ffffffff	                     mov eax, 0xffffffff	      1884	mbyte.c	FUNCTION_36
0x400043b	            0x75b9	                           jne 0x40003f6	      1874	mbyte.c	FUNCTION_36	IF_3	IF_4
0x400043d	      0x41807d0183	                cmp byte [r13 + 1], 0x83	      1874	mbyte.c	FUNCTION_36	IF_3	IF_4
0x4000442	            0x74a3	                            je 0x40003e7	      1874	mbyte.c	FUNCTION_36	IF_3	IF_4
0x4000444	            0xebb0	                           jmp 0x40003f6	      1874	mbyte.c	FUNCTION_36	IF_3	IF_4
0x4000446	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1874	mbyte.c	FUNCTION_36	IF_3	IF_4
0x4000450	      0xb8ffffffff	                     mov eax, 0xffffffff	      1884	mbyte.c	FUNCTION_36
0x4000455	            0xeb9f	                           jmp 0x40003f6	      1884	mbyte.c	FUNCTION_36
