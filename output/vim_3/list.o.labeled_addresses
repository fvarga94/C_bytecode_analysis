list_join	DO,0:ELSE,0:FOR,1:WHILE,0:SWITCH,0:IF,2:CALL,4:functions,0	165
0x4000c70	            0x4157	                                push r15	       825	list.c	FUNCTION_36
0x4000c72	            0x4156	                                push r14	       825	list.c	FUNCTION_36
0x4000c74	            0x4155	                                push r13	       825	list.c	FUNCTION_36
0x4000c76	            0x4154	                                push r12	       825	list.c	FUNCTION_36
0x4000c78	              0x55	                                push rbp	       825	list.c	FUNCTION_36
0x4000c79	              0x53	                                push rbx	       825	list.c	FUNCTION_36
0x4000c7a	      0xbb01000000	                              mov ebx, 1	       832	list.c	FUNCTION_36	IF_1
0x4000c7f	    0x4881ecb80000	                           sub rsp, 0xb8	       825	list.c	FUNCTION_36
0x4000c86	      0x4889542420	             mov qword [rsp + 0x20], rdx	       825	list.c	FUNCTION_36
0x4000c8b	          0x8b563c	            mov edx, dword [rsi + 0x3c] 	       831	list.c	FUNCTION_36	IF_1
0x4000c8e	    0x64488b042528	                mov rax, qword fs:[0x28]	       825	list.c	FUNCTION_36
0x4000c97	    0x48898424a800	             mov qword [rsp + 0xa8], rax	       825	list.c	FUNCTION_36
0x4000c9f	            0x31c0	                            xor eax, eax	       825	list.c	FUNCTION_36
0x4000ca1	      0x48897c2418	             mov qword [rsp + 0x18], rdi	       825	list.c	FUNCTION_36
0x4000ca6	        0x894c240c	              mov dword [rsp + 0xc], ecx	       825	list.c	FUNCTION_36
0x4000caa	            0x85d2	                           test edx, edx	       831	list.c	FUNCTION_36	IF_1
0x4000cac	      0x4489442410	             mov dword [rsp + 0x10], r8d	       825	list.c	FUNCTION_36
0x4000cb1	      0x44894c2414	             mov dword [rsp + 0x14], r9d	       825	list.c	FUNCTION_36
0x4000cb6	     0xf8ef6010000	                           jle 0x4000eb2	       831	list.c	FUNCTION_36	IF_1
0x4000cbc	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       833	list.c	FUNCTION_36	CALL_1
0x4000cc1	          0x4889f5	                            mov rbp, rsi	       833	list.c	FUNCTION_36	CALL_1
0x4000cc4	      0xbe10000000	                           mov esi, 0x10	       833	list.c	FUNCTION_36	CALL_1
0x4000cc9	          0x4189cf	                           mov r15d, ecx	       833	list.c	FUNCTION_36	CALL_1
0x4000ccc	      0xe800000000	                          call 0x4000cd1	       833	list.c	FUNCTION_36	CALL_1
0x4000cd1	        0x488b5d00	                    mov rbx, qword [rbp]	       833	list.c	FUNCTION_36	CALL_1
0x4000cd5	          0x4885db	                           test rbx, rbx	       761	list.c	FUNCTION_35	FOR_1
0x4000cd8	     0xf84fd000000	                            je 0x4000ddb	       761	list.c	FUNCTION_35	FOR_1
0x4000cde	    0x8b0500000000	            mov eax, dword [0x04000ce4] 	       761	list.c	FUNCTION_35	FOR_1
0x4000ce4	            0x85c0	                           test eax, eax	       761	list.c	FUNCTION_35	FOR_1
0x4000ce6	     0xf85ef000000	                           jne 0x4000ddb	       761	list.c	FUNCTION_35	FOR_1
0x4000cec	          0x4489f8	                           mov eax, r15d	       761	list.c	FUNCTION_35	FOR_1
0x4000cef	          0x4531ff	                          xor r15d, r15d	       761	list.c	FUNCTION_35	FOR_1
0x4000cf2	      0x4c8d642460	                   lea r12, [rsp + 0x60]	       761	list.c	FUNCTION_35	FOR_1
0x4000cf7	            0x85c0	                           test eax, eax	       761	list.c	FUNCTION_35	FOR_1
0x4000cf9	        0x410f94c7	                               sete r15b	       761	list.c	FUNCTION_35	FOR_1
0x4000cfd	            0x31ed	                            xor ebp, ebp	       761	list.c	FUNCTION_35	FOR_1
0x4000cff	            0xeb3b	                           jmp 0x4000d3c	       761	list.c	FUNCTION_35	FOR_1
0x4000d01	     0xf1f80000000	                         nop dword [rax]	       761	list.c	FUNCTION_35	FOR_1
0x4000d08	          0x4c8932	                    mov qword [rdx], r14	       775	list.c	FUNCTION_35	FOR_1	IF_2
0x4000d0b	        0x48894208	                mov qword [rdx + 8], rax	       776	list.c	FUNCTION_35	FOR_1	IF_2
0x4000d0f	      0xe800000000	                          call 0x4000d14	       784	list.c	FUNCTION_35	FOR_1	CALL_5
0x4000d14	    0x8b0d00000000	            mov ecx, dword [0x04000d1a] 	       785	list.c	FUNCTION_35	FOR_1	IF_3
0x4000d1a	            0x85c9	                           test ecx, ecx	       785	list.c	FUNCTION_35	FOR_1	IF_3
0x4000d1c	     0xf85be000000	                           jne 0x4000de0	       785	list.c	FUNCTION_35	FOR_1	IF_3
0x4000d22	          0x488b1b	                    mov rbx, qword [rbx]	       761	list.c	FUNCTION_35	FOR_1
0x4000d25	          0x4885db	                           test rbx, rbx	       761	list.c	FUNCTION_35	FOR_1
0x4000d28	     0xf84b2000000	                            je 0x4000de0	       761	list.c	FUNCTION_35	FOR_1
0x4000d2e	    0x8b0500000000	            mov eax, dword [0x04000d34] 	       761	list.c	FUNCTION_35	FOR_1
0x4000d34	            0x85c0	                           test eax, eax	       761	list.c	FUNCTION_35	FOR_1
0x4000d36	     0xf85a4000000	                           jne 0x4000de0	       761	list.c	FUNCTION_35	FOR_1
0x4000d3c	        0x4883ec08	                              sub rsp, 8	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4000d40	        0x488d7b10	                   lea rdi, [rbx + 0x10]	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4000d44	          0x4c89e2	                            mov rdx, r12	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4000d47	            0x4157	                                push r15	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4000d49	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4000d4e	      0x448b44241c	            mov r8d, dword [rsp + 0x1c] 	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4000d53	        0x8b4c2424	            mov ecx, dword [rsp + 0x24] 	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4000d57	      0x488d742448	                   lea rsi, [rsp + 0x48]	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4000d5c	      0xe800000000	                          call 0x4000d61	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4000d61	          0x4885c0	                           test rax, rax	       765	list.c	FUNCTION_35	FOR_1	IF_1
0x4000d64	          0x4989c6	                            mov r14, rax	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4000d67	              0x5e	                                 pop rsi	       765	list.c	FUNCTION_35	FOR_1	IF_1
0x4000d68	              0x5f	                                 pop rdi	       765	list.c	FUNCTION_35	FOR_1	IF_1
0x4000d69	     0xf8471010000	                            je 0x4000ee0	       765	list.c	FUNCTION_35	FOR_1	IF_1
0x4000d6f	          0x4889c7	                            mov rdi, rax	       768	list.c	FUNCTION_35	FOR_1	CALL_2
0x4000d72	      0xe800000000	                          call 0x4000d77	       768	list.c	FUNCTION_35	FOR_1	CALL_2
0x4000d77	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       771	list.c	FUNCTION_35	FOR_1	CALL_3
0x4000d7c	      0xbe01000000	                              mov esi, 1	       771	list.c	FUNCTION_35	FOR_1	CALL_3
0x4000d81	             0x1c5	                            add ebp, eax	       769	list.c	FUNCTION_35	FOR_1
0x4000d83	          0x4989c5	                            mov r13, rax	       768	list.c	FUNCTION_35	FOR_1	CALL_2
0x4000d86	      0xe800000000	                          call 0x4000d8b	       771	list.c	FUNCTION_35	FOR_1	CALL_3
0x4000d8b	      0x4863442440	         movsxd rax, dword [rsp + 0x40] 	       772	list.c	FUNCTION_35	FOR_1
0x4000d90	          0x8d5001	                      lea edx, [rax + 1]	       772	list.c	FUNCTION_35	FOR_1
0x4000d93	        0x48c1e004	                              shl rax, 4	       772	list.c	FUNCTION_35	FOR_1
0x4000d97	      0x4803442450	             add rax, qword [rsp + 0x50]	       772	list.c	FUNCTION_35	FOR_1
0x4000d9c	          0x4d39e6	                            cmp r14, r12	       773	list.c	FUNCTION_35	FOR_1	IF_2
0x4000d9f	        0x89542440	             mov dword [rsp + 0x40], edx	       772	list.c	FUNCTION_35	FOR_1
0x4000da3	          0x4889c2	                            mov rdx, rax	       772	list.c	FUNCTION_35	FOR_1
0x4000da6	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       773	list.c	FUNCTION_35	FOR_1	IF_2
0x4000dab	     0xf8557ffffff	                           jne 0x4000d08	       773	list.c	FUNCTION_35	FOR_1	IF_2
0x4000db1	          0x4885c0	                           test rax, rax	       773	list.c	FUNCTION_35	FOR_1	IF_2
0x4000db4	     0xf854effffff	                           jne 0x4000d08	       773	list.c	FUNCTION_35	FOR_1	IF_2
0x4000dba	          0x4489ee	                           mov esi, r13d	       780	list.c	FUNCTION_35	FOR_1	ELSE_1	CALL_4
0x4000dbd	          0x4c89e7	                            mov rdi, r12	       780	list.c	FUNCTION_35	FOR_1	ELSE_1	CALL_4
0x4000dc0	      0x4889542428	             mov qword [rsp + 0x28], rdx	       780	list.c	FUNCTION_35	FOR_1	ELSE_1	CALL_4
0x4000dc5	      0xe800000000	                          call 0x4000dca	       780	list.c	FUNCTION_35	FOR_1	ELSE_1	CALL_4
0x4000dca	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       780	list.c	FUNCTION_35	FOR_1	ELSE_1	CALL_4
0x4000dcf	          0x488902	                    mov qword [rdx], rax	       780	list.c	FUNCTION_35	FOR_1	ELSE_1	CALL_4
0x4000dd2	        0x48894208	                mov qword [rdx + 8], rax	       781	list.c	FUNCTION_35	FOR_1	ELSE_1
0x4000dd6	      0xe934ffffff	                           jmp 0x4000d0f	       781	list.c	FUNCTION_35	FOR_1	ELSE_1
0x4000ddb	            0x31ed	                            xor ebp, ebp	       753	list.c	FUNCTION_35
0x4000ddd	           0xf1f00	                         nop dword [rax]	       753	list.c	FUNCTION_35
0x4000de0	        0x8b5c2440	            mov ebx, dword [rsp + 0x40] 	       791	list.c	FUNCTION_35	IF_4
0x4000de4	          0x83fb01	                              cmp ebx, 1	       791	list.c	FUNCTION_35	IF_4
0x4000de7	            0x7e12	                           jle 0x4000dfb	       791	list.c	FUNCTION_35	IF_4
0x4000de9	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       792	list.c	FUNCTION_35	CALL_6
0x4000dee	          0x83eb01	                              sub ebx, 1	       792	list.c	FUNCTION_35	CALL_6
0x4000df1	      0xe800000000	                          call 0x4000df6	       792	list.c	FUNCTION_35	CALL_6
0x4000df6	           0xfafd8	                           imul ebx, eax	       792	list.c	FUNCTION_35	CALL_6
0x4000df9	             0x1dd	                            add ebp, ebx	       792	list.c	FUNCTION_35	CALL_6
0x4000dfb	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       793	list.c	FUNCTION_35	IF_5	CALL_7
0x4000e00	          0x8d7502	                      lea esi, [rbp + 2]	       793	list.c	FUNCTION_35	IF_5	CALL_7
0x4000e03	      0xe800000000	                          call 0x4000e08	       793	list.c	FUNCTION_35	IF_5	CALL_7
0x4000e08	            0x85c0	                           test eax, eax	       793	list.c	FUNCTION_35	IF_5	CALL_7
0x4000e0a	     0xf84d0000000	                            je 0x4000ee0	       793	list.c	FUNCTION_35	IF_5	CALL_7
0x4000e10	        0x8b542440	            mov edx, dword [rsp + 0x40] 	       796	list.c	FUNCTION_35	FOR_2
0x4000e14	            0x85d2	                           test edx, edx	       796	list.c	FUNCTION_35	FOR_2
0x4000e16	            0x7e5b	                           jle 0x4000e73	       796	list.c	FUNCTION_35	FOR_2
0x4000e18	    0x8b0500000000	            mov eax, dword [0x04000e1e] 	       796	list.c	FUNCTION_35	FOR_2
0x4000e1e	            0x85c0	                           test eax, eax	       796	list.c	FUNCTION_35	FOR_2
0x4000e20	            0x7551	                           jne 0x4000e73	       796	list.c	FUNCTION_35	FOR_2
0x4000e22	            0x31db	                            xor ebx, ebx	       796	list.c	FUNCTION_35	FOR_2
0x4000e24	            0x31ed	                            xor ebp, ebp	       796	list.c	FUNCTION_35	FOR_2
0x4000e26	            0xeb25	                           jmp 0x4000e4d	       796	list.c	FUNCTION_35	FOR_2
0x4000e28	     0xf1f84000000	                   nop dword [rax + rax]	       796	list.c	FUNCTION_35	FOR_2
0x4000e30	    0x8b0500000000	            mov eax, dword [0x04000e36] 	       796	list.c	FUNCTION_35	FOR_2
0x4000e36	        0x4883c510	                           add rbp, 0x10	       796	list.c	FUNCTION_35	FOR_2
0x4000e3a	            0x85c0	                           test eax, eax	       796	list.c	FUNCTION_35	FOR_2
0x4000e3c	            0x7535	                           jne 0x4000e73	       796	list.c	FUNCTION_35	FOR_2
0x4000e3e	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       801	list.c	FUNCTION_35	FOR_2	CALL_8
0x4000e43	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       801	list.c	FUNCTION_35	FOR_2	CALL_8
0x4000e48	      0xe800000000	                          call 0x4000e4d	       801	list.c	FUNCTION_35	FOR_2	CALL_8
0x4000e4d	      0x488b442450	            mov rax, qword [rsp + 0x50] 	       804	list.c	FUNCTION_35	FOR_2	IF_7
0x4000e52	        0x488b3428	              mov rsi, qword [rax + rbp]	       804	list.c	FUNCTION_35	FOR_2	IF_7
0x4000e56	          0x4885f6	                           test rsi, rsi	       804	list.c	FUNCTION_35	FOR_2	IF_7
0x4000e59	            0x740a	                            je 0x4000e65	       804	list.c	FUNCTION_35	FOR_2	IF_7
0x4000e5b	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       805	list.c	FUNCTION_35	FOR_2	CALL_9
0x4000e60	      0xe800000000	                          call 0x4000e65	       805	list.c	FUNCTION_35	FOR_2	CALL_9
0x4000e65	      0xe800000000	                          call 0x4000e6a	       806	list.c	FUNCTION_35	FOR_2	CALL_10
0x4000e6a	          0x83c301	                              add ebx, 1	       796	list.c	FUNCTION_35	FOR_2
0x4000e6d	        0x3b5c2440	            cmp ebx, dword [rsp + 0x40] 	       796	list.c	FUNCTION_35	FOR_2
0x4000e71	            0x7cbd	                            jl 0x4000e30	       796	list.c	FUNCTION_35	FOR_2
0x4000e73	      0xbb01000000	                              mov ebx, 1	       809	list.c	FUNCTION_35
0x4000e78	      0x488b6c2450	            mov rbp, qword [rsp + 0x50] 	       838	list.c	FUNCTION_36	IF_2
0x4000e7d	          0x4885ed	                           test rbp, rbp	       838	list.c	FUNCTION_36	IF_2
0x4000e80	            0x7430	                            je 0x4000eb2	       838	list.c	FUNCTION_36	IF_2
0x4000e82	        0x8b442440	            mov eax, dword [rsp + 0x40] 	       841	list.c	FUNCTION_36	IF_2	FOR_1
0x4000e86	          0x4531e4	                          xor r12d, r12d	       841	list.c	FUNCTION_36	IF_2	FOR_1
0x4000e89	            0x85c0	                           test eax, eax	       841	list.c	FUNCTION_36	IF_2	FOR_1
0x4000e8b	            0x7e1b	                           jle 0x4000ea8	       841	list.c	FUNCTION_36	IF_2	FOR_1
0x4000e8d	           0xf1f00	                         nop dword [rax]	       841	list.c	FUNCTION_36	IF_2	FOR_1
0x4000e90	        0x488b7d08	                mov rdi, qword [rbp + 8]	       843	list.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x4000e94	        0x4183c401	                             add r12d, 1	       841	list.c	FUNCTION_36	IF_2	FOR_1
0x4000e98	        0x4883c510	                           add rbp, 0x10	       844	list.c	FUNCTION_36	IF_2	FOR_1
0x4000e9c	      0xe800000000	                          call 0x4000ea1	       843	list.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x4000ea1	      0x4439642440	           cmp dword [rsp + 0x40], r12d 	       841	list.c	FUNCTION_36	IF_2	FOR_1
0x4000ea6	            0x7fe8	                            jg 0x4000e90	       841	list.c	FUNCTION_36	IF_2	FOR_1
0x4000ea8	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       846	list.c	FUNCTION_36	IF_2	CALL_4
0x4000ead	      0xe800000000	                          call 0x4000eb2	       846	list.c	FUNCTION_36	IF_2	CALL_4
0x4000eb2	    0x488b8c24a800	            mov rcx, qword [rsp + 0xa8] 	       850	list.c	FUNCTION_36
0x4000eba	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       850	list.c	FUNCTION_36
0x4000ec3	            0x89d8	                            mov eax, ebx	       850	list.c	FUNCTION_36
0x4000ec5	            0x751d	                           jne 0x4000ee4	       850	list.c	FUNCTION_36
0x4000ec7	    0x4881c4b80000	                           add rsp, 0xb8	       850	list.c	FUNCTION_36
0x4000ece	              0x5b	                                 pop rbx	       850	list.c	FUNCTION_36
0x4000ecf	              0x5d	                                 pop rbp	       850	list.c	FUNCTION_36
0x4000ed0	            0x415c	                                 pop r12	       850	list.c	FUNCTION_36
0x4000ed2	            0x415d	                                 pop r13	       850	list.c	FUNCTION_36
0x4000ed4	            0x415e	                                 pop r14	       850	list.c	FUNCTION_36
0x4000ed6	            0x415f	                                 pop r15	       850	list.c	FUNCTION_36
0x4000ed8	              0xc3	                                     ret	       850	list.c	FUNCTION_36
0x4000ed9	     0xf1f80000000	                         nop dword [rax]	       850	list.c	FUNCTION_36
0x4000ee0	            0x31db	                            xor ebx, ebx	       766	list.c	FUNCTION_35	FOR_1	IF_1
0x4000ee2	            0xeb94	                           jmp 0x4000e78	       766	list.c	FUNCTION_35	FOR_1	IF_1
0x4000ee4	      0xe800000000	                          call 0x4000ee9	       850	list.c	FUNCTION_36
list_insert_tv	DO,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:IF,1:CALL,3:functions,0	28
0x4000950	            0x4155	                                push r13	       547	list.c	FUNCTION_28
0x4000952	            0x4154	                                push r12	       547	list.c	FUNCTION_28
0x4000954	          0x4989f5	                            mov r13, rsi	       547	list.c	FUNCTION_28
0x4000957	              0x55	                                push rbp	       547	list.c	FUNCTION_28
0x4000958	              0x53	                                push rbx	       547	list.c	FUNCTION_28
0x4000959	          0x4889fd	                            mov rbp, rdi	       547	list.c	FUNCTION_28
0x400095c	      0xbf20000000	                           mov edi, 0x20	       220	list.c	FUNCTION_13	CALL_1
0x4000961	          0x4989d4	                            mov r12, rdx	       547	list.c	FUNCTION_28
0x4000964	        0x4883ec08	                              sub rsp, 8	       547	list.c	FUNCTION_28
0x4000968	      0xe800000000	                          call 0x400096d	       220	list.c	FUNCTION_13	CALL_1
0x400096d	          0x4889c3	                            mov rbx, rax	       220	list.c	FUNCTION_13	CALL_1
0x4000970	            0x31c0	                            xor eax, eax	       220	list.c	FUNCTION_13	CALL_1
0x4000972	          0x4885db	                           test rbx, rbx	       550	list.c	FUNCTION_28	IF_1
0x4000975	            0x741f	                            je 0x4000996	       550	list.c	FUNCTION_28	IF_1
0x4000977	        0x488d7310	                   lea rsi, [rbx + 0x10]	       552	list.c	FUNCTION_28	CALL_2
0x400097b	          0x4c89ef	                            mov rdi, r13	       552	list.c	FUNCTION_28	CALL_2
0x400097e	      0xe800000000	                          call 0x4000983	       552	list.c	FUNCTION_28	CALL_2
0x4000983	          0x4c89e2	                            mov rdx, r12	       553	list.c	FUNCTION_28	CALL_3
0x4000986	          0x4889de	                            mov rsi, rbx	       553	list.c	FUNCTION_28	CALL_3
0x4000989	          0x4889ef	                            mov rdi, rbp	       553	list.c	FUNCTION_28	CALL_3
0x400098c	      0xe800000000	                          call 0x4000991	       553	list.c	FUNCTION_28	CALL_3
0x4000991	      0xb801000000	                              mov eax, 1	       554	list.c	FUNCTION_28
0x4000996	        0x4883c408	                              add rsp, 8	       555	list.c	FUNCTION_28
0x400099a	              0x5b	                                 pop rbx	       555	list.c	FUNCTION_28
0x400099b	              0x5d	                                 pop rbp	       555	list.c	FUNCTION_28
0x400099c	            0x415c	                                 pop r12	       555	list.c	FUNCTION_28
0x400099e	            0x415d	                                 pop r13	       555	list.c	FUNCTION_28
0x40009a0	              0xc3	                                     ret	       555	list.c	FUNCTION_28
list_free_nonref	DO,0:ELSE,0:FOR,1:WHILE,0:SWITCH,0:IF,1:CALL,1:functions,0	29
0x4000230	              0x55	                                push rbp	       153	list.c	FUNCTION_9
0x4000231	              0x53	                                push rbx	       153	list.c	FUNCTION_9
0x4000232	        0x4883ec08	                              sub rsp, 8	       153	list.c	FUNCTION_9
0x4000236	    0x488b1d000000	            mov rbx, qword [0x0400023d] 	       157	list.c	FUNCTION_9	FOR_1
0x400023d	          0x4885db	                           test rbx, rbx	       157	list.c	FUNCTION_9	FOR_1
0x4000240	            0x7445	                            je 0x4000287	       157	list.c	FUNCTION_9	FOR_1
0x4000242	            0x89fd	                            mov ebp, edi	       157	list.c	FUNCTION_9	FOR_1
0x4000244	            0x31c0	                            xor eax, eax	       157	list.c	FUNCTION_9	FOR_1
0x4000246	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       157	list.c	FUNCTION_9	FOR_1
0x4000250	          0x8b5344	            mov edx, dword [rbx + 0x44] 	       158	list.c	FUNCTION_9	FOR_1	IF_1
0x4000253	            0x31ea	                            xor edx, ebp	       158	list.c	FUNCTION_9	FOR_1	IF_1
0x4000255	          0x83e2fe	                     and edx, 0xfffffffe	       158	list.c	FUNCTION_9	FOR_1	IF_1
0x4000258	            0x7407	                            je 0x4000261	       158	list.c	FUNCTION_9	FOR_1	IF_1
0x400025a	      0x48837b1000	               cmp qword [rbx + 0x10], 0	       159	list.c	FUNCTION_9	FOR_1	IF_1
0x400025f	            0x7417	                            je 0x4000278	       159	list.c	FUNCTION_9	FOR_1	IF_1
0x4000261	        0x488b5b28	            mov rbx, qword [rbx + 0x28] 	       157	list.c	FUNCTION_9	FOR_1
0x4000265	          0x4885db	                           test rbx, rbx	       157	list.c	FUNCTION_9	FOR_1
0x4000268	            0x75e6	                           jne 0x4000250	       157	list.c	FUNCTION_9	FOR_1
0x400026a	        0x4883c408	                              add rsp, 8	       168	list.c	FUNCTION_9
0x400026e	              0x5b	                                 pop rbx	       168	list.c	FUNCTION_9
0x400026f	              0x5d	                                 pop rbp	       168	list.c	FUNCTION_9
0x4000270	              0xc3	                                     ret	       168	list.c	FUNCTION_9
0x4000271	     0xf1f80000000	                         nop dword [rax]	       168	list.c	FUNCTION_9
0x4000278	          0x4889df	                            mov rdi, rbx	       164	list.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x400027b	      0xe800feffff	      call sym.list_free_contents.isra.0	       164	list.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x4000280	      0xb801000000	                              mov eax, 1	       165	list.c	FUNCTION_9	FOR_1	IF_1
0x4000285	            0xebda	                           jmp 0x4000261	       165	list.c	FUNCTION_9	FOR_1	IF_1
0x4000287	            0x31c0	                            xor eax, eax	       155	list.c	FUNCTION_9
0x4000289	            0xebdf	                           jmp 0x400026a	       155	list.c	FUNCTION_9
list_equal	DO,0:ELSE,0:FOR,1:WHILE,0:SWITCH,0:IF,4:CALL,3:functions,0	61
0x4000360	          0x4885ff	                           test rdi, rdi	       266	list.c	FUNCTION_17	IF_1
0x4000363	            0x7416	                            je 0x400037b	       266	list.c	FUNCTION_17	IF_1
0x4000365	          0x4885f6	                           test rsi, rsi	       266	list.c	FUNCTION_17	IF_1
0x4000368	            0x7411	                            je 0x400037b	       266	list.c	FUNCTION_17	IF_1
0x400036a	          0x4839f7	                            cmp rdi, rsi	       268	list.c	FUNCTION_17	IF_2
0x400036d	     0xf8485000000	                            je 0x40003f8	       268	list.c	FUNCTION_17	IF_2
0x4000373	          0x8b473c	            mov eax, dword [rdi + 0x3c] 	       270	list.c	FUNCTION_17	IF_3	CALL_2
0x4000376	          0x39463c	            cmp dword [rsi + 0x3c], eax 	       270	list.c	FUNCTION_17	IF_3	CALL_2
0x4000379	            0x7405	                            je 0x4000380	       270	list.c	FUNCTION_17	IF_3	CALL_2
0x400037b	            0x31c0	                            xor eax, eax	       267	list.c	FUNCTION_17	IF_1
0x400037d	              0xc3	                                     ret	       279	list.c	FUNCTION_17
0x400037e	            0x6690	                                     nop	       279	list.c	FUNCTION_17
0x4000380	            0x4155	                                push r13	       263	list.c	FUNCTION_17
0x4000382	            0x4154	                                push r12	       263	list.c	FUNCTION_17
0x4000384	              0x55	                                push rbp	       263	list.c	FUNCTION_17
0x4000385	              0x53	                                push rbx	       263	list.c	FUNCTION_17
0x4000386	        0x4883ec08	                              sub rsp, 8	       263	list.c	FUNCTION_17
0x400038a	          0x488b1f	                    mov rbx, qword [rdi]	       273	list.c	FUNCTION_17	FOR_1
0x400038d	          0x488b2e	                    mov rbp, qword [rsi]	       273	list.c	FUNCTION_17	FOR_1
0x4000390	          0x4885db	                           test rbx, rbx	       273	list.c	FUNCTION_17	FOR_1
0x4000393	            0x7443	                            je 0x40003d8	       273	list.c	FUNCTION_17	FOR_1
0x4000395	          0x4189cd	                           mov r13d, ecx	       273	list.c	FUNCTION_17	FOR_1
0x4000398	          0x4189d4	                           mov r12d, edx	       273	list.c	FUNCTION_17	FOR_1
0x400039b	            0xeb0f	                           jmp 0x40003ac	       273	list.c	FUNCTION_17	FOR_1
0x400039d	           0xf1f00	                         nop dword [rax]	       273	list.c	FUNCTION_17	FOR_1
0x40003a0	          0x488b1b	                    mov rbx, qword [rbx]	       275	list.c	FUNCTION_17	FOR_1
0x40003a3	        0x488b6d00	                    mov rbp, qword [rbp]	       275	list.c	FUNCTION_17	FOR_1
0x40003a7	          0x4885db	                           test rbx, rbx	       273	list.c	FUNCTION_17	FOR_1
0x40003aa	            0x742c	                            je 0x40003d8	       273	list.c	FUNCTION_17	FOR_1
0x40003ac	          0x4885ed	                           test rbp, rbp	       273	list.c	FUNCTION_17	FOR_1
0x40003af	            0x7427	                            je 0x40003d8	       273	list.c	FUNCTION_17	FOR_1
0x40003b1	        0x488d7510	                   lea rsi, [rbp + 0x10]	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x40003b5	        0x488d7b10	                   lea rdi, [rbx + 0x10]	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x40003b9	          0x4489e9	                           mov ecx, r13d	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x40003bc	          0x4489e2	                           mov edx, r12d	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x40003bf	      0xe800000000	                          call 0x40003c4	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x40003c4	            0x85c0	                           test eax, eax	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x40003c6	            0x75d8	                           jne 0x40003a0	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x40003c8	        0x4883c408	                              add rsp, 8	       279	list.c	FUNCTION_17
0x40003cc	            0x31c0	                            xor eax, eax	       267	list.c	FUNCTION_17	IF_1
0x40003ce	              0x5b	                                 pop rbx	       279	list.c	FUNCTION_17
0x40003cf	              0x5d	                                 pop rbp	       279	list.c	FUNCTION_17
0x40003d0	            0x415c	                                 pop r12	       279	list.c	FUNCTION_17
0x40003d2	            0x415d	                                 pop r13	       279	list.c	FUNCTION_17
0x40003d4	              0xc3	                                     ret	       279	list.c	FUNCTION_17
0x40003d5	           0xf1f00	                         nop dword [rax]	       279	list.c	FUNCTION_17
0x40003d8	          0x4885db	                           test rbx, rbx	       278	list.c	FUNCTION_17
0x40003db	           0xf94c0	                                 sete al	       278	list.c	FUNCTION_17
0x40003de	            0x31d2	                            xor edx, edx	       278	list.c	FUNCTION_17
0x40003e0	          0x4885ed	                           test rbp, rbp	       278	list.c	FUNCTION_17
0x40003e3	           0xf94c2	                                 sete dl	       278	list.c	FUNCTION_17
0x40003e6	        0x4883c408	                              add rsp, 8	       279	list.c	FUNCTION_17
0x40003ea	              0x5b	                                 pop rbx	       279	list.c	FUNCTION_17
0x40003eb	            0x21d0	                            and eax, edx	       278	list.c	FUNCTION_17
0x40003ed	              0x5d	                                 pop rbp	       279	list.c	FUNCTION_17
0x40003ee	            0x415c	                                 pop r12	       279	list.c	FUNCTION_17
0x40003f0	            0x415d	                                 pop r13	       279	list.c	FUNCTION_17
0x40003f2	              0xc3	                                     ret	       279	list.c	FUNCTION_17
0x40003f3	       0xf1f440000	                   nop dword [rax + rax]	       279	list.c	FUNCTION_17
0x40003f8	      0xb801000000	                              mov eax, 1	       269	list.c	FUNCTION_17	IF_2
0x40003fd	              0xc3	                                     ret	       269	list.c	FUNCTION_17	IF_2
list_concat	DO,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:IF,2:CALL,2:functions,0	32
0x4000b60	          0x4885ff	                           test rdi, rdi	       611	list.c	FUNCTION_31	IF_1
0x4000b63	            0x7443	                            je 0x4000ba8	       611	list.c	FUNCTION_31	IF_1
0x4000b65	          0x4885f6	                           test rsi, rsi	       611	list.c	FUNCTION_31	IF_1
0x4000b68	            0x743e	                            je 0x4000ba8	       611	list.c	FUNCTION_31	IF_1
0x4000b6a	              0x55	                                push rbp	       608	list.c	FUNCTION_31
0x4000b6b	              0x53	                                push rbx	       608	list.c	FUNCTION_31
0x4000b6c	          0x4889d5	                            mov rbp, rdx	       608	list.c	FUNCTION_31
0x4000b6f	          0x4889f3	                            mov rbx, rsi	       608	list.c	FUNCTION_31
0x4000b72	            0x31d2	                            xor edx, edx	       615	list.c	FUNCTION_31	CALL_1
0x4000b74	            0x31f6	                            xor esi, esi	       615	list.c	FUNCTION_31	CALL_1
0x4000b76	        0x4883ec08	                              sub rsp, 8	       608	list.c	FUNCTION_31
0x4000b7a	      0xe800000000	                          call 0x4000b7f	       615	list.c	FUNCTION_31	CALL_1
0x4000b7f	          0x4885c0	                           test rax, rax	       616	list.c	FUNCTION_31	IF_2
0x4000b82	            0x742c	                            je 0x4000bb0	       616	list.c	FUNCTION_31	IF_2
0x4000b84	    0xc74500050000	                      mov dword [rbp], 5	       618	list.c	FUNCTION_31
0x4000b8b	        0x48894508	                mov qword [rbp + 8], rax	       619	list.c	FUNCTION_31
0x4000b8f	        0x4883c408	                              add rsp, 8	       623	list.c	FUNCTION_31
0x4000b93	          0x4889de	                            mov rsi, rbx	       622	list.c	FUNCTION_31	CALL_2
0x4000b96	            0x31d2	                            xor edx, edx	       622	list.c	FUNCTION_31	CALL_2
0x4000b98	          0x4889c7	                            mov rdi, rax	       622	list.c	FUNCTION_31	CALL_2
0x4000b9b	              0x5b	                                 pop rbx	       623	list.c	FUNCTION_31
0x4000b9c	              0x5d	                                 pop rbp	       623	list.c	FUNCTION_31
0x4000b9d	      0xe90efeffff	                     jmp sym.list_extend	       622	list.c	FUNCTION_31	CALL_2
0x4000ba2	    0x660f1f440000	                    nop word [rax + rax]	       622	list.c	FUNCTION_31	CALL_2
0x4000ba8	            0x31c0	                            xor eax, eax	       623	list.c	FUNCTION_31
0x4000baa	              0xc3	                                     ret	       623	list.c	FUNCTION_31
0x4000bab	       0xf1f440000	                   nop dword [rax + rax]	       623	list.c	FUNCTION_31
0x4000bb0	        0x4883c408	                              add rsp, 8	       623	list.c	FUNCTION_31
0x4000bb4	            0x31c0	                            xor eax, eax	       623	list.c	FUNCTION_31
0x4000bb6	              0x5b	                                 pop rbx	       623	list.c	FUNCTION_31
0x4000bb7	              0x5d	                                 pop rbp	       623	list.c	FUNCTION_31
0x4000bb8	              0xc3	                                     ret	       623	list.c	FUNCTION_31
list_alloc	DO,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:IF,2:CALL,1:functions,0	14
0x4000150	        0x4883ec08	                              sub rsp, 8	        72	list.c	FUNCTION_4
0x4000154	      0xbf50000000	                           mov edi, 0x50	        75	list.c	FUNCTION_4	CALL_1
0x4000159	      0xe800000000	                          call 0x400015e	        75	list.c	FUNCTION_4	CALL_1
0x400015e	          0x4885c0	                           test rax, rax	        76	list.c	FUNCTION_4	IF_1
0x4000161	            0x7423	                            je 0x4000186	        76	list.c	FUNCTION_4	IF_1
0x4000163	    0x488b15000000	            mov rdx, qword [0x0400016a] 	        79	list.c	FUNCTION_4	IF_1	IF_2
0x400016a	          0x4885d2	                           test rdx, rdx	        79	list.c	FUNCTION_4	IF_1	IF_2
0x400016d	            0x7404	                            je 0x4000173	        79	list.c	FUNCTION_4	IF_1	IF_2
0x400016f	        0x48894230	             mov qword [rdx + 0x30], rax	        80	list.c	FUNCTION_4	IF_1	IF_2
0x4000173	    0x48c740300000	               mov qword [rax + 0x30], 0	        81	list.c	FUNCTION_4	IF_1
0x400017b	        0x48895028	             mov qword [rax + 0x28], rdx	        82	list.c	FUNCTION_4	IF_1
0x400017f	    0x488905000000	            mov qword [0x04000186], rax 	        83	list.c	FUNCTION_4	IF_1
0x4000186	        0x4883c408	                              add rsp, 8	        86	list.c	FUNCTION_4
0x400018a	              0xc3	                                     ret	        86	list.c	FUNCTION_4
list_free_list	DO,0:ELSE,1:FOR,0:WHILE,0:SWITCH,0:IF,2:CALL,1:functions,0	13
0x4000040	        0x488b4730	            mov rax, qword [rdi + 0x30] 	       174	list.c	FUNCTION_10	IF_1
0x4000044	        0x488b5728	            mov rdx, qword [rdi + 0x28] 	       175	list.c	FUNCTION_10	IF_1
0x4000048	          0x4885c0	                           test rax, rax	       174	list.c	FUNCTION_10	IF_1
0x400004b	            0x741b	                            je 0x4000068	       174	list.c	FUNCTION_10	IF_1
0x400004d	        0x48895028	             mov qword [rax + 0x28], rdx	       177	list.c	FUNCTION_10	ELSE_1
0x4000051	        0x488b5728	            mov rdx, qword [rdi + 0x28] 	       177	list.c	FUNCTION_10	ELSE_1
0x4000055	          0x4885d2	                           test rdx, rdx	       178	list.c	FUNCTION_10	IF_2
0x4000058	            0x7404	                            je 0x400005e	       178	list.c	FUNCTION_10	IF_2
0x400005a	        0x48894230	             mov qword [rdx + 0x30], rax	       179	list.c	FUNCTION_10	IF_2
0x400005e	      0xe900000000	                           jmp 0x4000063	       181	list.c	FUNCTION_10	CALL_1
0x4000063	       0xf1f440000	                   nop dword [rax + rax]	       181	list.c	FUNCTION_10	CALL_1
0x4000068	    0x488915000000	            mov qword [0x0400006f], rdx 	       175	list.c	FUNCTION_10	IF_1
0x400006f	            0xebe4	                           jmp 0x4000055	       175	list.c	FUNCTION_10	IF_1
list_append_string	DO,0:ELSE,1:FOR,0:WHILE,0:SWITCH,0:IF,3:CALL,4:functions,0	60
0x4000780	            0x4155	                                push r13	       505	list.c	FUNCTION_26
0x4000782	            0x4154	                                push r12	       505	list.c	FUNCTION_26
0x4000784	          0x4189d5	                           mov r13d, edx	       505	list.c	FUNCTION_26
0x4000787	              0x55	                                push rbp	       505	list.c	FUNCTION_26
0x4000788	              0x53	                                push rbx	       505	list.c	FUNCTION_26
0x4000789	          0x4889fd	                            mov rbp, rdi	       505	list.c	FUNCTION_26
0x400078c	      0xbf20000000	                           mov edi, 0x20	       220	list.c	FUNCTION_13	CALL_1
0x4000791	          0x4989f4	                            mov r12, rsi	       505	list.c	FUNCTION_26
0x4000794	        0x4883ec08	                              sub rsp, 8	       505	list.c	FUNCTION_26
0x4000798	      0xe800000000	                          call 0x400079d	       220	list.c	FUNCTION_13	CALL_1
0x400079d	          0x4885c0	                           test rax, rax	       508	list.c	FUNCTION_26	IF_1
0x40007a0	     0xf8482000000	                            je 0x4000828	       508	list.c	FUNCTION_26	IF_1
0x40007a6	          0x4889c3	                            mov rbx, rax	       508	list.c	FUNCTION_26	IF_1
0x40007a9	        0x488b4508	                mov rax, qword [rbp + 8]	       425	list.c	FUNCTION_22	IF_1
0x40007ad	          0x4885c0	                           test rax, rax	       425	list.c	FUNCTION_22	IF_1
0x40007b0	            0x745e	                            je 0x4000810	       425	list.c	FUNCTION_22	IF_1
0x40007b2	          0x488918	                    mov qword [rax], rbx	       434	list.c	FUNCTION_22	ELSE_1
0x40007b5	        0x48894308	                mov qword [rbx + 8], rax	       435	list.c	FUNCTION_22	ELSE_1
0x40007b9	        0x48895d08	                mov qword [rbp + 8], rbx	       436	list.c	FUNCTION_22	ELSE_1
0x40007bd	        0x83453c01	               add dword [rbp + 0x3c], 1	       438	list.c	FUNCTION_22
0x40007c1	          0x4d85e4	                           test r12, r12	       513	list.c	FUNCTION_26	IF_2
0x40007c4	    0x48c703000000	                      mov qword [rbx], 0	       439	list.c	FUNCTION_22
0x40007cb	    0xc74310020000	               mov dword [rbx + 0x10], 2	       511	list.c	FUNCTION_26
0x40007d2	        0xc6431400	                mov byte [rbx + 0x14], 0	       512	list.c	FUNCTION_26
0x40007d6	            0x7460	                            je 0x4000838	       513	list.c	FUNCTION_26	IF_2
0x40007d8	          0x4585ed	                         test r13d, r13d	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x40007db	            0x7823	                            js 0x4000800	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x40007dd	          0x4489ee	                           mov esi, r13d	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x40007e0	          0x4c89e7	                            mov rdi, r12	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x40007e3	      0xe800000000	                          call 0x40007e8	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x40007e8	          0x4885c0	                           test rax, rax	       509	list.c	FUNCTION_26	IF_1
0x40007eb	        0x48894318	             mov qword [rbx + 0x18], rax	       515	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_3
0x40007ef	           0xf95c0	                                setne al	       509	list.c	FUNCTION_26	IF_1
0x40007f2	           0xfb6c0	                           movzx eax, al	       509	list.c	FUNCTION_26	IF_1
0x40007f5	        0x4883c408	                              add rsp, 8	       519	list.c	FUNCTION_26
0x40007f9	              0x5b	                                 pop rbx	       519	list.c	FUNCTION_26
0x40007fa	              0x5d	                                 pop rbp	       519	list.c	FUNCTION_26
0x40007fb	            0x415c	                                 pop r12	       519	list.c	FUNCTION_26
0x40007fd	            0x415d	                                 pop r13	       519	list.c	FUNCTION_26
0x40007ff	              0xc3	                                     ret	       519	list.c	FUNCTION_26
0x4000800	          0x4c89e7	                            mov rdi, r12	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4000803	      0xe800000000	                          call 0x4000808	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4000808	            0xebde	                           jmp 0x40007e8	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x400080a	    0x660f1f440000	                    nop word [rax + rax]	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4000810	        0x48895d00	                    mov qword [rbp], rbx	       428	list.c	FUNCTION_22	IF_1
0x4000814	        0x48895d08	                mov qword [rbp + 8], rbx	       429	list.c	FUNCTION_22	IF_1
0x4000818	    0x48c743080000	                  mov qword [rbx + 8], 0	       430	list.c	FUNCTION_22	IF_1
0x4000820	            0xeb9b	                           jmp 0x40007bd	       430	list.c	FUNCTION_22	IF_1
0x4000822	    0x660f1f440000	                    nop word [rax + rax]	       430	list.c	FUNCTION_22	IF_1
0x4000828	        0x4883c408	                              add rsp, 8	       519	list.c	FUNCTION_26
0x400082c	            0x31c0	                            xor eax, eax	       509	list.c	FUNCTION_26	IF_1
0x400082e	              0x5b	                                 pop rbx	       519	list.c	FUNCTION_26
0x400082f	              0x5d	                                 pop rbp	       519	list.c	FUNCTION_26
0x4000830	            0x415c	                                 pop r12	       519	list.c	FUNCTION_26
0x4000832	            0x415d	                                 pop r13	       519	list.c	FUNCTION_26
0x4000834	              0xc3	                                     ret	       519	list.c	FUNCTION_26
0x4000835	           0xf1f00	                         nop dword [rax]	       519	list.c	FUNCTION_26
0x4000838	    0x48c743180000	               mov qword [rbx + 0x18], 0	       514	list.c	FUNCTION_26	IF_2
0x4000840	      0xb801000000	                              mov eax, 1	       518	list.c	FUNCTION_26
0x4000845	            0xebae	                           jmp 0x40007f5	       518	list.c	FUNCTION_26
init_static_list	DO,0:ELSE,2:FOR,1:WHILE,0:SWITCH,0:IF,2:CALL,1:functions,0	42
0x40012d0	          0x4989f8	                             mov r8, rdi	       959	list.c	FUNCTION_39
0x40012d3	    0x48c787880100	              mov qword [rdi + 0x188], 0	        90	string3.h	FUNCTION_43	CALL_6
0x40012de	        0x488d7f08	                      lea rdi, [rdi + 8]	        90	string3.h	FUNCTION_43	CALL_6
0x40012e2	          0x4c89c1	                             mov rcx, r8	        90	string3.h	FUNCTION_43	CALL_6
0x40012e5	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_43	CALL_6
0x40012e7	        0x498d7030	                    lea rsi, [r8 + 0x30]	        90	string3.h	FUNCTION_43	CALL_6
0x40012eb	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_43	CALL_6
0x40012ef	            0x31d2	                            xor edx, edx	       970	list.c	FUNCTION_39	FOR_1
0x40012f1	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_43	CALL_6
0x40012f4	    0x81c190010000	                          add ecx, 0x190	        90	string3.h	FUNCTION_43	CALL_6
0x40012fa	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_43	CALL_6
0x40012fd	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_43	CALL_6
0x4001300	        0x498d4050	                    lea rax, [r8 + 0x50]	       964	list.c	FUNCTION_39
0x4001304	    0x41c740389f86	         mov dword [r8 + 0x38], 0x1869f 	       966	list.c	FUNCTION_39
0x400130c	      0x41c6404802	                 mov byte [r8 + 0x48], 2	       967	list.c	FUNCTION_39
0x4001311	    0x41c7403c0a00	              mov dword [r8 + 0x3c], 0xa	       968	list.c	FUNCTION_39
0x4001319	          0x498900	                     mov qword [r8], rax	       964	list.c	FUNCTION_39
0x400131c	    0x498d80700100	                   lea rax, [r8 + 0x170]	       965	list.c	FUNCTION_39
0x4001323	        0x49894008	                 mov qword [r8 + 8], rax	       965	list.c	FUNCTION_39
0x4001327	        0x498d4070	                    lea rax, [r8 + 0x70]	       965	list.c	FUNCTION_39
0x400132b	          0x4889c1	                            mov rcx, rax	       965	list.c	FUNCTION_39
0x400132e	            0xeb1c	                           jmp 0x400134c	       965	list.c	FUNCTION_39
0x4001330	          0x83fa09	                              cmp edx, 9	       978	list.c	FUNCTION_39	FOR_1	IF_2
0x4001333	        0x488970e8	             mov qword [rax - 0x18], rsi	       977	list.c	FUNCTION_39	FOR_1	ELSE_1
0x4001337	            0x7437	                            je 0x4001370	       978	list.c	FUNCTION_39	FOR_1	IF_2
0x4001339	        0x488948e0	             mov qword [rax - 0x20], rcx	       981	list.c	FUNCTION_39	FOR_1	ELSE_2
0x400133d	          0x83c201	                              add edx, 1	       970	list.c	FUNCTION_39	FOR_1
0x4001340	        0x4883c020	                           add rax, 0x20	       970	list.c	FUNCTION_39	FOR_1
0x4001344	        0x4883c120	                           add rcx, 0x20	       970	list.c	FUNCTION_39	FOR_1
0x4001348	        0x4883c620	                           add rsi, 0x20	       970	list.c	FUNCTION_39	FOR_1
0x400134c	            0x85d2	                           test edx, edx	       974	list.c	FUNCTION_39	FOR_1	IF_1
0x400134e	            0x75e0	                           jne 0x4001330	       974	list.c	FUNCTION_39	FOR_1	IF_1
0x4001350	    0x49c740580000	                mov qword [r8 + 0x58], 0	       975	list.c	FUNCTION_39	FOR_1	IF_1
0x4001358	        0x4883c020	                           add rax, 0x20	       975	list.c	FUNCTION_39	FOR_1	IF_1
0x400135c	        0x488948c0	             mov qword [rax - 0x40], rcx	       981	list.c	FUNCTION_39	FOR_1	ELSE_2
0x4001360	        0x4883c620	                           add rsi, 0x20	       981	list.c	FUNCTION_39	FOR_1	ELSE_2
0x4001364	        0x4883c120	                           add rcx, 0x20	       981	list.c	FUNCTION_39	FOR_1	ELSE_2
0x4001368	      0xba01000000	                              mov edx, 1	       970	list.c	FUNCTION_39	FOR_1
0x400136d	            0xebc1	                           jmp 0x4001330	       970	list.c	FUNCTION_39	FOR_1
0x400136f	              0x90	                                     nop	       970	list.c	FUNCTION_39	FOR_1
0x4001370	    0x49c780700100	               mov qword [r8 + 0x170], 0	       979	list.c	FUNCTION_39	FOR_1	IF_2
0x400137b	              0xc3	                                     ret	       983	list.c	FUNCTION_39
list_append_number	DO,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:IF,1:CALL,2:functions,0	36
0x4000850	              0x55	                                push rbp	       527	list.c	FUNCTION_27
0x4000851	              0x53	                                push rbx	       527	list.c	FUNCTION_27
0x4000852	          0x4889fb	                            mov rbx, rdi	       527	list.c	FUNCTION_27
0x4000855	      0xbf20000000	                           mov edi, 0x20	       220	list.c	FUNCTION_13	CALL_1
0x400085a	          0x4889f5	                            mov rbp, rsi	       527	list.c	FUNCTION_27
0x400085d	        0x4883ec08	                              sub rsp, 8	       527	list.c	FUNCTION_27
0x4000861	      0xe800000000	                          call 0x4000866	       220	list.c	FUNCTION_13	CALL_1
0x4000866	          0x4885c0	                           test rax, rax	       531	list.c	FUNCTION_27	IF_1
0x4000869	            0x7455	                            je 0x40008c0	       531	list.c	FUNCTION_27	IF_1
0x400086b	        0xc6401400	                mov byte [rax + 0x14], 0	       534	list.c	FUNCTION_27
0x400086f	        0x48896818	             mov qword [rax + 0x18], rbp	       535	list.c	FUNCTION_27
0x4000873	        0x488b5308	                mov rdx, qword [rbx + 8]	       425	list.c	FUNCTION_22	IF_1
0x4000877	    0xc74010010000	               mov dword [rax + 0x10], 1	       533	list.c	FUNCTION_27
0x400087e	          0x4885d2	                           test rdx, rdx	       425	list.c	FUNCTION_22	IF_1
0x4000881	            0x7425	                            je 0x40008a8	       425	list.c	FUNCTION_22	IF_1
0x4000883	          0x488902	                    mov qword [rdx], rax	       434	list.c	FUNCTION_22	ELSE_1
0x4000886	        0x48895008	                mov qword [rax + 8], rdx	       435	list.c	FUNCTION_22	ELSE_1
0x400088a	        0x48894308	                mov qword [rbx + 8], rax	       436	list.c	FUNCTION_22	ELSE_1
0x400088e	        0x83433c01	               add dword [rbx + 0x3c], 1	       438	list.c	FUNCTION_22
0x4000892	    0x48c700000000	                      mov qword [rax], 0	       439	list.c	FUNCTION_22
0x4000899	        0x4883c408	                              add rsp, 8	       538	list.c	FUNCTION_27
0x400089d	      0xb801000000	                              mov eax, 1	       537	list.c	FUNCTION_27
0x40008a2	              0x5b	                                 pop rbx	       538	list.c	FUNCTION_27
0x40008a3	              0x5d	                                 pop rbp	       538	list.c	FUNCTION_27
0x40008a4	              0xc3	                                     ret	       538	list.c	FUNCTION_27
0x40008a5	           0xf1f00	                         nop dword [rax]	       538	list.c	FUNCTION_27
0x40008a8	          0x488903	                    mov qword [rbx], rax	       428	list.c	FUNCTION_22	IF_1
0x40008ab	        0x48894308	                mov qword [rbx + 8], rax	       429	list.c	FUNCTION_22	IF_1
0x40008af	    0x48c740080000	                  mov qword [rax + 8], 0	       430	list.c	FUNCTION_22	IF_1
0x40008b7	            0xebd5	                           jmp 0x400088e	       430	list.c	FUNCTION_22	IF_1
0x40008b9	     0xf1f80000000	                         nop dword [rax]	       430	list.c	FUNCTION_22	IF_1
0x40008c0	        0x4883c408	                              add rsp, 8	       538	list.c	FUNCTION_27
0x40008c4	            0x31c0	                            xor eax, eax	       532	list.c	FUNCTION_27	IF_1
0x40008c6	              0x5b	                                 pop rbx	       538	list.c	FUNCTION_27
0x40008c7	              0x5d	                                 pop rbp	       538	list.c	FUNCTION_27
0x40008c8	              0xc3	                                     ret	       538	list.c	FUNCTION_27
list_append_dict	DO,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:IF,1:CALL,2:functions,0	37
0x4000660	              0x55	                                push rbp	       464	list.c	FUNCTION_24
0x4000661	              0x53	                                push rbx	       464	list.c	FUNCTION_24
0x4000662	          0x4889fb	                            mov rbx, rdi	       464	list.c	FUNCTION_24
0x4000665	      0xbf20000000	                           mov edi, 0x20	       220	list.c	FUNCTION_13	CALL_1
0x400066a	          0x4889f5	                            mov rbp, rsi	       464	list.c	FUNCTION_24
0x400066d	        0x4883ec08	                              sub rsp, 8	       464	list.c	FUNCTION_24
0x4000671	      0xe800000000	                          call 0x4000676	       220	list.c	FUNCTION_13	CALL_1
0x4000676	          0x4885c0	                           test rax, rax	       467	list.c	FUNCTION_24	IF_1
0x4000679	            0x745d	                            je 0x40006d8	       467	list.c	FUNCTION_24	IF_1
0x400067b	        0xc6401400	                mov byte [rax + 0x14], 0	       470	list.c	FUNCTION_24
0x400067f	        0x48896818	             mov qword [rax + 0x18], rbp	       471	list.c	FUNCTION_24
0x4000683	        0x488b5308	                mov rdx, qword [rbx + 8]	       425	list.c	FUNCTION_22	IF_1
0x4000687	    0xc74010060000	               mov dword [rax + 0x10], 6	       469	list.c	FUNCTION_24
0x400068e	          0x4885d2	                           test rdx, rdx	       425	list.c	FUNCTION_22	IF_1
0x4000691	            0x742d	                            je 0x40006c0	       425	list.c	FUNCTION_22	IF_1
0x4000693	          0x488902	                    mov qword [rdx], rax	       434	list.c	FUNCTION_22	ELSE_1
0x4000696	        0x48895008	                mov qword [rax + 8], rdx	       435	list.c	FUNCTION_22	ELSE_1
0x400069a	        0x48894308	                mov qword [rbx + 8], rax	       436	list.c	FUNCTION_22	ELSE_1
0x400069e	        0x83433c01	               add dword [rbx + 0x3c], 1	       438	list.c	FUNCTION_22
0x40006a2	    0x48c700000000	                      mov qword [rax], 0	       439	list.c	FUNCTION_22
0x40006a9	      0xb801000000	                              mov eax, 1	       474	list.c	FUNCTION_24
0x40006ae	        0x83450401	                  add dword [rbp + 4], 1	       473	list.c	FUNCTION_24
0x40006b2	        0x4883c408	                              add rsp, 8	       475	list.c	FUNCTION_24
0x40006b6	              0x5b	                                 pop rbx	       475	list.c	FUNCTION_24
0x40006b7	              0x5d	                                 pop rbp	       475	list.c	FUNCTION_24
0x40006b8	              0xc3	                                     ret	       475	list.c	FUNCTION_24
0x40006b9	     0xf1f80000000	                         nop dword [rax]	       475	list.c	FUNCTION_24
0x40006c0	          0x488903	                    mov qword [rbx], rax	       428	list.c	FUNCTION_22	IF_1
0x40006c3	        0x48894308	                mov qword [rbx + 8], rax	       429	list.c	FUNCTION_22	IF_1
0x40006c7	    0x48c740080000	                  mov qword [rax + 8], 0	       430	list.c	FUNCTION_22	IF_1
0x40006cf	            0xebcd	                           jmp 0x400069e	       430	list.c	FUNCTION_22	IF_1
0x40006d1	     0xf1f80000000	                         nop dword [rax]	       430	list.c	FUNCTION_22	IF_1
0x40006d8	        0x4883c408	                              add rsp, 8	       475	list.c	FUNCTION_24
0x40006dc	            0x31c0	                            xor eax, eax	       468	list.c	FUNCTION_24	IF_1
0x40006de	              0x5b	                                 pop rbx	       475	list.c	FUNCTION_24
0x40006df	              0x5d	                                 pop rbp	       475	list.c	FUNCTION_24
0x40006e0	              0xc3	                                     ret	       475	list.c	FUNCTION_24
listitem_remove	DO,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:IF,0:CALL,2:functions,0	9
0x4000c50	              0x53	                                push rbx	       238	list.c	FUNCTION_15
0x4000c51	          0x4889f2	                            mov rdx, rsi	       239	list.c	FUNCTION_15	CALL_1
0x4000c54	          0x4889f3	                            mov rbx, rsi	       238	list.c	FUNCTION_15
0x4000c57	      0xe800000000	                          call 0x4000c5c	       239	list.c	FUNCTION_15	CALL_1
0x4000c5c	        0x488d7e10	                   lea rdi, [rsi + 0x10]	       229	list.c	FUNCTION_14	CALL_1
0x4000c60	      0xe800000000	                          call 0x4000c65	       229	list.c	FUNCTION_14	CALL_1
0x4000c65	          0x4889df	                            mov rdi, rbx	       230	list.c	FUNCTION_14	CALL_2
0x4000c68	              0x5b	                                 pop rbx	       241	list.c	FUNCTION_15
0x4000c69	      0xe900000000	                           jmp 0x4000c6e	       230	list.c	FUNCTION_14	CALL_2
list_find_nr	DO,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:IF,2:CALL,2:functions,0	16
0x40004e0	        0x4883ec08	                              sub rsp, 8	       369	list.c	FUNCTION_19
0x40004e4	          0x4989d2	                            mov r10, rdx	       369	list.c	FUNCTION_19
0x40004e7	      0xe800000000	                          call 0x40004ec	       372	list.c	FUNCTION_19	CALL_1
0x40004ec	          0x4885c0	                           test rax, rax	       373	list.c	FUNCTION_19	IF_1
0x40004ef	            0x7417	                            je 0x4000508	       373	list.c	FUNCTION_19	IF_1
0x40004f1	        0x488d7810	                   lea rdi, [rax + 0x10]	       379	list.c	FUNCTION_19	CALL_2
0x40004f5	          0x4c89d6	                            mov rsi, r10	       379	list.c	FUNCTION_19	CALL_2
0x40004f8	        0x4883c408	                              add rsp, 8	       380	list.c	FUNCTION_19
0x40004fc	      0xe900000000	                           jmp 0x4000501	       379	list.c	FUNCTION_19	CALL_2
0x4000501	     0xf1f80000000	                         nop dword [rax]	       379	list.c	FUNCTION_19	CALL_2
0x4000508	          0x4d85d2	                           test r10, r10	       375	list.c	FUNCTION_19	IF_1	IF_2
0x400050b	            0x7407	                            je 0x4000514	       375	list.c	FUNCTION_19	IF_1	IF_2
0x400050d	    0x41c702010000	                      mov dword [r10], 1	       376	list.c	FUNCTION_19	IF_1	IF_2
0x4000514	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       380	list.c	FUNCTION_19
0x400051b	        0x4883c408	                              add rsp, 8	       380	list.c	FUNCTION_19
0x400051f	              0xc3	                                     ret	       380	list.c	FUNCTION_19
list_append_list	DO,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:IF,1:CALL,2:functions,0	37
0x40006f0	              0x55	                                push rbp	       485	list.c	FUNCTION_25
0x40006f1	              0x53	                                push rbx	       485	list.c	FUNCTION_25
0x40006f2	          0x4889fb	                            mov rbx, rdi	       485	list.c	FUNCTION_25
0x40006f5	      0xbf20000000	                           mov edi, 0x20	       220	list.c	FUNCTION_13	CALL_1
0x40006fa	          0x4889f5	                            mov rbp, rsi	       485	list.c	FUNCTION_25
0x40006fd	        0x4883ec08	                              sub rsp, 8	       485	list.c	FUNCTION_25
0x4000701	      0xe800000000	                          call 0x4000706	       220	list.c	FUNCTION_13	CALL_1
0x4000706	          0x4885c0	                           test rax, rax	       488	list.c	FUNCTION_25	IF_1
0x4000709	            0x745d	                            je 0x4000768	       488	list.c	FUNCTION_25	IF_1
0x400070b	        0xc6401400	                mov byte [rax + 0x14], 0	       491	list.c	FUNCTION_25
0x400070f	        0x48896818	             mov qword [rax + 0x18], rbp	       492	list.c	FUNCTION_25
0x4000713	        0x488b5308	                mov rdx, qword [rbx + 8]	       425	list.c	FUNCTION_22	IF_1
0x4000717	    0xc74010050000	               mov dword [rax + 0x10], 5	       490	list.c	FUNCTION_25
0x400071e	          0x4885d2	                           test rdx, rdx	       425	list.c	FUNCTION_22	IF_1
0x4000721	            0x742d	                            je 0x4000750	       425	list.c	FUNCTION_22	IF_1
0x4000723	          0x488902	                    mov qword [rdx], rax	       434	list.c	FUNCTION_22	ELSE_1
0x4000726	        0x48895008	                mov qword [rax + 8], rdx	       435	list.c	FUNCTION_22	ELSE_1
0x400072a	        0x48894308	                mov qword [rbx + 8], rax	       436	list.c	FUNCTION_22	ELSE_1
0x400072e	        0x83433c01	               add dword [rbx + 0x3c], 1	       438	list.c	FUNCTION_22
0x4000732	    0x48c700000000	                      mov qword [rax], 0	       439	list.c	FUNCTION_22
0x4000739	      0xb801000000	                              mov eax, 1	       495	list.c	FUNCTION_25
0x400073e	        0x83453801	               add dword [rbp + 0x38], 1	       494	list.c	FUNCTION_25
0x4000742	        0x4883c408	                              add rsp, 8	       496	list.c	FUNCTION_25
0x4000746	              0x5b	                                 pop rbx	       496	list.c	FUNCTION_25
0x4000747	              0x5d	                                 pop rbp	       496	list.c	FUNCTION_25
0x4000748	              0xc3	                                     ret	       496	list.c	FUNCTION_25
0x4000749	     0xf1f80000000	                         nop dword [rax]	       496	list.c	FUNCTION_25
0x4000750	          0x488903	                    mov qword [rbx], rax	       428	list.c	FUNCTION_22	IF_1
0x4000753	        0x48894308	                mov qword [rbx + 8], rax	       429	list.c	FUNCTION_22	IF_1
0x4000757	    0x48c740080000	                  mov qword [rax + 8], 0	       430	list.c	FUNCTION_22	IF_1
0x400075f	            0xebcd	                           jmp 0x400072e	       430	list.c	FUNCTION_22	IF_1
0x4000761	     0xf1f80000000	                         nop dword [rax]	       430	list.c	FUNCTION_22	IF_1
0x4000768	        0x4883c408	                              add rsp, 8	       496	list.c	FUNCTION_25
0x400076c	            0x31c0	                            xor eax, eax	       489	list.c	FUNCTION_25	IF_1
0x400076e	              0x5b	                                 pop rbx	       496	list.c	FUNCTION_25
0x400076f	              0x5d	                                 pop rbp	       496	list.c	FUNCTION_25
0x4000770	              0xc3	                                     ret	       496	list.c	FUNCTION_25
list_idx_of_item	DO,0:ELSE,0:FOR,1:WHILE,0:SWITCH,0:IF,2:CALL,0:functions,0	22
0x4000560	          0x4885ff	                           test rdi, rdi	       409	list.c	FUNCTION_21	IF_1
0x4000563	            0x743b	                            je 0x40005a0	       409	list.c	FUNCTION_21	IF_1
0x4000565	          0x488b17	                    mov rdx, qword [rdi]	       412	list.c	FUNCTION_21	FOR_1
0x4000568	            0x31c0	                            xor eax, eax	       412	list.c	FUNCTION_21	FOR_1
0x400056a	          0x4839f2	                            cmp rdx, rsi	       412	list.c	FUNCTION_21	FOR_1
0x400056d	            0x7422	                            je 0x4000591	       412	list.c	FUNCTION_21	FOR_1
0x400056f	          0x4885d2	                           test rdx, rdx	       412	list.c	FUNCTION_21	FOR_1
0x4000572	            0x7511	                           jne 0x4000585	       412	list.c	FUNCTION_21	FOR_1
0x4000574	            0xeb1b	                           jmp 0x4000591	       412	list.c	FUNCTION_21	FOR_1
0x4000576	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       412	list.c	FUNCTION_21	FOR_1
0x4000580	          0x4839d6	                            cmp rsi, rdx	       412	list.c	FUNCTION_21	FOR_1
0x4000583	            0x740c	                            je 0x4000591	       412	list.c	FUNCTION_21	FOR_1
0x4000585	          0x488b12	                    mov rdx, qword [rdx]	       412	list.c	FUNCTION_21	FOR_1
0x4000588	        0x4883c001	                              add rax, 1	       413	list.c	FUNCTION_21	FOR_1
0x400058c	          0x4885d2	                           test rdx, rdx	       412	list.c	FUNCTION_21	FOR_1
0x400058f	            0x75ef	                           jne 0x4000580	       412	list.c	FUNCTION_21	FOR_1
0x4000591	          0x4885d2	                           test rdx, rdx	       414	list.c	FUNCTION_21	IF_2
0x4000594	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       414	list.c	FUNCTION_21	IF_2
0x400059b	        0x480f44c2	                          cmove rax, rdx	       414	list.c	FUNCTION_21	IF_2
0x400059f	              0xc3	                                     ret	       414	list.c	FUNCTION_21	IF_2
0x40005a0	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       410	list.c	FUNCTION_21	IF_1
0x40005a7	              0xc3	                                     ret	       417	list.c	FUNCTION_21
list_copy	DO,0:ELSE,1:FOR,1:WHILE,0:SWITCH,0:IF,7:CALL,7:functions,0	93
0x4000a20	          0x4885ff	                           test rdi, rdi	       638	list.c	FUNCTION_32	IF_1
0x4000a23	     0xf8427010000	                            je 0x4000b50	       638	list.c	FUNCTION_32	IF_1
0x4000a29	            0x4156	                                push r14	       633	list.c	FUNCTION_32
0x4000a2b	            0x4155	                                push r13	       633	list.c	FUNCTION_32
0x4000a2d	          0x4189d6	                           mov r14d, edx	       633	list.c	FUNCTION_32
0x4000a30	            0x4154	                                push r12	       633	list.c	FUNCTION_32
0x4000a32	              0x55	                                push rbp	       633	list.c	FUNCTION_32
0x4000a33	          0x4189f5	                           mov r13d, esi	       633	list.c	FUNCTION_32
0x4000a36	              0x53	                                push rbx	       633	list.c	FUNCTION_32
0x4000a37	          0x4889fb	                            mov rbx, rdi	       633	list.c	FUNCTION_32
0x4000a3a	      0xe800000000	                          call 0x4000a3f	       641	list.c	FUNCTION_32	CALL_1
0x4000a3f	          0x4885c0	                           test rax, rax	       642	list.c	FUNCTION_32	IF_2
0x4000a42	          0x4889c5	                            mov rbp, rax	       641	list.c	FUNCTION_32	CALL_1
0x4000a45	     0xf84d6000000	                            je 0x4000b21	       642	list.c	FUNCTION_32	IF_2
0x4000a4b	          0x4585f6	                         test r14d, r14d	       644	list.c	FUNCTION_32	IF_2	IF_3
0x4000a4e	     0xf85dc000000	                           jne 0x4000b30	       644	list.c	FUNCTION_32	IF_2	IF_3
0x4000a54	          0x4c8b23	                    mov r12, qword [rbx]	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x4000a57	          0x4d85e4	                           test r12, r12	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x4000a5a	            0x7547	                           jne 0x4000aa3	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x4000a5c	      0xe9df000000	                           jmp 0x4000b40	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x4000a61	     0xf1f80000000	                         nop dword [rax]	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x4000a68	          0x4489f1	                           mov ecx, r14d	       659	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6	CALL_3
0x4000a6b	          0x4489ea	                           mov edx, r13d	       659	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6	CALL_3
0x4000a6e	      0xe800000000	                          call 0x4000a73	       659	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6	CALL_3
0x4000a73	            0x85c0	                           test eax, eax	       659	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6	CALL_3
0x4000a75	            0x7479	                            je 0x4000af0	       659	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6	CALL_3
0x4000a77	        0x488b4508	                mov rax, qword [rbp + 8]	       425	list.c	FUNCTION_22	IF_1
0x4000a7b	          0x4885c0	                           test rax, rax	       425	list.c	FUNCTION_22	IF_1
0x4000a7e	            0x745b	                            je 0x4000adb	       425	list.c	FUNCTION_22	IF_1
0x4000a80	          0x488918	                    mov qword [rax], rbx	       434	list.c	FUNCTION_22	ELSE_1
0x4000a83	        0x48894308	                mov qword [rbx + 8], rax	       435	list.c	FUNCTION_22	ELSE_1
0x4000a87	        0x48895d08	                mov qword [rbp + 8], rbx	       436	list.c	FUNCTION_22	ELSE_1
0x4000a8b	        0x83453c01	               add dword [rbp + 0x3c], 1	       438	list.c	FUNCTION_22
0x4000a8f	    0x48c703000000	                      mov qword [rbx], 0	       439	list.c	FUNCTION_22
0x4000a96	        0x4d8b2424	                    mov r12, qword [r12]	       652	list.c	FUNCTION_32	IF_2	FOR_1
0x4000a9a	          0x4d85e4	                           test r12, r12	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x4000a9d	     0xf849d000000	                            je 0x4000b40	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x4000aa3	    0x8b0500000000	            mov eax, dword [0x04000aa9] 	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x4000aa9	            0x85c0	                           test eax, eax	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x4000aab	            0x7553	                           jne 0x4000b00	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x4000aad	      0xbf20000000	                           mov edi, 0x20	       220	list.c	FUNCTION_13	CALL_1
0x4000ab2	      0xe800000000	                          call 0x4000ab7	       220	list.c	FUNCTION_13	CALL_1
0x4000ab7	          0x4885c0	                           test rax, rax	       655	list.c	FUNCTION_32	IF_2	FOR_1	IF_4
0x4000aba	          0x4889c3	                            mov rbx, rax	       220	list.c	FUNCTION_13	CALL_1
0x4000abd	            0x7441	                            je 0x4000b00	       655	list.c	FUNCTION_32	IF_2	FOR_1	IF_4
0x4000abf	          0x4585ed	                         test r13d, r13d	       657	list.c	FUNCTION_32	IF_2	FOR_1	IF_5
0x4000ac2	        0x488d7010	                   lea rsi, [rax + 0x10]	       659	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6	CALL_3
0x4000ac6	      0x498d7c2410	                   lea rdi, [r12 + 0x10]	       659	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6	CALL_3
0x4000acb	            0x759b	                           jne 0x4000a68	       657	list.c	FUNCTION_32	IF_2	FOR_1	IF_5
0x4000acd	      0xe800000000	                          call 0x4000ad2	       666	list.c	FUNCTION_32	IF_2	FOR_1	CALL_5
0x4000ad2	        0x488b4508	                mov rax, qword [rbp + 8]	       425	list.c	FUNCTION_22	IF_1
0x4000ad6	          0x4885c0	                           test rax, rax	       425	list.c	FUNCTION_22	IF_1
0x4000ad9	            0x75a5	                           jne 0x4000a80	       425	list.c	FUNCTION_22	IF_1
0x4000adb	        0x48895d00	                    mov qword [rbp], rbx	       428	list.c	FUNCTION_22	IF_1
0x4000adf	        0x48895d08	                mov qword [rbp + 8], rbx	       429	list.c	FUNCTION_22	IF_1
0x4000ae3	    0x48c743080000	                  mov qword [rbx + 8], 0	       430	list.c	FUNCTION_22	IF_1
0x4000aeb	            0xeb9e	                           jmp 0x4000a8b	       430	list.c	FUNCTION_22	IF_1
0x4000aed	           0xf1f00	                         nop dword [rax]	       430	list.c	FUNCTION_22	IF_1
0x4000af0	          0x4889df	                            mov rdi, rbx	       661	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6	CALL_4
0x4000af3	      0xe800000000	                          call 0x4000af8	       661	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6	CALL_4
0x4000af8	     0xf1f84000000	                   nop dword [rax + rax]	       661	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6	CALL_4
0x4000b00	          0x8b4538	            mov eax, dword [rbp + 0x38] 	       124	list.c	FUNCTION_7	IF_1
0x4000b03	            0x85c0	                           test eax, eax	       124	list.c	FUNCTION_7	IF_1
0x4000b05	            0x7f1a	                            jg 0x4000b21	       124	list.c	FUNCTION_7	IF_1
0x4000b07	    0x8b1500000000	            mov edx, dword [0x04000b0d] 	       206	list.c	FUNCTION_12	IF_1
0x4000b0d	            0x85d2	                           test edx, edx	       206	list.c	FUNCTION_12	IF_1
0x4000b0f	            0x7510	                           jne 0x4000b21	       206	list.c	FUNCTION_12	IF_1
0x4000b11	          0x4889ef	                            mov rdi, rbp	       208	list.c	FUNCTION_12	IF_1	CALL_1
0x4000b14	      0xe867f5ffff	      call sym.list_free_contents.isra.0	       208	list.c	FUNCTION_12	IF_1	CALL_1
0x4000b19	          0x4889ef	                            mov rdi, rbp	       209	list.c	FUNCTION_12	IF_1	CALL_2
0x4000b1c	      0xe81ff5ffff	                 call sym.list_free_list	       209	list.c	FUNCTION_12	IF_1	CALL_2
0x4000b21	              0x5b	                                 pop rbx	       678	list.c	FUNCTION_32
0x4000b22	            0x31c0	                            xor eax, eax	       673	list.c	FUNCTION_32	IF_2	IF_7
0x4000b24	              0x5d	                                 pop rbp	       678	list.c	FUNCTION_32
0x4000b25	            0x415c	                                 pop r12	       678	list.c	FUNCTION_32
0x4000b27	            0x415d	                                 pop r13	       678	list.c	FUNCTION_32
0x4000b29	            0x415e	                                 pop r14	       678	list.c	FUNCTION_32
0x4000b2b	              0xc3	                                     ret	       678	list.c	FUNCTION_32
0x4000b2c	         0xf1f4000	                         nop dword [rax]	       678	list.c	FUNCTION_32
0x4000b30	        0x44897344	            mov dword [rbx + 0x44], r14d	       648	list.c	FUNCTION_32	IF_2	IF_3
0x4000b34	        0x48894320	             mov qword [rbx + 0x20], rax	       649	list.c	FUNCTION_32	IF_2	IF_3
0x4000b38	      0xe917ffffff	                           jmp 0x4000a54	       649	list.c	FUNCTION_32	IF_2	IF_3
0x4000b3d	           0xf1f00	                         nop dword [rax]	       649	list.c	FUNCTION_32	IF_2	IF_3
0x4000b40	        0x83453801	               add dword [rbp + 0x38], 1	       669	list.c	FUNCTION_32	IF_2
0x4000b44	          0x4889e8	                            mov rax, rbp	       669	list.c	FUNCTION_32	IF_2
0x4000b47	              0x5b	                                 pop rbx	       678	list.c	FUNCTION_32
0x4000b48	              0x5d	                                 pop rbp	       678	list.c	FUNCTION_32
0x4000b49	            0x415c	                                 pop r12	       678	list.c	FUNCTION_32
0x4000b4b	            0x415d	                                 pop r13	       678	list.c	FUNCTION_32
0x4000b4d	            0x415e	                                 pop r14	       678	list.c	FUNCTION_32
0x4000b4f	              0xc3	                                     ret	       678	list.c	FUNCTION_32
0x4000b50	            0x31c0	                            xor eax, eax	       639	list.c	FUNCTION_32	IF_1
0x4000b52	              0xc3	                                     ret	       678	list.c	FUNCTION_32
list2string	DO,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:IF,2:CALL,6:functions,0	52
0x4000ef0	            0x4154	                                push r12	       717	list.c	ELSE_2	FUNCTION_34
0x4000ef2	              0x55	                                push rbp	       717	list.c	ELSE_2	FUNCTION_34
0x4000ef3	              0x53	                                push rbx	       717	list.c	ELSE_2	FUNCTION_34
0x4000ef4	        0x4883ec20	                           sub rsp, 0x20	       717	list.c	ELSE_2	FUNCTION_34
0x4000ef8	    0x64488b042528	                mov rax, qword fs:[0x28]	       717	list.c	ELSE_2	FUNCTION_34
0x4000f01	      0x4889442418	             mov qword [rsp + 0x18], rax	       717	list.c	ELSE_2	FUNCTION_34
0x4000f06	            0x31c0	                            xor eax, eax	       717	list.c	ELSE_2	FUNCTION_34
0x4000f08	      0x48837f0800	                  cmp qword [rdi + 8], 0	       720	list.c	ELSE_2	FUNCTION_34	IF_1
0x4000f0d	     0xf848d000000	                            je 0x4000fa0	       720	list.c	ELSE_2	FUNCTION_34	IF_1
0x4000f13	          0x4889fb	                            mov rbx, rdi	       720	list.c	ELSE_2	FUNCTION_34	IF_1
0x4000f16	          0x4189f4	                           mov r12d, esi	       720	list.c	ELSE_2	FUNCTION_34	IF_1
0x4000f19	            0x89d5	                            mov ebp, edx	       720	list.c	ELSE_2	FUNCTION_34	IF_1
0x4000f1b	      0xbe01000000	                              mov esi, 1	       722	list.c	ELSE_2	FUNCTION_34	CALL_1
0x4000f20	      0xba50000000	                           mov edx, 0x50	       722	list.c	ELSE_2	FUNCTION_34	CALL_1
0x4000f25	          0x4889e7	                            mov rdi, rsp	       722	list.c	ELSE_2	FUNCTION_34	CALL_1
0x4000f28	      0xe800000000	                          call 0x4000f2d	       722	list.c	ELSE_2	FUNCTION_34	CALL_1
0x4000f2d	      0xbe5b000000	                           mov esi, 0x5b	       723	list.c	ELSE_2	FUNCTION_34	CALL_2
0x4000f32	          0x4889e7	                            mov rdi, rsp	       723	list.c	ELSE_2	FUNCTION_34	CALL_2
0x4000f35	      0xe800000000	                          call 0x4000f3a	       723	list.c	ELSE_2	FUNCTION_34	CALL_2
0x4000f3a	        0x488b7308	                mov rsi, qword [rbx + 8]	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4000f3e	            0x31c9	                            xor ecx, ecx	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4000f40	          0x4589e1	                           mov r9d, r12d	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4000f43	          0x4189e8	                            mov r8d, ebp	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4000f46	      0xba00000000	                              mov edx, 0	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4000f4b	          0x4889e7	                            mov rdi, rsp	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4000f4e	      0xe800000000	                          call 0x4000f53	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4000f53	            0x85c0	                           test eax, eax	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4000f55	            0x7439	                            je 0x4000f90	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4000f57	      0xbe5d000000	                           mov esi, 0x5d	       730	list.c	ELSE_2	FUNCTION_34	CALL_5
0x4000f5c	          0x4889e7	                            mov rdi, rsp	       730	list.c	ELSE_2	FUNCTION_34	CALL_5
0x4000f5f	      0xe800000000	                          call 0x4000f64	       730	list.c	ELSE_2	FUNCTION_34	CALL_5
0x4000f64	            0x31f6	                            xor esi, esi	       731	list.c	ELSE_2	FUNCTION_34	CALL_6
0x4000f66	          0x4889e7	                            mov rdi, rsp	       731	list.c	ELSE_2	FUNCTION_34	CALL_6
0x4000f69	      0xe800000000	                          call 0x4000f6e	       731	list.c	ELSE_2	FUNCTION_34	CALL_6
0x4000f6e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       732	list.c	ELSE_2	FUNCTION_34
0x4000f73	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       733	list.c	ELSE_2	FUNCTION_34
0x4000f78	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       733	list.c	ELSE_2	FUNCTION_34
0x4000f81	            0x7521	                           jne 0x4000fa4	       733	list.c	ELSE_2	FUNCTION_34
0x4000f83	        0x4883c420	                           add rsp, 0x20	       733	list.c	ELSE_2	FUNCTION_34
0x4000f87	              0x5b	                                 pop rbx	       733	list.c	ELSE_2	FUNCTION_34
0x4000f88	              0x5d	                                 pop rbp	       733	list.c	ELSE_2	FUNCTION_34
0x4000f89	            0x415c	                                 pop r12	       733	list.c	ELSE_2	FUNCTION_34
0x4000f8b	              0xc3	                                     ret	       733	list.c	ELSE_2	FUNCTION_34
0x4000f8c	         0xf1f4000	                         nop dword [rax]	       733	list.c	ELSE_2	FUNCTION_34
0x4000f90	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       727	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_4
0x4000f95	      0xe800000000	                          call 0x4000f9a	       727	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_4
0x4000f9a	            0x31c0	                            xor eax, eax	       728	list.c	ELSE_2	FUNCTION_34	IF_2
0x4000f9c	            0xebd5	                           jmp 0x4000f73	       728	list.c	ELSE_2	FUNCTION_34	IF_2
0x4000f9e	            0x6690	                                     nop	       728	list.c	ELSE_2	FUNCTION_34	IF_2
0x4000fa0	            0x31c0	                            xor eax, eax	       721	list.c	ELSE_2	FUNCTION_34	IF_1
0x4000fa2	            0xebcf	                           jmp 0x4000f73	       721	list.c	ELSE_2	FUNCTION_34	IF_1
0x4000fa4	      0xe800000000	                          call 0x4000fa9	       733	list.c	ELSE_2	FUNCTION_34
rettv_list_alloc	DO,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:IF,1:CALL,2:functions,0	16
0x4000190	              0x53	                                push rbx	        94	list.c	FUNCTION_5
0x4000191	          0x4889fb	                            mov rbx, rdi	        94	list.c	FUNCTION_5
0x4000194	      0xe800000000	                          call 0x4000199	        95	list.c	FUNCTION_5	CALL_1
0x4000199	          0x4885c0	                           test rax, rax	        97	list.c	FUNCTION_5	IF_1
0x400019c	            0x7422	                            je 0x40001c0	        97	list.c	FUNCTION_5	IF_1
0x400019e	        0x48894308	                mov qword [rbx + 8], rax	       112	list.c	FUNCTION_6
0x40001a2	        0xc6430400	                   mov byte [rbx + 4], 0	       100	list.c	FUNCTION_5
0x40001a6	    0xc70305000000	                      mov dword [rbx], 5	       111	list.c	FUNCTION_6
0x40001ac	        0x83403801	               add dword [rax + 0x38], 1	       114	list.c	FUNCTION_6	IF_1
0x40001b0	      0xb801000000	                              mov eax, 1	       102	list.c	FUNCTION_5
0x40001b5	              0x5b	                                 pop rbx	       103	list.c	FUNCTION_5
0x40001b6	              0xc3	                                     ret	       103	list.c	FUNCTION_5
0x40001b7	    0x660f1f840000	                    nop word [rax + rax]	       103	list.c	FUNCTION_5
0x40001c0	            0x31c0	                            xor eax, eax	        98	list.c	FUNCTION_5	IF_1
0x40001c2	              0x5b	                                 pop rbx	       103	list.c	FUNCTION_5
0x40001c3	              0xc3	                                     ret	       103	list.c	FUNCTION_5
list_find_str	DO,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:IF,1:CALL,4:functions,0	20
0x4000520	              0x53	                                push rbx	       387	list.c	FUNCTION_20
0x4000521	          0x4889f3	                            mov rbx, rsi	       387	list.c	FUNCTION_20
0x4000524	        0x4883ee01	                              sub rsi, 1	       390	list.c	FUNCTION_20	CALL_1
0x4000528	      0xe800000000	                          call 0x400052d	       390	list.c	FUNCTION_20	CALL_1
0x400052d	          0x4885c0	                           test rax, rax	       391	list.c	FUNCTION_20	IF_1
0x4000530	            0x740e	                            je 0x4000540	       391	list.c	FUNCTION_20	IF_1
0x4000532	              0x5b	                                 pop rbx	       397	list.c	FUNCTION_20
0x4000533	        0x488d7810	                   lea rdi, [rax + 0x10]	       396	list.c	FUNCTION_20	CALL_4
0x4000537	      0xe900000000	                           jmp 0x400053c	       396	list.c	FUNCTION_20	CALL_4
0x400053c	         0xf1f4000	                         nop dword [rax]	       396	list.c	FUNCTION_20	CALL_4
0x4000540	      0xba05000000	                              mov edx, 5	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x4000545	      0xbe00000000	                              mov esi, 0	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x400054a	            0x31ff	                            xor edi, edi	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x400054c	      0xe800000000	                          call 0x4000551	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x4000551	          0x4889de	                            mov rsi, rbx	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x4000554	          0x4889c7	                            mov rdi, rax	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x4000557	      0xe800000000	                          call 0x400055c	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x400055c	            0x31c0	                            xor eax, eax	       397	list.c	FUNCTION_20
0x400055e	              0x5b	                                 pop rbx	       397	list.c	FUNCTION_20
0x400055f	              0xc3	                                     ret	       397	list.c	FUNCTION_20
list_extend	DO,0:ELSE,0:FOR,1:WHILE,0:SWITCH,0:IF,1:CALL,1:functions,0	41
0x40009b0	            0x4155	                                push r13	       590	list.c	FUNCTION_30
0x40009b2	            0x4154	                                push r12	       590	list.c	FUNCTION_30
0x40009b4	              0x55	                                push rbp	       590	list.c	FUNCTION_30
0x40009b5	              0x53	                                push rbx	       590	list.c	FUNCTION_30
0x40009b6	        0x4883ec08	                              sub rsp, 8	       590	list.c	FUNCTION_30
0x40009ba	          0x488b1e	                    mov rbx, qword [rsi]	       596	list.c	FUNCTION_30	FOR_1
0x40009bd	          0x8b6e3c	            mov ebp, dword [rsi + 0x3c] 	       592	list.c	FUNCTION_30
0x40009c0	          0x4885db	                           test rbx, rbx	       596	list.c	FUNCTION_30	FOR_1
0x40009c3	            0x744b	                            je 0x4000a10	       596	list.c	FUNCTION_30	FOR_1
0x40009c5	          0x83ed01	                              sub ebp, 1	       596	list.c	FUNCTION_30	FOR_1
0x40009c8	          0x4989d5	                            mov r13, rdx	       596	list.c	FUNCTION_30	FOR_1
0x40009cb	          0x4989fc	                            mov r12, rdi	       596	list.c	FUNCTION_30	FOR_1
0x40009ce	            0x7918	                           jns 0x40009e8	       596	list.c	FUNCTION_30	FOR_1
0x40009d0	            0xeb3e	                           jmp 0x4000a10	       596	list.c	FUNCTION_30	FOR_1
0x40009d2	    0x660f1f440000	                    nop word [rax + rax]	       596	list.c	FUNCTION_30	FOR_1
0x40009d8	          0x488b1b	                    mov rbx, qword [rbx]	       596	list.c	FUNCTION_30	FOR_1
0x40009db	          0x4885db	                           test rbx, rbx	       596	list.c	FUNCTION_30	FOR_1
0x40009de	            0x7430	                            je 0x4000a10	       596	list.c	FUNCTION_30	FOR_1
0x40009e0	          0x83ed01	                              sub ebp, 1	       596	list.c	FUNCTION_30	FOR_1
0x40009e3	          0x83fdff	             cmp ebp, 0xffffffffffffffff	       596	list.c	FUNCTION_30	FOR_1
0x40009e6	            0x7428	                            je 0x4000a10	       596	list.c	FUNCTION_30	FOR_1
0x40009e8	        0x488d7310	                   lea rsi, [rbx + 0x10]	       597	list.c	FUNCTION_30	FOR_1	IF_1	CALL_1
0x40009ec	          0x4c89ea	                            mov rdx, r13	       597	list.c	FUNCTION_30	FOR_1	IF_1	CALL_1
0x40009ef	          0x4c89e7	                            mov rdi, r12	       597	list.c	FUNCTION_30	FOR_1	IF_1	CALL_1
0x40009f2	      0xe800000000	                          call 0x40009f7	       597	list.c	FUNCTION_30	FOR_1	IF_1	CALL_1
0x40009f7	            0x85c0	                           test eax, eax	       597	list.c	FUNCTION_30	FOR_1	IF_1	CALL_1
0x40009f9	            0x75dd	                           jne 0x40009d8	       597	list.c	FUNCTION_30	FOR_1	IF_1	CALL_1
0x40009fb	        0x4883c408	                              add rsp, 8	       600	list.c	FUNCTION_30
0x40009ff	              0x5b	                                 pop rbx	       600	list.c	FUNCTION_30
0x4000a00	              0x5d	                                 pop rbp	       600	list.c	FUNCTION_30
0x4000a01	            0x415c	                                 pop r12	       600	list.c	FUNCTION_30
0x4000a03	            0x415d	                                 pop r13	       600	list.c	FUNCTION_30
0x4000a05	              0xc3	                                     ret	       600	list.c	FUNCTION_30
0x4000a06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       600	list.c	FUNCTION_30
0x4000a10	        0x4883c408	                              add rsp, 8	       600	list.c	FUNCTION_30
0x4000a14	      0xb801000000	                              mov eax, 1	       599	list.c	FUNCTION_30
0x4000a19	              0x5b	                                 pop rbx	       600	list.c	FUNCTION_30
0x4000a1a	              0x5d	                                 pop rbp	       600	list.c	FUNCTION_30
0x4000a1b	            0x415c	                                 pop r12	       600	list.c	FUNCTION_30
0x4000a1d	            0x415d	                                 pop r13	       600	list.c	FUNCTION_30
0x4000a1f	              0xc3	                                     ret	       600	list.c	FUNCTION_30
list_append_tv	DO,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:IF,1:CALL,3:functions,0	32
0x40005f0	            0x4154	                                push r12	       448	list.c	FUNCTION_23
0x40005f2	              0x55	                                push rbp	       448	list.c	FUNCTION_23
0x40005f3	          0x4889fd	                            mov rbp, rdi	       448	list.c	FUNCTION_23
0x40005f6	              0x53	                                push rbx	       448	list.c	FUNCTION_23
0x40005f7	      0xbf20000000	                           mov edi, 0x20	       220	list.c	FUNCTION_13	CALL_1
0x40005fc	          0x4989f4	                            mov r12, rsi	       448	list.c	FUNCTION_23
0x40005ff	      0xe800000000	                          call 0x4000604	       220	list.c	FUNCTION_13	CALL_1
0x4000604	          0x4889c3	                            mov rbx, rax	       220	list.c	FUNCTION_13	CALL_1
0x4000607	            0x31c0	                            xor eax, eax	       220	list.c	FUNCTION_13	CALL_1
0x4000609	          0x4885db	                           test rbx, rbx	       451	list.c	FUNCTION_23	IF_1
0x400060c	            0x7430	                            je 0x400063e	       451	list.c	FUNCTION_23	IF_1
0x400060e	        0x488d7310	                   lea rsi, [rbx + 0x10]	       453	list.c	FUNCTION_23	CALL_2
0x4000612	          0x4c89e7	                            mov rdi, r12	       453	list.c	FUNCTION_23	CALL_2
0x4000615	      0xe800000000	                          call 0x400061a	       453	list.c	FUNCTION_23	CALL_2
0x400061a	        0x488b4508	                mov rax, qword [rbp + 8]	       425	list.c	FUNCTION_22	IF_1
0x400061e	          0x4885c0	                           test rax, rax	       425	list.c	FUNCTION_22	IF_1
0x4000621	            0x7425	                            je 0x4000648	       425	list.c	FUNCTION_22	IF_1
0x4000623	          0x488918	                    mov qword [rax], rbx	       434	list.c	FUNCTION_22	ELSE_1
0x4000626	        0x48894308	                mov qword [rbx + 8], rax	       435	list.c	FUNCTION_22	ELSE_1
0x400062a	        0x48895d08	                mov qword [rbp + 8], rbx	       436	list.c	FUNCTION_22	ELSE_1
0x400062e	        0x83453c01	               add dword [rbp + 0x3c], 1	       438	list.c	FUNCTION_22
0x4000632	      0xb801000000	                              mov eax, 1	       455	list.c	FUNCTION_23
0x4000637	    0x48c703000000	                      mov qword [rbx], 0	       439	list.c	FUNCTION_22
0x400063e	              0x5b	                                 pop rbx	       456	list.c	FUNCTION_23
0x400063f	              0x5d	                                 pop rbp	       456	list.c	FUNCTION_23
0x4000640	            0x415c	                                 pop r12	       456	list.c	FUNCTION_23
0x4000642	              0xc3	                                     ret	       456	list.c	FUNCTION_23
0x4000643	       0xf1f440000	                   nop dword [rax + rax]	       456	list.c	FUNCTION_23
0x4000648	        0x48895d00	                    mov qword [rbp], rbx	       428	list.c	FUNCTION_22	IF_1
0x400064c	        0x48895d08	                mov qword [rbp + 8], rbx	       429	list.c	FUNCTION_22	IF_1
0x4000650	    0x48c743080000	                  mov qword [rbx + 8], 0	       430	list.c	FUNCTION_22	IF_1
0x4000658	            0xebd4	                           jmp 0x400062e	       430	list.c	FUNCTION_22	IF_1
list_add_watch	DO,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:IF,0:CALL,0:functions,0	4
0x40000c0	        0x488b4710	            mov rax, qword [rdi + 0x10] 	        27	list.c	FUNCTION_1
0x40000c4	        0x48894608	                mov qword [rsi + 8], rax	        27	list.c	FUNCTION_1
0x40000c8	        0x48897710	             mov qword [rdi + 0x10], rsi	        28	list.c	FUNCTION_1
0x40000cc	              0xc3	                                     ret	        28	list.c	FUNCTION_1
get_list_tv	DO,0:ELSE,1:FOR,0:WHILE,1:SWITCH,0:IF,10:CALL,14:functions,0	137
0x4000fb0	            0x4156	                                push r14	       858	list.c	FUNCTION_37
0x4000fb2	            0x4155	                                push r13	       858	list.c	FUNCTION_37
0x4000fb4	          0x4989f6	                            mov r14, rsi	       858	list.c	FUNCTION_37
0x4000fb7	            0x4154	                                push r12	       858	list.c	FUNCTION_37
0x4000fb9	              0x55	                                push rbp	       858	list.c	FUNCTION_37
0x4000fba	          0x4189d4	                           mov r12d, edx	       858	list.c	FUNCTION_37
0x4000fbd	              0x53	                                push rbx	       858	list.c	FUNCTION_37
0x4000fbe	          0x4889fd	                            mov rbp, rdi	       858	list.c	FUNCTION_37
0x4000fc1	        0x4883ec30	                           sub rsp, 0x30	       858	list.c	FUNCTION_37
0x4000fc5	    0x64488b042528	                mov rax, qword fs:[0x28]	       858	list.c	FUNCTION_37
0x4000fce	      0x4889442428	             mov qword [rsp + 0x28], rax	       858	list.c	FUNCTION_37
0x4000fd3	            0x31c0	                            xor eax, eax	       858	list.c	FUNCTION_37
0x4000fd5	            0x85d2	                           test edx, edx	       863	list.c	FUNCTION_37	IF_1
0x4000fd7	     0xf8483010000	                            je 0x4001160	       863	list.c	FUNCTION_37	IF_1
0x4000fdd	      0xe800000000	                          call 0x4000fe2	       865	list.c	FUNCTION_37	IF_1	CALL_1
0x4000fe2	          0x4885c0	                           test rax, rax	       866	list.c	FUNCTION_37	IF_1	IF_2
0x4000fe5	          0x4989c5	                            mov r13, rax	       865	list.c	FUNCTION_37	IF_1	CALL_1
0x4000fe8	     0xf8449010000	                            je 0x4001137	       866	list.c	FUNCTION_37	IF_1	IF_2
0x4000fee	        0x488b4500	                    mov rax, qword [rbp]	       870	list.c	FUNCTION_37	CALL_2
0x4000ff2	        0x488d7801	                      lea rdi, [rax + 1]	       870	list.c	FUNCTION_37	CALL_2
0x4000ff6	      0xe800000000	                          call 0x4000ffb	       870	list.c	FUNCTION_37	CALL_2
0x4000ffb	          0x4889c3	                            mov rbx, rax	       870	list.c	FUNCTION_37	CALL_2
0x4000ffe	        0x48894500	                    mov qword [rbp], rax	       870	list.c	FUNCTION_37	CALL_2
0x4001002	           0xfb600	                   movzx eax, byte [rax]	       871	list.c	FUNCTION_37	WHILE_1
0x4001005	            0x84c0	                             test al, al	       871	list.c	FUNCTION_37	WHILE_1
0x4001007	     0xf84fb000000	                            je 0x4001108	       871	list.c	FUNCTION_37	WHILE_1
0x400100d	            0x3c5d	                            cmp al, 0x5d	       871	list.c	FUNCTION_37	WHILE_1
0x400100f	            0x7549	                           jne 0x400105a	       871	list.c	FUNCTION_37	WHILE_1
0x4001011	      0xe9f2000000	                           jmp 0x4001108	       871	list.c	FUNCTION_37	WHILE_1
0x4001016	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       871	list.c	FUNCTION_37	WHILE_1
0x4001020	        0x488b5d00	                    mov rbx, qword [rbp]	       888	list.c	FUNCTION_37	WHILE_1	IF_6
0x4001024	           0xfb603	                   movzx eax, byte [rbx]	       888	list.c	FUNCTION_37	WHILE_1	IF_6
0x4001027	            0x3c5d	                            cmp al, 0x5d	       888	list.c	FUNCTION_37	WHILE_1	IF_6
0x4001029	     0xf84a4000000	                            je 0x40010d3	       888	list.c	FUNCTION_37	WHILE_1	IF_6
0x400102f	            0x3c2c	                            cmp al, 0x2c	       890	list.c	FUNCTION_37	WHILE_1	IF_7
0x4001031	     0xf8551010000	                           jne 0x4001188	       890	list.c	FUNCTION_37	WHILE_1	IF_7
0x4001037	        0x488d7b01	                      lea rdi, [rbx + 1]	       895	list.c	FUNCTION_37	WHILE_1	CALL_9
0x400103b	      0xe800000000	                          call 0x4001040	       895	list.c	FUNCTION_37	WHILE_1	CALL_9
0x4001040	          0x4889c3	                            mov rbx, rax	       895	list.c	FUNCTION_37	WHILE_1	CALL_9
0x4001043	        0x48894500	                    mov qword [rbp], rax	       895	list.c	FUNCTION_37	WHILE_1	CALL_9
0x4001047	           0xfb600	                   movzx eax, byte [rax]	       871	list.c	FUNCTION_37	WHILE_1
0x400104a	            0x3c5d	                            cmp al, 0x5d	       871	list.c	FUNCTION_37	WHILE_1
0x400104c	     0xf84b6000000	                            je 0x4001108	       871	list.c	FUNCTION_37	WHILE_1
0x4001052	            0x84c0	                             test al, al	       871	list.c	FUNCTION_37	WHILE_1
0x4001054	     0xf84ae000000	                            je 0x4001108	       871	list.c	FUNCTION_37	WHILE_1
0x400105a	      0x488d742410	                   lea rsi, [rsp + 0x10]	       873	list.c	FUNCTION_37	WHILE_1	IF_3	CALL_3
0x400105f	          0x4489e2	                           mov edx, r12d	       873	list.c	FUNCTION_37	WHILE_1	IF_3	CALL_3
0x4001062	          0x4889ef	                            mov rdi, rbp	       873	list.c	FUNCTION_37	WHILE_1	IF_3	CALL_3
0x4001065	      0xe800000000	                          call 0x400106a	       873	list.c	FUNCTION_37	WHILE_1	IF_3	CALL_3
0x400106a	            0x85c0	                           test eax, eax	       873	list.c	FUNCTION_37	WHILE_1	IF_3	CALL_3
0x400106c	     0xf84b6000000	                            je 0x4001128	       873	list.c	FUNCTION_37	WHILE_1	IF_3	CALL_3
0x4001072	          0x4585e4	                         test r12d, r12d	       875	list.c	FUNCTION_37	WHILE_1	IF_4
0x4001075	            0x74a9	                            je 0x4001020	       875	list.c	FUNCTION_37	WHILE_1	IF_4
0x4001077	      0xbf20000000	                           mov edi, 0x20	       220	list.c	FUNCTION_13	CALL_1
0x400107c	      0xe800000000	                          call 0x4001081	       220	list.c	FUNCTION_13	CALL_1
0x4001081	          0x4885c0	                           test rax, rax	       878	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x4001084	     0xf840e010000	                            je 0x4001198	       878	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x400108a	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       880	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x400108f	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       880	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x4001094	        0x48895818	             mov qword [rax + 0x18], rbx	       880	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x4001098	        0x48894810	             mov qword [rax + 0x10], rcx	       880	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x400109c	        0xc6401400	                mov byte [rax + 0x14], 0	       881	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x40010a0	        0x498b5508	                mov rdx, qword [r13 + 8]	       425	list.c	FUNCTION_22	IF_1
0x40010a4	          0x4885d2	                           test rdx, rdx	       425	list.c	FUNCTION_22	IF_1
0x40010a7	     0xf84c3000000	                            je 0x4001170	       425	list.c	FUNCTION_22	IF_1
0x40010ad	          0x488902	                    mov qword [rdx], rax	       434	list.c	FUNCTION_22	ELSE_1
0x40010b0	        0x48895008	                mov qword [rax + 8], rdx	       435	list.c	FUNCTION_22	ELSE_1
0x40010b4	        0x49894508	                mov qword [r13 + 8], rax	       436	list.c	FUNCTION_22	ELSE_1
0x40010b8	      0x4183453c01	               add dword [r13 + 0x3c], 1	       438	list.c	FUNCTION_22
0x40010bd	    0x48c700000000	                      mov qword [rax], 0	       439	list.c	FUNCTION_22
0x40010c4	        0x488b5d00	                    mov rbx, qword [rbp]	       888	list.c	FUNCTION_37	WHILE_1	IF_6
0x40010c8	           0xfb603	                   movzx eax, byte [rbx]	       888	list.c	FUNCTION_37	WHILE_1	IF_6
0x40010cb	            0x3c5d	                            cmp al, 0x5d	       888	list.c	FUNCTION_37	WHILE_1	IF_6
0x40010cd	     0xf855cffffff	                           jne 0x400102f	       888	list.c	FUNCTION_37	WHILE_1	IF_6
0x40010d3	        0x488d7b01	                      lea rdi, [rbx + 1]	       907	list.c	FUNCTION_37	CALL_13
0x40010d7	      0xe800000000	                          call 0x40010dc	       907	list.c	FUNCTION_37	CALL_13
0x40010dc	          0x4585e4	                         test r12d, r12d	       908	list.c	FUNCTION_37	IF_10
0x40010df	        0x48894500	                    mov qword [rbp], rax	       907	list.c	FUNCTION_37	CALL_13
0x40010e3	            0x7415	                            je 0x40010fa	       908	list.c	FUNCTION_37	IF_10
0x40010e5	          0x4d85ed	                           test r13, r13	       113	list.c	FUNCTION_6	IF_1
0x40010e8	    0x41c706050000	                      mov dword [r14], 5	       111	list.c	FUNCTION_6
0x40010ef	        0x4d896e08	                mov qword [r14 + 8], r13	       112	list.c	FUNCTION_6
0x40010f3	            0x7405	                            je 0x40010fa	       113	list.c	FUNCTION_6	IF_1
0x40010f5	      0x4183453801	               add dword [r13 + 0x38], 1	       114	list.c	FUNCTION_6	IF_1
0x40010fa	      0xb801000000	                              mov eax, 1	       911	list.c	FUNCTION_37
0x40010ff	            0xeb38	                           jmp 0x4001139	       911	list.c	FUNCTION_37
0x4001101	     0xf1f80000000	                         nop dword [rax]	       911	list.c	FUNCTION_37
0x4001108	            0x3c5d	                            cmp al, 0x5d	       898	list.c	FUNCTION_37	IF_8
0x400110a	            0x74c7	                            je 0x40010d3	       898	list.c	FUNCTION_37	IF_8
0x400110c	      0xba05000000	                              mov edx, 5	       900	list.c	FUNCTION_37	IF_8	CALL_11
0x4001111	      0xbe00000000	                              mov esi, 0	       900	list.c	FUNCTION_37	IF_8	CALL_11
0x4001116	            0x31ff	                            xor edi, edi	       900	list.c	FUNCTION_37	IF_8	CALL_11
0x4001118	      0xe800000000	                          call 0x400111d	       900	list.c	FUNCTION_37	IF_8	CALL_11
0x400111d	          0x4889de	                            mov rsi, rbx	       900	list.c	FUNCTION_37	IF_8	CALL_11
0x4001120	          0x4889c7	                            mov rdi, rax	       900	list.c	FUNCTION_37	IF_8	CALL_11
0x4001123	      0xe800000000	                          call 0x4001128	       900	list.c	FUNCTION_37	IF_8	CALL_11
0x4001128	          0x4585e4	                         test r12d, r12d	       902	list.c	FUNCTION_37	IF_8	IF_9
0x400112b	            0x740a	                            je 0x4001137	       902	list.c	FUNCTION_37	IF_8	IF_9
0x400112d	    0x8b0500000000	            mov eax, dword [0x04001133] 	       206	list.c	FUNCTION_12	IF_1
0x4001133	            0x85c0	                           test eax, eax	       206	list.c	FUNCTION_12	IF_1
0x4001135	            0x7479	                            je 0x40011b0	       206	list.c	FUNCTION_12	IF_1
0x4001137	            0x31c0	                            xor eax, eax	       867	list.c	FUNCTION_37	IF_1	IF_2
0x4001139	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       912	list.c	FUNCTION_37
0x400113e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       912	list.c	FUNCTION_37
0x4001147	     0xf8580000000	                           jne 0x40011cd	       912	list.c	FUNCTION_37
0x400114d	        0x4883c430	                           add rsp, 0x30	       912	list.c	FUNCTION_37
0x4001151	              0x5b	                                 pop rbx	       912	list.c	FUNCTION_37
0x4001152	              0x5d	                                 pop rbp	       912	list.c	FUNCTION_37
0x4001153	            0x415c	                                 pop r12	       912	list.c	FUNCTION_37
0x4001155	            0x415d	                                 pop r13	       912	list.c	FUNCTION_37
0x4001157	            0x415e	                                 pop r14	       912	list.c	FUNCTION_37
0x4001159	              0xc3	                                     ret	       912	list.c	FUNCTION_37
0x400115a	    0x660f1f440000	                    nop word [rax + rax]	       912	list.c	FUNCTION_37
0x4001160	          0x4531ed	                          xor r13d, r13d	       859	list.c	FUNCTION_37
0x4001163	      0xe986feffff	                           jmp 0x4000fee	       859	list.c	FUNCTION_37
0x4001168	     0xf1f84000000	                   nop dword [rax + rax]	       859	list.c	FUNCTION_37
0x4001170	        0x49894500	                    mov qword [r13], rax	       428	list.c	FUNCTION_22	IF_1
0x4001174	        0x49894508	                mov qword [r13 + 8], rax	       429	list.c	FUNCTION_22	IF_1
0x4001178	    0x48c740080000	                  mov qword [rax + 8], 0	       430	list.c	FUNCTION_22	IF_1
0x4001180	      0xe933ffffff	                           jmp 0x40010b8	       430	list.c	FUNCTION_22	IF_1
0x4001185	           0xf1f00	                         nop dword [rax]	       430	list.c	FUNCTION_22	IF_1
0x4001188	      0xba05000000	                              mov edx, 5	       892	list.c	FUNCTION_37	WHILE_1	IF_7	CALL_8
0x400118d	      0xbe00000000	                              mov esi, 0	       892	list.c	FUNCTION_37	WHILE_1	IF_7	CALL_8
0x4001192	            0xeb82	                           jmp 0x4001116	       892	list.c	FUNCTION_37	WHILE_1	IF_7	CALL_8
0x4001194	         0xf1f4000	                         nop dword [rax]	       892	list.c	FUNCTION_37	WHILE_1	IF_7	CALL_8
0x4001198	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       885	list.c	FUNCTION_37	WHILE_1	IF_4	CALL_6
0x400119d	      0xe800000000	                          call 0x40011a2	       885	list.c	FUNCTION_37	WHILE_1	IF_4	CALL_6
0x40011a2	      0xe979feffff	                           jmp 0x4001020	       885	list.c	FUNCTION_37	WHILE_1	IF_4	CALL_6
0x40011a7	    0x660f1f840000	                    nop word [rax + rax]	       885	list.c	FUNCTION_37	WHILE_1	IF_4	CALL_6
0x40011b0	          0x4c89ef	                            mov rdi, r13	       208	list.c	FUNCTION_12	IF_1	CALL_1
0x40011b3	        0x8944240c	              mov dword [rsp + 0xc], eax	       208	list.c	FUNCTION_12	IF_1	CALL_1
0x40011b7	      0xe8c4eeffff	      call sym.list_free_contents.isra.0	       208	list.c	FUNCTION_12	IF_1	CALL_1
0x40011bc	          0x4c89ef	                            mov rdi, r13	       209	list.c	FUNCTION_12	IF_1	CALL_2
0x40011bf	      0xe87ceeffff	                 call sym.list_free_list	       209	list.c	FUNCTION_12	IF_1	CALL_2
0x40011c4	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       209	list.c	FUNCTION_12	IF_1	CALL_2
0x40011c8	      0xe96cffffff	                           jmp 0x4001139	       209	list.c	FUNCTION_12	IF_1	CALL_2
0x40011cd	      0xe800000000	                          call 0x40011d2	       912	list.c	FUNCTION_37
list_rem_watch	DO,0:ELSE,0:FOR,1:WHILE,0:SWITCH,0:IF,1:CALL,0:functions,0	21
0x40000d0	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	        41	list.c	FUNCTION_2	FOR_1
0x40000d4	          0x4885d2	                           test rdx, rdx	        41	list.c	FUNCTION_2	FOR_1
0x40000d7	            0x7428	                            je 0x4000101	        41	list.c	FUNCTION_2	FOR_1
0x40000d9	        0x4883c710	                           add rdi, 0x10	        40	list.c	FUNCTION_2
0x40000dd	          0x4839f2	                            cmp rdx, rsi	        43	list.c	FUNCTION_2	FOR_1	IF_1
0x40000e0	          0x4889d0	                            mov rax, rdx	        40	list.c	FUNCTION_2
0x40000e3	            0x7513	                           jne 0x40000f8	        43	list.c	FUNCTION_2	FOR_1	IF_1
0x40000e5	            0xeb25	                           jmp 0x400010c	        43	list.c	FUNCTION_2	FOR_1	IF_1
0x40000e7	    0x660f1f840000	                    nop word [rax + rax]	        43	list.c	FUNCTION_2	FOR_1	IF_1
0x40000f0	          0x4839c6	                            cmp rsi, rax	        43	list.c	FUNCTION_2	FOR_1	IF_1
0x40000f3	            0x7413	                            je 0x4000108	        43	list.c	FUNCTION_2	FOR_1	IF_1
0x40000f5	          0x4889c2	                            mov rdx, rax	        43	list.c	FUNCTION_2	FOR_1	IF_1
0x40000f8	        0x488b4208	                mov rax, qword [rdx + 8]	        41	list.c	FUNCTION_2	FOR_1
0x40000fc	          0x4885c0	                           test rax, rax	        41	list.c	FUNCTION_2	FOR_1
0x40000ff	            0x75ef	                           jne 0x40000f0	        41	list.c	FUNCTION_2	FOR_1
0x4000101	            0xf3c3	                                     ret	        41	list.c	FUNCTION_2	FOR_1
0x4000103	       0xf1f440000	                   nop dword [rax + rax]	        41	list.c	FUNCTION_2	FOR_1
0x4000108	        0x488d7a08	                      lea rdi, [rdx + 8]	        48	list.c	FUNCTION_2	FOR_1
0x400010c	        0x488b4008	                mov rax, qword [rax + 8]	        45	list.c	FUNCTION_2	FOR_1	IF_1
0x4000110	          0x488907	                    mov qword [rdi], rax	        45	list.c	FUNCTION_2	FOR_1	IF_1
0x4000113	              0xc3	                                     ret	        46	list.c	FUNCTION_2	FOR_1	IF_1
vimlist_remove	DO,0:ELSE,2:FOR,1:WHILE,0:SWITCH,0:IF,3:CALL,1:functions,0	46
0x4000bc0	          0x4885f6	                           test rsi, rsi	       692	list.c	FUNCTION_33	FOR_1
0x4000bc3	            0x744c	                            je 0x4000c11	       692	list.c	FUNCTION_33	FOR_1
0x4000bc5	        0x448b4f3c	            mov r9d, dword [rdi + 0x3c] 	       692	list.c	FUNCTION_33	FOR_1
0x4000bc9	        0x4c8b5710	            mov r10, qword [rdi + 0x10] 	       692	list.c	FUNCTION_33	FOR_1
0x4000bcd	          0x4889f1	                            mov rcx, rsi	       692	list.c	FUNCTION_33	FOR_1
0x4000bd0	        0x4183e901	                              sub r9d, 1	       694	list.c	FUNCTION_33	FOR_1
0x4000bd4	          0x4d85d2	                           test r10, r10	        61	list.c	FUNCTION_3	FOR_1
0x4000bd7	          0x4c89d0	                            mov rax, r10	        61	list.c	FUNCTION_3	FOR_1
0x4000bda	            0x750d	                           jne 0x4000be9	        61	list.c	FUNCTION_3	FOR_1
0x4000bdc	            0xeb22	                           jmp 0x4000c00	        61	list.c	FUNCTION_3	FOR_1
0x4000bde	            0x6690	                                     nop	        61	list.c	FUNCTION_3	FOR_1
0x4000be0	        0x488b4008	                mov rax, qword [rax + 8]	        61	list.c	FUNCTION_3	FOR_1
0x4000be4	          0x4885c0	                           test rax, rax	        61	list.c	FUNCTION_3	FOR_1
0x4000be7	            0x7417	                            je 0x4000c00	        61	list.c	FUNCTION_3	FOR_1
0x4000be9	          0x483908	                    cmp qword [rax], rcx	        62	list.c	FUNCTION_3	FOR_1	IF_1
0x4000bec	            0x75f2	                           jne 0x4000be0	        62	list.c	FUNCTION_3	FOR_1	IF_1
0x4000bee	          0x4c8b01	                     mov r8, qword [rcx]	        63	list.c	FUNCTION_3	FOR_1	IF_1
0x4000bf1	          0x4c8900	                     mov qword [rax], r8	        63	list.c	FUNCTION_3	FOR_1	IF_1
0x4000bf4	        0x488b4008	                mov rax, qword [rax + 8]	        61	list.c	FUNCTION_3	FOR_1
0x4000bf8	          0x4885c0	                           test rax, rax	        61	list.c	FUNCTION_3	FOR_1
0x4000bfb	            0x75ec	                           jne 0x4000be9	        61	list.c	FUNCTION_3	FOR_1
0x4000bfd	           0xf1f00	                         nop dword [rax]	        61	list.c	FUNCTION_3	FOR_1
0x4000c00	          0x4839ca	                            cmp rdx, rcx	       696	list.c	FUNCTION_33	FOR_1	IF_1
0x4000c03	            0x7408	                            je 0x4000c0d	       696	list.c	FUNCTION_33	FOR_1	IF_1
0x4000c05	          0x488b09	                    mov rcx, qword [rcx]	       692	list.c	FUNCTION_33	FOR_1
0x4000c08	          0x4885c9	                           test rcx, rcx	       692	list.c	FUNCTION_33	FOR_1
0x4000c0b	            0x75c3	                           jne 0x4000bd0	       692	list.c	FUNCTION_33	FOR_1
0x4000c0d	        0x44894f3c	             mov dword [rdi + 0x3c], r9d	       692	list.c	FUNCTION_33	FOR_1
0x4000c11	          0x488b02	                    mov rax, qword [rdx]	       700	list.c	FUNCTION_33	IF_2
0x4000c14	          0x4885c0	                           test rax, rax	       700	list.c	FUNCTION_33	IF_2
0x4000c17	            0x741d	                            je 0x4000c36	       700	list.c	FUNCTION_33	IF_2
0x4000c19	        0x488b5608	                mov rdx, qword [rsi + 8]	       703	list.c	FUNCTION_33	ELSE_1
0x4000c1d	        0x48895008	                mov qword [rax + 8], rdx	       703	list.c	FUNCTION_33	ELSE_1
0x4000c21	        0x488b5608	                mov rdx, qword [rsi + 8]	       703	list.c	FUNCTION_33	ELSE_1
0x4000c25	          0x4885d2	                           test rdx, rdx	       704	list.c	FUNCTION_33	IF_3
0x4000c28	            0x7419	                            je 0x4000c43	       704	list.c	FUNCTION_33	IF_3
0x4000c2a	          0x488902	                    mov qword [rdx], rax	       707	list.c	FUNCTION_33	ELSE_2
0x4000c2d	    0x48c747180000	               mov qword [rdi + 0x18], 0	       708	list.c	FUNCTION_33	ELSE_2
0x4000c35	              0xc3	                                     ret	       708	list.c	FUNCTION_33	ELSE_2
0x4000c36	        0x488b5608	                mov rdx, qword [rsi + 8]	       701	list.c	FUNCTION_33	IF_2
0x4000c3a	          0x4885d2	                           test rdx, rdx	       704	list.c	FUNCTION_33	IF_3
0x4000c3d	        0x48895708	                mov qword [rdi + 8], rdx	       701	list.c	FUNCTION_33	IF_2
0x4000c41	            0x75e7	                           jne 0x4000c2a	       704	list.c	FUNCTION_33	IF_3
0x4000c43	          0x488907	                    mov qword [rdi], rax	       705	list.c	FUNCTION_33	IF_3
0x4000c46	    0x48c747180000	               mov qword [rdi + 0x18], 0	       708	list.c	FUNCTION_33	ELSE_2
0x4000c4e	              0xc3	                                     ret	       708	list.c	FUNCTION_33	ELSE_2
write_list	DO,0:ELSE,1:FOR,2:WHILE,0:SWITCH,0:IF,5:CALL,6:functions,0	80
0x40011e0	            0x4155	                                push r13	       919	list.c	FUNCTION_38
0x40011e2	            0x4154	                                push r12	       919	list.c	FUNCTION_38
0x40011e4	          0x4189d5	                           mov r13d, edx	       919	list.c	FUNCTION_38
0x40011e7	              0x55	                                push rbp	       919	list.c	FUNCTION_38
0x40011e8	              0x53	                                push rbx	       919	list.c	FUNCTION_38
0x40011e9	          0x4889fd	                            mov rbp, rdi	       919	list.c	FUNCTION_38
0x40011ec	        0x4883ec08	                              sub rsp, 8	       919	list.c	FUNCTION_38
0x40011f0	          0x4c8b26	                    mov r12, qword [rsi]	       925	list.c	FUNCTION_38	FOR_1
0x40011f3	          0x4d85e4	                           test r12, r12	       925	list.c	FUNCTION_38	FOR_1
0x40011f6	     0xf8484000000	                            je 0x4001280	       925	list.c	FUNCTION_38	FOR_1
0x40011fc	         0xf1f4000	                         nop dword [rax]	       925	list.c	FUNCTION_38	FOR_1
0x4001200	      0x498d7c2410	                   lea rdi, [r12 + 0x10]	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x4001205	      0xe800000000	                          call 0x400120a	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x400120a	           0xfb638	                   movzx edi, byte [rax]	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x400120d	          0x4889c3	                            mov rbx, rax	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x4001210	          0x4084ff	                           test dil, dil	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x4001213	            0x7521	                           jne 0x4001236	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x4001215	            0xeb39	                           jmp 0x4001250	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x4001217	    0x660f1f840000	                    nop word [rax + rax]	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x4001220	      0xe800000000	                          call 0x4001225	       932	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_3
0x4001225	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       933	list.c	FUNCTION_38	FOR_1	FOR_2	IF_2
0x4001228	            0x7421	                            je 0x400124b	       933	list.c	FUNCTION_38	FOR_1	FOR_2	IF_2
0x400122a	        0x4883c301	                              add rbx, 1	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x400122e	           0xfb63b	                   movzx edi, byte [rbx]	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x4001231	          0x4084ff	                           test dil, dil	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x4001234	            0x741a	                            je 0x4001250	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x4001236	        0x4080ff0a	                            cmp dil, 0xa	       929	list.c	FUNCTION_38	FOR_1	FOR_2	IF_1
0x400123a	          0x4889ee	                            mov rsi, rbp	       930	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_2
0x400123d	            0x75e1	                           jne 0x4001220	       929	list.c	FUNCTION_38	FOR_1	FOR_2	IF_1
0x400123f	            0x31ff	                            xor edi, edi	       930	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_2
0x4001241	      0xe800000000	                          call 0x4001246	       930	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_2
0x4001246	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       933	list.c	FUNCTION_38	FOR_1	FOR_2	IF_2
0x4001249	            0x75df	                           jne 0x400122a	       933	list.c	FUNCTION_38	FOR_1	FOR_2	IF_2
0x400124b	            0x31db	                            xor ebx, ebx	       935	list.c	FUNCTION_38	FOR_1	FOR_2	IF_2
0x400124d	            0xeb06	                           jmp 0x4001255	       935	list.c	FUNCTION_38	FOR_1	FOR_2	IF_2
0x400124f	              0x90	                                     nop	       935	list.c	FUNCTION_38	FOR_1	FOR_2	IF_2
0x4001250	      0xbb01000000	                              mov ebx, 1	       935	list.c	FUNCTION_38	FOR_1	FOR_2	IF_2
0x4001255	          0x4585ed	                         test r13d, r13d	       939	list.c	FUNCTION_38	FOR_1	IF_3
0x4001258	            0x7407	                            je 0x4001261	       939	list.c	FUNCTION_38	FOR_1	IF_3
0x400125a	      0x49833c2400	                      cmp qword [r12], 0	       939	list.c	FUNCTION_38	FOR_1	IF_3
0x400125f	            0x742f	                            je 0x4001290	       939	list.c	FUNCTION_38	FOR_1	IF_3
0x4001261	          0x4889ee	                            mov rsi, rbp	       940	list.c	FUNCTION_38	FOR_1	IF_3	IF_4	CALL_4
0x4001264	      0xbf0a000000	                            mov edi, 0xa	       940	list.c	FUNCTION_38	FOR_1	IF_3	IF_4	CALL_4
0x4001269	      0xe800000000	                          call 0x400126e	       940	list.c	FUNCTION_38	FOR_1	IF_3	IF_4	CALL_4
0x400126e	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       940	list.c	FUNCTION_38	FOR_1	IF_3	IF_4	CALL_4
0x4001271	            0x7447	                            je 0x40012ba	       940	list.c	FUNCTION_38	FOR_1	IF_3	IF_4	CALL_4
0x4001273	            0x85db	                           test ebx, ebx	       945	list.c	FUNCTION_38	FOR_1	IF_5
0x4001275	            0x741d	                            je 0x4001294	       945	list.c	FUNCTION_38	FOR_1	IF_5
0x4001277	        0x4d8b2424	                    mov r12, qword [r12]	       925	list.c	FUNCTION_38	FOR_1
0x400127b	          0x4d85e4	                           test r12, r12	       925	list.c	FUNCTION_38	FOR_1
0x400127e	            0x7580	                           jne 0x4001200	       925	list.c	FUNCTION_38	FOR_1
0x4001280	        0x4883c408	                              add rsp, 8	       952	list.c	FUNCTION_38
0x4001284	      0xb801000000	                              mov eax, 1	       948	list.c	FUNCTION_38	FOR_1	IF_5
0x4001289	              0x5b	                                 pop rbx	       952	list.c	FUNCTION_38
0x400128a	              0x5d	                                 pop rbp	       952	list.c	FUNCTION_38
0x400128b	            0x415c	                                 pop r12	       952	list.c	FUNCTION_38
0x400128d	            0x415d	                                 pop r13	       952	list.c	FUNCTION_38
0x400128f	              0xc3	                                     ret	       952	list.c	FUNCTION_38
0x4001290	            0x85db	                           test ebx, ebx	       945	list.c	FUNCTION_38	FOR_1	IF_5
0x4001292	            0x75ec	                           jne 0x4001280	       945	list.c	FUNCTION_38	FOR_1	IF_5
0x4001294	      0xba05000000	                              mov edx, 5	       947	list.c	FUNCTION_38	FOR_1	IF_5	CALL_6
0x4001299	      0xbe00000000	                              mov esi, 0	       947	list.c	FUNCTION_38	FOR_1	IF_5	CALL_6
0x400129e	            0x31ff	                            xor edi, edi	       947	list.c	FUNCTION_38	FOR_1	IF_5	CALL_6
0x40012a0	      0xe800000000	                          call 0x40012a5	       947	list.c	FUNCTION_38	FOR_1	IF_5	CALL_6
0x40012a5	          0x4889c7	                            mov rdi, rax	       947	list.c	FUNCTION_38	FOR_1	IF_5	CALL_6
0x40012a8	      0xe800000000	                          call 0x40012ad	       947	list.c	FUNCTION_38	FOR_1	IF_5	CALL_6
0x40012ad	        0x4883c408	                              add rsp, 8	       952	list.c	FUNCTION_38
0x40012b1	            0x31c0	                            xor eax, eax	       948	list.c	FUNCTION_38	FOR_1	IF_5
0x40012b3	              0x5b	                                 pop rbx	       952	list.c	FUNCTION_38
0x40012b4	              0x5d	                                 pop rbp	       952	list.c	FUNCTION_38
0x40012b5	            0x415c	                                 pop r12	       952	list.c	FUNCTION_38
0x40012b7	            0x415d	                                 pop r13	       952	list.c	FUNCTION_38
0x40012b9	              0xc3	                                     ret	       952	list.c	FUNCTION_38
0x40012ba	        0x4883c408	                              add rsp, 8	       952	list.c	FUNCTION_38
0x40012be	            0x31c0	                            xor eax, eax	       942	list.c	FUNCTION_38	FOR_1	IF_3	IF_4
0x40012c0	              0x5b	                                 pop rbx	       952	list.c	FUNCTION_38
0x40012c1	              0x5d	                                 pop rbp	       952	list.c	FUNCTION_38
0x40012c2	            0x415c	                                 pop r12	       952	list.c	FUNCTION_38
0x40012c4	            0x415d	                                 pop r13	       952	list.c	FUNCTION_38
0x40012c6	              0xc3	                                     ret	       952	list.c	FUNCTION_38
list_find	DO,0:ELSE,4:FOR,0:WHILE,2:SWITCH,0:IF,7:CALL,0:functions,0	69
0x4000400	          0x4885ff	                           test rdi, rdi	       292	list.c	FUNCTION_18	IF_1
0x4000403	     0xf84b0000000	                            je 0x40004b9	       292	list.c	FUNCTION_18	IF_1
0x4000409	        0x4863473c	         movsxd rax, dword [rdi + 0x3c] 	       297	list.c	FUNCTION_18	IF_2
0x400040d	          0x4885f6	                           test rsi, rsi	       296	list.c	FUNCTION_18	IF_2
0x4000410	          0x4989c0	                             mov r8, rax	       297	list.c	FUNCTION_18	IF_2
0x4000413	     0xf8897000000	                            js 0x40004b0	       296	list.c	FUNCTION_18	IF_2
0x4000419	          0x4839f0	                            cmp rax, rsi	       300	list.c	FUNCTION_18	IF_3
0x400041c	     0xf8e97000000	                           jle 0x40004b9	       300	list.c	FUNCTION_18	IF_3
0x4000422	        0x488b4718	            mov rax, qword [rdi + 0x18] 	       304	list.c	FUNCTION_18	IF_4
0x4000426	          0x4885c0	                           test rax, rax	       304	list.c	FUNCTION_18	IF_4
0x4000429	     0xf8491000000	                            je 0x40004c0	       304	list.c	FUNCTION_18	IF_4
0x400042f	        0x48635740	         movsxd rdx, dword [rdi + 0x40] 	       306	list.c	FUNCTION_18	IF_4	IF_5
0x4000433	            0x89d1	                            mov ecx, edx	       306	list.c	FUNCTION_18	IF_4	IF_5
0x4000435	          0xc1e91f	                           shr ecx, 0x1f	       306	list.c	FUNCTION_18	IF_4	IF_5
0x4000438	             0x1d1	                            add ecx, edx	       306	list.c	FUNCTION_18	IF_4	IF_5
0x400043a	            0xd1f9	                              sar ecx, 1	       306	list.c	FUNCTION_18	IF_4	IF_5
0x400043c	          0x4863c9	                         movsxd rcx, ecx	       306	list.c	FUNCTION_18	IF_4	IF_5
0x400043f	          0x4839f1	                            cmp rcx, rsi	       306	list.c	FUNCTION_18	IF_4	IF_5
0x4000442	            0x7e44	                           jle 0x4000488	       306	list.c	FUNCTION_18	IF_4	IF_5
0x4000444	          0x488b07	                    mov rax, qword [rdi]	       309	list.c	FUNCTION_18	IF_4	IF_5
0x4000447	            0x31d2	                            xor edx, edx	       310	list.c	FUNCTION_18	IF_4	IF_5
0x4000449	          0x4839f2	                            cmp rdx, rsi	       341	list.c	FUNCTION_18	WHILE_1
0x400044c	          0x4889d1	                            mov rcx, rdx	       341	list.c	FUNCTION_18	WHILE_1
0x400044f	            0x7d16	                           jge 0x4000467	       341	list.c	FUNCTION_18	WHILE_1
0x4000451	     0xf1f80000000	                         nop dword [rax]	       341	list.c	FUNCTION_18	WHILE_1
0x4000458	        0x4883c101	                              add rcx, 1	       345	list.c	FUNCTION_18	WHILE_1
0x400045c	          0x488b00	                    mov rax, qword [rax]	       344	list.c	FUNCTION_18	WHILE_1
0x400045f	          0x4839f1	                            cmp rcx, rsi	       341	list.c	FUNCTION_18	WHILE_1
0x4000462	            0x75f4	                           jne 0x4000458	       341	list.c	FUNCTION_18	WHILE_1
0x4000464	          0x4889f2	                            mov rdx, rsi	       345	list.c	FUNCTION_18	WHILE_1
0x4000467	          0x4839d6	                            cmp rsi, rdx	       347	list.c	FUNCTION_18	WHILE_2
0x400046a	            0x7d6c	                           jge 0x40004d8	       347	list.c	FUNCTION_18	WHILE_2
0x400046c	         0xf1f4000	                         nop dword [rax]	       347	list.c	FUNCTION_18	WHILE_2
0x4000470	        0x4883ea01	                              sub rdx, 1	       351	list.c	FUNCTION_18	WHILE_2
0x4000474	        0x488b4008	                mov rax, qword [rax + 8]	       350	list.c	FUNCTION_18	WHILE_2
0x4000478	          0x4839f2	                            cmp rdx, rsi	       347	list.c	FUNCTION_18	WHILE_2
0x400047b	            0x75f3	                           jne 0x4000470	       347	list.c	FUNCTION_18	WHILE_2
0x400047d	          0x897740	             mov dword [rdi + 0x40], esi	       355	list.c	FUNCTION_18
0x4000480	        0x48894718	             mov qword [rdi + 0x18], rax	       356	list.c	FUNCTION_18
0x4000484	              0xc3	                                     ret	       358	list.c	FUNCTION_18
0x4000485	           0xf1f00	                         nop dword [rax]	       358	list.c	FUNCTION_18
0x4000488	        0x418d0c10	                     lea ecx, [r8 + rdx]	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x400048c	          0x4189c9	                            mov r9d, ecx	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x400048f	        0x41c1e91f	                           shr r9d, 0x1f	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x4000493	          0x4401c9	                            add ecx, r9d	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x4000496	            0xd1f9	                              sar ecx, 1	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x4000498	          0x4863c9	                         movsxd rcx, ecx	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x400049b	          0x4839f1	                            cmp rcx, rsi	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x400049e	            0x7da9	                           jge 0x4000449	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40004a0	        0x418d50ff	                       lea edx, [r8 - 1]	       316	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40004a4	        0x488b4708	                mov rax, qword [rdi + 8]	       315	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40004a8	          0x4863d2	                         movsxd rdx, edx	       316	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40004ab	            0xeb9c	                           jmp 0x4000449	       316	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40004ad	           0xf1f00	                         nop dword [rax]	       316	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40004b0	          0x4801c6	                            add rsi, rax	       300	list.c	FUNCTION_18	IF_3
0x40004b3	     0xf8960ffffff	                           jns 0x4000419	       300	list.c	FUNCTION_18	IF_3
0x40004b9	            0x31c0	                            xor eax, eax	       293	list.c	FUNCTION_18	IF_1
0x40004bb	              0xc3	                                     ret	       359	list.c	FUNCTION_18
0x40004bc	         0xf1f4000	                         nop dword [rax]	       359	list.c	FUNCTION_18
0x40004c0	          0x4489c0	                            mov eax, r8d	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x40004c3	          0xc1e81f	                           shr eax, 0x1f	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x40004c6	          0x4401c0	                            add eax, r8d	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x40004c9	            0xd1f8	                              sar eax, 1	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x40004cb	            0x4898	                                    cdqe	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x40004cd	          0x4839f0	                            cmp rax, rsi	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x40004d0	     0xf8f6effffff	                            jg 0x4000444	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x40004d6	            0xebc8	                           jmp 0x40004a0	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x40004d8	          0x4889d6	                            mov rsi, rdx	       347	list.c	FUNCTION_18	WHILE_2
0x40004db	            0xeba0	                           jmp 0x400047d	       347	list.c	FUNCTION_18	WHILE_2
list_free_items	DO,0:ELSE,0:FOR,1:WHILE,0:SWITCH,0:IF,1:CALL,1:functions,0	25
0x4000290	              0x55	                                push rbp	       186	list.c	FUNCTION_11
0x4000291	              0x53	                                push rbx	       186	list.c	FUNCTION_11
0x4000292	            0x89fd	                            mov ebp, edi	       186	list.c	FUNCTION_11
0x4000294	        0x4883ec08	                              sub rsp, 8	       186	list.c	FUNCTION_11
0x4000298	    0x488b3d000000	            mov rdi, qword [0x0400029f] 	       189	list.c	FUNCTION_11	FOR_1
0x400029f	          0x4885ff	                           test rdi, rdi	       189	list.c	FUNCTION_11	FOR_1
0x40002a2	            0x7421	                            je 0x40002c5	       189	list.c	FUNCTION_11	FOR_1
0x40002a4	         0xf1f4000	                         nop dword [rax]	       189	list.c	FUNCTION_11	FOR_1
0x40002a8	          0x8b4744	            mov eax, dword [rdi + 0x44] 	       192	list.c	FUNCTION_11	FOR_1	IF_1
0x40002ab	        0x488b5f28	            mov rbx, qword [rdi + 0x28] 	       191	list.c	FUNCTION_11	FOR_1
0x40002af	            0x31e8	                            xor eax, ebp	       192	list.c	FUNCTION_11	FOR_1	IF_1
0x40002b1	          0x83e0fe	                     and eax, 0xfffffffe	       192	list.c	FUNCTION_11	FOR_1	IF_1
0x40002b4	            0x7407	                            je 0x40002bd	       192	list.c	FUNCTION_11	FOR_1	IF_1
0x40002b6	      0x48837f1000	               cmp qword [rdi + 0x10], 0	       193	list.c	FUNCTION_11	FOR_1	IF_1
0x40002bb	            0x7413	                            je 0x40002d0	       193	list.c	FUNCTION_11	FOR_1	IF_1
0x40002bd	          0x4885db	                           test rbx, rbx	       189	list.c	FUNCTION_11	FOR_1
0x40002c0	          0x4889df	                            mov rdi, rbx	       189	list.c	FUNCTION_11	FOR_1
0x40002c3	            0x75e3	                           jne 0x40002a8	       189	list.c	FUNCTION_11	FOR_1
0x40002c5	        0x4883c408	                              add rsp, 8	       201	list.c	FUNCTION_11
0x40002c9	              0x5b	                                 pop rbx	       201	list.c	FUNCTION_11
0x40002ca	              0x5d	                                 pop rbp	       201	list.c	FUNCTION_11
0x40002cb	              0xc3	                                     ret	       201	list.c	FUNCTION_11
0x40002cc	         0xf1f4000	                         nop dword [rax]	       201	list.c	FUNCTION_11
0x40002d0	      0xe86bfdffff	                 call sym.list_free_list	       198	list.c	FUNCTION_11	FOR_1	IF_1	CALL_1
0x40002d5	            0xebe6	                           jmp 0x40002bd	       198	list.c	FUNCTION_11	FOR_1	IF_1	CALL_1
