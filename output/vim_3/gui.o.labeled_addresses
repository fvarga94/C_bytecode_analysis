gui_exit	IF,0:SWITCH,0:functions,0:CALL,2:WHILE,0:ELSE,0:FOR,0:DO,0	7
0x4000b80	              0x53	                                push rbx	       797	gui.c	FUNCTION_8
0x4000b81	            0x89fb	                            mov ebx, edi	       797	gui.c	FUNCTION_8
0x4000b83	      0xe800000000	                          call 0x4000b88	       800	gui.c	FUNCTION_8	CALL_1
0x4000b88	            0x89df	                            mov edi, ebx	       802	gui.c	FUNCTION_8	CALL_2
0x4000b8a	    0xc70500000000	               mov dword [0x04000b94], 0	       801	gui.c	FUNCTION_8
0x4000b94	              0x5b	                                 pop rbx	       803	gui.c	FUNCTION_8
0x4000b95	      0xe900000000	                           jmp 0x4000b9a	       802	gui.c	FUNCTION_8	CALL_2
xy2win	IF,7:SWITCH,0:functions,0:CALL,11:WHILE,0:ELSE,5:FOR,0:DO,0	115
0x4000330	              0x55	                                push rbp	      4949	gui.c	FUNCTION_81
0x4000331	              0x53	                                push rbx	      4949	gui.c	FUNCTION_81
0x4000332	            0x89f5	                            mov ebp, esi	      4949	gui.c	FUNCTION_81
0x4000334	        0x4883ec18	                           sub rsp, 0x18	      4949	gui.c	FUNCTION_81
0x4000338	    0x8b3500000000	            mov esi, dword [0x0400033e] 	      4954	gui.c	FUNCTION_81	CALL_1
0x400033e	    0x64488b042528	                mov rax, qword fs:[0x28]	      4949	gui.c	FUNCTION_81
0x4000347	      0x4889442408	                mov qword [rsp + 8], rax	      4949	gui.c	FUNCTION_81
0x400034c	            0x31c0	                            xor eax, eax	      4949	gui.c	FUNCTION_81
0x400034e	            0x89e8	                            mov eax, ebp	      4954	gui.c	FUNCTION_81	CALL_1
0x4000350	            0x29f0	                            sub eax, esi	      4954	gui.c	FUNCTION_81	CALL_1
0x4000352	              0x99	                                     cdq	      4954	gui.c	FUNCTION_81	CALL_1
0x4000353	    0xf73d00000000	                 idiv dword [0x04000359]	      4954	gui.c	FUNCTION_81	CALL_1
0x4000359	            0x89c1	                            mov ecx, eax	      4954	gui.c	FUNCTION_81	CALL_1
0x400035b	          0x890424	                    mov dword [rsp], eax	      4954	gui.c	FUNCTION_81	CALL_1
0x400035e	            0x89f8	                            mov eax, edi	      4955	gui.c	FUNCTION_81	CALL_2
0x4000360	            0x29f0	                            sub eax, esi	      4955	gui.c	FUNCTION_81	CALL_2
0x4000362	          0xc1e91f	                           shr ecx, 0x1f	      4956	gui.c	FUNCTION_81	IF_1
0x4000365	              0x99	                                     cdq	      4955	gui.c	FUNCTION_81	CALL_2
0x4000366	    0xf73d00000000	                 idiv dword [0x0400036c]	      4955	gui.c	FUNCTION_81	CALL_2
0x400036c	            0x84c9	                             test cl, cl	      4956	gui.c	FUNCTION_81	IF_1
0x400036e	        0x89442404	                mov dword [rsp + 4], eax	      4955	gui.c	FUNCTION_81	CALL_2
0x4000372	     0xf85d8000000	                           jne 0x4000450	      4956	gui.c	FUNCTION_81	IF_1
0x4000378	          0xc1e81f	                           shr eax, 0x1f	      4956	gui.c	FUNCTION_81	IF_1
0x400037b	            0x84c0	                             test al, al	      4956	gui.c	FUNCTION_81	IF_1
0x400037d	     0xf85cd000000	                           jne 0x4000450	      4956	gui.c	FUNCTION_81	IF_1
0x4000383	      0x488d742404	                      lea rsi, [rsp + 4]	      4958	gui.c	FUNCTION_81	CALL_3
0x4000388	          0x4889e7	                            mov rdi, rsp	      4958	gui.c	FUNCTION_81	CALL_3
0x400038b	      0xe800000000	                          call 0x4000390	      4958	gui.c	FUNCTION_81	CALL_3
0x4000390	          0x4885c0	                           test rax, rax	      4959	gui.c	FUNCTION_81	IF_2
0x4000393	          0x4889c3	                            mov rbx, rax	      4958	gui.c	FUNCTION_81	CALL_3
0x4000396	     0xf84b4000000	                            je 0x4000450	      4959	gui.c	FUNCTION_81	IF_2
0x400039c	    0x8b0500000000	            mov eax, dword [0x040003a2] 	      4962	gui.c	FUNCTION_81	IF_3
0x40003a2	      0x3d01020000	                          cmp eax, 0x201	      4962	gui.c	FUNCTION_81	IF_3
0x40003a7	            0x7477	                            je 0x4000420	      4962	gui.c	FUNCTION_81	IF_3
0x40003a9	      0x3d00030000	                          cmp eax, 0x300	      4962	gui.c	FUNCTION_81	IF_3
0x40003ae	            0x7470	                            je 0x4000420	      4962	gui.c	FUNCTION_81	IF_3
0x40003b0	    0x8b8ba0000000	            mov ecx, dword [rbx + 0xa0] 	      4969	gui.c	FUNCTION_81	ELSE_2	IF_5
0x40003b6	          0x8b1424	                    mov edx, dword [rsp]	      4969	gui.c	FUNCTION_81	ELSE_2	IF_5
0x40003b9	            0x39d1	                            cmp ecx, edx	      4969	gui.c	FUNCTION_81	ELSE_2	IF_5
0x40003bb	     0xf8caf000000	                            jl 0x4000470	      4969	gui.c	FUNCTION_81	ELSE_2	IF_5
0x40003c1	            0xa808	                              test al, 8	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x40003c3	            0x7533	                           jne 0x40003f8	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x40003c5	    0x8bbbb0000000	            mov edi, dword [rbx + 0xb0] 	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x40003cb	            0x85ff	                           test edi, edi	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x40003cd	            0x7e10	                           jle 0x40003df	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x40003cf	        0x8b442404	                mov eax, dword [rsp + 4]	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x40003d3	    0x3983ac000000	            cmp dword [rbx + 0xac], eax 	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x40003d9	     0xf84c1000000	                            je 0x40004a0	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x40003df	    0x8bb3a4000000	            mov esi, dword [rbx + 0xa4] 	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40003e5	            0x85f6	                           test esi, esi	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40003e7	            0x7e0f	                           jle 0x40003f8	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40003e9	          0x8b0424	                    mov eax, dword [rsp]	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40003ec	    0x3983a0000000	            cmp dword [rbx + 0xa0], eax 	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40003f2	     0xf8488000000	                            je 0x4000480	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40003f8	      0xbffeffffff	                     mov edi, 0xfffffffe	      4978	gui.c	FUNCTION_81	CALL_11
0x40003fd	      0xe800000000	                          call 0x4000402	      4978	gui.c	FUNCTION_81	CALL_11
0x4000402	          0x4889d8	                            mov rax, rbx	      4978	gui.c	FUNCTION_81	CALL_11
0x4000405	      0x488b542408	                mov rdx, qword [rsp + 8]	      4981	gui.c	FUNCTION_81
0x400040a	    0x644833142528	                xor rdx, qword fs:[0x28]	      4981	gui.c	FUNCTION_81
0x4000413	     0xf85d3000000	                           jne 0x40004ec	      4981	gui.c	FUNCTION_81
0x4000419	        0x4883c418	                           add rsp, 0x18	      4981	gui.c	FUNCTION_81
0x400041d	              0x5b	                                 pop rbx	      4981	gui.c	FUNCTION_81
0x400041e	              0x5d	                                 pop rbp	      4981	gui.c	FUNCTION_81
0x400041f	              0xc3	                                     ret	      4981	gui.c	FUNCTION_81
0x4000420	            0x89e8	                            mov eax, ebp	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x4000422	    0x2b0500000000	             sub eax, dword [0x04000428]	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x4000428	              0x99	                                     cdq	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x4000429	    0xf73d00000000	                 idiv dword [0x0400042f]	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x400042f	    0x3b0500000000	            cmp eax, dword [0x04000435] 	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x4000435	            0x7c21	                            jl 0x4000458	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x4000437	      0xbf0f000000	                            mov edi, 0xf	      4965	gui.c	FUNCTION_81	IF_3	CALL_5
0x400043c	      0xe800000000	                          call 0x4000441	      4965	gui.c	FUNCTION_81	IF_3	CALL_5
0x4000441	          0x4889d8	                            mov rax, rbx	      4965	gui.c	FUNCTION_81	IF_3	CALL_5
0x4000444	            0xebbf	                           jmp 0x4000405	      4965	gui.c	FUNCTION_81	IF_3	CALL_5
0x4000446	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4965	gui.c	FUNCTION_81	IF_3	CALL_5
0x4000450	            0x31c0	                            xor eax, eax	      4957	gui.c	FUNCTION_81	IF_1
0x4000452	            0xebb1	                           jmp 0x4000405	      4957	gui.c	FUNCTION_81	IF_1
0x4000454	         0xf1f4000	                         nop dword [rax]	      4957	gui.c	FUNCTION_81	IF_1
0x4000458	      0xbf0e000000	                            mov edi, 0xe	      4967	gui.c	FUNCTION_81	IF_3	CALL_6
0x400045d	      0xe800000000	                          call 0x4000462	      4967	gui.c	FUNCTION_81	IF_3	CALL_6
0x4000462	          0x4889d8	                            mov rax, rbx	      4967	gui.c	FUNCTION_81	IF_3	CALL_6
0x4000465	            0xeb9e	                           jmp 0x4000405	      4967	gui.c	FUNCTION_81	IF_3	CALL_6
0x4000467	    0x660f1f840000	                    nop word [rax + rax]	      4967	gui.c	FUNCTION_81	IF_3	CALL_6
0x4000470	      0xbf09000000	                              mov edi, 9	      4970	gui.c	FUNCTION_81	ELSE_2	IF_5
0x4000475	      0xe800000000	                          call 0x400047a	      4970	gui.c	FUNCTION_81	ELSE_2	IF_5
0x400047a	          0x4889d8	                            mov rax, rbx	      4970	gui.c	FUNCTION_81	ELSE_2	IF_5
0x400047d	            0xeb86	                           jmp 0x4000405	      4970	gui.c	FUNCTION_81	ELSE_2	IF_5
0x400047f	              0x90	                                     nop	      4970	gui.c	FUNCTION_81	ELSE_2	IF_5
0x4000480	    0x8b1500000000	            mov edx, dword [0x04000486] 	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x4000486	            0x85d2	                           test edx, edx	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x4000488	     0xf856affffff	                           jne 0x40003f8	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x400048e	      0xbf0a000000	                            mov edi, 0xa	      4976	gui.c	FUNCTION_81	ELSE_4	IF_7
0x4000493	      0xe800000000	                          call 0x4000498	      4976	gui.c	FUNCTION_81	ELSE_4	IF_7
0x4000498	          0x4889d8	                            mov rax, rbx	      4976	gui.c	FUNCTION_81	ELSE_4	IF_7
0x400049b	      0xe965ffffff	                           jmp 0x4000405	      4976	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40004a0	            0x39d1	                            cmp ecx, edx	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x40004a2	            0x7420	                            je 0x40004c4	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x40004a4	    0x8b0500000000	            mov eax, dword [0x040004aa] 	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x40004aa	            0x85c0	                           test eax, eax	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x40004ac	     0xf8546ffffff	                           jne 0x40003f8	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x40004b2	      0xbf0c000000	                            mov edi, 0xc	      4973	gui.c	FUNCTION_81	ELSE_3	IF_6
0x40004b7	      0xe800000000	                          call 0x40004bc	      4973	gui.c	FUNCTION_81	ELSE_3	IF_6
0x40004bc	          0x4889d8	                            mov rax, rbx	      4973	gui.c	FUNCTION_81	ELSE_3	IF_6
0x40004bf	      0xe941ffffff	                           jmp 0x4000405	      4973	gui.c	FUNCTION_81	ELSE_3	IF_6
0x40004c4	          0x4889df	                            mov rdi, rbx	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x40004c7	      0xe800000000	                          call 0x40004cc	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x40004cc	            0x85c0	                           test eax, eax	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x40004ce	            0x750a	                           jne 0x40004da	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x40004d0	    0x8b0d00000000	            mov ecx, dword [0x040004d6] 	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x40004d6	            0x85c9	                           test ecx, ecx	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x40004d8	            0x74d8	                            je 0x40004b2	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x40004da	    0xf60500000000	               test byte [0x040004e1], 8	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40004e1	     0xf84f8feffff	                            je 0x40003df	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40004e7	      0xe90cffffff	                           jmp 0x40003f8	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40004ec	      0xe800000000	                          call 0x40004f1	      4981	gui.c	FUNCTION_81
gui_attempt_start	IF,2:SWITCH,0:functions,0:CALL,4:WHILE,0:ELSE,0:FOR,0:DO,0	37
0x4005c50	        0x4883ec28	                           sub rsp, 0x28	       159	gui.c	FUNCTION_2
0x4005c54	      0xbf00000000	                              mov edi, 0	       169	gui.c	FUNCTION_2	CALL_1
0x4005c59	    0x830500000000	               add dword [0x04005c60], 1	       162	gui.c	FUNCTION_2
0x4005c60	    0x64488b042528	                mov rax, qword fs:[0x28]	       159	gui.c	FUNCTION_2
0x4005c69	      0x4889442418	             mov qword [rsp + 0x18], rax	       159	gui.c	FUNCTION_2
0x4005c6e	            0x31c0	                            xor eax, eax	       159	gui.c	FUNCTION_2
0x4005c70	    0xc70500000000	               mov dword [0x04005c7a], 1	       163	gui.c	FUNCTION_2
0x4005c7a	    0xc70500000000	               mov dword [0x04005c84], 0	       166	gui.c	FUNCTION_2
0x4005c84	      0xe800000000	                          call 0x4005c89	       169	gui.c	FUNCTION_2	CALL_1
0x4005c89	    0x8b0500000000	            mov eax, dword [0x04005c8f] 	       170	gui.c	FUNCTION_2
0x4005c8f	    0x8b1500000000	            mov edx, dword [0x04005c95] 	       173	gui.c	FUNCTION_2	IF_1
0x4005c95	          0x83e801	                              sub eax, 1	       170	gui.c	FUNCTION_2
0x4005c98	            0x85d2	                           test edx, edx	       173	gui.c	FUNCTION_2	IF_1
0x4005c9a	    0x890500000000	            mov dword [0x04005ca0], eax 	       170	gui.c	FUNCTION_2
0x4005ca0	            0x751e	                           jne 0x4005cc0	       173	gui.c	FUNCTION_2	IF_1
0x4005ca2	    0x890500000000	            mov dword [0x04005ca8], eax 	       187	gui.c	FUNCTION_2
0x4005ca8	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       188	gui.c	FUNCTION_2
0x4005cad	    0x644833042528	                xor rax, qword fs:[0x28]	       188	gui.c	FUNCTION_2
0x4005cb6	            0x7541	                           jne 0x4005cf9	       188	gui.c	FUNCTION_2
0x4005cb8	        0x4883c428	                           add rsp, 0x28	       188	gui.c	FUNCTION_2
0x4005cbc	              0xc3	                                     ret	       188	gui.c	FUNCTION_2
0x4005cbd	           0xf1f00	                         nop dword [rax]	       188	gui.c	FUNCTION_2
0x4005cc0	      0x488d742410	                   lea rsi, [rsp + 0x10]	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x4005cc5	      0x488d7c2408	                      lea rdi, [rsp + 8]	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x4005cca	      0xe800000000	                          call 0x4005ccf	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x4005ccf	          0x83f801	                              cmp eax, 1	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x4005cd2	            0x7414	                            je 0x4005ce8	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x4005cd4	      0xe800000000	                          call 0x4005cd9	       184	gui.c	FUNCTION_2	IF_1	CALL_4
0x4005cd9	    0x8b0500000000	            mov eax, dword [0x04005cdf] 	       184	gui.c	FUNCTION_2	IF_1	CALL_4
0x4005cdf	          0x83e801	                              sub eax, 1	       184	gui.c	FUNCTION_2	IF_1	CALL_4
0x4005ce2	            0xebbe	                           jmp 0x4005ca2	       184	gui.c	FUNCTION_2	IF_1	CALL_4
0x4005ce4	         0xf1f4000	                         nop dword [rax]	       184	gui.c	FUNCTION_2	IF_1	CALL_4
0x4005ce8	      0x488b742408	                mov rsi, qword [rsp + 8]	       180	gui.c	FUNCTION_2	IF_1	CALL_3
0x4005ced	      0xbf3a000000	                           mov edi, 0x3a	       180	gui.c	FUNCTION_2	IF_1	CALL_3
0x4005cf2	      0xe800000000	                          call 0x4005cf7	       180	gui.c	FUNCTION_2	IF_1	CALL_3
0x4005cf7	            0xebdb	                           jmp 0x4005cd4	       180	gui.c	FUNCTION_2	IF_1	CALL_3
0x4005cf9	      0xe800000000	                          call 0x4005cfe	       188	gui.c	FUNCTION_2
gui_delete_lines	IF,5:SWITCH,0:functions,0:CALL,2:WHILE,0:ELSE,2:FOR,0:DO,0	41
0x4000df0	            0x85f6	                           test esi, esi	      2868	gui.c	FUNCTION_43	IF_1
0x4000df2	            0x7e58	                           jle 0x4000e4c	      2868	gui.c	FUNCTION_43	IF_1
0x4000df4	    0x8b1500000000	            mov edx, dword [0x04000dfa] 	      2871	gui.c	FUNCTION_43	IF_2
0x4000dfa	            0x4154	                                push r12	      2867	gui.c	FUNCTION_43
0x4000dfc	        0x448d243e	                   lea r12d, [rsi + rdi]	      2871	gui.c	FUNCTION_43	IF_2
0x4000e00	              0x55	                                push rbp	      2867	gui.c	FUNCTION_43
0x4000e01	              0x53	                                push rbx	      2867	gui.c	FUNCTION_43
0x4000e02	          0x4139d4	                           cmp r12d, edx	      2871	gui.c	FUNCTION_43	IF_2
0x4000e05	            0x7f49	                            jg 0x4000e50	      2871	gui.c	FUNCTION_43	IF_2
0x4000e07	            0x89fd	                            mov ebp, edi	      2871	gui.c	FUNCTION_43	IF_2
0x4000e09	            0x89f3	                            mov ebx, esi	      2871	gui.c	FUNCTION_43	IF_2
0x4000e0b	      0xe800000000	                          call 0x4000e10	      2877	gui.c	FUNCTION_43	ELSE_1	CALL_2
0x4000e10	    0x8b0500000000	            mov eax, dword [0x04000e16] 	      2881	gui.c	FUNCTION_43	ELSE_1	IF_3
0x4000e16	            0x39c5	                            cmp ebp, eax	      2881	gui.c	FUNCTION_43	ELSE_1	IF_3
0x4000e18	            0x7f2e	                            jg 0x4000e48	      2881	gui.c	FUNCTION_43	ELSE_1	IF_3
0x4000e1a	    0x8b1500000000	            mov edx, dword [0x04000e20] 	      2882	gui.c	FUNCTION_43	ELSE_1	IF_3
0x4000e20	    0x3b1500000000	            cmp edx, dword [0x04000e26] 	      2882	gui.c	FUNCTION_43	ELSE_1	IF_3
0x4000e26	            0x7c20	                            jl 0x4000e48	      2882	gui.c	FUNCTION_43	ELSE_1	IF_3
0x4000e28	    0x3b1500000000	            cmp edx, dword [0x04000e2e] 	      2883	gui.c	FUNCTION_43	ELSE_1	IF_3
0x4000e2e	            0x7f18	                            jg 0x4000e48	      2883	gui.c	FUNCTION_43	ELSE_1	IF_3
0x4000e30	          0x4139c4	                           cmp r12d, eax	      2885	gui.c	FUNCTION_43	ELSE_1	IF_3	IF_4
0x4000e33	            0x7f33	                            jg 0x4000e68	      2885	gui.c	FUNCTION_43	ELSE_1	IF_3	IF_4
0x4000e35	    0x3b0500000000	            cmp eax, dword [0x04000e3b] 	      2887	gui.c	FUNCTION_43	ELSE_1	IF_3	ELSE_2	IF_5
0x4000e3b	            0x7f0b	                            jg 0x4000e48	      2887	gui.c	FUNCTION_43	ELSE_1	IF_3	ELSE_2	IF_5
0x4000e3d	            0x29d8	                            sub eax, ebx	      2888	gui.c	FUNCTION_43	ELSE_1	IF_3	ELSE_2	IF_5
0x4000e3f	    0x890500000000	            mov dword [0x04000e45], eax 	      2888	gui.c	FUNCTION_43	ELSE_1	IF_3	ELSE_2	IF_5
0x4000e45	           0xf1f00	                         nop dword [rax]	      2888	gui.c	FUNCTION_43	ELSE_1	IF_3	ELSE_2	IF_5
0x4000e48	              0x5b	                                 pop rbx	      2891	gui.c	FUNCTION_43
0x4000e49	              0x5d	                                 pop rbp	      2891	gui.c	FUNCTION_43
0x4000e4a	            0x415c	                                 pop r12	      2891	gui.c	FUNCTION_43
0x4000e4c	            0xf3c3	                                     ret	      2891	gui.c	FUNCTION_43
0x4000e4e	            0x6690	                                     nop	      2891	gui.c	FUNCTION_43
0x4000e50	              0x5b	                                 pop rbx	      2891	gui.c	FUNCTION_43
0x4000e51	              0x5d	                                 pop rbp	      2891	gui.c	FUNCTION_43
0x4000e52	            0x415c	                                 pop r12	      2891	gui.c	FUNCTION_43
0x4000e54	    0x8b0d00000000	            mov ecx, dword [0x04000e5a] 	      2873	gui.c	FUNCTION_43	IF_2	CALL_1
0x4000e5a	    0x8b3500000000	            mov esi, dword [0x04000e60] 	      2873	gui.c	FUNCTION_43	IF_2	CALL_1
0x4000e60	      0xe99bfeffff	                 jmp sym.gui_clear_block	      2873	gui.c	FUNCTION_43	IF_2	CALL_1
0x4000e65	           0xf1f00	                         nop dword [rax]	      2873	gui.c	FUNCTION_43	IF_2	CALL_1
0x4000e68	    0xc60500000000	                mov byte [0x04000e6f], 0	      2886	gui.c	FUNCTION_43	ELSE_1	IF_3	IF_4
0x4000e6f	            0xebd7	                           jmp 0x4000e48	      2886	gui.c	FUNCTION_43	ELSE_1	IF_3	IF_4
gui_get_lightness	IF,0:SWITCH,0:functions,0:CALL,1:WHILE,0:ELSE,0:FOR,0:DO,0	18
0x4005730	        0x4883ec08	                              sub rsp, 8	      4784	gui.c	FUNCTION_76
0x4005734	      0xe800000000	                          call 0x4005739	      4785	gui.c	FUNCTION_76	CALL_1
0x4005739	          0x4889c2	                            mov rdx, rax	      4787	gui.c	FUNCTION_76
0x400573c	        0x4883c408	                              add rsp, 8	      4790	gui.c	FUNCTION_76
0x4005740	        0x48c1ea10	                           shr rdx, 0x10	      4787	gui.c	FUNCTION_76
0x4005744	           0xfb6d2	                           movzx edx, dl	      4787	gui.c	FUNCTION_76
0x4005747	    0x69ca2b010000	                    imul ecx, edx, 0x12b	      4787	gui.c	FUNCTION_76
0x400574d	           0xfb6d4	                           movzx edx, ah	      4787	gui.c	FUNCTION_76
0x4005750	           0xfb6c0	                           movzx eax, al	      4787	gui.c	FUNCTION_76
0x4005753	    0x69d24b020000	                    imul edx, edx, 0x24b	      4787	gui.c	FUNCTION_76
0x4005759	          0x6bc072	                     imul eax, eax, 0x72	      4787	gui.c	FUNCTION_76
0x400575c	             0x1ca	                            add edx, ecx	      4787	gui.c	FUNCTION_76
0x400575e	             0x1d0	                            add eax, edx	      4787	gui.c	FUNCTION_76
0x4005760	      0xbad34d6210	                     mov edx, 0x10624dd3	      4787	gui.c	FUNCTION_76
0x4005765	            0xf7ea	                                imul edx	      4787	gui.c	FUNCTION_76
0x4005767	            0x89d0	                            mov eax, edx	      4787	gui.c	FUNCTION_76
0x4005769	          0xc1e806	                              shr eax, 6	      4787	gui.c	FUNCTION_76
0x400576c	              0xc3	                                     ret	      4790	gui.c	FUNCTION_76
gui_shell_closed	IF,1:SWITCH,0:functions,0:CALL,3:WHILE,0:ELSE,0:FOR,0:DO,0	35
0x4006240	              0x55	                                push rbp	       816	gui.c	FUNCTION_9
0x4006241	              0x53	                                push rbx	       816	gui.c	FUNCTION_9
0x4006242	      0xbd00000000	                              mov ebp, 0	       819	gui.c	FUNCTION_9
0x4006247	      0xb91e000000	                           mov ecx, 0x1e	       819	gui.c	FUNCTION_9
0x400624c	          0x4889ee	                            mov rsi, rbp	       819	gui.c	FUNCTION_9
0x400624f	    0x4881ec080100	                          sub rsp, 0x108	       816	gui.c	FUNCTION_9
0x4006256	    0xc70500000000	               mov dword [0x04006260], 1	       822	gui.c	FUNCTION_9
0x4006260	          0x4889e7	                            mov rdi, rsp	       819	gui.c	FUNCTION_9
0x4006263	          0x4889e3	                            mov rbx, rsp	       819	gui.c	FUNCTION_9
0x4006266	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	       819	gui.c	FUNCTION_9
0x4006269	            0x31f6	                            xor esi, esi	       831	gui.c	FUNCTION_9	IF_1	CALL_1
0x400626b	            0x31ff	                            xor edi, edi	       831	gui.c	FUNCTION_9	IF_1	CALL_1
0x400626d	    0xc70500000000	               mov dword [0x04006277], 1	       824	gui.c	FUNCTION_9
0x4006277	    0x64488b042528	                mov rax, qword fs:[0x28]	       816	gui.c	FUNCTION_9
0x4006280	    0x48898424f800	             mov qword [rsp + 0xf8], rax	       816	gui.c	FUNCTION_9
0x4006288	            0x31c0	                            xor eax, eax	       816	gui.c	FUNCTION_9
0x400628a	    0xc70500000000	               mov dword [0x04006294], 1	       827	gui.c	FUNCTION_9
0x4006294	      0xe800000000	                          call 0x4006299	       831	gui.c	FUNCTION_9	IF_1	CALL_1
0x4006299	            0x85c0	                           test eax, eax	       831	gui.c	FUNCTION_9	IF_1	CALL_1
0x400629b	            0x7507	                           jne 0x40062a4	       831	gui.c	FUNCTION_9	IF_1	CALL_1
0x400629d	            0x31ff	                            xor edi, edi	       832	gui.c	FUNCTION_9	CALL_2
0x400629f	      0xe800000000	                          call 0x40062a4	       832	gui.c	FUNCTION_9	CALL_2
0x40062a4	    0x488b8424f800	            mov rax, qword [rsp + 0xf8] 	       836	gui.c	FUNCTION_9	CALL_3
0x40062ac	    0x644833042528	                xor rax, qword fs:[0x28]	       836	gui.c	FUNCTION_9	CALL_3
0x40062b5	      0xb91e000000	                           mov ecx, 0x1e	       835	gui.c	FUNCTION_9
0x40062ba	          0x4889ef	                            mov rdi, rbp	       835	gui.c	FUNCTION_9
0x40062bd	          0x4889de	                            mov rsi, rbx	       835	gui.c	FUNCTION_9
0x40062c0	    0xc70500000000	               mov dword [0x040062ca], 0	       834	gui.c	FUNCTION_9
0x40062ca	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	       835	gui.c	FUNCTION_9
0x40062cd	            0x750e	                           jne 0x40062dd	       836	gui.c	FUNCTION_9	CALL_3
0x40062cf	    0x4881c4080100	                          add rsp, 0x108	       837	gui.c	FUNCTION_9
0x40062d6	              0x5b	                                 pop rbx	       837	gui.c	FUNCTION_9
0x40062d7	              0x5d	                                 pop rbp	       837	gui.c	FUNCTION_9
0x40062d8	      0xe9d3fdffff	               jmp sym.gui_update_screen	       836	gui.c	FUNCTION_9	CALL_3
0x40062dd	      0xe800000000	                          call 0x40062e2	       836	gui.c	FUNCTION_9	CALL_3
gui_update_screen	IF,5:SWITCH,0:functions,0:CALL,12:WHILE,0:ELSE,0:FOR,0:DO,0	84
0x40060b0	              0x55	                                push rbp	      5127	gui.c	FUNCTION_88
0x40060b1	              0x53	                                push rbx	      5127	gui.c	FUNCTION_88
0x40060b2	        0x4883ec08	                              sub rsp, 8	      5127	gui.c	FUNCTION_88
0x40060b6	      0xe800000000	                          call 0x40060bb	      5134	gui.c	FUNCTION_88	CALL_1
0x40060bb	      0xe800000000	                          call 0x40060c0	      5135	gui.c	FUNCTION_88	CALL_2
0x40060c0	    0x8b1500000000	            mov edx, dword [0x040060c6] 	      5138	gui.c	FUNCTION_88	IF_1	CALL_3
0x40060c6	            0x85d2	                           test edx, edx	      5138	gui.c	FUNCTION_88	IF_1	CALL_3
0x40060c8	            0x7426	                            je 0x40060f0	      5138	gui.c	FUNCTION_88	IF_1	CALL_3
0x40060ca	            0x31ff	                            xor edi, edi	      5157	gui.c	FUNCTION_88	CALL_7
0x40060cc	      0xe800000000	                          call 0x40060d1	      5157	gui.c	FUNCTION_88	CALL_7
0x40060d1	      0xe800000000	                          call 0x40060d6	      5158	gui.c	FUNCTION_88	CALL_8
0x40060d6	        0x4883c408	                              add rsp, 8	      5172	gui.c	FUNCTION_88
0x40060da	            0x31f6	                            xor esi, esi	      5171	gui.c	FUNCTION_88	CALL_12
0x40060dc	      0xbf01000000	                              mov edi, 1	      5171	gui.c	FUNCTION_88	CALL_12
0x40060e1	              0x5b	                                 pop rbx	      5172	gui.c	FUNCTION_88
0x40060e2	              0x5d	                                 pop rbp	      5172	gui.c	FUNCTION_88
0x40060e3	      0xe900000000	                           jmp 0x40060e8	      5171	gui.c	FUNCTION_88	CALL_12
0x40060e8	     0xf1f84000000	                   nop dword [rax + rax]	      5171	gui.c	FUNCTION_88	CALL_12
0x40060f0	      0xe800000000	                          call 0x40060f5	      5138	gui.c	FUNCTION_88	IF_1	CALL_3
0x40060f5	            0x85c0	                           test eax, eax	      5138	gui.c	FUNCTION_88	IF_1	CALL_3
0x40060f7	    0x488b05000000	            mov rax, qword [0x040060fe] 	      5138	gui.c	FUNCTION_88	IF_1	CALL_3
0x40060fe	     0xf849c000000	                            je 0x40061a0	      5138	gui.c	FUNCTION_88	IF_1	CALL_3
0x4006104	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x4006108	    0x483915000000	            cmp qword [0x0400610f], rdx 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x400610f	     0xf84aa000000	                            je 0x40061bf	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x4006115	      0xe800000000	                          call 0x400611a	      5144	gui.c	FUNCTION_88	IF_1	IF_2	CALL_5
0x400611a	            0x85c0	                           test eax, eax	      5144	gui.c	FUNCTION_88	IF_1	IF_2	CALL_5
0x400611c	     0xf85b6000000	                           jne 0x40061d8	      5144	gui.c	FUNCTION_88	IF_1	IF_2	CALL_5
0x4006122	    0x488b05000000	            mov rax, qword [0x04006129] 	      5147	gui.c	FUNCTION_88	IF_1	IF_3
0x4006129	    0x4883b8a80200	              cmp qword [rax + 0x2a8], 0	      5147	gui.c	FUNCTION_88	IF_1	IF_3
0x4006131	     0xf8ec1000000	                           jle 0x40061f8	      5147	gui.c	FUNCTION_88	IF_1	IF_3
0x4006137	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      5154	gui.c	FUNCTION_88	IF_1
0x400613b	    0x488b2d000000	            mov rbp, qword [0x04006142] 	      5149	gui.c	FUNCTION_88	IF_1	IF_3
0x4006142	            0x31ff	                            xor edi, edi	      5157	gui.c	FUNCTION_88	CALL_7
0x4006144	        0x488b5838	            mov rbx, qword [rax + 0x38] 	      5150	gui.c	FUNCTION_88	IF_1	IF_3
0x4006148	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5154	gui.c	FUNCTION_88	IF_1
0x400614c	    0x488915000000	            mov qword [0x04006153], rdx 	      5154	gui.c	FUNCTION_88	IF_1
0x4006153	    0x488905000000	            mov qword [0x0400615a], rax 	      5154	gui.c	FUNCTION_88	IF_1
0x400615a	      0xe800000000	                          call 0x400615f	      5157	gui.c	FUNCTION_88	CALL_7
0x400615f	      0xe800000000	                          call 0x4006164	      5158	gui.c	FUNCTION_88	CALL_8
0x4006164	          0x4839dd	                            cmp rbp, rbx	      5161	gui.c	FUNCTION_88	IF_4
0x4006167	     0xf84ab000000	                            je 0x4006218	      5161	gui.c	FUNCTION_88	IF_4
0x400616d	    0x488b3d000000	            mov rdi, qword [0x04006174] 	      5166	gui.c	FUNCTION_88	IF_4	CALL_10
0x4006174	          0x4889ee	                            mov rsi, rbp	      5166	gui.c	FUNCTION_88	IF_4	CALL_10
0x4006177	      0xe800000000	                          call 0x400617c	      5166	gui.c	FUNCTION_88	IF_4	CALL_10
0x400617c	    0x488b3d000000	            mov rdi, qword [0x04006183] 	      5167	gui.c	FUNCTION_88	IF_4	CALL_11
0x4006183	          0x4889de	                            mov rsi, rbx	      5167	gui.c	FUNCTION_88	IF_4	CALL_11
0x4006186	      0xe800000000	                          call 0x400618b	      5167	gui.c	FUNCTION_88	IF_4	CALL_11
0x400618b	    0x488b05000000	            mov rax, qword [0x04006192] 	      5168	gui.c	FUNCTION_88	IF_4
0x4006192	    0x83a0b4000000	      and dword [rax + 0xb4], 0xffffffef	      5168	gui.c	FUNCTION_88	IF_4
0x4006199	      0xe938ffffff	                           jmp 0x40060d6	      5168	gui.c	FUNCTION_88	IF_4
0x400619e	            0x6690	                                     nop	      5168	gui.c	FUNCTION_88	IF_4
0x40061a0	    0x4883b8a80200	              cmp qword [rax + 0x2a8], 0	      5140	gui.c	FUNCTION_88	IF_1
0x40061a8	     0xf8e1cffffff	                           jle 0x40060ca	      5140	gui.c	FUNCTION_88	IF_1
0x40061ae	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x40061b2	    0x483915000000	            cmp qword [0x040061b9], rdx 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x40061b9	     0xf8556ffffff	                           jne 0x4006115	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x40061bf	        0x488b4040	            mov rax, qword [rax + 0x40] 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x40061c3	    0x483905000000	            cmp qword [0x040061ca], rax 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x40061ca	     0xf8545ffffff	                           jne 0x4006115	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x40061d0	      0xe9f5feffff	                           jmp 0x40060ca	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x40061d5	           0xf1f00	                         nop dword [rax]	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x40061d8	    0x4c8b05000000	              mov r8, qword [0x040061df]	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x40061df	            0x31c9	                            xor ecx, ecx	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x40061e1	            0x31d2	                            xor edx, edx	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x40061e3	            0x31f6	                            xor esi, esi	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x40061e5	      0xbf1e000000	                           mov edi, 0x1e	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x40061ea	      0xe800000000	                          call 0x40061ef	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x40061ef	      0xe92effffff	                           jmp 0x4006122	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x40061f4	         0xf1f4000	                         nop dword [rax]	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x40061f8	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      5154	gui.c	FUNCTION_88	IF_1
0x40061fc	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5154	gui.c	FUNCTION_88	IF_1
0x4006200	    0x488915000000	            mov qword [0x04006207], rdx 	      5154	gui.c	FUNCTION_88	IF_1
0x4006207	    0x488905000000	            mov qword [0x0400620e], rax 	      5154	gui.c	FUNCTION_88	IF_1
0x400620e	      0xe9b7feffff	                           jmp 0x40060ca	      5154	gui.c	FUNCTION_88	IF_1
0x4006213	       0xf1f440000	                   nop dword [rax + rax]	      5154	gui.c	FUNCTION_88	IF_1
0x4006218	    0x488b3d000000	            mov rdi, qword [0x0400621f] 	      5162	gui.c	FUNCTION_88	IF_4	CALL_9
0x400621f	      0xe800000000	                          call 0x4006224	      5162	gui.c	FUNCTION_88	IF_4	CALL_9
0x4006224	            0x85c0	                           test eax, eax	      5162	gui.c	FUNCTION_88	IF_4	CALL_9
0x4006226	     0xf8550ffffff	                           jne 0x400617c	      5162	gui.c	FUNCTION_88	IF_4	CALL_9
0x400622c	    0x8b0500000000	            mov eax, dword [0x04006232] 	      5163	gui.c	FUNCTION_88	IF_4
0x4006232	            0x85c0	                           test eax, eax	      5163	gui.c	FUNCTION_88	IF_4
0x4006234	     0xf8542ffffff	                           jne 0x400617c	      5163	gui.c	FUNCTION_88	IF_4
0x400623a	      0xe997feffff	                           jmp 0x40060d6	      5163	gui.c	FUNCTION_88	IF_4
gui_may_update_scrollbars	IF,1:SWITCH,0:functions,0:CALL,3:WHILE,0:ELSE,0:FOR,0:DO,0	18
0x4004ef0	    0x8b1500000000	            mov edx, dword [0x04004ef6] 	      4167	gui.c	FUNCTION_64	IF_1
0x4004ef6	            0x85d2	                           test edx, edx	      4167	gui.c	FUNCTION_64	IF_1
0x4004ef8	            0x740a	                            je 0x4004f04	      4167	gui.c	FUNCTION_64	IF_1
0x4004efa	    0x8b0500000000	            mov eax, dword [0x04004f00] 	      4167	gui.c	FUNCTION_64	IF_1
0x4004f00	            0x85c0	                           test eax, eax	      4167	gui.c	FUNCTION_64	IF_1
0x4004f02	            0x740c	                            je 0x4004f10	      4167	gui.c	FUNCTION_64	IF_1
0x4004f04	    0xc70500000000	               mov dword [0x04004f0e], 1	      4173	gui.c	FUNCTION_64
0x4004f0e	              0xc3	                                     ret	      4173	gui.c	FUNCTION_64
0x4004f0f	              0x90	                                     nop	      4173	gui.c	FUNCTION_64
0x4004f10	        0x4883ec08	                              sub rsp, 8	      4166	gui.c	FUNCTION_64
0x4004f14	      0xe800000000	                          call 0x4004f19	      4169	gui.c	FUNCTION_64	IF_1	CALL_1
0x4004f19	            0x31ff	                            xor edi, edi	      4170	gui.c	FUNCTION_64	IF_1	CALL_2
0x4004f1b	      0xe800000000	                          call 0x4004f20	      4170	gui.c	FUNCTION_64	IF_1	CALL_2
0x4004f20	      0xbf01000000	                              mov edi, 1	      4171	gui.c	FUNCTION_64	IF_1	CALL_3
0x4004f25	      0xe800000000	                          call 0x4004f2a	      4171	gui.c	FUNCTION_64	IF_1	CALL_3
0x4004f2a	    0xc70500000000	               mov dword [0x04004f34], 1	      4173	gui.c	FUNCTION_64
0x4004f34	        0x4883c408	                              add rsp, 8	      4174	gui.c	FUNCTION_64
0x4004f38	              0xc3	                                     ret	      4174	gui.c	FUNCTION_64
ex_gui	IF,3:SWITCH,0:functions,0:CALL,7:WHILE,0:ELSE,0:FOR,0:DO,0	43
0x4005fc0	              0x53	                                push rbx	      4989	gui.c	FUNCTION_82
0x4005fc1	          0x4889fb	                            mov rbx, rdi	      4989	gui.c	FUNCTION_82
0x4005fc4	          0x488b3f	                    mov rdi, qword [rdi]	      4990	gui.c	FUNCTION_82
0x4005fc7	          0x803f2d	                    cmp byte [rdi], 0x2d	      4997	gui.c	FUNCTION_82	IF_1
0x4005fca	            0x744c	                            je 0x4006018	      4997	gui.c	FUNCTION_82	IF_1
0x4005fcc	    0x8b0500000000	            mov eax, dword [0x04005fd2] 	      5004	gui.c	FUNCTION_82	IF_2
0x4005fd2	            0x85c0	                           test eax, eax	      5004	gui.c	FUNCTION_82	IF_2
0x4005fd4	            0x742a	                            je 0x4006000	      5004	gui.c	FUNCTION_82	IF_2
0x4005fd6	          0x488b03	                    mov rax, qword [rbx]	      5014	gui.c	FUNCTION_82	IF_3	CALL_6
0x4005fd9	           0xfb638	                   movzx edi, byte [rax]	      5014	gui.c	FUNCTION_82	IF_3	CALL_6
0x4005fdc	      0xe800000000	                          call 0x4005fe1	      5014	gui.c	FUNCTION_82	IF_3	CALL_6
0x4005fe1	            0x85c0	                           test eax, eax	      5014	gui.c	FUNCTION_82	IF_3	CALL_6
0x4005fe3	            0x740b	                            je 0x4005ff0	      5014	gui.c	FUNCTION_82	IF_3	CALL_6
0x4005fe5	              0x5b	                                 pop rbx	      5016	gui.c	FUNCTION_82
0x4005fe6	              0xc3	                                     ret	      5016	gui.c	FUNCTION_82
0x4005fe7	    0x660f1f840000	                    nop word [rax + rax]	      5016	gui.c	FUNCTION_82
0x4005ff0	          0x4889df	                            mov rdi, rbx	      5015	gui.c	FUNCTION_82	CALL_7
0x4005ff3	              0x5b	                                 pop rbx	      5016	gui.c	FUNCTION_82
0x4005ff4	      0xe900000000	                           jmp 0x4005ff9	      5015	gui.c	FUNCTION_82	CALL_7
0x4005ff9	     0xf1f80000000	                         nop dword [rax]	      5015	gui.c	FUNCTION_82	CALL_7
0x4006000	      0xe800000000	                          call 0x4006005	      5008	gui.c	FUNCTION_82	IF_2	CALL_3
0x4006005	      0xe800000000	                          call 0x400600a	      5009	gui.c	FUNCTION_82	IF_2	CALL_4
0x400600a	      0xe800000000	                          call 0x400600f	      5011	gui.c	FUNCTION_82	IF_2	CALL_5
0x400600f	            0xebc5	                           jmp 0x4005fd6	      5011	gui.c	FUNCTION_82	IF_2	CALL_5
0x4006011	     0xf1f80000000	                         nop dword [rax]	      5011	gui.c	FUNCTION_82	IF_2	CALL_5
0x4006018	         0xfb64701	               movzx eax, byte [rdi + 1]	      4998	gui.c	FUNCTION_82	IF_1
0x400601c	            0x89c2	                            mov edx, eax	      4998	gui.c	FUNCTION_82	IF_1
0x400601e	          0x83e2fb	                     and edx, 0xfffffffb	      4998	gui.c	FUNCTION_82	IF_1
0x4006021	          0x80fa62	                            cmp dl, 0x62	      4998	gui.c	FUNCTION_82	IF_1
0x4006024	            0x75a6	                           jne 0x4005fcc	      4998	gui.c	FUNCTION_82	IF_1
0x4006026	         0xfb65702	               movzx edx, byte [rdi + 2]	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x400602a	          0xf6c2df	                           test dl, 0xdf	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x400602d	            0x7405	                            je 0x4006034	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x400602f	          0x80fa09	                               cmp dl, 9	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x4006032	            0x7598	                           jne 0x4005fcc	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x4006034	            0x3c62	                            cmp al, 0x62	      5001	gui.c	FUNCTION_82	IF_1
0x4006036	           0xf94c0	                                 sete al	      5001	gui.c	FUNCTION_82	IF_1
0x4006039	        0x4883c702	                              add rdi, 2	      5002	gui.c	FUNCTION_82	IF_1	CALL_2
0x400603d	           0xfb6c0	                           movzx eax, al	      5001	gui.c	FUNCTION_82	IF_1
0x4006040	    0x890500000000	            mov dword [0x04006046], eax 	      5001	gui.c	FUNCTION_82	IF_1
0x4006046	      0xe800000000	                          call 0x400604b	      5002	gui.c	FUNCTION_82	IF_1	CALL_2
0x400604b	          0x488903	                    mov qword [rbx], rax	      5002	gui.c	FUNCTION_82	IF_1	CALL_2
0x400604e	      0xe979ffffff	                           jmp 0x4005fcc	      5002	gui.c	FUNCTION_82	IF_1	CALL_2
gui_update_cursor_later	IF,0:SWITCH,0:functions,0:CALL,2:WHILE,0:ELSE,0:FOR,0:DO,0	2
0x4000e80	      0xbf00000000	                              mov edi, 0	      1758	gui.c	FUNCTION_29	CALL_2
0x4000e85	      0xe900000000	                           jmp 0x4000e8a	      1758	gui.c	FUNCTION_29	CALL_2
gui_write	IF,21:SWITCH,1:functions,0:CALL,31:WHILE,2:ELSE,12:FOR,1:DO,0	360
0x40048e0	            0x4157	                                push r15	      1765	gui.c	FUNCTION_30
0x40048e2	            0x4156	                                push r14	      1765	gui.c	FUNCTION_30
0x40048e4	            0x4155	                                push r13	      1765	gui.c	FUNCTION_30
0x40048e6	            0x4154	                                push r12	      1765	gui.c	FUNCTION_30
0x40048e8	              0x55	                                push rbp	      1765	gui.c	FUNCTION_30
0x40048e9	              0x53	                                push rbx	      1765	gui.c	FUNCTION_30
0x40048ea	        0x4883ec28	                           sub rsp, 0x28	      1765	gui.c	FUNCTION_30
0x40048ee	    0x64488b042528	                mov rax, qword fs:[0x28]	      1765	gui.c	FUNCTION_30
0x40048f7	      0x4889442418	             mov qword [rsp + 0x18], rax	      1765	gui.c	FUNCTION_30
0x40048fc	            0x31c0	                            xor eax, eax	      1765	gui.c	FUNCTION_30
0x40048fe	            0x85f6	                           test esi, esi	      1797	gui.c	FUNCTION_30	WHILE_1
0x4004900	     0xf848f050000	                            je 0x4004e95	      1797	gui.c	FUNCTION_30	WHILE_1
0x4004906	          0x4989fd	                            mov r13, rdi	      1797	gui.c	FUNCTION_30	WHILE_1
0x4004909	          0x4189f6	                           mov r14d, esi	      1797	gui.c	FUNCTION_30	WHILE_1
0x400490c	    0xc74424080000	                  mov dword [rsp + 8], 0	      1797	gui.c	FUNCTION_30	WHILE_1
0x4004914	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1797	gui.c	FUNCTION_30	WHILE_1
0x400491c	    0xc74424040000	                  mov dword [rsp + 4], 0	      1797	gui.c	FUNCTION_30	WHILE_1
0x4004924	    0xc70424000000	                      mov dword [rsp], 0	      1797	gui.c	FUNCTION_30	WHILE_1
0x400492b	       0xf1f440000	                   nop dword [rax + rax]	      1797	gui.c	FUNCTION_30	WHILE_1
0x4004930	      0x410fb64500	                   movzx eax, byte [r13]	      1797	gui.c	FUNCTION_30	WHILE_1
0x4004935	            0x3c1b	                            cmp al, 0x1b	      1799	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4004937	     0xf8453020000	                            je 0x4004b90	      1799	gui.c	FUNCTION_30	WHILE_1	IF_4
0x400493d	          0x8d50ff	                      lea edx, [rax - 1]	      1894	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x4004940	          0x80fa01	                               cmp dl, 1	      1894	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x4004943	            0x763b	                           jbe 0x4004980	      1894	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x4004945	            0x3c1f	                            cmp al, 0x1f	      1894	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x4004947	            0x7737	                            ja 0x4004980	      1894	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x4004949	            0x3c0a	                             cmp al, 0xa	      1899	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12
0x400494b	     0xf8477020000	                            je 0x4004bc8	      1899	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12
0x4004951	            0x3c0d	                             cmp al, 0xd	      1907	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_7	IF_14
0x4004953	     0xf84c9020000	                            je 0x4004c22	      1907	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_7	IF_14
0x4004959	            0x3c08	                               cmp al, 8	      1911	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15
0x400495b	     0xf8568050000	                           jne 0x4004ec9	      1911	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15
0x4004961	    0x8b0500000000	            mov eax, dword [0x04004967] 	      1913	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x4004967	            0x85c0	                           test eax, eax	      1913	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x4004969	     0xf8428020000	                            je 0x4004b97	      1913	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x400496f	          0x83e801	                              sub eax, 1	      1914	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x4004972	    0x890500000000	            mov dword [0x04004978], eax 	      1914	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x4004978	      0xe91a020000	                           jmp 0x4004b97	      1914	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x400497d	           0xf1f00	                         nop dword [rax]	      1914	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x4004980	          0x4585f6	                         test r14d, r14d	      1932	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4004983	      0x4c896c2410	             mov qword [rsp + 0x10], r13	      1931	gui.c	FUNCTION_30	WHILE_1	ELSE_11
0x4004988	            0x7ea6	                           jle 0x4004930	      1932	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x400498a	      0x410fb64500	                   movzx eax, byte [r13]	      1936	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x400498f	          0x8d50ff	                      lea edx, [rax - 1]	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4004992	          0x80fa01	                               cmp dl, 1	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4004995	            0x7604	                           jbe 0x400499b	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4004997	            0x3c1f	                            cmp al, 0x1f	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4004999	            0x769a	                           jbe 0x4004935	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x400499b	        0x498d5d01	                      lea rbx, [r13 + 1]	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x400499f	            0xeb1d	                           jmp 0x40049be	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x40049a1	     0xf1f80000000	                         nop dword [rax]	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x40049a8	           0xfb603	                   movzx eax, byte [rbx]	      1936	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x40049ab	        0x488d4b01	                      lea rcx, [rbx + 1]	      1936	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x40049af	          0x8d50ff	                      lea edx, [rax - 1]	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x40049b2	          0x80fa01	                               cmp dl, 1	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x40049b5	            0x7604	                           jbe 0x40049bb	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x40049b7	            0x3c1f	                            cmp al, 0x1f	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x40049b9	            0x760e	                           jbe 0x40049c9	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x40049bb	          0x4889cb	                            mov rbx, rcx	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x40049be	        0x4183ee01	                             sub r14d, 1	      1932	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x40049c2	      0x48895c2410	             mov qword [rsp + 0x10], rbx	      1947	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x40049c7	            0x75df	                           jne 0x40049a8	      1932	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x40049c9	          0x4189dc	                           mov r12d, ebx	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x40049cc	          0x4529ec	                          sub r12d, r13d	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x40049cf	          0x4585e4	                         test r12d, r12d	      2046	gui.c	FUNCTION_36	IF_1
0x40049d2	     0xf84e8010000	                            je 0x4004bc0	      2046	gui.c	FUNCTION_36	IF_1
0x40049d8	     0xf88c6010000	                            js 0x4004ba4	      2049	gui.c	FUNCTION_36	IF_2
0x40049de	    0x8b3500000000	            mov esi, dword [0x040049e4] 	      2055	gui.c	FUNCTION_36	WHILE_1	IF_3
0x40049e4	            0x85f6	                           test esi, esi	      2055	gui.c	FUNCTION_36	WHILE_1	IF_3
0x40049e6	     0xf8496000000	                            je 0x4004a82	      2055	gui.c	FUNCTION_36	WHILE_1	IF_3
0x40049ec	            0x31ed	                            xor ebp, ebp	      2055	gui.c	FUNCTION_36	WHILE_1	IF_3
0x40049ee	            0x31db	                            xor ebx, ebx	      2055	gui.c	FUNCTION_36	WHILE_1	IF_3
0x40049f0	          0x4863d3	                         movsxd rdx, ebx	      2061	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x40049f3	      0x4d8d7c1500	                    lea r15, [r13 + rdx]	      2061	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x40049f8	          0x4c89ff	                            mov rdi, r15	      2061	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x40049fb	    0xff1500000000	                 call qword [0x04004a01]	      2061	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4004a01	             0x1c5	                            add ebp, eax	      2061	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4004a03	    0x8b0500000000	            mov eax, dword [0x04004a09] 	      2062	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1	IF_4
0x4004a09	             0x1e8	                            add eax, ebp	      2062	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1	IF_4
0x4004a0b	            0x4898	                                    cdqe	      2062	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1	IF_4
0x4004a0d	    0x483b05000000	            cmp rax, qword [0x04004a14] 	      2062	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1	IF_4
0x4004a14	            0x7f10	                            jg 0x4004a26	      2062	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1	IF_4
0x4004a16	          0x4c89ff	                            mov rdi, r15	      2064	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4004a19	    0xff1500000000	                 call qword [0x04004a1f]	      2064	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4004a1f	             0x1c3	                            add ebx, eax	      2064	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4004a21	          0x4439e3	                           cmp ebx, r12d	      2059	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4004a24	            0x7cca	                            jl 0x40049f0	      2059	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4004a26	          0x4439e3	                           cmp ebx, r12d	      2059	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4004a29	        0x410f4fdc	                         cmovg ebx, r12d	      2059	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4004a2d	          0x4531c9	                            xor r9d, r9d	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x4004a30	          0x4531c0	                            xor r8d, r8d	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x4004a33	            0x31c9	                            xor ecx, ecx	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x4004a35	            0x31d2	                            xor edx, edx	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x4004a37	          0x4c89ef	                            mov rdi, r13	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x4004a3a	            0x89de	                            mov esi, ebx	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x4004a3c	      0xe800000000	                          call 0x4004a41	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x4004a41	          0x4129dc	                           sub r12d, ebx	      2079	gui.c	FUNCTION_36	WHILE_1
0x4004a44	          0x4863c3	                         movsxd rax, ebx	      2078	gui.c	FUNCTION_36	WHILE_1
0x4004a47	          0x4901c5	                            add r13, rax	      2078	gui.c	FUNCTION_36	WHILE_1
0x4004a4a	          0x4585e4	                         test r12d, r12d	      2082	gui.c	FUNCTION_36	WHILE_1	IF_7
0x4004a4d	            0x7e66	                           jle 0x4004ab5	      2082	gui.c	FUNCTION_36	WHILE_1	IF_7
0x4004a4f	    0x486305000000	         movsxd rax, dword [0x04004a56] 	      2082	gui.c	FUNCTION_36	WHILE_1	IF_7
0x4004a56	    0x483b05000000	            cmp rax, qword [0x04004a5d] 	      2082	gui.c	FUNCTION_36	WHILE_1	IF_7
0x4004a5d	     0xf8cf5000000	                            jl 0x4004b58	      2082	gui.c	FUNCTION_36	WHILE_1	IF_7
0x4004a63	    0x8b3500000000	            mov esi, dword [0x04004a69] 	      2055	gui.c	FUNCTION_36	WHILE_1	IF_3
0x4004a69	    0x830500000000	               add dword [0x04004a70], 1	      2090	gui.c	FUNCTION_36	WHILE_1	IF_8
0x4004a70	    0xc70500000000	               mov dword [0x04004a7a], 0	      2089	gui.c	FUNCTION_36	WHILE_1	IF_8
0x4004a7a	            0x85f6	                           test esi, esi	      2055	gui.c	FUNCTION_36	WHILE_1	IF_3
0x4004a7c	     0xf856affffff	                           jne 0x40049ec	      2055	gui.c	FUNCTION_36	WHILE_1	IF_3
0x4004a82	    0x8b1500000000	            mov edx, dword [0x04004a88] 	      2071	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x4004a88	    0x488b1d000000	            mov rbx, qword [0x04004a8f] 	      2071	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x4004a8f	        0x428d0422	                    lea eax, [rdx + r12]	      2071	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x4004a93	            0x4898	                                    cdqe	      2071	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x4004a95	          0x4839d8	                            cmp rax, rbx	      2071	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x4004a98	            0x7e06	                           jle 0x4004aa0	      2071	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x4004a9a	            0x29d3	                            sub ebx, edx	      2072	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x4004a9c	            0xeb8f	                           jmp 0x4004a2d	      2072	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x4004a9e	            0x6690	                                     nop	      2072	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x4004aa0	          0x4531c9	                            xor r9d, r9d	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x4004aa3	          0x4531c0	                            xor r8d, r8d	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x4004aa6	            0x31c9	                            xor ecx, ecx	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x4004aa8	            0x31d2	                            xor edx, edx	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x4004aaa	          0x4489e6	                           mov esi, r12d	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x4004aad	          0x4c89ef	                            mov rdi, r13	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x4004ab0	      0xe800000000	                          call 0x4004ab5	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x4004ab5	    0x486305000000	         movsxd rax, dword [0x04004abc] 	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x4004abc	    0x483905000000	            cmp qword [0x04004ac3], rax 	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x4004ac3	     0xf8eea030000	                           jle 0x4004eb3	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x4004ac9	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x4004ace	          0x4585f6	                         test r14d, r14d	      1797	gui.c	FUNCTION_30	WHILE_1
0x4004ad1	     0xf8559feffff	                           jne 0x4004930	      1797	gui.c	FUNCTION_30	WHILE_1
0x4004ad7	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      1956	gui.c	FUNCTION_30	IF_19
0x4004adb	            0x85c9	                           test ecx, ecx	      1956	gui.c	FUNCTION_30	IF_19
0x4004add	     0xf8546030000	                           jne 0x4004e29	      1956	gui.c	FUNCTION_30	IF_19
0x4004ae3	    0x488b05000000	            mov rax, qword [0x04004aea] 	      1961	gui.c	FUNCTION_30	IF_20
0x4004aea	    0x483905000000	            cmp qword [0x04004af1], rax 	      1961	gui.c	FUNCTION_30	IF_20
0x4004af1	     0xf8486030000	                            je 0x4004e7d	      1961	gui.c	FUNCTION_30	IF_20
0x4004af7	    0xc70500000000	     mov dword [0x04004b01], 0xffffffff 	      1962	gui.c	FUNCTION_30	IF_20
0x4004b01	        0x8b7c2408	                mov edi, dword [rsp + 8]	      1969	gui.c	FUNCTION_30	CALL_29
0x4004b05	      0xe800000000	                          call 0x4004b0a	      1969	gui.c	FUNCTION_30	CALL_29
0x4004b0a	    0x488b05000000	            mov rax, qword [0x04004b11] 	      1972	gui.c	FUNCTION_30
0x4004b11	    0xc70500000000	     mov dword [0x04004b1b], 0xffffffff 	      1979	gui.c	FUNCTION_30
0x4004b1b	    0x488905000000	            mov qword [0x04004b22], rax 	      1972	gui.c	FUNCTION_30
0x4004b22	    0x8b0500000000	            mov eax, dword [0x04004b28] 	      2034	gui.c	FUNCTION_35	IF_1
0x4004b28	            0x85c0	                           test eax, eax	      2034	gui.c	FUNCTION_35	IF_1
0x4004b2a	            0x7505	                           jne 0x4004b31	      2034	gui.c	FUNCTION_35	IF_1
0x4004b2c	      0xe800000000	                          call 0x4004b31	      2035	gui.c	FUNCTION_35	CALL_1
0x4004b31	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1983	gui.c	FUNCTION_30
0x4004b36	    0x644833042528	                xor rax, qword fs:[0x28]	      1983	gui.c	FUNCTION_30
0x4004b3f	     0xf8594030000	                           jne 0x4004ed9	      1983	gui.c	FUNCTION_30
0x4004b45	        0x4883c428	                           add rsp, 0x28	      1983	gui.c	FUNCTION_30
0x4004b49	              0x5b	                                 pop rbx	      1983	gui.c	FUNCTION_30
0x4004b4a	              0x5d	                                 pop rbp	      1983	gui.c	FUNCTION_30
0x4004b4b	            0x415c	                                 pop r12	      1983	gui.c	FUNCTION_30
0x4004b4d	            0x415d	                                 pop r13	      1983	gui.c	FUNCTION_30
0x4004b4f	            0x415e	                                 pop r14	      1983	gui.c	FUNCTION_30
0x4004b51	            0x415f	                                 pop r15	      1983	gui.c	FUNCTION_30
0x4004b53	              0xc3	                                     ret	      1983	gui.c	FUNCTION_30
0x4004b54	         0xf1f4000	                         nop dword [rax]	      1983	gui.c	FUNCTION_30
0x4004b58	          0x4531c9	                            xor r9d, r9d	      2083	gui.c	FUNCTION_36	WHILE_1	IF_7	CALL_3
0x4004b5b	          0x4531c0	                            xor r8d, r8d	      2083	gui.c	FUNCTION_36	WHILE_1	IF_7	CALL_3
0x4004b5e	            0x31c9	                            xor ecx, ecx	      2083	gui.c	FUNCTION_36	WHILE_1	IF_7	CALL_3
0x4004b60	            0x31d2	                            xor edx, edx	      2083	gui.c	FUNCTION_36	WHILE_1	IF_7	CALL_3
0x4004b62	      0xbe01000000	                              mov esi, 1	      2083	gui.c	FUNCTION_36	WHILE_1	IF_7	CALL_3
0x4004b67	      0xbf00000000	                              mov edi, 0	      2083	gui.c	FUNCTION_36	WHILE_1	IF_7	CALL_3
0x4004b6c	      0xe800000000	                          call 0x4004b71	      2083	gui.c	FUNCTION_36	WHILE_1	IF_7	CALL_3
0x4004b71	    0x486305000000	         movsxd rax, dword [0x04004b78] 	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x4004b78	    0x483b05000000	            cmp rax, qword [0x04004b7f] 	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x4004b7f	     0xf8c59feffff	                            jl 0x40049de	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x4004b85	      0xe9d9feffff	                           jmp 0x4004a63	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x4004b8a	    0x660f1f440000	                    nop word [rax + rax]	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x4004b90	      0x41807d017c	                cmp byte [r13 + 1], 0x7c	      1799	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4004b95	            0x7458	                            je 0x4004bef	      1799	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4004b97	        0x4183ee01	                             sub r14d, 1	      1926	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x4004b9b	        0x4983c501	                              add r13, 1	      1927	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x4004b9f	      0xe92affffff	                           jmp 0x4004ace	      1927	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x4004ba4	          0x4c89ef	                            mov rdi, r13	      2050	gui.c	FUNCTION_36	CALL_1
0x4004ba7	      0xe800000000	                          call 0x4004bac	      2050	gui.c	FUNCTION_36	CALL_1
0x4004bac	            0x85c0	                           test eax, eax	      2052	gui.c	FUNCTION_36	WHILE_1
0x4004bae	          0x4189c4	                           mov r12d, eax	      2050	gui.c	FUNCTION_36	CALL_1
0x4004bb1	     0xf8f27feffff	                            jg 0x40049de	      2052	gui.c	FUNCTION_36	WHILE_1
0x4004bb7	    0x660f1f840000	                    nop word [rax + rax]	      2052	gui.c	FUNCTION_36	WHILE_1
0x4004bc0	          0x4989dd	                            mov r13, rbx	      2052	gui.c	FUNCTION_36	WHILE_1
0x4004bc3	      0xe906ffffff	                           jmp 0x4004ace	      2052	gui.c	FUNCTION_36	WHILE_1
0x4004bc8	    0x8b0500000000	            mov eax, dword [0x04004bce] 	      1902	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x4004bce	    0x3b0500000000	            cmp eax, dword [0x04004bd4] 	      1902	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x4004bd4	    0xc70500000000	               mov dword [0x04004bde], 0	      1901	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12
0x4004bde	     0xf8db0000000	                           jge 0x4004c94	      1902	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x4004be4	          0x83c001	                              add eax, 1	      1903	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x4004be7	    0x890500000000	            mov dword [0x04004bed], eax 	      1903	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x4004bed	            0xeba8	                           jmp 0x4004b97	      1903	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x4004bef	        0x498d4502	                      lea rax, [r13 + 2]	      1801	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4004bf3	      0x4889442410	             mov qword [rsp + 0x10], rax	      1801	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4004bf8	      0x410fb64d02	               movzx ecx, byte [r13 + 2]	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4004bfd	            0x89ca	                            mov edx, ecx	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4004bff	          0x83e930	                           sub ecx, 0x30	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4004c02	          0x83f909	                              cmp ecx, 9	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4004c05	            0x7637	                           jbe 0x4004c3e	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4004c07	          0x80fa2d	                            cmp dl, 0x2d	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4004c0a	            0x7425	                            je 0x4004c31	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4004c0c	          0x83ea24	                           sub edx, 0x24	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4004c0f	          0x80fa4f	                            cmp dl, 0x4f	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4004c12	     0xf8791000000	                            ja 0x4004ca9	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4004c18	           0xfb6d2	                           movzx edx, dl	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4004c1b	    0xff24d5000000	                       jmp qword [rdx*8]	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4004c22	    0xc70500000000	               mov dword [0x04004c2c], 0	      1909	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_7	IF_14
0x4004c2c	      0xe966ffffff	                           jmp 0x4004b97	      1909	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_7	IF_14
0x4004c31	      0x410fb64503	               movzx eax, byte [r13 + 3]	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4004c36	          0x83e830	                           sub eax, 0x30	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4004c39	          0x83f809	                              cmp eax, 9	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4004c3c	            0x776b	                            ja 0x4004ca9	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4004c3e	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1804	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_10
0x4004c43	          0x4963de	                        movsxd rbx, r14d	      1805	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_6
0x4004c46	          0x4c01eb	                            add rbx, r13	      1805	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_6
0x4004c49	      0xe800000000	                          call 0x4004c4e	      1804	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_10
0x4004c4e	          0x890424	                    mov dword [rsp], eax	      1804	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_10
0x4004c51	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1805	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_6
0x4004c56	          0x4839c3	                            cmp rbx, rax	      1805	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_6
0x4004c59	     0xf8278feffff	                            jb 0x4004ad7	      1805	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_6
0x4004c5f	           0xfb610	                   movzx edx, byte [rax]	      1807	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7
0x4004c62	          0x80fa3b	                            cmp dl, 0x3b	      1807	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7
0x4004c65	            0x75a5	                           jne 0x4004c0c	      1807	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7
0x4004c67	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1810	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	CALL_11
0x4004c6c	        0x4883c001	                              add rax, 1	      1809	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7
0x4004c70	      0x4889442410	             mov qword [rsp + 0x10], rax	      1809	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7
0x4004c75	      0xe800000000	                          call 0x4004c7a	      1810	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	CALL_11
0x4004c7a	        0x89442404	                mov dword [rsp + 4], eax	      1810	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	CALL_11
0x4004c7e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1811	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	IF_8
0x4004c83	          0x4839c3	                            cmp rbx, rax	      1811	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	IF_8
0x4004c86	     0xf824bfeffff	                            jb 0x4004ad7	      1811	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	IF_8
0x4004c8c	           0xfb610	                   movzx edx, byte [rax]	      1811	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	IF_8
0x4004c8f	      0xe978ffffff	                           jmp 0x4004c0c	      1811	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	IF_8
0x4004c94	    0x8b3d00000000	            mov edi, dword [0x04004c9a] 	      1905	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	CALL_24
0x4004c9a	      0xbe01000000	                              mov esi, 1	      1905	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	CALL_24
0x4004c9f	      0xe84cc1ffff	               call sym.gui_delete_lines	      1905	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	CALL_24
0x4004ca4	      0xe9eefeffff	                           jmp 0x4004b97	      1905	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	CALL_24
0x4004ca9	        0x498d4501	                      lea rax, [r13 + 1]	      1879	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4004cad	        0x4883c001	                              add rax, 1	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4004cb1	          0x4889c2	                            mov rdx, rax	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4004cb4	      0x4889442410	             mov qword [rsp + 0x10], rax	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4004cb9	          0x4c29ea	                            sub rdx, r13	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4004cbc	          0x4989c5	                            mov r13, rax	      1883	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4004cbf	          0x4129d6	                           sub r14d, edx	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4004cc2	      0xe907feffff	                           jmp 0x4004ace	      1883	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4004cc7	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      1827	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4004ccf	            0xebdc	                           jmp 0x4004cad	      1827	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4004cd1	    0x8b3d00000000	            mov edi, dword [0x04004cd7] 	      1860	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_17
0x4004cd7	      0xbe01000000	                              mov esi, 1	      1860	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_17
0x4004cdc	      0xe87fc0ffff	               call sym.gui_insert_lines	      1860	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_17
0x4004ce1	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1860	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_17
0x4004ce6	            0xebc5	                           jmp 0x4004cad	      1861	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4004ce8	          0x8b3424	                    mov esi, dword [rsp]	      1714	gui.c	FUNCTION_26	IF_1
0x4004ceb	    0x8b1500000000	            mov edx, dword [0x04004cf1] 	      1715	gui.c	FUNCTION_26	IF_1
0x4004cf1	             0x9f2	                             or edx, esi	      1715	gui.c	FUNCTION_26	IF_1
0x4004cf3	    0x81fe00010000	                          cmp esi, 0x100	      1715	gui.c	FUNCTION_26	IF_1
0x4004cf9	           0xf4dd6	                         cmovge edx, esi	      1715	gui.c	FUNCTION_26	IF_1
0x4004cfc	    0x891500000000	            mov dword [0x04004d02], edx 	      1715	gui.c	FUNCTION_26	IF_1
0x4004d02	            0xeba9	                           jmp 0x4004cad	      1715	gui.c	FUNCTION_26	IF_1
0x4004d04	          0x8b0424	                    mov eax, dword [rsp]	      1876	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_22
0x4004d07	      0xbf14000000	                           mov edi, 0x14	      1876	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_22
0x4004d0c	            0x85c0	                           test eax, eax	      1876	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_22
0x4004d0e	           0xf45f8	                         cmovne edi, eax	      1876	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_22
0x4004d11	      0xe800000000	                          call 0x4004d16	      1876	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_22
0x4004d16	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1876	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_22
0x4004d1b	            0xeb90	                           jmp 0x4004cad	      1877	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4004d1d	    0x8b3d00000000	            mov edi, dword [0x04004d23] 	      1854	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_15
0x4004d23	      0xbe01000000	                              mov esi, 1	      1854	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_15
0x4004d28	      0xe8c3c0ffff	               call sym.gui_delete_lines	      1854	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_15
0x4004d2d	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1854	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_15
0x4004d32	      0xe976ffffff	                           jmp 0x4004cad	      1855	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4004d37	          0x8b3424	                    mov esi, dword [rsp]	      1842	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x4004d3a	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      1842	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x4004d3e	            0x39ce	                            cmp esi, ecx	      1842	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x4004d40	     0xf8df7000000	                           jge 0x4004e3d	      1842	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x4004d46	    0x893500000000	            mov dword [0x04004d4c], esi 	      1844	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x4004d4c	    0x890d00000000	            mov dword [0x04004d52], ecx 	      1845	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x4004d52	      0xe956ffffff	                           jmp 0x4004cad	      1845	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x4004d57	          0x8b3424	                    mov esi, dword [rsp]	      1830	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x4004d5a	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      1830	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x4004d5e	            0x39ce	                            cmp esi, ecx	      1830	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x4004d60	     0xf8def000000	                           jge 0x4004e55	      1830	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x4004d66	    0x893500000000	            mov dword [0x04004d6c], esi 	      1832	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x4004d6c	    0x890d00000000	            mov dword [0x04004d72], ecx 	      1833	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x4004d72	      0xe936ffffff	                           jmp 0x4004cad	      1833	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x4004d77	          0x8b3424	                    mov esi, dword [rsp]	      1029	gui.c	FUNCTION_13
0x4004d7a	    0x893500000000	            mov dword [0x04004d80], esi 	      1029	gui.c	FUNCTION_13
0x4004d80	        0x8b742404	                mov esi, dword [rsp + 4]	      1030	gui.c	FUNCTION_13
0x4004d84	    0x893500000000	            mov dword [0x04004d8a], esi 	      1030	gui.c	FUNCTION_13
0x4004d8a	      0xe91effffff	                           jmp 0x4004cad	      1030	gui.c	FUNCTION_13
0x4004d8f	          0x8b3424	                    mov esi, dword [rsp]	      1863	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_18
0x4004d92	    0x8b3d00000000	            mov edi, dword [0x04004d98] 	      1863	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_18
0x4004d98	      0xe8c3bfffff	               call sym.gui_insert_lines	      1863	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_18
0x4004d9d	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1863	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_18
0x4004da2	      0xe906ffffff	                           jmp 0x4004cad	      1864	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4004da7	    0x813c24ff0000	                   cmp dword [rsp], 0xff	      1723	gui.c	ELSE_1	FUNCTION_27	IF_1
0x4004dae	     0xf8eb9000000	                           jle 0x4004e6d	      1723	gui.c	ELSE_1	FUNCTION_27	IF_1
0x4004db4	    0xc70500000000	               mov dword [0x04004dbe], 0	      1724	gui.c	ELSE_1	FUNCTION_27	IF_1
0x4004dbe	      0xe9eafeffff	                           jmp 0x4004cad	      1724	gui.c	ELSE_1	FUNCTION_27	IF_1
0x4004dc3	          0x8b3424	                    mov esi, dword [rsp]	      1857	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_16
0x4004dc6	    0x8b3d00000000	            mov edi, dword [0x04004dcc] 	      1857	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_16
0x4004dcc	      0xe81fc0ffff	               call sym.gui_delete_lines	      1857	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_16
0x4004dd1	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1857	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_16
0x4004dd6	      0xe9d2feffff	                           jmp 0x4004cad	      1858	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4004ddb	      0xbf0f270000	                         mov edi, 0x270f	      1818	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_12
0x4004de0	      0xe800000000	                          call 0x4004de5	      1818	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_12
0x4004de5	      0xe800000000	                          call 0x4004dea	      1819	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_13
0x4004dea	    0xc60500000000	                mov byte [0x04004df1], 0	      1820	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4004df1	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1820	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4004df6	    0xc74424080100	                  mov dword [rsp + 8], 1	      1821	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4004dfe	      0xe9aafeffff	                           jmp 0x4004cad	      1822	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4004e03	    0x8b0500000000	            mov eax, dword [0x04004e09] 	      1866	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_19
0x4004e09	    0x8b3d00000000	            mov edi, dword [0x04004e0f] 	      1866	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_19
0x4004e0f	    0x8b3500000000	            mov esi, dword [0x04004e15] 	      1866	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_19
0x4004e15	          0x8d48ff	                      lea ecx, [rax - 1]	      1866	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_19
0x4004e18	            0x89fa	                            mov edx, edi	      1866	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_19
0x4004e1a	      0xe800000000	                          call 0x4004e1f	      1866	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_19
0x4004e1f	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1866	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_19
0x4004e24	      0xe984feffff	                           jmp 0x4004cad	      1868	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4004e29	      0xbe01000000	                              mov esi, 1	      1957	gui.c	FUNCTION_30	CALL_28
0x4004e2e	      0xbf01000000	                              mov edi, 1	      1957	gui.c	FUNCTION_30	CALL_28
0x4004e33	      0xe800000000	                          call 0x4004e38	      1957	gui.c	FUNCTION_30	CALL_28
0x4004e38	      0xe9a6fcffff	                           jmp 0x4004ae3	      1957	gui.c	FUNCTION_30	CALL_28
0x4004e3d	        0x8b742404	                mov esi, dword [rsp + 4]	      1849	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_4
0x4004e41	    0x893500000000	            mov dword [0x04004e47], esi 	      1849	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_4
0x4004e47	          0x8b3424	                    mov esi, dword [rsp]	      1850	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_4
0x4004e4a	    0x893500000000	            mov dword [0x04004e50], esi 	      1850	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_4
0x4004e50	      0xe958feffff	                           jmp 0x4004cad	      1850	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_4
0x4004e55	        0x8b742404	                mov esi, dword [rsp + 4]	      1837	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_3
0x4004e59	    0x893500000000	            mov dword [0x04004e5f], esi 	      1837	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_3
0x4004e5f	          0x8b3424	                    mov esi, dword [rsp]	      1838	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_3
0x4004e62	    0x893500000000	            mov dword [0x04004e68], esi 	      1838	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_3
0x4004e68	      0xe940feffff	                           jmp 0x4004cad	      1838	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_3
0x4004e6d	          0x8b1424	                    mov edx, dword [rsp]	      1726	gui.c	FUNCTION_27
0x4004e70	            0xf7d2	                                 not edx	      1726	gui.c	FUNCTION_27
0x4004e72	    0x211500000000	             and dword [0x04004e78], edx	      1726	gui.c	FUNCTION_27
0x4004e78	      0xe930feffff	                           jmp 0x4004cad	      1726	gui.c	FUNCTION_27
0x4004e7d	        0x8b542408	                mov edx, dword [rsp + 8]	      1968	gui.c	FUNCTION_30	IF_21
0x4004e81	            0x85d2	                           test edx, edx	      1968	gui.c	FUNCTION_30	IF_21
0x4004e83	     0xf8578fcffff	                           jne 0x4004b01	      1968	gui.c	FUNCTION_30	IF_21
0x4004e89	            0x31ff	                            xor edi, edi	      1971	gui.c	FUNCTION_30	CALL_30
0x4004e8b	      0xe810b7ffff	     call sym.gui_update_horiz_scrollbar	      1971	gui.c	FUNCTION_30	CALL_30
0x4004e90	      0xe975fcffff	                           jmp 0x4004b0a	      1971	gui.c	FUNCTION_30	CALL_30
0x4004e95	    0x488b05000000	            mov rax, qword [0x04004e9c] 	      1961	gui.c	FUNCTION_30	IF_20
0x4004e9c	    0x483905000000	            cmp qword [0x04004ea3], rax 	      1961	gui.c	FUNCTION_30	IF_20
0x4004ea3	    0xc74424080000	                  mov dword [rsp + 8], 0	      1769	gui.c	FUNCTION_30
0x4004eab	     0xf8546fcffff	                           jne 0x4004af7	      1961	gui.c	FUNCTION_30	IF_20
0x4004eb1	            0xebd6	                           jmp 0x4004e89	      1961	gui.c	FUNCTION_30	IF_20
0x4004eb3	    0xc70500000000	               mov dword [0x04004ebd], 0	      2089	gui.c	FUNCTION_36	WHILE_1	IF_8
0x4004ebd	    0x830500000000	               add dword [0x04004ec4], 1	      2090	gui.c	FUNCTION_36	WHILE_1	IF_8
0x4004ec4	      0xe900fcffff	                           jmp 0x4004ac9	      2090	gui.c	FUNCTION_36	WHILE_1	IF_8
0x4004ec9	            0x3c0c	                             cmp al, 0xc	      1916	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_9	IF_17
0x4004ecb	            0x7511	                           jne 0x4004ede	      1916	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_9	IF_17
0x4004ecd	    0x830500000000	               add dword [0x04004ed4], 1	      1918	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_9	IF_17
0x4004ed4	      0xe9befcffff	                           jmp 0x4004b97	      1918	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_9	IF_17
0x4004ed9	      0xe800000000	                          call 0x4004ede	      1983	gui.c	FUNCTION_30
0x4004ede	            0x3c07	                               cmp al, 7	      1920	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_10	IF_18
0x4004ee0	     0xf85b1fcffff	                           jne 0x4004b97	      1920	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_10	IF_18
0x4004ee6	      0xe800000000	                          call 0x4004eeb	      1922	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_10	IF_18	CALL_25
0x4004eeb	      0xe9a7fcffff	                           jmp 0x4004b97	      1922	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_10	IF_18	CALL_25
no_console_input	IF,0:SWITCH,0:functions,0:CALL,2:WHILE,0:ELSE,0:FOR,0:DO,0	22
0x4006060	        0x4883ec08	                              sub rsp, 8	      5110	gui.c	FUNCTION_87
0x4006064	    0x8b1500000000	            mov edx, dword [0x0400606a] 	      5113	gui.c	FUNCTION_87	CALL_2
0x400606a	            0x85d2	                           test edx, edx	      5113	gui.c	FUNCTION_87	CALL_2
0x400606c	            0x740a	                            je 0x4006078	      5113	gui.c	FUNCTION_87	CALL_2
0x400606e	    0x8b0500000000	            mov eax, dword [0x04006074] 	      5111	gui.c	FUNCTION_87
0x4006074	            0x85c0	                           test eax, eax	      5111	gui.c	FUNCTION_87
0x4006076	            0x740b	                            je 0x4006083	      5111	gui.c	FUNCTION_87
0x4006078	            0x31ff	                            xor edi, edi	      5113	gui.c	FUNCTION_87	CALL_2
0x400607a	      0xe800000000	                          call 0x400607f	      5113	gui.c	FUNCTION_87	CALL_2
0x400607f	            0x85c0	                           test eax, eax	      5113	gui.c	FUNCTION_87	CALL_2
0x4006081	            0x740d	                            je 0x4006090	      5113	gui.c	FUNCTION_87	CALL_2
0x4006083	            0x31c0	                            xor eax, eax	      5113	gui.c	FUNCTION_87	CALL_2
0x4006085	        0x4883c408	                              add rsp, 8	      5116	gui.c	FUNCTION_87
0x4006089	              0xc3	                                     ret	      5116	gui.c	FUNCTION_87
0x400608a	    0x660f1f440000	                    nop word [rax + rax]	      5116	gui.c	FUNCTION_87
0x4006090	      0xbf02000000	                              mov edi, 2	      5113	gui.c	FUNCTION_87	CALL_2
0x4006095	      0xe800000000	                          call 0x400609a	      5113	gui.c	FUNCTION_87	CALL_2
0x400609a	            0x85c0	                           test eax, eax	      5113	gui.c	FUNCTION_87	CALL_2
0x400609c	           0xf94c0	                                 sete al	      5113	gui.c	FUNCTION_87	CALL_2
0x400609f	        0x4883c408	                              add rsp, 8	      5116	gui.c	FUNCTION_87
0x40060a3	           0xfb6c0	                           movzx eax, al	      5113	gui.c	FUNCTION_87	CALL_2
0x40060a6	              0xc3	                                     ret	      5116	gui.c	FUNCTION_87
gui_prepare	IF,0:SWITCH,0:functions,0:CALL,1:WHILE,0:ELSE,0:FOR,0:DO,0	3
0x40009e0	    0xc70500000000	               mov dword [0x040009ea], 0	       353	gui.c	FUNCTION_5
0x40009ea	    0xc70500000000	               mov dword [0x040009f4], 0	       354	gui.c	FUNCTION_5
0x40009f4	      0xe900000000	                           jmp 0x40009f9	       355	gui.c	FUNCTION_5	CALL_1
display_errors	IF,4:SWITCH,0:functions,0:CALL,9:WHILE,0:ELSE,1:FOR,1:DO,0	71
0x4005b30	              0x55	                                push rbp	      5078	gui.c	FUNCTION_86
0x4005b31	              0x53	                                push rbx	      5078	gui.c	FUNCTION_86
0x4005b32	      0xbf02000000	                              mov edi, 2	      5081	gui.c	FUNCTION_86	IF_1	CALL_1
0x4005b37	        0x4883ec08	                              sub rsp, 8	      5078	gui.c	FUNCTION_86
0x4005b3b	      0xe800000000	                          call 0x4005b40	      5081	gui.c	FUNCTION_86	IF_1	CALL_1
0x4005b40	            0x85c0	                           test eax, eax	      5081	gui.c	FUNCTION_86	IF_1	CALL_1
0x4005b42	     0xf85a8000000	                           jne 0x4005bf0	      5081	gui.c	FUNCTION_86	IF_1	CALL_1
0x4005b48	    0x488b2d000000	            mov rbp, qword [0x04005b4f] 	      5083	gui.c	FUNCTION_86	ELSE_1	IF_2
0x4005b4f	          0x4885ed	                           test rbp, rbp	      5083	gui.c	FUNCTION_86	ELSE_1	IF_2
0x4005b52	     0xf84e8000000	                            je 0x4005c40	      5083	gui.c	FUNCTION_86	ELSE_1	IF_2
0x4005b58	         0xfb65d00	                   movzx ebx, byte [rbp]	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x4005b5c	            0x84db	                             test bl, bl	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x4005b5e	            0x747c	                            je 0x4005bdc	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x4005b60	      0xe800000000	                          call 0x4005b65	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x4005b65	          0x488b00	                    mov rax, qword [rax]	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x4005b68	            0xeb12	                           jmp 0x4005b7c	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x4005b6a	    0x660f1f440000	                    nop word [rax + rax]	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x4005b70	        0x4883c501	                              add rbp, 1	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x4005b74	         0xfb65d00	                   movzx ebx, byte [rbp]	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x4005b78	            0x84db	                             test bl, bl	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x4005b7a	            0x7460	                            je 0x4005bdc	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x4005b7c	      0xf644580120	      test byte [rax + rbx*2 + 1], 0x20 	      5087	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4005b81	            0x75ed	                           jne 0x4005b70	      5087	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4005b83	          0x4889ef	                            mov rdi, rbp	      5090	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	IF_4	CALL_4
0x4005b86	      0xe800000000	                          call 0x4005b8b	      5090	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	IF_4	CALL_4
0x4005b8b	    0x483dd0070000	                          cmp rax, 0x7d0	      5090	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	IF_4	CALL_4
0x4005b91	            0x7775	                            ja 0x4005c08	      5090	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	IF_4	CALL_4
0x4005b93	      0xba05000000	                              mov edx, 5	      5093	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_8
0x4005b98	      0xbe00000000	                              mov esi, 0	      5093	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_8
0x4005b9d	            0x31ff	                            xor edi, edi	      5093	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_8
0x4005b9f	      0xe800000000	                          call 0x4005ba4	      5093	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_8
0x4005ba4	      0xba05000000	                              mov edx, 5	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x4005ba9	      0xbe00000000	                              mov esi, 0	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x4005bae	            0x31ff	                            xor edi, edi	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x4005bb0	          0x4889c3	                            mov rbx, rax	      5093	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_8
0x4005bb3	      0xe800000000	                          call 0x4005bb8	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x4005bb8	        0x4883ec08	                              sub rsp, 8	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x4005bbc	          0x4889ea	                            mov rdx, rbp	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x4005bbf	          0x4531c9	                            xor r9d, r9d	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x4005bc2	            0x6a00	                                  push 0	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x4005bc4	    0x41b801000000	                              mov r8d, 1	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x4005bca	          0x4889d9	                            mov rcx, rbx	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x4005bcd	          0x4889c6	                            mov rsi, rax	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x4005bd0	      0xbf01000000	                              mov edi, 1	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x4005bd5	      0xe800000000	                          call 0x4005bda	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x4005bda	              0x58	                                 pop rax	      5094	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3
0x4005bdb	              0x5a	                                 pop rdx	      5094	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3
0x4005bdc	        0x4883c408	                              add rsp, 8	      5098	gui.c	FUNCTION_86
0x4005be0	      0xbf00000000	                              mov edi, 0	      5096	gui.c	FUNCTION_86	ELSE_1	IF_2	CALL_9
0x4005be5	              0x5b	                                 pop rbx	      5098	gui.c	FUNCTION_86
0x4005be6	              0x5d	                                 pop rbp	      5098	gui.c	FUNCTION_86
0x4005be7	      0xe900000000	                           jmp 0x4005bec	      5096	gui.c	FUNCTION_86	ELSE_1	IF_2	CALL_9
0x4005bec	         0xf1f4000	                         nop dword [rax]	      5096	gui.c	FUNCTION_86	ELSE_1	IF_2	CALL_9
0x4005bf0	    0x488b3d000000	            mov rdi, qword [0x04005bf7] 	      5082	gui.c	FUNCTION_86	CALL_2
0x4005bf7	        0x4883c408	                              add rsp, 8	      5098	gui.c	FUNCTION_86
0x4005bfb	              0x5b	                                 pop rbx	      5098	gui.c	FUNCTION_86
0x4005bfc	              0x5d	                                 pop rbp	      5098	gui.c	FUNCTION_86
0x4005bfd	      0xe900000000	                           jmp 0x4005c02	      5082	gui.c	FUNCTION_86	CALL_2
0x4005c02	    0x660f1f440000	                    nop word [rax + rax]	      5082	gui.c	FUNCTION_86	CALL_2
0x4005c08	    0x48b92e2e2e28	          movabs rcx, 0x6e757274282e2e2e	       110	string3.h	FUNCTION_100	CALL_3
0x4005c12	    0xc785ca070000	     mov dword [rbp + 0x7ca], 0x65746163	       110	string3.h	FUNCTION_100	CALL_3
0x4005c1c	    0xc685d0070000	               mov byte [rbp + 0x7d0], 0	       110	string3.h	FUNCTION_100	CALL_3
0x4005c23	    0x48898dc20700	           mov qword [rbp + 0x7c2], rcx 	       110	string3.h	FUNCTION_100	CALL_3
0x4005c2a	      0xb964290000	                         mov ecx, 0x2964	       110	string3.h	FUNCTION_100	CALL_3
0x4005c2f	    0x66898dce0700	              mov word [rbp + 0x7ce], cx	       110	string3.h	FUNCTION_100	CALL_3
0x4005c36	      0xe958ffffff	                           jmp 0x4005b93	       110	string3.h	FUNCTION_100	CALL_3
0x4005c3b	       0xf1f440000	                   nop dword [rax + rax]	       110	string3.h	FUNCTION_100	CALL_3
0x4005c40	        0x4883c408	                              add rsp, 8	      5098	gui.c	FUNCTION_86
0x4005c44	              0x5b	                                 pop rbx	      5098	gui.c	FUNCTION_86
0x4005c45	              0x5d	                                 pop rbp	      5098	gui.c	FUNCTION_86
0x4005c46	              0xc3	                                     ret	      5098	gui.c	FUNCTION_86
get_find_dialog_text	IF,7:SWITCH,0:functions,0:CALL,10:WHILE,0:ELSE,1:FOR,1:DO,0	109
0x40062f0	            0x4156	                                push r14	      5188	gui.c	FUNCTION_89
0x40062f2	            0x4155	                                push r13	      5188	gui.c	FUNCTION_89
0x40062f4	          0x4989d6	                            mov r14, rdx	      5188	gui.c	FUNCTION_89
0x40062f7	            0x4154	                                push r12	      5188	gui.c	FUNCTION_89
0x40062f9	              0x55	                                push rbp	      5188	gui.c	FUNCTION_89
0x40062fa	          0x4889f5	                            mov rbp, rsi	      5188	gui.c	FUNCTION_89
0x40062fd	              0x53	                                push rbx	      5188	gui.c	FUNCTION_89
0x40062fe	          0x803f00	                       cmp byte [rdi], 0	      5191	gui.c	FUNCTION_89	IF_1
0x4006301	     0xf84a9000000	                            je 0x40063b0	      5191	gui.c	FUNCTION_89	IF_1
0x4006307	      0xe800000000	                          call 0x400630c	      5197	gui.c	FUNCTION_89	ELSE_1	IF_2	CALL_2
0x400630c	          0x4885c0	                           test rax, rax	      5198	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3
0x400630f	          0x4989c5	                            mov r13, rax	      5197	gui.c	FUNCTION_89	ELSE_1	IF_2	CALL_2
0x4006312	     0xf84a9000000	                            je 0x40063c1	      5198	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3
0x4006318	          0x4889c7	                            mov rdi, rax	      5200	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	CALL_3
0x400631b	      0xe800000000	                          call 0x4006320	      5200	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	CALL_3
0x4006320	          0x83f801	                              cmp eax, 1	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x4006323	          0x4889c3	                            mov rbx, rax	      5200	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	CALL_3
0x4006326	          0x4189c4	                           mov r12d, eax	      5200	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	CALL_3
0x4006329	            0x7e37	                           jle 0x4006362	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x400632b	      0xbf00000000	                              mov edi, 0	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x4006330	      0xb902000000	                              mov ecx, 2	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x4006335	          0x4c89ee	                            mov rsi, r13	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x4006338	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x400633a	     0xf84d0000000	                            je 0x4006410	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x4006340	      0x41807d005c	                    cmp byte [r13], 0x5c	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006345	     0xf84f0000000	                            je 0x400643b	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x400634b	        0x4183fc03	                             cmp r12d, 3	      5219	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x400634f	            0x7e11	                           jle 0x4006362	      5219	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x4006351	      0xbf00000000	                              mov edi, 0	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x4006356	      0xb902000000	                              mov ecx, 2	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x400635b	          0x4c89ee	                            mov rsi, r13	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x400635e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x4006360	            0x746e	                            je 0x40063d0	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x4006362	          0x4c89ef	                            mov rdi, r13	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x4006365	            0x31c0	                            xor eax, eax	      5188	gui.c	FUNCTION_89
0x4006367	            0xeb0c	                           jmp 0x4006375	      5188	gui.c	FUNCTION_89
0x4006369	     0xf1f80000000	                         nop dword [rax]	      5188	gui.c	FUNCTION_89
0x4006370	          0x4889ef	                            mov rdi, rbp	      5188	gui.c	FUNCTION_89
0x4006373	            0x89d8	                            mov eax, ebx	      5188	gui.c	FUNCTION_89
0x4006375	          0x8d5801	                      lea ebx, [rax + 1]	      5229	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1
0x4006378	          0x4139dc	                           cmp r12d, ebx	      5229	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1
0x400637b	            0x7e47	                           jle 0x40063c4	      5229	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1
0x400637d	          0x803f5c	                    cmp byte [rdi], 0x5c	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4006380	        0x488d6f01	                      lea rbp, [rdi + 1]	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4006384	            0x75ea	                           jne 0x4006370	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4006386	         0xfb65701	               movzx edx, byte [rdi + 1]	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x400638a	          0x83e2ef	                     and edx, 0xffffffef	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x400638d	          0x80fa2f	                            cmp dl, 0x2f	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4006390	            0x75de	                           jne 0x4006370	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4006392	          0x4489e2	                           mov edx, r12d	        59	string3.h	FUNCTION_95	CALL_3
0x4006395	          0x4889ee	                            mov rsi, rbp	        59	string3.h	FUNCTION_95	CALL_3
0x4006398	        0x4183ec01	                             sub r12d, 1	      5234	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x400639c	            0x29c2	                            sub edx, eax	        59	string3.h	FUNCTION_95	CALL_3
0x400639e	          0x4863d2	                         movsxd rdx, edx	        59	string3.h	FUNCTION_95	CALL_3
0x40063a1	      0xe800000000	                          call 0x40063a6	        59	string3.h	FUNCTION_95	CALL_3
0x40063a6	            0xebc8	                           jmp 0x4006370	        59	string3.h	FUNCTION_95	CALL_3
0x40063a8	     0xf1f84000000	                   nop dword [rax + rax]	        59	string3.h	FUNCTION_95	CALL_3
0x40063b0	      0xe800000000	                          call 0x40063b5	      5192	gui.c	FUNCTION_89	CALL_1
0x40063b5	          0x4885c0	                           test rax, rax	      5195	gui.c	FUNCTION_89	ELSE_1	IF_2
0x40063b8	          0x4889c7	                            mov rdi, rax	      5192	gui.c	FUNCTION_89	CALL_1
0x40063bb	     0xf8546ffffff	                           jne 0x4006307	      5195	gui.c	FUNCTION_89	ELSE_1	IF_2
0x40063c1	          0x4531ed	                          xor r13d, r13d	      5188	gui.c	FUNCTION_89
0x40063c4	              0x5b	                                 pop rbx	      5239	gui.c	FUNCTION_89
0x40063c5	          0x4c89e8	                            mov rax, r13	      5239	gui.c	FUNCTION_89
0x40063c8	              0x5d	                                 pop rbp	      5239	gui.c	FUNCTION_89
0x40063c9	            0x415c	                                 pop r12	      5239	gui.c	FUNCTION_89
0x40063cb	            0x415d	                                 pop r13	      5239	gui.c	FUNCTION_89
0x40063cd	            0x415e	                                 pop r14	      5239	gui.c	FUNCTION_89
0x40063cf	              0xc3	                                     ret	      5239	gui.c	FUNCTION_89
0x40063d0	          0x4963dc	                        movsxd rbx, r12d	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x40063d3	      0xbf00000000	                              mov edi, 0	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x40063d8	      0xb902000000	                              mov ecx, 2	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x40063dd	      0x498d741dfe	                lea rsi, [r13 + rbx - 2]	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x40063e2	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x40063e4	     0xf8578ffffff	                           jne 0x4006362	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x40063ea	      0x418d5424fc	                      lea edx, [r12 - 4]	        59	string3.h	FUNCTION_95	CALL_3
0x40063ef	        0x498d7502	                      lea rsi, [r13 + 2]	        59	string3.h	FUNCTION_95	CALL_3
0x40063f3	    0xc74500010000	                      mov dword [rbp], 1	      5223	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x40063fa	          0x4c89ef	                            mov rdi, r13	        59	string3.h	FUNCTION_95	CALL_3
0x40063fd	          0x4863d2	                         movsxd rdx, edx	        59	string3.h	FUNCTION_95	CALL_3
0x4006400	      0xe800000000	                          call 0x4006405	        59	string3.h	FUNCTION_95	CALL_3
0x4006405	    0x41c6441dfc00	             mov byte [r13 + rbx - 4], 0	      5225	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x400640b	      0xe952ffffff	                           jmp 0x4006362	      5225	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x4006410	          0x8d50ff	                      lea edx, [rax - 1]	        59	string3.h	FUNCTION_95	CALL_3
0x4006413	        0x498d7502	                      lea rsi, [r13 + 2]	        59	string3.h	FUNCTION_95	CALL_3
0x4006417	        0x448d63fe	                     lea r12d, [rbx - 2]	      5207	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4
0x400641b	          0x4c89ef	                            mov rdi, r13	        59	string3.h	FUNCTION_95	CALL_3
0x400641e	          0x4863d2	                         movsxd rdx, edx	        59	string3.h	FUNCTION_95	CALL_3
0x4006421	      0xe800000000	                          call 0x4006426	        59	string3.h	FUNCTION_95	CALL_3
0x4006426	        0x4183fc01	                             cmp r12d, 1	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x400642a	     0xf8e32ffffff	                           jle 0x4006362	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006430	      0x41807d005c	                    cmp byte [r13], 0x5c	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006435	     0xf8510ffffff	                           jne 0x400634b	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x400643b	      0x410fb64501	               movzx eax, byte [r13 + 1]	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006440	            0x89c2	                            mov edx, eax	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006442	          0x83e2df	                     and edx, 0xffffffdf	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006445	          0x80fa43	                            cmp dl, 0x43	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006448	     0xf85fdfeffff	                           jne 0x400634b	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x400644e	            0x3c43	                            cmp al, 0x43	      5213	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006450	      0x418d5424ff	                      lea edx, [r12 - 1]	        59	string3.h	FUNCTION_95	CALL_3
0x4006455	        0x498d7502	                      lea rsi, [r13 + 2]	        59	string3.h	FUNCTION_95	CALL_3
0x4006459	           0xf94c0	                                 sete al	      5213	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x400645c	          0x4c89ef	                            mov rdi, r13	        59	string3.h	FUNCTION_95	CALL_3
0x400645f	        0x4183ec02	                             sub r12d, 2	      5215	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006463	           0xfb6c0	                           movzx eax, al	      5213	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006466	          0x4863d2	                         movsxd rdx, edx	        59	string3.h	FUNCTION_95	CALL_3
0x4006469	          0x418906	                    mov dword [r14], eax	      5213	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x400646c	      0xe800000000	                          call 0x4006471	        59	string3.h	FUNCTION_95	CALL_3
0x4006471	      0xe9d5feffff	                           jmp 0x400634b	        59	string3.h	FUNCTION_95	CALL_3
gui_xy2colrow	IF,0:SWITCH,0:functions,0:CALL,5:WHILE,0:ELSE,0:FOR,0:DO,0	33
0x4002230	            0x4155	                                push r13	      3395	gui.c	ELSE_9	FUNCTION_51
0x4002232	            0x4154	                                push r12	      3395	gui.c	ELSE_9	FUNCTION_51
0x4002234	            0x89f8	                            mov eax, edi	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x4002236	              0x55	                                push rbp	      3395	gui.c	ELSE_9	FUNCTION_51
0x4002237	              0x53	                                push rbx	      3395	gui.c	ELSE_9	FUNCTION_51
0x4002238	          0x4989d5	                            mov r13, rdx	      3395	gui.c	ELSE_9	FUNCTION_51
0x400223b	      0xbd00000000	                              mov ebp, 0	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x4002240	            0x89f3	                            mov ebx, esi	      3395	gui.c	ELSE_9	FUNCTION_51
0x4002242	        0x4883ec08	                              sub rsp, 8	      3395	gui.c	ELSE_9	FUNCTION_51
0x4002246	    0x2b0500000000	             sub eax, dword [0x0400224c]	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x400224c	              0x99	                                     cdq	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x400224d	    0xf7bdd0000000	                 idiv dword [rbp + 0xd0]	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x4002253	            0x89c7	                            mov edi, eax	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x4002255	      0xe800000000	                          call 0x400225a	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x400225a	          0x4189c4	                           mov r12d, eax	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x400225d	            0x89d8	                            mov eax, ebx	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x400225f	    0x2b0500000000	             sub eax, dword [0x04002265]	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x4002265	              0x99	                                     cdq	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x4002266	    0xf7bdd4000000	                 idiv dword [rbp + 0xd4]	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x400226c	            0x89c7	                            mov edi, eax	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x400226e	      0xe800000000	                          call 0x4002273	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x4002273	          0x4489e7	                           mov edi, r12d	      3400	gui.c	ELSE_9	FUNCTION_51	CALL_5
0x4002276	            0x89c6	                            mov esi, eax	      3400	gui.c	ELSE_9	FUNCTION_51	CALL_5
0x4002278	            0x89c3	                            mov ebx, eax	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x400227a	      0xe800000000	                          call 0x400227f	      3400	gui.c	ELSE_9	FUNCTION_51	CALL_5
0x400227f	        0x41894500	                    mov dword [r13], eax	      3400	gui.c	ELSE_9	FUNCTION_51	CALL_5
0x4002283	        0x4883c408	                              add rsp, 8	      3405	gui.c	ELSE_9	FUNCTION_51
0x4002287	            0x89d8	                            mov eax, ebx	      3405	gui.c	ELSE_9	FUNCTION_51
0x4002289	              0x5b	                                 pop rbx	      3405	gui.c	ELSE_9	FUNCTION_51
0x400228a	              0x5d	                                 pop rbp	      3405	gui.c	ELSE_9	FUNCTION_51
0x400228b	            0x415c	                                 pop r12	      3405	gui.c	ELSE_9	FUNCTION_51
0x400228d	            0x415d	                                 pop r13	      3405	gui.c	ELSE_9	FUNCTION_51
0x400228f	              0xc3	                                     ret	      3405	gui.c	ELSE_9	FUNCTION_51
gui_init_font	IF,8:SWITCH,0:functions,0:CALL,10:WHILE,1:ELSE,3:FOR,0:DO,0	48
0x4003c80	    0x4881ec680100	                          sub rsp, 0x168	       850	gui.c	FUNCTION_10
0x4003c87	    0x64488b042528	                mov rax, qword fs:[0x28]	       850	gui.c	FUNCTION_10
0x4003c90	    0x488984245801	            mov qword [rsp + 0x158], rax	       850	gui.c	FUNCTION_10
0x4003c98	            0x31c0	                            xor eax, eax	       850	gui.c	FUNCTION_10
0x4003c9a	    0x8b0500000000	            mov eax, dword [0x04003ca0] 	       856	gui.c	FUNCTION_10	IF_1
0x4003ca0	      0x48897c2408	                mov qword [rsp + 8], rdi	       850	gui.c	FUNCTION_10
0x4003ca5	            0x85c0	                           test eax, eax	       856	gui.c	FUNCTION_10	IF_1
0x4003ca7	            0x7455	                            je 0x4003cfe	       856	gui.c	FUNCTION_10	IF_1
0x4003ca9	      0x488b442408	                mov rax, qword [rsp + 8]	       860	gui.c	FUNCTION_10	IF_2
0x4003cae	      0xc644241000	                mov byte [rsp + 0x10], 0	       859	gui.c	FUNCTION_10
0x4003cb3	          0x803800	                       cmp byte [rax], 0	       860	gui.c	FUNCTION_10	IF_2
0x4003cb6	            0x7468	                            je 0x4003d20	       860	gui.c	FUNCTION_10	IF_2
0x4003cb8	     0xf1f84000000	                   nop dword [rax + rax]	       860	gui.c	FUNCTION_10	IF_2
0x4003cc0	      0x488d742410	                   lea rsi, [rsp + 0x10]	       873	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	CALL_2
0x4003cc5	      0x488d7c2408	                      lea rdi, [rsp + 8]	       873	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	CALL_2
0x4003cca	      0xb900000000	                              mov ecx, 0	       873	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	CALL_2
0x4003ccf	      0xba40010000	                          mov edx, 0x140	       873	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	CALL_2
0x4003cd4	      0xe800000000	                          call 0x4003cd9	       873	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	CALL_2
0x4003cd9	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       880	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	IF_4	CALL_3
0x4003cde	            0x31f6	                            xor esi, esi	       880	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	IF_4	CALL_3
0x4003ce0	      0xe800000000	                          call 0x4003ce5	       880	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	IF_4	CALL_3
0x4003ce5	          0x83f801	                              cmp eax, 1	       880	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	IF_4	CALL_3
0x4003ce8	            0x7446	                            je 0x4003d30	       880	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	IF_4	CALL_3
0x4003cea	      0x488b442408	                mov rax, qword [rsp + 8]	       870	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1
0x4003cef	          0x803800	                       cmp byte [rax], 0	       870	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1
0x4003cf2	            0x75cc	                           jne 0x4003cc0	       870	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1
0x4003cf4	    0x48833d000000	               cmp qword [0x04003cfc], 0	       897	gui.c	FUNCTION_10	IF_6
0x4003cfc	            0x7422	                            je 0x4003d20	       897	gui.c	FUNCTION_10	IF_6
0x4003cfe	            0x31c0	                            xor eax, eax	       857	gui.c	FUNCTION_10	IF_1
0x4003d00	    0x488b8c245801	           mov rcx, qword [rsp + 0x158] 	       922	gui.c	FUNCTION_10
0x4003d08	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       922	gui.c	FUNCTION_10
0x4003d11	            0x7538	                           jne 0x4003d4b	       922	gui.c	FUNCTION_10
0x4003d13	    0x4881c4680100	                          add rsp, 0x168	       922	gui.c	FUNCTION_10
0x4003d1a	              0xc3	                                     ret	       922	gui.c	FUNCTION_10
0x4003d1b	       0xf1f440000	                   nop dword [rax + rax]	       922	gui.c	FUNCTION_10
0x4003d20	            0x31f6	                            xor esi, esi	       904	gui.c	FUNCTION_10	IF_6	CALL_7
0x4003d22	            0x31ff	                            xor edi, edi	       904	gui.c	FUNCTION_10	IF_6	CALL_7
0x4003d24	      0xe800000000	                          call 0x4003d29	       904	gui.c	FUNCTION_10	IF_6	CALL_7
0x4003d29	          0x83f801	                              cmp eax, 1	       907	gui.c	FUNCTION_10	IF_7
0x4003d2c	            0x75d2	                           jne 0x4003d00	       907	gui.c	FUNCTION_10	IF_7
0x4003d2e	            0x6690	                                     nop	       907	gui.c	FUNCTION_10	IF_7
0x4003d30	      0xba0f000000	                            mov edx, 0xf	       918	gui.c	FUNCTION_10	IF_7	CALL_10
0x4003d35	      0xbe01000000	                              mov esi, 1	       918	gui.c	FUNCTION_10	IF_7	CALL_10
0x4003d3a	      0xbf01000000	                              mov edi, 1	       918	gui.c	FUNCTION_10	IF_7	CALL_10
0x4003d3f	      0xe800000000	                          call 0x4003d44	       918	gui.c	FUNCTION_10	IF_7	CALL_10
0x4003d44	      0xb801000000	                              mov eax, 1	       918	gui.c	FUNCTION_10	IF_7	CALL_10
0x4003d49	            0xebb5	                           jmp 0x4003d00	       918	gui.c	FUNCTION_10	IF_7	CALL_10
0x4003d4b	      0xe800000000	             call sym.gui_update_tabline	       922	gui.c	FUNCTION_10
get_tabline_label	IF,8:SWITCH,0:functions,0:CALL,16:WHILE,0:ELSE,1:FOR,1:DO,0	232
0x4002bc0	            0x4157	                                push r15	      3734	gui.c	FUNCTION_57
0x4002bc2	            0x4156	                                push r14	      3734	gui.c	FUNCTION_57
0x4002bc4	            0x4155	                                push r13	      3734	gui.c	FUNCTION_57
0x4002bc6	            0x4154	                                push r12	      3734	gui.c	FUNCTION_57
0x4002bc8	              0x55	                                push rbp	      3734	gui.c	FUNCTION_57
0x4002bc9	              0x53	                                push rbx	      3734	gui.c	FUNCTION_57
0x4002bca	            0x89f5	                            mov ebp, esi	      3734	gui.c	FUNCTION_57
0x4002bcc	          0x4889fb	                            mov rbx, rdi	      3734	gui.c	FUNCTION_57
0x4002bcf	    0x4881ec281000	                         sub rsp, 0x1028	      3734	gui.c	FUNCTION_57
0x4002bd6	    0x64488b042528	                mov rax, qword fs:[0x28]	      3734	gui.c	FUNCTION_57
0x4002bdf	    0x488984241810	          mov qword [rsp + 0x1018], rax 	      3734	gui.c	FUNCTION_57
0x4002be7	            0x31c0	                            xor eax, eax	      3734	gui.c	FUNCTION_57
0x4002be9	            0x85f6	                           test esi, esi	      3742	gui.c	FUNCTION_57
0x4002beb	     0xf849f010000	                            je 0x4002d90	      3742	gui.c	FUNCTION_57
0x4002bf1	    0x488b05000000	            mov rax, qword [0x04002bf8] 	      3743	gui.c	FUNCTION_57	IF_1
0x4002bf8	          0x803800	                       cmp byte [rax], 0	      3743	gui.c	FUNCTION_57	IF_1
0x4002bfb	     0xf854f030000	                           jne 0x4002f50	      3743	gui.c	FUNCTION_57	IF_1
0x4002c01	    0x483b1d000000	            cmp rbx, qword [0x04002c08] 	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x4002c08	     0xf8402030000	                            je 0x4002f10	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x4002c0e	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x4002c12	        0x488b7808	                mov rdi, qword [rax + 8]	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x4002c16	      0xe800000000	                          call 0x4002c1b	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x4002c1b	            0x85ed	                           test ebp, ebp	      3796	gui.c	FUNCTION_57	IF_3	IF_4
0x4002c1d	     0xf8405030000	                            je 0x4002f28	      3796	gui.c	FUNCTION_57	IF_3	IF_4
0x4002c23	    0x483b1d000000	            cmp rbx, qword [0x04002c2a] 	      3799	gui.c	FUNCTION_57	IF_3
0x4002c2a	     0xf8411030000	                            je 0x4002f41	      3799	gui.c	FUNCTION_57	IF_3
0x4002c30	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3799	gui.c	FUNCTION_57	IF_3
0x4002c34	          0x4885db	                           test rbx, rbx	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x4002c37	     0xf8423010000	                            je 0x4002d60	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x4002c3d	            0x31ed	                            xor ebp, ebp	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x4002c3f	          0x4531e4	                          xor r12d, r12d	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x4002c42	    0x41bd01000000	                             mov r13d, 1	      3802	gui.c	FUNCTION_57	IF_3	FOR_1	IF_5
0x4002c48	     0xf1f84000000	                   nop dword [rax + rax]	      3802	gui.c	FUNCTION_57	IF_3	FOR_1	IF_5
0x4002c50	        0x488b7b08	                mov rdi, qword [rbx + 8]	      3801	gui.c	FUNCTION_57	IF_3	FOR_1	IF_5	CALL_9
0x4002c54	      0xe800000000	                          call 0x4002c59	      3801	gui.c	FUNCTION_57	IF_3	FOR_1	IF_5	CALL_9
0x4002c59	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x4002c5d	            0x85c0	                           test eax, eax	      3802	gui.c	FUNCTION_57	IF_3	FOR_1	IF_5
0x4002c5f	        0x450f45e5	                       cmovne r12d, r13d	      3802	gui.c	FUNCTION_57	IF_3	FOR_1	IF_5
0x4002c63	          0x83c501	                              add ebp, 1	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x4002c66	          0x4885db	                           test rbx, rbx	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x4002c69	            0x75e5	                           jne 0x4002c50	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x4002c6b	          0x83fd01	                              cmp ebp, 1	      3803	gui.c	FUNCTION_57	IF_3	IF_6
0x4002c6e	            0x7f0a	                            jg 0x4002c7a	      3803	gui.c	FUNCTION_57	IF_3	IF_6
0x4002c70	        0x41f6c401	                            test r12b, 1	      3803	gui.c	FUNCTION_57	IF_3	IF_6
0x4002c74	     0xf84e6000000	                            je 0x4002d60	      3803	gui.c	FUNCTION_57	IF_3	IF_6
0x4002c7a	          0x83fd01	                              cmp ebp, 1	      3805	gui.c	FUNCTION_57	IF_3	IF_6	IF_7
0x4002c7d	     0xf8eed020000	                           jle 0x4002f70	      3805	gui.c	FUNCTION_57	IF_3	IF_6	IF_7
0x4002c83	      0x4c8d6c2410	                   lea r13, [rsp + 0x10]	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x4002c88	            0x31c0	                            xor eax, eax	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x4002c8a	            0x89e9	                            mov ecx, ebp	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x4002c8c	      0xba00000000	                              mov edx, 0	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x4002c91	      0xbe28000000	                           mov esi, 0x28	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x4002c96	          0x4c89ef	                            mov rdi, r13	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x4002c99	      0xe800000000	                          call 0x4002c9e	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x4002c9e	          0x4585e4	                         test r12d, r12d	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4002ca1	     0xf85dc020000	                           jne 0x4002f83	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4002ca7	          0x4c89e8	                            mov rax, r13	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4002caa	            0x8b08	                    mov ecx, dword [rax]	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4002cac	        0x4883c004	                              add rax, 4	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4002cb0	    0x8d91fffefefe	              lea edx, [rcx - 0x1010101]	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4002cb6	            0xf7d1	                                 not ecx	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4002cb8	            0x21ca	                            and edx, ecx	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4002cba	    0x81e280808080	                     and edx, 0x80808080	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4002cc0	            0x74e8	                            je 0x4002caa	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4002cc2	            0x89d1	                            mov ecx, edx	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4002cc4	          0xc1e910	                           shr ecx, 0x10	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4002cc7	    0xf7c280800000	                        test edx, 0x8080	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4002ccd	           0xf44d1	                          cmove edx, ecx	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4002cd0	        0x488d4802	                      lea rcx, [rax + 2]	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4002cd4	            0x89d6	                            mov esi, edx	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4002cd6	        0x480f44c1	                          cmove rax, rcx	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4002cda	          0x4000d6	                             add sil, dl	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4002cdd	        0x4883d803	                              sbb rax, 3	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4002ce1	          0x4889c3	                            mov rbx, rax	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4002ce4	      0xb820000000	                           mov eax, 0x20	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4002ce9	          0x668903	                      mov word [rbx], ax	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4002cec	    0x488b2d000000	            mov rbp, qword [0x04002cf3] 	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4002cf3	          0x4889ef	                            mov rdi, rbp	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4002cf6	      0xe800000000	                          call 0x4002cfb	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4002cfb	        0x488d7b01	                      lea rdi, [rbx + 1]	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4002cff	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_95	CALL_3
0x4002d03	          0x4889ee	                            mov rsi, rbp	        59	string3.h	FUNCTION_95	CALL_3
0x4002d06	          0x4889f8	                            mov rax, rdi	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4002d09	          0x4c29e8	                            sub rax, r13	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4002d0c	      0x488d7c0500	                    lea rdi, [rbp + rax]	        59	string3.h	FUNCTION_95	CALL_3
0x4002d11	      0xe800000000	                          call 0x4002d16	        59	string3.h	FUNCTION_95	CALL_3
0x4002d16	          0x4c89ea	                            mov rdx, r13	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4002d19	            0x8b0a	                    mov ecx, dword [rdx]	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4002d1b	        0x4883c204	                              add rdx, 4	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4002d1f	    0x8d81fffefefe	              lea eax, [rcx - 0x1010101]	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4002d25	            0xf7d1	                                 not ecx	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4002d27	            0x21c8	                            and eax, ecx	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4002d29	      0x2580808080	                     and eax, 0x80808080	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4002d2e	            0x74e9	                            je 0x4002d19	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4002d30	            0x89c1	                            mov ecx, eax	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4002d32	    0x488b3d000000	            mov rdi, qword [0x04002d39] 	        59	string3.h	FUNCTION_95	CALL_3
0x4002d39	          0xc1e910	                           shr ecx, 0x10	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4002d3c	      0xa980800000	                        test eax, 0x8080	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4002d41	           0xf44c1	                          cmove eax, ecx	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4002d44	        0x488d4a02	                      lea rcx, [rdx + 2]	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4002d48	            0x89c6	                            mov esi, eax	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4002d4a	        0x480f44d1	                          cmove rdx, rcx	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4002d4e	          0x4000c6	                             add sil, al	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4002d51	          0x4c89ee	                            mov rsi, r13	        59	string3.h	FUNCTION_95	CALL_3
0x4002d54	        0x4883da03	                              sbb rdx, 3	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4002d58	          0x4c29ea	                            sub rdx, r13	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4002d5b	      0xe800000000	                          call 0x4002d60	        59	string3.h	FUNCTION_95	CALL_3
0x4002d60	    0x488b84241810	          mov rax, qword [rsp + 0x1018] 	      3816	gui.c	FUNCTION_57
0x4002d68	    0x644833042528	                xor rax, qword fs:[0x28]	      3816	gui.c	FUNCTION_57
0x4002d71	     0xf8551020000	                           jne 0x4002fc8	      3816	gui.c	FUNCTION_57
0x4002d77	    0x4881c4281000	                         add rsp, 0x1028	      3816	gui.c	FUNCTION_57
0x4002d7e	              0x5b	                                 pop rbx	      3816	gui.c	FUNCTION_57
0x4002d7f	              0x5d	                                 pop rbp	      3816	gui.c	FUNCTION_57
0x4002d80	            0x415c	                                 pop r12	      3816	gui.c	FUNCTION_57
0x4002d82	            0x415d	                                 pop r13	      3816	gui.c	FUNCTION_57
0x4002d84	            0x415e	                                 pop r14	      3816	gui.c	FUNCTION_57
0x4002d86	            0x415f	                                 pop r15	      3816	gui.c	FUNCTION_57
0x4002d88	              0xc3	                                     ret	      3816	gui.c	FUNCTION_57
0x4002d89	     0xf1f80000000	                         nop dword [rax]	      3816	gui.c	FUNCTION_57
0x4002d90	    0x488b05000000	            mov rax, qword [0x04002d97] 	      3743	gui.c	FUNCTION_57	IF_1
0x4002d97	          0x803800	                       cmp byte [rax], 0	      3743	gui.c	FUNCTION_57	IF_1
0x4002d9a	     0xf8461feffff	                            je 0x4002c01	      3743	gui.c	FUNCTION_57	IF_1
0x4002da0	    0x8b0500000000	            mov eax, dword [0x04002da6] 	      3746	gui.c	FUNCTION_57	IF_1
0x4002da6	    0x41bc00000000	                             mov r12d, 0	      3742	gui.c	FUNCTION_57
0x4002dac	    0x41be00000000	                             mov r14d, 0	      3749	gui.c	FUNCTION_57	IF_1
0x4002db2	        0x8944240c	              mov dword [rsp + 0xc], eax	      3746	gui.c	FUNCTION_57	IF_1
0x4002db6	          0x4889df	                            mov rdi, rbx	      3754	gui.c	FUNCTION_57	IF_1	CALL_1
0x4002db9	    0xc70500000000	               mov dword [0x04002dc3], 0	      3752	gui.c	FUNCTION_57	IF_1
0x4002dc3	      0x4c8d6c2410	                   lea r13, [rsp + 0x10]	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4002dc8	      0xe800000000	                          call 0x4002dcd	      3754	gui.c	FUNCTION_57	IF_1	CALL_1
0x4002dcd	      0xbf09000000	                              mov edi, 9	      3756	gui.c	FUNCTION_57	IF_1	CALL_2
0x4002dd2	          0x4863f0	                         movsxd rsi, eax	      3754	gui.c	FUNCTION_57	IF_1	CALL_1
0x4002dd5	    0x488935000000	            mov qword [0x04002ddc], rsi 	      3754	gui.c	FUNCTION_57	IF_1	CALL_1
0x4002ddc	      0xe800000000	                          call 0x4002de1	      3756	gui.c	FUNCTION_57	IF_1	CALL_2
0x4002de1	            0x31f6	                            xor esi, esi	      3757	gui.c	FUNCTION_57	IF_1	CALL_3
0x4002de3	          0x4c89f7	                            mov rdi, r14	      3757	gui.c	FUNCTION_57	IF_1	CALL_3
0x4002de6	      0xe800000000	                          call 0x4002deb	      3757	gui.c	FUNCTION_57	IF_1	CALL_3
0x4002deb	    0x4c8b3d000000	            mov r15, qword [0x04002df2] 	      3760	gui.c	FUNCTION_57	IF_1
0x4002df2	          0x4189c0	                            mov r8d, eax	      3757	gui.c	FUNCTION_57	IF_1	CALL_3
0x4002df5	    0x488b05000000	            mov rax, qword [0x04002dfc] 	      3760	gui.c	FUNCTION_57	IF_1
0x4002dfc	        0x4883ec08	                              sub rsp, 8	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4002e00	          0x4531c9	                            xor r9d, r9d	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4002e03	      0xba00100000	                         mov edx, 0x1000	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4002e08	          0x4c89ee	                            mov rsi, r13	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4002e0b	    0x48891d000000	            mov qword [0x04002e12], rbx 	      3764	gui.c	FUNCTION_57	IF_1
0x4002e12	        0x49894720	             mov qword [r15 + 0x20], rax	      3760	gui.c	FUNCTION_57	IF_1
0x4002e16	    0x488b05000000	            mov rax, qword [0x04002e1d] 	      3761	gui.c	FUNCTION_57	IF_1
0x4002e1d	        0x49894728	             mov qword [r15 + 0x28], rax	      3761	gui.c	FUNCTION_57	IF_1
0x4002e21	    0x488b05000000	            mov rax, qword [0x04002e28] 	      3762	gui.c	FUNCTION_57	IF_1
0x4002e28	        0x49894710	             mov qword [r15 + 0x10], rax	      3762	gui.c	FUNCTION_57	IF_1
0x4002e2c	        0x488b4308	                mov rax, qword [rbx + 8]	      3765	gui.c	FUNCTION_57	IF_1
0x4002e30	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3768	gui.c	FUNCTION_57	IF_1
0x4002e34	    0x488905000000	            mov qword [0x04002e3b], rax 	      3765	gui.c	FUNCTION_57	IF_1
0x4002e3b	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      3766	gui.c	FUNCTION_57	IF_1
0x4002e3f	    0x48893d000000	            mov qword [0x04002e46], rdi 	      3768	gui.c	FUNCTION_57	IF_1
0x4002e46	    0x488905000000	            mov qword [0x04002e4d], rax 	      3766	gui.c	FUNCTION_57	IF_1
0x4002e4d	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      3767	gui.c	FUNCTION_57	IF_1
0x4002e51	    0x488905000000	            mov qword [0x04002e58], rax 	      3767	gui.c	FUNCTION_57	IF_1
0x4002e58	        0x488b4708	                mov rax, qword [rdi + 8]	      3769	gui.c	FUNCTION_57	IF_1
0x4002e5c	            0x6a00	                                  push 0	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4002e5e	            0x6a00	                                  push 0	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4002e60	        0x498b0c24	                    mov rcx, qword [r12]	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4002e64	    0x488905000000	            mov qword [0x04002e6b], rax 	      3769	gui.c	FUNCTION_57	IF_1
0x4002e6b	    0x488b05000000	            mov rax, qword [0x04002e72] 	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4002e72	              0x50	                                push rax	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4002e73	      0xe800000000	                          call 0x4002e78	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4002e78	    0x488b3d000000	            mov rdi, qword [0x04002e7f] 	       110	string3.h	FUNCTION_100	CALL_3
0x4002e7f	        0x4883c420	                           add rsp, 0x20	       110	string3.h	FUNCTION_100	CALL_3
0x4002e83	          0x4c89ee	                            mov rsi, r13	       110	string3.h	FUNCTION_100	CALL_3
0x4002e86	      0xe800000000	                          call 0x4002e8b	       110	string3.h	FUNCTION_100	CALL_3
0x4002e8b	        0x498b4708	                mov rax, qword [r15 + 8]	      3778	gui.c	FUNCTION_57	IF_1
0x4002e8f	    0x4c893d000000	            mov qword [0x04002e96], r15 	      3777	gui.c	FUNCTION_57	IF_1
0x4002e96	    0x488905000000	            mov qword [0x04002e9d], rax 	      3778	gui.c	FUNCTION_57	IF_1
0x4002e9d	        0x498b4720	            mov rax, qword [r15 + 0x20] 	      3779	gui.c	FUNCTION_57	IF_1
0x4002ea1	    0x488905000000	            mov qword [0x04002ea8], rax 	      3779	gui.c	FUNCTION_57	IF_1
0x4002ea8	        0x498b4728	            mov rax, qword [r15 + 0x28] 	      3780	gui.c	FUNCTION_57	IF_1
0x4002eac	    0x488905000000	            mov qword [0x04002eb3], rax 	      3780	gui.c	FUNCTION_57	IF_1
0x4002eb3	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      3781	gui.c	FUNCTION_57	IF_1
0x4002eb7	    0x488905000000	            mov qword [0x04002ebe], rax 	      3781	gui.c	FUNCTION_57	IF_1
0x4002ebe	        0x488b4008	                mov rax, qword [rax + 8]	      3782	gui.c	FUNCTION_57	IF_1
0x4002ec2	    0x488905000000	            mov qword [0x04002ec9], rax 	      3782	gui.c	FUNCTION_57	IF_1
0x4002ec9	    0x8b0500000000	            mov eax, dword [0x04002ecf] 	      3784	gui.c	FUNCTION_57	IF_1	IF_2
0x4002ecf	            0x85c0	                           test eax, eax	      3784	gui.c	FUNCTION_57	IF_1	IF_2
0x4002ed1	     0xf85c9000000	                           jne 0x4002fa0	      3784	gui.c	FUNCTION_57	IF_1	IF_2
0x4002ed7	      0x448b7c240c	            mov r15d, dword [rsp + 0xc] 	      3787	gui.c	FUNCTION_57	IF_1
0x4002edc	          0x4109c7	                            or r15d, eax	      3787	gui.c	FUNCTION_57	IF_1
0x4002edf	        0x498b0424	                    mov rax, qword [r12]	      3787	gui.c	FUNCTION_57	IF_1
0x4002ee3	    0x44893d000000	           mov dword [0x04002eea], r15d 	      3787	gui.c	FUNCTION_57	IF_1
0x4002eea	          0x803800	                       cmp byte [rax], 0	      3792	gui.c	FUNCTION_57	IF_3
0x4002eed	     0xf840efdffff	                            je 0x4002c01	      3792	gui.c	FUNCTION_57	IF_3
0x4002ef3	    0x488b05000000	            mov rax, qword [0x04002efa] 	      3792	gui.c	FUNCTION_57	IF_3
0x4002efa	          0x803800	                       cmp byte [rax], 0	      3792	gui.c	FUNCTION_57	IF_3
0x4002efd	     0xf855dfeffff	                           jne 0x4002d60	      3792	gui.c	FUNCTION_57	IF_3
0x4002f03	    0x483b1d000000	            cmp rbx, qword [0x04002f0a] 	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x4002f0a	     0xf85fefcffff	                           jne 0x4002c0e	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x4002f10	    0x488b3d000000	            mov rdi, qword [0x04002f17] 	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x4002f17	      0xe800000000	                          call 0x4002f1c	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x4002f1c	            0x85ed	                           test ebp, ebp	      3796	gui.c	FUNCTION_57	IF_3	IF_4
0x4002f1e	     0xf85fffcffff	                           jne 0x4002c23	      3796	gui.c	FUNCTION_57	IF_3	IF_4
0x4002f24	         0xf1f4000	                         nop dword [rax]	      3796	gui.c	FUNCTION_57	IF_3	IF_4
0x4002f28	    0x488b3d000000	            mov rdi, qword [0x04002f2f] 	      3797	gui.c	FUNCTION_57	IF_3	CALL_8
0x4002f2f	      0xe800000000	                          call 0x4002f34	      3797	gui.c	FUNCTION_57	IF_3	CALL_8
0x4002f34	    0x483b1d000000	            cmp rbx, qword [0x04002f3b] 	      3799	gui.c	FUNCTION_57	IF_3
0x4002f3b	     0xf85effcffff	                           jne 0x4002c30	      3799	gui.c	FUNCTION_57	IF_3
0x4002f41	    0x488b1d000000	            mov rbx, qword [0x04002f48] 	      3799	gui.c	FUNCTION_57	IF_3
0x4002f48	      0xe9e7fcffff	                           jmp 0x4002c34	      3799	gui.c	FUNCTION_57	IF_3
0x4002f4d	           0xf1f00	                         nop dword [rax]	      3799	gui.c	FUNCTION_57	IF_3
0x4002f50	    0x8b0500000000	            mov eax, dword [0x04002f56] 	      3746	gui.c	FUNCTION_57	IF_1
0x4002f56	    0x41bc00000000	                             mov r12d, 0	      3742	gui.c	FUNCTION_57
0x4002f5c	    0x41be00000000	                             mov r14d, 0	      3749	gui.c	FUNCTION_57	IF_1
0x4002f62	        0x8944240c	              mov dword [rsp + 0xc], eax	      3746	gui.c	FUNCTION_57	IF_1
0x4002f66	      0xe94bfeffff	                           jmp 0x4002db6	      3746	gui.c	FUNCTION_57	IF_1
0x4002f6b	       0xf1f440000	                   nop dword [rax + rax]	      3746	gui.c	FUNCTION_57	IF_1
0x4002f70	          0x4585e4	                         test r12d, r12d	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4002f73	      0xc644241000	                mov byte [rsp + 0x10], 0	      3808	gui.c	FUNCTION_57	IF_3	IF_6	ELSE_1
0x4002f78	      0x4c8d6c2410	                   lea r13, [rsp + 0x10]	      3808	gui.c	FUNCTION_57	IF_3	IF_6	ELSE_1
0x4002f7d	     0xf8424fdffff	                            je 0x4002ca7	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4002f83	      0xba28000000	                           mov edx, 0x28	       148	string3.h	FUNCTION_104	CALL_3
0x4002f88	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_104	CALL_3
0x4002f8d	          0x4c89ef	                            mov rdi, r13	       148	string3.h	FUNCTION_104	CALL_3
0x4002f90	      0xe800000000	                          call 0x4002f95	       148	string3.h	FUNCTION_104	CALL_3
0x4002f95	      0xe90dfdffff	                           jmp 0x4002ca7	       148	string3.h	FUNCTION_104	CALL_3
0x4002f9a	    0x660f1f440000	                    nop word [rax + rax]	       148	string3.h	FUNCTION_104	CALL_3
0x4002fa0	    0x41b8fbffffff	                     mov r8d, 0xfffffffb	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x4002fa6	      0xb901000000	                              mov ecx, 1	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x4002fab	      0xba00000000	                              mov edx, 0	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x4002fb0	      0xbeffffffff	                     mov esi, 0xffffffff	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x4002fb5	          0x4c89f7	                            mov rdi, r14	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x4002fb8	      0xe800000000	                          call 0x4002fbd	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x4002fbd	    0x8b0500000000	            mov eax, dword [0x04002fc3] 	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x4002fc3	      0xe90fffffff	                           jmp 0x4002ed7	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x4002fc8	      0xe800000000	                          call 0x4002fcd	      3816	gui.c	FUNCTION_57
gui_redraw	IF,1:SWITCH,0:functions,0:CALL,6:WHILE,0:ELSE,0:FOR,0:DO,0	44
0x4001fc0	    0x8b0500000000	            mov eax, dword [0x04001fc6] 	      2721	gui.c	FUNCTION_42	IF_1
0x4001fc6	              0x53	                                push rbx	      2674	gui.c	FUNCTION_41
0x4001fc7	            0x85c0	                           test eax, eax	      2721	gui.c	FUNCTION_42	IF_1
0x4001fc9	            0x7463	                            je 0x400202e	      2721	gui.c	FUNCTION_42	IF_1
0x4001fcb	    0x48833d000000	               cmp qword [0x04001fd3], 0	      2721	gui.c	FUNCTION_42	IF_1
0x4001fd3	            0x7459	                            je 0x400202e	      2721	gui.c	FUNCTION_42	IF_1
0x4001fd5	    0x448b15000000	           mov r10d, dword [0x04001fdc] 	      2677	gui.c	FUNCTION_41	CALL_1
0x4001fdc	        0x8d4417ff	                lea eax, [rdi + rdx - 1]	      2677	gui.c	FUNCTION_41	CALL_1
0x4001fe0	    0x8b1d00000000	            mov ebx, dword [0x04001fe6] 	      2678	gui.c	FUNCTION_41	CALL_2
0x4001fe6	          0x4189cb	                           mov r11d, ecx	      2678	gui.c	FUNCTION_41	CALL_2
0x4001fe9	    0x448b0d000000	            mov r9d, dword [0x04001ff0] 	      2677	gui.c	FUNCTION_41	CALL_1
0x4001ff0	          0x4189f0	                            mov r8d, esi	      2677	gui.c	FUNCTION_41	CALL_1
0x4001ff3	          0x4429d0	                           sub eax, r10d	      2677	gui.c	FUNCTION_41	CALL_1
0x4001ff6	              0x99	                                     cdq	      2677	gui.c	FUNCTION_41	CALL_1
0x4001ff7	            0xf7fb	                                idiv ebx	      2677	gui.c	FUNCTION_41	CALL_1
0x4001ff9	            0x89c1	                            mov ecx, eax	      2677	gui.c	FUNCTION_41	CALL_1
0x4001ffb	      0x428d441eff	                lea eax, [rsi + r11 - 1]	      2677	gui.c	FUNCTION_41	CALL_1
0x4002000	          0x4429d0	                           sub eax, r10d	      2677	gui.c	FUNCTION_41	CALL_1
0x4002003	              0x99	                                     cdq	      2677	gui.c	FUNCTION_41	CALL_1
0x4002004	          0x41f7f9	                                idiv r9d	      2677	gui.c	FUNCTION_41	CALL_1
0x4002007	          0x4189c3	                           mov r11d, eax	      2677	gui.c	FUNCTION_41	CALL_1
0x400200a	            0x89f8	                            mov eax, edi	      2677	gui.c	FUNCTION_41	CALL_1
0x400200c	          0x4429d0	                           sub eax, r10d	      2677	gui.c	FUNCTION_41	CALL_1
0x400200f	              0x99	                                     cdq	      2677	gui.c	FUNCTION_41	CALL_1
0x4002010	            0xf7fb	                                idiv ebx	      2677	gui.c	FUNCTION_41	CALL_1
0x4002012	            0x89c6	                            mov esi, eax	      2677	gui.c	FUNCTION_41	CALL_1
0x4002014	          0x4489c0	                            mov eax, r8d	      2677	gui.c	FUNCTION_41	CALL_1
0x4002017	    0x41b810000000	                           mov r8d, 0x10	      2677	gui.c	FUNCTION_41	CALL_1
0x400201d	          0x4429d0	                           sub eax, r10d	      2677	gui.c	FUNCTION_41	CALL_1
0x4002020	              0x99	                                     cdq	      2677	gui.c	FUNCTION_41	CALL_1
0x4002021	          0x41f7f9	                                idiv r9d	      2677	gui.c	FUNCTION_41	CALL_1
0x4002024	          0x4489da	                           mov edx, r11d	      2677	gui.c	FUNCTION_41	CALL_1
0x4002027	            0x89c7	                            mov edi, eax	      2677	gui.c	FUNCTION_41	CALL_1
0x4002029	      0xe8d2f2ffff	        call sym.gui_redraw_block.part.7	      2677	gui.c	FUNCTION_41	CALL_1
0x400202e	    0x8b0500000000	            mov eax, dword [0x04002034] 	      2691	gui.c	FUNCTION_41	IF_1
0x4002034	    0x390500000000	            cmp dword [0x0400203a], eax 	      2691	gui.c	FUNCTION_41	IF_1
0x400203a	            0x7404	                            je 0x4002040	      2691	gui.c	FUNCTION_41	IF_1
0x400203c	              0x5b	                                 pop rbx	      2693	gui.c	FUNCTION_41
0x400203d	              0xc3	                                     ret	      2693	gui.c	FUNCTION_41
0x400203e	            0x6690	                                     nop	      2693	gui.c	FUNCTION_41
0x4002040	              0x5b	                                 pop rbx	      2693	gui.c	FUNCTION_41
0x4002041	      0xbe01000000	                              mov esi, 1	      2692	gui.c	FUNCTION_41	CALL_6
0x4002046	      0xbf01000000	                              mov edi, 1	      2692	gui.c	FUNCTION_41	CALL_6
0x400204b	      0xe9a0f8ffff	               jmp sym.gui_update_cursor	      2692	gui.c	FUNCTION_41	CALL_6
gui_drag_scrollbar	IF,28:SWITCH,0:functions,0:CALL,22:WHILE,0:ELSE,9:FOR,1:DO,0	224
0x4005250	          0x4885ff	                           test rdi, rdi	      3975	gui.c	FUNCTION_63	IF_1
0x4005253	            0x7434	                            je 0x4005289	      3975	gui.c	FUNCTION_63	IF_1
0x4005255	    0x8b0500000000	            mov eax, dword [0x0400525b] 	      3979	gui.c	FUNCTION_63	IF_2
0x400525b	            0x85c0	                           test eax, eax	      3979	gui.c	FUNCTION_63	IF_2
0x400525d	            0x752a	                           jne 0x4005289	      3979	gui.c	FUNCTION_63	IF_2
0x400525f	            0x4156	                                push r14	      3961	gui.c	FUNCTION_63
0x4005261	            0x4155	                                push r13	      3961	gui.c	FUNCTION_63
0x4005263	            0x4154	                                push r12	      3961	gui.c	FUNCTION_63
0x4005265	              0x55	                                push rbp	      3961	gui.c	FUNCTION_63
0x4005266	    0x8b2d00000000	            mov ebp, dword [0x0400526c] 	      3983	gui.c	FUNCTION_63	IF_3
0x400526c	              0x53	                                push rbx	      3961	gui.c	FUNCTION_63
0x400526d	          0x4889fb	                            mov rbx, rdi	      3961	gui.c	FUNCTION_63
0x4005270	    0x488b05000000	            mov rax, qword [0x04005277] 	      3965	gui.c	FUNCTION_63
0x4005277	            0x85ed	                           test ebp, ebp	      3983	gui.c	FUNCTION_63	IF_3
0x4005279	            0x7415	                            je 0x4005290	      3983	gui.c	FUNCTION_63	IF_3
0x400527b	        0x483b4708	                cmp rax, qword [rdi + 8]	      3983	gui.c	FUNCTION_63	IF_3
0x400527f	            0x740f	                            je 0x4005290	      3983	gui.c	FUNCTION_63	IF_3
0x4005281	              0x5b	                                 pop rbx	      4155	gui.c	FUNCTION_63
0x4005282	              0x5d	                                 pop rbp	      4155	gui.c	FUNCTION_63
0x4005283	            0x415c	                                 pop r12	      4155	gui.c	FUNCTION_63
0x4005285	            0x415d	                                 pop r13	      4155	gui.c	FUNCTION_63
0x4005287	            0x415e	                                 pop r14	      4155	gui.c	FUNCTION_63
0x4005289	            0xf3c3	                                     ret	      4155	gui.c	FUNCTION_63
0x400528b	       0xf1f440000	                   nop dword [rax + rax]	      4155	gui.c	FUNCTION_63
0x4005290	            0x85d2	                           test edx, edx	      3987	gui.c	FUNCTION_63	IF_4
0x4005292	    0x448ba8940000	           mov r13d, dword [rax + 0x94] 	      3965	gui.c	FUNCTION_63
0x4005299	        0x4c8b7078	            mov r14, qword [rax + 0x78] 	      3966	gui.c	FUNCTION_63
0x400529d	    0x448ba0840000	           mov r12d, dword [rax + 0x84] 	      3968	gui.c	FUNCTION_63
0x40052a4	     0xf853e010000	                           jne 0x40053e8	      3987	gui.c	FUNCTION_63	IF_4
0x40052aa	        0x488b4308	                mov rax, qword [rbx + 8]	      3987	gui.c	FUNCTION_63	IF_4
0x40052ae	    0xc70500000000	     mov dword [0x040052b8], 0xffffffff 	      3999	gui.c	FUNCTION_63	ELSE_3
0x40052b8	    0x48c705000000	               mov qword [0x040052c3], 0	      4003	gui.c	FUNCTION_63	ELSE_3
0x40052c3	          0x4885c0	                           test rax, rax	      4008	gui.c	FUNCTION_63	IF_7
0x40052c6	     0xf8454010000	                            je 0x4005420	      4008	gui.c	FUNCTION_63	IF_7
0x40052cc	          0x4885f6	                           test rsi, rsi	      4008	gui.c	FUNCTION_63	IF_7
0x40052cf	      0xbd00000000	                              mov ebp, 0	      4008	gui.c	FUNCTION_63	IF_7
0x40052d4	    0x448b1d000000	           mov r11d, dword [0x040052db] 	      4030	gui.c	FUNCTION_63	IF_11
0x40052db	        0x480f48f5	                          cmovs rsi, rbp	      4030	gui.c	FUNCTION_63	IF_11
0x40052df	    0x488ba8b81800	          mov rbp, qword [rax + 0x18b8] 	      4020	gui.c	FUNCTION_63	IF_10
0x40052e6	    0x482ba8b01800	           sub rbp, qword [rax + 0x18b0]	      4020	gui.c	FUNCTION_63	IF_10
0x40052ed	        0x4883c501	                              add rbp, 1	      4020	gui.c	FUNCTION_63	IF_10
0x40052f1	          0x4839f5	                            cmp rbp, rsi	      4020	gui.c	FUNCTION_63	IF_10
0x40052f4	        0x480f4fee	                          cmovg rbp, rsi	      4020	gui.c	FUNCTION_63	IF_10
0x40052f8	          0x4585db	                         test r11d, r11d	      4030	gui.c	FUNCTION_63	IF_11
0x40052fb	    0x4889a8a81800	          mov qword [rax + 0x18a8], rbp 	      4024	gui.c	FUNCTION_63
0x4005302	     0xf8579ffffff	                           jne 0x4005281	      4030	gui.c	FUNCTION_63	IF_11
0x4005308	    0x488b88981800	          mov rcx, qword [rax + 0x1898] 	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x400530f	    0x488d98901800	                 lea rbx, [rax + 0x1890]	      4009	gui.c	FUNCTION_63	IF_7
0x4005316	          0x4885c9	                           test rcx, rcx	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4005319	     0xf842d010000	                            je 0x400544c	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x400531f	    0x483b0d000000	            cmp rcx, qword [0x04005326] 	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4005326	     0xf8420010000	                            je 0x400544c	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x400532c	    0x488b05000000	            mov rax, qword [0x04005333] 	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4005333	            0x31d2	                            xor edx, edx	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4005335	          0x4839c8	                            cmp rax, rcx	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4005338	            0x741b	                            je 0x4005355	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x400533a	    0x660f1f440000	                    nop word [rax + rax]	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4005340	          0x4885c0	                           test rax, rax	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4005343	     0xf8438ffffff	                            je 0x4005281	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4005349	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x400534d	          0x83c201	                              add edx, 1	      4053	gui.c	FUNCTION_63	IF_15	FOR_1
0x4005350	          0x4839c8	                            cmp rax, rcx	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4005353	            0x75eb	                           jne 0x4005340	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4005355	    0x8b0500000000	            mov eax, dword [0x0400535b] 	      4060	gui.c	FUNCTION_63	IF_15	IF_17
0x400535b	    0x891500000000	            mov dword [0x04005361], edx 	      4058	gui.c	FUNCTION_63	IF_15
0x4005361	    0x48892d000000	            mov qword [0x04005368], rbp 	      4059	gui.c	FUNCTION_63	IF_15
0x4005368	            0xa801	                              test al, 1	      4060	gui.c	FUNCTION_63	IF_15	IF_17
0x400536a	     0xf8590010000	                           jne 0x4005500	      4060	gui.c	FUNCTION_63	IF_15	IF_17
0x4005370	            0xa810	                           test al, 0x10	      4065	gui.c	FUNCTION_63	IF_15	ELSE_5	IF_18
0x4005372	     0xf8598010000	                           jne 0x4005510	      4065	gui.c	FUNCTION_63	IF_15	ELSE_5	IF_18
0x4005378	            0xa808	                              test al, 8	      4070	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19
0x400537a	     0xf8560010000	                           jne 0x40054e0	      4070	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19
0x4005380	        0x488b4308	                mov rax, qword [rbx + 8]	      4080	gui.c	FUNCTION_63	IF_15
0x4005384	    0x448b05000000	            mov r8d, dword [0x0400538b] 	      4085	gui.c	FUNCTION_63	IF_15	IF_21
0x400538b	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      4080	gui.c	FUNCTION_63	IF_15
0x400538f	          0x4585c0	                           test r8d, r8d	      4085	gui.c	FUNCTION_63	IF_15	IF_21
0x4005392	        0x488d77ff	                      lea rsi, [rdi - 1]	      4080	gui.c	FUNCTION_63	IF_15
0x4005396	        0x48897318	             mov qword [rbx + 0x18], rsi	      4080	gui.c	FUNCTION_63	IF_15
0x400539a	            0x740e	                            je 0x40053aa	      4085	gui.c	FUNCTION_63	IF_15	IF_21
0x400539c	    0x8b3d00000000	            mov edi, dword [0x040053a2] 	      4085	gui.c	FUNCTION_63	IF_15	IF_21
0x40053a2	            0x85ff	                           test edi, edi	      4085	gui.c	FUNCTION_63	IF_15	IF_21
0x40053a4	     0xf8586010000	                           jne 0x4005530	      4085	gui.c	FUNCTION_63	IF_15	IF_21
0x40053aa	    0x488b3d000000	            mov rdi, qword [0x040053b1] 	      4085	gui.c	FUNCTION_63	IF_15	IF_21
0x40053b1	    0x8b8f88020000	           mov ecx, dword [rdi + 0x288] 	      4134	gui.c	FUNCTION_63	IF_27
0x40053b7	            0x85c9	                           test ecx, ecx	      4134	gui.c	FUNCTION_63	IF_27
0x40053b9	            0x7416	                            je 0x40053d1	      4134	gui.c	FUNCTION_63	IF_27
0x40053bb	        0x488b4308	                mov rax, qword [rbx + 8]	      4135	gui.c	FUNCTION_63	IF_27
0x40053bf	          0x4885c0	                           test rax, rax	      4135	gui.c	FUNCTION_63	IF_27
0x40053c2	     0xf84aa010000	                            je 0x4005572	      4135	gui.c	FUNCTION_63	IF_27
0x40053c8	          0x4839f8	                            cmp rax, rdi	      4136	gui.c	FUNCTION_63	IF_27
0x40053cb	     0xf84ec010000	                            je 0x40055bd	      4136	gui.c	FUNCTION_63	IF_27
0x40053d1	              0x5b	                                 pop rbx	      4155	gui.c	FUNCTION_63
0x40053d2	              0x5d	                                 pop rbp	      4155	gui.c	FUNCTION_63
0x40053d3	            0x415c	                                 pop r12	      4155	gui.c	FUNCTION_63
0x40053d5	            0x415d	                                 pop r13	      4155	gui.c	FUNCTION_63
0x40053d7	            0x415e	                                 pop r14	      4155	gui.c	FUNCTION_63
0x40053d9	      0xbe01000000	                              mov esi, 1	      4149	gui.c	FUNCTION_63	CALL_19
0x40053de	            0x31ff	                            xor edi, edi	      4149	gui.c	FUNCTION_63	CALL_19
0x40053e0	      0xe900000000	                           jmp 0x40053e5	      4149	gui.c	FUNCTION_63	CALL_19
0x40053e5	           0xf1f00	                         nop dword [rax]	      4149	gui.c	FUNCTION_63	CALL_19
0x40053e8	        0x488b4308	                mov rax, qword [rbx + 8]	      3989	gui.c	FUNCTION_63	IF_4	IF_5
0x40053ec	          0x4885c0	                           test rax, rax	      3989	gui.c	FUNCTION_63	IF_4	IF_5
0x40053ef	     0xf842b010000	                            je 0x4005520	      3989	gui.c	FUNCTION_63	IF_4	IF_5
0x40053f5	    0x488d90901800	                 lea rdx, [rax + 0x1890]	      3991	gui.c	FUNCTION_63	IF_4	ELSE_1	IF_6
0x40053fc	          0x4839d3	                            cmp rbx, rdx	      3992	gui.c	FUNCTION_63	IF_4	ELSE_1	IF_6
0x40053ff	           0xf95c2	                                setne dl	      3992	gui.c	FUNCTION_63	IF_4	ELSE_1	IF_6
0x4005402	           0xfb6d2	                           movzx edx, dl	      3992	gui.c	FUNCTION_63	IF_4	ELSE_1	IF_6
0x4005405	    0x891500000000	            mov dword [0x0400540b], edx 	      3992	gui.c	FUNCTION_63	IF_4	ELSE_1	IF_6
0x400540b	    0x488905000000	            mov qword [0x04005412], rax 	      3995	gui.c	FUNCTION_63	IF_4
0x4005412	      0xe9acfeffff	                           jmp 0x40052c3	      3995	gui.c	FUNCTION_63	IF_4
0x4005417	    0x660f1f840000	                    nop word [rax + rax]	      3995	gui.c	FUNCTION_63	IF_4
0x4005420	          0x4885f6	                           test rsi, rsi	      3995	gui.c	FUNCTION_63	IF_4
0x4005423	        0x488b6b28	            mov rbp, qword [rbx + 0x28] 	      4020	gui.c	FUNCTION_63	IF_10
0x4005427	        0x480f48f0	                          cmovs rsi, rax	      4020	gui.c	FUNCTION_63	IF_10
0x400542b	        0x482b6b20	             sub rbp, qword [rbx + 0x20]	      4020	gui.c	FUNCTION_63	IF_10
0x400542f	    0x8b0500000000	            mov eax, dword [0x04005435] 	      4030	gui.c	FUNCTION_63	IF_11
0x4005435	        0x4883c501	                              add rbp, 1	      4020	gui.c	FUNCTION_63	IF_10
0x4005439	          0x4839ee	                            cmp rsi, rbp	      4020	gui.c	FUNCTION_63	IF_10
0x400543c	        0x480f4eee	                         cmovle rbp, rsi	      4020	gui.c	FUNCTION_63	IF_10
0x4005440	            0x85c0	                           test eax, eax	      4030	gui.c	FUNCTION_63	IF_11
0x4005442	        0x48896b18	             mov qword [rbx + 0x18], rbp	      4024	gui.c	FUNCTION_63
0x4005446	     0xf8535feffff	                           jne 0x4005281	      4030	gui.c	FUNCTION_63	IF_11
0x400544c	      0xe800000000	                          call 0x4005451	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4005451	            0x85c0	                           test eax, eax	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4005453	     0xf8528feffff	                           jne 0x4005281	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4005459	        0x488b4b08	                mov rcx, qword [rbx + 8]	      4041	gui.c	FUNCTION_63	IF_13
0x400545d	          0x4885c9	                           test rcx, rcx	      4041	gui.c	FUNCTION_63	IF_13
0x4005460	     0xf85c6feffff	                           jne 0x400532c	      4041	gui.c	FUNCTION_63	IF_13
0x4005466	    0x488b3d000000	            mov rdi, qword [0x0400546d] 	      4041	gui.c	FUNCTION_63	IF_13
0x400546d	    0x448b97540200	          mov r10d, dword [rdi + 0x254] 	      4041	gui.c	FUNCTION_63	IF_13
0x4005474	          0x4585d2	                         test r10d, r10d	      4041	gui.c	FUNCTION_63	IF_13
0x4005477	            0x7416	                            je 0x400548f	      4041	gui.c	FUNCTION_63	IF_13
0x4005479	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      4043	gui.c	FUNCTION_63	IF_13
0x400547d	        0x4883c001	                              add rax, 1	      4043	gui.c	FUNCTION_63	IF_13
0x4005481	        0x482b4320	             sub rax, qword [rbx + 0x20]	      4043	gui.c	FUNCTION_63	IF_13
0x4005485	          0x4829e8	                            sub rax, rbp	      4043	gui.c	FUNCTION_63	IF_13
0x4005488	        0x480f49c8	                         cmovns rcx, rax	      4043	gui.c	FUNCTION_63	IF_13
0x400548c	          0x4889cd	                            mov rbp, rcx	      4043	gui.c	FUNCTION_63	IF_13
0x400548f	    0x8b0500000000	            mov eax, dword [0x04005495] 	      4105	gui.c	FUNCTION_63	ELSE_7	IF_22
0x4005495	    0x48892d000000	            mov qword [0x0400549c], rbp 	      4103	gui.c	FUNCTION_63	ELSE_7
0x400549c	            0xa801	                              test al, 1	      4105	gui.c	FUNCTION_63	ELSE_7	IF_22
0x400549e	     0xf852d010000	                           jne 0x40055d1	      4105	gui.c	FUNCTION_63	ELSE_7	IF_22
0x40054a4	            0xa810	                           test al, 0x10	      4107	gui.c	FUNCTION_63	ELSE_7	ELSE_8	IF_23
0x40054a6	     0xf853b010000	                           jne 0x40055e7	      4107	gui.c	FUNCTION_63	ELSE_7	ELSE_8	IF_23
0x40054ac	            0xa808	                              test al, 8	      4109	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24
0x40054ae	            0x7410	                            je 0x40054c0	      4109	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24
0x40054b0	    0x8b3500000000	            mov esi, dword [0x040054b6] 	      4111	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25
0x40054b6	            0x85f6	                           test esi, esi	      4111	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25
0x40054b8	     0xf843a010000	                            je 0x40055f8	      4111	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25
0x40054be	            0x6690	                                     nop	      4111	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25
0x40054c0	    0x443baf940000	           cmp r13d, dword [rdi + 0x94] 	      4117	gui.c	FUNCTION_63	ELSE_7	IF_26
0x40054c7	     0xf84e4feffff	                            je 0x40053b1	      4117	gui.c	FUNCTION_63	ELSE_7	IF_26
0x40054cd	      0xe800000000	                          call 0x40054d2	      4119	gui.c	FUNCTION_63	ELSE_7	IF_26	CALL_13
0x40054d2	      0xe800000000	                          call 0x40054d7	      4120	gui.c	FUNCTION_63	ELSE_7	IF_26	CALL_14
0x40054d7	      0xe9cefeffff	                           jmp 0x40053aa	      4120	gui.c	FUNCTION_63	ELSE_7	IF_26	CALL_14
0x40054dc	         0xf1f4000	                         nop dword [rax]	      4120	gui.c	FUNCTION_63	ELSE_7	IF_26	CALL_14
0x40054e0	    0x448b0d000000	            mov r9d, dword [0x040054e7] 	      4072	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19	IF_20
0x40054e7	          0x4585c9	                           test r9d, r9d	      4072	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19	IF_20
0x40054ea	     0xf8590feffff	                           jne 0x4005380	      4072	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19	IF_20
0x40054f0	      0xe800000000	                          call 0x40054f5	      4074	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19	IF_20	CALL_6
0x40054f5	      0xe800000000	                          call 0x40054fa	      4075	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19	IF_20	CALL_7
0x40054fa	      0xe981feffff	                           jmp 0x4005380	      4075	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19	IF_20	CALL_7
0x40054ff	              0x90	                                     nop	      4075	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19	IF_20	CALL_7
0x4005500	      0xe800000000	                          call 0x4005505	      4062	gui.c	FUNCTION_63	IF_15	IF_17	CALL_2
0x4005505	      0xe800000000	                          call 0x400550a	      4063	gui.c	FUNCTION_63	IF_15	IF_17	CALL_3
0x400550a	      0xe971feffff	                           jmp 0x4005380	      4063	gui.c	FUNCTION_63	IF_15	IF_17	CALL_3
0x400550f	              0x90	                                     nop	      4063	gui.c	FUNCTION_63	IF_15	IF_17	CALL_3
0x4005510	      0xe800000000	                          call 0x4005515	      4067	gui.c	FUNCTION_63	IF_15	ELSE_5	IF_18	CALL_4
0x4005515	      0xe800000000	                          call 0x400551a	      4068	gui.c	FUNCTION_63	IF_15	ELSE_5	IF_18	CALL_5
0x400551a	      0xe961feffff	                           jmp 0x4005380	      4068	gui.c	FUNCTION_63	IF_15	ELSE_5	IF_18	CALL_5
0x400551f	              0x90	                                     nop	      4068	gui.c	FUNCTION_63	IF_15	ELSE_5	IF_18	CALL_5
0x4005520	    0xc70500000000	               mov dword [0x0400552a], 2	      3990	gui.c	FUNCTION_63	IF_4	IF_5
0x400552a	      0xe9dcfeffff	                           jmp 0x400540b	      3990	gui.c	FUNCTION_63	IF_4	IF_5
0x400552f	              0x90	                                     nop	      3990	gui.c	FUNCTION_63	IF_4	IF_5
0x4005530	    0x488db8e01800	                 lea rdi, [rax + 0x18e0]	      4088	gui.c	FUNCTION_63	IF_15	IF_21
0x4005537	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x400553b	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x400553f	          0x4839fb	                            cmp rbx, rdi	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4005542	        0x400f95c7	                               setne dil	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4005546	        0x400fb6ff	                          movzx edi, dil	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x400554a	    0x4c8d04bd0000	                         lea r8, [rdi*4]	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4005552	          0x4c01c7	                             add rdi, r8	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4005555	        0x48c1e704	                              shl rdi, 4	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4005559	    0x488dbc389018	           lea rdi, [rax + rdi + 0x1890]	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4005561	      0xe800000000	                          call 0x4005566	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4005566	    0x488b3d000000	            mov rdi, qword [0x0400556d] 	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x400556d	      0xe93ffeffff	                           jmp 0x40053b1	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4005572	    0x443baf940000	           cmp r13d, dword [rdi + 0x94] 	      4135	gui.c	FUNCTION_63	IF_27
0x4005579	     0xf8452feffff	                            je 0x40053d1	      4135	gui.c	FUNCTION_63	IF_27
0x400557f	      0xbf01000000	                              mov edi, 1	      4142	gui.c	FUNCTION_63	IF_27	CALL_15
0x4005584	      0xe800000000	                          call 0x4005589	      4142	gui.c	FUNCTION_63	IF_27	CALL_15
0x4005589	    0x488b1d000000	            mov rbx, qword [0x04005590] 	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x4005590	          0x4885db	                           test rbx, rbx	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x4005593	            0x741e	                            je 0x40055b3	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x4005595	           0xf1f00	                         nop dword [rax]	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x4005598	    0x8b9328010000	           mov edx, dword [rbx + 0x128] 	      4145	gui.c	FUNCTION_63	IF_27	IF_28
0x400559e	            0x85d2	                           test edx, edx	      4145	gui.c	FUNCTION_63	IF_27	IF_28
0x40055a0	            0x7e08	                           jle 0x40055aa	      4145	gui.c	FUNCTION_63	IF_27	IF_28
0x40055a2	          0x4889df	                            mov rdi, rbx	      4146	gui.c	FUNCTION_63	IF_27	CALL_17
0x40055a5	      0xe800000000	                          call 0x40055aa	      4146	gui.c	FUNCTION_63	IF_27	CALL_17
0x40055aa	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x40055ae	          0x4885db	                           test rbx, rbx	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x40055b1	            0x75e5	                           jne 0x4005598	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x40055b3	      0xe800000000	                          call 0x40055b8	      4147	gui.c	FUNCTION_63	IF_27	CALL_18
0x40055b8	      0xe914feffff	                           jmp 0x40053d1	      4147	gui.c	FUNCTION_63	IF_27	CALL_18
0x40055bd	        0x4c3b7778	            cmp r14, qword [rdi + 0x78] 	      4136	gui.c	FUNCTION_63	IF_27
0x40055c1	            0x75bc	                           jne 0x400557f	      4136	gui.c	FUNCTION_63	IF_27
0x40055c3	    0x443ba7840000	           cmp r12d, dword [rdi + 0x84] 	      4138	gui.c	FUNCTION_63	IF_27
0x40055ca	            0x75b3	                           jne 0x400557f	      4138	gui.c	FUNCTION_63	IF_27
0x40055cc	      0xe900feffff	                           jmp 0x40053d1	      4138	gui.c	FUNCTION_63	IF_27
0x40055d1	          0x4889ef	                            mov rdi, rbp	      4106	gui.c	FUNCTION_63	ELSE_7	CALL_9
0x40055d4	            0x31f6	                            xor esi, esi	      4106	gui.c	FUNCTION_63	ELSE_7	CALL_9
0x40055d6	      0xe800000000	                          call 0x40055db	      4106	gui.c	FUNCTION_63	ELSE_7	CALL_9
0x40055db	    0x488b3d000000	            mov rdi, qword [0x040055e2] 	      4106	gui.c	FUNCTION_63	ELSE_7	CALL_9
0x40055e2	      0xe9d9feffff	                           jmp 0x40054c0	      4106	gui.c	FUNCTION_63	ELSE_7	CALL_9
0x40055e7	      0xe800000000	                          call 0x40055ec	      4108	gui.c	FUNCTION_63	ELSE_7	ELSE_8	IF_23
0x40055ec	    0x488b3d000000	            mov rdi, qword [0x040055f3] 	      4108	gui.c	FUNCTION_63	ELSE_7	ELSE_8	IF_23
0x40055f3	      0xe9c8feffff	                           jmp 0x40054c0	      4108	gui.c	FUNCTION_63	ELSE_7	ELSE_8	IF_23
0x40055f8	          0x4889ef	                            mov rdi, rbp	      4113	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25	CALL_11
0x40055fb	            0x31f6	                            xor esi, esi	      4113	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25	CALL_11
0x40055fd	      0xe800000000	                          call 0x4005602	      4113	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25	CALL_11
0x4005602	      0xe800000000	                          call 0x4005607	      4114	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25	CALL_12
0x4005607	    0x488b3d000000	            mov rdi, qword [0x0400560e] 	      4114	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25	CALL_12
0x400560e	      0xe9adfeffff	                           jmp 0x40054c0	      4114	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25	CALL_12
gui_do_scrollbar	IF,5:SWITCH,0:functions,0:CALL,1:WHILE,0:ELSE,2:FOR,0:DO,0	63
0x4000180	    0x488b0d000000	            mov rcx, qword [0x04000187] 	      4382	gui.c	FUNCTION_66
0x4000187	    0x8b81ac000000	            mov eax, dword [rcx + 0xac] 	      4382	gui.c	FUNCTION_66
0x400018d	          0x4189c0	                            mov r8d, eax	      4382	gui.c	FUNCTION_66
0x4000190	        0x41c1e81f	                           shr r8d, 0x1f	      4382	gui.c	FUNCTION_66
0x4000194	          0x4401c0	                            add eax, r8d	      4382	gui.c	FUNCTION_66
0x4000197	            0xd1f8	                              sar eax, 1	      4382	gui.c	FUNCTION_66
0x4000199	     0x381a8000000	             add eax, dword [rcx + 0xa8]	      4382	gui.c	FUNCTION_66
0x400019f	    0x8b8fa8000000	            mov ecx, dword [rdi + 0xa8] 	      4383	gui.c	FUNCTION_66
0x40001a5	            0x39c8	                            cmp eax, ecx	      4384	gui.c	FUNCTION_66
0x40001a7	            0x7c57	                            jl 0x4000200	      4384	gui.c	FUNCTION_66
0x40001a9	    0x448b87ac0000	            mov r8d, dword [rdi + 0xac] 	      4384	gui.c	FUNCTION_66
0x40001b0	          0x4101c8	                            add r8d, ecx	      4384	gui.c	FUNCTION_66
0x40001b3	          0x4439c0	                            cmp eax, r8d	      4384	gui.c	FUNCTION_66
0x40001b6	            0x7f48	                            jg 0x4000200	      4384	gui.c	FUNCTION_66
0x40001b8	    0x448b15000000	           mov r10d, dword [0x040001bf] 	      4388	gui.c	FUNCTION_66	IF_1
0x40001bf	    0x443915000000	           cmp dword [0x040001c6], r10d 	      4388	gui.c	FUNCTION_66	IF_1
0x40001c6	            0x754d	                           jne 0x4000215	      4388	gui.c	FUNCTION_66	IF_1
0x40001c8	    0x41b901000000	                              mov r9d, 1	      4384	gui.c	FUNCTION_66
0x40001ce	            0x6690	                                     nop	      4384	gui.c	FUNCTION_66
0x40001d0	    0x4c8b15000000	            mov r10, qword [0x040001d7] 	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x40001d7	            0x4898	                                    cdqe	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x40001d9	          0x4d89d0	                             mov r8, r10	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x40001dc	        0x49c1e83f	                            shr r8, 0x3f	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x40001e0	          0x4d01d0	                             add r8, r10	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x40001e3	          0x49d1f8	                               sar r8, 1	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x40001e6	          0x4c39c0	                             cmp rax, r8	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x40001e9	            0x7e45	                           jle 0x4000230	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x40001eb	            0x85f6	                           test esi, esi	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x40001ed	            0x7561	                           jne 0x4000250	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x40001ef	            0x85c9	                           test ecx, ecx	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x40001f1	        0x410f95c1	                               setne r9b	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x40001f5	            0xeb46	                           jmp 0x400023d	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x40001f7	    0x660f1f840000	                    nop word [rax + rax]	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x4000200	    0x448b1d000000	           mov r11d, dword [0x04000207] 	      4388	gui.c	FUNCTION_66	IF_1
0x4000207	          0x4531c9	                            xor r9d, r9d	      4388	gui.c	FUNCTION_66	IF_1
0x400020a	    0x44391d000000	           cmp dword [0x04000211], r11d 	      4388	gui.c	FUNCTION_66	IF_1
0x4000211	            0x74bd	                            je 0x40001d0	      4388	gui.c	FUNCTION_66	IF_1
0x4000213	            0x31d2	                            xor edx, edx	      4403	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x4000215	          0x4863c6	                         movsxd rax, esi	      4412	gui.c	FUNCTION_66	CALL_1
0x4000218	            0x89d6	                            mov esi, edx	      4412	gui.c	FUNCTION_66	CALL_1
0x400021a	        0x488d0480	                  lea rax, [rax + rax*4]	      4412	gui.c	FUNCTION_66	CALL_1
0x400021e	        0x48c1e004	                              shl rax, 4	      4412	gui.c	FUNCTION_66	CALL_1
0x4000222	    0x488dbc079018	           lea rdi, [rdi + rax + 0x1890]	      4412	gui.c	FUNCTION_66	CALL_1
0x400022a	      0xe900000000	                           jmp 0x400022f	      4412	gui.c	FUNCTION_66	CALL_1
0x400022f	              0x90	                                     nop	      4412	gui.c	FUNCTION_66	CALL_1
0x4000230	        0x4183f101	                              xor r9d, 1	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x4000234	        0x4183e101	                              and r9d, 1	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x4000238	          0x83fe01	                              cmp esi, 1	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x400023b	            0x7423	                            je 0x4000260	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x400023d	          0x4584c9	                           test r9b, r9b	      4403	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x4000240	      0xb800000000	                              mov eax, 0	      4403	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x4000245	           0xf45d0	                         cmovne edx, eax	      4403	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x4000248	            0xebcb	                           jmp 0x4000215	      4403	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x400024a	    0x660f1f440000	                    nop word [rax + rax]	      4403	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x4000250	        0x4183f101	                              xor r9d, 1	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x4000254	        0x4183e101	                              and r9d, 1	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x4000258	            0xebe3	                           jmp 0x400023d	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x400025a	    0x660f1f440000	                    nop word [rax + rax]	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x4000260	     0x38fac000000	             add ecx, dword [rdi + 0xac]	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x4000266	          0x4863c9	                         movsxd rcx, ecx	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x4000269	          0x4c39d1	                            cmp rcx, r10	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x400026c	        0x410f95c1	                               setne r9b	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x4000270	            0xebcb	                           jmp 0x400023d	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
gui_get_shellsize	IF,0:SWITCH,0:functions,0:CALL,0:WHILE,0:ELSE,0:FOR,0:DO,0	6
0x4000c30	    0x486305000000	         movsxd rax, dword [0x04000c37] 	      1556	gui.c	FUNCTION_22
0x4000c37	    0x488905000000	            mov qword [0x04000c3e], rax 	      1556	gui.c	FUNCTION_22
0x4000c3e	    0x486305000000	         movsxd rax, dword [0x04000c45] 	      1557	gui.c	FUNCTION_22
0x4000c45	    0x488905000000	            mov qword [0x04000c4c], rax 	      1557	gui.c	FUNCTION_22
0x4000c4c	      0xb801000000	                              mov eax, 1	      1559	gui.c	FUNCTION_22
0x4000c51	              0xc3	                                     ret	      1559	gui.c	FUNCTION_22
gui_handle_drop	IF,11:SWITCH,0:functions,0:CALL,27:WHILE,0:ELSE,4:FOR,1:DO,0	151
0x40067f0	            0x4156	                                push r14	      5435	gui.c	FUNCTION_93
0x40067f2	            0x4155	                                push r13	      5435	gui.c	FUNCTION_93
0x40067f4	            0x4154	                                push r12	      5435	gui.c	FUNCTION_93
0x40067f6	              0x55	                                push rbp	      5435	gui.c	FUNCTION_93
0x40067f7	              0x53	                                push rbx	      5435	gui.c	FUNCTION_93
0x40067f8	        0x4883ec10	                           sub rsp, 0x10	      5435	gui.c	FUNCTION_93
0x40067fc	    0x64488b042528	                mov rax, qword fs:[0x28]	      5435	gui.c	FUNCTION_93
0x4006805	      0x4889442408	                mov qword [rsp + 8], rax	      5435	gui.c	FUNCTION_93
0x400680a	            0x31c0	                            xor eax, eax	      5435	gui.c	FUNCTION_93
0x400680c	    0x8b0500000000	            mov eax, dword [0x04006812] 	      5445	gui.c	FUNCTION_93	IF_1
0x4006812	            0x85c0	                           test eax, eax	      5445	gui.c	FUNCTION_93	IF_1
0x4006814	     0xf85a6000000	                           jne 0x40068c0	      5445	gui.c	FUNCTION_93	IF_1
0x400681a	    0xf60500000000	               test byte [0x04006821], 8	      5453	gui.c	FUNCTION_93	IF_2
0x4006821	          0x4989ce	                            mov r14, rcx	      5453	gui.c	FUNCTION_93	IF_2
0x4006824	          0x4589c5	                           mov r13d, r8d	      5453	gui.c	FUNCTION_93	IF_2
0x4006827	    0xc70500000000	               mov dword [0x04006831], 1	      5447	gui.c	FUNCTION_93
0x4006831	     0xf84b1000000	                            je 0x40068e8	      5453	gui.c	FUNCTION_93	IF_2
0x4006837	          0x4489c6	                            mov esi, r8d	      5455	gui.c	FUNCTION_93	IF_2	CALL_1
0x400683a	          0x4889cf	                            mov rdi, rcx	      5455	gui.c	FUNCTION_93	IF_2	CALL_1
0x400683d	            0x31ed	                            xor ebp, ebp	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x400683f	      0xe800000000	                          call 0x4006844	      5455	gui.c	FUNCTION_93	IF_2	CALL_1
0x4006844	          0x4585ed	                         test r13d, r13d	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x4006847	          0x4c89f3	                            mov rbx, r14	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x400684a	            0x7e62	                           jle 0x40068ae	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x400684c	         0xf1f4000	                         nop dword [rax]	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x4006850	          0x488b3b	                    mov rdi, qword [rbx]	      5458	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3
0x4006853	          0x4885ff	                           test rdi, rdi	      5458	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3
0x4006856	            0x744a	                            je 0x40068a2	      5458	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3
0x4006858	            0x85ed	                           test ebp, ebp	      5460	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	IF_4
0x400685a	            0x7e12	                           jle 0x400686e	      5460	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	IF_4
0x400685c	      0xbf00000000	                              mov edi, 0	      5461	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_2
0x4006861	      0xbe01000000	                              mov esi, 1	      5461	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_2
0x4006866	      0xe800000000	                          call 0x400686b	      5461	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_2
0x400686b	          0x488b3b	                    mov rdi, qword [rbx]	      5461	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_2
0x400686e	      0xbe00000000	                              mov esi, 0	      5469	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_4
0x4006873	      0xe800000000	                          call 0x4006878	      5469	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_4
0x4006878	          0x4885c0	                           test rax, rax	      5471	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	IF_5
0x400687b	          0x4989c4	                            mov r12, rax	      5469	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_4
0x400687e	            0x7412	                            je 0x4006892	      5471	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	IF_5
0x4006880	          0x4889c7	                            mov rdi, rax	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x4006883	      0xe800000000	                          call 0x4006888	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x4006888	          0x4c89e7	                            mov rdi, r12	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x400688b	            0x89c6	                            mov esi, eax	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x400688d	      0xe800000000	                          call 0x4006892	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x4006892	          0x4c89e7	                            mov rdi, r12	      5473	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_7
0x4006895	      0xe800000000	                          call 0x400689a	      5473	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_7
0x400689a	          0x488b3b	                    mov rdi, qword [rbx]	      5474	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_8
0x400689d	      0xe800000000	                          call 0x40068a2	      5474	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_8
0x40068a2	          0x83c501	                              add ebp, 1	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x40068a5	        0x4883c308	                              add rbx, 8	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x40068a9	          0x4139ed	                           cmp r13d, ebp	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x40068ac	            0x75a2	                           jne 0x4006850	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x40068ae	          0x4c89f7	                            mov rdi, r14	      5477	gui.c	FUNCTION_93	IF_2	CALL_9
0x40068b1	      0xe800000000	                          call 0x40068b6	      5477	gui.c	FUNCTION_93	IF_2	CALL_9
0x40068b6	    0xc70500000000	               mov dword [0x040068c0], 0	      5531	gui.c	FUNCTION_93
0x40068c0	      0x488b442408	                mov rax, qword [rsp + 8]	      5532	gui.c	FUNCTION_93
0x40068c5	    0x644833042528	                xor rax, qword fs:[0x28]	      5532	gui.c	FUNCTION_93
0x40068ce	     0xf8546010000	                           jne 0x4006a1a	      5532	gui.c	FUNCTION_93
0x40068d4	        0x4883c410	                           add rsp, 0x10	      5532	gui.c	FUNCTION_93
0x40068d8	              0x5b	                                 pop rbx	      5532	gui.c	FUNCTION_93
0x40068d9	              0x5d	                                 pop rbp	      5532	gui.c	FUNCTION_93
0x40068da	            0x415c	                                 pop r12	      5532	gui.c	FUNCTION_93
0x40068dc	            0x415d	                                 pop r13	      5532	gui.c	FUNCTION_93
0x40068de	            0x415e	                                 pop r14	      5532	gui.c	FUNCTION_93
0x40068e0	              0xc3	                                     ret	      5532	gui.c	FUNCTION_93
0x40068e1	     0xf1f80000000	                         nop dword [rax]	      5532	gui.c	FUNCTION_93
0x40068e8	    0x8b0d00000000	            mov ecx, dword [0x040068ee] 	      5410	gui.c	FUNCTION_92	CALL_1
0x40068ee	            0x89f0	                            mov eax, esi	      5410	gui.c	FUNCTION_92	CALL_1
0x40068f0	            0x89d3	                            mov ebx, edx	      5410	gui.c	FUNCTION_92	CALL_1
0x40068f2	            0x29c8	                            sub eax, ecx	      5410	gui.c	FUNCTION_92	CALL_1
0x40068f4	              0x99	                                     cdq	      5410	gui.c	FUNCTION_92	CALL_1
0x40068f5	    0xf73d00000000	                 idiv dword [0x040068fb]	      5410	gui.c	FUNCTION_92	CALL_1
0x40068fb	            0x89c6	                            mov esi, eax	      5410	gui.c	FUNCTION_92	CALL_1
0x40068fd	          0x890424	                    mov dword [rsp], eax	      5410	gui.c	FUNCTION_92	CALL_1
0x4006900	            0x89f8	                            mov eax, edi	      5411	gui.c	FUNCTION_92	CALL_2
0x4006902	            0x29c8	                            sub eax, ecx	      5411	gui.c	FUNCTION_92	CALL_2
0x4006904	              0x99	                                     cdq	      5411	gui.c	FUNCTION_92	CALL_2
0x4006905	    0xf73d00000000	                 idiv dword [0x0400690b]	      5411	gui.c	FUNCTION_92	CALL_2
0x400690b	            0x85f6	                           test esi, esi	      5414	gui.c	FUNCTION_92	IF_1
0x400690d	        0x89442404	                mov dword [rsp + 4], eax	      5411	gui.c	FUNCTION_92	CALL_2
0x4006911	            0x7827	                            js 0x400693a	      5414	gui.c	FUNCTION_92	IF_1
0x4006913	            0x85c0	                           test eax, eax	      5414	gui.c	FUNCTION_92	IF_1
0x4006915	            0x7823	                            js 0x400693a	      5414	gui.c	FUNCTION_92	IF_1
0x4006917	      0x488d742404	                      lea rsi, [rsp + 4]	      5416	gui.c	FUNCTION_92	IF_1	CALL_3
0x400691c	          0x4889e7	                            mov rdi, rsp	      5416	gui.c	FUNCTION_92	IF_1	CALL_3
0x400691f	      0xe800000000	                          call 0x4006924	      5416	gui.c	FUNCTION_92	IF_1	CALL_3
0x4006924	          0x4885c0	                           test rax, rax	      5417	gui.c	FUNCTION_92	IF_1	IF_2
0x4006927	            0x7411	                            je 0x400693a	      5417	gui.c	FUNCTION_92	IF_1	IF_2
0x4006929	    0x483b05000000	            cmp rax, qword [0x04006930] 	      5417	gui.c	FUNCTION_92	IF_1	IF_2
0x4006930	            0x7408	                            je 0x400693a	      5417	gui.c	FUNCTION_92	IF_1	IF_2
0x4006932	          0x4889c7	                            mov rdi, rax	      5418	gui.c	FUNCTION_92	IF_1	CALL_4
0x4006935	      0xe800000000	                          call 0x400693a	      5418	gui.c	FUNCTION_92	IF_1	CALL_4
0x400693a	          0x4489ee	                           mov esi, r13d	      5484	gui.c	FUNCTION_93	ELSE_1	CALL_11
0x400693d	          0x4c89f7	                            mov rdi, r14	      5484	gui.c	FUNCTION_93	ELSE_1	CALL_11
0x4006940	            0x31ed	                            xor ebp, ebp	      5490	gui.c	FUNCTION_93	ELSE_1	ELSE_2
0x4006942	      0xe800000000	                          call 0x4006947	      5484	gui.c	FUNCTION_93	ELSE_1	CALL_11
0x4006947	          0xf6c304	                              test bl, 4	      5487	gui.c	FUNCTION_93	ELSE_1	IF_6
0x400694a	     0xf8590000000	                           jne 0x40069e0	      5487	gui.c	FUNCTION_93	ELSE_1	IF_6
0x4006950	            0x89da	                            mov edx, ebx	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x4006952	          0x4c89f6	                            mov rsi, r14	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x4006955	          0x4489ef	                           mov edi, r13d	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x4006958	          0xc1ea04	                              shr edx, 4	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x400695b	          0x83e201	                              and edx, 1	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x400695e	      0xe800000000	                          call 0x4006963	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x4006963	          0x4885ed	                           test rbp, rbp	      5507	gui.c	FUNCTION_93	ELSE_1	IF_8
0x4006966	            0x7426	                            je 0x400698e	      5507	gui.c	FUNCTION_93	ELSE_1	IF_8
0x4006968	          0x4889ef	                            mov rdi, rbp	      5509	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_17
0x400696b	      0xe800000000	                          call 0x4006970	      5509	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_17
0x4006970	            0x85c0	                           test eax, eax	      5509	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_17
0x4006972	            0x754c	                           jne 0x40069c0	      5509	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_17
0x4006974	      0xbe00000000	                              mov esi, 0	      5514	gui.c	FUNCTION_93	ELSE_1	IF_8	ELSE_4	IF_11	CALL_20
0x4006979	          0x4889ef	                            mov rdi, rbp	      5514	gui.c	FUNCTION_93	ELSE_1	IF_8	ELSE_4	IF_11	CALL_20
0x400697c	      0xe800000000	                          call 0x4006981	      5514	gui.c	FUNCTION_93	ELSE_1	IF_8	ELSE_4	IF_11	CALL_20
0x4006981	          0x83f801	                              cmp eax, 1	      5514	gui.c	FUNCTION_93	ELSE_1	IF_8	ELSE_4	IF_11	CALL_20
0x4006984	            0x7446	                            je 0x40069cc	      5514	gui.c	FUNCTION_93	ELSE_1	IF_8	ELSE_4	IF_11	CALL_20
0x4006986	          0x4889ef	                            mov rdi, rbp	      5516	gui.c	FUNCTION_93	ELSE_1	IF_8	CALL_22
0x4006989	      0xe800000000	                          call 0x400698e	      5516	gui.c	FUNCTION_93	ELSE_1	IF_8	CALL_22
0x400698e	      0xbf28000000	                           mov edi, 0x28	      5520	gui.c	FUNCTION_93	ELSE_1	CALL_23
0x4006993	      0xe800000000	                          call 0x4006998	      5520	gui.c	FUNCTION_93	ELSE_1	CALL_23
0x4006998	            0x31ff	                            xor edi, edi	      5522	gui.c	FUNCTION_93	ELSE_1	CALL_24
0x400699a	      0xe800000000	                          call 0x400699f	      5522	gui.c	FUNCTION_93	ELSE_1	CALL_24
0x400699f	      0xe800000000	                          call 0x40069a4	      5525	gui.c	FUNCTION_93	ELSE_1	CALL_25
0x40069a4	      0xe800000000	                          call 0x40069a9	      5527	gui.c	FUNCTION_93	ELSE_1	CALL_26
0x40069a9	            0x31f6	                            xor esi, esi	      5528	gui.c	FUNCTION_93	ELSE_1	CALL_27
0x40069ab	            0x31ff	                            xor edi, edi	      5528	gui.c	FUNCTION_93	ELSE_1	CALL_27
0x40069ad	      0xe800000000	                          call 0x40069b2	      5528	gui.c	FUNCTION_93	ELSE_1	CALL_27
0x40069b2	      0xe9fffeffff	                           jmp 0x40068b6	      5528	gui.c	FUNCTION_93	ELSE_1	CALL_27
0x40069b7	    0x660f1f840000	                    nop word [rax + rax]	      5528	gui.c	FUNCTION_93	ELSE_1	CALL_27
0x40069c0	          0x4889ef	                            mov rdi, rbp	      5511	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	IF_10	CALL_18
0x40069c3	      0xe800000000	                          call 0x40069c8	      5511	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	IF_10	CALL_18
0x40069c8	            0x85c0	                           test eax, eax	      5511	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	IF_10	CALL_18
0x40069ca	            0x75ba	                           jne 0x4006986	      5511	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	IF_10	CALL_18
0x40069cc	      0xbf01000000	                              mov edi, 1	      5512	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_19
0x40069d1	      0xe800000000	                          call 0x40069d6	      5512	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_19
0x40069d6	            0xebae	                           jmp 0x4006986	      5512	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_19
0x40069d8	     0xf1f84000000	                   nop dword [rax + rax]	      5512	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_19
0x40069e0	          0x498b3e	                    mov rdi, qword [r14]	      5488	gui.c	FUNCTION_93	ELSE_1	CALL_12
0x40069e3	      0xe800000000	                          call 0x40069e8	      5488	gui.c	FUNCTION_93	ELSE_1	CALL_12
0x40069e8	        0x4183fd01	                             cmp r13d, 1	      5495	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7
0x40069ec	          0x4889c5	                            mov rbp, rax	      5488	gui.c	FUNCTION_93	ELSE_1	CALL_12
0x40069ef	     0xf855bffffff	                           jne 0x4006950	      5495	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7
0x40069f5	          0x498b3e	                    mov rdi, qword [r14]	      5496	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_13
0x40069f8	      0xe800000000	                          call 0x40069fd	      5496	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_13
0x40069fd	            0x85c0	                           test eax, eax	      5496	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_13
0x40069ff	     0xf844bffffff	                            je 0x4006950	      5496	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_13
0x4006a05	          0x498b3e	                    mov rdi, qword [r14]	      5498	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_14
0x4006a08	      0xe800000000	                          call 0x4006a0d	      5498	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_14
0x4006a0d	          0x4c89f7	                            mov rdi, r14	      5499	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_15
0x4006a10	      0xe800000000	                          call 0x4006a15	      5499	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_15
0x4006a15	      0xe949ffffff	                           jmp 0x4006963	      5499	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_15
0x4006a1a	      0xe800000000	                  call section_end..text	      5532	gui.c	FUNCTION_93
scroll_line_len	IF,2:SWITCH,0:functions,0:CALL,3:WHILE,0:ELSE,0:FOR,1:DO,0	33
0x4000040	            0x4154	                                push r12	      4534	gui.c	FUNCTION_68
0x4000042	              0x55	                                push rbp	      4534	gui.c	FUNCTION_68
0x4000043	            0x31ed	                            xor ebp, ebp	      4540	gui.c	FUNCTION_68
0x4000045	              0x53	                                push rbx	      4534	gui.c	FUNCTION_68
0x4000046	      0xe800000000	                          call 0x400004b	      4539	gui.c	FUNCTION_68	CALL_1
0x400004b	          0x803800	                       cmp byte [rax], 0	      4541	gui.c	FUNCTION_68	IF_1
0x400004e	            0x7442	                            je 0x4000092	      4541	gui.c	FUNCTION_68	IF_1
0x4000050	          0x4889c3	                            mov rbx, rax	      4541	gui.c	FUNCTION_68	IF_1
0x4000053	            0xeb0e	                           jmp 0x4000063	      4541	gui.c	FUNCTION_68	IF_1
0x4000055	           0xf1f00	                         nop dword [rax]	      4541	gui.c	FUNCTION_68	IF_1
0x4000058	          0x4801c3	                            add rbx, rax	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x400005b	          0x803b00	                       cmp byte [rbx], 0	      4546	gui.c	FUNCTION_68	IF_1	FOR_1	IF_2
0x400005e	            0x7432	                            je 0x4000092	      4546	gui.c	FUNCTION_68	IF_1	FOR_1	IF_2
0x4000060	          0x4401e5	                           add ebp, r12d	      4548	gui.c	FUNCTION_68	IF_1	FOR_1
0x4000063	            0x89ee	                            mov esi, ebp	      4544	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_2
0x4000065	          0x4889df	                            mov rdi, rbx	      4544	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_2
0x4000068	      0xe800000000	                          call 0x400006d	      4544	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_2
0x400006d	    0x8b1500000000	            mov edx, dword [0x04000073] 	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4000073	          0x4189c4	                           mov r12d, eax	      4544	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_2
0x4000076	      0xb801000000	                              mov eax, 1	      4544	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_2
0x400007b	            0x85d2	                           test edx, edx	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x400007d	            0x74d9	                            je 0x4000058	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x400007f	          0x4889df	                            mov rdi, rbx	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4000082	    0xff1500000000	                 call qword [0x04000088]	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4000088	            0x4898	                                    cdqe	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x400008a	          0x4801c3	                            add rbx, rax	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x400008d	          0x803b00	                       cmp byte [rbx], 0	      4546	gui.c	FUNCTION_68	IF_1	FOR_1	IF_2
0x4000090	            0x75ce	                           jne 0x4000060	      4546	gui.c	FUNCTION_68	IF_1	FOR_1	IF_2
0x4000092	            0x89e8	                            mov eax, ebp	      4551	gui.c	FUNCTION_68
0x4000094	              0x5b	                                 pop rbx	      4551	gui.c	FUNCTION_68
0x4000095	              0x5d	                                 pop rbp	      4551	gui.c	FUNCTION_68
0x4000096	            0x415c	                                 pop r12	      4551	gui.c	FUNCTION_68
0x4000098	              0xc3	                                     ret	      4551	gui.c	FUNCTION_68
gui_focus_change	IF,1:SWITCH,0:functions,0:CALL,3:WHILE,0:ELSE,0:FOR,0:DO,0	32
0x4005770	              0x53	                                push rbx	      4816	gui.c	FUNCTION_78
0x4005771	            0x31f6	                            xor esi, esi	      4823	gui.c	FUNCTION_78	CALL_1
0x4005773	            0x89fb	                            mov ebx, edi	      4816	gui.c	FUNCTION_78
0x4005775	        0x4883ec10	                           sub rsp, 0x10	      4816	gui.c	FUNCTION_78
0x4005779	    0x893d00000000	            mov dword [0x0400577f], edi 	      4822	gui.c	FUNCTION_78
0x400577f	      0xbf01000000	                              mov edi, 1	      4823	gui.c	FUNCTION_78	CALL_1
0x4005784	    0x64488b042528	                mov rax, qword fs:[0x28]	      4816	gui.c	FUNCTION_78
0x400578d	      0x4889442408	                mov qword [rsp + 8], rax	      4816	gui.c	FUNCTION_78
0x4005792	            0x31c0	                            xor eax, eax	      4816	gui.c	FUNCTION_78
0x4005794	      0xe800000000	                          call 0x4005799	      4823	gui.c	FUNCTION_78	CALL_1
0x4005799	            0x89df	                            mov edi, ebx	      4826	gui.c	FUNCTION_78	CALL_2
0x400579b	      0xe800000000	                          call 0x40057a0	      4826	gui.c	FUNCTION_78	CALL_2
0x40057a0	    0x8b0500000000	            mov eax, dword [0x040057a6] 	      4832	gui.c	FUNCTION_78	IF_1
0x40057a6	            0x85c0	                           test eax, eax	      4832	gui.c	FUNCTION_78	IF_1
0x40057a8	            0x7524	                           jne 0x40057ce	      4832	gui.c	FUNCTION_78	IF_1
0x40057aa	          0x83fb01	                              cmp ebx, 1	      4838	gui.c	FUNCTION_78	IF_1
0x40057ad	      0xbe03000000	                              mov esi, 3	      4839	gui.c	FUNCTION_78	IF_1	CALL_3
0x40057b2	          0x4889e7	                            mov rdi, rsp	      4839	gui.c	FUNCTION_78	IF_1	CALL_3
0x40057b5	            0x19c0	                            sbb eax, eax	      4838	gui.c	FUNCTION_78	IF_1
0x40057b7	        0xc604249b	                    mov byte [rsp], 0x9b	      4836	gui.c	FUNCTION_78	IF_1
0x40057bb	      0xc6442401fd	                mov byte [rsp + 1], 0xfd	      4837	gui.c	FUNCTION_78	IF_1
0x40057c0	            0xf7d0	                                 not eax	      4838	gui.c	FUNCTION_78	IF_1
0x40057c2	          0x83c063	                           add eax, 0x63	      4838	gui.c	FUNCTION_78	IF_1
0x40057c5	        0x88442402	                  mov byte [rsp + 2], al	      4838	gui.c	FUNCTION_78	IF_1
0x40057c9	      0xe800000000	                          call 0x40057ce	      4839	gui.c	FUNCTION_78	IF_1	CALL_3
0x40057ce	      0x488b442408	                mov rax, qword [rsp + 8]	      4842	gui.c	FUNCTION_78
0x40057d3	    0x644833042528	                xor rax, qword fs:[0x28]	      4842	gui.c	FUNCTION_78
0x40057dc	            0x7506	                           jne 0x40057e4	      4842	gui.c	FUNCTION_78
0x40057de	        0x4883c410	                           add rsp, 0x10	      4842	gui.c	FUNCTION_78
0x40057e2	              0x5b	                                 pop rbx	      4842	gui.c	FUNCTION_78
0x40057e3	              0xc3	                                     ret	      4842	gui.c	FUNCTION_78
0x40057e4	      0xe800000000	                          call 0x40057e9	      4842	gui.c	FUNCTION_78
gui_find_longest_lnum	IF,3:SWITCH,0:functions,0:CALL,4:WHILE,0:ELSE,2:FOR,1:DO,0	65
0x40000a0	    0x488b3d000000	            mov rdi, qword [0x040000a7] 	      4569	gui.c	FUNCTION_69	IF_1	CALL_1
0x40000a7	            0x4154	                                push r12	      4563	gui.c	FUNCTION_69
0x40000a9	      0xbe68000000	                           mov esi, 0x68	      4569	gui.c	FUNCTION_69	IF_1	CALL_1
0x40000ae	              0x55	                                push rbp	      4563	gui.c	FUNCTION_69
0x40000af	              0x53	                                push rbx	      4563	gui.c	FUNCTION_69
0x40000b0	      0xe800000000	                          call 0x40000b5	      4569	gui.c	FUNCTION_69	IF_1	CALL_1
0x40000b5	          0x4885c0	                           test rax, rax	      4569	gui.c	FUNCTION_69	IF_1	CALL_1
0x40000b8	    0x488b05000000	            mov rax, qword [0x040000bf] 	      4570	gui.c	FUNCTION_69	IF_1
0x40000bf	            0x740f	                            je 0x40000d0	      4569	gui.c	FUNCTION_69	IF_1	CALL_1
0x40000c1	        0x488b5838	            mov rbx, qword [rax + 0x38] 	      4569	gui.c	FUNCTION_69	IF_1	CALL_1
0x40000c5	          0x4889d8	                            mov rax, rbx	      4600	gui.c	FUNCTION_69	ELSE_2
0x40000c8	              0x5b	                                 pop rbx	      4600	gui.c	FUNCTION_69	ELSE_2
0x40000c9	              0x5d	                                 pop rbp	      4600	gui.c	FUNCTION_69	ELSE_2
0x40000ca	            0x415c	                                 pop r12	      4600	gui.c	FUNCTION_69	ELSE_2
0x40000cc	              0xc3	                                     ret	      4600	gui.c	FUNCTION_69	ELSE_2
0x40000cd	           0xf1f00	                         nop dword [rax]	      4600	gui.c	FUNCTION_69	ELSE_2
0x40000d0	        0x488b6878	            mov rbp, qword [rax + 0x78] 	      4570	gui.c	FUNCTION_69	IF_1
0x40000d4	        0x488b5838	            mov rbx, qword [rax + 0x38] 	      4570	gui.c	FUNCTION_69	IF_1
0x40000d8	          0x4839dd	                            cmp rbp, rbx	      4570	gui.c	FUNCTION_69	IF_1
0x40000db	            0x7fe8	                            jg 0x40000c5	      4570	gui.c	FUNCTION_69	IF_1
0x40000dd	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      4571	gui.c	FUNCTION_69	IF_1
0x40000e4	          0x4839c3	                            cmp rbx, rax	      4571	gui.c	FUNCTION_69	IF_1
0x40000e7	            0x7ddc	                           jge 0x40000c5	      4571	gui.c	FUNCTION_69	IF_1
0x40000e9	    0x488b15000000	            mov rdx, qword [0x040000f0] 	      4572	gui.c	FUNCTION_69	IF_1
0x40000f0	          0x488b12	                    mov rdx, qword [rdx]	      4572	gui.c	FUNCTION_69	IF_1
0x40000f3	        0x4883c201	                              add rdx, 1	      4572	gui.c	FUNCTION_69	IF_1
0x40000f7	          0x4839d0	                            cmp rax, rdx	      4572	gui.c	FUNCTION_69	IF_1
0x40000fa	            0x7fc9	                            jg 0x40000c5	      4572	gui.c	FUNCTION_69	IF_1
0x40000fc	          0x4839c5	                            cmp rbp, rax	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x40000ff	            0x7d67	                           jge 0x4000168	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x4000101	          0x4531e4	                          xor r12d, r12d	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x4000104	            0x31db	                            xor ebx, ebx	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x4000106	            0xeb22	                           jmp 0x400012a	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x4000108	     0xf1f84000000	                   nop dword [rax + rax]	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x4000110	          0x4c63e0	                         movsxd r12, eax	      4586	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x4000113	    0x488b05000000	            mov rax, qword [0x0400011a] 	      4586	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x400011a	          0x4889eb	                            mov rbx, rbp	      4586	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x400011d	        0x4883c501	                              add rbp, 1	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x4000121	    0x4839a8e80000	            cmp qword [rax + 0xe8], rbp 	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x4000128	            0x7e9b	                           jle 0x40000c5	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x400012a	          0x4889ef	                            mov rdi, rbp	      4583	gui.c	FUNCTION_69	IF_1	FOR_1	CALL_2
0x400012d	      0xe80effffff	                call sym.scroll_line_len	      4583	gui.c	FUNCTION_69	IF_1	FOR_1	CALL_2
0x4000132	          0x4439e0	                           cmp eax, r12d	      4584	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x4000135	            0x7fd9	                            jg 0x4000110	      4584	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x4000137	    0x488b05000000	            mov rax, qword [0x0400013e] 	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x400013e	            0x75dd	                           jne 0x400011d	      4589	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3
0x4000140	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4000144	            0x89ea	                            mov edx, ebp	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4000146	            0x29f2	                            sub edx, esi	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4000148	            0x89d1	                            mov ecx, edx	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x400014a	          0xc1f91f	                           sar ecx, 0x1f	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x400014d	            0x31ca	                            xor edx, ecx	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x400014f	            0x29ca	                            sub edx, ecx	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4000151	            0x89d1	                            mov ecx, edx	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4000153	            0x89da	                            mov edx, ebx	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4000155	            0x29f2	                            sub edx, esi	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4000157	            0x89d6	                            mov esi, edx	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4000159	          0xc1fe1f	                           sar esi, 0x1f	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x400015c	            0x31f2	                            xor edx, esi	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x400015e	            0x29f2	                            sub edx, esi	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4000160	            0x39d1	                            cmp ecx, edx	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4000162	        0x480f4cdd	                          cmovl rbx, rbp	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4000166	            0xebb5	                           jmp 0x400011d	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4000168	            0x31db	                            xor ebx, ebx	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x400016a	      0xe956ffffff	                           jmp 0x40000c5	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
gui_outstr_nowrap	IF,54:SWITCH,0:functions,0:CALL,28:WHILE,0:ELSE,20:FOR,1:DO,0	257
0x4000ee0	            0x4157	                                push r15	      2234	gui.c	FUNCTION_39
0x4000ee2	            0x4156	                                push r14	      2234	gui.c	FUNCTION_39
0x4000ee4	          0x4189f7	                           mov r15d, esi	      2234	gui.c	FUNCTION_39
0x4000ee7	            0x4155	                                push r13	      2234	gui.c	FUNCTION_39
0x4000ee9	            0x4154	                                push r12	      2234	gui.c	FUNCTION_39
0x4000eeb	          0x4589ce	                           mov r14d, r9d	      2234	gui.c	FUNCTION_39
0x4000eee	              0x55	                                push rbp	      2234	gui.c	FUNCTION_39
0x4000eef	              0x53	                                push rbx	      2234	gui.c	FUNCTION_39
0x4000ef0	          0x4889fd	                            mov rbp, rdi	      2234	gui.c	FUNCTION_39
0x4000ef3	            0x89d3	                            mov ebx, edx	      2234	gui.c	FUNCTION_39
0x4000ef5	        0x4883ec38	                           sub rsp, 0x38	      2234	gui.c	FUNCTION_39
0x4000ef9	            0x85f6	                           test esi, esi	      2259	gui.c	FUNCTION_39	IF_1
0x4000efb	     0xf88ff010000	                            js 0x4001100	      2259	gui.c	FUNCTION_39	IF_1
0x4000f01	          0x4585ff	                         test r15d, r15d	      2261	gui.c	FUNCTION_39	IF_2
0x4000f04	     0xf84ad010000	                            je 0x40010b7	      2261	gui.c	FUNCTION_39	IF_2
0x4000f0a	    0x8b0500000000	            mov eax, dword [0x04000f10] 	      2251	gui.c	FUNCTION_39
0x4000f10	          0x890424	                    mov dword [rsp], eax	      2251	gui.c	FUNCTION_39
0x4000f13	         0xfb64500	                   movzx eax, byte [rbp]	      2265	gui.c	FUNCTION_39	IF_3
0x4000f17	          0x8d50ff	                      lea edx, [rax - 1]	      2265	gui.c	FUNCTION_39	IF_3
0x4000f1a	          0x80fa01	                               cmp dl, 1	      2265	gui.c	FUNCTION_39	IF_3
0x4000f1d	     0xf8645020000	                           jbe 0x4001168	      2265	gui.c	FUNCTION_39	IF_3
0x4000f23	    0x8b3d00000000	            mov edi, dword [0x04000f29] 	      2285	gui.c	FUNCTION_39	ELSE_1	IF_6
0x4000f29	    0x81ffff000000	                           cmp edi, 0xff	      2285	gui.c	FUNCTION_39	ELSE_1	IF_6
0x4000f2f	     0xf8fab020000	                            jg 0x40011e0	      2285	gui.c	FUNCTION_39	ELSE_1	IF_6
0x4000f35	            0x89f8	                            mov eax, edi	      2285	gui.c	FUNCTION_39	ELSE_1	IF_6
0x4000f37	            0x89fe	                            mov esi, edi	      2285	gui.c	FUNCTION_39	ELSE_1	IF_6
0x4000f39	          0x4c63e7	                         movsxd r12, edi	      2294	gui.c	FUNCTION_39	ELSE_3
0x4000f3c	          0x83e022	                           and eax, 0x22	      2294	gui.c	FUNCTION_39	ELSE_3
0x4000f3f	          0x83e621	                           and esi, 0x21	      2294	gui.c	FUNCTION_39	ELSE_3
0x4000f42	    0xc74424080000	                  mov dword [rsp + 8], 0	      2255	gui.c	FUNCTION_39
0x4000f4a	      0x4889442418	             mov qword [rsp + 0x18], rax	      2255	gui.c	FUNCTION_39
0x4000f4f	    0xc74424100000	               mov dword [rsp + 0x10], 0	      2253	gui.c	FUNCTION_39
0x4000f57	          0xf6c304	                              test bl, 4	      2364	gui.c	FUNCTION_39	IF_20
0x4000f5a	    0x488b15000000	            mov rdx, qword [0x04000f61] 	      2363	gui.c	FUNCTION_39
0x4000f61	     0xf8411030000	                            je 0x4001278	      2364	gui.c	FUNCTION_39	IF_20
0x4000f67	    0x8b0500000000	            mov eax, dword [0x04000f6d] 	      2364	gui.c	FUNCTION_39	IF_20
0x4000f6d	            0x85c0	                           test eax, eax	      2364	gui.c	FUNCTION_39	IF_20
0x4000f6f	     0xf8403030000	                            je 0x4001278	      2364	gui.c	FUNCTION_39	IF_20
0x4000f75	          0x4889c8	                            mov rax, rcx	      2369	gui.c	FUNCTION_39	IF_20
0x4000f78	    0x41bd20000000	                          mov r13d, 0x20	      2366	gui.c	FUNCTION_39	IF_20
0x4000f7e	          0x4885f6	                           test rsi, rsi	      2389	gui.c	FUNCTION_39	IF_25
0x4000f81	     0xf8449010000	                            je 0x40010d0	      2389	gui.c	FUNCTION_39	IF_25
0x4000f87	          0x4c89c7	                             mov rdi, r8	      2394	gui.c	FUNCTION_39	IF_25	CALL_6
0x4000f8a	      0x4889442420	             mov qword [rsp + 0x20], rax	      2394	gui.c	FUNCTION_39	IF_25	CALL_6
0x4000f8f	      0x48894c2428	             mov qword [rsp + 0x28], rcx	      2394	gui.c	FUNCTION_39	IF_25	CALL_6
0x4000f94	      0xe800000000	                          call 0x4000f99	      2394	gui.c	FUNCTION_39	IF_25	CALL_6
0x4000f99	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      2395	gui.c	FUNCTION_39	IF_25	CALL_7
0x4000f9e	          0x4889cf	                            mov rdi, rcx	      2395	gui.c	FUNCTION_39	IF_25	CALL_7
0x4000fa1	      0xe800000000	                          call 0x4000fa6	      2395	gui.c	FUNCTION_39	IF_25	CALL_7
0x4000fa6	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2395	gui.c	FUNCTION_39	IF_25	CALL_7
0x4000fab	          0x4889c7	                            mov rdi, rax	      2407	gui.c	FUNCTION_39	CALL_11
0x4000fae	      0xe800000000	                          call 0x4000fb3	      2407	gui.c	FUNCTION_39	CALL_11
0x4000fb3	            0x89d8	                            mov eax, ebx	      2410	gui.c	FUNCTION_39	IF_26
0x4000fb5	          0x83e010	                           and eax, 0x10	      2410	gui.c	FUNCTION_39	IF_26
0x4000fb8	        0x89442420	             mov dword [rsp + 0x20], eax	      2410	gui.c	FUNCTION_39	IF_26
0x4000fbc	     0xf8406020000	                            je 0x40011c8	      2410	gui.c	FUNCTION_39	IF_26
0x4000fc2	          0x4489e8	                           mov eax, r13d	      2416	gui.c	FUNCTION_39	IF_27
0x4000fc5	          0x83c802	                               or eax, 2	      2416	gui.c	FUNCTION_39	IF_27
0x4000fc8	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      2416	gui.c	FUNCTION_39	IF_27
0x4000fce	        0x440f45e8	                        cmovne r13d, eax	      2416	gui.c	FUNCTION_39	IF_27
0x4000fd2	          0x4585f6	                         test r14d, r14d	      2423	gui.c	FUNCTION_39	IF_28
0x4000fd5	          0x4489e8	                           mov eax, r13d	      2423	gui.c	FUNCTION_39	IF_28
0x4000fd8	            0x7416	                            je 0x4000ff0	      2423	gui.c	FUNCTION_39	IF_28
0x4000fda	          0x83e002	                              and eax, 2	      2423	gui.c	FUNCTION_39	IF_28
0x4000fdd	     0xf85cd010000	                           jne 0x40011b0	      2423	gui.c	FUNCTION_39	IF_28
0x4000fe3	        0x41f6c404	                            test r12b, 4	      2423	gui.c	FUNCTION_39	IF_28
0x4000fe7	            0x7412	                            je 0x4000ffb	      2423	gui.c	FUNCTION_39	IF_28
0x4000fe9	      0xe9ce000000	                           jmp 0x40010bc	      2423	gui.c	FUNCTION_39	IF_28
0x4000fee	            0x6690	                                     nop	      2423	gui.c	FUNCTION_39	IF_28
0x4000ff0	          0x83c810	                            or eax, 0x10	      2430	gui.c	FUNCTION_39	IF_29
0x4000ff3	        0x41f6c404	                            test r12b, 4	      2430	gui.c	FUNCTION_39	IF_29
0x4000ff7	        0x440f45e8	                        cmovne r13d, eax	      2430	gui.c	FUNCTION_39	IF_29
0x4000ffb	          0x4489e8	                           mov eax, r13d	      2434	gui.c	FUNCTION_39	IF_30
0x4000ffe	        0x448b3424	                   mov r14d, dword [rsp]	      2458	gui.c	FUNCTION_39	CALL_13
0x4001002	    0x8b3d00000000	            mov edi, dword [0x04001008] 	      2458	gui.c	FUNCTION_39	CALL_13
0x4001008	          0x83c804	                               or eax, 4	      2434	gui.c	FUNCTION_39	IF_30
0x400100b	        0x41f6c408	                            test r12b, 8	      2434	gui.c	FUNCTION_39	IF_30
0x400100f	          0x4489f9	                           mov ecx, r15d	      2458	gui.c	FUNCTION_39	CALL_13
0x4001012	        0x440f45e8	                        cmovne r13d, eax	      2434	gui.c	FUNCTION_39	IF_30
0x4001016	          0x4889ea	                            mov rdx, rbp	      2458	gui.c	FUNCTION_39	CALL_13
0x4001019	          0x4489e8	                           mov eax, r13d	      2443	gui.c	FUNCTION_39	IF_32
0x400101c	          0x4489f6	                           mov esi, r14d	      2458	gui.c	FUNCTION_39	CALL_13
0x400101f	          0x83c808	                               or eax, 8	      2443	gui.c	FUNCTION_39	IF_32
0x4001022	        0x41f6c410	                         test r12b, 0x10	      2443	gui.c	FUNCTION_39	IF_32
0x4001026	        0x440f45e8	                        cmovne r13d, eax	      2443	gui.c	FUNCTION_39	IF_32
0x400102a	          0x4489e8	                           mov eax, r13d	      2447	gui.c	FUNCTION_39	IF_33
0x400102d	          0x83c840	                            or eax, 0x40	      2447	gui.c	FUNCTION_39	IF_33
0x4001030	    0x4181e4800000	                          and r12d, 0x80	      2447	gui.c	FUNCTION_39	IF_33
0x4001037	        0x440f45e8	                        cmovne r13d, eax	      2447	gui.c	FUNCTION_39	IF_33
0x400103b	          0x4589e8	                           mov r8d, r13d	      2451	gui.c	FUNCTION_39	IF_34
0x400103e	        0x4183c801	                               or r8d, 1	      2451	gui.c	FUNCTION_39	IF_34
0x4001042	          0xf6c308	                              test bl, 8	      2451	gui.c	FUNCTION_39	IF_34
0x4001045	        0x450f44c5	                         cmove r8d, r13d	      2458	gui.c	FUNCTION_39	CALL_13
0x4001049	      0xe800000000	                          call 0x400104e	      2458	gui.c	FUNCTION_39	CALL_13
0x400104e	          0x83e30c	                            and ebx, 0xc	      2593	gui.c	FUNCTION_39	IF_49
0x4001051	     0xf85c9000000	                           jne 0x4001120	      2593	gui.c	FUNCTION_39	IF_49
0x4001057	        0x8b7c2420	            mov edi, dword [rsp + 0x20] 	      2597	gui.c	FUNCTION_39	IF_50
0x400105b	          0x4489f3	                           mov ebx, r14d	      2594	gui.c	FUNCTION_39	IF_49
0x400105e	             0x1c3	                            add ebx, eax	      2594	gui.c	FUNCTION_39	IF_49
0x4001060	    0x891d00000000	            mov dword [0x04001066], ebx 	      2594	gui.c	FUNCTION_39	IF_49
0x4001066	            0x85ff	                           test edi, edi	      2597	gui.c	FUNCTION_39	IF_50
0x4001068	     0xf8545020000	                           jne 0x40012b3	      2597	gui.c	FUNCTION_39	IF_50
0x400106e	    0x8b0500000000	            mov eax, dword [0x04001074] 	      2603	gui.c	FUNCTION_39	IF_51	IF_52
0x4001074	    0x390500000000	            cmp dword [0x0400107a], eax 	      2603	gui.c	FUNCTION_39	IF_51	IF_52
0x400107a	            0x751c	                           jne 0x4001098	      2603	gui.c	FUNCTION_39	IF_51	IF_52
0x400107c	    0x8b0500000000	            mov eax, dword [0x04001082] 	      2604	gui.c	FUNCTION_39	IF_51	IF_52
0x4001082	          0x3b0424	                    cmp eax, dword [rsp]	      2604	gui.c	FUNCTION_39	IF_51	IF_52
0x4001085	            0x7c11	                            jl 0x4001098	      2604	gui.c	FUNCTION_39	IF_51	IF_52
0x4001087	            0x39d8	                            cmp eax, ebx	      2605	gui.c	FUNCTION_39	IF_51	IF_52
0x4001089	            0x7d0d	                           jge 0x4001098	      2605	gui.c	FUNCTION_39	IF_51	IF_52
0x400108b	    0xc60500000000	                mov byte [0x04001092], 0	      2606	gui.c	FUNCTION_39	IF_51	IF_52
0x4001092	    0x660f1f440000	                    nop word [rax + rax]	      2606	gui.c	FUNCTION_39	IF_51	IF_52
0x4001098	        0x8b742410	            mov esi, dword [rsp + 0x10] 	      2610	gui.c	FUNCTION_39	IF_53
0x400109c	            0x85f6	                           test esi, esi	      2610	gui.c	FUNCTION_39	IF_53
0x400109e	     0xf85a4000000	                           jne 0x4001148	      2610	gui.c	FUNCTION_39	IF_53
0x40010a4	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      2615	gui.c	FUNCTION_39	IF_54
0x40010a8	            0x85c9	                           test ecx, ecx	      2615	gui.c	FUNCTION_39	IF_54
0x40010aa	            0x740b	                            je 0x40010b7	      2615	gui.c	FUNCTION_39	IF_54
0x40010ac	    0x8b3d00000000	            mov edi, dword [0x040010b2] 	      2616	gui.c	FUNCTION_39	CALL_28
0x40010b2	      0xe800000000	                          call 0x40010b7	      2616	gui.c	FUNCTION_39	CALL_28
0x40010b7	      0xb801000000	                              mov eax, 1	      2620	gui.c	FUNCTION_39
0x40010bc	        0x4883c438	                           add rsp, 0x38	      2621	gui.c	FUNCTION_39
0x40010c0	              0x5b	                                 pop rbx	      2621	gui.c	FUNCTION_39
0x40010c1	              0x5d	                                 pop rbp	      2621	gui.c	FUNCTION_39
0x40010c2	            0x415c	                                 pop r12	      2621	gui.c	FUNCTION_39
0x40010c4	            0x415d	                                 pop r13	      2621	gui.c	FUNCTION_39
0x40010c6	            0x415e	                                 pop r14	      2621	gui.c	FUNCTION_39
0x40010c8	            0x415f	                                 pop r15	      2621	gui.c	FUNCTION_39
0x40010ca	              0xc3	                                     ret	      2621	gui.c	FUNCTION_39
0x40010cb	       0xf1f440000	                   nop dword [rax + rax]	      2621	gui.c	FUNCTION_39
0x40010d0	          0x4889cf	                            mov rdi, rcx	      2403	gui.c	FUNCTION_39	ELSE_17	CALL_9
0x40010d3	      0x4889442420	             mov qword [rsp + 0x20], rax	      2403	gui.c	FUNCTION_39	ELSE_17	CALL_9
0x40010d8	      0x4c89442428	              mov qword [rsp + 0x28], r8	      2403	gui.c	FUNCTION_39	ELSE_17	CALL_9
0x40010dd	      0xe800000000	                          call 0x40010e2	      2403	gui.c	FUNCTION_39	ELSE_17	CALL_9
0x40010e2	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	      2404	gui.c	FUNCTION_39	ELSE_17	CALL_10
0x40010e7	          0x4c89c7	                             mov rdi, r8	      2404	gui.c	FUNCTION_39	ELSE_17	CALL_10
0x40010ea	      0xe800000000	                          call 0x40010ef	      2404	gui.c	FUNCTION_39	ELSE_17	CALL_10
0x40010ef	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2404	gui.c	FUNCTION_39	ELSE_17	CALL_10
0x40010f4	      0xe9b2feffff	                           jmp 0x4000fab	      2404	gui.c	FUNCTION_39	ELSE_17	CALL_10
0x40010f9	     0xf1f80000000	                         nop dword [rax]	      2404	gui.c	FUNCTION_39	ELSE_17	CALL_10
0x4001100	      0x4c89442408	                 mov qword [rsp + 8], r8	      2404	gui.c	FUNCTION_39	ELSE_17	CALL_10
0x4001105	        0x48890c24	                    mov qword [rsp], rcx	      2404	gui.c	FUNCTION_39	ELSE_17	CALL_10
0x4001109	      0xe800000000	                          call 0x400110e	      2260	gui.c	FUNCTION_39	CALL_1
0x400110e	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      2260	gui.c	FUNCTION_39	CALL_1
0x4001113	          0x4189c7	                           mov r15d, eax	      2260	gui.c	FUNCTION_39	CALL_1
0x4001116	        0x488b0c24	                    mov rcx, qword [rsp]	      2260	gui.c	FUNCTION_39	CALL_1
0x400111a	      0xe9e2fdffff	                           jmp 0x4000f01	      2260	gui.c	FUNCTION_39	CALL_1
0x400111f	              0x90	                                     nop	      2260	gui.c	FUNCTION_39	CALL_1
0x4001120	        0x8b542420	            mov edx, dword [rsp + 0x20] 	      2597	gui.c	FUNCTION_39	IF_50
0x4001124	            0x85d2	                           test edx, edx	      2597	gui.c	FUNCTION_39	IF_50
0x4001126	     0xf846cffffff	                            je 0x4001098	      2597	gui.c	FUNCTION_39	IF_50
0x400112c	          0x8b3424	                    mov esi, dword [rsp]	      2598	gui.c	FUNCTION_39	CALL_26
0x400112f	    0x8b3d00000000	            mov edi, dword [0x04001135] 	      2598	gui.c	FUNCTION_39	CALL_26
0x4001135	            0x89c2	                            mov edx, eax	      2598	gui.c	FUNCTION_39	CALL_26
0x4001137	      0xe800000000	                          call 0x400113c	      2598	gui.c	FUNCTION_39	CALL_26
0x400113c	        0x8b742410	            mov esi, dword [rsp + 0x10] 	      2610	gui.c	FUNCTION_39	IF_53
0x4001140	            0x85f6	                           test esi, esi	      2610	gui.c	FUNCTION_39	IF_53
0x4001142	     0xf845cffffff	                            je 0x40010a4	      2610	gui.c	FUNCTION_39	IF_53
0x4001148	    0x8b1500000000	            mov edx, dword [0x0400114e] 	      2612	gui.c	FUNCTION_39	CALL_27
0x400114e	          0x8b3424	                    mov esi, dword [rsp]	      2612	gui.c	FUNCTION_39	CALL_27
0x4001151	    0x8b3d00000000	            mov edi, dword [0x04001157] 	      2612	gui.c	FUNCTION_39	CALL_27
0x4001157	      0xe800000000	                          call 0x400115c	      2612	gui.c	FUNCTION_39	CALL_27
0x400115c	      0xe943ffffff	                           jmp 0x40010a4	      2612	gui.c	FUNCTION_39	CALL_27
0x4001161	     0xf1f80000000	                         nop dword [rax]	      2612	gui.c	FUNCTION_39	CALL_27
0x4001168	            0x3c02	                               cmp al, 2	      2255	gui.c	FUNCTION_39
0x400116a	           0xf94c0	                                 sete al	      2255	gui.c	FUNCTION_39
0x400116d	        0x4183ff01	                             cmp r15d, 1	      2277	gui.c	FUNCTION_39	IF_3	IF_5
0x4001171	           0xfb6c0	                           movzx eax, al	      2255	gui.c	FUNCTION_39
0x4001174	        0x89442408	                mov dword [rsp + 8], eax	      2255	gui.c	FUNCTION_39
0x4001178	            0x750d	                           jne 0x4001187	      2277	gui.c	FUNCTION_39	IF_3	IF_5
0x400117a	          0x8b0424	                    mov eax, dword [rsp]	      2277	gui.c	FUNCTION_39	IF_3	IF_5
0x400117d	            0x85c0	                           test eax, eax	      2277	gui.c	FUNCTION_39	IF_3	IF_5
0x400117f	            0x7e06	                           jle 0x4001187	      2277	gui.c	FUNCTION_39	IF_3	IF_5
0x4001181	          0x83e801	                              sub eax, 1	      2278	gui.c	FUNCTION_39	IF_3	IF_5
0x4001184	          0x890424	                    mov dword [rsp], eax	      2278	gui.c	FUNCTION_39	IF_3	IF_5
0x4001187	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2278	gui.c	FUNCTION_39	IF_3	IF_5
0x4001190	            0x31f6	                            xor esi, esi	      2278	gui.c	FUNCTION_39	IF_3	IF_5
0x4001192	    0xc74424100100	               mov dword [rsp + 0x10], 1	      2280	gui.c	FUNCTION_39	IF_3
0x400119a	          0x4531e4	                          xor r12d, r12d	      2281	gui.c	FUNCTION_39	IF_3
0x400119d	    0x41bf02000000	                             mov r15d, 2	      2279	gui.c	FUNCTION_39	IF_3
0x40011a3	      0xbd00000000	                              mov ebp, 0	      2276	gui.c	FUNCTION_39	IF_3
0x40011a8	      0xe9aafdffff	                           jmp 0x4000f57	      2276	gui.c	FUNCTION_39	IF_3
0x40011ad	           0xf1f00	                         nop dword [rax]	      2276	gui.c	FUNCTION_39	IF_3
0x40011b0	        0x4883c438	                           add rsp, 0x38	      2621	gui.c	FUNCTION_39
0x40011b4	            0x31c0	                            xor eax, eax	      2424	gui.c	FUNCTION_39	IF_28
0x40011b6	              0x5b	                                 pop rbx	      2621	gui.c	FUNCTION_39
0x40011b7	              0x5d	                                 pop rbp	      2621	gui.c	FUNCTION_39
0x40011b8	            0x415c	                                 pop r12	      2621	gui.c	FUNCTION_39
0x40011ba	            0x415d	                                 pop r13	      2621	gui.c	FUNCTION_39
0x40011bc	            0x415e	                                 pop r14	      2621	gui.c	FUNCTION_39
0x40011be	            0x415f	                                 pop r15	      2621	gui.c	FUNCTION_39
0x40011c0	              0xc3	                                     ret	      2621	gui.c	FUNCTION_39
0x40011c1	     0xf1f80000000	                         nop dword [rax]	      2621	gui.c	FUNCTION_39
0x40011c8	    0x8b3d00000000	            mov edi, dword [0x040011ce] 	      2411	gui.c	FUNCTION_39	CALL_12
0x40011ce	            0x89fe	                            mov esi, edi	      2411	gui.c	FUNCTION_39	CALL_12
0x40011d0	      0xe800000000	                          call 0x40011d5	      2411	gui.c	FUNCTION_39	CALL_12
0x40011d5	      0xe9e8fdffff	                           jmp 0x4000fc2	      2411	gui.c	FUNCTION_39	CALL_12
0x40011da	    0x660f1f440000	                    nop word [rax + rax]	      2411	gui.c	FUNCTION_39	CALL_12
0x40011e0	      0x4c89442410	              mov qword [rsp + 0x10], r8	      2411	gui.c	FUNCTION_39	CALL_12
0x40011e5	      0x48894c2408	                mov qword [rsp + 8], rcx	      2411	gui.c	FUNCTION_39	CALL_12
0x40011ea	      0xe800000000	                          call 0x40011ef	      2287	gui.c	FUNCTION_39	ELSE_1	IF_6	CALL_2
0x40011ef	          0x4885c0	                           test rax, rax	      2288	gui.c	FUNCTION_39	ELSE_1	IF_6	IF_7
0x40011f2	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2288	gui.c	FUNCTION_39	ELSE_1	IF_6	IF_7
0x40011f7	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      2288	gui.c	FUNCTION_39	ELSE_1	IF_6	IF_7
0x40011fc	     0xf848e000000	                            je 0x4001290	      2288	gui.c	FUNCTION_39	ELSE_1	IF_6	IF_7
0x4001202	        0x4c0fbf20	                   movsx r12, word [rax]	      2291	gui.c	FUNCTION_39	ELSE_1	IF_6	ELSE_2
0x4001206	    0x488b15000000	            mov rdx, qword [0x0400120d] 	      2363	gui.c	FUNCTION_39
0x400120d	          0x4c89e6	                            mov rsi, r12	      2363	gui.c	FUNCTION_39
0x4001210	          0x4c89e7	                            mov rdi, r12	      2291	gui.c	FUNCTION_39	ELSE_1	IF_6	ELSE_2
0x4001213	          0x83e621	                           and esi, 0x21	      2291	gui.c	FUNCTION_39	ELSE_1	IF_6	ELSE_2
0x4001216	          0xf6c304	                              test bl, 4	      2364	gui.c	FUNCTION_39	IF_20
0x4001219	     0xf85a9000000	                           jne 0x40012c8	      2364	gui.c	FUNCTION_39	IF_20
0x400121f	          0x4c89e1	                            mov rcx, r12	      2364	gui.c	FUNCTION_39	IF_20
0x4001222	          0x83e122	                           and ecx, 0x22	      2364	gui.c	FUNCTION_39	IF_20
0x4001225	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      2364	gui.c	FUNCTION_39	IF_20
0x400122a	        0x488b4808	                mov rcx, qword [rax + 8]	      2373	gui.c	FUNCTION_39	ELSE_15	IF_21
0x400122e	        0x4c8b4010	              mov r8, qword [rax + 0x10]	      2376	gui.c	FUNCTION_39	ELSE_15	IF_21
0x4001232	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2379	gui.c	FUNCTION_39	ELSE_15	IF_21
0x4001236	    0x4881f999d4ff	             cmp rcx, 0xffffffffffffd499	      2375	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_22
0x400123d	    0x480f440d0000	           cmove rcx, qword [0x04001245]	      2375	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_22
0x4001245	    0x4981f899d4ff	              cmp r8, 0xffffffffffffd499	      2375	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_22
0x400124c	        0x4c0f44c2	                           cmove r8, rdx	      2375	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_22
0x4001250	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      2380	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_24
0x4001256	            0x7418	                            je 0x4001270	      2380	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_24
0x4001258	    0xc74424080000	                  mov dword [rsp + 8], 0	      2380	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_24
0x4001260	    0xc74424100000	               mov dword [rsp + 0x10], 0	      2380	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_24
0x4001268	          0x4531ed	                          xor r13d, r13d	      2360	gui.c	FUNCTION_39
0x400126b	      0xe90efdffff	                           jmp 0x4000f7e	      2360	gui.c	FUNCTION_39
0x4001270	          0x4889c8	                            mov rax, rcx	      2381	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_24
0x4001273	            0xebe3	                           jmp 0x4001258	      2381	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_24
0x4001275	           0xf1f00	                         nop dword [rax]	      2381	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_24
0x4001278	    0x488b0d000000	            mov rcx, qword [0x0400127f] 	      2385	gui.c	FUNCTION_39	ELSE_16
0x400127f	          0x4989d0	                             mov r8, rdx	      2385	gui.c	FUNCTION_39	ELSE_16
0x4001282	          0x4531ed	                          xor r13d, r13d	      2360	gui.c	FUNCTION_39
0x4001285	          0x4889c8	                            mov rax, rcx	      2386	gui.c	FUNCTION_39	ELSE_16
0x4001288	      0xe9f1fcffff	                           jmp 0x4000f7e	      2386	gui.c	FUNCTION_39	ELSE_16
0x400128d	           0xf1f00	                         nop dword [rax]	      2386	gui.c	FUNCTION_39	ELSE_16
0x4001290	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2386	gui.c	FUNCTION_39	ELSE_16
0x4001299	            0x31f6	                            xor esi, esi	      2386	gui.c	FUNCTION_39	ELSE_16
0x400129b	    0xc74424080000	                  mov dword [rsp + 8], 0	      2255	gui.c	FUNCTION_39
0x40012a3	    0xc74424100000	               mov dword [rsp + 0x10], 0	      2253	gui.c	FUNCTION_39
0x40012ab	          0x4531e4	                          xor r12d, r12d	      2289	gui.c	FUNCTION_39	ELSE_1	IF_6	IF_7
0x40012ae	      0xe9a4fcffff	                           jmp 0x4000f57	      2289	gui.c	FUNCTION_39	ELSE_1	IF_6	IF_7
0x40012b3	          0x8b3424	                    mov esi, dword [rsp]	      2598	gui.c	FUNCTION_39	CALL_26
0x40012b6	    0x8b3d00000000	            mov edi, dword [0x040012bc] 	      2598	gui.c	FUNCTION_39	CALL_26
0x40012bc	            0x89c2	                            mov edx, eax	      2598	gui.c	FUNCTION_39	CALL_26
0x40012be	      0xe800000000	                          call 0x40012c3	      2598	gui.c	FUNCTION_39	CALL_26
0x40012c3	      0xe9a6fdffff	                           jmp 0x400106e	      2598	gui.c	FUNCTION_39	CALL_26
0x40012c8	          0x83e722	                           and edi, 0x22	      2598	gui.c	FUNCTION_39	CALL_26
0x40012cb	    0x833d00000000	               cmp dword [0x040012d2], 0	      2364	gui.c	FUNCTION_39	IF_20
0x40012d2	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      2364	gui.c	FUNCTION_39	IF_20
0x40012d7	     0xf844dffffff	                            je 0x400122a	      2364	gui.c	FUNCTION_39	IF_20
0x40012dd	          0x4889c8	                            mov rax, rcx	      2369	gui.c	FUNCTION_39	IF_20
0x40012e0	    0xc74424080000	                  mov dword [rsp + 8], 0	      2255	gui.c	FUNCTION_39
0x40012e8	    0xc74424100000	               mov dword [rsp + 0x10], 0	      2253	gui.c	FUNCTION_39
0x40012f0	    0x41bd20000000	                          mov r13d, 0x20	      2366	gui.c	FUNCTION_39	IF_20
0x40012f6	      0xe983fcffff	                           jmp 0x4000f7e	      2366	gui.c	FUNCTION_39	IF_20
gui_update_tabline	IF,4:SWITCH,0:functions,0:CALL,6:WHILE,0:ELSE,0:FOR,0:DO,0	41
0x4003d50	              0x53	                                push rbx	      3705	gui.c	FUNCTION_56
0x4003d51	        0x4883ec10	                           sub rsp, 0x10	      3705	gui.c	FUNCTION_56
0x4003d55	      0xe826ccffff	                call sym.gui_has_tabline	      3706	gui.c	FUNCTION_56	CALL_1
0x4003d5a	            0x89c3	                            mov ebx, eax	      3706	gui.c	FUNCTION_56	CALL_1
0x4003d5c	      0xe800000000	                          call 0x4003d61	      3707	gui.c	FUNCTION_56	CALL_2
0x4003d61	    0x8b0d00000000	            mov ecx, dword [0x04003d67] 	      3709	gui.c	FUNCTION_56	IF_1
0x4003d67	            0x85c9	                           test ecx, ecx	      3709	gui.c	FUNCTION_56	IF_1
0x4003d69	            0x750a	                           jne 0x4003d75	      3709	gui.c	FUNCTION_56	IF_1
0x4003d6b	    0x8b1500000000	            mov edx, dword [0x04003d71] 	      3709	gui.c	FUNCTION_56	IF_1
0x4003d71	            0x85d2	                           test edx, edx	      3709	gui.c	FUNCTION_56	IF_1
0x4003d73	            0x740b	                            je 0x4003d80	      3709	gui.c	FUNCTION_56	IF_1
0x4003d75	        0x4883c410	                           add rsp, 0x10	      3725	gui.c	FUNCTION_56
0x4003d79	              0x5b	                                 pop rbx	      3725	gui.c	FUNCTION_56
0x4003d7a	              0xc3	                                     ret	      3725	gui.c	FUNCTION_56
0x4003d7b	       0xf1f440000	                   nop dword [rax + rax]	      3725	gui.c	FUNCTION_56
0x4003d80	        0x8944240c	              mov dword [rsp + 0xc], eax	      3725	gui.c	FUNCTION_56
0x4003d84	      0xe800000000	                          call 0x4003d89	      3713	gui.c	FUNCTION_56	IF_1	CALL_3
0x4003d89	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      3715	gui.c	FUNCTION_56	IF_1	IF_2
0x4003d8d	            0x85db	                           test ebx, ebx	      3715	gui.c	FUNCTION_56	IF_1	IF_2
0x4003d8f	           0xf94c2	                                 sete dl	      3715	gui.c	FUNCTION_56	IF_1	IF_2
0x4003d92	            0x85c0	                           test eax, eax	      3715	gui.c	FUNCTION_56	IF_1	IF_2
0x4003d94	           0xf94c0	                                 sete al	      3715	gui.c	FUNCTION_56	IF_1	IF_2
0x4003d97	            0x38c2	                              cmp dl, al	      3715	gui.c	FUNCTION_56	IF_1	IF_2
0x4003d99	            0x7425	                            je 0x4003dc0	      3715	gui.c	FUNCTION_56	IF_1	IF_2
0x4003d9b	            0x89df	                            mov edi, ebx	      3716	gui.c	FUNCTION_56	IF_1	CALL_4
0x4003d9d	      0xe800000000	                          call 0x4003da2	      3716	gui.c	FUNCTION_56	IF_1	CALL_4
0x4003da2	            0x85db	                           test ebx, ebx	      3717	gui.c	FUNCTION_56	IF_1	IF_3
0x4003da4	            0x7405	                            je 0x4003dab	      3717	gui.c	FUNCTION_56	IF_1	IF_3
0x4003da6	      0xe800000000	                          call 0x4003dab	      3718	gui.c	FUNCTION_56	IF_1	CALL_5
0x4003dab	        0x4883c410	                           add rsp, 0x10	      3725	gui.c	FUNCTION_56
0x4003daf	            0x89de	                            mov esi, ebx	      3723	gui.c	FUNCTION_56	IF_1	CALL_6
0x4003db1	      0xba01000000	                              mov edx, 1	      3723	gui.c	FUNCTION_56	IF_1	CALL_6
0x4003db6	              0x5b	                                 pop rbx	      3725	gui.c	FUNCTION_56
0x4003db7	            0x31ff	                            xor edi, edi	      3723	gui.c	FUNCTION_56	IF_1	CALL_6
0x4003db9	      0xe9f2faffff	               jmp sym.gui_set_shellsize	      3723	gui.c	FUNCTION_56	IF_1	CALL_6
0x4003dbe	            0x6690	                                     nop	      3723	gui.c	FUNCTION_56	IF_1	CALL_6
0x4003dc0	            0x85db	                           test ebx, ebx	      3717	gui.c	FUNCTION_56	IF_1	IF_3
0x4003dc2	            0x74b1	                            je 0x4003d75	      3717	gui.c	FUNCTION_56	IF_1	IF_3
0x4003dc4	        0x4883c410	                           add rsp, 0x10	      3725	gui.c	FUNCTION_56
0x4003dc8	              0x5b	                                 pop rbx	      3725	gui.c	FUNCTION_56
0x4003dc9	      0xe900000000	                           jmp 0x4003dce	      3718	gui.c	FUNCTION_56	IF_1	CALL_5
gui_do_horiz_scroll	IF,5:SWITCH,0:functions,0:CALL,5:WHILE,0:ELSE,1:FOR,0:DO,0	50
0x4005180	    0x488b05000000	            mov rax, qword [0x04005187] 	      4698	gui.c	FUNCTION_71	IF_1
0x4005187	    0x8b9094020000	           mov edx, dword [rax + 0x294] 	      4698	gui.c	FUNCTION_71	IF_1
0x400518d	            0x85d2	                           test edx, edx	      4698	gui.c	FUNCTION_71	IF_1
0x400518f	            0x753f	                           jne 0x40051d0	      4698	gui.c	FUNCTION_71	IF_1
0x4005191	    0x39b894000000	            cmp dword [rax + 0x94], edi 	      4701	gui.c	FUNCTION_71	IF_2
0x4005197	            0x7437	                            je 0x40051d0	      4701	gui.c	FUNCTION_71	IF_2
0x4005199	              0x55	                                push rbp	      4696	gui.c	FUNCTION_71
0x400519a	              0x53	                                push rbx	      4696	gui.c	FUNCTION_71
0x400519b	          0x4889fb	                            mov rbx, rdi	      4696	gui.c	FUNCTION_71
0x400519e	            0x89f5	                            mov ebp, esi	      4696	gui.c	FUNCTION_71
0x40051a0	      0xbe68000000	                           mov esi, 0x68	      4708	gui.c	FUNCTION_71	IF_3	CALL_1
0x40051a5	        0x4883ec08	                              sub rsp, 8	      4696	gui.c	FUNCTION_71
0x40051a9	    0x89b894000000	             mov dword [rax + 0x94], edi	      4704	gui.c	FUNCTION_71
0x40051af	    0x488b3d000000	            mov rdi, qword [0x040051b6] 	      4708	gui.c	FUNCTION_71	IF_3	CALL_1
0x40051b6	      0xe800000000	                          call 0x40051bb	      4708	gui.c	FUNCTION_71	IF_3	CALL_1
0x40051bb	          0x4885c0	                           test rax, rax	      4708	gui.c	FUNCTION_71	IF_3	CALL_1
0x40051be	            0x7418	                            je 0x40051d8	      4708	gui.c	FUNCTION_71	IF_3	CALL_1
0x40051c0	        0x4883c408	                              add rsp, 8	      4727	gui.c	FUNCTION_71
0x40051c4	              0x5b	                                 pop rbx	      4727	gui.c	FUNCTION_71
0x40051c5	              0x5d	                                 pop rbp	      4727	gui.c	FUNCTION_71
0x40051c6	      0xe900000000	                           jmp 0x40051cb	      4726	gui.c	FUNCTION_71	CALL_5
0x40051cb	       0xf1f440000	                   nop dword [rax + rax]	      4726	gui.c	FUNCTION_71	CALL_5
0x40051d0	            0x31c0	                            xor eax, eax	      4727	gui.c	FUNCTION_71
0x40051d2	              0xc3	                                     ret	      4727	gui.c	FUNCTION_71
0x40051d3	       0xf1f440000	                   nop dword [rax + rax]	      4727	gui.c	FUNCTION_71
0x40051d8	      0xe800000000	                          call 0x40051dd	      4709	gui.c	FUNCTION_71	IF_3	CALL_2
0x40051dd	            0x85c0	                           test eax, eax	      4709	gui.c	FUNCTION_71	IF_3	CALL_2
0x40051df	            0x75df	                           jne 0x40051c0	      4709	gui.c	FUNCTION_71	IF_3	CALL_2
0x40051e1	    0x488b05000000	            mov rax, qword [0x040051e8] 	      4710	gui.c	FUNCTION_71	IF_3	CALL_3
0x40051e8	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      4710	gui.c	FUNCTION_71	IF_3	CALL_3
0x40051ec	      0xe84faeffff	                call sym.scroll_line_len	      4710	gui.c	FUNCTION_71	IF_3	CALL_3
0x40051f1	            0x39c3	                            cmp ebx, eax	      4710	gui.c	FUNCTION_71	IF_3	CALL_3
0x40051f3	            0x7ecb	                           jle 0x40051c0	      4710	gui.c	FUNCTION_71	IF_3	CALL_3
0x40051f5	            0x85ed	                           test ebp, ebp	      4712	gui.c	FUNCTION_71	IF_3	IF_4
0x40051f7	            0x752a	                           jne 0x4005223	      4712	gui.c	FUNCTION_71	IF_3	IF_4
0x40051f9	    0x488b05000000	            mov rax, qword [0x04005200] 	      4718	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x4005200	    0x488b15000000	            mov rdx, qword [0x04005207] 	      4718	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x4005207	        0x48395078	            cmp qword [rax + 0x78], rdx 	      4718	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x400520b	            0x7fb3	                            jg 0x40051c0	      4718	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x400520d	    0x483b90e80000	            cmp rdx, qword [rax + 0xe8] 	      4719	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x4005214	            0x7daa	                           jge 0x40051c0	      4719	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x4005216	        0x48895038	             mov qword [rax + 0x38], rdx	      4721	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x400521a	    0xc74040000000	               mov dword [rax + 0x40], 0	      4722	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x4005221	            0xeb9d	                           jmp 0x40051c0	      4722	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x4005223	    0x488b1d000000	            mov rbx, qword [0x0400522a] 	      4714	gui.c	FUNCTION_71	IF_3	IF_4	CALL_4
0x400522a	      0xe871aeffff	          call sym.gui_find_longest_lnum	      4714	gui.c	FUNCTION_71	IF_3	IF_4	CALL_4
0x400522f	        0x48894338	             mov qword [rbx + 0x38], rax	      4714	gui.c	FUNCTION_71	IF_3	IF_4	CALL_4
0x4005233	    0x488b05000000	            mov rax, qword [0x0400523a] 	      4715	gui.c	FUNCTION_71	IF_3	IF_4
0x400523a	    0xc74040000000	               mov dword [rax + 0x40], 0	      4715	gui.c	FUNCTION_71	IF_3	IF_4
0x4005241	      0xe97affffff	                           jmp 0x40051c0	      4715	gui.c	FUNCTION_71	IF_3	IF_4
gui_may_resize_shell	IF,1:SWITCH,0:functions,0:CALL,1:WHILE,0:ELSE,0:FOR,0:DO,0	7
0x4003890	    0x8b3500000000	            mov esi, dword [0x04003896] 	      1547	gui.c	FUNCTION_21	IF_1
0x4003896	            0x85f6	                           test esi, esi	      1547	gui.c	FUNCTION_21	IF_1
0x4003898	            0x7506	                           jne 0x40038a0	      1547	gui.c	FUNCTION_21	IF_1
0x400389a	            0xf3c3	                                     ret	      1547	gui.c	FUNCTION_21	IF_1
0x400389c	         0xf1f4000	                         nop dword [rax]	      1547	gui.c	FUNCTION_21	IF_1
0x40038a0	    0x8b3d00000000	            mov edi, dword [0x040038a6] 	      1550	gui.c	FUNCTION_21	CALL_1
0x40038a6	      0xe9f5fdffff	                jmp sym.gui_resize_shell	      1550	gui.c	FUNCTION_21	CALL_1
gui_find_scrollbar	IF,1:SWITCH,0:functions,1:CALL,0:WHILE,0:ELSE,0:FOR,0:DO,0	26
0x40031e0	    0x48393d000000	            cmp qword [0x040031e7], rdi 	      3932	gui.c	FUNCTION_62	IF_1
0x40031e7	            0x744f	                            je 0x4003238	      3932	gui.c	FUNCTION_62	IF_1
0x40031e9	    0x488b05000000	            mov rax, qword [0x040031f0] 	      3934	gui.c	FUNCTION_62
0x40031f0	          0x4885c0	                           test rax, rax	      3934	gui.c	FUNCTION_62
0x40031f3	            0x751d	                           jne 0x4003212	      3934	gui.c	FUNCTION_62
0x40031f5	            0xeb47	                           jmp 0x400323e	      3934	gui.c	FUNCTION_62
0x40031f7	    0x660f1f840000	                    nop word [rax + rax]	      3934	gui.c	FUNCTION_62
0x4003200	    0x483bb8e01800	          cmp rdi, qword [rax + 0x18e0] 	      3938	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x4003207	            0x741f	                            je 0x4003228	      3938	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x4003209	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3934	gui.c	FUNCTION_62
0x400320d	          0x4885c0	                           test rax, rax	      3934	gui.c	FUNCTION_62
0x4003210	            0x741e	                            je 0x4003230	      3934	gui.c	FUNCTION_62
0x4003212	    0x483bb8901800	          cmp rdi, qword [rax + 0x1890] 	      3936	gui.c	FUNCTION_62	FUNCTION_1	IF_1
0x4003219	            0x75e5	                           jne 0x4003200	      3936	gui.c	FUNCTION_62	FUNCTION_1	IF_1
0x400321b	    0x480590180000	                         add rax, 0x1890	      3937	gui.c	FUNCTION_62	FUNCTION_1	IF_1
0x4003221	              0xc3	                                     ret	      3937	gui.c	FUNCTION_62	FUNCTION_1	IF_1
0x4003222	    0x660f1f440000	                    nop word [rax + rax]	      3937	gui.c	FUNCTION_62	FUNCTION_1	IF_1
0x4003228	    0x4805e0180000	                         add rax, 0x18e0	      3939	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x400322e	              0xc3	                                     ret	      3939	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x400322f	              0x90	                                     nop	      3939	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x4003230	            0xf3c3	                                     ret	      3939	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x4003232	    0x660f1f440000	                    nop word [rax + rax]	      3939	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x4003238	      0xb800000000	                              mov eax, 0	      3933	gui.c	FUNCTION_62	IF_1
0x400323d	              0xc3	                                     ret	      3933	gui.c	FUNCTION_62	IF_1
0x400323e	            0x31c0	                            xor eax, eax	      3941	gui.c	FUNCTION_62
0x4003240	              0xc3	                                     ret	      3942	gui.c	FUNCTION_62
gui_can_update_cursor	IF,0:SWITCH,0:functions,0:CALL,0:WHILE,0:ELSE,0:FOR,0:DO,0	2
0x4000e90	    0xc70500000000	               mov dword [0x04000e9a], 1	      2005	gui.c	FUNCTION_32
0x4000e9a	              0xc3	                                     ret	      2005	gui.c	FUNCTION_32
gui_check_colors	IF,2:SWITCH,0:functions,0:CALL,2:WHILE,0:ELSE,0:FOR,0:DO,0	29
0x40056a0	        0x4883ec08	                              sub rsp, 8	      4734	gui.c	FUNCTION_72
0x40056a4	    0x488b05000000	            mov rax, qword [0x040056ab] 	      4735	gui.c	FUNCTION_72	IF_1
0x40056ab	    0x483905000000	            cmp qword [0x040056b2], rax 	      4735	gui.c	FUNCTION_72	IF_1
0x40056b2	            0x7414	                            je 0x40056c8	      4735	gui.c	FUNCTION_72	IF_1
0x40056b4	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      4735	gui.c	FUNCTION_72	IF_1
0x40056ba	            0x740c	                            je 0x40056c8	      4735	gui.c	FUNCTION_72	IF_1
0x40056bc	        0x4883c408	                              add rsp, 8	      4741	gui.c	FUNCTION_72
0x40056c0	              0xc3	                                     ret	      4741	gui.c	FUNCTION_72
0x40056c1	     0xf1f80000000	                         nop dword [rax]	      4741	gui.c	FUNCTION_72
0x40056c8	      0xbf00000000	                              mov edi, 0	      4753	gui.c	FUNCTION_74	CALL_1
0x40056cd	      0xe800000000	                          call 0x40056d2	      4753	gui.c	FUNCTION_74	CALL_1
0x40056d2	      0xbf00000000	                              mov edi, 0	      4754	gui.c	FUNCTION_74	CALL_3
0x40056d7	    0x488905000000	            mov qword [0x040056de], rax 	      4753	gui.c	FUNCTION_74	CALL_1
0x40056de	      0xe800000000	                          call 0x40056e3	      4754	gui.c	FUNCTION_74	CALL_3
0x40056e3	          0x4889c7	                            mov rdi, rax	      4754	gui.c	FUNCTION_74	CALL_3
0x40056e6	      0xe800000000	                          call 0x40056eb	      4754	gui.c	FUNCTION_74	CALL_3
0x40056eb	    0x488b05000000	            mov rax, qword [0x040056f2] 	      4738	gui.c	FUNCTION_72	IF_1	IF_2
0x40056f2	    0x483905000000	            cmp qword [0x040056f9], rax 	      4738	gui.c	FUNCTION_72	IF_1	IF_2
0x40056f9	            0x7408	                            je 0x4005703	      4738	gui.c	FUNCTION_72	IF_1	IF_2
0x40056fb	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      4738	gui.c	FUNCTION_72	IF_1	IF_2
0x4005701	            0x75b9	                           jne 0x40056bc	      4738	gui.c	FUNCTION_72	IF_1	IF_2
0x4005703	      0xbf00000000	                              mov edi, 0	      4746	gui.c	FUNCTION_73	CALL_1
0x4005708	      0xe800000000	                          call 0x400570d	      4746	gui.c	FUNCTION_73	CALL_1
0x400570d	      0xbf00000000	                              mov edi, 0	      4747	gui.c	FUNCTION_73	CALL_3
0x4005712	    0x488905000000	            mov qword [0x04005719], rax 	      4746	gui.c	FUNCTION_73	CALL_1
0x4005719	      0xe800000000	                          call 0x400571e	      4747	gui.c	FUNCTION_73	CALL_3
0x400571e	        0x4883c408	                              add rsp, 8	      4741	gui.c	FUNCTION_72
0x4005722	          0x4889c7	                            mov rdi, rax	      4747	gui.c	FUNCTION_73	CALL_3
0x4005725	      0xe900000000	                           jmp 0x400572a	      4747	gui.c	FUNCTION_73	CALL_3
gui_do_scroll	IF,12:SWITCH,0:functions,0:CALL,14:WHILE,0:ELSE,1:FOR,1:DO,0	125
0x4004f40	            0x4157	                                push r15	      4422	gui.c	FUNCTION_67
0x4004f42	            0x4156	                                push r14	      4422	gui.c	FUNCTION_67
0x4004f44	            0x4155	                                push r13	      4422	gui.c	FUNCTION_67
0x4004f46	            0x4154	                                push r12	      4422	gui.c	FUNCTION_67
0x4004f48	              0x55	                                push rbp	      4422	gui.c	FUNCTION_67
0x4004f49	              0x53	                                push rbx	      4422	gui.c	FUNCTION_67
0x4004f4a	        0x4883ec18	                           sub rsp, 0x18	      4422	gui.c	FUNCTION_67
0x4004f4e	    0x8b0d00000000	            mov ecx, dword [0x04004f54] 	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x4004f54	    0x4c8b3d000000	            mov r15, qword [0x04004f5b] 	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x4004f5b	            0x85c9	                           test ecx, ecx	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x4004f5d	            0x7e31	                           jle 0x4004f90	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x4004f5f	            0x31c0	                            xor eax, eax	      4433	gui.c	FUNCTION_67	FOR_1	IF_1
0x4004f61	            0xeb10	                           jmp 0x4004f73	      4433	gui.c	FUNCTION_67	FOR_1	IF_1
0x4004f63	       0xf1f440000	                   nop dword [rax + rax]	      4433	gui.c	FUNCTION_67	FOR_1	IF_1
0x4004f68	          0x83c001	                              add eax, 1	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x4004f6b	        0x4d8b7f20	            mov r15, qword [r15 + 0x20] 	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x4004f6f	            0x39c8	                            cmp eax, ecx	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x4004f71	            0x741d	                            je 0x4004f90	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x4004f73	          0x4d85ff	                           test r15, r15	      4433	gui.c	FUNCTION_67	FOR_1	IF_1
0x4004f76	            0x75f0	                           jne 0x4004f68	      4433	gui.c	FUNCTION_67	FOR_1	IF_1
0x4004f78	            0x31c0	                            xor eax, eax	      4437	gui.c	FUNCTION_67	IF_2
0x4004f7a	        0x4883c418	                           add rsp, 0x18	      4522	gui.c	FUNCTION_67
0x4004f7e	              0x5b	                                 pop rbx	      4522	gui.c	FUNCTION_67
0x4004f7f	              0x5d	                                 pop rbp	      4522	gui.c	FUNCTION_67
0x4004f80	            0x415c	                                 pop r12	      4522	gui.c	FUNCTION_67
0x4004f82	            0x415d	                                 pop r13	      4522	gui.c	FUNCTION_67
0x4004f84	            0x415e	                                 pop r14	      4522	gui.c	FUNCTION_67
0x4004f86	            0x415f	                                 pop r15	      4522	gui.c	FUNCTION_67
0x4004f88	              0xc3	                                     ret	      4522	gui.c	FUNCTION_67
0x4004f89	     0xf1f80000000	                         nop dword [rax]	      4522	gui.c	FUNCTION_67
0x4004f90	          0x4d85ff	                           test r15, r15	      4435	gui.c	FUNCTION_67	IF_2
0x4004f93	            0x74e3	                            je 0x4004f78	      4435	gui.c	FUNCTION_67	IF_2
0x4004f95	    0x488b05000000	            mov rax, qword [0x04004f9c] 	      4442	gui.c	FUNCTION_67
0x4004f9c	        0x498b5f78	            mov rbx, qword [r15 + 0x78] 	      4442	gui.c	FUNCTION_67
0x4004fa0	        0x488d7801	                      lea rdi, [rax + 1]	      4442	gui.c	FUNCTION_67
0x4004fa4	          0x4829df	                            sub rdi, rbx	      4443	gui.c	FUNCTION_67	IF_3
0x4004fa7	            0x74cf	                            je 0x4004f78	      4443	gui.c	FUNCTION_67	IF_3
0x4004fa9	        0x418b4740	            mov eax, dword [r15 + 0x40] 	      4451	gui.c	FUNCTION_67
0x4004fad	    0x488b2d000000	            mov rbp, qword [0x04004fb4] 	      4446	gui.c	FUNCTION_67
0x4004fb4	    0x458baf840000	           mov r13d, dword [r15 + 0x84] 	      4449	gui.c	FUNCTION_67
0x4004fbb	        0x4d8b6738	            mov r12, qword [r15 + 0x38] 	      4451	gui.c	FUNCTION_67
0x4004fbf	        0x458b7744	           mov r14d, dword [r15 + 0x44] 	      4451	gui.c	FUNCTION_67
0x4004fc3	    0x4c893d000000	            mov qword [0x04004fca], r15 	      4452	gui.c	FUNCTION_67
0x4004fca	        0x8944240c	              mov dword [rsp + 0xc], eax	      4451	gui.c	FUNCTION_67
0x4004fce	        0x498b4708	                mov rax, qword [r15 + 8]	      4453	gui.c	FUNCTION_67
0x4004fd2	    0x488905000000	            mov qword [0x04004fd9], rax 	      4453	gui.c	FUNCTION_67
0x4004fd9	     0xf8809010000	                            js 0x40050e8	      4454	gui.c	FUNCTION_67	IF_4
0x4004fdf	            0x31f6	                            xor esi, esi	      4457	gui.c	FUNCTION_67	CALL_3
0x4004fe1	    0x48833d000000	               cmp qword [0x04004fe9], 0	      4457	gui.c	FUNCTION_67	CALL_3
0x4004fe9	        0x400f94c6	                                sete sil	      4457	gui.c	FUNCTION_67	CALL_3
0x4004fed	      0xe800000000	                          call 0x4004ff2	      4457	gui.c	FUNCTION_67	CALL_3
0x4004ff2	    0x833d00000000	cmp dword [0x04004ff9], 0xffffffffffffffff	      4461	gui.c	FUNCTION_67	IF_5
0x4004ff9	     0xf840c010000	                            je 0x400510b	      4461	gui.c	FUNCTION_67	IF_5
0x4004fff	        0x493b5f78	            cmp rbx, qword [r15 + 0x78] 	      4464	gui.c	FUNCTION_67	IF_6
0x4005003	     0xf8417010000	                            je 0x4005120	      4464	gui.c	FUNCTION_67	IF_6
0x4005009	    0x48833d000000	               cmp qword [0x04005011], 0	      4470	gui.c	FUNCTION_67	IF_6	IF_7
0x4005011	     0xf8524010000	                           jne 0x400513b	      4470	gui.c	FUNCTION_67	IF_6	IF_7
0x4005017	        0x4d3b6738	            cmp r12, qword [r15 + 0x38] 	      4475	gui.c	FUNCTION_67	IF_6	IF_8
0x400501b	            0x7409	                            je 0x4005026	      4475	gui.c	FUNCTION_67	IF_6	IF_8
0x400501d	        0x418b7f48	            mov edi, dword [r15 + 0x48] 	      4476	gui.c	FUNCTION_67	IF_6	CALL_6
0x4005021	      0xe800000000	                          call 0x4005026	      4476	gui.c	FUNCTION_67	IF_6	CALL_6
0x4005026	        0x498b4778	            mov rax, qword [r15 + 0x78] 	      4477	gui.c	FUNCTION_67	IF_6
0x400502a	    0x498987500500	            mov qword [r15 + 0x550], rax	      4477	gui.c	FUNCTION_67	IF_6
0x4005031	      0xe800000000	                          call 0x4005036	      4481	gui.c	FUNCTION_67	CALL_7
0x4005036	        0x493b5f78	            cmp rbx, qword [r15 + 0x78] 	      4490	gui.c	FUNCTION_67	IF_9
0x400503a	        0x488b4508	                mov rax, qword [rbp + 8]	      4484	gui.c	FUNCTION_67
0x400503e	    0x48892d000000	            mov qword [0x04005045], rbp 	      4483	gui.c	FUNCTION_67
0x4005045	    0x488905000000	            mov qword [0x0400504c], rax 	      4484	gui.c	FUNCTION_67
0x400504c	            0x750f	                           jne 0x400505d	      4490	gui.c	FUNCTION_67	IF_9
0x400504e	    0x418b87280100	           mov eax, dword [r15 + 0x128] 	      4491	gui.c	FUNCTION_67	IF_9
0x4005055	            0x85c0	                           test eax, eax	      4491	gui.c	FUNCTION_67	IF_9
0x4005057	     0xf84f3000000	                            je 0x4005150	      4491	gui.c	FUNCTION_67	IF_9
0x400505d	      0xe800000000	                          call 0x4005062	      4500	gui.c	FUNCTION_67	IF_9	IF_10	CALL_8
0x4005062	            0x85c0	                           test eax, eax	      4500	gui.c	FUNCTION_67	IF_9	IF_10	CALL_8
0x4005064	      0xb90a000000	                            mov ecx, 0xa	      4497	gui.c	FUNCTION_67	IF_9
0x4005069	            0x7410	                            je 0x400507b	      4500	gui.c	FUNCTION_67	IF_9	IF_10	CALL_8
0x400506b	    0x41c787f80000	               mov dword [r15 + 0xf8], 0	      4503	gui.c	FUNCTION_67	IF_9	IF_10
0x4005076	      0xb928000000	                           mov ecx, 0x28	      4502	gui.c	FUNCTION_67	IF_9	IF_10
0x400507b	    0x413b8f280100	           cmp ecx, dword [r15 + 0x128] 	      4508	gui.c	FUNCTION_67	IF_9	IF_11
0x4005082	            0x7e07	                           jle 0x400508b	      4508	gui.c	FUNCTION_67	IF_9	IF_11
0x4005084	    0x41898f280100	            mov dword [r15 + 0x128], ecx	      4509	gui.c	FUNCTION_67	IF_9	IF_11
0x400508b	          0x4c89ff	                            mov rdi, r15	      4511	gui.c	FUNCTION_67	IF_9	CALL_10
0x400508e	    0x830500000000	               add dword [0x04005095], 1	      2016	gui.c	FUNCTION_33
0x4005095	      0xe800000000	                          call 0x400509a	      4511	gui.c	FUNCTION_67	IF_9	CALL_10
0x400509a	    0x832d00000000	               sub dword [0x040050a1], 1	      2025	gui.c	FUNCTION_34
0x40050a1	      0xe800000000	                          call 0x40050a6	      4517	gui.c	FUNCTION_67	IF_12	CALL_12
0x40050a6	            0x85c0	                           test eax, eax	      4517	gui.c	FUNCTION_67	IF_12	CALL_12
0x40050a8	     0xf85ba000000	                           jne 0x4005168	      4517	gui.c	FUNCTION_67	IF_12	CALL_12
0x40050ae	    0x4c393d000000	            cmp qword [0x040050b5], r15 	      4521	gui.c	FUNCTION_67	CALL_14
0x40050b5	     0xf85bdfeffff	                           jne 0x4004f78	      4521	gui.c	FUNCTION_67	CALL_14
0x40050bb	        0x4d3b6738	            cmp r12, qword [r15 + 0x38] 	      4521	gui.c	FUNCTION_67	CALL_14
0x40050bf	      0xb801000000	                              mov eax, 1	      4521	gui.c	FUNCTION_67	CALL_14
0x40050c4	     0xf85b0feffff	                           jne 0x4004f7a	      4521	gui.c	FUNCTION_67	CALL_14
0x40050ca	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      4521	gui.c	FUNCTION_67	CALL_14
0x40050ce	        0x49c1e620	                           shl r14, 0x20	      4521	gui.c	FUNCTION_67	CALL_14
0x40050d2	          0x4909c6	                             or r14, rax	      4521	gui.c	FUNCTION_67	CALL_14
0x40050d5	            0x31c0	                            xor eax, eax	      4437	gui.c	FUNCTION_67	IF_2
0x40050d7	        0x4d397740	            cmp qword [r15 + 0x40], r14 	      4437	gui.c	FUNCTION_67	IF_2
0x40050db	           0xf95c0	                                setne al	      4437	gui.c	FUNCTION_67	IF_2
0x40050de	      0xe997feffff	                           jmp 0x4004f7a	      4437	gui.c	FUNCTION_67	IF_2
0x40050e3	       0xf1f440000	                   nop dword [rax + rax]	      4437	gui.c	FUNCTION_67	IF_2
0x40050e8	            0x31f6	                            xor esi, esi	      4455	gui.c	FUNCTION_67	CALL_2
0x40050ea	    0x48833d000000	               cmp qword [0x040050f2], 0	      4455	gui.c	FUNCTION_67	CALL_2
0x40050f2	        0x400f94c6	                                sete sil	      4455	gui.c	FUNCTION_67	CALL_2
0x40050f6	          0x48f7df	                                 neg rdi	      4455	gui.c	FUNCTION_67	CALL_2
0x40050f9	      0xe800000000	                          call 0x40050fe	      4455	gui.c	FUNCTION_67	CALL_2
0x40050fe	    0x833d00000000	cmp dword [0x04005105], 0xffffffffffffffff	      4461	gui.c	FUNCTION_67	IF_5
0x4005105	     0xf85f4feffff	                           jne 0x4004fff	      4461	gui.c	FUNCTION_67	IF_5
0x400510b	        0x493b5f78	            cmp rbx, qword [r15 + 0x78] 	      4464	gui.c	FUNCTION_67	IF_6
0x400510f	    0x48c705000000	               mov qword [0x0400511a], 0	      4462	gui.c	FUNCTION_67	IF_5
0x400511a	     0xf85e9feffff	                           jne 0x4005009	      4464	gui.c	FUNCTION_67	IF_6
0x4005120	    0x453baf840000	           cmp r13d, dword [r15 + 0x84] 	      4466	gui.c	FUNCTION_67	IF_6
0x4005127	     0xf8404ffffff	                            je 0x4005031	      4466	gui.c	FUNCTION_67	IF_6
0x400512d	    0x48833d000000	               cmp qword [0x04005135], 0	      4470	gui.c	FUNCTION_67	IF_6	IF_7
0x4005135	     0xf84dcfeffff	                            je 0x4005017	      4470	gui.c	FUNCTION_67	IF_6	IF_7
0x400513b	      0xe800000000	                          call 0x4005140	      4472	gui.c	FUNCTION_67	IF_6	IF_7	CALL_4
0x4005140	      0xe800000000	                          call 0x4005145	      4473	gui.c	FUNCTION_67	IF_6	IF_7	CALL_5
0x4005145	      0xe9cdfeffff	                           jmp 0x4005017	      4473	gui.c	FUNCTION_67	IF_6	IF_7	CALL_5
0x400514a	    0x660f1f440000	                    nop word [rax + rax]	      4473	gui.c	FUNCTION_67	IF_6	IF_7	CALL_5
0x4005150	    0x453baf840000	           cmp r13d, dword [r15 + 0x84] 	      4493	gui.c	FUNCTION_67	IF_9
0x4005157	     0xf8500ffffff	                           jne 0x400505d	      4493	gui.c	FUNCTION_67	IF_9
0x400515d	      0xe93fffffff	                           jmp 0x40050a1	      4493	gui.c	FUNCTION_67	IF_9
0x4005162	    0x660f1f440000	                    nop word [rax + rax]	      4493	gui.c	FUNCTION_67	IF_9
0x4005168	      0xe800000000	                          call 0x400516d	      4518	gui.c	FUNCTION_67	CALL_13
0x400516d	      0xe93cffffff	                           jmp 0x40050ae	      4518	gui.c	FUNCTION_67	CALL_13
gui_update_cursor	IF,35:SWITCH,0:functions,0:CALL,22:WHILE,0:ELSE,7:FOR,0:DO,0	339
0x40018f0	            0x4155	                                push r13	      1056	gui.c	FUNCTION_15
0x40018f2	            0x4154	                                push r12	      1056	gui.c	FUNCTION_15
0x40018f4	              0x55	                                push rbp	      1056	gui.c	FUNCTION_15
0x40018f5	              0x53	                                push rbx	      1056	gui.c	FUNCTION_15
0x40018f6	        0x4883ec48	                           sub rsp, 0x48	      1056	gui.c	FUNCTION_15
0x40018fa	    0x8b1500000000	            mov edx, dword [0x04001900] 	      1073	gui.c	FUNCTION_15	IF_1
0x4001900	    0x64488b042528	                mov rax, qword fs:[0x28]	      1056	gui.c	FUNCTION_15
0x4001909	      0x4889442438	             mov qword [rsp + 0x38], rax	      1056	gui.c	FUNCTION_15
0x400190e	            0x31c0	                            xor eax, eax	      1056	gui.c	FUNCTION_15
0x4001910	    0x48c744240899	 mov qword [rsp + 8], 0xffffffffffffd499	      1063	gui.c	FUNCTION_15
0x4001919	    0x48c744241099	mov qword [rsp + 0x10], 0xffffffffffffd499	      1064	gui.c	FUNCTION_15
0x4001922	            0x85d2	                           test edx, edx	      1073	gui.c	FUNCTION_15	IF_1
0x4001924	            0x740e	                            je 0x4001934	      1073	gui.c	FUNCTION_15	IF_1
0x4001926	    0x8b0500000000	            mov eax, dword [0x0400192c] 	      1073	gui.c	FUNCTION_15	IF_1
0x400192c	    0x3b0500000000	            cmp eax, dword [0x04001932] 	      1073	gui.c	FUNCTION_15	IF_1
0x4001932	            0x7424	                            je 0x4001958	      1073	gui.c	FUNCTION_15	IF_1
0x4001934	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1318	gui.c	FUNCTION_15
0x4001939	    0x644833042528	                xor rax, qword fs:[0x28]	      1318	gui.c	FUNCTION_15
0x4001942	     0xf8525030000	                           jne 0x4001c6d	      1318	gui.c	FUNCTION_15
0x4001948	        0x4883c448	                           add rsp, 0x48	      1318	gui.c	FUNCTION_15
0x400194c	              0x5b	                                 pop rbx	      1318	gui.c	FUNCTION_15
0x400194d	              0x5d	                                 pop rbp	      1318	gui.c	FUNCTION_15
0x400194e	            0x415c	                                 pop r12	      1318	gui.c	FUNCTION_15
0x4001950	            0x415d	                                 pop r13	      1318	gui.c	FUNCTION_15
0x4001952	              0xc3	                                     ret	      1318	gui.c	FUNCTION_15
0x4001953	       0xf1f440000	                   nop dword [rax + rax]	      1318	gui.c	FUNCTION_15
0x4001958	    0x8b1500000000	            mov edx, dword [0x0400195e] 	      1074	gui.c	FUNCTION_15	IF_1
0x400195e	    0x3b1500000000	            cmp edx, dword [0x04001964] 	      1074	gui.c	FUNCTION_15	IF_1
0x4001964	            0x75ce	                           jne 0x4001934	      1074	gui.c	FUNCTION_15	IF_1
0x4001966	    0x3b1500000000	            cmp edx, dword [0x0400196c] 	      1039	gui.c	FUNCTION_14	IF_1
0x400196c	            0x89f3	                            mov ebx, esi	      1039	gui.c	FUNCTION_14	IF_1
0x400196e	            0x7f09	                            jg 0x4001979	      1039	gui.c	FUNCTION_14	IF_1
0x4001970	          0x8d4aff	                      lea ecx, [rdx - 1]	      1040	gui.c	FUNCTION_14	IF_1
0x4001973	    0x890d00000000	            mov dword [0x04001979], ecx 	      1040	gui.c	FUNCTION_14	IF_1
0x4001979	    0x3b0500000000	            cmp eax, dword [0x0400197f] 	      1041	gui.c	FUNCTION_14	IF_2
0x400197f	            0x7f09	                            jg 0x400198a	      1041	gui.c	FUNCTION_14	IF_2
0x4001981	          0x8d48ff	                      lea ecx, [rax - 1]	      1042	gui.c	FUNCTION_14	IF_2
0x4001984	    0x890d00000000	            mov dword [0x0400198a], ecx 	      1042	gui.c	FUNCTION_14	IF_2
0x400198a	    0x8b0d00000000	            mov ecx, dword [0x04001990] 	      1043	gui.c	FUNCTION_14	IF_3
0x4001990	            0x39ca	                            cmp edx, ecx	      1043	gui.c	FUNCTION_14	IF_3
0x4001992	            0x7e0e	                           jle 0x40019a2	      1043	gui.c	FUNCTION_14	IF_3
0x4001994	    0x8b1500000000	            mov edx, dword [0x0400199a] 	      1043	gui.c	FUNCTION_14	IF_3
0x400199a	            0x39d0	                            cmp eax, edx	      1043	gui.c	FUNCTION_14	IF_3
0x400199c	     0xf8f89020000	                            jg 0x4001c2b	      1043	gui.c	FUNCTION_14	IF_3
0x40019a2	    0xc60500000000	                mov byte [0x040019a9], 0	      1044	gui.c	FUNCTION_14	IF_3
0x40019a9	    0x8b3d00000000	            mov edi, dword [0x040019af] 	      1082	gui.c	FUNCTION_15	IF_2	IF_3
0x40019af	            0x85ff	                           test edi, edi	      1082	gui.c	FUNCTION_15	IF_2	IF_3
0x40019b1	            0x7881	                            js 0x4001934	      1082	gui.c	FUNCTION_15	IF_2	IF_3
0x40019b3	    0x3b3d00000000	            cmp edi, dword [0x040019b9] 	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x40019b9	    0x8b3500000000	            mov esi, dword [0x040019bf] 	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x40019bf	            0x750a	                           jne 0x40019cb	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x40019c1	    0x8b0500000000	            mov eax, dword [0x040019c7] 	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x40019c7	            0x39c6	                            cmp esi, eax	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x40019c9	            0x7411	                            je 0x40019dc	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x40019cb	      0xe800000000	                          call 0x40019d0	      1086	gui.c	FUNCTION_15	IF_2	CALL_3
0x40019d0	    0x8b3d00000000	            mov edi, dword [0x040019d6] 	      1086	gui.c	FUNCTION_15	IF_2	CALL_3
0x40019d6	    0x8b0500000000	            mov eax, dword [0x040019dc] 	      1086	gui.c	FUNCTION_15	IF_2	CALL_3
0x40019dc	    0x890500000000	            mov dword [0x040019e2], eax 	      1089	gui.c	FUNCTION_15	IF_2
0x40019e2	    0x8b0500000000	            mov eax, dword [0x040019e8] 	      1092	gui.c	FUNCTION_15	IF_2	IF_5
0x40019e8	    0x893d00000000	            mov dword [0x040019ee], edi 	      1088	gui.c	FUNCTION_15	IF_2
0x40019ee	            0x85c0	                           test eax, eax	      1092	gui.c	FUNCTION_15	IF_2	IF_5
0x40019f0	     0xf843effffff	                            je 0x4001934	      1092	gui.c	FUNCTION_15	IF_2	IF_5
0x40019f6	    0x48833d000000	               cmp qword [0x040019fe], 0	      1092	gui.c	FUNCTION_15	IF_2	IF_5
0x40019fe	     0xf8430ffffff	                            je 0x4001934	      1092	gui.c	FUNCTION_15	IF_2	IF_5
0x4001a04	            0x85db	                           test ebx, ebx	      1096	gui.c	FUNCTION_15	IF_2	IF_6
0x4001a06	     0xf8542020000	                           jne 0x4001c4e	      1096	gui.c	FUNCTION_15	IF_2	IF_6
0x4001a0c	    0x393d00000000	            cmp dword [0x04001a12], edi 	      1100	gui.c	FUNCTION_15	IF_2	IF_7
0x4001a12	     0xf8e1cffffff	                           jle 0x4001934	      1100	gui.c	FUNCTION_15	IF_2	IF_7
0x4001a18	    0x8b0500000000	            mov eax, dword [0x04001a1e] 	      1100	gui.c	FUNCTION_15	IF_2	IF_7
0x4001a1e	    0x390500000000	            cmp dword [0x04001a24], eax 	      1100	gui.c	FUNCTION_15	IF_2	IF_7
0x4001a24	     0xf8d0affffff	                           jge 0x4001934	      1100	gui.c	FUNCTION_15	IF_2	IF_7
0x4001a2a	    0xc60500000000	                mov byte [0x04001a31], 1	      1103	gui.c	FUNCTION_15	IF_2
0x4001a31	      0xe800000000	                          call 0x4001a36	      1110	gui.c	FUNCTION_15	IF_2	IF_8	CALL_5
0x4001a36	            0x85c0	                           test eax, eax	      1110	gui.c	FUNCTION_15	IF_2	IF_8	CALL_5
0x4001a38	     0xf846e020000	                            je 0x4001cac	      1110	gui.c	FUNCTION_15	IF_2	IF_8	CALL_5
0x4001a3e	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1111	gui.c	FUNCTION_15	IF_2	CALL_6
0x4001a43	      0x488d7c2408	                      lea rdi, [rsp + 8]	      1111	gui.c	FUNCTION_15	IF_2	CALL_6
0x4001a48	      0xe800000000	                          call 0x4001a4d	      1111	gui.c	FUNCTION_15	IF_2	CALL_6
0x4001a4d	          0x4889c3	                            mov rbx, rax	      1111	gui.c	FUNCTION_15	IF_2	CALL_6
0x4001a50	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      1124	gui.c	FUNCTION_15	IF_2	CALL_8
0x4001a54	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1124	gui.c	FUNCTION_15	IF_2	CALL_8
0x4001a58	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1124	gui.c	FUNCTION_15	IF_2	CALL_8
0x4001a5c	    0xf60500000000	           test byte [0x04001a63], 0x20 	      1116	gui.c	FUNCTION_15	IF_2	IF_9
0x4001a63	          0x8b6b2c	            mov ebp, dword [rbx + 0x2c] 	      1116	gui.c	FUNCTION_15	IF_2	IF_9
0x4001a66	    0x48c744241899	mov qword [rsp + 0x18], 0xffffffffffffd499	      1121	gui.c	FUNCTION_15	IF_2
0x4001a6f	         0xf446b28	           cmove ebp, dword [rbx + 0x28]	      1116	gui.c	FUNCTION_15	IF_2	IF_9
0x4001a73	    0x48c744242099	mov qword [rsp + 0x20], 0xffffffffffffd499	      1122	gui.c	FUNCTION_15	IF_2
0x4001a7c	      0xe800000000	                          call 0x4001a81	      1124	gui.c	FUNCTION_15	IF_2	CALL_8
0x4001a81	      0x48837b1000	               cmp qword [rbx + 0x10], 0	      1127	gui.c	FUNCTION_15	IF_2	IF_10
0x4001a86	            0x740e	                            je 0x4001a96	      1127	gui.c	FUNCTION_15	IF_2	IF_10
0x4001a88	      0x48837b1800	               cmp qword [rbx + 0x18], 0	      1127	gui.c	FUNCTION_15	IF_2	IF_10
0x4001a8d	            0x7407	                            je 0x4001a96	      1127	gui.c	FUNCTION_15	IF_2	IF_10
0x4001a8f	      0x48837b2000	               cmp qword [rbx + 0x20], 0	      1128	gui.c	FUNCTION_15	IF_2	IF_10
0x4001a94	            0x7507	                           jne 0x4001a9d	      1128	gui.c	FUNCTION_15	IF_2	IF_10
0x4001a96	            0x31ff	                            xor edi, edi	      1129	gui.c	FUNCTION_15	IF_2	CALL_9
0x4001a98	      0xe800000000	                          call 0x4001a9d	      1129	gui.c	FUNCTION_15	IF_2	CALL_9
0x4001a9d	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1131	gui.c	FUNCTION_15	IF_2	IF_11
0x4001aa2	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1131	gui.c	FUNCTION_15	IF_2	IF_11
0x4001aa8	     0xf84c4020000	                            je 0x4001d72	      1131	gui.c	FUNCTION_15	IF_2	IF_11
0x4001aae	      0x488b542408	                mov rdx, qword [rsp + 8]	      1134	gui.c	FUNCTION_15	IF_2	IF_11
0x4001ab3	      0x4889442420	             mov qword [rsp + 0x20], rax	      1135	gui.c	FUNCTION_15	IF_2	IF_11
0x4001ab8	          0x4531ed	                          xor r13d, r13d	      1133	gui.c	FUNCTION_15	IF_2	IF_11
0x4001abb	      0x4889542418	             mov qword [rsp + 0x18], rdx	      1134	gui.c	FUNCTION_15	IF_2	IF_11
0x4001ac0	    0x48630d000000	         movsxd rcx, dword [0x04001ac7] 	      1173	gui.c	FUNCTION_15	IF_2
0x4001ac7	    0x488b15000000	            mov rdx, qword [0x04001ace] 	      1173	gui.c	FUNCTION_15	IF_2
0x4001ace	    0x8b0500000000	            mov eax, dword [0x04001ad4] 	      1173	gui.c	FUNCTION_15	IF_2
0x4001ad4	           0x3048a	            add eax, dword [rdx + rcx*4]	      1173	gui.c	FUNCTION_15	IF_2
0x4001ad7	    0x488b15000000	            mov rdx, qword [0x04001ade] 	      1173	gui.c	FUNCTION_15	IF_2
0x4001ade	         0xfb72c42	           movzx ebp, word [rdx + rax*2]	      1173	gui.c	FUNCTION_15	IF_2
0x4001ae2	            0x31c0	                            xor eax, eax	      1069	gui.c	FUNCTION_15
0x4001ae4	    0x81fdff000000	                           cmp ebp, 0xff	      1174	gui.c	FUNCTION_15	IF_2	IF_17
0x4001aea	     0xf8fd6010000	                            jg 0x4001cc6	      1174	gui.c	FUNCTION_15	IF_2	IF_17
0x4001af0	    0x48817c241899	cmp qword [rsp + 0x18], 0xffffffffffffd499	      1186	gui.c	FUNCTION_15	IF_2	IF_21
0x4001af9	     0xf8409020000	                            je 0x4001d08	      1186	gui.c	FUNCTION_15	IF_2	IF_21
0x4001aff	    0x48817c242099	cmp qword [rsp + 0x20], 0xffffffffffffd499	      1188	gui.c	FUNCTION_15	IF_2	IF_22
0x4001b08	            0x7518	                           jne 0x4001b22	      1188	gui.c	FUNCTION_15	IF_2	IF_22
0x4001b0a	    0x488b15000000	            mov rdx, qword [0x04001b11] 	      1189	gui.c	FUNCTION_15	IF_2	IF_22
0x4001b11	        0x40f6c501	                             test bpl, 1	      1189	gui.c	FUNCTION_15	IF_2	IF_22
0x4001b15	    0x480f44150000	           cmove rdx, qword [0x04001b1d]	      1189	gui.c	FUNCTION_15	IF_2	IF_22
0x4001b1d	      0x4889542420	             mov qword [rsp + 0x20], rdx	      1189	gui.c	FUNCTION_15	IF_2	IF_22
0x4001b22	          0x4885c0	                           test rax, rax	      1192	gui.c	FUNCTION_15	IF_2	IF_23
0x4001b25	     0xf84f3020000	                            je 0x4001e1e	      1192	gui.c	FUNCTION_15	IF_2	IF_23
0x4001b2b	            0x89ee	                            mov esi, ebp	      1195	gui.c	FUNCTION_15	IF_2	IF_23
0x4001b2d	        0x488b5008	                mov rdx, qword [rax + 8]	      1195	gui.c	FUNCTION_15	IF_2	IF_23
0x4001b31	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1195	gui.c	FUNCTION_15	IF_2	IF_23
0x4001b35	          0x83e601	                              and esi, 1	      1195	gui.c	FUNCTION_15	IF_2	IF_23
0x4001b38	     0xf8434010000	                            je 0x4001c72	      1195	gui.c	FUNCTION_15	IF_2	IF_23
0x4001b3e	    0x4881fa99d4ff	             cmp rdx, 0xffffffffffffd499	      1198	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x4001b45	    0x488915000000	            mov qword [0x04001b4c], rdx 	      1194	gui.c	FUNCTION_15	IF_2	IF_23
0x4001b4c	    0x488905000000	            mov qword [0x04001b53], rax 	      1196	gui.c	FUNCTION_15	IF_2	IF_23
0x4001b53	     0xf8435030000	                            je 0x4001e8e	      1198	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x4001b59	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1201	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4001b5f	     0xf841d030000	                            je 0x4001e82	      1201	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4001b65	        0x41f6c501	                            test r13b, 1	      1215	gui.c	FUNCTION_15	IF_2	IF_26
0x4001b69	            0x7414	                            je 0x4001b7f	      1215	gui.c	FUNCTION_15	IF_2	IF_26
0x4001b6b	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1217	gui.c	FUNCTION_15	IF_2	IF_26
0x4001b70	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1218	gui.c	FUNCTION_15	IF_2	IF_26
0x4001b75	      0x4889442418	             mov qword [rsp + 0x18], rax	      1219	gui.c	FUNCTION_15	IF_2	IF_26
0x4001b7a	      0x4889542420	             mov qword [rsp + 0x20], rdx	      1218	gui.c	FUNCTION_15	IF_2	IF_26
0x4001b7f	    0x833d00000000	               cmp dword [0x04001b86], 0	      1226	gui.c	FUNCTION_15	IF_2	IF_27
0x4001b86	     0xf84d7010000	                            je 0x4001d63	      1226	gui.c	FUNCTION_15	IF_2	IF_27
0x4001b8c	            0x8b03	                    mov eax, dword [rbx]	      1233	gui.c	FUNCTION_15	IF_2	IF_28
0x4001b8e	    0x448b25000000	           mov r12d, dword [0x04001b95] 	      1232	gui.c	FUNCTION_15	IF_2
0x4001b95	            0x85c0	                           test eax, eax	      1233	gui.c	FUNCTION_15	IF_2	IF_28
0x4001b97	     0xf8488010000	                            je 0x4001d25	      1233	gui.c	FUNCTION_15	IF_2	IF_28
0x4001b9d	          0x83f802	                              cmp eax, 2	      1273	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001ba0	     0xf847e030000	                            je 0x4001f24	      1273	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001ba6	    0x8b0500000000	            mov eax, dword [0x04001bac] 	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x4001bac	      0xb964000000	                           mov ecx, 0x64	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x4001bb1	    0x8b2d00000000	            mov ebp, dword [0x04001bb7] 	      1281	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x4001bb7	         0xfaf4308	               imul eax, dword [rbx + 8]	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x4001bbb	          0x83c063	                           add eax, 0x63	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x4001bbe	              0x99	                                     cdq	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x4001bbf	            0xf7f9	                                idiv ecx	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x4001bc1	          0x4189c5	                           mov r13d, eax	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x4001bc4	    0x833d00000000	               cmp dword [0x04001bcb], 0	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4001bcb	     0xf85c9020000	                           jne 0x4001e9a	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4001bd1	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x4001bd6	          0x4489ee	                           mov esi, r13d	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x4001bd9	            0x89ef	                            mov edi, ebp	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x4001bdb	      0xe800000000	                          call 0x4001be0	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x4001be0	    0x486315000000	         movsxd rdx, dword [0x04001be7] 	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x4001be7	    0x488b05000000	            mov rax, qword [0x04001bee] 	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x4001bee	    0x488b0d000000	            mov rcx, qword [0x04001bf5] 	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x4001bf5	        0x488d1490	                  lea rdx, [rax + rdx*4]	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x4001bf9	    0x8b0500000000	            mov eax, dword [0x04001bff] 	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x4001bff	            0x89c6	                            mov esi, eax	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x4001c01	             0x332	                    add esi, dword [rdx]	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x4001c03	         0xfb70c71	           movzx ecx, word [rcx + rsi*2]	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x4001c07	      0xbe18000000	                           mov esi, 0x18	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x4001c0c	    0x890d00000000	            mov dword [0x04001c12], ecx 	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x4001c12	             0x302	                    add eax, dword [rdx]	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x4001c14	            0x31c9	                            xor ecx, ecx	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x4001c16	            0x31d2	                            xor edx, edx	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x4001c18	            0x89c7	                            mov edi, eax	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x4001c1a	      0xe800000000	                          call 0x4001c1f	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x4001c1f	    0x448925000000	           mov dword [0x04001c26], r12d 	      1316	gui.c	FUNCTION_15	IF_2
0x4001c26	      0xe909fdffff	                           jmp 0x4001934	      1316	gui.c	FUNCTION_15	IF_2
0x4001c2b	    0x803d00000000	                cmp byte [0x04001c32], 0	      1078	gui.c	FUNCTION_15	IF_2
0x4001c32	     0xf8471fdffff	                            je 0x40019a9	      1078	gui.c	FUNCTION_15	IF_2
0x4001c38	            0x85ff	                           test edi, edi	      1078	gui.c	FUNCTION_15	IF_2
0x4001c3a	            0x7508	                           jne 0x4001c44	      1078	gui.c	FUNCTION_15	IF_2
0x4001c3c	    0x390d00000000	            cmp dword [0x04001c42], ecx 	      1079	gui.c	FUNCTION_15	IF_2
0x4001c42	            0x741c	                            je 0x4001c60	      1079	gui.c	FUNCTION_15	IF_2
0x4001c44	      0xe817fcffff	       call sym.gui_undraw_cursor.part.8	      1079	gui.c	FUNCTION_15	IF_2
0x4001c49	      0xe95bfdffff	                           jmp 0x40019a9	      1079	gui.c	FUNCTION_15	IF_2
0x4001c4e	            0x89fe	                            mov esi, edi	      1097	gui.c	FUNCTION_15	IF_2	CALL_4
0x4001c50	      0xe800000000	                          call 0x4001c55	      1097	gui.c	FUNCTION_15	IF_2	CALL_4
0x4001c55	    0x8b3d00000000	            mov edi, dword [0x04001c5b] 	      1097	gui.c	FUNCTION_15	IF_2	CALL_4
0x4001c5b	      0xe9acfdffff	                           jmp 0x4001a0c	      1097	gui.c	FUNCTION_15	IF_2	CALL_4
0x4001c60	    0x391500000000	            cmp dword [0x04001c66], edx 	      1079	gui.c	FUNCTION_15	IF_2
0x4001c66	            0x75dc	                           jne 0x4001c44	      1079	gui.c	FUNCTION_15	IF_2
0x4001c68	      0xe9c7fcffff	                           jmp 0x4001934	      1079	gui.c	FUNCTION_15	IF_2
0x4001c6d	      0xe800000000	                          call 0x4001c72	      1318	gui.c	FUNCTION_15
0x4001c72	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1198	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x4001c78	    0x488905000000	            mov qword [0x04001c7f], rax 	      1194	gui.c	FUNCTION_15	IF_2	IF_23
0x4001c7f	    0x488915000000	            mov qword [0x04001c86], rdx 	      1196	gui.c	FUNCTION_15	IF_2	IF_23
0x4001c86	     0xf84b2010000	                            je 0x4001e3e	      1198	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x4001c8c	    0x4881fa99d4ff	             cmp rdx, 0xffffffffffffd499	      1201	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4001c93	     0xf85ccfeffff	                           jne 0x4001b65	      1201	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4001c99	    0x488b05000000	            mov rax, qword [0x04001ca0] 	      1210	gui.c	FUNCTION_15	IF_2	ELSE_4
0x4001ca0	    0x488905000000	            mov qword [0x04001ca7], rax 	      1209	gui.c	FUNCTION_15	IF_2	ELSE_4
0x4001ca7	      0xe9b9feffff	                           jmp 0x4001b65	      1209	gui.c	FUNCTION_15	IF_2	ELSE_4
0x4001cac	            0x31ff	                            xor edi, edi	      1114	gui.c	FUNCTION_15	IF_2	CALL_7
0x4001cae	      0xe800000000	                          call 0x4001cb3	      1114	gui.c	FUNCTION_15	IF_2	CALL_7
0x4001cb3	          0x4863d8	                         movsxd rbx, eax	      1114	gui.c	FUNCTION_15	IF_2	CALL_7
0x4001cb6	        0x48c1e306	                              shl rbx, 6	      1114	gui.c	FUNCTION_15	IF_2	CALL_7
0x4001cba	    0x4881c3000000	                              add rbx, 0	      1114	gui.c	FUNCTION_15	IF_2	CALL_7
0x4001cc1	      0xe98afdffff	                           jmp 0x4001a50	      1114	gui.c	FUNCTION_15	IF_2	CALL_7
0x4001cc6	            0x89ef	                            mov edi, ebp	      1175	gui.c	FUNCTION_15	IF_2	CALL_15
0x4001cc8	      0xe800000000	                          call 0x4001ccd	      1175	gui.c	FUNCTION_15	IF_2	CALL_15
0x4001ccd	          0x4885c0	                           test rax, rax	      1176	gui.c	FUNCTION_15	IF_2	IF_18
0x4001cd0	     0xf841afeffff	                            je 0x4001af0	      1176	gui.c	FUNCTION_15	IF_2	IF_18
0x4001cd6	           0xfbf28	                   movsx ebp, word [rax]	      1178	gui.c	FUNCTION_15	IF_2	IF_18
0x4001cd9	    0x48817c241899	cmp qword [rsp + 0x18], 0xffffffffffffd499	      1179	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x4001ce2	            0x89e9	                            mov ecx, ebp	      1178	gui.c	FUNCTION_15	IF_2	IF_18
0x4001ce4	     0xf841d010000	                            je 0x4001e07	      1179	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x4001cea	    0x48817c242099	cmp qword [rsp + 0x20], 0xffffffffffffd499	      1182	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x4001cf3	     0xf84f8000000	                            je 0x4001df1	      1182	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x4001cf9	    0x48817c241899	cmp qword [rsp + 0x18], 0xffffffffffffd499	      1186	gui.c	FUNCTION_15	IF_2	IF_21
0x4001d02	     0xf8523feffff	                           jne 0x4001b2b	      1186	gui.c	FUNCTION_15	IF_2	IF_21
0x4001d08	        0x40f6c501	                             test bpl, 1	      1187	gui.c	FUNCTION_15	IF_2	IF_21
0x4001d0c	    0x488b15000000	            mov rdx, qword [0x04001d13] 	      1187	gui.c	FUNCTION_15	IF_2	IF_21
0x4001d13	    0x480f45150000	          cmovne rdx, qword [0x04001d1b]	      1187	gui.c	FUNCTION_15	IF_2	IF_21
0x4001d1b	      0x4889542418	             mov qword [rsp + 0x18], rdx	      1187	gui.c	FUNCTION_15	IF_2	IF_21
0x4001d20	      0xe9dafdffff	                           jmp 0x4001aff	      1187	gui.c	FUNCTION_15	IF_2	IF_21
0x4001d25	          0x4489e8	                           mov eax, r13d	      1243	gui.c	FUNCTION_15	IF_2	IF_28
0x4001d28	    0x486315000000	         movsxd rdx, dword [0x04001d2f] 	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x4001d2f	    0x8b3d00000000	            mov edi, dword [0x04001d35] 	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x4001d35	             0x9e8	                             or eax, ebp	      1243	gui.c	FUNCTION_15	IF_2	IF_28
0x4001d37	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x4001d3c	      0xbe14000000	                           mov esi, 0x14	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x4001d41	          0x83e0fe	                     and eax, 0xfffffffe	      1243	gui.c	FUNCTION_15	IF_2	IF_28
0x4001d44	    0x890500000000	            mov dword [0x04001d4a], eax 	      1243	gui.c	FUNCTION_15	IF_2	IF_28
0x4001d4a	    0x488b05000000	            mov rax, qword [0x04001d51] 	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x4001d51	           0x33c90	            add edi, dword [rax + rdx*4]	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x4001d54	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x4001d59	      0xe800000000	                          call 0x4001d5e	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x4001d5e	      0xe9bcfeffff	                           jmp 0x4001c1f	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x4001d63	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1228	gui.c	FUNCTION_15	IF_2	IF_27	CALL_16
0x4001d68	      0xe800000000	                          call 0x4001d6d	      1228	gui.c	FUNCTION_15	IF_2	IF_27	CALL_16
0x4001d6d	      0xe9c2fbffff	                           jmp 0x4001934	      1229	gui.c	FUNCTION_15	IF_2	IF_27
0x4001d72	            0x85ed	                           test ebp, ebp	      1139	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12
0x4001d74	    0x41bd01000000	                             mov r13d, 1	      1123	gui.c	FUNCTION_15	IF_2
0x4001d7a	     0xf8e40fdffff	                           jle 0x4001ac0	      1139	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12
0x4001d80	      0x488d542420	                   lea rdx, [rsp + 0x20]	      1141	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	CALL_10
0x4001d85	      0x488d742418	                   lea rsi, [rsp + 0x18]	      1141	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	CALL_10
0x4001d8a	            0x89ef	                            mov edi, ebp	      1141	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	CALL_10
0x4001d8c	      0xe800000000	                          call 0x4001d91	      1141	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	CALL_10
0x4001d91	          0x4189c5	                           mov r13d, eax	      1141	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	CALL_10
0x4001d94	      0xe800000000	                          call 0x4001d99	      1149	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	CALL_11
0x4001d99	            0x85c0	                           test eax, eax	      1147	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13
0x4001d9b	     0xf841ffdffff	                            je 0x4001ac0	      1147	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13
0x4001da1	      0xbf00000000	                              mov edi, 0	      1155	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	CALL_13
0x4001da6	      0xe800000000	                          call 0x4001dab	      1155	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	CALL_13
0x4001dab	            0x85c0	                           test eax, eax	      1156	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14
0x4001dad	     0xf8e0dfdffff	                           jle 0x4001ac0	      1156	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14
0x4001db3	      0x488d542430	                   lea rdx, [rsp + 0x30]	      1158	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	CALL_14
0x4001db8	      0x488d742428	                   lea rsi, [rsp + 0x28]	      1158	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	CALL_14
0x4001dbd	            0x89c7	                            mov edi, eax	      1158	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	CALL_14
0x4001dbf	      0xe800000000	                          call 0x4001dc4	      1158	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	CALL_14
0x4001dc4	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      1159	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_15
0x4001dc9	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1159	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_15
0x4001dcf	            0x7405	                            je 0x4001dd6	      1159	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_15
0x4001dd1	      0x4889442420	             mov qword [rsp + 0x20], rax	      1160	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_15
0x4001dd6	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1161	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_16
0x4001ddb	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1161	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_16
0x4001de1	     0xf84d9fcffff	                            je 0x4001ac0	      1161	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_16
0x4001de7	      0x4889442418	             mov qword [rsp + 0x18], rax	      1162	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_16
0x4001dec	      0xe9cffcffff	                           jmp 0x4001ac0	      1162	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_16
0x4001df1	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1184	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x4001df5	          0x80e101	                               and cl, 1	      1184	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x4001df8	      0x480f455008	             cmovne rdx, qword [rax + 8]	      1184	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x4001dfd	      0x4889542420	             mov qword [rsp + 0x20], rdx	      1183	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x4001e02	      0xe9e9fcffff	                           jmp 0x4001af0	      1183	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x4001e07	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1181	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x4001e0b	        0x40f6c501	                             test bpl, 1	      1181	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x4001e0f	      0x480f445008	              cmove rdx, qword [rax + 8]	      1181	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x4001e14	      0x4889542418	             mov qword [rsp + 0x18], rdx	      1180	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x4001e19	      0xe9ccfeffff	                           jmp 0x4001cea	      1180	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x4001e1e	        0x40f6c501	                             test bpl, 1	      1208	gui.c	FUNCTION_15	IF_2	ELSE_4
0x4001e22	            0x744b	                            je 0x4001e6f	      1208	gui.c	FUNCTION_15	IF_2	ELSE_4
0x4001e24	    0x488b05000000	            mov rax, qword [0x04001e2b] 	      1207	gui.c	FUNCTION_15	IF_2	ELSE_4
0x4001e2b	    0x488905000000	            mov qword [0x04001e32], rax 	      1207	gui.c	FUNCTION_15	IF_2	ELSE_4
0x4001e32	    0x488b05000000	            mov rax, qword [0x04001e39] 	      1210	gui.c	FUNCTION_15	IF_2	ELSE_4
0x4001e39	      0xe962feffff	                           jmp 0x4001ca0	      1210	gui.c	FUNCTION_15	IF_2	ELSE_4
0x4001e3e	    0x488b0d000000	            mov rcx, qword [0x04001e45] 	      1200	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x4001e45	    0x4881fa99d4ff	             cmp rdx, 0xffffffffffffd499	      1201	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4001e4c	    0x48890d000000	            mov qword [0x04001e53], rcx 	      1199	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x4001e53	     0xf850cfdffff	                           jne 0x4001b65	      1201	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4001e59	            0x85f6	                           test esi, esi	      1203	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4001e5b	    0x488b05000000	            mov rax, qword [0x04001e62] 	      1203	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4001e62	    0x480f45050000	          cmovne rax, qword [0x04001e6a]	      1203	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4001e6a	      0xe931feffff	                           jmp 0x4001ca0	      1203	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4001e6f	    0x488b05000000	            mov rax, qword [0x04001e76] 	      1207	gui.c	FUNCTION_15	IF_2	ELSE_4
0x4001e76	    0x488905000000	            mov qword [0x04001e7d], rax 	      1207	gui.c	FUNCTION_15	IF_2	ELSE_4
0x4001e7d	      0xe917feffff	                           jmp 0x4001c99	      1207	gui.c	FUNCTION_15	IF_2	ELSE_4
0x4001e82	    0x488b05000000	            mov rax, qword [0x04001e89] 	      1203	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4001e89	      0xe912feffff	                           jmp 0x4001ca0	      1203	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4001e8e	    0x488b0d000000	            mov rcx, qword [0x04001e95] 	      1200	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x4001e95	          0x4889c2	                            mov rdx, rax	      1195	gui.c	FUNCTION_15	IF_2	IF_23
0x4001e98	            0xebab	                           jmp 0x4001e45	      1195	gui.c	FUNCTION_15	IF_2	IF_23
0x4001e9a	    0x486315000000	         movsxd rdx, dword [0x04001ea1] 	      1285	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4001ea1	    0x488b05000000	            mov rax, qword [0x04001ea8] 	      1285	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4001ea8	    0x8b3500000000	            mov esi, dword [0x04001eae] 	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4001eae	          0x8b0490	            mov eax, dword [rax + rdx*4]	      1285	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4001eb1	             0x1c6	                            add esi, eax	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4001eb3	     0x30500000000	             add eax, dword [0x04001eb9]	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4001eb9	            0x89c7	                            mov edi, eax	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4001ebb	    0xff1500000000	                 call qword [0x04001ec1]	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4001ec1	          0x83e801	                              sub eax, 1	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4001ec4	     0xf8e07fdffff	                           jle 0x4001bd1	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4001eca	    0x8b0500000000	            mov eax, dword [0x04001ed0] 	      1289	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_33
0x4001ed0	             0x1e8	                            add eax, ebp	      1289	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_33
0x4001ed2	          0x833b02	                      cmp dword [rbx], 2	      1289	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_33
0x4001ed5	           0xf45e8	                         cmovne ebp, eax	      1289	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_33
0x4001ed8	    0x488b05000000	            mov rax, qword [0x04001edf] 	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4001edf	    0x83b854020000	              cmp dword [rax + 0x254], 0	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4001ee6	     0xf84e5fcffff	                            je 0x4001bd1	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4001eec	    0xf60500000000	               test byte [0x04001ef3], 8	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4001ef3	            0x740d	                            je 0x4001f02	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4001ef5	    0x833d00000000	               cmp dword [0x04001efc], 0	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4001efc	     0xf84cffcffff	                            je 0x4001bd1	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4001f02	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x4001f07	          0x4489ee	                           mov esi, r13d	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x4001f0a	            0x89ef	                            mov edi, ebp	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x4001f0c	    0x830500000000	               add dword [0x04001f13], 1	      1298	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4001f13	      0xe800000000	                          call 0x4001f18	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x4001f18	    0x832d00000000	               sub dword [0x04001f1f], 1	      1306	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_35
0x4001f1f	      0xe9bcfcffff	                           jmp 0x4001be0	      1306	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_35
0x4001f24	    0x8b0500000000	            mov eax, dword [0x04001f2a] 	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001f2a	      0xb964000000	                           mov ecx, 0x64	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001f2f	    0x448b2d000000	           mov r13d, dword [0x04001f36] 	      1275	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001f36	         0xfaf4308	               imul eax, dword [rbx + 8]	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001f3a	          0x83c063	                           add eax, 0x63	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001f3d	              0x99	                                     cdq	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001f3e	            0xf7f9	                                idiv ecx	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001f40	            0x89c5	                            mov ebp, eax	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001f42	      0xe97dfcffff	                           jmp 0x4001bc4	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
gui_init_which_components	IF,25:SWITCH,1:functions,1:CALL,18:WHILE,0:ELSE,2:FOR,3:DO,0	265
0x4003dd0	            0x4157	                                push r15	      3438	gui.c	FUNCTION_53
0x4003dd2	            0x4156	                                push r14	      3438	gui.c	FUNCTION_53
0x4003dd4	            0x4155	                                push r13	      3438	gui.c	FUNCTION_53
0x4003dd6	            0x4154	                                push r12	      3438	gui.c	FUNCTION_53
0x4003dd8	              0x55	                                push rbp	      3438	gui.c	FUNCTION_53
0x4003dd9	              0x53	                                push rbx	      3438	gui.c	FUNCTION_53
0x4003dda	        0x4883ec18	                           sub rsp, 0x18	      3438	gui.c	FUNCTION_53
0x4003dde	          0x4885ff	                           test rdi, rdi	      3469	gui.c	FUNCTION_53	IF_1
0x4003de1	            0x7410	                            je 0x4003df3	      3469	gui.c	FUNCTION_53	IF_1
0x4003de3	    0x448b05000000	            mov r8d, dword [0x04003dea] 	      3469	gui.c	FUNCTION_53	IF_1
0x4003dea	          0x4585c0	                           test r8d, r8d	      3469	gui.c	FUNCTION_53	IF_1
0x4003ded	     0xf854d030000	                           jne 0x4004140	      3469	gui.c	FUNCTION_53	IF_1
0x4003df3	    0x488b1d000000	            mov rbx, qword [0x04003dfa] 	      3469	gui.c	FUNCTION_53	IF_1
0x4003dfa	    0xc60500000000	                mov byte [0x04003e01], 0	      3484	gui.c	FUNCTION_53
0x4003e01	    0xc70500000000	               mov dword [0x04003e0b], 0	      3488	gui.c	FUNCTION_53	FOR_1
0x4003e0b	          0x4531ff	                          xor r15d, r15d	      3489	gui.c	FUNCTION_53	FOR_2
0x4003e0e	    0xc70500000000	               mov dword [0x04003e18], 0	      3488	gui.c	FUNCTION_53	FOR_1
0x4003e18	    0xc70500000000	               mov dword [0x04003e22], 0	      3488	gui.c	FUNCTION_53	FOR_1
0x4003e22	          0x4531f6	                          xor r14d, r14d	      3489	gui.c	FUNCTION_53	FOR_2
0x4003e25	           0xfb603	                   movzx eax, byte [rbx]	      3489	gui.c	FUNCTION_53	FOR_2
0x4003e28	            0x84c0	                             test al, al	      3489	gui.c	FUNCTION_53	FOR_2
0x4003e2a	            0x742e	                            je 0x4003e5a	      3489	gui.c	FUNCTION_53	FOR_2
0x4003e2c	         0xf1f4000	                         nop dword [rax]	      3489	gui.c	FUNCTION_53	FOR_2
0x4003e30	          0x83e84c	                           sub eax, 0x4c	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4003e33	            0x3c28	                            cmp al, 0x28	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4003e35	            0x7718	                            ja 0x4003e4f	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4003e37	           0xfb6c0	                           movzx eax, al	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4003e3a	    0xff24c5000000	                       jmp qword [rax*8]	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4003e41	     0xf1f80000000	                         nop dword [rax]	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4003e48	    0xc60500000000	                mov byte [0x04003e4f], 1	      3511	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4003e4f	        0x4883c301	                              add rbx, 1	      3489	gui.c	FUNCTION_53	FOR_2
0x4003e53	           0xfb603	                   movzx eax, byte [rbx]	      3489	gui.c	FUNCTION_53	FOR_2
0x4003e56	            0x84c0	                             test al, al	      3489	gui.c	FUNCTION_53	FOR_2
0x4003e58	            0x75d6	                           jne 0x4003e30	      3489	gui.c	FUNCTION_53	FOR_2
0x4003e5a	    0x8b3500000000	            mov esi, dword [0x04003e60] 	      3537	gui.c	FUNCTION_53	IF_5
0x4003e60	            0x85f6	                           test esi, esi	      3537	gui.c	FUNCTION_53	IF_5
0x4003e62	     0xf85c8000000	                           jne 0x4003f30	      3537	gui.c	FUNCTION_53	IF_5
0x4003e68	        0x4883c418	                           add rsp, 0x18	      3672	gui.c	FUNCTION_53
0x4003e6c	              0x5b	                                 pop rbx	      3672	gui.c	FUNCTION_53
0x4003e6d	              0x5d	                                 pop rbp	      3672	gui.c	FUNCTION_53
0x4003e6e	            0x415c	                                 pop r12	      3672	gui.c	FUNCTION_53
0x4003e70	            0x415d	                                 pop r13	      3672	gui.c	FUNCTION_53
0x4003e72	            0x415e	                                 pop r14	      3672	gui.c	FUNCTION_53
0x4003e74	            0x415f	                                 pop r15	      3672	gui.c	FUNCTION_53
0x4003e76	              0xc3	                                     ret	      3672	gui.c	FUNCTION_53
0x4003e77	    0x660f1f840000	                    nop word [rax + rax]	      3672	gui.c	FUNCTION_53
0x4003e80	      0xe800000000	                          call 0x4003e85	      3503	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_4	CALL_5
0x4003e85	            0x85c0	                           test eax, eax	      3503	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_4	CALL_5
0x4003e87	            0x74c6	                            je 0x4003e4f	      3503	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_4	CALL_5
0x4003e89	        0x4883c301	                              add rbx, 1	      3489	gui.c	FUNCTION_53	FOR_2
0x4003e8d	    0xc70500000000	               mov dword [0x04003e97], 1	      3504	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_4
0x4003e97	           0xfb603	                   movzx eax, byte [rbx]	      3489	gui.c	FUNCTION_53	FOR_2
0x4003e9a	            0x84c0	                             test al, al	      3489	gui.c	FUNCTION_53	FOR_2
0x4003e9c	            0x7592	                           jne 0x4003e30	      3489	gui.c	FUNCTION_53	FOR_2
0x4003e9e	            0xebba	                           jmp 0x4003e5a	      3489	gui.c	FUNCTION_53	FOR_2
0x4003ea0	      0xe800000000	                          call 0x4003ea5	      3499	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_3	CALL_4
0x4003ea5	            0x85c0	                           test eax, eax	      3499	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_3	CALL_4
0x4003ea7	            0x74a6	                            je 0x4003e4f	      3499	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_3	CALL_4
0x4003ea9	        0x4883c301	                              add rbx, 1	      3489	gui.c	FUNCTION_53	FOR_2
0x4003ead	    0xc70500000000	               mov dword [0x04003eb7], 1	      3500	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_3
0x4003eb7	           0xfb603	                   movzx eax, byte [rbx]	      3489	gui.c	FUNCTION_53	FOR_2
0x4003eba	            0x84c0	                             test al, al	      3489	gui.c	FUNCTION_53	FOR_2
0x4003ebc	     0xf856effffff	                           jne 0x4003e30	      3489	gui.c	FUNCTION_53	FOR_2
0x4003ec2	            0xeb96	                           jmp 0x4003e5a	      3489	gui.c	FUNCTION_53	FOR_2
0x4003ec4	         0xf1f4000	                         nop dword [rax]	      3489	gui.c	FUNCTION_53	FOR_2
0x4003ec8	        0x4883c301	                              add rbx, 1	      3489	gui.c	FUNCTION_53	FOR_2
0x4003ecc	           0xfb603	                   movzx eax, byte [rbx]	      3489	gui.c	FUNCTION_53	FOR_2
0x4003ecf	    0x41be01000000	                             mov r14d, 1	      3519	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4003ed5	            0x84c0	                             test al, al	      3489	gui.c	FUNCTION_53	FOR_2
0x4003ed7	     0xf8553ffffff	                           jne 0x4003e30	      3489	gui.c	FUNCTION_53	FOR_2
0x4003edd	      0xe978ffffff	                           jmp 0x4003e5a	      3489	gui.c	FUNCTION_53	FOR_2
0x4003ee2	    0x660f1f440000	                    nop word [rax + rax]	      3489	gui.c	FUNCTION_53	FOR_2
0x4003ee8	        0x4883c301	                              add rbx, 1	      3489	gui.c	FUNCTION_53	FOR_2
0x4003eec	    0xc70500000000	               mov dword [0x04003ef6], 1	      3507	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4003ef6	           0xfb603	                   movzx eax, byte [rbx]	      3489	gui.c	FUNCTION_53	FOR_2
0x4003ef9	            0x84c0	                             test al, al	      3489	gui.c	FUNCTION_53	FOR_2
0x4003efb	     0xf852fffffff	                           jne 0x4003e30	      3489	gui.c	FUNCTION_53	FOR_2
0x4003f01	      0xe954ffffff	                           jmp 0x4003e5a	      3489	gui.c	FUNCTION_53	FOR_2
0x4003f06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3489	gui.c	FUNCTION_53	FOR_2
0x4003f10	        0x4883c301	                              add rbx, 1	      3489	gui.c	FUNCTION_53	FOR_2
0x4003f14	           0xfb603	                   movzx eax, byte [rbx]	      3489	gui.c	FUNCTION_53	FOR_2
0x4003f17	    0x41bf01000000	                             mov r15d, 1	      3529	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4003f1d	            0x84c0	                             test al, al	      3489	gui.c	FUNCTION_53	FOR_2
0x4003f1f	     0xf850bffffff	                           jne 0x4003e30	      3489	gui.c	FUNCTION_53	FOR_2
0x4003f25	      0xe930ffffff	                           jmp 0x4003e5a	      3489	gui.c	FUNCTION_53	FOR_2
0x4003f2a	    0x660f1f440000	                    nop word [rax + rax]	      3489	gui.c	FUNCTION_53	FOR_2
0x4003f30	      0xe84bcaffff	                call sym.gui_has_tabline	      3545	gui.c	FUNCTION_53	IF_5	CALL_6
0x4003f35	            0x89c3	                            mov ebx, eax	      3545	gui.c	FUNCTION_53	IF_5	CALL_6
0x4003f37	      0xe800000000	                          call 0x4003f3c	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x4003f3c	            0x85c0	                           test eax, eax	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x4003f3e	           0xf94c2	                                 sete dl	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x4003f41	            0x85db	                           test ebx, ebx	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x4003f43	           0xf94c0	                                 sete al	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x4003f46	            0x38c2	                              cmp dl, al	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x4003f48	     0xf84ca020000	                            je 0x4004218	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x4003f4e	    0x488b2d000000	            mov rbp, qword [0x04003f55] 	      3550	gui.c	FUNCTION_53	IF_5	IF_6
0x4003f55	      0xe800000000	                          call 0x4003f5a	      3551	gui.c	FUNCTION_53	IF_5	IF_6	CALL_8
0x4003f5a	    0x8b0d00000000	            mov ecx, dword [0x04003f60] 	      3682	gui.c	FUNCTION_54	CALL_1
0x4003f60	            0x31c0	                            xor eax, eax	      3540	gui.c	FUNCTION_53	IF_5
0x4003f62	            0x85db	                           test ebx, ebx	      3540	gui.c	FUNCTION_53	IF_5
0x4003f64	           0xf95c0	                                setne al	      3540	gui.c	FUNCTION_53	IF_5
0x4003f67	          0x4863ed	                         movsxd rbp, ebp	      3552	gui.c	FUNCTION_53	IF_5	IF_6
0x4003f6a	    0x48892d000000	            mov qword [0x04003f71], rbp 	      3552	gui.c	FUNCTION_53	IF_5	IF_6
0x4003f71	        0x8944240c	              mov dword [rsp + 0xc], eax	      3540	gui.c	FUNCTION_53	IF_5
0x4003f75	            0x85c9	                           test ecx, ecx	      3682	gui.c	FUNCTION_54	CALL_1
0x4003f77	     0xf851c020000	                           jne 0x4004199	      3682	gui.c	FUNCTION_54	CALL_1
0x4003f7d	    0xc70500000000	               mov dword [0x04003f87], 1	      3557	gui.c	FUNCTION_53	IF_5	IF_6	IF_8
0x4003f87	    0xc74424080100	                  mov dword [rsp + 8], 1	      3553	gui.c	FUNCTION_53	IF_5	IF_6
0x4003f8f	      0xbd00000000	                              mov ebp, 0	      3553	gui.c	FUNCTION_53	IF_5	IF_6
0x4003f94	          0x4531e4	                          xor r12d, r12d	      3553	gui.c	FUNCTION_53	IF_5	IF_6
0x4003f97	    0x8b95c0000000	            mov edx, dword [rbp + 0xc0] 	      3567	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4003f9d	    0x428b0ca50000	                  mov ecx, dword [r12*4]	      3567	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4003fa5	          0x4963dc	                        movsxd rbx, r12d	      3567	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4003fa8	            0x39ca	                            cmp edx, ecx	      3567	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4003faa	     0xf8408020000	                            je 0x40041b8	      3567	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4003fb0	        0x4983fc02	                              cmp r12, 2	      3571	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_10
0x4003fb4	     0xf8473020000	                            je 0x400422d	      3571	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_10
0x4003fba	    0x4c8b2d000000	            mov r13, qword [0x04003fc1] 	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x4003fc1	          0x4d85ed	                           test r13, r13	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x4003fc4	            0x7510	                           jne 0x4003fd6	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x4003fc6	            0xeb2f	                           jmp 0x4003ff7	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x4003fc8	     0xf1f84000000	                   nop dword [rax + rax]	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x4003fd0	    0x8b95c0000000	            mov edx, dword [rbp + 0xc0] 	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x4003fd6	          0x4c89ef	                            mov rdi, r13	      3578	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1	FUNCTION_1	CALL_1
0x4003fd9	            0x89de	                            mov esi, ebx	      3578	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1	FUNCTION_1	CALL_1
0x4003fdb	      0xe8a0c1ffff	               call sym.gui_do_scrollbar	      3578	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1	FUNCTION_1	CALL_1
0x4003fe0	        0x4d8b6d20	            mov r13, qword [r13 + 0x20] 	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x4003fe4	          0x4d85ed	                           test r13, r13	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x4003fe7	            0x75e7	                           jne 0x4003fd0	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x4003fe9	    0x428b0ca50000	                  mov ecx, dword [r12*4]	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x4003ff1	    0x8b95c0000000	            mov edx, dword [rbp + 0xc0] 	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x4003ff7	            0x39d1	                            cmp ecx, edx	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x4003ff9	     0xf84d9010000	                            je 0x40041d8	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x4003fff	      0x834c240802	                   or dword [rsp + 8], 2	      3586	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	ELSE_2
0x4004004	            0x85d2	                           test edx, edx	      3587	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x4004006	    0x488b05000000	            mov rax, qword [0x0400400d] 	      3587	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x400400d	            0x7408	                            je 0x4004017	      3587	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x400400f	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      3588	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x4004017	    0x428914a50000	                  mov dword [r12*4], edx	      3592	gui.c	FUNCTION_53	IF_5	FOR_3
0x400401f	        0x4983c401	                              add r12, 1	      3592	gui.c	FUNCTION_53	IF_5	FOR_3
0x4004023	        0x4883c504	                              add rbp, 4	      3592	gui.c	FUNCTION_53	IF_5	FOR_3
0x4004027	        0x4983fc03	                              cmp r12, 3	      3561	gui.c	FUNCTION_53	IF_5	FOR_3
0x400402b	        0x89549848	     mov dword [rax + rbx*4 + 0x48], edx	      3591	gui.c	FUNCTION_53	IF_5	FOR_3
0x400402f	     0xf8562ffffff	                           jne 0x4003f97	      3561	gui.c	FUNCTION_53	IF_5	FOR_3
0x4004035	     0xfbe3d000000	           movsx edi, byte [0x0400403c] 	      3596	gui.c	FUNCTION_53	IF_5	IF_14
0x400403c	    0x3b3d00000000	            cmp edi, dword [0x04004042] 	      3596	gui.c	FUNCTION_53	IF_5	IF_14
0x4004042	            0x7438	                            je 0x400407c	      3596	gui.c	FUNCTION_53	IF_5	IF_14
0x4004044	    0x488b1d000000	            mov rbx, qword [0x0400404b] 	      3600	gui.c	FUNCTION_53	IF_5	IF_14
0x400404b	      0xe800000000	                          call 0x4004050	      3601	gui.c	FUNCTION_53	IF_5	IF_14	CALL_11
0x4004050	     0xfbe15000000	           movsx edx, byte [0x04004057] 	      3603	gui.c	FUNCTION_53	IF_5	IF_14
0x4004057	      0x834c240801	                   or dword [rsp + 8], 1	      3604	gui.c	FUNCTION_53	IF_5	IF_14
0x400405c	      0xb801000000	                              mov eax, 1	      3606	gui.c	FUNCTION_53	IF_5	IF_14	IF_15
0x4004061	          0x4863db	                         movsxd rbx, ebx	      3602	gui.c	FUNCTION_53	IF_5	IF_14
0x4004064	    0x48891d000000	            mov qword [0x0400406b], rbx 	      3602	gui.c	FUNCTION_53	IF_5	IF_14
0x400406b	            0x84d2	                             test dl, dl	      3606	gui.c	FUNCTION_53	IF_5	IF_14	IF_15
0x400406d	       0xf4444240c	            cmove eax, dword [rsp + 0xc]	      3606	gui.c	FUNCTION_53	IF_5	IF_14	IF_15
0x4004072	    0x891500000000	            mov dword [0x04004078], edx 	      3603	gui.c	FUNCTION_53	IF_5	IF_14
0x4004078	        0x8944240c	              mov dword [rsp + 0xc], eax	      3606	gui.c	FUNCTION_53	IF_5	IF_14	IF_15
0x400407c	    0x443935000000	           cmp dword [0x04004083], r14d 	      3611	gui.c	FUNCTION_53	IF_5	IF_16
0x4004083	     0xf845f010000	                            je 0x40041e8	      3611	gui.c	FUNCTION_53	IF_5	IF_16
0x4004089	          0x4489f7	                           mov edi, r14d	      3613	gui.c	FUNCTION_53	IF_5	IF_16	CALL_12
0x400408c	      0xe800000000	                          call 0x4004091	      3613	gui.c	FUNCTION_53	IF_5	IF_16	CALL_12
0x4004091	      0x834c240801	                   or dword [rsp + 8], 1	      3615	gui.c	FUNCTION_53	IF_5	IF_16
0x4004096	      0xb801000000	                              mov eax, 1	      3617	gui.c	FUNCTION_53	IF_5	IF_16	IF_17
0x400409b	          0x4585f6	                         test r14d, r14d	      3617	gui.c	FUNCTION_53	IF_5	IF_16	IF_17
0x400409e	       0xf4444240c	            cmove eax, dword [rsp + 0xc]	      3617	gui.c	FUNCTION_53	IF_5	IF_16	IF_17
0x40040a3	    0x443b3d000000	           cmp r15d, dword [0x040040aa] 	      3631	gui.c	FUNCTION_53	IF_5	IF_20
0x40040aa	    0x448935000000	           mov dword [0x040040b1], r14d 	      3614	gui.c	FUNCTION_53	IF_5	IF_16
0x40040b1	        0x8944240c	              mov dword [rsp + 0xc], eax	      3617	gui.c	FUNCTION_53	IF_5	IF_16	IF_17
0x40040b5	     0xf8536010000	                           jne 0x40041f1	      3631	gui.c	FUNCTION_53	IF_5	IF_20
0x40040bb	      0x448b7c2408	               mov r15d, dword [rsp + 8]	      3646	gui.c	FUNCTION_53	IF_5	IF_21	CALL_15
0x40040c0	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      3646	gui.c	FUNCTION_53	IF_5	IF_21	CALL_15
0x40040c4	            0x31ff	                            xor edi, edi	      3646	gui.c	FUNCTION_53	IF_5	IF_21	CALL_15
0x40040c6	    0x488b1d000000	            mov rbx, qword [0x040040cd] 	      3640	gui.c	FUNCTION_53	IF_5	IF_21
0x40040cd	    0x488b2d000000	            mov rbp, qword [0x040040d4] 	      3641	gui.c	FUNCTION_53	IF_5	IF_21
0x40040d4	          0x4489fa	                           mov edx, r15d	      3646	gui.c	FUNCTION_53	IF_5	IF_21	CALL_15
0x40040d7	      0xe800000000	                          call 0x40040dc	      3646	gui.c	FUNCTION_53	IF_5	IF_21	CALL_15
0x40040dc	    0x8b0500000000	            mov eax, dword [0x040040e2] 	      3659	gui.c	FUNCTION_53	IF_5	IF_21	IF_22
0x40040e2	            0x85c0	                           test eax, eax	      3659	gui.c	FUNCTION_53	IF_5	IF_21	IF_22
0x40040e4	            0x750b	                           jne 0x40040f1	      3659	gui.c	FUNCTION_53	IF_5	IF_21	IF_22
0x40040e6	        0x4183ff03	                             cmp r15d, 3	      3659	gui.c	FUNCTION_53	IF_5	IF_21	IF_22
0x40040ea	            0x7405	                            je 0x40040f1	      3659	gui.c	FUNCTION_53	IF_5	IF_21	IF_22
0x40040ec	      0xe800000000	                          call 0x40040f1	      3660	gui.c	FUNCTION_53	IF_5	IF_21	CALL_16
0x40040f1	      0xf644240801	                  test byte [rsp + 8], 1	      3661	gui.c	FUNCTION_53	IF_5	IF_21	IF_23
0x40040f6	            0x7507	                           jne 0x40040ff	      3661	gui.c	FUNCTION_53	IF_5	IF_21	IF_23
0x40040f8	    0x48892d000000	            mov qword [0x040040ff], rbp 	      3662	gui.c	FUNCTION_53	IF_5	IF_21	IF_23
0x40040ff	      0xf644240802	                  test byte [rsp + 8], 2	      3663	gui.c	FUNCTION_53	IF_5	IF_21	IF_24
0x4004104	            0x750a	                           jne 0x4004110	      3663	gui.c	FUNCTION_53	IF_5	IF_21	IF_24
0x4004106	    0x48891d000000	            mov qword [0x0400410d], rbx 	      3664	gui.c	FUNCTION_53	IF_5	IF_21	IF_24
0x400410d	           0xf1f00	                         nop dword [rax]	      3664	gui.c	FUNCTION_53	IF_5	IF_21	IF_24
0x4004110	    0x488b05000000	            mov rax, qword [0x04004117] 	      3669	gui.c	FUNCTION_53	IF_5	IF_25	CALL_17
0x4004117	    0x8b989c000000	            mov ebx, dword [rax + 0x9c] 	      3669	gui.c	FUNCTION_53	IF_5	IF_25	CALL_17
0x400411d	      0xe800000000	                          call 0x4004122	      3669	gui.c	FUNCTION_53	IF_5	IF_25	CALL_17
0x4004122	            0x39c3	                            cmp ebx, eax	      3669	gui.c	FUNCTION_53	IF_5	IF_25	CALL_17
0x4004124	     0xf843efdffff	                            je 0x4003e68	      3669	gui.c	FUNCTION_53	IF_5	IF_25	CALL_17
0x400412a	        0x4883c418	                           add rsp, 0x18	      3672	gui.c	FUNCTION_53
0x400412e	              0x5b	                                 pop rbx	      3672	gui.c	FUNCTION_53
0x400412f	              0x5d	                                 pop rbp	      3672	gui.c	FUNCTION_53
0x4004130	            0x415c	                                 pop r12	      3672	gui.c	FUNCTION_53
0x4004132	            0x415d	                                 pop r13	      3672	gui.c	FUNCTION_53
0x4004134	            0x415e	                                 pop r14	      3672	gui.c	FUNCTION_53
0x4004136	            0x415f	                                 pop r15	      3672	gui.c	FUNCTION_53
0x4004138	      0xe900000000	                           jmp 0x400413d	      3670	gui.c	FUNCTION_53	IF_5	CALL_18
0x400413d	           0xf1f00	                         nop dword [rax]	      3670	gui.c	FUNCTION_53	IF_5	CALL_18
0x4004140	      0xbe67000000	                           mov esi, 0x67	      3474	gui.c	FUNCTION_53	IF_1	CALL_1
0x4004145	          0x4889fd	                            mov rbp, rdi	      3474	gui.c	FUNCTION_53	IF_1	CALL_1
0x4004148	      0xe800000000	                          call 0x400414d	      3474	gui.c	FUNCTION_53	IF_1	CALL_1
0x400414d	    0x488b3d000000	            mov rdi, qword [0x04004154] 	      3475	gui.c	FUNCTION_53	IF_1	CALL_2
0x4004154	          0x4889c3	                            mov rbx, rax	      3474	gui.c	FUNCTION_53	IF_1	CALL_1
0x4004157	      0xbe67000000	                           mov esi, 0x67	      3475	gui.c	FUNCTION_53	IF_1	CALL_2
0x400415c	      0xe800000000	                          call 0x4004161	      3475	gui.c	FUNCTION_53	IF_1	CALL_2
0x4004161	          0x4885db	                           test rbx, rbx	      3476	gui.c	FUNCTION_53	IF_1	IF_2
0x4004164	    0x488b1d000000	            mov rbx, qword [0x0400416b] 	      3478	gui.c	FUNCTION_53	IF_1	IF_2
0x400416b	           0xf95c2	                                setne dl	      3476	gui.c	FUNCTION_53	IF_1	IF_2
0x400416e	          0x4885c0	                           test rax, rax	      3476	gui.c	FUNCTION_53	IF_1	IF_2
0x4004171	           0xf95c0	                                setne al	      3476	gui.c	FUNCTION_53	IF_1	IF_2
0x4004174	            0x38c2	                              cmp dl, al	      3476	gui.c	FUNCTION_53	IF_1	IF_2
0x4004176	     0xf847efcffff	                            je 0x4003dfa	      3476	gui.c	FUNCTION_53	IF_1	IF_2
0x400417c	      0xbf3f000000	                           mov edi, 0x3f	      3480	gui.c	FUNCTION_53	IF_1	IF_2	CALL_3
0x4004181	    0x48892d000000	            mov qword [0x04004188], rbp 	      3479	gui.c	FUNCTION_53	IF_1	IF_2
0x4004188	      0xe800000000	                          call 0x400418d	      3480	gui.c	FUNCTION_53	IF_1	IF_2	CALL_3
0x400418d	    0x48891d000000	            mov qword [0x04004194], rbx 	      3481	gui.c	FUNCTION_53	IF_1	IF_2
0x4004194	      0xe961fcffff	                           jmp 0x4003dfa	      3481	gui.c	FUNCTION_53	IF_1	IF_2
0x4004199	      0xe8b2c7ffff	        call sym.gui_use_tabline.part.10	      3481	gui.c	FUNCTION_53	IF_1	IF_2
0x400419e	            0x85c0	                           test eax, eax	      3556	gui.c	FUNCTION_53	IF_5	IF_6	IF_8	CALL_9
0x40041a0	     0xf84d7fdffff	                            je 0x4003f7d	      3556	gui.c	FUNCTION_53	IF_5	IF_6	IF_8	CALL_9
0x40041a6	    0xc74424080100	                  mov dword [rsp + 8], 1	      3553	gui.c	FUNCTION_53	IF_5	IF_6
0x40041ae	      0xe9dcfdffff	                           jmp 0x4003f8f	      3553	gui.c	FUNCTION_53	IF_5	IF_6
0x40041b3	       0xf1f440000	                   nop dword [rax + rax]	      3553	gui.c	FUNCTION_53	IF_5	IF_6
0x40041b8	    0x488b05000000	            mov rax, qword [0x040041bf] 	      3569	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x40041bf	          0x4963f4	                        movsxd rsi, r12d	      3569	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x40041c2	        0x3b54b048	    cmp edx, dword [rax + rsi*4 + 0x48] 	      3568	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x40041c6	     0xf85e4fdffff	                           jne 0x4003fb0	      3568	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x40041cc	      0xe946feffff	                           jmp 0x4004017	      3568	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x40041d1	     0xf1f80000000	                         nop dword [rax]	      3568	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x40041d8	    0x488b05000000	            mov rax, qword [0x040041df] 	      3568	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x40041df	      0xe933feffff	                           jmp 0x4004017	      3568	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x40041e4	         0xf1f4000	                         nop dword [rax]	      3568	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x40041e8	    0x44393d000000	           cmp dword [0x040041ef], r15d 	      3631	gui.c	FUNCTION_53	IF_5	IF_20
0x40041ef	            0x740f	                            je 0x4004200	      3631	gui.c	FUNCTION_53	IF_5	IF_20
0x40041f1	          0x4489ff	                           mov edi, r15d	      3633	gui.c	FUNCTION_53	IF_5	IF_20	CALL_14
0x40041f4	      0xe800000000	                          call 0x40041f9	      3633	gui.c	FUNCTION_53	IF_5	IF_20	CALL_14
0x40041f9	    0x44893d000000	           mov dword [0x04004200], r15d 	      3634	gui.c	FUNCTION_53	IF_5	IF_20
0x4004200	        0x8b542408	                mov edx, dword [rsp + 8]	      3637	gui.c	FUNCTION_53	IF_5	IF_21
0x4004204	            0x85d2	                           test edx, edx	      3637	gui.c	FUNCTION_53	IF_5	IF_21
0x4004206	     0xf8404ffffff	                            je 0x4004110	      3637	gui.c	FUNCTION_53	IF_5	IF_21
0x400420c	      0xe9aafeffff	                           jmp 0x40040bb	      3637	gui.c	FUNCTION_53	IF_5	IF_21
0x4004211	     0xf1f80000000	                         nop dword [rax]	      3637	gui.c	FUNCTION_53	IF_5	IF_21
0x4004218	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      3540	gui.c	FUNCTION_53	IF_5
0x4004220	    0xc74424080000	                  mov dword [rsp + 8], 0	      3539	gui.c	FUNCTION_53	IF_5
0x4004228	      0xe962fdffff	                           jmp 0x4003f8f	      3539	gui.c	FUNCTION_53	IF_5
0x400422d	            0x89d6	                            mov esi, edx	      3572	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_10	CALL_10
0x400422f	      0xbf00000000	                              mov edi, 0	      3572	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_10	CALL_10
0x4004234	      0xe800000000	                          call 0x4004239	      3572	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_10	CALL_10
0x4004239	    0x8b95c0000000	            mov edx, dword [rbp + 0xc0] 	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x400423f	    0x3b1500000000	            cmp edx, dword [0x04004245] 	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x4004245	            0x7491	                            je 0x40041d8	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x4004247	      0x834c240801	                   or dword [rsp + 8], 1	      3584	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_12
0x400424c	            0x85d2	                           test edx, edx	      3587	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x400424e	    0x488b05000000	            mov rax, qword [0x04004255] 	      3591	gui.c	FUNCTION_53	IF_5	FOR_3
0x4004255	     0xf84bcfdffff	                            je 0x4004017	      3587	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x400425b	          0x895050	             mov dword [rax + 0x50], edx	      3591	gui.c	FUNCTION_53	IF_5	FOR_3
0x400425e	    0x891500000000	            mov dword [0x04004264], edx 	      3592	gui.c	FUNCTION_53	IF_5	FOR_3
0x4004264	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      3588	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x400426c	      0xe9c4fdffff	                           jmp 0x4004035	      3588	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
gui_send_mouse_event	IF,32:SWITCH,2:functions,0:CALL,26:WHILE,0:ELSE,9:FOR,0:DO,0	518
0x4002290	            0x4157	                                push r15	      3087	gui.c	FUNCTION_50
0x4002292	            0x4156	                                push r14	      3087	gui.c	FUNCTION_50
0x4002294	            0x4155	                                push r13	      3087	gui.c	FUNCTION_50
0x4002296	            0x4154	                                push r12	      3087	gui.c	FUNCTION_50
0x4002298	          0x4189f5	                           mov r13d, esi	      3087	gui.c	FUNCTION_50
0x400229b	              0x55	                                push rbp	      3087	gui.c	FUNCTION_50
0x400229c	              0x53	                                push rbx	      3087	gui.c	FUNCTION_50
0x400229d	          0x4189d4	                           mov r12d, edx	      3087	gui.c	FUNCTION_50
0x40022a0	          0x4489c5	                            mov ebp, r8d	      3087	gui.c	FUNCTION_50
0x40022a3	        0x4883ec48	                           sub rsp, 0x48	      3087	gui.c	FUNCTION_50
0x40022a7	    0x64488b042528	                mov rax, qword fs:[0x28]	      3087	gui.c	FUNCTION_50
0x40022b0	      0x4889442438	             mov qword [rsp + 0x38], rax	      3087	gui.c	FUNCTION_50
0x40022b5	            0x31c0	                            xor eax, eax	      3087	gui.c	FUNCTION_50
0x40022b7	    0x81ff00030000	                          cmp edi, 0x300	      3102	gui.c	FUNCTION_50	SWITCH_1
0x40022bd	     0xf8465040000	                            je 0x4002728	      3102	gui.c	FUNCTION_50	SWITCH_1
0x40022c3	            0x89fb	                            mov ebx, edi	      3102	gui.c	FUNCTION_50	SWITCH_1
0x40022c5	     0xf8ef5020000	                           jle 0x40025c0	      3102	gui.c	FUNCTION_50	SWITCH_1
0x40022cb	    0x81ff00050000	                          cmp edi, 0x500	      3102	gui.c	FUNCTION_50	SWITCH_1
0x40022d1	     0xf84f9030000	                            je 0x40026d0	      3102	gui.c	FUNCTION_50	SWITCH_1
0x40022d7	    0x81ff00060000	                          cmp edi, 0x600	      3102	gui.c	FUNCTION_50	SWITCH_1
0x40022dd	     0xf8435040000	                            je 0x4002718	      3102	gui.c	FUNCTION_50	SWITCH_1
0x40022e3	    0x81ff00040000	                          cmp edi, 0x400	      3102	gui.c	FUNCTION_50	SWITCH_1
0x40022e9	     0xf84f1030000	                            je 0x40026e0	      3102	gui.c	FUNCTION_50	SWITCH_1
0x40022ef	    0x66833d000000	                cmp word [0x040022f7], 1	      3160	gui.c	FUNCTION_50	IF_6
0x40022f7	     0xf849b040000	                            je 0x4002798	      3160	gui.c	FUNCTION_50	IF_6
0x40022fd	        0x894c240c	              mov dword [rsp + 0xc], ecx	      3160	gui.c	FUNCTION_50	IF_6
0x4002301	      0xe800000000	                          call 0x4002306	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002306	          0x83f850	                           cmp eax, 0x50	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002309	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x400230d	     0xf8445050000	                            je 0x4002858	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002313	     0xf8e4f040000	                           jle 0x4002768	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002319	      0x3d01010000	                          cmp eax, 0x101	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x400231e	     0xf8415040000	                            je 0x4002739	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002324	     0xf8e36060000	                           jle 0x4002960	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x400232a	      0x3d00030000	                          cmp eax, 0x300	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x400232f	     0xf8470050000	                            je 0x40028a5	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002335	     0xf8e5f050000	                           jle 0x400289a	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x400233b	      0x3d00100000	                         cmp eax, 0x1000	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002340	     0xf85ec030000	                           jne 0x4002732	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002346	    0x41bf76000000	                          mov r15d, 0x76	      3175	gui.c	FUNCTION_50	SWITCH_2
0x400234c	    0x8b0500000000	            mov eax, dword [0x04002352] 	      3217	gui.c	FUNCTION_50	IF_9
0x4002352	            0x89c2	                            mov edx, eax	      3217	gui.c	FUNCTION_50	IF_9
0x4002354	          0x80e6fe	                            and dh, 0xfe	      3217	gui.c	FUNCTION_50	IF_9
0x4002357	          0x83fa01	                              cmp edx, 1	      3217	gui.c	FUNCTION_50	IF_9
0x400235a	            0x7404	                            je 0x4002360	      3217	gui.c	FUNCTION_50	IF_9
0x400235c	            0xa810	                           test al, 0x10	      3217	gui.c	FUNCTION_50	IF_9
0x400235e	            0x7450	                            je 0x40023b0	      3217	gui.c	FUNCTION_50	IF_9
0x4002360	          0x4489e0	                           mov eax, r12d	      3219	gui.c	FUNCTION_50	IF_9
0x4002363	    0x2b0500000000	             sub eax, dword [0x04002369]	      3219	gui.c	FUNCTION_50	IF_9
0x4002369	    0x488b35000000	            mov rsi, qword [0x04002370] 	      3219	gui.c	FUNCTION_50	IF_9
0x4002370	              0x99	                                     cdq	      3219	gui.c	FUNCTION_50	IF_9
0x4002371	    0xf73d00000000	                 idiv dword [0x04002377]	      3219	gui.c	FUNCTION_50	IF_9
0x4002377	    0x488b15000000	            mov rdx, qword [0x0400237e] 	      3219	gui.c	FUNCTION_50	IF_9
0x400237e	    0x8b929c000000	            mov edx, dword [rdx + 0x9c] 	      3219	gui.c	FUNCTION_50	IF_9
0x4002384	           0x3560c	              add edx, dword [rsi + 0xc]	      3219	gui.c	FUNCTION_50	IF_9
0x4002387	            0x39d0	                            cmp eax, edx	      3219	gui.c	FUNCTION_50	IF_9
0x4002389	            0x7c25	                            jl 0x40023b0	      3219	gui.c	FUNCTION_50	IF_9
0x400238b	          0x83fb43	                           cmp ebx, 0x43	      3219	gui.c	FUNCTION_50	IF_9
0x400238e	            0x7420	                            je 0x40023b0	      3219	gui.c	FUNCTION_50	IF_9
0x4002390	    0x8b3d00000000	            mov edi, dword [0x04002396] 	      3221	gui.c	FUNCTION_50	IF_9
0x4002396	            0x85ff	                           test edi, edi	      3221	gui.c	FUNCTION_50	IF_9
0x4002398	            0x7516	                           jne 0x40023b0	      3221	gui.c	FUNCTION_50	IF_9
0x400239a	    0x8b3500000000	            mov esi, dword [0x040023a0] 	      3225	gui.c	FUNCTION_50	IF_9
0x40023a0	      0xb820000000	                           mov eax, 0x20	      3225	gui.c	FUNCTION_50	IF_9
0x40023a5	            0x85f6	                           test esi, esi	      3225	gui.c	FUNCTION_50	IF_9
0x40023a7	        0x440f44f8	                         cmove r15d, eax	      3225	gui.c	FUNCTION_50	IF_9
0x40023ab	       0xf1f440000	                   nop dword [rax + rax]	      3225	gui.c	FUNCTION_50	IF_9
0x40023b0	          0x4189ee	                           mov r14d, ebp	      3230	gui.c	FUNCTION_50	IF_10
0x40023b3	    0x8b1500000000	            mov edx, dword [0x040023b9] 	      3236	gui.c	FUNCTION_50	IF_11
0x40023b9	      0xb878000000	                           mov eax, 0x78	      3231	gui.c	FUNCTION_50	IF_10
0x40023be	        0x4183e614	                          and r14d, 0x14	      3230	gui.c	FUNCTION_50	IF_10
0x40023c2	        0x894c240c	              mov dword [rsp + 0xc], ecx	      3230	gui.c	FUNCTION_50	IF_10
0x40023c6	        0x4183fe14	                          cmp r14d, 0x14	      3231	gui.c	FUNCTION_50	IF_10
0x40023ca	        0x440f44f8	                         cmove r15d, eax	      3231	gui.c	FUNCTION_50	IF_10
0x40023ce	            0x85d2	                           test edx, edx	      3236	gui.c	FUNCTION_50	IF_11
0x40023d0	     0xf8572030000	                           jne 0x4002748	      3236	gui.c	FUNCTION_50	IF_11
0x40023d6	          0x4489ff	                           mov edi, r15d	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x40023d9	      0xe800000000	                          call 0x40023de	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x40023de	            0x85c0	                           test eax, eax	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x40023e0	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x40023e4	     0xf8446040000	                            je 0x4002830	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x40023ea	        0x4183ff63	                          cmp r15d, 0x63	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x40023ee	     0xf85dc030000	                           jne 0x40027d0	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x40023f4	    0x8b0500000000	            mov eax, dword [0x040023fa] 	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x40023fa	            0x85c0	                           test eax, eax	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x40023fc	            0x740d	                            je 0x400240b	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x40023fe	    0xf60500000000	               test byte [0x04002405], 1	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x4002405	     0xf85df010000	                           jne 0x40025ea	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x400240b	        0x894c240c	              mov dword [rsp + 0xc], ecx	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x400240f	      0xe800000000	                          call 0x4002414	      3256	gui.c	FUNCTION_50	IF_12	IF_14	CALL_12
0x4002414	            0x85c0	                           test eax, eax	      3256	gui.c	FUNCTION_50	IF_12	IF_14	CALL_12
0x4002416	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      3256	gui.c	FUNCTION_50	IF_12	IF_14	CALL_12
0x400241a	     0xf84d8030000	                            je 0x40027f8	      3256	gui.c	FUNCTION_50	IF_12	IF_14	CALL_12
0x4002420	            0x85db	                           test ebx, ebx	      3256	gui.c	FUNCTION_50	IF_12	IF_14	CALL_12
0x4002422	     0xf8528050000	                           jne 0x4002950	      3256	gui.c	FUNCTION_50	IF_12	IF_14	CALL_12
0x4002428	        0x4183fe04	                             cmp r14d, 4	      3257	gui.c	FUNCTION_50	IF_12	IF_14
0x400242c	     0xf849d040000	                            je 0x40028cf	      3257	gui.c	FUNCTION_50	IF_12	IF_14
0x4002432	    0x8b3d00000000	            mov edi, dword [0x04002438] 	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4002438	          0x4489e0	                           mov eax, r12d	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x400243b	          0x4531f6	                          xor r14d, r14d	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x400243e	            0x31db	                            xor ebx, ebx	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4002440	            0x29f8	                            sub eax, edi	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4002442	              0x99	                                     cdq	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4002443	    0xf73d00000000	                 idiv dword [0x04002449]	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4002449	            0x89c6	                            mov esi, eax	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x400244b	          0x4489e8	                           mov eax, r13d	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x400244e	            0x29f8	                            sub eax, edi	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4002450	              0x99	                                     cdq	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4002451	    0xf73d00000000	                 idiv dword [0x04002457]	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4002457	            0x89ca	                            mov edx, ecx	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4002459	            0x89c7	                            mov edi, eax	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x400245b	      0xe800000000	                          call 0x4002460	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4002460	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      3290	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18
0x4002468	          0x4489ff	                           mov edi, r15d	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x400246b	      0xe800000000	                          call 0x4002470	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x4002470	            0x85c0	                           test eax, eax	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x4002472	     0xf8472010000	                            je 0x40025ea	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x4002478	          0x4584f6	                         test r14b, r14b	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x400247b	     0xf8569010000	                           jne 0x40025ea	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x4002481	      0x448b74240c	            mov r14d, dword [rsp + 0xc] 	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x4002486	        0x4183f601	                             xor r14d, 1	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x400248a	        0x4183e601	                             and r14d, 1	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x400248e	        0x4183ff63	                          cmp r15d, 0x63	      3298	gui.c	FUNCTION_50	IF_12	IF_19	IF_21
0x4002492	            0x740c	                            je 0x40024a0	      3298	gui.c	FUNCTION_50	IF_12	IF_19	IF_21
0x4002494	            0x31db	                            xor ebx, ebx	      3299	gui.c	FUNCTION_50	IF_12	IF_19	IF_21
0x4002496	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3299	gui.c	FUNCTION_50	IF_12	IF_19	IF_21
0x40024a0	            0x31c9	                            xor ecx, ecx	      3299	gui.c	FUNCTION_50	IF_12	IF_19	IF_21
0x40024a2	    0x66833d000000	                cmp word [0x040024aa], 0	      3304	gui.c	FUNCTION_50	IF_22
0x40024aa	            0x7409	                            je 0x40024b5	      3304	gui.c	FUNCTION_50	IF_22
0x40024ac	          0x4584f6	                         test r14b, r14b	      3304	gui.c	FUNCTION_50	IF_22
0x40024af	     0xf8529030000	                           jne 0x40027de	      3304	gui.c	FUNCTION_50	IF_22
0x40024b5	    0x8b0500000000	            mov eax, dword [0x040024bb] 	      3309	gui.c	FUNCTION_50	IF_23
0x40024bb	            0x85c0	                           test eax, eax	      3309	gui.c	FUNCTION_50	IF_23
0x40024bd	     0xf8527010000	                           jne 0x40025ea	      3309	gui.c	FUNCTION_50	IF_23
0x40024c3	      0x488d54241c	                   lea rdx, [rsp + 0x1c]	      3312	gui.c	FUNCTION_50	CALL_23
0x40024c8	          0x4489ef	                           mov edi, r13d	      3312	gui.c	FUNCTION_50	CALL_23
0x40024cb	          0x4489e6	                           mov esi, r12d	      3312	gui.c	FUNCTION_50	CALL_23
0x40024ce	        0x894c240c	              mov dword [rsp + 0xc], ecx	      3312	gui.c	FUNCTION_50	CALL_23
0x40024d2	      0xe800000000	                          call 0x40024d7	      3312	gui.c	FUNCTION_50	CALL_23
0x40024d7	          0x83fb43	                           cmp ebx, 0x43	      3318	gui.c	FUNCTION_50	IF_24
0x40024da	          0x4189c5	                           mov r13d, eax	      3312	gui.c	FUNCTION_50	CALL_23
0x40024dd	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      3318	gui.c	FUNCTION_50	IF_24
0x40024e1	     0xf849d040000	                            je 0x4002984	      3318	gui.c	FUNCTION_50	IF_24
0x40024e7	          0x8d407f	                   lea eax, [rax + 0x7f]	      3318	gui.c	FUNCTION_50	IF_24
0x40024ea	          0x4585ed	                         test r13d, r13d	      3318	gui.c	FUNCTION_50	IF_24
0x40024ed	    0x4c8b05000000	              mov r8, qword [0x040024f4]	      3332	gui.c	FUNCTION_50	IF_27
0x40024f4	        0x8b54241c	            mov edx, dword [rsp + 0x1c] 	      3332	gui.c	FUNCTION_50	IF_27
0x40024f8	        0x410f49c5	                        cmovns eax, r13d	      3332	gui.c	FUNCTION_50	IF_27
0x40024fc	          0xc1f807	                              sar eax, 7	      3332	gui.c	FUNCTION_50	IF_27
0x40024ff	        0x498b7878	              mov rdi, qword [r8 + 0x78]	      3332	gui.c	FUNCTION_50	IF_27
0x4002503	          0x83c021	                           add eax, 0x21	      3332	gui.c	FUNCTION_50	IF_27
0x4002506	    0x483b3d000000	            cmp rdi, qword [0x0400250d] 	      3332	gui.c	FUNCTION_50	IF_27
0x400250d	     0xf84d9040000	                            je 0x40029ec	      3332	gui.c	FUNCTION_50	IF_27
0x4002513	          0x4489e9	                           mov ecx, r13d	      3332	gui.c	FUNCTION_50	IF_27
0x4002516	          0xc1f91f	                           sar ecx, 0x1f	      3332	gui.c	FUNCTION_50	IF_27
0x4002519	          0xc1e919	                           shr ecx, 0x19	      3332	gui.c	FUNCTION_50	IF_27
0x400251c	      0x418d740d00	                    lea esi, [r13 + rcx]	      3332	gui.c	FUNCTION_50	IF_27
0x4002521	          0x83e67f	                           and esi, 0x7f	      3332	gui.c	FUNCTION_50	IF_27
0x4002524	            0x29ce	                            sub esi, ecx	      3332	gui.c	FUNCTION_50	IF_27
0x4002526	          0x83c621	                           add esi, 0x21	      3332	gui.c	FUNCTION_50	IF_27
0x4002529	            0x89d9	                            mov ecx, ebx	      3342	gui.c	FUNCTION_50	IF_28
0x400252b	      0xc64424209b	            mov byte [rsp + 0x20], 0x9b 	      3339	gui.c	FUNCTION_50
0x4002530	      0xc6442421fb	            mov byte [rsp + 0x21], 0xfb 	      3340	gui.c	FUNCTION_50
0x4002535	          0x83e1bf	                     and ecx, 0xffffffbf	      3342	gui.c	FUNCTION_50	IF_28
0x4002538	      0xc644242258	            mov byte [rsp + 0x22], 0x58 	      3341	gui.c	FUNCTION_50
0x400253d	          0x83f903	                              cmp ecx, 3	      3342	gui.c	FUNCTION_50	IF_28
0x4002540	     0xf8530050000	                           jne 0x4002a76	      3342	gui.c	FUNCTION_50	IF_28
0x4002546	          0x8d4a7f	                   lea ecx, [rdx + 0x7f]	      3058	gui.c	FUNCTION_49
0x4002549	             0x9dd	                             or ebp, ebx	      3369	gui.c	FUNCTION_50
0x400254b	            0x85d2	                           test edx, edx	      3058	gui.c	FUNCTION_49
0x400254d	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3371	gui.c	FUNCTION_50	CALL_26
0x4002552	      0x4088742427	              mov byte [rsp + 0x27], sil	      3061	gui.c	FUNCTION_49
0x4002557	      0xbe08000000	                              mov esi, 8	      3371	gui.c	FUNCTION_50	CALL_26
0x400255c	           0xf49ca	                         cmovns ecx, edx	      3058	gui.c	FUNCTION_49
0x400255f	        0x88442426	               mov byte [rsp + 0x26], al	      3060	gui.c	FUNCTION_49
0x4002563	      0x40886c2423	              mov byte [rsp + 0x23], bpl	      3369	gui.c	FUNCTION_50
0x4002568	          0xc1f907	                              sar ecx, 7	      3058	gui.c	FUNCTION_49
0x400256b	          0x83c121	                           add ecx, 0x21	      3058	gui.c	FUNCTION_49
0x400256e	        0x884c2424	               mov byte [rsp + 0x24], cl	      3058	gui.c	FUNCTION_49
0x4002572	            0x89d1	                            mov ecx, edx	      3059	gui.c	FUNCTION_49
0x4002574	          0xc1f91f	                           sar ecx, 0x1f	      3059	gui.c	FUNCTION_49
0x4002577	          0xc1e919	                           shr ecx, 0x19	      3059	gui.c	FUNCTION_49
0x400257a	             0x1ca	                            add edx, ecx	      3059	gui.c	FUNCTION_49
0x400257c	          0x83e27f	                           and edx, 0x7f	      3059	gui.c	FUNCTION_49
0x400257f	            0x29ca	                            sub edx, ecx	      3059	gui.c	FUNCTION_49
0x4002581	          0x83c221	                           add edx, 0x21	      3059	gui.c	FUNCTION_49
0x4002584	        0x88542425	               mov byte [rsp + 0x25], dl	      3059	gui.c	FUNCTION_49
0x4002588	      0xe800000000	                          call 0x400258d	      3371	gui.c	FUNCTION_50	CALL_26
0x400258d	      0xb800000000	                              mov eax, 0	      3374	gui.c	FUNCTION_50	IF_32
0x4002592	          0x4585ed	                         test r13d, r13d	      3374	gui.c	FUNCTION_50	IF_32
0x4002595	    0xc70500000000	     mov dword [0x0400259f], 0xffffffff 	      3384	gui.c	FUNCTION_50	ELSE_9
0x400259f	        0x440f48e8	                         cmovs r13d, eax	      3374	gui.c	FUNCTION_50	IF_32
0x40025a3	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      3377	gui.c	FUNCTION_50	ELSE_9
0x40025a7	    0x44892d000000	           mov dword [0x040025ae], r13d 	      3374	gui.c	FUNCTION_50	IF_32
0x40025ae	    0x890500000000	            mov dword [0x040025b4], eax 	      3377	gui.c	FUNCTION_50	ELSE_9
0x40025b4	            0xeb34	                           jmp 0x40025ea	      3377	gui.c	FUNCTION_50	ELSE_9
0x40025b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3377	gui.c	FUNCTION_50	ELSE_9
0x40025c0	    0x81ff00010000	                          cmp edi, 0x100	      3102	gui.c	FUNCTION_50	SWITCH_1
0x40025c6	     0xf843c010000	                            je 0x4002708	      3102	gui.c	FUNCTION_50	SWITCH_1
0x40025cc	    0x81ff00020000	                          cmp edi, 0x200	      3102	gui.c	FUNCTION_50	SWITCH_1
0x40025d2	      0xb84c000000	                           mov eax, 0x4c	      3114	gui.c	FUNCTION_50	SWITCH_1
0x40025d7	     0xf8512fdffff	                           jne 0x40022ef	      3102	gui.c	FUNCTION_50	SWITCH_1
0x40025dd	           0xf1f00	                         nop dword [rax]	      3102	gui.c	FUNCTION_50	SWITCH_1
0x40025e0	    0x8b0d00000000	            mov ecx, dword [0x040025e6] 	      3124	gui.c	FUNCTION_50	SWITCH_1	IF_1
0x40025e6	            0x85c9	                           test ecx, ecx	      3124	gui.c	FUNCTION_50	SWITCH_1	IF_1
0x40025e8	            0x7426	                            je 0x4002610	      3124	gui.c	FUNCTION_50	SWITCH_1	IF_1
0x40025ea	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      3386	gui.c	FUNCTION_50	ELSE_9
0x40025ef	    0x644833042528	                xor rax, qword fs:[0x28]	      3386	gui.c	FUNCTION_50	ELSE_9
0x40025f8	     0xf851d050000	                           jne 0x4002b1b	      3386	gui.c	FUNCTION_50	ELSE_9
0x40025fe	        0x4883c448	                           add rsp, 0x48	      3386	gui.c	FUNCTION_50	ELSE_9
0x4002602	              0x5b	                                 pop rbx	      3386	gui.c	FUNCTION_50	ELSE_9
0x4002603	              0x5d	                                 pop rbp	      3386	gui.c	FUNCTION_50	ELSE_9
0x4002604	            0x415c	                                 pop r12	      3386	gui.c	FUNCTION_50	ELSE_9
0x4002606	            0x415d	                                 pop r13	      3386	gui.c	FUNCTION_50	ELSE_9
0x4002608	            0x415e	                                 pop r14	      3386	gui.c	FUNCTION_50	ELSE_9
0x400260a	            0x415f	                                 pop r15	      3386	gui.c	FUNCTION_50	ELSE_9
0x400260c	              0xc3	                                     ret	      3386	gui.c	FUNCTION_50	ELSE_9
0x400260d	           0xf1f00	                         nop dword [rax]	      3386	gui.c	FUNCTION_50	ELSE_9
0x4002610	      0x488d54241c	                   lea rdx, [rsp + 0x1c]	      3133	gui.c	FUNCTION_50	SWITCH_1	CALL_1
0x4002615	          0x4489e6	                           mov esi, r12d	      3133	gui.c	FUNCTION_50	SWITCH_1	CALL_1
0x4002618	          0x4489ef	                           mov edi, r13d	      3133	gui.c	FUNCTION_50	SWITCH_1	CALL_1
0x400261b	      0xc64424239b	            mov byte [rsp + 0x23], 0x9b 	      3127	gui.c	FUNCTION_50	SWITCH_1
0x4002620	      0xc6442424fd	            mov byte [rsp + 0x24], 0xfd 	      3128	gui.c	FUNCTION_50	SWITCH_1
0x4002625	        0x88442425	               mov byte [rsp + 0x25], al	      3129	gui.c	FUNCTION_50	SWITCH_1
0x4002629	      0xe800000000	                          call 0x400262e	      3133	gui.c	FUNCTION_50	SWITCH_1	CALL_1
0x400262e	        0x8b54241c	            mov edx, dword [rsp + 0x1c] 	      3134	gui.c	FUNCTION_50	SWITCH_1
0x4002632	          0x8d4a7f	                   lea ecx, [rdx + 0x7f]	      3134	gui.c	FUNCTION_50	SWITCH_1
0x4002635	            0x85d2	                           test edx, edx	      3134	gui.c	FUNCTION_50	SWITCH_1
0x4002637	           0xf49ca	                         cmovns ecx, edx	      3134	gui.c	FUNCTION_50	SWITCH_1
0x400263a	          0xc1f907	                              sar ecx, 7	      3134	gui.c	FUNCTION_50	SWITCH_1
0x400263d	          0x83c121	                           add ecx, 0x21	      3134	gui.c	FUNCTION_50	SWITCH_1
0x4002640	        0x884c2426	               mov byte [rsp + 0x26], cl	      3134	gui.c	FUNCTION_50	SWITCH_1
0x4002644	            0x89d1	                            mov ecx, edx	      3135	gui.c	FUNCTION_50	SWITCH_1
0x4002646	          0xc1f91f	                           sar ecx, 0x1f	      3135	gui.c	FUNCTION_50	SWITCH_1
0x4002649	          0xc1e919	                           shr ecx, 0x19	      3135	gui.c	FUNCTION_50	SWITCH_1
0x400264c	             0x1ca	                            add edx, ecx	      3135	gui.c	FUNCTION_50	SWITCH_1
0x400264e	          0x83e27f	                           and edx, 0x7f	      3135	gui.c	FUNCTION_50	SWITCH_1
0x4002651	            0x29ca	                            sub edx, ecx	      3135	gui.c	FUNCTION_50	SWITCH_1
0x4002653	          0x83c221	                           add edx, 0x21	      3135	gui.c	FUNCTION_50	SWITCH_1
0x4002656	            0x85c0	                           test eax, eax	      3136	gui.c	FUNCTION_50	SWITCH_1
0x4002658	        0x88542427	               mov byte [rsp + 0x27], dl	      3135	gui.c	FUNCTION_50	SWITCH_1
0x400265c	          0x8d507f	                   lea edx, [rax + 0x7f]	      3136	gui.c	FUNCTION_50	SWITCH_1
0x400265f	           0xf49d0	                         cmovns edx, eax	      3136	gui.c	FUNCTION_50	SWITCH_1
0x4002662	          0xc1fa07	                              sar edx, 7	      3136	gui.c	FUNCTION_50	SWITCH_1
0x4002665	          0x83c221	                           add edx, 0x21	      3136	gui.c	FUNCTION_50	SWITCH_1
0x4002668	        0x88542428	               mov byte [rsp + 0x28], dl	      3136	gui.c	FUNCTION_50	SWITCH_1
0x400266c	              0x99	                                     cdq	      3137	gui.c	FUNCTION_50	SWITCH_1
0x400266d	          0xc1ea19	                           shr edx, 0x19	      3137	gui.c	FUNCTION_50	SWITCH_1
0x4002670	             0x1d0	                            add eax, edx	      3137	gui.c	FUNCTION_50	SWITCH_1
0x4002672	          0x83e07f	                           and eax, 0x7f	      3137	gui.c	FUNCTION_50	SWITCH_1
0x4002675	            0x29d0	                            sub eax, edx	      3137	gui.c	FUNCTION_50	SWITCH_1
0x4002677	          0x83c021	                           add eax, 0x21	      3137	gui.c	FUNCTION_50	SWITCH_1
0x400267a	            0x85ed	                           test ebp, ebp	      3139	gui.c	FUNCTION_50	SWITCH_1	IF_2
0x400267c	        0x88442429	               mov byte [rsp + 0x29], al	      3137	gui.c	FUNCTION_50	SWITCH_1
0x4002680	            0x746e	                            je 0x40026f0	      3139	gui.c	FUNCTION_50	SWITCH_1	IF_2
0x4002682	            0x89e8	                            mov eax, ebp	      3146	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_3
0x4002684	      0xc64424209b	            mov byte [rsp + 0x20], 0x9b 	      3143	gui.c	FUNCTION_50	SWITCH_1	ELSE_1
0x4002689	      0xc6442421fc	            mov byte [rsp + 0x21], 0xfc 	      3144	gui.c	FUNCTION_50	SWITCH_1	ELSE_1
0x400268e	          0x83e004	                              and eax, 4	      3146	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_3
0x4002691	          0x83f801	                              cmp eax, 1	      3145	gui.c	FUNCTION_50	SWITCH_1	ELSE_1
0x4002694	            0x19c0	                            sbb eax, eax	      3145	gui.c	FUNCTION_50	SWITCH_1	ELSE_1
0x4002696	            0xf7d0	                                 not eax	      3145	gui.c	FUNCTION_50	SWITCH_1	ELSE_1
0x4002698	          0x83e002	                              and eax, 2	      3145	gui.c	FUNCTION_50	SWITCH_1	ELSE_1
0x400269b	        0x40f6c510	                          test bpl, 0x10	      3148	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_4
0x400269f	        0x88442422	               mov byte [rsp + 0x22], al	      3145	gui.c	FUNCTION_50	SWITCH_1	ELSE_1
0x40026a3	            0x7405	                            je 0x40026aa	      3148	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_4
0x40026a5	      0x804c242204	                 or byte [rsp + 0x22], 4	      3149	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_4
0x40026aa	          0x83e508	                              and ebp, 8	      3150	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_5
0x40026ad	            0x7405	                            je 0x40026b4	      3150	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_5
0x40026af	      0x804c242208	                 or byte [rsp + 0x22], 8	      3151	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_5
0x40026b4	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3152	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	CALL_3
0x40026b9	      0xbe0a000000	                            mov esi, 0xa	      3152	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	CALL_3
0x40026be	      0xe800000000	                          call 0x40026c3	      3152	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	CALL_3
0x40026c3	      0xe922ffffff	                           jmp 0x40025ea	      3152	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	CALL_3
0x40026c8	     0xf1f84000000	                   nop dword [rax + rax]	      3152	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	CALL_3
0x40026d0	      0xb84d000000	                           mov eax, 0x4d	      3117	gui.c	FUNCTION_50	SWITCH_1
0x40026d5	      0xe906ffffff	                           jmp 0x40025e0	      3118	gui.c	FUNCTION_50	SWITCH_1
0x40026da	    0x660f1f440000	                    nop word [rax + rax]	      3118	gui.c	FUNCTION_50	SWITCH_1
0x40026e0	      0xb85c000000	                           mov eax, 0x5c	      3108	gui.c	FUNCTION_50	SWITCH_1
0x40026e5	      0xe9f6feffff	                           jmp 0x40025e0	      3108	gui.c	FUNCTION_50	SWITCH_1
0x40026ea	    0x660f1f440000	                    nop word [rax + rax]	      3108	gui.c	FUNCTION_50	SWITCH_1
0x40026f0	      0x488d7c2423	                   lea rdi, [rsp + 0x23]	      3140	gui.c	FUNCTION_50	SWITCH_1	CALL_2
0x40026f5	      0xbe07000000	                              mov esi, 7	      3140	gui.c	FUNCTION_50	SWITCH_1	CALL_2
0x40026fa	      0xe800000000	                          call 0x40026ff	      3140	gui.c	FUNCTION_50	SWITCH_1	CALL_2
0x40026ff	      0xe9e6feffff	                           jmp 0x40025ea	      3140	gui.c	FUNCTION_50	SWITCH_1	CALL_2
0x4002704	         0xf1f4000	                         nop dword [rax]	      3140	gui.c	FUNCTION_50	SWITCH_1	CALL_2
0x4002708	      0xb84b000000	                           mov eax, 0x4b	      3111	gui.c	FUNCTION_50	SWITCH_1
0x400270d	      0xe9cefeffff	                           jmp 0x40025e0	      3112	gui.c	FUNCTION_50	SWITCH_1
0x4002712	    0x660f1f440000	                    nop word [rax + rax]	      3112	gui.c	FUNCTION_50	SWITCH_1
0x4002718	      0xb84e000000	                           mov eax, 0x4e	      3120	gui.c	FUNCTION_50	SWITCH_1
0x400271d	      0xe9befeffff	                           jmp 0x40025e0	      3120	gui.c	FUNCTION_50	SWITCH_1
0x4002722	    0x660f1f440000	                    nop word [rax + rax]	      3120	gui.c	FUNCTION_50	SWITCH_1
0x4002728	      0xb859000000	                           mov eax, 0x59	      3105	gui.c	FUNCTION_50	SWITCH_1
0x400272d	      0xe9aefeffff	                           jmp 0x40025e0	      3105	gui.c	FUNCTION_50	SWITCH_1
0x4002732	      0x3d00200000	                         cmp eax, 0x2000	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002737	            0x7551	                           jne 0x400278a	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002739	    0x41bf6e000000	                          mov r15d, 0x6e	      3174	gui.c	FUNCTION_50	SWITCH_2
0x400273f	      0xe908fcffff	                           jmp 0x400234c	      3174	gui.c	FUNCTION_50	SWITCH_2
0x4002744	         0xf1f4000	                         nop dword [rax]	      3174	gui.c	FUNCTION_50	SWITCH_2
0x4002748	      0xbf20000000	                           mov edi, 0x20	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x400274d	      0xe800000000	                          call 0x4002752	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x4002752	            0x85c0	                           test eax, eax	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x4002754	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x4002758	            0x7576	                           jne 0x40027d0	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x400275a	    0x41bf20000000	                          mov r15d, 0x20	      3237	gui.c	FUNCTION_50	IF_11
0x4002760	      0xe98ffcffff	                           jmp 0x40023f4	      3237	gui.c	FUNCTION_50	IF_11
0x4002765	           0xf1f00	                         nop dword [rax]	      3237	gui.c	FUNCTION_50	IF_11
0x4002768	          0x83f808	                              cmp eax, 8	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x400276b	     0xf84f7000000	                            je 0x4002868	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002771	     0xf8fc9000000	                            jg 0x4002840	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002777	          0x83f802	                              cmp eax, 2	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x400277a	     0xf84c6fbffff	                            je 0x4002346	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002780	          0x83f804	                              cmp eax, 4	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002783	            0x74b4	                            je 0x4002739	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002785	          0x83f801	                              cmp eax, 1	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002788	            0x74af	                            je 0x4002739	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x400278a	    0x41bf20000000	                          mov r15d, 0x20	      3208	gui.c	FUNCTION_50	SWITCH_2
0x4002790	      0xe9b7fbffff	                           jmp 0x400234c	      3209	gui.c	FUNCTION_50	SWITCH_2
0x4002795	           0xf1f00	                         nop dword [rax]	      3209	gui.c	FUNCTION_50	SWITCH_2
0x4002798	    0x8b3500000000	            mov esi, dword [0x0400279e] 	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x400279e	          0x4489e0	                           mov eax, r12d	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x40027a1	            0x89df	                            mov edi, ebx	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x40027a3	            0x29f0	                            sub eax, esi	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x40027a5	              0x99	                                     cdq	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x40027a6	    0xf73d00000000	                 idiv dword [0x040027ac]	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x40027ac	          0x4189c4	                           mov r12d, eax	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x40027af	          0x4489e8	                           mov eax, r13d	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x40027b2	            0x29f0	                            sub eax, esi	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x40027b4	              0x99	                                     cdq	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x40027b5	    0xf73d00000000	                 idiv dword [0x040027bb]	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x40027bb	          0x4489e2	                           mov edx, r12d	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x40027be	            0x89c6	                            mov esi, eax	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x40027c0	      0xe800000000	                          call 0x40027c5	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x40027c5	      0xe920feffff	                           jmp 0x40025ea	      3163	gui.c	FUNCTION_50	IF_6
0x40027ca	    0x660f1f440000	                    nop word [rax + rax]	      3163	gui.c	FUNCTION_50	IF_6
0x40027d0	    0x66833d000000	                cmp word [0x040027d8], 0	      3304	gui.c	FUNCTION_50	IF_22
0x40027d8	     0xf84d7fcffff	                            je 0x40024b5	      3304	gui.c	FUNCTION_50	IF_22
0x40027de	      0xbf00000000	                              mov edi, 0	      3305	gui.c	FUNCTION_50	CALL_22
0x40027e3	        0x894c240c	              mov dword [rsp + 0xc], ecx	      3305	gui.c	FUNCTION_50	CALL_22
0x40027e7	      0xe800000000	                          call 0x40027ec	      3305	gui.c	FUNCTION_50	CALL_22
0x40027ec	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      3305	gui.c	FUNCTION_50	CALL_22
0x40027f0	      0xe9c0fcffff	                           jmp 0x40024b5	      3305	gui.c	FUNCTION_50	CALL_22
0x40027f5	           0xf1f00	                         nop dword [rax]	      3305	gui.c	FUNCTION_50	CALL_22
0x40027f8	          0x83fb02	                              cmp ebx, 2	      3266	gui.c	FUNCTION_50	IF_12	IF_15
0x40027fb	     0xf84d1000000	                            je 0x40028d2	      3266	gui.c	FUNCTION_50	IF_12	IF_15
0x4002801	            0x85db	                           test ebx, ebx	      3287	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18
0x4002803	     0xf8429fcffff	                            je 0x4002432	      3287	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18
0x4002809	          0x83fb01	                              cmp ebx, 1	      3294	gui.c	FUNCTION_50	IF_12	IF_19
0x400280c	    0x41be01000000	                             mov r14d, 1	      3294	gui.c	FUNCTION_50	IF_12	IF_19
0x4002812	     0xf8488fcffff	                            je 0x40024a0	      3294	gui.c	FUNCTION_50	IF_12	IF_19
0x4002818	          0x83fb03	                              cmp ebx, 3	      3294	gui.c	FUNCTION_50	IF_12	IF_19
0x400281b	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      3294	gui.c	FUNCTION_50	IF_12	IF_19
0x4002823	        0x410f94c6	                               sete r14b	      3294	gui.c	FUNCTION_50	IF_12	IF_19
0x4002827	      0xe93cfcffff	                           jmp 0x4002468	      3294	gui.c	FUNCTION_50	IF_12	IF_19
0x400282c	         0xf1f4000	                         nop dword [rax]	      3294	gui.c	FUNCTION_50	IF_12	IF_19
0x4002830	        0x4183ff78	                          cmp r15d, 0x78	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x4002834	     0xf85bafbffff	                           jne 0x40023f4	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x400283a	      0xe9ccfbffff	                           jmp 0x400240b	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x400283f	              0x90	                                     nop	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x4002840	          0x83f828	                           cmp eax, 0x28	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002843	            0x7423	                            je 0x4002868	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002845	          0x83f830	                           cmp eax, 0x30	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002848	            0x740e	                            je 0x4002858	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x400284a	          0x83f810	                           cmp eax, 0x10	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x400284d	     0xf8537ffffff	                           jne 0x400278a	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002853	       0xf1f440000	                   nop dword [rax + rax]	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002858	    0x41bf69000000	                          mov r15d, 0x69	      3184	gui.c	FUNCTION_50	SWITCH_2
0x400285e	      0xe9e9faffff	                           jmp 0x400234c	      3184	gui.c	FUNCTION_50	SWITCH_2
0x4002863	       0xf1f440000	                   nop dword [rax + rax]	      3184	gui.c	FUNCTION_50	SWITCH_2
0x4002868	          0x4489e0	                           mov eax, r12d	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x400286b	    0x2b0500000000	             sub eax, dword [0x04002871]	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x4002871	              0x99	                                     cdq	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x4002872	    0xf73d00000000	                 idiv dword [0x04002878]	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x4002878	    0x3b0500000000	            cmp eax, dword [0x0400287e] 	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x400287e	            0x7d0f	                           jge 0x400288f	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x4002880	          0x83fb01	                              cmp ebx, 1	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x4002883	    0x41bf20000000	                          mov r15d, 0x20	      3202	gui.c	FUNCTION_50	SWITCH_2	IF_8
0x4002889	     0xf85bdfaffff	                           jne 0x400234c	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x400288f	    0x41bf63000000	                          mov r15d, 0x63	      3204	gui.c	FUNCTION_50	SWITCH_2	ELSE_3
0x4002895	      0xe9b2faffff	                           jmp 0x400234c	      3204	gui.c	FUNCTION_50	SWITCH_2	ELSE_3
0x400289a	      0x3d01020000	                          cmp eax, 0x201	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x400289f	     0xf85e5feffff	                           jne 0x400278a	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40028a5	          0x4489e0	                           mov eax, r12d	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x40028a8	    0x2b0500000000	             sub eax, dword [0x040028ae]	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x40028ae	          0x4531ff	                          xor r15d, r15d	      3190	gui.c	FUNCTION_50	SWITCH_2	IF_7
0x40028b1	              0x99	                                     cdq	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x40028b2	    0xf73d00000000	                 idiv dword [0x040028b8]	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x40028b8	    0x3b0500000000	            cmp eax, dword [0x040028be] 	      3190	gui.c	FUNCTION_50	SWITCH_2	IF_7
0x40028be	        0x410f9cc7	                               setl r15b	      3190	gui.c	FUNCTION_50	SWITCH_2	IF_7
0x40028c2	    0x468d3cbd6e00	                lea r15d, [r15*4 + 0x6e]	      3190	gui.c	FUNCTION_50	SWITCH_2	IF_7
0x40028ca	      0xe97dfaffff	                           jmp 0x400234c	      3190	gui.c	FUNCTION_50	SWITCH_2	IF_7
0x40028cf	          0x83e5fb	                     and ebp, 0xfffffffb	      3260	gui.c	FUNCTION_50	IF_12	IF_14
0x40028d2	    0x66833d000000	                cmp word [0x040028da], 0	      3268	gui.c	FUNCTION_50	IF_12	IF_15	IF_16
0x40028da	            0x752c	                           jne 0x4002908	      3268	gui.c	FUNCTION_50	IF_12	IF_15	IF_16
0x40028dc	    0xf60500000000	               test byte [0x040028e3], 8	      3270	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	IF_17
0x40028e3	     0xf84a5010000	                            je 0x4002a8e	      3270	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	IF_17
0x40028e9	    0x8b3d00000000	            mov edi, dword [0x040028ef] 	      3272	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	IF_17
0x40028ef	    0x8b3500000000	            mov esi, dword [0x040028f5] 	      3273	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	IF_17
0x40028f5	        0x897c241c	             mov dword [rsp + 0x1c], edi	      3272	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	IF_17
0x40028f9	            0x31d2	                            xor edx, edx	      3280	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	CALL_14
0x40028fb	        0x894c240c	              mov dword [rsp + 0xc], ecx	      3280	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	CALL_14
0x40028ff	      0xe800000000	                          call 0x4002904	      3280	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	CALL_14
0x4002904	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      3280	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	CALL_14
0x4002908	    0x8b3d00000000	            mov edi, dword [0x0400290e] 	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x400290e	          0x4489e0	                           mov eax, r12d	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4002911	          0x4531f6	                          xor r14d, r14d	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4002914	      0xbb02000000	                              mov ebx, 2	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4002919	            0x29f8	                            sub eax, edi	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x400291b	              0x99	                                     cdq	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x400291c	    0xf73d00000000	                 idiv dword [0x04002922]	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4002922	            0x89c6	                            mov esi, eax	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4002924	          0x4489e8	                           mov eax, r13d	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4002927	            0x29f8	                            sub eax, edi	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4002929	      0xbf02000000	                              mov edi, 2	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x400292e	              0x99	                                     cdq	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x400292f	    0xf73d00000000	                 idiv dword [0x04002935]	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4002935	            0x89f2	                            mov edx, esi	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4002937	            0x89c6	                            mov esi, eax	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4002939	      0xe800000000	                          call 0x400293e	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x400293e	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      3284	gui.c	FUNCTION_50	IF_12	IF_15
0x4002946	      0xe91dfbffff	                           jmp 0x4002468	      3284	gui.c	FUNCTION_50	IF_12	IF_15
0x400294b	       0xf1f440000	                   nop dword [rax + rax]	      3284	gui.c	FUNCTION_50	IF_12	IF_15
0x4002950	          0x83fb02	                              cmp ebx, 2	      3266	gui.c	FUNCTION_50	IF_12	IF_15
0x4002953	     0xf85b0feffff	                           jne 0x4002809	      3266	gui.c	FUNCTION_50	IF_12	IF_15
0x4002959	      0xe974ffffff	                           jmp 0x40028d2	      3266	gui.c	FUNCTION_50	IF_12	IF_15
0x400295e	            0x6690	                                     nop	      3266	gui.c	FUNCTION_50	IF_12	IF_15
0x4002960	      0x3dd0000000	                           cmp eax, 0xd0	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002965	     0xf84edfeffff	                            je 0x4002858	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x400296b	      0x3df0000000	                           cmp eax, 0xf0	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002970	     0xf84e2feffff	                            je 0x4002858	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002976	          0x83f870	                           cmp eax, 0x70	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002979	     0xf850bfeffff	                           jne 0x400278a	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x400297f	      0xe9d4feffff	                           jmp 0x4002858	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002984	    0x3b0500000000	            cmp eax, dword [0x0400298a] 	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x400298a	        0x8b54241c	            mov edx, dword [rsp + 0x1c] 	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x400298e	     0xf8422010000	                            je 0x4002ab6	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x4002994	          0x4585e4	                         test r12d, r12d	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x4002997	     0xf882a010000	                            js 0x4002ac7	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x400299d	        0x418d457f	                   lea eax, [r13 + 0x7f]	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x40029a1	          0x4585ed	                         test r13d, r13d	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x40029a4	          0x4489ef	                           mov edi, r13d	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x40029a7	        0x410f49c5	                        cmovns eax, r13d	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x40029ab	          0xc1ff1f	                           sar edi, 0x1f	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x40029ae	          0xc1ef19	                           shr edi, 0x19	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x40029b1	          0xc1f807	                              sar eax, 7	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x40029b4	      0x418d743d00	                    lea esi, [r13 + rdi]	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x40029b9	          0x83c021	                           add eax, 0x21	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x40029bc	          0x83e67f	                           and esi, 0x7f	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x40029bf	            0x29fe	                            sub esi, edi	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x40029c1	          0x83c621	                           add esi, 0x21	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x40029c4	    0x4c8b05000000	              mov r8, qword [0x040029cb]	      3332	gui.c	FUNCTION_50	IF_27
0x40029cb	    0x488b3d000000	            mov rdi, qword [0x040029d2] 	      3332	gui.c	FUNCTION_50	IF_27
0x40029d2	        0x49397878	              cmp qword [r8 + 0x78], rdi	      3332	gui.c	FUNCTION_50	IF_27
0x40029d6	            0x742d	                            je 0x4002a05	      3332	gui.c	FUNCTION_50	IF_27
0x40029d8	      0xc64424209b	            mov byte [rsp + 0x20], 0x9b 	      3339	gui.c	FUNCTION_50
0x40029dd	      0xc6442421fb	            mov byte [rsp + 0x21], 0xfb 	      3340	gui.c	FUNCTION_50
0x40029e2	      0xc644242258	            mov byte [rsp + 0x22], 0x58 	      3341	gui.c	FUNCTION_50
0x40029e7	      0xe95afbffff	                           jmp 0x4002546	      3341	gui.c	FUNCTION_50
0x40029ec	          0x4589e9	                           mov r9d, r13d	      3341	gui.c	FUNCTION_50
0x40029ef	        0x41c1f91f	                           sar r9d, 0x1f	      3341	gui.c	FUNCTION_50
0x40029f3	        0x41c1e919	                           shr r9d, 0x19	      3341	gui.c	FUNCTION_50
0x40029f7	      0x438d740d00	                     lea esi, [r13 + r9]	      3341	gui.c	FUNCTION_50
0x40029fc	          0x83e67f	                           and esi, 0x7f	      3341	gui.c	FUNCTION_50
0x40029ff	          0x4429ce	                            sub esi, r9d	      3341	gui.c	FUNCTION_50
0x4002a02	          0x83c621	                           add esi, 0x21	      3341	gui.c	FUNCTION_50
0x4002a05	    0x458b88840000	              mov r9d, dword [r8 + 0x84]	      3334	gui.c	FUNCTION_50	IF_27
0x4002a0c	    0x443b0d000000	            cmp r9d, dword [0x04002a13] 	      3334	gui.c	FUNCTION_50	IF_27
0x4002a13	     0xf8510fbffff	                           jne 0x4002529	      3334	gui.c	FUNCTION_50	IF_27
0x4002a19	          0x4189da	                           mov r10d, ebx	      3342	gui.c	FUNCTION_50	IF_28
0x4002a1c	      0xc64424209b	            mov byte [rsp + 0x20], 0x9b 	      3339	gui.c	FUNCTION_50
0x4002a21	      0xc6442421fb	            mov byte [rsp + 0x21], 0xfb 	      3340	gui.c	FUNCTION_50
0x4002a26	        0x4183e2bf	                    and r10d, 0xffffffbf	      3342	gui.c	FUNCTION_50	IF_28
0x4002a2a	      0xc644242258	            mov byte [rsp + 0x22], 0x58 	      3341	gui.c	FUNCTION_50
0x4002a2f	        0x4183fa03	                             cmp r10d, 3	      3342	gui.c	FUNCTION_50	IF_28
0x4002a33	     0xf840dfbffff	                            je 0x4002546	      3342	gui.c	FUNCTION_50	IF_28
0x4002a39	            0x85c9	                           test ecx, ecx	      3344	gui.c	FUNCTION_50	IF_28	IF_29
0x4002a3b	            0x7439	                            je 0x4002a76	      3344	gui.c	FUNCTION_50	IF_28	IF_29
0x4002a3d	    0x391d00000000	            cmp dword [0x04002a43], ebx 	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x4002a43	     0xf8493000000	                            je 0x4002adc	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x4002a49	    0xc70500000000	               mov dword [0x04002a53], 1	      3353	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4002a53	      0xb920000000	                           mov ecx, 0x20	      3353	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4002a58	    0x891d00000000	            mov dword [0x04002a5e], ebx 	      3357	gui.c	FUNCTION_50	IF_28
0x4002a5e	          0x83e33f	                           and ebx, 0x3f	      3364	gui.c	FUNCTION_50	IF_28	CALL_24
0x4002a61	    0x48893d000000	            mov qword [0x04002a68], rdi 	      3358	gui.c	FUNCTION_50	IF_28
0x4002a68	    0x44890d000000	            mov dword [0x04002a6f], r9d 	      3360	gui.c	FUNCTION_50	IF_28
0x4002a6f	             0x9cb	                             or ebx, ecx	      3364	gui.c	FUNCTION_50	IF_28	CALL_24
0x4002a71	      0xe9d0faffff	                           jmp 0x4002546	      3364	gui.c	FUNCTION_50	IF_28	CALL_24
0x4002a76	    0xc70500000000	               mov dword [0x04002a80], 1	      3356	gui.c	FUNCTION_50	IF_28	ELSE_7
0x4002a80	    0x458b88840000	              mov r9d, dword [r8 + 0x84]	      3356	gui.c	FUNCTION_50	IF_28	ELSE_7
0x4002a87	      0xb920000000	                           mov ecx, 0x20	      3356	gui.c	FUNCTION_50	IF_28	ELSE_7
0x4002a8c	            0xebca	                           jmp 0x4002a58	      3356	gui.c	FUNCTION_50	IF_28	ELSE_7
0x4002a8e	    0x488b05000000	            mov rax, qword [0x04002a95] 	      3277	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4
0x4002a95	    0x8bb8e0000000	            mov edi, dword [rax + 0xe0] 	      3277	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4
0x4002a9b	    0x8bb0a8010000	           mov esi, dword [rax + 0x1a8] 	      3278	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4	CALL_13
0x4002aa1	     0x3b09c000000	             add esi, dword [rax + 0x9c]	      3278	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4	CALL_13
0x4002aa7	     0x3b0dc000000	             add esi, dword [rax + 0xdc]	      3278	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4	CALL_13
0x4002aad	        0x897c241c	             mov dword [rsp + 0x1c], edi	      3277	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4
0x4002ab1	      0xe943feffff	                           jmp 0x40028f9	      3277	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4
0x4002ab6	    0x3b1500000000	            cmp edx, dword [0x04002abc] 	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x4002abc	     0xf85d2feffff	                           jne 0x4002994	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x4002ac2	      0xe923fbffff	                           jmp 0x40025ea	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x4002ac7	      0xbe20000000	                           mov esi, 0x20	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x4002acc	      0xb821000000	                           mov eax, 0x21	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x4002ad1	    0x41bdffffffff	                    mov r13d, 0xffffffff	      3324	gui.c	FUNCTION_50	IF_24	IF_26
0x4002ad7	      0xe9e8feffff	                           jmp 0x40029c4	      3324	gui.c	FUNCTION_50	IF_24	IF_26
0x4002adc	    0x44392d000000	           cmp dword [0x04002ae3], r13d 	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x4002ae3	     0xf8560ffffff	                           jne 0x4002a49	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x4002ae9	    0x391500000000	            cmp dword [0x04002aef], edx 	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x4002aef	     0xf8554ffffff	                           jne 0x4002a49	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x4002af5	    0x8b0d00000000	            mov ecx, dword [0x04002afb] 	      3352	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4002afb	        0x448d4101	                      lea r8d, [rcx + 1]	      3352	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4002aff	        0x4183f804	                              cmp r8d, 4	      3352	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4002b03	    0x448905000000	            mov dword [0x04002b0a], r8d 	      3352	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4002b0a	     0xf8f39ffffff	                            jg 0x4002a49	      3352	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4002b10	          0xc1e106	                              shl ecx, 6	      3352	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4002b13	          0x83c920	                            or ecx, 0x20	      3352	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4002b16	      0xe93dffffff	                           jmp 0x4002a58	      3352	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4002b1b	      0xe800000000	                    call sym.gui_menu_cb	      3386	gui.c	FUNCTION_50	ELSE_9
gui_inchar	IF,1:SWITCH,0:functions,0:CALL,3:WHILE,0:ELSE,0:FOR,0:DO,0	26
0x40021f0	            0x4154	                                push r12	      3045	gui.c	FUNCTION_48
0x40021f2	              0x55	                                push rbp	      3045	gui.c	FUNCTION_48
0x40021f3	          0x4989fc	                            mov r12, rdi	      3045	gui.c	FUNCTION_48
0x40021f6	              0x53	                                push rbx	      3045	gui.c	FUNCTION_48
0x40021f7	            0x89f5	                            mov ebp, esi	      3045	gui.c	FUNCTION_48
0x40021f9	          0x4889d7	                            mov rdi, rdx	      3046	gui.c	FUNCTION_48	IF_1	CALL_1
0x40021fc	            0x89ce	                            mov esi, ecx	      3046	gui.c	FUNCTION_48	IF_1	CALL_1
0x40021fe	            0x89cb	                            mov ebx, ecx	      3045	gui.c	FUNCTION_48
0x4002200	      0xe800000000	                          call 0x4002205	      3046	gui.c	FUNCTION_48	IF_1	CALL_1
0x4002205	            0x85c0	                           test eax, eax	      3046	gui.c	FUNCTION_48	IF_1	CALL_1
0x4002207	            0x7507	                           jne 0x4002210	      3046	gui.c	FUNCTION_48	IF_1	CALL_1
0x4002209	              0x5b	                                 pop rbx	      3050	gui.c	FUNCTION_48
0x400220a	            0x31c0	                            xor eax, eax	      3050	gui.c	FUNCTION_48
0x400220c	              0x5d	                                 pop rbp	      3050	gui.c	FUNCTION_48
0x400220d	            0x415c	                                 pop r12	      3050	gui.c	FUNCTION_48
0x400220f	              0xc3	                                     ret	      3050	gui.c	FUNCTION_48
0x4002210	            0x89df	                            mov edi, ebx	      3047	gui.c	FUNCTION_48	IF_1	CALL_2
0x4002212	      0xe800000000	                          call 0x4002217	      3047	gui.c	FUNCTION_48	IF_1	CALL_2
0x4002217	            0x85c0	                           test eax, eax	      3047	gui.c	FUNCTION_48	IF_1	CALL_2
0x4002219	            0x75ee	                           jne 0x4002209	      3047	gui.c	FUNCTION_48	IF_1	CALL_2
0x400221b	              0x5b	                                 pop rbx	      3050	gui.c	FUNCTION_48
0x400221c	          0x4863f5	                         movsxd rsi, ebp	      3048	gui.c	FUNCTION_48	CALL_3
0x400221f	          0x4c89e7	                            mov rdi, r12	      3048	gui.c	FUNCTION_48	CALL_3
0x4002222	              0x5d	                                 pop rbp	      3050	gui.c	FUNCTION_48
0x4002223	            0x415c	                                 pop r12	      3050	gui.c	FUNCTION_48
0x4002225	      0xe900000000	                           jmp 0x400222a	      3048	gui.c	FUNCTION_48	CALL_3
gui_wait_for_chars_3	IF,0:SWITCH,0:functions,0:CALL,1:WHILE,0:ELSE,0:FOR,0:DO,0	1
0x4000170	      0xe900000000	                           jmp 0x4000175	      2929	gui.c	FUNCTION_45	CALL_1
gui_remove_scrollbars	IF,1:SWITCH,0:functions,1:CALL,1:WHILE,0:ELSE,1:FOR,1:DO,0	30
0x4003110	              0x55	                                push rbp	      3884	gui.c	FUNCTION_60
0x4003111	              0x53	                                push rbx	      3884	gui.c	FUNCTION_60
0x4003112	            0x31ed	                            xor ebp, ebp	      3888	gui.c	FUNCTION_60	FOR_1
0x4003114	        0x4883ec08	                              sub rsp, 8	      3884	gui.c	FUNCTION_60
0x4003118	    0x488b1d000000	            mov rbx, qword [0x0400311f] 	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x400311f	          0x4885db	                           test rbx, rbx	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x4003122	            0x7419	                            je 0x400313d	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x4003124	         0xf1f4000	                         nop dword [rax]	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x4003128	            0x31d2	                            xor edx, edx	      3896	gui.c	FUNCTION_60	FOR_1	ELSE_1	FUNCTION_1	CALL_1
0x400312a	          0x4889df	                            mov rdi, rbx	      3896	gui.c	FUNCTION_60	FOR_1	ELSE_1	FUNCTION_1	CALL_1
0x400312d	            0x89ee	                            mov esi, ebp	      3896	gui.c	FUNCTION_60	FOR_1	ELSE_1	FUNCTION_1	CALL_1
0x400312f	      0xe84cd0ffff	               call sym.gui_do_scrollbar	      3896	gui.c	FUNCTION_60	FOR_1	ELSE_1	FUNCTION_1	CALL_1
0x4003134	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x4003138	          0x4885db	                           test rbx, rbx	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x400313b	            0x75eb	                           jne 0x4003128	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x400313d	    0x488b05000000	            mov rax, qword [0x04003144] 	      3899	gui.c	FUNCTION_60	FOR_1
0x4003144	          0x4863d5	                         movsxd rdx, ebp	      3899	gui.c	FUNCTION_60	FOR_1
0x4003147	          0x83c501	                              add ebp, 1	      3888	gui.c	FUNCTION_60	FOR_1
0x400314a	          0x83fd02	                              cmp ebp, 2	      3890	gui.c	FUNCTION_60	FOR_1	IF_1
0x400314d	    0xc7449048ffff	mov dword [rax + rdx*4 + 0x48], 0xffffffff 	      3899	gui.c	FUNCTION_60	FOR_1
0x4003155	            0x75c1	                           jne 0x4003118	      3890	gui.c	FUNCTION_60	FOR_1	IF_1
0x4003157	            0x31f6	                            xor esi, esi	      3891	gui.c	FUNCTION_60	FOR_1	CALL_1
0x4003159	      0xbf00000000	                              mov edi, 0	      3891	gui.c	FUNCTION_60	FOR_1	CALL_1
0x400315e	      0xe800000000	                          call 0x4003163	      3891	gui.c	FUNCTION_60	FOR_1	CALL_1
0x4003163	    0x488b05000000	            mov rax, qword [0x0400316a] 	      3899	gui.c	FUNCTION_60	FOR_1
0x400316a	    0xc74050ffffff	     mov dword [rax + 0x50], 0xffffffff 	      3899	gui.c	FUNCTION_60	FOR_1
0x4003171	        0x4883c408	                              add rsp, 8	      3901	gui.c	FUNCTION_60
0x4003175	              0x5b	                                 pop rbx	      3901	gui.c	FUNCTION_60
0x4003176	              0x5d	                                 pop rbp	      3901	gui.c	FUNCTION_60
0x4003177	              0xc3	                                     ret	      3901	gui.c	FUNCTION_60
gui_menu_cb	IF,1:SWITCH,0:functions,0:CALL,3:WHILE,0:ELSE,0:FOR,0:DO,0	30
0x4002b20	              0x53	                                push rbx	      3413	gui.c	FUNCTION_52
0x4002b21	        0x4883ec10	                           sub rsp, 0x10	      3413	gui.c	FUNCTION_52
0x4002b25	    0x64488b042528	                mov rax, qword fs:[0x28]	      3413	gui.c	FUNCTION_52
0x4002b2e	      0x4889442408	                mov qword [rsp + 8], rax	      3413	gui.c	FUNCTION_52
0x4002b33	            0x31c0	                            xor eax, eax	      3413	gui.c	FUNCTION_52
0x4002b35	    0x8b0500000000	            mov eax, dword [0x04002b3b] 	      3417	gui.c	FUNCTION_52	IF_1
0x4002b3b	            0x85c0	                           test eax, eax	      3417	gui.c	FUNCTION_52	IF_1
0x4002b3d	            0x7419	                            je 0x4002b58	      3417	gui.c	FUNCTION_52	IF_1
0x4002b3f	      0x488b442408	                mov rax, qword [rsp + 8]	      3426	gui.c	FUNCTION_52
0x4002b44	    0x644833042528	                xor rax, qword fs:[0x28]	      3426	gui.c	FUNCTION_52
0x4002b4d	            0x7541	                           jne 0x4002b90	      3426	gui.c	FUNCTION_52
0x4002b4f	        0x4883c410	                           add rsp, 0x10	      3426	gui.c	FUNCTION_52
0x4002b53	              0x5b	                                 pop rbx	      3426	gui.c	FUNCTION_52
0x4002b54	              0xc3	                                     ret	      3426	gui.c	FUNCTION_52
0x4002b55	           0xf1f00	                         nop dword [rax]	      3426	gui.c	FUNCTION_52
0x4002b58	          0x4889fb	                            mov rbx, rdi	      3426	gui.c	FUNCTION_52
0x4002b5b	      0xbe03000000	                              mov esi, 3	      3423	gui.c	FUNCTION_52	CALL_1
0x4002b60	          0x4889e7	                            mov rdi, rsp	      3423	gui.c	FUNCTION_52	CALL_1
0x4002b63	        0xc604249b	                    mov byte [rsp], 0x9b	      3420	gui.c	FUNCTION_52
0x4002b67	      0xc6442401fa	                mov byte [rsp + 1], 0xfa	      3421	gui.c	FUNCTION_52
0x4002b6c	      0xc644240258	                mov byte [rsp + 2], 0x58	      3422	gui.c	FUNCTION_52
0x4002b71	      0xe800000000	                          call 0x4002b76	      3423	gui.c	FUNCTION_52	CALL_1
0x4002b76	          0x4889e6	                            mov rsi, rsp	      3424	gui.c	FUNCTION_52	CALL_2
0x4002b79	          0x4889df	                            mov rdi, rbx	      3424	gui.c	FUNCTION_52	CALL_2
0x4002b7c	      0xe800000000	                          call 0x4002b81	      3424	gui.c	FUNCTION_52	CALL_2
0x4002b81	      0xbe08000000	                              mov esi, 8	      3425	gui.c	FUNCTION_52	CALL_3
0x4002b86	          0x4889e7	                            mov rdi, rsp	      3425	gui.c	FUNCTION_52	CALL_3
0x4002b89	      0xe800000000	                          call 0x4002b8e	      3425	gui.c	FUNCTION_52	CALL_3
0x4002b8e	            0xebaf	                           jmp 0x4002b3f	      3425	gui.c	FUNCTION_52	CALL_3
0x4002b90	      0xe800000000	                          call 0x4002b95	      3426	gui.c	FUNCTION_52
gui_mouse_moved	IF,7:SWITCH,0:functions,0:CALL,11:WHILE,0:ELSE,0:FOR,0:DO,0	110
0x40057f0	            0x4154	                                push r12	      4849	gui.c	FUNCTION_79
0x40057f2	              0x55	                                push rbp	      4849	gui.c	FUNCTION_79
0x40057f3	              0x53	                                push rbx	      4849	gui.c	FUNCTION_79
0x40057f4	        0x4883ec10	                           sub rsp, 0x10	      4849	gui.c	FUNCTION_79
0x40057f8	    0x448b0d000000	            mov r9d, dword [0x040057ff] 	      4854	gui.c	FUNCTION_79	IF_1
0x40057ff	    0x64488b042528	                mov rax, qword fs:[0x28]	      4849	gui.c	FUNCTION_79
0x4005808	      0x4889442408	                mov qword [rsp + 8], rax	      4849	gui.c	FUNCTION_79
0x400580d	            0x31c0	                            xor eax, eax	      4849	gui.c	FUNCTION_79
0x400580f	          0x4585c9	                           test r9d, r9d	      4854	gui.c	FUNCTION_79	IF_1
0x4005812	            0x740c	                            je 0x4005820	      4854	gui.c	FUNCTION_79	IF_1
0x4005814	    0x448b05000000	            mov r8d, dword [0x0400581b] 	      4854	gui.c	FUNCTION_79	IF_1
0x400581b	          0x4585c0	                           test r8d, r8d	      4854	gui.c	FUNCTION_79	IF_1
0x400581e	            0x7420	                            je 0x4005840	      4854	gui.c	FUNCTION_79	IF_1
0x4005820	      0x488b442408	                mov rax, qword [rsp + 8]	      4913	gui.c	FUNCTION_79
0x4005825	    0x644833042528	                xor rax, qword fs:[0x28]	      4913	gui.c	FUNCTION_79
0x400582e	     0xf856a010000	                           jne 0x400599e	      4913	gui.c	FUNCTION_79
0x4005834	        0x4883c410	                           add rsp, 0x10	      4913	gui.c	FUNCTION_79
0x4005838	              0x5b	                                 pop rbx	      4913	gui.c	FUNCTION_79
0x4005839	              0x5d	                                 pop rbp	      4913	gui.c	FUNCTION_79
0x400583a	            0x415c	                                 pop r12	      4913	gui.c	FUNCTION_79
0x400583c	              0xc3	                                     ret	      4913	gui.c	FUNCTION_79
0x400583d	           0xf1f00	                         nop dword [rax]	      4913	gui.c	FUNCTION_79
0x4005840	          0x4863df	                         movsxd rbx, edi	      4913	gui.c	FUNCTION_79
0x4005843	            0x89f5	                            mov ebp, esi	      4913	gui.c	FUNCTION_79
0x4005845	            0x89df	                            mov edi, ebx	      4859	gui.c	FUNCTION_79	CALL_1
0x4005847	      0xe8e4aaffff	                         call sym.xy2win	      4859	gui.c	FUNCTION_79	CALL_1
0x400584c	    0x8b3500000000	            mov esi, dword [0x04005852] 	      4863	gui.c	FUNCTION_79	IF_2
0x4005852	          0x4989c4	                            mov r12, rax	      4859	gui.c	FUNCTION_79	CALL_1
0x4005855	            0x85f6	                           test esi, esi	      4863	gui.c	FUNCTION_79	IF_2
0x4005857	            0x74c7	                            je 0x4005820	      4863	gui.c	FUNCTION_79	IF_2
0x4005859	    0x8b0500000000	            mov eax, dword [0x0400585f] 	      4864	gui.c	FUNCTION_79	IF_2
0x400585f	            0x85c0	                           test eax, eax	      4864	gui.c	FUNCTION_79	IF_2
0x4005861	            0x75bd	                           jne 0x4005820	      4864	gui.c	FUNCTION_79	IF_2
0x4005863	    0x8b0500000000	            mov eax, dword [0x04005869] 	      4865	gui.c	FUNCTION_79	IF_2
0x4005869	            0xa811	                           test al, 0x11	      4866	gui.c	FUNCTION_79	IF_2
0x400586b	            0x74b3	                            je 0x4005820	      4866	gui.c	FUNCTION_79	IF_2
0x400586d	      0x3d01020000	                          cmp eax, 0x201	      4866	gui.c	FUNCTION_79	IF_2
0x4005872	            0x74ac	                            je 0x4005820	      4866	gui.c	FUNCTION_79	IF_2
0x4005874	    0x8b0d00000000	            mov ecx, dword [0x0400587a] 	      4867	gui.c	FUNCTION_79	IF_2
0x400587a	            0x85c9	                           test ecx, ecx	      4867	gui.c	FUNCTION_79	IF_2
0x400587c	            0x75a2	                           jne 0x4005820	      4867	gui.c	FUNCTION_79	IF_2
0x400587e	    0x8b1500000000	            mov edx, dword [0x04005884] 	      4868	gui.c	FUNCTION_79	IF_2
0x4005884	            0x85d2	                           test edx, edx	      4868	gui.c	FUNCTION_79	IF_2
0x4005886	            0x7598	                           jne 0x4005820	      4868	gui.c	FUNCTION_79	IF_2
0x4005888	    0x8b0500000000	            mov eax, dword [0x0400588e] 	      4869	gui.c	FUNCTION_79	IF_2
0x400588e	            0x85c0	                           test eax, eax	      4869	gui.c	FUNCTION_79	IF_2
0x4005890	            0x748e	                            je 0x4005820	      4869	gui.c	FUNCTION_79	IF_2
0x4005892	            0x85db	                           test ebx, ebx	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x4005894	            0x788a	                            js 0x4005820	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x4005896	    0x486305000000	         movsxd rax, dword [0x0400589d] 	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x400589d	    0x480faf050000	            imul rax, qword [0x040058a5]	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x40058a5	          0x4839c3	                            cmp rbx, rax	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x40058a8	     0xf8f72ffffff	                            jg 0x4005820	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x40058ae	    0x4c3925000000	            cmp qword [0x040058b5], r12 	      4877	gui.c	FUNCTION_79	IF_2	IF_4
0x40058b5	     0xf8465ffffff	                            je 0x4005820	      4877	gui.c	FUNCTION_79	IF_2	IF_4
0x40058bb	          0x4d85e4	                           test r12, r12	      4877	gui.c	FUNCTION_79	IF_2	IF_4
0x40058be	     0xf845cffffff	                            je 0x4005820	      4877	gui.c	FUNCTION_79	IF_2	IF_4
0x40058c4	            0x89e8	                            mov eax, ebp	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x40058c6	    0x2b0500000000	             sub eax, dword [0x040058cc]	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x40058cc	              0x99	                                     cdq	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x40058cd	    0xf73d00000000	                 idiv dword [0x040058d3]	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x40058d3	            0x89c3	                            mov ebx, eax	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x40058d5	      0xe800000000	                          call 0x40058da	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x40058da	            0x39c3	                            cmp ebx, eax	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x40058dc	     0xf8c3effffff	                            jl 0x4005820	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x40058e2	    0x833d00000000	               cmp dword [0x040058e9], 0	      4890	gui.c	FUNCTION_79	IF_2	IF_6
0x40058e9	            0x7411	                            je 0x40058fc	      4890	gui.c	FUNCTION_79	IF_2	IF_6
0x40058eb	      0xbe01000000	                              mov esi, 1	      4894	gui.c	FUNCTION_79	IF_2	IF_6	CALL_5
0x40058f0	          0x4889e7	                            mov rdi, rsp	      4894	gui.c	FUNCTION_79	IF_2	IF_6	CALL_5
0x40058f3	        0xc604241b	                    mov byte [rsp], 0x1b	      4893	gui.c	FUNCTION_79	IF_2	IF_6
0x40058f7	      0xe800000000	                          call 0x40058fc	      4894	gui.c	FUNCTION_79	IF_2	IF_6	CALL_5
0x40058fc	    0x418b9424a800	            mov edx, dword [r12 + 0xa8] 	      4901	gui.c	FUNCTION_79	IF_2
0x4005904	    0x418b8c24a801	           mov ecx, dword [r12 + 0x1a8] 	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x400590c	      0xbe80000000	                           mov esi, 0x80	      3058	gui.c	FUNCTION_49
0x4005911	    0x41038c249c00	             add ecx, dword [r12 + 0x9c]	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x4005919	          0x4889e7	                            mov rdi, rsp	      4904	gui.c	FUNCTION_79	IF_2	CALL_8
0x400591c	        0xc604249b	                    mov byte [rsp], 0x9b	      4896	gui.c	FUNCTION_79	IF_2
0x4005920	    0x41038c24a000	             add ecx, dword [r12 + 0xa0]	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x4005928	      0xc6442401fb	                mov byte [rsp + 1], 0xfb	      4897	gui.c	FUNCTION_79	IF_2
0x400592d	    0x8d8210270000	                 lea eax, [rdx + 0x2710]	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x4005933	            0x85d2	                           test edx, edx	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x4005935	      0xbaffffffff	                     mov edx, 0xffffffff	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x400593a	      0xc644240258	                mov byte [rsp + 2], 0x58	      4898	gui.c	FUNCTION_79	IF_2
0x400593f	      0xc644240300	                   mov byte [rsp + 3], 0	      4899	gui.c	FUNCTION_79	IF_2
0x4005944	           0xf44c2	                          cmove eax, edx	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x4005947	              0x99	                                     cdq	      3058	gui.c	FUNCTION_49
0x4005948	            0xf7fe	                                idiv esi	      3058	gui.c	FUNCTION_49
0x400594a	          0x83c021	                           add eax, 0x21	      3058	gui.c	FUNCTION_49
0x400594d	        0x88442404	                  mov byte [rsp + 4], al	      3058	gui.c	FUNCTION_49
0x4005951	          0x8d4221	                   lea eax, [rdx + 0x21]	      3059	gui.c	FUNCTION_49
0x4005954	        0x88442405	                  mov byte [rsp + 5], al	      3059	gui.c	FUNCTION_49
0x4005958	            0x89c8	                            mov eax, ecx	      3060	gui.c	FUNCTION_49
0x400595a	              0x99	                                     cdq	      3060	gui.c	FUNCTION_49
0x400595b	            0xf7fe	                                idiv esi	      3060	gui.c	FUNCTION_49
0x400595d	      0xbe08000000	                              mov esi, 8	      4904	gui.c	FUNCTION_79	IF_2	CALL_8
0x4005962	          0x83c021	                           add eax, 0x21	      3060	gui.c	FUNCTION_49
0x4005965	          0x83c221	                           add edx, 0x21	      3061	gui.c	FUNCTION_49
0x4005968	        0x88442406	                  mov byte [rsp + 6], al	      3060	gui.c	FUNCTION_49
0x400596c	        0x88542407	                  mov byte [rsp + 7], dl	      3061	gui.c	FUNCTION_49
0x4005970	      0xe800000000	                          call 0x4005975	      4904	gui.c	FUNCTION_79	IF_2	CALL_8
0x4005975	      0xbe08000000	                              mov esi, 8	      4906	gui.c	FUNCTION_79	IF_2	CALL_9
0x400597a	          0x4889e7	                            mov rdi, rsp	      4906	gui.c	FUNCTION_79	IF_2	CALL_9
0x400597d	      0xc644240303	                   mov byte [rsp + 3], 3	      4905	gui.c	FUNCTION_79	IF_2
0x4005982	      0xe800000000	                          call 0x4005987	      4906	gui.c	FUNCTION_79	IF_2	CALL_9
0x4005987	      0xe800000000	                          call 0x400598c	      4909	gui.c	FUNCTION_79	IF_2	IF_7	CALL_10
0x400598c	            0x85c0	                           test eax, eax	      4909	gui.c	FUNCTION_79	IF_2	IF_7	CALL_10
0x400598e	     0xf848cfeffff	                            je 0x4005820	      4909	gui.c	FUNCTION_79	IF_2	IF_7	CALL_10
0x4005994	      0xe800000000	                          call 0x4005999	      4910	gui.c	FUNCTION_79	IF_2	CALL_11
0x4005999	      0xe982feffff	                           jmp 0x4005820	      4910	gui.c	FUNCTION_79	IF_2	CALL_11
0x400599e	      0xe800000000	                          call 0x40059a3	      4913	gui.c	FUNCTION_79
gui_find_bitmap	IF,2:SWITCH,0:functions,0:CALL,3:WHILE,0:ELSE,0:FOR,0:DO,0	36
0x4005ac0	            0x4154	                                push r12	      5045	gui.c	FUNCTION_84
0x4005ac2	              0x55	                                push rbp	      5045	gui.c	FUNCTION_84
0x4005ac3	          0x4989d4	                            mov r12, rdx	      5045	gui.c	FUNCTION_84
0x4005ac6	              0x53	                                push rbx	      5045	gui.c	FUNCTION_84
0x4005ac7	          0x4889fd	                            mov rbp, rdi	      5045	gui.c	FUNCTION_84
0x4005aca	          0x4889f3	                            mov rbx, rsi	      5045	gui.c	FUNCTION_84
0x4005acd	      0xe800000000	                          call 0x4005ad2	      5046	gui.c	FUNCTION_84	IF_1	CALL_1
0x4005ad2	    0x483df20f0000	                          cmp rax, 0xff2	      5046	gui.c	FUNCTION_84	IF_1	CALL_1
0x4005ad8	            0x760e	                           jbe 0x4005ae8	      5046	gui.c	FUNCTION_84	IF_1	CALL_1
0x4005ada	              0x5b	                                 pop rbx	      5053	gui.c	FUNCTION_84
0x4005adb	            0x31c0	                            xor eax, eax	      5047	gui.c	FUNCTION_84	IF_1
0x4005add	              0x5d	                                 pop rbp	      5053	gui.c	FUNCTION_84
0x4005ade	            0x415c	                                 pop r12	      5053	gui.c	FUNCTION_84
0x4005ae0	              0xc3	                                     ret	      5053	gui.c	FUNCTION_84
0x4005ae1	     0xf1f80000000	                         nop dword [rax]	      5053	gui.c	FUNCTION_84
0x4005ae8	          0x4d89e0	                             mov r8, r12	      5048	gui.c	FUNCTION_84	CALL_2
0x4005aeb	          0x4889e9	                            mov rcx, rbp	      5048	gui.c	FUNCTION_84	CALL_2
0x4005aee	      0xba00000000	                              mov edx, 0	      5048	gui.c	FUNCTION_84	CALL_2
0x4005af3	      0xbe00100000	                         mov esi, 0x1000	      5048	gui.c	FUNCTION_84	CALL_2
0x4005af8	          0x4889df	                            mov rdi, rbx	      5048	gui.c	FUNCTION_84	CALL_2
0x4005afb	            0x31c0	                            xor eax, eax	      5048	gui.c	FUNCTION_84	CALL_2
0x4005afd	      0xe800000000	                          call 0x4005b02	      5048	gui.c	FUNCTION_84	CALL_2
0x4005b02	            0x31f6	                            xor esi, esi	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x4005b04	          0x4889d9	                            mov rcx, rbx	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x4005b07	      0xba00000000	                              mov edx, 0	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x4005b0c	          0x4889df	                            mov rdi, rbx	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x4005b0f	      0xe800000000	                          call 0x4005b14	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x4005b14	            0x85c0	                           test eax, eax	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x4005b16	            0x74c2	                            je 0x4005ada	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x4005b18	            0x31c0	                            xor eax, eax	      5047	gui.c	FUNCTION_84	IF_1
0x4005b1a	          0x803b00	                       cmp byte [rbx], 0	      5047	gui.c	FUNCTION_84	IF_1
0x4005b1d	              0x5b	                                 pop rbx	      5053	gui.c	FUNCTION_84
0x4005b1e	              0x5d	                                 pop rbp	      5053	gui.c	FUNCTION_84
0x4005b1f	            0x415c	                                 pop r12	      5053	gui.c	FUNCTION_84
0x4005b21	           0xf95c0	                                setne al	      5047	gui.c	FUNCTION_84	IF_1
0x4005b24	              0xc3	                                     ret	      5053	gui.c	FUNCTION_84
gui_mouse_correct	IF,4:SWITCH,0:functions,0:CALL,8:WHILE,0:ELSE,0:FOR,0:DO,0	67
0x40059b0	              0x53	                                push rbx	      4920	gui.c	FUNCTION_80
0x40059b1	        0x4883ec10	                           sub rsp, 0x10	      4920	gui.c	FUNCTION_80
0x40059b5	    0x8b1500000000	            mov edx, dword [0x040059bb] 	      4926	gui.c	FUNCTION_80	IF_1
0x40059bb	    0xc70500000000	               mov dword [0x040059c5], 0	      4924	gui.c	FUNCTION_80
0x40059c5	    0x64488b042528	                mov rax, qword fs:[0x28]	      4920	gui.c	FUNCTION_80
0x40059ce	      0x4889442408	                mov qword [rsp + 8], rax	      4920	gui.c	FUNCTION_80
0x40059d3	            0x31c0	                            xor eax, eax	      4920	gui.c	FUNCTION_80
0x40059d5	            0x85d2	                           test edx, edx	      4926	gui.c	FUNCTION_80	IF_1
0x40059d7	            0x740a	                            je 0x40059e3	      4926	gui.c	FUNCTION_80	IF_1
0x40059d9	    0x8b0500000000	            mov eax, dword [0x040059df] 	      4926	gui.c	FUNCTION_80	IF_1
0x40059df	            0x85c0	                           test eax, eax	      4926	gui.c	FUNCTION_80	IF_1
0x40059e1	            0x751d	                           jne 0x4005a00	      4926	gui.c	FUNCTION_80	IF_1
0x40059e3	      0x488b442408	                mov rax, qword [rsp + 8]	      4942	gui.c	FUNCTION_80
0x40059e8	    0x644833042528	                xor rax, qword fs:[0x28]	      4942	gui.c	FUNCTION_80
0x40059f1	     0xf85c3000000	                           jne 0x4005aba	      4942	gui.c	FUNCTION_80
0x40059f7	        0x4883c410	                           add rsp, 0x10	      4942	gui.c	FUNCTION_80
0x40059fb	              0x5b	                                 pop rbx	      4942	gui.c	FUNCTION_80
0x40059fc	              0xc3	                                     ret	      4942	gui.c	FUNCTION_80
0x40059fd	           0xf1f00	                         nop dword [rax]	      4942	gui.c	FUNCTION_80
0x4005a00	      0x488d742404	                      lea rsi, [rsp + 4]	      4929	gui.c	FUNCTION_80	CALL_1
0x4005a05	          0x4889e7	                            mov rdi, rsp	      4929	gui.c	FUNCTION_80	CALL_1
0x4005a08	      0xe800000000	                          call 0x4005a0d	      4929	gui.c	FUNCTION_80	CALL_1
0x4005a0d	        0x48630424	                 movsxd rax, dword [rsp]	      4931	gui.c	FUNCTION_80	IF_2
0x4005a11	            0x85c0	                           test eax, eax	      4931	gui.c	FUNCTION_80	IF_2
0x4005a13	            0x78ce	                            js 0x40059e3	      4931	gui.c	FUNCTION_80	IF_2
0x4005a15	    0x486315000000	         movsxd rdx, dword [0x04005a1c] 	      4931	gui.c	FUNCTION_80	IF_2
0x4005a1c	    0x480faf150000	            imul rdx, qword [0x04005a24]	      4931	gui.c	FUNCTION_80	IF_2
0x4005a24	          0x4839d0	                            cmp rax, rdx	      4931	gui.c	FUNCTION_80	IF_2
0x4005a27	            0x7fba	                            jg 0x40059e3	      4931	gui.c	FUNCTION_80	IF_2
0x4005a29	        0x8b442404	                mov eax, dword [rsp + 4]	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4005a2d	            0x85c0	                           test eax, eax	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4005a2f	            0x78b2	                            js 0x40059e3	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4005a31	    0x2b0500000000	             sub eax, dword [0x04005a37]	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4005a37	              0x99	                                     cdq	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4005a38	    0xf73d00000000	                 idiv dword [0x04005a3e]	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4005a3e	            0x89c3	                            mov ebx, eax	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4005a40	      0xe800000000	                          call 0x4005a45	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4005a45	            0x39c3	                            cmp ebx, eax	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4005a47	            0x7c9a	                            jl 0x40059e3	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4005a49	        0x8b742404	                mov esi, dword [rsp + 4]	      4934	gui.c	FUNCTION_80	CALL_4
0x4005a4d	          0x8b3c24	                    mov edi, dword [rsp]	      4934	gui.c	FUNCTION_80	CALL_4
0x4005a50	      0xe8dba8ffff	                         call sym.xy2win	      4934	gui.c	FUNCTION_80	CALL_4
0x4005a55	    0x483905000000	            cmp qword [0x04005a5c], rax 	      4935	gui.c	FUNCTION_80	IF_4
0x4005a5c	            0x7485	                            je 0x40059e3	      4935	gui.c	FUNCTION_80	IF_4
0x4005a5e	          0x4885c0	                           test rax, rax	      4935	gui.c	FUNCTION_80	IF_4
0x4005a61	            0x7480	                            je 0x40059e3	      4935	gui.c	FUNCTION_80	IF_4
0x4005a63	      0xe800000000	                          call 0x4005a68	      4937	gui.c	FUNCTION_80	IF_4	CALL_5
0x4005a68	    0x488b0d000000	            mov rcx, qword [0x04005a6f] 	      4939	gui.c	FUNCTION_80	IF_4	CALL_8
0x4005a6f	    0x8b0500000000	            mov eax, dword [0x04005a75] 	      4939	gui.c	FUNCTION_80	IF_4	CALL_8
0x4005a75	    0x8bb1a8010000	           mov esi, dword [rcx + 0x1a8] 	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4005a7b	     0x3b19c000000	             add esi, dword [rcx + 0x9c]	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4005a81	     0x3b1dc000000	             add esi, dword [rcx + 0xdc]	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4005a87	    0x8bb9ac000000	            mov edi, dword [rcx + 0xac] 	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4005a8d	     0x3b9a8000000	             add edi, dword [rcx + 0xa8]	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4005a93	     0xfaf3d000000	            imul edi, dword [0x04005a9a]	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4005a9a	            0x89f2	                            mov edx, esi	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4005a9c	            0x89c6	                            mov esi, eax	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4005a9e	          0xc1ee1f	                           shr esi, 0x1f	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4005aa1	           0xfafd0	                           imul edx, eax	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4005aa4	             0x1c6	                            add esi, eax	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4005aa6	            0x89f0	                            mov eax, esi	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4005aa8	            0xd1f8	                              sar eax, 1	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4005aaa	          0x83ef03	                              sub edi, 3	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4005aad	          0x8d3402	                    lea esi, [rdx + rax]	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4005ab0	      0xe800000000	                          call 0x4005ab5	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4005ab5	      0xe929ffffff	                           jmp 0x40059e3	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4005aba	      0xe800000000	                          call 0x4005abf	      4942	gui.c	FUNCTION_80
gui_set_shellsize	IF,13:SWITCH,0:functions,0:CALL,21:WHILE,0:ELSE,1:FOR,0:DO,0	227
0x40038b0	            0x4157	                                push r15	      1573	gui.c	FUNCTION_23
0x40038b2	            0x4156	                                push r14	      1573	gui.c	FUNCTION_23
0x40038b4	            0x4155	                                push r13	      1573	gui.c	FUNCTION_23
0x40038b6	            0x4154	                                push r12	      1573	gui.c	FUNCTION_23
0x40038b8	              0x55	                                push rbp	      1573	gui.c	FUNCTION_23
0x40038b9	              0x53	                                push rbx	      1573	gui.c	FUNCTION_23
0x40038ba	        0x4883ec38	                           sub rsp, 0x38	      1573	gui.c	FUNCTION_23
0x40038be	    0x448b15000000	           mov r10d, dword [0x040038c5] 	      1588	gui.c	FUNCTION_23	IF_1
0x40038c5	    0x64488b042528	                mov rax, qword fs:[0x28]	      1573	gui.c	FUNCTION_23
0x40038ce	      0x4889442428	             mov qword [rsp + 0x28], rax	      1573	gui.c	FUNCTION_23
0x40038d3	            0x31c0	                            xor eax, eax	      1573	gui.c	FUNCTION_23
0x40038d5	    0xc7442420ffff	     mov dword [rsp + 0x20], 0xffffffff 	      1586	gui.c	FUNCTION_23
0x40038dd	    0xc7442424ffff	     mov dword [rsp + 0x24], 0xffffffff 	      1586	gui.c	FUNCTION_23
0x40038e5	          0x4585d2	                         test r10d, r10d	      1588	gui.c	FUNCTION_23	IF_1
0x40038e8	     0xf8483010000	                            je 0x4003a71	      1588	gui.c	FUNCTION_23	IF_1
0x40038ee	            0x85ff	                           test edi, edi	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x40038f0	            0x89fd	                            mov ebp, edi	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x40038f2	          0x4189f4	                           mov r12d, esi	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x40038f5	          0x4189d5	                           mov r13d, edx	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x40038f8	     0xf849a010000	                            je 0x4003a98	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x40038fe	    0x8b0500000000	            mov eax, dword [0x04003904] 	      1412	gui.c	FUNCTION_18
0x4003904	    0x448b05000000	            mov r8d, dword [0x0400390b] 	      1414	gui.c	FUNCTION_18	IF_1
0x400390b	    0x8b3d00000000	            mov edi, dword [0x04003911] 	      1414	gui.c	FUNCTION_18	IF_1
0x4003911	    0x448b0d000000	            mov r9d, dword [0x04003918] 	      1430	gui.c	FUNCTION_19	IF_1
0x4003918	        0x448d3c00	                   lea r15d, [rax + rax]	      1412	gui.c	FUNCTION_18
0x400391c	    0x8b0500000000	            mov eax, dword [0x04003922] 	      1416	gui.c	FUNCTION_18	IF_2
0x4003922	          0x4501f8	                           add r8d, r15d	      1414	gui.c	FUNCTION_18	IF_1
0x4003925	            0x85ff	                           test edi, edi	      1414	gui.c	FUNCTION_18	IF_1
0x4003927	        0x450f44c7	                         cmove r8d, r15d	      1414	gui.c	FUNCTION_18	IF_1
0x400392b	          0x4401c0	                            add eax, r8d	      1416	gui.c	FUNCTION_18	IF_2
0x400392e	          0x4589c6	                           mov r14d, r8d	      1414	gui.c	FUNCTION_18	IF_1
0x4003931	    0x448b05000000	            mov r8d, dword [0x04003938] 	      1416	gui.c	FUNCTION_18	IF_2
0x4003938	          0x4585c0	                           test r8d, r8d	      1416	gui.c	FUNCTION_18	IF_2
0x400393b	        0x440f45f0	                        cmovne r14d, eax	      1416	gui.c	FUNCTION_18	IF_2
0x400393f	    0x8b0500000000	            mov eax, dword [0x04003945] 	      1430	gui.c	FUNCTION_19	IF_1
0x4003945	          0x4401f8	                           add eax, r15d	      1430	gui.c	FUNCTION_19	IF_1
0x4003948	          0x4585c9	                           test r9d, r9d	      1430	gui.c	FUNCTION_19	IF_1
0x400394b	        0x440f45f8	                        cmovne r15d, eax	      1430	gui.c	FUNCTION_19	IF_1
0x400394f	          0x4585e4	                         test r12d, r12d	      1604	gui.c	FUNCTION_23	IF_3
0x4003952	     0xf8558020000	                           jne 0x4003bb0	      1604	gui.c	FUNCTION_23	IF_3
0x4003958	    0x8b1d00000000	            mov ebx, dword [0x0400395e] 	      1618	gui.c	FUNCTION_23	ELSE_1
0x400395e	    0x8b0500000000	            mov eax, dword [0x04003964] 	      1619	gui.c	FUNCTION_23	ELSE_1
0x4003964	     0xfaf1d000000	            imul ebx, dword [0x0400396b]	      1618	gui.c	FUNCTION_23	ELSE_1
0x400396b	     0xfaf05000000	            imul eax, dword [0x04003972]	      1619	gui.c	FUNCTION_23	ELSE_1
0x4003972	          0x4401f3	                           add ebx, r14d	      1618	gui.c	FUNCTION_23	ELSE_1
0x4003975	          0x4401f8	                           add eax, r15d	      1619	gui.c	FUNCTION_23	ELSE_1
0x4003978	          0x4585e4	                         test r12d, r12d	      1622	gui.c	FUNCTION_23	IF_5
0x400397b	        0x89442404	                mov dword [rsp + 4], eax	      1619	gui.c	FUNCTION_23	ELSE_1
0x400397f	     0xf859b010000	                           jne 0x4003b20	      1622	gui.c	FUNCTION_23	IF_5
0x4003985	      0xe800000000	                          call 0x400398a	      1651	gui.c	FUNCTION_23	CALL_10
0x400398a	    0x488b05000000	            mov rax, qword [0x04003991] 	      1652	gui.c	FUNCTION_23
0x4003991	    0x890500000000	            mov dword [0x04003997], eax 	      1652	gui.c	FUNCTION_23
0x4003997	    0x488b05000000	            mov rax, qword [0x0400399e] 	      1653	gui.c	FUNCTION_23
0x400399e	    0x890500000000	            mov dword [0x040039a4], eax 	      1653	gui.c	FUNCTION_23
0x40039a4	    0x8b0500000000	            mov eax, dword [0x040039aa] 	      1655	gui.c	FUNCTION_23
0x40039aa	          0x8d0440	                  lea eax, [rax + rax*2]	      1655	gui.c	FUNCTION_23
0x40039ad	        0x418d0486	                  lea eax, [r14 + rax*4]	      1655	gui.c	FUNCTION_23
0x40039b1	        0x89442408	                mov dword [rsp + 8], eax	      1655	gui.c	FUNCTION_23
0x40039b5	    0x8b0500000000	            mov eax, dword [0x040039bb] 	      1656	gui.c	FUNCTION_23
0x40039bb	        0x418d0447	                  lea eax, [r15 + rax*2]	      1656	gui.c	FUNCTION_23
0x40039bf	        0x8944240c	              mov dword [rsp + 0xc], eax	      1656	gui.c	FUNCTION_23
0x40039c3	      0xe800000000	                          call 0x40039c8	      1657	gui.c	FUNCTION_23	CALL_11
0x40039c8	     0xfaf05000000	            imul eax, dword [0x040039cf]	      1657	gui.c	FUNCTION_23	CALL_11
0x40039cf	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      1657	gui.c	FUNCTION_23	CALL_11
0x40039d3	            0x85ed	                           test ebp, ebp	      1660	gui.c	FUNCTION_23	IF_10
0x40039d5	          0x8d0c10	                    lea ecx, [rax + rdx]	      1657	gui.c	FUNCTION_23	CALL_11
0x40039d8	     0xf85e2000000	                           jne 0x4003ac0	      1660	gui.c	FUNCTION_23	IF_10
0x40039de	        0x4883ec08	                              sub rsp, 8	      1672	gui.c	FUNCTION_23	CALL_15
0x40039e2	          0x4589f9	                           mov r9d, r15d	      1672	gui.c	FUNCTION_23	CALL_15
0x40039e5	          0x4589f0	                           mov r8d, r14d	      1672	gui.c	FUNCTION_23	CALL_15
0x40039e8	            0x4155	                                push r13	      1672	gui.c	FUNCTION_23	CALL_15
0x40039ea	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      1672	gui.c	FUNCTION_23	CALL_15
0x40039ee	            0x89df	                            mov edi, ebx	      1672	gui.c	FUNCTION_23	CALL_15
0x40039f0	        0x8b742414	            mov esi, dword [rsp + 0x14] 	      1672	gui.c	FUNCTION_23	CALL_15
0x40039f4	      0xe800000000	                          call 0x40039f9	      1672	gui.c	FUNCTION_23	CALL_15
0x40039f9	          0x4585e4	                         test r12d, r12d	      1675	gui.c	FUNCTION_23	IF_12
0x40039fc	              0x59	                                 pop rcx	      1675	gui.c	FUNCTION_23	IF_12
0x40039fd	              0x5e	                                 pop rsi	      1675	gui.c	FUNCTION_23	IF_12
0x40039fe	            0x7430	                            je 0x4003a30	      1675	gui.c	FUNCTION_23	IF_12
0x4003a00	        0x8b542420	            mov edx, dword [rsp + 0x20] 	      1675	gui.c	FUNCTION_23	IF_12
0x4003a04	            0x85d2	                           test edx, edx	      1675	gui.c	FUNCTION_23	IF_12
0x4003a06	            0x7828	                            js 0x4003a30	      1675	gui.c	FUNCTION_23	IF_12
0x4003a08	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      1675	gui.c	FUNCTION_23	IF_12
0x4003a0c	            0x85c0	                           test eax, eax	      1675	gui.c	FUNCTION_23	IF_12
0x4003a0e	            0x7820	                            js 0x4003a30	      1675	gui.c	FUNCTION_23	IF_12
0x4003a10	      0xe800000000	                          call 0x4003a15	      1680	gui.c	FUNCTION_23	IF_12	CALL_16
0x4003a15	      0x488d742424	                   lea rsi, [rsp + 0x24]	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4003a1a	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4003a1f	      0xe800000000	                          call 0x4003a24	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4003a24	          0x83f801	                              cmp eax, 1	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4003a27	     0xf849b010000	                            je 0x4003bc8	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4003a2d	           0xf1f00	                         nop dword [rax]	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4003a30	      0xe86bceffff	 call sym.gui_position_components.isra.3	      1685	gui.c	FUNCTION_23	CALL_19
0x4003a35	      0xbf01000000	                              mov edi, 1	      1686	gui.c	FUNCTION_23	CALL_20
0x4003a3a	      0xe800000000	                          call 0x4003a3f	      1686	gui.c	FUNCTION_23	CALL_20
0x4003a3f	    0x8b0500000000	            mov eax, dword [0x04003a45] 	      1706	gui.c	FUNCTION_25
0x4003a45	    0xc70500000000	               mov dword [0x04003a4f], 0	      1705	gui.c	FUNCTION_25
0x4003a4f	    0xc70500000000	               mov dword [0x04003a59], 0	      1707	gui.c	FUNCTION_25
0x4003a59	          0x83e801	                              sub eax, 1	      1706	gui.c	FUNCTION_25
0x4003a5c	    0x890500000000	            mov dword [0x04003a62], eax 	      1706	gui.c	FUNCTION_25
0x4003a62	    0x8b0500000000	            mov eax, dword [0x04003a68] 	      1708	gui.c	FUNCTION_25
0x4003a68	          0x83e801	                              sub eax, 1	      1708	gui.c	FUNCTION_25
0x4003a6b	    0x890500000000	            mov dword [0x04003a71], eax 	      1708	gui.c	FUNCTION_25
0x4003a71	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1688	gui.c	FUNCTION_23
0x4003a76	    0x644833042528	                xor rax, qword fs:[0x28]	      1688	gui.c	FUNCTION_23
0x4003a7f	     0xf85e8010000	                           jne 0x4003c6d	      1688	gui.c	FUNCTION_23
0x4003a85	        0x4883c438	                           add rsp, 0x38	      1688	gui.c	FUNCTION_23
0x4003a89	              0x5b	                                 pop rbx	      1688	gui.c	FUNCTION_23
0x4003a8a	              0x5d	                                 pop rbp	      1688	gui.c	FUNCTION_23
0x4003a8b	            0x415c	                                 pop r12	      1688	gui.c	FUNCTION_23
0x4003a8d	            0x415d	                                 pop r13	      1688	gui.c	FUNCTION_23
0x4003a8f	            0x415e	                                 pop r14	      1688	gui.c	FUNCTION_23
0x4003a91	            0x415f	                                 pop r15	      1688	gui.c	FUNCTION_23
0x4003a93	              0xc3	                                     ret	      1688	gui.c	FUNCTION_23
0x4003a94	         0xf1f4000	                         nop dword [rax]	      1688	gui.c	FUNCTION_23
0x4003a98	    0x488b3d000000	            mov rdi, qword [0x04003a9f] 	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x4003a9f	      0xbe6b000000	                           mov esi, 0x6b	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x4003aa4	      0xe800000000	                          call 0x4003aa9	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x4003aa9	          0x4885c0	                           test rax, rax	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x4003aac	     0xf848e010000	                            je 0x4003c40	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x4003ab2	      0xe800000000	                          call 0x4003ab7	      1597	gui.c	FUNCTION_23	IF_2	CALL_3
0x4003ab7	            0xebb8	                           jmp 0x4003a71	      1598	gui.c	FUNCTION_23	IF_2
0x4003ab9	     0xf1f80000000	                         nop dword [rax]	      1598	gui.c	FUNCTION_23	IF_2
0x4003ac0	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      1664	gui.c	FUNCTION_23	IF_10	CALL_12
0x4003ac5	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      1664	gui.c	FUNCTION_23	IF_10	CALL_12
0x4003aca	        0x894c240c	              mov dword [rsp + 0xc], ecx	      1664	gui.c	FUNCTION_23	IF_10	CALL_12
0x4003ace	      0xe800000000	                          call 0x4003ad3	      1664	gui.c	FUNCTION_23	IF_10	CALL_12
0x4003ad3	    0x8b0500000000	            mov eax, dword [0x04003ad9] 	      1665	gui.c	FUNCTION_23	IF_10	IF_11
0x4003ad9	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      1665	gui.c	FUNCTION_23	IF_10	IF_11
0x4003add	             0x1d8	                            add eax, ebx	      1665	gui.c	FUNCTION_23	IF_10	IF_11
0x4003adf	        0x3b442418	            cmp eax, dword [rsp + 0x18] 	      1665	gui.c	FUNCTION_23	IF_10	IF_11
0x4003ae3	            0x7c17	                            jl 0x4003afc	      1665	gui.c	FUNCTION_23	IF_10	IF_11
0x4003ae5	    0x8b0500000000	            mov eax, dword [0x04003aeb] 	      1666	gui.c	FUNCTION_23	IF_10	IF_11
0x4003aeb	        0x8b542404	                mov edx, dword [rsp + 4]	      1666	gui.c	FUNCTION_23	IF_10	IF_11
0x4003aef	          0x8d0442	                  lea eax, [rdx + rax*2]	      1666	gui.c	FUNCTION_23	IF_10	IF_11
0x4003af2	        0x3b44241c	            cmp eax, dword [rsp + 0x1c] 	      1666	gui.c	FUNCTION_23	IF_10	IF_11
0x4003af6	     0xf8de2feffff	                           jge 0x40039de	      1666	gui.c	FUNCTION_23	IF_10	IF_11
0x4003afc	        0x894c240c	              mov dword [rsp + 0xc], ecx	      1666	gui.c	FUNCTION_23	IF_10	IF_11
0x4003b00	      0xe800000000	                          call 0x4003b05	      1667	gui.c	FUNCTION_23	IF_10	IF_11	CALL_13
0x4003b05	            0x85c0	                           test eax, eax	      1667	gui.c	FUNCTION_23	IF_10	IF_11	CALL_13
0x4003b07	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      1667	gui.c	FUNCTION_23	IF_10	IF_11	CALL_13
0x4003b0b	     0xf84cdfeffff	                            je 0x40039de	      1667	gui.c	FUNCTION_23	IF_10	IF_11	CALL_13
0x4003b11	      0xe800000000	                          call 0x4003b16	      1668	gui.c	FUNCTION_23	IF_10	CALL_14
0x4003b16	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      1668	gui.c	FUNCTION_23	IF_10	CALL_14
0x4003b1a	      0xe9bffeffff	                           jmp 0x40039de	      1668	gui.c	FUNCTION_23	IF_10	CALL_14
0x4003b1f	              0x90	                                     nop	      1668	gui.c	FUNCTION_23	IF_10	CALL_14
0x4003b20	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      1624	gui.c	FUNCTION_23	IF_5	CALL_8
0x4003b25	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      1624	gui.c	FUNCTION_23	IF_5	CALL_8
0x4003b2a	      0xe800000000	                          call 0x4003b2f	      1624	gui.c	FUNCTION_23	IF_5	CALL_8
0x4003b2f	            0x31c9	                            xor ecx, ecx	      1584	gui.c	FUNCTION_23
0x4003b31	        0x41f6c502	                            test r13b, 2	      1625	gui.c	FUNCTION_23	IF_5	IF_6
0x4003b35	            0x7434	                            je 0x4003b6b	      1625	gui.c	FUNCTION_23	IF_5	IF_6
0x4003b37	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      1625	gui.c	FUNCTION_23	IF_5	IF_6
0x4003b3b	            0x39c3	                            cmp ebx, eax	      1625	gui.c	FUNCTION_23	IF_5	IF_6
0x4003b3d	            0x7e2c	                           jle 0x4003b6b	      1625	gui.c	FUNCTION_23	IF_5	IF_6
0x4003b3f	    0x8b1d00000000	            mov ebx, dword [0x04003b45] 	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x4003b45	          0x4429f0	                           sub eax, r14d	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x4003b48	              0x99	                                     cdq	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x4003b49	            0xf7fb	                                idiv ebx	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x4003b4b	          0x4863d0	                         movsxd rdx, eax	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x4003b4e	        0x4883fa0b	                            cmp rdx, 0xb	      1628	gui.c	FUNCTION_23	IF_5	IF_6	IF_7
0x4003b52	     0xf8e00010000	                           jle 0x4003c58	      1628	gui.c	FUNCTION_23	IF_5	IF_6	IF_7
0x4003b58	    0x488915000000	            mov qword [0x04003b5f], rdx 	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x4003b5f	           0xfafc3	                           imul eax, ebx	      1630	gui.c	FUNCTION_23	IF_5	IF_6
0x4003b62	      0xb901000000	                              mov ecx, 1	      1632	gui.c	FUNCTION_23	IF_5	IF_6
0x4003b67	        0x428d1c30	                    lea ebx, [rax + r14]	      1630	gui.c	FUNCTION_23	IF_5	IF_6
0x4003b6b	        0x41f6c501	                            test r13b, 1	      1635	gui.c	FUNCTION_23	IF_5	IF_8
0x4003b6f	            0x740a	                            je 0x4003b7b	      1635	gui.c	FUNCTION_23	IF_5	IF_8
0x4003b71	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      1635	gui.c	FUNCTION_23	IF_5	IF_8
0x4003b75	        0x39442404	                cmp dword [rsp + 4], eax	      1635	gui.c	FUNCTION_23	IF_5	IF_8
0x4003b79	            0x7f7d	                            jg 0x4003bf8	      1635	gui.c	FUNCTION_23	IF_5	IF_8
0x4003b7b	    0x8b0500000000	            mov eax, dword [0x04003b81] 	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x4003b81	             0x1d8	                            add eax, ebx	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x4003b83	        0x3b442418	            cmp eax, dword [rsp + 0x18] 	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x4003b87	     0xf8cf8fdffff	                            jl 0x4003985	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x4003b8d	        0x8b442404	                mov eax, dword [rsp + 4]	      1646	gui.c	FUNCTION_23	IF_5	IF_9
0x4003b91	     0x30500000000	             add eax, dword [0x04003b97]	      1646	gui.c	FUNCTION_23	IF_5	IF_9
0x4003b97	        0x3b44241c	            cmp eax, dword [rsp + 0x1c] 	      1646	gui.c	FUNCTION_23	IF_5	IF_9
0x4003b9b	     0xf8ce4fdffff	                            jl 0x4003985	      1646	gui.c	FUNCTION_23	IF_5	IF_9
0x4003ba1	            0x31ed	                            xor ebp, ebp	      1648	gui.c	FUNCTION_23	IF_5	IF_9
0x4003ba3	      0xe9ddfdffff	                           jmp 0x4003985	      1648	gui.c	FUNCTION_23	IF_5	IF_9
0x4003ba8	     0xf1f84000000	                   nop dword [rax + rax]	      1648	gui.c	FUNCTION_23	IF_5	IF_9
0x4003bb0	      0x488d742424	                   lea rsi, [rsp + 0x24]	      1606	gui.c	FUNCTION_23	CALL_6
0x4003bb5	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1606	gui.c	FUNCTION_23	CALL_6
0x4003bba	      0xe800000000	                          call 0x4003bbf	      1606	gui.c	FUNCTION_23	CALL_6
0x4003bbf	      0xe994fdffff	                           jmp 0x4003958	      1606	gui.c	FUNCTION_23	CALL_6
0x4003bc4	         0xf1f4000	                         nop dword [rax]	      1606	gui.c	FUNCTION_23	CALL_6
0x4003bc8	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4003bcc	        0x8b742424	            mov esi, dword [rsp + 0x24] 	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4003bd0	            0x85c0	                           test eax, eax	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4003bd2	            0x7808	                            js 0x4003bdc	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4003bd4	            0x85f6	                           test esi, esi	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4003bd6	     0xf8954feffff	                           jns 0x4003a30	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4003bdc	            0x31ff	                            xor edi, edi	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x4003bde	            0x85f6	                           test esi, esi	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x4003be0	           0xf48f7	                          cmovs esi, edi	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x4003be3	            0x85c0	                           test eax, eax	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x4003be5	           0xf49f8	                         cmovns edi, eax	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x4003be8	      0xe800000000	                          call 0x4003bed	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x4003bed	      0xe93efeffff	                           jmp 0x4003a30	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x4003bf2	    0x660f1f440000	                    nop word [rax + rax]	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x4003bf8	          0x4429f8	                           sub eax, r15d	      1637	gui.c	FUNCTION_23	IF_5	IF_8
0x4003bfb	        0x894c2408	                mov dword [rsp + 8], ecx	      1637	gui.c	FUNCTION_23	IF_5	IF_8
0x4003bff	              0x99	                                     cdq	      1637	gui.c	FUNCTION_23	IF_5	IF_8
0x4003c00	    0xf73d00000000	                 idiv dword [0x04003c06]	      1637	gui.c	FUNCTION_23	IF_5	IF_8
0x4003c06	            0x4898	                                    cdqe	      1637	gui.c	FUNCTION_23	IF_5	IF_8
0x4003c08	    0x488905000000	            mov qword [0x04003c0f], rax 	      1637	gui.c	FUNCTION_23	IF_5	IF_8
0x4003c0f	      0xe800000000	                          call 0x4003c14	      1638	gui.c	FUNCTION_23	IF_5	IF_8	CALL_9
0x4003c14	    0x8b0500000000	            mov eax, dword [0x04003c1a] 	      1639	gui.c	FUNCTION_23	IF_5	IF_8
0x4003c1a	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x4003c1e	     0xfaf05000000	            imul eax, dword [0x04003c25]	      1639	gui.c	FUNCTION_23	IF_5	IF_8
0x4003c25	          0x4401f8	                           add eax, r15d	      1639	gui.c	FUNCTION_23	IF_5	IF_8
0x4003c28	          0x83f901	                              cmp ecx, 1	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x4003c2b	        0x89442404	                mov dword [rsp + 4], eax	      1639	gui.c	FUNCTION_23	IF_5	IF_8
0x4003c2f	     0xf8546ffffff	                           jne 0x4003b7b	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x4003c35	            0x31ed	                            xor ebp, ebp	      1648	gui.c	FUNCTION_23	IF_5	IF_9
0x4003c37	      0xe949fdffff	                           jmp 0x4003985	      1648	gui.c	FUNCTION_23	IF_5	IF_9
0x4003c3c	         0xf1f4000	                         nop dword [rax]	      1648	gui.c	FUNCTION_23	IF_5	IF_9
0x4003c40	      0xe800000000	                          call 0x4003c45	      1595	gui.c	FUNCTION_23	IF_2	CALL_2
0x4003c45	            0x85c0	                           test eax, eax	      1595	gui.c	FUNCTION_23	IF_2	CALL_2
0x4003c47	     0xf8565feffff	                           jne 0x4003ab2	      1595	gui.c	FUNCTION_23	IF_2	CALL_2
0x4003c4d	      0xe9acfcffff	                           jmp 0x40038fe	      1595	gui.c	FUNCTION_23	IF_2	CALL_2
0x4003c52	    0x660f1f440000	                    nop word [rax + rax]	      1595	gui.c	FUNCTION_23	IF_2	CALL_2
0x4003c58	    0x48c705000000	            mov qword [0x04003c63], 0xc 	      1629	gui.c	FUNCTION_23	IF_5	IF_6	IF_7
0x4003c63	      0xb80c000000	                            mov eax, 0xc	      1629	gui.c	FUNCTION_23	IF_5	IF_6	IF_7
0x4003c68	      0xe9f2feffff	                           jmp 0x4003b5f	      1629	gui.c	FUNCTION_23	IF_5	IF_6	IF_7
0x4003c6d	      0xe800000000	                          call 0x4003c72	      1688	gui.c	FUNCTION_23
gui_dont_update_cursor	IF,2:SWITCH,0:functions,0:CALL,1:WHILE,0:ELSE,0:FOR,0:DO,0	15
0x4001f50	    0x8b0500000000	            mov eax, dword [0x04001f56] 	      1993	gui.c	FUNCTION_31	IF_1
0x4001f56	            0x85c0	                           test eax, eax	      1993	gui.c	FUNCTION_31	IF_1
0x4001f58	            0x7435	                            je 0x4001f8f	      1993	gui.c	FUNCTION_31	IF_1
0x4001f5a	            0x85ff	                           test edi, edi	      1996	gui.c	FUNCTION_31	IF_1	IF_2
0x4001f5c	            0x7409	                            je 0x4001f67	      1996	gui.c	FUNCTION_31	IF_1	IF_2
0x4001f5e	    0x803d00000000	                cmp byte [0x04001f65], 0	      2630	gui.c	FUNCTION_40	IF_1
0x4001f65	            0x7511	                           jne 0x4001f78	      2630	gui.c	FUNCTION_40	IF_1
0x4001f67	    0xc70500000000	               mov dword [0x04001f71], 0	      1998	gui.c	FUNCTION_31	IF_1
0x4001f71	              0xc3	                                     ret	      1998	gui.c	FUNCTION_31	IF_1
0x4001f72	    0x660f1f440000	                    nop word [rax + rax]	      1998	gui.c	FUNCTION_31	IF_1
0x4001f78	        0x4883ec08	                              sub rsp, 8	      1992	gui.c	FUNCTION_31
0x4001f7c	      0xe8dff8ffff	       call sym.gui_undraw_cursor.part.8	      1992	gui.c	FUNCTION_31
0x4001f81	    0xc70500000000	               mov dword [0x04001f8b], 0	      1998	gui.c	FUNCTION_31	IF_1
0x4001f8b	        0x4883c408	                              add rsp, 8	      2000	gui.c	FUNCTION_31
0x4001f8f	            0xf3c3	                                     ret	      2000	gui.c	FUNCTION_31
gui_do_findrepl	IF,16:SWITCH,0:functions,0:CALL,32:WHILE,0:ELSE,4:FOR,0:DO,0	204
0x4006480	            0x4157	                                push r15	      5276	gui.c	FUNCTION_91
0x4006482	            0x4156	                                push r14	      5276	gui.c	FUNCTION_91
0x4006484	            0x4155	                                push r13	      5276	gui.c	FUNCTION_91
0x4006486	            0x4154	                                push r12	      5276	gui.c	FUNCTION_91
0x4006488	              0x55	                                push rbp	      5276	gui.c	FUNCTION_91
0x4006489	              0x53	                                push rbx	      5276	gui.c	FUNCTION_91
0x400648a	    0x4881ece80000	                           sub rsp, 0xe8	      5276	gui.c	FUNCTION_91
0x4006491	    0x448b0d000000	            mov r9d, dword [0x04006498] 	      5288	gui.c	FUNCTION_91	IF_1
0x4006498	    0x64488b042528	                mov rax, qword fs:[0x28]	      5276	gui.c	FUNCTION_91
0x40064a1	    0x48898424d800	             mov qword [rsp + 0xd8], rax	      5276	gui.c	FUNCTION_91
0x40064a9	            0x31c0	                            xor eax, eax	      5276	gui.c	FUNCTION_91
0x40064ab	          0x4585c9	                           test r9d, r9d	      5288	gui.c	FUNCTION_91	IF_1
0x40064ae	     0xf854c010000	                           jne 0x4006600	      5288	gui.c	FUNCTION_91	IF_1
0x40064b4	    0x448b05000000	            mov r8d, dword [0x040064bb] 	      5288	gui.c	FUNCTION_91	IF_1
0x40064bb	          0x4585c0	                           test r8d, r8d	      5288	gui.c	FUNCTION_91	IF_1
0x40064be	     0xf853c010000	                           jne 0x4006600	      5288	gui.c	FUNCTION_91	IF_1
0x40064c4	            0x89fd	                            mov ebp, edi	      5279	gui.c	FUNCTION_91
0x40064c6	            0x89fb	                            mov ebx, edi	      5279	gui.c	FUNCTION_91
0x40064c8	          0x4989f5	                            mov r13, rsi	      5279	gui.c	FUNCTION_91
0x40064cb	          0x83e507	                              and ebp, 7	      5279	gui.c	FUNCTION_91
0x40064ce	          0x4989d6	                            mov r14, rdx	      5279	gui.c	FUNCTION_91
0x40064d1	          0x4189cc	                           mov r12d, ecx	      5279	gui.c	FUNCTION_91
0x40064d4	          0x8d45fd	                      lea eax, [rbp - 3]	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x40064d7	    0x448b3d000000	           mov r15d, dword [0x040064de] 	      5282	gui.c	FUNCTION_91
0x40064de	          0x83f801	                              cmp eax, 1	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x40064e1	     0xf8609010000	                           jbe 0x40065f0	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x40064e7	      0xba64000000	                           mov edx, 0x64	      5297	gui.c	FUNCTION_91	CALL_2
0x40064ec	      0xbe01000000	                              mov esi, 1	      5297	gui.c	FUNCTION_91	CALL_2
0x40064f1	          0x4889e7	                            mov rdi, rsp	      5297	gui.c	FUNCTION_91	CALL_2
0x40064f4	    0xc70500000000	               mov dword [0x040064fe], 1	      5295	gui.c	FUNCTION_91
0x40064fe	      0xe800000000	                          call 0x4006503	      5297	gui.c	FUNCTION_91	CALL_2
0x4006503	          0x83fd04	                              cmp ebp, 4	      5298	gui.c	FUNCTION_91	IF_3
0x4006506	     0xf8414020000	                            je 0x4006720	      5298	gui.c	FUNCTION_91	IF_3
0x400650c	      0xbe00000000	                              mov esi, 0	      5301	gui.c	FUNCTION_91	CALL_4
0x4006511	          0x4889e7	                            mov rdi, rsp	      5301	gui.c	FUNCTION_91	CALL_4
0x4006514	      0xe800000000	                          call 0x4006519	      5301	gui.c	FUNCTION_91	CALL_4
0x4006519	          0xf6c310	                           test bl, 0x10	      5302	gui.c	FUNCTION_91	IF_4
0x400651c	     0xf850e010000	                           jne 0x4006630	      5302	gui.c	FUNCTION_91	IF_4
0x4006522	      0xbe00000000	                              mov esi, 0	      5305	gui.c	FUNCTION_91	CALL_6
0x4006527	          0x4889e7	                            mov rdi, rsp	      5305	gui.c	FUNCTION_91	CALL_6
0x400652a	      0xe800000000	                          call 0x400652f	      5305	gui.c	FUNCTION_91	CALL_6
0x400652f	          0x83e308	                              and ebx, 8	      5306	gui.c	FUNCTION_91	IF_5
0x4006532	     0xf8528010000	                           jne 0x4006660	      5306	gui.c	FUNCTION_91	IF_5
0x4006538	          0x83fd04	                              cmp ebp, 4	      5308	gui.c	FUNCTION_91	IF_6
0x400653b	     0xf8407010000	                            je 0x4006648	      5308	gui.c	FUNCTION_91	IF_6
0x4006541	          0x4585e4	                         test r12d, r12d	      5308	gui.c	FUNCTION_91	IF_6
0x4006544	     0xf85fe000000	                           jne 0x4006648	      5308	gui.c	FUNCTION_91	IF_6
0x400654a	      0xba3f000000	                           mov edx, 0x3f	      5311	gui.c	FUNCTION_91	CALL_9
0x400654f	          0x4c89ee	                            mov rsi, r13	      5311	gui.c	FUNCTION_91	CALL_9
0x4006552	          0x4889e7	                            mov rdi, rsp	      5311	gui.c	FUNCTION_91	CALL_9
0x4006555	      0xe8a69fffff	                     call sym.concat_esc	      5311	gui.c	FUNCTION_91	CALL_9
0x400655a	            0x85db	                           test ebx, ebx	      5312	gui.c	FUNCTION_91	IF_7
0x400655c	     0xf853e010000	                           jne 0x40066a0	      5312	gui.c	FUNCTION_91	IF_7
0x4006562	          0x83fd04	                              cmp ebp, 4	      5315	gui.c	FUNCTION_91	IF_8
0x4006565	     0xf844d010000	                            je 0x40066b8	      5315	gui.c	FUNCTION_91	IF_8
0x400656b	            0x31f6	                            xor esi, esi	      5325	gui.c	FUNCTION_91	CALL_16
0x400656d	          0x4889e7	                            mov rdi, rsp	      5325	gui.c	FUNCTION_91	CALL_16
0x4006570	      0xe800000000	                          call 0x4006575	      5325	gui.c	FUNCTION_91	CALL_16
0x4006575	          0x83fd03	                              cmp ebp, 3	      5327	gui.c	FUNCTION_91	IF_10
0x4006578	    0x41b80c020000	                          mov r8d, 0x20c	      5367	gui.c	FUNCTION_91	ELSE_4
0x400657e	     0xf84b4010000	                            je 0x4006738	      5327	gui.c	FUNCTION_91	IF_10
0x4006584	        0x4183fc01	                             cmp r12d, 1	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x4006588	      0xb901000000	                              mov ecx, 1	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x400658d	    0x8b1d00000000	            mov ebx, dword [0x04006593] 	      5373	gui.c	FUNCTION_91	ELSE_4
0x4006593	            0x19f6	                            sbb esi, esi	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x4006595	        0x4883ec08	                              sub rsp, 8	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x4006599	          0x4531c9	                            xor r9d, r9d	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x400659c	            0x6a00	                                  push 0	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x400659e	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x40065a3	          0x83e610	                           and esi, 0x10	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x40065a6	          0x83c62f	                           add esi, 0x2f	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x40065a9	            0x31ff	                            xor edi, edi	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x40065ab	      0xe800000000	                          call 0x40065b0	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x40065b0	              0x59	                                 pop rcx	      5376	gui.c	FUNCTION_91	ELSE_4
0x40065b1	              0x5e	                                 pop rsi	      5376	gui.c	FUNCTION_91	ELSE_4
0x40065b2	    0x891d00000000	            mov dword [0x040065b8], ebx 	      5376	gui.c	FUNCTION_91	ELSE_4
0x40065b8	    0xf60500000000	           test byte [0x040065bf], 0x11 	      5383	gui.c	FUNCTION_91	IF_16
0x40065bf	    0x44893d000000	           mov dword [0x040065c6], r15d 	      5381	gui.c	FUNCTION_91
0x40065c6	     0xf85ac000000	                           jne 0x4006678	      5383	gui.c	FUNCTION_91	IF_16
0x40065cc	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      5390	gui.c	FUNCTION_91	CALL_32
0x40065d1	      0xe800000000	                          call 0x40065d6	      5390	gui.c	FUNCTION_91	CALL_32
0x40065d6	          0x8b1424	                    mov edx, dword [rsp]	      5392	gui.c	FUNCTION_91
0x40065d9	            0x31c0	                            xor eax, eax	      5392	gui.c	FUNCTION_91
0x40065db	    0xc70500000000	               mov dword [0x040065e5], 0	      5391	gui.c	FUNCTION_91
0x40065e5	            0x85d2	                           test edx, edx	      5392	gui.c	FUNCTION_91
0x40065e7	           0xf9fc0	                                 setg al	      5392	gui.c	FUNCTION_91
0x40065ea	            0xeb16	                           jmp 0x4006602	      5392	gui.c	FUNCTION_91
0x40065ec	         0xf1f4000	                         nop dword [rax]	      5392	gui.c	FUNCTION_91
0x40065f0	      0xe800000000	                          call 0x40065f5	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x40065f5	            0x85c0	                           test eax, eax	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x40065f7	     0xf84eafeffff	                            je 0x40064e7	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x40065fd	           0xf1f00	                         nop dword [rax]	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x4006600	            0x31c0	                            xor eax, eax	      5289	gui.c	FUNCTION_91	IF_1
0x4006602	    0x488b8c24d800	            mov rcx, qword [rsp + 0xd8] 	      5393	gui.c	FUNCTION_91
0x400660a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5393	gui.c	FUNCTION_91
0x4006613	     0xf85c6010000	                           jne 0x40067df	      5393	gui.c	FUNCTION_91
0x4006619	    0x4881c4e80000	                           add rsp, 0xe8	      5393	gui.c	FUNCTION_91
0x4006620	              0x5b	                                 pop rbx	      5393	gui.c	FUNCTION_91
0x4006621	              0x5d	                                 pop rbp	      5393	gui.c	FUNCTION_91
0x4006622	            0x415c	                                 pop r12	      5393	gui.c	FUNCTION_91
0x4006624	            0x415d	                                 pop r13	      5393	gui.c	FUNCTION_91
0x4006626	            0x415e	                                 pop r14	      5393	gui.c	FUNCTION_91
0x4006628	            0x415f	                                 pop r15	      5393	gui.c	FUNCTION_91
0x400662a	              0xc3	                                     ret	      5393	gui.c	FUNCTION_91
0x400662b	       0xf1f440000	                   nop dword [rax + rax]	      5393	gui.c	FUNCTION_91
0x4006630	      0xbe00000000	                              mov esi, 0	      5303	gui.c	FUNCTION_91	CALL_5
0x4006635	          0x4889e7	                            mov rdi, rsp	      5303	gui.c	FUNCTION_91	CALL_5
0x4006638	      0xe800000000	                          call 0x400663d	      5303	gui.c	FUNCTION_91	CALL_5
0x400663d	      0xe9edfeffff	                           jmp 0x400652f	      5303	gui.c	FUNCTION_91	CALL_5
0x4006642	    0x660f1f440000	                    nop word [rax + rax]	      5303	gui.c	FUNCTION_91	CALL_5
0x4006648	      0xba2f000000	                           mov edx, 0x2f	      5309	gui.c	FUNCTION_91	CALL_8
0x400664d	          0x4c89ee	                            mov rsi, r13	      5309	gui.c	FUNCTION_91	CALL_8
0x4006650	          0x4889e7	                            mov rdi, rsp	      5309	gui.c	FUNCTION_91	CALL_8
0x4006653	      0xe8a89effff	                     call sym.concat_esc	      5309	gui.c	FUNCTION_91	CALL_8
0x4006658	      0xe9fdfeffff	                           jmp 0x400655a	      5309	gui.c	FUNCTION_91	CALL_8
0x400665d	           0xf1f00	                         nop dword [rax]	      5309	gui.c	FUNCTION_91	CALL_8
0x4006660	      0xbe00000000	                              mov esi, 0	      5307	gui.c	FUNCTION_91	CALL_7
0x4006665	          0x4889e7	                            mov rdi, rsp	      5307	gui.c	FUNCTION_91	CALL_7
0x4006668	      0xe800000000	                          call 0x400666d	      5307	gui.c	FUNCTION_91	CALL_7
0x400666d	      0xe9c6feffff	                           jmp 0x4006538	      5307	gui.c	FUNCTION_91	CALL_7
0x4006672	    0x660f1f440000	                    nop word [rax + rax]	      5307	gui.c	FUNCTION_91	CALL_7
0x4006678	      0xe800000000	                          call 0x400667d	      5385	gui.c	FUNCTION_91	IF_16	CALL_31
0x400667d	    0xc70500000000	               mov dword [0x04006687], 0	      5386	gui.c	FUNCTION_91	IF_16
0x4006687	    0xc70500000000	               mov dword [0x04006691], 0	      5387	gui.c	FUNCTION_91	IF_16
0x4006691	      0xe936ffffff	                           jmp 0x40065cc	      5387	gui.c	FUNCTION_91	IF_16
0x4006696	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5387	gui.c	FUNCTION_91	IF_16
0x40066a0	      0xbe00000000	                              mov esi, 0	      5313	gui.c	FUNCTION_91	CALL_10
0x40066a5	          0x4889e7	                            mov rdi, rsp	      5313	gui.c	FUNCTION_91	CALL_10
0x40066a8	      0xe800000000	                          call 0x40066ad	      5313	gui.c	FUNCTION_91	CALL_10
0x40066ad	      0xe9b0feffff	                           jmp 0x4006562	      5313	gui.c	FUNCTION_91	CALL_10
0x40066b2	    0x660f1f440000	                    nop word [rax + rax]	      5313	gui.c	FUNCTION_91	CALL_10
0x40066b8	      0xbe00000000	                              mov esi, 0	      5317	gui.c	FUNCTION_91	IF_8	CALL_11
0x40066bd	          0x4889e7	                            mov rdi, rsp	      5317	gui.c	FUNCTION_91	IF_8	CALL_11
0x40066c0	      0xe800000000	                          call 0x40066c5	      5317	gui.c	FUNCTION_91	IF_8	CALL_11
0x40066c5	      0xbe00000000	                              mov esi, 0	      5319	gui.c	FUNCTION_91	IF_8	CALL_12
0x40066ca	          0x4c89f7	                            mov rdi, r14	      5319	gui.c	FUNCTION_91	IF_8	CALL_12
0x40066cd	      0xe800000000	                          call 0x40066d2	      5319	gui.c	FUNCTION_91	IF_8	CALL_12
0x40066d2	          0x4885c0	                           test rax, rax	      5320	gui.c	FUNCTION_91	IF_8	IF_9
0x40066d5	          0x4889c3	                            mov rbx, rax	      5319	gui.c	FUNCTION_91	IF_8	CALL_12
0x40066d8	            0x740b	                            je 0x40066e5	      5320	gui.c	FUNCTION_91	IF_8	IF_9
0x40066da	          0x4889c6	                            mov rsi, rax	      5321	gui.c	FUNCTION_91	IF_8	CALL_13
0x40066dd	          0x4889e7	                            mov rdi, rsp	      5321	gui.c	FUNCTION_91	IF_8	CALL_13
0x40066e0	      0xe800000000	                          call 0x40066e5	      5321	gui.c	FUNCTION_91	IF_8	CALL_13
0x40066e5	          0x4889df	                            mov rdi, rbx	      5322	gui.c	FUNCTION_91	IF_8	CALL_14
0x40066e8	      0xe800000000	                          call 0x40066ed	      5322	gui.c	FUNCTION_91	IF_8	CALL_14
0x40066ed	          0x4889e7	                            mov rdi, rsp	      5323	gui.c	FUNCTION_91	IF_8	CALL_15
0x40066f0	      0xbe00000000	                              mov esi, 0	      5323	gui.c	FUNCTION_91	IF_8	CALL_15
0x40066f5	      0xe800000000	                          call 0x40066fa	      5323	gui.c	FUNCTION_91	IF_8	CALL_15
0x40066fa	            0x31f6	                            xor esi, esi	      5325	gui.c	FUNCTION_91	CALL_16
0x40066fc	          0x4889e7	                            mov rdi, rsp	      5325	gui.c	FUNCTION_91	CALL_16
0x40066ff	      0xe800000000	                          call 0x4006704	      5325	gui.c	FUNCTION_91	CALL_16
0x4006704	            0x31ff	                            xor edi, edi	      5362	gui.c	FUNCTION_91	IF_14	CALL_28
0x4006706	      0xe800000000	                          call 0x400670b	      5362	gui.c	FUNCTION_91	IF_14	CALL_28
0x400670b	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      5363	gui.c	FUNCTION_91	IF_14	CALL_29
0x4006710	      0xe800000000	                          call 0x4006715	      5363	gui.c	FUNCTION_91	IF_14	CALL_29
0x4006715	      0xe99efeffff	                           jmp 0x40065b8	      5363	gui.c	FUNCTION_91	IF_14	CALL_29
0x400671a	    0x660f1f440000	                    nop word [rax + rax]	      5363	gui.c	FUNCTION_91	IF_14	CALL_29
0x4006720	      0xbe00000000	                              mov esi, 0	      5299	gui.c	FUNCTION_91	CALL_3
0x4006725	          0x4889e7	                            mov rdi, rsp	      5299	gui.c	FUNCTION_91	CALL_3
0x4006728	      0xe800000000	                          call 0x400672d	      5299	gui.c	FUNCTION_91	CALL_3
0x400672d	      0xe9dafdffff	                           jmp 0x400650c	      5299	gui.c	FUNCTION_91	CALL_3
0x4006732	    0x660f1f440000	                    nop word [rax + rax]	      5299	gui.c	FUNCTION_91	CALL_3
0x4006738	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      5331	gui.c	FUNCTION_91	IF_10	CALL_17
0x400673d	      0xbe03000000	                              mov esi, 3	      5331	gui.c	FUNCTION_91	IF_10	CALL_17
0x4006742	      0xe800000000	                          call 0x4006747	      5331	gui.c	FUNCTION_91	IF_10	CALL_17
0x4006747	          0x4885c0	                           test rax, rax	      5333	gui.c	FUNCTION_91	IF_10	IF_11
0x400674a	      0x4889442420	             mov qword [rsp + 0x20], rax	      5331	gui.c	FUNCTION_91	IF_10	CALL_17
0x400674f	    0xc78424c80000	               mov dword [rsp + 0xc8], 0	      5332	gui.c	FUNCTION_91	IF_10
0x400675a	            0x7445	                            je 0x40067a1	      5333	gui.c	FUNCTION_91	IF_10	IF_11
0x400675c	      0xe800000000	                          call 0x4006761	      5335	gui.c	FUNCTION_91	IF_10	IF_11	CALL_18
0x4006761	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x4006766	            0x31d2	                            xor edx, edx	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x4006768	          0x4889c6	                            mov rsi, rax	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x400676b	          0x4889c3	                            mov rbx, rax	      5335	gui.c	FUNCTION_91	IF_10	IF_11	CALL_18
0x400676e	      0xe800000000	                          call 0x4006773	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x4006773	            0x85c0	                           test eax, eax	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x4006775	            0x7407	                            je 0x400677e	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x4006777	      0x483b5c2428	            cmp rbx, qword [rsp + 0x28] 	      5337	gui.c	FUNCTION_91	IF_10	IF_11	IF_12
0x400677c	            0x742e	                            je 0x40067ac	      5337	gui.c	FUNCTION_91	IF_10	IF_11	IF_12
0x400677e	            0x31ff	                            xor edi, edi	      5354	gui.c	FUNCTION_91	IF_10	IF_11	CALL_26
0x4006780	      0xba05000000	                              mov edx, 5	      5354	gui.c	FUNCTION_91	IF_10	IF_11	CALL_26
0x4006785	      0xbe00000000	                              mov esi, 0	      5354	gui.c	FUNCTION_91	IF_10	IF_11	CALL_26
0x400678a	      0xe800000000	                          call 0x400678f	      5354	gui.c	FUNCTION_91	IF_10	IF_11	CALL_26
0x400678f	          0x4889c7	                            mov rdi, rax	      5354	gui.c	FUNCTION_91	IF_10	IF_11	CALL_26
0x4006792	      0xe800000000	                          call 0x4006797	      5354	gui.c	FUNCTION_91	IF_10	IF_11	CALL_26
0x4006797	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      5355	gui.c	FUNCTION_91	IF_10	IF_11	CALL_27
0x400679c	      0xe800000000	                          call 0x40067a1	      5355	gui.c	FUNCTION_91	IF_10	IF_11	CALL_27
0x40067a1	    0x41b80c030000	                          mov r8d, 0x30c	      5372	gui.c	FUNCTION_91	ELSE_4	IF_15
0x40067a7	      0xe9d8fdffff	                           jmp 0x4006584	      5372	gui.c	FUNCTION_91	ELSE_4	IF_15
0x40067ac	      0xe800000000	                          call 0x40067b1	      5341	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_20
0x40067b1	      0xe800000000	                          call 0x40067b6	      5343	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_21
0x40067b6	          0x83f801	                              cmp eax, 1	      5343	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_21
0x40067b9	            0x75dc	                           jne 0x4006797	      5343	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_21
0x40067bb	            0x31ff	                            xor edi, edi	      5346	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_22
0x40067bd	      0xe800000000	                          call 0x40067c2	      5346	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_22
0x40067c2	      0x488b7c2478	            mov rdi, qword [rsp + 0x78] 	      5348	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_23
0x40067c7	      0x482b7c2428	             sub rdi, qword [rsp + 0x28]	      5348	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_23
0x40067cc	            0x31d2	                            xor edx, edx	      5348	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_23
0x40067ce	            0x31f6	                            xor esi, esi	      5348	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_23
0x40067d0	      0xe800000000	                          call 0x40067d5	      5348	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_23
0x40067d5	          0x4c89f7	                            mov rdi, r14	      5350	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_24
0x40067d8	      0xe800000000	                          call 0x40067dd	      5350	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_24
0x40067dd	            0xebb8	                           jmp 0x4006797	      5350	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_24
0x40067df	      0xe800000000	                          call 0x40067e4	      5393	gui.c	FUNCTION_91
send_tabline_menu_event	IF,1:SWITCH,0:functions,0:CALL,2:WHILE,0:ELSE,0:FOR,0:DO,0	32
0x4003090	              0x55	                                push rbp	      3857	gui.c	FUNCTION_59
0x4003091	              0x53	                                push rbx	      3857	gui.c	FUNCTION_59
0x4003092	        0x4883ec18	                           sub rsp, 0x18	      3857	gui.c	FUNCTION_59
0x4003096	    0x64488b042528	                mov rax, qword fs:[0x28]	      3857	gui.c	FUNCTION_59
0x400309f	      0x4889442408	                mov qword [rsp + 8], rax	      3857	gui.c	FUNCTION_59
0x40030a4	            0x31c0	                            xor eax, eax	      3857	gui.c	FUNCTION_59
0x40030a6	    0x8b0500000000	            mov eax, dword [0x040030ac] 	      3861	gui.c	FUNCTION_59	IF_1
0x40030ac	            0x85c0	                           test eax, eax	      3861	gui.c	FUNCTION_59	IF_1
0x40030ae	            0x7420	                            je 0x40030d0	      3861	gui.c	FUNCTION_59	IF_1
0x40030b0	      0x488b442408	                mov rax, qword [rsp + 8]	      3871	gui.c	FUNCTION_59
0x40030b5	    0x644833042528	                xor rax, qword fs:[0x28]	      3871	gui.c	FUNCTION_59
0x40030be	            0x7546	                           jne 0x4003106	      3871	gui.c	FUNCTION_59
0x40030c0	        0x4883c418	                           add rsp, 0x18	      3871	gui.c	FUNCTION_59
0x40030c4	              0x5b	                                 pop rbx	      3871	gui.c	FUNCTION_59
0x40030c5	              0x5d	                                 pop rbp	      3871	gui.c	FUNCTION_59
0x40030c6	              0xc3	                                     ret	      3871	gui.c	FUNCTION_59
0x40030c7	    0x660f1f840000	                    nop word [rax + rax]	      3871	gui.c	FUNCTION_59
0x40030d0	            0x89fd	                            mov ebp, edi	      3871	gui.c	FUNCTION_59
0x40030d2	            0x89f3	                            mov ebx, esi	      3871	gui.c	FUNCTION_59
0x40030d4	          0x4889e7	                            mov rdi, rsp	      3867	gui.c	FUNCTION_59	CALL_1
0x40030d7	      0xbe03000000	                              mov esi, 3	      3867	gui.c	FUNCTION_59	CALL_1
0x40030dc	        0xc604249b	                    mov byte [rsp], 0x9b	      3864	gui.c	FUNCTION_59
0x40030e0	      0xc6442401ef	                mov byte [rsp + 1], 0xef	      3865	gui.c	FUNCTION_59
0x40030e5	      0xc644240258	                mov byte [rsp + 2], 0x58	      3866	gui.c	FUNCTION_59
0x40030ea	      0xe800000000	                          call 0x40030ef	      3867	gui.c	FUNCTION_59	CALL_1
0x40030ef	      0xbe02000000	                              mov esi, 2	      3870	gui.c	FUNCTION_59	CALL_2
0x40030f4	          0x4889e7	                            mov rdi, rsp	      3870	gui.c	FUNCTION_59	CALL_2
0x40030f7	        0x40882c24	                     mov byte [rsp], bpl	      3868	gui.c	FUNCTION_59
0x40030fb	        0x885c2401	                  mov byte [rsp + 1], bl	      3869	gui.c	FUNCTION_59
0x40030ff	      0xe800000000	                          call 0x4003104	      3870	gui.c	FUNCTION_59	CALL_2
0x4003104	            0xebaa	                           jmp 0x40030b0	      3870	gui.c	FUNCTION_59	CALL_2
0x4003106	      0xe800000000	                          call 0x400310b	      3871	gui.c	FUNCTION_59
gui_get_color	IF,2:SWITCH,0:functions,0:CALL,3:WHILE,0:ELSE,0:FOR,0:DO,0	38
0x4005620	              0x55	                                push rbp	      4763	gui.c	FUNCTION_75
0x4005621	              0x53	                                push rbx	      4763	gui.c	FUNCTION_75
0x4005622	        0x4883ec08	                              sub rsp, 8	      4763	gui.c	FUNCTION_75
0x4005626	          0x803f00	                       cmp byte [rdi], 0	      4766	gui.c	FUNCTION_75	IF_1
0x4005629	            0x742f	                            je 0x400565a	      4766	gui.c	FUNCTION_75	IF_1
0x400562b	          0x4889fb	                            mov rbx, rdi	      4766	gui.c	FUNCTION_75	IF_1
0x400562e	      0xe800000000	                          call 0x4005633	      4768	gui.c	FUNCTION_75	CALL_1
0x4005633	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      4770	gui.c	FUNCTION_75	IF_2
0x4005639	          0x4889c5	                            mov rbp, rax	      4768	gui.c	FUNCTION_75	CALL_1
0x400563c	            0x7412	                            je 0x4005650	      4770	gui.c	FUNCTION_75	IF_2
0x400563e	        0x4883c408	                              add rsp, 8	      4777	gui.c	FUNCTION_75
0x4005642	          0x4889e8	                            mov rax, rbp	      4777	gui.c	FUNCTION_75
0x4005645	              0x5b	                                 pop rbx	      4777	gui.c	FUNCTION_75
0x4005646	              0x5d	                                 pop rbp	      4777	gui.c	FUNCTION_75
0x4005647	              0xc3	                                     ret	      4777	gui.c	FUNCTION_75
0x4005648	     0xf1f84000000	                   nop dword [rax + rax]	      4777	gui.c	FUNCTION_75
0x4005650	    0x8b0500000000	            mov eax, dword [0x04005656] 	      4772	gui.c	FUNCTION_75	IF_2
0x4005656	            0x85c0	                           test eax, eax	      4772	gui.c	FUNCTION_75	IF_2
0x4005658	            0x7516	                           jne 0x4005670	      4772	gui.c	FUNCTION_75	IF_2
0x400565a	    0x48c7c599d4ff	             mov rbp, 0xffffffffffffd499	      4767	gui.c	FUNCTION_75	IF_1
0x4005661	        0x4883c408	                              add rsp, 8	      4777	gui.c	FUNCTION_75
0x4005665	          0x4889e8	                            mov rax, rbp	      4777	gui.c	FUNCTION_75
0x4005668	              0x5b	                                 pop rbx	      4777	gui.c	FUNCTION_75
0x4005669	              0x5d	                                 pop rbp	      4777	gui.c	FUNCTION_75
0x400566a	              0xc3	                                     ret	      4777	gui.c	FUNCTION_75
0x400566b	       0xf1f440000	                   nop dword [rax + rax]	      4777	gui.c	FUNCTION_75
0x4005670	      0xba05000000	                              mov edx, 5	      4775	gui.c	FUNCTION_75	CALL_3
0x4005675	      0xbe00000000	                              mov esi, 0	      4775	gui.c	FUNCTION_75	CALL_3
0x400567a	            0x31ff	                            xor edi, edi	      4775	gui.c	FUNCTION_75	CALL_3
0x400567c	      0xe800000000	                          call 0x4005681	      4775	gui.c	FUNCTION_75	CALL_3
0x4005681	          0x4889de	                            mov rsi, rbx	      4775	gui.c	FUNCTION_75	CALL_3
0x4005684	          0x4889c7	                            mov rdi, rax	      4775	gui.c	FUNCTION_75	CALL_3
0x4005687	      0xe800000000	                          call 0x400568c	      4775	gui.c	FUNCTION_75	CALL_3
0x400568c	        0x4883c408	                              add rsp, 8	      4777	gui.c	FUNCTION_75
0x4005690	          0x4889e8	                            mov rax, rbp	      4777	gui.c	FUNCTION_75
0x4005693	              0x5b	                                 pop rbx	      4777	gui.c	FUNCTION_75
0x4005694	              0x5d	                                 pop rbp	      4777	gui.c	FUNCTION_75
0x4005695	              0xc3	                                     ret	      4777	gui.c	FUNCTION_75
send_tabline_event	IF,2:SWITCH,0:functions,0:CALL,5:WHILE,0:ELSE,0:FOR,0:DO,0	44
0x4002fd0	              0x53	                                push rbx	      3825	gui.c	FUNCTION_58
0x4002fd1	            0x89fb	                            mov ebx, edi	      3825	gui.c	FUNCTION_58
0x4002fd3	        0x4883ec10	                           sub rsp, 0x10	      3825	gui.c	FUNCTION_58
0x4002fd7	    0x488b3d000000	            mov rdi, qword [0x04002fde] 	      3828	gui.c	FUNCTION_58	IF_1	CALL_1
0x4002fde	    0x64488b042528	                mov rax, qword fs:[0x28]	      3825	gui.c	FUNCTION_58
0x4002fe7	      0x4889442408	                mov qword [rsp + 8], rax	      3825	gui.c	FUNCTION_58
0x4002fec	            0x31c0	                            xor eax, eax	      3825	gui.c	FUNCTION_58
0x4002fee	      0xe800000000	                          call 0x4002ff3	      3828	gui.c	FUNCTION_58	IF_1	CALL_1
0x4002ff3	            0x39d8	                            cmp eax, ebx	      3828	gui.c	FUNCTION_58	IF_1	CALL_1
0x4002ff5	     0xf847d000000	                            je 0x4003078	      3828	gui.c	FUNCTION_58	IF_1	CALL_1
0x4002ffb	    0x8b0500000000	            mov eax, dword [0x04003001] 	      3832	gui.c	FUNCTION_58	IF_2
0x4003001	            0x85c0	                           test eax, eax	      3832	gui.c	FUNCTION_58	IF_2
0x4003003	            0x750a	                           jne 0x400300f	      3832	gui.c	FUNCTION_58	IF_2
0x4003005	    0x8b0500000000	            mov eax, dword [0x0400300b] 	      3834	gui.c	FUNCTION_58	IF_2
0x400300b	            0x85c0	                           test eax, eax	      3834	gui.c	FUNCTION_58	IF_2
0x400300d	            0x7431	                            je 0x4003040	      3834	gui.c	FUNCTION_58	IF_2
0x400300f	    0x488b3d000000	            mov rdi, qword [0x04003016] 	      3839	gui.c	FUNCTION_58	IF_2	CALL_3
0x4003016	      0xe800000000	                          call 0x400301b	      3839	gui.c	FUNCTION_58	IF_2	CALL_3
0x400301b	            0x89c7	                            mov edi, eax	      3839	gui.c	FUNCTION_58	IF_2	CALL_3
0x400301d	      0xe800000000	                          call 0x4003022	      3839	gui.c	FUNCTION_58	IF_2	CALL_3
0x4003022	            0x31c0	                            xor eax, eax	      3840	gui.c	FUNCTION_58	IF_2
0x4003024	      0x488b542408	                mov rdx, qword [rsp + 8]	      3850	gui.c	FUNCTION_58
0x4003029	    0x644833142528	                xor rdx, qword fs:[0x28]	      3850	gui.c	FUNCTION_58
0x4003032	            0x7548	                           jne 0x400307c	      3850	gui.c	FUNCTION_58
0x4003034	        0x4883c410	                           add rsp, 0x10	      3850	gui.c	FUNCTION_58
0x4003038	              0x5b	                                 pop rbx	      3850	gui.c	FUNCTION_58
0x4003039	              0xc3	                                     ret	      3850	gui.c	FUNCTION_58
0x400303a	    0x660f1f440000	                    nop word [rax + rax]	      3850	gui.c	FUNCTION_58
0x4003040	      0xbe03000000	                              mov esi, 3	      3846	gui.c	FUNCTION_58	CALL_4
0x4003045	          0x4889e7	                            mov rdi, rsp	      3846	gui.c	FUNCTION_58	CALL_4
0x4003048	        0xc604249b	                    mov byte [rsp], 0x9b	      3843	gui.c	FUNCTION_58
0x400304c	      0xc6442401f0	                mov byte [rsp + 1], 0xf0	      3844	gui.c	FUNCTION_58
0x4003051	      0xc644240258	                mov byte [rsp + 2], 0x58	      3845	gui.c	FUNCTION_58
0x4003056	      0xe800000000	                          call 0x400305b	      3846	gui.c	FUNCTION_58	CALL_4
0x400305b	      0xbe01000000	                              mov esi, 1	      3848	gui.c	FUNCTION_58	CALL_5
0x4003060	          0x4889e7	                            mov rdi, rsp	      3848	gui.c	FUNCTION_58	CALL_5
0x4003063	          0x881c24	                      mov byte [rsp], bl	      3847	gui.c	FUNCTION_58
0x4003066	      0xe800000000	                          call 0x400306b	      3848	gui.c	FUNCTION_58	CALL_5
0x400306b	      0xb801000000	                              mov eax, 1	      3849	gui.c	FUNCTION_58
0x4003070	            0xebb2	                           jmp 0x4003024	      3849	gui.c	FUNCTION_58
0x4003072	    0x660f1f440000	                    nop word [rax + rax]	      3849	gui.c	FUNCTION_58
0x4003078	            0x31c0	                            xor eax, eax	      3829	gui.c	FUNCTION_58	IF_1
0x400307a	            0xeba8	                           jmp 0x4003024	      3829	gui.c	FUNCTION_58	IF_1
0x400307c	      0xe800000000	                          call 0x4003081	      3850	gui.c	FUNCTION_58
concat_esc	IF,2:SWITCH,0:functions,0:CALL,3:WHILE,2:ELSE,0:FOR,0:DO,0	47
0x4000500	            0x4155	                                push r13	      5246	gui.c	FUNCTION_90
0x4000502	            0x4154	                                push r12	      5246	gui.c	FUNCTION_90
0x4000504	          0x4189d5	                           mov r13d, edx	      5246	gui.c	FUNCTION_90
0x4000507	              0x55	                                push rbp	      5246	gui.c	FUNCTION_90
0x4000508	              0x53	                                push rbx	      5246	gui.c	FUNCTION_90
0x4000509	          0x4889f3	                            mov rbx, rsi	      5246	gui.c	FUNCTION_90
0x400050c	          0x4989fc	                            mov r12, rdi	      5246	gui.c	FUNCTION_90
0x400050f	        0x4883ec08	                              sub rsp, 8	      5246	gui.c	FUNCTION_90
0x4000513	          0x803b00	                       cmp byte [rbx], 0	      5247	gui.c	FUNCTION_90	WHILE_1
0x4000516	            0x7445	                            je 0x400055d	      5247	gui.c	FUNCTION_90	WHILE_1
0x4000518	     0xf1f84000000	                   nop dword [rax + rax]	      5247	gui.c	FUNCTION_90	WHILE_1
0x4000520	          0x4889df	                            mov rdi, rbx	      5250	gui.c	FUNCTION_90	WHILE_1
0x4000523	    0xff1500000000	                 call qword [0x04000529]	      5250	gui.c	FUNCTION_90	WHILE_1
0x4000529	          0x83f801	                              cmp eax, 1	      5252	gui.c	FUNCTION_90	WHILE_1	IF_1
0x400052c	            0x7e42	                           jle 0x4000570	      5252	gui.c	FUNCTION_90	WHILE_1	IF_1
0x400052e	          0x83e801	                              sub eax, 1	      5252	gui.c	FUNCTION_90	WHILE_1	IF_1
0x4000531	      0x488d6c0301	                lea rbp, [rbx + rax + 1]	      5252	gui.c	FUNCTION_90	WHILE_1	IF_1
0x4000536	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5252	gui.c	FUNCTION_90	WHILE_1	IF_1
0x4000540	        0x4883c301	                              add rbx, 1	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x4000544	         0xfb673ff	               movzx esi, byte [rbx - 1]	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x4000548	          0x4c89e7	                            mov rdi, r12	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x400054b	      0xe800000000	                          call 0x4000550	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x4000550	          0x4839eb	                            cmp rbx, rbp	      5254	gui.c	FUNCTION_90	WHILE_1	IF_1	WHILE_2
0x4000553	            0x75eb	                           jne 0x4000540	      5254	gui.c	FUNCTION_90	WHILE_1	IF_1	WHILE_2
0x4000555	          0x4889eb	                            mov rbx, rbp	      5246	gui.c	FUNCTION_90
0x4000558	          0x803b00	                       cmp byte [rbx], 0	      5247	gui.c	FUNCTION_90	WHILE_1
0x400055b	            0x75c3	                           jne 0x4000520	      5247	gui.c	FUNCTION_90	WHILE_1
0x400055d	        0x4883c408	                              add rsp, 8	      5264	gui.c	FUNCTION_90
0x4000561	              0x5b	                                 pop rbx	      5264	gui.c	FUNCTION_90
0x4000562	              0x5d	                                 pop rbp	      5264	gui.c	FUNCTION_90
0x4000563	            0x415c	                                 pop r12	      5264	gui.c	FUNCTION_90
0x4000565	            0x415d	                                 pop r13	      5264	gui.c	FUNCTION_90
0x4000567	              0xc3	                                     ret	      5264	gui.c	FUNCTION_90
0x4000568	     0xf1f84000000	                   nop dword [rax + rax]	      5264	gui.c	FUNCTION_90
0x4000570	           0xfb633	                   movzx esi, byte [rbx]	      5259	gui.c	FUNCTION_90	WHILE_1	IF_2
0x4000573	          0x4439ee	                           cmp esi, r13d	      5259	gui.c	FUNCTION_90	WHILE_1	IF_2
0x4000576	            0x7411	                            je 0x4000589	      5259	gui.c	FUNCTION_90	WHILE_1	IF_2
0x4000578	        0x488d6b01	                      lea rbp, [rbx + 1]	      5262	gui.c	FUNCTION_90	WHILE_1
0x400057c	          0x4c89e7	                            mov rdi, r12	      5261	gui.c	FUNCTION_90	WHILE_1	CALL_3
0x400057f	      0xe800000000	                          call 0x4000584	      5261	gui.c	FUNCTION_90	WHILE_1	CALL_3
0x4000584	          0x4889eb	                            mov rbx, rbp	      5246	gui.c	FUNCTION_90
0x4000587	            0xebcf	                           jmp 0x4000558	      5246	gui.c	FUNCTION_90
0x4000589	      0xbe5c000000	                           mov esi, 0x5c	      5260	gui.c	FUNCTION_90	WHILE_1	CALL_2
0x400058e	          0x4c89e7	                            mov rdi, r12	      5260	gui.c	FUNCTION_90	WHILE_1	CALL_2
0x4000591	      0xe800000000	                          call 0x4000596	      5260	gui.c	FUNCTION_90	WHILE_1	CALL_2
0x4000596	           0xfb633	                   movzx esi, byte [rbx]	      5260	gui.c	FUNCTION_90	WHILE_1	CALL_2
0x4000599	            0xebdd	                           jmp 0x4000578	      5260	gui.c	FUNCTION_90	WHILE_1	CALL_2
gfp_setname	IF,1:SWITCH,0:functions,0:CALL,2:WHILE,0:ELSE,1:FOR,0:DO,0	55
0x4000280	              0x55	                                push rbp	      5030	gui.c	FUNCTION_83
0x4000281	              0x53	                                push rbx	      5030	gui.c	FUNCTION_83
0x4000282	          0x4889fd	                            mov rbp, rdi	      5030	gui.c	FUNCTION_83
0x4000285	          0x4889f3	                            mov rbx, rsi	      5030	gui.c	FUNCTION_83
0x4000288	        0x4883ec08	                              sub rsp, 8	      5030	gui.c	FUNCTION_83
0x400028c	      0xe800000000	                          call 0x4000291	      5033	gui.c	FUNCTION_83	IF_1	CALL_1
0x4000291	    0x483dff0f0000	                          cmp rax, 0xfff	      5033	gui.c	FUNCTION_83	IF_1	CALL_1
0x4000297	            0x760f	                           jbe 0x40002a8	      5033	gui.c	FUNCTION_83	IF_1	CALL_1
0x4000299	          0xc60300	                       mov byte [rbx], 0	      5034	gui.c	FUNCTION_83	IF_1
0x400029c	        0x4883c408	                              add rsp, 8	      5037	gui.c	FUNCTION_83
0x40002a0	              0x5b	                                 pop rbx	      5037	gui.c	FUNCTION_83
0x40002a1	              0x5d	                                 pop rbp	      5037	gui.c	FUNCTION_83
0x40002a2	              0xc3	                                     ret	      5037	gui.c	FUNCTION_83
0x40002a3	       0xf1f440000	                   nop dword [rax + rax]	      5037	gui.c	FUNCTION_83
0x40002a8	        0x4883c001	                              add rax, 1	       110	string3.h	FUNCTION_100	CALL_3
0x40002ac	          0x83f808	                              cmp eax, 8	       110	string3.h	FUNCTION_100	CALL_3
0x40002af	            0x7327	                           jae 0x40002d8	       110	string3.h	FUNCTION_100	CALL_3
0x40002b1	            0xa804	                              test al, 4	       110	string3.h	FUNCTION_100	CALL_3
0x40002b3	            0x755b	                           jne 0x4000310	       110	string3.h	FUNCTION_100	CALL_3
0x40002b5	            0x85c0	                           test eax, eax	       110	string3.h	FUNCTION_100	CALL_3
0x40002b7	            0x74e3	                            je 0x400029c	       110	string3.h	FUNCTION_100	CALL_3
0x40002b9	         0xfb65500	                   movzx edx, byte [rbp]	       110	string3.h	FUNCTION_100	CALL_3
0x40002bd	            0xa802	                              test al, 2	       110	string3.h	FUNCTION_100	CALL_3
0x40002bf	            0x8813	                      mov byte [rbx], dl	       110	string3.h	FUNCTION_100	CALL_3
0x40002c1	            0x74d9	                            je 0x400029c	       110	string3.h	FUNCTION_100	CALL_3
0x40002c3	            0x89c0	                            mov eax, eax	       110	string3.h	FUNCTION_100	CALL_3
0x40002c5	       0xfb75405fe	         movzx edx, word [rbp + rax - 2]	       110	string3.h	FUNCTION_100	CALL_3
0x40002ca	      0x66895403fe	            mov word [rbx + rax - 2], dx	       110	string3.h	FUNCTION_100	CALL_3
0x40002cf	            0xebcb	                           jmp 0x400029c	       110	string3.h	FUNCTION_100	CALL_3
0x40002d1	     0xf1f80000000	                         nop dword [rax]	       110	string3.h	FUNCTION_100	CALL_3
0x40002d8	        0x488b5500	                    mov rdx, qword [rbp]	       110	string3.h	FUNCTION_100	CALL_3
0x40002dc	        0x488d7b08	                      lea rdi, [rbx + 8]	       110	string3.h	FUNCTION_100	CALL_3
0x40002e0	          0x4889ee	                            mov rsi, rbp	       110	string3.h	FUNCTION_100	CALL_3
0x40002e3	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	       110	string3.h	FUNCTION_100	CALL_3
0x40002e7	          0x488913	                    mov qword [rbx], rdx	       110	string3.h	FUNCTION_100	CALL_3
0x40002ea	            0x89c2	                            mov edx, eax	       110	string3.h	FUNCTION_100	CALL_3
0x40002ec	      0x488b4c15f8	          mov rcx, qword [rbp + rdx - 8]	       110	string3.h	FUNCTION_100	CALL_3
0x40002f1	      0x48894c13f8	          mov qword [rbx + rdx - 8], rcx	       110	string3.h	FUNCTION_100	CALL_3
0x40002f6	          0x4829fb	                            sub rbx, rdi	       110	string3.h	FUNCTION_100	CALL_3
0x40002f9	          0x4829de	                            sub rsi, rbx	       110	string3.h	FUNCTION_100	CALL_3
0x40002fc	             0x1c3	                            add ebx, eax	       110	string3.h	FUNCTION_100	CALL_3
0x40002fe	          0xc1eb03	                              shr ebx, 3	       110	string3.h	FUNCTION_100	CALL_3
0x4000301	            0x89d9	                            mov ecx, ebx	       110	string3.h	FUNCTION_100	CALL_3
0x4000303	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	       110	string3.h	FUNCTION_100	CALL_3
0x4000306	        0x4883c408	                              add rsp, 8	      5037	gui.c	FUNCTION_83
0x400030a	              0x5b	                                 pop rbx	      5037	gui.c	FUNCTION_83
0x400030b	              0x5d	                                 pop rbp	      5037	gui.c	FUNCTION_83
0x400030c	              0xc3	                                     ret	      5037	gui.c	FUNCTION_83
0x400030d	           0xf1f00	                         nop dword [rax]	      5037	gui.c	FUNCTION_83
0x4000310	          0x8b5500	                    mov edx, dword [rbp]	       110	string3.h	FUNCTION_100	CALL_3
0x4000313	            0x89c0	                            mov eax, eax	       110	string3.h	FUNCTION_100	CALL_3
0x4000315	            0x8913	                    mov dword [rbx], edx	       110	string3.h	FUNCTION_100	CALL_3
0x4000317	        0x8b5405fc	          mov edx, dword [rbp + rax - 4]	       110	string3.h	FUNCTION_100	CALL_3
0x400031b	        0x895403fc	          mov dword [rbx + rax - 4], edx	       110	string3.h	FUNCTION_100	CALL_3
0x400031f	      0xe978ffffff	                           jmp 0x400029c	       110	string3.h	FUNCTION_100	CALL_3
gui_start	IF,4:SWITCH,0:functions,0:CALL,15:WHILE,0:ELSE,1:FOR,0:DO,0	163
0x4005d00	            0x4155	                                push r13	        76	gui.c	FUNCTION_1
0x4005d02	            0x4154	                                push r12	        76	gui.c	FUNCTION_1
0x4005d04	              0x55	                                push rbp	        76	gui.c	FUNCTION_1
0x4005d05	              0x53	                                push rbx	        76	gui.c	FUNCTION_1
0x4005d06	        0x4883ec48	                           sub rsp, 0x48	        76	gui.c	FUNCTION_1
0x4005d0a	    0x488b3d000000	            mov rdi, qword [0x04005d11] 	        80	gui.c	FUNCTION_1	CALL_1
0x4005d11	    0x64488b042528	                mov rax, qword fs:[0x28]	        76	gui.c	FUNCTION_1
0x4005d1a	      0x4889442438	             mov qword [rsp + 0x38], rax	        76	gui.c	FUNCTION_1
0x4005d1f	            0x31c0	                            xor eax, eax	        76	gui.c	FUNCTION_1
0x4005d21	      0xe800000000	                          call 0x4005d26	        80	gui.c	FUNCTION_1	CALL_1
0x4005d26	            0x31ff	                            xor edi, edi	        82	gui.c	FUNCTION_1	CALL_2
0x4005d28	          0x4889c3	                            mov rbx, rax	        80	gui.c	FUNCTION_1	CALL_1
0x4005d2b	      0xe800000000	                          call 0x4005d30	        82	gui.c	FUNCTION_1	CALL_2
0x4005d30	    0x8b0500000000	            mov eax, dword [0x04005d36] 	        83	gui.c	FUNCTION_1	IF_1
0x4005d36	            0x85c0	                           test eax, eax	        83	gui.c	FUNCTION_1	IF_1
0x4005d38	     0xf85b2000000	                           jne 0x4005df0	        83	gui.c	FUNCTION_1	IF_1
0x4005d3e	    0x8b1500000000	            mov edx, dword [0x04005d44] 	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x4005d44	    0x830500000000	               add dword [0x04005d4b], 1	        87	gui.c	FUNCTION_1
0x4005d4b	    0xc70500000000	               mov dword [0x04005d55], 0	        85	gui.c	FUNCTION_1
0x4005d55	            0x85d2	                           test edx, edx	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x4005d57	            0x741a	                            je 0x4005d73	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x4005d59	    0x488b3d000000	            mov rdi, qword [0x04005d60] 	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x4005d60	      0xbe66000000	                           mov esi, 0x66	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x4005d65	      0xe800000000	                          call 0x4005d6a	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x4005d6a	          0x4885c0	                           test rax, rax	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x4005d6d	     0xf84ad000000	                            je 0x4005e20	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x4005d73	      0xe800000000	                          call 0x4005d78	       112	gui.c	FUNCTION_1	ELSE_1	IF_3	CALL_7
0x4005d78	          0x83f801	                              cmp eax, 1	       112	gui.c	FUNCTION_1	ELSE_1	IF_3	CALL_7
0x4005d7b	            0x740a	                            je 0x4005d87	       112	gui.c	FUNCTION_1	ELSE_1	IF_3	CALL_7
0x4005d7d	      0xbf01000000	                              mov edi, 1	       113	gui.c	FUNCTION_1	ELSE_1	CALL_8
0x4005d82	      0xe800000000	                          call 0x4005d87	       113	gui.c	FUNCTION_1	ELSE_1	CALL_8
0x4005d87	      0xe8c4feffff	              call sym.gui_attempt_start	       115	gui.c	FUNCTION_1	ELSE_1	CALL_9
0x4005d8c	    0x8b0500000000	            mov eax, dword [0x04005d92] 	       118	gui.c	FUNCTION_1	IF_4
0x4005d92	            0x85c0	                           test eax, eax	       118	gui.c	FUNCTION_1	IF_4
0x4005d94	            0x746a	                            je 0x4005e00	       118	gui.c	FUNCTION_1	IF_4
0x4005d96	          0x4889df	                            mov rdi, rbx	       137	gui.c	FUNCTION_1	CALL_13
0x4005d99	      0xe800000000	                          call 0x4005d9e	       137	gui.c	FUNCTION_1	CALL_13
0x4005d9e	      0xe800000000	                          call 0x4005da3	       141	gui.c	FUNCTION_1	CALL_14
0x4005da3	    0x833d00000000	               cmp dword [0x04005daa], 1	       142	gui.c	FUNCTION_1	CALL_15
0x4005daa	    0x4c8b05000000	              mov r8, qword [0x04005db1]	       142	gui.c	FUNCTION_1	CALL_15
0x4005db1	            0x19ff	                            sbb edi, edi	       142	gui.c	FUNCTION_1	CALL_15
0x4005db3	            0x31c9	                            xor ecx, ecx	       142	gui.c	FUNCTION_1	CALL_15
0x4005db5	            0x31d2	                            xor edx, edx	       142	gui.c	FUNCTION_1	CALL_15
0x4005db7	            0xf7d7	                                 not edi	       142	gui.c	FUNCTION_1	CALL_15
0x4005db9	            0x31f6	                            xor esi, esi	       142	gui.c	FUNCTION_1	CALL_15
0x4005dbb	          0x83c738	                           add edi, 0x38	       142	gui.c	FUNCTION_1	CALL_15
0x4005dbe	      0xe800000000	                          call 0x4005dc3	       142	gui.c	FUNCTION_1	CALL_15
0x4005dc3	    0x832d00000000	               sub dword [0x04005dca], 1	       144	gui.c	FUNCTION_1
0x4005dca	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       145	gui.c	FUNCTION_1
0x4005dcf	    0x644833042528	                xor rax, qword fs:[0x28]	       145	gui.c	FUNCTION_1
0x4005dd8	     0xf853c010000	                           jne 0x4005f1a	       145	gui.c	FUNCTION_1
0x4005dde	        0x4883c448	                           add rsp, 0x48	       145	gui.c	FUNCTION_1
0x4005de2	              0x5b	                                 pop rbx	       145	gui.c	FUNCTION_1
0x4005de3	              0x5d	                                 pop rbp	       145	gui.c	FUNCTION_1
0x4005de4	            0x415c	                                 pop r12	       145	gui.c	FUNCTION_1
0x4005de6	            0x415d	                                 pop r13	       145	gui.c	FUNCTION_1
0x4005de8	              0xc3	                                     ret	       145	gui.c	FUNCTION_1
0x4005de9	     0xf1f80000000	                         nop dword [rax]	       145	gui.c	FUNCTION_1
0x4005df0	      0xe800000000	                          call 0x4005df5	        84	gui.c	FUNCTION_1	CALL_3
0x4005df5	      0xe944ffffff	                           jmp 0x4005d3e	        84	gui.c	FUNCTION_1	CALL_3
0x4005dfa	    0x660f1f440000	                    nop word [rax + rax]	        84	gui.c	FUNCTION_1	CALL_3
0x4005e00	          0x4889df	                            mov rdi, rbx	       130	gui.c	FUNCTION_1	IF_4	CALL_10
0x4005e03	      0xe800000000	                          call 0x4005e08	       130	gui.c	FUNCTION_1	IF_4	CALL_10
0x4005e08	      0xbf02000000	                              mov edi, 2	       131	gui.c	FUNCTION_1	IF_4	CALL_11
0x4005e0d	      0xe800000000	                          call 0x4005e12	       131	gui.c	FUNCTION_1	IF_4	CALL_11
0x4005e12	      0xe800000000	                          call 0x4005e17	       133	gui.c	FUNCTION_1	IF_4	CALL_12
0x4005e17	      0xe97affffff	                           jmp 0x4005d96	       133	gui.c	FUNCTION_1	IF_4	CALL_12
0x4005e1c	         0xf1f4000	                         nop dword [rax]	       133	gui.c	FUNCTION_1	IF_4	CALL_12
0x4005e20	    0x833d00000000	               cmp dword [0x04005e27], 1	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x4005e27	     0xf8f46ffffff	                            jg 0x4005d73	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x4005e2d	      0xe800000000	                          call 0x4005e32	       100	gui.c	FUNCTION_1	IF_2	CALL_5
0x4005e32	            0x85c0	                           test eax, eax	       100	gui.c	FUNCTION_1	IF_2	CALL_5
0x4005e34	     0xf8539ffffff	                           jne 0x4005d73	       100	gui.c	FUNCTION_1	IF_2	CALL_5
0x4005e3a	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       221	gui.c	FUNCTION_3	CALL_1
0x4005e3f	      0xe800000000	                          call 0x4005e44	       221	gui.c	FUNCTION_3	CALL_1
0x4005e44	          0x4189c4	                           mov r12d, eax	       221	gui.c	FUNCTION_3	CALL_1
0x4005e47	      0xe800000000	                          call 0x4005e4c	       222	gui.c	FUNCTION_3	CALL_2
0x4005e4c	            0x85c0	                           test eax, eax	       223	gui.c	FUNCTION_3	IF_1
0x4005e4e	            0x89c5	                            mov ebp, eax	       222	gui.c	FUNCTION_3	CALL_2
0x4005e50	     0xf88a6000000	                            js 0x4005efc	       223	gui.c	FUNCTION_3	IF_1
0x4005e56	     0xf84c3000000	                            je 0x4005f1f	       228	gui.c	FUNCTION_3	ELSE_1	IF_2
0x4005e5c	          0x4585e4	                         test r12d, r12d	       233	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3
0x4005e5f	     0xf8843010000	                            js 0x4005fa8	       233	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3
0x4005e65	        0x8b7c2414	            mov edi, dword [rsp + 0x14] 	       237	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	CALL_5
0x4005e69	      0xe800000000	                          call 0x4005e6e	       237	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	CALL_5
0x4005e6e	      0x448b642410	           mov r12d, dword [rsp + 0x10] 	       238	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	CALL_6
0x4005e73	      0x488d742420	                   lea rsi, [rsp + 0x20]	       334	gui.c	FUNCTION_4	CALL_1
0x4005e78	      0xba09000000	                              mov edx, 9	       334	gui.c	FUNCTION_4	CALL_1
0x4005e7d	          0x4489e7	                           mov edi, r12d	       334	gui.c	FUNCTION_4	CALL_1
0x4005e80	      0xe800000000	                          call 0x4005e85	       334	gui.c	FUNCTION_4	CALL_1
0x4005e85	          0x4489e7	                           mov edi, r12d	       336	gui.c	FUNCTION_4	CALL_2
0x4005e88	          0x4989c5	                            mov r13, rax	       334	gui.c	FUNCTION_4	CALL_1
0x4005e8b	      0xe800000000	                          call 0x4005e90	       336	gui.c	FUNCTION_4	CALL_2
0x4005e90	          0x4d85ed	                           test r13, r13	       337	gui.c	FUNCTION_4	IF_1
0x4005e93	     0xf880f010000	                            js 0x4005fa8	       337	gui.c	FUNCTION_4	IF_1
0x4005e99	    0x42c6442c2000	          mov byte [rsp + r13 + 0x20], 0	       339	gui.c	FUNCTION_4
0x4005e9f	      0x807c24206f	            cmp byte [rsp + 0x20], 0x6f 	       340	gui.c	FUNCTION_4	IF_2	CALL_3
0x4005ea4	            0x752a	                           jne 0x4005ed0	       340	gui.c	FUNCTION_4	IF_2	CALL_3
0x4005ea6	      0x807c24216b	            cmp byte [rsp + 0x21], 0x6b 	       340	gui.c	FUNCTION_4	IF_2	CALL_3
0x4005eab	            0x7523	                           jne 0x4005ed0	       340	gui.c	FUNCTION_4	IF_2	CALL_3
0x4005ead	      0x807c242200	                cmp byte [rsp + 0x22], 0	       340	gui.c	FUNCTION_4	IF_2	CALL_3
0x4005eb2	            0x751c	                           jne 0x4005ed0	       340	gui.c	FUNCTION_4	IF_2	CALL_3
0x4005eb4	    0x833d00000000	               cmp dword [0x04005ebb], 0	       264	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_7
0x4005ebb	            0x740a	                            je 0x4005ec7	       264	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_7
0x4005ebd	      0xbf00000000	                              mov edi, 0	       265	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_12
0x4005ec2	      0xe800000000	                          call 0x4005ec7	       265	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_12
0x4005ec7	            0x31ff	                            xor edi, edi	       271	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_13
0x4005ec9	      0xe800000000	                          call 0x4005ece	       271	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_13
0x4005ece	            0x6690	                                     nop	       271	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_13
0x4005ed0	      0x488d74240c	                    lea rsi, [rsp + 0xc]	       247	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_8
0x4005ed5	            0x31d2	                            xor edx, edx	       247	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_8
0x4005ed7	            0x89ef	                            mov edi, ebp	       247	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_8
0x4005ed9	      0xe800000000	                          call 0x4005ede	       247	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_8
0x4005ede	            0x31ff	                            xor edi, edi	       249	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_10
0x4005ee0	      0xba05000000	                              mov edx, 5	       249	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_10
0x4005ee5	      0xbe00000000	                              mov esi, 0	       249	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_10
0x4005eea	      0xe800000000	                          call 0x4005eef	       249	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_10
0x4005eef	          0x4889c7	                            mov rdi, rax	       249	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_10
0x4005ef2	      0xe800000000	                          call 0x4005ef7	       249	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_10
0x4005ef7	      0xe990feffff	                           jmp 0x4005d8c	       249	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_10
0x4005efc	            0x31ff	                            xor edi, edi	       225	gui.c	FUNCTION_3	IF_1	CALL_4
0x4005efe	      0xba05000000	                              mov edx, 5	       225	gui.c	FUNCTION_3	IF_1	CALL_4
0x4005f03	      0xbe00000000	                              mov esi, 0	       225	gui.c	FUNCTION_3	IF_1	CALL_4
0x4005f08	      0xe800000000	                          call 0x4005f0d	       225	gui.c	FUNCTION_3	IF_1	CALL_4
0x4005f0d	          0x4889c7	                            mov rdi, rax	       225	gui.c	FUNCTION_3	IF_1	CALL_4
0x4005f10	      0xe800000000	                          call 0x4005f15	       225	gui.c	FUNCTION_3	IF_1	CALL_4
0x4005f15	      0xe972feffff	                           jmp 0x4005d8c	       225	gui.c	FUNCTION_3	IF_1	CALL_4
0x4005f1a	      0xe800000000	                          call 0x4005f1f	       145	gui.c	FUNCTION_1
0x4005f1f	      0xe800000000	                          call 0x4005f24	       277	gui.c	FUNCTION_3	IF_8	CALL_14
0x4005f24	          0x83e801	                              sub eax, 1	       277	gui.c	FUNCTION_3	IF_8	CALL_14
0x4005f27	            0x740a	                            je 0x4005f33	       277	gui.c	FUNCTION_3	IF_8	CALL_14
0x4005f29	      0xbf01000000	                              mov edi, 1	       278	gui.c	FUNCTION_3	CALL_15
0x4005f2e	      0xe800000000	                          call 0x4005f33	       278	gui.c	FUNCTION_3	CALL_15
0x4005f33	      0xe800000000	                          call 0x4005f38	       287	gui.c	FUNCTION_3	CALL_16
0x4005f38	          0x4585e4	                         test r12d, r12d	       292	gui.c	FUNCTION_3	IF_9
0x4005f3b	            0x7921	                           jns 0x4005f5e	       292	gui.c	FUNCTION_3	IF_9
0x4005f3d	      0xe80efdffff	              call sym.gui_attempt_start	       301	gui.c	FUNCTION_3	CALL_20
0x4005f42	    0x833d00000000	               cmp dword [0x04005f49], 0	       314	gui.c	FUNCTION_3	IF_12
0x4005f49	     0xf853dfeffff	                           jne 0x4005d8c	       314	gui.c	FUNCTION_3	IF_12
0x4005f4f	      0xbf01000000	                              mov edi, 1	       315	gui.c	FUNCTION_3	CALL_24
0x4005f54	      0xe800000000	                          call 0x4005f59	       315	gui.c	FUNCTION_3	CALL_24
0x4005f59	      0xe92efeffff	                           jmp 0x4005d8c	       315	gui.c	FUNCTION_3	CALL_24
0x4005f5e	        0x8b7c2410	            mov edi, dword [rsp + 0x10] 	       293	gui.c	FUNCTION_3	CALL_18
0x4005f62	      0xe800000000	                          call 0x4005f67	       293	gui.c	FUNCTION_3	CALL_18
0x4005f67	      0xe8e4fcffff	              call sym.gui_attempt_start	       301	gui.c	FUNCTION_3	CALL_20
0x4005f6c	    0x833d00000000	               cmp dword [0x04005f73], 0	       306	gui.c	FUNCTION_3	IF_10	IF_11
0x4005f73	            0x741e	                            je 0x4005f93	       306	gui.c	FUNCTION_3	IF_10	IF_11
0x4005f75	        0x8b7c2414	            mov edi, dword [rsp + 0x14] 	       307	gui.c	FUNCTION_3	IF_10	CALL_21
0x4005f79	      0xba03000000	                              mov edx, 3	       307	gui.c	FUNCTION_3	IF_10	CALL_21
0x4005f7e	      0xbe00000000	                              mov esi, 0	       307	gui.c	FUNCTION_3	IF_10	CALL_21
0x4005f83	      0xe800000000	                          call 0x4005f88	       307	gui.c	FUNCTION_3	IF_10	CALL_21
0x4005f88	        0x8b7c2414	            mov edi, dword [rsp + 0x14] 	       310	gui.c	FUNCTION_3	IF_10	CALL_23
0x4005f8c	      0xe800000000	                          call 0x4005f91	       310	gui.c	FUNCTION_3	IF_10	CALL_23
0x4005f91	            0xebaf	                           jmp 0x4005f42	       310	gui.c	FUNCTION_3	IF_10	CALL_23
0x4005f93	        0x8b7c2414	            mov edi, dword [rsp + 0x14] 	       309	gui.c	FUNCTION_3	IF_10	CALL_22
0x4005f97	      0xba05000000	                              mov edx, 5	       309	gui.c	FUNCTION_3	IF_10	CALL_22
0x4005f9c	      0xbe00000000	                              mov esi, 0	       309	gui.c	FUNCTION_3	IF_10	CALL_22
0x4005fa1	      0xe800000000	                          call 0x4005fa6	       309	gui.c	FUNCTION_3	IF_10	CALL_22
0x4005fa6	            0xebe0	                           jmp 0x4005f88	       309	gui.c	FUNCTION_3	IF_10	CALL_22
0x4005fa8	      0xbe01000000	                              mov esi, 1	       260	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_11
0x4005fad	      0xbf2c010000	                          mov edi, 0x12c	       260	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_11
0x4005fb2	      0xe800000000	                          call 0x4005fb7	       260	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_11
0x4005fb7	      0xe9f8feffff	                           jmp 0x4005eb4	       260	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_11
