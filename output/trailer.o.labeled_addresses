ensure_configured	CALL,2:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,1	19
0x198f	              0x55	                                push rbp	       566	trailer.c	FUNCTION_29
0x1990	          0x4889e5	                            mov rbp, rsp	       566	trailer.c	FUNCTION_29
0x1993	    0x8b0500000000	            mov eax, dword [0x040019d9] 	       567	trailer.c	FUNCTION_29	IF_1
0x1999	            0x85c0	                           test eax, eax	       567	trailer.c	FUNCTION_29	IF_1
0x199b	            0x7548	                           jne 0x4001a25	       567	trailer.c	FUNCTION_29	IF_1
0x199d	    0xc70500000000	               mov dword [0x040019e7], 1	       571	trailer.c	FUNCTION_29
0x19a7	    0xc70500000000	               mov dword [0x040019f1], 1	       572	trailer.c	FUNCTION_29
0x19b1	    0xc70500000000	               mov dword [0x040019fb], 1	       573	trailer.c	FUNCTION_29
0x19bb	      0xbe00000000	                              mov esi, 0	       574	trailer.c	FUNCTION_29	CALL_1
0x19c0	      0xbf00000000	                              mov edi, 0	       574	trailer.c	FUNCTION_29	CALL_1
0x19c5	      0xe800000000	                          call 0x4001a0a	       574	trailer.c	FUNCTION_29	CALL_1
0x19ca	      0xbe00000000	                              mov esi, 0	       575	trailer.c	FUNCTION_29	CALL_2
0x19cf	      0xbf00000000	                              mov edi, 0	       575	trailer.c	FUNCTION_29	CALL_2
0x19d4	      0xe800000000	                          call 0x4001a19	       575	trailer.c	FUNCTION_29	CALL_2
0x19d9	    0xc70500000000	               mov dword [0x04001a23], 1	       576	trailer.c	FUNCTION_29
0x19e3	            0xeb01	                           jmp 0x4001a26	       576	trailer.c	FUNCTION_29
0x19e5	              0x90	                                     nop	       568	trailer.c	FUNCTION_29	IF_1
0x19e6	              0x5d	                                 pop rbp	       577	trailer.c	FUNCTION_29
0x19e7	              0xc3	                                     ret	       577	trailer.c	FUNCTION_29
list_empty	CALL,0:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,0	10
0x492	              0x55	                                push rbp	       152	list.h	FUNCTION_61
0x493	          0x4889e5	                            mov rbp, rsp	       152	list.h	FUNCTION_61
0x496	        0x48897df8	                mov qword [rbp - 8], rdi	       152	list.h	FUNCTION_61
0x49a	        0x488b45f8	                mov rax, qword [rbp - 8]	       153	list.h	FUNCTION_61
0x49e	          0x488b00	                    mov rax, qword [rax]	       153	list.h	FUNCTION_61
0x4a1	        0x483b45f8	                cmp rax, qword [rbp - 8]	       153	list.h	FUNCTION_61
0x4a5	           0xf94c0	                                 sete al	       153	list.h	FUNCTION_61
0x4a8	           0xfb6c0	                           movzx eax, al	       153	list.h	FUNCTION_61
0x4ab	              0x5d	                                 pop rbp	       154	list.h	FUNCTION_61
0x4ac	              0xc3	                                     ret	       154	list.h	FUNCTION_61
apply_item_command	CALL,4:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,2:FOR,0:IF,3	52
0xd48	              0x55	                                push rbp	       251	trailer.c	FUNCTION_17
0xd49	          0x4889e5	                            mov rbp, rsp	       251	trailer.c	FUNCTION_17
0xd4c	        0x4883ec20	                           sub rsp, 0x20	       251	trailer.c	FUNCTION_17
0xd50	        0x48897de8	             mov qword [rbp - 0x18], rdi	       251	trailer.c	FUNCTION_17
0xd54	        0x488975e0	             mov qword [rbp - 0x20], rsi	       251	trailer.c	FUNCTION_17
0xd58	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       252	trailer.c	FUNCTION_17	IF_1
0xd5c	        0x488b4030	            mov rax, qword [rax + 0x30] 	       252	trailer.c	FUNCTION_17	IF_1
0xd60	          0x4885c0	                           test rax, rax	       252	trailer.c	FUNCTION_17	IF_1
0xd63	     0xf8490000000	                            je 0x4000e39	       252	trailer.c	FUNCTION_17	IF_1
0xd69	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       254	trailer.c	FUNCTION_17	IF_1	IF_2
0xd6d	        0x488b4018	            mov rax, qword [rax + 0x18] 	       254	trailer.c	FUNCTION_17	IF_1	IF_2
0xd71	          0x4885c0	                           test rax, rax	       254	trailer.c	FUNCTION_17	IF_1	IF_2
0xd74	            0x741d	                            je 0x4000dd3	       254	trailer.c	FUNCTION_17	IF_1	IF_2
0xd76	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       254	trailer.c	FUNCTION_17	IF_1	IF_2
0xd7a	        0x488b4018	            mov rax, qword [rax + 0x18] 	       254	trailer.c	FUNCTION_17	IF_1	IF_2
0xd7e	           0xfb600	                   movzx eax, byte [rax]	       254	trailer.c	FUNCTION_17	IF_1	IF_2
0xd81	            0x84c0	                             test al, al	       254	trailer.c	FUNCTION_17	IF_1	IF_2
0xd83	            0x740e	                            je 0x4000dd3	       254	trailer.c	FUNCTION_17	IF_1	IF_2
0xd85	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       255	trailer.c	FUNCTION_17	IF_1	IF_2
0xd89	        0x488b4018	            mov rax, qword [rax + 0x18] 	       255	trailer.c	FUNCTION_17	IF_1	IF_2
0xd8d	        0x488945f8	                mov qword [rbp - 8], rax	       255	trailer.c	FUNCTION_17	IF_1	IF_2
0xd91	            0xeb38	                           jmp 0x4000e0b	       255	trailer.c	FUNCTION_17	IF_1	IF_2
0xd93	      0x48837de800	               cmp qword [rbp - 0x18], 0	       257	trailer.c	FUNCTION_17	IF_1	ELSE_1	IF_3
0xd98	            0x7423	                            je 0x4000dfd	       257	trailer.c	FUNCTION_17	IF_1	ELSE_1	IF_3
0xd9a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       257	trailer.c	FUNCTION_17	IF_1	ELSE_1	IF_3
0xd9e	        0x488b4018	            mov rax, qword [rax + 0x18] 	       257	trailer.c	FUNCTION_17	IF_1	ELSE_1	IF_3
0xda2	          0x4885c0	                           test rax, rax	       257	trailer.c	FUNCTION_17	IF_1	ELSE_1	IF_3
0xda5	            0x7416	                            je 0x4000dfd	       257	trailer.c	FUNCTION_17	IF_1	ELSE_1	IF_3
0xda7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       258	trailer.c	FUNCTION_17	IF_1	ELSE_1	CALL_1
0xdab	        0x488b4018	            mov rax, qword [rax + 0x18] 	       258	trailer.c	FUNCTION_17	IF_1	ELSE_1	CALL_1
0xdaf	          0x4889c7	                            mov rdi, rax	       258	trailer.c	FUNCTION_17	IF_1	ELSE_1	CALL_1
0xdb2	      0xe800000000	                          call 0x4000df7	       258	trailer.c	FUNCTION_17	IF_1	ELSE_1	CALL_1
0xdb7	        0x488945f8	                mov qword [rbp - 8], rax	       258	trailer.c	FUNCTION_17	IF_1	ELSE_1	CALL_1
0xdbb	            0xeb0e	                           jmp 0x4000e0b	       258	trailer.c	FUNCTION_17	IF_1	ELSE_1	CALL_1
0xdbd	      0xbf00000000	                              mov edi, 0	       260	trailer.c	FUNCTION_17	IF_1	ELSE_1	CALL_2
0xdc2	      0xe800000000	                          call 0x4000e07	       260	trailer.c	FUNCTION_17	IF_1	ELSE_1	CALL_2
0xdc7	        0x488945f8	                mov qword [rbp - 8], rax	       260	trailer.c	FUNCTION_17	IF_1	ELSE_1	CALL_2
0xdcb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       262	trailer.c	FUNCTION_17	IF_1	CALL_3
0xdcf	        0x488b4030	            mov rax, qword [rax + 0x30] 	       262	trailer.c	FUNCTION_17	IF_1	CALL_3
0xdd3	        0x488b55f8	                mov rdx, qword [rbp - 8]	       262	trailer.c	FUNCTION_17	IF_1	CALL_3
0xdd7	          0x4889d6	                            mov rsi, rdx	       262	trailer.c	FUNCTION_17	IF_1	CALL_3
0xdda	          0x4889c7	                            mov rdi, rax	       262	trailer.c	FUNCTION_17	IF_1	CALL_3
0xddd	      0xe889fdffff	                  call sym.apply_command	       262	trailer.c	FUNCTION_17	IF_1	CALL_3
0xde2	          0x4889c2	                            mov rdx, rax	       262	trailer.c	FUNCTION_17	IF_1	CALL_3
0xde5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       262	trailer.c	FUNCTION_17	IF_1	CALL_3
0xde9	        0x48895018	             mov qword [rax + 0x18], rdx	       262	trailer.c	FUNCTION_17	IF_1	CALL_3
0xded	        0x488b45f8	                mov rax, qword [rbp - 8]	       263	trailer.c	FUNCTION_17	IF_1	CALL_4
0xdf1	          0x4889c7	                            mov rdi, rax	       263	trailer.c	FUNCTION_17	IF_1	CALL_4
0xdf4	      0xe800000000	                          call 0x4000e39	       263	trailer.c	FUNCTION_17	IF_1	CALL_4
0xdf9	              0x90	                                     nop	       265	trailer.c	FUNCTION_17
0xdfa	              0xc9	                                   leave	       265	trailer.c	FUNCTION_17
0xdfb	              0xc3	                                     ret	       265	trailer.c	FUNCTION_17
read_input_file	CALL,7:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,1:FOR,0:IF,3	42
0x208b	              0x55	                                push rbp	       747	trailer.c	FUNCTION_37
0x208c	          0x4889e5	                            mov rbp, rsp	       747	trailer.c	FUNCTION_37
0x208f	        0x4883ec10	                           sub rsp, 0x10	       747	trailer.c	FUNCTION_37
0x2093	        0x48897df8	                mov qword [rbp - 8], rdi	       747	trailer.c	FUNCTION_37
0x2097	        0x488975f0	             mov qword [rbp - 0x10], rsi	       747	trailer.c	FUNCTION_37
0x209b	      0x48837df000	               cmp qword [rbp - 0x10], 0	       748	trailer.c	FUNCTION_37	IF_1
0x20a0	            0x743e	                            je 0x4002120	       748	trailer.c	FUNCTION_37	IF_1
0x20a2	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       749	trailer.c	FUNCTION_37	IF_1	IF_2	CALL_1
0x20a6	        0x488b45f8	                mov rax, qword [rbp - 8]	       749	trailer.c	FUNCTION_37	IF_1	IF_2	CALL_1
0x20aa	      0xba00000000	                              mov edx, 0	       749	trailer.c	FUNCTION_37	IF_1	IF_2	CALL_1
0x20af	          0x4889ce	                            mov rsi, rcx	       749	trailer.c	FUNCTION_37	IF_1	IF_2	CALL_1
0x20b2	          0x4889c7	                            mov rdi, rax	       749	trailer.c	FUNCTION_37	IF_1	IF_2	CALL_1
0x20b5	      0xe800000000	                          call 0x40020fa	       749	trailer.c	FUNCTION_37	IF_1	IF_2	CALL_1
0x20ba	          0x4885c0	                           test rax, rax	       749	trailer.c	FUNCTION_37	IF_1	IF_2	CALL_1
0x20bd	            0x7961	                           jns 0x4002160	       749	trailer.c	FUNCTION_37	IF_1	IF_2	CALL_1
0x20bf	      0xbf00000000	                              mov edi, 0	       750	trailer.c	FUNCTION_37	IF_1	CALL_3
0x20c4	      0xe8e4e3ffff	                               call sym.	       750	trailer.c	FUNCTION_37	IF_1	CALL_3
0x20c9	          0x4889c2	                            mov rdx, rax	       750	trailer.c	FUNCTION_37	IF_1	CALL_3
0x20cc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       750	trailer.c	FUNCTION_37	IF_1	CALL_3
0x20d0	          0x4889c6	                            mov rsi, rax	       750	trailer.c	FUNCTION_37	IF_1	CALL_3
0x20d3	          0x4889d7	                            mov rdi, rdx	       750	trailer.c	FUNCTION_37	IF_1	CALL_3
0x20d6	      0xb800000000	                              mov eax, 0	       750	trailer.c	FUNCTION_37	IF_1	CALL_3
0x20db	      0xe800000000	                          call 0x4002120	       750	trailer.c	FUNCTION_37	IF_1	CALL_3
0x20e0	    0x488b05000000	            mov rax, qword [0x04002127] 	       752	trailer.c	FUNCTION_37	ELSE_1	IF_3	CALL_5
0x20e7	          0x4889c7	                            mov rdi, rax	       752	trailer.c	FUNCTION_37	ELSE_1	IF_3	CALL_5
0x20ea	      0xe800000000	                          call 0x400212f	       752	trailer.c	FUNCTION_37	ELSE_1	IF_3	CALL_5
0x20ef	            0x89c1	                            mov ecx, eax	       752	trailer.c	FUNCTION_37	ELSE_1	IF_3	CALL_5
0x20f1	        0x488b45f8	                mov rax, qword [rbp - 8]	       752	trailer.c	FUNCTION_37	ELSE_1	IF_3	CALL_5
0x20f5	      0xba00000000	                              mov edx, 0	       752	trailer.c	FUNCTION_37	ELSE_1	IF_3	CALL_5
0x20fa	            0x89ce	                            mov esi, ecx	       752	trailer.c	FUNCTION_37	ELSE_1	IF_3	CALL_5
0x20fc	          0x4889c7	                            mov rdi, rax	       752	trailer.c	FUNCTION_37	ELSE_1	IF_3	CALL_5
0x20ff	      0xe800000000	                          call 0x4002144	       752	trailer.c	FUNCTION_37	ELSE_1	IF_3	CALL_5
0x2104	          0x4885c0	                           test rax, rax	       752	trailer.c	FUNCTION_37	ELSE_1	IF_3	CALL_5
0x2107	            0x7917	                           jns 0x4002160	       752	trailer.c	FUNCTION_37	ELSE_1	IF_3	CALL_5
0x2109	      0xbf00000000	                              mov edi, 0	       753	trailer.c	FUNCTION_37	ELSE_1	CALL_7
0x210e	      0xe89ae3ffff	                               call sym.	       753	trailer.c	FUNCTION_37	ELSE_1	CALL_7
0x2113	          0x4889c7	                            mov rdi, rax	       753	trailer.c	FUNCTION_37	ELSE_1	CALL_7
0x2116	      0xb800000000	                              mov eax, 0	       753	trailer.c	FUNCTION_37	ELSE_1	CALL_7
0x211b	      0xe800000000	                          call 0x4002160	       753	trailer.c	FUNCTION_37	ELSE_1	CALL_7
0x2120	              0x90	                                     nop	       755	trailer.c	FUNCTION_37
0x2121	              0xc9	                                   leave	       755	trailer.c	FUNCTION_37
0x2122	              0xc3	                                     ret	       755	trailer.c	FUNCTION_37
duplicate_conf	CALL,3:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,0	41
0x13d0	              0x55	                                push rbp	       430	trailer.c	ELSE_3	FUNCTION_25
0x13d1	          0x4889e5	                            mov rbp, rsp	       430	trailer.c	ELSE_3	FUNCTION_25
0x13d4	        0x4883ec10	                           sub rsp, 0x10	       430	trailer.c	ELSE_3	FUNCTION_25
0x13d8	        0x48897df8	                mov qword [rbp - 8], rdi	       430	trailer.c	ELSE_3	FUNCTION_25
0x13dc	        0x488975f0	             mov qword [rbp - 0x10], rsi	       430	trailer.c	ELSE_3	FUNCTION_25
0x13e0	        0x488b45f8	                mov rax, qword [rbp - 8]	       431	trailer.c	ELSE_3	FUNCTION_25
0x13e4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       431	trailer.c	ELSE_3	FUNCTION_25
0x13e8	          0x488b0a	                    mov rcx, qword [rdx]	       431	trailer.c	ELSE_3	FUNCTION_25
0x13eb	          0x488908	                    mov qword [rax], rcx	       431	trailer.c	ELSE_3	FUNCTION_25
0x13ee	        0x488b4a08	                mov rcx, qword [rdx + 8]	       431	trailer.c	ELSE_3	FUNCTION_25
0x13f2	        0x48894808	                mov qword [rax + 8], rcx	       431	trailer.c	ELSE_3	FUNCTION_25
0x13f6	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	       431	trailer.c	ELSE_3	FUNCTION_25
0x13fa	        0x48894810	             mov qword [rax + 0x10], rcx	       431	trailer.c	ELSE_3	FUNCTION_25
0x13fe	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	       431	trailer.c	ELSE_3	FUNCTION_25
0x1402	        0x48894818	             mov qword [rax + 0x18], rcx	       431	trailer.c	ELSE_3	FUNCTION_25
0x1406	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	       431	trailer.c	ELSE_3	FUNCTION_25
0x140a	        0x48895020	             mov qword [rax + 0x20], rdx	       431	trailer.c	ELSE_3	FUNCTION_25
0x140e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       432	trailer.c	ELSE_3	FUNCTION_25	CALL_1
0x1412	          0x488b00	                    mov rax, qword [rax]	       432	trailer.c	ELSE_3	FUNCTION_25	CALL_1
0x1415	          0x4889c7	                            mov rdi, rax	       432	trailer.c	ELSE_3	FUNCTION_25	CALL_1
0x1418	      0xe817edffff	                call sym.xstrdup_or_null	       432	trailer.c	ELSE_3	FUNCTION_25	CALL_1
0x141d	          0x4889c2	                            mov rdx, rax	       432	trailer.c	ELSE_3	FUNCTION_25	CALL_1
0x1420	        0x488b45f8	                mov rax, qword [rbp - 8]	       432	trailer.c	ELSE_3	FUNCTION_25	CALL_1
0x1424	          0x488910	                    mov qword [rax], rdx	       432	trailer.c	ELSE_3	FUNCTION_25	CALL_1
0x1427	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       433	trailer.c	ELSE_3	FUNCTION_25	CALL_2
0x142b	        0x488b4008	                mov rax, qword [rax + 8]	       433	trailer.c	ELSE_3	FUNCTION_25	CALL_2
0x142f	          0x4889c7	                            mov rdi, rax	       433	trailer.c	ELSE_3	FUNCTION_25	CALL_2
0x1432	      0xe8fdecffff	                call sym.xstrdup_or_null	       433	trailer.c	ELSE_3	FUNCTION_25	CALL_2
0x1437	          0x4889c2	                            mov rdx, rax	       433	trailer.c	ELSE_3	FUNCTION_25	CALL_2
0x143a	        0x488b45f8	                mov rax, qword [rbp - 8]	       433	trailer.c	ELSE_3	FUNCTION_25	CALL_2
0x143e	        0x48895008	                mov qword [rax + 8], rdx	       433	trailer.c	ELSE_3	FUNCTION_25	CALL_2
0x1442	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       434	trailer.c	ELSE_3	FUNCTION_25	CALL_3
0x1446	        0x488b4010	            mov rax, qword [rax + 0x10] 	       434	trailer.c	ELSE_3	FUNCTION_25	CALL_3
0x144a	          0x4889c7	                            mov rdi, rax	       434	trailer.c	ELSE_3	FUNCTION_25	CALL_3
0x144d	      0xe8e2ecffff	                call sym.xstrdup_or_null	       434	trailer.c	ELSE_3	FUNCTION_25	CALL_3
0x1452	          0x4889c2	                            mov rdx, rax	       434	trailer.c	ELSE_3	FUNCTION_25	CALL_3
0x1455	        0x488b45f8	                mov rax, qword [rbp - 8]	       434	trailer.c	ELSE_3	FUNCTION_25	CALL_3
0x1459	        0x48895010	             mov qword [rax + 0x10], rdx	       434	trailer.c	ELSE_3	FUNCTION_25	CALL_3
0x145d	              0x90	                                     nop	       435	trailer.c	ELSE_3	FUNCTION_25
0x145e	              0xc9	                                   leave	       435	trailer.c	ELSE_3	FUNCTION_25
0x145f	              0xc3	                                     ret	       435	trailer.c	ELSE_3	FUNCTION_25
strbuf_replace	CALL,4:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,1	42
0x730	              0x55	                                push rbp	       112	trailer.c	FUNCTION_7
0x731	          0x4889e5	                            mov rbp, rsp	       112	trailer.c	FUNCTION_7
0x734	              0x53	                                push rbx	       112	trailer.c	FUNCTION_7
0x735	        0x4883ec38	                           sub rsp, 0x38	       112	trailer.c	FUNCTION_7
0x739	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       112	trailer.c	FUNCTION_7
0x73d	        0x488975d0	             mov qword [rbp - 0x30], rsi	       112	trailer.c	FUNCTION_7
0x741	        0x488955c8	             mov qword [rbp - 0x38], rdx	       112	trailer.c	FUNCTION_7
0x745	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       113	trailer.c	FUNCTION_7	CALL_1
0x749	        0x488b4010	            mov rax, qword [rax + 0x10] 	       113	trailer.c	FUNCTION_7	CALL_1
0x74d	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       113	trailer.c	FUNCTION_7	CALL_1
0x751	          0x4889d6	                            mov rsi, rdx	       113	trailer.c	FUNCTION_7	CALL_1
0x754	          0x4889c7	                            mov rdi, rax	       113	trailer.c	FUNCTION_7	CALL_1
0x757	      0xe800000000	                          call 0x400079c	       113	trailer.c	FUNCTION_7	CALL_1
0x75c	        0x488945e8	             mov qword [rbp - 0x18], rax	       113	trailer.c	FUNCTION_7	CALL_1
0x760	      0x48837de800	               cmp qword [rbp - 0x18], 0	       114	trailer.c	FUNCTION_7	IF_1
0x765	            0x744c	                            je 0x40007f3	       114	trailer.c	FUNCTION_7	IF_1
0x767	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       115	trailer.c	FUNCTION_7	CALL_4
0x76b	          0x4889c7	                            mov rdi, rax	       115	trailer.c	FUNCTION_7	CALL_4
0x76e	      0xe800000000	                          call 0x40007b3	       115	trailer.c	FUNCTION_7	CALL_4
0x773	          0x4889c3	                            mov rbx, rax	       115	trailer.c	FUNCTION_7	CALL_4
0x776	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       115	trailer.c	FUNCTION_7	CALL_4
0x77a	          0x4889c7	                            mov rdi, rax	       115	trailer.c	FUNCTION_7	CALL_4
0x77d	      0xe800000000	                          call 0x40007c2	       115	trailer.c	FUNCTION_7	CALL_4
0x782	          0x4889c7	                            mov rdi, rax	       115	trailer.c	FUNCTION_7	CALL_4
0x785	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       115	trailer.c	FUNCTION_7	CALL_4
0x789	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       115	trailer.c	FUNCTION_7	CALL_4
0x78d	        0x488b4010	            mov rax, qword [rax + 0x10] 	       115	trailer.c	FUNCTION_7	CALL_4
0x791	          0x4829c2	                            sub rdx, rax	       115	trailer.c	FUNCTION_7	CALL_4
0x794	          0x4889d0	                            mov rax, rdx	       115	trailer.c	FUNCTION_7	CALL_4
0x797	          0x4889c6	                            mov rsi, rax	       115	trailer.c	FUNCTION_7	CALL_4
0x79a	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       115	trailer.c	FUNCTION_7	CALL_4
0x79e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       115	trailer.c	FUNCTION_7	CALL_4
0x7a2	          0x4989d8	                             mov r8, rbx	       115	trailer.c	FUNCTION_7	CALL_4
0x7a5	          0x4889d1	                            mov rcx, rdx	       115	trailer.c	FUNCTION_7	CALL_4
0x7a8	          0x4889fa	                            mov rdx, rdi	       115	trailer.c	FUNCTION_7	CALL_4
0x7ab	          0x4889c7	                            mov rdi, rax	       115	trailer.c	FUNCTION_7	CALL_4
0x7ae	      0xe800000000	                          call 0x40007f3	       115	trailer.c	FUNCTION_7	CALL_4
0x7b3	              0x90	                                     nop	       116	trailer.c	FUNCTION_7
0x7b4	        0x4883c438	                           add rsp, 0x38	       116	trailer.c	FUNCTION_7
0x7b8	              0x5b	                                 pop rbx	       116	trailer.c	FUNCTION_7
0x7b9	              0x5d	                                 pop rbp	       116	trailer.c	FUNCTION_7
0x7ba	              0xc3	                                     ret	       116	trailer.c	FUNCTION_7
strbuf_strip_suffix	CALL,2:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,1:FOR,0:IF,1	26
0x363	              0x55	                                push rbp	       495	strbuf.h	FUNCTION_103
0x364	          0x4889e5	                            mov rbp, rsp	       495	strbuf.h	FUNCTION_103
0x367	        0x4883ec10	                           sub rsp, 0x10	       495	strbuf.h	FUNCTION_103
0x36b	        0x48897df8	                mov qword [rbp - 8], rdi	       495	strbuf.h	FUNCTION_103
0x36f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       495	strbuf.h	FUNCTION_103
0x373	        0x488b45f8	                mov rax, qword [rbp - 8]	       496	strbuf.h	FUNCTION_103	IF_1	CALL_1
0x377	        0x488d4808	                      lea rcx, [rax + 8]	       496	strbuf.h	FUNCTION_103	IF_1	CALL_1
0x37b	        0x488b45f8	                mov rax, qword [rbp - 8]	       496	strbuf.h	FUNCTION_103	IF_1	CALL_1
0x37f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       496	strbuf.h	FUNCTION_103	IF_1	CALL_1
0x383	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       496	strbuf.h	FUNCTION_103	IF_1	CALL_1
0x387	          0x4889ce	                            mov rsi, rcx	       496	strbuf.h	FUNCTION_103	IF_1	CALL_1
0x38a	          0x4889c7	                            mov rdi, rax	       496	strbuf.h	FUNCTION_103	IF_1	CALL_1
0x38d	      0xe8cffcffff	               call sym.strip_suffix_mem	       496	strbuf.h	FUNCTION_103	IF_1	CALL_1
0x392	            0x85c0	                           test eax, eax	       496	strbuf.h	FUNCTION_103	IF_1	CALL_1
0x394	            0x741e	                            je 0x40003f4	       496	strbuf.h	FUNCTION_103	IF_1	CALL_1
0x396	        0x488b45f8	                mov rax, qword [rbp - 8]	       497	strbuf.h	FUNCTION_103	IF_1	CALL_2
0x39a	        0x488b5008	                mov rdx, qword [rax + 8]	       497	strbuf.h	FUNCTION_103	IF_1	CALL_2
0x39e	        0x488b45f8	                mov rax, qword [rbp - 8]	       497	strbuf.h	FUNCTION_103	IF_1	CALL_2
0x3a2	          0x4889d6	                            mov rsi, rdx	       497	strbuf.h	FUNCTION_103	IF_1	CALL_2
0x3a5	          0x4889c7	                            mov rdi, rax	       497	strbuf.h	FUNCTION_103	IF_1	CALL_2
0x3a8	      0xe879feffff	                  call sym.strbuf_setlen	       497	strbuf.h	FUNCTION_103	IF_1	CALL_2
0x3ad	      0xb801000000	                              mov eax, 1	       498	strbuf.h	FUNCTION_103	IF_1
0x3b2	            0xeb05	                           jmp 0x40003f9	       498	strbuf.h	FUNCTION_103	IF_1
0x3b4	      0xb800000000	                              mov eax, 0	       500	strbuf.h	FUNCTION_103	ELSE_1
0x3b9	              0xc9	                                   leave	       501	strbuf.h	FUNCTION_103
0x3ba	              0xc3	                                     ret	       501	strbuf.h	FUNCTION_103
check_if_different	CALL,3:DO,1:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,2	42
0xae7	              0x55	                                push rbp	       200	trailer.c	FUNCTION_15
0xae8	          0x4889e5	                            mov rbp, rsp	       200	trailer.c	FUNCTION_15
0xaeb	        0x4883ec30	                           sub rsp, 0x30	       200	trailer.c	FUNCTION_15
0xaef	        0x48897de8	             mov qword [rbp - 0x18], rdi	       200	trailer.c	FUNCTION_15
0xaf3	        0x488975e0	             mov qword [rbp - 0x20], rsi	       200	trailer.c	FUNCTION_15
0xaf7	          0x8955dc	             mov dword [rbp - 0x24], edx	       200	trailer.c	FUNCTION_15
0xafa	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       200	trailer.c	FUNCTION_15
0xafe	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       201	trailer.c	FUNCTION_15
0xb02	          0x8b4038	            mov eax, dword [rax + 0x38] 	       201	trailer.c	FUNCTION_15
0xb05	          0x8945f4	              mov dword [rbp - 0xc], eax	       201	trailer.c	FUNCTION_15
0xb08	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       204	trailer.c	FUNCTION_15	DO_1	IF_1	CALL_1
0xb0c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       204	trailer.c	FUNCTION_15	DO_1	IF_1	CALL_1
0xb10	          0x4889d6	                            mov rsi, rdx	       204	trailer.c	FUNCTION_15	DO_1	IF_1	CALL_1
0xb13	          0x4889c7	                            mov rdi, rax	       204	trailer.c	FUNCTION_15	DO_1	IF_1	CALL_1
0xb16	      0xe85bfbffff	                   call sym.same_trailer	       204	trailer.c	FUNCTION_15	DO_1	IF_1	CALL_1
0xb1b	            0x85c0	                           test eax, eax	       204	trailer.c	FUNCTION_15	DO_1	IF_1	CALL_1
0xb1d	            0x7407	                            je 0x4000b66	       204	trailer.c	FUNCTION_15	DO_1	IF_1	CALL_1
0xb1f	      0xb800000000	                              mov eax, 0	       205	trailer.c	FUNCTION_15	DO_1	IF_1
0xb24	            0xeb43	                           jmp 0x4000ba9	       205	trailer.c	FUNCTION_15	DO_1	IF_1
0xb26	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       210	trailer.c	FUNCTION_15	DO_1	CALL_2
0xb29	            0x89c7	                            mov edi, eax	       210	trailer.c	FUNCTION_15	DO_1	CALL_2
0xb2b	      0xe8f3f9ffff	                   call sym.after_or_end	       210	trailer.c	FUNCTION_15	DO_1	CALL_2
0xb30	            0x85c0	                           test eax, eax	       211	trailer.c	FUNCTION_15	DO_1
0xb32	            0x740a	                            je 0x4000b7e	       211	trailer.c	FUNCTION_15	DO_1
0xb34	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       211	trailer.c	FUNCTION_15	DO_1
0xb38	        0x488b4008	                mov rax, qword [rax + 8]	       211	trailer.c	FUNCTION_15	DO_1
0xb3c	            0xeb07	                           jmp 0x4000b85	       211	trailer.c	FUNCTION_15	DO_1
0xb3e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       211	trailer.c	FUNCTION_15	DO_1
0xb42	          0x488b00	                    mov rax, qword [rax]	       211	trailer.c	FUNCTION_15	DO_1
0xb45	        0x488945f8	                mov qword [rbp - 8], rax	       210	trailer.c	FUNCTION_15	DO_1	CALL_2
0xb49	        0x488b45f8	                mov rax, qword [rbp - 8]	       212	trailer.c	FUNCTION_15	DO_1	IF_2
0xb4d	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       212	trailer.c	FUNCTION_15	DO_1	IF_2
0xb51	            0x7410	                            je 0x4000ba3	       212	trailer.c	FUNCTION_15	DO_1	IF_2
0xb53	        0x488b45f8	                mov rax, qword [rbp - 8]	       214	trailer.c	FUNCTION_15	DO_1	CALL_3
0xb57	        0x488945e8	             mov qword [rbp - 0x18], rax	       214	trailer.c	FUNCTION_15	DO_1	CALL_3
0xb5b	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       215	trailer.c	FUNCTION_15	DO_1
0xb5f	            0x75a7	                           jne 0x4000b48	       215	trailer.c	FUNCTION_15	DO_1
0xb61	            0xeb01	                           jmp 0x4000ba4	       215	trailer.c	FUNCTION_15	DO_1
0xb63	              0x90	                                     nop	       213	trailer.c	FUNCTION_15	DO_1	IF_2
0xb64	      0xb801000000	                              mov eax, 1	       216	trailer.c	FUNCTION_15
0xb69	              0xc9	                                   leave	       217	trailer.c	FUNCTION_15
0xb6a	              0xc3	                                     ret	       217	trailer.c	FUNCTION_15
add_arg_item	CALL,3:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,4	58
0x1d2c	              0x55	                                push rbp	       679	trailer.c	FUNCTION_35
0x1d2d	          0x4889e5	                            mov rbp, rsp	       679	trailer.c	FUNCTION_35
0x1d30	        0x4883ec40	                           sub rsp, 0x40	       679	trailer.c	FUNCTION_35
0x1d34	        0x48897de8	             mov qword [rbp - 0x18], rdi	       679	trailer.c	FUNCTION_35
0x1d38	        0x488975e0	             mov qword [rbp - 0x20], rsi	       679	trailer.c	FUNCTION_35
0x1d3c	        0x488955d8	             mov qword [rbp - 0x28], rdx	       679	trailer.c	FUNCTION_35
0x1d40	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       679	trailer.c	FUNCTION_35
0x1d44	        0x4c8945c8	              mov qword [rbp - 0x38], r8	       679	trailer.c	FUNCTION_35
0x1d48	      0xbe01000000	                              mov esi, 1	       680	trailer.c	FUNCTION_35	CALL_1
0x1d4d	      0xbf48000000	                           mov edi, 0x48	       680	trailer.c	FUNCTION_35	CALL_1
0x1d52	      0xe800000000	                          call 0x4001d97	       680	trailer.c	FUNCTION_35	CALL_1
0x1d57	        0x488945f8	                mov qword [rbp - 8], rax	       680	trailer.c	FUNCTION_35	CALL_1
0x1d5b	        0x488b45f8	                mov rax, qword [rbp - 8]	       681	trailer.c	FUNCTION_35
0x1d5f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       681	trailer.c	FUNCTION_35
0x1d63	        0x48895010	             mov qword [rax + 0x10], rdx	       681	trailer.c	FUNCTION_35
0x1d67	        0x488b45f8	                mov rax, qword [rbp - 8]	       682	trailer.c	FUNCTION_35
0x1d6b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       682	trailer.c	FUNCTION_35
0x1d6f	        0x48895018	             mov qword [rax + 0x18], rdx	       682	trailer.c	FUNCTION_35
0x1d73	        0x488b45f8	                mov rax, qword [rbp - 8]	       683	trailer.c	FUNCTION_35	CALL_2
0x1d77	        0x488d5020	                   lea rdx, [rax + 0x20]	       683	trailer.c	FUNCTION_35	CALL_2
0x1d7b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       683	trailer.c	FUNCTION_35	CALL_2
0x1d7f	          0x4889c6	                            mov rsi, rax	       683	trailer.c	FUNCTION_35	CALL_2
0x1d82	          0x4889d7	                            mov rdi, rdx	       683	trailer.c	FUNCTION_35	CALL_2
0x1d85	      0xe846f6ffff	                 call sym.duplicate_conf	       683	trailer.c	FUNCTION_35	CALL_2
0x1d8a	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       684	trailer.c	FUNCTION_35	IF_1
0x1d8f	            0x744b	                            je 0x4001e1c	       684	trailer.c	FUNCTION_35	IF_1
0x1d91	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       685	trailer.c	FUNCTION_35	IF_1	IF_2
0x1d95	          0x8b4018	            mov eax, dword [rax + 0x18] 	       685	trailer.c	FUNCTION_35	IF_1	IF_2
0x1d98	            0x85c0	                           test eax, eax	       685	trailer.c	FUNCTION_35	IF_1	IF_2
0x1d9a	            0x740e	                            je 0x4001dea	       685	trailer.c	FUNCTION_35	IF_1	IF_2
0x1d9c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       686	trailer.c	FUNCTION_35	IF_1	IF_2
0x1da0	          0x8b5018	            mov edx, dword [rax + 0x18] 	       686	trailer.c	FUNCTION_35	IF_1	IF_2
0x1da3	        0x488b45f8	                mov rax, qword [rbp - 8]	       686	trailer.c	FUNCTION_35	IF_1	IF_2
0x1da7	          0x895038	             mov dword [rax + 0x38], edx	       686	trailer.c	FUNCTION_35	IF_1	IF_2
0x1daa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       687	trailer.c	FUNCTION_35	IF_1	IF_3
0x1dae	          0x8b401c	            mov eax, dword [rax + 0x1c] 	       687	trailer.c	FUNCTION_35	IF_1	IF_3
0x1db1	            0x85c0	                           test eax, eax	       687	trailer.c	FUNCTION_35	IF_1	IF_3
0x1db3	            0x740e	                            je 0x4001e03	       687	trailer.c	FUNCTION_35	IF_1	IF_3
0x1db5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       688	trailer.c	FUNCTION_35	IF_1	IF_3
0x1db9	          0x8b501c	            mov edx, dword [rax + 0x1c] 	       688	trailer.c	FUNCTION_35	IF_1	IF_3
0x1dbc	        0x488b45f8	                mov rax, qword [rbp - 8]	       688	trailer.c	FUNCTION_35	IF_1	IF_3
0x1dc0	          0x89503c	             mov dword [rax + 0x3c], edx	       688	trailer.c	FUNCTION_35	IF_1	IF_3
0x1dc3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       689	trailer.c	FUNCTION_35	IF_1	IF_4
0x1dc7	          0x8b4020	            mov eax, dword [rax + 0x20] 	       689	trailer.c	FUNCTION_35	IF_1	IF_4
0x1dca	            0x85c0	                           test eax, eax	       689	trailer.c	FUNCTION_35	IF_1	IF_4
0x1dcc	            0x740e	                            je 0x4001e1c	       689	trailer.c	FUNCTION_35	IF_1	IF_4
0x1dce	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       690	trailer.c	FUNCTION_35	IF_1	IF_4
0x1dd2	          0x8b5020	            mov edx, dword [rax + 0x20] 	       690	trailer.c	FUNCTION_35	IF_1	IF_4
0x1dd5	        0x488b45f8	                mov rax, qword [rbp - 8]	       690	trailer.c	FUNCTION_35	IF_1	IF_4
0x1dd9	          0x895040	             mov dword [rax + 0x40], edx	       690	trailer.c	FUNCTION_35	IF_1	IF_4
0x1ddc	        0x488b45f8	                mov rax, qword [rbp - 8]	       692	trailer.c	FUNCTION_35	CALL_3
0x1de0	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       692	trailer.c	FUNCTION_35	CALL_3
0x1de4	          0x4889d6	                            mov rsi, rdx	       692	trailer.c	FUNCTION_35	CALL_3
0x1de7	          0x4889c7	                            mov rdi, rax	       692	trailer.c	FUNCTION_35	CALL_3
0x1dea	      0xe80fe6ffff	                  call sym.list_add_tail	       692	trailer.c	FUNCTION_35	CALL_3
0x1def	              0x90	                                     nop	       693	trailer.c	FUNCTION_35
0x1df0	              0xc9	                                   leave	       693	trailer.c	FUNCTION_35
0x1df1	              0xc3	                                     ret	       693	trailer.c	FUNCTION_35
add_arg_to_input_list	CALL,4:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,1:FOR,0:IF,1	30
0xa85	              0x55	                                push rbp	       187	trailer.c	FUNCTION_14
0xa86	          0x4889e5	                            mov rbp, rsp	       187	trailer.c	FUNCTION_14
0xa89	        0x4883ec20	                           sub rsp, 0x20	       187	trailer.c	FUNCTION_14
0xa8d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       187	trailer.c	FUNCTION_14
0xa91	        0x488975e0	             mov qword [rbp - 0x20], rsi	       187	trailer.c	FUNCTION_14
0xa95	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       188	trailer.c	FUNCTION_14	CALL_1
0xa99	          0x8b4038	            mov eax, dword [rax + 0x38] 	       188	trailer.c	FUNCTION_14	CALL_1
0xa9c	            0x89c7	                            mov edi, eax	       188	trailer.c	FUNCTION_14	CALL_1
0xa9e	      0xe880faffff	                   call sym.after_or_end	       188	trailer.c	FUNCTION_14	CALL_1
0xaa3	          0x8945f4	              mov dword [rbp - 0xc], eax	       188	trailer.c	FUNCTION_14	CALL_1
0xaa6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       189	trailer.c	FUNCTION_14	CALL_2
0xaaa	          0x4889c7	                            mov rdi, rax	       189	trailer.c	FUNCTION_14	CALL_2
0xaad	      0xe866ffffff	               call sym.trailer_from_arg	       189	trailer.c	FUNCTION_14	CALL_2
0xab2	        0x488945f8	                mov qword [rbp - 8], rax	       189	trailer.c	FUNCTION_14	CALL_2
0xab6	        0x837df400	                cmp dword [rbp - 0xc], 0	       190	trailer.c	FUNCTION_14	IF_1
0xaba	            0x7415	                            je 0x4000b11	       190	trailer.c	FUNCTION_14	IF_1
0xabc	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       191	trailer.c	FUNCTION_14	CALL_3
0xac0	        0x488b45f8	                mov rax, qword [rbp - 8]	       191	trailer.c	FUNCTION_14	CALL_3
0xac4	          0x4889d6	                            mov rsi, rdx	       191	trailer.c	FUNCTION_14	CALL_3
0xac7	          0x4889c7	                            mov rdi, rax	       191	trailer.c	FUNCTION_14	CALL_3
0xaca	      0xe8ecf8ffff	                       call sym.list_add	       191	trailer.c	FUNCTION_14	CALL_3
0xacf	            0xeb13	                           jmp 0x4000b24	       194	trailer.c	FUNCTION_14
0xad1	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       193	trailer.c	FUNCTION_14	CALL_4
0xad5	        0x488b45f8	                mov rax, qword [rbp - 8]	       193	trailer.c	FUNCTION_14	CALL_4
0xad9	          0x4889d6	                            mov rsi, rdx	       193	trailer.c	FUNCTION_14	CALL_4
0xadc	          0x4889c7	                            mov rdi, rax	       193	trailer.c	FUNCTION_14	CALL_4
0xadf	      0xe81af9ffff	                  call sym.list_add_tail	       193	trailer.c	FUNCTION_14	CALL_4
0xae4	              0x90	                                     nop	       194	trailer.c	FUNCTION_14
0xae5	              0xc9	                                   leave	       194	trailer.c	FUNCTION_14
0xae6	              0xc3	                                     ret	       194	trailer.c	FUNCTION_14
format_trailers_from_commit	CALL,3:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,0	30
0x3228	              0x55	                                push rbp	      1158	trailer.c	FUNCTION_52
0x3229	          0x4889e5	                            mov rbp, rsp	      1158	trailer.c	FUNCTION_52
0x322c	        0x4883ec50	                           sub rsp, 0x50	      1158	trailer.c	FUNCTION_52
0x3230	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1158	trailer.c	FUNCTION_52
0x3234	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1158	trailer.c	FUNCTION_52
0x3238	        0x488955b8	             mov qword [rbp - 0x48], rdx	      1158	trailer.c	FUNCTION_52
0x323c	    0x64488b042528	                mov rax, qword fs:[0x28]	      1158	trailer.c	FUNCTION_52
0x3245	        0x488945f8	                mov qword [rbp - 8], rax	      1158	trailer.c	FUNCTION_52
0x3249	            0x31c0	                            xor eax, eax	      1158	trailer.c	FUNCTION_52
0x324b	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1161	trailer.c	FUNCTION_52	CALL_1
0x324f	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1161	trailer.c	FUNCTION_52	CALL_1
0x3253	          0x4889d6	                            mov rsi, rdx	      1161	trailer.c	FUNCTION_52	CALL_1
0x3256	          0x4889c7	                            mov rdi, rax	      1161	trailer.c	FUNCTION_52	CALL_1
0x3259	      0xe800000000	                          call 0x400329e	      1161	trailer.c	FUNCTION_52	CALL_1
0x325e	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1162	trailer.c	FUNCTION_52	CALL_2
0x3262	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	      1162	trailer.c	FUNCTION_52	CALL_2
0x3266	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1162	trailer.c	FUNCTION_52	CALL_2
0x326a	          0x4889ce	                            mov rsi, rcx	      1162	trailer.c	FUNCTION_52	CALL_2
0x326d	          0x4889c7	                            mov rdi, rax	      1162	trailer.c	FUNCTION_52	CALL_2
0x3270	      0xe807feffff	            call sym.format_trailer_info	      1162	trailer.c	FUNCTION_52	CALL_2
0x3275	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1163	trailer.c	FUNCTION_52	CALL_3
0x3279	          0x4889c7	                            mov rdi, rax	      1163	trailer.c	FUNCTION_52	CALL_3
0x327c	      0xe800000000	                          call 0x40032c1	      1163	trailer.c	FUNCTION_52	CALL_3
0x3281	              0x90	                                     nop	      1164	trailer.c	FUNCTION_52
0x3282	        0x488b45f8	                mov rax, qword [rbp - 8]	      1164	trailer.c	FUNCTION_52
0x3286	    0x644833042528	                xor rax, qword fs:[0x28]	      1164	trailer.c	FUNCTION_52
0x328f	            0x7405	                            je 0x40032d6	      1164	trailer.c	FUNCTION_52
0x3291	      0xe800000000	                          call 0x40032d6	      1164	trailer.c	FUNCTION_52
0x3296	              0xc9	                                   leave	      1164	trailer.c	FUNCTION_52
0x3297	              0xc3	                                     ret	      1164	trailer.c	FUNCTION_52
const_error	CALL,0:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,0	5
0x0	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_72
0x1	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_72
0x4	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_72
0x9	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_72
0xa	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_72
apply_command	CALL,10:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,1:FOR,0:IF,2	90
0xb6b	              0x55	                                push rbp	       220	trailer.c	FUNCTION_16
0xb6c	          0x4889e5	                            mov rbp, rsp	       220	trailer.c	FUNCTION_16
0xb6f	              0x53	                                push rbx	       220	trailer.c	FUNCTION_16
0xb70	    0x4881ece80000	                           sub rsp, 0xe8	       220	trailer.c	FUNCTION_16
0xb77	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	       220	trailer.c	FUNCTION_16
0xb7e	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	       220	trailer.c	FUNCTION_16
0xb85	    0x64488b042528	                mov rax, qword fs:[0x28]	       220	trailer.c	FUNCTION_16
0xb8e	        0x488945e8	             mov qword [rbp - 0x18], rax	       220	trailer.c	FUNCTION_16
0xb92	            0x31c0	                            xor eax, eax	       220	trailer.c	FUNCTION_16
0xb94	    0x48c78530ffff	               mov qword [rbp - 0xd0], 0	       221	trailer.c	FUNCTION_16
0xb9f	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	       221	trailer.c	FUNCTION_16
0xbaa	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	       221	trailer.c	FUNCTION_16
0xbb5	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	       222	trailer.c	FUNCTION_16
0xbc0	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	       222	trailer.c	FUNCTION_16
0xbcb	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	       222	trailer.c	FUNCTION_16
0xbd6	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	       223	trailer.c	FUNCTION_16
0xbdd	      0xb800000000	                              mov eax, 0	       223	trailer.c	FUNCTION_16
0xbe2	      0xb90c000000	                            mov ecx, 0xc	       223	trailer.c	FUNCTION_16
0xbe7	          0x4889d7	                            mov rdi, rdx	       223	trailer.c	FUNCTION_16
0xbea	          0xf348ab	              rep stosq qword [rdi], rax	       223	trailer.c	FUNCTION_16
0xbed	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       223	trailer.c	FUNCTION_16
0xbf8	    0x48c745880000	               mov qword [rbp - 0x78], 0	       223	trailer.c	FUNCTION_16
0xc00	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       224	trailer.c	FUNCTION_16
0xc08	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       224	trailer.c	FUNCTION_16
0xc10	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       227	trailer.c	FUNCTION_16	CALL_1
0xc17	    0x488d8530ffff	                   lea rax, [rbp - 0xd0]	       227	trailer.c	FUNCTION_16	CALL_1
0xc1e	          0x4889d6	                            mov rsi, rdx	       227	trailer.c	FUNCTION_16	CALL_1
0xc21	          0x4889c7	                            mov rdi, rax	       227	trailer.c	FUNCTION_16	CALL_1
0xc24	      0xe805f7ffff	                  call sym.strbuf_addstr	       227	trailer.c	FUNCTION_16	CALL_1
0xc29	    0x4883bd10ffff	               cmp qword [rbp - 0xf0], 0	       228	trailer.c	FUNCTION_16	IF_1
0xc31	            0x741b	                            je 0x4000c8e	       228	trailer.c	FUNCTION_16	IF_1
0xc33	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	       229	trailer.c	FUNCTION_16	CALL_2
0xc3a	    0x488d8530ffff	                   lea rax, [rbp - 0xd0]	       229	trailer.c	FUNCTION_16	CALL_2
0xc41	      0xbe00000000	                              mov esi, 0	       229	trailer.c	FUNCTION_16	CALL_2
0xc46	          0x4889c7	                            mov rdi, rax	       229	trailer.c	FUNCTION_16	CALL_2
0xc49	      0xe8e2faffff	                 call sym.strbuf_replace	       229	trailer.c	FUNCTION_16	CALL_2
0xc4e	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       231	trailer.c	FUNCTION_16
0xc55	        0x488945d0	             mov qword [rbp - 0x30], rax	       231	trailer.c	FUNCTION_16
0xc59	        0x488d45d0	                   lea rax, [rbp - 0x30]	       232	trailer.c	FUNCTION_16
0xc5d	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       232	trailer.c	FUNCTION_16
0xc64	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       233	trailer.c	FUNCTION_16
0xc6c	         0xfb645b8	            movzx eax, byte [rbp - 0x48]	       234	trailer.c	FUNCTION_16
0xc70	          0x83c801	                               or eax, 1	       234	trailer.c	FUNCTION_16
0xc73	          0x8845b8	               mov byte [rbp - 0x48], al	       234	trailer.c	FUNCTION_16
0xc76	         0xfb645b8	            movzx eax, byte [rbp - 0x48]	       235	trailer.c	FUNCTION_16
0xc7a	          0x83c840	                            or eax, 0x40	       235	trailer.c	FUNCTION_16
0xc7d	          0x8845b8	               mov byte [rbp - 0x48], al	       235	trailer.c	FUNCTION_16
0xc80	    0x488d8d50ffff	                   lea rcx, [rbp - 0xb0]	       237	trailer.c	FUNCTION_16	IF_2	CALL_3
0xc87	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	       237	trailer.c	FUNCTION_16	IF_2	CALL_3
0xc8e	      0xba00040000	                          mov edx, 0x400	       237	trailer.c	FUNCTION_16	IF_2	CALL_3
0xc93	          0x4889ce	                            mov rsi, rcx	       237	trailer.c	FUNCTION_16	IF_2	CALL_3
0xc96	          0x4889c7	                            mov rdi, rax	       237	trailer.c	FUNCTION_16	IF_2	CALL_3
0xc99	      0xe83bf8ffff	                call sym.capture_command	       237	trailer.c	FUNCTION_16	IF_2	CALL_3
0xc9e	            0x85c0	                           test eax, eax	       237	trailer.c	FUNCTION_16	IF_2	CALL_3
0xca0	            0x7448	                            je 0x4000d2a	       237	trailer.c	FUNCTION_16	IF_2	CALL_3
0xca2	    0x488b9d40ffff	             mov rbx, qword [rbp - 0xc0]	       238	trailer.c	FUNCTION_16	IF_2	CALL_5
0xca9	      0xbf00000000	                              mov edi, 0	       238	trailer.c	FUNCTION_16	IF_2	CALL_5
0xcae	      0xe8faf7ffff	                               call sym.	       238	trailer.c	FUNCTION_16	IF_2	CALL_5
0xcb3	          0x4889de	                            mov rsi, rbx	       238	trailer.c	FUNCTION_16	IF_2	CALL_5
0xcb6	          0x4889c7	                            mov rdi, rax	       238	trailer.c	FUNCTION_16	IF_2	CALL_5
0xcb9	      0xb800000000	                              mov eax, 0	       238	trailer.c	FUNCTION_16	IF_2	CALL_5
0xcbe	      0xe800000000	                          call 0x4000d03	       238	trailer.c	FUNCTION_16	IF_2	CALL_5
0xcc3	      0xe838f3ffff	                    call sym.const_error	       238	trailer.c	FUNCTION_16	IF_2	CALL_5
0xcc8	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       239	trailer.c	FUNCTION_16	IF_2	CALL_6
0xccf	          0x4889c7	                            mov rdi, rax	       239	trailer.c	FUNCTION_16	IF_2	CALL_6
0xcd2	      0xe800000000	                          call 0x4000d17	       239	trailer.c	FUNCTION_16	IF_2	CALL_6
0xcd7	      0xbf00000000	                              mov edi, 0	       240	trailer.c	FUNCTION_16	IF_2	CALL_7
0xcdc	      0xe800000000	                          call 0x4000d21	       240	trailer.c	FUNCTION_16	IF_2	CALL_7
0xce1	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	       240	trailer.c	FUNCTION_16	IF_2	CALL_7
0xce8	            0xeb2a	                           jmp 0x4000d54	       240	trailer.c	FUNCTION_16	IF_2	CALL_7
0xcea	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       242	trailer.c	FUNCTION_16	ELSE_1	CALL_8
0xcf1	          0x4889c7	                            mov rdi, rax	       242	trailer.c	FUNCTION_16	ELSE_1	CALL_8
0xcf4	      0xe800000000	                          call 0x4000d39	       242	trailer.c	FUNCTION_16	ELSE_1	CALL_8
0xcf9	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       243	trailer.c	FUNCTION_16	ELSE_1	CALL_9
0xd00	      0xbe00000000	                              mov esi, 0	       243	trailer.c	FUNCTION_16	ELSE_1	CALL_9
0xd05	          0x4889c7	                            mov rdi, rax	       243	trailer.c	FUNCTION_16	ELSE_1	CALL_9
0xd08	      0xe800000000	                          call 0x4000d4d	       243	trailer.c	FUNCTION_16	ELSE_1	CALL_9
0xd0d	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	       243	trailer.c	FUNCTION_16	ELSE_1	CALL_9
0xd14	    0x488d8530ffff	                   lea rax, [rbp - 0xd0]	       246	trailer.c	FUNCTION_16	CALL_10
0xd1b	          0x4889c7	                            mov rdi, rax	       246	trailer.c	FUNCTION_16	CALL_10
0xd1e	      0xe800000000	                          call 0x4000d63	       246	trailer.c	FUNCTION_16	CALL_10
0xd23	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       247	trailer.c	FUNCTION_16
0xd2a	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       248	trailer.c	FUNCTION_16
0xd2e	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       248	trailer.c	FUNCTION_16
0xd37	            0x7405	                            je 0x4000d7e	       248	trailer.c	FUNCTION_16
0xd39	      0xe800000000	                          call 0x4000d7e	       248	trailer.c	FUNCTION_16
0xd3e	    0x4881c4e80000	                           add rsp, 0xe8	       248	trailer.c	FUNCTION_16
0xd45	              0x5b	                                 pop rbx	       248	trailer.c	FUNCTION_16
0xd46	              0x5d	                                 pop rbp	       248	trailer.c	FUNCTION_16
0xd47	              0xc3	                                     ret	       248	trailer.c	FUNCTION_16
last_line	CALL,0:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,1:IF,3	32
0x215c	              0x55	                                push rbp	       767	trailer.c	FUNCTION_39
0x215d	          0x4889e5	                            mov rbp, rsp	       767	trailer.c	FUNCTION_39
0x2160	        0x48897de8	             mov qword [rbp - 0x18], rdi	       767	trailer.c	FUNCTION_39
0x2164	        0x488975e0	             mov qword [rbp - 0x20], rsi	       767	trailer.c	FUNCTION_39
0x2168	      0x48837de000	               cmp qword [rbp - 0x20], 0	       769	trailer.c	FUNCTION_39	IF_1
0x216d	            0x7507	                           jne 0x40021b6	       769	trailer.c	FUNCTION_39	IF_1
0x216f	      0xb8ffffffff	                     mov eax, 0xffffffff	       770	trailer.c	FUNCTION_39	IF_1
0x2174	            0xeb45	                           jmp 0x40021fb	       770	trailer.c	FUNCTION_39	IF_1
0x2176	      0x48837de001	               cmp qword [rbp - 0x20], 1	       771	trailer.c	FUNCTION_39	IF_2
0x217b	            0x7507	                           jne 0x40021c4	       771	trailer.c	FUNCTION_39	IF_2
0x217d	      0xb800000000	                              mov eax, 0	       772	trailer.c	FUNCTION_39	IF_2
0x2182	            0xeb37	                           jmp 0x40021fb	       772	trailer.c	FUNCTION_39	IF_2
0x2184	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       778	trailer.c	FUNCTION_39
0x2188	          0x83e802	                              sub eax, 2	       778	trailer.c	FUNCTION_39
0x218b	          0x8945fc	                mov dword [rbp - 4], eax	       778	trailer.c	FUNCTION_39
0x218e	            0xeb20	                           jmp 0x40021f0	       780	trailer.c	FUNCTION_39	FOR_1
0x2190	          0x8b45fc	                mov eax, dword [rbp - 4]	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x2193	          0x4863d0	                         movsxd rdx, eax	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x2196	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x219a	          0x4801d0	                            add rax, rdx	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x219d	           0xfb600	                   movzx eax, byte [rax]	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x21a0	            0x3c0a	                             cmp al, 0xa	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x21a2	            0x7508	                           jne 0x40021ec	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x21a4	          0x8b45fc	                mov eax, dword [rbp - 4]	       782	trailer.c	FUNCTION_39	FOR_1	IF_3
0x21a7	          0x83c001	                              add eax, 1	       782	trailer.c	FUNCTION_39	FOR_1	IF_3
0x21aa	            0xeb0f	                           jmp 0x40021fb	       782	trailer.c	FUNCTION_39	FOR_1	IF_3
0x21ac	        0x836dfc01	                  sub dword [rbp - 4], 1	       780	trailer.c	FUNCTION_39	FOR_1
0x21b0	        0x837dfc00	                  cmp dword [rbp - 4], 0	       780	trailer.c	FUNCTION_39	FOR_1
0x21b4	            0x79da	                           jns 0x40021d0	       780	trailer.c	FUNCTION_39	FOR_1
0x21b6	      0xb800000000	                              mov eax, 0	       784	trailer.c	FUNCTION_39
0x21bb	              0x5d	                                 pop rbp	       785	trailer.c	FUNCTION_39
0x21bc	              0xc3	                                     ret	       785	trailer.c	FUNCTION_39
strbuf_setlen	CALL,2:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,1:FOR,0:IF,2	43
0x226	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_100
0x227	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_100
0x22a	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_100
0x22e	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_100
0x232	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_100
0x236	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_100	IF_1
0x23a	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_100	IF_1
0x23d	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_100	IF_1
0x240	            0x740d	                            je 0x400028f	       162	strbuf.h	FUNCTION_100	IF_1
0x242	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_100	IF_1
0x246	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_100	IF_1
0x249	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_100	IF_1
0x24d	            0xeb05	                           jmp 0x4000294	       162	strbuf.h	FUNCTION_100	IF_1
0x24f	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_100	IF_1
0x254	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_100	IF_1
0x258	            0x730f	                           jae 0x40002a9	       162	strbuf.h	FUNCTION_100	IF_1
0x25a	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_100	CALL_1
0x25f	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_100	CALL_1
0x264	      0xe800000000	                          call 0x40002a9	       163	strbuf.h	FUNCTION_100	CALL_1
0x269	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_100
0x26d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_100
0x271	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_100
0x275	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_100	IF_2
0x279	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_100	IF_2
0x27d	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_100	IF_2
0x283	            0x7414	                            je 0x40002d9	       165	strbuf.h	FUNCTION_100	IF_2
0x285	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_100	IF_2
0x289	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_100	IF_2
0x28d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_100	IF_2
0x291	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_100	IF_2
0x294	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_100	IF_2
0x297	            0xeb24	                           jmp 0x40002fd	       169	strbuf.h	FUNCTION_100
0x299	     0xfb605000000	           movzx eax, byte [0x040002e0] 	       168	strbuf.h	FUNCTION_100	CALL_2
0x2a0	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_100	CALL_2
0x2a2	            0x7419	                            je 0x40002fd	       168	strbuf.h	FUNCTION_100	CALL_2
0x2a4	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_100	CALL_2
0x2a9	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_100	CALL_2
0x2ae	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_100	CALL_2
0x2b3	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_100	CALL_2
0x2b8	      0xe800000000	                          call 0x40002fd	       168	strbuf.h	FUNCTION_100	CALL_2
0x2bd	              0x90	                                     nop	       169	strbuf.h	FUNCTION_100
0x2be	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_100
0x2bf	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_100
print_tok_val	CALL,5:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,1:FOR,0:IF,3	51
0x8ca	              0x55	                                push rbp	       145	trailer.c	FUNCTION_11
0x8cb	          0x4889e5	                            mov rbp, rsp	       145	trailer.c	FUNCTION_11
0x8ce	        0x4883ec30	                           sub rsp, 0x30	       145	trailer.c	FUNCTION_11
0x8d2	        0x48897de8	             mov qword [rbp - 0x18], rdi	       145	trailer.c	FUNCTION_11
0x8d6	        0x488975e0	             mov qword [rbp - 0x20], rsi	       145	trailer.c	FUNCTION_11
0x8da	        0x488955d8	             mov qword [rbp - 0x28], rdx	       145	trailer.c	FUNCTION_11
0x8de	      0x48837de000	               cmp qword [rbp - 0x20], 0	       148	trailer.c	FUNCTION_11	IF_1
0x8e3	            0x751f	                           jne 0x4000944	       148	trailer.c	FUNCTION_11	IF_1
0x8e5	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       149	trailer.c	FUNCTION_11	IF_1	CALL_1
0x8e9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       149	trailer.c	FUNCTION_11	IF_1	CALL_1
0x8ed	      0xbe00000000	                              mov esi, 0	       149	trailer.c	FUNCTION_11	IF_1	CALL_1
0x8f2	          0x4889c7	                            mov rdi, rax	       149	trailer.c	FUNCTION_11	IF_1	CALL_1
0x8f5	      0xb800000000	                              mov eax, 0	       149	trailer.c	FUNCTION_11	IF_1	CALL_1
0x8fa	      0xe800000000	                          call 0x400093f	       149	trailer.c	FUNCTION_11	IF_1	CALL_1
0x8ff	      0xe980000000	                           jmp 0x40009c4	       150	trailer.c	FUNCTION_11	IF_1
0x904	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       153	trailer.c	FUNCTION_11	CALL_2
0x908	          0x4889c7	                            mov rdi, rax	       153	trailer.c	FUNCTION_11	CALL_2
0x90b	      0xe851ffffff	            call sym.last_non_space_char	       153	trailer.c	FUNCTION_11	CALL_2
0x910	          0x8845ff	                  mov byte [rbp - 1], al	       153	trailer.c	FUNCTION_11	CALL_2
0x913	        0x807dff00	                   cmp byte [rbp - 1], 0	       154	trailer.c	FUNCTION_11	IF_2
0x917	            0x746a	                            je 0x40009c3	       154	trailer.c	FUNCTION_11	IF_2
0x919	         0xfbe55ff	               movsx edx, byte [rbp - 1]	       156	trailer.c	FUNCTION_11	IF_3	CALL_3
0x91d	    0x488b05000000	            mov rax, qword [0x04000964] 	       156	trailer.c	FUNCTION_11	IF_3	CALL_3
0x924	            0x89d6	                            mov esi, edx	       156	trailer.c	FUNCTION_11	IF_3	CALL_3
0x926	          0x4889c7	                            mov rdi, rax	       156	trailer.c	FUNCTION_11	IF_3	CALL_3
0x929	      0xe800000000	                          call 0x400096e	       156	trailer.c	FUNCTION_11	IF_3	CALL_3
0x92e	          0x4885c0	                           test rax, rax	       156	trailer.c	FUNCTION_11	IF_3	CALL_3
0x931	            0x7420	                            je 0x4000993	       156	trailer.c	FUNCTION_11	IF_3	CALL_3
0x933	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       157	trailer.c	FUNCTION_11	CALL_4
0x937	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       157	trailer.c	FUNCTION_11	CALL_4
0x93b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       157	trailer.c	FUNCTION_11	CALL_4
0x93f	      0xbe00000000	                              mov esi, 0	       157	trailer.c	FUNCTION_11	CALL_4
0x944	          0x4889c7	                            mov rdi, rax	       157	trailer.c	FUNCTION_11	CALL_4
0x947	      0xb800000000	                              mov eax, 0	       157	trailer.c	FUNCTION_11	CALL_4
0x94c	      0xe800000000	                          call 0x4000991	       157	trailer.c	FUNCTION_11	CALL_4
0x951	            0xeb31	                           jmp 0x40009c4	       157	trailer.c	FUNCTION_11	CALL_4
0x953	    0x488b05000000	            mov rax, qword [0x0400099a] 	       159	trailer.c	FUNCTION_11	CALL_5
0x95a	           0xfb600	                   movzx eax, byte [rax]	       159	trailer.c	FUNCTION_11	CALL_5
0x95d	           0xfbec8	                           movsx ecx, al	       159	trailer.c	FUNCTION_11	CALL_5
0x960	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       159	trailer.c	FUNCTION_11	CALL_5
0x964	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       159	trailer.c	FUNCTION_11	CALL_5
0x968	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       159	trailer.c	FUNCTION_11	CALL_5
0x96c	          0x4989f0	                             mov r8, rsi	       159	trailer.c	FUNCTION_11	CALL_5
0x96f	      0xbe00000000	                              mov esi, 0	       159	trailer.c	FUNCTION_11	CALL_5
0x974	          0x4889c7	                            mov rdi, rax	       159	trailer.c	FUNCTION_11	CALL_5
0x977	      0xb800000000	                              mov eax, 0	       159	trailer.c	FUNCTION_11	CALL_5
0x97c	      0xe800000000	                          call 0x40009c1	       159	trailer.c	FUNCTION_11	CALL_5
0x981	            0xeb01	                           jmp 0x40009c4	       159	trailer.c	FUNCTION_11	CALL_5
0x983	              0x90	                                     nop	       155	trailer.c	FUNCTION_11	IF_2
0x984	              0xc9	                                   leave	       160	trailer.c	FUNCTION_11
0x985	              0xc3	                                     ret	       160	trailer.c	FUNCTION_11
find_same_and_apply_arg	CALL,3:DO,0:SWITCH,0:WHILE,0:functions,1:ELSE,0:FOR,0:IF,1	82
0x1023	              0x55	                                push rbp	       333	trailer.c	FUNCTION_20
0x1024	          0x4889e5	                            mov rbp, rsp	       333	trailer.c	FUNCTION_20
0x1027	        0x4883ec40	                           sub rsp, 0x40	       333	trailer.c	FUNCTION_20
0x102b	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       333	trailer.c	FUNCTION_20
0x102f	        0x488975c0	             mov qword [rbp - 0x40], rsi	       333	trailer.c	FUNCTION_20
0x1033	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       338	trailer.c	FUNCTION_20
0x1037	          0x8b4038	            mov eax, dword [rax + 0x38] 	       338	trailer.c	FUNCTION_20
0x103a	          0x8945d4	             mov dword [rbp - 0x2c], eax	       338	trailer.c	FUNCTION_20
0x103d	        0x837dd402	               cmp dword [rbp - 0x2c], 2	       339	trailer.c	FUNCTION_20
0x1041	            0x7406	                            je 0x4001089	       339	trailer.c	FUNCTION_20
0x1043	        0x837dd403	               cmp dword [rbp - 0x2c], 3	       339	trailer.c	FUNCTION_20
0x1047	            0x7507	                           jne 0x4001090	       339	trailer.c	FUNCTION_20
0x1049	      0xb801000000	                              mov eax, 1	       339	trailer.c	FUNCTION_20
0x104e	            0xeb05	                           jmp 0x4001095	       339	trailer.c	FUNCTION_20
0x1050	      0xb800000000	                              mov eax, 0	       339	trailer.c	FUNCTION_20
0x1055	          0x8945d8	             mov dword [rbp - 0x28], eax	       339	trailer.c	FUNCTION_20
0x1058	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       340	trailer.c	FUNCTION_20	CALL_1
0x105b	            0x89c7	                            mov edi, eax	       340	trailer.c	FUNCTION_20	CALL_1
0x105d	      0xe8c1f4ffff	                   call sym.after_or_end	       340	trailer.c	FUNCTION_20	CALL_1
0x1062	          0x8945dc	             mov dword [rbp - 0x24], eax	       340	trailer.c	FUNCTION_20	CALL_1
0x1065	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       343	trailer.c	FUNCTION_20	IF_1	CALL_2
0x1069	          0x4889c7	                            mov rdi, rax	       343	trailer.c	FUNCTION_20	IF_1	CALL_2
0x106c	      0xe821f4ffff	                     call sym.list_empty	       343	trailer.c	FUNCTION_20	IF_1	CALL_2
0x1071	            0x85c0	                           test eax, eax	       343	trailer.c	FUNCTION_20	IF_1	CALL_2
0x1073	            0x740a	                            je 0x40010bf	       343	trailer.c	FUNCTION_20	IF_1	CALL_2
0x1075	      0xb800000000	                              mov eax, 0	       344	trailer.c	FUNCTION_20	IF_1
0x107a	      0xe9b6000000	                           jmp 0x4001175	       344	trailer.c	FUNCTION_20	IF_1
0x107f	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       346	trailer.c	FUNCTION_20	CALL_3
0x1083	            0x740a	                            je 0x40010cf	       346	trailer.c	FUNCTION_20	CALL_3
0x1085	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       346	trailer.c	FUNCTION_20	CALL_3
0x1089	        0x488b4008	                mov rax, qword [rax + 8]	       346	trailer.c	FUNCTION_20	CALL_3
0x108d	            0xeb07	                           jmp 0x40010d6	       346	trailer.c	FUNCTION_20	CALL_3
0x108f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       346	trailer.c	FUNCTION_20	CALL_3
0x1093	          0x488b00	                    mov rax, qword [rax]	       346	trailer.c	FUNCTION_20	CALL_3
0x1096	        0x488945e8	             mov qword [rbp - 0x18], rax	       346	trailer.c	FUNCTION_20	CALL_3
0x109a	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       350	trailer.c	FUNCTION_20	FUNCTION_1
0x109e	            0x740a	                            je 0x40010ea	       350	trailer.c	FUNCTION_20	FUNCTION_1
0x10a0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       350	trailer.c	FUNCTION_20	FUNCTION_1
0x10a4	        0x488b4008	                mov rax, qword [rax + 8]	       350	trailer.c	FUNCTION_20	FUNCTION_1
0x10a8	            0xeb07	                           jmp 0x40010f1	       350	trailer.c	FUNCTION_20	FUNCTION_1
0x10aa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       350	trailer.c	FUNCTION_20	FUNCTION_1
0x10ae	          0x488b00	                    mov rax, qword [rax]	       350	trailer.c	FUNCTION_20	FUNCTION_1
0x10b1	        0x488945e0	             mov qword [rbp - 0x20], rax	       350	trailer.c	FUNCTION_20	FUNCTION_1
0x10b5	            0xeb6f	                           jmp 0x4001166	       350	trailer.c	FUNCTION_20	FUNCTION_1
0x10b7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       351	trailer.c	FUNCTION_20	FUNCTION_1	CALL_1
0x10bb	        0x488945f0	             mov qword [rbp - 0x10], rax	       351	trailer.c	FUNCTION_20	FUNCTION_1	CALL_1
0x10bf	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       352	trailer.c	FUNCTION_20	FUNCTION_1	IF_1	CALL_2
0x10c3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       352	trailer.c	FUNCTION_20	FUNCTION_1	IF_1	CALL_2
0x10c7	          0x4889d6	                            mov rsi, rdx	       352	trailer.c	FUNCTION_20	FUNCTION_1	IF_1	CALL_2
0x10ca	          0x4889c7	                            mov rdi, rax	       352	trailer.c	FUNCTION_20	FUNCTION_1	IF_1	CALL_2
0x10cd	      0xe8baf4ffff	                     call sym.same_token	       352	trailer.c	FUNCTION_20	FUNCTION_1	IF_1	CALL_2
0x10d2	            0x85c0	                           test eax, eax	       352	trailer.c	FUNCTION_20	FUNCTION_1	IF_1	CALL_2
0x10d4	            0x7508	                           jne 0x400111e	       352	trailer.c	FUNCTION_20	FUNCTION_1	IF_1	CALL_2
0x10d6	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       350	trailer.c	FUNCTION_20	FUNCTION_1
0x10da	            0x7535	                           jne 0x4001151	       350	trailer.c	FUNCTION_20	FUNCTION_1
0x10dc	            0xeb3d	                           jmp 0x400115b	       350	trailer.c	FUNCTION_20	FUNCTION_1
0x10de	        0x837dd800	               cmp dword [rbp - 0x28], 0	       354	trailer.c	FUNCTION_20	FUNCTION_1
0x10e2	            0x7406	                            je 0x400112a	       354	trailer.c	FUNCTION_20	FUNCTION_1
0x10e4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       354	trailer.c	FUNCTION_20	FUNCTION_1
0x10e8	            0xeb04	                           jmp 0x400112e	       354	trailer.c	FUNCTION_20	FUNCTION_1
0x10ea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       354	trailer.c	FUNCTION_20	FUNCTION_1
0x10ee	        0x488945f8	                mov qword [rbp - 8], rax	       354	trailer.c	FUNCTION_20	FUNCTION_1
0x10f2	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       355	trailer.c	FUNCTION_20	FUNCTION_1	CALL_3
0x10f6	        0x488b55f8	                mov rdx, qword [rbp - 8]	       355	trailer.c	FUNCTION_20	FUNCTION_1	CALL_3
0x10fa	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	       355	trailer.c	FUNCTION_20	FUNCTION_1	CALL_3
0x10fe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       355	trailer.c	FUNCTION_20	FUNCTION_1	CALL_3
0x1102	          0x4889c7	                            mov rdi, rax	       355	trailer.c	FUNCTION_20	FUNCTION_1	CALL_3
0x1105	      0xe8f2fcffff	            call sym.apply_arg_if_exists	       355	trailer.c	FUNCTION_20	FUNCTION_1	CALL_3
0x110a	      0xb801000000	                              mov eax, 1	       356	trailer.c	FUNCTION_20	FUNCTION_1
0x110f	            0xeb24	                           jmp 0x4001175	       356	trailer.c	FUNCTION_20	FUNCTION_1
0x1111	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       350	trailer.c	FUNCTION_20	FUNCTION_1
0x1115	        0x488b4008	                mov rax, qword [rax + 8]	       350	trailer.c	FUNCTION_20	FUNCTION_1
0x1119	            0xeb07	                           jmp 0x4001162	       350	trailer.c	FUNCTION_20	FUNCTION_1
0x111b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       350	trailer.c	FUNCTION_20	FUNCTION_1
0x111f	          0x488b00	                    mov rax, qword [rax]	       350	trailer.c	FUNCTION_20	FUNCTION_1
0x1122	        0x488945e0	             mov qword [rbp - 0x20], rax	       350	trailer.c	FUNCTION_20	FUNCTION_1
0x1126	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       350	trailer.c	FUNCTION_20	FUNCTION_1
0x112a	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       350	trailer.c	FUNCTION_20	FUNCTION_1
0x112e	            0x7587	                           jne 0x40010f7	       350	trailer.c	FUNCTION_20	FUNCTION_1
0x1130	      0xb800000000	                              mov eax, 0	       358	trailer.c	FUNCTION_20
0x1135	              0xc9	                                   leave	       359	trailer.c	FUNCTION_20
0x1136	              0xc3	                                     ret	       359	trailer.c	FUNCTION_20
apply_arg_if_missing	CALL,7:DO,0:SWITCH,1:WHILE,0:functions,0:ELSE,1:FOR,0:IF,1	52
0xf76	              0x55	                                push rbp	       308	trailer.c	FUNCTION_19
0xf77	          0x4889e5	                            mov rbp, rsp	       308	trailer.c	FUNCTION_19
0xf7a	        0x4883ec20	                           sub rsp, 0x20	       308	trailer.c	FUNCTION_19
0xf7e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       308	trailer.c	FUNCTION_19
0xf82	        0x488975e0	             mov qword [rbp - 0x20], rsi	       308	trailer.c	FUNCTION_19
0xf86	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       312	trailer.c	FUNCTION_19	SWITCH_1
0xf8a	          0x8b4040	            mov eax, dword [rax + 0x40] 	       312	trailer.c	FUNCTION_19	SWITCH_1
0xf8d	          0x83f801	                              cmp eax, 1	       312	trailer.c	FUNCTION_19	SWITCH_1
0xf90	            0x7413	                            je 0x4000fe5	       312	trailer.c	FUNCTION_19	SWITCH_1
0xf92	          0x83f802	                              cmp eax, 2	       312	trailer.c	FUNCTION_19	SWITCH_1
0xf95	            0x7571	                           jne 0x4001048	       312	trailer.c	FUNCTION_19	SWITCH_1
0xf97	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       314	trailer.c	FUNCTION_19	SWITCH_1	CALL_1
0xf9b	          0x4889c7	                            mov rdi, rax	       314	trailer.c	FUNCTION_19	SWITCH_1	CALL_1
0xf9e	      0xe853f8ffff	                  call sym.free_arg_item	       314	trailer.c	FUNCTION_19	SWITCH_1	CALL_1
0xfa3	            0xeb7b	                           jmp 0x4001060	       315	trailer.c	FUNCTION_19	SWITCH_1
0xfa5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       317	trailer.c	FUNCTION_19	SWITCH_1
0xfa9	          0x8b4038	            mov eax, dword [rax + 0x38] 	       317	trailer.c	FUNCTION_19	SWITCH_1
0xfac	          0x8945f4	              mov dword [rbp - 0xc], eax	       317	trailer.c	FUNCTION_19	SWITCH_1
0xfaf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       318	trailer.c	FUNCTION_19	SWITCH_1	CALL_2
0xfb3	          0x4889c6	                            mov rsi, rax	       318	trailer.c	FUNCTION_19	SWITCH_1	CALL_2
0xfb6	      0xbf00000000	                              mov edi, 0	       318	trailer.c	FUNCTION_19	SWITCH_1	CALL_2
0xfbb	      0xe888fdffff	             call sym.apply_item_command	       318	trailer.c	FUNCTION_19	SWITCH_1	CALL_2
0xfc0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       319	trailer.c	FUNCTION_19	SWITCH_1	CALL_3
0xfc4	          0x4889c7	                            mov rdi, rax	       319	trailer.c	FUNCTION_19	SWITCH_1	CALL_3
0xfc7	      0xe84cfaffff	               call sym.trailer_from_arg	       319	trailer.c	FUNCTION_19	SWITCH_1	CALL_3
0xfcc	        0x488945f8	                mov qword [rbp - 8], rax	       319	trailer.c	FUNCTION_19	SWITCH_1	CALL_3
0xfd0	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       320	trailer.c	FUNCTION_19	SWITCH_1	IF_1	CALL_4
0xfd3	            0x89c7	                            mov edi, eax	       320	trailer.c	FUNCTION_19	SWITCH_1	IF_1	CALL_4
0xfd5	      0xe849f5ffff	                   call sym.after_or_end	       320	trailer.c	FUNCTION_19	SWITCH_1	IF_1	CALL_4
0xfda	            0x85c0	                           test eax, eax	       320	trailer.c	FUNCTION_19	SWITCH_1	IF_1	CALL_4
0xfdc	            0x7415	                            je 0x4001033	       320	trailer.c	FUNCTION_19	SWITCH_1	IF_1	CALL_4
0xfde	        0x488b45f8	                mov rax, qword [rbp - 8]	       321	trailer.c	FUNCTION_19	SWITCH_1	CALL_5
0xfe2	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       321	trailer.c	FUNCTION_19	SWITCH_1	CALL_5
0xfe6	          0x4889d6	                            mov rsi, rdx	       321	trailer.c	FUNCTION_19	SWITCH_1	CALL_5
0xfe9	          0x4889c7	                            mov rdi, rax	       321	trailer.c	FUNCTION_19	SWITCH_1	CALL_5
0xfec	      0xe80df4ffff	                  call sym.list_add_tail	       321	trailer.c	FUNCTION_19	SWITCH_1	CALL_5
0xff1	            0xeb2d	                           jmp 0x4001060	       324	trailer.c	FUNCTION_19	SWITCH_1
0xff3	        0x488b45f8	                mov rax, qword [rbp - 8]	       323	trailer.c	FUNCTION_19	SWITCH_1	CALL_6
0xff7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       323	trailer.c	FUNCTION_19	SWITCH_1	CALL_6
0xffb	          0x4889d6	                            mov rsi, rdx	       323	trailer.c	FUNCTION_19	SWITCH_1	CALL_6
0xffe	          0x4889c7	                            mov rdi, rax	       323	trailer.c	FUNCTION_19	SWITCH_1	CALL_6
0x1001	      0xe8b5f3ffff	                       call sym.list_add	       323	trailer.c	FUNCTION_19	SWITCH_1	CALL_6
0x1006	            0xeb18	                           jmp 0x4001060	       324	trailer.c	FUNCTION_19	SWITCH_1
0x1008	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       327	trailer.c	FUNCTION_19	SWITCH_1
0x100c	          0x8b4040	            mov eax, dword [rax + 0x40] 	       327	trailer.c	FUNCTION_19	SWITCH_1
0x100f	            0x89c6	                            mov esi, eax	       326	trailer.c	FUNCTION_19	SWITCH_1	CALL_7
0x1011	      0xbf00000000	                              mov edi, 0	       326	trailer.c	FUNCTION_19	SWITCH_1	CALL_7
0x1016	      0xb800000000	                              mov eax, 0	       326	trailer.c	FUNCTION_19	SWITCH_1	CALL_7
0x101b	      0xe800000000	                          call 0x4001060	       326	trailer.c	FUNCTION_19	SWITCH_1	CALL_7
0x1020	              0x90	                                     nop	       329	trailer.c	FUNCTION_19
0x1021	              0xc9	                                   leave	       329	trailer.c	FUNCTION_19
0x1022	              0xc3	                                     ret	       329	trailer.c	FUNCTION_19
create_in_place_tempfile	CALL,16:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,5	100
0x2990	              0x55	                                push rbp	      1001	trailer.c	FUNCTION_47
0x2991	          0x4889e5	                            mov rbp, rsp	      1001	trailer.c	FUNCTION_47
0x2994	    0x4881ece00000	                           sub rsp, 0xe0	      1001	trailer.c	FUNCTION_47
0x299b	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	      1001	trailer.c	FUNCTION_47
0x29a2	    0x64488b042528	                mov rax, qword fs:[0x28]	      1001	trailer.c	FUNCTION_47
0x29ab	        0x488945f8	                mov qword [rbp - 8], rax	      1001	trailer.c	FUNCTION_47
0x29af	            0x31c0	                            xor eax, eax	      1001	trailer.c	FUNCTION_47
0x29b1	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	      1003	trailer.c	FUNCTION_47
0x29bc	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      1003	trailer.c	FUNCTION_47
0x29c7	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	      1003	trailer.c	FUNCTION_47
0x29d2	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      1007	trailer.c	FUNCTION_47	IF_1	CALL_1
0x29d9	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1007	trailer.c	FUNCTION_47	IF_1	CALL_1
0x29e0	          0x4889d6	                            mov rsi, rdx	      1007	trailer.c	FUNCTION_47	IF_1	CALL_1
0x29e3	          0x4889c7	                            mov rdi, rax	      1007	trailer.c	FUNCTION_47	IF_1	CALL_1
0x29e6	      0xe800000000	                          call 0x4002a2b	      1007	trailer.c	FUNCTION_47	IF_1	CALL_1
0x29eb	            0x85c0	                           test eax, eax	      1007	trailer.c	FUNCTION_47	IF_1	CALL_1
0x29ed	            0x7424	                            je 0x4002a53	      1007	trailer.c	FUNCTION_47	IF_1	CALL_1
0x29ef	      0xbf00000000	                              mov edi, 0	      1008	trailer.c	FUNCTION_47	CALL_3
0x29f4	      0xe8b4daffff	                               call sym.	      1008	trailer.c	FUNCTION_47	CALL_3
0x29f9	          0x4889c2	                            mov rdx, rax	      1008	trailer.c	FUNCTION_47	CALL_3
0x29fc	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1008	trailer.c	FUNCTION_47	CALL_3
0x2a03	          0x4889c6	                            mov rsi, rax	      1008	trailer.c	FUNCTION_47	CALL_3
0x2a06	          0x4889d7	                            mov rdi, rdx	      1008	trailer.c	FUNCTION_47	CALL_3
0x2a09	      0xb800000000	                              mov eax, 0	      1008	trailer.c	FUNCTION_47	CALL_3
0x2a0e	      0xe800000000	                          call 0x4002a53	      1008	trailer.c	FUNCTION_47	CALL_3
0x2a13	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      1009	trailer.c	FUNCTION_47	IF_2	CALL_4
0x2a19	      0x2500f00000	                         and eax, 0xf000	      1009	trailer.c	FUNCTION_47	IF_2	CALL_4
0x2a1e	      0x3d00800000	                         cmp eax, 0x8000	      1009	trailer.c	FUNCTION_47	IF_2	CALL_4
0x2a23	            0x7424	                            je 0x4002a89	      1009	trailer.c	FUNCTION_47	IF_2	CALL_4
0x2a25	      0xbf00000000	                              mov edi, 0	      1010	trailer.c	FUNCTION_47	CALL_6
0x2a2a	      0xe87edaffff	                               call sym.	      1010	trailer.c	FUNCTION_47	CALL_6
0x2a2f	          0x4889c2	                            mov rdx, rax	      1010	trailer.c	FUNCTION_47	CALL_6
0x2a32	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1010	trailer.c	FUNCTION_47	CALL_6
0x2a39	          0x4889c6	                            mov rsi, rax	      1010	trailer.c	FUNCTION_47	CALL_6
0x2a3c	          0x4889d7	                            mov rdi, rdx	      1010	trailer.c	FUNCTION_47	CALL_6
0x2a3f	      0xb800000000	                              mov eax, 0	      1010	trailer.c	FUNCTION_47	CALL_6
0x2a44	      0xe800000000	                          call 0x4002a89	      1010	trailer.c	FUNCTION_47	CALL_6
0x2a49	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      1011	trailer.c	FUNCTION_47	IF_3
0x2a4f	      0x2580000000	                           and eax, 0x80	      1011	trailer.c	FUNCTION_47	IF_3
0x2a54	            0x85c0	                           test eax, eax	      1011	trailer.c	FUNCTION_47	IF_3
0x2a56	            0x7524	                           jne 0x4002abc	      1011	trailer.c	FUNCTION_47	IF_3
0x2a58	      0xbf00000000	                              mov edi, 0	      1012	trailer.c	FUNCTION_47	CALL_8
0x2a5d	      0xe84bdaffff	                               call sym.	      1012	trailer.c	FUNCTION_47	CALL_8
0x2a62	          0x4889c2	                            mov rdx, rax	      1012	trailer.c	FUNCTION_47	CALL_8
0x2a65	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1012	trailer.c	FUNCTION_47	CALL_8
0x2a6c	          0x4889c6	                            mov rsi, rax	      1012	trailer.c	FUNCTION_47	CALL_8
0x2a6f	          0x4889d7	                            mov rdi, rdx	      1012	trailer.c	FUNCTION_47	CALL_8
0x2a72	      0xb800000000	                              mov eax, 0	      1012	trailer.c	FUNCTION_47	CALL_8
0x2a77	      0xe800000000	                          call 0x4002abc	      1012	trailer.c	FUNCTION_47	CALL_8
0x2a7c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1015	trailer.c	FUNCTION_47	CALL_9
0x2a83	      0xbe2f000000	                           mov esi, 0x2f	      1015	trailer.c	FUNCTION_47	CALL_9
0x2a88	          0x4889c7	                            mov rdi, rax	      1015	trailer.c	FUNCTION_47	CALL_9
0x2a8b	      0xe800000000	                          call 0x4002ad0	      1015	trailer.c	FUNCTION_47	CALL_9
0x2a90	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      1015	trailer.c	FUNCTION_47	CALL_9
0x2a97	    0x4883bd30ffff	               cmp qword [rbp - 0xd0], 0	      1016	trailer.c	FUNCTION_47	IF_4
0x2a9f	            0x7434	                            je 0x4002b15	      1016	trailer.c	FUNCTION_47	IF_4
0x2aa1	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	      1017	trailer.c	FUNCTION_47	CALL_10
0x2aa8	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1017	trailer.c	FUNCTION_47	CALL_10
0x2aaf	          0x4829c2	                            sub rdx, rax	      1017	trailer.c	FUNCTION_47	CALL_10
0x2ab2	          0x4889d0	                            mov rax, rdx	      1017	trailer.c	FUNCTION_47	CALL_10
0x2ab5	        0x4883c001	                              add rax, 1	      1017	trailer.c	FUNCTION_47	CALL_10
0x2ab9	          0x4889c2	                            mov rdx, rax	      1017	trailer.c	FUNCTION_47	CALL_10
0x2abc	    0x488b8d28ffff	             mov rcx, qword [rbp - 0xd8]	      1017	trailer.c	FUNCTION_47	CALL_10
0x2ac3	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      1017	trailer.c	FUNCTION_47	CALL_10
0x2aca	          0x4889ce	                            mov rsi, rcx	      1017	trailer.c	FUNCTION_47	CALL_10
0x2acd	          0x4889c7	                            mov rdi, rax	      1017	trailer.c	FUNCTION_47	CALL_10
0x2ad0	      0xe800000000	                          call 0x4002b15	      1017	trailer.c	FUNCTION_47	CALL_10
0x2ad5	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      1018	trailer.c	FUNCTION_47	CALL_11
0x2adc	      0xbe00000000	                              mov esi, 0	      1018	trailer.c	FUNCTION_47	CALL_11
0x2ae1	          0x4889c7	                            mov rdi, rax	      1018	trailer.c	FUNCTION_47	CALL_11
0x2ae4	      0xe845d8ffff	                  call sym.strbuf_addstr	      1018	trailer.c	FUNCTION_47	CALL_11
0x2ae9	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      1020	trailer.c	FUNCTION_47	CALL_12
0x2aef	            0x89c2	                            mov edx, eax	      1020	trailer.c	FUNCTION_47	CALL_12
0x2af1	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1020	trailer.c	FUNCTION_47	CALL_12
0x2af8	            0x89d6	                            mov esi, edx	      1020	trailer.c	FUNCTION_47	CALL_12
0x2afa	          0x4889c7	                            mov rdi, rax	      1020	trailer.c	FUNCTION_47	CALL_12
0x2afd	      0xe800000000	                          call 0x4002b42	      1020	trailer.c	FUNCTION_47	CALL_12
0x2b02	    0x488905000000	            mov qword [0x04002b49], rax 	      1020	trailer.c	FUNCTION_47	CALL_12
0x2b09	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      1021	trailer.c	FUNCTION_47	CALL_13
0x2b10	          0x4889c7	                            mov rdi, rax	      1021	trailer.c	FUNCTION_47	CALL_13
0x2b13	      0xe800000000	                          call 0x4002b58	      1021	trailer.c	FUNCTION_47	CALL_13
0x2b18	    0x488b05000000	            mov rax, qword [0x04002b5f] 	      1022	trailer.c	FUNCTION_47	CALL_14
0x2b1f	      0xbe00000000	                              mov esi, 0	      1022	trailer.c	FUNCTION_47	CALL_14
0x2b24	          0x4889c7	                            mov rdi, rax	      1022	trailer.c	FUNCTION_47	CALL_14
0x2b27	      0xe800000000	                          call 0x4002b6c	      1022	trailer.c	FUNCTION_47	CALL_14
0x2b2c	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      1022	trailer.c	FUNCTION_47	CALL_14
0x2b33	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	      1023	trailer.c	FUNCTION_47	IF_5
0x2b3b	            0x7517	                           jne 0x4002b94	      1023	trailer.c	FUNCTION_47	IF_5
0x2b3d	      0xbf00000000	                              mov edi, 0	      1024	trailer.c	FUNCTION_47	CALL_16
0x2b42	      0xe866d9ffff	                               call sym.	      1024	trailer.c	FUNCTION_47	CALL_16
0x2b47	          0x4889c7	                            mov rdi, rax	      1024	trailer.c	FUNCTION_47	CALL_16
0x2b4a	      0xb800000000	                              mov eax, 0	      1024	trailer.c	FUNCTION_47	CALL_16
0x2b4f	      0xe800000000	                          call 0x4002b94	      1024	trailer.c	FUNCTION_47	CALL_16
0x2b54	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1026	trailer.c	FUNCTION_47
0x2b5b	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1027	trailer.c	FUNCTION_47
0x2b5f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1027	trailer.c	FUNCTION_47
0x2b68	            0x7405	                            je 0x4002baf	      1027	trailer.c	FUNCTION_47
0x2b6a	      0xe800000000	                          call 0x4002baf	      1027	trailer.c	FUNCTION_47
0x2b6f	              0xc9	                                   leave	      1027	trailer.c	FUNCTION_47
0x2b70	              0xc3	                                     ret	      1027	trailer.c	FUNCTION_47
process_trailers	CALL,15:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,5	110
0x2b71	              0x55	                                push rbp	      1032	trailer.c	FUNCTION_48
0x2b72	          0x4889e5	                            mov rbp, rsp	      1032	trailer.c	FUNCTION_48
0x2b75	        0x4883ec70	                           sub rsp, 0x70	      1032	trailer.c	FUNCTION_48
0x2b79	        0x48897da8	             mov qword [rbp - 0x58], rdi	      1032	trailer.c	FUNCTION_48
0x2b7d	        0x488975a0	             mov qword [rbp - 0x60], rsi	      1032	trailer.c	FUNCTION_48
0x2b81	        0x48895598	             mov qword [rbp - 0x68], rdx	      1032	trailer.c	FUNCTION_48
0x2b85	    0x64488b042528	                mov rax, qword fs:[0x28]	      1032	trailer.c	FUNCTION_48
0x2b8e	        0x488945f8	                mov qword [rbp - 8], rax	      1032	trailer.c	FUNCTION_48
0x2b92	            0x31c0	                            xor eax, eax	      1032	trailer.c	FUNCTION_48
0x2b94	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1033	trailer.c	FUNCTION_48	CALL_1
0x2b98	        0x488945c0	             mov qword [rbp - 0x40], rax	      1033	trailer.c	FUNCTION_48	CALL_1
0x2b9c	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1033	trailer.c	FUNCTION_48	CALL_1
0x2ba0	        0x488945c8	             mov qword [rbp - 0x38], rax	      1033	trailer.c	FUNCTION_48	CALL_1
0x2ba4	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1034	trailer.c	FUNCTION_48
0x2bac	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1034	trailer.c	FUNCTION_48
0x2bb4	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1034	trailer.c	FUNCTION_48
0x2bbc	    0x488b05000000	            mov rax, qword [0x04002c03] 	      1036	trailer.c	FUNCTION_48
0x2bc3	        0x488945b8	             mov qword [rbp - 0x48], rax	      1036	trailer.c	FUNCTION_48
0x2bc7	      0xe8c3edffff	              call sym.ensure_configured	      1038	trailer.c	FUNCTION_48	CALL_2
0x2bcc	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1040	trailer.c	FUNCTION_48	CALL_3
0x2bd0	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1040	trailer.c	FUNCTION_48	CALL_3
0x2bd4	          0x4889d6	                            mov rsi, rdx	      1040	trailer.c	FUNCTION_48	CALL_3
0x2bd7	          0x4889c7	                            mov rdi, rax	      1040	trailer.c	FUNCTION_48	CALL_3
0x2bda	      0xe8acf4ffff	                call sym.read_input_file	      1040	trailer.c	FUNCTION_48	CALL_3
0x2bdf	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1042	trailer.c	FUNCTION_48	IF_1
0x2be3	            0x8b00	                    mov eax, dword [rax]	      1042	trailer.c	FUNCTION_48	IF_1
0x2be5	            0x85c0	                           test eax, eax	      1042	trailer.c	FUNCTION_48	IF_1
0x2be7	            0x7410	                            je 0x4002c39	      1042	trailer.c	FUNCTION_48	IF_1
0x2be9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1043	trailer.c	FUNCTION_48	CALL_4
0x2bed	          0x4889c7	                            mov rdi, rax	      1043	trailer.c	FUNCTION_48	CALL_4
0x2bf0	      0xe89bfdffff	       call sym.create_in_place_tempfile	      1043	trailer.c	FUNCTION_48	CALL_4
0x2bf5	        0x488945b8	             mov qword [rbp - 0x48], rax	      1043	trailer.c	FUNCTION_48	CALL_4
0x2bf9	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1046	trailer.c	FUNCTION_48	CALL_5
0x2bfd	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1046	trailer.c	FUNCTION_48	CALL_5
0x2c01	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      1046	trailer.c	FUNCTION_48	CALL_5
0x2c05	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1046	trailer.c	FUNCTION_48	CALL_5
0x2c09	          0x4889c7	                            mov rdi, rax	      1046	trailer.c	FUNCTION_48	CALL_5
0x2c0c	      0xe889faffff	             call sym.process_input_file	      1046	trailer.c	FUNCTION_48	CALL_5
0x2c11	          0x8945b4	             mov dword [rbp - 0x4c], eax	      1046	trailer.c	FUNCTION_48	CALL_5
0x2c14	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1048	trailer.c	FUNCTION_48	IF_2
0x2c18	          0x8b400c	              mov eax, dword [rax + 0xc]	      1048	trailer.c	FUNCTION_48	IF_2
0x2c1b	            0x85c0	                           test eax, eax	      1048	trailer.c	FUNCTION_48	IF_2
0x2c1d	            0x7536	                           jne 0x4002c95	      1048	trailer.c	FUNCTION_48	IF_2
0x2c1f	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1049	trailer.c	FUNCTION_48	IF_2	CALL_6
0x2c23	        0x488945d0	             mov qword [rbp - 0x30], rax	      1049	trailer.c	FUNCTION_48	IF_2	CALL_6
0x2c27	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1049	trailer.c	FUNCTION_48	IF_2	CALL_6
0x2c2b	        0x488945d8	             mov qword [rbp - 0x28], rax	      1049	trailer.c	FUNCTION_48	IF_2	CALL_6
0x2c2f	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      1050	trailer.c	FUNCTION_48	IF_2	CALL_7
0x2c33	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1050	trailer.c	FUNCTION_48	IF_2	CALL_7
0x2c37	          0x4889d6	                            mov rsi, rdx	      1050	trailer.c	FUNCTION_48	IF_2	CALL_7
0x2c3a	          0x4889c7	                            mov rdi, rax	      1050	trailer.c	FUNCTION_48	IF_2	CALL_7
0x2c3d	      0xe8b0f1ffff	      call sym.process_command_line_args	      1050	trailer.c	FUNCTION_48	IF_2	CALL_7
0x2c42	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1051	trailer.c	FUNCTION_48	IF_2	CALL_8
0x2c46	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1051	trailer.c	FUNCTION_48	IF_2	CALL_8
0x2c4a	          0x4889d6	                            mov rsi, rdx	      1051	trailer.c	FUNCTION_48	IF_2	CALL_8
0x2c4d	          0x4889c7	                            mov rdi, rax	      1051	trailer.c	FUNCTION_48	IF_2	CALL_8
0x2c50	      0xe8e2e4ffff	         call sym.process_trailers_lists	      1051	trailer.c	FUNCTION_48	IF_2	CALL_8
0x2c55	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1054	trailer.c	FUNCTION_48	CALL_9
0x2c59	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	      1054	trailer.c	FUNCTION_48	CALL_9
0x2c5d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1054	trailer.c	FUNCTION_48	CALL_9
0x2c61	          0x4889ce	                            mov rsi, rcx	      1054	trailer.c	FUNCTION_48	CALL_9
0x2c64	          0x4889c7	                            mov rdi, rax	      1054	trailer.c	FUNCTION_48	CALL_9
0x2c67	      0xe81addffff	                      call sym.print_all	      1054	trailer.c	FUNCTION_48	CALL_9
0x2c6c	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1056	trailer.c	FUNCTION_48	CALL_10
0x2c70	          0x4889c7	                            mov rdi, rax	      1056	trailer.c	FUNCTION_48	CALL_10
0x2c73	      0xe8bcfcffff	                       call sym.free_all	      1056	trailer.c	FUNCTION_48	CALL_10
0x2c78	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1059	trailer.c	FUNCTION_48	IF_3
0x2c7c	          0x8b4008	                mov eax, dword [rax + 8]	      1059	trailer.c	FUNCTION_48	IF_3
0x2c7f	            0x85c0	                           test eax, eax	      1059	trailer.c	FUNCTION_48	IF_3
0x2c81	            0x752a	                           jne 0x4002ced	      1059	trailer.c	FUNCTION_48	IF_3
0x2c83	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1060	trailer.c	FUNCTION_48	CALL_11
0x2c87	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1060	trailer.c	FUNCTION_48	CALL_11
0x2c8a	            0x4898	                                    cdqe	      1060	trailer.c	FUNCTION_48	CALL_11
0x2c8c	          0x4829c2	                            sub rdx, rax	      1060	trailer.c	FUNCTION_48	CALL_11
0x2c8f	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      1060	trailer.c	FUNCTION_48	CALL_11
0x2c93	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1060	trailer.c	FUNCTION_48	CALL_11
0x2c96	            0x4898	                                    cdqe	      1060	trailer.c	FUNCTION_48	CALL_11
0x2c98	        0x488d3c01	                    lea rdi, [rcx + rax]	      1060	trailer.c	FUNCTION_48	CALL_11
0x2c9c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1060	trailer.c	FUNCTION_48	CALL_11
0x2ca0	          0x4889c1	                            mov rcx, rax	      1060	trailer.c	FUNCTION_48	CALL_11
0x2ca3	      0xbe01000000	                              mov esi, 1	      1060	trailer.c	FUNCTION_48	CALL_11
0x2ca8	      0xe800000000	                          call 0x4002ced	      1060	trailer.c	FUNCTION_48	CALL_11
0x2cad	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1062	trailer.c	FUNCTION_48	IF_4
0x2cb1	            0x8b00	                    mov eax, dword [rax]	      1062	trailer.c	FUNCTION_48	IF_4
0x2cb3	            0x85c0	                           test eax, eax	      1062	trailer.c	FUNCTION_48	IF_4
0x2cb5	            0x7436	                            je 0x4002d2d	      1062	trailer.c	FUNCTION_48	IF_4
0x2cb7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1063	trailer.c	FUNCTION_48	IF_4	IF_5	CALL_12
0x2cbb	          0x4889c6	                            mov rsi, rax	      1063	trailer.c	FUNCTION_48	IF_4	IF_5	CALL_12
0x2cbe	      0xbf00000000	                              mov edi, 0	      1063	trailer.c	FUNCTION_48	IF_4	IF_5	CALL_12
0x2cc3	      0xe800000000	                          call 0x4002d08	      1063	trailer.c	FUNCTION_48	IF_4	IF_5	CALL_12
0x2cc8	            0x85c0	                           test eax, eax	      1063	trailer.c	FUNCTION_48	IF_4	IF_5	CALL_12
0x2cca	            0x7421	                            je 0x4002d2d	      1063	trailer.c	FUNCTION_48	IF_4	IF_5	CALL_12
0x2ccc	      0xbf00000000	                              mov edi, 0	      1064	trailer.c	FUNCTION_48	IF_4	IF_5
0x2cd1	      0xe8d7d7ffff	                               call sym.	      1064	trailer.c	FUNCTION_48	IF_4	IF_5
0x2cd6	          0x4889c2	                            mov rdx, rax	      1064	trailer.c	FUNCTION_48	IF_4	IF_5
0x2cd9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1064	trailer.c	FUNCTION_48	IF_4	IF_5
0x2cdd	          0x4889c6	                            mov rsi, rax	      1064	trailer.c	FUNCTION_48	IF_4	IF_5
0x2ce0	          0x4889d7	                            mov rdi, rdx	      1064	trailer.c	FUNCTION_48	IF_4	IF_5
0x2ce3	      0xb800000000	                              mov eax, 0	      1064	trailer.c	FUNCTION_48	IF_4	IF_5
0x2ce8	      0xe800000000	                          call 0x4002d2d	      1064	trailer.c	FUNCTION_48	IF_4	IF_5
0x2ced	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1066	trailer.c	FUNCTION_48	CALL_15
0x2cf1	          0x4889c7	                            mov rdi, rax	      1066	trailer.c	FUNCTION_48	CALL_15
0x2cf4	      0xe800000000	                          call 0x4002d39	      1066	trailer.c	FUNCTION_48	CALL_15
0x2cf9	              0x90	                                     nop	      1067	trailer.c	FUNCTION_48
0x2cfa	        0x488b45f8	                mov rax, qword [rbp - 8]	      1067	trailer.c	FUNCTION_48
0x2cfe	    0x644833042528	                xor rax, qword fs:[0x28]	      1067	trailer.c	FUNCTION_48
0x2d07	            0x7405	                            je 0x4002d4e	      1067	trailer.c	FUNCTION_48
0x2d09	      0xe800000000	                          call 0x4002d4e	      1067	trailer.c	FUNCTION_48
0x2d0e	              0xc9	                                   leave	      1067	trailer.c	FUNCTION_48
0x2d0f	              0xc3	                                     ret	      1067	trailer.c	FUNCTION_48
free_arg_item	CALL,6:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,0	30
0x7f6	              0x55	                                push rbp	       126	trailer.c	FUNCTION_9
0x7f7	          0x4889e5	                            mov rbp, rsp	       126	trailer.c	FUNCTION_9
0x7fa	        0x4883ec10	                           sub rsp, 0x10	       126	trailer.c	FUNCTION_9
0x7fe	        0x48897df8	                mov qword [rbp - 8], rdi	       126	trailer.c	FUNCTION_9
0x802	        0x488b45f8	                mov rax, qword [rbp - 8]	       127	trailer.c	FUNCTION_9	CALL_1
0x806	        0x488b4020	            mov rax, qword [rax + 0x20] 	       127	trailer.c	FUNCTION_9	CALL_1
0x80a	          0x4889c7	                            mov rdi, rax	       127	trailer.c	FUNCTION_9	CALL_1
0x80d	      0xe800000000	                          call 0x4000852	       127	trailer.c	FUNCTION_9	CALL_1
0x812	        0x488b45f8	                mov rax, qword [rbp - 8]	       128	trailer.c	FUNCTION_9	CALL_2
0x816	        0x488b4028	            mov rax, qword [rax + 0x28] 	       128	trailer.c	FUNCTION_9	CALL_2
0x81a	          0x4889c7	                            mov rdi, rax	       128	trailer.c	FUNCTION_9	CALL_2
0x81d	      0xe800000000	                          call 0x4000862	       128	trailer.c	FUNCTION_9	CALL_2
0x822	        0x488b45f8	                mov rax, qword [rbp - 8]	       129	trailer.c	FUNCTION_9	CALL_3
0x826	        0x488b4030	            mov rax, qword [rax + 0x30] 	       129	trailer.c	FUNCTION_9	CALL_3
0x82a	          0x4889c7	                            mov rdi, rax	       129	trailer.c	FUNCTION_9	CALL_3
0x82d	      0xe800000000	                          call 0x4000872	       129	trailer.c	FUNCTION_9	CALL_3
0x832	        0x488b45f8	                mov rax, qword [rbp - 8]	       130	trailer.c	FUNCTION_9	CALL_4
0x836	        0x488b4010	            mov rax, qword [rax + 0x10] 	       130	trailer.c	FUNCTION_9	CALL_4
0x83a	          0x4889c7	                            mov rdi, rax	       130	trailer.c	FUNCTION_9	CALL_4
0x83d	      0xe800000000	                          call 0x4000882	       130	trailer.c	FUNCTION_9	CALL_4
0x842	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	trailer.c	FUNCTION_9	CALL_5
0x846	        0x488b4018	            mov rax, qword [rax + 0x18] 	       131	trailer.c	FUNCTION_9	CALL_5
0x84a	          0x4889c7	                            mov rdi, rax	       131	trailer.c	FUNCTION_9	CALL_5
0x84d	      0xe800000000	                          call 0x4000892	       131	trailer.c	FUNCTION_9	CALL_5
0x852	        0x488b45f8	                mov rax, qword [rbp - 8]	       132	trailer.c	FUNCTION_9	CALL_6
0x856	          0x4889c7	                            mov rdi, rax	       132	trailer.c	FUNCTION_9	CALL_6
0x859	      0xe800000000	                          call 0x400089e	       132	trailer.c	FUNCTION_9	CALL_6
0x85e	              0x90	                                     nop	       133	trailer.c	FUNCTION_9
0x85f	              0xc9	                                   leave	       133	trailer.c	FUNCTION_9
0x860	              0xc3	                                     ret	       133	trailer.c	FUNCTION_9
skip_prefix	CALL,0:DO,1:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,1	27
0xb	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_73
0xc	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_73
0xf	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_73
0x13	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_73
0x17	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_73
0x1b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x1f	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x22	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x24	            0x7512	                           jne 0x4000078	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x26	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x2a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x2e	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x31	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x36	            0xeb27	                           jmp 0x400009f	       486	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x38	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x3c	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x40	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_73	DO_1
0x44	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x47	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4b	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4f	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_73	DO_1
0x53	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x56	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_73	DO_1
0x58	            0x74c1	                            je 0x400005b	       488	git-compat-util.h	FUNCTION_73	DO_1
0x5a	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_73
0x5f	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_73
0x60	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_73
capture_command	CALL,1:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,0	21
0x4d9	              0x55	                                push rbp	       111	run-command.h	FUNCTION_109
0x4da	          0x4889e5	                            mov rbp, rsp	       111	run-command.h	FUNCTION_109
0x4dd	        0x4883ec20	                           sub rsp, 0x20	       111	run-command.h	FUNCTION_109
0x4e1	        0x48897df8	                mov qword [rbp - 8], rdi	       111	run-command.h	FUNCTION_109
0x4e5	        0x488975f0	             mov qword [rbp - 0x10], rsi	       111	run-command.h	FUNCTION_109
0x4e9	        0x488955e8	             mov qword [rbp - 0x18], rdx	       111	run-command.h	FUNCTION_109
0x4ed	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       112	run-command.h	FUNCTION_109	CALL_1
0x4f1	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       112	run-command.h	FUNCTION_109	CALL_1
0x4f5	        0x488b45f8	                mov rax, qword [rbp - 8]	       112	run-command.h	FUNCTION_109	CALL_1
0x4f9	        0x4883ec08	                              sub rsp, 8	       112	run-command.h	FUNCTION_109	CALL_1
0x4fd	            0x6a00	                                  push 0	       112	run-command.h	FUNCTION_109	CALL_1
0x4ff	    0x41b900000000	                              mov r9d, 0	       112	run-command.h	FUNCTION_109	CALL_1
0x505	          0x4989c8	                             mov r8, rcx	       112	run-command.h	FUNCTION_109	CALL_1
0x508	          0x4889d1	                            mov rcx, rdx	       112	run-command.h	FUNCTION_109	CALL_1
0x50b	      0xba00000000	                              mov edx, 0	       112	run-command.h	FUNCTION_109	CALL_1
0x510	      0xbe00000000	                              mov esi, 0	       112	run-command.h	FUNCTION_109	CALL_1
0x515	          0x4889c7	                            mov rdi, rax	       112	run-command.h	FUNCTION_109	CALL_1
0x518	      0xe800000000	                          call 0x400055d	       112	run-command.h	FUNCTION_109	CALL_1
0x51d	        0x4883c410	                           add rsp, 0x10	       112	run-command.h	FUNCTION_109	CALL_1
0x521	              0xc9	                                   leave	       113	run-command.h	FUNCTION_109
0x522	              0xc3	                                     ret	       113	run-command.h	FUNCTION_109
same_token	CALL,5:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,1	50
0x58c	              0x55	                                push rbp	        80	trailer.c	FUNCTION_3
0x58d	          0x4889e5	                            mov rbp, rsp	        80	trailer.c	FUNCTION_3
0x590	        0x4883ec30	                           sub rsp, 0x30	        80	trailer.c	FUNCTION_3
0x594	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        80	trailer.c	FUNCTION_3
0x598	        0x488975d0	             mov qword [rbp - 0x30], rsi	        80	trailer.c	FUNCTION_3
0x59c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        83	trailer.c	FUNCTION_3	IF_1
0x5a0	        0x488b4010	            mov rax, qword [rax + 0x10] 	        83	trailer.c	FUNCTION_3	IF_1
0x5a4	          0x4885c0	                           test rax, rax	        83	trailer.c	FUNCTION_3	IF_1
0x5a7	            0x750a	                           jne 0x40005f3	        83	trailer.c	FUNCTION_3	IF_1
0x5a9	      0xb800000000	                              mov eax, 0	        84	trailer.c	FUNCTION_3	IF_1
0x5ae	      0xe98c000000	                           jmp 0x400067f	        84	trailer.c	FUNCTION_3	IF_1
0x5b3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        86	trailer.c	FUNCTION_3	CALL_2
0x5b7	        0x488b4010	            mov rax, qword [rax + 0x10] 	        86	trailer.c	FUNCTION_3	CALL_2
0x5bb	          0x4889c7	                            mov rdi, rax	        86	trailer.c	FUNCTION_3	CALL_2
0x5be	      0xe800000000	                          call 0x4000603	        86	trailer.c	FUNCTION_3	CALL_2
0x5c3	          0x4889c2	                            mov rdx, rax	        86	trailer.c	FUNCTION_3	CALL_2
0x5c6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        86	trailer.c	FUNCTION_3	CALL_2
0x5ca	        0x488b4010	            mov rax, qword [rax + 0x10] 	        86	trailer.c	FUNCTION_3	CALL_2
0x5ce	          0x4889d6	                            mov rsi, rdx	        86	trailer.c	FUNCTION_3	CALL_2
0x5d1	          0x4889c7	                            mov rdi, rax	        86	trailer.c	FUNCTION_3	CALL_2
0x5d4	      0xe86bffffff	    call sym.token_len_without_separator	        86	trailer.c	FUNCTION_3	CALL_2
0x5d9	        0x488945e8	             mov qword [rbp - 0x18], rax	        86	trailer.c	FUNCTION_3	CALL_2
0x5dd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        87	trailer.c	FUNCTION_3	CALL_4
0x5e1	        0x488b4010	            mov rax, qword [rax + 0x10] 	        87	trailer.c	FUNCTION_3	CALL_4
0x5e5	          0x4889c7	                            mov rdi, rax	        87	trailer.c	FUNCTION_3	CALL_4
0x5e8	      0xe800000000	                          call 0x400062d	        87	trailer.c	FUNCTION_3	CALL_4
0x5ed	          0x4889c2	                            mov rdx, rax	        87	trailer.c	FUNCTION_3	CALL_4
0x5f0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        87	trailer.c	FUNCTION_3	CALL_4
0x5f4	        0x488b4010	            mov rax, qword [rax + 0x10] 	        87	trailer.c	FUNCTION_3	CALL_4
0x5f8	          0x4889d6	                            mov rsi, rdx	        87	trailer.c	FUNCTION_3	CALL_4
0x5fb	          0x4889c7	                            mov rdi, rax	        87	trailer.c	FUNCTION_3	CALL_4
0x5fe	      0xe841ffffff	    call sym.token_len_without_separator	        87	trailer.c	FUNCTION_3	CALL_4
0x603	        0x488945f0	             mov qword [rbp - 0x10], rax	        87	trailer.c	FUNCTION_3	CALL_4
0x607	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        88	trailer.c	FUNCTION_3
0x60b	        0x483945e8	            cmp qword [rbp - 0x18], rax 	        88	trailer.c	FUNCTION_3
0x60f	      0x480f4645e8	          cmovbe rax, qword [rbp - 0x18]	        88	trailer.c	FUNCTION_3
0x614	        0x488945f8	                mov qword [rbp - 8], rax	        88	trailer.c	FUNCTION_3
0x618	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        90	trailer.c	FUNCTION_3	CALL_5
0x61c	        0x488b4810	            mov rcx, qword [rax + 0x10] 	        90	trailer.c	FUNCTION_3	CALL_5
0x620	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        90	trailer.c	FUNCTION_3	CALL_5
0x624	        0x488b4010	            mov rax, qword [rax + 0x10] 	        90	trailer.c	FUNCTION_3	CALL_5
0x628	        0x488b55f8	                mov rdx, qword [rbp - 8]	        90	trailer.c	FUNCTION_3	CALL_5
0x62c	          0x4889ce	                            mov rsi, rcx	        90	trailer.c	FUNCTION_3	CALL_5
0x62f	          0x4889c7	                            mov rdi, rax	        90	trailer.c	FUNCTION_3	CALL_5
0x632	      0xe800000000	                          call 0x4000677	        90	trailer.c	FUNCTION_3	CALL_5
0x637	            0x85c0	                           test eax, eax	        90	trailer.c	FUNCTION_3	CALL_5
0x639	           0xf94c0	                                 sete al	        90	trailer.c	FUNCTION_3	CALL_5
0x63c	           0xfb6c0	                           movzx eax, al	        90	trailer.c	FUNCTION_3	CALL_5
0x63f	              0xc9	                                   leave	        91	trailer.c	FUNCTION_3
0x640	              0xc3	                                     ret	        91	trailer.c	FUNCTION_3
trailer_info_release	CALL,2:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,1:IF,0	29
0x301d	              0x55	                                push rbp	      1113	trailer.c	FUNCTION_50
0x301e	          0x4889e5	                            mov rbp, rsp	      1113	trailer.c	FUNCTION_50
0x3021	        0x4883ec20	                           sub rsp, 0x20	      1113	trailer.c	FUNCTION_50
0x3025	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1113	trailer.c	FUNCTION_50
0x3029	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1115	trailer.c	FUNCTION_50	FOR_1
0x3030	            0xeb24	                           jmp 0x4003096	      1115	trailer.c	FUNCTION_50	FOR_1
0x3032	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1116	trailer.c	FUNCTION_50	CALL_1
0x3036	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1116	trailer.c	FUNCTION_50	CALL_1
0x303a	          0x8b55fc	                mov edx, dword [rbp - 4]	      1116	trailer.c	FUNCTION_50	CALL_1
0x303d	          0x4863d2	                         movsxd rdx, edx	      1116	trailer.c	FUNCTION_50	CALL_1
0x3040	        0x48c1e203	                              shl rdx, 3	      1116	trailer.c	FUNCTION_50	CALL_1
0x3044	          0x4801d0	                            add rax, rdx	      1116	trailer.c	FUNCTION_50	CALL_1
0x3047	          0x488b00	                    mov rax, qword [rax]	      1116	trailer.c	FUNCTION_50	CALL_1
0x304a	          0x4889c7	                            mov rdi, rax	      1116	trailer.c	FUNCTION_50	CALL_1
0x304d	      0xe800000000	                          call 0x4003092	      1116	trailer.c	FUNCTION_50	CALL_1
0x3052	        0x8345fc01	                  add dword [rbp - 4], 1	      1115	trailer.c	FUNCTION_50	FOR_1
0x3056	          0x8b45fc	                mov eax, dword [rbp - 4]	      1115	trailer.c	FUNCTION_50	FOR_1
0x3059	          0x4863d0	                         movsxd rdx, eax	      1115	trailer.c	FUNCTION_50	FOR_1
0x305c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1115	trailer.c	FUNCTION_50	FOR_1
0x3060	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1115	trailer.c	FUNCTION_50	FOR_1
0x3064	          0x4839c2	                            cmp rdx, rax	      1115	trailer.c	FUNCTION_50	FOR_1
0x3067	            0x72c9	                            jb 0x4003072	      1115	trailer.c	FUNCTION_50	FOR_1
0x3069	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1117	trailer.c	FUNCTION_50	CALL_2
0x306d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1117	trailer.c	FUNCTION_50	CALL_2
0x3071	          0x4889c7	                            mov rdi, rax	      1117	trailer.c	FUNCTION_50	CALL_2
0x3074	      0xe800000000	                          call 0x40030b9	      1117	trailer.c	FUNCTION_50	CALL_2
0x3079	              0x90	                                     nop	      1118	trailer.c	FUNCTION_50
0x307a	              0xc9	                                   leave	      1118	trailer.c	FUNCTION_50
0x307b	              0xc3	                                     ret	      1118	trailer.c	FUNCTION_50
find_separator	CALL,2:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,1:IF,3	62
0x1a9a	              0x55	                                push rbp	       607	trailer.c	FUNCTION_32
0x1a9b	          0x4889e5	                            mov rbp, rsp	       607	trailer.c	FUNCTION_32
0x1a9e	        0x4883ec20	                           sub rsp, 0x20	       607	trailer.c	FUNCTION_32
0x1aa2	        0x48897de8	             mov qword [rbp - 0x18], rdi	       607	trailer.c	FUNCTION_32
0x1aa6	        0x488975e0	             mov qword [rbp - 0x20], rsi	       607	trailer.c	FUNCTION_32
0x1aaa	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       608	trailer.c	FUNCTION_32
0x1ab1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       610	trailer.c	FUNCTION_32	FOR_1
0x1ab5	        0x488945f8	                mov qword [rbp - 8], rax	       610	trailer.c	FUNCTION_32	FOR_1
0x1ab9	      0xe98a000000	                           jmp 0x4001b88	       610	trailer.c	FUNCTION_32	FOR_1
0x1abe	        0x488b45f8	                mov rax, qword [rbp - 8]	       611	trailer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x1ac2	           0xfb600	                   movzx eax, byte [rax]	       611	trailer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x1ac5	           0xfbed0	                           movsx edx, al	       611	trailer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x1ac8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       611	trailer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x1acc	            0x89d6	                            mov esi, edx	       611	trailer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x1ace	          0x4889c7	                            mov rdi, rax	       611	trailer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x1ad1	      0xe800000000	                          call 0x4001b16	       611	trailer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x1ad6	          0x4885c0	                           test rax, rax	       611	trailer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x1ad9	            0x7410	                            je 0x4001b2b	       611	trailer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x1adb	        0x488b55f8	                mov rdx, qword [rbp - 8]	       612	trailer.c	FUNCTION_32	FOR_1	IF_1
0x1adf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       612	trailer.c	FUNCTION_32	FOR_1	IF_1
0x1ae3	          0x4829c2	                            sub rdx, rax	       612	trailer.c	FUNCTION_32	FOR_1	IF_1
0x1ae6	          0x4889d0	                            mov rax, rdx	       612	trailer.c	FUNCTION_32	FOR_1	IF_1
0x1ae9	            0xeb74	                           jmp 0x4001b9f	       612	trailer.c	FUNCTION_32	FOR_1	IF_1
0x1aeb	        0x837df400	                cmp dword [rbp - 0xc], 0	       613	trailer.c	FUNCTION_32	FOR_1	IF_2	CALL_2
0x1aef	            0x7528	                           jne 0x4001b59	       613	trailer.c	FUNCTION_32	FOR_1	IF_2	CALL_2
0x1af1	        0x488b45f8	                mov rax, qword [rbp - 8]	       613	trailer.c	FUNCTION_32	FOR_1	IF_2	CALL_2
0x1af5	           0xfb600	                   movzx eax, byte [rax]	       613	trailer.c	FUNCTION_32	FOR_1	IF_2	CALL_2
0x1af8	           0xfb6c0	                           movzx eax, al	       613	trailer.c	FUNCTION_32	FOR_1	IF_2	CALL_2
0x1afb	            0x4898	                                    cdqe	       613	trailer.c	FUNCTION_32	FOR_1	IF_2	CALL_2
0x1afd	     0xfb680000000	                   movzx eax, byte [rax]	       613	trailer.c	FUNCTION_32	FOR_1	IF_2	CALL_2
0x1b04	           0xfb6c0	                           movzx eax, al	       613	trailer.c	FUNCTION_32	FOR_1	IF_2	CALL_2
0x1b07	          0x83e006	                              and eax, 6	       613	trailer.c	FUNCTION_32	FOR_1	IF_2	CALL_2
0x1b0a	            0x85c0	                           test eax, eax	       613	trailer.c	FUNCTION_32	FOR_1	IF_2	CALL_2
0x1b0c	            0x7534	                           jne 0x4001b82	       613	trailer.c	FUNCTION_32	FOR_1	IF_2	CALL_2
0x1b0e	        0x488b45f8	                mov rax, qword [rbp - 8]	       613	trailer.c	FUNCTION_32	FOR_1	IF_2	CALL_2
0x1b12	           0xfb600	                   movzx eax, byte [rax]	       613	trailer.c	FUNCTION_32	FOR_1	IF_2	CALL_2
0x1b15	            0x3c2d	                            cmp al, 0x2d	       613	trailer.c	FUNCTION_32	FOR_1	IF_2	CALL_2
0x1b17	            0x7429	                            je 0x4001b82	       613	trailer.c	FUNCTION_32	FOR_1	IF_2	CALL_2
0x1b19	        0x488b45f8	                mov rax, qword [rbp - 8]	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x1b1d	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x1b21	            0x7436	                            je 0x4001b99	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x1b23	        0x488b45f8	                mov rax, qword [rbp - 8]	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x1b27	           0xfb600	                   movzx eax, byte [rax]	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x1b2a	            0x3c20	                            cmp al, 0x20	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x1b2c	            0x740b	                            je 0x4001b79	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x1b2e	        0x488b45f8	                mov rax, qword [rbp - 8]	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x1b32	           0xfb600	                   movzx eax, byte [rax]	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x1b35	            0x3c09	                               cmp al, 9	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x1b37	            0x7520	                           jne 0x4001b99	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x1b39	    0xc745f4010000	                mov dword [rbp - 0xc], 1	       616	trailer.c	FUNCTION_32	FOR_1	IF_3
0x1b40	            0xeb01	                           jmp 0x4001b83	       617	trailer.c	FUNCTION_32	FOR_1	IF_3
0x1b42	              0x90	                                     nop	       614	trailer.c	FUNCTION_32	FOR_1	IF_2
0x1b43	      0x488345f801	                  add qword [rbp - 8], 1	       610	trailer.c	FUNCTION_32	FOR_1
0x1b48	        0x488b45f8	                mov rax, qword [rbp - 8]	       610	trailer.c	FUNCTION_32	FOR_1
0x1b4c	           0xfb600	                   movzx eax, byte [rax]	       610	trailer.c	FUNCTION_32	FOR_1
0x1b4f	            0x84c0	                             test al, al	       610	trailer.c	FUNCTION_32	FOR_1
0x1b51	     0xf8567ffffff	                           jne 0x4001afe	       610	trailer.c	FUNCTION_32	FOR_1
0x1b57	            0xeb01	                           jmp 0x4001b9a	       610	trailer.c	FUNCTION_32	FOR_1
0x1b59	              0x90	                                     nop	       619	trailer.c	FUNCTION_32	FOR_1
0x1b5a	      0xb8ffffffff	                     mov eax, 0xffffffff	       621	trailer.c	FUNCTION_32
0x1b5f	              0xc9	                                   leave	       622	trailer.c	FUNCTION_32
0x1b60	              0xc3	                                     ret	       622	trailer.c	FUNCTION_32
list_del	CALL,1:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,0	14
0x469	              0x55	                                push rbp	        78	list.h	FUNCTION_56
0x46a	          0x4889e5	                            mov rbp, rsp	        78	list.h	FUNCTION_56
0x46d	        0x4883ec08	                              sub rsp, 8	        78	list.h	FUNCTION_56
0x471	        0x48897df8	                mov qword [rbp - 8], rdi	        78	list.h	FUNCTION_56
0x475	        0x488b45f8	                mov rax, qword [rbp - 8]	        79	list.h	FUNCTION_56	CALL_1
0x479	          0x488b10	                    mov rdx, qword [rax]	        79	list.h	FUNCTION_56	CALL_1
0x47c	        0x488b45f8	                mov rax, qword [rbp - 8]	        79	list.h	FUNCTION_56	CALL_1
0x480	        0x488b4008	                mov rax, qword [rax + 8]	        79	list.h	FUNCTION_56	CALL_1
0x484	          0x4889d6	                            mov rsi, rdx	        79	list.h	FUNCTION_56	CALL_1
0x487	          0x4889c7	                            mov rdi, rax	        79	list.h	FUNCTION_56	CALL_1
0x48a	      0xe8b4ffffff	                     call sym.__list_del	        79	list.h	FUNCTION_56	CALL_1
0x48f	              0x90	                                     nop	        80	list.h	FUNCTION_56
0x490	              0xc9	                                   leave	        80	list.h	FUNCTION_56
0x491	              0xc3	                                     ret	        80	list.h	FUNCTION_56
find_patch_start	CALL,2:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,1:IF,1	32
0x21bd	              0x55	                                push rbp	       792	trailer.c	FUNCTION_40
0x21be	          0x4889e5	                            mov rbp, rsp	       792	trailer.c	FUNCTION_40
0x21c1	        0x4883ec20	                           sub rsp, 0x20	       792	trailer.c	FUNCTION_40
0x21c5	        0x48897de8	             mov qword [rbp - 0x18], rdi	       792	trailer.c	FUNCTION_40
0x21c9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x21cd	        0x488945f8	                mov qword [rbp - 8], rax	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x21d1	            0xeb35	                           jmp 0x4002248	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x21d3	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	trailer.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x21d7	      0xbe00000000	                              mov esi, 0	       796	trailer.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x21dc	          0x4889c7	                            mov rdi, rax	       796	trailer.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x21df	      0xe800000000	                          call 0x4002224	       796	trailer.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x21e4	            0x85c0	                           test eax, eax	       796	trailer.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x21e6	            0x7410	                            je 0x4002238	       796	trailer.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x21e8	        0x488b55f8	                mov rdx, qword [rbp - 8]	       797	trailer.c	FUNCTION_40	FOR_1	IF_1
0x21ec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       797	trailer.c	FUNCTION_40	FOR_1	IF_1
0x21f0	          0x4829c2	                            sub rdx, rax	       797	trailer.c	FUNCTION_40	FOR_1	IF_1
0x21f3	          0x4889d0	                            mov rax, rdx	       797	trailer.c	FUNCTION_40	FOR_1	IF_1
0x21f6	            0xeb29	                           jmp 0x4002261	       797	trailer.c	FUNCTION_40	FOR_1	IF_1
0x21f8	        0x488b45f8	                mov rax, qword [rbp - 8]	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x21fc	          0x4889c7	                            mov rdi, rax	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x21ff	      0xe81fffffff	                      call sym.next_line	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x2204	        0x488945f8	                mov qword [rbp - 8], rax	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x2208	        0x488b45f8	                mov rax, qword [rbp - 8]	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x220c	           0xfb600	                   movzx eax, byte [rax]	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x220f	            0x84c0	                             test al, al	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x2211	            0x75c0	                           jne 0x4002213	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x2213	        0x488b55f8	                mov rdx, qword [rbp - 8]	       800	trailer.c	FUNCTION_40
0x2217	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       800	trailer.c	FUNCTION_40
0x221b	          0x4829c2	                            sub rdx, rax	       800	trailer.c	FUNCTION_40
0x221e	          0x4889d0	                            mov rax, rdx	       800	trailer.c	FUNCTION_40
0x2221	              0xc9	                                   leave	       801	trailer.c	FUNCTION_40
0x2222	              0xc3	                                     ret	       801	trailer.c	FUNCTION_40
strbuf_avail	CALL,0:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,0	18
0x1f0	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_99
0x1f1	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_99
0x1f4	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_99
0x1f8	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_99
0x1fc	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_99
0x1ff	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_99
0x202	            0x741b	                            je 0x400025f	       141	strbuf.h	FUNCTION_99
0x204	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_99
0x208	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_99
0x20b	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_99
0x20f	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_99
0x213	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_99
0x216	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_99
0x219	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_99
0x21d	            0xeb05	                           jmp 0x4000264	       141	strbuf.h	FUNCTION_99
0x21f	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_99
0x224	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_99
0x225	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_99
same_value	CALL,1:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,0	17
0x641	              0x55	                                push rbp	        94	trailer.c	FUNCTION_4
0x642	          0x4889e5	                            mov rbp, rsp	        94	trailer.c	FUNCTION_4
0x645	        0x4883ec10	                           sub rsp, 0x10	        94	trailer.c	FUNCTION_4
0x649	        0x48897df8	                mov qword [rbp - 8], rdi	        94	trailer.c	FUNCTION_4
0x64d	        0x488975f0	             mov qword [rbp - 0x10], rsi	        94	trailer.c	FUNCTION_4
0x651	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        95	trailer.c	FUNCTION_4	CALL_1
0x655	        0x488b5018	            mov rdx, qword [rax + 0x18] 	        95	trailer.c	FUNCTION_4	CALL_1
0x659	        0x488b45f8	                mov rax, qword [rbp - 8]	        95	trailer.c	FUNCTION_4	CALL_1
0x65d	        0x488b4018	            mov rax, qword [rax + 0x18] 	        95	trailer.c	FUNCTION_4	CALL_1
0x661	          0x4889d6	                            mov rsi, rdx	        95	trailer.c	FUNCTION_4	CALL_1
0x664	          0x4889c7	                            mov rdi, rax	        95	trailer.c	FUNCTION_4	CALL_1
0x667	      0xe800000000	                          call 0x40006ac	        95	trailer.c	FUNCTION_4	CALL_1
0x66c	            0x85c0	                           test eax, eax	        95	trailer.c	FUNCTION_4	CALL_1
0x66e	           0xf94c0	                                 sete al	        95	trailer.c	FUNCTION_4	CALL_1
0x671	           0xfb6c0	                           movzx eax, al	        95	trailer.c	FUNCTION_4	CALL_1
0x674	              0xc9	                                   leave	        96	trailer.c	FUNCTION_4
0x675	              0xc3	                                     ret	        96	trailer.c	FUNCTION_4
free_all	CALL,0:DO,0:SWITCH,0:WHILE,0:functions,1:ELSE,0:FOR,0:IF,0	28
0x2934	              0x55	                                push rbp	       990	trailer.c	FUNCTION_46
0x2935	          0x4889e5	                            mov rbp, rsp	       990	trailer.c	FUNCTION_46
0x2938	        0x4883ec20	                           sub rsp, 0x20	       990	trailer.c	FUNCTION_46
0x293c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       990	trailer.c	FUNCTION_46
0x2940	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       992	trailer.c	FUNCTION_46	FUNCTION_1
0x2944	          0x488b00	                    mov rax, qword [rax]	       992	trailer.c	FUNCTION_46	FUNCTION_1
0x2947	        0x488945f0	             mov qword [rbp - 0x10], rax	       992	trailer.c	FUNCTION_46	FUNCTION_1
0x294b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       992	trailer.c	FUNCTION_46	FUNCTION_1
0x294f	          0x488b00	                    mov rax, qword [rax]	       992	trailer.c	FUNCTION_46	FUNCTION_1
0x2952	        0x488945f8	                mov qword [rbp - 8], rax	       992	trailer.c	FUNCTION_46	FUNCTION_1
0x2956	            0xeb2b	                           jmp 0x40029c3	       992	trailer.c	FUNCTION_46	FUNCTION_1
0x2958	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       993	trailer.c	FUNCTION_46	FUNCTION_1	CALL_1
0x295c	          0x4889c7	                            mov rdi, rax	       993	trailer.c	FUNCTION_46	FUNCTION_1	CALL_1
0x295f	      0xe805dbffff	                       call sym.list_del	       993	trailer.c	FUNCTION_46	FUNCTION_1	CALL_1
0x2964	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       994	trailer.c	FUNCTION_46	FUNCTION_1	CALL_3
0x2968	          0x4889c7	                            mov rdi, rax	       994	trailer.c	FUNCTION_46	FUNCTION_1	CALL_3
0x296b	      0xe84bdeffff	              call sym.free_trailer_item	       994	trailer.c	FUNCTION_46	FUNCTION_1	CALL_3
0x2970	        0x488b45f8	                mov rax, qword [rbp - 8]	       992	trailer.c	FUNCTION_46	FUNCTION_1
0x2974	        0x488945f0	             mov qword [rbp - 0x10], rax	       992	trailer.c	FUNCTION_46	FUNCTION_1
0x2978	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       992	trailer.c	FUNCTION_46	FUNCTION_1
0x297c	          0x488b00	                    mov rax, qword [rax]	       992	trailer.c	FUNCTION_46	FUNCTION_1
0x297f	        0x488945f8	                mov qword [rbp - 8], rax	       992	trailer.c	FUNCTION_46	FUNCTION_1
0x2983	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       992	trailer.c	FUNCTION_46	FUNCTION_1
0x2987	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       992	trailer.c	FUNCTION_46	FUNCTION_1
0x298b	            0x75cb	                           jne 0x4002998	       992	trailer.c	FUNCTION_46	FUNCTION_1
0x298d	              0x90	                                     nop	       996	trailer.c	FUNCTION_46
0x298e	              0xc9	                                   leave	       996	trailer.c	FUNCTION_46
0x298f	              0xc3	                                     ret	       996	trailer.c	FUNCTION_46
is_blank_line	CALL,1:DO,0:SWITCH,0:WHILE,1:functions,0:ELSE,0:FOR,0:IF,0	37
0x6c2	              0x55	                                push rbp	       104	trailer.c	FUNCTION_6
0x6c3	          0x4889e5	                            mov rbp, rsp	       104	trailer.c	FUNCTION_6
0x6c6	        0x48897de8	             mov qword [rbp - 0x18], rdi	       104	trailer.c	FUNCTION_6
0x6ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       105	trailer.c	FUNCTION_6
0x6ce	        0x488945f8	                mov qword [rbp - 8], rax	       105	trailer.c	FUNCTION_6
0x6d2	            0xeb05	                           jmp 0x4000719	       106	trailer.c	FUNCTION_6	WHILE_1	CALL_1
0x6d4	      0x488345f801	                  add qword [rbp - 8], 1	       107	trailer.c	FUNCTION_6	WHILE_1
0x6d9	        0x488b45f8	                mov rax, qword [rbp - 8]	       106	trailer.c	FUNCTION_6	WHILE_1	CALL_1
0x6dd	           0xfb600	                   movzx eax, byte [rax]	       106	trailer.c	FUNCTION_6	WHILE_1	CALL_1
0x6e0	            0x84c0	                             test al, al	       106	trailer.c	FUNCTION_6	WHILE_1	CALL_1
0x6e2	            0x7428	                            je 0x400074c	       106	trailer.c	FUNCTION_6	WHILE_1	CALL_1
0x6e4	        0x488b45f8	                mov rax, qword [rbp - 8]	       106	trailer.c	FUNCTION_6	WHILE_1	CALL_1
0x6e8	           0xfb600	                   movzx eax, byte [rax]	       106	trailer.c	FUNCTION_6	WHILE_1	CALL_1
0x6eb	            0x3c0a	                             cmp al, 0xa	       106	trailer.c	FUNCTION_6	WHILE_1	CALL_1
0x6ed	            0x741d	                            je 0x400074c	       106	trailer.c	FUNCTION_6	WHILE_1	CALL_1
0x6ef	        0x488b45f8	                mov rax, qword [rbp - 8]	       106	trailer.c	FUNCTION_6	WHILE_1	CALL_1
0x6f3	           0xfb600	                   movzx eax, byte [rax]	       106	trailer.c	FUNCTION_6	WHILE_1	CALL_1
0x6f6	           0xfb6c0	                           movzx eax, al	       106	trailer.c	FUNCTION_6	WHILE_1	CALL_1
0x6f9	            0x4898	                                    cdqe	       106	trailer.c	FUNCTION_6	WHILE_1	CALL_1
0x6fb	     0xfb680000000	                   movzx eax, byte [rax]	       106	trailer.c	FUNCTION_6	WHILE_1	CALL_1
0x702	           0xfb6c0	                           movzx eax, al	       106	trailer.c	FUNCTION_6	WHILE_1	CALL_1
0x705	          0x83e001	                              and eax, 1	       106	trailer.c	FUNCTION_6	WHILE_1	CALL_1
0x708	            0x85c0	                           test eax, eax	       106	trailer.c	FUNCTION_6	WHILE_1	CALL_1
0x70a	            0x75c8	                           jne 0x4000714	       106	trailer.c	FUNCTION_6	WHILE_1	CALL_1
0x70c	        0x488b45f8	                mov rax, qword [rbp - 8]	       108	trailer.c	FUNCTION_6
0x710	           0xfb600	                   movzx eax, byte [rax]	       108	trailer.c	FUNCTION_6
0x713	            0x84c0	                             test al, al	       108	trailer.c	FUNCTION_6
0x715	            0x740b	                            je 0x4000762	       108	trailer.c	FUNCTION_6
0x717	        0x488b45f8	                mov rax, qword [rbp - 8]	       108	trailer.c	FUNCTION_6
0x71b	           0xfb600	                   movzx eax, byte [rax]	       108	trailer.c	FUNCTION_6
0x71e	            0x3c0a	                             cmp al, 0xa	       108	trailer.c	FUNCTION_6
0x720	            0x7507	                           jne 0x4000769	       108	trailer.c	FUNCTION_6
0x722	      0xb801000000	                              mov eax, 1	       108	trailer.c	FUNCTION_6
0x727	            0xeb05	                           jmp 0x400076e	       108	trailer.c	FUNCTION_6
0x729	      0xb800000000	                              mov eax, 0	       108	trailer.c	FUNCTION_6
0x72e	              0x5d	                                 pop rbp	       109	trailer.c	FUNCTION_6
0x72f	              0xc3	                                     ret	       109	trailer.c	FUNCTION_6
trailer_from_arg	CALL,2:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,0	28
0xa18	              0x55	                                push rbp	       176	trailer.c	FUNCTION_13
0xa19	          0x4889e5	                            mov rbp, rsp	       176	trailer.c	FUNCTION_13
0xa1c	        0x4883ec20	                           sub rsp, 0x20	       176	trailer.c	FUNCTION_13
0xa20	        0x48897de8	             mov qword [rbp - 0x18], rdi	       176	trailer.c	FUNCTION_13
0xa24	      0xbe01000000	                              mov esi, 1	       177	trailer.c	FUNCTION_13	CALL_1
0xa29	      0xbf20000000	                           mov edi, 0x20	       177	trailer.c	FUNCTION_13	CALL_1
0xa2e	      0xe800000000	                          call 0x4000a73	       177	trailer.c	FUNCTION_13	CALL_1
0xa33	        0x488945f8	                mov qword [rbp - 8], rax	       177	trailer.c	FUNCTION_13	CALL_1
0xa37	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       178	trailer.c	FUNCTION_13
0xa3b	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       178	trailer.c	FUNCTION_13
0xa3f	        0x488b45f8	                mov rax, qword [rbp - 8]	       178	trailer.c	FUNCTION_13
0xa43	        0x48895010	             mov qword [rax + 0x10], rdx	       178	trailer.c	FUNCTION_13
0xa47	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       179	trailer.c	FUNCTION_13
0xa4b	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       179	trailer.c	FUNCTION_13
0xa4f	        0x488b45f8	                mov rax, qword [rbp - 8]	       179	trailer.c	FUNCTION_13
0xa53	        0x48895018	             mov qword [rax + 0x18], rdx	       179	trailer.c	FUNCTION_13
0xa57	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       180	trailer.c	FUNCTION_13
0xa5b	    0x48c740180000	               mov qword [rax + 0x18], 0	       180	trailer.c	FUNCTION_13
0xa63	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       180	trailer.c	FUNCTION_13
0xa67	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       180	trailer.c	FUNCTION_13
0xa6b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       180	trailer.c	FUNCTION_13
0xa6f	        0x48895010	             mov qword [rax + 0x10], rdx	       180	trailer.c	FUNCTION_13
0xa73	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       181	trailer.c	FUNCTION_13	CALL_2
0xa77	          0x4889c7	                            mov rdi, rax	       181	trailer.c	FUNCTION_13	CALL_2
0xa7a	      0xe877fdffff	                  call sym.free_arg_item	       181	trailer.c	FUNCTION_13	CALL_2
0xa7f	        0x488b45f8	                mov rax, qword [rbp - 8]	       182	trailer.c	FUNCTION_13
0xa83	              0xc9	                                   leave	       183	trailer.c	FUNCTION_13
0xa84	              0xc3	                                     ret	       183	trailer.c	FUNCTION_13
parse_trailer	CALL,7:DO,0:SWITCH,0:WHILE,0:functions,1:ELSE,1:FOR,0:IF,2	100
0x1b61	              0x55	                                push rbp	       634	trailer.c	FUNCTION_33
0x1b62	          0x4889e5	                            mov rbp, rsp	       634	trailer.c	FUNCTION_33
0x1b65	        0x4883ec50	                           sub rsp, 0x50	       634	trailer.c	FUNCTION_33
0x1b69	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       634	trailer.c	FUNCTION_33
0x1b6d	        0x488975d0	             mov qword [rbp - 0x30], rsi	       634	trailer.c	FUNCTION_33
0x1b71	        0x488955c8	             mov qword [rbp - 0x38], rdx	       634	trailer.c	FUNCTION_33
0x1b75	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       634	trailer.c	FUNCTION_33
0x1b79	        0x448945bc	             mov dword [rbp - 0x44], r8d	       634	trailer.c	FUNCTION_33
0x1b7d	        0x837dbcff	cmp dword [rbp - 0x44], 0xffffffffffffffff	       639	trailer.c	FUNCTION_33	IF_1
0x1b81	            0x7452	                            je 0x4001c15	       639	trailer.c	FUNCTION_33	IF_1
0x1b83	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       640	trailer.c	FUNCTION_33	IF_1	CALL_1
0x1b86	          0x4863d0	                         movsxd rdx, eax	       640	trailer.c	FUNCTION_33	IF_1	CALL_1
0x1b89	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       640	trailer.c	FUNCTION_33	IF_1	CALL_1
0x1b8d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       640	trailer.c	FUNCTION_33	IF_1	CALL_1
0x1b91	          0x4889ce	                            mov rsi, rcx	       640	trailer.c	FUNCTION_33	IF_1	CALL_1
0x1b94	          0x4889c7	                            mov rdi, rax	       640	trailer.c	FUNCTION_33	IF_1	CALL_1
0x1b97	      0xe800000000	                          call 0x4001bdc	       640	trailer.c	FUNCTION_33	IF_1	CALL_1
0x1b9c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       641	trailer.c	FUNCTION_33	IF_1	CALL_2
0x1ba0	          0x4889c7	                            mov rdi, rax	       641	trailer.c	FUNCTION_33	IF_1	CALL_2
0x1ba3	      0xe800000000	                          call 0x4001be8	       641	trailer.c	FUNCTION_33	IF_1	CALL_2
0x1ba8	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       642	trailer.c	FUNCTION_33	IF_1	CALL_3
0x1bab	            0x4898	                                    cdqe	       642	trailer.c	FUNCTION_33	IF_1	CALL_3
0x1bad	        0x488d5001	                      lea rdx, [rax + 1]	       642	trailer.c	FUNCTION_33	IF_1	CALL_3
0x1bb1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       642	trailer.c	FUNCTION_33	IF_1	CALL_3
0x1bb5	          0x4801c2	                            add rdx, rax	       642	trailer.c	FUNCTION_33	IF_1	CALL_3
0x1bb8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       642	trailer.c	FUNCTION_33	IF_1	CALL_3
0x1bbc	          0x4889d6	                            mov rsi, rdx	       642	trailer.c	FUNCTION_33	IF_1	CALL_3
0x1bbf	          0x4889c7	                            mov rdi, rax	       642	trailer.c	FUNCTION_33	IF_1	CALL_3
0x1bc2	      0xe867e7ffff	                  call sym.strbuf_addstr	       642	trailer.c	FUNCTION_33	IF_1	CALL_3
0x1bc7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       643	trailer.c	FUNCTION_33	IF_1	CALL_4
0x1bcb	          0x4889c7	                            mov rdi, rax	       643	trailer.c	FUNCTION_33	IF_1	CALL_4
0x1bce	      0xe800000000	                          call 0x4001c13	       643	trailer.c	FUNCTION_33	IF_1	CALL_4
0x1bd3	            0xeb1f	                           jmp 0x4001c34	       643	trailer.c	FUNCTION_33	IF_1	CALL_4
0x1bd5	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       645	trailer.c	FUNCTION_33	ELSE_1	CALL_5
0x1bd9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       645	trailer.c	FUNCTION_33	ELSE_1	CALL_5
0x1bdd	          0x4889d6	                            mov rsi, rdx	       645	trailer.c	FUNCTION_33	ELSE_1	CALL_5
0x1be0	          0x4889c7	                            mov rdi, rax	       645	trailer.c	FUNCTION_33	ELSE_1	CALL_5
0x1be3	      0xe846e7ffff	                  call sym.strbuf_addstr	       645	trailer.c	FUNCTION_33	ELSE_1	CALL_5
0x1be8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       646	trailer.c	FUNCTION_33	ELSE_1	CALL_6
0x1bec	          0x4889c7	                            mov rdi, rax	       646	trailer.c	FUNCTION_33	ELSE_1	CALL_6
0x1bef	      0xe800000000	                          call 0x4001c34	       646	trailer.c	FUNCTION_33	ELSE_1	CALL_6
0x1bf4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       650	trailer.c	FUNCTION_33	CALL_7
0x1bf8	        0x488b5008	                mov rdx, qword [rax + 8]	       650	trailer.c	FUNCTION_33	CALL_7
0x1bfc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       650	trailer.c	FUNCTION_33	CALL_7
0x1c00	        0x488b4010	            mov rax, qword [rax + 0x10] 	       650	trailer.c	FUNCTION_33	CALL_7
0x1c04	          0x4889d6	                            mov rsi, rdx	       650	trailer.c	FUNCTION_33	CALL_7
0x1c07	          0x4889c7	                            mov rdi, rax	       650	trailer.c	FUNCTION_33	CALL_7
0x1c0a	      0xe835e9ffff	    call sym.token_len_without_separator	       650	trailer.c	FUNCTION_33	CALL_7
0x1c0f	          0x8945e4	             mov dword [rbp - 0x1c], eax	       650	trailer.c	FUNCTION_33	CALL_7
0x1c12	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       651	trailer.c	FUNCTION_33	IF_2
0x1c17	            0x740b	                            je 0x4001c64	       651	trailer.c	FUNCTION_33	IF_2
0x1c19	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       652	trailer.c	FUNCTION_33	IF_2
0x1c1d	    0x48c700000000	                      mov qword [rax], 0	       652	trailer.c	FUNCTION_33	IF_2
0x1c24	    0x488b05000000	            mov rax, qword [0x04001c6b] 	       653	trailer.c	FUNCTION_33	FUNCTION_1
0x1c2b	        0x488945e8	             mov qword [rbp - 0x18], rax	       653	trailer.c	FUNCTION_33	FUNCTION_1
0x1c2f	      0xe98f000000	                           jmp 0x4001d03	       653	trailer.c	FUNCTION_33	FUNCTION_1
0x1c34	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       654	trailer.c	FUNCTION_33	FUNCTION_1	CALL_1
0x1c38	        0x488945f0	             mov qword [rbp - 0x10], rax	       654	trailer.c	FUNCTION_33	FUNCTION_1	CALL_1
0x1c3c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       655	trailer.c	FUNCTION_33	FUNCTION_1	IF_1	CALL_2
0x1c40	        0x488b4010	            mov rax, qword [rax + 0x10] 	       655	trailer.c	FUNCTION_33	FUNCTION_1	IF_1	CALL_2
0x1c44	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       655	trailer.c	FUNCTION_33	FUNCTION_1	IF_1	CALL_2
0x1c47	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       655	trailer.c	FUNCTION_33	FUNCTION_1	IF_1	CALL_2
0x1c4b	          0x4889ce	                            mov rsi, rcx	       655	trailer.c	FUNCTION_33	FUNCTION_1	IF_1	CALL_2
0x1c4e	          0x4889c7	                            mov rdi, rax	       655	trailer.c	FUNCTION_33	FUNCTION_1	IF_1	CALL_2
0x1c51	      0xe8ccfdffff	             call sym.token_matches_item	       655	trailer.c	FUNCTION_33	FUNCTION_1	IF_1	CALL_2
0x1c56	            0x85c0	                           test eax, eax	       655	trailer.c	FUNCTION_33	FUNCTION_1	IF_1	CALL_2
0x1c58	            0x745e	                            je 0x4001cf8	       655	trailer.c	FUNCTION_33	FUNCTION_1	IF_1	CALL_2
0x1c5a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       656	trailer.c	FUNCTION_33	FUNCTION_1	IF_1	CALL_3
0x1c5e	      0xbe00000000	                              mov esi, 0	       656	trailer.c	FUNCTION_33	FUNCTION_1	IF_1	CALL_3
0x1c63	          0x4889c7	                            mov rdi, rax	       656	trailer.c	FUNCTION_33	FUNCTION_1	IF_1	CALL_3
0x1c66	      0xe800000000	                          call 0x4001cab	       656	trailer.c	FUNCTION_33	FUNCTION_1	IF_1	CALL_3
0x1c6b	        0x488945f8	                mov qword [rbp - 8], rax	       656	trailer.c	FUNCTION_33	FUNCTION_1	IF_1	CALL_3
0x1c6f	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       657	trailer.c	FUNCTION_33	FUNCTION_1	IF_1	IF_2
0x1c74	            0x740f	                            je 0x4001cc5	       657	trailer.c	FUNCTION_33	FUNCTION_1	IF_1	IF_2
0x1c76	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       658	trailer.c	FUNCTION_33	FUNCTION_1	IF_1	IF_2
0x1c7a	        0x488d5020	                   lea rdx, [rax + 0x20]	       658	trailer.c	FUNCTION_33	FUNCTION_1	IF_1	IF_2
0x1c7e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       658	trailer.c	FUNCTION_33	FUNCTION_1	IF_1	IF_2
0x1c82	          0x488910	                    mov qword [rax], rdx	       658	trailer.c	FUNCTION_33	FUNCTION_1	IF_1	IF_2
0x1c85	        0x488b55f8	                mov rdx, qword [rbp - 8]	       659	trailer.c	FUNCTION_33	FUNCTION_1	IF_1	CALL_5
0x1c89	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       659	trailer.c	FUNCTION_33	FUNCTION_1	IF_1	CALL_5
0x1c8d	          0x4889d6	                            mov rsi, rdx	       659	trailer.c	FUNCTION_33	FUNCTION_1	IF_1	CALL_5
0x1c90	          0x4889c7	                            mov rdi, rax	       659	trailer.c	FUNCTION_33	FUNCTION_1	IF_1	CALL_5
0x1c93	      0xe850fdffff	                call sym.token_from_item	       659	trailer.c	FUNCTION_33	FUNCTION_1	IF_1	CALL_5
0x1c98	          0x4889c2	                            mov rdx, rax	       659	trailer.c	FUNCTION_33	FUNCTION_1	IF_1	CALL_5
0x1c9b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       659	trailer.c	FUNCTION_33	FUNCTION_1	IF_1	CALL_5
0x1c9f	          0x4889d6	                            mov rsi, rdx	       659	trailer.c	FUNCTION_33	FUNCTION_1	IF_1	CALL_5
0x1ca2	          0x4889c7	                            mov rdi, rax	       659	trailer.c	FUNCTION_33	FUNCTION_1	IF_1	CALL_5
0x1ca5	      0xe884e6ffff	                  call sym.strbuf_addstr	       659	trailer.c	FUNCTION_33	FUNCTION_1	IF_1	CALL_5
0x1caa	        0x488b45f8	                mov rax, qword [rbp - 8]	       660	trailer.c	FUNCTION_33	FUNCTION_1	IF_1	CALL_6
0x1cae	          0x4889c7	                            mov rdi, rax	       660	trailer.c	FUNCTION_33	FUNCTION_1	IF_1	CALL_6
0x1cb1	      0xe800000000	                          call 0x4001cf6	       660	trailer.c	FUNCTION_33	FUNCTION_1	IF_1	CALL_6
0x1cb6	            0xeb19	                           jmp 0x4001d11	       661	trailer.c	FUNCTION_33	FUNCTION_1	IF_1
0x1cb8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       653	trailer.c	FUNCTION_33	FUNCTION_1
0x1cbc	          0x488b00	                    mov rax, qword [rax]	       653	trailer.c	FUNCTION_33	FUNCTION_1
0x1cbf	        0x488945e8	             mov qword [rbp - 0x18], rax	       653	trailer.c	FUNCTION_33	FUNCTION_1
0x1cc3	    0x48817de80000	               cmp qword [rbp - 0x18], 0	       653	trailer.c	FUNCTION_33	FUNCTION_1
0x1ccb	     0xf8563ffffff	                           jne 0x4001c74	       653	trailer.c	FUNCTION_33	FUNCTION_1
0x1cd1	              0x90	                                     nop	       664	trailer.c	FUNCTION_33
0x1cd2	              0xc9	                                   leave	       664	trailer.c	FUNCTION_33
0x1cd3	              0xc3	                                     ret	       664	trailer.c	FUNCTION_33
_	CALL,2:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,1	15
0x4ad	              0x55	                                push rbp	        51	gettext.h	FUNCTION_96
0x4ae	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_96
0x4b1	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_96
0x4b5	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_96
0x4b9	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_96	IF_1
0x4bd	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_96	IF_1
0x4c0	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_96	IF_1
0x4c2	            0x7507	                           jne 0x400050b	        52	gettext.h	FUNCTION_96	IF_1
0x4c4	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_96	IF_1
0x4c9	            0xeb0c	                           jmp 0x4000517	        53	gettext.h	FUNCTION_96	IF_1
0x4cb	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_96	CALL_2
0x4cf	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_96	CALL_2
0x4d2	      0xe800000000	                          call 0x4000517	        54	gettext.h	FUNCTION_96	CALL_2
0x4d7	              0xc9	                                   leave	        55	gettext.h	FUNCTION_96
0x4d8	              0xc3	                                     ret	        55	gettext.h	FUNCTION_96
print_all	CALL,0:DO,0:SWITCH,0:WHILE,0:functions,1:ELSE,0:FOR,0:IF,0	46
0x986	              0x55	                                push rbp	       164	trailer.c	FUNCTION_12
0x987	          0x4889e5	                            mov rbp, rsp	       164	trailer.c	FUNCTION_12
0x98a	        0x4883ec30	                           sub rsp, 0x30	       164	trailer.c	FUNCTION_12
0x98e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       164	trailer.c	FUNCTION_12
0x992	        0x488975e0	             mov qword [rbp - 0x20], rsi	       164	trailer.c	FUNCTION_12
0x996	        0x488955d8	             mov qword [rbp - 0x28], rdx	       164	trailer.c	FUNCTION_12
0x99a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       167	trailer.c	FUNCTION_12	FUNCTION_1
0x99e	          0x488b00	                    mov rax, qword [rax]	       167	trailer.c	FUNCTION_12	FUNCTION_1
0x9a1	        0x488945f0	             mov qword [rbp - 0x10], rax	       167	trailer.c	FUNCTION_12	FUNCTION_1
0x9a5	            0xeb64	                           jmp 0x4000a4b	       167	trailer.c	FUNCTION_12	FUNCTION_1
0x9a7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       168	trailer.c	FUNCTION_12	FUNCTION_1	CALL_1
0x9ab	        0x488945f8	                mov qword [rbp - 8], rax	       168	trailer.c	FUNCTION_12	FUNCTION_1	CALL_1
0x9af	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       169	trailer.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_2
0x9b3	          0x8b4004	                mov eax, dword [rax + 4]	       169	trailer.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_2
0x9b6	            0x85c0	                           test eax, eax	       169	trailer.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_2
0x9b8	            0x740f	                            je 0x4000a09	       169	trailer.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_2
0x9ba	        0x488b45f8	                mov rax, qword [rbp - 8]	       169	trailer.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_2
0x9be	        0x488b4018	            mov rax, qword [rax + 0x18] 	       169	trailer.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_2
0x9c2	           0xfb600	                   movzx eax, byte [rax]	       169	trailer.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_2
0x9c5	            0x84c0	                             test al, al	       169	trailer.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_2
0x9c7	            0x7437	                            je 0x4000a40	       169	trailer.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_2
0x9c9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       170	trailer.c	FUNCTION_12	FUNCTION_1	IF_1
0x9cd	          0x8b4008	                mov eax, dword [rax + 8]	       170	trailer.c	FUNCTION_12	FUNCTION_1	IF_1
0x9d0	            0x85c0	                           test eax, eax	       169	trailer.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_2
0x9d2	            0x740d	                            je 0x4000a21	       169	trailer.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_2
0x9d4	        0x488b45f8	                mov rax, qword [rbp - 8]	       170	trailer.c	FUNCTION_12	FUNCTION_1	IF_1
0x9d8	        0x488b4010	            mov rax, qword [rax + 0x10] 	       170	trailer.c	FUNCTION_12	FUNCTION_1	IF_1
0x9dc	          0x4885c0	                           test rax, rax	       170	trailer.c	FUNCTION_12	FUNCTION_1	IF_1
0x9df	            0x741f	                            je 0x4000a40	       170	trailer.c	FUNCTION_12	FUNCTION_1	IF_1
0x9e1	        0x488b45f8	                mov rax, qword [rbp - 8]	       171	trailer.c	FUNCTION_12	FUNCTION_1	CALL_3
0x9e5	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       171	trailer.c	FUNCTION_12	FUNCTION_1	CALL_3
0x9e9	        0x488b45f8	                mov rax, qword [rbp - 8]	       171	trailer.c	FUNCTION_12	FUNCTION_1	CALL_3
0x9ed	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       171	trailer.c	FUNCTION_12	FUNCTION_1	CALL_3
0x9f1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       171	trailer.c	FUNCTION_12	FUNCTION_1	CALL_3
0x9f5	          0x4889ce	                            mov rsi, rcx	       171	trailer.c	FUNCTION_12	FUNCTION_1	CALL_3
0x9f8	          0x4889c7	                            mov rdi, rax	       171	trailer.c	FUNCTION_12	FUNCTION_1	CALL_3
0x9fb	      0xe8cafeffff	                  call sym.print_tok_val	       171	trailer.c	FUNCTION_12	FUNCTION_1	CALL_3
0xa00	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       167	trailer.c	FUNCTION_12	FUNCTION_1
0xa04	          0x488b00	                    mov rax, qword [rax]	       167	trailer.c	FUNCTION_12	FUNCTION_1
0xa07	        0x488945f0	             mov qword [rbp - 0x10], rax	       167	trailer.c	FUNCTION_12	FUNCTION_1
0xa0b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       167	trailer.c	FUNCTION_12	FUNCTION_1
0xa0f	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       167	trailer.c	FUNCTION_12	FUNCTION_1
0xa13	            0x7592	                           jne 0x40009e7	       167	trailer.c	FUNCTION_12	FUNCTION_1
0xa15	              0x90	                                     nop	       173	trailer.c	FUNCTION_12
0xa16	              0xc9	                                   leave	       173	trailer.c	FUNCTION_12
0xa17	              0xc3	                                     ret	       173	trailer.c	FUNCTION_12
unfold_value	CALL,7:DO,0:SWITCH,0:WHILE,2:functions,0:ELSE,1:FOR,0:IF,1	78
0x256a	              0x55	                                push rbp	       916	trailer.c	FUNCTION_44
0x256b	          0x4889e5	                            mov rbp, rsp	       916	trailer.c	FUNCTION_44
0x256e	        0x4883ec40	                           sub rsp, 0x40	       916	trailer.c	FUNCTION_44
0x2572	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       916	trailer.c	FUNCTION_44
0x2576	    0x64488b042528	                mov rax, qword fs:[0x28]	       916	trailer.c	FUNCTION_44
0x257f	        0x488945f8	                mov qword [rbp - 8], rax	       916	trailer.c	FUNCTION_44
0x2583	            0x31c0	                            xor eax, eax	       916	trailer.c	FUNCTION_44
0x2585	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       917	trailer.c	FUNCTION_44
0x258d	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       917	trailer.c	FUNCTION_44
0x2595	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       917	trailer.c	FUNCTION_44
0x259d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       920	trailer.c	FUNCTION_44	CALL_1
0x25a1	        0x488b5008	                mov rdx, qword [rax + 8]	       920	trailer.c	FUNCTION_44	CALL_1
0x25a5	        0x488d45e0	                   lea rax, [rbp - 0x20]	       920	trailer.c	FUNCTION_44	CALL_1
0x25a9	          0x4889d6	                            mov rsi, rdx	       920	trailer.c	FUNCTION_44	CALL_1
0x25ac	          0x4889c7	                            mov rdi, rax	       920	trailer.c	FUNCTION_44	CALL_1
0x25af	      0xe800000000	                          call 0x40025f4	       920	trailer.c	FUNCTION_44	CALL_1
0x25b4	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       921	trailer.c	FUNCTION_44
0x25bc	      0xe985000000	                           jmp 0x4002686	       922	trailer.c	FUNCTION_44	WHILE_1
0x25c1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       923	trailer.c	FUNCTION_44	WHILE_1
0x25c5	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       923	trailer.c	FUNCTION_44	WHILE_1
0x25c9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       923	trailer.c	FUNCTION_44	WHILE_1
0x25cd	        0x488d5001	                      lea rdx, [rax + 1]	       923	trailer.c	FUNCTION_44	WHILE_1
0x25d1	        0x488955d8	             mov qword [rbp - 0x28], rdx	       923	trailer.c	FUNCTION_44	WHILE_1
0x25d5	          0x4801c8	                            add rax, rcx	       923	trailer.c	FUNCTION_44	WHILE_1
0x25d8	           0xfb600	                   movzx eax, byte [rax]	       923	trailer.c	FUNCTION_44	WHILE_1
0x25db	          0x8845d7	               mov byte [rbp - 0x29], al	       923	trailer.c	FUNCTION_44	WHILE_1
0x25de	        0x807dd70a	              cmp byte [rbp - 0x29], 0xa	       924	trailer.c	FUNCTION_44	WHILE_1	IF_1
0x25e2	            0x7550	                           jne 0x4002674	       924	trailer.c	FUNCTION_44	WHILE_1	IF_1
0x25e4	            0xeb05	                           jmp 0x400262b	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2	CALL_2
0x25e6	      0x488345d801	               add qword [rbp - 0x28], 1	       927	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x25eb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2	CALL_2
0x25ef	        0x488b4008	                mov rax, qword [rax + 8]	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2	CALL_2
0x25f3	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2	CALL_2
0x25f7	            0x7628	                           jbe 0x4002661	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2	CALL_2
0x25f9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2	CALL_2
0x25fd	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2	CALL_2
0x2601	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2	CALL_2
0x2605	          0x4801d0	                            add rax, rdx	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2	CALL_2
0x2608	           0xfb600	                   movzx eax, byte [rax]	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2	CALL_2
0x260b	           0xfb6c0	                           movzx eax, al	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2	CALL_2
0x260e	            0x4898	                                    cdqe	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2	CALL_2
0x2610	     0xfb680000000	                   movzx eax, byte [rax]	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2	CALL_2
0x2617	           0xfb6c0	                           movzx eax, al	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2	CALL_2
0x261a	          0x83e001	                              and eax, 1	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2	CALL_2
0x261d	            0x85c0	                           test eax, eax	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2	CALL_2
0x261f	            0x75c5	                           jne 0x4002626	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2	CALL_2
0x2621	        0x488d45e0	                   lea rax, [rbp - 0x20]	       928	trailer.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x2625	      0xbe20000000	                           mov esi, 0x20	       928	trailer.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x262a	          0x4889c7	                            mov rdi, rax	       928	trailer.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x262d	      0xe88edcffff	                   call sym.strbuf_addch	       928	trailer.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x2632	            0xeb12	                           jmp 0x4002686	       928	trailer.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x2634	         0xfbe55d7	            movsx edx, byte [rbp - 0x29]	       930	trailer.c	FUNCTION_44	WHILE_1	ELSE_1	CALL_4
0x2638	        0x488d45e0	                   lea rax, [rbp - 0x20]	       930	trailer.c	FUNCTION_44	WHILE_1	ELSE_1	CALL_4
0x263c	            0x89d6	                            mov esi, edx	       930	trailer.c	FUNCTION_44	WHILE_1	ELSE_1	CALL_4
0x263e	          0x4889c7	                            mov rdi, rax	       930	trailer.c	FUNCTION_44	WHILE_1	ELSE_1	CALL_4
0x2641	      0xe87adcffff	                   call sym.strbuf_addch	       930	trailer.c	FUNCTION_44	WHILE_1	ELSE_1	CALL_4
0x2646	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       922	trailer.c	FUNCTION_44	WHILE_1
0x264a	        0x488b4008	                mov rax, qword [rax + 8]	       922	trailer.c	FUNCTION_44	WHILE_1
0x264e	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       922	trailer.c	FUNCTION_44	WHILE_1
0x2652	     0xf8769ffffff	                            ja 0x4002601	       922	trailer.c	FUNCTION_44	WHILE_1
0x2658	        0x488d45e0	                   lea rax, [rbp - 0x20]	       935	trailer.c	FUNCTION_44	CALL_5
0x265c	          0x4889c7	                            mov rdi, rax	       935	trailer.c	FUNCTION_44	CALL_5
0x265f	      0xe800000000	                          call 0x40026a4	       935	trailer.c	FUNCTION_44	CALL_5
0x2664	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       938	trailer.c	FUNCTION_44	CALL_6
0x2668	        0x488d45e0	                   lea rax, [rbp - 0x20]	       938	trailer.c	FUNCTION_44	CALL_6
0x266c	          0x4889d6	                            mov rsi, rdx	       938	trailer.c	FUNCTION_44	CALL_6
0x266f	          0x4889c7	                            mov rdi, rax	       938	trailer.c	FUNCTION_44	CALL_6
0x2672	      0xe8e5daffff	                    call sym.strbuf_swap	       938	trailer.c	FUNCTION_44	CALL_6
0x2677	        0x488d45e0	                   lea rax, [rbp - 0x20]	       939	trailer.c	FUNCTION_44	CALL_7
0x267b	          0x4889c7	                            mov rdi, rax	       939	trailer.c	FUNCTION_44	CALL_7
0x267e	      0xe800000000	                          call 0x40026c3	       939	trailer.c	FUNCTION_44	CALL_7
0x2683	              0x90	                                     nop	       940	trailer.c	FUNCTION_44
0x2684	        0x488b45f8	                mov rax, qword [rbp - 8]	       940	trailer.c	FUNCTION_44
0x2688	    0x644833042528	                xor rax, qword fs:[0x28]	       940	trailer.c	FUNCTION_44
0x2691	            0x7405	                            je 0x40026d8	       940	trailer.c	FUNCTION_44
0x2693	      0xe800000000	                          call 0x40026d8	       940	trailer.c	FUNCTION_44
0x2698	              0xc9	                                   leave	       940	trailer.c	FUNCTION_44
0x2699	              0xc3	                                     ret	       940	trailer.c	FUNCTION_44
token_from_item	CALL,0:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,2	19
0x19e8	              0x55	                                push rbp	       580	trailer.c	FUNCTION_30
0x19e9	          0x4889e5	                            mov rbp, rsp	       580	trailer.c	FUNCTION_30
0x19ec	        0x48897df8	                mov qword [rbp - 8], rdi	       580	trailer.c	FUNCTION_30
0x19f0	        0x488975f0	             mov qword [rbp - 0x10], rsi	       580	trailer.c	FUNCTION_30
0x19f4	        0x488b45f8	                mov rax, qword [rbp - 8]	       581	trailer.c	FUNCTION_30	IF_1
0x19f8	        0x488b4028	            mov rax, qword [rax + 0x28] 	       581	trailer.c	FUNCTION_30	IF_1
0x19fc	          0x4885c0	                           test rax, rax	       581	trailer.c	FUNCTION_30	IF_1
0x19ff	            0x740a	                            je 0x4001a4b	       581	trailer.c	FUNCTION_30	IF_1
0x1a01	        0x488b45f8	                mov rax, qword [rbp - 8]	       582	trailer.c	FUNCTION_30	IF_1
0x1a05	        0x488b4028	            mov rax, qword [rax + 0x28] 	       582	trailer.c	FUNCTION_30	IF_1
0x1a09	            0xeb15	                           jmp 0x4001a60	       582	trailer.c	FUNCTION_30	IF_1
0x1a0b	      0x48837df000	               cmp qword [rbp - 0x10], 0	       583	trailer.c	FUNCTION_30	IF_2
0x1a10	            0x7406	                            je 0x4001a58	       583	trailer.c	FUNCTION_30	IF_2
0x1a12	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       584	trailer.c	FUNCTION_30	IF_2
0x1a16	            0xeb08	                           jmp 0x4001a60	       584	trailer.c	FUNCTION_30	IF_2
0x1a18	        0x488b45f8	                mov rax, qword [rbp - 8]	       585	trailer.c	FUNCTION_30
0x1a1c	        0x488b4020	            mov rax, qword [rax + 0x20] 	       585	trailer.c	FUNCTION_30
0x1a20	              0x5d	                                 pop rbp	       586	trailer.c	FUNCTION_30
0x1a21	              0xc3	                                     ret	       586	trailer.c	FUNCTION_30
trailer_set_where	CALL,4:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,5:FOR,0:IF,5	51
0x11c9	              0x55	                                push rbp	       381	trailer.c	FUNCTION_22
0x11ca	          0x4889e5	                            mov rbp, rsp	       381	trailer.c	FUNCTION_22
0x11cd	        0x4883ec10	                           sub rsp, 0x10	       381	trailer.c	FUNCTION_22
0x11d1	        0x48897df8	                mov qword [rbp - 8], rdi	       381	trailer.c	FUNCTION_22
0x11d5	        0x488975f0	             mov qword [rbp - 0x10], rsi	       381	trailer.c	FUNCTION_22
0x11d9	      0x48837df000	               cmp qword [rbp - 0x10], 0	       382	trailer.c	FUNCTION_22	IF_1
0x11de	            0x750f	                           jne 0x400122f	       382	trailer.c	FUNCTION_22	IF_1
0x11e0	        0x488b45f8	                mov rax, qword [rbp - 8]	       383	trailer.c	FUNCTION_22	IF_1
0x11e4	    0xc70000000000	                      mov dword [rax], 0	       383	trailer.c	FUNCTION_22	IF_1
0x11ea	      0xe98b000000	                           jmp 0x40012ba	       383	trailer.c	FUNCTION_22	IF_1
0x11ef	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       384	trailer.c	FUNCTION_22	ELSE_1	IF_2	CALL_1
0x11f3	          0x4889c6	                            mov rsi, rax	       384	trailer.c	FUNCTION_22	ELSE_1	IF_2	CALL_1
0x11f6	      0xbf00000000	                              mov edi, 0	       384	trailer.c	FUNCTION_22	ELSE_1	IF_2	CALL_1
0x11fb	      0xe800000000	                          call 0x4001240	       384	trailer.c	FUNCTION_22	ELSE_1	IF_2	CALL_1
0x1200	            0x85c0	                           test eax, eax	       384	trailer.c	FUNCTION_22	ELSE_1	IF_2	CALL_1
0x1202	            0x750c	                           jne 0x4001250	       384	trailer.c	FUNCTION_22	ELSE_1	IF_2	CALL_1
0x1204	        0x488b45f8	                mov rax, qword [rbp - 8]	       385	trailer.c	FUNCTION_22	ELSE_1	IF_2
0x1208	    0xc70002000000	                      mov dword [rax], 2	       385	trailer.c	FUNCTION_22	ELSE_1	IF_2
0x120e	            0xeb6a	                           jmp 0x40012ba	       385	trailer.c	FUNCTION_22	ELSE_1	IF_2
0x1210	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       386	trailer.c	FUNCTION_22	ELSE_2	IF_3	CALL_2
0x1214	          0x4889c6	                            mov rsi, rax	       386	trailer.c	FUNCTION_22	ELSE_2	IF_3	CALL_2
0x1217	      0xbf00000000	                              mov edi, 0	       386	trailer.c	FUNCTION_22	ELSE_2	IF_3	CALL_2
0x121c	      0xe800000000	                          call 0x4001261	       386	trailer.c	FUNCTION_22	ELSE_2	IF_3	CALL_2
0x1221	            0x85c0	                           test eax, eax	       386	trailer.c	FUNCTION_22	ELSE_2	IF_3	CALL_2
0x1223	            0x750c	                           jne 0x4001271	       386	trailer.c	FUNCTION_22	ELSE_2	IF_3	CALL_2
0x1225	        0x488b45f8	                mov rax, qword [rbp - 8]	       387	trailer.c	FUNCTION_22	ELSE_2	IF_3
0x1229	    0xc70003000000	                      mov dword [rax], 3	       387	trailer.c	FUNCTION_22	ELSE_2	IF_3
0x122f	            0xeb49	                           jmp 0x40012ba	       387	trailer.c	FUNCTION_22	ELSE_2	IF_3
0x1231	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       388	trailer.c	FUNCTION_22	ELSE_3	IF_4	CALL_3
0x1235	          0x4889c6	                            mov rsi, rax	       388	trailer.c	FUNCTION_22	ELSE_3	IF_4	CALL_3
0x1238	      0xbf00000000	                              mov edi, 0	       388	trailer.c	FUNCTION_22	ELSE_3	IF_4	CALL_3
0x123d	      0xe800000000	                          call 0x4001282	       388	trailer.c	FUNCTION_22	ELSE_3	IF_4	CALL_3
0x1242	            0x85c0	                           test eax, eax	       388	trailer.c	FUNCTION_22	ELSE_3	IF_4	CALL_3
0x1244	            0x750c	                           jne 0x4001292	       388	trailer.c	FUNCTION_22	ELSE_3	IF_4	CALL_3
0x1246	        0x488b45f8	                mov rax, qword [rbp - 8]	       389	trailer.c	FUNCTION_22	ELSE_3	IF_4
0x124a	    0xc70001000000	                      mov dword [rax], 1	       389	trailer.c	FUNCTION_22	ELSE_3	IF_4
0x1250	            0xeb28	                           jmp 0x40012ba	       389	trailer.c	FUNCTION_22	ELSE_3	IF_4
0x1252	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       390	trailer.c	FUNCTION_22	ELSE_4	IF_5	CALL_4
0x1256	          0x4889c6	                            mov rsi, rax	       390	trailer.c	FUNCTION_22	ELSE_4	IF_5	CALL_4
0x1259	      0xbf00000000	                              mov edi, 0	       390	trailer.c	FUNCTION_22	ELSE_4	IF_5	CALL_4
0x125e	      0xe800000000	                          call 0x40012a3	       390	trailer.c	FUNCTION_22	ELSE_4	IF_5	CALL_4
0x1263	            0x85c0	                           test eax, eax	       390	trailer.c	FUNCTION_22	ELSE_4	IF_5	CALL_4
0x1265	            0x750c	                           jne 0x40012b3	       390	trailer.c	FUNCTION_22	ELSE_4	IF_5	CALL_4
0x1267	        0x488b45f8	                mov rax, qword [rbp - 8]	       391	trailer.c	FUNCTION_22	ELSE_4	IF_5
0x126b	    0xc70004000000	                      mov dword [rax], 4	       391	trailer.c	FUNCTION_22	ELSE_4	IF_5
0x1271	            0xeb07	                           jmp 0x40012ba	       391	trailer.c	FUNCTION_22	ELSE_4	IF_5
0x1273	      0xb8ffffffff	                     mov eax, 0xffffffff	       393	trailer.c	FUNCTION_22	ELSE_5
0x1278	            0xeb05	                           jmp 0x40012bf	       393	trailer.c	FUNCTION_22	ELSE_5
0x127a	      0xb800000000	                              mov eax, 0	       394	trailer.c	FUNCTION_22	ELSE_5
0x127f	              0xc9	                                   leave	       395	trailer.c	FUNCTION_22	ELSE_5
0x1280	              0xc3	                                     ret	       395	trailer.c	FUNCTION_22	ELSE_5
process_trailers_lists	CALL,0:DO,0:SWITCH,0:WHILE,0:functions,1:ELSE,0:FOR,0:IF,0	42
0x1137	              0x55	                                push rbp	       363	trailer.c	FUNCTION_21
0x1138	          0x4889e5	                            mov rbp, rsp	       363	trailer.c	FUNCTION_21
0x113b	        0x4883ec30	                           sub rsp, 0x30	       363	trailer.c	FUNCTION_21
0x113f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       363	trailer.c	FUNCTION_21
0x1143	        0x488975d0	             mov qword [rbp - 0x30], rsi	       363	trailer.c	FUNCTION_21
0x1147	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       367	trailer.c	FUNCTION_21	FUNCTION_1
0x114b	          0x488b00	                    mov rax, qword [rax]	       367	trailer.c	FUNCTION_21	FUNCTION_1
0x114e	        0x488945e8	             mov qword [rbp - 0x18], rax	       367	trailer.c	FUNCTION_21	FUNCTION_1
0x1152	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       367	trailer.c	FUNCTION_21	FUNCTION_1
0x1156	          0x488b00	                    mov rax, qword [rax]	       367	trailer.c	FUNCTION_21	FUNCTION_1
0x1159	        0x488945f0	             mov qword [rbp - 0x10], rax	       367	trailer.c	FUNCTION_21	FUNCTION_1
0x115d	            0xeb5d	                           jmp 0x40011fc	       367	trailer.c	FUNCTION_21	FUNCTION_1
0x115f	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       368	trailer.c	FUNCTION_21	FUNCTION_1
0x1166	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       369	trailer.c	FUNCTION_21	FUNCTION_1	CALL_1
0x116a	        0x488945f8	                mov qword [rbp - 8], rax	       369	trailer.c	FUNCTION_21	FUNCTION_1	CALL_1
0x116e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       371	trailer.c	FUNCTION_21	FUNCTION_1	CALL_2
0x1172	          0x4889c7	                            mov rdi, rax	       371	trailer.c	FUNCTION_21	FUNCTION_1	CALL_2
0x1175	      0xe8eff2ffff	                       call sym.list_del	       371	trailer.c	FUNCTION_21	FUNCTION_1	CALL_2
0x117a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       373	trailer.c	FUNCTION_21	FUNCTION_1	CALL_3
0x117e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       373	trailer.c	FUNCTION_21	FUNCTION_1	CALL_3
0x1182	          0x4889d6	                            mov rsi, rdx	       373	trailer.c	FUNCTION_21	FUNCTION_1	CALL_3
0x1185	          0x4889c7	                            mov rdi, rax	       373	trailer.c	FUNCTION_21	FUNCTION_1	CALL_3
0x1188	      0xe896feffff	        call sym.find_same_and_apply_arg	       373	trailer.c	FUNCTION_21	FUNCTION_1	CALL_3
0x118d	          0x8945e4	             mov dword [rbp - 0x1c], eax	       373	trailer.c	FUNCTION_21	FUNCTION_1	CALL_3
0x1190	        0x837de400	               cmp dword [rbp - 0x1c], 0	       375	trailer.c	FUNCTION_21	FUNCTION_1	IF_1
0x1194	            0x7513	                           jne 0x40011e9	       375	trailer.c	FUNCTION_21	FUNCTION_1	IF_1
0x1196	        0x488b55f8	                mov rdx, qword [rbp - 8]	       376	trailer.c	FUNCTION_21	FUNCTION_1	CALL_4
0x119a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       376	trailer.c	FUNCTION_21	FUNCTION_1	CALL_4
0x119e	          0x4889d6	                            mov rsi, rdx	       376	trailer.c	FUNCTION_21	FUNCTION_1	CALL_4
0x11a1	          0x4889c7	                            mov rdi, rax	       376	trailer.c	FUNCTION_21	FUNCTION_1	CALL_4
0x11a4	      0xe8cdfdffff	           call sym.apply_arg_if_missing	       376	trailer.c	FUNCTION_21	FUNCTION_1	CALL_4
0x11a9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       367	trailer.c	FUNCTION_21	FUNCTION_1
0x11ad	        0x488945e8	             mov qword [rbp - 0x18], rax	       367	trailer.c	FUNCTION_21	FUNCTION_1
0x11b1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       367	trailer.c	FUNCTION_21	FUNCTION_1
0x11b5	          0x488b00	                    mov rax, qword [rax]	       367	trailer.c	FUNCTION_21	FUNCTION_1
0x11b8	        0x488945f0	             mov qword [rbp - 0x10], rax	       367	trailer.c	FUNCTION_21	FUNCTION_1
0x11bc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       367	trailer.c	FUNCTION_21	FUNCTION_1
0x11c0	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       367	trailer.c	FUNCTION_21	FUNCTION_1
0x11c4	            0x7599	                           jne 0x400119f	       367	trailer.c	FUNCTION_21	FUNCTION_1
0x11c6	              0x90	                                     nop	       378	trailer.c	FUNCTION_21
0x11c7	              0xc9	                                   leave	       378	trailer.c	FUNCTION_21
0x11c8	              0xc3	                                     ret	       378	trailer.c	FUNCTION_21
strbuf_addstr	CALL,2:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,0	17
0x32e	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_102
0x32f	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_102
0x332	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_102
0x336	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_102
0x33a	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_102
0x33e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_102	CALL_2
0x342	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_102	CALL_2
0x345	      0xe800000000	                          call 0x400038a	       279	strbuf.h	FUNCTION_102	CALL_2
0x34a	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_102	CALL_2
0x34d	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_102	CALL_2
0x351	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_102	CALL_2
0x355	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_102	CALL_2
0x358	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_102	CALL_2
0x35b	      0xe800000000	                          call 0x40003a0	       279	strbuf.h	FUNCTION_102	CALL_2
0x360	              0x90	                                     nop	       280	strbuf.h	FUNCTION_102
0x361	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_102
0x362	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_102
get_conf_item	CALL,4:DO,0:SWITCH,0:WHILE,0:functions,1:ELSE,0:FOR,0:IF,0	46
0x1460	              0x55	                                push rbp	       438	trailer.c	FUNCTION_26
0x1461	          0x4889e5	                            mov rbp, rsp	       438	trailer.c	FUNCTION_26
0x1464	        0x4883ec20	                           sub rsp, 0x20	       438	trailer.c	FUNCTION_26
0x1468	        0x48897de8	             mov qword [rbp - 0x18], rdi	       438	trailer.c	FUNCTION_26
0x146c	    0x488b05000000	            mov rax, qword [0x040014b3] 	       443	trailer.c	FUNCTION_26	FUNCTION_1
0x1473	        0x488945f0	             mov qword [rbp - 0x10], rax	       443	trailer.c	FUNCTION_26	FUNCTION_1
0x1477	            0xeb34	                           jmp 0x40014ed	       443	trailer.c	FUNCTION_26	FUNCTION_1
0x1479	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       444	trailer.c	FUNCTION_26	FUNCTION_1	CALL_1
0x147d	        0x488945f8	                mov qword [rbp - 8], rax	       444	trailer.c	FUNCTION_26	FUNCTION_1	CALL_1
0x1481	        0x488b45f8	                mov rax, qword [rbp - 8]	       445	trailer.c	FUNCTION_26	FUNCTION_1	IF_1	CALL_2
0x1485	        0x488b4020	            mov rax, qword [rax + 0x20] 	       445	trailer.c	FUNCTION_26	FUNCTION_1	IF_1	CALL_2
0x1489	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       445	trailer.c	FUNCTION_26	FUNCTION_1	IF_1	CALL_2
0x148d	          0x4889d6	                            mov rsi, rdx	       445	trailer.c	FUNCTION_26	FUNCTION_1	IF_1	CALL_2
0x1490	          0x4889c7	                            mov rdi, rax	       445	trailer.c	FUNCTION_26	FUNCTION_1	IF_1	CALL_2
0x1493	      0xe800000000	                          call 0x40014d8	       445	trailer.c	FUNCTION_26	FUNCTION_1	IF_1	CALL_2
0x1498	            0x85c0	                           test eax, eax	       445	trailer.c	FUNCTION_26	FUNCTION_1	IF_1	CALL_2
0x149a	            0x7506	                           jne 0x40014e2	       445	trailer.c	FUNCTION_26	FUNCTION_1	IF_1	CALL_2
0x149c	        0x488b45f8	                mov rax, qword [rbp - 8]	       446	trailer.c	FUNCTION_26	FUNCTION_1	IF_1
0x14a0	            0xeb69	                           jmp 0x400154b	       446	trailer.c	FUNCTION_26	FUNCTION_1	IF_1
0x14a2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       443	trailer.c	FUNCTION_26	FUNCTION_1
0x14a6	          0x488b00	                    mov rax, qword [rax]	       443	trailer.c	FUNCTION_26	FUNCTION_1
0x14a9	        0x488945f0	             mov qword [rbp - 0x10], rax	       443	trailer.c	FUNCTION_26	FUNCTION_1
0x14ad	    0x48817df00000	               cmp qword [rbp - 0x10], 0	       443	trailer.c	FUNCTION_26	FUNCTION_1
0x14b5	            0x75c2	                           jne 0x40014b9	       443	trailer.c	FUNCTION_26	FUNCTION_1
0x14b7	      0xbe01000000	                              mov esi, 1	       450	trailer.c	FUNCTION_26	CALL_1
0x14bc	      0xbf48000000	                           mov edi, 0x48	       450	trailer.c	FUNCTION_26	CALL_1
0x14c1	      0xe800000000	                          call 0x4001506	       450	trailer.c	FUNCTION_26	CALL_1
0x14c6	        0x488945f8	                mov qword [rbp - 8], rax	       450	trailer.c	FUNCTION_26	CALL_1
0x14ca	        0x488b45f8	                mov rax, qword [rbp - 8]	       451	trailer.c	FUNCTION_26	CALL_2
0x14ce	        0x4883c020	                           add rax, 0x20	       451	trailer.c	FUNCTION_26	CALL_2
0x14d2	      0xbe00000000	                              mov esi, 0	       451	trailer.c	FUNCTION_26	CALL_2
0x14d7	          0x4889c7	                            mov rdi, rax	       451	trailer.c	FUNCTION_26	CALL_2
0x14da	      0xe8f1feffff	                 call sym.duplicate_conf	       451	trailer.c	FUNCTION_26	CALL_2
0x14df	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       452	trailer.c	FUNCTION_26	CALL_3
0x14e3	          0x4889c7	                            mov rdi, rax	       452	trailer.c	FUNCTION_26	CALL_3
0x14e6	      0xe800000000	                          call 0x400152b	       452	trailer.c	FUNCTION_26	CALL_3
0x14eb	          0x4889c2	                            mov rdx, rax	       452	trailer.c	FUNCTION_26	CALL_3
0x14ee	        0x488b45f8	                mov rax, qword [rbp - 8]	       452	trailer.c	FUNCTION_26	CALL_3
0x14f2	        0x48895020	             mov qword [rax + 0x20], rdx	       452	trailer.c	FUNCTION_26	CALL_3
0x14f6	        0x488b45f8	                mov rax, qword [rbp - 8]	       454	trailer.c	FUNCTION_26	CALL_4
0x14fa	      0xbe00000000	                              mov esi, 0	       454	trailer.c	FUNCTION_26	CALL_4
0x14ff	          0x4889c7	                            mov rdi, rax	       454	trailer.c	FUNCTION_26	CALL_4
0x1502	      0xe8f7eeffff	                  call sym.list_add_tail	       454	trailer.c	FUNCTION_26	CALL_4
0x1507	        0x488b45f8	                mov rax, qword [rbp - 8]	       456	trailer.c	FUNCTION_26
0x150b	              0xc9	                                   leave	       457	trailer.c	FUNCTION_26
0x150c	              0xc3	                                     ret	       457	trailer.c	FUNCTION_26
git_trailer_config	CALL,23:DO,0:SWITCH,1:WHILE,0:functions,0:ELSE,0:FOR,1:IF,9	192
0x16b4	              0x55	                                push rbp	       505	trailer.c	FUNCTION_28
0x16b5	          0x4889e5	                            mov rbp, rsp	       505	trailer.c	FUNCTION_28
0x16b8	        0x4883ec60	                           sub rsp, 0x60	       505	trailer.c	FUNCTION_28
0x16bc	        0x48897db8	             mov qword [rbp - 0x48], rdi	       505	trailer.c	FUNCTION_28
0x16c0	        0x488975b0	             mov qword [rbp - 0x50], rsi	       505	trailer.c	FUNCTION_28
0x16c4	        0x488955a8	             mov qword [rbp - 0x58], rdx	       505	trailer.c	FUNCTION_28
0x16c8	    0x64488b042528	                mov rax, qword fs:[0x28]	       505	trailer.c	FUNCTION_28
0x16d1	        0x488945f8	                mov qword [rbp - 8], rax	       505	trailer.c	FUNCTION_28
0x16d5	            0x31c0	                            xor eax, eax	       505	trailer.c	FUNCTION_28
0x16d7	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       509	trailer.c	FUNCTION_28
0x16df	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       513	trailer.c	FUNCTION_28	IF_1	CALL_1
0x16e3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       513	trailer.c	FUNCTION_28	IF_1	CALL_1
0x16e7	      0xbe00000000	                              mov esi, 0	       513	trailer.c	FUNCTION_28	IF_1	CALL_1
0x16ec	          0x4889c7	                            mov rdi, rax	       513	trailer.c	FUNCTION_28	IF_1	CALL_1
0x16ef	      0xe817e9ffff	                    call sym.skip_prefix	       513	trailer.c	FUNCTION_28	IF_1	CALL_1
0x16f4	            0x85c0	                           test eax, eax	       513	trailer.c	FUNCTION_28	IF_1	CALL_1
0x16f6	            0x750a	                           jne 0x4001742	       513	trailer.c	FUNCTION_28	IF_1	CALL_1
0x16f8	      0xb800000000	                              mov eax, 0	       514	trailer.c	FUNCTION_28	IF_1
0x16fd	      0xe977020000	                           jmp 0x40019b9	       514	trailer.c	FUNCTION_28	IF_1
0x1702	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       516	trailer.c	FUNCTION_28	CALL_2
0x1706	      0xbe2e000000	                           mov esi, 0x2e	       516	trailer.c	FUNCTION_28	CALL_2
0x170b	          0x4889c7	                            mov rdi, rax	       516	trailer.c	FUNCTION_28	CALL_2
0x170e	      0xe800000000	                          call 0x4001753	       516	trailer.c	FUNCTION_28	CALL_2
0x1713	        0x488945e0	             mov qword [rbp - 0x20], rax	       516	trailer.c	FUNCTION_28	CALL_2
0x1717	      0x48837de000	               cmp qword [rbp - 0x20], 0	       517	trailer.c	FUNCTION_28	IF_2
0x171c	            0x750a	                           jne 0x4001768	       517	trailer.c	FUNCTION_28	IF_2
0x171e	      0xb800000000	                              mov eax, 0	       518	trailer.c	FUNCTION_28	IF_2
0x1723	      0xe951020000	                           jmp 0x40019b9	       518	trailer.c	FUNCTION_28	IF_2
0x1728	      0x488345e001	               add qword [rbp - 0x20], 1	       520	trailer.c	FUNCTION_28
0x172d	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       521	trailer.c	FUNCTION_28	FOR_1	CALL_3
0x1734	            0xeb66	                           jmp 0x40017dc	       521	trailer.c	FUNCTION_28	FOR_1	CALL_3
0x1736	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_4
0x1739	            0x4898	                                    cdqe	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_4
0x173b	        0x48c1e004	                              shl rax, 4	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_4
0x173f	    0x480500000000	                              add rax, 0	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_4
0x1745	          0x488b00	                    mov rax, qword [rax]	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_4
0x1748	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_4
0x174c	          0x4889d6	                            mov rsi, rdx	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_4
0x174f	          0x4889c7	                            mov rdi, rax	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_4
0x1752	      0xe800000000	                          call 0x4001797	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_4
0x1757	            0x85c0	                           test eax, eax	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_4
0x1759	            0x7406	                            je 0x40017a1	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_4
0x175b	        0x8345cc01	               add dword [rbp - 0x34], 1	       521	trailer.c	FUNCTION_28	FOR_1	CALL_3
0x175f	            0xeb3b	                           jmp 0x40017dc	       521	trailer.c	FUNCTION_28	FOR_1	CALL_3
0x1761	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       524	trailer.c	FUNCTION_28	FOR_1	CALL_5
0x1765	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       524	trailer.c	FUNCTION_28	FOR_1	CALL_5
0x1769	          0x4829d0	                            sub rax, rdx	       524	trailer.c	FUNCTION_28	FOR_1	CALL_5
0x176c	        0x4883e801	                              sub rax, 1	       524	trailer.c	FUNCTION_28	FOR_1	CALL_5
0x1770	          0x4889c2	                            mov rdx, rax	       524	trailer.c	FUNCTION_28	FOR_1	CALL_5
0x1773	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       524	trailer.c	FUNCTION_28	FOR_1	CALL_5
0x1777	          0x4889d6	                            mov rsi, rdx	       524	trailer.c	FUNCTION_28	FOR_1	CALL_5
0x177a	          0x4889c7	                            mov rdi, rax	       524	trailer.c	FUNCTION_28	FOR_1	CALL_5
0x177d	      0xe800000000	                          call 0x40017c2	       524	trailer.c	FUNCTION_28	FOR_1	CALL_5
0x1782	        0x488945d8	             mov qword [rbp - 0x28], rax	       524	trailer.c	FUNCTION_28	FOR_1	CALL_5
0x1786	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       525	trailer.c	FUNCTION_28	FOR_1
0x1789	            0x4898	                                    cdqe	       525	trailer.c	FUNCTION_28	FOR_1
0x178b	        0x48c1e004	                              shl rax, 4	       525	trailer.c	FUNCTION_28	FOR_1
0x178f	    0x480500000000	                              add rax, 0	       525	trailer.c	FUNCTION_28	FOR_1
0x1795	            0x8b00	                    mov eax, dword [rax]	       525	trailer.c	FUNCTION_28	FOR_1
0x1797	          0x8945c8	             mov dword [rbp - 0x38], eax	       525	trailer.c	FUNCTION_28	FOR_1
0x179a	            0xeb08	                           jmp 0x40017e4	       526	trailer.c	FUNCTION_28	FOR_1
0x179c	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       521	trailer.c	FUNCTION_28	FOR_1	CALL_3
0x179f	          0x83f804	                              cmp eax, 4	       521	trailer.c	FUNCTION_28	FOR_1	CALL_3
0x17a2	            0x7692	                           jbe 0x4001776	       521	trailer.c	FUNCTION_28	FOR_1	CALL_3
0x17a4	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       529	trailer.c	FUNCTION_28	IF_4
0x17a9	            0x750a	                           jne 0x40017f5	       529	trailer.c	FUNCTION_28	IF_4
0x17ab	      0xb800000000	                              mov eax, 0	       530	trailer.c	FUNCTION_28	IF_4
0x17b0	      0xe9c4010000	                           jmp 0x40019b9	       530	trailer.c	FUNCTION_28	IF_4
0x17b5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       532	trailer.c	FUNCTION_28	CALL_6
0x17b9	          0x4889c7	                            mov rdi, rax	       532	trailer.c	FUNCTION_28	CALL_6
0x17bc	      0xe89ffcffff	                  call sym.get_conf_item	       532	trailer.c	FUNCTION_28	CALL_6
0x17c1	        0x488945e8	             mov qword [rbp - 0x18], rax	       532	trailer.c	FUNCTION_28	CALL_6
0x17c5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       533	trailer.c	FUNCTION_28
0x17c9	        0x4883c020	                           add rax, 0x20	       533	trailer.c	FUNCTION_28
0x17cd	        0x488945f0	             mov qword [rbp - 0x10], rax	       533	trailer.c	FUNCTION_28
0x17d1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       534	trailer.c	FUNCTION_28	CALL_7
0x17d5	          0x4889c7	                            mov rdi, rax	       534	trailer.c	FUNCTION_28	CALL_7
0x17d8	      0xe800000000	                          call 0x400181d	       534	trailer.c	FUNCTION_28	CALL_7
0x17dd	        0x837dc804	               cmp dword [rbp - 0x38], 4	       536	trailer.c	FUNCTION_28	SWITCH_1
0x17e1	     0xf8772010000	                            ja 0x4001999	       536	trailer.c	FUNCTION_28	SWITCH_1
0x17e7	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       536	trailer.c	FUNCTION_28	SWITCH_1
0x17ea	    0x488b04c50000	                  mov rax, qword [rax*8]	       536	trailer.c	FUNCTION_28	SWITCH_1
0x17f2	            0xffe0	                                 jmp rax	       536	trailer.c	FUNCTION_28	SWITCH_1
0x17f4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       538	trailer.c	FUNCTION_28	SWITCH_1	IF_5
0x17f8	        0x488b4008	                mov rax, qword [rax + 8]	       538	trailer.c	FUNCTION_28	SWITCH_1	IF_5
0x17fc	          0x4885c0	                           test rax, rax	       538	trailer.c	FUNCTION_28	SWITCH_1	IF_5
0x17ff	            0x7421	                            je 0x4001862	       538	trailer.c	FUNCTION_28	SWITCH_1	IF_5
0x1801	      0xbf00000000	                              mov edi, 0	       539	trailer.c	FUNCTION_28	SWITCH_1	CALL_9
0x1806	      0xe8a2ecffff	                               call sym.	       539	trailer.c	FUNCTION_28	SWITCH_1	CALL_9
0x180b	          0x4889c2	                            mov rdx, rax	       539	trailer.c	FUNCTION_28	SWITCH_1	CALL_9
0x180e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       539	trailer.c	FUNCTION_28	SWITCH_1	CALL_9
0x1812	          0x4889c6	                            mov rsi, rax	       539	trailer.c	FUNCTION_28	SWITCH_1	CALL_9
0x1815	          0x4889d7	                            mov rdi, rdx	       539	trailer.c	FUNCTION_28	SWITCH_1	CALL_9
0x1818	      0xb800000000	                              mov eax, 0	       539	trailer.c	FUNCTION_28	SWITCH_1	CALL_9
0x181d	      0xe800000000	                          call 0x4001862	       539	trailer.c	FUNCTION_28	SWITCH_1	CALL_9
0x1822	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       540	trailer.c	FUNCTION_28	SWITCH_1	CALL_10
0x1826	          0x4889c7	                            mov rdi, rax	       540	trailer.c	FUNCTION_28	SWITCH_1	CALL_10
0x1829	      0xe800000000	                          call 0x400186e	       540	trailer.c	FUNCTION_28	SWITCH_1	CALL_10
0x182e	          0x4889c2	                            mov rdx, rax	       540	trailer.c	FUNCTION_28	SWITCH_1	CALL_10
0x1831	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       540	trailer.c	FUNCTION_28	SWITCH_1	CALL_10
0x1835	        0x48895008	                mov qword [rax + 8], rdx	       540	trailer.c	FUNCTION_28	SWITCH_1	CALL_10
0x1839	      0xe936010000	                           jmp 0x40019b4	       541	trailer.c	FUNCTION_28	SWITCH_1
0x183e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       543	trailer.c	FUNCTION_28	SWITCH_1	IF_6
0x1842	        0x488b4010	            mov rax, qword [rax + 0x10] 	       543	trailer.c	FUNCTION_28	SWITCH_1	IF_6
0x1846	          0x4885c0	                           test rax, rax	       543	trailer.c	FUNCTION_28	SWITCH_1	IF_6
0x1849	            0x7421	                            je 0x40018ac	       543	trailer.c	FUNCTION_28	SWITCH_1	IF_6
0x184b	      0xbf00000000	                              mov edi, 0	       544	trailer.c	FUNCTION_28	SWITCH_1	CALL_12
0x1850	      0xe858ecffff	                               call sym.	       544	trailer.c	FUNCTION_28	SWITCH_1	CALL_12
0x1855	          0x4889c2	                            mov rdx, rax	       544	trailer.c	FUNCTION_28	SWITCH_1	CALL_12
0x1858	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       544	trailer.c	FUNCTION_28	SWITCH_1	CALL_12
0x185c	          0x4889c6	                            mov rsi, rax	       544	trailer.c	FUNCTION_28	SWITCH_1	CALL_12
0x185f	          0x4889d7	                            mov rdi, rdx	       544	trailer.c	FUNCTION_28	SWITCH_1	CALL_12
0x1862	      0xb800000000	                              mov eax, 0	       544	trailer.c	FUNCTION_28	SWITCH_1	CALL_12
0x1867	      0xe800000000	                          call 0x40018ac	       544	trailer.c	FUNCTION_28	SWITCH_1	CALL_12
0x186c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       545	trailer.c	FUNCTION_28	SWITCH_1	CALL_13
0x1870	          0x4889c7	                            mov rdi, rax	       545	trailer.c	FUNCTION_28	SWITCH_1	CALL_13
0x1873	      0xe800000000	                          call 0x40018b8	       545	trailer.c	FUNCTION_28	SWITCH_1	CALL_13
0x1878	          0x4889c2	                            mov rdx, rax	       545	trailer.c	FUNCTION_28	SWITCH_1	CALL_13
0x187b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       545	trailer.c	FUNCTION_28	SWITCH_1	CALL_13
0x187f	        0x48895010	             mov qword [rax + 0x10], rdx	       545	trailer.c	FUNCTION_28	SWITCH_1	CALL_13
0x1883	      0xe9ec000000	                           jmp 0x40019b4	       546	trailer.c	FUNCTION_28	SWITCH_1
0x1888	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       548	trailer.c	FUNCTION_28	SWITCH_1	IF_7	CALL_14
0x188c	        0x488d5018	                   lea rdx, [rax + 0x18]	       548	trailer.c	FUNCTION_28	SWITCH_1	IF_7	CALL_14
0x1890	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       548	trailer.c	FUNCTION_28	SWITCH_1	IF_7	CALL_14
0x1894	          0x4889c6	                            mov rsi, rax	       548	trailer.c	FUNCTION_28	SWITCH_1	IF_7	CALL_14
0x1897	          0x4889d7	                            mov rdi, rdx	       548	trailer.c	FUNCTION_28	SWITCH_1	IF_7	CALL_14
0x189a	      0xe800000000	                          call 0x40018df	       548	trailer.c	FUNCTION_28	SWITCH_1	IF_7	CALL_14
0x189f	            0x85c0	                           test eax, eax	       548	trailer.c	FUNCTION_28	SWITCH_1	IF_7	CALL_14
0x18a1	     0xf84c6000000	                            je 0x40019ad	       548	trailer.c	FUNCTION_28	SWITCH_1	IF_7	CALL_14
0x18a7	      0xbf00000000	                              mov edi, 0	       549	trailer.c	FUNCTION_28	SWITCH_1	CALL_16
0x18ac	      0xe8fcebffff	                               call sym.	       549	trailer.c	FUNCTION_28	SWITCH_1	CALL_16
0x18b1	          0x4889c1	                            mov rcx, rax	       549	trailer.c	FUNCTION_28	SWITCH_1	CALL_16
0x18b4	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       549	trailer.c	FUNCTION_28	SWITCH_1	CALL_16
0x18b8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       549	trailer.c	FUNCTION_28	SWITCH_1	CALL_16
0x18bc	          0x4889c6	                            mov rsi, rax	       549	trailer.c	FUNCTION_28	SWITCH_1	CALL_16
0x18bf	          0x4889cf	                            mov rdi, rcx	       549	trailer.c	FUNCTION_28	SWITCH_1	CALL_16
0x18c2	      0xb800000000	                              mov eax, 0	       549	trailer.c	FUNCTION_28	SWITCH_1	CALL_16
0x18c7	      0xe800000000	                          call 0x400190c	       549	trailer.c	FUNCTION_28	SWITCH_1	CALL_16
0x18cc	      0xe99c000000	                           jmp 0x40019ad	       550	trailer.c	FUNCTION_28	SWITCH_1
0x18d1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       552	trailer.c	FUNCTION_28	SWITCH_1	IF_8	CALL_17
0x18d5	        0x488d501c	                   lea rdx, [rax + 0x1c]	       552	trailer.c	FUNCTION_28	SWITCH_1	IF_8	CALL_17
0x18d9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       552	trailer.c	FUNCTION_28	SWITCH_1	IF_8	CALL_17
0x18dd	          0x4889c6	                            mov rsi, rax	       552	trailer.c	FUNCTION_28	SWITCH_1	IF_8	CALL_17
0x18e0	          0x4889d7	                            mov rdi, rdx	       552	trailer.c	FUNCTION_28	SWITCH_1	IF_8	CALL_17
0x18e3	      0xe800000000	                          call 0x4001928	       552	trailer.c	FUNCTION_28	SWITCH_1	IF_8	CALL_17
0x18e8	            0x85c0	                           test eax, eax	       552	trailer.c	FUNCTION_28	SWITCH_1	IF_8	CALL_17
0x18ea	     0xf8480000000	                            je 0x40019b0	       552	trailer.c	FUNCTION_28	SWITCH_1	IF_8	CALL_17
0x18f0	      0xbf00000000	                              mov edi, 0	       553	trailer.c	FUNCTION_28	SWITCH_1	CALL_19
0x18f5	      0xe8b3ebffff	                               call sym.	       553	trailer.c	FUNCTION_28	SWITCH_1	CALL_19
0x18fa	          0x4889c1	                            mov rcx, rax	       553	trailer.c	FUNCTION_28	SWITCH_1	CALL_19
0x18fd	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       553	trailer.c	FUNCTION_28	SWITCH_1	CALL_19
0x1901	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       553	trailer.c	FUNCTION_28	SWITCH_1	CALL_19
0x1905	          0x4889c6	                            mov rsi, rax	       553	trailer.c	FUNCTION_28	SWITCH_1	CALL_19
0x1908	          0x4889cf	                            mov rdi, rcx	       553	trailer.c	FUNCTION_28	SWITCH_1	CALL_19
0x190b	      0xb800000000	                              mov eax, 0	       553	trailer.c	FUNCTION_28	SWITCH_1	CALL_19
0x1910	      0xe800000000	                          call 0x4001955	       553	trailer.c	FUNCTION_28	SWITCH_1	CALL_19
0x1915	            0xeb59	                           jmp 0x40019b0	       554	trailer.c	FUNCTION_28	SWITCH_1
0x1917	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       556	trailer.c	FUNCTION_28	SWITCH_1	IF_9	CALL_20
0x191b	        0x488d5020	                   lea rdx, [rax + 0x20]	       556	trailer.c	FUNCTION_28	SWITCH_1	IF_9	CALL_20
0x191f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       556	trailer.c	FUNCTION_28	SWITCH_1	IF_9	CALL_20
0x1923	          0x4889c6	                            mov rsi, rax	       556	trailer.c	FUNCTION_28	SWITCH_1	IF_9	CALL_20
0x1926	          0x4889d7	                            mov rdi, rdx	       556	trailer.c	FUNCTION_28	SWITCH_1	IF_9	CALL_20
0x1929	      0xe800000000	                          call 0x400196e	       556	trailer.c	FUNCTION_28	SWITCH_1	IF_9	CALL_20
0x192e	            0x85c0	                           test eax, eax	       556	trailer.c	FUNCTION_28	SWITCH_1	IF_9	CALL_20
0x1930	            0x7441	                            je 0x40019b3	       556	trailer.c	FUNCTION_28	SWITCH_1	IF_9	CALL_20
0x1932	      0xbf00000000	                              mov edi, 0	       557	trailer.c	FUNCTION_28	SWITCH_1	CALL_22
0x1937	      0xe871ebffff	                               call sym.	       557	trailer.c	FUNCTION_28	SWITCH_1	CALL_22
0x193c	          0x4889c1	                            mov rcx, rax	       557	trailer.c	FUNCTION_28	SWITCH_1	CALL_22
0x193f	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       557	trailer.c	FUNCTION_28	SWITCH_1	CALL_22
0x1943	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       557	trailer.c	FUNCTION_28	SWITCH_1	CALL_22
0x1947	          0x4889c6	                            mov rsi, rax	       557	trailer.c	FUNCTION_28	SWITCH_1	CALL_22
0x194a	          0x4889cf	                            mov rdi, rcx	       557	trailer.c	FUNCTION_28	SWITCH_1	CALL_22
0x194d	      0xb800000000	                              mov eax, 0	       557	trailer.c	FUNCTION_28	SWITCH_1	CALL_22
0x1952	      0xe800000000	                          call 0x4001997	       557	trailer.c	FUNCTION_28	SWITCH_1	CALL_22
0x1957	            0xeb1a	                           jmp 0x40019b3	       558	trailer.c	FUNCTION_28	SWITCH_1
0x1959	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       560	trailer.c	FUNCTION_28	SWITCH_1	CALL_23
0x195c	            0x89c6	                            mov esi, eax	       560	trailer.c	FUNCTION_28	SWITCH_1	CALL_23
0x195e	      0xbf00000000	                              mov edi, 0	       560	trailer.c	FUNCTION_28	SWITCH_1	CALL_23
0x1963	      0xb800000000	                              mov eax, 0	       560	trailer.c	FUNCTION_28	SWITCH_1	CALL_23
0x1968	      0xe800000000	                          call 0x40019ad	       560	trailer.c	FUNCTION_28	SWITCH_1	CALL_23
0x196d	              0x90	                                     nop	       550	trailer.c	FUNCTION_28	SWITCH_1
0x196e	            0xeb04	                           jmp 0x40019b4	       550	trailer.c	FUNCTION_28	SWITCH_1
0x1970	              0x90	                                     nop	       554	trailer.c	FUNCTION_28	SWITCH_1
0x1971	            0xeb01	                           jmp 0x40019b4	       554	trailer.c	FUNCTION_28	SWITCH_1
0x1973	              0x90	                                     nop	       558	trailer.c	FUNCTION_28	SWITCH_1
0x1974	      0xb800000000	                              mov eax, 0	       562	trailer.c	FUNCTION_28
0x1979	        0x488b4df8	                mov rcx, qword [rbp - 8]	       563	trailer.c	FUNCTION_28
0x197d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       563	trailer.c	FUNCTION_28
0x1986	            0x7405	                            je 0x40019cd	       563	trailer.c	FUNCTION_28
0x1988	      0xe800000000	                          call 0x40019cd	       563	trailer.c	FUNCTION_28
0x198d	              0xc9	                                   leave	       563	trailer.c	FUNCTION_28
0x198e	              0xc3	                                     ret	       563	trailer.c	FUNCTION_28
__list_del	CALL,0:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,0	13
0x443	              0x55	                                push rbp	        71	list.h	FUNCTION_55
0x444	          0x4889e5	                            mov rbp, rsp	        71	list.h	FUNCTION_55
0x447	        0x48897df8	                mov qword [rbp - 8], rdi	        71	list.h	FUNCTION_55
0x44b	        0x488975f0	             mov qword [rbp - 0x10], rsi	        71	list.h	FUNCTION_55
0x44f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        72	list.h	FUNCTION_55
0x453	        0x488b55f8	                mov rdx, qword [rbp - 8]	        72	list.h	FUNCTION_55
0x457	        0x48895008	                mov qword [rax + 8], rdx	        72	list.h	FUNCTION_55
0x45b	        0x488b45f8	                mov rax, qword [rbp - 8]	        73	list.h	FUNCTION_55
0x45f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        73	list.h	FUNCTION_55
0x463	          0x488910	                    mov qword [rax], rdx	        73	list.h	FUNCTION_55
0x466	              0x90	                                     nop	        74	list.h	FUNCTION_55
0x467	              0x5d	                                 pop rbp	        74	list.h	FUNCTION_55
0x468	              0xc3	                                     ret	        74	list.h	FUNCTION_55
token_len_without_separator	CALL,1:DO,0:SWITCH,0:WHILE,1:functions,0:ELSE,0:FOR,0:IF,0	23
0x544	              0x55	                                push rbp	        73	trailer.c	FUNCTION_2
0x545	          0x4889e5	                            mov rbp, rsp	        73	trailer.c	FUNCTION_2
0x548	        0x48897df8	                mov qword [rbp - 8], rdi	        73	trailer.c	FUNCTION_2
0x54c	        0x488975f0	             mov qword [rbp - 0x10], rsi	        73	trailer.c	FUNCTION_2
0x550	            0xeb05	                           jmp 0x4000597	        74	trailer.c	FUNCTION_2	WHILE_1	CALL_1
0x552	      0x48836df001	               sub qword [rbp - 0x10], 1	        75	trailer.c	FUNCTION_2	WHILE_1
0x557	      0x48837df000	               cmp qword [rbp - 0x10], 0	        74	trailer.c	FUNCTION_2	WHILE_1	CALL_1
0x55c	            0x7428	                            je 0x40005c6	        74	trailer.c	FUNCTION_2	WHILE_1	CALL_1
0x55e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        74	trailer.c	FUNCTION_2	WHILE_1	CALL_1
0x562	        0x488d50ff	                      lea rdx, [rax - 1]	        74	trailer.c	FUNCTION_2	WHILE_1	CALL_1
0x566	        0x488b45f8	                mov rax, qword [rbp - 8]	        74	trailer.c	FUNCTION_2	WHILE_1	CALL_1
0x56a	          0x4801d0	                            add rax, rdx	        74	trailer.c	FUNCTION_2	WHILE_1	CALL_1
0x56d	           0xfb600	                   movzx eax, byte [rax]	        74	trailer.c	FUNCTION_2	WHILE_1	CALL_1
0x570	           0xfb6c0	                           movzx eax, al	        74	trailer.c	FUNCTION_2	WHILE_1	CALL_1
0x573	            0x4898	                                    cdqe	        74	trailer.c	FUNCTION_2	WHILE_1	CALL_1
0x575	     0xfb680000000	                   movzx eax, byte [rax]	        74	trailer.c	FUNCTION_2	WHILE_1	CALL_1
0x57c	           0xfb6c0	                           movzx eax, al	        74	trailer.c	FUNCTION_2	WHILE_1	CALL_1
0x57f	          0x83e006	                              and eax, 6	        74	trailer.c	FUNCTION_2	WHILE_1	CALL_1
0x582	            0x85c0	                           test eax, eax	        74	trailer.c	FUNCTION_2	WHILE_1	CALL_1
0x584	            0x74cc	                            je 0x4000592	        74	trailer.c	FUNCTION_2	WHILE_1	CALL_1
0x586	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        76	trailer.c	FUNCTION_2
0x58a	              0x5d	                                 pop rbp	        77	trailer.c	FUNCTION_2
0x58b	              0xc3	                                     ret	        77	trailer.c	FUNCTION_2
token_matches_item	CALL,2:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,1	38
0x1a22	              0x55	                                push rbp	       589	trailer.c	FUNCTION_31
0x1a23	          0x4889e5	                            mov rbp, rsp	       589	trailer.c	FUNCTION_31
0x1a26	        0x4883ec20	                           sub rsp, 0x20	       589	trailer.c	FUNCTION_31
0x1a2a	        0x48897df8	                mov qword [rbp - 8], rdi	       589	trailer.c	FUNCTION_31
0x1a2e	        0x488975f0	             mov qword [rbp - 0x10], rsi	       589	trailer.c	FUNCTION_31
0x1a32	          0x8955ec	             mov dword [rbp - 0x14], edx	       589	trailer.c	FUNCTION_31
0x1a35	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       590	trailer.c	FUNCTION_31	IF_1	CALL_1
0x1a38	          0x4863d0	                         movsxd rdx, eax	       590	trailer.c	FUNCTION_31	IF_1	CALL_1
0x1a3b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       590	trailer.c	FUNCTION_31	IF_1	CALL_1
0x1a3f	        0x488b4820	            mov rcx, qword [rax + 0x20] 	       590	trailer.c	FUNCTION_31	IF_1	CALL_1
0x1a43	        0x488b45f8	                mov rax, qword [rbp - 8]	       590	trailer.c	FUNCTION_31	IF_1	CALL_1
0x1a47	          0x4889ce	                            mov rsi, rcx	       590	trailer.c	FUNCTION_31	IF_1	CALL_1
0x1a4a	          0x4889c7	                            mov rdi, rax	       590	trailer.c	FUNCTION_31	IF_1	CALL_1
0x1a4d	      0xe800000000	                          call 0x4001a92	       590	trailer.c	FUNCTION_31	IF_1	CALL_1
0x1a52	            0x85c0	                           test eax, eax	       590	trailer.c	FUNCTION_31	IF_1	CALL_1
0x1a54	            0x7507	                           jne 0x4001a9d	       590	trailer.c	FUNCTION_31	IF_1	CALL_1
0x1a56	      0xb801000000	                              mov eax, 1	       591	trailer.c	FUNCTION_31	IF_1
0x1a5b	            0xeb3b	                           jmp 0x4001ad8	       591	trailer.c	FUNCTION_31	IF_1
0x1a5d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       592	trailer.c	FUNCTION_31	CALL_2
0x1a61	        0x488b4028	            mov rax, qword [rax + 0x28] 	       592	trailer.c	FUNCTION_31	CALL_2
0x1a65	          0x4885c0	                           test rax, rax	       592	trailer.c	FUNCTION_31	CALL_2
0x1a68	            0x7428	                            je 0x4001ad2	       592	trailer.c	FUNCTION_31	CALL_2
0x1a6a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       592	trailer.c	FUNCTION_31	CALL_2
0x1a6d	          0x4863d0	                         movsxd rdx, eax	       592	trailer.c	FUNCTION_31	CALL_2
0x1a70	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       592	trailer.c	FUNCTION_31	CALL_2
0x1a74	        0x488b4828	            mov rcx, qword [rax + 0x28] 	       592	trailer.c	FUNCTION_31	CALL_2
0x1a78	        0x488b45f8	                mov rax, qword [rbp - 8]	       592	trailer.c	FUNCTION_31	CALL_2
0x1a7c	          0x4889ce	                            mov rsi, rcx	       592	trailer.c	FUNCTION_31	CALL_2
0x1a7f	          0x4889c7	                            mov rdi, rax	       592	trailer.c	FUNCTION_31	CALL_2
0x1a82	      0xe800000000	                          call 0x4001ac7	       592	trailer.c	FUNCTION_31	CALL_2
0x1a87	            0x85c0	                           test eax, eax	       592	trailer.c	FUNCTION_31	CALL_2
0x1a89	            0x7507	                           jne 0x4001ad2	       592	trailer.c	FUNCTION_31	CALL_2
0x1a8b	      0xb801000000	                              mov eax, 1	       592	trailer.c	FUNCTION_31	CALL_2
0x1a90	            0xeb05	                           jmp 0x4001ad7	       592	trailer.c	FUNCTION_31	CALL_2
0x1a92	      0xb800000000	                              mov eax, 0	       592	trailer.c	FUNCTION_31	CALL_2
0x1a97	              0x90	                                     nop	       592	trailer.c	FUNCTION_31	CALL_2
0x1a98	              0xc9	                                   leave	       593	trailer.c	FUNCTION_31
0x1a99	              0xc3	                                     ret	       593	trailer.c	FUNCTION_31
strbuf_swap	CALL,1:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,0	39
0x15c	              0x55	                                push rbp	       126	strbuf.h	FUNCTION_98
0x15d	          0x4889e5	                            mov rbp, rsp	       126	strbuf.h	FUNCTION_98
0x160	        0x4883ec40	                           sub rsp, 0x40	       126	strbuf.h	FUNCTION_98
0x164	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       126	strbuf.h	FUNCTION_98
0x168	        0x488975c0	             mov qword [rbp - 0x40], rsi	       126	strbuf.h	FUNCTION_98
0x16c	    0x64488b042528	                mov rax, qword fs:[0x28]	       126	strbuf.h	FUNCTION_98
0x175	        0x488945f8	                mov qword [rbp - 8], rax	       126	strbuf.h	FUNCTION_98
0x179	            0x31c0	                            xor eax, eax	       126	strbuf.h	FUNCTION_98
0x17b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       127	strbuf.h	FUNCTION_98	CALL_1
0x17f	        0x488945d0	             mov qword [rbp - 0x30], rax	       127	strbuf.h	FUNCTION_98	CALL_1
0x183	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       127	strbuf.h	FUNCTION_98	CALL_1
0x187	        0x488945d8	             mov qword [rbp - 0x28], rax	       127	strbuf.h	FUNCTION_98	CALL_1
0x18b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       127	strbuf.h	FUNCTION_98	CALL_1
0x18f	          0x488b10	                    mov rdx, qword [rax]	       127	strbuf.h	FUNCTION_98	CALL_1
0x192	        0x488955e0	             mov qword [rbp - 0x20], rdx	       127	strbuf.h	FUNCTION_98	CALL_1
0x196	        0x488b5008	                mov rdx, qword [rax + 8]	       127	strbuf.h	FUNCTION_98	CALL_1
0x19a	        0x488955e8	             mov qword [rbp - 0x18], rdx	       127	strbuf.h	FUNCTION_98	CALL_1
0x19e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       127	strbuf.h	FUNCTION_98	CALL_1
0x1a2	        0x488945f0	             mov qword [rbp - 0x10], rax	       127	strbuf.h	FUNCTION_98	CALL_1
0x1a6	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       127	strbuf.h	FUNCTION_98	CALL_1
0x1aa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       127	strbuf.h	FUNCTION_98	CALL_1
0x1ae	      0xba18000000	                           mov edx, 0x18	       127	strbuf.h	FUNCTION_98	CALL_1
0x1b3	          0x4889ce	                            mov rsi, rcx	       127	strbuf.h	FUNCTION_98	CALL_1
0x1b6	          0x4889c7	                            mov rdi, rax	       127	strbuf.h	FUNCTION_98	CALL_1
0x1b9	      0xe800000000	                          call 0x40001fe	       127	strbuf.h	FUNCTION_98	CALL_1
0x1be	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       127	strbuf.h	FUNCTION_98	CALL_1
0x1c2	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       127	strbuf.h	FUNCTION_98	CALL_1
0x1c6	          0x488910	                    mov qword [rax], rdx	       127	strbuf.h	FUNCTION_98	CALL_1
0x1c9	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       127	strbuf.h	FUNCTION_98	CALL_1
0x1cd	        0x48895008	                mov qword [rax + 8], rdx	       127	strbuf.h	FUNCTION_98	CALL_1
0x1d1	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       127	strbuf.h	FUNCTION_98	CALL_1
0x1d5	        0x48895010	             mov qword [rax + 0x10], rdx	       127	strbuf.h	FUNCTION_98	CALL_1
0x1d9	              0x90	                                     nop	       128	strbuf.h	FUNCTION_98
0x1da	        0x488b45f8	                mov rax, qword [rbp - 8]	       128	strbuf.h	FUNCTION_98
0x1de	    0x644833042528	                xor rax, qword fs:[0x28]	       128	strbuf.h	FUNCTION_98
0x1e7	            0x7405	                            je 0x400022e	       128	strbuf.h	FUNCTION_98
0x1e9	      0xe800000000	                          call 0x400022e	       128	strbuf.h	FUNCTION_98
0x1ee	              0xc9	                                   leave	       128	strbuf.h	FUNCTION_98
0x1ef	              0xc3	                                     ret	       128	strbuf.h	FUNCTION_98
trailer_set_if_exists	CALL,5:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,6:FOR,0:IF,6	60
0x1281	              0x55	                                push rbp	       398	trailer.c	ELSE_5	FUNCTION_23
0x1282	          0x4889e5	                            mov rbp, rsp	       398	trailer.c	ELSE_5	FUNCTION_23
0x1285	        0x4883ec10	                           sub rsp, 0x10	       398	trailer.c	ELSE_5	FUNCTION_23
0x1289	        0x48897df8	                mov qword [rbp - 8], rdi	       398	trailer.c	ELSE_5	FUNCTION_23
0x128d	        0x488975f0	             mov qword [rbp - 0x10], rsi	       398	trailer.c	ELSE_5	FUNCTION_23
0x1291	      0x48837df000	               cmp qword [rbp - 0x10], 0	       399	trailer.c	ELSE_5	FUNCTION_23	IF_1
0x1296	            0x750f	                           jne 0x40012e7	       399	trailer.c	ELSE_5	FUNCTION_23	IF_1
0x1298	        0x488b45f8	                mov rax, qword [rbp - 8]	       400	trailer.c	ELSE_5	FUNCTION_23	IF_1
0x129c	    0xc70000000000	                      mov dword [rax], 0	       400	trailer.c	ELSE_5	FUNCTION_23	IF_1
0x12a2	      0xe9af000000	                           jmp 0x4001396	       400	trailer.c	ELSE_5	FUNCTION_23	IF_1
0x12a7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       401	trailer.c	ELSE_5	FUNCTION_23	ELSE_1	IF_2	CALL_1
0x12ab	          0x4889c6	                            mov rsi, rax	       401	trailer.c	ELSE_5	FUNCTION_23	ELSE_1	IF_2	CALL_1
0x12ae	      0xbf00000000	                              mov edi, 0	       401	trailer.c	ELSE_5	FUNCTION_23	ELSE_1	IF_2	CALL_1
0x12b3	      0xe800000000	                          call 0x40012f8	       401	trailer.c	ELSE_5	FUNCTION_23	ELSE_1	IF_2	CALL_1
0x12b8	            0x85c0	                           test eax, eax	       401	trailer.c	ELSE_5	FUNCTION_23	ELSE_1	IF_2	CALL_1
0x12ba	            0x750f	                           jne 0x400130b	       401	trailer.c	ELSE_5	FUNCTION_23	ELSE_1	IF_2	CALL_1
0x12bc	        0x488b45f8	                mov rax, qword [rbp - 8]	       402	trailer.c	ELSE_5	FUNCTION_23	ELSE_1	IF_2
0x12c0	    0xc70002000000	                      mov dword [rax], 2	       402	trailer.c	ELSE_5	FUNCTION_23	ELSE_1	IF_2
0x12c6	      0xe98b000000	                           jmp 0x4001396	       402	trailer.c	ELSE_5	FUNCTION_23	ELSE_1	IF_2
0x12cb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       403	trailer.c	ELSE_5	FUNCTION_23	ELSE_2	IF_3	CALL_2
0x12cf	          0x4889c6	                            mov rsi, rax	       403	trailer.c	ELSE_5	FUNCTION_23	ELSE_2	IF_3	CALL_2
0x12d2	      0xbf00000000	                              mov edi, 0	       403	trailer.c	ELSE_5	FUNCTION_23	ELSE_2	IF_3	CALL_2
0x12d7	      0xe800000000	                          call 0x400131c	       403	trailer.c	ELSE_5	FUNCTION_23	ELSE_2	IF_3	CALL_2
0x12dc	            0x85c0	                           test eax, eax	       403	trailer.c	ELSE_5	FUNCTION_23	ELSE_2	IF_3	CALL_2
0x12de	            0x750c	                           jne 0x400132c	       403	trailer.c	ELSE_5	FUNCTION_23	ELSE_2	IF_3	CALL_2
0x12e0	        0x488b45f8	                mov rax, qword [rbp - 8]	       404	trailer.c	ELSE_5	FUNCTION_23	ELSE_2	IF_3
0x12e4	    0xc70001000000	                      mov dword [rax], 1	       404	trailer.c	ELSE_5	FUNCTION_23	ELSE_2	IF_3
0x12ea	            0xeb6a	                           jmp 0x4001396	       404	trailer.c	ELSE_5	FUNCTION_23	ELSE_2	IF_3
0x12ec	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       405	trailer.c	ELSE_5	FUNCTION_23	ELSE_3	IF_4	CALL_3
0x12f0	          0x4889c6	                            mov rsi, rax	       405	trailer.c	ELSE_5	FUNCTION_23	ELSE_3	IF_4	CALL_3
0x12f3	      0xbf00000000	                              mov edi, 0	       405	trailer.c	ELSE_5	FUNCTION_23	ELSE_3	IF_4	CALL_3
0x12f8	      0xe800000000	                          call 0x400133d	       405	trailer.c	ELSE_5	FUNCTION_23	ELSE_3	IF_4	CALL_3
0x12fd	            0x85c0	                           test eax, eax	       405	trailer.c	ELSE_5	FUNCTION_23	ELSE_3	IF_4	CALL_3
0x12ff	            0x750c	                           jne 0x400134d	       405	trailer.c	ELSE_5	FUNCTION_23	ELSE_3	IF_4	CALL_3
0x1301	        0x488b45f8	                mov rax, qword [rbp - 8]	       406	trailer.c	ELSE_5	FUNCTION_23	ELSE_3	IF_4
0x1305	    0xc70003000000	                      mov dword [rax], 3	       406	trailer.c	ELSE_5	FUNCTION_23	ELSE_3	IF_4
0x130b	            0xeb49	                           jmp 0x4001396	       406	trailer.c	ELSE_5	FUNCTION_23	ELSE_3	IF_4
0x130d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       407	trailer.c	ELSE_5	FUNCTION_23	ELSE_4	IF_5	CALL_4
0x1311	          0x4889c6	                            mov rsi, rax	       407	trailer.c	ELSE_5	FUNCTION_23	ELSE_4	IF_5	CALL_4
0x1314	      0xbf00000000	                              mov edi, 0	       407	trailer.c	ELSE_5	FUNCTION_23	ELSE_4	IF_5	CALL_4
0x1319	      0xe800000000	                          call 0x400135e	       407	trailer.c	ELSE_5	FUNCTION_23	ELSE_4	IF_5	CALL_4
0x131e	            0x85c0	                           test eax, eax	       407	trailer.c	ELSE_5	FUNCTION_23	ELSE_4	IF_5	CALL_4
0x1320	            0x750c	                           jne 0x400136e	       407	trailer.c	ELSE_5	FUNCTION_23	ELSE_4	IF_5	CALL_4
0x1322	        0x488b45f8	                mov rax, qword [rbp - 8]	       408	trailer.c	ELSE_5	FUNCTION_23	ELSE_4	IF_5
0x1326	    0xc70004000000	                      mov dword [rax], 4	       408	trailer.c	ELSE_5	FUNCTION_23	ELSE_4	IF_5
0x132c	            0xeb28	                           jmp 0x4001396	       408	trailer.c	ELSE_5	FUNCTION_23	ELSE_4	IF_5
0x132e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       409	trailer.c	FUNCTION_23	IF_6	CALL_5
0x1332	          0x4889c6	                            mov rsi, rax	       409	trailer.c	FUNCTION_23	IF_6	CALL_5
0x1335	      0xbf00000000	                              mov edi, 0	       409	trailer.c	FUNCTION_23	IF_6	CALL_5
0x133a	      0xe800000000	                          call 0x400137f	       409	trailer.c	FUNCTION_23	IF_6	CALL_5
0x133f	            0x85c0	                           test eax, eax	       409	trailer.c	FUNCTION_23	IF_6	CALL_5
0x1341	            0x750c	                           jne 0x400138f	       409	trailer.c	FUNCTION_23	IF_6	CALL_5
0x1343	        0x488b45f8	                mov rax, qword [rbp - 8]	       410	trailer.c	FUNCTION_23	IF_6	ELSE_5
0x1347	    0xc70005000000	                      mov dword [rax], 5	       410	trailer.c	FUNCTION_23	IF_6	ELSE_5
0x134d	            0xeb07	                           jmp 0x4001396	       410	trailer.c	FUNCTION_23	IF_6	ELSE_5
0x134f	      0xb8ffffffff	                     mov eax, 0xffffffff	       412	trailer.c	FUNCTION_23	ELSE_5	ELSE_6
0x1354	            0xeb05	                           jmp 0x400139b	       412	trailer.c	FUNCTION_23	ELSE_5	ELSE_6
0x1356	      0xb800000000	                              mov eax, 0	       413	trailer.c	FUNCTION_23	ELSE_5	ELSE_6
0x135b	              0xc9	                                   leave	       414	trailer.c	FUNCTION_23	ELSE_5	ELSE_6
0x135c	              0xc3	                                     ret	       414	trailer.c	FUNCTION_23	ELSE_5	ELSE_6
ends_with_blank_line	CALL,2:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,1	23
0x2520	              0x55	                                push rbp	       908	trailer.c	FUNCTION_43
0x2521	          0x4889e5	                            mov rbp, rsp	       908	trailer.c	FUNCTION_43
0x2524	        0x4883ec20	                           sub rsp, 0x20	       908	trailer.c	FUNCTION_43
0x2528	        0x48897de8	             mov qword [rbp - 0x18], rdi	       908	trailer.c	FUNCTION_43
0x252c	        0x488975e0	             mov qword [rbp - 0x20], rsi	       908	trailer.c	FUNCTION_43
0x2530	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       909	trailer.c	FUNCTION_43	CALL_1
0x2534	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       909	trailer.c	FUNCTION_43	CALL_1
0x2538	          0x4889d6	                            mov rsi, rdx	       909	trailer.c	FUNCTION_43	CALL_1
0x253b	          0x4889c7	                            mov rdi, rax	       909	trailer.c	FUNCTION_43	CALL_1
0x253e	      0xe819fcffff	                      call sym.last_line	       909	trailer.c	FUNCTION_43	CALL_1
0x2543	          0x8945fc	                mov dword [rbp - 4], eax	       909	trailer.c	FUNCTION_43	CALL_1
0x2546	        0x837dfc00	                  cmp dword [rbp - 4], 0	       910	trailer.c	FUNCTION_43	IF_1
0x254a	            0x7907	                           jns 0x4002593	       910	trailer.c	FUNCTION_43	IF_1
0x254c	      0xb800000000	                              mov eax, 0	       911	trailer.c	FUNCTION_43	IF_1
0x2551	            0xeb15	                           jmp 0x40025a8	       911	trailer.c	FUNCTION_43	IF_1
0x2553	          0x8b45fc	                mov eax, dword [rbp - 4]	       912	trailer.c	FUNCTION_43	CALL_2
0x2556	          0x4863d0	                         movsxd rdx, eax	       912	trailer.c	FUNCTION_43	CALL_2
0x2559	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       912	trailer.c	FUNCTION_43	CALL_2
0x255d	          0x4801d0	                            add rax, rdx	       912	trailer.c	FUNCTION_43	CALL_2
0x2560	          0x4889c7	                            mov rdi, rax	       912	trailer.c	FUNCTION_43	CALL_2
0x2563	      0xe85ae1ffff	                  call sym.is_blank_line	       912	trailer.c	FUNCTION_43	CALL_2
0x2568	              0xc9	                                   leave	       913	trailer.c	FUNCTION_43
0x2569	              0xc3	                                     ret	       913	trailer.c	FUNCTION_43
last_non_space_char	CALL,2:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,1:IF,1	34
0x861	              0x55	                                push rbp	       136	trailer.c	FUNCTION_10
0x862	          0x4889e5	                            mov rbp, rsp	       136	trailer.c	FUNCTION_10
0x865	        0x4883ec20	                           sub rsp, 0x20	       136	trailer.c	FUNCTION_10
0x869	        0x48897de8	             mov qword [rbp - 0x18], rdi	       136	trailer.c	FUNCTION_10
0x86d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       138	trailer.c	FUNCTION_10	FOR_1	CALL_1
0x871	          0x4889c7	                            mov rdi, rax	       138	trailer.c	FUNCTION_10	FOR_1	CALL_1
0x874	      0xe800000000	                          call 0x40008b9	       138	trailer.c	FUNCTION_10	FOR_1	CALL_1
0x879	          0x83e801	                              sub eax, 1	       138	trailer.c	FUNCTION_10	FOR_1	CALL_1
0x87c	          0x8945fc	                mov dword [rbp - 4], eax	       138	trailer.c	FUNCTION_10	FOR_1	CALL_1
0x87f	            0xeb3c	                           jmp 0x40008fd	       138	trailer.c	FUNCTION_10	FOR_1	CALL_1
0x881	          0x8b45fc	                mov eax, dword [rbp - 4]	       139	trailer.c	FUNCTION_10	FOR_1	IF_1	CALL_2
0x884	          0x4863d0	                         movsxd rdx, eax	       139	trailer.c	FUNCTION_10	FOR_1	IF_1	CALL_2
0x887	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       139	trailer.c	FUNCTION_10	FOR_1	IF_1	CALL_2
0x88b	          0x4801d0	                            add rax, rdx	       139	trailer.c	FUNCTION_10	FOR_1	IF_1	CALL_2
0x88e	           0xfb600	                   movzx eax, byte [rax]	       139	trailer.c	FUNCTION_10	FOR_1	IF_1	CALL_2
0x891	           0xfb6c0	                           movzx eax, al	       139	trailer.c	FUNCTION_10	FOR_1	IF_1	CALL_2
0x894	            0x4898	                                    cdqe	       139	trailer.c	FUNCTION_10	FOR_1	IF_1	CALL_2
0x896	     0xfb680000000	                   movzx eax, byte [rax]	       139	trailer.c	FUNCTION_10	FOR_1	IF_1	CALL_2
0x89d	           0xfb6c0	                           movzx eax, al	       139	trailer.c	FUNCTION_10	FOR_1	IF_1	CALL_2
0x8a0	          0x83e001	                              and eax, 1	       139	trailer.c	FUNCTION_10	FOR_1	IF_1	CALL_2
0x8a3	            0x85c0	                           test eax, eax	       139	trailer.c	FUNCTION_10	FOR_1	IF_1	CALL_2
0x8a5	            0x7512	                           jne 0x40008f9	       139	trailer.c	FUNCTION_10	FOR_1	IF_1	CALL_2
0x8a7	          0x8b45fc	                mov eax, dword [rbp - 4]	       140	trailer.c	FUNCTION_10	FOR_1	IF_1
0x8aa	          0x4863d0	                         movsxd rdx, eax	       140	trailer.c	FUNCTION_10	FOR_1	IF_1
0x8ad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       140	trailer.c	FUNCTION_10	FOR_1	IF_1
0x8b1	          0x4801d0	                            add rax, rdx	       140	trailer.c	FUNCTION_10	FOR_1	IF_1
0x8b4	           0xfb600	                   movzx eax, byte [rax]	       140	trailer.c	FUNCTION_10	FOR_1	IF_1
0x8b7	            0xeb0f	                           jmp 0x4000908	       140	trailer.c	FUNCTION_10	FOR_1	IF_1
0x8b9	        0x836dfc01	                  sub dword [rbp - 4], 1	       138	trailer.c	FUNCTION_10	FOR_1	CALL_1
0x8bd	        0x837dfc00	                  cmp dword [rbp - 4], 0	       138	trailer.c	FUNCTION_10	FOR_1	CALL_1
0x8c1	            0x79be	                           jns 0x40008c1	       138	trailer.c	FUNCTION_10	FOR_1	CALL_1
0x8c3	      0xb800000000	                              mov eax, 0	       141	trailer.c	FUNCTION_10
0x8c8	              0xc9	                                   leave	       142	trailer.c	FUNCTION_10
0x8c9	              0xc3	                                     ret	       142	trailer.c	FUNCTION_10
find_trailer_start	CALL,11:DO,0:SWITCH,0:WHILE,0:functions,1:ELSE,3:FOR,3:IF,11	196
0x2223	              0x55	                                push rbp	       808	trailer.c	FUNCTION_41
0x2224	          0x4889e5	                            mov rbp, rsp	       808	trailer.c	FUNCTION_41
0x2227	        0x4883ec60	                           sub rsp, 0x60	       808	trailer.c	FUNCTION_41
0x222b	        0x48897da8	             mov qword [rbp - 0x58], rdi	       808	trailer.c	FUNCTION_41
0x222f	        0x488975a0	             mov qword [rbp - 0x60], rsi	       808	trailer.c	FUNCTION_41
0x2233	    0xc745bc010000	               mov dword [rbp - 0x44], 1	       810	trailer.c	FUNCTION_41
0x223a	    0xc745c0000000	               mov dword [rbp - 0x40], 0	       811	trailer.c	FUNCTION_41
0x2241	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       811	trailer.c	FUNCTION_41
0x2248	    0xc745c8000000	               mov dword [rbp - 0x38], 0	       811	trailer.c	FUNCTION_41
0x224f	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       819	trailer.c	FUNCTION_41
0x2256	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x225a	        0x488945d8	             mov qword [rbp - 0x28], rax	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x225e	            0xeb35	                           jmp 0x40022d5	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x2260	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       823	trailer.c	FUNCTION_41	FOR_1	IF_1
0x2264	           0xfb610	                   movzx edx, byte [rax]	       823	trailer.c	FUNCTION_41	FOR_1	IF_1
0x2267	     0xfb605000000	           movzx eax, byte [0x040022ae] 	       823	trailer.c	FUNCTION_41	FOR_1	IF_1
0x226e	            0x38c2	                              cmp dl, al	       823	trailer.c	FUNCTION_41	FOR_1	IF_1
0x2270	            0x7412	                            je 0x40022c4	       823	trailer.c	FUNCTION_41	FOR_1	IF_1
0x2272	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       825	trailer.c	FUNCTION_41	FOR_1	IF_2	CALL_2
0x2276	          0x4889c7	                            mov rdi, rax	       825	trailer.c	FUNCTION_41	FOR_1	IF_2	CALL_2
0x2279	      0xe844e4ffff	                  call sym.is_blank_line	       825	trailer.c	FUNCTION_41	FOR_1	IF_2	CALL_2
0x227e	            0x85c0	                           test eax, eax	       825	trailer.c	FUNCTION_41	FOR_1	IF_2	CALL_2
0x2280	            0x7526	                           jne 0x40022e8	       825	trailer.c	FUNCTION_41	FOR_1	IF_2	CALL_2
0x2282	            0xeb01	                           jmp 0x40022c5	       825	trailer.c	FUNCTION_41	FOR_1	IF_2	CALL_2
0x2284	              0x90	                                     nop	       824	trailer.c	FUNCTION_41	FOR_1	IF_1
0x2285	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x2289	          0x4889c7	                            mov rdi, rax	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x228c	      0xe892feffff	                      call sym.next_line	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x2291	        0x488945d8	             mov qword [rbp - 0x28], rax	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x2295	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x2299	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x229d	          0x4801d0	                            add rax, rdx	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x22a0	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x22a4	            0x77ba	                            ja 0x40022a0	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x22a6	            0xeb01	                           jmp 0x40022e9	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x22a8	              0x90	                                     nop	       826	trailer.c	FUNCTION_41	FOR_1	IF_2
0x22a9	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       828	trailer.c	FUNCTION_41
0x22ad	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       828	trailer.c	FUNCTION_41
0x22b1	          0x4829c2	                            sub rdx, rax	       828	trailer.c	FUNCTION_41
0x22b4	          0x4889d0	                            mov rax, rdx	       828	trailer.c	FUNCTION_41
0x22b7	          0x8945d0	             mov dword [rbp - 0x30], eax	       828	trailer.c	FUNCTION_41
0x22ba	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x22be	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x22c2	          0x4889d6	                            mov rsi, rdx	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x22c5	          0x4889c7	                            mov rdi, rax	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x22c8	      0xe88ffeffff	                      call sym.last_line	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x22cd	          0x8945b8	             mov dword [rbp - 0x48], eax	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x22d0	      0xe904020000	                           jmp 0x4002519	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x22d5	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       839	trailer.c	FUNCTION_41	FOR_2
0x22d8	          0x4863d0	                         movsxd rdx, eax	       839	trailer.c	FUNCTION_41	FOR_2
0x22db	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       839	trailer.c	FUNCTION_41	FOR_2
0x22df	          0x4801d0	                            add rax, rdx	       839	trailer.c	FUNCTION_41	FOR_2
0x22e2	        0x488945f0	             mov qword [rbp - 0x10], rax	       839	trailer.c	FUNCTION_41	FOR_2
0x22e6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       843	trailer.c	FUNCTION_41	FOR_2	IF_3
0x22ea	           0xfb610	                   movzx edx, byte [rax]	       843	trailer.c	FUNCTION_41	FOR_2	IF_3
0x22ed	     0xfb605000000	           movzx eax, byte [0x04002334] 	       843	trailer.c	FUNCTION_41	FOR_2	IF_3
0x22f4	            0x38c2	                              cmp dl, al	       843	trailer.c	FUNCTION_41	FOR_2	IF_3
0x22f6	            0x7512	                           jne 0x400234a	       843	trailer.c	FUNCTION_41	FOR_2	IF_3
0x22f8	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       844	trailer.c	FUNCTION_41	FOR_2	IF_3
0x22fb	           0x145c8	             add dword [rbp - 0x38], eax	       844	trailer.c	FUNCTION_41	FOR_2	IF_3
0x22fe	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       845	trailer.c	FUNCTION_41	FOR_2	IF_3
0x2305	      0xe9b7010000	                           jmp 0x4002501	       846	trailer.c	FUNCTION_41	FOR_2	IF_3
0x230a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       848	trailer.c	FUNCTION_41	FOR_2	IF_4	CALL_5
0x230e	          0x4889c7	                            mov rdi, rax	       848	trailer.c	FUNCTION_41	FOR_2	IF_4	CALL_5
0x2311	      0xe8ace3ffff	                  call sym.is_blank_line	       848	trailer.c	FUNCTION_41	FOR_2	IF_4	CALL_5
0x2316	            0x85c0	                           test eax, eax	       848	trailer.c	FUNCTION_41	FOR_2	IF_4	CALL_5
0x2318	            0x7475	                            je 0x40023cf	       848	trailer.c	FUNCTION_41	FOR_2	IF_4	CALL_5
0x231a	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       849	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_5
0x231e	     0xf8599010000	                           jne 0x40024fd	       849	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_5
0x2324	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       851	trailer.c	FUNCTION_41	FOR_2	IF_4
0x2327	           0x145c8	             add dword [rbp - 0x38], eax	       851	trailer.c	FUNCTION_41	FOR_2	IF_4
0x232a	        0x837dc000	               cmp dword [rbp - 0x40], 0	       852	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_6
0x232e	            0x742c	                            je 0x400239c	       852	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_6
0x2330	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       853	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_6
0x2333	            0x89d0	                            mov eax, edx	       853	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_6
0x2335	             0x1c0	                            add eax, eax	       853	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_6
0x2337	             0x1d0	                            add eax, edx	       853	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_6
0x2339	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	       852	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_6
0x233c	            0x7c1e	                            jl 0x400239c	       852	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_6
0x233e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       854	trailer.c	FUNCTION_41	FOR_2	IF_4	CALL_6
0x2342	          0x4889c7	                            mov rdi, rax	       854	trailer.c	FUNCTION_41	FOR_2	IF_4	CALL_6
0x2345	      0xe8d9fdffff	                      call sym.next_line	       854	trailer.c	FUNCTION_41	FOR_2	IF_4	CALL_6
0x234a	          0x4889c2	                            mov rdx, rax	       854	trailer.c	FUNCTION_41	FOR_2	IF_4	CALL_6
0x234d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       854	trailer.c	FUNCTION_41	FOR_2	IF_4	CALL_6
0x2351	          0x4829c2	                            sub rdx, rax	       854	trailer.c	FUNCTION_41	FOR_2	IF_4	CALL_6
0x2354	          0x4889d0	                            mov rax, rdx	       854	trailer.c	FUNCTION_41	FOR_2	IF_4	CALL_6
0x2357	      0xe98d010000	                           jmp 0x4002529	       854	trailer.c	FUNCTION_41	FOR_2	IF_4	CALL_6
0x235c	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       855	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x2360	            0x7424	                            je 0x40023c6	       855	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x2362	        0x837dc800	               cmp dword [rbp - 0x38], 0	       855	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x2366	            0x751e	                           jne 0x40023c6	       855	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x2368	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x236c	          0x4889c7	                            mov rdi, rax	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x236f	      0xe8affdffff	                      call sym.next_line	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x2374	          0x4889c2	                            mov rdx, rax	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x2377	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x237b	          0x4829c2	                            sub rdx, rax	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x237e	          0x4889d0	                            mov rax, rdx	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x2381	      0xe963010000	                           jmp 0x4002529	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x2386	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       857	trailer.c	FUNCTION_41	FOR_2	IF_4
0x238a	      0xe95a010000	                           jmp 0x4002529	       857	trailer.c	FUNCTION_41	FOR_2	IF_4
0x238f	    0xc745bc000000	               mov dword [rbp - 0x44], 0	       859	trailer.c	FUNCTION_41	FOR_2
0x2396	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x239e	            0xeb36	                           jmp 0x4002416	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x23a0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       862	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8	CALL_8
0x23a4	          0x488b10	                    mov rdx, qword [rax]	       862	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8	CALL_8
0x23a7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       862	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8	CALL_8
0x23ab	          0x4889d6	                            mov rsi, rdx	       862	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8	CALL_8
0x23ae	          0x4889c7	                            mov rdi, rax	       862	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8	CALL_8
0x23b1	      0xe800000000	                          call 0x40023f6	       862	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8	CALL_8
0x23b6	            0x85c0	                           test eax, eax	       862	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8	CALL_8
0x23b8	            0x7417	                            je 0x4002411	       862	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8	CALL_8
0x23ba	        0x8345c401	               add dword [rbp - 0x3c], 1	       863	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8
0x23be	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       864	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8
0x23c5	    0xc745c0010000	               mov dword [rbp - 0x40], 1	       865	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8
0x23cc	      0xe9f0000000	                           jmp 0x4002501	       866	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8
0x23d1	      0x488345e008	               add qword [rbp - 0x20], 8	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x23d6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x23da	          0x488b00	                    mov rax, qword [rax]	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x23dd	          0x4885c0	                           test rax, rax	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x23e0	            0x75be	                           jne 0x40023e0	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x23e2	    0x488b15000000	            mov rdx, qword [0x04002429] 	       870	trailer.c	FUNCTION_41	FOR_2	CALL_9
0x23e9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       870	trailer.c	FUNCTION_41	FOR_2	CALL_9
0x23ed	          0x4889d6	                            mov rsi, rdx	       870	trailer.c	FUNCTION_41	FOR_2	CALL_9
0x23f0	          0x4889c7	                            mov rdi, rax	       870	trailer.c	FUNCTION_41	FOR_2	CALL_9
0x23f3	      0xe8a2f6ffff	                 call sym.find_separator	       870	trailer.c	FUNCTION_41	FOR_2	CALL_9
0x23f8	          0x8945d4	             mov dword [rbp - 0x2c], eax	       870	trailer.c	FUNCTION_41	FOR_2	CALL_9
0x23fb	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       871	trailer.c	FUNCTION_41	FOR_2	IF_9	CALL_10
0x23ff	     0xf8e82000000	                           jle 0x40024c7	       871	trailer.c	FUNCTION_41	FOR_2	IF_9	CALL_10
0x2405	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       871	trailer.c	FUNCTION_41	FOR_2	IF_9	CALL_10
0x2409	           0xfb600	                   movzx eax, byte [rax]	       871	trailer.c	FUNCTION_41	FOR_2	IF_9	CALL_10
0x240c	           0xfb6c0	                           movzx eax, al	       871	trailer.c	FUNCTION_41	FOR_2	IF_9	CALL_10
0x240f	            0x4898	                                    cdqe	       871	trailer.c	FUNCTION_41	FOR_2	IF_9	CALL_10
0x2411	     0xfb680000000	                   movzx eax, byte [rax]	       871	trailer.c	FUNCTION_41	FOR_2	IF_9	CALL_10
0x2418	           0xfb6c0	                           movzx eax, al	       871	trailer.c	FUNCTION_41	FOR_2	IF_9	CALL_10
0x241b	          0x83e001	                              and eax, 1	       871	trailer.c	FUNCTION_41	FOR_2	IF_9	CALL_10
0x241e	            0x85c0	                           test eax, eax	       871	trailer.c	FUNCTION_41	FOR_2	IF_9	CALL_10
0x2420	            0x7565	                           jne 0x40024c7	       871	trailer.c	FUNCTION_41	FOR_2	IF_9	CALL_10
0x2422	        0x8345c401	               add dword [rbp - 0x3c], 1	       874	trailer.c	FUNCTION_41	FOR_2	IF_9
0x2426	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       875	trailer.c	FUNCTION_41	FOR_2	IF_9
0x242d	        0x837dc000	               cmp dword [rbp - 0x40], 0	       876	trailer.c	FUNCTION_41	FOR_2	IF_9	IF_10
0x2431	     0xf8589000000	                           jne 0x4002500	       876	trailer.c	FUNCTION_41	FOR_2	IF_9	IF_10
0x2437	    0x488b05000000	            mov rax, qword [0x0400247e] 	       878	trailer.c	FUNCTION_41	FOR_2	IF_9	FUNCTION_1
0x243e	        0x488945e8	             mov qword [rbp - 0x18], rax	       878	trailer.c	FUNCTION_41	FOR_2	IF_9	FUNCTION_1
0x2442	            0xeb37	                           jmp 0x40024bb	       878	trailer.c	FUNCTION_41	FOR_2	IF_9	FUNCTION_1
0x2444	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       880	trailer.c	FUNCTION_41	FOR_2	IF_9	FUNCTION_1	CALL_1
0x2448	        0x488945f8	                mov qword [rbp - 8], rax	       880	trailer.c	FUNCTION_41	FOR_2	IF_9	FUNCTION_1	CALL_1
0x244c	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       881	trailer.c	FUNCTION_41	FOR_2	IF_9	FUNCTION_1	IF_1	CALL_2
0x244f	        0x488b4df8	                mov rcx, qword [rbp - 8]	       881	trailer.c	FUNCTION_41	FOR_2	IF_9	FUNCTION_1	IF_1	CALL_2
0x2453	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       881	trailer.c	FUNCTION_41	FOR_2	IF_9	FUNCTION_1	IF_1	CALL_2
0x2457	          0x4889ce	                            mov rsi, rcx	       881	trailer.c	FUNCTION_41	FOR_2	IF_9	FUNCTION_1	IF_1	CALL_2
0x245a	          0x4889c7	                            mov rdi, rax	       881	trailer.c	FUNCTION_41	FOR_2	IF_9	FUNCTION_1	IF_1	CALL_2
0x245d	      0xe8c0f5ffff	             call sym.token_matches_item	       881	trailer.c	FUNCTION_41	FOR_2	IF_9	FUNCTION_1	IF_1	CALL_2
0x2462	            0x85c0	                           test eax, eax	       881	trailer.c	FUNCTION_41	FOR_2	IF_9	FUNCTION_1	IF_1	CALL_2
0x2464	            0x740a	                            je 0x40024b0	       881	trailer.c	FUNCTION_41	FOR_2	IF_9	FUNCTION_1	IF_1	CALL_2
0x2466	    0xc745c0010000	               mov dword [rbp - 0x40], 1	       883	trailer.c	FUNCTION_41	FOR_2	IF_9	FUNCTION_1	IF_1
0x246d	              0x90	                                     nop	       884	trailer.c	FUNCTION_41	FOR_2	IF_9	FUNCTION_1	IF_1
0x246e	            0xeb51	                           jmp 0x4002501	       871	trailer.c	FUNCTION_41	FOR_2	IF_9	CALL_10
0x2470	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       878	trailer.c	FUNCTION_41	FOR_2	IF_9	FUNCTION_1
0x2474	          0x488b00	                    mov rax, qword [rax]	       878	trailer.c	FUNCTION_41	FOR_2	IF_9	FUNCTION_1
0x2477	        0x488945e8	             mov qword [rbp - 0x18], rax	       878	trailer.c	FUNCTION_41	FOR_2	IF_9	FUNCTION_1
0x247b	    0x48817de80000	               cmp qword [rbp - 0x18], 0	       878	trailer.c	FUNCTION_41	FOR_2	IF_9	FUNCTION_1
0x2483	            0x75bf	                           jne 0x4002484	       878	trailer.c	FUNCTION_41	FOR_2	IF_9	FUNCTION_1
0x2485	            0xeb3a	                           jmp 0x4002501	       871	trailer.c	FUNCTION_41	FOR_2	IF_9	CALL_10
0x2487	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       887	trailer.c	FUNCTION_41	FOR_2	ELSE_2	IF_11	CALL_11
0x248b	           0xfb600	                   movzx eax, byte [rax]	       887	trailer.c	FUNCTION_41	FOR_2	ELSE_2	IF_11	CALL_11
0x248e	           0xfb6c0	                           movzx eax, al	       887	trailer.c	FUNCTION_41	FOR_2	ELSE_2	IF_11	CALL_11
0x2491	            0x4898	                                    cdqe	       887	trailer.c	FUNCTION_41	FOR_2	ELSE_2	IF_11	CALL_11
0x2493	     0xfb680000000	                   movzx eax, byte [rax]	       887	trailer.c	FUNCTION_41	FOR_2	ELSE_2	IF_11	CALL_11
0x249a	           0xfb6c0	                           movzx eax, al	       887	trailer.c	FUNCTION_41	FOR_2	ELSE_2	IF_11	CALL_11
0x249d	          0x83e001	                              and eax, 1	       887	trailer.c	FUNCTION_41	FOR_2	ELSE_2	IF_11	CALL_11
0x24a0	            0x85c0	                           test eax, eax	       887	trailer.c	FUNCTION_41	FOR_2	ELSE_2	IF_11	CALL_11
0x24a2	            0x7406	                            je 0x40024ea	       887	trailer.c	FUNCTION_41	FOR_2	ELSE_2	IF_11	CALL_11
0x24a4	        0x8345cc01	               add dword [rbp - 0x34], 1	       888	trailer.c	FUNCTION_41	FOR_2	ELSE_2	IF_11
0x24a8	            0xeb17	                           jmp 0x4002501	       888	trailer.c	FUNCTION_41	FOR_2	ELSE_2	IF_11
0x24aa	        0x8345c801	               add dword [rbp - 0x38], 1	       890	trailer.c	FUNCTION_41	FOR_2	ELSE_3
0x24ae	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       891	trailer.c	FUNCTION_41	FOR_2	ELSE_3
0x24b1	           0x145c8	             add dword [rbp - 0x38], eax	       891	trailer.c	FUNCTION_41	FOR_2	ELSE_3
0x24b4	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       892	trailer.c	FUNCTION_41	FOR_2	ELSE_3
0x24bb	            0xeb04	                           jmp 0x4002501	       892	trailer.c	FUNCTION_41	FOR_2	ELSE_3
0x24bd	              0x90	                                     nop	       850	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_5
0x24be	            0xeb01	                           jmp 0x4002501	       850	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_5
0x24c0	              0x90	                                     nop	       877	trailer.c	FUNCTION_41	FOR_2	IF_9	IF_10
0x24c1	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       838	trailer.c	FUNCTION_41	FOR_2	CALL_4
0x24c4	          0x4863d0	                         movsxd rdx, eax	       838	trailer.c	FUNCTION_41	FOR_2	CALL_4
0x24c7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       838	trailer.c	FUNCTION_41	FOR_2	CALL_4
0x24cb	          0x4889d6	                            mov rsi, rdx	       838	trailer.c	FUNCTION_41	FOR_2	CALL_4
0x24ce	          0x4889c7	                            mov rdi, rax	       838	trailer.c	FUNCTION_41	FOR_2	CALL_4
0x24d1	      0xe886fcffff	                      call sym.last_line	       838	trailer.c	FUNCTION_41	FOR_2	CALL_4
0x24d6	          0x8945b8	             mov dword [rbp - 0x48], eax	       838	trailer.c	FUNCTION_41	FOR_2	CALL_4
0x24d9	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x24dc	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x24df	     0xf8df0fdffff	                           jge 0x4002315	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x24e5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       898	trailer.c	FUNCTION_41
0x24e9	              0xc9	                                   leave	       899	trailer.c	FUNCTION_41
0x24ea	              0xc3	                                     ret	       899	trailer.c	FUNCTION_41
same_trailer	CALL,2:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,0	24
0x676	              0x55	                                push rbp	        99	trailer.c	FUNCTION_5
0x677	          0x4889e5	                            mov rbp, rsp	        99	trailer.c	FUNCTION_5
0x67a	        0x4883ec10	                           sub rsp, 0x10	        99	trailer.c	FUNCTION_5
0x67e	        0x48897df8	                mov qword [rbp - 8], rdi	        99	trailer.c	FUNCTION_5
0x682	        0x488975f0	             mov qword [rbp - 0x10], rsi	        99	trailer.c	FUNCTION_5
0x686	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       100	trailer.c	FUNCTION_5	CALL_2
0x68a	        0x488b45f8	                mov rax, qword [rbp - 8]	       100	trailer.c	FUNCTION_5	CALL_2
0x68e	          0x4889d6	                            mov rsi, rdx	       100	trailer.c	FUNCTION_5	CALL_2
0x691	          0x4889c7	                            mov rdi, rax	       100	trailer.c	FUNCTION_5	CALL_2
0x694	      0xe8f3feffff	                     call sym.same_token	       100	trailer.c	FUNCTION_5	CALL_2
0x699	            0x85c0	                           test eax, eax	       100	trailer.c	FUNCTION_5	CALL_2
0x69b	            0x741e	                            je 0x40006fb	       100	trailer.c	FUNCTION_5	CALL_2
0x69d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       100	trailer.c	FUNCTION_5	CALL_2
0x6a1	        0x488b45f8	                mov rax, qword [rbp - 8]	       100	trailer.c	FUNCTION_5	CALL_2
0x6a5	          0x4889d6	                            mov rsi, rdx	       100	trailer.c	FUNCTION_5	CALL_2
0x6a8	          0x4889c7	                            mov rdi, rax	       100	trailer.c	FUNCTION_5	CALL_2
0x6ab	      0xe891ffffff	                     call sym.same_value	       100	trailer.c	FUNCTION_5	CALL_2
0x6b0	            0x85c0	                           test eax, eax	       100	trailer.c	FUNCTION_5	CALL_2
0x6b2	            0x7407	                            je 0x40006fb	       100	trailer.c	FUNCTION_5	CALL_2
0x6b4	      0xb801000000	                              mov eax, 1	       100	trailer.c	FUNCTION_5	CALL_2
0x6b9	            0xeb05	                           jmp 0x4000700	       100	trailer.c	FUNCTION_5	CALL_2
0x6bb	      0xb800000000	                              mov eax, 0	       100	trailer.c	FUNCTION_5	CALL_2
0x6c0	              0xc9	                                   leave	       101	trailer.c	FUNCTION_5
0x6c1	              0xc3	                                     ret	       101	trailer.c	FUNCTION_5
process_input_file	CALL,14:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,1:FOR,1:IF,6	150
0x269a	              0x55	                                push rbp	       946	trailer.c	FUNCTION_45
0x269b	          0x4889e5	                            mov rbp, rsp	       946	trailer.c	FUNCTION_45
0x269e	              0x53	                                push rbx	       946	trailer.c	FUNCTION_45
0x269f	    0x4881eca80000	                           sub rsp, 0xa8	       946	trailer.c	FUNCTION_45
0x26a6	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	       946	trailer.c	FUNCTION_45
0x26ad	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	       946	trailer.c	FUNCTION_45
0x26b4	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	       946	trailer.c	FUNCTION_45
0x26bb	    0x48898d50ffff	             mov qword [rbp - 0xb0], rcx	       946	trailer.c	FUNCTION_45
0x26c2	    0x64488b042528	                mov rax, qword fs:[0x28]	       946	trailer.c	FUNCTION_45
0x26cb	        0x488945e8	             mov qword [rbp - 0x18], rax	       946	trailer.c	FUNCTION_45
0x26cf	            0x31c0	                            xor eax, eax	       946	trailer.c	FUNCTION_45
0x26d1	    0x48c745800000	               mov qword [rbp - 0x80], 0	       948	trailer.c	FUNCTION_45
0x26d9	    0x48c745880000	               mov qword [rbp - 0x78], 0	       948	trailer.c	FUNCTION_45
0x26e1	    0x48c745900000	               mov qword [rbp - 0x70], 0	       948	trailer.c	FUNCTION_45
0x26e9	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       949	trailer.c	FUNCTION_45
0x26f1	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       949	trailer.c	FUNCTION_45
0x26f9	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       949	trailer.c	FUNCTION_45
0x2701	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	       952	trailer.c	FUNCTION_45	CALL_1
0x2708	        0x488d45c0	                   lea rax, [rbp - 0x40]	       952	trailer.c	FUNCTION_45	CALL_1
0x270c	          0x4889d6	                            mov rsi, rdx	       952	trailer.c	FUNCTION_45	CALL_1
0x270f	          0x4889c7	                            mov rdi, rax	       952	trailer.c	FUNCTION_45	CALL_1
0x2712	      0xe800000000	                          call 0x4002757	       952	trailer.c	FUNCTION_45	CALL_1
0x2717	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       955	trailer.c	FUNCTION_45	IF_1
0x271e	          0x8b4008	                mov eax, dword [rax + 8]	       955	trailer.c	FUNCTION_45	IF_1
0x2721	            0x85c0	                           test eax, eax	       955	trailer.c	FUNCTION_45	IF_1
0x2723	            0x7538	                           jne 0x400279d	       955	trailer.c	FUNCTION_45	IF_1
0x2725	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       956	trailer.c	FUNCTION_45	CALL_2
0x2729	          0x4889c2	                            mov rdx, rax	       956	trailer.c	FUNCTION_45	CALL_2
0x272c	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       956	trailer.c	FUNCTION_45	CALL_2
0x2733	          0x4829c2	                            sub rdx, rax	       956	trailer.c	FUNCTION_45	CALL_2
0x2736	          0x4889d0	                            mov rax, rdx	       956	trailer.c	FUNCTION_45	CALL_2
0x2739	          0x4889c6	                            mov rsi, rax	       956	trailer.c	FUNCTION_45	CALL_2
0x273c	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       956	trailer.c	FUNCTION_45	CALL_2
0x2743	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       956	trailer.c	FUNCTION_45	CALL_2
0x274a	          0x4889d1	                            mov rcx, rdx	       956	trailer.c	FUNCTION_45	CALL_2
0x274d	          0x4889f2	                            mov rdx, rsi	       956	trailer.c	FUNCTION_45	CALL_2
0x2750	      0xbe01000000	                              mov esi, 1	       956	trailer.c	FUNCTION_45	CALL_2
0x2755	          0x4889c7	                            mov rdi, rax	       956	trailer.c	FUNCTION_45	CALL_2
0x2758	      0xe800000000	                          call 0x400279d	       956	trailer.c	FUNCTION_45	CALL_2
0x275d	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       958	trailer.c	FUNCTION_45	IF_2
0x2764	          0x8b4008	                mov eax, dword [rax + 8]	       958	trailer.c	FUNCTION_45	IF_2
0x2767	            0x85c0	                           test eax, eax	       958	trailer.c	FUNCTION_45	IF_2
0x2769	            0x751b	                           jne 0x40027c6	       958	trailer.c	FUNCTION_45	IF_2
0x276b	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       958	trailer.c	FUNCTION_45	IF_2
0x276e	            0x85c0	                           test eax, eax	       958	trailer.c	FUNCTION_45	IF_2
0x2770	            0x7514	                           jne 0x40027c6	       958	trailer.c	FUNCTION_45	IF_2
0x2772	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       959	trailer.c	FUNCTION_45	CALL_3
0x2779	          0x4889c6	                            mov rsi, rax	       959	trailer.c	FUNCTION_45	CALL_3
0x277c	      0xbf0a000000	                            mov edi, 0xa	       959	trailer.c	FUNCTION_45	CALL_3
0x2781	      0xe800000000	                          call 0x40027c6	       959	trailer.c	FUNCTION_45	CALL_3
0x2786	    0xc78570ffffff	               mov dword [rbp - 0x90], 0	       961	trailer.c	FUNCTION_45	FOR_1
0x2790	      0xe94b010000	                           jmp 0x4002920	       961	trailer.c	FUNCTION_45	FOR_1
0x2795	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       963	trailer.c	FUNCTION_45	FOR_1
0x2799	    0x8b9570ffffff	             mov edx, dword [rbp - 0x90]	       963	trailer.c	FUNCTION_45	FOR_1
0x279f	          0x4863d2	                         movsxd rdx, edx	       963	trailer.c	FUNCTION_45	FOR_1
0x27a2	        0x48c1e203	                              shl rdx, 3	       963	trailer.c	FUNCTION_45	FOR_1
0x27a6	          0x4801d0	                            add rax, rdx	       963	trailer.c	FUNCTION_45	FOR_1
0x27a9	          0x488b00	                    mov rax, qword [rax]	       963	trailer.c	FUNCTION_45	FOR_1
0x27ac	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       963	trailer.c	FUNCTION_45	FOR_1
0x27b3	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       964	trailer.c	FUNCTION_45	FOR_1	IF_3
0x27ba	           0xfb610	                   movzx edx, byte [rax]	       964	trailer.c	FUNCTION_45	FOR_1	IF_3
0x27bd	     0xfb605000000	           movzx eax, byte [0x04002804] 	       964	trailer.c	FUNCTION_45	FOR_1	IF_3
0x27c4	            0x38c2	                              cmp dl, al	       964	trailer.c	FUNCTION_45	FOR_1	IF_3
0x27c6	     0xf840c010000	                            je 0x4002918	       964	trailer.c	FUNCTION_45	FOR_1	IF_3
0x27cc	    0x488b15000000	            mov rdx, qword [0x04002813] 	       966	trailer.c	FUNCTION_45	FOR_1	CALL_4
0x27d3	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       966	trailer.c	FUNCTION_45	FOR_1	CALL_4
0x27da	          0x4889d6	                            mov rsi, rdx	       966	trailer.c	FUNCTION_45	FOR_1	CALL_4
0x27dd	          0x4889c7	                            mov rdi, rax	       966	trailer.c	FUNCTION_45	FOR_1	CALL_4
0x27e0	      0xe8b5f2ffff	                 call sym.find_separator	       966	trailer.c	FUNCTION_45	FOR_1	CALL_4
0x27e5	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	       966	trailer.c	FUNCTION_45	FOR_1	CALL_4
0x27eb	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	       967	trailer.c	FUNCTION_45	FOR_1	IF_4
0x27f2	     0xf8e81000000	                           jle 0x40028b9	       967	trailer.c	FUNCTION_45	FOR_1	IF_4
0x27f8	    0x8b8d74ffffff	             mov ecx, dword [rbp - 0x8c]	       968	trailer.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x27fe	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       968	trailer.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x2805	        0x488d75a0	                   lea rsi, [rbp - 0x60]	       968	trailer.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x2809	        0x488d4580	                   lea rax, [rbp - 0x80]	       968	trailer.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x280d	          0x4189c8	                            mov r8d, ecx	       968	trailer.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x2810	          0x4889d1	                            mov rcx, rdx	       968	trailer.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x2813	      0xba00000000	                              mov edx, 0	       968	trailer.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x2818	          0x4889c7	                            mov rdi, rax	       968	trailer.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x281b	      0xe841f3ffff	                  call sym.parse_trailer	       968	trailer.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x2820	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       970	trailer.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x2827	          0x8b4010	            mov eax, dword [rax + 0x10] 	       970	trailer.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x282a	            0x85c0	                           test eax, eax	       970	trailer.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x282c	            0x740c	                            je 0x400287a	       970	trailer.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x282e	        0x488d45a0	                   lea rax, [rbp - 0x60]	       971	trailer.c	FUNCTION_45	FOR_1	IF_4	CALL_6
0x2832	          0x4889c7	                            mov rdi, rax	       971	trailer.c	FUNCTION_45	FOR_1	IF_4	CALL_6
0x2835	      0xe830fdffff	                   call sym.unfold_value	       971	trailer.c	FUNCTION_45	FOR_1	IF_4	CALL_6
0x283a	        0x488d45a0	                   lea rax, [rbp - 0x60]	       972	trailer.c	FUNCTION_45	FOR_1	IF_4	CALL_7
0x283e	      0xbe00000000	                              mov esi, 0	       972	trailer.c	FUNCTION_45	FOR_1	IF_4	CALL_7
0x2843	          0x4889c7	                            mov rdi, rax	       972	trailer.c	FUNCTION_45	FOR_1	IF_4	CALL_7
0x2846	      0xe800000000	                          call 0x400288b	       972	trailer.c	FUNCTION_45	FOR_1	IF_4	CALL_7
0x284b	          0x4889c3	                            mov rbx, rax	       972	trailer.c	FUNCTION_45	FOR_1	IF_4	CALL_7
0x284e	        0x488d4580	                   lea rax, [rbp - 0x80]	       972	trailer.c	FUNCTION_45	FOR_1	IF_4	CALL_7
0x2852	      0xbe00000000	                              mov esi, 0	       972	trailer.c	FUNCTION_45	FOR_1	IF_4	CALL_7
0x2857	          0x4889c7	                            mov rdi, rax	       972	trailer.c	FUNCTION_45	FOR_1	IF_4	CALL_7
0x285a	      0xe800000000	                          call 0x400289f	       972	trailer.c	FUNCTION_45	FOR_1	IF_4	CALL_7
0x285f	          0x4889c1	                            mov rcx, rax	       972	trailer.c	FUNCTION_45	FOR_1	IF_4	CALL_7
0x2862	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       972	trailer.c	FUNCTION_45	FOR_1	IF_4	CALL_7
0x2869	          0x4889da	                            mov rdx, rbx	       972	trailer.c	FUNCTION_45	FOR_1	IF_4	CALL_7
0x286c	          0x4889ce	                            mov rsi, rcx	       972	trailer.c	FUNCTION_45	FOR_1	IF_4	CALL_7
0x286f	          0x4889c7	                            mov rdi, rax	       972	trailer.c	FUNCTION_45	FOR_1	IF_4	CALL_7
0x2872	      0xe85df4ffff	               call sym.add_trailer_item	       972	trailer.c	FUNCTION_45	FOR_1	IF_4	CALL_7
0x2877	            0xeb60	                           jmp 0x4002919	       972	trailer.c	FUNCTION_45	FOR_1	IF_4	CALL_7
0x2879	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       975	trailer.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x2880	          0x8b4008	                mov eax, dword [rax + 8]	       975	trailer.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x2883	            0x85c0	                           test eax, eax	       975	trailer.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x2885	            0x7552	                           jne 0x4002919	       975	trailer.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x2887	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       976	trailer.c	FUNCTION_45	FOR_1	ELSE_1	IF_6	CALL_10
0x288e	        0x488d45a0	                   lea rax, [rbp - 0x60]	       976	trailer.c	FUNCTION_45	FOR_1	ELSE_1	IF_6	CALL_10
0x2892	          0x4889d6	                            mov rsi, rdx	       976	trailer.c	FUNCTION_45	FOR_1	ELSE_1	IF_6	CALL_10
0x2895	          0x4889c7	                            mov rdi, rax	       976	trailer.c	FUNCTION_45	FOR_1	ELSE_1	IF_6	CALL_10
0x2898	      0xe891daffff	                  call sym.strbuf_addstr	       976	trailer.c	FUNCTION_45	FOR_1	ELSE_1	IF_6	CALL_10
0x289d	        0x488d45a0	                   lea rax, [rbp - 0x60]	       977	trailer.c	FUNCTION_45	FOR_1	ELSE_1	IF_6	CALL_11
0x28a1	      0xbe00000000	                              mov esi, 0	       977	trailer.c	FUNCTION_45	FOR_1	ELSE_1	IF_6	CALL_11
0x28a6	          0x4889c7	                            mov rdi, rax	       977	trailer.c	FUNCTION_45	FOR_1	ELSE_1	IF_6	CALL_11
0x28a9	      0xe8b5daffff	            call sym.strbuf_strip_suffix	       977	trailer.c	FUNCTION_45	FOR_1	ELSE_1	IF_6	CALL_11
0x28ae	        0x488d45a0	                   lea rax, [rbp - 0x60]	       978	trailer.c	FUNCTION_45	FOR_1	ELSE_1	IF_6	CALL_12
0x28b2	      0xbe00000000	                              mov esi, 0	       978	trailer.c	FUNCTION_45	FOR_1	ELSE_1	IF_6	CALL_12
0x28b7	          0x4889c7	                            mov rdi, rax	       978	trailer.c	FUNCTION_45	FOR_1	ELSE_1	IF_6	CALL_12
0x28ba	      0xe800000000	                          call 0x40028ff	       978	trailer.c	FUNCTION_45	FOR_1	ELSE_1	IF_6	CALL_12
0x28bf	          0x4889c2	                            mov rdx, rax	       978	trailer.c	FUNCTION_45	FOR_1	ELSE_1	IF_6	CALL_12
0x28c2	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       978	trailer.c	FUNCTION_45	FOR_1	ELSE_1	IF_6	CALL_12
0x28c9	      0xbe00000000	                              mov esi, 0	       978	trailer.c	FUNCTION_45	FOR_1	ELSE_1	IF_6	CALL_12
0x28ce	          0x4889c7	                            mov rdi, rax	       978	trailer.c	FUNCTION_45	FOR_1	ELSE_1	IF_6	CALL_12
0x28d1	      0xe8fef3ffff	               call sym.add_trailer_item	       978	trailer.c	FUNCTION_45	FOR_1	ELSE_1	IF_6	CALL_12
0x28d6	            0xeb01	                           jmp 0x4002919	       978	trailer.c	FUNCTION_45	FOR_1	ELSE_1	IF_6	CALL_12
0x28d8	              0x90	                                     nop	       965	trailer.c	FUNCTION_45	FOR_1	IF_3
0x28d9	    0x838570ffffff	               add dword [rbp - 0x90], 1	       961	trailer.c	FUNCTION_45	FOR_1
0x28e0	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	       961	trailer.c	FUNCTION_45	FOR_1
0x28e6	          0x4863d0	                         movsxd rdx, eax	       961	trailer.c	FUNCTION_45	FOR_1
0x28e9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       961	trailer.c	FUNCTION_45	FOR_1
0x28ed	          0x4839c2	                            cmp rdx, rax	       961	trailer.c	FUNCTION_45	FOR_1
0x28f0	     0xf829ffeffff	                            jb 0x40027d5	       961	trailer.c	FUNCTION_45	FOR_1
0x28f6	        0x488d45c0	                   lea rax, [rbp - 0x40]	       984	trailer.c	FUNCTION_45	CALL_14
0x28fa	          0x4889c7	                            mov rdi, rax	       984	trailer.c	FUNCTION_45	CALL_14
0x28fd	      0xe800000000	                          call 0x4002942	       984	trailer.c	FUNCTION_45	CALL_14
0x2902	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       986	trailer.c	FUNCTION_45
0x2906	          0x4889c2	                            mov rdx, rax	       986	trailer.c	FUNCTION_45
0x2909	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       986	trailer.c	FUNCTION_45
0x2910	          0x4829c2	                            sub rdx, rax	       986	trailer.c	FUNCTION_45
0x2913	          0x4889d0	                            mov rax, rdx	       986	trailer.c	FUNCTION_45
0x2916	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       987	trailer.c	FUNCTION_45
0x291a	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       987	trailer.c	FUNCTION_45
0x2923	            0x7405	                            je 0x400296a	       987	trailer.c	FUNCTION_45
0x2925	      0xe800000000	                          call 0x400296a	       987	trailer.c	FUNCTION_45
0x292a	    0x4881c4a80000	                           add rsp, 0xa8	       987	trailer.c	FUNCTION_45
0x2931	              0x5b	                                 pop rbx	       987	trailer.c	FUNCTION_45
0x2932	              0x5d	                                 pop rbp	       987	trailer.c	FUNCTION_45
0x2933	              0xc3	                                     ret	       987	trailer.c	FUNCTION_45
process_command_line_args	CALL,2:DO,0:SWITCH,0:WHILE,0:functions,2:ELSE,0:FOR,0:IF,0	142
0x1df2	              0x55	                                push rbp	       697	trailer.c	FUNCTION_36
0x1df3	          0x4889e5	                            mov rbp, rsp	       697	trailer.c	FUNCTION_36
0x1df6	            0x4154	                                push r12	       697	trailer.c	FUNCTION_36
0x1df8	              0x53	                                push rbx	       697	trailer.c	FUNCTION_36
0x1df9	    0x4881eca00000	                           sub rsp, 0xa0	       697	trailer.c	FUNCTION_36
0x1e00	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	       697	trailer.c	FUNCTION_36
0x1e07	    0x4889b550ffff	             mov qword [rbp - 0xb0], rsi	       697	trailer.c	FUNCTION_36
0x1e0e	    0x64488b042528	                mov rax, qword fs:[0x28]	       697	trailer.c	FUNCTION_36
0x1e17	        0x488945e8	             mov qword [rbp - 0x18], rax	       697	trailer.c	FUNCTION_36
0x1e1b	            0x31c0	                            xor eax, eax	       697	trailer.c	FUNCTION_36
0x1e1d	    0x48c745900000	               mov qword [rbp - 0x70], 0	       699	trailer.c	FUNCTION_36
0x1e25	    0x48c745980000	               mov qword [rbp - 0x68], 0	       699	trailer.c	FUNCTION_36
0x1e2d	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       699	trailer.c	FUNCTION_36
0x1e35	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       700	trailer.c	FUNCTION_36
0x1e3d	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       700	trailer.c	FUNCTION_36
0x1e45	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       700	trailer.c	FUNCTION_36
0x1e4d	    0x488b05000000	            mov rax, qword [0x04001e94] 	       708	trailer.c	FUNCTION_36	CALL_1
0x1e54	          0x4889c6	                            mov rsi, rax	       708	trailer.c	FUNCTION_36	CALL_1
0x1e57	      0xbf00000000	                              mov edi, 0	       708	trailer.c	FUNCTION_36	CALL_1
0x1e5c	      0xb800000000	                              mov eax, 0	       708	trailer.c	FUNCTION_36	CALL_1
0x1e61	      0xe800000000	                          call 0x4001ea6	       708	trailer.c	FUNCTION_36	CALL_1
0x1e66	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       708	trailer.c	FUNCTION_36	CALL_1
0x1e6d	    0x488b05000000	            mov rax, qword [0x04001eb4] 	       711	trailer.c	FUNCTION_36	FUNCTION_1
0x1e74	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       711	trailer.c	FUNCTION_36	FUNCTION_1
0x1e7b	            0xeb75	                           jmp 0x4001f32	       711	trailer.c	FUNCTION_36	FUNCTION_1
0x1e7d	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       712	trailer.c	FUNCTION_36	FUNCTION_1	CALL_1
0x1e84	        0x48894580	             mov qword [rbp - 0x80], rax	       712	trailer.c	FUNCTION_36	FUNCTION_1	CALL_1
0x1e88	        0x488b4580	             mov rax, qword [rbp - 0x80]	       713	trailer.c	FUNCTION_36	FUNCTION_1	IF_1
0x1e8c	        0x488b4030	            mov rax, qword [rax + 0x30] 	       713	trailer.c	FUNCTION_36	FUNCTION_1	IF_1
0x1e90	          0x4885c0	                           test rax, rax	       713	trailer.c	FUNCTION_36	FUNCTION_1	IF_1
0x1e93	            0x744c	                            je 0x4001f21	       713	trailer.c	FUNCTION_36	FUNCTION_1	IF_1
0x1e95	        0x488b4580	             mov rax, qword [rbp - 0x80]	       717	trailer.c	FUNCTION_36	FUNCTION_1	IF_1
0x1e99	        0x488d5820	                   lea rbx, [rax + 0x20]	       717	trailer.c	FUNCTION_36	FUNCTION_1	IF_1
0x1e9d	      0xbf00000000	                              mov edi, 0	       714	trailer.c	FUNCTION_36	FUNCTION_1	IF_1	CALL_2
0x1ea2	      0xe800000000	                          call 0x4001ee7	       714	trailer.c	FUNCTION_36	FUNCTION_1	IF_1	CALL_2
0x1ea7	          0x4989c4	                            mov r12, rax	       714	trailer.c	FUNCTION_36	FUNCTION_1	IF_1	CALL_2
0x1eaa	        0x488b4580	             mov rax, qword [rbp - 0x80]	       714	trailer.c	FUNCTION_36	FUNCTION_1	IF_1	CALL_2
0x1eae	      0xbe00000000	                              mov esi, 0	       714	trailer.c	FUNCTION_36	FUNCTION_1	IF_1	CALL_2
0x1eb3	          0x4889c7	                            mov rdi, rax	       714	trailer.c	FUNCTION_36	FUNCTION_1	IF_1	CALL_2
0x1eb6	      0xe82dfbffff	                call sym.token_from_item	       714	trailer.c	FUNCTION_36	FUNCTION_1	IF_1	CALL_2
0x1ebb	          0x4889c7	                            mov rdi, rax	       714	trailer.c	FUNCTION_36	FUNCTION_1	IF_1	CALL_2
0x1ebe	      0xe800000000	                          call 0x4001f03	       714	trailer.c	FUNCTION_36	FUNCTION_1	IF_1	CALL_2
0x1ec3	          0x4889c6	                            mov rsi, rax	       714	trailer.c	FUNCTION_36	FUNCTION_1	IF_1	CALL_2
0x1ec6	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       714	trailer.c	FUNCTION_36	FUNCTION_1	IF_1	CALL_2
0x1ecd	    0x41b800000000	                              mov r8d, 0	       714	trailer.c	FUNCTION_36	FUNCTION_1	IF_1	CALL_2
0x1ed3	          0x4889d9	                            mov rcx, rbx	       714	trailer.c	FUNCTION_36	FUNCTION_1	IF_1	CALL_2
0x1ed6	          0x4c89e2	                            mov rdx, r12	       714	trailer.c	FUNCTION_36	FUNCTION_1	IF_1	CALL_2
0x1ed9	          0x4889c7	                            mov rdi, rax	       714	trailer.c	FUNCTION_36	FUNCTION_1	IF_1	CALL_2
0x1edc	      0xe84bfeffff	                   call sym.add_arg_item	       714	trailer.c	FUNCTION_36	FUNCTION_1	IF_1	CALL_2
0x1ee1	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       711	trailer.c	FUNCTION_36	FUNCTION_1
0x1ee8	          0x488b00	                    mov rax, qword [rax]	       711	trailer.c	FUNCTION_36	FUNCTION_1
0x1eeb	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       711	trailer.c	FUNCTION_36	FUNCTION_1
0x1ef2	    0x4881bd70ffff	               cmp qword [rbp - 0x90], 0	       711	trailer.c	FUNCTION_36	FUNCTION_1
0x1efd	     0xf857affffff	                           jne 0x4001ebd	       711	trailer.c	FUNCTION_36	FUNCTION_1
0x1f03	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       721	trailer.c	FUNCTION_36	FUNCTION_2
0x1f0a	          0x488b00	                    mov rax, qword [rax]	       721	trailer.c	FUNCTION_36	FUNCTION_2
0x1f0d	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       721	trailer.c	FUNCTION_36	FUNCTION_2
0x1f14	      0xe92e010000	                           jmp 0x4002087	       721	trailer.c	FUNCTION_36	FUNCTION_2
0x1f19	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       722	trailer.c	FUNCTION_36	FUNCTION_2
0x1f20	        0x48894588	             mov qword [rbp - 0x78], rax	       722	trailer.c	FUNCTION_36	FUNCTION_2
0x1f24	        0x488b4588	             mov rax, qword [rbp - 0x78]	       724	trailer.c	FUNCTION_36	FUNCTION_2	CALL_2
0x1f28	        0x488b4010	            mov rax, qword [rax + 0x10] 	       724	trailer.c	FUNCTION_36	FUNCTION_2	CALL_2
0x1f2c	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       724	trailer.c	FUNCTION_36	FUNCTION_2	CALL_2
0x1f33	          0x4889d6	                            mov rsi, rdx	       724	trailer.c	FUNCTION_36	FUNCTION_2	CALL_2
0x1f36	          0x4889c7	                            mov rdi, rax	       724	trailer.c	FUNCTION_36	FUNCTION_2	CALL_2
0x1f39	      0xe85cfbffff	                 call sym.find_separator	       724	trailer.c	FUNCTION_36	FUNCTION_2	CALL_2
0x1f3e	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	       724	trailer.c	FUNCTION_36	FUNCTION_2	CALL_2
0x1f44	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	       726	trailer.c	FUNCTION_36	FUNCTION_2	IF_1
0x1f4b	            0x7576	                           jne 0x4002003	       726	trailer.c	FUNCTION_36	FUNCTION_2	IF_1
0x1f4d	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       727	trailer.c	FUNCTION_36	FUNCTION_2	IF_1
0x1f55	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       727	trailer.c	FUNCTION_36	FUNCTION_2	IF_1
0x1f5d	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       727	trailer.c	FUNCTION_36	FUNCTION_2	IF_1
0x1f65	        0x488b4588	             mov rax, qword [rbp - 0x78]	       728	trailer.c	FUNCTION_36	FUNCTION_2	IF_1	CALL_3
0x1f69	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       728	trailer.c	FUNCTION_36	FUNCTION_2	IF_1	CALL_3
0x1f6d	        0x488d45d0	                   lea rax, [rbp - 0x30]	       728	trailer.c	FUNCTION_36	FUNCTION_2	IF_1	CALL_3
0x1f71	          0x4889d6	                            mov rsi, rdx	       728	trailer.c	FUNCTION_36	FUNCTION_2	IF_1	CALL_3
0x1f74	          0x4889c7	                            mov rdi, rax	       728	trailer.c	FUNCTION_36	FUNCTION_2	IF_1	CALL_3
0x1f77	      0xe8b2e3ffff	                  call sym.strbuf_addstr	       728	trailer.c	FUNCTION_36	FUNCTION_2	IF_1	CALL_3
0x1f7c	        0x488d45d0	                   lea rax, [rbp - 0x30]	       729	trailer.c	FUNCTION_36	FUNCTION_2	IF_1	CALL_4
0x1f80	          0x4889c7	                            mov rdi, rax	       729	trailer.c	FUNCTION_36	FUNCTION_2	IF_1	CALL_4
0x1f83	      0xe800000000	                          call 0x4001fc8	       729	trailer.c	FUNCTION_36	FUNCTION_2	IF_1	CALL_4
0x1f88	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	       730	trailer.c	FUNCTION_36	FUNCTION_2	IF_1	CALL_6
0x1f8c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       730	trailer.c	FUNCTION_36	FUNCTION_2	IF_1	CALL_6
0x1f90	          0x4189c4	                           mov r12d, eax	       730	trailer.c	FUNCTION_36	FUNCTION_2	IF_1	CALL_6
0x1f93	      0xbf00000000	                              mov edi, 0	       730	trailer.c	FUNCTION_36	FUNCTION_2	IF_1	CALL_6
0x1f98	      0xe810e5ffff	                               call sym.	       730	trailer.c	FUNCTION_36	FUNCTION_2	IF_1	CALL_6
0x1f9d	          0x4889da	                            mov rdx, rbx	       730	trailer.c	FUNCTION_36	FUNCTION_2	IF_1	CALL_6
0x1fa0	          0x4489e6	                           mov esi, r12d	       730	trailer.c	FUNCTION_36	FUNCTION_2	IF_1	CALL_6
0x1fa3	          0x4889c7	                            mov rdi, rax	       730	trailer.c	FUNCTION_36	FUNCTION_2	IF_1	CALL_6
0x1fa6	      0xb800000000	                              mov eax, 0	       730	trailer.c	FUNCTION_36	FUNCTION_2	IF_1	CALL_6
0x1fab	      0xe800000000	                          call 0x4001ff0	       730	trailer.c	FUNCTION_36	FUNCTION_2	IF_1	CALL_6
0x1fb0	      0xe84be0ffff	                    call sym.const_error	       730	trailer.c	FUNCTION_36	FUNCTION_2	IF_1	CALL_6
0x1fb5	        0x488d45d0	                   lea rax, [rbp - 0x30]	       732	trailer.c	FUNCTION_36	FUNCTION_2	IF_1	CALL_7
0x1fb9	          0x4889c7	                            mov rdi, rax	       732	trailer.c	FUNCTION_36	FUNCTION_2	IF_1	CALL_7
0x1fbc	      0xe800000000	                          call 0x4002001	       732	trailer.c	FUNCTION_36	FUNCTION_2	IF_1	CALL_7
0x1fc1	            0xeb73	                           jmp 0x4002076	       732	trailer.c	FUNCTION_36	FUNCTION_2	IF_1	CALL_7
0x1fc3	        0x488b4588	             mov rax, qword [rbp - 0x78]	       734	trailer.c	FUNCTION_36	FUNCTION_2	ELSE_1	CALL_8
0x1fc7	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       734	trailer.c	FUNCTION_36	FUNCTION_2	ELSE_1	CALL_8
0x1fcb	    0x8bbd64ffffff	             mov edi, dword [rbp - 0x9c]	       734	trailer.c	FUNCTION_36	FUNCTION_2	ELSE_1	CALL_8
0x1fd1	    0x488d9568ffff	                   lea rdx, [rbp - 0x98]	       734	trailer.c	FUNCTION_36	FUNCTION_2	ELSE_1	CALL_8
0x1fd8	        0x488d75b0	                   lea rsi, [rbp - 0x50]	       734	trailer.c	FUNCTION_36	FUNCTION_2	ELSE_1	CALL_8
0x1fdc	        0x488d4590	                   lea rax, [rbp - 0x70]	       734	trailer.c	FUNCTION_36	FUNCTION_2	ELSE_1	CALL_8
0x1fe0	          0x4189f8	                            mov r8d, edi	       734	trailer.c	FUNCTION_36	FUNCTION_2	ELSE_1	CALL_8
0x1fe3	          0x4889c7	                            mov rdi, rax	       734	trailer.c	FUNCTION_36	FUNCTION_2	ELSE_1	CALL_8
0x1fe6	      0xe876fbffff	                  call sym.parse_trailer	       734	trailer.c	FUNCTION_36	FUNCTION_2	ELSE_1	CALL_8
0x1feb	    0x488b9d68ffff	             mov rbx, qword [rbp - 0x98]	       736	trailer.c	FUNCTION_36	FUNCTION_2	ELSE_1	CALL_9
0x1ff2	        0x488d45b0	                   lea rax, [rbp - 0x50]	       736	trailer.c	FUNCTION_36	FUNCTION_2	ELSE_1	CALL_9
0x1ff6	      0xbe00000000	                              mov esi, 0	       736	trailer.c	FUNCTION_36	FUNCTION_2	ELSE_1	CALL_9
0x1ffb	          0x4889c7	                            mov rdi, rax	       736	trailer.c	FUNCTION_36	FUNCTION_2	ELSE_1	CALL_9
0x1ffe	      0xe800000000	                          call 0x4002043	       736	trailer.c	FUNCTION_36	FUNCTION_2	ELSE_1	CALL_9
0x2003	          0x4989c4	                            mov r12, rax	       736	trailer.c	FUNCTION_36	FUNCTION_2	ELSE_1	CALL_9
0x2006	        0x488d4590	                   lea rax, [rbp - 0x70]	       736	trailer.c	FUNCTION_36	FUNCTION_2	ELSE_1	CALL_9
0x200a	      0xbe00000000	                              mov esi, 0	       736	trailer.c	FUNCTION_36	FUNCTION_2	ELSE_1	CALL_9
0x200f	          0x4889c7	                            mov rdi, rax	       736	trailer.c	FUNCTION_36	FUNCTION_2	ELSE_1	CALL_9
0x2012	      0xe800000000	                          call 0x4002057	       736	trailer.c	FUNCTION_36	FUNCTION_2	ELSE_1	CALL_9
0x2017	          0x4889c6	                            mov rsi, rax	       736	trailer.c	FUNCTION_36	FUNCTION_2	ELSE_1	CALL_9
0x201a	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       736	trailer.c	FUNCTION_36	FUNCTION_2	ELSE_1	CALL_9
0x201e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       736	trailer.c	FUNCTION_36	FUNCTION_2	ELSE_1	CALL_9
0x2025	          0x4989d0	                             mov r8, rdx	       736	trailer.c	FUNCTION_36	FUNCTION_2	ELSE_1	CALL_9
0x2028	          0x4889d9	                            mov rcx, rbx	       736	trailer.c	FUNCTION_36	FUNCTION_2	ELSE_1	CALL_9
0x202b	          0x4c89e2	                            mov rdx, r12	       736	trailer.c	FUNCTION_36	FUNCTION_2	ELSE_1	CALL_9
0x202e	          0x4889c7	                            mov rdi, rax	       736	trailer.c	FUNCTION_36	FUNCTION_2	ELSE_1	CALL_9
0x2031	      0xe8f6fcffff	                   call sym.add_arg_item	       736	trailer.c	FUNCTION_36	FUNCTION_2	ELSE_1	CALL_9
0x2036	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       721	trailer.c	FUNCTION_36	FUNCTION_2
0x203d	          0x488b00	                    mov rax, qword [rax]	       721	trailer.c	FUNCTION_36	FUNCTION_2
0x2040	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       721	trailer.c	FUNCTION_36	FUNCTION_2
0x2047	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       721	trailer.c	FUNCTION_36	FUNCTION_2
0x204e	    0x483b8550ffff	             cmp rax, qword [rbp - 0xb0]	       721	trailer.c	FUNCTION_36	FUNCTION_2
0x2055	     0xf85befeffff	                           jne 0x4001f59	       721	trailer.c	FUNCTION_36	FUNCTION_2
0x205b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       743	trailer.c	FUNCTION_36	CALL_2
0x2062	          0x4889c7	                            mov rdi, rax	       743	trailer.c	FUNCTION_36	CALL_2
0x2065	      0xe800000000	                          call 0x40020aa	       743	trailer.c	FUNCTION_36	CALL_2
0x206a	              0x90	                                     nop	       744	trailer.c	FUNCTION_36
0x206b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       744	trailer.c	FUNCTION_36
0x206f	    0x644833042528	                xor rax, qword fs:[0x28]	       744	trailer.c	FUNCTION_36
0x2078	            0x7405	                            je 0x40020bf	       744	trailer.c	FUNCTION_36
0x207a	      0xe800000000	                          call 0x40020bf	       744	trailer.c	FUNCTION_36
0x207f	    0x4881c4a00000	                           add rsp, 0xa0	       744	trailer.c	FUNCTION_36
0x2086	              0x5b	                                 pop rbx	       744	trailer.c	FUNCTION_36
0x2087	            0x415c	                                 pop r12	       744	trailer.c	FUNCTION_36
0x2089	              0x5d	                                 pop rbp	       744	trailer.c	FUNCTION_36
0x208a	              0xc3	                                     ret	       744	trailer.c	FUNCTION_36
free_trailer_item	CALL,3:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,0	18
0x7bb	              0x55	                                push rbp	       119	trailer.c	FUNCTION_8
0x7bc	          0x4889e5	                            mov rbp, rsp	       119	trailer.c	FUNCTION_8
0x7bf	        0x4883ec10	                           sub rsp, 0x10	       119	trailer.c	FUNCTION_8
0x7c3	        0x48897df8	                mov qword [rbp - 8], rdi	       119	trailer.c	FUNCTION_8
0x7c7	        0x488b45f8	                mov rax, qword [rbp - 8]	       120	trailer.c	FUNCTION_8	CALL_1
0x7cb	        0x488b4010	            mov rax, qword [rax + 0x10] 	       120	trailer.c	FUNCTION_8	CALL_1
0x7cf	          0x4889c7	                            mov rdi, rax	       120	trailer.c	FUNCTION_8	CALL_1
0x7d2	      0xe800000000	                          call 0x4000817	       120	trailer.c	FUNCTION_8	CALL_1
0x7d7	        0x488b45f8	                mov rax, qword [rbp - 8]	       121	trailer.c	FUNCTION_8	CALL_2
0x7db	        0x488b4018	            mov rax, qword [rax + 0x18] 	       121	trailer.c	FUNCTION_8	CALL_2
0x7df	          0x4889c7	                            mov rdi, rax	       121	trailer.c	FUNCTION_8	CALL_2
0x7e2	      0xe800000000	                          call 0x4000827	       121	trailer.c	FUNCTION_8	CALL_2
0x7e7	        0x488b45f8	                mov rax, qword [rbp - 8]	       122	trailer.c	FUNCTION_8	CALL_3
0x7eb	          0x4889c7	                            mov rdi, rax	       122	trailer.c	FUNCTION_8	CALL_3
0x7ee	      0xe800000000	                          call 0x4000833	       122	trailer.c	FUNCTION_8	CALL_3
0x7f3	              0x90	                                     nop	       123	trailer.c	FUNCTION_8
0x7f4	              0xc9	                                   leave	       123	trailer.c	FUNCTION_8
0x7f5	              0xc3	                                     ret	       123	trailer.c	FUNCTION_8
list_add	CALL,0:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,0	21
0x3bb	              0x55	                                push rbp	        53	list.h	FUNCTION_53
0x3bc	          0x4889e5	                            mov rbp, rsp	        53	list.h	FUNCTION_53
0x3bf	        0x48897df8	                mov qword [rbp - 8], rdi	        53	list.h	FUNCTION_53
0x3c3	        0x488975f0	             mov qword [rbp - 0x10], rsi	        53	list.h	FUNCTION_53
0x3c7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        54	list.h	FUNCTION_53
0x3cb	          0x488b00	                    mov rax, qword [rax]	        54	list.h	FUNCTION_53
0x3ce	        0x488b55f8	                mov rdx, qword [rbp - 8]	        54	list.h	FUNCTION_53
0x3d2	        0x48895008	                mov qword [rax + 8], rdx	        54	list.h	FUNCTION_53
0x3d6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        55	list.h	FUNCTION_53
0x3da	          0x488b10	                    mov rdx, qword [rax]	        55	list.h	FUNCTION_53
0x3dd	        0x488b45f8	                mov rax, qword [rbp - 8]	        55	list.h	FUNCTION_53
0x3e1	          0x488910	                    mov qword [rax], rdx	        55	list.h	FUNCTION_53
0x3e4	        0x488b45f8	                mov rax, qword [rbp - 8]	        56	list.h	FUNCTION_53
0x3e8	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        56	list.h	FUNCTION_53
0x3ec	        0x48895008	                mov qword [rax + 8], rdx	        56	list.h	FUNCTION_53
0x3f0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        57	list.h	FUNCTION_53
0x3f4	        0x488b55f8	                mov rdx, qword [rbp - 8]	        57	list.h	FUNCTION_53
0x3f8	          0x488910	                    mov qword [rax], rdx	        57	list.h	FUNCTION_53
0x3fb	              0x90	                                     nop	        58	list.h	FUNCTION_53
0x3fc	              0x5d	                                 pop rbp	        58	list.h	FUNCTION_53
0x3fd	              0xc3	                                     ret	        58	list.h	FUNCTION_53
strbuf_addch	CALL,2:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,1	33
0x2c0	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_101
0x2c1	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_101
0x2c4	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_101
0x2c8	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_101
0x2cc	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_101
0x2cf	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_101	IF_1	CALL_1
0x2d3	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_101	IF_1	CALL_1
0x2d6	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_101	IF_1	CALL_1
0x2db	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_101	IF_1	CALL_1
0x2de	            0x7511	                           jne 0x4000331	       227	strbuf.h	FUNCTION_101	IF_1	CALL_1
0x2e0	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_101	CALL_2
0x2e4	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_101	CALL_2
0x2e9	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_101	CALL_2
0x2ec	      0xe800000000	                          call 0x4000331	       228	strbuf.h	FUNCTION_101	CALL_2
0x2f1	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_101
0x2f5	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_101
0x2f9	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_101
0x2fd	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_101
0x301	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_101
0x305	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_101
0x309	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_101
0x30d	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_101
0x310	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_101
0x313	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_101
0x315	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_101
0x319	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_101
0x31d	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_101
0x321	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_101
0x325	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_101
0x328	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_101
0x32b	              0x90	                                     nop	       231	strbuf.h	FUNCTION_101
0x32c	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_101
0x32d	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_101
find_trailer_end	CALL,1:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,0	19
0x24eb	              0x55	                                push rbp	       903	trailer.c	FUNCTION_42
0x24ec	          0x4889e5	                            mov rbp, rsp	       903	trailer.c	FUNCTION_42
0x24ef	              0x53	                                push rbx	       903	trailer.c	FUNCTION_42
0x24f0	        0x4883ec18	                           sub rsp, 0x18	       903	trailer.c	FUNCTION_42
0x24f4	        0x48897de8	             mov qword [rbp - 0x18], rdi	       903	trailer.c	FUNCTION_42
0x24f8	        0x488975e0	             mov qword [rbp - 0x20], rsi	       903	trailer.c	FUNCTION_42
0x24fc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       904	trailer.c	FUNCTION_42	CALL_1
0x2500	            0x89c3	                            mov ebx, eax	       904	trailer.c	FUNCTION_42	CALL_1
0x2502	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       904	trailer.c	FUNCTION_42	CALL_1
0x2506	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       904	trailer.c	FUNCTION_42	CALL_1
0x250a	          0x4889d6	                            mov rsi, rdx	       904	trailer.c	FUNCTION_42	CALL_1
0x250d	          0x4889c7	                            mov rdi, rax	       904	trailer.c	FUNCTION_42	CALL_1
0x2510	      0xe800000000	                          call 0x4002555	       904	trailer.c	FUNCTION_42	CALL_1
0x2515	            0x29c3	                            sub ebx, eax	       904	trailer.c	FUNCTION_42	CALL_1
0x2517	            0x89d8	                            mov eax, ebx	       904	trailer.c	FUNCTION_42	CALL_1
0x2519	        0x4883c418	                           add rsp, 0x18	       905	trailer.c	FUNCTION_42
0x251d	              0x5b	                                 pop rbx	       905	trailer.c	FUNCTION_42
0x251e	              0x5d	                                 pop rbp	       905	trailer.c	FUNCTION_42
0x251f	              0xc3	                                     ret	       905	trailer.c	FUNCTION_42
trailer_set_if_missing	CALL,2:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,3:FOR,0:IF,3	33
0x135d	              0x55	                                push rbp	       417	trailer.c	ELSE_6	FUNCTION_24
0x135e	          0x4889e5	                            mov rbp, rsp	       417	trailer.c	ELSE_6	FUNCTION_24
0x1361	        0x4883ec10	                           sub rsp, 0x10	       417	trailer.c	ELSE_6	FUNCTION_24
0x1365	        0x48897df8	                mov qword [rbp - 8], rdi	       417	trailer.c	ELSE_6	FUNCTION_24
0x1369	        0x488975f0	             mov qword [rbp - 0x10], rsi	       417	trailer.c	ELSE_6	FUNCTION_24
0x136d	      0x48837df000	               cmp qword [rbp - 0x10], 0	       418	trailer.c	ELSE_6	FUNCTION_24	IF_1
0x1372	            0x750c	                           jne 0x40013c0	       418	trailer.c	ELSE_6	FUNCTION_24	IF_1
0x1374	        0x488b45f8	                mov rax, qword [rbp - 8]	       419	trailer.c	ELSE_6	FUNCTION_24	IF_1
0x1378	    0xc70000000000	                      mov dword [rax], 0	       419	trailer.c	ELSE_6	FUNCTION_24	IF_1
0x137e	            0xeb49	                           jmp 0x4001409	       419	trailer.c	ELSE_6	FUNCTION_24	IF_1
0x1380	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       420	trailer.c	ELSE_6	FUNCTION_24	ELSE_1	IF_2	CALL_1
0x1384	          0x4889c6	                            mov rsi, rax	       420	trailer.c	ELSE_6	FUNCTION_24	ELSE_1	IF_2	CALL_1
0x1387	      0xbf00000000	                              mov edi, 0	       420	trailer.c	ELSE_6	FUNCTION_24	ELSE_1	IF_2	CALL_1
0x138c	      0xe800000000	                          call 0x40013d1	       420	trailer.c	ELSE_6	FUNCTION_24	ELSE_1	IF_2	CALL_1
0x1391	            0x85c0	                           test eax, eax	       420	trailer.c	ELSE_6	FUNCTION_24	ELSE_1	IF_2	CALL_1
0x1393	            0x750c	                           jne 0x40013e1	       420	trailer.c	ELSE_6	FUNCTION_24	ELSE_1	IF_2	CALL_1
0x1395	        0x488b45f8	                mov rax, qword [rbp - 8]	       421	trailer.c	ELSE_6	FUNCTION_24	ELSE_1	IF_2
0x1399	    0xc70002000000	                      mov dword [rax], 2	       421	trailer.c	ELSE_6	FUNCTION_24	ELSE_1	IF_2
0x139f	            0xeb28	                           jmp 0x4001409	       421	trailer.c	ELSE_6	FUNCTION_24	ELSE_1	IF_2
0x13a1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       422	trailer.c	ELSE_6	FUNCTION_24	ELSE_2	IF_3	CALL_2
0x13a5	          0x4889c6	                            mov rsi, rax	       422	trailer.c	ELSE_6	FUNCTION_24	ELSE_2	IF_3	CALL_2
0x13a8	      0xbf00000000	                              mov edi, 0	       422	trailer.c	ELSE_6	FUNCTION_24	ELSE_2	IF_3	CALL_2
0x13ad	      0xe800000000	                          call 0x40013f2	       422	trailer.c	ELSE_6	FUNCTION_24	ELSE_2	IF_3	CALL_2
0x13b2	            0x85c0	                           test eax, eax	       422	trailer.c	ELSE_6	FUNCTION_24	ELSE_2	IF_3	CALL_2
0x13b4	            0x750c	                           jne 0x4001402	       422	trailer.c	ELSE_6	FUNCTION_24	ELSE_2	IF_3	CALL_2
0x13b6	        0x488b45f8	                mov rax, qword [rbp - 8]	       423	trailer.c	ELSE_6	FUNCTION_24	ELSE_2	IF_3
0x13ba	    0xc70001000000	                      mov dword [rax], 1	       423	trailer.c	ELSE_6	FUNCTION_24	ELSE_2	IF_3
0x13c0	            0xeb07	                           jmp 0x4001409	       423	trailer.c	ELSE_6	FUNCTION_24	ELSE_2	IF_3
0x13c2	      0xb8ffffffff	                     mov eax, 0xffffffff	       425	trailer.c	ELSE_6	FUNCTION_24	ELSE_3
0x13c7	            0xeb05	                           jmp 0x400140e	       425	trailer.c	ELSE_6	FUNCTION_24	ELSE_3
0x13c9	      0xb800000000	                              mov eax, 0	       426	trailer.c	ELSE_6	FUNCTION_24	ELSE_3
0x13ce	              0xc9	                                   leave	       427	trailer.c	ELSE_6	FUNCTION_24	ELSE_3
0x13cf	              0xc3	                                     ret	       427	trailer.c	ELSE_6	FUNCTION_24	ELSE_3
list_add_tail	CALL,0:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,0	21
0x3fe	              0x55	                                push rbp	        62	list.h	FUNCTION_54
0x3ff	          0x4889e5	                            mov rbp, rsp	        62	list.h	FUNCTION_54
0x402	        0x48897df8	                mov qword [rbp - 8], rdi	        62	list.h	FUNCTION_54
0x406	        0x488975f0	             mov qword [rbp - 0x10], rsi	        62	list.h	FUNCTION_54
0x40a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        63	list.h	FUNCTION_54
0x40e	        0x488b4008	                mov rax, qword [rax + 8]	        63	list.h	FUNCTION_54
0x412	        0x488b55f8	                mov rdx, qword [rbp - 8]	        63	list.h	FUNCTION_54
0x416	          0x488910	                    mov qword [rax], rdx	        63	list.h	FUNCTION_54
0x419	        0x488b45f8	                mov rax, qword [rbp - 8]	        64	list.h	FUNCTION_54
0x41d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        64	list.h	FUNCTION_54
0x421	          0x488910	                    mov qword [rax], rdx	        64	list.h	FUNCTION_54
0x424	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        65	list.h	FUNCTION_54
0x428	        0x488b5008	                mov rdx, qword [rax + 8]	        65	list.h	FUNCTION_54
0x42c	        0x488b45f8	                mov rax, qword [rbp - 8]	        65	list.h	FUNCTION_54
0x430	        0x48895008	                mov qword [rax + 8], rdx	        65	list.h	FUNCTION_54
0x434	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        66	list.h	FUNCTION_54
0x438	        0x488b55f8	                mov rdx, qword [rbp - 8]	        66	list.h	FUNCTION_54
0x43c	        0x48895008	                mov qword [rax + 8], rdx	        66	list.h	FUNCTION_54
0x440	              0x90	                                     nop	        67	list.h	FUNCTION_54
0x441	              0x5d	                                 pop rbp	        67	list.h	FUNCTION_54
0x442	              0xc3	                                     ret	        67	list.h	FUNCTION_54
add_trailer_item	CALL,2:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,0	24
0x1cd4	              0x55	                                push rbp	       668	trailer.c	FUNCTION_34
0x1cd5	          0x4889e5	                            mov rbp, rsp	       668	trailer.c	FUNCTION_34
0x1cd8	        0x4883ec30	                           sub rsp, 0x30	       668	trailer.c	FUNCTION_34
0x1cdc	        0x48897de8	             mov qword [rbp - 0x18], rdi	       668	trailer.c	FUNCTION_34
0x1ce0	        0x488975e0	             mov qword [rbp - 0x20], rsi	       668	trailer.c	FUNCTION_34
0x1ce4	        0x488955d8	             mov qword [rbp - 0x28], rdx	       668	trailer.c	FUNCTION_34
0x1ce8	      0xbe01000000	                              mov esi, 1	       669	trailer.c	FUNCTION_34	CALL_1
0x1ced	      0xbf20000000	                           mov edi, 0x20	       669	trailer.c	FUNCTION_34	CALL_1
0x1cf2	      0xe800000000	                          call 0x4001d37	       669	trailer.c	FUNCTION_34	CALL_1
0x1cf7	        0x488945f8	                mov qword [rbp - 8], rax	       669	trailer.c	FUNCTION_34	CALL_1
0x1cfb	        0x488b45f8	                mov rax, qword [rbp - 8]	       670	trailer.c	FUNCTION_34
0x1cff	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       670	trailer.c	FUNCTION_34
0x1d03	        0x48895010	             mov qword [rax + 0x10], rdx	       670	trailer.c	FUNCTION_34
0x1d07	        0x488b45f8	                mov rax, qword [rbp - 8]	       671	trailer.c	FUNCTION_34
0x1d0b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       671	trailer.c	FUNCTION_34
0x1d0f	        0x48895018	             mov qword [rax + 0x18], rdx	       671	trailer.c	FUNCTION_34
0x1d13	        0x488b45f8	                mov rax, qword [rbp - 8]	       672	trailer.c	FUNCTION_34	CALL_2
0x1d17	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       672	trailer.c	FUNCTION_34	CALL_2
0x1d1b	          0x4889d6	                            mov rsi, rdx	       672	trailer.c	FUNCTION_34	CALL_2
0x1d1e	          0x4889c7	                            mov rdi, rax	       672	trailer.c	FUNCTION_34	CALL_2
0x1d21	      0xe8d8e6ffff	                  call sym.list_add_tail	       672	trailer.c	FUNCTION_34	CALL_2
0x1d26	        0x488b45f8	                mov rax, qword [rbp - 8]	       673	trailer.c	FUNCTION_34
0x1d2a	              0xc9	                                   leave	       674	trailer.c	FUNCTION_34
0x1d2b	              0xc3	                                     ret	       674	trailer.c	FUNCTION_34
git_trailer_default_config	CALL,16:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,3:FOR,0:IF,9	108
0x150d	              0x55	                                push rbp	       474	trailer.c	FUNCTION_27
0x150e	          0x4889e5	                            mov rbp, rsp	       474	trailer.c	FUNCTION_27
0x1511	        0x4883ec40	                           sub rsp, 0x40	       474	trailer.c	FUNCTION_27
0x1515	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       474	trailer.c	FUNCTION_27
0x1519	        0x488975d0	             mov qword [rbp - 0x30], rsi	       474	trailer.c	FUNCTION_27
0x151d	        0x488955c8	             mov qword [rbp - 0x38], rdx	       474	trailer.c	FUNCTION_27
0x1521	    0x64488b042528	                mov rax, qword fs:[0x28]	       474	trailer.c	FUNCTION_27
0x152a	        0x488945f8	                mov qword [rbp - 8], rax	       474	trailer.c	FUNCTION_27
0x152e	            0x31c0	                            xor eax, eax	       474	trailer.c	FUNCTION_27
0x1530	        0x488d55e8	                   lea rdx, [rbp - 0x18]	       477	trailer.c	FUNCTION_27	IF_1	CALL_1
0x1534	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       477	trailer.c	FUNCTION_27	IF_1	CALL_1
0x1538	      0xbe00000000	                              mov esi, 0	       477	trailer.c	FUNCTION_27	IF_1	CALL_1
0x153d	          0x4889c7	                            mov rdi, rax	       477	trailer.c	FUNCTION_27	IF_1	CALL_1
0x1540	      0xe8c6eaffff	                    call sym.skip_prefix	       477	trailer.c	FUNCTION_27	IF_1	CALL_1
0x1545	            0x85c0	                           test eax, eax	       477	trailer.c	FUNCTION_27	IF_1	CALL_1
0x1547	            0x750a	                           jne 0x4001593	       477	trailer.c	FUNCTION_27	IF_1	CALL_1
0x1549	      0xb800000000	                              mov eax, 0	       478	trailer.c	FUNCTION_27	IF_1
0x154e	      0xe94b010000	                           jmp 0x40016de	       478	trailer.c	FUNCTION_27	IF_1
0x1553	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       480	trailer.c	FUNCTION_27	CALL_2
0x1557	      0xbe2e000000	                           mov esi, 0x2e	       480	trailer.c	FUNCTION_27	CALL_2
0x155c	          0x4889c7	                            mov rdi, rax	       480	trailer.c	FUNCTION_27	CALL_2
0x155f	      0xe800000000	                          call 0x40015a4	       480	trailer.c	FUNCTION_27	CALL_2
0x1564	        0x488945f0	             mov qword [rbp - 0x10], rax	       480	trailer.c	FUNCTION_27	CALL_2
0x1568	      0x48837df000	               cmp qword [rbp - 0x10], 0	       481	trailer.c	FUNCTION_27	IF_2
0x156d	     0xf8526010000	                           jne 0x40016d9	       481	trailer.c	FUNCTION_27	IF_2
0x1573	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       482	trailer.c	FUNCTION_27	IF_2	IF_3	CALL_3
0x1577	      0xbe00000000	                              mov esi, 0	       482	trailer.c	FUNCTION_27	IF_2	IF_3	CALL_3
0x157c	          0x4889c7	                            mov rdi, rax	       482	trailer.c	FUNCTION_27	IF_2	IF_3	CALL_3
0x157f	      0xe800000000	                          call 0x40015c4	       482	trailer.c	FUNCTION_27	IF_2	IF_3	CALL_3
0x1584	            0x85c0	                           test eax, eax	       482	trailer.c	FUNCTION_27	IF_2	IF_3	CALL_3
0x1586	            0x7543	                           jne 0x400160b	       482	trailer.c	FUNCTION_27	IF_2	IF_3	CALL_3
0x1588	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       483	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_4
0x158c	          0x4889c6	                            mov rsi, rax	       483	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_4
0x158f	      0xbf00000000	                              mov edi, 0	       483	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_4
0x1594	      0xe800000000	                          call 0x40015d9	       483	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_4
0x1599	            0x85c0	                           test eax, eax	       483	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_4
0x159b	     0xf89f8000000	                           jns 0x40016d9	       483	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_4
0x15a1	      0xbf00000000	                              mov edi, 0	       485	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_6
0x15a6	      0xe802efffff	                               call sym.	       485	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_6
0x15ab	          0x4889c1	                            mov rcx, rax	       485	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_6
0x15ae	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       485	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_6
0x15b2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       485	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_6
0x15b6	          0x4889c6	                            mov rsi, rax	       485	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_6
0x15b9	          0x4889cf	                            mov rdi, rcx	       485	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_6
0x15bc	      0xb800000000	                              mov eax, 0	       485	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_6
0x15c1	      0xe800000000	                          call 0x4001606	       485	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_6
0x15c6	      0xe9ce000000	                           jmp 0x40016d9	       485	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_6
0x15cb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       487	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_7
0x15cf	      0xbe00000000	                              mov esi, 0	       487	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_7
0x15d4	          0x4889c7	                            mov rdi, rax	       487	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_7
0x15d7	      0xe800000000	                          call 0x400161c	       487	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_7
0x15dc	            0x85c0	                           test eax, eax	       487	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_7
0x15de	            0x7540	                           jne 0x4001660	       487	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_7
0x15e0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       488	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	IF_6	CALL_8
0x15e4	          0x4889c6	                            mov rsi, rax	       488	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	IF_6	CALL_8
0x15e7	      0xbf00000000	                              mov edi, 0	       488	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	IF_6	CALL_8
0x15ec	      0xe800000000	                          call 0x4001631	       488	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	IF_6	CALL_8
0x15f1	            0x85c0	                           test eax, eax	       488	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	IF_6	CALL_8
0x15f3	     0xf89a0000000	                           jns 0x40016d9	       488	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	IF_6	CALL_8
0x15f9	      0xbf00000000	                              mov edi, 0	       490	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	IF_6	CALL_10
0x15fe	      0xe8aaeeffff	                               call sym.	       490	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	IF_6	CALL_10
0x1603	          0x4889c1	                            mov rcx, rax	       490	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	IF_6	CALL_10
0x1606	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       490	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	IF_6	CALL_10
0x160a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       490	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	IF_6	CALL_10
0x160e	          0x4889c6	                            mov rsi, rax	       490	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	IF_6	CALL_10
0x1611	          0x4889cf	                            mov rdi, rcx	       490	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	IF_6	CALL_10
0x1614	      0xb800000000	                              mov eax, 0	       490	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	IF_6	CALL_10
0x1619	      0xe800000000	                          call 0x400165e	       490	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	IF_6	CALL_10
0x161e	            0xeb79	                           jmp 0x40016d9	       490	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	IF_6	CALL_10
0x1620	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       492	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	CALL_11
0x1624	      0xbe00000000	                              mov esi, 0	       492	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	CALL_11
0x1629	          0x4889c7	                            mov rdi, rax	       492	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	CALL_11
0x162c	      0xe800000000	                          call 0x4001671	       492	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	CALL_11
0x1631	            0x85c0	                           test eax, eax	       492	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	CALL_11
0x1633	            0x753c	                           jne 0x40016b1	       492	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	CALL_11
0x1635	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       493	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_12
0x1639	          0x4889c6	                            mov rsi, rax	       493	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_12
0x163c	      0xbf00000000	                              mov edi, 0	       493	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_12
0x1641	      0xe800000000	                          call 0x4001686	       493	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_12
0x1646	            0x85c0	                           test eax, eax	       493	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_12
0x1648	            0x794f	                           jns 0x40016d9	       493	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_12
0x164a	      0xbf00000000	                              mov edi, 0	       495	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_14
0x164f	      0xe859eeffff	                               call sym.	       495	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_14
0x1654	          0x4889c1	                            mov rcx, rax	       495	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_14
0x1657	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       495	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_14
0x165b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       495	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_14
0x165f	          0x4889c6	                            mov rsi, rax	       495	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_14
0x1662	          0x4889cf	                            mov rdi, rcx	       495	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_14
0x1665	      0xb800000000	                              mov eax, 0	       495	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_14
0x166a	      0xe800000000	                          call 0x40016af	       495	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_14
0x166f	            0xeb28	                           jmp 0x40016d9	       495	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_14
0x1671	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       497	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_15
0x1675	      0xbe00000000	                              mov esi, 0	       497	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_15
0x167a	          0x4889c7	                            mov rdi, rax	       497	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_15
0x167d	      0xe800000000	                          call 0x40016c2	       497	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_15
0x1682	            0x85c0	                           test eax, eax	       497	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_15
0x1684	            0x7513	                           jne 0x40016d9	       497	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_15
0x1686	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       498	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_16
0x168a	          0x4889c7	                            mov rdi, rax	       498	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_16
0x168d	      0xe800000000	                          call 0x40016d2	       498	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_16
0x1692	    0x488905000000	            mov qword [0x040016d9], rax 	       498	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_16
0x1699	      0xb800000000	                              mov eax, 0	       501	trailer.c	FUNCTION_27
0x169e	        0x488b4df8	                mov rcx, qword [rbp - 8]	       502	trailer.c	FUNCTION_27
0x16a2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       502	trailer.c	FUNCTION_27
0x16ab	            0x7405	                            je 0x40016f2	       502	trailer.c	FUNCTION_27
0x16ad	      0xe800000000	                          call 0x40016f2	       502	trailer.c	FUNCTION_27
0x16b2	              0xc9	                                   leave	       502	trailer.c	FUNCTION_27
0x16b3	              0xc3	                                     ret	       502	trailer.c	FUNCTION_27
apply_arg_if_exists	CALL,16:DO,0:SWITCH,1:WHILE,0:functions,0:ELSE,2:FOR,0:IF,2	103
0xdfc	              0x55	                                push rbp	       271	trailer.c	FUNCTION_18
0xdfd	          0x4889e5	                            mov rbp, rsp	       271	trailer.c	FUNCTION_18
0xe00	        0x4883ec20	                           sub rsp, 0x20	       271	trailer.c	FUNCTION_18
0xe04	        0x48897df8	                mov qword [rbp - 8], rdi	       271	trailer.c	FUNCTION_18
0xe08	        0x488975f0	             mov qword [rbp - 0x10], rsi	       271	trailer.c	FUNCTION_18
0xe0c	        0x488955e8	             mov qword [rbp - 0x18], rdx	       271	trailer.c	FUNCTION_18
0xe10	        0x48894de0	             mov qword [rbp - 0x20], rcx	       271	trailer.c	FUNCTION_18
0xe14	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       272	trailer.c	FUNCTION_18	SWITCH_1
0xe18	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       272	trailer.c	FUNCTION_18	SWITCH_1
0xe1b	          0x83f805	                              cmp eax, 5	       272	trailer.c	FUNCTION_18	SWITCH_1
0xe1e	     0xf8737010000	                            ja 0x4000f9b	       272	trailer.c	FUNCTION_18	SWITCH_1
0xe24	            0x89c0	                            mov eax, eax	       272	trailer.c	FUNCTION_18	SWITCH_1
0xe26	    0x488b04c50000	                  mov rax, qword [rax*8]	       272	trailer.c	FUNCTION_18	SWITCH_1
0xe2e	            0xffe0	                                 jmp rax	       272	trailer.c	FUNCTION_18	SWITCH_1
0xe30	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       274	trailer.c	FUNCTION_18	SWITCH_1	CALL_1
0xe34	          0x4889c7	                            mov rdi, rax	       274	trailer.c	FUNCTION_18	SWITCH_1	CALL_1
0xe37	      0xe8baf9ffff	                  call sym.free_arg_item	       274	trailer.c	FUNCTION_18	SWITCH_1	CALL_1
0xe3c	      0xe932010000	                           jmp 0x4000fb3	       275	trailer.c	FUNCTION_18	SWITCH_1
0xe41	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       277	trailer.c	FUNCTION_18	SWITCH_1	CALL_2
0xe45	        0x488b45f8	                mov rax, qword [rbp - 8]	       277	trailer.c	FUNCTION_18	SWITCH_1	CALL_2
0xe49	          0x4889d6	                            mov rsi, rdx	       277	trailer.c	FUNCTION_18	SWITCH_1	CALL_2
0xe4c	          0x4889c7	                            mov rdi, rax	       277	trailer.c	FUNCTION_18	SWITCH_1	CALL_2
0xe4f	      0xe8f4feffff	             call sym.apply_item_command	       277	trailer.c	FUNCTION_18	SWITCH_1	CALL_2
0xe54	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       278	trailer.c	FUNCTION_18	SWITCH_1	CALL_3
0xe58	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       278	trailer.c	FUNCTION_18	SWITCH_1	CALL_3
0xe5c	          0x4889d6	                            mov rsi, rdx	       278	trailer.c	FUNCTION_18	SWITCH_1	CALL_3
0xe5f	          0x4889c7	                            mov rdi, rax	       278	trailer.c	FUNCTION_18	SWITCH_1	CALL_3
0xe62	      0xe81efcffff	          call sym.add_arg_to_input_list	       278	trailer.c	FUNCTION_18	SWITCH_1	CALL_3
0xe67	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	trailer.c	FUNCTION_18	SWITCH_1	CALL_4
0xe6b	          0x4889c7	                            mov rdi, rax	       279	trailer.c	FUNCTION_18	SWITCH_1	CALL_4
0xe6e	      0xe8f6f5ffff	                       call sym.list_del	       279	trailer.c	FUNCTION_18	SWITCH_1	CALL_4
0xe73	        0x488b45f8	                mov rax, qword [rbp - 8]	       280	trailer.c	FUNCTION_18	SWITCH_1	CALL_5
0xe77	          0x4889c7	                            mov rdi, rax	       280	trailer.c	FUNCTION_18	SWITCH_1	CALL_5
0xe7a	      0xe83cf9ffff	              call sym.free_trailer_item	       280	trailer.c	FUNCTION_18	SWITCH_1	CALL_5
0xe7f	      0xe9ef000000	                           jmp 0x4000fb3	       281	trailer.c	FUNCTION_18	SWITCH_1
0xe84	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       283	trailer.c	FUNCTION_18	SWITCH_1	CALL_6
0xe88	        0x488b45f8	                mov rax, qword [rbp - 8]	       283	trailer.c	FUNCTION_18	SWITCH_1	CALL_6
0xe8c	          0x4889d6	                            mov rsi, rdx	       283	trailer.c	FUNCTION_18	SWITCH_1	CALL_6
0xe8f	          0x4889c7	                            mov rdi, rax	       283	trailer.c	FUNCTION_18	SWITCH_1	CALL_6
0xe92	      0xe8b1feffff	             call sym.apply_item_command	       283	trailer.c	FUNCTION_18	SWITCH_1	CALL_6
0xe97	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       284	trailer.c	FUNCTION_18	SWITCH_1	CALL_7
0xe9b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       284	trailer.c	FUNCTION_18	SWITCH_1	CALL_7
0xe9f	          0x4889d6	                            mov rsi, rdx	       284	trailer.c	FUNCTION_18	SWITCH_1	CALL_7
0xea2	          0x4889c7	                            mov rdi, rax	       284	trailer.c	FUNCTION_18	SWITCH_1	CALL_7
0xea5	      0xe8dbfbffff	          call sym.add_arg_to_input_list	       284	trailer.c	FUNCTION_18	SWITCH_1	CALL_7
0xeaa	      0xe9c4000000	                           jmp 0x4000fb3	       285	trailer.c	FUNCTION_18	SWITCH_1
0xeaf	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       287	trailer.c	FUNCTION_18	SWITCH_1	CALL_8
0xeb3	        0x488b45f8	                mov rax, qword [rbp - 8]	       287	trailer.c	FUNCTION_18	SWITCH_1	CALL_8
0xeb7	          0x4889d6	                            mov rsi, rdx	       287	trailer.c	FUNCTION_18	SWITCH_1	CALL_8
0xeba	          0x4889c7	                            mov rdi, rax	       287	trailer.c	FUNCTION_18	SWITCH_1	CALL_8
0xebd	      0xe886feffff	             call sym.apply_item_command	       287	trailer.c	FUNCTION_18	SWITCH_1	CALL_8
0xec2	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       288	trailer.c	FUNCTION_18	SWITCH_1	IF_1	CALL_9
0xec6	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       288	trailer.c	FUNCTION_18	SWITCH_1	IF_1	CALL_9
0xeca	        0x488b45f8	                mov rax, qword [rbp - 8]	       288	trailer.c	FUNCTION_18	SWITCH_1	IF_1	CALL_9
0xece	          0x4889d1	                            mov rcx, rdx	       288	trailer.c	FUNCTION_18	SWITCH_1	IF_1	CALL_9
0xed1	      0xba01000000	                              mov edx, 1	       288	trailer.c	FUNCTION_18	SWITCH_1	IF_1	CALL_9
0xed6	          0x4889c7	                            mov rdi, rax	       288	trailer.c	FUNCTION_18	SWITCH_1	IF_1	CALL_9
0xed9	      0xe809fcffff	             call sym.check_if_different	       288	trailer.c	FUNCTION_18	SWITCH_1	IF_1	CALL_9
0xede	            0x85c0	                           test eax, eax	       288	trailer.c	FUNCTION_18	SWITCH_1	IF_1	CALL_9
0xee0	            0x7415	                            je 0x4000f37	       288	trailer.c	FUNCTION_18	SWITCH_1	IF_1	CALL_9
0xee2	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       289	trailer.c	FUNCTION_18	SWITCH_1	CALL_10
0xee6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       289	trailer.c	FUNCTION_18	SWITCH_1	CALL_10
0xeea	          0x4889d6	                            mov rsi, rdx	       289	trailer.c	FUNCTION_18	SWITCH_1	CALL_10
0xeed	          0x4889c7	                            mov rdi, rax	       289	trailer.c	FUNCTION_18	SWITCH_1	CALL_10
0xef0	      0xe890fbffff	          call sym.add_arg_to_input_list	       289	trailer.c	FUNCTION_18	SWITCH_1	CALL_10
0xef5	            0xeb7c	                           jmp 0x4000fb3	       292	trailer.c	FUNCTION_18	SWITCH_1
0xef7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       291	trailer.c	FUNCTION_18	SWITCH_1	CALL_11
0xefb	          0x4889c7	                            mov rdi, rax	       291	trailer.c	FUNCTION_18	SWITCH_1	CALL_11
0xefe	      0xe8f3f8ffff	                  call sym.free_arg_item	       291	trailer.c	FUNCTION_18	SWITCH_1	CALL_11
0xf03	            0xeb6e	                           jmp 0x4000fb3	       292	trailer.c	FUNCTION_18	SWITCH_1
0xf05	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       294	trailer.c	FUNCTION_18	SWITCH_1	CALL_12
0xf09	        0x488b45f8	                mov rax, qword [rbp - 8]	       294	trailer.c	FUNCTION_18	SWITCH_1	CALL_12
0xf0d	          0x4889d6	                            mov rsi, rdx	       294	trailer.c	FUNCTION_18	SWITCH_1	CALL_12
0xf10	          0x4889c7	                            mov rdi, rax	       294	trailer.c	FUNCTION_18	SWITCH_1	CALL_12
0xf13	      0xe830feffff	             call sym.apply_item_command	       294	trailer.c	FUNCTION_18	SWITCH_1	CALL_12
0xf18	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       295	trailer.c	FUNCTION_18	SWITCH_1	IF_2	CALL_13
0xf1c	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       295	trailer.c	FUNCTION_18	SWITCH_1	IF_2	CALL_13
0xf20	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       295	trailer.c	FUNCTION_18	SWITCH_1	IF_2	CALL_13
0xf24	          0x4889d1	                            mov rcx, rdx	       295	trailer.c	FUNCTION_18	SWITCH_1	IF_2	CALL_13
0xf27	      0xba00000000	                              mov edx, 0	       295	trailer.c	FUNCTION_18	SWITCH_1	IF_2	CALL_13
0xf2c	          0x4889c7	                            mov rdi, rax	       295	trailer.c	FUNCTION_18	SWITCH_1	IF_2	CALL_13
0xf2f	      0xe8b3fbffff	             call sym.check_if_different	       295	trailer.c	FUNCTION_18	SWITCH_1	IF_2	CALL_13
0xf34	            0x85c0	                           test eax, eax	       295	trailer.c	FUNCTION_18	SWITCH_1	IF_2	CALL_13
0xf36	            0x7415	                            je 0x4000f8d	       295	trailer.c	FUNCTION_18	SWITCH_1	IF_2	CALL_13
0xf38	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       296	trailer.c	FUNCTION_18	SWITCH_1	CALL_14
0xf3c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       296	trailer.c	FUNCTION_18	SWITCH_1	CALL_14
0xf40	          0x4889d6	                            mov rsi, rdx	       296	trailer.c	FUNCTION_18	SWITCH_1	CALL_14
0xf43	          0x4889c7	                            mov rdi, rax	       296	trailer.c	FUNCTION_18	SWITCH_1	CALL_14
0xf46	      0xe83afbffff	          call sym.add_arg_to_input_list	       296	trailer.c	FUNCTION_18	SWITCH_1	CALL_14
0xf4b	            0xeb26	                           jmp 0x4000fb3	       299	trailer.c	FUNCTION_18	SWITCH_1
0xf4d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       298	trailer.c	FUNCTION_18	SWITCH_1	CALL_15
0xf51	          0x4889c7	                            mov rdi, rax	       298	trailer.c	FUNCTION_18	SWITCH_1	CALL_15
0xf54	      0xe89df8ffff	                  call sym.free_arg_item	       298	trailer.c	FUNCTION_18	SWITCH_1	CALL_15
0xf59	            0xeb18	                           jmp 0x4000fb3	       299	trailer.c	FUNCTION_18	SWITCH_1
0xf5b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       302	trailer.c	FUNCTION_18	SWITCH_1
0xf5f	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       302	trailer.c	FUNCTION_18	SWITCH_1
0xf62	            0x89c6	                            mov esi, eax	       301	trailer.c	FUNCTION_18	SWITCH_1	CALL_16
0xf64	      0xbf00000000	                              mov edi, 0	       301	trailer.c	FUNCTION_18	SWITCH_1	CALL_16
0xf69	      0xb800000000	                              mov eax, 0	       301	trailer.c	FUNCTION_18	SWITCH_1	CALL_16
0xf6e	      0xe800000000	                          call 0x4000fb3	       301	trailer.c	FUNCTION_18	SWITCH_1	CALL_16
0xf73	              0x90	                                     nop	       304	trailer.c	FUNCTION_18
0xf74	              0xc9	                                   leave	       304	trailer.c	FUNCTION_18
0xf75	              0xc3	                                     ret	       304	trailer.c	FUNCTION_18
st_mult	CALL,2:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,1	22
0xe2	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_81
0xe3	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_81
0xe6	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_81
0xea	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_81
0xee	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_81
0xf2	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_81	IF_1	CALL_1
0xf7	            0x7430	                            je 0x4000169	       795	git-compat-util.h	FUNCTION_81	IF_1	CALL_1
0xf9	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_81	IF_1	CALL_1
0x100	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_81	IF_1	CALL_1
0x105	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_81	IF_1	CALL_1
0x109	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_81	IF_1	CALL_1
0x10d	            0x731a	                           jae 0x4000169	       795	git-compat-util.h	FUNCTION_81	IF_1	CALL_1
0x10f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_81	IF_1	CALL_2
0x113	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_81	IF_1	CALL_2
0x117	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_81	IF_1	CALL_2
0x11a	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_81	IF_1	CALL_2
0x11f	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_81	IF_1	CALL_2
0x124	      0xe800000000	                          call 0x4000169	       796	git-compat-util.h	FUNCTION_81	IF_1	CALL_2
0x129	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_81
0x12d	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_81
0x132	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_81
0x133	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_81
xstrdup_or_null	CALL,1:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,0	13
0x134	              0x55	                                push rbp	       923	git-compat-util.h	FUNCTION_85
0x135	          0x4889e5	                            mov rbp, rsp	       923	git-compat-util.h	FUNCTION_85
0x138	        0x4883ec10	                           sub rsp, 0x10	       923	git-compat-util.h	FUNCTION_85
0x13c	        0x48897df8	                mov qword [rbp - 8], rdi	       923	git-compat-util.h	FUNCTION_85
0x140	      0x48837df800	                  cmp qword [rbp - 8], 0	       924	git-compat-util.h	FUNCTION_85	CALL_1
0x145	            0x740e	                            je 0x4000195	       924	git-compat-util.h	FUNCTION_85	CALL_1
0x147	        0x488b45f8	                mov rax, qword [rbp - 8]	       924	git-compat-util.h	FUNCTION_85	CALL_1
0x14b	          0x4889c7	                            mov rdi, rax	       924	git-compat-util.h	FUNCTION_85	CALL_1
0x14e	      0xe800000000	                          call 0x4000193	       924	git-compat-util.h	FUNCTION_85	CALL_1
0x153	            0xeb05	                           jmp 0x400019a	       924	git-compat-util.h	FUNCTION_85	CALL_1
0x155	      0xb800000000	                              mov eax, 0	       924	git-compat-util.h	FUNCTION_85	CALL_1
0x15a	              0xc9	                                   leave	       925	git-compat-util.h	FUNCTION_85
0x15b	              0xc3	                                     ret	       925	git-compat-util.h	FUNCTION_85
next_line	CALL,1:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,0	18
0x2123	              0x55	                                push rbp	       758	trailer.c	FUNCTION_38
0x2124	          0x4889e5	                            mov rbp, rsp	       758	trailer.c	FUNCTION_38
0x2127	        0x4883ec20	                           sub rsp, 0x20	       758	trailer.c	FUNCTION_38
0x212b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       758	trailer.c	FUNCTION_38
0x212f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       759	trailer.c	FUNCTION_38	CALL_1
0x2133	      0xbe0a000000	                            mov esi, 0xa	       759	trailer.c	FUNCTION_38	CALL_1
0x2138	          0x4889c7	                            mov rdi, rax	       759	trailer.c	FUNCTION_38	CALL_1
0x213b	      0xe800000000	                          call 0x4002180	       759	trailer.c	FUNCTION_38	CALL_1
0x2140	        0x488945f8	                mov qword [rbp - 8], rax	       759	trailer.c	FUNCTION_38	CALL_1
0x2144	        0x488b45f8	                mov rax, qword [rbp - 8]	       760	trailer.c	FUNCTION_38
0x2148	           0xfb600	                   movzx eax, byte [rax]	       760	trailer.c	FUNCTION_38
0x214b	            0x84c0	                             test al, al	       760	trailer.c	FUNCTION_38
0x214d	           0xf95c0	                                setne al	       760	trailer.c	FUNCTION_38
0x2150	           0xfb6d0	                           movzx edx, al	       760	trailer.c	FUNCTION_38
0x2153	        0x488b45f8	                mov rax, qword [rbp - 8]	       760	trailer.c	FUNCTION_38
0x2157	          0x4801d0	                            add rax, rdx	       760	trailer.c	FUNCTION_38
0x215a	              0xc9	                                   leave	       761	trailer.c	FUNCTION_38
0x215b	              0xc3	                                     ret	       761	trailer.c	FUNCTION_38
strip_suffix_mem	CALL,2:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,1	38
0x61	              0x55	                                push rbp	       538	git-compat-util.h	FUNCTION_76
0x62	          0x4889e5	                            mov rbp, rsp	       538	git-compat-util.h	FUNCTION_76
0x65	        0x4883ec30	                           sub rsp, 0x30	       538	git-compat-util.h	FUNCTION_76
0x69	        0x48897de8	             mov qword [rbp - 0x18], rdi	       538	git-compat-util.h	FUNCTION_76
0x6d	        0x488975e0	             mov qword [rbp - 0x20], rsi	       538	git-compat-util.h	FUNCTION_76
0x71	        0x488955d8	             mov qword [rbp - 0x28], rdx	       538	git-compat-util.h	FUNCTION_76
0x75	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       539	git-compat-util.h	FUNCTION_76	CALL_1
0x79	          0x4889c7	                            mov rdi, rax	       539	git-compat-util.h	FUNCTION_76	CALL_1
0x7c	      0xe800000000	                          call 0x40000c1	       539	git-compat-util.h	FUNCTION_76	CALL_1
0x81	        0x488945f8	                mov qword [rbp - 8], rax	       539	git-compat-util.h	FUNCTION_76	CALL_1
0x85	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       540	git-compat-util.h	FUNCTION_76	IF_1	CALL_2
0x89	          0x488b00	                    mov rax, qword [rax]	       540	git-compat-util.h	FUNCTION_76	IF_1	CALL_2
0x8c	        0x483b45f8	                cmp rax, qword [rbp - 8]	       540	git-compat-util.h	FUNCTION_76	IF_1	CALL_2
0x90	            0x722d	                            jb 0x40000ff	       540	git-compat-util.h	FUNCTION_76	IF_1	CALL_2
0x92	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       540	git-compat-util.h	FUNCTION_76	IF_1	CALL_2
0x96	          0x488b00	                    mov rax, qword [rax]	       540	git-compat-util.h	FUNCTION_76	IF_1	CALL_2
0x99	        0x482b45f8	                sub rax, qword [rbp - 8]	       540	git-compat-util.h	FUNCTION_76	IF_1	CALL_2
0x9d	          0x4889c2	                            mov rdx, rax	       540	git-compat-util.h	FUNCTION_76	IF_1	CALL_2
0xa0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       540	git-compat-util.h	FUNCTION_76	IF_1	CALL_2
0xa4	        0x488d0c02	                    lea rcx, [rdx + rax]	       540	git-compat-util.h	FUNCTION_76	IF_1	CALL_2
0xa8	        0x488b55f8	                mov rdx, qword [rbp - 8]	       540	git-compat-util.h	FUNCTION_76	IF_1	CALL_2
0xac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       540	git-compat-util.h	FUNCTION_76	IF_1	CALL_2
0xb0	          0x4889c6	                            mov rsi, rax	       540	git-compat-util.h	FUNCTION_76	IF_1	CALL_2
0xb3	          0x4889cf	                            mov rdi, rcx	       540	git-compat-util.h	FUNCTION_76	IF_1	CALL_2
0xb6	      0xe800000000	                          call 0x40000fb	       540	git-compat-util.h	FUNCTION_76	IF_1	CALL_2
0xbb	            0x85c0	                           test eax, eax	       540	git-compat-util.h	FUNCTION_76	IF_1	CALL_2
0xbd	            0x7407	                            je 0x4000106	       540	git-compat-util.h	FUNCTION_76	IF_1	CALL_2
0xbf	      0xb800000000	                              mov eax, 0	       541	git-compat-util.h	FUNCTION_76	IF_1
0xc4	            0xeb1a	                           jmp 0x4000120	       541	git-compat-util.h	FUNCTION_76	IF_1
0xc6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       542	git-compat-util.h	FUNCTION_76
0xca	          0x488b00	                    mov rax, qword [rax]	       542	git-compat-util.h	FUNCTION_76
0xcd	        0x482b45f8	                sub rax, qword [rbp - 8]	       542	git-compat-util.h	FUNCTION_76
0xd1	          0x4889c2	                            mov rdx, rax	       542	git-compat-util.h	FUNCTION_76
0xd4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       542	git-compat-util.h	FUNCTION_76
0xd8	          0x488910	                    mov qword [rax], rdx	       542	git-compat-util.h	FUNCTION_76
0xdb	      0xb801000000	                              mov eax, 1	       543	git-compat-util.h	FUNCTION_76
0xe0	              0xc9	                                   leave	       544	git-compat-util.h	FUNCTION_76
0xe1	              0xc3	                                     ret	       544	git-compat-util.h	FUNCTION_76
after_or_end	CALL,0:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,0:IF,0	12
0x523	              0x55	                                push rbp	        62	trailer.c	FUNCTION_1
0x524	          0x4889e5	                            mov rbp, rsp	        62	trailer.c	FUNCTION_1
0x527	          0x897dfc	                mov dword [rbp - 4], edi	        62	trailer.c	FUNCTION_1
0x52a	        0x837dfc02	                  cmp dword [rbp - 4], 2	        63	trailer.c	FUNCTION_1
0x52e	            0x7406	                            je 0x4000576	        63	trailer.c	FUNCTION_1
0x530	        0x837dfc01	                  cmp dword [rbp - 4], 1	        63	trailer.c	FUNCTION_1
0x534	            0x7507	                           jne 0x400057d	        63	trailer.c	FUNCTION_1
0x536	      0xb801000000	                              mov eax, 1	        63	trailer.c	FUNCTION_1
0x53b	            0xeb05	                           jmp 0x4000582	        63	trailer.c	FUNCTION_1
0x53d	      0xb800000000	                              mov eax, 0	        63	trailer.c	FUNCTION_1
0x542	              0x5d	                                 pop rbp	        64	trailer.c	FUNCTION_1
0x543	              0xc3	                                     ret	        64	trailer.c	FUNCTION_1
format_trailer_info	CALL,8:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,1:FOR,1:IF,4	108
0x307c	              0x55	                                push rbp	      1123	trailer.c	FUNCTION_51
0x307d	          0x4889e5	                            mov rbp, rsp	      1123	trailer.c	FUNCTION_51
0x3080	        0x4883ec70	                           sub rsp, 0x70	      1123	trailer.c	FUNCTION_51
0x3084	        0x48897da8	             mov qword [rbp - 0x58], rdi	      1123	trailer.c	FUNCTION_51
0x3088	        0x488975a0	             mov qword [rbp - 0x60], rsi	      1123	trailer.c	FUNCTION_51
0x308c	        0x48895598	             mov qword [rbp - 0x68], rdx	      1123	trailer.c	FUNCTION_51
0x3090	    0x64488b042528	                mov rax, qword fs:[0x28]	      1123	trailer.c	FUNCTION_51
0x3099	        0x488945f8	                mov qword [rbp - 8], rax	      1123	trailer.c	FUNCTION_51
0x309d	            0x31c0	                            xor eax, eax	      1123	trailer.c	FUNCTION_51
0x309f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1127	trailer.c	FUNCTION_51	IF_1
0x30a3	          0x8b4008	                mov eax, dword [rax + 8]	      1127	trailer.c	FUNCTION_51	IF_1
0x30a6	            0x85c0	                           test eax, eax	      1127	trailer.c	FUNCTION_51	IF_1
0x30a8	            0x7543	                           jne 0x400312d	      1127	trailer.c	FUNCTION_51	IF_1
0x30aa	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1127	trailer.c	FUNCTION_51	IF_1
0x30ae	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1127	trailer.c	FUNCTION_51	IF_1
0x30b1	            0x85c0	                           test eax, eax	      1127	trailer.c	FUNCTION_51	IF_1
0x30b3	            0x7538	                           jne 0x400312d	      1127	trailer.c	FUNCTION_51	IF_1
0x30b5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1129	trailer.c	FUNCTION_51	IF_1
0x30b9	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1129	trailer.c	FUNCTION_51	IF_1
0x30bd	          0x4889c2	                            mov rdx, rax	      1129	trailer.c	FUNCTION_51	IF_1
0x30c0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1129	trailer.c	FUNCTION_51	IF_1
0x30c4	        0x488b4008	                mov rax, qword [rax + 8]	      1129	trailer.c	FUNCTION_51	IF_1
0x30c8	          0x4829c2	                            sub rdx, rax	      1129	trailer.c	FUNCTION_51	IF_1
0x30cb	          0x4889d0	                            mov rax, rdx	      1129	trailer.c	FUNCTION_51	IF_1
0x30ce	          0x4889c2	                            mov rdx, rax	      1128	trailer.c	FUNCTION_51	IF_1	CALL_1
0x30d1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1128	trailer.c	FUNCTION_51	IF_1	CALL_1
0x30d5	        0x488b4808	                mov rcx, qword [rax + 8]	      1128	trailer.c	FUNCTION_51	IF_1	CALL_1
0x30d9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1128	trailer.c	FUNCTION_51	IF_1	CALL_1
0x30dd	          0x4889ce	                            mov rsi, rcx	      1128	trailer.c	FUNCTION_51	IF_1	CALL_1
0x30e0	          0x4889c7	                            mov rdi, rax	      1128	trailer.c	FUNCTION_51	IF_1	CALL_1
0x30e3	      0xe800000000	                          call 0x4003128	      1128	trailer.c	FUNCTION_51	IF_1	CALL_1
0x30e8	      0xe925010000	                           jmp 0x4003252	      1130	trailer.c	FUNCTION_51	IF_1
0x30ed	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      1133	trailer.c	FUNCTION_51	FOR_1
0x30f4	      0xe902010000	                           jmp 0x400323b	      1133	trailer.c	FUNCTION_51	FOR_1
0x30f9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1134	trailer.c	FUNCTION_51	FOR_1
0x30fd	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1134	trailer.c	FUNCTION_51	FOR_1
0x3101	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      1134	trailer.c	FUNCTION_51	FOR_1
0x3104	          0x4863d2	                         movsxd rdx, edx	      1134	trailer.c	FUNCTION_51	FOR_1
0x3107	        0x48c1e203	                              shl rdx, 3	      1134	trailer.c	FUNCTION_51	FOR_1
0x310b	          0x4801d0	                            add rax, rdx	      1134	trailer.c	FUNCTION_51	FOR_1
0x310e	          0x488b00	                    mov rax, qword [rax]	      1134	trailer.c	FUNCTION_51	FOR_1
0x3111	        0x488945b8	             mov qword [rbp - 0x48], rax	      1134	trailer.c	FUNCTION_51	FOR_1
0x3115	    0x488b15000000	            mov rdx, qword [0x0400315c] 	      1135	trailer.c	FUNCTION_51	FOR_1	CALL_2
0x311c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1135	trailer.c	FUNCTION_51	FOR_1	CALL_2
0x3120	          0x4889d6	                            mov rsi, rdx	      1135	trailer.c	FUNCTION_51	FOR_1	CALL_2
0x3123	          0x4889c7	                            mov rdi, rax	      1135	trailer.c	FUNCTION_51	FOR_1	CALL_2
0x3126	      0xe86fe9ffff	                 call sym.find_separator	      1135	trailer.c	FUNCTION_51	FOR_1	CALL_2
0x312b	          0x8945b4	             mov dword [rbp - 0x4c], eax	      1135	trailer.c	FUNCTION_51	FOR_1	CALL_2
0x312e	        0x837db400	               cmp dword [rbp - 0x4c], 0	      1137	trailer.c	FUNCTION_51	FOR_1	IF_2
0x3132	     0xf8ea1000000	                           jle 0x4003219	      1137	trailer.c	FUNCTION_51	FOR_1	IF_2
0x3138	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1138	trailer.c	FUNCTION_51	FOR_1	IF_2
0x3140	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1138	trailer.c	FUNCTION_51	FOR_1	IF_2
0x3148	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1138	trailer.c	FUNCTION_51	FOR_1	IF_2
0x3150	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1139	trailer.c	FUNCTION_51	FOR_1	IF_2
0x3158	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1139	trailer.c	FUNCTION_51	FOR_1	IF_2
0x3160	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1139	trailer.c	FUNCTION_51	FOR_1	IF_2
0x3168	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      1141	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_3
0x316b	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1141	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_3
0x316f	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      1141	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_3
0x3173	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1141	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_3
0x3177	          0x4189c8	                            mov r8d, ecx	      1141	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_3
0x317a	          0x4889d1	                            mov rcx, rdx	      1141	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_3
0x317d	      0xba00000000	                              mov edx, 0	      1141	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_3
0x3182	          0x4889c7	                            mov rdi, rax	      1141	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_3
0x3185	      0xe8d7e9ffff	                  call sym.parse_trailer	      1141	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_3
0x318a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1142	trailer.c	FUNCTION_51	FOR_1	IF_2	IF_3
0x318e	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1142	trailer.c	FUNCTION_51	FOR_1	IF_2	IF_3
0x3191	            0x85c0	                           test eax, eax	      1142	trailer.c	FUNCTION_51	FOR_1	IF_2	IF_3
0x3193	            0x740c	                            je 0x40031e1	      1142	trailer.c	FUNCTION_51	FOR_1	IF_2	IF_3
0x3195	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1143	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_4
0x3199	          0x4889c7	                            mov rdi, rax	      1143	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_4
0x319c	      0xe8c9f3ffff	                   call sym.unfold_value	      1143	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_4
0x31a1	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      1145	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_5
0x31a5	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1145	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_5
0x31a9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1145	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_5
0x31ad	      0xbe00000000	                              mov esi, 0	      1145	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_5
0x31b2	          0x4889c7	                            mov rdi, rax	      1145	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_5
0x31b5	      0xb800000000	                              mov eax, 0	      1145	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_5
0x31ba	      0xe800000000	                          call 0x40031ff	      1145	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_5
0x31bf	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1146	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_6
0x31c3	          0x4889c7	                            mov rdi, rax	      1146	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_6
0x31c6	      0xe800000000	                          call 0x400320b	      1146	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_6
0x31cb	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1147	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_7
0x31cf	          0x4889c7	                            mov rdi, rax	      1147	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_7
0x31d2	      0xe800000000	                          call 0x4003217	      1147	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_7
0x31d7	            0xeb1e	                           jmp 0x4003237	      1147	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_7
0x31d9	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1149	trailer.c	FUNCTION_51	FOR_1	ELSE_1	IF_4
0x31dd	          0x8b4008	                mov eax, dword [rax + 8]	      1149	trailer.c	FUNCTION_51	FOR_1	ELSE_1	IF_4
0x31e0	            0x85c0	                           test eax, eax	      1149	trailer.c	FUNCTION_51	FOR_1	ELSE_1	IF_4
0x31e2	            0x7513	                           jne 0x4003237	      1149	trailer.c	FUNCTION_51	FOR_1	ELSE_1	IF_4
0x31e4	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1150	trailer.c	FUNCTION_51	FOR_1	ELSE_1	IF_4	CALL_8
0x31e8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1150	trailer.c	FUNCTION_51	FOR_1	ELSE_1	IF_4	CALL_8
0x31ec	          0x4889d6	                            mov rsi, rdx	      1150	trailer.c	FUNCTION_51	FOR_1	ELSE_1	IF_4	CALL_8
0x31ef	          0x4889c7	                            mov rdi, rax	      1150	trailer.c	FUNCTION_51	FOR_1	ELSE_1	IF_4	CALL_8
0x31f2	      0xe837d1ffff	                  call sym.strbuf_addstr	      1150	trailer.c	FUNCTION_51	FOR_1	ELSE_1	IF_4	CALL_8
0x31f7	        0x8345b001	               add dword [rbp - 0x50], 1	      1133	trailer.c	FUNCTION_51	FOR_1
0x31fb	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1133	trailer.c	FUNCTION_51	FOR_1
0x31fe	          0x4863d0	                         movsxd rdx, eax	      1133	trailer.c	FUNCTION_51	FOR_1
0x3201	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1133	trailer.c	FUNCTION_51	FOR_1
0x3205	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1133	trailer.c	FUNCTION_51	FOR_1
0x3209	          0x4839c2	                            cmp rdx, rax	      1133	trailer.c	FUNCTION_51	FOR_1
0x320c	     0xf82e7feffff	                            jb 0x4003139	      1133	trailer.c	FUNCTION_51	FOR_1
0x3212	        0x488b45f8	                mov rax, qword [rbp - 8]	      1154	trailer.c	FUNCTION_51
0x3216	    0x644833042528	                xor rax, qword fs:[0x28]	      1154	trailer.c	FUNCTION_51
0x321f	            0x7405	                            je 0x4003266	      1154	trailer.c	FUNCTION_51
0x3221	      0xe800000000	                          call 0x4003266	      1154	trailer.c	FUNCTION_51
0x3226	              0xc9	                                   leave	      1154	trailer.c	FUNCTION_51
0x3227	              0xc3	                                     ret	      1154	trailer.c	FUNCTION_51
trailer_info_get	CALL,16:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0:FOR,1:IF,1	202
0x2d10	              0x55	                                push rbp	      1070	trailer.c	FUNCTION_49
0x2d11	          0x4889e5	                            mov rbp, rsp	      1070	trailer.c	FUNCTION_49
0x2d14	              0x53	                                push rbx	      1070	trailer.c	FUNCTION_49
0x2d15	        0x4883ec78	                           sub rsp, 0x78	      1070	trailer.c	FUNCTION_49
0x2d19	        0x48897d88	             mov qword [rbp - 0x78], rdi	      1070	trailer.c	FUNCTION_49
0x2d1d	        0x48897580	             mov qword [rbp - 0x80], rsi	      1070	trailer.c	FUNCTION_49
0x2d21	    0x64488b042528	                mov rax, qword fs:[0x28]	      1070	trailer.c	FUNCTION_49
0x2d2a	        0x488945e8	             mov qword [rbp - 0x18], rax	      1070	trailer.c	FUNCTION_49
0x2d2e	            0x31c0	                            xor eax, eax	      1070	trailer.c	FUNCTION_49
0x2d30	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1073	trailer.c	FUNCTION_49
0x2d38	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      1074	trailer.c	FUNCTION_49
0x2d40	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      1074	trailer.c	FUNCTION_49
0x2d48	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1075	trailer.c	FUNCTION_49
0x2d50	      0xe83aecffff	              call sym.ensure_configured	      1077	trailer.c	FUNCTION_49	CALL_1
0x2d55	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1079	trailer.c	FUNCTION_49	CALL_2
0x2d59	          0x4889c7	                            mov rdi, rax	      1079	trailer.c	FUNCTION_49	CALL_2
0x2d5c	      0xe85cf4ffff	               call sym.find_patch_start	      1079	trailer.c	FUNCTION_49	CALL_2
0x2d61	          0x894594	             mov dword [rbp - 0x6c], eax	      1079	trailer.c	FUNCTION_49	CALL_2
0x2d64	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      1080	trailer.c	FUNCTION_49	CALL_3
0x2d67	          0x4863d0	                         movsxd rdx, eax	      1080	trailer.c	FUNCTION_49	CALL_3
0x2d6a	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1080	trailer.c	FUNCTION_49	CALL_3
0x2d6e	          0x4889d6	                            mov rsi, rdx	      1080	trailer.c	FUNCTION_49	CALL_3
0x2d71	          0x4889c7	                            mov rdi, rax	      1080	trailer.c	FUNCTION_49	CALL_3
0x2d74	      0xe872f7ffff	               call sym.find_trailer_end	      1080	trailer.c	FUNCTION_49	CALL_3
0x2d79	          0x894598	             mov dword [rbp - 0x68], eax	      1080	trailer.c	FUNCTION_49	CALL_3
0x2d7c	          0x8b4598	             mov eax, dword [rbp - 0x68]	      1081	trailer.c	FUNCTION_49	CALL_4
0x2d7f	          0x4863d0	                         movsxd rdx, eax	      1081	trailer.c	FUNCTION_49	CALL_4
0x2d82	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1081	trailer.c	FUNCTION_49	CALL_4
0x2d86	          0x4889d6	                            mov rsi, rdx	      1081	trailer.c	FUNCTION_49	CALL_4
0x2d89	          0x4889c7	                            mov rdi, rax	      1081	trailer.c	FUNCTION_49	CALL_4
0x2d8c	      0xe892f4ffff	             call sym.find_trailer_start	      1081	trailer.c	FUNCTION_49	CALL_4
0x2d91	          0x89459c	             mov dword [rbp - 0x64], eax	      1081	trailer.c	FUNCTION_49	CALL_4
0x2d94	          0x8b4598	             mov eax, dword [rbp - 0x68]	      1084	trailer.c	FUNCTION_49
0x2d97	          0x2b459c	             sub eax, dword [rbp - 0x64]	      1084	trailer.c	FUNCTION_49
0x2d9a	            0x4898	                                    cdqe	      1083	trailer.c	FUNCTION_49	CALL_5
0x2d9c	          0x8b559c	             mov edx, dword [rbp - 0x64]	      1083	trailer.c	FUNCTION_49	CALL_5
0x2d9f	          0x4863ca	                         movsxd rcx, edx	      1083	trailer.c	FUNCTION_49	CALL_5
0x2da2	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      1083	trailer.c	FUNCTION_49	CALL_5
0x2da6	        0x488d3c11	                    lea rdi, [rcx + rdx]	      1083	trailer.c	FUNCTION_49	CALL_5
0x2daa	      0xb900000000	                              mov ecx, 0	      1083	trailer.c	FUNCTION_49	CALL_5
0x2daf	      0xba0a000000	                            mov edx, 0xa	      1083	trailer.c	FUNCTION_49	CALL_5
0x2db4	          0x4889c6	                            mov rsi, rax	      1083	trailer.c	FUNCTION_49	CALL_5
0x2db7	      0xe800000000	                          call 0x4002dfc	      1083	trailer.c	FUNCTION_49	CALL_5
0x2dbc	        0x488945c8	             mov qword [rbp - 0x38], rax	      1083	trailer.c	FUNCTION_49	CALL_5
0x2dc0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1087	trailer.c	FUNCTION_49	FOR_1
0x2dc4	        0x488945a0	             mov qword [rbp - 0x60], rax	      1087	trailer.c	FUNCTION_49	FOR_1
0x2dc8	      0xe9b9010000	                           jmp 0x4002fc6	      1087	trailer.c	FUNCTION_49	FOR_1
0x2dcd	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1088	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_6
0x2dd2	     0xf84b0000000	                            je 0x4002ec8	      1088	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_6
0x2dd8	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1088	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_6
0x2ddc	          0x488b00	                    mov rax, qword [rax]	      1088	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_6
0x2ddf	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1088	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_6
0x2de3	           0xfb600	                   movzx eax, byte [rax]	      1088	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_6
0x2de6	           0xfb6c0	                           movzx eax, al	      1088	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_6
0x2de9	            0x4898	                                    cdqe	      1088	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_6
0x2deb	     0xfb680000000	                   movzx eax, byte [rax]	      1088	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_6
0x2df2	           0xfb6c0	                           movzx eax, al	      1088	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_6
0x2df5	          0x83e001	                              and eax, 1	      1088	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_6
0x2df8	            0x85c0	                           test eax, eax	      1088	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_6
0x2dfa	     0xf8488000000	                            je 0x4002ec8	      1088	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_6
0x2e00	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1089	trailer.c	FUNCTION_49	FOR_1	IF_1
0x2e08	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      1089	trailer.c	FUNCTION_49	FOR_1	IF_1
0x2e10	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1089	trailer.c	FUNCTION_49	FOR_1	IF_1
0x2e18	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_9
0x2e1c	          0x488b00	                    mov rax, qword [rax]	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_9
0x2e1f	          0x4889c7	                            mov rdi, rax	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_9
0x2e22	      0xe800000000	                          call 0x4002e67	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_9
0x2e27	          0x4889c3	                            mov rbx, rax	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_9
0x2e2a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_9
0x2e2e	          0x488b00	                    mov rax, qword [rax]	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_9
0x2e31	          0x4889c7	                            mov rdi, rax	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_9
0x2e34	      0xe800000000	                          call 0x4002e79	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_9
0x2e39	          0x4889c2	                            mov rdx, rax	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_9
0x2e3c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_9
0x2e40	          0x488b30	                    mov rsi, qword [rax]	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_9
0x2e43	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_9
0x2e47	          0x4889d9	                            mov rcx, rbx	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_9
0x2e4a	          0x4889c7	                            mov rdi, rax	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_9
0x2e4d	      0xe800000000	                          call 0x4002e92	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_9
0x2e52	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1091	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_10
0x2e56	          0x488b10	                    mov rdx, qword [rax]	      1091	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_10
0x2e59	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1091	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_10
0x2e5d	          0x4889d6	                            mov rsi, rdx	      1091	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_10
0x2e60	          0x4889c7	                            mov rdi, rax	      1091	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_10
0x2e63	      0xe800000000	                          call 0x4002ea8	      1091	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_10
0x2e68	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1092	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_11
0x2e6c	      0xbe00000000	                              mov esi, 0	      1092	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_11
0x2e71	          0x4889c7	                            mov rdi, rax	      1092	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_11
0x2e74	      0xe800000000	                          call 0x4002eb9	      1092	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_11
0x2e79	          0x4889c2	                            mov rdx, rax	      1092	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_11
0x2e7c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1092	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_11
0x2e80	          0x488910	                    mov qword [rax], rdx	      1092	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_11
0x2e83	      0xe9f9000000	                           jmp 0x4002fc1	      1092	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_11
0x2e88	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2e8c	        0x4883c001	                              add rax, 1	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2e90	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2e94	            0x7671	                           jbe 0x4002f47	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2e96	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2e9a	          0x4889d0	                            mov rax, rdx	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2e9d	          0x4801c0	                            add rax, rax	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2ea0	          0x4801d0	                            add rax, rdx	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2ea3	        0x4883c030	                           add rax, 0x30	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2ea7	          0x48d1e8	                              shr rax, 1	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2eaa	          0x4889c2	                            mov rdx, rax	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2ead	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2eb1	        0x4883c001	                              add rax, 1	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2eb5	          0x4839c2	                            cmp rdx, rax	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2eb8	            0x730e	                           jae 0x4002f08	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2eba	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2ebe	        0x4883c001	                              add rax, 1	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2ec2	        0x488945b8	             mov qword [rbp - 0x48], rax	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2ec6	            0xeb18	                           jmp 0x4002f20	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2ec8	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2ecc	          0x4889d0	                            mov rax, rdx	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2ecf	          0x4801c0	                            add rax, rax	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2ed2	          0x4801d0	                            add rax, rdx	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2ed5	        0x4883c030	                           add rax, 0x30	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2ed9	          0x48d1e8	                              shr rax, 1	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2edc	        0x488945b8	             mov qword [rbp - 0x48], rax	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2ee0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2ee4	          0x4889c6	                            mov rsi, rax	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2ee7	      0xbf08000000	                              mov edi, 8	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2eec	      0xe8f1d1ffff	                        call sym.st_mult	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2ef1	          0x4889c2	                            mov rdx, rax	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2ef4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2ef8	          0x4889d6	                            mov rsi, rdx	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2efb	          0x4889c7	                            mov rdi, rax	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2efe	      0xe800000000	                          call 0x4002f43	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2f03	        0x488945a8	             mov qword [rbp - 0x58], rax	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x2f07	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1096	trailer.c	FUNCTION_49	FOR_1	CALL_13
0x2f0b	    0x488d14c50000	                        lea rdx, [rax*8]	      1096	trailer.c	FUNCTION_49	FOR_1	CALL_13
0x2f13	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1096	trailer.c	FUNCTION_49	FOR_1	CALL_13
0x2f17	        0x488d1c02	                    lea rbx, [rdx + rax]	      1096	trailer.c	FUNCTION_49	FOR_1	CALL_13
0x2f1b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1096	trailer.c	FUNCTION_49	FOR_1	CALL_13
0x2f1f	          0x488b00	                    mov rax, qword [rax]	      1096	trailer.c	FUNCTION_49	FOR_1	CALL_13
0x2f22	      0xbe00000000	                              mov esi, 0	      1096	trailer.c	FUNCTION_49	FOR_1	CALL_13
0x2f27	          0x4889c7	                            mov rdi, rax	      1096	trailer.c	FUNCTION_49	FOR_1	CALL_13
0x2f2a	      0xe800000000	                          call 0x4002f6f	      1096	trailer.c	FUNCTION_49	FOR_1	CALL_13
0x2f2f	          0x488903	                    mov qword [rbx], rax	      1096	trailer.c	FUNCTION_49	FOR_1	CALL_13
0x2f32	    0x488b15000000	            mov rdx, qword [0x04002f79] 	      1097	trailer.c	FUNCTION_49	FOR_1	CALL_14
0x2f39	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1097	trailer.c	FUNCTION_49	FOR_1	CALL_14
0x2f3d	    0x488d0cc50000	                        lea rcx, [rax*8]	      1097	trailer.c	FUNCTION_49	FOR_1	CALL_14
0x2f45	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1097	trailer.c	FUNCTION_49	FOR_1	CALL_14
0x2f49	          0x4801c8	                            add rax, rcx	      1097	trailer.c	FUNCTION_49	FOR_1	CALL_14
0x2f4c	          0x488b00	                    mov rax, qword [rax]	      1097	trailer.c	FUNCTION_49	FOR_1	CALL_14
0x2f4f	          0x4889d6	                            mov rsi, rdx	      1097	trailer.c	FUNCTION_49	FOR_1	CALL_14
0x2f52	          0x4889c7	                            mov rdi, rax	      1097	trailer.c	FUNCTION_49	FOR_1	CALL_14
0x2f55	      0xe840ebffff	                 call sym.find_separator	      1097	trailer.c	FUNCTION_49	FOR_1	CALL_14
0x2f5a	            0x85c0	                           test eax, eax	      1099	trailer.c	FUNCTION_49	FOR_1
0x2f5c	            0x7e15	                           jle 0x4002fb3	      1099	trailer.c	FUNCTION_49	FOR_1
0x2f5e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1098	trailer.c	FUNCTION_49	FOR_1
0x2f62	    0x488d14c50000	                        lea rdx, [rax*8]	      1098	trailer.c	FUNCTION_49	FOR_1
0x2f6a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1099	trailer.c	FUNCTION_49	FOR_1
0x2f6e	          0x4801d0	                            add rax, rdx	      1099	trailer.c	FUNCTION_49	FOR_1
0x2f71	            0xeb05	                           jmp 0x4002fb8	      1099	trailer.c	FUNCTION_49	FOR_1
0x2f73	      0xb800000000	                              mov eax, 0	      1099	trailer.c	FUNCTION_49	FOR_1
0x2f78	        0x488945c0	             mov qword [rbp - 0x40], rax	      1097	trailer.c	FUNCTION_49	FOR_1	CALL_14
0x2f7c	      0x488345b001	               add qword [rbp - 0x50], 1	      1100	trailer.c	FUNCTION_49	FOR_1
0x2f81	      0x488345a008	               add qword [rbp - 0x60], 8	      1087	trailer.c	FUNCTION_49	FOR_1
0x2f86	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1087	trailer.c	FUNCTION_49	FOR_1
0x2f8a	          0x488b00	                    mov rax, qword [rax]	      1087	trailer.c	FUNCTION_49	FOR_1
0x2f8d	          0x4885c0	                           test rax, rax	      1087	trailer.c	FUNCTION_49	FOR_1
0x2f90	     0xf8537feffff	                           jne 0x4002e0d	      1087	trailer.c	FUNCTION_49	FOR_1
0x2f96	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1102	trailer.c	FUNCTION_49	CALL_15
0x2f9a	          0x4889c7	                            mov rdi, rax	      1102	trailer.c	FUNCTION_49	CALL_15
0x2f9d	      0xe800000000	                          call 0x4002fe2	      1102	trailer.c	FUNCTION_49	CALL_15
0x2fa2	          0x8b459c	             mov eax, dword [rbp - 0x64]	      1104	trailer.c	FUNCTION_49	CALL_16
0x2fa5	          0x4863d0	                         movsxd rdx, eax	      1104	trailer.c	FUNCTION_49	CALL_16
0x2fa8	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1104	trailer.c	FUNCTION_49	CALL_16
0x2fac	          0x4889d6	                            mov rsi, rdx	      1104	trailer.c	FUNCTION_49	CALL_16
0x2faf	          0x4889c7	                            mov rdi, rax	      1104	trailer.c	FUNCTION_49	CALL_16
0x2fb2	      0xe869f5ffff	           call sym.ends_with_blank_line	      1104	trailer.c	FUNCTION_49	CALL_16
0x2fb7	            0x89c2	                            mov edx, eax	      1104	trailer.c	FUNCTION_49	CALL_16
0x2fb9	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1104	trailer.c	FUNCTION_49	CALL_16
0x2fbd	            0x8910	                    mov dword [rax], edx	      1104	trailer.c	FUNCTION_49	CALL_16
0x2fbf	          0x8b459c	             mov eax, dword [rbp - 0x64]	      1106	trailer.c	FUNCTION_49
0x2fc2	          0x4863d0	                         movsxd rdx, eax	      1106	trailer.c	FUNCTION_49
0x2fc5	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1106	trailer.c	FUNCTION_49
0x2fc9	          0x4801c2	                            add rdx, rax	      1106	trailer.c	FUNCTION_49
0x2fcc	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1106	trailer.c	FUNCTION_49
0x2fd0	        0x48895008	                mov qword [rax + 8], rdx	      1106	trailer.c	FUNCTION_49
0x2fd4	          0x8b4598	             mov eax, dword [rbp - 0x68]	      1107	trailer.c	FUNCTION_49
0x2fd7	          0x4863d0	                         movsxd rdx, eax	      1107	trailer.c	FUNCTION_49
0x2fda	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1107	trailer.c	FUNCTION_49
0x2fde	          0x4801c2	                            add rdx, rax	      1107	trailer.c	FUNCTION_49
0x2fe1	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1107	trailer.c	FUNCTION_49
0x2fe5	        0x48895010	             mov qword [rax + 0x10], rdx	      1107	trailer.c	FUNCTION_49
0x2fe9	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1108	trailer.c	FUNCTION_49
0x2fed	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1108	trailer.c	FUNCTION_49
0x2ff1	        0x48895018	             mov qword [rax + 0x18], rdx	      1108	trailer.c	FUNCTION_49
0x2ff5	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1109	trailer.c	FUNCTION_49
0x2ff9	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1109	trailer.c	FUNCTION_49
0x2ffd	        0x48895020	             mov qword [rax + 0x20], rdx	      1109	trailer.c	FUNCTION_49
0x3001	              0x90	                                     nop	      1110	trailer.c	FUNCTION_49
0x3002	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1110	trailer.c	FUNCTION_49
0x3006	    0x644833042528	                xor rax, qword fs:[0x28]	      1110	trailer.c	FUNCTION_49
0x300f	            0x7405	                            je 0x4003056	      1110	trailer.c	FUNCTION_49
0x3011	      0xe800000000	                          call 0x4003056	      1110	trailer.c	FUNCTION_49
0x3016	        0x4883c478	                           add rsp, 0x78	      1110	trailer.c	FUNCTION_49
0x301a	              0x5b	                                 pop rbx	      1110	trailer.c	FUNCTION_49
0x301b	              0x5d	                                 pop rbp	      1110	trailer.c	FUNCTION_49
0x301c	              0xc3	                                     ret	      1110	trailer.c	FUNCTION_49
