channel_clear_one	IF,0:ELSE,0:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,4:CALL,10	137
0x4002028	            0x4155	                                push r13	      2977	channel.c	FUNCTION_71
0x400202a	            0x4154	                                push r12	      2977	channel.c	FUNCTION_71
0x400202c	              0x55	                                push rbp	      2977	channel.c	FUNCTION_71
0x400202d	              0x53	                                push rbx	      2977	channel.c	FUNCTION_71
0x400202e	        0x4883ec08	                              sub rsp, 8	      2977	channel.c	FUNCTION_71
0x4002032	          0x4989fd	                            mov r13, rdi	      2977	channel.c	FUNCTION_71
0x4002035	          0x4189f4	                           mov r12d, esi	      2977	channel.c	FUNCTION_71
0x4002038	            0x89f0	                            mov eax, esi	      1615	channel.c	FUNCTION_44
0x400203a	          0x4889c2	                            mov rdx, rax	      1615	channel.c	FUNCTION_44
0x400203d	        0x48c1e204	                              shl rdx, 4	      1615	channel.c	FUNCTION_44
0x4002041	        0x48c1e008	                              shl rax, 8	      1615	channel.c	FUNCTION_44
0x4002045	          0x4801d0	                            add rax, rdx	      1615	channel.c	FUNCTION_44
0x4002048	    0x48837c074000	         cmp qword [rdi + rax + 0x40], 0	      2982	channel.c	FUNCTION_71	WHILE_1	CALL_1
0x400204e	            0x7426	                            je 0x4002076	      2982	channel.c	FUNCTION_71	WHILE_1	CALL_1
0x4002050	            0x89f3	                            mov ebx, esi	      1615	channel.c	FUNCTION_44
0x4002052	        0x48c1e308	                              shl rbx, 8	      1615	channel.c	FUNCTION_44
0x4002056	          0x4801d3	                            add rbx, rdx	      1615	channel.c	FUNCTION_44
0x4002059	          0x4801fb	                            add rbx, rdi	      1615	channel.c	FUNCTION_44
0x400205c	          0x4489e6	                           mov esi, r12d	      2983	channel.c	FUNCTION_71	CALL_3
0x400205f	          0x4c89ef	                            mov rdi, r13	      2983	channel.c	FUNCTION_71	CALL_3
0x4002062	      0xe800000000	                          call 0x4002067	      2983	channel.c	FUNCTION_71	CALL_3
0x4002067	          0x4889c7	                            mov rdi, rax	      2983	channel.c	FUNCTION_71	CALL_3
0x400206a	      0xe800000000	                          call 0x400206f	      2983	channel.c	FUNCTION_71	CALL_3
0x400206f	      0x48837b4000	               cmp qword [rbx + 0x40], 0	      2982	channel.c	FUNCTION_71	WHILE_1	CALL_1
0x4002074	            0x75e6	                           jne 0x400205c	      2982	channel.c	FUNCTION_71	WHILE_1	CALL_1
0x4002076	          0x4489e0	                           mov eax, r12d	      2985	channel.c	FUNCTION_71	WHILE_2
0x4002079	          0x4889c2	                            mov rdx, rax	      2985	channel.c	FUNCTION_71	WHILE_2
0x400207c	        0x48c1e204	                              shl rdx, 4	      2985	channel.c	FUNCTION_71	WHILE_2
0x4002080	        0x48c1e008	                              shl rax, 8	      2985	channel.c	FUNCTION_71	WHILE_2
0x4002084	          0x4801d0	                            add rax, rdx	      2985	channel.c	FUNCTION_71	WHILE_2
0x4002087	    0x498b9c05d800	      mov rbx, qword [r13 + rax + 0xd8] 	      2985	channel.c	FUNCTION_71	WHILE_2
0x400208f	          0x4885db	                           test rbx, rbx	      2985	channel.c	FUNCTION_71	WHILE_2
0x4002092	            0x7469	                            je 0x40020fd	      2985	channel.c	FUNCTION_71	WHILE_2
0x4002094	          0x4489e5	                           mov ebp, r12d	      2058	channel.c	FUNCTION_53	IF_1
0x4002097	        0x48c1e508	                              shl rbp, 8	      2058	channel.c	FUNCTION_53	IF_1
0x400209b	          0x4801d5	                            add rbp, rdx	      2058	channel.c	FUNCTION_53	IF_1
0x400209e	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      2057	channel.c	FUNCTION_53	IF_1
0x40020a2	          0x4885c0	                           test rax, rax	      2057	channel.c	FUNCTION_53	IF_1
0x40020a5	            0x750e	                           jne 0x40020b5	      2057	channel.c	FUNCTION_53	IF_1
0x40020a7	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2058	channel.c	FUNCTION_53	IF_1
0x40020ab	    0x4989842dd800	       mov qword [r13 + rbp + 0xd8], rax	      2058	channel.c	FUNCTION_53	IF_1
0x40020b3	            0xeb08	                           jmp 0x40020bd	      2058	channel.c	FUNCTION_53	IF_1
0x40020b5	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      2060	channel.c	FUNCTION_53	ELSE_1
0x40020b9	        0x48895018	             mov qword [rax + 0x18], rdx	      2060	channel.c	FUNCTION_53	ELSE_1
0x40020bd	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2061	channel.c	FUNCTION_53	IF_2
0x40020c1	          0x4885c0	                           test rax, rax	      2061	channel.c	FUNCTION_53	IF_2
0x40020c4	            0x750e	                           jne 0x40020d4	      2061	channel.c	FUNCTION_53	IF_2
0x40020c6	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      2062	channel.c	FUNCTION_53	IF_2
0x40020ca	    0x4989842de000	       mov qword [r13 + rbp + 0xe0], rax	      2062	channel.c	FUNCTION_53	IF_2
0x40020d2	            0xeb08	                           jmp 0x40020dc	      2062	channel.c	FUNCTION_53	IF_2
0x40020d4	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      2064	channel.c	FUNCTION_53	ELSE_2
0x40020d8	        0x48895020	             mov qword [rax + 0x20], rdx	      2064	channel.c	FUNCTION_53	ELSE_2
0x40020dc	        0x488b7308	                mov rsi, qword [rbx + 8]	      2990	channel.c	FUNCTION_71	WHILE_2	CALL_5
0x40020e0	          0x488b3b	                    mov rdi, qword [rbx]	      2990	channel.c	FUNCTION_71	WHILE_2	CALL_5
0x40020e3	      0xe800000000	                          call 0x40020e8	      2990	channel.c	FUNCTION_71	WHILE_2	CALL_5
0x40020e8	          0x4889df	                            mov rdi, rbx	      2991	channel.c	FUNCTION_71	WHILE_2	CALL_6
0x40020eb	      0xe800000000	                          call 0x40020f0	      2991	channel.c	FUNCTION_71	WHILE_2	CALL_6
0x40020f0	    0x498b9c2dd800	      mov rbx, qword [r13 + rbp + 0xd8] 	      2985	channel.c	FUNCTION_71	WHILE_2
0x40020f8	          0x4885db	                           test rbx, rbx	      2985	channel.c	FUNCTION_71	WHILE_2
0x40020fb	            0x75a1	                           jne 0x400209e	      2985	channel.c	FUNCTION_71	WHILE_2
0x40020fd	          0x4489e0	                           mov eax, r12d	      2994	channel.c	FUNCTION_71	WHILE_3
0x4002100	          0x4889c2	                            mov rdx, rax	      2994	channel.c	FUNCTION_71	WHILE_3
0x4002103	        0x48c1e204	                              shl rdx, 4	      2994	channel.c	FUNCTION_71	WHILE_3
0x4002107	        0x48c1e008	                              shl rax, 8	      2994	channel.c	FUNCTION_71	WHILE_3
0x400210b	          0x4801d0	                            add rax, rdx	      2994	channel.c	FUNCTION_71	WHILE_3
0x400210e	      0x498b440558	      mov rax, qword [r13 + rax + 0x58] 	      2994	channel.c	FUNCTION_71	WHILE_3
0x4002113	          0x4885c0	                           test rax, rax	      2994	channel.c	FUNCTION_71	WHILE_3
0x4002116	            0x7464	                            je 0x400217c	      2994	channel.c	FUNCTION_71	WHILE_3
0x4002118	          0x4489e3	                           mov ebx, r12d	      2997	channel.c	FUNCTION_71	WHILE_3	CALL_8
0x400211b	          0x4889da	                            mov rdx, rbx	      2997	channel.c	FUNCTION_71	WHILE_3	CALL_8
0x400211e	        0x48c1e204	                              shl rdx, 4	      2997	channel.c	FUNCTION_71	WHILE_3	CALL_8
0x4002122	        0x48c1e308	                              shl rbx, 8	      2997	channel.c	FUNCTION_71	WHILE_3	CALL_8
0x4002126	          0x4801d3	                            add rbx, rdx	      2997	channel.c	FUNCTION_71	WHILE_3	CALL_8
0x4002129	          0x4c01eb	                            add rbx, r13	      2997	channel.c	FUNCTION_71	WHILE_3	CALL_8
0x400212c	          0x488b38	                    mov rdi, qword [rax]	      2996	channel.c	FUNCTION_71	WHILE_3	CALL_7
0x400212f	      0xe800000000	                          call 0x4002134	      2996	channel.c	FUNCTION_71	WHILE_3	CALL_7
0x4002134	        0x488b7b58	            mov rdi, qword [rbx + 0x58] 	      2997	channel.c	FUNCTION_71	WHILE_3	CALL_8
0x4002138	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      2074	channel.c	ELSE_2	FUNCTION_54	IF_1
0x400213c	          0x4885c0	                           test rax, rax	      2074	channel.c	ELSE_2	FUNCTION_54	IF_1
0x400213f	            0x750a	                           jne 0x400214b	      2074	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4002141	        0x488b4708	                mov rax, qword [rdi + 8]	      2075	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4002145	        0x48894358	             mov qword [rbx + 0x58], rax	      2075	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4002149	            0xeb08	                           jmp 0x4002153	      2075	channel.c	ELSE_2	FUNCTION_54	IF_1
0x400214b	        0x488b5708	                mov rdx, qword [rdi + 8]	      2077	channel.c	ELSE_2	FUNCTION_54	ELSE_1
0x400214f	        0x48895008	                mov qword [rax + 8], rdx	      2077	channel.c	ELSE_2	FUNCTION_54	ELSE_1
0x4002153	        0x488b4708	                mov rax, qword [rdi + 8]	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4002157	          0x4885c0	                           test rax, rax	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x400215a	            0x750a	                           jne 0x4002166	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x400215c	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      2079	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4002160	        0x48894360	             mov qword [rbx + 0x60], rax	      2079	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4002164	            0xeb08	                           jmp 0x400216e	      2079	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4002166	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	      2081	channel.c	FUNCTION_54	ELSE_2
0x400216a	        0x48895010	             mov qword [rax + 0x10], rdx	      2081	channel.c	FUNCTION_54	ELSE_2
0x400216e	      0xe800000000	                          call 0x4002173	      2082	channel.c	FUNCTION_54	ELSE_2	CALL_1
0x4002173	        0x488b4358	            mov rax, qword [rbx + 0x58] 	      2994	channel.c	FUNCTION_71	WHILE_3
0x4002177	          0x4885c0	                           test rax, rax	      2994	channel.c	FUNCTION_71	WHILE_3
0x400217a	            0x75b0	                           jne 0x400212c	      2994	channel.c	FUNCTION_71	WHILE_3
0x400217c	          0x4489e3	                           mov ebx, r12d	      3000	channel.c	FUNCTION_71	CALL_9
0x400217f	          0x4889d8	                            mov rax, rbx	      3000	channel.c	FUNCTION_71	CALL_9
0x4002182	        0x48c1e004	                              shl rax, 4	      3000	channel.c	FUNCTION_71	CALL_9
0x4002186	        0x48c1e308	                              shl rbx, 8	      3000	channel.c	FUNCTION_71	CALL_9
0x400218a	          0x4801c3	                            add rbx, rax	      3000	channel.c	FUNCTION_71	CALL_9
0x400218d	          0x4c01eb	                            add rbx, r13	      3000	channel.c	FUNCTION_71	CALL_9
0x4002190	    0x488bb3f00000	            mov rsi, qword [rbx + 0xf0] 	      3000	channel.c	FUNCTION_71	CALL_9
0x4002197	    0x488bbbe80000	            mov rdi, qword [rbx + 0xe8] 	      3000	channel.c	FUNCTION_71	CALL_9
0x400219e	      0xe800000000	                          call 0x40021a3	      3000	channel.c	FUNCTION_71	CALL_9
0x40021a3	    0x48c783e80000	               mov qword [rbx + 0xe8], 0	      3001	channel.c	FUNCTION_71
0x40021ae	    0x48c783f00000	               mov qword [rbx + 0xf0], 0	      3002	channel.c	FUNCTION_71
0x40021b9	    0x488b9bb00000	            mov rbx, qword [rbx + 0xb0] 	      3004	channel.c	FUNCTION_71	WHILE_4
0x40021c0	          0x4885db	                           test rbx, rbx	      3004	channel.c	FUNCTION_71	WHILE_4
0x40021c3	            0x7455	                            je 0x400221a	      3004	channel.c	FUNCTION_71	WHILE_4
0x40021c5	          0x4589e4	                          mov r12d, r12d	      2964	channel.c	FUNCTION_70
0x40021c8	          0x4c89e5	                            mov rbp, r12	      2964	channel.c	FUNCTION_70
0x40021cb	        0x48c1e504	                              shl rbp, 4	      2964	channel.c	FUNCTION_70
0x40021cf	        0x49c1e408	                              shl r12, 8	      2964	channel.c	FUNCTION_70
0x40021d3	          0x4c01e5	                            add rbp, r12	      2964	channel.c	FUNCTION_70
0x40021d6	          0x4c01ed	                            add rbp, r13	      2964	channel.c	FUNCTION_70
0x40021d9	          0x4889df	                            mov rdi, rbx	      2963	channel.c	FUNCTION_70	CALL_1
0x40021dc	      0xe800000000	                          call 0x40021e1	      2963	channel.c	FUNCTION_70	CALL_1
0x40021e1	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2964	channel.c	FUNCTION_70
0x40021e5	    0x488985b00000	            mov qword [rbp + 0xb0], rax 	      2964	channel.c	FUNCTION_70
0x40021ec	          0x4885c0	                           test rax, rax	      2965	channel.c	FUNCTION_70	IF_1
0x40021ef	            0x750d	                           jne 0x40021fe	      2965	channel.c	FUNCTION_70	IF_1
0x40021f1	    0x48c785b80000	               mov qword [rbp + 0xb8], 0	      2966	channel.c	FUNCTION_70	IF_1
0x40021fc	            0xeb08	                           jmp 0x4002206	      2966	channel.c	FUNCTION_70	IF_1
0x40021fe	    0x48c740200000	               mov qword [rax + 0x20], 0	      2968	channel.c	FUNCTION_70	ELSE_1
0x4002206	          0x4889df	                            mov rdi, rbx	      2969	channel.c	FUNCTION_70	CALL_2
0x4002209	      0xe800000000	                          call 0x400220e	      2969	channel.c	FUNCTION_70	CALL_2
0x400220e	    0x488b9db00000	            mov rbx, qword [rbp + 0xb0] 	      3004	channel.c	FUNCTION_71	WHILE_4
0x4002215	          0x4885db	                           test rbx, rbx	      3004	channel.c	FUNCTION_71	WHILE_4
0x4002218	            0x75bf	                           jne 0x40021d9	      3004	channel.c	FUNCTION_71	WHILE_4
0x400221a	        0x4883c408	                              add rsp, 8	      3007	channel.c	FUNCTION_71
0x400221e	              0x5b	                                 pop rbx	      3007	channel.c	FUNCTION_71
0x400221f	              0x5d	                                 pop rbp	      3007	channel.c	FUNCTION_71
0x4002220	            0x415c	                                 pop r12	      3007	channel.c	FUNCTION_71
0x4002222	            0x415d	                                 pop r13	      3007	channel.c	FUNCTION_71
0x4002224	              0xc3	                                     ret	      3007	channel.c	FUNCTION_71
channel_set_nonblock	IF,1:ELSE,0:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,2	28
0x400293b	            0x89f0	                            mov eax, esi	      3674	channel.c	FUNCTION_86
0x400293d	          0x4889c2	                            mov rdx, rax	      3674	channel.c	FUNCTION_86
0x4002940	        0x48c1e204	                              shl rdx, 4	      3674	channel.c	FUNCTION_86
0x4002944	        0x48c1e008	                              shl rax, 8	      3674	channel.c	FUNCTION_86
0x4002948	          0x4801d0	                            add rax, rdx	      3674	channel.c	FUNCTION_86
0x400294b	        0x8b440718	      mov eax, dword [rdi + rax + 0x18] 	      3674	channel.c	FUNCTION_86
0x400294f	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3676	channel.c	FUNCTION_86	IF_1
0x4002952	            0x7442	                            je 0x4002996	      3676	channel.c	FUNCTION_86	IF_1
0x4002954	              0x55	                                push rbp	      3672	channel.c	FUNCTION_86
0x4002955	              0x53	                                push rbx	      3672	channel.c	FUNCTION_86
0x4002956	        0x4883ec08	                              sub rsp, 8	      3672	channel.c	FUNCTION_86
0x400295a	            0x89f3	                            mov ebx, esi	      3672	channel.c	FUNCTION_86
0x400295c	          0x4889fd	                            mov rbp, rdi	      3672	channel.c	FUNCTION_86
0x400295f	      0xba00080000	                          mov edx, 0x800	      3683	channel.c	FUNCTION_86	IF_1	CALL_2
0x4002964	      0xbe04000000	                              mov esi, 4	      3683	channel.c	FUNCTION_86	IF_1	CALL_2
0x4002969	            0x89c7	                            mov edi, eax	      3683	channel.c	FUNCTION_86	IF_1	CALL_2
0x400296b	      0xb800000000	                              mov eax, 0	      3683	channel.c	FUNCTION_86	IF_1	CALL_2
0x4002970	      0xe800000000	                          call 0x4002975	      3683	channel.c	FUNCTION_86	IF_1	CALL_2
0x4002975	            0x89de	                            mov esi, ebx	      3685	channel.c	FUNCTION_86	IF_1
0x4002977	          0x4889f0	                            mov rax, rsi	      3685	channel.c	FUNCTION_86	IF_1
0x400297a	        0x48c1e004	                              shl rax, 4	      3685	channel.c	FUNCTION_86	IF_1
0x400297e	        0x48c1e608	                              shl rsi, 8	      3685	channel.c	FUNCTION_86	IF_1
0x4002982	          0x4801c6	                            add rsi, rax	      3685	channel.c	FUNCTION_86	IF_1
0x4002985	    0xc78435940000	        mov dword [rbp + rsi + 0x94], 1 	      3685	channel.c	FUNCTION_86	IF_1
0x4002990	        0x4883c408	                              add rsp, 8	      3687	channel.c	FUNCTION_86
0x4002994	              0x5b	                                 pop rbx	      3687	channel.c	FUNCTION_86
0x4002995	              0x5d	                                 pop rbp	      3687	channel.c	FUNCTION_86
0x4002996	            0xf3c3	                                     ret	      3687	channel.c	FUNCTION_86
clear_job_options	IF,0:ELSE,0:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,1	12
0x400590b	          0x4889f9	                            mov rcx, rdi	      4443	channel.c	FUNCTION_104
0x400590e	    0x48c707000000	                      mov qword [rdi], 0	        90	string3.h	FUNCTION_138	CALL_6
0x4005915	    0x48c787700300	              mov qword [rdi + 0x370], 0	        90	string3.h	FUNCTION_138	CALL_6
0x4005920	        0x488d7f08	                      lea rdi, [rdi + 8]	        90	string3.h	FUNCTION_138	CALL_6
0x4005924	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_138	CALL_6
0x4005928	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_138	CALL_6
0x400592b	    0x81c178030000	                          add ecx, 0x378	        90	string3.h	FUNCTION_138	CALL_6
0x4005931	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_138	CALL_6
0x4005934	            0x89c9	                            mov ecx, ecx	        90	string3.h	FUNCTION_138	CALL_6
0x4005936	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_138	CALL_6
0x400593b	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_138	CALL_6
0x400593e	              0xc3	                                     ret	        90	string3.h	FUNCTION_138	CALL_6
common_channel_read	IF,8:ELSE,2:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,10	100
0x4006fe9	            0x4155	                                push r13	      3531	channel.c	FUNCTION_82
0x4006feb	            0x4154	                                push r12	      3531	channel.c	FUNCTION_82
0x4006fed	              0x55	                                push rbp	      3531	channel.c	FUNCTION_82
0x4006fee	              0x53	                                push rbx	      3531	channel.c	FUNCTION_82
0x4006fef	    0x4881ec980300	                          sub rsp, 0x398	      3531	channel.c	FUNCTION_82
0x4006ff6	          0x4989fd	                            mov r13, rdi	      3531	channel.c	FUNCTION_82
0x4006ff9	          0x4889f3	                            mov rbx, rsi	      3531	channel.c	FUNCTION_82
0x4006ffc	          0x4189d4	                           mov r12d, edx	      3531	channel.c	FUNCTION_82
0x4006fff	    0x64488b042528	                mov rax, qword fs:[0x28]	      3531	channel.c	FUNCTION_82
0x4007008	    0x488984248803	            mov qword [rsp + 0x388], rax	      3531	channel.c	FUNCTION_82
0x4007010	            0x31c0	                            xor eax, eax	      3531	channel.c	FUNCTION_82
0x4007012	    0x48c744240800	                  mov qword [rsp + 8], 0	      3538	channel.c	FUNCTION_82
0x400701b	    0xc70602000000	                      mov dword [rsi], 2	      3541	channel.c	FUNCTION_82
0x4007021	    0x48c746080000	                  mov qword [rsi + 8], 0	      3542	channel.c	FUNCTION_82
0x4007029	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3544	channel.c	FUNCTION_82	CALL_1
0x400702e	      0xe800000000	                          call 0x4007033	      3544	channel.c	FUNCTION_82	CALL_1
0x4007033	        0x498d7d10	                   lea rdi, [r13 + 0x10]	      3545	channel.c	FUNCTION_82	IF_1	CALL_2
0x4007037	      0xb900000000	                              mov ecx, 0	      3545	channel.c	FUNCTION_82	IF_1	CALL_2
0x400703c	      0xba00320000	                         mov edx, 0x3200	      3545	channel.c	FUNCTION_82	IF_1	CALL_2
0x4007041	      0x488d742410	                   lea rsi, [rsp + 0x10]	      3545	channel.c	FUNCTION_82	IF_1	CALL_2
0x4007046	      0xe800000000	                          call 0x400704b	      3545	channel.c	FUNCTION_82	IF_1	CALL_2
0x400704b	            0x85c0	                           test eax, eax	      3545	channel.c	FUNCTION_82	IF_1	CALL_2
0x400704d	     0xf84b0000000	                            je 0x4007103	      3545	channel.c	FUNCTION_82	IF_1	CALL_2
0x4007053	      0xf644241110	           test byte [rsp + 0x11], 0x10 	      3549	channel.c	FUNCTION_82	IF_2
0x4007058	     0xf84c4000000	                            je 0x4007122	      3549	channel.c	FUNCTION_82	IF_2
0x400705e	    0x8bac24180200	           mov ebp, dword [rsp + 0x218] 	      3550	channel.c	FUNCTION_82	IF_2
0x4007065	            0x89e9	                            mov ecx, ebp	      3551	channel.c	FUNCTION_82	CALL_3
0x4007067	      0xba01000000	                              mov edx, 1	      3551	channel.c	FUNCTION_82	CALL_3
0x400706c	      0xbe01000000	                              mov esi, 1	      3551	channel.c	FUNCTION_82	CALL_3
0x4007071	          0x4c89ef	                            mov rdi, r13	      3551	channel.c	FUNCTION_82	CALL_3
0x4007074	      0xe800000000	                          call 0x4007079	      3551	channel.c	FUNCTION_82	CALL_3
0x4007079	          0x4885c0	                           test rax, rax	      3552	channel.c	FUNCTION_82	IF_3
0x400707c	     0xf8481000000	                            je 0x4007103	      3552	channel.c	FUNCTION_82	IF_3
0x4007082	          0x83fd04	                              cmp ebp, 4	      3554	channel.c	FUNCTION_82	IF_3	IF_4
0x4007085	     0xf85b9000000	                           jne 0x4007144	      3554	channel.c	FUNCTION_82	IF_3	IF_4
0x400708b	        0x837818ff	cmp dword [rax + 0x18], 0xffffffffffffffff	      4368	channel.c	FUNCTION_99
0x400708f	        0x400f94c5	                                sete bpl	      4367	channel.c	FUNCTION_99	IF_1
0x4007093	        0x400fb6ed	                          movzx ebp, bpl	      4367	channel.c	FUNCTION_99	IF_1
0x4007097	      0xe9a8000000	                           jmp 0x4007144	      4367	channel.c	FUNCTION_99	IF_1
0x400709c	          0x4585e4	                         test r12d, r12d	      3561	channel.c	FUNCTION_82	IF_3	IF_6
0x400709f	            0x7413	                            je 0x40070b4	      3561	channel.c	FUNCTION_82	IF_3	IF_6
0x40070a1	          0x4489e1	                           mov ecx, r12d	      3562	channel.c	FUNCTION_82	IF_3	IF_6	CALL_7
0x40070a4	            0x89ee	                            mov esi, ebp	      3562	channel.c	FUNCTION_82	IF_3	IF_6	CALL_7
0x40070a6	          0x4889c7	                            mov rdi, rax	      3562	channel.c	FUNCTION_82	IF_3	IF_6	CALL_7
0x40070a9	      0xe8dec3ffff	             call sym.channel_read_block	      3562	channel.c	FUNCTION_82	IF_3	IF_6	CALL_7
0x40070ae	        0x48894308	                mov qword [rbx + 8], rax	      3562	channel.c	FUNCTION_82	IF_3	IF_6	CALL_7
0x40070b2	            0xeb4f	                           jmp 0x4007103	      3562	channel.c	FUNCTION_82	IF_3	IF_6	CALL_7
0x40070b4	    0x81e600200000	                         and esi, 0x2000	      3566	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_7
0x40070ba	      0xb9ffffffff	                     mov ecx, 0xffffffff	      3567	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_7
0x40070bf	     0xf458c241c02	         cmovne ecx, dword [rsp + 0x21c]	      3567	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_7
0x40070c7	      0x4c8d442408	                       lea r8, [rsp + 8]	      3568	channel.c	FUNCTION_82	IF_3	ELSE_1	CALL_8
0x40070cc	            0x89ee	                            mov esi, ebp	      3568	channel.c	FUNCTION_82	IF_3	ELSE_1	CALL_8
0x40070ce	          0x4889c7	                            mov rdi, rax	      3568	channel.c	FUNCTION_82	IF_3	ELSE_1	CALL_8
0x40070d1	      0xe817e5ffff	        call sym.channel_read_json_block	      3568	channel.c	FUNCTION_82	IF_3	ELSE_1	CALL_8
0x40070d6	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3569	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8
0x40070db	          0x4885ff	                           test rdi, rdi	      3569	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8
0x40070de	            0x7415	                            je 0x40070f5	      3569	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8
0x40070e0	          0x488b07	                    mov rax, qword [rdi]	      3571	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8
0x40070e3	        0x488b5708	                mov rdx, qword [rdi + 8]	      3571	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8
0x40070e7	          0x488903	                    mov qword [rbx], rax	      3571	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8
0x40070ea	        0x48895308	                mov qword [rbx + 8], rdx	      3571	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8
0x40070ee	      0xe800000000	                          call 0x40070f3	      3572	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8	CALL_9
0x40070f3	            0xeb0e	                           jmp 0x4007103	      3572	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8	CALL_9
0x40070f5	    0xc70308000000	                      mov dword [rbx], 8	      3576	channel.c	FUNCTION_82	IF_3	ELSE_1	ELSE_2
0x40070fb	    0x48c743080200	                  mov qword [rbx + 8], 2	      3577	channel.c	FUNCTION_82	IF_3	ELSE_1	ELSE_2
0x4007103	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3583	channel.c	FUNCTION_82	CALL_10
0x4007108	      0xe800000000	                          call 0x400710d	      3583	channel.c	FUNCTION_82	CALL_10
0x400710d	    0x488b84248803	           mov rax, qword [rsp + 0x388] 	      3584	channel.c	FUNCTION_82
0x4007115	    0x644833042528	                xor rax, qword fs:[0x28]	      3584	channel.c	FUNCTION_82
0x400711e	            0x7462	                            je 0x4007182	      3584	channel.c	FUNCTION_82
0x4007120	            0xeb5b	                           jmp 0x400717d	      3584	channel.c	FUNCTION_82
0x4007122	      0xb904000000	                              mov ecx, 4	      3551	channel.c	FUNCTION_82	CALL_3
0x4007127	      0xba01000000	                              mov edx, 1	      3551	channel.c	FUNCTION_82	CALL_3
0x400712c	      0xbe01000000	                              mov esi, 1	      3551	channel.c	FUNCTION_82	CALL_3
0x4007131	          0x4c89ef	                            mov rdi, r13	      3551	channel.c	FUNCTION_82	CALL_3
0x4007134	      0xe800000000	                          call 0x4007139	      3551	channel.c	FUNCTION_82	CALL_3
0x4007139	          0x4885c0	                           test rax, rax	      3552	channel.c	FUNCTION_82	IF_3
0x400713c	     0xf8549ffffff	                           jne 0x400708b	      3552	channel.c	FUNCTION_82	IF_3
0x4007142	            0xebbf	                           jmp 0x4007103	      3552	channel.c	FUNCTION_82	IF_3
0x4007144	            0x89e9	                            mov ecx, ebp	      4380	channel.c	FUNCTION_100
0x4007146	          0x4889ca	                            mov rdx, rcx	      4380	channel.c	FUNCTION_100
0x4007149	        0x48c1e204	                              shl rdx, 4	      4380	channel.c	FUNCTION_100
0x400714d	        0x48c1e108	                              shl rcx, 8	      4380	channel.c	FUNCTION_100
0x4007151	          0x4801d1	                            add rcx, rdx	      4380	channel.c	FUNCTION_100
0x4007154	          0x4801c1	                            add rcx, rax	      4380	channel.c	FUNCTION_100
0x4007157	          0x8b5128	            mov edx, dword [rcx + 0x28] 	      4389	channel.c	FUNCTION_101
0x400715a	        0x8b742410	            mov esi, dword [rsp + 0x10] 	      3558	channel.c	FUNCTION_82	IF_3	IF_5
0x400715e	            0x89f7	                            mov edi, esi	      3558	channel.c	FUNCTION_82	IF_3	IF_5
0x4007160	    0x81e700020000	                          and edi, 0x200	      3558	channel.c	FUNCTION_82	IF_3	IF_5
0x4007166	     0xf4594240802	         cmovne edx, dword [rsp + 0x208]	      3559	channel.c	FUNCTION_82	IF_3	IF_5
0x400716e	        0x83792001	               cmp dword [rcx + 0x20], 1	      3561	channel.c	FUNCTION_82	IF_3	IF_6
0x4007172	     0xf8724ffffff	                            ja 0x400709c	      3561	channel.c	FUNCTION_82	IF_3	IF_6
0x4007178	      0xe924ffffff	                           jmp 0x40070a1	      3561	channel.c	FUNCTION_82	IF_3	IF_6
0x400717d	      0xe800000000	                          call 0x4007182	      3584	channel.c	FUNCTION_82
0x4007182	    0x4881c4980300	                          add rsp, 0x398	      3584	channel.c	FUNCTION_82
0x4007189	              0x5b	                                 pop rbx	      3584	channel.c	FUNCTION_82
0x400718a	              0x5d	                                 pop rbp	      3584	channel.c	FUNCTION_82
0x400718b	            0x415c	                                 pop r12	      3584	channel.c	FUNCTION_82
0x400718d	            0x415d	                                 pop r13	      3584	channel.c	FUNCTION_82
0x400718f	              0xc3	                                     ret	      3584	channel.c	FUNCTION_82
messageFromServerGtk2	IF,0:ELSE,0:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,1	26
0x4003426	              0x53	                                push rbx	       512	channel.c	FUNCTION_21
0x4003427	        0x4883ec10	                           sub rsp, 0x10	       512	channel.c	FUNCTION_21
0x400342b	          0x4889fb	                            mov rbx, rdi	       512	channel.c	FUNCTION_21
0x400342e	    0x64488b042528	                mov rax, qword fs:[0x28]	       512	channel.c	FUNCTION_21
0x4003437	      0x4889442408	                mov qword [rsp + 8], rax	       512	channel.c	FUNCTION_21
0x400343c	            0x31c0	                            xor eax, eax	       512	channel.c	FUNCTION_21
0x400343e	      0x488d742404	                      lea rsi, [rsp + 4]	       475	channel.c	FUNCTION_18	CALL_1
0x4003443	      0xe800000000	                          call 0x4003448	       475	channel.c	FUNCTION_18	CALL_1
0x4003448	          0x4885c0	                           test rax, rax	       476	channel.c	FUNCTION_18	IF_1
0x400344b	            0x7513	                           jne 0x4003460	       476	channel.c	FUNCTION_18	IF_1
0x400344d	            0x89da	                            mov edx, ebx	       477	channel.c	FUNCTION_18	CALL_2
0x400344f	      0xbe00000000	                              mov esi, 0	       477	channel.c	FUNCTION_18	CALL_2
0x4003454	      0xbf00000000	                              mov edi, 0	       477	channel.c	FUNCTION_18	CALL_2
0x4003459	      0xe8e5cdffff	                       call sym.ch_error	       477	channel.c	FUNCTION_18	CALL_2
0x400345e	            0xeb11	                           jmp 0x4003471	       477	channel.c	FUNCTION_18	CALL_2
0x4003460	      0xba00000000	                              mov edx, 0	       479	channel.c	FUNCTION_18	CALL_3
0x4003465	        0x8b742404	                mov esi, dword [rsp + 4]	       479	channel.c	FUNCTION_18	CALL_3
0x4003469	          0x4889c7	                            mov rdi, rax	       479	channel.c	FUNCTION_18	CALL_3
0x400346c	      0xe868feffff	                   call sym.channel_read	       479	channel.c	FUNCTION_18	CALL_3
0x4003471	      0x488b442408	                mov rax, qword [rsp + 8]	       514	channel.c	FUNCTION_21
0x4003476	    0x644833042528	                xor rax, qword fs:[0x28]	       514	channel.c	FUNCTION_21
0x400347f	            0x7405	                            je 0x4003486	       514	channel.c	FUNCTION_21
0x4003481	      0xe800000000	                          call 0x4003486	       514	channel.c	FUNCTION_21
0x4003486	        0x4883c410	                           add rsp, 0x10	       514	channel.c	FUNCTION_21
0x400348a	              0x5b	                                 pop rbx	       514	channel.c	FUNCTION_21
0x400348b	              0xc3	                                     ret	       514	channel.c	FUNCTION_21
channel_info	IF,1:ELSE,1:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,9	55
0x4002705	              0x55	                                push rbp	      2843	channel.c	FUNCTION_67
0x4002706	              0x53	                                push rbx	      2843	channel.c	FUNCTION_67
0x4002707	        0x4883ec08	                              sub rsp, 8	      2843	channel.c	FUNCTION_67
0x400270b	          0x4889fb	                            mov rbx, rdi	      2843	channel.c	FUNCTION_67
0x400270e	          0x4889f5	                            mov rbp, rsi	      2843	channel.c	FUNCTION_67
0x4002711	        0x48635710	         movsxd rdx, dword [rdi + 0x10] 	      2844	channel.c	FUNCTION_67	CALL_1
0x4002715	      0xb900000000	                              mov ecx, 0	      2844	channel.c	FUNCTION_67	CALL_1
0x400271a	      0xbe00000000	                              mov esi, 0	      2844	channel.c	FUNCTION_67	CALL_1
0x400271f	          0x4889ef	                            mov rdi, rbp	      2844	channel.c	FUNCTION_67	CALL_1
0x4002722	      0xe800000000	                          call 0x4002727	      2844	channel.c	FUNCTION_67	CALL_1
0x4002727	      0xbeffffffff	                     mov esi, 0xffffffff	      2845	channel.c	FUNCTION_67	CALL_3
0x400272c	          0x4889df	                            mov rdi, rbx	      2845	channel.c	FUNCTION_67	CALL_3
0x400272f	      0xe800000000	                          call 0x4002734	      2845	channel.c	FUNCTION_67	CALL_3
0x4002734	          0x4889c1	                            mov rcx, rax	      2845	channel.c	FUNCTION_67	CALL_3
0x4002737	      0xba00000000	                              mov edx, 0	      2845	channel.c	FUNCTION_67	CALL_3
0x400273c	      0xbe00000000	                              mov esi, 0	      2845	channel.c	FUNCTION_67	CALL_3
0x4002741	          0x4889ef	                            mov rdi, rbp	      2845	channel.c	FUNCTION_67	CALL_3
0x4002744	      0xe800000000	                          call 0x4002749	      2845	channel.c	FUNCTION_67	CALL_3
0x4002749	    0x488b8b600400	           mov rcx, qword [rbx + 0x460] 	      2847	channel.c	FUNCTION_67	IF_1
0x4002750	          0x4885c9	                           test rcx, rcx	      2847	channel.c	FUNCTION_67	IF_1
0x4002753	            0x7442	                            je 0x4002797	      2847	channel.c	FUNCTION_67	IF_1
0x4002755	      0xba00000000	                              mov edx, 0	      2849	channel.c	FUNCTION_67	IF_1	CALL_4
0x400275a	      0xbe00000000	                              mov esi, 0	      2849	channel.c	FUNCTION_67	IF_1	CALL_4
0x400275f	          0x4889ef	                            mov rdi, rbp	      2849	channel.c	FUNCTION_67	IF_1	CALL_4
0x4002762	      0xe800000000	                          call 0x4002767	      2849	channel.c	FUNCTION_67	IF_1	CALL_4
0x4002767	    0x486393680400	        movsxd rdx, dword [rbx + 0x468] 	      2850	channel.c	FUNCTION_67	IF_1	CALL_5
0x400276e	      0xb900000000	                              mov ecx, 0	      2850	channel.c	FUNCTION_67	IF_1	CALL_5
0x4002773	      0xbe00000000	                              mov esi, 0	      2850	channel.c	FUNCTION_67	IF_1	CALL_5
0x4002778	          0x4889ef	                            mov rdi, rbp	      2850	channel.c	FUNCTION_67	IF_1	CALL_5
0x400277b	      0xe800000000	                          call 0x4002780	      2850	channel.c	FUNCTION_67	IF_1	CALL_5
0x4002780	      0xb900000000	                              mov ecx, 0	      2851	channel.c	FUNCTION_67	IF_1	CALL_6
0x4002785	      0xba00000000	                              mov edx, 0	      2851	channel.c	FUNCTION_67	IF_1	CALL_6
0x400278a	          0x4889ee	                            mov rsi, rbp	      2851	channel.c	FUNCTION_67	IF_1	CALL_6
0x400278d	          0x4889df	                            mov rdi, rbx	      2851	channel.c	FUNCTION_67	IF_1	CALL_6
0x4002790	      0xe8dbfcffff	              call sym.channel_part_info	      2851	channel.c	FUNCTION_67	IF_1	CALL_6
0x4002795	            0xeb3f	                           jmp 0x40027d6	      2851	channel.c	FUNCTION_67	IF_1	CALL_6
0x4002797	      0xb901000000	                              mov ecx, 1	      2855	channel.c	FUNCTION_67	ELSE_1	CALL_7
0x400279c	      0xba00000000	                              mov edx, 0	      2855	channel.c	FUNCTION_67	ELSE_1	CALL_7
0x40027a1	          0x4889ee	                            mov rsi, rbp	      2855	channel.c	FUNCTION_67	ELSE_1	CALL_7
0x40027a4	          0x4889df	                            mov rdi, rbx	      2855	channel.c	FUNCTION_67	ELSE_1	CALL_7
0x40027a7	      0xe8c4fcffff	              call sym.channel_part_info	      2855	channel.c	FUNCTION_67	ELSE_1	CALL_7
0x40027ac	      0xb902000000	                              mov ecx, 2	      2856	channel.c	FUNCTION_67	ELSE_1	CALL_8
0x40027b1	      0xba00000000	                              mov edx, 0	      2856	channel.c	FUNCTION_67	ELSE_1	CALL_8
0x40027b6	          0x4889ee	                            mov rsi, rbp	      2856	channel.c	FUNCTION_67	ELSE_1	CALL_8
0x40027b9	          0x4889df	                            mov rdi, rbx	      2856	channel.c	FUNCTION_67	ELSE_1	CALL_8
0x40027bc	      0xe8affcffff	              call sym.channel_part_info	      2856	channel.c	FUNCTION_67	ELSE_1	CALL_8
0x40027c1	      0xb903000000	                              mov ecx, 3	      2857	channel.c	FUNCTION_67	ELSE_1	CALL_9
0x40027c6	      0xba00000000	                              mov edx, 0	      2857	channel.c	FUNCTION_67	ELSE_1	CALL_9
0x40027cb	          0x4889ee	                            mov rsi, rbp	      2857	channel.c	FUNCTION_67	ELSE_1	CALL_9
0x40027ce	          0x4889df	                            mov rdi, rbx	      2857	channel.c	FUNCTION_67	ELSE_1	CALL_9
0x40027d1	      0xe89afcffff	              call sym.channel_part_info	      2857	channel.c	FUNCTION_67	ELSE_1	CALL_9
0x40027d6	        0x4883c408	                              add rsp, 8	      2859	channel.c	FUNCTION_67
0x40027da	              0x5b	                                 pop rbx	      2859	channel.c	FUNCTION_67
0x40027db	              0x5d	                                 pop rbp	      2859	channel.c	FUNCTION_67
0x40027dc	              0xc3	                                     ret	      2859	channel.c	FUNCTION_67
ch_log_lead	IF,2:ELSE,1:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,3	47
0x400017b	              0x55	                                push rbp	       142	channel.c	FUNCTION_3
0x400017c	              0x53	                                push rbx	       142	channel.c	FUNCTION_3
0x400017d	        0x4883ec28	                           sub rsp, 0x28	       142	channel.c	FUNCTION_3
0x4000181	    0x64488b042528	                mov rax, qword fs:[0x28]	       142	channel.c	FUNCTION_3
0x400018a	      0x4889442418	             mov qword [rsp + 0x18], rax	       142	channel.c	FUNCTION_3
0x400018f	            0x31c0	                            xor eax, eax	       142	channel.c	FUNCTION_3
0x4000191	    0x48833d000000	               cmp qword [0x04000199], 0	       143	channel.c	FUNCTION_3	IF_1
0x4000199	     0xf8488000000	                            je 0x4000227	       143	channel.c	FUNCTION_3	IF_1
0x400019f	          0x4889fd	                            mov rbp, rdi	       143	channel.c	FUNCTION_3	IF_1
0x40001a2	          0x4889f3	                            mov rbx, rsi	       143	channel.c	FUNCTION_3	IF_1
0x40001a5	          0x4889e7	                            mov rdi, rsp	       148	channel.c	FUNCTION_3	IF_1	CALL_1
0x40001a8	      0xe800000000	                          call 0x40001ad	       148	channel.c	FUNCTION_3	IF_1	CALL_1
0x40001ad	      0xbe00000000	                              mov esi, 0	       149	channel.c	FUNCTION_3	IF_1	CALL_2
0x40001b2	          0x4889e7	                            mov rdi, rsp	       149	channel.c	FUNCTION_3	IF_1	CALL_2
0x40001b5	      0xe800000000	                          call 0x40001ba	       149	channel.c	FUNCTION_3	IF_1	CALL_2
0x40001ba	          0x4889e7	                            mov rdi, rsp	       150	channel.c	FUNCTION_3	IF_1	CALL_3
0x40001bd	      0xe800000000	                          call 0x40001c2	       150	channel.c	FUNCTION_3	IF_1	CALL_3
0x40001c2	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_20
0x40001c5	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_20
0x40001ca	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_20
0x40001cf	    0x488b3d000000	            mov rdi, qword [0x040001d6] 	        97	stdio2.h	CALL_20
0x40001d6	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_20
0x40001db	      0xe800000000	                          call 0x40001e0	        97	stdio2.h	CALL_20
0x40001e0	          0x4885db	                           test rbx, rbx	       152	channel.c	FUNCTION_3	IF_1	IF_2
0x40001e3	            0x7424	                            je 0x4000209	       152	channel.c	FUNCTION_3	IF_1	IF_2
0x40001e5	        0x448b4310	            mov r8d, dword [rbx + 0x10] 	        97	stdio2.h	CALL_20
0x40001e9	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_20
0x40001ec	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_20
0x40001f1	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_20
0x40001f6	    0x488b3d000000	            mov rdi, qword [0x040001fd] 	        97	stdio2.h	CALL_20
0x40001fd	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_20
0x4000202	      0xe800000000	                          call 0x4000207	        97	stdio2.h	CALL_20
0x4000207	            0xeb1e	                           jmp 0x4000227	        97	stdio2.h	CALL_20
0x4000209	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_20
0x400020c	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_20
0x4000211	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_20
0x4000216	    0x488b3d000000	            mov rdi, qword [0x0400021d] 	        97	stdio2.h	CALL_20
0x400021d	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_20
0x4000222	      0xe800000000	                          call 0x4000227	        97	stdio2.h	CALL_20
0x4000227	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       157	channel.c	FUNCTION_3
0x400022c	    0x644833042528	                xor rax, qword fs:[0x28]	       157	channel.c	FUNCTION_3
0x4000235	            0x7405	                            je 0x400023c	       157	channel.c	FUNCTION_3
0x4000237	      0xe800000000	                          call 0x400023c	       157	channel.c	FUNCTION_3
0x400023c	        0x4883c428	                           add rsp, 0x28	       157	channel.c	FUNCTION_3
0x4000240	              0x5b	                                 pop rbx	       157	channel.c	FUNCTION_3
0x4000241	              0x5d	                                 pop rbp	       157	channel.c	FUNCTION_3
0x4000242	              0xc3	                                     ret	       157	channel.c	FUNCTION_3
ch_close_part	IF,4:ELSE,1:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,1	50
0x4000442	            0x89f0	                            mov eax, esi	       988	channel.c	FUNCTION_29	IF_1
0x4000444	          0x4889c2	                            mov rdx, rax	       988	channel.c	FUNCTION_29	IF_1
0x4000447	        0x48c1e204	                              shl rdx, 4	       988	channel.c	FUNCTION_29	IF_1
0x400044b	        0x48c1e008	                              shl rax, 8	       988	channel.c	FUNCTION_29	IF_1
0x400044f	          0x4801d0	                            add rax, rdx	       988	channel.c	FUNCTION_29	IF_1
0x4000452	        0x8b440718	      mov eax, dword [rdi + rax + 0x18] 	       988	channel.c	FUNCTION_29	IF_1
0x4000456	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       988	channel.c	FUNCTION_29	IF_1
0x4000459	            0x747f	                            je 0x40004da	       988	channel.c	FUNCTION_29	IF_1
0x400045b	              0x55	                                push rbp	       985	channel.c	FUNCTION_29
0x400045c	              0x53	                                push rbx	       985	channel.c	FUNCTION_29
0x400045d	        0x4883ec08	                              sub rsp, 8	       985	channel.c	FUNCTION_29
0x4000461	            0x89f5	                            mov ebp, esi	       985	channel.c	FUNCTION_29
0x4000463	          0x4889fb	                            mov rbx, rdi	       985	channel.c	FUNCTION_29
0x4000466	            0x85f6	                           test esi, esi	       990	channel.c	FUNCTION_29	IF_1	IF_2
0x4000468	            0x7509	                           jne 0x4000473	       990	channel.c	FUNCTION_29	IF_1	IF_2
0x400046a	            0x89c7	                            mov edi, eax	       991	channel.c	FUNCTION_29	IF_1	IF_2
0x400046c	      0xe800000000	                          call 0x4000471	       991	channel.c	FUNCTION_29	IF_1	IF_2
0x4000471	            0xeb2e	                           jmp 0x40004a1	       991	channel.c	FUNCTION_29	IF_1	IF_2
0x4000473	          0x83fe03	                              cmp esi, 3	       996	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4000476	            0x7452	                            je 0x40004ca	       996	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4000478	    0x3b8748030000	           cmp eax, dword [rdi + 0x348] 	       996	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x400047e	            0x7421	                            je 0x40004a1	       996	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4000480	          0x83fe01	                              cmp esi, 1	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4000483	            0x740d	                            je 0x4000492	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4000485	    0x3b8728010000	           cmp eax, dword [rdi + 0x128] 	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x400048b	            0x7414	                            je 0x40004a1	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x400048d	          0x83fe02	                              cmp esi, 2	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4000490	            0x7408	                            je 0x400049a	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4000492	    0x3b8338020000	           cmp eax, dword [rbx + 0x238] 	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4000498	            0x7407	                            je 0x40004a1	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x400049a	            0x89c7	                            mov edi, eax	      1004	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x400049c	      0xe800000000	                          call 0x40004a1	      1004	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40004a1	            0x89e8	                            mov eax, ebp	      1007	channel.c	FUNCTION_29	IF_1
0x40004a3	          0x4889c2	                            mov rdx, rax	      1007	channel.c	FUNCTION_29	IF_1
0x40004a6	        0x48c1e204	                              shl rdx, 4	      1007	channel.c	FUNCTION_29	IF_1
0x40004aa	        0x48c1e008	                              shl rax, 8	      1007	channel.c	FUNCTION_29	IF_1
0x40004ae	          0x4801d0	                            add rax, rdx	      1007	channel.c	FUNCTION_29	IF_1
0x40004b1	    0xc7440318ffff	mov dword [rbx + rax + 0x18], 0xffffffff 	      1007	channel.c	FUNCTION_29	IF_1
0x40004b9	      0xb8feffffff	                     mov eax, 0xfffffffe	      1010	channel.c	FUNCTION_29	IF_1
0x40004be	            0x89e9	                            mov ecx, ebp	      1010	channel.c	FUNCTION_29	IF_1
0x40004c0	            0xd3c0	                             rol eax, cl	      1010	channel.c	FUNCTION_29	IF_1
0x40004c2	    0x21836c040000	            and dword [rbx + 0x46c], eax	      1010	channel.c	FUNCTION_29	IF_1
0x40004c8	            0xeb0a	                           jmp 0x40004d4	      1012	channel.c	FUNCTION_29
0x40004ca	    0x3b8728010000	           cmp eax, dword [rdi + 0x128] 	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40004d0	            0x75c0	                           jne 0x4000492	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40004d2	            0xebcd	                           jmp 0x40004a1	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40004d4	        0x4883c408	                              add rsp, 8	      1012	channel.c	FUNCTION_29
0x40004d8	              0x5b	                                 pop rbx	      1012	channel.c	FUNCTION_29
0x40004d9	              0x5d	                                 pop rbp	      1012	channel.c	FUNCTION_29
0x40004da	            0xf3c3	                                     ret	      1012	channel.c	FUNCTION_29
job_channel_still_useful	IF,0:ELSE,0:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,1	10
0x4000136	        0x488b7f60	            mov rdi, qword [rdi + 0x60] 	      5113	channel.c	FUNCTION_114	CALL_1
0x400013a	          0x4885ff	                           test rdi, rdi	      5113	channel.c	FUNCTION_114	CALL_1
0x400013d	            0x740e	                            je 0x400014d	      5113	channel.c	FUNCTION_114	CALL_1
0x400013f	      0xe8fcfeffff	           call sym.channel_still_useful	      5113	channel.c	FUNCTION_114	CALL_1
0x4000144	            0x85c0	                           test eax, eax	      5113	channel.c	FUNCTION_114	CALL_1
0x4000146	           0xf95c0	                                setne al	      5113	channel.c	FUNCTION_114	CALL_1
0x4000149	           0xfb6c0	                           movzx eax, al	      5113	channel.c	FUNCTION_114	CALL_1
0x400014c	              0xc3	                                     ret	      5113	channel.c	FUNCTION_114	CALL_1
0x400014d	      0xb800000000	                              mov eax, 0	      5113	channel.c	FUNCTION_114	CALL_1
0x4000152	              0xc3	                                     ret	      5114	channel.c	FUNCTION_114
channel_clear	IF,0:ELSE,0:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,8	34
0x40027f0	              0x53	                                push rbx	      3014	channel.c	FUNCTION_72
0x40027f1	          0x4889fb	                            mov rbx, rdi	      3014	channel.c	FUNCTION_72
0x40027f4	      0xbe00000000	                              mov esi, 0	      3015	channel.c	FUNCTION_72	CALL_1
0x40027f9	      0xb800000000	                              mov eax, 0	      3015	channel.c	FUNCTION_72	CALL_1
0x40027fe	      0xe800000000	                          call 0x4002803	      3015	channel.c	FUNCTION_72	CALL_1
0x4002803	    0x488bbb600400	           mov rdi, qword [rbx + 0x460] 	      3016	channel.c	FUNCTION_72	CALL_2
0x400280a	          0x4885ff	                           test rdi, rdi	      3016	channel.c	FUNCTION_72	CALL_2
0x400280d	            0x7410	                            je 0x400281f	      3016	channel.c	FUNCTION_72	CALL_2
0x400280f	      0xe800000000	                          call 0x4002814	      3016	channel.c	FUNCTION_72	CALL_2
0x4002814	    0x48c783600400	              mov qword [rbx + 0x460], 0	      3016	channel.c	FUNCTION_72	CALL_2
0x400281f	      0xbe00000000	                              mov esi, 0	      3017	channel.c	FUNCTION_72	CALL_3
0x4002824	          0x4889df	                            mov rdi, rbx	      3017	channel.c	FUNCTION_72	CALL_3
0x4002827	      0xe8fcf7ffff	              call sym.channel_clear_one	      3017	channel.c	FUNCTION_72	CALL_3
0x400282c	      0xbe01000000	                              mov esi, 1	      3018	channel.c	FUNCTION_72	CALL_4
0x4002831	          0x4889df	                            mov rdi, rbx	      3018	channel.c	FUNCTION_72	CALL_4
0x4002834	      0xe8eff7ffff	              call sym.channel_clear_one	      3018	channel.c	FUNCTION_72	CALL_4
0x4002839	      0xbe02000000	                              mov esi, 2	      3019	channel.c	FUNCTION_72	CALL_5
0x400283e	          0x4889df	                            mov rdi, rbx	      3019	channel.c	FUNCTION_72	CALL_5
0x4002841	      0xe8e2f7ffff	              call sym.channel_clear_one	      3019	channel.c	FUNCTION_72	CALL_5
0x4002846	      0xbe03000000	                              mov esi, 3	      3020	channel.c	FUNCTION_72	CALL_6
0x400284b	          0x4889df	                            mov rdi, rbx	      3020	channel.c	FUNCTION_72	CALL_6
0x400284e	      0xe8d5f7ffff	              call sym.channel_clear_one	      3020	channel.c	FUNCTION_72	CALL_6
0x4002853	    0x488bb3880400	           mov rsi, qword [rbx + 0x488] 	      3021	channel.c	FUNCTION_72	CALL_7
0x400285a	    0x488bbb800400	           mov rdi, qword [rbx + 0x480] 	      3021	channel.c	FUNCTION_72	CALL_7
0x4002861	      0xe800000000	                          call 0x4002866	      3021	channel.c	FUNCTION_72	CALL_7
0x4002866	    0x48c783800400	              mov qword [rbx + 0x480], 0	      3022	channel.c	FUNCTION_72
0x4002871	    0x48c783880400	              mov qword [rbx + 0x488], 0	      3023	channel.c	FUNCTION_72
0x400287c	    0x488bb3980400	           mov rsi, qword [rbx + 0x498] 	      3024	channel.c	FUNCTION_72	CALL_8
0x4002883	    0x488bbb900400	           mov rdi, qword [rbx + 0x490] 	      3024	channel.c	FUNCTION_72	CALL_8
0x400288a	      0xe800000000	                          call 0x400288f	      3024	channel.c	FUNCTION_72	CALL_8
0x400288f	    0x48c783900400	              mov qword [rbx + 0x490], 0	      3025	channel.c	FUNCTION_72
0x400289a	    0x48c783980400	              mov qword [rbx + 0x498], 0	      3026	channel.c	FUNCTION_72
0x40028a5	              0x5b	                                 pop rbx	      3027	channel.c	FUNCTION_72
0x40028a6	              0xc3	                                     ret	      3027	channel.c	FUNCTION_72
find_buffer	IF,6:ELSE,0:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,9	74
0x400055d	            0x4155	                                push r13	      1101	channel.c	ELSE_3	FUNCTION_32
0x400055f	            0x4154	                                push r12	      1101	channel.c	ELSE_3	FUNCTION_32
0x4000561	              0x55	                                push rbp	      1101	channel.c	ELSE_3	FUNCTION_32
0x4000562	              0x53	                                push rbx	      1101	channel.c	ELSE_3	FUNCTION_32
0x4000563	        0x4883ec08	                              sub rsp, 8	      1101	channel.c	ELSE_3	FUNCTION_32
0x4000567	          0x4189f4	                           mov r12d, esi	      1101	channel.c	ELSE_3	FUNCTION_32
0x400056a	          0x4189d5	                           mov r13d, edx	      1101	channel.c	ELSE_3	FUNCTION_32
0x400056d	    0x488b2d000000	            mov rbp, qword [0x04000574] 	      1103	channel.c	ELSE_3	FUNCTION_32
0x4000574	          0x4885ff	                           test rdi, rdi	      1105	channel.c	ELSE_3	FUNCTION_32	IF_1
0x4000577	            0x743d	                            je 0x40005b6	      1105	channel.c	ELSE_3	FUNCTION_32	IF_1
0x4000579	          0x4889fb	                            mov rbx, rdi	      1105	channel.c	ELSE_3	FUNCTION_32	IF_1
0x400057c	      0xbf00000000	                              mov edi, 0	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x4000581	          0x803b00	                       cmp byte [rbx], 0	      1105	channel.c	ELSE_3	FUNCTION_32	IF_1
0x4000584	            0x7435	                            je 0x40005bb	      1105	channel.c	ELSE_3	FUNCTION_32	IF_1
0x4000586	          0x4889df	                            mov rdi, rbx	      1107	channel.c	ELSE_3	FUNCTION_32	IF_1	CALL_1
0x4000589	      0xe800000000	                          call 0x400058e	      1107	channel.c	ELSE_3	FUNCTION_32	IF_1	CALL_1
0x400058e	          0x4885c0	                           test rax, rax	      1108	channel.c	ELSE_3	FUNCTION_32	IF_1	IF_2
0x4000591	     0xf85e2000000	                           jne 0x4000679	      1108	channel.c	ELSE_3	FUNCTION_32	IF_1	IF_2
0x4000597	          0x4889df	                            mov rdi, rbx	      1109	channel.c	ELSE_3	FUNCTION_32	IF_1	CALL_2
0x400059a	      0xe800000000	                          call 0x400059f	      1109	channel.c	ELSE_3	FUNCTION_32	IF_1	CALL_2
0x400059f	          0x4885c0	                           test rax, rax	      1111	channel.c	ELSE_3	FUNCTION_32	IF_3
0x40005a2	     0xf85d1000000	                           jne 0x4000679	      1111	channel.c	ELSE_3	FUNCTION_32	IF_3
0x40005a8	          0x803b00	                       cmp byte [rbx], 0	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x40005ab	      0xbf00000000	                              mov edi, 0	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x40005b0	        0x480f45fb	                         cmovne rdi, rbx	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x40005b4	            0xeb05	                           jmp 0x40005bb	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x40005b6	      0xbf00000000	                              mov edi, 0	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x40005bb	      0xb90a000000	                            mov ecx, 0xa	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x40005c0	      0xba00000000	                              mov edx, 0	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x40005c5	      0xbe00000000	                              mov esi, 0	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x40005ca	      0xe800000000	                          call 0x40005cf	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x40005cf	          0x4889c3	                            mov rbx, rax	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x40005d2	          0x4885c0	                           test rax, rax	      1115	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_4
0x40005d5	     0xf8499000000	                            je 0x4000674	      1115	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_4
0x40005db	      0xbe01000000	                              mov esi, 1	      1117	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_4
0x40005e0	          0x4889c7	                            mov rdi, rax	      1117	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_4
0x40005e3	      0xe800000000	                          call 0x40005e8	      1117	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_4
0x40005e8	    0x48891d000000	            mov qword [0x040005ef], rbx 	      1118	channel.c	ELSE_3	FUNCTION_32	IF_3
0x40005ef	      0xb904000000	                              mov ecx, 4	      1120	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_5
0x40005f4	      0xba00000000	                              mov edx, 0	      1120	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_5
0x40005f9	      0xbe00000000	                              mov esi, 0	      1120	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_5
0x40005fe	      0xbf00000000	                              mov edi, 0	      1120	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_5
0x4000603	      0xe800000000	                          call 0x4000608	      1120	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_5
0x4000608	      0xb904000000	                              mov ecx, 4	      1121	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_6
0x400060d	      0xba00000000	                              mov edx, 0	      1121	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_6
0x4000612	      0xbe00000000	                              mov esi, 0	      1121	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_6
0x4000617	      0xbf00000000	                              mov edi, 0	      1121	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_6
0x400061c	      0xe800000000	                          call 0x4000621	      1121	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_6
0x4000621	    0x488b3d000000	            mov rdi, qword [0x04000628] 	      1123	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_5
0x4000628	      0x48837f0800	                  cmp qword [rdi + 8], 0	      1123	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_5
0x400062d	            0x7505	                           jne 0x4000634	      1123	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_5
0x400062f	      0xe800000000	                          call 0x4000634	      1124	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_7
0x4000634	          0x4585ed	                         test r13d, r13d	      1125	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6
0x4000637	            0x7420	                            je 0x4000659	      1125	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6
0x4000639	          0x4585e4	                         test r12d, r12d	      1126	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6	CALL_8
0x400063c	      0xbe00000000	                              mov esi, 0	      1126	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6	CALL_8
0x4000641	      0xb800000000	                              mov eax, 0	      1126	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6	CALL_8
0x4000646	        0x480f45f0	                         cmovne rsi, rax	      1126	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6	CALL_8
0x400064a	      0xba01000000	                              mov edx, 1	      1126	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6	CALL_8
0x400064f	      0xbf01000000	                              mov edi, 1	      1126	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6	CALL_8
0x4000654	      0xe800000000	                          call 0x4000659	      1126	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6	CALL_8
0x4000659	      0xbe00000000	                              mov esi, 0	      1128	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_9
0x400065e	      0xbf01000000	                              mov edi, 1	      1128	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_9
0x4000663	      0xe800000000	                          call 0x4000668	      1128	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_9
0x4000668	    0x48892d000000	            mov qword [0x0400066f], rbp 	      1129	channel.c	ELSE_3	FUNCTION_32	IF_3
0x400066f	          0x4889d8	                            mov rax, rbx	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x4000672	            0xeb05	                           jmp 0x4000679	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x4000674	      0xb800000000	                              mov eax, 0	      1116	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_4
0x4000679	        0x4883c408	                              add rsp, 8	      1133	channel.c	ELSE_3	FUNCTION_32
0x400067d	              0x5b	                                 pop rbx	      1133	channel.c	ELSE_3	FUNCTION_32
0x400067e	              0x5d	                                 pop rbp	      1133	channel.c	ELSE_3	FUNCTION_32
0x400067f	            0x415c	                                 pop r12	      1133	channel.c	ELSE_3	FUNCTION_32
0x4000681	            0x415d	                                 pop r13	      1133	channel.c	ELSE_3	FUNCTION_32
0x4000683	              0xc3	                                     ret	      1133	channel.c	ELSE_3	FUNCTION_32
job_status	IF,3:ELSE,2:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,2	22
0x40081fb	              0x55	                                push rbp	      5705	channel.c	FUNCTION_131
0x40081fc	              0x53	                                push rbx	      5705	channel.c	FUNCTION_131
0x40081fd	        0x4883ec08	                              sub rsp, 8	      5705	channel.c	FUNCTION_131
0x4008201	          0x8b4728	            mov eax, dword [rdi + 0x28] 	      5708	channel.c	FUNCTION_131	IF_1
0x4008204	      0xbd00000000	                              mov ebp, 0	      5710	channel.c	FUNCTION_131	IF_1
0x4008209	          0x83f801	                              cmp eax, 1	      5708	channel.c	FUNCTION_131	IF_1
0x400820c	            0x7722	                            ja 0x4008230	      5708	channel.c	FUNCTION_131	IF_1
0x400820e	      0xbd00000000	                              mov ebp, 0	      5712	channel.c	FUNCTION_131	ELSE_1	IF_2
0x4008213	            0x85c0	                           test eax, eax	      5711	channel.c	FUNCTION_131	ELSE_1	IF_2
0x4008215	            0x7419	                            je 0x4008230	      5711	channel.c	FUNCTION_131	ELSE_1	IF_2
0x4008217	          0x4889fb	                            mov rbx, rdi	      5711	channel.c	FUNCTION_131	ELSE_1	IF_2
0x400821a	      0xe800000000	                          call 0x400821f	      5715	channel.c	FUNCTION_131	ELSE_2	CALL_1
0x400821f	          0x4889c5	                            mov rbp, rax	      5715	channel.c	FUNCTION_131	ELSE_2	CALL_1
0x4008222	        0x837b2802	               cmp dword [rbx + 0x28], 2	      5716	channel.c	FUNCTION_131	ELSE_2	IF_3
0x4008226	            0x7508	                           jne 0x4008230	      5716	channel.c	FUNCTION_131	ELSE_2	IF_3
0x4008228	          0x4889df	                            mov rdi, rbx	      5717	channel.c	FUNCTION_131	ELSE_2	CALL_2
0x400822b	      0xe800000000	                          call 0x4008230	      5717	channel.c	FUNCTION_131	ELSE_2	CALL_2
0x4008230	          0x4889e8	                            mov rax, rbp	      5720	channel.c	FUNCTION_131
0x4008233	        0x4883c408	                              add rsp, 8	      5720	channel.c	FUNCTION_131
0x4008237	              0x5b	                                 pop rbx	      5720	channel.c	FUNCTION_131
0x4008238	              0x5d	                                 pop rbp	      5720	channel.c	FUNCTION_131
0x4008239	              0xc3	                                     ret	      5720	channel.c	FUNCTION_131
channel_is_open	IF,0:ELSE,0:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,0	15
0x40023ea	          0x4885ff	                           test rdi, rdi	      2725	channel.c	FUNCTION_63
0x40023ed	            0x742b	                            je 0x400241a	      2725	channel.c	FUNCTION_63
0x40023ef	      0xb801000000	                              mov eax, 1	      2725	channel.c	FUNCTION_63
0x40023f4	        0x837f18ff	cmp dword [rdi + 0x18], 0xffffffffffffffff	      2725	channel.c	FUNCTION_63
0x40023f8	            0x7525	                           jne 0x400241f	      2725	channel.c	FUNCTION_63
0x40023fa	    0x83bf48030000	cmp dword [rdi + 0x348], 0xffffffffffffffff	      2726	channel.c	FUNCTION_63
0x4002401	            0x751c	                           jne 0x400241f	      2726	channel.c	FUNCTION_63
0x4002403	    0x83bf28010000	cmp dword [rdi + 0x128], 0xffffffffffffffff	      2727	channel.c	FUNCTION_63
0x400240a	            0x7513	                           jne 0x400241f	      2727	channel.c	FUNCTION_63
0x400240c	    0x83bf38020000	cmp dword [rdi + 0x238], 0xffffffffffffffff	      2725	channel.c	FUNCTION_63
0x4002413	           0xf95c0	                                setne al	      2725	channel.c	FUNCTION_63
0x4002416	           0xfb6c0	                           movzx eax, al	      2725	channel.c	FUNCTION_63
0x4002419	              0xc3	                                     ret	      2725	channel.c	FUNCTION_63
0x400241a	      0xb800000000	                              mov eax, 0	      2725	channel.c	FUNCTION_63
0x400241f	            0xf3c3	                                     ret	      2729	channel.c	FUNCTION_63
channel_save	IF,8:ELSE,4:FOR,1:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,7	165
0x4000824	            0x4157	                                push r15	      1792	channel.c	FUNCTION_50
0x4000826	            0x4156	                                push r14	      1792	channel.c	FUNCTION_50
0x4000828	            0x4155	                                push r13	      1792	channel.c	FUNCTION_50
0x400082a	            0x4154	                                push r12	      1792	channel.c	FUNCTION_50
0x400082c	              0x55	                                push rbp	      1792	channel.c	FUNCTION_50
0x400082d	              0x53	                                push rbx	      1792	channel.c	FUNCTION_50
0x400082e	        0x4883ec18	                           sub rsp, 0x18	      1792	channel.c	FUNCTION_50
0x4000832	          0x4989fe	                            mov r14, rdi	      1792	channel.c	FUNCTION_50
0x4000835	            0x89f5	                            mov ebp, esi	      1792	channel.c	FUNCTION_50
0x4000837	          0x4989d4	                            mov r12, rdx	      1792	channel.c	FUNCTION_50
0x400083a	            0x89cb	                            mov ebx, ecx	      1792	channel.c	FUNCTION_50
0x400083c	      0x4489442404	                mov dword [rsp + 4], r8d	      1792	channel.c	FUNCTION_50
0x4000841	          0x4d89cf	                             mov r15, r9	      1792	channel.c	FUNCTION_50
0x4000844	      0xbf20000000	                           mov edi, 0x20	      1798	channel.c	FUNCTION_50	CALL_1
0x4000849	      0xe800000000	                          call 0x400084e	      1798	channel.c	FUNCTION_50	CALL_1
0x400084e	          0x4989c5	                            mov r13, rax	      1798	channel.c	FUNCTION_50	CALL_1
0x4000851	      0xb800000000	                              mov eax, 0	      1800	channel.c	FUNCTION_50	IF_1
0x4000856	          0x4d85ed	                           test r13, r13	      1799	channel.c	FUNCTION_50	IF_1
0x4000859	     0xf8402020000	                            je 0x4000a61	      1799	channel.c	FUNCTION_50	IF_1
0x400085f	          0x8d7b01	                      lea edi, [rbx + 1]	      1803	channel.c	FUNCTION_50	CALL_2
0x4000862	      0xe800000000	                          call 0x4000867	      1803	channel.c	FUNCTION_50	CALL_2
0x4000867	        0x49894500	                    mov qword [r13], rax	      1803	channel.c	FUNCTION_50	CALL_2
0x400086b	          0x4885c0	                           test rax, rax	      1804	channel.c	FUNCTION_50	IF_2
0x400086e	            0x7512	                           jne 0x4000882	      1804	channel.c	FUNCTION_50	IF_2
0x4000870	          0x4c89ef	                            mov rdi, r13	      1806	channel.c	FUNCTION_50	IF_2	CALL_3
0x4000873	      0xe800000000	                          call 0x4000878	      1806	channel.c	FUNCTION_50	IF_2	CALL_3
0x4000878	      0xb800000000	                              mov eax, 0	      1807	channel.c	FUNCTION_50	IF_2
0x400087d	      0xe9df010000	                           jmp 0x4000a61	      1807	channel.c	FUNCTION_50	IF_2
0x4000882	            0x89ea	                            mov edx, ebp	      1810	channel.c	FUNCTION_50	IF_3
0x4000884	          0x4889d1	                            mov rcx, rdx	      1810	channel.c	FUNCTION_50	IF_3
0x4000887	        0x48c1e104	                              shl rcx, 4	      1810	channel.c	FUNCTION_50	IF_3
0x400088b	        0x48c1e208	                              shl rdx, 8	      1810	channel.c	FUNCTION_50	IF_3
0x400088f	          0x4801ca	                            add rdx, rcx	      1810	channel.c	FUNCTION_50	IF_3
0x4000892	    0x41837c162000	         cmp dword [r14 + rdx + 0x20], 0	      1810	channel.c	FUNCTION_50	IF_3
0x4000898	            0x7556	                           jne 0x40008f0	      1810	channel.c	FUNCTION_50	IF_3
0x400089a	      0xb901000000	                              mov ecx, 1	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x400089f	          0x4889c2	                            mov rdx, rax	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x40008a2	            0x85db	                           test ebx, ebx	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x40008a4	            0x7e3d	                           jle 0x40008e3	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x40008a6	            0xeb06	                           jmp 0x40008ae	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x40008a8	          0x83c101	                              add ecx, 1	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x40008ab	          0x4889d0	                            mov rax, rdx	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x40008ae	          0x8d51ff	                      lea edx, [rcx - 1]	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40008b1	          0x4863d2	                         movsxd rdx, edx	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40008b4	      0x410fb63414	             movzx esi, byte [r12 + rdx]	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40008b9	        0x4080fe0d	                            cmp sil, 0xd	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40008bd	            0x7519	                           jne 0x40008d8	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40008bf	            0x39cb	                            cmp ebx, ecx	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40008c1	     0xf8e8e010000	                           jle 0x4000a55	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40008c7	    0x41807c14010a	          cmp byte [r12 + rdx + 1], 0xa 	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40008cd	     0xf8576010000	                           jne 0x4000a49	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40008d3	          0x4889c2	                            mov rdx, rax	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40008d6	            0xebd0	                           jmp 0x40008a8	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40008d8	        0x488d5001	                      lea rdx, [rax + 1]	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40008dc	          0x408830	                     mov byte [rax], sil	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40008df	            0x39cb	                            cmp ebx, ecx	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x40008e1	            0x7fc5	                            jg 0x40008a8	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x40008e3	          0xc60200	                       mov byte [rdx], 0	      1817	channel.c	FUNCTION_50	IF_3
0x40008e6	        0x492b5500	                    sub rdx, qword [r13]	      1818	channel.c	FUNCTION_50	IF_3
0x40008ea	        0x49895508	                mov qword [r13 + 8], rdx	      1818	channel.c	FUNCTION_50	IF_3
0x40008ee	            0xeb27	                           jmp 0x4000917	      1818	channel.c	FUNCTION_50	IF_3
0x40008f0	          0x4863fb	                         movsxd rdi, ebx	      1822	channel.c	FUNCTION_50	ELSE_1	CALL_4
0x40008f3	      0x48897c2408	                mov qword [rsp + 8], rdi	        59	string3.h	FUNCTION_136	CALL_3
0x40008f8	          0x4889fa	                            mov rdx, rdi	        59	string3.h	FUNCTION_136	CALL_3
0x40008fb	          0x4c89e6	                            mov rsi, r12	        59	string3.h	FUNCTION_136	CALL_3
0x40008fe	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_136	CALL_3
0x4000901	      0xe800000000	                          call 0x4000906	        59	string3.h	FUNCTION_136	CALL_3
0x4000906	        0x498b4500	                    mov rax, qword [r13]	      1823	channel.c	FUNCTION_50	ELSE_1
0x400090a	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1823	channel.c	FUNCTION_50	ELSE_1
0x400090f	        0xc6043800	                 mov byte [rax + rdi], 0	      1823	channel.c	FUNCTION_50	ELSE_1
0x4000913	        0x49897d08	                mov qword [r13 + 8], rdi	      1824	channel.c	FUNCTION_50	ELSE_1
0x4000917	      0x837c240400	                  cmp dword [rsp + 4], 0	      1827	channel.c	FUNCTION_50	IF_5
0x400091c	            0x745e	                            je 0x400097c	      1827	channel.c	FUNCTION_50	IF_5
0x400091e	            0x89e8	                            mov eax, ebp	      1830	channel.c	FUNCTION_50	IF_5
0x4000920	          0x4889c2	                            mov rdx, rax	      1830	channel.c	FUNCTION_50	IF_5
0x4000923	        0x48c1e204	                              shl rdx, 4	      1830	channel.c	FUNCTION_50	IF_5
0x4000927	        0x48c1e008	                              shl rax, 8	      1830	channel.c	FUNCTION_50	IF_5
0x400092b	          0x4801d0	                            add rax, rdx	      1830	channel.c	FUNCTION_50	IF_5
0x400092e	          0x4c01f0	                            add rax, r14	      1830	channel.c	FUNCTION_50	IF_5
0x4000931	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      1830	channel.c	FUNCTION_50	IF_5
0x4000935	        0x49895510	             mov qword [r13 + 0x10], rdx	      1830	channel.c	FUNCTION_50	IF_5
0x4000939	    0x49c745180000	               mov qword [r13 + 0x18], 0	      1831	channel.c	FUNCTION_50	IF_5
0x4000941	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1832	channel.c	FUNCTION_50	IF_5	IF_6
0x4000945	          0x4885c0	                           test rax, rax	      1832	channel.c	FUNCTION_50	IF_5	IF_6
0x4000948	            0x7517	                           jne 0x4000961	      1832	channel.c	FUNCTION_50	IF_5	IF_6
0x400094a	            0x89e8	                            mov eax, ebp	      1833	channel.c	FUNCTION_50	IF_5	IF_6
0x400094c	          0x4889c2	                            mov rdx, rax	      1833	channel.c	FUNCTION_50	IF_5	IF_6
0x400094f	        0x48c1e204	                              shl rdx, 4	      1833	channel.c	FUNCTION_50	IF_5	IF_6
0x4000953	        0x48c1e008	                              shl rax, 8	      1833	channel.c	FUNCTION_50	IF_5	IF_6
0x4000957	          0x4801d0	                            add rax, rdx	      1833	channel.c	FUNCTION_50	IF_5	IF_6
0x400095a	      0x4d896c0648	       mov qword [r14 + rax + 0x48], r13	      1833	channel.c	FUNCTION_50	IF_5	IF_6
0x400095f	            0xeb04	                           jmp 0x4000965	      1833	channel.c	FUNCTION_50	IF_5	IF_6
0x4000961	        0x4c896818	             mov qword [rax + 0x18], r13	      1835	channel.c	FUNCTION_50	IF_5	ELSE_2
0x4000965	            0x89ed	                            mov ebp, ebp	      1836	channel.c	FUNCTION_50	IF_5
0x4000967	          0x4889e8	                            mov rax, rbp	      1836	channel.c	FUNCTION_50	IF_5
0x400096a	        0x48c1e004	                              shl rax, 4	      1836	channel.c	FUNCTION_50	IF_5
0x400096e	        0x48c1e508	                              shl rbp, 8	      1836	channel.c	FUNCTION_50	IF_5
0x4000972	          0x4801c5	                            add rbp, rax	      1836	channel.c	FUNCTION_50	IF_5
0x4000975	      0x4d896c2e40	       mov qword [r14 + rbp + 0x40], r13	      1836	channel.c	FUNCTION_50	IF_5
0x400097a	            0xeb5c	                           jmp 0x40009d8	      1836	channel.c	FUNCTION_50	IF_5
0x400097c	    0x49c745100000	               mov qword [r13 + 0x10], 0	      1841	channel.c	FUNCTION_50	ELSE_3
0x4000984	            0x89e8	                            mov eax, ebp	      1842	channel.c	FUNCTION_50	ELSE_3
0x4000986	          0x4889c2	                            mov rdx, rax	      1842	channel.c	FUNCTION_50	ELSE_3
0x4000989	        0x48c1e204	                              shl rdx, 4	      1842	channel.c	FUNCTION_50	ELSE_3
0x400098d	        0x48c1e008	                              shl rax, 8	      1842	channel.c	FUNCTION_50	ELSE_3
0x4000991	          0x4801d0	                            add rax, rdx	      1842	channel.c	FUNCTION_50	ELSE_3
0x4000994	          0x4c01f0	                            add rax, r14	      1842	channel.c	FUNCTION_50	ELSE_3
0x4000997	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      1842	channel.c	FUNCTION_50	ELSE_3
0x400099b	        0x49895518	             mov qword [r13 + 0x18], rdx	      1842	channel.c	FUNCTION_50	ELSE_3
0x400099f	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1843	channel.c	FUNCTION_50	ELSE_3	IF_7
0x40009a3	          0x4885c0	                           test rax, rax	      1843	channel.c	FUNCTION_50	ELSE_3	IF_7
0x40009a6	            0x7517	                           jne 0x40009bf	      1843	channel.c	FUNCTION_50	ELSE_3	IF_7
0x40009a8	            0x89e8	                            mov eax, ebp	      1844	channel.c	FUNCTION_50	ELSE_3	IF_7
0x40009aa	          0x4889c2	                            mov rdx, rax	      1844	channel.c	FUNCTION_50	ELSE_3	IF_7
0x40009ad	        0x48c1e204	                              shl rdx, 4	      1844	channel.c	FUNCTION_50	ELSE_3	IF_7
0x40009b1	        0x48c1e008	                              shl rax, 8	      1844	channel.c	FUNCTION_50	ELSE_3	IF_7
0x40009b5	          0x4801d0	                            add rax, rdx	      1844	channel.c	FUNCTION_50	ELSE_3	IF_7
0x40009b8	      0x4d896c0640	       mov qword [r14 + rax + 0x40], r13	      1844	channel.c	FUNCTION_50	ELSE_3	IF_7
0x40009bd	            0xeb04	                           jmp 0x40009c3	      1844	channel.c	FUNCTION_50	ELSE_3	IF_7
0x40009bf	        0x4c896810	             mov qword [rax + 0x10], r13	      1846	channel.c	FUNCTION_50	ELSE_3	ELSE_4
0x40009c3	            0x89ed	                            mov ebp, ebp	      1847	channel.c	FUNCTION_50	ELSE_3	ELSE_4
0x40009c5	          0x4889e8	                            mov rax, rbp	      1847	channel.c	FUNCTION_50	ELSE_3	ELSE_4
0x40009c8	        0x48c1e004	                              shl rax, 4	      1847	channel.c	FUNCTION_50	ELSE_3	ELSE_4
0x40009cc	        0x48c1e508	                              shl rbp, 8	      1847	channel.c	FUNCTION_50	ELSE_3	ELSE_4
0x40009d0	          0x4801c5	                            add rbp, rax	      1847	channel.c	FUNCTION_50	ELSE_3	ELSE_4
0x40009d3	      0x4d896c2e48	       mov qword [r14 + rbp + 0x48], r13	      1847	channel.c	FUNCTION_50	ELSE_3	ELSE_4
0x40009d8	    0x48833d000000	               cmp qword [0x040009e0], 0	      1850	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_5
0x40009e0	            0x7460	                            je 0x4000a42	      1850	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_5
0x40009e2	          0x4d85ff	                           test r15, r15	      1850	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_5
0x40009e5	            0x745b	                            je 0x4000a42	      1850	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_5
0x40009e7	          0x4c89f6	                            mov rsi, r14	      1852	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_6
0x40009ea	          0x4c89ff	                            mov rdi, r15	      1852	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_6
0x40009ed	      0xe889f7ffff	                    call sym.ch_log_lead	      1852	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_6
0x40009f2	    0x488b35000000	            mov rsi, qword [0x040009f9] 	        97	stdio2.h	CALL_20
0x40009f9	      0xbf27000000	                           mov edi, 0x27	        97	stdio2.h	CALL_20
0x40009fe	      0xe800000000	                          call 0x4000a03	        97	stdio2.h	CALL_20
0x4000a03	          0x4863f3	                         movsxd rsi, ebx	      1854	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_7
0x4000a06	    0x488b0d000000	            mov rcx, qword [0x04000a0d] 	      1854	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_7
0x4000a0d	      0xba01000000	                              mov edx, 1	      1854	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_7
0x4000a12	          0x4c89e7	                            mov rdi, r12	      1854	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_7
0x4000a15	      0xe800000000	                          call 0x4000a1a	      1854	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_7
0x4000a1a	    0x890500000000	            mov dword [0x04000a20], eax 	      1854	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_7
0x4000a20	    0x488b0d000000	            mov rcx, qword [0x04000a27] 	        97	stdio2.h	CALL_20
0x4000a27	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_20
0x4000a2c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_20
0x4000a31	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_20
0x4000a36	      0xe800000000	                          call 0x4000a3b	        97	stdio2.h	CALL_20
0x4000a3b	      0xb801000000	                              mov eax, 1	      1857	channel.c	FUNCTION_50
0x4000a40	            0xeb1f	                           jmp 0x4000a61	      1857	channel.c	FUNCTION_50
0x4000a42	      0xb801000000	                              mov eax, 1	      1857	channel.c	FUNCTION_50
0x4000a47	            0xeb18	                           jmp 0x4000a61	      1857	channel.c	FUNCTION_50
0x4000a49	        0x488d5001	                      lea rdx, [rax + 1]	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x4000a4d	          0x408830	                     mov byte [rax], sil	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x4000a50	      0xe953feffff	                           jmp 0x40008a8	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x4000a55	        0x488d5001	                      lea rdx, [rax + 1]	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x4000a59	          0x408830	                     mov byte [rax], sil	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x4000a5c	      0xe982feffff	                           jmp 0x40008e3	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x4000a61	        0x4883c418	                           add rsp, 0x18	      1858	channel.c	FUNCTION_50
0x4000a65	              0x5b	                                 pop rbx	      1858	channel.c	FUNCTION_50
0x4000a66	              0x5d	                                 pop rbp	      1858	channel.c	FUNCTION_50
0x4000a67	            0x415c	                                 pop r12	      1858	channel.c	FUNCTION_50
0x4000a69	            0x415d	                                 pop r13	      1858	channel.c	FUNCTION_50
0x4000a6b	            0x415e	                                 pop r14	      1858	channel.c	FUNCTION_50
0x4000a6d	            0x415f	                                 pop r15	      1858	channel.c	FUNCTION_50
0x4000a6f	              0xc3	                                     ret	      1858	channel.c	FUNCTION_50
send_common	IF,5:ELSE,0:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,10	90
0x4007190	            0x4157	                                push r15	      3883	channel.c	FUNCTION_88
0x4007192	            0x4156	                                push r14	      3883	channel.c	FUNCTION_88
0x4007194	            0x4155	                                push r13	      3883	channel.c	FUNCTION_88
0x4007196	            0x4154	                                push r12	      3883	channel.c	FUNCTION_88
0x4007198	              0x55	                                push rbp	      3883	channel.c	FUNCTION_88
0x4007199	              0x53	                                push rbx	      3883	channel.c	FUNCTION_88
0x400719a	        0x4883ec18	                           sub rsp, 0x18	      3883	channel.c	FUNCTION_88
0x400719e	          0x4889fb	                            mov rbx, rdi	      3883	channel.c	FUNCTION_88
0x40071a1	          0x4989f6	                            mov r14, rsi	      3883	channel.c	FUNCTION_88
0x40071a4	        0x8954240c	              mov dword [rsp + 0xc], edx	      3883	channel.c	FUNCTION_88
0x40071a8	        0x894c2408	                mov dword [rsp + 8], ecx	      3883	channel.c	FUNCTION_88
0x40071ac	          0x4c89c5	                             mov rbp, r8	      3883	channel.c	FUNCTION_88
0x40071af	          0x4d89cf	                             mov r15, r9	      3883	channel.c	FUNCTION_88
0x40071b2	          0x4c89c7	                             mov rdi, r8	      3887	channel.c	FUNCTION_88	CALL_1
0x40071b5	      0xe800000000	                          call 0x40071ba	      3887	channel.c	FUNCTION_88	CALL_1
0x40071ba	      0xb900000000	                              mov ecx, 0	      3888	channel.c	FUNCTION_88	CALL_2
0x40071bf	      0xba00000000	                              mov edx, 0	      3888	channel.c	FUNCTION_88	CALL_2
0x40071c4	      0xbe01000000	                              mov esi, 1	      3888	channel.c	FUNCTION_88	CALL_2
0x40071c9	          0x4889df	                            mov rdi, rbx	      3888	channel.c	FUNCTION_88	CALL_2
0x40071cc	      0xe800000000	                          call 0x40071d1	      3888	channel.c	FUNCTION_88	CALL_2
0x40071d1	          0x4885c0	                           test rax, rax	      3889	channel.c	FUNCTION_88	IF_1
0x40071d4	     0xf84db000000	                            je 0x40072b5	      3889	channel.c	FUNCTION_88	IF_1
0x40071da	          0x4989c4	                            mov r12, rax	      3889	channel.c	FUNCTION_88	IF_1
0x40071dd	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4355	channel.c	FUNCTION_98	IF_1
0x40071e0	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      4357	channel.c	FUNCTION_98
0x40071e3	        0x410f94c5	                               sete r13b	      4357	channel.c	FUNCTION_98
0x40071e7	        0x450fb6ed	                        movzx r13d, r13b	      4357	channel.c	FUNCTION_98
0x40071eb	      0x478d6c6d00	                 lea r13d, [r13 + r13*2]	      4357	channel.c	FUNCTION_98
0x40071f0	           0xf94c0	                                 sete al	      3892	channel.c	FUNCTION_88	CALL_4
0x40071f3	           0xfb6c0	                           movzx eax, al	      3892	channel.c	FUNCTION_88	CALL_4
0x40071f6	      0x488b742450	            mov rsi, qword [rsp + 0x50] 	      3892	channel.c	FUNCTION_88	CALL_4
0x40071fb	            0x8906	                    mov dword [rsi], eax	      3892	channel.c	FUNCTION_88	CALL_4
0x40071fd	        0x488d7b20	                   lea rdi, [rbx + 0x20]	      3894	channel.c	FUNCTION_88	IF_2	CALL_5
0x4007201	      0xb900000000	                              mov ecx, 0	      3894	channel.c	FUNCTION_88	IF_2	CALL_5
0x4007206	      0xba10020000	                          mov edx, 0x210	      3894	channel.c	FUNCTION_88	IF_2	CALL_5
0x400720b	          0x4889ee	                            mov rsi, rbp	      3894	channel.c	FUNCTION_88	IF_2	CALL_5
0x400720e	      0xe800000000	                          call 0x4007213	      3894	channel.c	FUNCTION_88	IF_2	CALL_5
0x4007213	            0x85c0	                           test eax, eax	      3894	channel.c	FUNCTION_88	IF_2	CALL_5
0x4007215	     0xf84a1000000	                            je 0x40072bc	      3894	channel.c	FUNCTION_88	IF_2	CALL_5
0x400721b	    0x488b95a00100	           mov rdx, qword [rbp + 0x1a0] 	      3900	channel.c	FUNCTION_88	IF_3
0x4007222	          0x4885d2	                           test rdx, rdx	      3900	channel.c	FUNCTION_88	IF_3
0x4007225	            0x744d	                            je 0x4007274	      3900	channel.c	FUNCTION_88	IF_3
0x4007227	          0x803a00	                       cmp byte [rdx], 0	      3900	channel.c	FUNCTION_88	IF_3
0x400722a	            0x7448	                            je 0x4007274	      3900	channel.c	FUNCTION_88	IF_3
0x400722c	      0x837c240800	                  cmp dword [rsp + 8], 0	      3902	channel.c	FUNCTION_88	IF_3	IF_4
0x4007231	            0x7426	                            je 0x4007259	      3902	channel.c	FUNCTION_88	IF_3	IF_4
0x4007233	      0xba05000000	                              mov edx, 5	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x4007238	      0xbe00000000	                              mov esi, 0	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x400723d	      0xbf00000000	                              mov edi, 0	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x4007242	      0xe800000000	                          call 0x4007247	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x4007247	          0x4c89fe	                            mov rsi, r15	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x400724a	          0x4889c7	                            mov rdi, rax	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x400724d	      0xe800000000	                          call 0x4007252	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x4007252	      0xba00000000	                              mov edx, 0	      3905	channel.c	FUNCTION_88	IF_3	IF_4
0x4007257	            0xeb68	                           jmp 0x40072c1	      3905	channel.c	FUNCTION_88	IF_3	IF_4
0x4007259	    0x488b8da80100	           mov rcx, qword [rbp + 0x1a8] 	      3907	channel.c	FUNCTION_88	IF_3	CALL_8
0x4007260	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      3907	channel.c	FUNCTION_88	IF_3	CALL_8
0x4007265	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      3907	channel.c	FUNCTION_88	IF_3	CALL_8
0x400726a	            0x8b30	                    mov esi, dword [rax]	      3907	channel.c	FUNCTION_88	IF_3	CALL_8
0x400726c	          0x4c89e7	                            mov rdi, r12	      3907	channel.c	FUNCTION_88	IF_3	CALL_8
0x400726f	      0xe800000000	                          call 0x4007274	      3907	channel.c	FUNCTION_88	IF_3	CALL_8
0x4007274	      0xb800000000	                              mov eax, 0	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x4007279	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x4007280	          0x4c89f7	                            mov rdi, r14	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x4007283	            0xf2ae	              repne scasb al, byte [rdi]	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x4007285	          0x48f7d1	                                 not rcx	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x4007288	        0x4883e901	                              sub rcx, 1	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x400728c	          0x4d89f8	                             mov r8, r15	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x400728f	          0x4c89f2	                            mov rdx, r14	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x4007292	          0x4489ee	                           mov esi, r13d	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x4007295	          0x4c89e7	                            mov rdi, r12	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x4007298	      0xe800000000	                          call 0x400729d	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x400729d	      0xba00000000	                              mov edx, 0	      3914	channel.c	FUNCTION_88
0x40072a2	          0x83f801	                              cmp eax, 1	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x40072a5	            0x751a	                           jne 0x40072c1	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x40072a7	    0x4883bda00100	              cmp qword [rbp + 0x1a0], 0	      3913	channel.c	FUNCTION_88	IF_5
0x40072af	        0x490f44d4	                          cmove rdx, r12	      3913	channel.c	FUNCTION_88	IF_5
0x40072b3	            0xeb0c	                           jmp 0x40072c1	      3913	channel.c	FUNCTION_88	IF_5
0x40072b5	      0xba00000000	                              mov edx, 0	      3890	channel.c	FUNCTION_88	IF_1
0x40072ba	            0xeb05	                           jmp 0x40072c1	      3890	channel.c	FUNCTION_88	IF_1
0x40072bc	      0xba00000000	                              mov edx, 0	      3895	channel.c	FUNCTION_88	IF_2
0x40072c1	          0x4889d0	                            mov rax, rdx	      3915	channel.c	FUNCTION_88
0x40072c4	        0x4883c418	                           add rsp, 0x18	      3915	channel.c	FUNCTION_88
0x40072c8	              0x5b	                                 pop rbx	      3915	channel.c	FUNCTION_88
0x40072c9	              0x5d	                                 pop rbp	      3915	channel.c	FUNCTION_88
0x40072ca	            0x415c	                                 pop r12	      3915	channel.c	FUNCTION_88
0x40072cc	            0x415d	                                 pop r13	      3915	channel.c	FUNCTION_88
0x40072ce	            0x415e	                                 pop r14	      3915	channel.c	FUNCTION_88
0x40072d0	            0x415f	                                 pop r15	      3915	channel.c	FUNCTION_88
0x40072d2	              0xc3	                                     ret	      3915	channel.c	FUNCTION_88
channel_free	IF,2:ELSE,1:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,2	13
0x400497e	    0x833d00000000	               cmp dword [0x04004985], 0	       382	channel.c	FUNCTION_13	IF_1
0x4004985	            0x7526	                           jne 0x40049ad	       382	channel.c	FUNCTION_13	IF_1
0x4004987	    0x833d00000000	               cmp dword [0x0400498e], 0	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x400498e	            0x750b	                           jne 0x400499b	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x4004990	    0xc78770040000	              mov dword [rdi + 0x470], 1	       385	channel.c	FUNCTION_13	IF_1	IF_2
0x400499a	              0xc3	                                     ret	       385	channel.c	FUNCTION_13	IF_1	IF_2
0x400499b	              0x53	                                push rbx	       381	channel.c	FUNCTION_13
0x400499c	          0x4889fb	                            mov rbx, rdi	       381	channel.c	FUNCTION_13
0x400499f	      0xe8b0ffffff	          call sym.channel_free_contents	       388	channel.c	FUNCTION_13	IF_1	ELSE_1	CALL_1
0x40049a4	          0x4889df	                            mov rdi, rbx	       389	channel.c	FUNCTION_13	IF_1	ELSE_1	CALL_2
0x40049a7	      0xe89ab9ffff	           call sym.channel_free_channel	       389	channel.c	FUNCTION_13	IF_1	ELSE_1	CALL_2
0x40049ac	              0x5b	                                 pop rbx	       392	channel.c	FUNCTION_13
0x40049ad	            0xf3c3	                                     ret	       392	channel.c	FUNCTION_13
channel_fill_wfds	IF,2:ELSE,0:FOR,1:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,1	44
0x40003b8	            0x4155	                                push r13	      3054	channel.c	FUNCTION_74
0x40003ba	            0x4154	                                push r12	      3054	channel.c	FUNCTION_74
0x40003bc	              0x55	                                push rbp	      3054	channel.c	FUNCTION_74
0x40003bd	              0x53	                                push rbx	      3054	channel.c	FUNCTION_74
0x40003be	        0x4883ec08	                              sub rsp, 8	      3054	channel.c	FUNCTION_74
0x40003c2	            0x89fd	                            mov ebp, edi	      3054	channel.c	FUNCTION_74
0x40003c4	    0x488b1d000000	            mov rbx, qword [0x040003cb] 	      3058	channel.c	FUNCTION_74	FOR_1
0x40003cb	          0x4885db	                           test rbx, rbx	      3058	channel.c	FUNCTION_74	FOR_1
0x40003ce	            0x7465	                            je 0x4000435	      3058	channel.c	FUNCTION_74	FOR_1
0x40003d0	          0x4989f4	                            mov r12, rsi	      3058	channel.c	FUNCTION_74	FOR_1
0x40003d3	    0x41bd01000000	                             mov r13d, 1	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x40003d9	    0x8b8348030000	           mov eax, dword [rbx + 0x348] 	      3062	channel.c	FUNCTION_74	FOR_1	IF_1
0x40003df	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3062	channel.c	FUNCTION_74	FOR_1	IF_1
0x40003e2	            0x7449	                            je 0x400042d	      3062	channel.c	FUNCTION_74	FOR_1	IF_1
0x40003e4	          0x4863f8	                         movsxd rdi, eax	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x40003e7	    0x4883bb280400	              cmp qword [rbx + 0x428], 0	      3063	channel.c	FUNCTION_74	FOR_1	IF_1
0x40003ef	            0x750a	                           jne 0x40003fb	      3063	channel.c	FUNCTION_74	FOR_1	IF_1
0x40003f1	    0x4883bbe00300	              cmp qword [rbx + 0x3e0], 0	      3064	channel.c	FUNCTION_74	FOR_1	IF_1
0x40003f9	            0x7432	                            je 0x400042d	      3064	channel.c	FUNCTION_74	FOR_1	IF_1
0x40003fb	      0xe800000000	                          call 0x4000400	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4000400	    0x8b8b48030000	           mov ecx, dword [rbx + 0x348] 	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4000406	            0x89ca	                            mov edx, ecx	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4000408	          0xc1fa1f	                           sar edx, 0x1f	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x400040b	          0xc1ea1a	                           shr edx, 0x1a	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x400040e	             0x1d1	                            add ecx, edx	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4000410	          0x83e13f	                           and ecx, 0x3f	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4000413	            0x29d1	                            sub ecx, edx	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4000415	          0x4c89ea	                            mov rdx, r13	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4000418	          0x48d3e2	                             shl rdx, cl	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x400041b	        0x490914c4	             or qword [r12 + rax*8], rdx	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x400041f	    0x8b8348030000	           mov eax, dword [rbx + 0x348] 	      3067	channel.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x4000425	          0x8d5001	                      lea edx, [rax + 1]	      3068	channel.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x4000428	            0x39e8	                            cmp eax, ebp	      3068	channel.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x400042a	           0xf4dea	                         cmovge ebp, edx	      3068	channel.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x400042d	          0x488b1b	                    mov rbx, qword [rbx]	      3058	channel.c	FUNCTION_74	FOR_1
0x4000430	          0x4885db	                           test rbx, rbx	      3058	channel.c	FUNCTION_74	FOR_1
0x4000433	            0x75a4	                           jne 0x40003d9	      3058	channel.c	FUNCTION_74	FOR_1
0x4000435	            0x89e8	                            mov eax, ebp	      3072	channel.c	FUNCTION_74
0x4000437	        0x4883c408	                              add rsp, 8	      3072	channel.c	FUNCTION_74
0x400043b	              0x5b	                                 pop rbx	      3072	channel.c	FUNCTION_74
0x400043c	              0x5d	                                 pop rbp	      3072	channel.c	FUNCTION_74
0x400043d	            0x415c	                                 pop r12	      3072	channel.c	FUNCTION_74
0x400043f	            0x415d	                                 pop r13	      3072	channel.c	FUNCTION_74
0x4000441	              0xc3	                                     ret	      3072	channel.c	FUNCTION_74
may_invoke_callback	IF,34:ELSE,11:FOR,4:SWITCH,0:functions,0:DO,0:WHILE,2:CALL,31	903
0x400378b	            0x4157	                                push r15	      2465	channel.c	FUNCTION_61
0x400378d	            0x4156	                                push r14	      2465	channel.c	FUNCTION_61
0x400378f	            0x4155	                                push r13	      2465	channel.c	FUNCTION_61
0x4003791	            0x4154	                                push r12	      2465	channel.c	FUNCTION_61
0x4003793	              0x55	                                push rbp	      2465	channel.c	FUNCTION_61
0x4003794	              0x53	                                push rbx	      2465	channel.c	FUNCTION_61
0x4003795	    0x4881ec580100	                          sub rsp, 0x158	      2465	channel.c	FUNCTION_61
0x400379c	    0x64488b042528	                mov rax, qword fs:[0x28]	      2465	channel.c	FUNCTION_61
0x40037a5	    0x488984244801	            mov qword [rsp + 0x148], rax	      2465	channel.c	FUNCTION_61
0x40037ad	            0x31c0	                            xor eax, eax	      2465	channel.c	FUNCTION_61
0x40037af	    0x48c744243000	               mov qword [rsp + 0x30], 0	      2467	channel.c	FUNCTION_61
0x40037b8	    0x41bc00000000	                             mov r12d, 0	      2481	channel.c	FUNCTION_61	IF_1
0x40037be	    0x4883bf780400	              cmp qword [rdi + 0x478], 0	      2479	channel.c	FUNCTION_61	IF_1
0x40037c6	     0xf853b0d0000	                           jne 0x4004507	      2479	channel.c	FUNCTION_61	IF_1
0x40037cc	          0x4889fd	                            mov rbp, rdi	      2479	channel.c	FUNCTION_61	IF_1
0x40037cf	          0x4189f7	                           mov r15d, esi	      2479	channel.c	FUNCTION_61	IF_1
0x40037d2	            0x89f0	                            mov eax, esi	      2484	channel.c	FUNCTION_61	FOR_1
0x40037d4	          0x4889c2	                            mov rdx, rax	      2484	channel.c	FUNCTION_61	FOR_1
0x40037d7	        0x48c1e204	                              shl rdx, 4	      2484	channel.c	FUNCTION_61	FOR_1
0x40037db	        0x48c1e008	                              shl rax, 8	      2484	channel.c	FUNCTION_61	FOR_1
0x40037df	          0x4801d0	                            add rax, rdx	      2484	channel.c	FUNCTION_61	FOR_1
0x40037e2	    0x488b9c07d800	      mov rbx, qword [rdi + rax + 0xd8] 	      2484	channel.c	FUNCTION_61	FOR_1
0x40037ea	          0x4885db	                           test rbx, rbx	      2484	channel.c	FUNCTION_61	FOR_1
0x40037ed	     0xf84490d0000	                            je 0x400453c	      2484	channel.c	FUNCTION_61	FOR_1
0x40037f3	        0x837b1000	               cmp dword [rbx + 0x10], 0	      2485	channel.c	FUNCTION_61	FOR_1	IF_2
0x40037f7	            0x750f	                           jne 0x4003808	      2485	channel.c	FUNCTION_61	FOR_1	IF_2
0x40037f9	      0xe9280d0000	                           jmp 0x4004526	      2485	channel.c	FUNCTION_61	FOR_1	IF_2
0x40037fe	        0x837b1000	               cmp dword [rbx + 0x10], 0	      2485	channel.c	FUNCTION_61	FOR_1	IF_2
0x4003802	     0xf841e0d0000	                            je 0x4004526	      2485	channel.c	FUNCTION_61	FOR_1	IF_2
0x4003808	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      2484	channel.c	FUNCTION_61	FOR_1
0x400380c	          0x4885db	                           test rbx, rbx	      2484	channel.c	FUNCTION_61	FOR_1
0x400380f	            0x75ed	                           jne 0x40037fe	      2484	channel.c	FUNCTION_61	FOR_1
0x4003811	      0xe9260d0000	                           jmp 0x400453c	      2484	channel.c	FUNCTION_61	FOR_1
0x4003816	          0x4489f8	                           mov eax, r15d	      2495	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4003819	          0x4889c2	                            mov rdx, rax	      2495	channel.c	FUNCTION_61	ELSE_1	IF_4
0x400381c	        0x48c1e204	                              shl rdx, 4	      2495	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4003820	        0x48c1e008	                              shl rax, 8	      2495	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4003824	          0x4801d0	                            add rax, rdx	      2495	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4003827	    0x488b8405f000	      mov rax, qword [rbp + rax + 0xf0] 	      2495	channel.c	FUNCTION_61	ELSE_1	IF_4
0x400382f	      0x4889442420	             mov qword [rsp + 0x20], rax	      2495	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4003834	      0xbb00000000	                              mov ebx, 0	      2495	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4003839	            0xeb1d	                           jmp 0x4003858	      2495	channel.c	FUNCTION_61	ELSE_1	IF_4
0x400383b	    0x488b85800400	           mov rax, qword [rbp + 0x480] 	      2499	channel.c	FUNCTION_61	ELSE_2
0x4003842	      0x4889442408	                mov qword [rsp + 8], rax	      2499	channel.c	FUNCTION_61	ELSE_2
0x4003847	    0x488b85880400	           mov rax, qword [rbp + 0x488] 	      2500	channel.c	FUNCTION_61	ELSE_2
0x400384e	      0x4889442420	             mov qword [rsp + 0x20], rax	      2500	channel.c	FUNCTION_61	ELSE_2
0x4003853	      0xbb00000000	                              mov ebx, 0	      2500	channel.c	FUNCTION_61	ELSE_2
0x4003858	          0x4489f8	                           mov eax, r15d	      2471	channel.c	FUNCTION_61
0x400385b	          0x4889c2	                            mov rdx, rax	      2471	channel.c	FUNCTION_61
0x400385e	        0x48c1e204	                              shl rdx, 4	      2471	channel.c	FUNCTION_61
0x4003862	        0x48c1e008	                              shl rax, 8	      2471	channel.c	FUNCTION_61
0x4003866	          0x4801d0	                            add rax, rdx	      2471	channel.c	FUNCTION_61
0x4003869	          0x4801e8	                            add rax, rbp	      2471	channel.c	FUNCTION_61
0x400386c	          0x8b4820	            mov ecx, dword [rax + 0x20] 	      2471	channel.c	FUNCTION_61
0x400386f	        0x894c2404	                mov dword [rsp + 4], ecx	      2471	channel.c	FUNCTION_61
0x4003873	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2503	channel.c	FUNCTION_61
0x400387a	          0x4989c6	                            mov r14, rax	      2503	channel.c	FUNCTION_61
0x400387d	      0x4889442410	             mov qword [rsp + 0x10], rax	      2503	channel.c	FUNCTION_61
0x4003882	          0x4885c0	                           test rax, rax	      2504	channel.c	FUNCTION_61	IF_5	CALL_1
0x4003885	            0x746b	                            je 0x40038f2	      2504	channel.c	FUNCTION_61	IF_5	CALL_1
0x4003887	          0x4489f8	                           mov eax, r15d	      2504	channel.c	FUNCTION_61	IF_5	CALL_1
0x400388a	          0x4889c2	                            mov rdx, rax	      2504	channel.c	FUNCTION_61	IF_5	CALL_1
0x400388d	        0x48c1e204	                              shl rdx, 4	      2504	channel.c	FUNCTION_61	IF_5	CALL_1
0x4003891	        0x48c1e008	                              shl rax, 8	      2504	channel.c	FUNCTION_61	IF_5	CALL_1
0x4003895	    0x488d8402f000	            lea rax, [rdx + rax + 0xf0] 	      2504	channel.c	FUNCTION_61	IF_5	CALL_1
0x400389d	      0x488d7c0508	                lea rdi, [rbp + rax + 8]	      2504	channel.c	FUNCTION_61	IF_5	CALL_1
0x40038a2	      0xe800000000	                          call 0x40038a7	      2504	channel.c	FUNCTION_61	IF_5	CALL_1
0x40038a7	            0x85c0	                           test eax, eax	      2504	channel.c	FUNCTION_61	IF_5	CALL_1
0x40038a9	            0x7407	                            je 0x40038b2	      2504	channel.c	FUNCTION_61	IF_5	CALL_1
0x40038ab	      0x49837e0800	                  cmp qword [r14 + 8], 0	      2505	channel.c	FUNCTION_61	IF_5
0x40038b0	            0x7540	                           jne 0x40038f2	      2505	channel.c	FUNCTION_61	IF_5
0x40038b2	          0x4589fc	                          mov r12d, r15d	      2508	channel.c	FUNCTION_61	IF_5	CALL_2
0x40038b5	    0x4a8b14e50000	                  mov rdx, qword [r12*8]	      2508	channel.c	FUNCTION_61	IF_5	CALL_2
0x40038bd	      0xbe00000000	                              mov esi, 0	      2508	channel.c	FUNCTION_61	IF_5	CALL_2
0x40038c2	          0x4889ef	                            mov rdi, rbp	      2508	channel.c	FUNCTION_61	IF_5	CALL_2
0x40038c5	      0xb800000000	                              mov eax, 0	      2508	channel.c	FUNCTION_61	IF_5	CALL_2
0x40038ca	      0xe800000000	                          call 0x40038cf	      2508	channel.c	FUNCTION_61	IF_5	CALL_2
0x40038cf	          0x4c89e0	                            mov rax, r12	      2509	channel.c	FUNCTION_61	IF_5
0x40038d2	        0x48c1e004	                              shl rax, 4	      2509	channel.c	FUNCTION_61	IF_5
0x40038d6	        0x49c1e408	                              shl r12, 8	      2509	channel.c	FUNCTION_61	IF_5
0x40038da	          0x4901c4	                            add r12, rax	      2509	channel.c	FUNCTION_61	IF_5
0x40038dd	    0x4ac78425f800	        mov qword [rbp + r12 + 0xf8], 0 	      2509	channel.c	FUNCTION_61	IF_5
0x40038e9	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2510	channel.c	FUNCTION_61	IF_5
0x40038f2	          0x4489f8	                           mov eax, r15d	      2472	channel.c	FUNCTION_61
0x40038f5	          0x4889c2	                            mov rdx, rax	      2472	channel.c	FUNCTION_61
0x40038f8	        0x48c1e204	                              shl rdx, 4	      2472	channel.c	FUNCTION_61
0x40038fc	        0x48c1e008	                              shl rax, 8	      2472	channel.c	FUNCTION_61
0x4003900	    0x488d8402b000	            lea rax, [rdx + rax + 0xb0] 	      2472	channel.c	FUNCTION_61
0x4003908	      0x488d440510	            lea rax, [rbp + rax + 0x10] 	      2472	channel.c	FUNCTION_61
0x400390d	      0x4889442418	             mov qword [rsp + 0x18], rax	      2472	channel.c	FUNCTION_61
0x4003912	        0x8b442404	                mov eax, dword [rsp + 4]	      2513	channel.c	FUNCTION_61	IF_6
0x4003916	          0x83e802	                              sub eax, 2	      2513	channel.c	FUNCTION_61	IF_6
0x4003919	          0x83f801	                              cmp eax, 1	      2513	channel.c	FUNCTION_61	IF_6
0x400391c	     0xf87ae040000	                            ja 0x4003dd0	      2513	channel.c	FUNCTION_61	IF_6
0x4003922	      0x4c8d442430	                    lea r8, [rsp + 0x30]	      2519	channel.c	FUNCTION_61	IF_6	IF_7	CALL_3
0x4003927	      0xb900000000	                              mov ecx, 0	      2519	channel.c	FUNCTION_61	IF_6	IF_7	CALL_3
0x400392c	      0xbaffffffff	                     mov edx, 0xffffffff	      2519	channel.c	FUNCTION_61	IF_6	IF_7	CALL_3
0x4003931	          0x4489fe	                           mov esi, r15d	      2519	channel.c	FUNCTION_61	IF_6	IF_7	CALL_3
0x4003934	          0x4889ef	                            mov rdi, rbp	      2519	channel.c	FUNCTION_61	IF_6	IF_7	CALL_3
0x4003937	      0xe841d6ffff	               call sym.channel_get_json	      2519	channel.c	FUNCTION_61	IF_6	IF_7	CALL_3
0x400393c	            0x85c0	                           test eax, eax	      2519	channel.c	FUNCTION_61	IF_6	IF_7	CALL_3
0x400393e	            0x7530	                           jne 0x4003970	      2519	channel.c	FUNCTION_61	IF_6	IF_7	CALL_3
0x4003940	          0x4489fe	                           mov esi, r15d	      2522	channel.c	FUNCTION_61	IF_6	IF_7	CALL_4
0x4003943	          0x4889ef	                            mov rdi, rbp	      2522	channel.c	FUNCTION_61	IF_6	IF_7	CALL_4
0x4003946	      0xe8c6e0ffff	             call sym.channel_parse_json	      2522	channel.c	FUNCTION_61	IF_6	IF_7	CALL_4
0x400394b	      0x4c8d442430	                    lea r8, [rsp + 0x30]	      2523	channel.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_5
0x4003950	      0xb900000000	                              mov ecx, 0	      2523	channel.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_5
0x4003955	      0xbaffffffff	                     mov edx, 0xffffffff	      2523	channel.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_5
0x400395a	          0x4489fe	                           mov esi, r15d	      2523	channel.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_5
0x400395d	          0x4889ef	                            mov rdi, rbp	      2523	channel.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_5
0x4003960	      0xe818d6ffff	               call sym.channel_get_json	      2523	channel.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_5
0x4003965	          0x4189c4	                           mov r12d, eax	      2523	channel.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_5
0x4003968	            0x85c0	                           test eax, eax	      2523	channel.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_5
0x400396a	     0xf84970b0000	                            je 0x4004507	      2523	channel.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_5
0x4003970	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x4003975	        0x488b4008	                mov rax, qword [rax + 8]	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x4003979	          0x488b10	                    mov rdx, qword [rax]	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x400397c	          0x4885d2	                           test rdx, rdx	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x400397f	            0x7437	                            je 0x40039b8	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x4003981	    0x488d8c240001	                  lea rcx, [rsp + 0x100]	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x4003989	      0xb800000000	                              mov eax, 0	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x400398e	          0x83c001	                              add eax, 1	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4003991	        0x488b7210	            mov rsi, qword [rdx + 0x10] 	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4003995	        0x488b7a18	            mov rdi, qword [rdx + 0x18] 	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4003999	          0x488931	                    mov qword [rcx], rsi	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x400399c	        0x48897908	                mov qword [rcx + 8], rdi	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x40039a0	          0x488b12	                    mov rdx, qword [rdx]	      2529	channel.c	FUNCTION_61	IF_6	FOR_2
0x40039a3	        0x4883c110	                           add rcx, 0x10	      2529	channel.c	FUNCTION_61	IF_6	FOR_2
0x40039a7	          0x4885d2	                           test rdx, rdx	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x40039aa	            0x7405	                            je 0x40039b1	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x40039ac	          0x83f803	                              cmp eax, 3	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x40039af	            0x7edd	                           jle 0x400398e	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x40039b1	          0x83f803	                              cmp eax, 3	      2531	channel.c	FUNCTION_61	IF_6	WHILE_1
0x40039b4	            0x7e07	                           jle 0x40039bd	      2531	channel.c	FUNCTION_61	IF_6	WHILE_1
0x40039b6	            0xeb20	                           jmp 0x40039d8	      2531	channel.c	FUNCTION_61	IF_6	WHILE_1
0x40039b8	      0xb800000000	                              mov eax, 0	      2516	channel.c	FUNCTION_61	IF_6
0x40039bd	          0x8d5001	                      lea edx, [rax + 1]	      2532	channel.c	FUNCTION_61	IF_6	WHILE_1
0x40039c0	            0x4898	                                    cdqe	      2532	channel.c	FUNCTION_61	IF_6	WHILE_1
0x40039c2	        0x48c1e004	                              shl rax, 4	      2532	channel.c	FUNCTION_61	IF_6	WHILE_1
0x40039c6	    0xc78404000100	        mov dword [rsp + rax + 0x100], 0	      2532	channel.c	FUNCTION_61	IF_6	WHILE_1
0x40039d1	            0x89d0	                            mov eax, edx	      2532	channel.c	FUNCTION_61	IF_6	WHILE_1
0x40039d3	          0x83fa03	                              cmp edx, 3	      2531	channel.c	FUNCTION_61	IF_6	WHILE_1
0x40039d6	            0x7ee5	                           jle 0x40039bd	      2531	channel.c	FUNCTION_61	IF_6	WHILE_1
0x40039d8	    0x8b8424000100	           mov eax, dword [rsp + 0x100] 	      2534	channel.c	FUNCTION_61	IF_6	IF_9
0x40039df	          0x83f802	                              cmp eax, 2	      2534	channel.c	FUNCTION_61	IF_6	IF_9
0x40039e2	     0xf859f030000	                           jne 0x4003d87	      2534	channel.c	FUNCTION_61	IF_6	IF_9
0x40039e8	    0x83bc24100100	              cmp dword [rsp + 0x110], 2	      2201	channel.c	ELSE_6	FUNCTION_57	IF_1
0x40039f0	            0x7441	                            je 0x4003a33	      2201	channel.c	ELSE_6	FUNCTION_57	IF_1
0x40039f2	      0xbe00000000	                              mov esi, 0	      2203	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_1
0x40039f7	          0x4889ef	                            mov rdi, rbp	      2203	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_1
0x40039fa	      0xb800000000	                              mov eax, 0	      2203	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_1
0x40039ff	      0xe83fc8ffff	                       call sym.ch_error	      2203	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_1
0x4003a04	    0x48833d000000	               cmp qword [0x04003a0c], 2	      2204	channel.c	ELSE_6	FUNCTION_57	IF_1	IF_2
0x4003a0c	     0xf8e60030000	                           jle 0x4003d72	      2204	channel.c	ELSE_6	FUNCTION_57	IF_1	IF_2
0x4003a12	      0xba05000000	                              mov edx, 5	      2205	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_3
0x4003a17	      0xbe00000000	                              mov esi, 0	      2205	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_3
0x4003a1c	      0xbf00000000	                              mov edi, 0	      2205	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_3
0x4003a21	      0xe800000000	                          call 0x4003a26	      2205	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_3
0x4003a26	          0x4889c7	                            mov rdi, rax	      2205	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_3
0x4003a29	      0xe800000000	                          call 0x4003a2e	      2205	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_3
0x4003a2e	      0xe93f030000	                           jmp 0x4003d72	      2205	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_3
0x4003a33	    0x488b9c241801	           mov rbx, qword [rsp + 0x118] 	      2208	channel.c	ELSE_6	FUNCTION_57
0x4003a3b	          0x4885db	                           test rbx, rbx	      2210	channel.c	ELSE_6	FUNCTION_57	IF_3
0x4003a3e	      0xb800000000	                              mov eax, 0	      2210	channel.c	ELSE_6	FUNCTION_57	IF_3
0x4003a43	        0x480f44d8	                          cmove rbx, rax	      2210	channel.c	ELSE_6	FUNCTION_57	IF_3
0x4003a47	    0x4c8ba4240801	           mov r12, qword [rsp + 0x108] 	      2197	channel.c	ELSE_6	FUNCTION_57
0x4003a4f	      0x450fb62c24	                  movzx r13d, byte [r12]	      2212	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_4
0x4003a54	        0x4180fd65	                          cmp r13b, 0x65	      2212	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_4
0x4003a58	     0xf8580000000	                           jne 0x4003ade	      2212	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_4
0x4003a5e	    0x41807c240178	                cmp byte [r12 + 1], 0x78	      2212	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_4
0x4003a64	            0x7578	                           jne 0x4003ade	      2212	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_4
0x4003a66	    0x41807c240200	                   cmp byte [r12 + 2], 0	      2212	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_4
0x4003a6c	            0x7570	                           jne 0x4003ade	      2212	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_4
0x4003a6e	    0x448b25000000	           mov r12d, dword [0x04003a75] 	      2214	channel.c	ELSE_6	FUNCTION_57	IF_4
0x4003a75	    0xc70500000000	               mov dword [0x04003a7f], 0	      2216	channel.c	ELSE_6	FUNCTION_57	IF_4
0x4003a7f	          0x4889da	                            mov rdx, rbx	      2217	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_5
0x4003a82	      0xbe00000000	                              mov esi, 0	      2217	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_5
0x4003a87	          0x4889ef	                            mov rdi, rbp	      2217	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_5
0x4003a8a	      0xb800000000	                              mov eax, 0	      2217	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_5
0x4003a8f	      0xe800000000	                          call 0x4003a94	      2217	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_5
0x4003a94	    0x830500000000	               add dword [0x04003a9b], 1	      2218	channel.c	ELSE_6	FUNCTION_57	IF_4
0x4003a9b	          0x4889df	                            mov rdi, rbx	      2219	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_6
0x4003a9e	      0xe800000000	                          call 0x4003aa3	      2219	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_6
0x4003aa3	    0x832d00000000	               sub dword [0x04003aaa], 1	      2220	channel.c	ELSE_6	FUNCTION_57	IF_4
0x4003aaa	    0x833d00000000	               cmp dword [0x04003ab1], 0	      2221	channel.c	ELSE_6	FUNCTION_57	IF_4	IF_5
0x4003ab1	            0x741f	                            je 0x4003ad2	      2221	channel.c	ELSE_6	FUNCTION_57	IF_4	IF_5
0x4003ab3	      0xbf03000000	                              mov edi, 3	      2223	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_8
0x4003ab8	      0xe800000000	                          call 0x4003abd	      2223	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_8
0x4003abd	          0x4889c2	                            mov rdx, rax	      2222	channel.c	ELSE_6	FUNCTION_57	IF_4	IF_5	CALL_7
0x4003ac0	      0xbe00000000	                              mov esi, 0	      2222	channel.c	ELSE_6	FUNCTION_57	IF_4	IF_5	CALL_7
0x4003ac5	          0x4889ef	                            mov rdi, rbp	      2222	channel.c	ELSE_6	FUNCTION_57	IF_4	IF_5	CALL_7
0x4003ac8	      0xb800000000	                              mov eax, 0	      2222	channel.c	ELSE_6	FUNCTION_57	IF_4	IF_5	CALL_7
0x4003acd	      0xe800000000	                          call 0x4003ad2	      2222	channel.c	ELSE_6	FUNCTION_57	IF_4	IF_5	CALL_7
0x4003ad2	    0x448925000000	           mov dword [0x04003ad9], r12d 	      2224	channel.c	ELSE_6	FUNCTION_57	IF_4
0x4003ad9	      0xe994020000	                           jmp 0x4003d72	      2224	channel.c	ELSE_6	FUNCTION_57	IF_4
0x4003ade	      0xbe00000000	                              mov esi, 0	      2226	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_9
0x4003ae3	          0x4c89e7	                            mov rdi, r12	      2226	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_9
0x4003ae6	      0xe800000000	                          call 0x4003aeb	      2226	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_9
0x4003aeb	            0x85c0	                           test eax, eax	      2226	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_9
0x4003aed	            0x753a	                           jne 0x4003b29	      2226	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_9
0x4003aef	          0x4889da	                            mov rdx, rbx	      2230	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_10
0x4003af2	      0xbe00000000	                              mov esi, 0	      2230	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_10
0x4003af7	          0x4889ef	                            mov rdi, rbp	      2230	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_10
0x4003afa	      0xe800000000	                          call 0x4003aff	      2230	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_10
0x4003aff	      0x48895c2450	             mov qword [rsp + 0x50], rbx	      2231	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6
0x4003b04	    0xc78424880000	               mov dword [rsp + 0x88], 0	      2232	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6
0x4003b0f	    0xc78424840000	               mov dword [rsp + 0x84], 1	      2233	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6
0x4003b1a	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      2234	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_11
0x4003b1f	      0xe800000000	                          call 0x4003b24	      2234	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_11
0x4003b24	      0xe949020000	                           jmp 0x4003d72	      2234	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_11
0x4003b29	      0xbe00000000	                              mov esi, 0	      2236	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_12
0x4003b2e	          0x4c89e7	                            mov rdi, r12	      2236	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_12
0x4003b31	      0xe800000000	                          call 0x4003b36	      2236	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_12
0x4003b36	            0x85c0	                           test eax, eax	      2236	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_12
0x4003b38	            0x754a	                           jne 0x4003b84	      2236	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_12
0x4003b3a	      0xbe00000000	                              mov esi, 0	      2240	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_13
0x4003b3f	          0x4889ef	                            mov rdi, rbp	      2240	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_13
0x4003b42	      0xe800000000	                          call 0x4003b47	      2240	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_13
0x4003b47	          0x803b00	                       cmp byte [rbx], 0	      2241	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7
0x4003b4a	           0xf95c0	                                setne al	      2241	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7
0x4003b4d	           0xfb6c0	                           movzx eax, al	      2241	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7
0x4003b50	    0x898424840000	             mov dword [rsp + 0x84], eax	      2241	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7
0x4003b57	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      2242	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_14
0x4003b5c	      0xe800000000	                          call 0x4003b61	      2242	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_14
0x4003b61	      0xbf00000000	                              mov edi, 0	      2243	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_15
0x4003b66	      0xe800000000	                          call 0x4003b6b	      2243	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_15
0x4003b6b	      0xe800000000	                          call 0x4003b70	      2244	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_16
0x4003b70	      0xbe00000000	                              mov esi, 0	      2245	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_17
0x4003b75	      0xbf01000000	                              mov edi, 1	      2245	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_17
0x4003b7a	      0xe800000000	                          call 0x4003b7f	      2245	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_17
0x4003b7f	      0xe9ee010000	                           jmp 0x4003d72	      2245	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_17
0x4003b84	      0xbe00000000	                              mov esi, 0	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x4003b89	          0x4c89e7	                            mov rdi, r12	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x4003b8c	      0xe800000000	                          call 0x4003b91	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x4003b91	            0x85c0	                           test eax, eax	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x4003b93	            0x7415	                            je 0x4003baa	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x4003b95	      0xbe00000000	                              mov esi, 0	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x4003b9a	          0x4c89e7	                            mov rdi, r12	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x4003b9d	      0xe800000000	                          call 0x4003ba2	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x4003ba2	            0x85c0	                           test eax, eax	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x4003ba4	     0xf858a010000	                           jne 0x4003d34	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x4003baa	          0x4489f8	                           mov eax, r15d	      2199	channel.c	ELSE_6	FUNCTION_57
0x4003bad	    0x4869c0100100	                    imul rax, rax, 0x110	      2199	channel.c	ELSE_6	FUNCTION_57
0x4003bb4	      0x837c052003	        cmp dword [rbp + rax + 0x20], 3 	      2199	channel.c	ELSE_6	FUNCTION_57
0x4003bb9	        0x410f94c6	                               sete r14b	      2199	channel.c	ELSE_6	FUNCTION_57
0x4003bbd	        0x450fb6f6	                        movzx r14d, r14b	      2199	channel.c	ELSE_6	FUNCTION_57
0x4003bc1	        0x4180fd63	                          cmp r13b, 0x63	      2250	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8
0x4003bc5	     0xf849d090000	                            je 0x4004568	      2250	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8
0x4003bcb	    0x83bc24200100	              cmp dword [rsp + 0x120], 1	      2252	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9
0x4003bd3	     0xf86a2090000	                           jbe 0x400457b	      2252	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9
0x4003bd9	      0xbe00000000	                              mov esi, 0	      2255	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_20
0x4003bde	          0x4889ef	                            mov rdi, rbp	      2255	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_20
0x4003be1	      0xb800000000	                              mov eax, 0	      2255	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_20
0x4003be6	      0xe858c6ffff	                       call sym.ch_error	      2255	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_20
0x4003beb	    0x48833d000000	               cmp qword [0x04003bf3], 2	      2256	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	IF_10
0x4003bf3	     0xf8e79010000	                           jle 0x4003d72	      2256	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	IF_10
0x4003bf9	      0xba05000000	                              mov edx, 5	      2257	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_22
0x4003bfe	      0xbe00000000	                              mov esi, 0	      2257	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_22
0x4003c03	      0xbf00000000	                              mov edi, 0	      2257	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_22
0x4003c08	      0xe800000000	                          call 0x4003c0d	      2257	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_22
0x4003c0d	          0x4889c7	                            mov rdi, rax	      2257	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_22
0x4003c10	      0xe800000000	                          call 0x4003c15	      2257	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_22
0x4003c15	      0xe958010000	                           jmp 0x4003d72	      2257	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_22
0x4003c1a	    0x83bc24200100	              cmp dword [rsp + 0x120], 5	      2259	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11
0x4003c22	     0xf8492090000	                            je 0x40045ba	      2259	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11
0x4003c28	      0xbe00000000	                              mov esi, 0	      2261	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_23
0x4003c2d	          0x4889ef	                            mov rdi, rbp	      2261	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_23
0x4003c30	      0xb800000000	                              mov eax, 0	      2261	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_23
0x4003c35	      0xe809c6ffff	                       call sym.ch_error	      2261	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_23
0x4003c3a	    0x48833d000000	               cmp qword [0x04003c42], 2	      2262	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	IF_12
0x4003c42	     0xf8e2a010000	                           jle 0x4003d72	      2262	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	IF_12
0x4003c48	      0xba05000000	                              mov edx, 5	      2263	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_25
0x4003c4d	      0xbe00000000	                              mov esi, 0	      2263	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_25
0x4003c52	      0xbf00000000	                              mov edi, 0	      2263	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_25
0x4003c57	      0xe800000000	                          call 0x4003c5c	      2263	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_25
0x4003c5c	          0x4889c7	                            mov rdi, rax	      2263	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_25
0x4003c5f	      0xe800000000	                          call 0x4003c64	      2263	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_25
0x4003c64	      0xe909010000	                           jmp 0x4003d72	      2263	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_25
0x4003c69	    0x488bbc242801	           mov rdi, qword [rsp + 0x128] 	      2288	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4003c71	        0x897c2404	                mov dword [rsp + 4], edi	      2288	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4003c75	          0x4d85ed	                           test r13, r13	      2290	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_16
0x4003c78	            0x741d	                            je 0x4003c97	      2290	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_16
0x4003c7a	          0x4489f2	                           mov edx, r14d	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x4003c7d	          0x83ca04	                               or edx, 4	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x4003c80	          0x4c89ee	                            mov rsi, r13	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x4003c83	      0xe800000000	                          call 0x4003c88	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x4003c88	          0x4889c3	                            mov rbx, rax	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x4003c8b	          0x4885c0	                           test rax, rax	      2292	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x4003c8e	            0x747d	                            je 0x4003d0d	      2292	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x4003c90	          0x803b00	                       cmp byte [rbx], 0	      2292	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x4003c93	            0x753c	                           jne 0x4003cd1	      2292	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x4003c95	            0xeb05	                           jmp 0x4003c9c	      2292	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x4003c97	      0xbb00000000	                              mov ebx, 0	      2270	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5
0x4003c9c	          0x4889df	                            mov rdi, rbx	      2296	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_31
0x4003c9f	      0xe800000000	                          call 0x4003ca4	      2296	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_31
0x4003ca4	    0xc74424500200	               mov dword [rsp + 0x50], 2	      2297	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x4003cac	    0x48c744245800	               mov qword [rsp + 0x58], 0	      2298	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x4003cb5	          0x4489f2	                           mov edx, r14d	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x4003cb8	          0x83ca04	                               or edx, 4	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x4003cbb	      0x488d742450	                   lea rsi, [rsp + 0x50]	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x4003cc0	        0x8b7c2404	                mov edi, dword [rsp + 4]	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x4003cc4	      0xe800000000	                          call 0x4003cc9	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x4003cc9	          0x4889c3	                            mov rbx, rax	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x4003ccc	          0x4885c0	                           test rax, rax	      2301	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18
0x4003ccf	            0x743c	                            je 0x4003d0d	      2301	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18
0x4003cd1	      0xb800000000	                              mov eax, 0	      2305	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_34
0x4003cd6	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2305	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_34
0x4003cdd	          0x4889df	                            mov rdi, rbx	      2305	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_34
0x4003ce0	            0xf2ae	              repne scasb al, byte [rdi]	      2305	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_34
0x4003ce2	          0x4889c8	                            mov rax, rcx	      2305	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_34
0x4003ce5	          0x48f7d0	                                 not rax	      2305	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_34
0x4003ce8	        0x488d48ff	                      lea rcx, [rax - 1]	      2305	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_34
0x4003cec	        0x4183ff01	                             cmp r15d, 1	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4003cf0	            0x19f6	                            sbb esi, esi	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4003cf2	            0xf7d6	                                 not esi	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4003cf4	          0x83e603	                              and esi, 3	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4003cf7	          0x4d89e0	                             mov r8, r12	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4003cfa	          0x4889da	                            mov rdx, rbx	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4003cfd	          0x4889ef	                            mov rdi, rbp	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4003d00	      0xe800000000	                          call 0x4003d05	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4003d05	          0x4889df	                            mov rdi, rbx	      2306	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_35
0x4003d08	      0xe800000000	                          call 0x4003d0d	      2306	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_35
0x4003d0d	    0x832d00000000	               sub dword [0x04003d14], 1	      2309	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6
0x4003d14	      0x488d442440	                   lea rax, [rsp + 0x40]	      2310	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_19
0x4003d19	          0x4939c5	                            cmp r13, rax	      2310	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_19
0x4003d1c	            0x750c	                           jne 0x4003d2a	      2310	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_19
0x4003d1e	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      2311	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	CALL_36
0x4003d23	      0xe800000000	                          call 0x4003d28	      2311	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	CALL_36
0x4003d28	            0xeb48	                           jmp 0x4003d72	      2311	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	CALL_36
0x4003d2a	          0x4c89ef	                            mov rdi, r13	      2313	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	CALL_37
0x4003d2d	      0xe800000000	                          call 0x4003d32	      2313	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	CALL_37
0x4003d32	            0xeb3e	                           jmp 0x4003d72	      2313	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	CALL_37
0x4003d34	    0x48833d000000	               cmp qword [0x04003d3c], 2	      2316	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20
0x4003d3c	            0x7e34	                           jle 0x4003d72	      2316	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20
0x4003d3e	          0x4c89e2	                            mov rdx, r12	      2318	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_38
0x4003d41	      0xbe00000000	                              mov esi, 0	      2318	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_38
0x4003d46	          0x4889ef	                            mov rdi, rbp	      2318	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_38
0x4003d49	      0xb800000000	                              mov eax, 0	      2318	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_38
0x4003d4e	      0xe8f0c4ffff	                       call sym.ch_error	      2318	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_38
0x4003d53	      0xba05000000	                              mov edx, 5	      2319	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_40
0x4003d58	      0xbe00000000	                              mov esi, 0	      2319	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_40
0x4003d5d	      0xbf00000000	                              mov edi, 0	      2319	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_40
0x4003d62	      0xe800000000	                          call 0x4003d67	      2319	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_40
0x4003d67	          0x4c89e6	                            mov rsi, r12	      2319	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_40
0x4003d6a	          0x4889c7	                            mov rdi, rax	      2319	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_40
0x4003d6d	      0xe800000000	                          call 0x4003d72	      2319	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_40
0x4003d72	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2538	channel.c	FUNCTION_61	IF_6	IF_9	CALL_7
0x4003d77	      0xe800000000	                          call 0x4003d7c	      2538	channel.c	FUNCTION_61	IF_6	IF_9	CALL_7
0x4003d7c	    0x41bc01000000	                             mov r12d, 1	      2539	channel.c	FUNCTION_61	IF_6	IF_9
0x4003d82	      0xe980070000	                           jmp 0x4004507	      2539	channel.c	FUNCTION_61	IF_6	IF_9
0x4003d87	          0x83f801	                              cmp eax, 1	      2542	channel.c	FUNCTION_61	IF_6	IF_10
0x4003d8a	            0x7427	                            je 0x4003db3	      2542	channel.c	FUNCTION_61	IF_6	IF_10
0x4003d8c	      0xbe00000000	                              mov esi, 0	      2544	channel.c	FUNCTION_61	IF_6	IF_10	CALL_8
0x4003d91	          0x4889ef	                            mov rdi, rbp	      2544	channel.c	FUNCTION_61	IF_6	IF_10	CALL_8
0x4003d94	      0xb800000000	                              mov eax, 0	      2544	channel.c	FUNCTION_61	IF_6	IF_10	CALL_8
0x4003d99	      0xe8a5c4ffff	                       call sym.ch_error	      2544	channel.c	FUNCTION_61	IF_6	IF_10	CALL_8
0x4003d9e	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2546	channel.c	FUNCTION_61	IF_6	IF_10	CALL_9
0x4003da3	      0xe800000000	                          call 0x4003da8	      2546	channel.c	FUNCTION_61	IF_6	IF_10	CALL_9
0x4003da8	    0x41bc00000000	                             mov r12d, 0	      2547	channel.c	FUNCTION_61	IF_6	IF_10
0x4003dae	      0xe954070000	                           jmp 0x4004507	      2547	channel.c	FUNCTION_61	IF_6	IF_10
0x4003db3	    0x488bbc240801	           mov rdi, qword [rsp + 0x108] 	      2549	channel.c	FUNCTION_61	IF_6
0x4003dbb	            0x89f8	                            mov eax, edi	      2549	channel.c	FUNCTION_61	IF_6
0x4003dbd	            0x85ff	                           test edi, edi	      2641	channel.c	FUNCTION_61	IF_23
0x4003dbf	     0xf8fa9010000	                            jg 0x4003f6e	      2641	channel.c	FUNCTION_61	IF_23
0x4003dc5	    0x41bd00000000	                             mov r13d, 0	      2466	channel.c	FUNCTION_61
0x4003dcb	      0xe96e030000	                           jmp 0x400413e	      2466	channel.c	FUNCTION_61
0x4003dd0	          0x4489f8	                           mov eax, r15d	      1615	channel.c	FUNCTION_44
0x4003dd3	          0x4889c2	                            mov rdx, rax	      1615	channel.c	FUNCTION_44
0x4003dd6	        0x48c1e204	                              shl rdx, 4	      1615	channel.c	FUNCTION_44
0x4003dda	        0x48c1e008	                              shl rax, 8	      1615	channel.c	FUNCTION_44
0x4003dde	          0x4801d0	                            add rax, rdx	      1615	channel.c	FUNCTION_44
0x4003de1	    0x48837c054000	         cmp qword [rbp + rax + 0x40], 0	      2551	channel.c	FUNCTION_61	ELSE_3	IF_11	CALL_10
0x4003de7	     0xf8404070000	                            je 0x40044f1	      2551	channel.c	FUNCTION_61	ELSE_3	IF_11	CALL_10
0x4003ded	    0x48837c240800	                  cmp qword [rsp + 8], 0	      2559	channel.c	FUNCTION_61	ELSE_4	IF_12
0x4003df3	            0x753c	                           jne 0x4003e31	      2559	channel.c	FUNCTION_61	ELSE_4	IF_12
0x4003df5	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2559	channel.c	FUNCTION_61	ELSE_4	IF_12
0x4003dfb	            0x7534	                           jne 0x4003e31	      2559	channel.c	FUNCTION_61	ELSE_4	IF_12
0x4003dfd	    0x41bc00000000	                             mov r12d, 0	      2565	channel.c	FUNCTION_61	ELSE_4	IF_12
0x4003e03	    0x4883bd900400	              cmp qword [rbp + 0x490], 0	      2563	channel.c	FUNCTION_61	ELSE_4	IF_12	IF_13
0x4003e0b	     0xf85f6060000	                           jne 0x4004507	      2563	channel.c	FUNCTION_61	ELSE_4	IF_12	IF_13
0x4003e11	    0x448ba5a00400	          mov r12d, dword [rbp + 0x4a0] 	      2563	channel.c	FUNCTION_61	ELSE_4	IF_12	IF_13
0x4003e18	          0x4585e4	                         test r12d, r12d	      2563	channel.c	FUNCTION_61	ELSE_4	IF_12	IF_13
0x4003e1b	     0xf85d8060000	                           jne 0x40044f9	      2563	channel.c	FUNCTION_61	ELSE_4	IF_12	IF_13
0x4003e21	          0x4489fe	                           mov esi, r15d	      2564	channel.c	FUNCTION_61	ELSE_4	IF_12	CALL_11
0x4003e24	          0x4889ef	                            mov rdi, rbp	      2564	channel.c	FUNCTION_61	ELSE_4	IF_12	CALL_11
0x4003e27	      0xe8bbe1ffff	                  call sym.drop_messages	      2564	channel.c	FUNCTION_61	ELSE_4	IF_12	CALL_11
0x4003e2c	      0xe9d6060000	                           jmp 0x4004507	      2564	channel.c	FUNCTION_61	ELSE_4	IF_12	CALL_11
0x4003e31	      0x837c240400	                  cmp dword [rsp + 4], 0	      2568	channel.c	FUNCTION_61	ELSE_4	IF_14
0x4003e36	     0xf85fe000000	                           jne 0x4003f3a	      2568	channel.c	FUNCTION_61	ELSE_4	IF_14
0x4003e3c	          0x4589fe	                          mov r14d, r15d	      1615	channel.c	FUNCTION_44
0x4003e3f	          0x4c89f0	                            mov rax, r14	      1615	channel.c	FUNCTION_44
0x4003e42	        0x48c1e004	                              shl rax, 4	      1615	channel.c	FUNCTION_44
0x4003e46	        0x49c1e608	                              shl r14, 8	      1615	channel.c	FUNCTION_44
0x4003e4a	          0x4901c6	                            add r14, rax	      1615	channel.c	FUNCTION_44
0x4003e4d	          0x4901ee	                            add r14, rbp	      1615	channel.c	FUNCTION_44
0x4003e50	        0x4d8b6e40	            mov r13, qword [r14 + 0x40] 	      1615	channel.c	FUNCTION_44
0x4003e54	          0x4c89ef	                            mov rdi, r13	      2579	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	CALL_13
0x4003e57	      0xe800000000	                          call 0x4003e5c	      2579	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	CALL_13
0x4003e5c	          0x4885c0	                           test rax, rax	      2580	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_15
0x4003e5f	     0xf85f4070000	                           jne 0x4004659	      2580	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_15
0x4003e65	      0xba01000000	                              mov edx, 1	      2582	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x4003e6a	          0x4489fe	                           mov esi, r15d	      2582	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x4003e6d	          0x4889ef	                            mov rdi, rbp	      2582	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x4003e70	      0xe800000000	                          call 0x4003e75	      2582	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x4003e75	            0x85c0	                           test eax, eax	      2582	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x4003e77	            0x75d7	                           jne 0x4003e50	      2582	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x4003e79	          0x4189c4	                           mov r12d, eax	      2582	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x4003e7c	          0x4489f8	                           mov eax, r15d	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x4003e7f	          0x4889c2	                            mov rdx, rax	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x4003e82	        0x48c1e204	                              shl rdx, 4	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x4003e86	        0x48c1e008	                              shl rax, 8	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x4003e8a	          0x4801d0	                            add rax, rdx	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x4003e8d	      0x837c0518ff	cmp dword [rbp + rax + 0x18], 0xffffffffffffffff	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x4003e92	     0xf856f060000	                           jne 0x4004507	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x4003e98	        0x498b4508	                mov rax, qword [r13 + 8]	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x4003e9c	          0x4885c0	                           test rax, rax	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x4003e9f	     0xf8596070000	                           jne 0x400463b	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x4003ea5	      0xe95d060000	                           jmp 0x4004507	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x4003eaa	        0x49897d00	                    mov qword [r13], rdi	      2602	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x4003eae	        0x4d8b6508	                mov r12, qword [r13 + 8]	      2603	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x4003eb2	      0x498d442401	                      lea rax, [r12 + 1]	      2603	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x4003eb7	        0x49894508	                mov qword [r13 + 8], rax	      2603	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x4003ebb	          0x4901fc	                            add r12, rdi	      2603	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x4003ebe	      0x41c6042400	                       mov byte [r12], 0	      2604	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x4003ec3	          0x4939fc	                            cmp r12, rdi	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x4003ec6	            0x762c	                           jbe 0x4003ef4	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x4003ec8	          0x4889f8	                            mov rax, rdi	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x4003ecb	        0x49034508	                add rax, qword [r13 + 8]	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x4003ecf	          0x4839c7	                            cmp rdi, rax	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x4003ed2	            0x7320	                           jae 0x4003ef4	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x4003ed4	          0x4889fa	                            mov rdx, rdi	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x4003ed7	          0x803a00	                       cmp byte [rdx], 0	      2609	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3	IF_20
0x4003eda	            0x7503	                           jne 0x4003edf	      2609	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3	IF_20
0x4003edc	          0xc6020a	                     mov byte [rdx], 0xa	      2610	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3	IF_20
0x4003edf	        0x4883c201	                              add rdx, 1	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x4003ee3	          0x4939d4	                            cmp r12, rdx	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x4003ee6	            0x740c	                            je 0x4003ef4	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x4003ee8	          0x4889f8	                            mov rax, rdi	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x4003eeb	        0x49034508	                add rax, qword [r13 + 8]	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x4003eef	          0x4839c2	                            cmp rdx, rax	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x4003ef2	            0x72e3	                            jb 0x4003ed7	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x4003ef4	      0x498d542401	                      lea rdx, [r12 + 1]	      2612	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21
0x4003ef9	          0x4889f8	                            mov rax, rdi	      2612	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21
0x4003efc	        0x49034508	                add rax, qword [r13 + 8]	      2612	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21
0x4003f00	          0x4839c2	                            cmp rdx, rax	      2612	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21
0x4003f03	            0x7515	                           jne 0x4003f1a	      2612	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21
0x4003f05	          0x4489fe	                           mov esi, r15d	      2615	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21	CALL_16
0x4003f08	          0x4889ef	                            mov rdi, rbp	      2615	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21	CALL_16
0x4003f0b	      0xe800000000	                          call 0x4003f10	      2615	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21	CALL_16
0x4003f10	          0x4989c5	                            mov r13, rax	      2615	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21	CALL_16
0x4003f13	      0x41c6042400	                       mov byte [r12], 0	      2616	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21
0x4003f18	            0xeb2e	                           jmp 0x4003f48	      2616	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21
0x4003f1a	          0x4929fc	                            sub r12, rdi	      2622	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_17
0x4003f1d	          0x4489e6	                           mov esi, r12d	      2622	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_17
0x4003f20	      0xe800000000	                          call 0x4003f25	      2622	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_17
0x4003f25	          0x4989c5	                            mov r13, rax	      2622	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_17
0x4003f28	      0x418d542401	                      lea edx, [r12 + 1]	      2623	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_18
0x4003f2d	          0x4489fe	                           mov esi, r15d	      2623	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_18
0x4003f30	          0x4889ef	                            mov rdi, rbp	      2623	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_18
0x4003f33	      0xe800000000	                          call 0x4003f38	      2623	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_18
0x4003f38	            0xeb0e	                           jmp 0x4003f48	      2623	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_18
0x4003f3a	          0x4489fe	                           mov esi, r15d	      2631	channel.c	FUNCTION_61	ELSE_4	ELSE_6	CALL_19
0x4003f3d	          0x4889ef	                            mov rdi, rbp	      2631	channel.c	FUNCTION_61	ELSE_4	ELSE_6	CALL_19
0x4003f40	      0xe895dfffff	                call sym.channel_get_all	      2631	channel.c	FUNCTION_61	ELSE_4	ELSE_6	CALL_19
0x4003f45	          0x4989c5	                            mov r13, rax	      2631	channel.c	FUNCTION_61	ELSE_4	ELSE_6	CALL_19
0x4003f48	          0x4d85ed	                           test r13, r13	      2634	channel.c	FUNCTION_61	ELSE_4	IF_22
0x4003f4b	     0xf84b0050000	                            je 0x4004501	      2634	channel.c	FUNCTION_61	ELSE_4	IF_22
0x4003f51	    0xc78424100100	              mov dword [rsp + 0x110], 2	      2637	channel.c	FUNCTION_61	ELSE_4
0x4003f5c	    0x4c89ac241801	            mov qword [rsp + 0x118], r13	      2638	channel.c	FUNCTION_61	ELSE_4
0x4003f64	      0xb8ffffffff	                     mov eax, 0xffffffff	      2469	channel.c	FUNCTION_61
0x4003f69	      0xe9d0010000	                           jmp 0x400413e	      2469	channel.c	FUNCTION_61
0x4003f6e	          0x4489f9	                           mov ecx, r15d	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x4003f71	          0x4889ce	                            mov rsi, rcx	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x4003f74	        0x48c1e604	                              shl rsi, 4	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x4003f78	        0x48c1e108	                              shl rcx, 8	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x4003f7c	          0x4801f1	                            add rcx, rsi	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x4003f7f	    0x488b940dd800	      mov rdx, qword [rbp + rcx + 0xd8] 	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x4003f87	          0x4885d2	                           test rdx, rdx	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x4003f8a	     0xf84d5060000	                            je 0x4004665	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x4003f90	          0x3b7a10	            cmp edi, dword [rdx + 0x10] 	      2647	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24
0x4003f93	            0x7527	                           jne 0x4003fbc	      2647	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24
0x4003f95	            0xeb05	                           jmp 0x4003f9c	      2647	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24
0x4003f97	          0x3b4210	            cmp eax, dword [rdx + 0x10] 	      2647	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24
0x4003f9a	            0x7520	                           jne 0x4003fbc	      2647	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24
0x4003f9c	    0x488d8c240001	                  lea rcx, [rsp + 0x100]	      2649	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24	CALL_20
0x4003fa4	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      2649	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24	CALL_20
0x4003fa9	          0x4889ef	                            mov rdi, rbp	      2649	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24	CALL_20
0x4003fac	      0xe8f2d0ffff	       call sym.invoke_one_time_callback	      2649	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24	CALL_20
0x4003fb1	    0x41bd00000000	                             mov r13d, 0	      2466	channel.c	FUNCTION_61
0x4003fb7	      0xe916050000	                           jmp 0x40044d2	      2466	channel.c	FUNCTION_61
0x4003fbc	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x4003fc0	          0x4885d2	                           test rdx, rdx	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x4003fc3	            0x75d2	                           jne 0x4003f97	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x4003fc5	      0xe99b060000	                           jmp 0x4004665	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x4003fca	      0x4c8b6c2430	            mov r13, qword [rsp + 0x30] 	      2658	channel.c	FUNCTION_61	IF_23	IF_25	IF_26	CALL_21
0x4003fcf	          0x4489f8	                           mov eax, r15d	      2139	channel.c	FUNCTION_56	IF_1
0x4003fd2	          0x4889c2	                            mov rdx, rax	      2139	channel.c	FUNCTION_56	IF_1
0x4003fd5	        0x48c1e204	                              shl rdx, 4	      2139	channel.c	FUNCTION_56	IF_1
0x4003fd9	        0x48c1e008	                              shl rax, 8	      2139	channel.c	FUNCTION_56	IF_1
0x4003fdd	          0x4801d0	                            add rax, rdx	      2139	channel.c	FUNCTION_56	IF_1
0x4003fe0	      0x488b440560	      mov rax, qword [rbp + rax + 0x60] 	      2139	channel.c	FUNCTION_56	IF_1
0x4003fe5	          0x4885c0	                           test rax, rax	      2139	channel.c	FUNCTION_56	IF_1
0x4003fe8	            0x7523	                           jne 0x400400d	      2139	channel.c	FUNCTION_56	IF_1
0x4003fea	          0x4489f8	                           mov eax, r15d	      2136	channel.c	FUNCTION_56
0x4003fed	          0x4889c2	                            mov rdx, rax	      2136	channel.c	FUNCTION_56
0x4003ff0	        0x48c1e204	                              shl rdx, 4	      2136	channel.c	FUNCTION_56
0x4003ff4	        0x48c1e008	                              shl rax, 8	      2136	channel.c	FUNCTION_56
0x4003ff8	          0x4801d0	                            add rax, rdx	      2136	channel.c	FUNCTION_56
0x4003ffb	      0x488b5c0558	      mov rbx, qword [rbp + rax + 0x58] 	      2136	channel.c	FUNCTION_56
0x4004000	          0x4885db	                           test rbx, rbx	      2142	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x4004003	            0x7424	                            je 0x4004029	      2142	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x4004005	        0x837b1800	               cmp dword [rbx + 0x18], 0	      2142	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x4004009	            0x750f	                           jne 0x400401a	      2142	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x400400b	            0xeb1c	                           jmp 0x4004029	      2142	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x400400d	      0xbb00000000	                              mov ebx, 0	      2141	channel.c	FUNCTION_56	IF_1
0x4004012	        0x83781800	               cmp dword [rax + 0x18], 0	      2139	channel.c	FUNCTION_56	IF_1
0x4004016	            0x7511	                           jne 0x4004029	      2139	channel.c	FUNCTION_56	IF_1
0x4004018	            0xebd0	                           jmp 0x4003fea	      2139	channel.c	FUNCTION_56	IF_1
0x400401a	        0x488b5b08	                mov rbx, qword [rbx + 8]	      2144	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x400401e	          0x4885db	                           test rbx, rbx	      2142	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x4004021	            0x7406	                            je 0x4004029	      2142	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x4004023	        0x837b1800	               cmp dword [rbx + 0x18], 0	      2142	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x4004027	            0x75f1	                           jne 0x400401a	      2142	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x4004029	      0xbf20000000	                           mov edi, 0x20	      2146	channel.c	FUNCTION_56	CALL_1
0x400402e	      0xe800000000	                          call 0x4004033	      2146	channel.c	FUNCTION_56	CALL_1
0x4004033	          0x4989c4	                            mov r12, rax	      2146	channel.c	FUNCTION_56	CALL_1
0x4004036	          0x4885c0	                           test rax, rax	      2147	channel.c	FUNCTION_56	IF_2
0x4004039	            0x750d	                           jne 0x4004048	      2147	channel.c	FUNCTION_56	IF_2
0x400403b	          0x4c89ef	                            mov rdi, r13	      2148	channel.c	FUNCTION_56	CALL_2
0x400403e	      0xe800000000	                          call 0x4004043	      2148	channel.c	FUNCTION_56	CALL_2
0x4004043	      0xe9c3000000	                           jmp 0x400410b	      2148	channel.c	FUNCTION_56	CALL_2
0x4004048	      0xe800000000	                          call 0x400404d	      2151	channel.c	FUNCTION_56	ELSE_2	CALL_3
0x400404d	        0x49890424	                    mov qword [r12], rax	      2151	channel.c	FUNCTION_56	ELSE_2	CALL_3
0x4004051	          0x4885c0	                           test rax, rax	      2152	channel.c	FUNCTION_56	ELSE_2	IF_3
0x4004054	            0x7515	                           jne 0x400406b	      2152	channel.c	FUNCTION_56	ELSE_2	IF_3
0x4004056	          0x4c89e7	                            mov rdi, r12	      2154	channel.c	FUNCTION_56	ELSE_2	IF_3	CALL_4
0x4004059	      0xe800000000	                          call 0x400405e	      2154	channel.c	FUNCTION_56	ELSE_2	IF_3	CALL_4
0x400405e	          0x4c89ef	                            mov rdi, r13	      2155	channel.c	FUNCTION_56	ELSE_2	IF_3	CALL_5
0x4004061	      0xe800000000	                          call 0x4004066	      2155	channel.c	FUNCTION_56	ELSE_2	IF_3	CALL_5
0x4004066	      0xe9a0000000	                           jmp 0x400410b	      2155	channel.c	FUNCTION_56	ELSE_2	IF_3	CALL_5
0x400406b	    0x41c744241800	               mov dword [r12 + 0x18], 0	      2159	channel.c	FUNCTION_56	ELSE_2	ELSE_3
0x4004074	        0x498b7500	                    mov rsi, qword [r13]	      2160	channel.c	FUNCTION_56	ELSE_2	ELSE_3
0x4004078	        0x498b7d08	                mov rdi, qword [r13 + 8]	      2160	channel.c	FUNCTION_56	ELSE_2	ELSE_3
0x400407c	          0x488930	                    mov qword [rax], rsi	      2160	channel.c	FUNCTION_56	ELSE_2	ELSE_3
0x400407f	        0x48897808	                mov qword [rax + 8], rdi	      2160	channel.c	FUNCTION_56	ELSE_2	ELSE_3
0x4004083	          0x4885db	                           test rbx, rbx	      2161	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x4004086	            0x754b	                           jne 0x40040d3	      2161	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x4004088	          0x4489f8	                           mov eax, r15d	      2164	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x400408b	          0x4889c2	                            mov rdx, rax	      2164	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x400408e	        0x48c1e204	                              shl rdx, 4	      2164	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x4004092	        0x48c1e008	                              shl rax, 8	      2164	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x4004096	          0x4801d0	                            add rax, rdx	      2164	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x4004099	          0x4801e8	                            add rax, rbp	      2164	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x400409c	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      2164	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x40040a0	      0x4989542410	             mov qword [r12 + 0x10], rdx	      2164	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x40040a5	        0x4c896060	             mov qword [rax + 0x60], r12	      2165	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x40040a9	    0x49c744240800	                  mov qword [r12 + 8], 0	      2166	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x40040b2	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      2167	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	IF_5
0x40040b7	          0x4885c0	                           test rax, rax	      2167	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	IF_5
0x40040ba	            0x7511	                           jne 0x40040cd	      2167	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	IF_5
0x40040bc	          0x4489f8	                           mov eax, r15d	      2168	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	IF_5
0x40040bf	    0x4869c0100100	                    imul rax, rax, 0x110	      2168	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	IF_5
0x40040c6	      0x4c89640558	      mov qword [rbp + rax + 0x58], r12 	      2168	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	IF_5
0x40040cb	            0xeb3e	                           jmp 0x400410b	      2168	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	IF_5
0x40040cd	        0x4c896008	                mov qword [rax + 8], r12	      2170	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	ELSE_4
0x40040d1	            0xeb38	                           jmp 0x400410b	      2170	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	ELSE_4
0x40040d3	      0x49895c2410	             mov qword [r12 + 0x10], rbx	      2175	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5
0x40040d8	        0x488b4308	                mov rax, qword [rbx + 8]	      2176	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5
0x40040dc	      0x4989442408	                mov qword [r12 + 8], rax	      2176	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5
0x40040e1	        0x4c896308	                mov qword [rbx + 8], r12	      2177	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5
0x40040e5	      0x498b442408	                mov rax, qword [r12 + 8]	      2178	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x40040ea	          0x4885c0	                           test rax, rax	      2178	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x40040ed	            0x7518	                           jne 0x4004107	      2178	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x40040ef	          0x4489f8	                           mov eax, r15d	      2179	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x40040f2	          0x4889c2	                            mov rdx, rax	      2179	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x40040f5	        0x48c1e204	                              shl rdx, 4	      2179	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x40040f9	        0x48c1e008	                              shl rax, 8	      2179	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x40040fd	          0x4801d0	                            add rax, rdx	      2179	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x4004100	      0x4c89640560	      mov qword [rbp + rax + 0x60], r12 	      2179	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x4004105	            0xeb04	                           jmp 0x400410b	      2179	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x4004107	        0x4c896010	             mov qword [rax + 0x10], r12	      2181	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	ELSE_6
0x400410b	    0x48c744243000	               mov qword [rsp + 0x30], 0	      2659	channel.c	FUNCTION_61	IF_23	IF_25	IF_26
0x4004114	    0x41bd00000000	                             mov r13d, 0	      2466	channel.c	FUNCTION_61
0x400411a	      0xe9c2030000	                           jmp 0x40044e1	      2466	channel.c	FUNCTION_61
0x400411f	            0x89fa	                            mov edx, edi	      2662	channel.c	FUNCTION_61	IF_23	IF_25	ELSE_7	CALL_22
0x4004121	      0xbe00000000	                              mov esi, 0	      2662	channel.c	FUNCTION_61	IF_23	IF_25	ELSE_7	CALL_22
0x4004126	          0x4889ef	                            mov rdi, rbp	      2662	channel.c	FUNCTION_61	IF_23	IF_25	ELSE_7	CALL_22
0x4004129	      0xb800000000	                              mov eax, 0	      2662	channel.c	FUNCTION_61	IF_23	IF_25	ELSE_7	CALL_22
0x400412e	      0xe800000000	                          call 0x4004133	      2662	channel.c	FUNCTION_61	IF_23	IF_25	ELSE_7	CALL_22
0x4004133	    0x41bd00000000	                             mov r13d, 0	      2466	channel.c	FUNCTION_61
0x4004139	      0xe994030000	                           jmp 0x40044d2	      2466	channel.c	FUNCTION_61
0x400413e	    0x48837c240800	                  cmp qword [rsp + 8], 0	      2666	channel.c	FUNCTION_61	ELSE_8	IF_27
0x4004144	            0x750c	                           jne 0x4004152	      2666	channel.c	FUNCTION_61	ELSE_8	IF_27
0x4004146	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2666	channel.c	FUNCTION_61	ELSE_8	IF_27
0x400414c	     0xf846c030000	                            je 0x40044be	      2666	channel.c	FUNCTION_61	ELSE_8	IF_27
0x4004152	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2668	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28
0x4004158	     0xf8405030000	                            je 0x4004463	      2668	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28
0x400415e	          0x4d85ed	                           test r13, r13	      2670	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_29
0x4004161	            0x751a	                           jne 0x400417d	      2670	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_29
0x4004163	        0x8b742404	                mov esi, dword [rsp + 4]	      2672	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	CALL_23
0x4004167	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2672	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	CALL_23
0x400416c	      0xe800000000	                          call 0x4004171	      2672	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	CALL_23
0x4004171	          0x4989c5	                            mov r13, rax	      2672	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	CALL_23
0x4004174	          0x4885c0	                           test rax, rax	      2673	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30
0x4004177	     0xf84e6020000	                            je 0x4004463	      2673	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30
0x400417d	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2676	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	IF_31
0x4004182	    0x4883b8481c00	             cmp qword [rax + 0x1c48], 0	      2676	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	IF_31
0x400418a	            0x7413	                            je 0x400419f	      2676	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	IF_31
0x400418c	          0x4889ea	                            mov rdx, rbp	      2677	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	CALL_24
0x400418f	          0x4c89ee	                            mov rsi, r13	      2677	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	CALL_24
0x4004192	          0x4889c7	                            mov rdi, rax	      2677	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	CALL_24
0x4004195	      0xe800000000	                          call 0x400419a	      2677	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	CALL_24
0x400419a	      0xe9c4020000	                           jmp 0x4004463	      2677	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	CALL_24
0x400419f	    0x48c744245000	               mov qword [rsp + 0x50], 0	      2347	channel.c	FUNCTION_59
0x40041a8	    0xc74424580000	               mov dword [rsp + 0x58], 0	      2347	channel.c	FUNCTION_59
0x40041b0	    0xc744245c0000	               mov dword [rsp + 0x5c], 0	      2347	channel.c	FUNCTION_59
0x40041b8	    0x48c744243800	               mov qword [rsp + 0x38], 0	      2348	channel.c	FUNCTION_59
0x40041c1	    0x48c744244000	               mov qword [rsp + 0x40], 0	      2349	channel.c	FUNCTION_59
0x40041ca	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2353	channel.c	FUNCTION_59
0x40041cf	    0x448ba0401500	         mov r12d, dword [rax + 0x1540] 	      2353	channel.c	FUNCTION_59
0x40041d6	          0x4585e4	                         test r12d, r12d	      2356	channel.c	FUNCTION_59	IF_1
0x40041d9	            0x7558	                           jne 0x4004233	      2356	channel.c	FUNCTION_59	IF_1
0x40041db	          0x4489f8	                           mov eax, r15d	      2356	channel.c	FUNCTION_59	IF_1
0x40041de	    0x4869c0100100	                    imul rax, rax, 0x110	      2356	channel.c	FUNCTION_59	IF_1
0x40041e5	    0x83bc05080100	        cmp dword [rbp + rax + 0x108], 0	      2356	channel.c	FUNCTION_59	IF_1
0x40041ed	            0x7544	                           jne 0x4004233	      2356	channel.c	FUNCTION_59	IF_1
0x40041ef	          0x4489f8	                           mov eax, r15d	      2358	channel.c	FUNCTION_59	IF_1	IF_2
0x40041f2	    0x4869c0100100	                    imul rax, rax, 0x110	      2358	channel.c	FUNCTION_59	IF_1	IF_2
0x40041f9	    0x83bc050c0100	        cmp dword [rbp + rax + 0x10c], 0	      2358	channel.c	FUNCTION_59	IF_1	IF_2
0x4004201	     0xf855c020000	                           jne 0x4004463	      2358	channel.c	FUNCTION_59	IF_1	IF_2
0x4004207	      0xbe00000000	                              mov esi, 0	      2360	channel.c	FUNCTION_59	IF_1	IF_2	CALL_1
0x400420c	          0x4889ef	                            mov rdi, rbp	      2360	channel.c	FUNCTION_59	IF_1	IF_2	CALL_1
0x400420f	      0xb800000000	                              mov eax, 0	      2360	channel.c	FUNCTION_59	IF_1	IF_2	CALL_1
0x4004214	      0xe82ac0ffff	                       call sym.ch_error	      2360	channel.c	FUNCTION_59	IF_1	IF_2	CALL_1
0x4004219	          0x4489f8	                           mov eax, r15d	      2361	channel.c	FUNCTION_59	IF_1	IF_2
0x400421c	    0x4869c0100100	                    imul rax, rax, 0x110	      2361	channel.c	FUNCTION_59	IF_1	IF_2
0x4004223	    0xc784050c0100	       mov dword [rbp + rax + 0x10c], 1 	      2361	channel.c	FUNCTION_59	IF_1	IF_2
0x400422e	      0xe930020000	                           jmp 0x4004463	      2361	channel.c	FUNCTION_59	IF_1	IF_2
0x4004233	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2350	channel.c	FUNCTION_59
0x4004238	          0x4c8b30	                    mov r14, qword [rax]	      2350	channel.c	FUNCTION_59
0x400423b	    0x8b88341c0000	          mov ecx, dword [rax + 0x1c34] 	      2351	channel.c	FUNCTION_59
0x4004241	            0x89ce	                            mov esi, ecx	      2351	channel.c	FUNCTION_59
0x4004243	        0x894c2428	             mov dword [rsp + 0x28], ecx	      2351	channel.c	FUNCTION_59
0x4004247	          0x4889c1	                            mov rcx, rax	      2354	channel.c	FUNCTION_59
0x400424a	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2354	channel.c	FUNCTION_59
0x400424d	            0x85f6	                           test esi, esi	      2368	channel.c	FUNCTION_59	IF_3
0x400424f	            0x740e	                            je 0x400425f	      2368	channel.c	FUNCTION_59	IF_3
0x4004251	        0x4983ee01	                              sub r14, 1	      2370	channel.c	FUNCTION_59	IF_3
0x4004255	    0xc781341c0000	            mov dword [rcx + 0x1c34], 0 	      2371	channel.c	FUNCTION_59	IF_3
0x400425f	          0x83e001	                              and eax, 1	      2354	channel.c	FUNCTION_59
0x4004262	        0x8944242c	             mov dword [rsp + 0x2c], eax	      2354	channel.c	FUNCTION_59
0x4004266	       0xf95442404	                    setne byte [rsp + 4]	      2354	channel.c	FUNCTION_59
0x400426b	       0xfb64c2404	               movzx ecx, byte [rsp + 4]	      2354	channel.c	FUNCTION_59
0x4004270	        0x418d5601	                      lea edx, [r14 + 1]	      2375	channel.c	FUNCTION_59	CALL_2
0x4004274	           0xfb6c1	                           movzx eax, cl	      2375	channel.c	FUNCTION_59	CALL_2
0x4004277	            0x29c2	                            sub edx, eax	      2375	channel.c	FUNCTION_59	CALL_2
0x4004279	      0xbe00000000	                              mov esi, 0	      2375	channel.c	FUNCTION_59	CALL_2
0x400427e	          0x4889ef	                            mov rdi, rbp	      2375	channel.c	FUNCTION_59	CALL_2
0x4004281	      0xb800000000	                              mov eax, 0	      2375	channel.c	FUNCTION_59	CALL_2
0x4004286	      0xe800000000	                          call 0x400428b	      2375	channel.c	FUNCTION_59	CALL_2
0x400428b	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2377	channel.c	FUNCTION_59
0x4004290	    0xc78740150000	            mov dword [rdi + 0x1540], 1 	      2377	channel.c	FUNCTION_59
0x400429a	      0x488d742450	                   lea rsi, [rsp + 0x50]	      2380	channel.c	FUNCTION_59	CALL_3
0x400429f	          0x4889f1	                            mov rcx, rsi	      2380	channel.c	FUNCTION_59	CALL_3
0x40042a2	      0x488d542440	                   lea rdx, [rsp + 0x40]	      2380	channel.c	FUNCTION_59	CALL_3
0x40042a7	      0x488d742438	                   lea rsi, [rsp + 0x38]	      2380	channel.c	FUNCTION_59	CALL_3
0x40042ac	      0xe800000000	                          call 0x40042b1	      2380	channel.c	FUNCTION_59	CALL_3
0x40042b1	      0xbf01000000	                              mov edi, 1	      2382	channel.c	FUNCTION_59	CALL_4
0x40042b6	      0xe800000000	                          call 0x40042bb	      2382	channel.c	FUNCTION_59	CALL_4
0x40042bb	        0x498d7601	                      lea rsi, [r14 + 1]	      2384	channel.c	FUNCTION_59	CALL_5
0x40042bf	       0xfb6442404	               movzx eax, byte [rsp + 4]	      2384	channel.c	FUNCTION_59	CALL_5
0x40042c4	          0x4c89f7	                            mov rdi, r14	      2384	channel.c	FUNCTION_59	CALL_5
0x40042c7	          0x4829c7	                            sub rdi, rax	      2384	channel.c	FUNCTION_59	CALL_5
0x40042ca	      0xe800000000	                          call 0x40042cf	      2384	channel.c	FUNCTION_59	CALL_5
0x40042cf	    0x890500000000	            mov dword [0x040042d5], eax 	      2384	channel.c	FUNCTION_59	CALL_5
0x40042d5	      0x837c242c00	               cmp dword [rsp + 0x2c], 0	      2386	channel.c	FUNCTION_59	IF_4
0x40042da	            0x7418	                            je 0x40042f4	      2386	channel.c	FUNCTION_59	IF_4
0x40042dc	      0xba01000000	                              mov edx, 1	      2389	channel.c	FUNCTION_59	IF_4	CALL_6
0x40042e1	          0x4c89ee	                            mov rsi, r13	      2389	channel.c	FUNCTION_59	IF_4	CALL_6
0x40042e4	          0x4c89f7	                            mov rdi, r14	      2389	channel.c	FUNCTION_59	IF_4	CALL_6
0x40042e7	      0xe800000000	                          call 0x40042ec	      2389	channel.c	FUNCTION_59	IF_4	CALL_6
0x40042ec	    0x41be00000000	                             mov r14d, 0	      2390	channel.c	FUNCTION_59	IF_4
0x40042f2	            0xeb15	                           jmp 0x4004309	      2390	channel.c	FUNCTION_59	IF_4
0x40042f4	      0xb900000000	                              mov ecx, 0	      2393	channel.c	FUNCTION_59	CALL_7
0x40042f9	      0xba00000000	                              mov edx, 0	      2393	channel.c	FUNCTION_59	CALL_7
0x40042fe	          0x4c89ee	                            mov rsi, r13	      2393	channel.c	FUNCTION_59	CALL_7
0x4004301	          0x4c89f7	                            mov rdi, r14	      2393	channel.c	FUNCTION_59	CALL_7
0x4004304	      0xe800000000	                          call 0x4004309	      2393	channel.c	FUNCTION_59	CALL_7
0x4004309	      0xbe01000000	                              mov esi, 1	      2394	channel.c	FUNCTION_59	CALL_8
0x400430e	          0x4c89f7	                            mov rdi, r14	      2394	channel.c	FUNCTION_59	CALL_8
0x4004311	      0xe800000000	                          call 0x4004316	      2394	channel.c	FUNCTION_59	CALL_8
0x4004316	      0x488d542450	                   lea rdx, [rsp + 0x50]	      2397	channel.c	FUNCTION_59	CALL_9
0x400431b	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	      2397	channel.c	FUNCTION_59	CALL_9
0x4004320	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      2397	channel.c	FUNCTION_59	CALL_9
0x4004325	      0xe800000000	                          call 0x400432a	      2397	channel.c	FUNCTION_59	CALL_9
0x400432a	          0x4489f8	                           mov eax, r15d	      2399	channel.c	FUNCTION_59	IF_5
0x400432d	          0x4889c2	                            mov rdx, rax	      2399	channel.c	FUNCTION_59	IF_5
0x4004330	        0x48c1e204	                              shl rdx, 4	      2399	channel.c	FUNCTION_59	IF_5
0x4004334	        0x48c1e008	                              shl rax, 8	      2399	channel.c	FUNCTION_59	IF_5
0x4004338	          0x4801d0	                            add rax, rdx	      2399	channel.c	FUNCTION_59	IF_5
0x400433b	          0x4801e8	                            add rax, rbp	      2399	channel.c	FUNCTION_59	IF_5
0x400433e	    0x83b808010000	              cmp dword [rax + 0x108], 0	      2400	channel.c	FUNCTION_59	IF_5
0x4004345	      0xb800000000	                              mov eax, 0	      2400	channel.c	FUNCTION_59	IF_5
0x400434a	        0x440f45e0	                        cmovne r12d, eax	      2400	channel.c	FUNCTION_59	IF_5
0x400434e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2400	channel.c	FUNCTION_59	IF_5
0x4004353	    0x4489a0401500	         mov dword [rax + 0x1540], r12d 	      2400	channel.c	FUNCTION_59	IF_5
0x400435a	        0x83787800	               cmp dword [rax + 0x78], 0	      2404	channel.c	FUNCTION_59	ELSE_2	IF_6
0x400435e	     0xf8ec2000000	                           jle 0x4004426	      2404	channel.c	FUNCTION_59	ELSE_2	IF_6
0x4004364	    0x4c8b25000000	            mov r12, qword [0x0400436b] 	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x400436b	          0x4d85e4	                           test r12, r12	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x400436e	     0xf8499000000	                            je 0x400440d	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x4004374	        0x4d8d7e01	                      lea r15, [r14 + 1]	      2411	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004378	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2410	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x400437d	      0x493b442408	                cmp rax, qword [r12 + 8]	      2410	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004382	            0x757b	                           jne 0x40043ff	      2410	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004384	      0x837c242800	               cmp dword [rsp + 0x28], 0	      2411	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004389	            0x740a	                            je 0x4004395	      2411	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x400438b	      0x4d397c2438	            cmp qword [r12 + 0x38], r15 	      2411	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004390	           0xf94c0	                                 sete al	      2411	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004393	            0xeb1b	                           jmp 0x40043b0	      2411	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004395	      0xb800000000	                              mov eax, 0	      2414	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x400439a	      0x4d3b742438	            cmp r14, qword [r12 + 0x38] 	      2414	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x400439f	            0x750c	                           jne 0x40043ad	      2414	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40043a1	    0x41837c244000	               cmp dword [r12 + 0x40], 0	      2414	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40043a7	           0xf94c0	                                 sete al	      2414	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40043aa	           0xfb6c0	                           movzx eax, al	      2414	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40043ad	          0x83e001	                              and eax, 1	      2411	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40043b0	            0x84c0	                             test al, al	      2411	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40043b2	            0x744b	                            je 0x40043ff	      2411	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40043b4	    0x498344243801	               add qword [r12 + 0x38], 1	      2416	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40043ba	    0x488b05000000	            mov rax, qword [0x040043c1] 	      2417	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40043c1	      0x4889442438	             mov qword [rsp + 0x38], rax	      2417	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40043c6	    0x4c8925000000	            mov qword [0x040043cd], r12 	      2418	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40043cd	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2419	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40043d2	    0x488905000000	            mov qword [0x040043d9], rax 	      2419	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40043d9	      0xbe00000000	                              mov esi, 0	      2420	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1	CALL_1
0x40043de	      0xbf00000000	                              mov edi, 0	      2420	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1	CALL_1
0x40043e3	      0xe800000000	                          call 0x40043e8	      2420	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1	CALL_1
0x40043e8	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2421	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40043ed	    0x488905000000	            mov qword [0x040043f4], rax 	      2421	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40043f4	        0x488b4008	                mov rax, qword [rax + 8]	      2422	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40043f8	    0x488905000000	            mov qword [0x040043ff], rax 	      2422	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40043ff	      0x4d8b642420	            mov r12, qword [r12 + 0x20] 	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x4004404	          0x4d85e4	                           test r12, r12	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x4004407	     0xf856bffffff	                           jne 0x4004378	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x400440d	      0xbe0a000000	                            mov esi, 0xa	      2425	channel.c	FUNCTION_59	ELSE_2	IF_6	CALL_10
0x4004412	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2425	channel.c	FUNCTION_59	ELSE_2	IF_6	CALL_10
0x4004417	      0xe800000000	                          call 0x400441c	      2425	channel.c	FUNCTION_59	ELSE_2	IF_6	CALL_10
0x400441c	    0xc70500000000	               mov dword [0x04004426], 1	      2426	channel.c	FUNCTION_59	ELSE_2	IF_6
0x4004426	      0x837c242800	               cmp dword [rsp + 0x28], 0	      2429	channel.c	FUNCTION_59	IF_7
0x400442b	            0x7436	                            je 0x4004463	      2429	channel.c	FUNCTION_59	IF_7
0x400442d	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      2435	channel.c	FUNCTION_59	IF_7
0x4004432	    0xc782341c0000	            mov dword [rdx + 0x1c34], 1 	      2435	channel.c	FUNCTION_59	IF_7
0x400443c	    0x488b05000000	            mov rax, qword [0x04004443] 	      2436	channel.c	FUNCTION_59	IF_7	FOR_1
0x4004443	          0x4885c0	                           test rax, rax	      2436	channel.c	FUNCTION_59	IF_7	FOR_1
0x4004446	            0x741b	                            je 0x4004463	      2436	channel.c	FUNCTION_59	IF_7	FOR_1
0x4004448	    0x483b90280400	           cmp rdx, qword [rax + 0x428] 	      2440	channel.c	FUNCTION_59	IF_7	FOR_1	IF_8
0x400444f	            0x750a	                           jne 0x400445b	      2440	channel.c	FUNCTION_59	IF_7	FOR_1	IF_8
0x4004451	          0x488b0a	                    mov rcx, qword [rdx]	      2441	channel.c	FUNCTION_59	IF_7	FOR_1	IF_8
0x4004454	    0x488988500400	            mov qword [rax + 0x450], rcx	      2441	channel.c	FUNCTION_59	IF_7	FOR_1	IF_8
0x400445b	          0x488b00	                    mov rax, qword [rax]	      2436	channel.c	FUNCTION_59	IF_7	FOR_1
0x400445e	          0x4885c0	                           test rax, rax	      2436	channel.c	FUNCTION_59	IF_7	FOR_1
0x4004461	            0x75e5	                           jne 0x4004448	      2436	channel.c	FUNCTION_59	IF_7	FOR_1
0x4004463	    0x48837c240800	                  cmp qword [rsp + 8], 0	      2684	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32
0x4004469	            0x7467	                            je 0x40044d2	      2684	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32
0x400446b	          0x4885db	                           test rbx, rbx	      2686	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	IF_33
0x400446e	            0x741a	                            je 0x400448a	      2686	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	IF_33
0x4004470	    0x488d8c240001	                  lea rcx, [rsp + 0x100]	      2687	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	CALL_26
0x4004478	          0x4889da	                            mov rdx, rbx	      2687	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	CALL_26
0x400447b	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      2687	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	CALL_26
0x4004480	          0x4889ef	                            mov rdi, rbp	      2687	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	CALL_26
0x4004483	      0xe81bccffff	       call sym.invoke_one_time_callback	      2687	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	CALL_26
0x4004488	            0xeb48	                           jmp 0x40044d2	      2687	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	CALL_26
0x400448a	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      2691	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_27
0x400448f	          0x4889da	                            mov rdx, rbx	      2691	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_27
0x4004492	      0xbe00000000	                              mov esi, 0	      2691	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_27
0x4004497	          0x4889ef	                            mov rdi, rbp	      2691	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_27
0x400449a	      0xb800000000	                              mov eax, 0	      2691	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_27
0x400449f	      0xe800000000	                          call 0x40044a4	      2691	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_27
0x40044a4	    0x488d8c240001	                  lea rcx, [rsp + 0x100]	      2693	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_28
0x40044ac	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      2693	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_28
0x40044b1	          0x4889de	                            mov rsi, rbx	      2693	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_28
0x40044b4	          0x4889ef	                            mov rdi, rbp	      2693	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_28
0x40044b7	      0xe8aac2ffff	                call sym.invoke_callback	      2693	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_28
0x40044bc	            0xeb14	                           jmp 0x40044d2	      2693	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_28
0x40044be	            0x89c2	                            mov edx, eax	      2698	channel.c	FUNCTION_61	CALL_29
0x40044c0	      0xbe00000000	                              mov esi, 0	      2698	channel.c	FUNCTION_61	CALL_29
0x40044c5	          0x4889ef	                            mov rdi, rbp	      2698	channel.c	FUNCTION_61	CALL_29
0x40044c8	      0xb800000000	                              mov eax, 0	      2698	channel.c	FUNCTION_61	CALL_29
0x40044cd	      0xe800000000	                          call 0x40044d2	      2698	channel.c	FUNCTION_61	CALL_29
0x40044d2	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2700	channel.c	FUNCTION_61	IF_34
0x40044d7	          0x4885ff	                           test rdi, rdi	      2700	channel.c	FUNCTION_61	IF_34
0x40044da	            0x7405	                            je 0x40044e1	      2700	channel.c	FUNCTION_61	IF_34
0x40044dc	      0xe800000000	                          call 0x40044e1	      2701	channel.c	FUNCTION_61	CALL_30
0x40044e1	          0x4c89ef	                            mov rdi, r13	      2702	channel.c	FUNCTION_61	CALL_31
0x40044e4	      0xe800000000	                          call 0x40044e9	      2702	channel.c	FUNCTION_61	CALL_31
0x40044e9	    0x41bc01000000	                             mov r12d, 1	      2704	channel.c	FUNCTION_61
0x40044ef	            0xeb16	                           jmp 0x4004507	      2704	channel.c	FUNCTION_61
0x40044f1	    0x41bc00000000	                             mov r12d, 0	      2554	channel.c	FUNCTION_61	ELSE_3	IF_11
0x40044f7	            0xeb0e	                           jmp 0x4004507	      2554	channel.c	FUNCTION_61	ELSE_3	IF_11
0x40044f9	    0x41bc00000000	                             mov r12d, 0	      2565	channel.c	FUNCTION_61	ELSE_4	IF_12
0x40044ff	            0xeb06	                           jmp 0x4004507	      2565	channel.c	FUNCTION_61	ELSE_4	IF_12
0x4004501	    0x41bc00000000	                             mov r12d, 0	      2635	channel.c	FUNCTION_61	ELSE_4	IF_22
0x4004507	          0x4489e0	                           mov eax, r12d	      2705	channel.c	FUNCTION_61
0x400450a	    0x488b8c244801	           mov rcx, qword [rsp + 0x148] 	      2705	channel.c	FUNCTION_61
0x4004512	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2705	channel.c	FUNCTION_61
0x400451b	     0xf84a3010000	                            je 0x40046c4	      2705	channel.c	FUNCTION_61
0x4004521	      0xe999010000	                           jmp 0x40046bf	      2705	channel.c	FUNCTION_61
0x4004526	          0x488b03	                    mov rax, qword [rbx]	      2489	channel.c	FUNCTION_61	IF_3
0x4004529	      0x4889442408	                mov qword [rsp + 8], rax	      2489	channel.c	FUNCTION_61	IF_3
0x400452e	        0x488b4308	                mov rax, qword [rbx + 8]	      2490	channel.c	FUNCTION_61	IF_3
0x4004532	      0x4889442420	             mov qword [rsp + 0x20], rax	      2490	channel.c	FUNCTION_61	IF_3
0x4004537	      0xe91cf3ffff	                           jmp 0x4003858	      2490	channel.c	FUNCTION_61	IF_3
0x400453c	          0x4489f8	                           mov eax, r15d	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x400453f	          0x4889c2	                            mov rdx, rax	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4004542	        0x48c1e204	                              shl rdx, 4	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4004546	        0x48c1e008	                              shl rax, 8	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x400454a	          0x4801d0	                            add rax, rdx	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x400454d	    0x488b8405e800	      mov rax, qword [rbp + rax + 0xe8] 	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4004555	      0x4889442408	                mov qword [rsp + 8], rax	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x400455a	          0x4885c0	                           test rax, rax	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x400455d	     0xf85b3f2ffff	                           jne 0x4003816	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4004563	      0xe9d3f2ffff	                           jmp 0x400383b	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4004568	    0x83bc24300100	              cmp dword [rsp + 0x130], 1	      2252	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9
0x4004570	     0xf8763f6ffff	                            ja 0x4003bd9	      2252	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9
0x4004576	      0xe99ff6ffff	                           jmp 0x4003c1a	      2252	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9
0x400457b	    0x830500000000	               add dword [0x04004582], 1	      2273	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5
0x4004582	          0x4889da	                            mov rdx, rbx	      2276	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_26
0x4004585	      0xbe00000000	                              mov esi, 0	      2276	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_26
0x400458a	          0x4889ef	                            mov rdi, rbp	      2276	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_26
0x400458d	      0xb800000000	                              mov eax, 0	      2276	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_26
0x4004592	      0xe800000000	                          call 0x4004597	      2276	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_26
0x4004597	      0xbe00000000	                              mov esi, 0	      2277	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_27
0x400459c	          0x4889df	                            mov rdi, rbx	      2277	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_27
0x400459f	      0xe800000000	                          call 0x40045a4	      2277	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_27
0x40045a4	          0x4989c5	                            mov r13, rax	      2277	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_27
0x40045a7	    0x83bc24200100	              cmp dword [rsp + 0x120], 1	      2286	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x40045af	     0xf8558f7ffff	                           jne 0x4003d0d	      2286	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x40045b5	      0xe9aff6ffff	                           jmp 0x4003c69	      2286	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x40045ba	    0x830500000000	               add dword [0x040045c1], 1	      2273	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5
0x40045c1	          0x4889da	                            mov rdx, rbx	      2281	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	CALL_28
0x40045c4	      0xbe00000000	                              mov esi, 0	      2281	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	CALL_28
0x40045c9	          0x4889ef	                            mov rdi, rbp	      2281	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	CALL_28
0x40045cc	      0xb800000000	                              mov eax, 0	      2281	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	CALL_28
0x40045d1	      0xe800000000	                          call 0x40045d6	      2281	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	CALL_28
0x40045d6	      0x4c8d442440	                    lea r8, [rsp + 0x40]	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x40045db	      0xb900000000	                              mov ecx, 0	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x40045e0	      0xba00000000	                              mov edx, 0	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x40045e5	    0x488db4242001	                  lea rsi, [rsp + 0x120]	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x40045ed	          0x4889df	                            mov rdi, rbx	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x40045f0	      0xe800000000	                          call 0x40045f5	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x40045f5	          0x83f801	                              cmp eax, 1	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x40045f8	     0xf8594000000	                           jne 0x4004692	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x40045fe	            0xeb2f	                           jmp 0x400462f	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x4004600	    0x488bbc243801	           mov rdi, qword [rsp + 0x138] 	      2288	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4004608	        0x897c2404	                mov dword [rsp + 4], edi	      2288	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x400460c	          0x4489f2	                           mov edx, r14d	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x400460f	          0x83ca04	                               or edx, 4	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x4004612	      0x488d742440	                   lea rsi, [rsp + 0x40]	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x4004617	      0xe800000000	                          call 0x400461c	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x400461c	          0x4889c3	                            mov rbx, rax	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x400461f	      0x4c8d6c2440	                   lea r13, [rsp + 0x40]	      2283	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14
0x4004624	          0x4885c0	                           test rax, rax	      2292	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x4004627	     0xf8563f6ffff	                           jne 0x4003c90	      2292	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x400462d	            0xeb78	                           jmp 0x40046a7	      2292	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x400462f	    0x83bc24300100	              cmp dword [rsp + 0x130], 1	      2286	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4004637	            0x757a	                           jne 0x40046b3	      2286	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4004639	            0xebc5	                           jmp 0x4004600	      2286	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x400463b	        0x498b7d00	                    mov rdi, qword [r13]	      2589	channel.c	FUNCTION_61	ELSE_4	IF_14
0x400463f	        0x488d7001	                      lea rsi, [rax + 1]	      2596	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18	CALL_15
0x4004643	      0xe800000000	                          call 0x4004648	      2596	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18	CALL_15
0x4004648	          0x4889c7	                            mov rdi, rax	      2596	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18	CALL_15
0x400464b	          0x4885c0	                           test rax, rax	      2597	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18	IF_19
0x400464e	     0xf8556f8ffff	                           jne 0x4003eaa	      2597	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18	IF_19
0x4004654	      0xe9aefeffff	                           jmp 0x4004507	      2597	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18	IF_19
0x4004659	          0x4989c4	                            mov r12, rax	      2597	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18	IF_19
0x400465c	        0x498b7d00	                    mov rdi, qword [r13]	      2589	channel.c	FUNCTION_61	ELSE_4	IF_14
0x4004660	      0xe95ef8ffff	                           jmp 0x4003ec3	      2589	channel.c	FUNCTION_61	ELSE_4	IF_14
0x4004665	    0x83bda0040000	              cmp dword [rbp + 0x4a0], 0	      2655	channel.c	FUNCTION_61	IF_23	IF_25	IF_26
0x400466c	     0xf8558f9ffff	                           jne 0x4003fca	      2655	channel.c	FUNCTION_61	IF_23	IF_25	IF_26
0x4004672	      0xe9a8faffff	                           jmp 0x400411f	      2655	channel.c	FUNCTION_61	IF_23	IF_25	IF_26
0x4004677	    0x8b8424380100	           mov eax, dword [rsp + 0x138] 	      2288	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x400467e	        0x89442404	                mov dword [rsp + 4], eax	      2288	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4004682	      0xbb00000000	                              mov ebx, 0	      2270	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5
0x4004687	    0x41bd00000000	                             mov r13d, 0	      2288	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x400468d	      0xe90af6ffff	                           jmp 0x4003c9c	      2288	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4004692	    0x83bc24300100	              cmp dword [rsp + 0x130], 1	      2286	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x400469a	            0x74db	                            je 0x4004677	      2286	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x400469c	    0x41bd00000000	                             mov r13d, 0	      2267	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5
0x40046a2	      0xe966f6ffff	                           jmp 0x4003d0d	      2267	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5
0x40046a7	    0x832d00000000	               sub dword [0x040046ae], 1	      2309	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6
0x40046ae	      0xe96bf6ffff	                           jmp 0x4003d1e	      2309	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6
0x40046b3	    0x832d00000000	               sub dword [0x040046ba], 1	      2309	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6
0x40046ba	      0xe95ff6ffff	                           jmp 0x4003d1e	      2309	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6
0x40046bf	      0xe800000000	                          call 0x40046c4	      2705	channel.c	FUNCTION_61
0x40046c4	    0x4881c4580100	                          add rsp, 0x158	      2705	channel.c	FUNCTION_61
0x40046cb	              0x5b	                                 pop rbx	      2705	channel.c	FUNCTION_61
0x40046cc	              0x5d	                                 pop rbp	      2705	channel.c	FUNCTION_61
0x40046cd	            0x415c	                                 pop r12	      2705	channel.c	FUNCTION_61
0x40046cf	            0x415d	                                 pop r13	      2705	channel.c	FUNCTION_61
0x40046d1	            0x415e	                                 pop r14	      2705	channel.c	FUNCTION_61
0x40046d3	            0x415f	                                 pop r15	      2705	channel.c	FUNCTION_61
0x40046d5	              0xc3	                                     ret	      2705	channel.c	FUNCTION_61
channel_set_req_callback	IF,3:ELSE,2:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,3	58
0x4001827	            0x4157	                                push r15	      1302	channel.c	FUNCTION_35
0x4001829	            0x4156	                                push r14	      1302	channel.c	FUNCTION_35
0x400182b	            0x4155	                                push r13	      1302	channel.c	FUNCTION_35
0x400182d	            0x4154	                                push r12	      1302	channel.c	FUNCTION_35
0x400182f	              0x55	                                push rbp	      1302	channel.c	FUNCTION_35
0x4001830	              0x53	                                push rbx	      1302	channel.c	FUNCTION_35
0x4001831	        0x4883ec08	                              sub rsp, 8	      1302	channel.c	FUNCTION_35
0x4001835	          0x4989fc	                            mov r12, rdi	      1302	channel.c	FUNCTION_35
0x4001838	            0x89f5	                            mov ebp, esi	      1302	channel.c	FUNCTION_35
0x400183a	          0x4989d7	                            mov r15, rdx	      1302	channel.c	FUNCTION_35
0x400183d	          0x4989cd	                            mov r13, rcx	      1302	channel.c	FUNCTION_35
0x4001840	          0x4589c6	                           mov r14d, r8d	      1302	channel.c	FUNCTION_35
0x4001843	      0xbf28000000	                           mov edi, 0x28	      1304	channel.c	FUNCTION_35	CALL_1
0x4001848	      0xe800000000	                          call 0x400184d	      1304	channel.c	FUNCTION_35	CALL_1
0x400184d	          0x4885c0	                           test rax, rax	      1306	channel.c	FUNCTION_35	IF_1
0x4001850	     0xf8481000000	                            je 0x40018d7	      1306	channel.c	FUNCTION_35	IF_1
0x4001856	          0x4889c3	                            mov rbx, rax	      1306	channel.c	FUNCTION_35	IF_1
0x4001859	        0x4c896808	                mov qword [rax + 8], r13	      1308	channel.c	FUNCTION_35	IF_1
0x400185d	          0x4d85ed	                           test r13, r13	      1309	channel.c	FUNCTION_35	IF_1	IF_2
0x4001860	            0x740a	                            je 0x400186c	      1309	channel.c	FUNCTION_35	IF_1	IF_2
0x4001862	      0x4183450001	                      add dword [r13], 1	      1311	channel.c	FUNCTION_35	IF_1	IF_2
0x4001867	          0x4c8938	                    mov qword [rax], r15	      1312	channel.c	FUNCTION_35	IF_1	IF_2
0x400186a	            0xeb13	                           jmp 0x400187f	      1312	channel.c	FUNCTION_35	IF_1	IF_2
0x400186c	          0x4c89ff	                            mov rdi, r15	      1316	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_2
0x400186f	      0xe800000000	                          call 0x4001874	      1316	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_2
0x4001874	          0x488903	                    mov qword [rbx], rax	      1316	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_2
0x4001877	          0x4889c7	                            mov rdi, rax	      1317	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_3
0x400187a	      0xe800000000	                          call 0x400187f	      1317	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_3
0x400187f	        0x44897310	            mov dword [rbx + 0x10], r14d	      1319	channel.c	FUNCTION_35	IF_1
0x4001883	            0x89e8	                            mov eax, ebp	      1320	channel.c	FUNCTION_35	IF_1
0x4001885	          0x4889c2	                            mov rdx, rax	      1320	channel.c	FUNCTION_35	IF_1
0x4001888	        0x48c1e204	                              shl rdx, 4	      1320	channel.c	FUNCTION_35	IF_1
0x400188c	        0x48c1e008	                              shl rax, 8	      1320	channel.c	FUNCTION_35	IF_1
0x4001890	          0x4801d0	                            add rax, rdx	      1320	channel.c	FUNCTION_35	IF_1
0x4001893	          0x4c01e0	                            add rax, r12	      1320	channel.c	FUNCTION_35	IF_1
0x4001896	    0x488b90e00000	            mov rdx, qword [rax + 0xe0] 	      1320	channel.c	FUNCTION_35	IF_1
0x400189d	        0x48895320	             mov qword [rbx + 0x20], rdx	      1320	channel.c	FUNCTION_35	IF_1
0x40018a1	    0x488998e00000	             mov qword [rax + 0xe0], rbx	      1321	channel.c	FUNCTION_35	IF_1
0x40018a8	    0x48c743180000	               mov qword [rbx + 0x18], 0	      1322	channel.c	FUNCTION_35	IF_1
0x40018b0	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1323	channel.c	FUNCTION_35	IF_1	IF_3
0x40018b4	          0x4885c0	                           test rax, rax	      1323	channel.c	FUNCTION_35	IF_1	IF_3
0x40018b7	            0x751a	                           jne 0x40018d3	      1323	channel.c	FUNCTION_35	IF_1	IF_3
0x40018b9	            0x89ed	                            mov ebp, ebp	      1324	channel.c	FUNCTION_35	IF_1	IF_3
0x40018bb	          0x4889e8	                            mov rax, rbp	      1324	channel.c	FUNCTION_35	IF_1	IF_3
0x40018be	        0x48c1e004	                              shl rax, 4	      1324	channel.c	FUNCTION_35	IF_1	IF_3
0x40018c2	        0x48c1e508	                              shl rbp, 8	      1324	channel.c	FUNCTION_35	IF_1	IF_3
0x40018c6	          0x4801c5	                            add rbp, rax	      1324	channel.c	FUNCTION_35	IF_1	IF_3
0x40018c9	    0x49899c2cd800	       mov qword [r12 + rbp + 0xd8], rbx	      1324	channel.c	FUNCTION_35	IF_1	IF_3
0x40018d1	            0xeb04	                           jmp 0x40018d7	      1324	channel.c	FUNCTION_35	IF_1	IF_3
0x40018d3	        0x48895818	             mov qword [rax + 0x18], rbx	      1326	channel.c	FUNCTION_35	IF_1	ELSE_2
0x40018d7	        0x4883c408	                              add rsp, 8	      1328	channel.c	FUNCTION_35	ELSE_2
0x40018db	              0x5b	                                 pop rbx	      1328	channel.c	FUNCTION_35	ELSE_2
0x40018dc	              0x5d	                                 pop rbp	      1328	channel.c	FUNCTION_35	ELSE_2
0x40018dd	            0x415c	                                 pop r12	      1328	channel.c	FUNCTION_35	ELSE_2
0x40018df	            0x415d	                                 pop r13	      1328	channel.c	FUNCTION_35	ELSE_2
0x40018e1	            0x415e	                                 pop r14	      1328	channel.c	FUNCTION_35	ELSE_2
0x40018e3	            0x415f	                                 pop r15	      1328	channel.c	FUNCTION_35	ELSE_2
0x40018e5	              0xc3	                                     ret	      1328	channel.c	FUNCTION_35	ELSE_2
job_free_job	IF,2:ELSE,1:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,1	17
0x400037f	        0x4883ec08	                              sub rsp, 8	      5068	channel.c	FUNCTION_110
0x4000383	          0x488b07	                    mov rax, qword [rdi]	      5069	channel.c	FUNCTION_110	IF_1
0x4000386	          0x4885c0	                           test rax, rax	      5069	channel.c	FUNCTION_110	IF_1
0x4000389	            0x7408	                            je 0x4000393	      5069	channel.c	FUNCTION_110	IF_1
0x400038b	        0x488b5708	                mov rdx, qword [rdi + 8]	      5070	channel.c	FUNCTION_110	IF_1
0x400038f	        0x48895008	                mov qword [rax + 8], rdx	      5070	channel.c	FUNCTION_110	IF_1
0x4000393	        0x488b4708	                mov rax, qword [rdi + 8]	      5071	channel.c	FUNCTION_110	IF_2
0x4000397	          0x4885c0	                           test rax, rax	      5071	channel.c	FUNCTION_110	IF_2
0x400039a	            0x750c	                           jne 0x40003a8	      5071	channel.c	FUNCTION_110	IF_2
0x400039c	          0x488b07	                    mov rax, qword [rdi]	      5072	channel.c	FUNCTION_110	IF_2
0x400039f	    0x488905000000	            mov qword [0x040003a6], rax 	      5072	channel.c	FUNCTION_110	IF_2
0x40003a6	            0xeb06	                           jmp 0x40003ae	      5072	channel.c	FUNCTION_110	IF_2
0x40003a8	          0x488b17	                    mov rdx, qword [rdi]	      5074	channel.c	FUNCTION_110	ELSE_1
0x40003ab	          0x488910	                    mov qword [rax], rdx	      5074	channel.c	FUNCTION_110	ELSE_1
0x40003ae	      0xe800000000	                          call 0x40003b3	      5075	channel.c	FUNCTION_110	CALL_1
0x40003b3	        0x4883c408	                              add rsp, 8	      5076	channel.c	FUNCTION_110
0x40003b7	              0xc3	                                     ret	      5076	channel.c	FUNCTION_110
channel_parse_messages	IF,9:ELSE,1:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,1:CALL,12	126
0x40053d6	            0x4155	                                push r13	      4215	channel.c	FUNCTION_95
0x40053d8	            0x4154	                                push r12	      4215	channel.c	FUNCTION_95
0x40053da	              0x55	                                push rbp	      4215	channel.c	FUNCTION_95
0x40053db	              0x53	                                push rbx	      4215	channel.c	FUNCTION_95
0x40053dc	        0x4883ec28	                           sub rsp, 0x28	      4215	channel.c	FUNCTION_95
0x40053e0	    0x64488b042528	                mov rax, qword fs:[0x28]	      4215	channel.c	FUNCTION_95
0x40053e9	      0x4889442418	             mov qword [rsp + 0x18], rax	      4215	channel.c	FUNCTION_95
0x40053ee	            0x31c0	                            xor eax, eax	      4215	channel.c	FUNCTION_95
0x40053f0	    0x488b1d000000	            mov rbx, qword [0x040053f7] 	      4216	channel.c	FUNCTION_95
0x40053f7	      0xbe00000000	                              mov esi, 0	      4223	channel.c	FUNCTION_95	CALL_1
0x40053fc	          0x4889e7	                            mov rdi, rsp	      4223	channel.c	FUNCTION_95	CALL_1
0x40053ff	      0xe800000000	                          call 0x4005404	      4223	channel.c	FUNCTION_95	CALL_1
0x4005404	    0x830500000000	               add dword [0x0400540b], 1	      4226	channel.c	FUNCTION_95
0x400540b	    0x833d00000000	               cmp dword [0x04005412], 0	      4230	channel.c	FUNCTION_95	IF_1
0x4005412	            0x741e	                            je 0x4005432	      4230	channel.c	FUNCTION_95	IF_1
0x4005414	      0xbe00000000	                              mov esi, 0	      4232	channel.c	FUNCTION_95	IF_1	CALL_2
0x4005419	      0xbf00000000	                              mov edi, 0	      4232	channel.c	FUNCTION_95	IF_1	CALL_2
0x400541e	      0xb800000000	                              mov eax, 0	      4232	channel.c	FUNCTION_95	IF_1	CALL_2
0x4005423	      0xe800000000	                          call 0x4005428	      4232	channel.c	FUNCTION_95	IF_1	CALL_2
0x4005428	    0xc70500000000	               mov dword [0x04005432], 0	      4233	channel.c	FUNCTION_95	IF_1
0x4005432	          0x4885db	                           test rbx, rbx	      4235	channel.c	FUNCTION_95	WHILE_1
0x4005435	     0xf8437010000	                            je 0x4005572	      4235	channel.c	FUNCTION_95	WHILE_1
0x400543b	    0x41bc00000000	                             mov r12d, 0	      4235	channel.c	FUNCTION_95	WHILE_1
0x4005441	    0x41bd00000000	                             mov r13d, 0	      4235	channel.c	FUNCTION_95	WHILE_1
0x4005447	    0x83bb6c040000	              cmp dword [rbx + 0x46c], 0	      4237	channel.c	FUNCTION_95	WHILE_1	IF_2	CALL_3
0x400544e	            0x7543	                           jne 0x4005493	      4237	channel.c	FUNCTION_95	WHILE_1	IF_2	CALL_3
0x4005450	    0xc7836c040000	          mov dword [rbx + 0x46c], 0x10 	      4239	channel.c	FUNCTION_95	WHILE_1	IF_2
0x400545a	      0xbe00000000	                              mov esi, 0	      3278	channel.c	FUNCTION_78	CALL_1
0x400545f	          0x4889df	                            mov rdi, rbx	      3278	channel.c	FUNCTION_78	CALL_1
0x4005462	      0xb800000000	                              mov eax, 0	      3278	channel.c	FUNCTION_78	CALL_1
0x4005467	      0xe800000000	                          call 0x400546c	      3278	channel.c	FUNCTION_78	CALL_1
0x400546c	    0x488b83780400	           mov rax, qword [rbx + 0x478] 	      3279	channel.c	FUNCTION_78	IF_1
0x4005473	          0x4885c0	                           test rax, rax	      3279	channel.c	FUNCTION_78	IF_1
0x4005476	            0x7402	                            je 0x400547a	      3279	channel.c	FUNCTION_78	IF_1
0x4005478	            0xffd0	                                call rax	      3280	channel.c	FUNCTION_78	IF_1
0x400547a	      0xbe01000000	                              mov esi, 1	      3281	channel.c	FUNCTION_78	CALL_2
0x400547f	          0x4889df	                            mov rdi, rbx	      3281	channel.c	FUNCTION_78	CALL_2
0x4005482	      0xe800000000	                          call 0x4005487	      3281	channel.c	FUNCTION_78	CALL_2
0x4005487	    0x488b1d000000	            mov rbx, qword [0x0400548e] 	      4242	channel.c	FUNCTION_95	WHILE_1	IF_2
0x400548e	      0xe9d4000000	                           jmp 0x4005567	      4243	channel.c	FUNCTION_95	WHILE_1	IF_2
0x4005493	    0x83bb70040000	              cmp dword [rbx + 0x470], 0	      4245	channel.c	FUNCTION_95	WHILE_1	IF_3
0x400549a	            0x7414	                            je 0x40054b0	      4245	channel.c	FUNCTION_95	WHILE_1	IF_3
0x400549c	          0x4889df	                            mov rdi, rbx	      4247	channel.c	FUNCTION_95	WHILE_1	IF_3	CALL_5
0x400549f	      0xe8daf4ffff	                   call sym.channel_free	      4247	channel.c	FUNCTION_95	WHILE_1	IF_3	CALL_5
0x40054a4	    0x488b1d000000	            mov rbx, qword [0x040054ab] 	      4249	channel.c	FUNCTION_95	WHILE_1	IF_3
0x40054ab	      0xe9b7000000	                           jmp 0x4005567	      4250	channel.c	FUNCTION_95	WHILE_1	IF_3
0x40054b0	    0x8babb4040000	           mov ebp, dword [rbx + 0x4b4] 	      4252	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_6
0x40054b6	            0x85ed	                           test ebp, ebp	      4252	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_6
0x40054b8	            0x7526	                           jne 0x40054e0	      4252	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_6
0x40054ba	          0x4889df	                            mov rdi, rbx	      4252	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_6
0x40054bd	      0xe87eabffff	           call sym.channel_still_useful	      4252	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_6
0x40054c2	            0x85c0	                           test eax, eax	      4252	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_6
0x40054c4	            0x751a	                           jne 0x40054e0	      4252	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_6
0x40054c6	          0x4889df	                            mov rdi, rbx	      4255	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_7
0x40054c9	      0xe8b0f4ffff	                   call sym.channel_free	      4255	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_7
0x40054ce	    0x488b1d000000	            mov rbx, qword [0x040054d5] 	      4256	channel.c	FUNCTION_95	WHILE_1	IF_4
0x40054d5	    0x41bc00000000	                             mov r12d, 0	      4257	channel.c	FUNCTION_95	WHILE_1	IF_4
0x40054db	      0xe987000000	                           jmp 0x4005567	      4258	channel.c	FUNCTION_95	WHILE_1	IF_4
0x40054e0	          0x4489e0	                           mov eax, r12d	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x40054e3	          0x4889c2	                            mov rdx, rax	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x40054e6	        0x48c1e204	                              shl rdx, 4	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x40054ea	        0x48c1e008	                              shl rax, 8	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x40054ee	          0x4801d0	                            add rax, rdx	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x40054f1	      0x837c0318ff	cmp dword [rbx + rax + 0x18], 0xffffffffffffffff	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x40054f6	            0x750f	                           jne 0x4005507	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x40054f8	          0x4489e6	                           mov esi, r12d	      4261	channel.c	FUNCTION_95	WHILE_1	IF_5	CALL_8
0x40054fb	          0x4889df	                            mov rdi, rbx	      4261	channel.c	FUNCTION_95	WHILE_1	IF_5	CALL_8
0x40054fe	      0xe800000000	                          call 0x4005503	      4261	channel.c	FUNCTION_95	WHILE_1	IF_5	CALL_8
0x4005503	            0x85c0	                           test eax, eax	      4261	channel.c	FUNCTION_95	WHILE_1	IF_5	CALL_8
0x4005505	            0x744b	                            je 0x4005552	      4261	channel.c	FUNCTION_95	WHILE_1	IF_5	CALL_8
0x4005507	          0x83c501	                              add ebp, 1	      4265	channel.c	FUNCTION_95	WHILE_1	IF_5
0x400550a	    0x89abb4040000	            mov dword [rbx + 0x4b4], ebp	      4265	channel.c	FUNCTION_95	WHILE_1	IF_5
0x4005510	          0x4489e6	                           mov esi, r12d	      4266	channel.c	FUNCTION_95	WHILE_1	IF_5	CALL_9
0x4005513	          0x4889df	                            mov rdi, rbx	      4266	channel.c	FUNCTION_95	WHILE_1	IF_5	CALL_9
0x4005516	      0xe870e2ffff	            call sym.may_invoke_callback	      4266	channel.c	FUNCTION_95	WHILE_1	IF_5	CALL_9
0x400551b	          0x83f801	                              cmp eax, 1	      4267	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_6
0x400551e	     0xf858d000000	                           jne 0x40055b1	      4267	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_6
0x4005524	      0xe999000000	                           jmp 0x40055c2	      4267	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_6
0x4005529	          0x4889e7	                            mov rdi, rsp	      4274	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_11
0x400552c	      0xe800000000	                          call 0x4005531	      4274	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_11
0x4005531	        0x4883f863	                           cmp rax, 0x63	      4274	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_11
0x4005535	            0x7f15	                            jg 0x400554c	      4274	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_11
0x4005537	    0x41bd01000000	                             mov r13d, 1	      4268	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_6
0x400553d	    0x488b1d000000	            mov rbx, qword [0x04005544] 	      4279	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x4005544	    0x41bc00000000	                             mov r12d, 0	      4280	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x400554a	            0xeb1b	                           jmp 0x4005567	      4281	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x400554c	    0x41bd01000000	                             mov r13d, 1	      4268	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_6
0x4005552	        0x4183fc01	                             cmp r12d, 1	      4284	channel.c	FUNCTION_95	WHILE_1	IF_8
0x4005556	            0x7706	                            ja 0x400555e	      4284	channel.c	FUNCTION_95	WHILE_1	IF_8
0x4005558	        0x4183c401	                             add r12d, 1	      4285	channel.c	FUNCTION_95	WHILE_1	IF_8
0x400555c	            0xeb09	                           jmp 0x4005567	      4285	channel.c	FUNCTION_95	WHILE_1	IF_8
0x400555e	          0x488b1b	                    mov rbx, qword [rbx]	      4288	channel.c	FUNCTION_95	WHILE_1	ELSE_1
0x4005561	    0x41bc00000000	                             mov r12d, 0	      4289	channel.c	FUNCTION_95	WHILE_1	ELSE_1
0x4005567	          0x4885db	                           test rbx, rbx	      4235	channel.c	FUNCTION_95	WHILE_1
0x400556a	     0xf85d7feffff	                           jne 0x4005447	      4235	channel.c	FUNCTION_95	WHILE_1
0x4005570	            0xeb06	                           jmp 0x4005578	      4235	channel.c	FUNCTION_95	WHILE_1
0x4005572	    0x41bd00000000	                             mov r13d, 0	      4235	channel.c	FUNCTION_95	WHILE_1
0x4005578	    0x833d00000000	               cmp dword [0x0400557f], 0	      4293	channel.c	FUNCTION_95	IF_9
0x400557f	            0x7414	                            je 0x4005595	      4293	channel.c	FUNCTION_95	IF_9
0x4005581	    0xc70500000000	               mov dword [0x0400558b], 0	      4295	channel.c	FUNCTION_95	IF_9
0x400558b	      0xbf01000000	                              mov edi, 1	      4296	channel.c	FUNCTION_95	IF_9	CALL_12
0x4005590	      0xe800000000	                          call 0x4005595	      4296	channel.c	FUNCTION_95	IF_9	CALL_12
0x4005595	    0x832d00000000	               sub dword [0x0400559c], 1	      4299	channel.c	FUNCTION_95
0x400559c	          0x4489e8	                           mov eax, r13d	      4302	channel.c	FUNCTION_95
0x400559f	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4302	channel.c	FUNCTION_95
0x40055a4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4302	channel.c	FUNCTION_95
0x40055ad	            0x7433	                            je 0x40055e2	      4302	channel.c	FUNCTION_95
0x40055af	            0xeb2c	                           jmp 0x40055dd	      4302	channel.c	FUNCTION_95
0x40055b1	          0x4889df	                            mov rdi, rbx	      4269	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_10
0x40055b4	      0xe800000000	                          call 0x40055b9	      4269	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_10
0x40055b9	            0x85c0	                           test eax, eax	      4269	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_10
0x40055bb	            0x7495	                            je 0x4005552	      4269	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_10
0x40055bd	      0xe97bffffff	                           jmp 0x400553d	      4269	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_10
0x40055c2	          0x4889df	                            mov rdi, rbx	      4269	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_10
0x40055c5	      0xe800000000	                          call 0x40055ca	      4269	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_10
0x40055ca	    0x41bd01000000	                             mov r13d, 1	      4268	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_6
0x40055d0	            0x85c0	                           test eax, eax	      4269	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_10
0x40055d2	     0xf8565ffffff	                           jne 0x400553d	      4269	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_10
0x40055d8	      0xe94cffffff	                           jmp 0x4005529	      4269	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_10
0x40055dd	      0xe800000000	                          call 0x40055e2	      4302	channel.c	FUNCTION_95
0x40055e2	        0x4883c428	                           add rsp, 0x28	      4302	channel.c	FUNCTION_95
0x40055e6	              0x5b	                                 pop rbx	      4302	channel.c	FUNCTION_95
0x40055e7	              0x5d	                                 pop rbp	      4302	channel.c	FUNCTION_95
0x40055e8	            0x415c	                                 pop r12	      4302	channel.c	FUNCTION_95
0x40055ea	            0x415d	                                 pop r13	      4302	channel.c	FUNCTION_95
0x40055ec	              0xc3	                                     ret	      4302	channel.c	FUNCTION_95
channel_set_job	IF,4:ELSE,3:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,3	51
0x400173f	            0x4154	                                push r12	      1060	channel.c	FUNCTION_31
0x4001741	              0x55	                                push rbp	      1060	channel.c	FUNCTION_31
0x4001742	              0x53	                                push rbx	      1060	channel.c	FUNCTION_31
0x4001743	          0x4889fb	                            mov rbx, rdi	      1060	channel.c	FUNCTION_31
0x4001746	          0x4989f4	                            mov r12, rsi	      1060	channel.c	FUNCTION_31
0x4001749	          0x4889d5	                            mov rbp, rdx	      1060	channel.c	FUNCTION_31
0x400174c	    0x4889b7a80400	            mov qword [rdi + 0x4a8], rsi	      1061	channel.c	FUNCTION_31
0x4001753	          0x4889d6	                            mov rsi, rdx	      1063	channel.c	FUNCTION_31	CALL_1
0x4001756	      0xe800000000	                          call 0x400175b	      1063	channel.c	FUNCTION_31	CALL_1
0x400175b	      0x498b742450	            mov rsi, qword [r12 + 0x50] 	      1065	channel.c	FUNCTION_31	IF_1
0x4001760	          0x4885f6	                           test rsi, rsi	      1065	channel.c	FUNCTION_31	IF_1
0x4001763	     0xf84b9000000	                            je 0x4001822	      1065	channel.c	FUNCTION_31	IF_1
0x4001769	    0x488dbb280400	                  lea rdi, [rbx + 0x428]	      1069	channel.c	FUNCTION_31	IF_1	CALL_2
0x4001770	      0xe800000000	                          call 0x4001775	      1069	channel.c	FUNCTION_31	IF_1	CALL_2
0x4001775	    0x488b83280400	           mov rax, qword [rbx + 0x428] 	      1071	channel.c	FUNCTION_31	IF_1
0x400177c	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	      1070	channel.c	FUNCTION_31	IF_1	CALL_3
0x4001783	      0xbe00000000	                              mov esi, 0	      1070	channel.c	FUNCTION_31	IF_1	CALL_3
0x4001788	          0x4889df	                            mov rdi, rbx	      1070	channel.c	FUNCTION_31	IF_1	CALL_3
0x400178b	      0xb800000000	                              mov eax, 0	      1070	channel.c	FUNCTION_31	IF_1	CALL_3
0x4001790	      0xe800000000	                          call 0x4001795	      1070	channel.c	FUNCTION_31	IF_1	CALL_3
0x4001795	          0x8b4500	                    mov eax, dword [rbp]	      1072	channel.c	FUNCTION_31	IF_1	IF_2
0x4001798	      0xa900004000	                      test eax, 0x400000	      1072	channel.c	FUNCTION_31	IF_1	IF_2
0x400179d	            0x744e	                            je 0x40017ed	      1072	channel.c	FUNCTION_31	IF_1	IF_2
0x400179f	    0x488b95900100	           mov rdx, qword [rbp + 0x190] 	      1074	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x40017a6	          0x4885d2	                           test rdx, rdx	      1074	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x40017a9	            0x7539	                           jne 0x40017e4	      1074	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x40017ab	      0xa900008000	                      test eax, 0x800000	      1074	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x40017b0	            0x7532	                           jne 0x40017e4	      1074	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x40017b2	    0x488b83280400	           mov rax, qword [rbx + 0x428] 	      1078	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x40017b9	    0xc780341c0000	            mov dword [rax + 0x1c34], 1 	      1078	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x40017c3	    0xc78340040000	              mov dword [rbx + 0x440], 1	      1079	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x40017cd	    0x488b83280400	           mov rax, qword [rbx + 0x428] 	      1081	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x40017d4	          0x488b00	                    mov rax, qword [rax]	      1080	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x40017d7	        0x4883c001	                              add rax, 1	      1080	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x40017db	    0x488983480400	            mov qword [rbx + 0x448], rax	      1080	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x40017e2	            0xeb14	                           jmp 0x40017f8	      1080	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x40017e4	    0x488993480400	            mov qword [rbx + 0x448], rdx	      1084	channel.c	FUNCTION_31	IF_1	IF_2	ELSE_1
0x40017eb	            0xeb0b	                           jmp 0x40017f8	      1084	channel.c	FUNCTION_31	IF_1	IF_2	ELSE_1
0x40017ed	    0x48c783480400	              mov qword [rbx + 0x448], 1	      1087	channel.c	FUNCTION_31	IF_1	ELSE_2
0x40017f8	    0xf74500000080	              test dword [rbp], 0x800000	      1088	channel.c	FUNCTION_31	IF_1	IF_4
0x40017ff	            0x7410	                            je 0x4001811	      1088	channel.c	FUNCTION_31	IF_1	IF_4
0x4001801	    0x488b85980100	           mov rax, qword [rbp + 0x198] 	      1089	channel.c	FUNCTION_31	IF_1	IF_4
0x4001808	    0x488983500400	            mov qword [rbx + 0x450], rax	      1089	channel.c	FUNCTION_31	IF_1	IF_4
0x400180f	            0xeb11	                           jmp 0x4001822	      1089	channel.c	FUNCTION_31	IF_1	IF_4
0x4001811	    0x488b83280400	           mov rax, qword [rbx + 0x428] 	      1091	channel.c	FUNCTION_31	IF_1	ELSE_3
0x4001818	          0x488b00	                    mov rax, qword [rax]	      1091	channel.c	FUNCTION_31	IF_1	ELSE_3
0x400181b	    0x488983500400	            mov qword [rbx + 0x450], rax	      1091	channel.c	FUNCTION_31	IF_1	ELSE_3
0x4001822	              0x5b	                                 pop rbx	      1093	channel.c	FUNCTION_31	ELSE_3
0x4001823	              0x5d	                                 pop rbp	      1093	channel.c	FUNCTION_31	ELSE_3
0x4001824	            0x415c	                                 pop r12	      1093	channel.c	FUNCTION_31	ELSE_3
0x4001826	              0xc3	                                     ret	      1093	channel.c	FUNCTION_31	ELSE_3
write_buf_line	IF,3:ELSE,1:FOR,1:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,6	57
0x4002dec	            0x4156	                                push r14	      1332	channel.c	ELSE_2	FUNCTION_36
0x4002dee	            0x4155	                                push r13	      1332	channel.c	ELSE_2	FUNCTION_36
0x4002df0	            0x4154	                                push r12	      1332	channel.c	ELSE_2	FUNCTION_36
0x4002df2	              0x55	                                push rbp	      1332	channel.c	ELSE_2	FUNCTION_36
0x4002df3	              0x53	                                push rbx	      1332	channel.c	ELSE_2	FUNCTION_36
0x4002df4	          0x4889d5	                            mov rbp, rdx	      1332	channel.c	ELSE_2	FUNCTION_36
0x4002df7	      0xba00000000	                              mov edx, 0	      1333	channel.c	ELSE_2	FUNCTION_36	CALL_1
0x4002dfc	      0xe800000000	                          call 0x4002e01	      1333	channel.c	ELSE_2	FUNCTION_36	CALL_1
0x4002e01	          0x4989c4	                            mov r12, rax	      1333	channel.c	ELSE_2	FUNCTION_36	CALL_1
0x4002e04	      0xb800000000	                              mov eax, 0	      1334	channel.c	ELSE_2	FUNCTION_36	CALL_2
0x4002e09	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1334	channel.c	ELSE_2	FUNCTION_36	CALL_2
0x4002e10	          0x4c89e7	                            mov rdi, r12	      1334	channel.c	ELSE_2	FUNCTION_36	CALL_2
0x4002e13	            0xf2ae	              repne scasb al, byte [rdi]	      1334	channel.c	ELSE_2	FUNCTION_36	CALL_2
0x4002e15	          0x48f7d1	                                 not rcx	      1334	channel.c	ELSE_2	FUNCTION_36	CALL_2
0x4002e18	        0x488d59ff	                      lea rbx, [rcx - 1]	      1334	channel.c	ELSE_2	FUNCTION_36	CALL_2
0x4002e1c	          0x8d7b02	                      lea edi, [rbx + 2]	      1339	channel.c	ELSE_2	FUNCTION_36	IF_1	CALL_3
0x4002e1f	      0xe800000000	                          call 0x4002e24	      1339	channel.c	ELSE_2	FUNCTION_36	IF_1	CALL_3
0x4002e24	          0x4885c0	                           test rax, rax	      1339	channel.c	ELSE_2	FUNCTION_36	IF_1	CALL_3
0x4002e27	            0x7474	                            je 0x4002e9d	      1339	channel.c	ELSE_2	FUNCTION_36	IF_1	CALL_3
0x4002e29	          0x4989c5	                            mov r13, rax	      1339	channel.c	ELSE_2	FUNCTION_36	IF_1	CALL_3
0x4002e2c	          0x4c63f3	                         movsxd r14, ebx	      1341	channel.c	ELSE_2	FUNCTION_36	CALL_4
0x4002e2f	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_135	CALL_3
0x4002e32	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_135	CALL_3
0x4002e35	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_135	CALL_3
0x4002e38	      0xe800000000	                          call 0x4002e3d	        53	string3.h	FUNCTION_135	CALL_3
0x4002e3d	    0x83bd58040000	              cmp dword [rbp + 0x458], 0	      1343	channel.c	ELSE_2	FUNCTION_36	IF_2
0x4002e44	            0x7506	                           jne 0x4002e4c	      1343	channel.c	ELSE_2	FUNCTION_36	IF_2
0x4002e46	            0x85db	                           test ebx, ebx	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x4002e48	            0x7f0a	                            jg 0x4002e54	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x4002e4a	            0xeb24	                           jmp 0x4002e70	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x4002e4c	    0x43c64435000d	               mov byte [r13 + r14], 0xd	      1344	channel.c	ELSE_2	FUNCTION_36	IF_2
0x4002e52	            0xeb22	                           jmp 0x4002e76	      1344	channel.c	ELSE_2	FUNCTION_36	IF_2
0x4002e54	          0x4c89e8	                            mov rax, r13	      1344	channel.c	ELSE_2	FUNCTION_36	IF_2
0x4002e57	          0x8d53ff	                      lea edx, [rbx - 1]	      1344	channel.c	ELSE_2	FUNCTION_36	IF_2
0x4002e5a	      0x498d541501	                lea rdx, [r13 + rdx + 1]	      1344	channel.c	ELSE_2	FUNCTION_36	IF_2
0x4002e5f	          0x80380a	                     cmp byte [rax], 0xa	      1348	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1	IF_3
0x4002e62	            0x7503	                           jne 0x4002e67	      1348	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1	IF_3
0x4002e64	          0xc60000	                       mov byte [rax], 0	      1349	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1	IF_3
0x4002e67	        0x4883c001	                              add rax, 1	      1349	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1	IF_3
0x4002e6b	          0x4839d0	                            cmp rax, rdx	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x4002e6e	            0x75ef	                           jne 0x4002e5f	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x4002e70	    0x43c64435000a	               mov byte [r13 + r14], 0xa	      1351	channel.c	ELSE_2	FUNCTION_36	ELSE_1
0x4002e76	    0x43c644350100	             mov byte [r13 + r14 + 1], 0	      1353	channel.c	ELSE_2	FUNCTION_36
0x4002e7c	          0x8d4b01	                      lea ecx, [rbx + 1]	      1354	channel.c	ELSE_2	FUNCTION_36	CALL_5
0x4002e7f	    0x41b800000000	                              mov r8d, 0	      1354	channel.c	ELSE_2	FUNCTION_36	CALL_5
0x4002e85	          0x4c89ea	                            mov rdx, r13	      1354	channel.c	ELSE_2	FUNCTION_36	CALL_5
0x4002e88	      0xbe03000000	                              mov esi, 3	      1354	channel.c	ELSE_2	FUNCTION_36	CALL_5
0x4002e8d	          0x4889ef	                            mov rdi, rbp	      1354	channel.c	ELSE_2	FUNCTION_36	CALL_5
0x4002e90	      0xe800000000	                          call 0x4002e95	      1354	channel.c	ELSE_2	FUNCTION_36	CALL_5
0x4002e95	          0x4c89ef	                            mov rdi, r13	      1355	channel.c	ELSE_2	FUNCTION_36	CALL_6
0x4002e98	      0xe800000000	                          call 0x4002e9d	      1355	channel.c	ELSE_2	FUNCTION_36	CALL_6
0x4002e9d	              0x5b	                                 pop rbx	      1356	channel.c	ELSE_2	FUNCTION_36
0x4002e9e	              0x5d	                                 pop rbp	      1356	channel.c	ELSE_2	FUNCTION_36
0x4002e9f	            0x415c	                                 pop r12	      1356	channel.c	ELSE_2	FUNCTION_36
0x4002ea1	            0x415d	                                 pop r13	      1356	channel.c	ELSE_2	FUNCTION_36
0x4002ea3	            0x415e	                                 pop r14	      1356	channel.c	ELSE_2	FUNCTION_36
0x4002ea5	              0xc3	                                     ret	      1356	channel.c	ELSE_2	FUNCTION_36
free_unused_jobs_contents	IF,1:ELSE,0:FOR,1:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,2	34
0x4007b1a	            0x4155	                                push r13	      5360	channel.c	FUNCTION_123
0x4007b1c	            0x4154	                                push r12	      5360	channel.c	FUNCTION_123
0x4007b1e	              0x55	                                push rbp	      5360	channel.c	FUNCTION_123
0x4007b1f	              0x53	                                push rbx	      5360	channel.c	FUNCTION_123
0x4007b20	        0x4883ec08	                              sub rsp, 8	      5360	channel.c	FUNCTION_123
0x4007b24	    0x488b1d000000	            mov rbx, qword [0x04007b2b] 	      5364	channel.c	FUNCTION_123	FOR_1
0x4007b2b	          0x4885db	                           test rbx, rbx	      5364	channel.c	FUNCTION_123	FOR_1
0x4007b2e	            0x7439	                            je 0x4007b69	      5364	channel.c	FUNCTION_123	FOR_1
0x4007b30	          0x4189f4	                           mov r12d, esi	      5364	channel.c	FUNCTION_123	FOR_1
0x4007b33	            0x89fd	                            mov ebp, edi	      5364	channel.c	FUNCTION_123	FOR_1
0x4007b35	    0x41bd00000000	                             mov r13d, 0	      5364	channel.c	FUNCTION_123	FOR_1
0x4007b3b	            0x89e8	                            mov eax, ebp	      5365	channel.c	FUNCTION_123	FOR_1	IF_1
0x4007b3d	          0x33435c	             xor eax, dword [rbx + 0x5c]	      5365	channel.c	FUNCTION_123	FOR_1	IF_1
0x4007b40	          0x4485e0	                          test eax, r12d	      5365	channel.c	FUNCTION_123	FOR_1	IF_1
0x4007b43	            0x741a	                            je 0x4007b5f	      5365	channel.c	FUNCTION_123	FOR_1	IF_1
0x4007b45	          0x4889df	                            mov rdi, rbx	      5366	channel.c	FUNCTION_123	FOR_1	IF_1	CALL_1
0x4007b48	      0xe80686ffff	               call sym.job_still_useful	      5366	channel.c	FUNCTION_123	FOR_1	IF_1	CALL_1
0x4007b4d	            0x85c0	                           test eax, eax	      5366	channel.c	FUNCTION_123	FOR_1	IF_1	CALL_1
0x4007b4f	            0x750e	                           jne 0x4007b5f	      5366	channel.c	FUNCTION_123	FOR_1	IF_1	CALL_1
0x4007b51	          0x4889df	                            mov rdi, rbx	      5370	channel.c	FUNCTION_123	FOR_1	IF_1	CALL_2
0x4007b54	      0xe89fceffff	              call sym.job_free_contents	      5370	channel.c	FUNCTION_123	FOR_1	IF_1	CALL_2
0x4007b59	    0x41bd01000000	                             mov r13d, 1	      5371	channel.c	FUNCTION_123	FOR_1	IF_1
0x4007b5f	          0x488b1b	                    mov rbx, qword [rbx]	      5364	channel.c	FUNCTION_123	FOR_1
0x4007b62	          0x4885db	                           test rbx, rbx	      5364	channel.c	FUNCTION_123	FOR_1
0x4007b65	            0x75d4	                           jne 0x4007b3b	      5364	channel.c	FUNCTION_123	FOR_1
0x4007b67	            0xeb06	                           jmp 0x4007b6f	      5364	channel.c	FUNCTION_123	FOR_1
0x4007b69	    0x41bd00000000	                             mov r13d, 0	      5361	channel.c	FUNCTION_123
0x4007b6f	          0x4489e8	                           mov eax, r13d	      5374	channel.c	FUNCTION_123
0x4007b72	        0x4883c408	                              add rsp, 8	      5374	channel.c	FUNCTION_123
0x4007b76	              0x5b	                                 pop rbx	      5374	channel.c	FUNCTION_123
0x4007b77	              0x5d	                                 pop rbp	      5374	channel.c	FUNCTION_123
0x4007b78	            0x415c	                                 pop r12	      5374	channel.c	FUNCTION_123
0x4007b7a	            0x415d	                                 pop r13	      5374	channel.c	FUNCTION_123
0x4007b7c	              0xc3	                                     ret	      5374	channel.c	FUNCTION_123
get_job_options	IF,117:ELSE,44:FOR,2:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,153	1150
0x4005a0a	            0x4157	                                push r15	      4494	channel.c	FUNCTION_107
0x4005a0c	            0x4156	                                push r14	      4494	channel.c	FUNCTION_107
0x4005a0e	            0x4155	                                push r13	      4494	channel.c	FUNCTION_107
0x4005a10	            0x4154	                                push r12	      4494	channel.c	FUNCTION_107
0x4005a12	              0x55	                                push rbp	      4494	channel.c	FUNCTION_107
0x4005a13	              0x53	                                push rbx	      4494	channel.c	FUNCTION_107
0x4005a14	    0x4881ecb80000	                           sub rsp, 0xb8	      4494	channel.c	FUNCTION_107
0x4005a1b	        0x89542408	                mov dword [rsp + 8], edx	      4494	channel.c	FUNCTION_107
0x4005a1f	        0x894c240c	              mov dword [rsp + 0xc], ecx	      4494	channel.c	FUNCTION_107
0x4005a23	    0x64488b042528	                mov rax, qword fs:[0x28]	      4494	channel.c	FUNCTION_107
0x4005a2c	    0x48898424a800	             mov qword [rsp + 0xa8], rax	      4494	channel.c	FUNCTION_107
0x4005a34	            0x31c0	                            xor eax, eax	      4494	channel.c	FUNCTION_107
0x4005a36	            0x8b07	                    mov eax, dword [rdi]	      4502	channel.c	FUNCTION_107	IF_1
0x4005a38	    0x41be01000000	                             mov r14d, 1	      4503	channel.c	FUNCTION_107	IF_1
0x4005a3e	            0x85c0	                           test eax, eax	      4502	channel.c	FUNCTION_107	IF_1
0x4005a40	     0xf846b120000	                            je 0x4006cb1	      4502	channel.c	FUNCTION_107	IF_1
0x4005a46	          0x4989f7	                            mov r15, rsi	      4502	channel.c	FUNCTION_107	IF_1
0x4005a49	          0x83f806	                              cmp eax, 6	      4504	channel.c	FUNCTION_107	IF_2
0x4005a4c	            0x7427	                            je 0x4005a75	      4504	channel.c	FUNCTION_107	IF_2
0x4005a4e	      0xba05000000	                              mov edx, 5	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x4005a53	      0xbe00000000	                              mov esi, 0	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x4005a58	      0xbf00000000	                              mov edi, 0	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x4005a5d	      0xe800000000	                          call 0x4005a62	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x4005a62	          0x4889c7	                            mov rdi, rax	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x4005a65	      0xe800000000	                          call 0x4005a6a	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x4005a6a	    0x41be00000000	                             mov r14d, 0	      4507	channel.c	FUNCTION_107	IF_2
0x4005a70	      0xe93c120000	                           jmp 0x4006cb1	      4507	channel.c	FUNCTION_107	IF_2
0x4005a75	        0x488b4708	                mov rax, qword [rdi + 8]	      4509	channel.c	FUNCTION_107
0x4005a79	          0x4885c0	                           test rax, rax	      4510	channel.c	FUNCTION_107	IF_3
0x4005a7c	     0xf8421120000	                            je 0x4006ca3	      4510	channel.c	FUNCTION_107	IF_3
0x4005a82	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      4513	channel.c	FUNCTION_107
0x4005a86	            0x89d5	                            mov ebp, edx	      4513	channel.c	FUNCTION_107
0x4005a88	        0x488b5830	            mov rbx, qword [rax + 0x30] 	      4514	channel.c	FUNCTION_107	FOR_1
0x4005a8c	            0x85d2	                           test edx, edx	      4514	channel.c	FUNCTION_107	FOR_1
0x4005a8e	     0xf8e58120000	                           jle 0x4006cec	      4514	channel.c	FUNCTION_107	FOR_1
0x4005a94	        0x8b742408	                mov esi, dword [rsp + 8]	      4554	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	IF_18
0x4005a98	            0x89f0	                            mov eax, esi	      4554	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	IF_18
0x4005a9a	      0x2500000100	                        and eax, 0x10000	      4554	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	IF_18
0x4005a9f	        0x89442410	             mov dword [rsp + 0x10], eax	      4554	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	IF_18
0x4005aa3	            0x89f0	                            mov eax, esi	      4976	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115	IF_116
0x4005aa5	    0x81e600000010	                     and esi, 0x10000000	      4976	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115	IF_116
0x4005aab	        0x89742414	             mov dword [rsp + 0x14], esi	      4976	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115	IF_116
0x4005aaf	            0x89c6	                            mov esi, eax	      4963	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	IF_113
0x4005ab1	    0x81e600400000	                         and esi, 0x4000	      4963	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	IF_113
0x4005ab7	        0x89742418	             mov dword [rsp + 0x18], esi	      4963	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	IF_113
0x4005abb	        0x488b4308	                mov rax, qword [rbx + 8]	      4515	channel.c	FUNCTION_107	FOR_1	IF_4	CALL_3
0x4005abf	    0x483d00000000	                              cmp rax, 0	      4515	channel.c	FUNCTION_107	FOR_1	IF_4	CALL_3
0x4005ac5	     0xf849b110000	                            je 0x4006c66	      4515	channel.c	FUNCTION_107	FOR_1	IF_4	CALL_3
0x4005acb	          0x4885c0	                           test rax, rax	      4515	channel.c	FUNCTION_107	FOR_1	IF_4	CALL_3
0x4005ace	     0xf8492110000	                            je 0x4006c66	      4515	channel.c	FUNCTION_107	FOR_1	IF_4	CALL_3
0x4005ad4	          0x4889df	                            mov rdi, rbx	      4517	channel.c	FUNCTION_107	FOR_1	IF_4	CALL_4
0x4005ad7	      0xe800000000	                          call 0x4005adc	      4517	channel.c	FUNCTION_107	FOR_1	IF_4	CALL_4
0x4005adc	          0x4989c5	                            mov r13, rax	      4517	channel.c	FUNCTION_107	FOR_1	IF_4	CALL_4
0x4005adf	          0x4989c6	                            mov r14, rax	      4517	channel.c	FUNCTION_107	FOR_1	IF_4	CALL_4
0x4005ae2	        0x4c8b6308	                mov r12, qword [rbx + 8]	      4519	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	CALL_5
0x4005ae6	      0xbf00000000	                              mov edi, 0	      4519	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	CALL_5
0x4005aeb	      0xb905000000	                              mov ecx, 5	      4519	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	CALL_5
0x4005af0	          0x4c89e6	                            mov rsi, r12	      4519	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	CALL_5
0x4005af3	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4519	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	CALL_5
0x4005af5	           0xf97c2	                                 seta dl	      4519	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	CALL_5
0x4005af8	           0xf92c0	                                 setb al	      4519	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	CALL_5
0x4005afb	            0x38c2	                              cmp dl, al	      4519	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	CALL_5
0x4005afd	            0x752f	                           jne 0x4005b2e	      4519	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	CALL_5
0x4005aff	      0xf644240801	                  test byte [rsp + 8], 1	      4521	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	IF_6
0x4005b04	     0xf846a110000	                            je 0x4006c74	      4521	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	IF_6
0x4005b0a	        0x498d5708	                      lea rdx, [r15 + 8]	      4523	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	IF_7	CALL_6
0x4005b0e	      0xb901000000	                              mov ecx, 1	      4523	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	IF_7	CALL_6
0x4005b13	          0x4c89fe	                            mov rsi, r15	      4523	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	IF_7	CALL_6
0x4005b16	          0x4c89ef	                            mov rdi, r13	      4523	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	IF_7	CALL_6
0x4005b19	      0xe866abffff	                    call sym.handle_mode	      4523	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	IF_7	CALL_6
0x4005b1e	          0x4189c6	                           mov r14d, eax	      4523	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	IF_7	CALL_6
0x4005b21	            0x85c0	                           test eax, eax	      4523	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	IF_7	CALL_6
0x4005b23	     0xf853a110000	                           jne 0x4006c63	      4523	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	IF_7	CALL_6
0x4005b29	      0xe983110000	                           jmp 0x4006cb1	      4523	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	IF_7	CALL_6
0x4005b2e	      0xbf00000000	                              mov edi, 0	      4526	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	CALL_7
0x4005b33	      0xb908000000	                              mov ecx, 8	      4526	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	CALL_7
0x4005b38	          0x4c89e6	                            mov rsi, r12	      4526	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	CALL_7
0x4005b3b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4526	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	CALL_7
0x4005b3d	           0xf97c2	                                 seta dl	      4526	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	CALL_7
0x4005b40	           0xf92c0	                                 setb al	      4526	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	CALL_7
0x4005b43	            0x38c2	                              cmp dl, al	      4526	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	CALL_7
0x4005b45	            0x752f	                           jne 0x4005b76	      4526	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	CALL_7
0x4005b47	      0xf644240802	                  test byte [rsp + 8], 2	      4528	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	IF_9
0x4005b4c	     0xf8422110000	                            je 0x4006c74	      4528	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	IF_9
0x4005b52	        0x498d570c	                    lea rdx, [r15 + 0xc]	      4530	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	IF_10	CALL_8
0x4005b56	      0xb902000000	                              mov ecx, 2	      4530	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	IF_10	CALL_8
0x4005b5b	          0x4c89fe	                            mov rsi, r15	      4530	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	IF_10	CALL_8
0x4005b5e	          0x4c89ef	                            mov rdi, r13	      4530	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	IF_10	CALL_8
0x4005b61	      0xe81eabffff	                    call sym.handle_mode	      4530	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	IF_10	CALL_8
0x4005b66	          0x4189c6	                           mov r14d, eax	      4530	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	IF_10	CALL_8
0x4005b69	            0x85c0	                           test eax, eax	      4530	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	IF_10	CALL_8
0x4005b6b	     0xf85f2100000	                           jne 0x4006c63	      4530	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	IF_10	CALL_8
0x4005b71	      0xe93b110000	                           jmp 0x4006cb1	      4530	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	IF_10	CALL_8
0x4005b76	      0xbf00000000	                              mov edi, 0	      4534	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	CALL_9
0x4005b7b	      0xb909000000	                              mov ecx, 9	      4534	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	CALL_9
0x4005b80	          0x4c89e6	                            mov rsi, r12	      4534	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	CALL_9
0x4005b83	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4534	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	CALL_9
0x4005b85	           0xf97c2	                                 seta dl	      4534	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	CALL_9
0x4005b88	           0xf92c0	                                 setb al	      4534	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	CALL_9
0x4005b8b	            0x38c2	                              cmp dl, al	      4534	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	CALL_9
0x4005b8d	            0x752f	                           jne 0x4005bbe	      4534	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	CALL_9
0x4005b8f	      0xf644240804	                  test byte [rsp + 8], 4	      4536	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	IF_12
0x4005b94	     0xf84da100000	                            je 0x4006c74	      4536	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	IF_12
0x4005b9a	        0x498d5710	                   lea rdx, [r15 + 0x10]	      4538	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	IF_13	CALL_10
0x4005b9e	      0xb904000000	                              mov ecx, 4	      4538	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	IF_13	CALL_10
0x4005ba3	          0x4c89fe	                            mov rsi, r15	      4538	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	IF_13	CALL_10
0x4005ba6	          0x4c89ef	                            mov rdi, r13	      4538	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	IF_13	CALL_10
0x4005ba9	      0xe8d6aaffff	                    call sym.handle_mode	      4538	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	IF_13	CALL_10
0x4005bae	          0x4189c6	                           mov r14d, eax	      4538	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	IF_13	CALL_10
0x4005bb1	            0x85c0	                           test eax, eax	      4538	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	IF_13	CALL_10
0x4005bb3	     0xf85aa100000	                           jne 0x4006c63	      4538	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	IF_13	CALL_10
0x4005bb9	      0xe9f3100000	                           jmp 0x4006cb1	      4538	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	IF_13	CALL_10
0x4005bbe	      0xbf00000000	                              mov edi, 0	      4542	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	CALL_11
0x4005bc3	      0xb909000000	                              mov ecx, 9	      4542	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	CALL_11
0x4005bc8	          0x4c89e6	                            mov rsi, r12	      4542	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	CALL_11
0x4005bcb	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4542	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	CALL_11
0x4005bcd	           0xf97c2	                                 seta dl	      4542	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	CALL_11
0x4005bd0	           0xf92c0	                                 setb al	      4542	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	CALL_11
0x4005bd3	            0x38c2	                              cmp dl, al	      4542	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	CALL_11
0x4005bd5	            0x752f	                           jne 0x4005c06	      4542	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	CALL_11
0x4005bd7	      0xf644240808	                  test byte [rsp + 8], 8	      4544	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	IF_15
0x4005bdc	     0xf8492100000	                            je 0x4006c74	      4544	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	IF_15
0x4005be2	        0x498d5714	                   lea rdx, [r15 + 0x14]	      4546	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	IF_16	CALL_12
0x4005be6	      0xb908000000	                              mov ecx, 8	      4546	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	IF_16	CALL_12
0x4005beb	          0x4c89fe	                            mov rsi, r15	      4546	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	IF_16	CALL_12
0x4005bee	          0x4c89ef	                            mov rdi, r13	      4546	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	IF_16	CALL_12
0x4005bf1	      0xe88eaaffff	                    call sym.handle_mode	      4546	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	IF_16	CALL_12
0x4005bf6	          0x4189c6	                           mov r14d, eax	      4546	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	IF_16	CALL_12
0x4005bf9	            0x85c0	                           test eax, eax	      4546	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	IF_16	CALL_12
0x4005bfb	     0xf8562100000	                           jne 0x4006c63	      4546	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	IF_16	CALL_12
0x4005c01	      0xe9ab100000	                           jmp 0x4006cb1	      4546	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	IF_16	CALL_12
0x4005c06	      0xbf00000000	                              mov edi, 0	      4550	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_13
0x4005c0b	      0xb906000000	                              mov ecx, 6	      4550	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_13
0x4005c10	          0x4c89e6	                            mov rsi, r12	      4550	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_13
0x4005c13	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4550	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_13
0x4005c15	           0xf97c2	                                 seta dl	      4550	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_13
0x4005c18	           0xf92c0	                                 setb al	      4550	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_13
0x4005c1b	            0x38c2	                              cmp dl, al	      4550	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_13
0x4005c1d	            0x7436	                            je 0x4005c55	      4550	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_13
0x4005c1f	      0xbf00000000	                              mov edi, 0	      4551	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_14
0x4005c24	      0xb907000000	                              mov ecx, 7	      4551	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_14
0x4005c29	          0x4c89e6	                            mov rsi, r12	      4551	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_14
0x4005c2c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4551	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_14
0x4005c2e	           0xf97c2	                                 seta dl	      4551	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_14
0x4005c31	           0xf92c0	                                 setb al	      4551	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_14
0x4005c34	            0x38c2	                              cmp dl, al	      4551	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_14
0x4005c36	            0x741d	                            je 0x4005c55	      4551	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_14
0x4005c38	      0xbf00000000	                              mov edi, 0	      4552	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_15
0x4005c3d	      0xb907000000	                              mov ecx, 7	      4552	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_15
0x4005c42	          0x4c89e6	                            mov rsi, r12	      4552	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_15
0x4005c45	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4552	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_15
0x4005c47	           0xf97c2	                                 seta dl	      4552	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_15
0x4005c4a	           0xf92c0	                                 setb al	      4552	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_15
0x4005c4d	            0x38c2	                              cmp dl, al	      4552	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_15
0x4005c4f	     0xf8544010000	                           jne 0x4005d99	      4552	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_15
0x4005c55	      0x837c241000	               cmp dword [rsp + 0x10], 0	      4554	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	IF_18
0x4005c5a	     0xf8414100000	                            je 0x4006c74	      4554	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	IF_18
0x4005c60	      0x410fb60424	                   movzx eax, byte [r12]	      4556	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	IF_19	CALL_17
0x4005c65	    0x41bc03000000	                             mov r12d, 3	      4483	channel.c	FUNCTION_106
0x4005c6b	          0x83f869	                           cmp eax, 0x69	      4483	channel.c	FUNCTION_106
0x4005c6e	            0x740f	                            je 0x4005c7f	      4483	channel.c	FUNCTION_106
0x4005c70	          0x83f86f	                           cmp eax, 0x6f	      4483	channel.c	FUNCTION_106
0x4005c73	        0x410f95c4	                              setne r12b	      4483	channel.c	FUNCTION_106
0x4005c77	        0x450fb6e4	                        movzx r12d, r12b	      4483	channel.c	FUNCTION_106
0x4005c7b	        0x4183c401	                             add r12d, 1	      4483	channel.c	FUNCTION_106
0x4005c7f	          0x4c89ef	                            mov rdi, r13	      4417	channel.c	FUNCTION_103	CALL_1
0x4005c82	      0xe800000000	                          call 0x4005c87	      4417	channel.c	FUNCTION_103	CALL_1
0x4005c87	      0x418d4c24ff	                      lea ecx, [r12 - 1]	      4419	channel.c	FUNCTION_103
0x4005c8c	      0xba00000100	                        mov edx, 0x10000	      4419	channel.c	FUNCTION_103
0x4005c91	            0xd3e2	                             shl edx, cl	      4419	channel.c	FUNCTION_103
0x4005c93	          0x410917	                     or dword [r15], edx	      4419	channel.c	FUNCTION_103
0x4005c96	      0xbf00000000	                              mov edi, 0	      4420	channel.c	FUNCTION_103	IF_1	CALL_2
0x4005c9b	      0xb905000000	                              mov ecx, 5	      4420	channel.c	FUNCTION_103	IF_1	CALL_2
0x4005ca0	          0x4889c6	                            mov rsi, rax	      4420	channel.c	FUNCTION_103	IF_1	CALL_2
0x4005ca3	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4420	channel.c	FUNCTION_103	IF_1	CALL_2
0x4005ca5	           0xf97c1	                                 seta cl	      4420	channel.c	FUNCTION_103	IF_1	CALL_2
0x4005ca8	           0xf92c2	                                 setb dl	      4420	channel.c	FUNCTION_103	IF_1	CALL_2
0x4005cab	            0x38d1	                              cmp cl, dl	      4420	channel.c	FUNCTION_103	IF_1	CALL_2
0x4005cad	            0x7511	                           jne 0x4005cc0	      4420	channel.c	FUNCTION_103	IF_1	CALL_2
0x4005caf	          0x4589e4	                          mov r12d, r12d	      4421	channel.c	FUNCTION_103	IF_1
0x4005cb2	    0x43c744a71801	       mov dword [r15 + r12*4 + 0x18], 1	      4421	channel.c	FUNCTION_103	IF_1
0x4005cbb	      0xe9a30f0000	                           jmp 0x4006c63	      4421	channel.c	FUNCTION_103	IF_1
0x4005cc0	      0xbf00000000	                              mov edi, 0	      4422	channel.c	FUNCTION_103	ELSE_1	IF_2	CALL_3
0x4005cc5	      0xb905000000	                              mov ecx, 5	      4422	channel.c	FUNCTION_103	ELSE_1	IF_2	CALL_3
0x4005cca	          0x4889c6	                            mov rsi, rax	      4422	channel.c	FUNCTION_103	ELSE_1	IF_2	CALL_3
0x4005ccd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4422	channel.c	FUNCTION_103	ELSE_1	IF_2	CALL_3
0x4005ccf	           0xf97c1	                                 seta cl	      4422	channel.c	FUNCTION_103	ELSE_1	IF_2	CALL_3
0x4005cd2	           0xf92c2	                                 setb dl	      4422	channel.c	FUNCTION_103	ELSE_1	IF_2	CALL_3
0x4005cd5	            0x38d1	                              cmp cl, dl	      4422	channel.c	FUNCTION_103	ELSE_1	IF_2	CALL_3
0x4005cd7	            0x7511	                           jne 0x4005cea	      4422	channel.c	FUNCTION_103	ELSE_1	IF_2	CALL_3
0x4005cd9	          0x4589e6	                          mov r14d, r12d	      4423	channel.c	FUNCTION_103	ELSE_1	IF_2
0x4005cdc	    0x43c744b71800	       mov dword [r15 + r14*4 + 0x18], 0	      4423	channel.c	FUNCTION_103	ELSE_1	IF_2
0x4005ce5	      0xe9790f0000	                           jmp 0x4006c63	      4423	channel.c	FUNCTION_103	ELSE_1	IF_2
0x4005cea	      0xbf00000000	                              mov edi, 0	      4424	channel.c	FUNCTION_103	ELSE_2	IF_3	CALL_4
0x4005cef	      0xb905000000	                              mov ecx, 5	      4424	channel.c	FUNCTION_103	ELSE_2	IF_3	CALL_4
0x4005cf4	          0x4889c6	                            mov rsi, rax	      4424	channel.c	FUNCTION_103	ELSE_2	IF_3	CALL_4
0x4005cf7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4424	channel.c	FUNCTION_103	ELSE_2	IF_3	CALL_4
0x4005cf9	           0xf97c1	                                 seta cl	      4424	channel.c	FUNCTION_103	ELSE_2	IF_3	CALL_4
0x4005cfc	           0xf92c2	                                 setb dl	      4424	channel.c	FUNCTION_103	ELSE_2	IF_3	CALL_4
0x4005cff	            0x38d1	                              cmp cl, dl	      4424	channel.c	FUNCTION_103	ELSE_2	IF_3	CALL_4
0x4005d01	            0x7511	                           jne 0x4005d14	      4424	channel.c	FUNCTION_103	ELSE_2	IF_3	CALL_4
0x4005d03	          0x4589e6	                          mov r14d, r12d	      4425	channel.c	FUNCTION_103	ELSE_2	IF_3
0x4005d06	    0x43c744b71802	       mov dword [r15 + r14*4 + 0x18], 2	      4425	channel.c	FUNCTION_103	ELSE_2	IF_3
0x4005d0f	      0xe94f0f0000	                           jmp 0x4006c63	      4425	channel.c	FUNCTION_103	ELSE_2	IF_3
0x4005d14	      0xbf00000000	                              mov edi, 0	      4426	channel.c	FUNCTION_103	ELSE_3	IF_4	CALL_5
0x4005d19	      0xb907000000	                              mov ecx, 7	      4426	channel.c	FUNCTION_103	ELSE_3	IF_4	CALL_5
0x4005d1e	          0x4889c6	                            mov rsi, rax	      4426	channel.c	FUNCTION_103	ELSE_3	IF_4	CALL_5
0x4005d21	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4426	channel.c	FUNCTION_103	ELSE_3	IF_4	CALL_5
0x4005d23	           0xf97c1	                                 seta cl	      4426	channel.c	FUNCTION_103	ELSE_3	IF_4	CALL_5
0x4005d26	           0xf92c2	                                 setb dl	      4426	channel.c	FUNCTION_103	ELSE_3	IF_4	CALL_5
0x4005d29	            0x38d1	                              cmp cl, dl	      4426	channel.c	FUNCTION_103	ELSE_3	IF_4	CALL_5
0x4005d2b	            0x7511	                           jne 0x4005d3e	      4426	channel.c	FUNCTION_103	ELSE_3	IF_4	CALL_5
0x4005d2d	          0x4589e6	                          mov r14d, r12d	      4427	channel.c	FUNCTION_103	ELSE_3	IF_4
0x4005d30	    0x43c744b71803	       mov dword [r15 + r14*4 + 0x18], 3	      4427	channel.c	FUNCTION_103	ELSE_3	IF_4
0x4005d39	      0xe9250f0000	                           jmp 0x4006c63	      4427	channel.c	FUNCTION_103	ELSE_3	IF_4
0x4005d3e	          0x80386f	                    cmp byte [rax], 0x6f	      4428	channel.c	FUNCTION_103	ELSE_4	IF_5	CALL_6
0x4005d41	            0x7529	                           jne 0x4005d6c	      4428	channel.c	FUNCTION_103	ELSE_4	IF_5	CALL_6
0x4005d43	        0x80780175	                cmp byte [rax + 1], 0x75	      4428	channel.c	FUNCTION_103	ELSE_4	IF_5	CALL_6
0x4005d47	            0x7523	                           jne 0x4005d6c	      4428	channel.c	FUNCTION_103	ELSE_4	IF_5	CALL_6
0x4005d49	        0x80780274	                cmp byte [rax + 2], 0x74	      4428	channel.c	FUNCTION_103	ELSE_4	IF_5	CALL_6
0x4005d4d	            0x751d	                           jne 0x4005d6c	      4428	channel.c	FUNCTION_103	ELSE_4	IF_5	CALL_6
0x4005d4f	        0x80780300	                   cmp byte [rax + 3], 0	      4428	channel.c	FUNCTION_103	ELSE_4	IF_5	CALL_6
0x4005d53	            0x7517	                           jne 0x4005d6c	      4428	channel.c	FUNCTION_103	ELSE_4	IF_5	CALL_6
0x4005d55	        0x4183fc02	                             cmp r12d, 2	      4428	channel.c	FUNCTION_103	ELSE_4	IF_5	CALL_6
0x4005d59	            0x7511	                           jne 0x4005d6c	      4428	channel.c	FUNCTION_103	ELSE_4	IF_5	CALL_6
0x4005d5b	          0x4589e6	                          mov r14d, r12d	      4429	channel.c	FUNCTION_103	ELSE_4	IF_5
0x4005d5e	    0x43c744b71804	       mov dword [r15 + r14*4 + 0x18], 4	      4429	channel.c	FUNCTION_103	ELSE_4	IF_5
0x4005d67	      0xe9f70e0000	                           jmp 0x4006c63	      4429	channel.c	FUNCTION_103	ELSE_4	IF_5
0x4005d6c	          0x4989c5	                            mov r13, rax	      4429	channel.c	FUNCTION_103	ELSE_4	IF_5
0x4005d6f	      0xba05000000	                              mov edx, 5	      4432	channel.c	FUNCTION_103	ELSE_5	CALL_8
0x4005d74	      0xbe00000000	                              mov esi, 0	      4432	channel.c	FUNCTION_103	ELSE_5	CALL_8
0x4005d79	      0xbf00000000	                              mov edi, 0	      4432	channel.c	FUNCTION_103	ELSE_5	CALL_8
0x4005d7e	      0xe800000000	                          call 0x4005d83	      4432	channel.c	FUNCTION_103	ELSE_5	CALL_8
0x4005d83	          0x4c89ee	                            mov rsi, r13	      4432	channel.c	FUNCTION_103	ELSE_5	CALL_8
0x4005d86	          0x4889c7	                            mov rdi, rax	      4432	channel.c	FUNCTION_103	ELSE_5	CALL_8
0x4005d89	      0xe800000000	                          call 0x4005d8e	      4432	channel.c	FUNCTION_103	ELSE_5	CALL_8
0x4005d8e	    0x41be00000000	                             mov r14d, 0	      4557	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	IF_19
0x4005d94	      0xe9180f0000	                           jmp 0x4006cb1	      4557	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	IF_19
0x4005d99	      0xbf00000000	                              mov edi, 0	      4559	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_18
0x4005d9e	      0xb908000000	                              mov ecx, 8	      4559	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_18
0x4005da3	          0x4c89e6	                            mov rsi, r12	      4559	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_18
0x4005da6	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4559	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_18
0x4005da8	           0xf97c2	                                 seta dl	      4559	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_18
0x4005dab	           0xf92c0	                                 setb al	      4559	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_18
0x4005dae	            0x38c2	                              cmp dl, al	      4559	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_18
0x4005db0	            0x7432	                            je 0x4005de4	      4559	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_18
0x4005db2	      0xbf00000000	                              mov edi, 0	      4560	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_19
0x4005db7	      0xb909000000	                              mov ecx, 9	      4560	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_19
0x4005dbc	          0x4c89e6	                            mov rsi, r12	      4560	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_19
0x4005dbf	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4560	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_19
0x4005dc1	           0xf97c2	                                 seta dl	      4560	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_19
0x4005dc4	           0xf92c0	                                 setb al	      4560	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_19
0x4005dc7	            0x38c2	                              cmp dl, al	      4560	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_19
0x4005dc9	            0x7419	                            je 0x4005de4	      4560	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_19
0x4005dcb	      0xbf00000000	                              mov edi, 0	      4561	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_20
0x4005dd0	      0xb909000000	                              mov ecx, 9	      4561	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_20
0x4005dd5	          0x4c89e6	                            mov rsi, r12	      4561	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_20
0x4005dd8	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4561	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_20
0x4005dda	           0xf97c2	                                 seta dl	      4561	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_20
0x4005ddd	           0xf92c0	                                 setb al	      4561	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_20
0x4005de0	            0x38c2	                              cmp dl, al	      4561	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_20
0x4005de2	            0x755c	                           jne 0x4005e40	      4561	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_20
0x4005de4	      0x410fb61424	                   movzx edx, byte [r12]	      4563	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_21
0x4005de9	      0xb803000000	                              mov eax, 3	      4483	channel.c	FUNCTION_106
0x4005dee	          0x83fa69	                           cmp edx, 0x69	      4483	channel.c	FUNCTION_106
0x4005df1	            0x740c	                            je 0x4005dff	      4483	channel.c	FUNCTION_106
0x4005df3	          0x83fa6f	                           cmp edx, 0x6f	      4483	channel.c	FUNCTION_106
0x4005df6	           0xf95c0	                                setne al	      4483	channel.c	FUNCTION_106
0x4005df9	           0xfb6c0	                           movzx eax, al	      4483	channel.c	FUNCTION_106
0x4005dfc	          0x83c001	                              add eax, 1	      4483	channel.c	FUNCTION_106
0x4005dff	      0x837c241000	               cmp dword [rsp + 0x10], 0	      4565	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	IF_21
0x4005e04	     0xf846a0e0000	                            je 0x4006c74	      4565	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	IF_21
0x4005e0a	          0x8d48ff	                      lea ecx, [rax - 1]	      4567	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20
0x4005e0d	      0xba00000800	                        mov edx, 0x80000	      4567	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20
0x4005e12	            0xd3e2	                             shl edx, cl	      4567	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20
0x4005e14	          0x410917	                     or dword [r15], edx	      4567	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20
0x4005e17	          0x4189c4	                           mov r12d, eax	      4569	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_22
0x4005e1a	          0x4c89e0	                            mov rax, r12	      4569	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_22
0x4005e1d	        0x48c1e006	                              shl rax, 6	      4569	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_22
0x4005e21	      0x498d440420	            lea rax, [r12 + rax + 0x20] 	      4569	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_22
0x4005e26	      0x498d740708	                lea rsi, [r15 + rax + 8]	      4569	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_22
0x4005e2b	          0x4c89ef	                            mov rdi, r13	      4569	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_22
0x4005e2e	      0xe800000000	                          call 0x4005e33	      4569	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_22
0x4005e33	    0x4b8984e73001	    mov qword [r15 + r12*8 + 0x130], rax	      4568	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20
0x4005e3b	      0xe9230e0000	                           jmp 0x4006c63	      4568	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20
0x4005e40	      0x410fb60424	                   movzx eax, byte [r12]	      4571	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	CALL_23
0x4005e45	        0x8944241c	             mov dword [rsp + 0x1c], eax	      4571	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	CALL_23
0x4005e49	          0x83f870	                           cmp eax, 0x70	      4571	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	CALL_23
0x4005e4c	            0x7543	                           jne 0x4005e91	      4571	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	CALL_23
0x4005e4e	    0x41807c240174	                cmp byte [r12 + 1], 0x74	      4571	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	CALL_23
0x4005e54	     0xf859a0e0000	                           jne 0x4006cf4	      4571	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	CALL_23
0x4005e5a	    0x41807c240279	                cmp byte [r12 + 2], 0x79	      4571	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	CALL_23
0x4005e60	     0xf858e0e0000	                           jne 0x4006cf4	      4571	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	CALL_23
0x4005e66	    0x41807c240300	                   cmp byte [r12 + 3], 0	      4571	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	CALL_23
0x4005e6c	     0xf85820e0000	                           jne 0x4006cf4	      4571	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	CALL_23
0x4005e72	      0xf644240801	                  test byte [rsp + 8], 1	      4573	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	IF_23
0x4005e77	     0xf84f70d0000	                            je 0x4006c74	      4573	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	IF_23
0x4005e7d	          0x4c89ef	                            mov rdi, r13	      4575	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	CALL_24
0x4005e80	      0xe800000000	                          call 0x4005e85	      4575	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	CALL_24
0x4005e85	    0x418987600100	            mov dword [r15 + 0x160], eax	      4575	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	CALL_24
0x4005e8c	      0xe9d20d0000	                           jmp 0x4006c63	      4575	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	CALL_24
0x4005e91	      0xbe00000000	                              mov esi, 0	      4577	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_25
0x4005e96	          0x4c89e7	                            mov rdi, r12	      4577	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_25
0x4005e99	      0xe800000000	                          call 0x4005e9e	      4577	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_25
0x4005e9e	            0x85c0	                           test eax, eax	      4577	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_25
0x4005ea0	            0x7436	                            je 0x4005ed8	      4577	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_25
0x4005ea2	      0xbf00000000	                              mov edi, 0	      4578	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_26
0x4005ea7	      0xb908000000	                              mov ecx, 8	      4578	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_26
0x4005eac	          0x4c89e6	                            mov rsi, r12	      4578	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_26
0x4005eaf	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4578	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_26
0x4005eb1	           0xf97c2	                                 seta dl	      4578	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_26
0x4005eb4	           0xf92c0	                                 setb al	      4578	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_26
0x4005eb7	            0x38c2	                              cmp dl, al	      4578	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_26
0x4005eb9	            0x741d	                            je 0x4005ed8	      4578	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_26
0x4005ebb	      0xbf00000000	                              mov edi, 0	      4579	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_27
0x4005ec0	      0xb908000000	                              mov ecx, 8	      4579	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_27
0x4005ec5	          0x4c89e6	                            mov rsi, r12	      4579	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_27
0x4005ec8	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4579	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_27
0x4005eca	           0xf97c2	                                 seta dl	      4579	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_27
0x4005ecd	           0xf92c0	                                 setb al	      4579	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_27
0x4005ed0	            0x38c2	                              cmp dl, al	      4579	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_27
0x4005ed2	     0xf85de000000	                           jne 0x4005fb6	      4579	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_27
0x4005ed8	    0x41bc03000000	                             mov r12d, 3	      4483	channel.c	FUNCTION_106
0x4005ede	      0x837c241c69	           cmp dword [rsp + 0x1c], 0x69 	      4483	channel.c	FUNCTION_106
0x4005ee3	            0x7419	                            je 0x4005efe	      4483	channel.c	FUNCTION_106
0x4005ee5	      0x837c241c6f	           cmp dword [rsp + 0x1c], 0x6f 	      4483	channel.c	FUNCTION_106
0x4005eea	        0x410f95c4	                              setne r12b	      4483	channel.c	FUNCTION_106
0x4005eee	        0x450fb6e4	                        movzx r12d, r12b	      4483	channel.c	FUNCTION_106
0x4005ef2	        0x4183c401	                             add r12d, 1	      4483	channel.c	FUNCTION_106
0x4005ef6	            0xeb06	                           jmp 0x4005efe	      4483	channel.c	FUNCTION_106
0x4005ef8	    0x41bc02000000	                             mov r12d, 2	      4483	channel.c	FUNCTION_106
0x4005efe	      0x448964241c	            mov dword [rsp + 0x1c], r12d	      4581	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_28
0x4005f03	      0x837c241000	               cmp dword [rsp + 0x10], 0	      4583	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_25
0x4005f08	     0xf84660d0000	                            je 0x4006c74	      4583	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_25
0x4005f0e	      0x418d4c24ff	                      lea ecx, [r12 - 1]	      4585	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24
0x4005f13	      0xb800000001	                      mov eax, 0x1000000	      4585	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24
0x4005f18	            0xd3e0	                             shl eax, cl	      4585	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24
0x4005f1a	          0x410907	                     or dword [r15], eax	      4585	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24
0x4005f1d	          0x4c89ef	                            mov rdi, r13	      4586	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_29
0x4005f20	      0xe800000000	                          call 0x4005f25	      4586	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_29
0x4005f25	          0x4589e4	                          mov r12d, r12d	      4586	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_29
0x4005f28	    0x438984a75001	    mov dword [r15 + r12*4 + 0x150], eax	      4586	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_29
0x4005f30	            0x85c0	                           test eax, eax	      4587	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26
0x4005f32	            0x7f3c	                            jg 0x4005f70	      4587	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26
0x4005f34	          0x4c89f7	                            mov rdi, r14	      4589	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x4005f37	      0xe800000000	                          call 0x4005f3c	      4589	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x4005f3c	          0x4889c5	                            mov rbp, rax	      4589	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x4005f3f	        0x488b5b08	                mov rbx, qword [rbx + 8]	      4589	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x4005f43	      0xba05000000	                              mov edx, 5	      4589	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x4005f48	      0xbe00000000	                              mov esi, 0	      4589	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x4005f4d	      0xbf00000000	                              mov edi, 0	      4589	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x4005f52	      0xe800000000	                          call 0x4005f57	      4589	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x4005f57	          0x4889ea	                            mov rdx, rbp	      4589	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x4005f5a	          0x4889de	                            mov rsi, rbx	      4589	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x4005f5d	          0x4889c7	                            mov rdi, rax	      4589	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x4005f60	      0xe800000000	                          call 0x4005f65	      4589	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x4005f65	    0x41be00000000	                             mov r14d, 0	      4590	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26
0x4005f6b	      0xe9410d0000	                           jmp 0x4006cb1	      4590	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26
0x4005f70	            0x89c7	                            mov edi, eax	      4592	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_33
0x4005f72	      0xe800000000	                          call 0x4005f77	      4592	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_33
0x4005f77	          0x4885c0	                           test rax, rax	      4592	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_33
0x4005f7a	     0xf85e30c0000	                           jne 0x4006c63	      4592	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_33
0x4005f80	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      4594	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_35
0x4005f84	    0x49639c875001	movsxd rbx, dword [r15 + rax*4 + 0x150] 	      4594	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_35
0x4005f8c	      0xba05000000	                              mov edx, 5	      4594	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_35
0x4005f91	      0xbe00000000	                              mov esi, 0	      4594	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_35
0x4005f96	      0xbf00000000	                              mov edi, 0	      4594	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_35
0x4005f9b	      0xe800000000	                          call 0x4005fa0	      4594	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_35
0x4005fa0	          0x4889de	                            mov rsi, rbx	      4594	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_35
0x4005fa3	          0x4889c7	                            mov rdi, rax	      4594	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_35
0x4005fa6	      0xe800000000	                          call 0x4005fab	      4594	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_35
0x4005fab	    0x41be00000000	                             mov r14d, 0	      4595	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27
0x4005fb1	      0xe9fb0c0000	                           jmp 0x4006cb1	      4595	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27
0x4005fb6	      0xbe00000000	                              mov esi, 0	      4598	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_36
0x4005fbb	          0x4c89e7	                            mov rdi, r12	      4598	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_36
0x4005fbe	      0xe800000000	                          call 0x4005fc3	      4598	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_36
0x4005fc3	            0x85c0	                           test eax, eax	      4598	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_36
0x4005fc5	            0x7411	                            je 0x4005fd8	      4598	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_36
0x4005fc7	      0xbe00000000	                              mov esi, 0	      4599	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_37
0x4005fcc	          0x4c89e7	                            mov rdi, r12	      4599	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_37
0x4005fcf	      0xe800000000	                          call 0x4005fd4	      4599	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_37
0x4005fd4	            0x85c0	                           test eax, eax	      4599	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_37
0x4005fd6	            0x7550	                           jne 0x4006028	      4599	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_37
0x4005fd8	    0x41bc03000000	                             mov r12d, 3	      4483	channel.c	FUNCTION_106
0x4005fde	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      4483	channel.c	FUNCTION_106
0x4005fe2	          0x83f869	                           cmp eax, 0x69	      4483	channel.c	FUNCTION_106
0x4005fe5	            0x740f	                            je 0x4005ff6	      4483	channel.c	FUNCTION_106
0x4005fe7	          0x83f86f	                           cmp eax, 0x6f	      4483	channel.c	FUNCTION_106
0x4005fea	        0x410f95c4	                              setne r12b	      4483	channel.c	FUNCTION_106
0x4005fee	        0x450fb6e4	                        movzx r12d, r12b	      4483	channel.c	FUNCTION_106
0x4005ff2	        0x4183c401	                             add r12d, 1	      4483	channel.c	FUNCTION_106
0x4005ff6	      0x837c241000	               cmp dword [rsp + 0x10], 0	      4603	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	IF_29
0x4005ffb	     0xf84730c0000	                            je 0x4006c74	      4603	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	IF_29
0x4006001	      0x418d4c24ff	                      lea ecx, [r12 - 1]	      4605	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28
0x4006006	      0xb800000020	                     mov eax, 0x20000000	      4605	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28
0x400600b	            0xd3e0	                             shl eax, cl	      4605	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28
0x400600d	          0x410907	                     or dword [r15], eax	      4605	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28
0x4006010	          0x4c89ef	                            mov rdi, r13	      4606	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_39
0x4006013	      0xe800000000	                          call 0x4006018	      4606	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_39
0x4006018	          0x4589e4	                          mov r12d, r12d	      4606	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_39
0x400601b	    0x438984a76401	    mov dword [r15 + r12*4 + 0x164], eax	      4606	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_39
0x4006023	      0xe93b0c0000	                           jmp 0x4006c63	      4606	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_39
0x4006028	      0xbe00000000	                              mov esi, 0	      4608	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_40
0x400602d	          0x4c89e7	                            mov rdi, r12	      4608	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_40
0x4006030	      0xe800000000	                          call 0x4006035	      4608	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_40
0x4006035	            0x85c0	                           test eax, eax	      4608	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_40
0x4006037	            0x7411	                            je 0x400604a	      4608	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_40
0x4006039	      0xbe00000000	                              mov esi, 0	      4609	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_41
0x400603e	          0x4c89e7	                            mov rdi, r12	      4609	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_41
0x4006041	      0xe800000000	                          call 0x4006046	      4609	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_41
0x4006046	            0x85c0	                           test eax, eax	      4609	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_41
0x4006048	            0x7551	                           jne 0x400609b	      4609	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_41
0x400604a	    0x41bc03000000	                             mov r12d, 3	      4483	channel.c	FUNCTION_106
0x4006050	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      4483	channel.c	FUNCTION_106
0x4006054	          0x83f869	                           cmp eax, 0x69	      4483	channel.c	FUNCTION_106
0x4006057	            0x740f	                            je 0x4006068	      4483	channel.c	FUNCTION_106
0x4006059	          0x83f86f	                           cmp eax, 0x6f	      4483	channel.c	FUNCTION_106
0x400605c	        0x410f95c4	                              setne r12b	      4483	channel.c	FUNCTION_106
0x4006060	        0x450fb6e4	                        movzx r12d, r12b	      4483	channel.c	FUNCTION_106
0x4006064	        0x4183c401	                             add r12d, 1	      4483	channel.c	FUNCTION_106
0x4006068	      0x837c241000	               cmp dword [rsp + 0x10], 0	      4613	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	IF_31
0x400606d	     0xf84010c0000	                            je 0x4006c74	      4613	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	IF_31
0x4006073	      0x418d4c24ff	                      lea ecx, [r12 - 1]	      4615	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30
0x4006078	      0xb801000000	                              mov eax, 1	      4615	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30
0x400607d	            0xd3e0	                             shl eax, cl	      4615	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30
0x400607f	        0x41094704	                 or dword [r15 + 4], eax	      4615	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30
0x4006083	          0x4c89ef	                            mov rdi, r13	      4616	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_43
0x4006086	      0xe800000000	                          call 0x400608b	      4616	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_43
0x400608b	          0x4589e4	                          mov r12d, r12d	      4616	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_43
0x400608e	    0x438984a77401	    mov dword [r15 + r12*4 + 0x174], eax	      4616	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_43
0x4006096	      0xe9c80b0000	                           jmp 0x4006c63	      4616	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_43
0x400609b	      0xbe00000000	                              mov esi, 0	      4618	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	CALL_44
0x40060a0	          0x4c89e7	                            mov rdi, r12	      4618	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	CALL_44
0x40060a3	      0xe800000000	                          call 0x40060a8	      4618	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	CALL_44
0x40060a8	            0x85c0	                           test eax, eax	      4618	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	CALL_44
0x40060aa	            0x7415	                            je 0x40060c1	      4618	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	CALL_44
0x40060ac	      0xbe00000000	                              mov esi, 0	      4619	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	CALL_45
0x40060b1	          0x4c89e7	                            mov rdi, r12	      4619	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	CALL_45
0x40060b4	      0xe800000000	                          call 0x40060b9	      4619	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	CALL_45
0x40060b9	            0x85c0	                           test eax, eax	      4619	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	CALL_45
0x40060bb	     0xf8582000000	                           jne 0x4006143	      4619	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	CALL_45
0x40060c1	      0x837c241000	               cmp dword [rsp + 0x10], 0	      4623	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_33
0x40060c6	     0xf84a80b0000	                            je 0x4006c74	      4623	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_33
0x40060cc	    0x41807c240374	                cmp byte [r12 + 3], 0x74	      4625	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x40060d2	            0x7510	                           jne 0x40060e4	      4625	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x40060d4	    0x4d8da7900100	                  lea r12, [r15 + 0x190]	      4627	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x40060db	    0x41810f000040	                or dword [r15], 0x400000	      4628	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x40060e2	            0xeb0e	                           jmp 0x40060f2	      4628	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x40060e4	    0x4d8da7980100	                  lea r12, [r15 + 0x198]	      4632	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	ELSE_11
0x40060eb	    0x41810f000080	                or dword [r15], 0x800000	      4633	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	ELSE_11
0x40060f2	          0x4c89ef	                            mov rdi, r13	      4635	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	CALL_46
0x40060f5	      0xe800000000	                          call 0x40060fa	      4635	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	CALL_46
0x40060fa	        0x49890424	                    mov qword [r12], rax	      4635	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	CALL_46
0x40060fe	          0x4885c0	                           test rax, rax	      4636	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35
0x4006101	     0xf895c0b0000	                           jns 0x4006c63	      4636	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35
0x4006107	          0x4c89f7	                            mov rdi, r14	      4638	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x400610a	      0xe800000000	                          call 0x400610f	      4638	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x400610f	          0x4889c5	                            mov rbp, rax	      4638	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x4006112	        0x488b5b08	                mov rbx, qword [rbx + 8]	      4638	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x4006116	      0xba05000000	                              mov edx, 5	      4638	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x400611b	      0xbe00000000	                              mov esi, 0	      4638	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x4006120	      0xbf00000000	                              mov edi, 0	      4638	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x4006125	      0xe800000000	                          call 0x400612a	      4638	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x400612a	          0x4889ea	                            mov rdx, rbp	      4638	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x400612d	          0x4889de	                            mov rsi, rbx	      4638	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x4006130	          0x4889c7	                            mov rdi, rax	      4638	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x4006133	      0xe800000000	                          call 0x4006138	      4638	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x4006138	    0x41be00000000	                             mov r14d, 0	      4639	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35
0x400613e	      0xe96e0b0000	                           jmp 0x4006cb1	      4639	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35
0x4006143	      0xbe00000000	                              mov esi, 0	      4642	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	CALL_50
0x4006148	          0x4c89e7	                            mov rdi, r12	      4642	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	CALL_50
0x400614b	      0xe800000000	                          call 0x4006150	      4642	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	CALL_50
0x4006150	          0x4189c6	                           mov r14d, eax	      4642	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	CALL_50
0x4006153	            0x85c0	                           test eax, eax	      4642	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	CALL_50
0x4006155	            0x754f	                           jne 0x40061a6	      4642	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	CALL_50
0x4006157	      0x837c241000	               cmp dword [rsp + 0x10], 0	      4644	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	IF_37
0x400615c	     0xf84120b0000	                            je 0x4006c74	      4644	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	IF_37
0x4006162	    0x41810f000000	            or dword [r15], section_end.	      4646	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36
0x4006169	      0x41837d000a	                    cmp dword [r13], 0xa	      4647	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	IF_38
0x400616e	            0x7426	                            je 0x4006196	      4647	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	IF_38
0x4006170	      0xba05000000	                              mov edx, 5	      4649	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	IF_38	CALL_52
0x4006175	      0xbe00000000	                              mov esi, 0	      4649	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	IF_38	CALL_52
0x400617a	      0xbf00000000	                              mov edi, 0	      4649	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	IF_38	CALL_52
0x400617f	      0xe800000000	                          call 0x4006184	      4649	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	IF_38	CALL_52
0x4006184	      0xbe00000000	                              mov esi, 0	      4649	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	IF_38	CALL_52
0x4006189	          0x4889c7	                            mov rdi, rax	      4649	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	IF_38	CALL_52
0x400618c	      0xe800000000	                          call 0x4006191	      4649	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	IF_38	CALL_52
0x4006191	      0xe91b0b0000	                           jmp 0x4006cb1	      4650	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	IF_38
0x4006196	        0x498b4508	                mov rax, qword [r13 + 8]	      4652	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36
0x400619a	    0x498987880100	            mov qword [r15 + 0x188], rax	      4652	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36
0x40061a1	      0xe9bd0a0000	                           jmp 0x4006c63	      4652	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36
0x40061a6	      0xbe00000000	                              mov esi, 0	      4654	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	CALL_53
0x40061ab	          0x4c89e7	                            mov rdi, r12	      4654	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	CALL_53
0x40061ae	      0xe800000000	                          call 0x40061b3	      4654	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	CALL_53
0x40061b3	          0x4189c6	                           mov r14d, eax	      4654	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	CALL_53
0x40061b6	            0x85c0	                           test eax, eax	      4654	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	CALL_53
0x40061b8	            0x7554	                           jne 0x400620e	      4654	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	CALL_53
0x40061ba	      0xf644240810	               test byte [rsp + 8], 0x10	      4656	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	IF_40
0x40061bf	     0xf84af0a0000	                            je 0x4006c74	      4656	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	IF_40
0x40061c5	        0x41830f10	                    or dword [r15], 0x10	      4658	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39
0x40061c9	    0x498db7a80100	                  lea rsi, [r15 + 0x1a8]	      4659	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	CALL_54
0x40061d0	          0x4c89ef	                            mov rdi, r13	      4659	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	CALL_54
0x40061d3	      0xe800000000	                          call 0x40061d8	      4659	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	CALL_54
0x40061d8	    0x498987a00100	            mov qword [r15 + 0x1a0], rax	      4659	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	CALL_54
0x40061df	          0x4885c0	                           test rax, rax	      4660	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	IF_41
0x40061e2	     0xf857b0a0000	                           jne 0x4006c63	      4660	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	IF_41
0x40061e8	      0xba05000000	                              mov edx, 5	      4662	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	IF_41	CALL_56
0x40061ed	      0xbe00000000	                              mov esi, 0	      4662	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	IF_41	CALL_56
0x40061f2	      0xbf00000000	                              mov edi, 0	      4662	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	IF_41	CALL_56
0x40061f7	      0xe800000000	                          call 0x40061fc	      4662	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	IF_41	CALL_56
0x40061fc	      0xbe00000000	                              mov esi, 0	      4662	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	IF_41	CALL_56
0x4006201	          0x4889c7	                            mov rdi, rax	      4662	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	IF_41	CALL_56
0x4006204	      0xe800000000	                          call 0x4006209	      4662	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	IF_41	CALL_56
0x4006209	      0xe9a30a0000	                           jmp 0x4006cb1	      4663	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	IF_41
0x400620e	      0xbe00000000	                              mov esi, 0	      4666	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	CALL_57
0x4006213	          0x4c89e7	                            mov rdi, r12	      4666	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	CALL_57
0x4006216	      0xe800000000	                          call 0x400621b	      4666	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	CALL_57
0x400621b	          0x4189c6	                           mov r14d, eax	      4666	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	CALL_57
0x400621e	            0x85c0	                           test eax, eax	      4666	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	CALL_57
0x4006220	            0x7554	                           jne 0x4006276	      4666	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	CALL_57
0x4006222	      0xf644240820	               test byte [rsp + 8], 0x20	      4668	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	IF_43
0x4006227	     0xf84470a0000	                            je 0x4006c74	      4668	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	IF_43
0x400622d	        0x41830f20	                    or dword [r15], 0x20	      4670	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42
0x4006231	    0x498db7b80100	                  lea rsi, [r15 + 0x1b8]	      4671	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	CALL_58
0x4006238	          0x4c89ef	                            mov rdi, r13	      4671	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	CALL_58
0x400623b	      0xe800000000	                          call 0x4006240	      4671	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	CALL_58
0x4006240	    0x498987b00100	            mov qword [r15 + 0x1b0], rax	      4671	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	CALL_58
0x4006247	          0x4885c0	                           test rax, rax	      4672	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	IF_44
0x400624a	     0xf85130a0000	                           jne 0x4006c63	      4672	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	IF_44
0x4006250	      0xba05000000	                              mov edx, 5	      4674	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	IF_44	CALL_60
0x4006255	      0xbe00000000	                              mov esi, 0	      4674	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	IF_44	CALL_60
0x400625a	      0xbf00000000	                              mov edi, 0	      4674	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	IF_44	CALL_60
0x400625f	      0xe800000000	                          call 0x4006264	      4674	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	IF_44	CALL_60
0x4006264	      0xbe00000000	                              mov esi, 0	      4674	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	IF_44	CALL_60
0x4006269	          0x4889c7	                            mov rdi, rax	      4674	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	IF_44	CALL_60
0x400626c	      0xe800000000	                          call 0x4006271	      4674	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	IF_44	CALL_60
0x4006271	      0xe93b0a0000	                           jmp 0x4006cb1	      4675	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	IF_44
0x4006276	      0xbe00000000	                              mov esi, 0	      4678	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	CALL_61
0x400627b	          0x4c89e7	                            mov rdi, r12	      4678	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	CALL_61
0x400627e	      0xe800000000	                          call 0x4006283	      4678	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	CALL_61
0x4006283	          0x4189c6	                           mov r14d, eax	      4678	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	CALL_61
0x4006286	            0x85c0	                           test eax, eax	      4678	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	CALL_61
0x4006288	            0x7554	                           jne 0x40062de	      4678	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	CALL_61
0x400628a	      0xf644240840	               test byte [rsp + 8], 0x40	      4680	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	IF_46
0x400628f	     0xf84df090000	                            je 0x4006c74	      4680	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	IF_46
0x4006295	        0x41830f40	                    or dword [r15], 0x40	      4682	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45
0x4006299	    0x498db7c80100	                  lea rsi, [r15 + 0x1c8]	      4683	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	CALL_62
0x40062a0	          0x4c89ef	                            mov rdi, r13	      4683	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	CALL_62
0x40062a3	      0xe800000000	                          call 0x40062a8	      4683	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	CALL_62
0x40062a8	    0x498987c00100	            mov qword [r15 + 0x1c0], rax	      4683	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	CALL_62
0x40062af	          0x4885c0	                           test rax, rax	      4684	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	IF_47
0x40062b2	     0xf85ab090000	                           jne 0x4006c63	      4684	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	IF_47
0x40062b8	      0xba05000000	                              mov edx, 5	      4686	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	IF_47	CALL_64
0x40062bd	      0xbe00000000	                              mov esi, 0	      4686	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	IF_47	CALL_64
0x40062c2	      0xbf00000000	                              mov edi, 0	      4686	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	IF_47	CALL_64
0x40062c7	      0xe800000000	                          call 0x40062cc	      4686	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	IF_47	CALL_64
0x40062cc	      0xbe00000000	                              mov esi, 0	      4686	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	IF_47	CALL_64
0x40062d1	          0x4889c7	                            mov rdi, rax	      4686	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	IF_47	CALL_64
0x40062d4	      0xe800000000	                          call 0x40062d9	      4686	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	IF_47	CALL_64
0x40062d9	      0xe9d3090000	                           jmp 0x4006cb1	      4687	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	IF_47
0x40062de	      0xbe00000000	                              mov esi, 0	      4690	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	CALL_65
0x40062e3	          0x4c89e7	                            mov rdi, r12	      4690	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	CALL_65
0x40062e6	      0xe800000000	                          call 0x40062eb	      4690	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	CALL_65
0x40062eb	          0x4189c6	                           mov r14d, eax	      4690	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	CALL_65
0x40062ee	            0x85c0	                           test eax, eax	      4690	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	CALL_65
0x40062f0	            0x7557	                           jne 0x4006349	      4690	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	CALL_65
0x40062f2	      0xf644240880	               test byte [rsp + 8], 0x80	      4692	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	IF_49
0x40062f7	     0xf8477090000	                            je 0x4006c74	      4692	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	IF_49
0x40062fd	    0x41810f800000	                    or dword [r15], 0x80	      4694	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48
0x4006304	    0x498db7d80100	                  lea rsi, [r15 + 0x1d8]	      4695	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	CALL_66
0x400630b	          0x4c89ef	                            mov rdi, r13	      4695	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	CALL_66
0x400630e	      0xe800000000	                          call 0x4006313	      4695	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	CALL_66
0x4006313	    0x498987d00100	            mov qword [r15 + 0x1d0], rax	      4695	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	CALL_66
0x400631a	          0x4885c0	                           test rax, rax	      4696	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	IF_50
0x400631d	     0xf8540090000	                           jne 0x4006c63	      4696	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	IF_50
0x4006323	      0xba05000000	                              mov edx, 5	      4698	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	IF_50	CALL_68
0x4006328	      0xbe00000000	                              mov esi, 0	      4698	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	IF_50	CALL_68
0x400632d	      0xbf00000000	                              mov edi, 0	      4698	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	IF_50	CALL_68
0x4006332	      0xe800000000	                          call 0x4006337	      4698	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	IF_50	CALL_68
0x4006337	      0xbe00000000	                              mov esi, 0	      4698	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	IF_50	CALL_68
0x400633c	          0x4889c7	                            mov rdi, rax	      4698	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	IF_50	CALL_68
0x400633f	      0xe800000000	                          call 0x4006344	      4698	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	IF_50	CALL_68
0x4006344	      0xe968090000	                           jmp 0x4006cb1	      4699	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	IF_50
0x4006349	      0xbe00000000	                              mov esi, 0	      4702	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	CALL_69
0x400634e	          0x4c89e7	                            mov rdi, r12	      4702	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	CALL_69
0x4006351	      0xe800000000	                          call 0x4006356	      4702	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	CALL_69
0x4006356	          0x4189c6	                           mov r14d, eax	      4702	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	CALL_69
0x4006359	            0x85c0	                           test eax, eax	      4702	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	CALL_69
0x400635b	            0x756e	                           jne 0x40063cb	      4702	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	CALL_69
0x400635d	          0x4c89ef	                            mov rdi, r13	      4705	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	CALL_70
0x4006360	      0xe800000000	                          call 0x4006365	      4705	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	CALL_70
0x4006365	          0x4989c4	                            mov r12, rax	      4705	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	CALL_70
0x4006368	      0xbe00000000	                              mov esi, 0	      4707	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	IF_52	CALL_71
0x400636d	          0x4889c7	                            mov rdi, rax	      4707	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	IF_52	CALL_71
0x4006370	      0xe800000000	                          call 0x4006375	      4707	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	IF_52	CALL_71
0x4006375	            0x85c0	                           test eax, eax	      4707	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	IF_52	CALL_71
0x4006377	            0x743a	                            je 0x40063b3	      4707	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	IF_52	CALL_71
0x4006379	      0xbe00000000	                              mov esi, 0	      4709	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_72
0x400637e	          0x4c89e7	                            mov rdi, r12	      4709	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_72
0x4006381	      0xe800000000	                          call 0x4006386	      4709	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_72
0x4006386	            0x85c0	                           test eax, eax	      4709	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_72
0x4006388	            0x7430	                            je 0x40063ba	      4709	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_72
0x400638a	      0xba05000000	                              mov edx, 5	      4711	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_74
0x400638f	      0xbe00000000	                              mov esi, 0	      4711	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_74
0x4006394	      0xbf00000000	                              mov edi, 0	      4711	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_74
0x4006399	      0xe800000000	                          call 0x400639e	      4711	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_74
0x400639e	          0x4c89e2	                            mov rdx, r12	      4711	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_74
0x40063a1	      0xbe00000000	                              mov esi, 0	      4711	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_74
0x40063a6	          0x4889c7	                            mov rdi, rax	      4711	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_74
0x40063a9	      0xe800000000	                          call 0x40063ae	      4711	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_74
0x40063ae	      0xe9fe080000	                           jmp 0x4006cb1	      4712	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53
0x40063b3	      0xb801000000	                              mov eax, 1	      4708	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	IF_52
0x40063b8	            0xeb05	                           jmp 0x40063bf	      4708	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	IF_52
0x40063ba	      0xb800000000	                              mov eax, 0	      4704	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51
0x40063bf	    0x418987f00100	            mov dword [r15 + 0x1f0], eax	      4714	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51
0x40063c6	      0xe998080000	                           jmp 0x4006c63	      4714	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51
0x40063cb	      0xbe00000000	                              mov esi, 0	      4716	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	CALL_75
0x40063d0	          0x4c89e7	                            mov rdi, r12	      4716	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	CALL_75
0x40063d3	      0xe800000000	                          call 0x40063d8	      4716	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	CALL_75
0x40063d8	          0x4189c6	                           mov r14d, eax	      4716	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	CALL_75
0x40063db	            0x85c0	                           test eax, eax	      4716	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	CALL_75
0x40063dd	            0x755a	                           jne 0x4006439	      4716	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	CALL_75
0x40063df	    0xf74424080080	           test dword [rsp + 8], 0x8000 	      4718	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	IF_55
0x40063e7	     0xf8487080000	                            je 0x4006c74	      4718	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	IF_55
0x40063ed	    0x41810f008000	                  or dword [r15], 0x8000	      4720	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54
0x40063f4	    0x498db7e80100	                  lea rsi, [r15 + 0x1e8]	      4721	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	CALL_76
0x40063fb	          0x4c89ef	                            mov rdi, r13	      4721	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	CALL_76
0x40063fe	      0xe800000000	                          call 0x4006403	      4721	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	CALL_76
0x4006403	    0x498987e00100	            mov qword [r15 + 0x1e0], rax	      4721	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	CALL_76
0x400640a	          0x4885c0	                           test rax, rax	      4722	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	IF_56
0x400640d	     0xf8550080000	                           jne 0x4006c63	      4722	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	IF_56
0x4006413	      0xba05000000	                              mov edx, 5	      4724	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	IF_56	CALL_78
0x4006418	      0xbe00000000	                              mov esi, 0	      4724	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	IF_56	CALL_78
0x400641d	      0xbf00000000	                              mov edi, 0	      4724	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	IF_56	CALL_78
0x4006422	      0xe800000000	                          call 0x4006427	      4724	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	IF_56	CALL_78
0x4006427	      0xbe00000000	                              mov esi, 0	      4724	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	IF_56	CALL_78
0x400642c	          0x4889c7	                            mov rdi, rax	      4724	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	IF_56	CALL_78
0x400642f	      0xe800000000	                          call 0x4006434	      4724	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	IF_56	CALL_78
0x4006434	      0xe978080000	                           jmp 0x4006cb1	      4725	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	IF_56
0x4006439	      0xbe00000000	                              mov esi, 0	      4729	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	CALL_79
0x400643e	          0x4c89e7	                            mov rdi, r12	      4729	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	CALL_79
0x4006441	      0xe800000000	                          call 0x4006446	      4729	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	CALL_79
0x4006446	          0x4189c6	                           mov r14d, eax	      4729	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	CALL_79
0x4006449	            0x85c0	                           test eax, eax	      4729	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	CALL_79
0x400644b	            0x754e	                           jne 0x400649b	      4729	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	CALL_79
0x400644d	      0xf644240c04	                test byte [rsp + 0xc], 4	      4731	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	IF_58
0x4006452	     0xf841c080000	                            je 0x4006c74	      4731	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	IF_58
0x4006458	      0x41834f0404	                   or dword [r15 + 4], 4	      4733	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57
0x400645d	          0x4c89ef	                            mov rdi, r13	      4734	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	CALL_80
0x4006460	      0xe800000000	                          call 0x4006465	      4734	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	CALL_80
0x4006465	    0x498987d00200	            mov qword [r15 + 0x2d0], rax	      4734	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	CALL_80
0x400646c	          0x4885c0	                           test rax, rax	      4735	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	IF_59
0x400646f	     0xf85ee070000	                           jne 0x4006c63	      4735	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	IF_59
0x4006475	      0xba05000000	                              mov edx, 5	      4737	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	IF_59	CALL_82
0x400647a	      0xbe00000000	                              mov esi, 0	      4737	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	IF_59	CALL_82
0x400647f	      0xbf00000000	                              mov edi, 0	      4737	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	IF_59	CALL_82
0x4006484	      0xe800000000	                          call 0x4006489	      4737	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	IF_59	CALL_82
0x4006489	      0xbe00000000	                              mov esi, 0	      4737	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	IF_59	CALL_82
0x400648e	          0x4889c7	                            mov rdi, rax	      4737	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	IF_59	CALL_82
0x4006491	      0xe800000000	                          call 0x4006496	      4737	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	IF_59	CALL_82
0x4006496	      0xe916080000	                           jmp 0x4006cb1	      4738	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	IF_59
0x400649b	      0xbe00000000	                              mov esi, 0	      4741	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	CALL_83
0x40064a0	          0x4c89e7	                            mov rdi, r12	      4741	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	CALL_83
0x40064a3	      0xe800000000	                          call 0x40064a8	      4741	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	CALL_83
0x40064a8	          0x4189c6	                           mov r14d, eax	      4741	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	CALL_83
0x40064ab	            0x85c0	                           test eax, eax	      4741	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	CALL_83
0x40064ad	            0x7577	                           jne 0x4006526	      4741	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	CALL_83
0x40064af	      0xf644240c08	                test byte [rsp + 0xc], 8	      4743	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_61
0x40064b4	     0xf84ba070000	                            je 0x4006c74	      4743	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_61
0x40064ba	          0x4c89ef	                            mov rdi, r13	      4745	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	CALL_84
0x40064bd	      0xe800000000	                          call 0x40064c2	      4745	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	CALL_84
0x40064c2	          0x4989c4	                            mov r12, rax	      4745	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	CALL_84
0x40064c5	      0xbe00000000	                              mov esi, 0	      4746	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x40064ca	          0x4889c7	                            mov rdi, rax	      4746	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x40064cd	      0xe800000000	                          call 0x40064d2	      4746	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x40064d2	            0x85c0	                           test eax, eax	      4746	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x40064d4	            0x743a	                            je 0x4006510	      4746	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x40064d6	      0xbe00000000	                              mov esi, 0	      4746	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x40064db	          0x4c89e7	                            mov rdi, r12	      4746	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x40064de	      0xe800000000	                          call 0x40064e3	      4746	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x40064e3	            0x85c0	                           test eax, eax	      4746	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x40064e5	            0x7429	                            je 0x4006510	      4746	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x40064e7	      0xba05000000	                              mov edx, 5	      4748	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_88
0x40064ec	      0xbe00000000	                              mov esi, 0	      4748	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_88
0x40064f1	      0xbf00000000	                              mov edi, 0	      4748	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_88
0x40064f6	      0xe800000000	                          call 0x40064fb	      4748	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_88
0x40064fb	          0x4c89e2	                            mov rdx, r12	      4748	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_88
0x40064fe	      0xbe00000000	                              mov esi, 0	      4748	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_88
0x4006503	          0x4889c7	                            mov rdi, rax	      4748	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_88
0x4006506	      0xe800000000	                          call 0x400650b	      4748	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_88
0x400650b	      0xe9a1070000	                           jmp 0x4006cb1	      4749	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62
0x4006510	      0x41834f0408	                   or dword [r15 + 4], 8	      4751	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60
0x4006515	      0x410fb60424	                   movzx eax, byte [r12]	      4752	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60
0x400651a	    0x418987e00200	            mov dword [r15 + 0x2e0], eax	      4752	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60
0x4006521	      0xe93d070000	                           jmp 0x4006c63	      4752	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60
0x4006526	      0xbe00000000	                              mov esi, 0	      4754	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	CALL_89
0x400652b	          0x4c89e7	                            mov rdi, r12	      4754	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	CALL_89
0x400652e	      0xe800000000	                          call 0x4006533	      4754	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	CALL_89
0x4006533	          0x4189c6	                           mov r14d, eax	      4754	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	CALL_89
0x4006536	            0x85c0	                           test eax, eax	      4754	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	CALL_89
0x4006538	            0x756a	                           jne 0x40065a4	      4754	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	CALL_89
0x400653a	    0xf744240c0008	          test dword [rsp + 0xc], 0x800 	      4758	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_64
0x4006542	     0xf842c070000	                            je 0x4006c74	      4758	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_64
0x4006548	    0x41814f040008	               or dword [r15 + 4], 0x800	      4760	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63
0x4006550	          0x4c89ef	                            mov rdi, r13	      4761	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	CALL_90
0x4006553	      0xe800000000	                          call 0x4006558	      4761	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	CALL_90
0x4006558	    0x498987d80200	            mov qword [r15 + 0x2d8], rax	      4761	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	CALL_90
0x400655f	          0x4885c0	                           test rax, rax	      4762	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65
0x4006562	     0xf8461070000	                            je 0x4006cc9	      4762	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65
0x4006568	      0xbe25000000	                           mov esi, 0x25	      4765	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65	CALL_91
0x400656d	          0x4889c7	                            mov rdi, rax	      4765	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65	CALL_91
0x4006570	      0xe800000000	                          call 0x4006575	      4765	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65	CALL_91
0x4006575	          0x4885c0	                           test rax, rax	      4766	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66
0x4006578	     0xf844b070000	                            je 0x4006cc9	      4766	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66
0x400657e	        0x80780164	                cmp byte [rax + 1], 0x64	      4766	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66
0x4006582	     0xf8541070000	                           jne 0x4006cc9	      4766	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66
0x4006588	        0x488d7802	                      lea rdi, [rax + 2]	      4767	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66	CALL_92
0x400658c	      0xbe25000000	                           mov esi, 0x25	      4767	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66	CALL_92
0x4006591	      0xe800000000	                          call 0x4006596	      4767	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66	CALL_92
0x4006596	          0x4885c0	                           test rax, rax	      4767	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66	CALL_92
0x4006599	     0xf852a070000	                           jne 0x4006cc9	      4767	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66	CALL_92
0x400659f	      0xe9bf060000	                           jmp 0x4006c63	      4767	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66	CALL_92
0x40065a4	      0xbe00000000	                              mov esi, 0	      4776	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	CALL_95
0x40065a9	          0x4c89e7	                            mov rdi, r12	      4776	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	CALL_95
0x40065ac	      0xe800000000	                          call 0x40065b1	      4776	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	CALL_95
0x40065b1	          0x4189c6	                           mov r14d, eax	      4776	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	CALL_95
0x40065b4	            0x85c0	                           test eax, eax	      4776	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	CALL_95
0x40065b6	            0x7554	                           jne 0x400660c	      4776	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	CALL_95
0x40065b8	    0xf744240c0010	         test dword [rsp + 0xc], 0x1000 	      4780	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	IF_69
0x40065c0	     0xf84ae060000	                            je 0x4006c74	      4780	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	IF_69
0x40065c6	    0x41814f040010	              or dword [r15 + 4], 0x1000	      4782	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68
0x40065ce	          0x4c89ef	                            mov rdi, r13	      4783	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	CALL_96
0x40065d1	      0xe800000000	                          call 0x40065d6	      4783	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	CALL_96
0x40065d6	    0x498987e80200	            mov qword [r15 + 0x2e8], rax	      4783	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	CALL_96
0x40065dd	          0x4885c0	                           test rax, rax	      4784	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	IF_70
0x40065e0	     0xf857d060000	                           jne 0x4006c63	      4784	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	IF_70
0x40065e6	      0xba05000000	                              mov edx, 5	      4786	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	IF_70	CALL_98
0x40065eb	      0xbe00000000	                              mov esi, 0	      4786	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	IF_70	CALL_98
0x40065f0	      0xbf00000000	                              mov edi, 0	      4786	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	IF_70	CALL_98
0x40065f5	      0xe800000000	                          call 0x40065fa	      4786	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	IF_70	CALL_98
0x40065fa	      0xbe00000000	                              mov esi, 0	      4786	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	IF_70	CALL_98
0x40065ff	          0x4889c7	                            mov rdi, rax	      4786	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	IF_70	CALL_98
0x4006602	      0xe800000000	                          call 0x4006607	      4786	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	IF_70	CALL_98
0x4006607	      0xe9a5060000	                           jmp 0x4006cb1	      4787	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	IF_70
0x400660c	      0xbe00000000	                              mov esi, 0	      4790	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71	CALL_99
0x4006611	          0x4c89e7	                            mov rdi, r12	      4790	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71	CALL_99
0x4006614	      0xe800000000	                          call 0x4006619	      4790	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71	CALL_99
0x4006619	            0x85c0	                           test eax, eax	      4790	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71	CALL_99
0x400661b	            0x7524	                           jne 0x4006641	      4790	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71	CALL_99
0x400661d	      0xf644240c40	            test byte [rsp + 0xc], 0x40 	      4792	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71	IF_72
0x4006622	     0xf844c060000	                            je 0x4006c74	      4792	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71	IF_72
0x4006628	      0x41834f0440	                or dword [r15 + 4], 0x40	      4794	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71
0x400662d	          0x4c89ef	                            mov rdi, r13	      4795	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71	CALL_100
0x4006630	      0xe800000000	                          call 0x4006635	      4795	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71	CALL_100
0x4006635	    0x418987b80200	            mov dword [r15 + 0x2b8], eax	      4795	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71	CALL_100
0x400663c	      0xe922060000	                           jmp 0x4006c63	      4795	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71	CALL_100
0x4006641	      0xbe00000000	                              mov esi, 0	      4797	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73	CALL_101
0x4006646	          0x4c89e7	                            mov rdi, r12	      4797	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73	CALL_101
0x4006649	      0xe800000000	                          call 0x400664e	      4797	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73	CALL_101
0x400664e	            0x85c0	                           test eax, eax	      4797	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73	CALL_101
0x4006650	            0x7527	                           jne 0x4006679	      4797	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73	CALL_101
0x4006652	      0xf644240c80	            test byte [rsp + 0xc], 0x80 	      4799	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73	IF_74
0x4006657	     0xf8417060000	                            je 0x4006c74	      4799	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73	IF_74
0x400665d	    0x41814f048000	                or dword [r15 + 4], 0x80	      4801	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73
0x4006665	          0x4c89ef	                            mov rdi, r13	      4802	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73	CALL_102
0x4006668	      0xe800000000	                          call 0x400666d	      4802	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73	CALL_102
0x400666d	    0x418987bc0200	            mov dword [r15 + 0x2bc], eax	      4802	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73	CALL_102
0x4006674	      0xe9ea050000	                           jmp 0x4006c63	      4802	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73	CALL_102
0x4006679	      0xbe00000000	                              mov esi, 0	      4804	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75	CALL_103
0x400667e	          0x4c89e7	                            mov rdi, r12	      4804	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75	CALL_103
0x4006681	      0xe800000000	                          call 0x4006686	      4804	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75	CALL_103
0x4006686	            0x85c0	                           test eax, eax	      4804	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75	CALL_103
0x4006688	            0x752a	                           jne 0x40066b4	      4804	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75	CALL_103
0x400668a	    0xf744240c0001	          test dword [rsp + 0xc], 0x100 	      4806	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75	IF_76
0x4006692	     0xf84dc050000	                            je 0x4006c74	      4806	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75	IF_76
0x4006698	    0x41814f040001	               or dword [r15 + 4], 0x100	      4808	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75
0x40066a0	          0x4c89ef	                            mov rdi, r13	      4809	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75	CALL_104
0x40066a3	      0xe800000000	                          call 0x40066a8	      4809	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75	CALL_104
0x40066a8	    0x418987c00200	            mov dword [r15 + 0x2c0], eax	      4809	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75	CALL_104
0x40066af	      0xe9af050000	                           jmp 0x4006c63	      4809	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75	CALL_104
0x40066b4	      0xbe00000000	                              mov esi, 0	      4811	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77	CALL_105
0x40066b9	          0x4c89e7	                            mov rdi, r12	      4811	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77	CALL_105
0x40066bc	      0xe800000000	                          call 0x40066c1	      4811	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77	CALL_105
0x40066c1	            0x85c0	                           test eax, eax	      4811	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77	CALL_105
0x40066c3	            0x752a	                           jne 0x40066ef	      4811	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77	CALL_105
0x40066c5	    0xf744240c0002	          test dword [rsp + 0xc], 0x200 	      4813	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77	IF_78
0x40066cd	     0xf84a1050000	                            je 0x4006c74	      4813	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77	IF_78
0x40066d3	    0x41814f040002	               or dword [r15 + 4], 0x200	      4815	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77
0x40066db	          0x4c89ef	                            mov rdi, r13	      4816	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77	CALL_106
0x40066de	      0xe800000000	                          call 0x40066e3	      4816	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77	CALL_106
0x40066e3	    0x418987c40200	            mov dword [r15 + 0x2c4], eax	      4816	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77	CALL_106
0x40066ea	      0xe974050000	                           jmp 0x4006c63	      4816	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77	CALL_106
0x40066ef	      0xbe00000000	                              mov esi, 0	      4818	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79	CALL_107
0x40066f4	          0x4c89e7	                            mov rdi, r12	      4818	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79	CALL_107
0x40066f7	      0xe800000000	                          call 0x40066fc	      4818	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79	CALL_107
0x40066fc	            0x85c0	                           test eax, eax	      4818	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79	CALL_107
0x40066fe	            0x752a	                           jne 0x400672a	      4818	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79	CALL_107
0x4006700	    0xf744240c0004	          test dword [rsp + 0xc], 0x400 	      4820	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79	IF_80
0x4006708	     0xf8466050000	                            je 0x4006c74	      4820	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79	IF_80
0x400670e	    0x41814f040004	               or dword [r15 + 4], 0x400	      4822	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79
0x4006716	          0x4c89ef	                            mov rdi, r13	      4823	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79	CALL_108
0x4006719	      0xe800000000	                          call 0x400671e	      4823	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79	CALL_108
0x400671e	    0x418987c80200	            mov dword [r15 + 0x2c8], eax	      4823	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79	CALL_108
0x4006725	      0xe939050000	                           jmp 0x4006c63	      4823	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79	CALL_108
0x400672a	      0xbe00000000	                              mov esi, 0	      4825	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81	CALL_109
0x400672f	          0x4c89e7	                            mov rdi, r12	      4825	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81	CALL_109
0x4006732	      0xe800000000	                          call 0x4006737	      4825	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81	CALL_109
0x4006737	            0x85c0	                           test eax, eax	      4825	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81	CALL_109
0x4006739	            0x752a	                           jne 0x4006765	      4825	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81	CALL_109
0x400673b	    0xf744240c0020	         test dword [rsp + 0xc], 0x2000 	      4827	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81	IF_82
0x4006743	     0xf842b050000	                            je 0x4006c74	      4827	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81	IF_82
0x4006749	    0x41814f040020	              or dword [r15 + 4], 0x2000	      4829	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81
0x4006751	          0x4c89ef	                            mov rdi, r13	      4830	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81	CALL_110
0x4006754	      0xe800000000	                          call 0x4006759	      4830	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81	CALL_110
0x4006759	    0x418987cc0200	            mov dword [r15 + 0x2cc], eax	      4830	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81	CALL_110
0x4006760	      0xe9fe040000	                           jmp 0x4006c63	      4830	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81	CALL_110
0x4006765	      0xbe00000000	                              mov esi, 0	      4832	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83	CALL_111
0x400676a	          0x4c89e7	                            mov rdi, r12	      4832	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83	CALL_111
0x400676d	      0xe800000000	                          call 0x4006772	      4832	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83	CALL_111
0x4006772	            0x85c0	                           test eax, eax	      4832	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83	CALL_111
0x4006774	            0x752a	                           jne 0x40067a0	      4832	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83	CALL_111
0x4006776	    0xf744240c0040	         test dword [rsp + 0xc], 0x4000 	      4834	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83	IF_84
0x400677e	     0xf84f0040000	                            je 0x4006c74	      4834	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83	IF_84
0x4006784	    0x41814f040040	              or dword [r15 + 4], 0x4000	      4836	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83
0x400678c	          0x4c89ef	                            mov rdi, r13	      4837	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83	CALL_112
0x400678f	      0xe800000000	                          call 0x4006794	      4837	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83	CALL_112
0x4006794	    0x498987f00200	            mov qword [r15 + 0x2f0], rax	      4837	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83	CALL_112
0x400679b	      0xe9c3040000	                           jmp 0x4006c63	      4837	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83	CALL_112
0x40067a0	      0xbe00000000	                              mov esi, 0	      4840	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	CALL_113
0x40067a5	          0x4c89e7	                            mov rdi, r12	      4840	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	CALL_113
0x40067a8	      0xe800000000	                          call 0x40067ad	      4840	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	CALL_113
0x40067ad	          0x4189c6	                           mov r14d, eax	      4840	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	CALL_113
0x40067b0	            0x85c0	                           test eax, eax	      4840	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	CALL_113
0x40067b2	     0xf8519010000	                           jne 0x40068d1	      4840	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	CALL_113
0x40067b8	    0xf744240c0080	         test dword [rsp + 0xc], 0x8000 	      4846	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_86
0x40067c0	     0xf84ae040000	                            je 0x4006c74	      4846	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_86
0x40067c6	          0x4d85ed	                           test r13, r13	      4849	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_87
0x40067c9	            0x7410	                            je 0x40067db	      4849	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_87
0x40067cb	      0x41837d0005	                      cmp dword [r13], 5	      4849	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_87
0x40067d0	            0x7509	                           jne 0x40067db	      4849	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_87
0x40067d2	        0x498b4508	                mov rax, qword [r13 + 8]	      4850	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_87
0x40067d6	          0x4885c0	                           test rax, rax	      4850	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_87
0x40067d9	            0x7526	                           jne 0x4006801	      4850	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_87
0x40067db	      0xba05000000	                              mov edx, 5	      4852	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_87	CALL_115
0x40067e0	      0xbe00000000	                              mov esi, 0	      4852	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_87	CALL_115
0x40067e5	      0xbf00000000	                              mov edi, 0	      4852	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_87	CALL_115
0x40067ea	      0xe800000000	                          call 0x40067ef	      4852	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_87	CALL_115
0x40067ef	      0xbe00000000	                              mov esi, 0	      4852	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_87	CALL_115
0x40067f4	          0x4889c7	                            mov rdi, rax	      4852	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_87	CALL_115
0x40067f7	      0xe800000000	                          call 0x40067fc	      4852	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_87	CALL_115
0x40067fc	      0xe9b0040000	                           jmp 0x4006cb1	      4853	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_87
0x4006801	          0x4c8b20	                    mov r12, qword [rax]	      4856	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85
0x4006804	    0x41bd00000000	                             mov r13d, 0	      4857	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2
0x400680a	            0xeb60	                           jmp 0x400686c	      4857	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2
0x400680c	      0x498d7c2410	                   lea rdi, [r12 + 0x10]	      4862	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_116
0x4006811	      0xe800000000	                          call 0x4006816	      4862	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_116
0x4006816	          0x4885c0	                           test rax, rax	      4863	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	IF_88
0x4006819	     0xf8492040000	                            je 0x4006cb1	      4863	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	IF_88
0x400681f	    0x833d00000000	               cmp dword [0x04006826], 0	      4866	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_117
0x4006826	      0xba00000000	                              mov edx, 0	      4866	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_117
0x400682b	      0xb900000000	                              mov ecx, 0	      4866	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_117
0x4006830	        0x480f45d1	                         cmovne rdx, rcx	      4866	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_117
0x4006834	          0x4889c7	                            mov rdi, rax	      4866	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_117
0x4006837	            0xffd2	                                call rdx	      4866	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_117
0x4006839	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      4867	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	IF_89
0x400683f	     0xf846c040000	                            je 0x4006cb1	      4867	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	IF_89
0x4006845	    0x833d00000000	               cmp dword [0x0400684c], 0	      4870	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_118
0x400684c	      0xb900000000	                              mov ecx, 0	      4870	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_118
0x4006851	      0xba00000000	                              mov edx, 0	      4870	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_118
0x4006856	        0x480f44d1	                          cmove rdx, rcx	      4870	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_118
0x400685a	          0x4889c7	                            mov rdi, rax	      4870	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_118
0x400685d	            0xffd2	                                call rdx	      4870	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_118
0x400685f	      0x4a8944ec20	     mov qword [rsp + r13*8 + 0x20], rax	      4870	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_118
0x4006864	        0x4d8b2424	                    mov r12, qword [r12]	      4857	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2
0x4006868	        0x4983c501	                              add r13, 1	      4857	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2
0x400686c	          0x4489ea	                           mov edx, r13d	      4857	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2
0x400686f	          0x4d85e4	                           test r12, r12	      4857	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2
0x4006872	           0xf95c0	                                setne al	      4857	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2
0x4006875	        0x4183fd0f	                           cmp r13d, 0xf	      4857	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2
0x4006879	            0x7f04	                            jg 0x400687f	      4857	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2
0x400687b	            0x84c0	                             test al, al	      4857	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2
0x400687d	            0x758d	                           jne 0x400680c	      4857	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2
0x400687f	          0x83fa10	                           cmp edx, 0x10	      4873	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_90
0x4006882	            0x7504	                           jne 0x4006888	      4873	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_90
0x4006884	            0x84c0	                             test al, al	      4873	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_90
0x4006886	            0x7426	                            je 0x40068ae	      4873	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_90
0x4006888	      0xba05000000	                              mov edx, 5	      4875	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_90	CALL_120
0x400688d	      0xbe00000000	                              mov esi, 0	      4875	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_90	CALL_120
0x4006892	      0xbf00000000	                              mov edi, 0	      4875	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_90	CALL_120
0x4006897	      0xe800000000	                          call 0x400689c	      4875	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_90	CALL_120
0x400689c	      0xbe00000000	                              mov esi, 0	      4875	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_90	CALL_120
0x40068a1	          0x4889c7	                            mov rdi, rax	      4875	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_90	CALL_120
0x40068a4	      0xe800000000	                          call 0x40068a9	      4875	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_90	CALL_120
0x40068a9	      0xe903040000	                           jmp 0x4006cb1	      4876	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_90
0x40068ae	    0x41814f040080	              or dword [r15 + 4], 0x8000	      4879	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85
0x40068b6	    0x498d87f80200	                  lea rax, [r15 + 0x2f8]	        53	string3.h	FUNCTION_135	CALL_3
0x40068bd	      0xb920000000	                           mov ecx, 0x20	        53	string3.h	FUNCTION_135	CALL_3
0x40068c2	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_135	CALL_3
0x40068c5	      0x488d742420	                   lea rsi, [rsp + 0x20]	        53	string3.h	FUNCTION_135	CALL_3
0x40068ca	            0xf3a5	  rep movsd dword [rdi], dword ptr [rsi]	        53	string3.h	FUNCTION_135	CALL_3
0x40068cc	      0xe992030000	                           jmp 0x4006c63	        53	string3.h	FUNCTION_135	CALL_3
0x40068d1	      0x837c241c65	           cmp dword [rsp + 0x1c], 0x65 	      4884	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	CALL_122
0x40068d6	     0xf8584000000	                           jne 0x4006960	      4884	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	CALL_122
0x40068dc	    0x41807c24016e	                cmp byte [r12 + 1], 0x6e	      4884	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	CALL_122
0x40068e2	     0xf8503010000	                           jne 0x40069eb	      4884	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	CALL_122
0x40068e8	    0x41807c240276	                cmp byte [r12 + 2], 0x76	      4884	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	CALL_122
0x40068ee	     0xf85f7000000	                           jne 0x40069eb	      4884	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	CALL_122
0x40068f4	    0x41807c240300	                   cmp byte [r12 + 3], 0	      4884	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	CALL_122
0x40068fa	     0xf85eb000000	                           jne 0x40069eb	      4884	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	CALL_122
0x4006900	      0xf644240c10	            test byte [rsp + 0xc], 0x10 	      4886	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_92
0x4006905	     0xf8469030000	                            je 0x4006c74	      4886	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_92
0x400690b	      0x41837d0006	                      cmp dword [r13], 6	      4888	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_93
0x4006910	            0x742c	                            je 0x400693e	      4888	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_93
0x4006912	      0xba05000000	                              mov edx, 5	      4890	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_93	CALL_124
0x4006917	      0xbe00000000	                              mov esi, 0	      4890	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_93	CALL_124
0x400691c	      0xbf00000000	                              mov edi, 0	      4890	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_93	CALL_124
0x4006921	      0xe800000000	                          call 0x4006926	      4890	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_93	CALL_124
0x4006926	      0xbe00000000	                              mov esi, 0	      4890	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_93	CALL_124
0x400692b	          0x4889c7	                            mov rdi, rax	      4890	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_93	CALL_124
0x400692e	      0xe800000000	                          call 0x4006933	      4890	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_93	CALL_124
0x4006933	    0x41be00000000	                             mov r14d, 0	      4891	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_93
0x4006939	      0xe973030000	                           jmp 0x4006cb1	      4891	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_93
0x400693e	      0x41834f0410	                or dword [r15 + 4], 0x10	      4893	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91
0x4006943	        0x498b4508	                mov rax, qword [r13 + 8]	      4894	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91
0x4006947	    0x498987600200	            mov qword [r15 + 0x260], rax	      4894	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91
0x400694e	          0x4885c0	                           test rax, rax	      4895	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_94
0x4006951	     0xf840c030000	                            je 0x4006c63	      4895	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_94
0x4006957	        0x83400401	                  add dword [rax + 4], 1	      4896	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_94
0x400695b	      0xe903030000	                           jmp 0x4006c63	      4896	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_94
0x4006960	      0x837c241c63	           cmp dword [rsp + 0x1c], 0x63 	      4898	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	CALL_125
0x4006965	     0xf8580000000	                           jne 0x40069eb	      4898	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	CALL_125
0x400696b	    0x41807c240177	                cmp byte [r12 + 1], 0x77	      4898	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	CALL_125
0x4006971	            0x7578	                           jne 0x40069eb	      4898	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	CALL_125
0x4006973	    0x41807c240264	                cmp byte [r12 + 2], 0x64	      4898	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	CALL_125
0x4006979	            0x7570	                           jne 0x40069eb	      4898	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	CALL_125
0x400697b	    0x41807c240300	                   cmp byte [r12 + 3], 0	      4898	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	CALL_125
0x4006981	            0x7568	                           jne 0x40069eb	      4898	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	CALL_125
0x4006983	      0xf644240c20	            test byte [rsp + 0xc], 0x20 	      4900	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_96
0x4006988	     0xf84e6020000	                            je 0x4006c74	      4900	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_96
0x400698e	    0x498db7680200	                  lea rsi, [r15 + 0x268]	      4902	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	CALL_126
0x4006995	          0x4c89ef	                            mov rdi, r13	      4902	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	CALL_126
0x4006998	      0xe800000000	                          call 0x400699d	      4902	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	CALL_126
0x400699d	    0x498987b00200	            mov qword [r15 + 0x2b0], rax	      4902	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	CALL_126
0x40069a4	          0x4885c0	                           test rax, rax	      4903	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_127
0x40069a7	            0x740c	                            je 0x40069b5	      4903	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_127
0x40069a9	          0x4889c7	                            mov rdi, rax	      4903	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_127
0x40069ac	      0xe800000000	                          call 0x40069b1	      4903	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_127
0x40069b1	            0x85c0	                           test eax, eax	      4903	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_127
0x40069b3	            0x752c	                           jne 0x40069e1	      4903	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_127
0x40069b5	      0xba05000000	                              mov edx, 5	      4905	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_129
0x40069ba	      0xbe00000000	                              mov esi, 0	      4905	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_129
0x40069bf	      0xbf00000000	                              mov edi, 0	      4905	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_129
0x40069c4	      0xe800000000	                          call 0x40069c9	      4905	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_129
0x40069c9	      0xbe00000000	                              mov esi, 0	      4905	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_129
0x40069ce	          0x4889c7	                            mov rdi, rax	      4905	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_129
0x40069d1	      0xe800000000	                          call 0x40069d6	      4905	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_129
0x40069d6	    0x41be00000000	                             mov r14d, 0	      4906	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_97
0x40069dc	      0xe9d0020000	                           jmp 0x4006cb1	      4906	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_97
0x40069e1	      0x41834f0420	                or dword [r15 + 4], 0x20	      4908	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95
0x40069e6	      0xe978020000	                           jmp 0x4006c63	      4908	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95
0x40069eb	      0xbe00000000	                              mov esi, 0	      4910	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98	CALL_130
0x40069f0	          0x4c89e7	                            mov rdi, r12	      4910	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98	CALL_130
0x40069f3	      0xe800000000	                          call 0x40069f8	      4910	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98	CALL_130
0x40069f8	            0x85c0	                           test eax, eax	      4910	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98	CALL_130
0x40069fa	            0x7529	                           jne 0x4006a25	      4910	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98	CALL_130
0x40069fc	    0xf74424080001	            test dword [rsp + 8], 0x100 	      4912	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98	IF_99
0x4006a04	     0xf846a020000	                            je 0x4006c74	      4912	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98	IF_99
0x4006a0a	    0x41810f000100	                   or dword [r15], 0x100	      4914	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98
0x4006a11	          0x4c89ef	                            mov rdi, r13	      4915	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98	CALL_131
0x4006a14	      0xe800000000	                          call 0x4006a19	      4915	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98	CALL_131
0x4006a19	    0x418987f40100	            mov dword [r15 + 0x1f4], eax	      4915	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98	CALL_131
0x4006a20	      0xe93e020000	                           jmp 0x4006c63	      4915	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98	CALL_131
0x4006a25	      0xbe00000000	                              mov esi, 0	      4917	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100	CALL_132
0x4006a2a	          0x4c89e7	                            mov rdi, r12	      4917	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100	CALL_132
0x4006a2d	      0xe800000000	                          call 0x4006a32	      4917	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100	CALL_132
0x4006a32	            0x85c0	                           test eax, eax	      4917	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100	CALL_132
0x4006a34	            0x7529	                           jne 0x4006a5f	      4917	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100	CALL_132
0x4006a36	    0xf74424080002	            test dword [rsp + 8], 0x200 	      4919	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100	IF_101
0x4006a3e	     0xf8430020000	                            je 0x4006c74	      4919	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100	IF_101
0x4006a44	    0x41810f000200	                   or dword [r15], 0x200	      4921	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100
0x4006a4b	          0x4c89ef	                            mov rdi, r13	      4922	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100	CALL_133
0x4006a4e	      0xe800000000	                          call 0x4006a53	      4922	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100	CALL_133
0x4006a53	    0x418987f80100	            mov dword [r15 + 0x1f8], eax	      4922	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100	CALL_133
0x4006a5a	      0xe904020000	                           jmp 0x4006c63	      4922	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100	CALL_133
0x4006a5f	      0xbe00000000	                              mov esi, 0	      4924	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102	CALL_134
0x4006a64	          0x4c89e7	                            mov rdi, r12	      4924	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102	CALL_134
0x4006a67	      0xe800000000	                          call 0x4006a6c	      4924	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102	CALL_134
0x4006a6c	            0x85c0	                           test eax, eax	      4924	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102	CALL_134
0x4006a6e	            0x7529	                           jne 0x4006a99	      4924	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102	CALL_134
0x4006a70	    0xf74424080004	            test dword [rsp + 8], 0x400 	      4926	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102	IF_103
0x4006a78	     0xf84f6010000	                            je 0x4006c74	      4926	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102	IF_103
0x4006a7e	    0x41810f000400	                   or dword [r15], 0x400	      4928	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102
0x4006a85	          0x4c89ef	                            mov rdi, r13	      4929	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102	CALL_135
0x4006a88	      0xe800000000	                          call 0x4006a8d	      4929	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102	CALL_135
0x4006a8d	    0x418987fc0100	            mov dword [r15 + 0x1fc], eax	      4929	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102	CALL_135
0x4006a94	      0xe9ca010000	                           jmp 0x4006c63	      4929	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102	CALL_135
0x4006a99	      0xbe00000000	                              mov esi, 0	      4931	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104	CALL_136
0x4006a9e	          0x4c89e7	                            mov rdi, r12	      4931	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104	CALL_136
0x4006aa1	      0xe800000000	                          call 0x4006aa6	      4931	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104	CALL_136
0x4006aa6	            0x85c0	                           test eax, eax	      4931	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104	CALL_136
0x4006aa8	            0x7529	                           jne 0x4006ad3	      4931	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104	CALL_136
0x4006aaa	    0xf74424080008	            test dword [rsp + 8], 0x800 	      4933	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104	IF_105
0x4006ab2	     0xf84bc010000	                            je 0x4006c74	      4933	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104	IF_105
0x4006ab8	    0x41810f000800	                   or dword [r15], 0x800	      4935	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104
0x4006abf	          0x4c89ef	                            mov rdi, r13	      4936	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104	CALL_137
0x4006ac2	      0xe800000000	                          call 0x4006ac7	      4936	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104	CALL_137
0x4006ac7	    0x418987000200	            mov dword [r15 + 0x200], eax	      4936	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104	CALL_137
0x4006ace	      0xe990010000	                           jmp 0x4006c63	      4936	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104	CALL_137
0x4006ad3	      0xbe00000000	                              mov esi, 0	      4938	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	CALL_138
0x4006ad8	          0x4c89e7	                            mov rdi, r12	      4938	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	CALL_138
0x4006adb	      0xe800000000	                          call 0x4006ae0	      4938	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	CALL_138
0x4006ae0	          0x4189c6	                           mov r14d, eax	      4938	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	CALL_138
0x4006ae3	            0x85c0	                           test eax, eax	      4938	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	CALL_138
0x4006ae5	     0xf85a6000000	                           jne 0x4006b91	      4938	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	CALL_138
0x4006aeb	    0xf74424080010	           test dword [rsp + 8], 0x1000 	      4940	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	IF_107
0x4006af3	     0xf847b010000	                            je 0x4006c74	      4940	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	IF_107
0x4006af9	    0x41810f001000	                  or dword [r15], 0x1000	      4942	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106
0x4006b00	          0x4c89ef	                            mov rdi, r13	      4943	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	CALL_139
0x4006b03	      0xe800000000	                          call 0x4006b08	      4943	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	CALL_139
0x4006b08	          0x4989c4	                            mov r12, rax	      4943	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	CALL_139
0x4006b0b	           0xfb600	                   movzx eax, byte [rax]	      4944	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	IF_108	CALL_140
0x4006b0e	          0x83f865	                           cmp eax, 0x65	      4944	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	IF_108	CALL_140
0x4006b11	            0x7528	                           jne 0x4006b3b	      4944	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	IF_108	CALL_140
0x4006b13	    0x41807c240172	                cmp byte [r12 + 1], 0x72	      4944	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	IF_108	CALL_140
0x4006b19	            0x754d	                           jne 0x4006b68	      4944	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	IF_108	CALL_140
0x4006b1b	    0x41807c240272	                cmp byte [r12 + 2], 0x72	      4944	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	IF_108	CALL_140
0x4006b21	            0x7545	                           jne 0x4006b68	      4944	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	IF_108	CALL_140
0x4006b23	    0x41807c240300	                   cmp byte [r12 + 3], 0	      4944	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	IF_108	CALL_140
0x4006b29	            0x753d	                           jne 0x4006b68	      4944	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	IF_108	CALL_140
0x4006b2b	    0x41c787080200	              mov dword [r15 + 0x208], 2	      4945	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	IF_108
0x4006b36	      0xe928010000	                           jmp 0x4006c63	      4945	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	IF_108
0x4006b3b	          0x83f86f	                           cmp eax, 0x6f	      4946	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_39	IF_109	CALL_141
0x4006b3e	            0x7528	                           jne 0x4006b68	      4946	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_39	IF_109	CALL_141
0x4006b40	    0x41807c240175	                cmp byte [r12 + 1], 0x75	      4946	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_39	IF_109	CALL_141
0x4006b46	            0x7520	                           jne 0x4006b68	      4946	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_39	IF_109	CALL_141
0x4006b48	    0x41807c240274	                cmp byte [r12 + 2], 0x74	      4946	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_39	IF_109	CALL_141
0x4006b4e	            0x7518	                           jne 0x4006b68	      4946	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_39	IF_109	CALL_141
0x4006b50	    0x41807c240300	                   cmp byte [r12 + 3], 0	      4946	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_39	IF_109	CALL_141
0x4006b56	            0x7510	                           jne 0x4006b68	      4946	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_39	IF_109	CALL_141
0x4006b58	    0x41c787080200	              mov dword [r15 + 0x208], 1	      4947	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_39	IF_109
0x4006b63	      0xe9fb000000	                           jmp 0x4006c63	      4947	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_39	IF_109
0x4006b68	      0xba05000000	                              mov edx, 5	      4950	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_40	CALL_143
0x4006b6d	      0xbe00000000	                              mov esi, 0	      4950	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_40	CALL_143
0x4006b72	      0xbf00000000	                              mov edi, 0	      4950	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_40	CALL_143
0x4006b77	      0xe800000000	                          call 0x4006b7c	      4950	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_40	CALL_143
0x4006b7c	          0x4c89e2	                            mov rdx, r12	      4950	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_40	CALL_143
0x4006b7f	      0xbe00000000	                              mov esi, 0	      4950	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_40	CALL_143
0x4006b84	          0x4889c7	                            mov rdi, rax	      4950	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_40	CALL_143
0x4006b87	      0xe800000000	                          call 0x4006b8c	      4950	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_40	CALL_143
0x4006b8c	      0xe920010000	                           jmp 0x4006cb1	      4951	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_40
0x4006b91	      0x837c241c69	           cmp dword [rsp + 0x1c], 0x69 	      4954	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110	CALL_144
0x4006b96	            0x7539	                           jne 0x4006bd1	      4954	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110	CALL_144
0x4006b98	    0x41807c240164	                cmp byte [r12 + 1], 0x64	      4954	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110	CALL_144
0x4006b9e	            0x7531	                           jne 0x4006bd1	      4954	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110	CALL_144
0x4006ba0	    0x41807c240200	                   cmp byte [r12 + 2], 0	      4954	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110	CALL_144
0x4006ba6	            0x7529	                           jne 0x4006bd1	      4954	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110	CALL_144
0x4006ba8	    0xf74424080020	           test dword [rsp + 8], 0x2000 	      4956	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110	IF_111
0x4006bb0	     0xf84be000000	                            je 0x4006c74	      4956	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110	IF_111
0x4006bb6	    0x41810f002000	                  or dword [r15], 0x2000	      4958	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110
0x4006bbd	          0x4c89ef	                            mov rdi, r13	      4959	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110	CALL_145
0x4006bc0	      0xe800000000	                          call 0x4006bc5	      4959	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110	CALL_145
0x4006bc5	    0x4189870c0200	            mov dword [r15 + 0x20c], eax	      4959	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110	CALL_145
0x4006bcc	      0xe992000000	                           jmp 0x4006c63	      4959	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110	CALL_145
0x4006bd1	      0xbe00000000	                              mov esi, 0	      4961	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	CALL_146
0x4006bd6	          0x4c89e7	                            mov rdi, r12	      4961	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	CALL_146
0x4006bd9	      0xe800000000	                          call 0x4006bde	      4961	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	CALL_146
0x4006bde	          0x4189c6	                           mov r14d, eax	      4961	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	CALL_146
0x4006be1	            0x85c0	                           test eax, eax	      4961	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	CALL_146
0x4006be3	            0x7550	                           jne 0x4006c35	      4961	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	CALL_146
0x4006be5	      0x837c241800	               cmp dword [rsp + 0x18], 0	      4963	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	IF_113
0x4006bea	     0xf8484000000	                            je 0x4006c74	      4963	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	IF_113
0x4006bf0	    0x41810f004000	                  or dword [r15], 0x4000	      4965	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112
0x4006bf7	    0x498db7100200	                  lea rsi, [r15 + 0x210]	      4967	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112
0x4006bfe	          0x4c89ef	                            mov rdi, r13	      4966	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	CALL_147
0x4006c01	      0xe800000000	                          call 0x4006c06	      4966	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	CALL_147
0x4006c06	    0x498987580200	            mov qword [r15 + 0x258], rax	      4966	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	CALL_147
0x4006c0d	          0x4885c0	                           test rax, rax	      4968	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	IF_114
0x4006c10	            0x7551	                           jne 0x4006c63	      4968	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	IF_114
0x4006c12	      0xba05000000	                              mov edx, 5	      4970	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	IF_114	CALL_149
0x4006c17	      0xbe00000000	                              mov esi, 0	      4970	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	IF_114	CALL_149
0x4006c1c	      0xbf00000000	                              mov edi, 0	      4970	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	IF_114	CALL_149
0x4006c21	      0xe800000000	                          call 0x4006c26	      4970	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	IF_114	CALL_149
0x4006c26	      0xbe00000000	                              mov esi, 0	      4970	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	IF_114	CALL_149
0x4006c2b	          0x4889c7	                            mov rdi, rax	      4970	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	IF_114	CALL_149
0x4006c2e	      0xe800000000	                          call 0x4006c33	      4970	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	IF_114	CALL_149
0x4006c33	            0xeb7c	                           jmp 0x4006cb1	      4971	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	IF_114
0x4006c35	      0xbe00000000	                              mov esi, 0	      4974	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115	CALL_150
0x4006c3a	          0x4c89e7	                            mov rdi, r12	      4974	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115	CALL_150
0x4006c3d	      0xe800000000	                          call 0x4006c42	      4974	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115	CALL_150
0x4006c42	            0x85c0	                           test eax, eax	      4974	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115	CALL_150
0x4006c44	            0x752e	                           jne 0x4006c74	      4974	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115	CALL_150
0x4006c46	      0x837c241400	               cmp dword [rsp + 0x14], 0	      4976	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115	IF_116
0x4006c4b	            0x7427	                            je 0x4006c74	      4976	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115	IF_116
0x4006c4d	    0x41810f000000	              or dword [r15], 0x10000000	      4978	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115
0x4006c54	          0x4c89ef	                            mov rdi, r13	      4979	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115	CALL_151
0x4006c57	      0xe800000000	                          call 0x4006c5c	      4979	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115	CALL_151
0x4006c5c	    0x418987040200	            mov dword [r15 + 0x204], eax	      4979	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115	CALL_151
0x4006c63	          0x83ed01	                              sub ebp, 1	      4983	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_44
0x4006c66	        0x4883c310	                           add rbx, 0x10	      4514	channel.c	FUNCTION_107	FOR_1
0x4006c6a	            0x85ed	                           test ebp, ebp	      4514	channel.c	FUNCTION_107	FOR_1
0x4006c6c	     0xf8f49eeffff	                            jg 0x4005abb	      4514	channel.c	FUNCTION_107	FOR_1
0x4006c72	            0xeb78	                           jmp 0x4006cec	      4514	channel.c	FUNCTION_107	FOR_1
0x4006c74	            0x85ed	                           test ebp, ebp	      4985	channel.c	FUNCTION_107	ELSE_44	IF_117
0x4006c76	            0x7e33	                           jle 0x4006cab	      4985	channel.c	FUNCTION_107	ELSE_44	IF_117
0x4006c78	        0x488b5b08	                mov rbx, qword [rbx + 8]	      4987	channel.c	FUNCTION_107	ELSE_44	IF_117	CALL_153
0x4006c7c	      0xba05000000	                              mov edx, 5	      4987	channel.c	FUNCTION_107	ELSE_44	IF_117	CALL_153
0x4006c81	      0xbe00000000	                              mov esi, 0	      4987	channel.c	FUNCTION_107	ELSE_44	IF_117	CALL_153
0x4006c86	      0xbf00000000	                              mov edi, 0	      4987	channel.c	FUNCTION_107	ELSE_44	IF_117	CALL_153
0x4006c8b	      0xe800000000	                          call 0x4006c90	      4987	channel.c	FUNCTION_107	ELSE_44	IF_117	CALL_153
0x4006c90	          0x4889de	                            mov rsi, rbx	      4987	channel.c	FUNCTION_107	ELSE_44	IF_117	CALL_153
0x4006c93	          0x4889c7	                            mov rdi, rax	      4987	channel.c	FUNCTION_107	ELSE_44	IF_117	CALL_153
0x4006c96	      0xe800000000	                          call 0x4006c9b	      4987	channel.c	FUNCTION_107	ELSE_44	IF_117	CALL_153
0x4006c9b	    0x41be00000000	                             mov r14d, 0	      4988	channel.c	FUNCTION_107	ELSE_44	IF_117
0x4006ca1	            0xeb0e	                           jmp 0x4006cb1	      4988	channel.c	FUNCTION_107	ELSE_44	IF_117
0x4006ca3	    0x41be01000000	                             mov r14d, 1	      4511	channel.c	FUNCTION_107	IF_3
0x4006ca9	            0xeb06	                           jmp 0x4006cb1	      4511	channel.c	FUNCTION_107	IF_3
0x4006cab	    0x41be01000000	                             mov r14d, 1	      4991	channel.c	FUNCTION_107
0x4006cb1	          0x4489f0	                           mov eax, r14d	      4992	channel.c	FUNCTION_107
0x4006cb4	    0x488b9c24a800	            mov rbx, qword [rsp + 0xa8] 	      4992	channel.c	FUNCTION_107
0x4006cbc	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4992	channel.c	FUNCTION_107
0x4006cc5	            0x7454	                            je 0x4006d1b	      4992	channel.c	FUNCTION_107
0x4006cc7	            0xeb4d	                           jmp 0x4006d16	      4992	channel.c	FUNCTION_107
0x4006cc9	      0xba05000000	                              mov edx, 5	      4772	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_67	CALL_94
0x4006cce	      0xbe00000000	                              mov esi, 0	      4772	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_67	CALL_94
0x4006cd3	      0xbf00000000	                              mov edi, 0	      4772	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_67	CALL_94
0x4006cd8	      0xe800000000	                          call 0x4006cdd	      4772	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_67	CALL_94
0x4006cdd	      0xbe00000000	                              mov esi, 0	      4772	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_67	CALL_94
0x4006ce2	          0x4889c7	                            mov rdi, rax	      4772	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_67	CALL_94
0x4006ce5	      0xe800000000	                          call 0x4006cea	      4772	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_67	CALL_94
0x4006cea	            0xebc5	                           jmp 0x4006cb1	      4773	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_67
0x4006cec	    0x41be01000000	                             mov r14d, 1	      4991	channel.c	FUNCTION_107
0x4006cf2	            0xebbd	                           jmp 0x4006cb1	      4991	channel.c	FUNCTION_107
0x4006cf4	      0xbf00000000	                              mov edi, 0	      4577	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_25
0x4006cf9	      0xb907000000	                              mov ecx, 7	      4577	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_25
0x4006cfe	          0x4c89e6	                            mov rsi, r12	      4577	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_25
0x4006d01	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4577	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_25
0x4006d03	           0xf97c2	                                 seta dl	      4577	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_25
0x4006d06	           0xf92c0	                                 setb al	      4577	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_25
0x4006d09	            0x38c2	                              cmp dl, al	      4577	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_25
0x4006d0b	     0xf8591f1ffff	                           jne 0x4005ea2	      4577	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_25
0x4006d11	      0xe9e2f1ffff	                           jmp 0x4005ef8	      4577	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_25
0x4006d16	      0xe800000000	                          call 0x4006d1b	      4992	channel.c	FUNCTION_107
0x4006d1b	    0x4881c4b80000	                           add rsp, 0xb8	      4992	channel.c	FUNCTION_107
0x4006d22	              0x5b	                                 pop rbx	      4992	channel.c	FUNCTION_107
0x4006d23	              0x5d	                                 pop rbp	      4992	channel.c	FUNCTION_107
0x4006d24	            0x415c	                                 pop r12	      4992	channel.c	FUNCTION_107
0x4006d26	            0x415d	                                 pop r13	      4992	channel.c	FUNCTION_107
0x4006d28	            0x415e	                                 pop r14	      4992	channel.c	FUNCTION_107
0x4006d2a	            0x415f	                                 pop r15	      4992	channel.c	FUNCTION_107
0x4006d2c	              0xc3	                                     ret	      4992	channel.c	FUNCTION_107
channel_handle_events	IF,4:ELSE,1:FOR,2:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,3	54
0x40036e2	            0x4155	                                push r13	      3621	channel.c	FUNCTION_84
0x40036e4	            0x4154	                                push r12	      3621	channel.c	FUNCTION_84
0x40036e6	              0x55	                                push rbp	      3621	channel.c	FUNCTION_84
0x40036e7	              0x53	                                push rbx	      3621	channel.c	FUNCTION_84
0x40036e8	        0x4883ec08	                              sub rsp, 8	      3621	channel.c	FUNCTION_84
0x40036ec	    0x488b2d000000	            mov rbp, qword [0x040036f3] 	      3626	channel.c	FUNCTION_84	FOR_1
0x40036f3	          0x4885ed	                           test rbp, rbp	      3626	channel.c	FUNCTION_84	FOR_1
0x40036f6	     0xf8484000000	                            je 0x4003780	      3626	channel.c	FUNCTION_84	FOR_1
0x40036fc	          0x4189fc	                           mov r12d, edi	      3626	channel.c	FUNCTION_84	FOR_1
0x40036ff	    0x41bd00000000	                             mov r13d, 0	      3626	channel.c	FUNCTION_84	FOR_1
0x4003705	          0x4585e4	                         test r12d, r12d	      3628	channel.c	FUNCTION_84	FOR_1	IF_1
0x4003708	            0x740e	                            je 0x4003718	      3628	channel.c	FUNCTION_84	FOR_1	IF_1
0x400370a	          0x4489eb	                           mov ebx, r13d	      3628	channel.c	FUNCTION_84	FOR_1	IF_1
0x400370d	    0x83bda4040000	              cmp dword [rbp + 0x4a4], 0	      3628	channel.c	FUNCTION_84	FOR_1	IF_1
0x4003714	            0x7505	                           jne 0x400371b	      3628	channel.c	FUNCTION_84	FOR_1	IF_1
0x4003716	            0xeb5f	                           jmp 0x4003777	      3628	channel.c	FUNCTION_84	FOR_1	IF_1
0x4003718	          0x4489eb	                           mov ebx, r13d	      3628	channel.c	FUNCTION_84	FOR_1	IF_1
0x400371b	            0x89d8	                            mov eax, ebx	      3634	channel.c	FUNCTION_84	FOR_1	FOR_2
0x400371d	          0x4889c2	                            mov rdx, rax	      3634	channel.c	FUNCTION_84	FOR_1	FOR_2
0x4003720	        0x48c1e204	                              shl rdx, 4	      3634	channel.c	FUNCTION_84	FOR_1	FOR_2
0x4003724	        0x48c1e008	                              shl rax, 8	      3634	channel.c	FUNCTION_84	FOR_1	FOR_2
0x4003728	          0x4801d0	                            add rax, rdx	      3634	channel.c	FUNCTION_84	FOR_1	FOR_2
0x400372b	        0x8b740518	      mov esi, dword [rbp + rax + 0x18] 	      3634	channel.c	FUNCTION_84	FOR_1	FOR_2
0x400372f	          0x83feff	             cmp esi, 0xffffffffffffffff	      3635	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2
0x4003732	            0x743b	                            je 0x400376f	      3635	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2
0x4003734	      0xba00000000	                              mov edx, 0	      3637	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_1
0x4003739	          0x4889ef	                            mov rdi, rbp	      3637	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_1
0x400373c	      0xe84bfaffff	                   call sym.channel_wait	      3637	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_1
0x4003741	            0x85c0	                           test eax, eax	      3639	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	IF_3
0x4003743	            0x7511	                           jne 0x4003756	      3639	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	IF_3
0x4003745	      0xba00000000	                              mov edx, 0	      3640	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_2
0x400374a	            0x89de	                            mov esi, ebx	      3640	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_2
0x400374c	          0x4889ef	                            mov rdi, rbp	      3640	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_2
0x400374f	      0xe885fbffff	                   call sym.channel_read	      3640	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_2
0x4003754	            0xeb19	                           jmp 0x400376f	      3640	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_2
0x4003756	          0x83f802	                              cmp eax, 2	      3641	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	ELSE_1	IF_4
0x4003759	            0x7514	                           jne 0x400376f	      3641	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	ELSE_1	IF_4
0x400375b	      0xb900000000	                              mov ecx, 0	      3642	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	ELSE_1	IF_4	CALL_3
0x4003760	      0xba01000000	                              mov edx, 1	      3642	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	ELSE_1	IF_4	CALL_3
0x4003765	            0x89de	                            mov esi, ebx	      3642	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	ELSE_1	IF_4	CALL_3
0x4003767	          0x4889ef	                            mov rdi, rbp	      3642	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	ELSE_1	IF_4	CALL_3
0x400376a	      0xe88cd5ffff	         call sym.ch_close_part_on_error	      3642	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	ELSE_1	IF_4	CALL_3
0x400376f	          0x83c301	                              add ebx, 1	      3632	channel.c	FUNCTION_84	FOR_1	FOR_2
0x4003772	          0x83fb02	                              cmp ebx, 2	      3632	channel.c	FUNCTION_84	FOR_1	FOR_2
0x4003775	            0x76a4	                           jbe 0x400371b	      3632	channel.c	FUNCTION_84	FOR_1	FOR_2
0x4003777	        0x488b6d00	                    mov rbp, qword [rbp]	      3626	channel.c	FUNCTION_84	FOR_1
0x400377b	          0x4885ed	                           test rbp, rbp	      3626	channel.c	FUNCTION_84	FOR_1
0x400377e	            0x7585	                           jne 0x4003705	      3626	channel.c	FUNCTION_84	FOR_1
0x4003780	        0x4883c408	                              add rsp, 8	      3647	channel.c	FUNCTION_84
0x4003784	              0x5b	                                 pop rbx	      3647	channel.c	FUNCTION_84
0x4003785	              0x5d	                                 pop rbp	      3647	channel.c	FUNCTION_84
0x4003786	            0x415c	                                 pop r12	      3647	channel.c	FUNCTION_84
0x4003788	            0x415d	                                 pop r13	      3647	channel.c	FUNCTION_84
0x400378a	              0xc3	                                     ret	      3647	channel.c	FUNCTION_84
channel_still_useful	IF,3:ELSE,0:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,0	56
0x4000040	    0x83bfb0040000	              cmp dword [rdi + 0x4b0], 0	       315	channel.c	FUNCTION_9	IF_1
0x4000047	            0x740e	                            je 0x4000057	       315	channel.c	FUNCTION_9	IF_1
0x4000049	    0x4883bfa80400	              cmp qword [rdi + 0x4a8], 0	       315	channel.c	FUNCTION_9	IF_1
0x4000051	     0xf84d2000000	                            je 0x4000129	       315	channel.c	FUNCTION_9	IF_1
0x4000057	      0xb801000000	                              mov eax, 1	       320	channel.c	FUNCTION_9	IF_2
0x400005c	    0x4883bf900400	              cmp qword [rdi + 0x490], 0	       319	channel.c	FUNCTION_9	IF_2
0x4000064	     0xf85ca000000	                           jne 0x4000134	       319	channel.c	FUNCTION_9	IF_2
0x400006a	    0x4883bf280400	              cmp qword [rdi + 0x428], 0	       323	channel.c	FUNCTION_9	IF_3
0x4000072	     0xf85bc000000	                           jne 0x4000134	       323	channel.c	FUNCTION_9	IF_3
0x4000078	        0x837f18ff	cmp dword [rdi + 0x18], 0xffffffffffffffff	       330	channel.c	FUNCTION_9
0x400007c	            0x7512	                           jne 0x4000090	       330	channel.c	FUNCTION_9
0x400007e	      0x48837f4000	               cmp qword [rdi + 0x40], 0	       329	channel.c	FUNCTION_9
0x4000083	            0x750b	                           jne 0x4000090	       329	channel.c	FUNCTION_9
0x4000085	      0x48837f5800	               cmp qword [rdi + 0x58], 0	       330	channel.c	FUNCTION_9
0x400008a	           0xf95c0	                                setne al	       330	channel.c	FUNCTION_9
0x400008d	           0xfb6c0	                           movzx eax, al	       330	channel.c	FUNCTION_9
0x4000090	      0xb901000000	                              mov ecx, 1	       333	channel.c	FUNCTION_9
0x4000095	    0x83bf28010000	cmp dword [rdi + 0x128], 0xffffffffffffffff	       333	channel.c	FUNCTION_9
0x400009c	            0x7518	                           jne 0x40000b6	       333	channel.c	FUNCTION_9
0x400009e	    0x4883bf500100	              cmp qword [rdi + 0x150], 0	       332	channel.c	FUNCTION_9
0x40000a6	            0x750e	                           jne 0x40000b6	       332	channel.c	FUNCTION_9
0x40000a8	    0x4883bf680100	              cmp qword [rdi + 0x168], 0	       333	channel.c	FUNCTION_9
0x40000b0	           0xf95c1	                                setne cl	       333	channel.c	FUNCTION_9
0x40000b3	           0xfb6c9	                           movzx ecx, cl	       333	channel.c	FUNCTION_9
0x40000b6	      0xbe01000000	                              mov esi, 1	       336	channel.c	FUNCTION_9
0x40000bb	    0x83bf38020000	cmp dword [rdi + 0x238], 0xffffffffffffffff	       336	channel.c	FUNCTION_9
0x40000c2	            0x751a	                           jne 0x40000de	       336	channel.c	FUNCTION_9
0x40000c4	    0x4883bf600200	              cmp qword [rdi + 0x260], 0	       335	channel.c	FUNCTION_9
0x40000cc	            0x7510	                           jne 0x40000de	       335	channel.c	FUNCTION_9
0x40000ce	    0x4883bf780200	              cmp qword [rdi + 0x278], 0	       336	channel.c	FUNCTION_9
0x40000d6	        0x400f95c6	                               setne sil	       336	channel.c	FUNCTION_9
0x40000da	        0x400fb6f6	                          movzx esi, sil	       336	channel.c	FUNCTION_9
0x40000de	    0x4883bf800400	              cmp qword [rdi + 0x480], 0	       342	channel.c	FUNCTION_9
0x40000e6	            0x740d	                            je 0x40000f5	       342	channel.c	FUNCTION_9
0x40000e8	             0x9c8	                             or eax, ecx	       337	channel.c	FUNCTION_9
0x40000ea	            0x89c2	                            mov edx, eax	       337	channel.c	FUNCTION_9
0x40000ec	      0xb801000000	                              mov eax, 1	       342	channel.c	FUNCTION_9
0x40000f1	             0x9f2	                             or edx, esi	       337	channel.c	FUNCTION_9
0x40000f3	            0x753f	                           jne 0x4000134	       337	channel.c	FUNCTION_9
0x40000f5	    0x4883bff80100	              cmp qword [rdi + 0x1f8], 0	       339	channel.c	FUNCTION_9
0x40000fd	            0x750a	                           jne 0x4000109	       339	channel.c	FUNCTION_9
0x40000ff	    0x4883bf080200	              cmp qword [rdi + 0x208], 0	       340	channel.c	FUNCTION_9
0x4000107	            0x7409	                            je 0x4000112	       340	channel.c	FUNCTION_9
0x4000109	      0xb801000000	                              mov eax, 1	       342	channel.c	FUNCTION_9
0x400010e	            0x85c9	                           test ecx, ecx	       341	channel.c	FUNCTION_9
0x4000110	            0x7522	                           jne 0x4000134	       341	channel.c	FUNCTION_9
0x4000112	    0x4883bf080300	              cmp qword [rdi + 0x308], 0	       342	channel.c	FUNCTION_9
0x400011a	            0x750a	                           jne 0x4000126	       342	channel.c	FUNCTION_9
0x400011c	    0x4883bf180300	              cmp qword [rdi + 0x318], 0	       343	channel.c	FUNCTION_9
0x4000124	            0x7409	                            je 0x400012f	       343	channel.c	FUNCTION_9
0x4000126	            0x89f0	                            mov eax, esi	       316	channel.c	FUNCTION_9	IF_1
0x4000128	              0xc3	                                     ret	       316	channel.c	FUNCTION_9	IF_1
0x4000129	      0xb800000000	                              mov eax, 0	       316	channel.c	FUNCTION_9	IF_1
0x400012e	              0xc3	                                     ret	       316	channel.c	FUNCTION_9	IF_1
0x400012f	      0xb800000000	                              mov eax, 0	       342	channel.c	FUNCTION_9
0x4000134	            0xf3c3	                                     ret	       345	channel.c	FUNCTION_9
set_ref_in_channel	IF,1:ELSE,0:FOR,1:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,2	45
0x4005820	            0x4154	                                push r12	      4334	channel.c	FUNCTION_97
0x4005822	              0x55	                                push rbp	      4334	channel.c	FUNCTION_97
0x4005823	              0x53	                                push rbx	      4334	channel.c	FUNCTION_97
0x4005824	        0x4883ec20	                           sub rsp, 0x20	      4334	channel.c	FUNCTION_97
0x4005828	    0x64488b042528	                mov rax, qword fs:[0x28]	      4334	channel.c	FUNCTION_97
0x4005831	      0x4889442418	             mov qword [rsp + 0x18], rax	      4334	channel.c	FUNCTION_97
0x4005836	            0x31c0	                            xor eax, eax	      4334	channel.c	FUNCTION_97
0x4005838	    0x488b1d000000	            mov rbx, qword [0x0400583f] 	      4339	channel.c	FUNCTION_97	FOR_1
0x400583f	          0x4885db	                           test rbx, rbx	      4339	channel.c	FUNCTION_97	FOR_1
0x4005842	            0x7454	                            je 0x4005898	      4339	channel.c	FUNCTION_97	FOR_1
0x4005844	          0x4189fc	                           mov r12d, edi	      4339	channel.c	FUNCTION_97	FOR_1
0x4005847	      0xbd00000000	                              mov ebp, 0	      4339	channel.c	FUNCTION_97	FOR_1
0x400584c	          0x4889df	                            mov rdi, rbx	      4340	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_1
0x400584f	      0xe8eca7ffff	           call sym.channel_still_useful	      4340	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_1
0x4005854	            0x85c0	                           test eax, eax	      4340	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_1
0x4005856	            0x7436	                            je 0x400588e	      4340	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_1
0x4005858	    0xc704240a0000	                    mov dword [rsp], 0xa	      4342	channel.c	FUNCTION_97	FOR_1	IF_1
0x400585f	      0x48895c2408	                mov qword [rsp + 8], rbx	      4343	channel.c	FUNCTION_97	FOR_1	IF_1
0x4005864	            0x85ed	                           test ebp, ebp	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x4005866	            0x7521	                           jne 0x4005889	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x4005868	      0xb900000000	                              mov ecx, 0	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x400586d	      0xba00000000	                              mov edx, 0	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x4005872	          0x4489e6	                           mov esi, r12d	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x4005875	          0x4889e7	                            mov rdi, rsp	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x4005878	      0xe800000000	                          call 0x400587d	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x400587d	            0x85c0	                           test eax, eax	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x400587f	        0x400f95c5	                               setne bpl	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x4005883	        0x400fb6ed	                          movzx ebp, bpl	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x4005887	            0xeb05	                           jmp 0x400588e	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x4005889	      0xbd01000000	                              mov ebp, 1	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x400588e	          0x488b1b	                    mov rbx, qword [rbx]	      4339	channel.c	FUNCTION_97	FOR_1
0x4005891	          0x4885db	                           test rbx, rbx	      4339	channel.c	FUNCTION_97	FOR_1
0x4005894	            0x75b6	                           jne 0x400584c	      4339	channel.c	FUNCTION_97	FOR_1
0x4005896	            0xeb05	                           jmp 0x400589d	      4339	channel.c	FUNCTION_97	FOR_1
0x4005898	      0xbd00000000	                              mov ebp, 0	      4335	channel.c	FUNCTION_97
0x400589d	            0x89e8	                            mov eax, ebp	      4347	channel.c	FUNCTION_97
0x400589f	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      4347	channel.c	FUNCTION_97
0x40058a4	    0x644833142528	                xor rdx, qword fs:[0x28]	      4347	channel.c	FUNCTION_97
0x40058ad	            0x7405	                            je 0x40058b4	      4347	channel.c	FUNCTION_97
0x40058af	      0xe800000000	                          call 0x40058b4	      4347	channel.c	FUNCTION_97
0x40058b4	        0x4883c420	                           add rsp, 0x20	      4347	channel.c	FUNCTION_97
0x40058b8	              0x5b	                                 pop rbx	      4347	channel.c	FUNCTION_97
0x40058b9	              0x5d	                                 pop rbp	      4347	channel.c	FUNCTION_97
0x40058ba	            0x415c	                                 pop r12	      4347	channel.c	FUNCTION_97
0x40058bc	              0xc3	                                     ret	      4347	channel.c	FUNCTION_97
channel_fd2channel	IF,2:ELSE,0:FOR,2:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,0	28
0x40028a7	          0x83ffff	             cmp edi, 0xffffffffffffffff	      3598	channel.c	FUNCTION_83	IF_1
0x40028aa	            0x7446	                            je 0x40028f2	      3598	channel.c	FUNCTION_83	IF_1
0x40028ac	    0x488b05000000	            mov rax, qword [0x040028b3] 	      3599	channel.c	FUNCTION_83	IF_1	FOR_1
0x40028b3	          0x4885c0	                           test rax, rax	      3599	channel.c	FUNCTION_83	IF_1	FOR_1
0x40028b6	            0x7527	                           jne 0x40028df	      3599	channel.c	FUNCTION_83	IF_1	FOR_1
0x40028b8	            0xf3c3	                                     ret	      3599	channel.c	FUNCTION_83	IF_1	FOR_1
0x40028ba	            0x3b39	                    cmp edi, dword [rcx]	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x40028bc	            0x750a	                           jne 0x40028c8	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x40028be	            0xeb05	                           jmp 0x40028c5	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x40028c0	      0xba00000000	                              mov edx, 0	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x40028c5	            0x8916	                    mov dword [rsi], edx	      3605	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x40028c7	              0xc3	                                     ret	      3606	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x40028c8	          0x83c201	                              add edx, 1	      3602	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2
0x40028cb	    0x4881c1100100	                          add rcx, 0x110	      3602	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2
0x40028d2	          0x83fa02	                              cmp edx, 2	      3602	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2
0x40028d5	            0x76e3	                           jbe 0x40028ba	      3602	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2
0x40028d7	          0x488b00	                    mov rax, qword [rax]	      3600	channel.c	FUNCTION_83	IF_1	FOR_1
0x40028da	          0x4885c0	                           test rax, rax	      3599	channel.c	FUNCTION_83	IF_1	FOR_1
0x40028dd	            0x7419	                            je 0x40028f8	      3599	channel.c	FUNCTION_83	IF_1	FOR_1
0x40028df	          0x3b7818	            cmp edi, dword [rax + 0x18] 	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x40028e2	            0x74dc	                            je 0x40028c0	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x40028e4	    0x488d88280100	                  lea rcx, [rax + 0x128]	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x40028eb	      0xba01000000	                              mov edx, 1	      3602	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2
0x40028f0	            0xebc8	                           jmp 0x40028ba	      3602	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2
0x40028f2	      0xb800000000	                              mov eax, 0	      3609	channel.c	FUNCTION_83
0x40028f7	              0xc3	                                     ret	      3609	channel.c	FUNCTION_83
0x40028f8	      0xb800000000	                              mov eax, 0	      3609	channel.c	FUNCTION_83
0x40028fd	              0xc3	                                     ret	      3610	channel.c	FUNCTION_83
job_info	IF,5:ELSE,0:FOR,1:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,14	100
0x400823a	            0x4155	                                push r13	      5727	channel.c	FUNCTION_132
0x400823c	            0x4154	                                push r12	      5727	channel.c	FUNCTION_132
0x400823e	              0x55	                                push rbp	      5727	channel.c	FUNCTION_132
0x400823f	              0x53	                                push rbx	      5727	channel.c	FUNCTION_132
0x4008240	        0x4883ec08	                              sub rsp, 8	      5727	channel.c	FUNCTION_132
0x4008244	          0x4889fd	                            mov rbp, rdi	      5727	channel.c	FUNCTION_132
0x4008247	          0x4889f3	                            mov rbx, rsi	      5727	channel.c	FUNCTION_132
0x400824a	      0xe800000000	                          call 0x400824f	      5733	channel.c	FUNCTION_132	CALL_2
0x400824f	          0x4889c1	                            mov rcx, rax	      5733	channel.c	FUNCTION_132	CALL_2
0x4008252	      0xba00000000	                              mov edx, 0	      5733	channel.c	FUNCTION_132	CALL_2
0x4008257	      0xbe00000000	                              mov esi, 0	      5733	channel.c	FUNCTION_132	CALL_2
0x400825c	          0x4889df	                            mov rdi, rbx	      5733	channel.c	FUNCTION_132	CALL_2
0x400825f	      0xe800000000	                          call 0x4008264	      5733	channel.c	FUNCTION_132	CALL_2
0x4008264	      0xbf00000000	                              mov edi, 0	      5735	channel.c	FUNCTION_132	CALL_3
0x4008269	      0xe800000000	                          call 0x400826e	      5735	channel.c	FUNCTION_132	CALL_3
0x400826e	          0x4885c0	                           test rax, rax	      5736	channel.c	FUNCTION_132	IF_1
0x4008271	     0xf8430010000	                            je 0x40083a7	      5736	channel.c	FUNCTION_132	IF_1
0x4008277	          0x4989c4	                            mov r12, rax	      5736	channel.c	FUNCTION_132	IF_1
0x400827a	        0xc6400400	                   mov byte [rax + 4], 0	      5738	channel.c	FUNCTION_132
0x400827e	    0xc7000a000000	                    mov dword [rax], 0xa	      5739	channel.c	FUNCTION_132
0x4008284	        0x488b4560	            mov rax, qword [rbp + 0x60] 	      5740	channel.c	FUNCTION_132
0x4008288	      0x4989442408	                mov qword [r12 + 8], rax	      5740	channel.c	FUNCTION_132
0x400828d	        0x488b4560	            mov rax, qword [rbp + 0x60] 	      5741	channel.c	FUNCTION_132	IF_2
0x4008291	          0x4885c0	                           test rax, rax	      5741	channel.c	FUNCTION_132	IF_2
0x4008294	            0x7407	                            je 0x400829d	      5741	channel.c	FUNCTION_132	IF_2
0x4008296	    0x8380b4040000	              add dword [rax + 0x4b4], 1	      5742	channel.c	FUNCTION_132	IF_2
0x400829d	          0x4c89e6	                            mov rsi, r12	      5743	channel.c	FUNCTION_132	IF_3	CALL_4
0x40082a0	          0x4889df	                            mov rdi, rbx	      5743	channel.c	FUNCTION_132	IF_3	CALL_4
0x40082a3	      0xe800000000	                          call 0x40082a8	      5743	channel.c	FUNCTION_132	IF_3	CALL_4
0x40082a8	            0x85c0	                           test eax, eax	      5743	channel.c	FUNCTION_132	IF_3	CALL_4
0x40082aa	            0x7508	                           jne 0x40082b4	      5743	channel.c	FUNCTION_132	IF_3	CALL_4
0x40082ac	          0x4c89e7	                            mov rdi, r12	      5744	channel.c	FUNCTION_132	CALL_5
0x40082af	      0xe800000000	                          call 0x40082b4	      5744	channel.c	FUNCTION_132	CALL_5
0x40082b4	        0x48635510	         movsxd rdx, dword [rbp + 0x10] 	      5751	channel.c	FUNCTION_132	CALL_6
0x40082b8	      0xb900000000	                              mov ecx, 0	      5751	channel.c	FUNCTION_132	CALL_6
0x40082bd	      0xbe00000000	                              mov esi, 0	      5751	channel.c	FUNCTION_132	CALL_6
0x40082c2	          0x4889df	                            mov rdi, rbx	      5751	channel.c	FUNCTION_132	CALL_6
0x40082c5	      0xe800000000	                          call 0x40082ca	      5751	channel.c	FUNCTION_132	CALL_6
0x40082ca	        0x488b4d18	            mov rcx, qword [rbp + 0x18] 	      5753	channel.c	FUNCTION_132
0x40082ce	          0x4885c9	                           test rcx, rcx	      5752	channel.c	FUNCTION_132	CALL_7
0x40082d1	      0xb800000000	                              mov eax, 0	      5752	channel.c	FUNCTION_132	CALL_7
0x40082d6	        0x480f44c8	                          cmove rcx, rax	      5752	channel.c	FUNCTION_132	CALL_7
0x40082da	      0xba00000000	                              mov edx, 0	      5752	channel.c	FUNCTION_132	CALL_7
0x40082df	      0xbe00000000	                              mov esi, 0	      5752	channel.c	FUNCTION_132	CALL_7
0x40082e4	          0x4889df	                            mov rdi, rbx	      5752	channel.c	FUNCTION_132	CALL_7
0x40082e7	      0xe800000000	                          call 0x40082ec	      5752	channel.c	FUNCTION_132	CALL_7
0x40082ec	        0x488b4d20	            mov rcx, qword [rbp + 0x20] 	      5755	channel.c	FUNCTION_132
0x40082f0	          0x4885c9	                           test rcx, rcx	      5754	channel.c	FUNCTION_132	CALL_8
0x40082f3	      0xb800000000	                              mov eax, 0	      5754	channel.c	FUNCTION_132	CALL_8
0x40082f8	        0x480f44c8	                          cmove rcx, rax	      5754	channel.c	FUNCTION_132	CALL_8
0x40082fc	      0xba00000000	                              mov edx, 0	      5754	channel.c	FUNCTION_132	CALL_8
0x4008301	      0xbe00000000	                              mov esi, 0	      5754	channel.c	FUNCTION_132	CALL_8
0x4008306	          0x4889df	                            mov rdi, rbx	      5754	channel.c	FUNCTION_132	CALL_8
0x4008309	      0xe800000000	                          call 0x400830e	      5754	channel.c	FUNCTION_132	CALL_8
0x400830e	        0x48635538	         movsxd rdx, dword [rbp + 0x38] 	      5757	channel.c	FUNCTION_132	CALL_9
0x4008312	      0xb900000000	                              mov ecx, 0	      5757	channel.c	FUNCTION_132	CALL_9
0x4008317	      0xbe00000000	                              mov esi, 0	      5757	channel.c	FUNCTION_132	CALL_9
0x400831c	          0x4889df	                            mov rdi, rbx	      5757	channel.c	FUNCTION_132	CALL_9
0x400831f	      0xe800000000	                          call 0x4008324	      5757	channel.c	FUNCTION_132	CALL_9
0x4008324	        0x488b4d40	            mov rcx, qword [rbp + 0x40] 	      5758	channel.c	FUNCTION_132	CALL_10
0x4008328	      0xba00000000	                              mov edx, 0	      5758	channel.c	FUNCTION_132	CALL_10
0x400832d	      0xbe00000000	                              mov esi, 0	      5758	channel.c	FUNCTION_132	CALL_10
0x4008332	          0x4889df	                            mov rdi, rbx	      5758	channel.c	FUNCTION_132	CALL_10
0x4008335	      0xe800000000	                          call 0x400833a	      5758	channel.c	FUNCTION_132	CALL_10
0x400833a	        0x488b4d30	            mov rcx, qword [rbp + 0x30] 	      5759	channel.c	FUNCTION_132	CALL_11
0x400833e	      0xba00000000	                              mov edx, 0	      5759	channel.c	FUNCTION_132	CALL_11
0x4008343	      0xbe00000000	                              mov esi, 0	      5759	channel.c	FUNCTION_132	CALL_11
0x4008348	          0x4889df	                            mov rdi, rbx	      5759	channel.c	FUNCTION_132	CALL_11
0x400834b	      0xe800000000	                          call 0x4008350	      5759	channel.c	FUNCTION_132	CALL_11
0x4008350	      0xe800000000	                          call 0x4008355	      5761	channel.c	FUNCTION_132	CALL_12
0x4008355	          0x4989c4	                            mov r12, rax	      5761	channel.c	FUNCTION_132	CALL_12
0x4008358	          0x4885c0	                           test rax, rax	      5762	channel.c	FUNCTION_132	IF_4
0x400835b	            0x744a	                            je 0x40083a7	      5762	channel.c	FUNCTION_132	IF_4
0x400835d	          0x4889c2	                            mov rdx, rax	      5764	channel.c	FUNCTION_132	IF_4	CALL_13
0x4008360	      0xbe00000000	                              mov esi, 0	      5764	channel.c	FUNCTION_132	IF_4	CALL_13
0x4008365	          0x4889df	                            mov rdi, rbx	      5764	channel.c	FUNCTION_132	IF_4	CALL_13
0x4008368	      0xe800000000	                          call 0x400836d	      5764	channel.c	FUNCTION_132	IF_4	CALL_13
0x400836d	        0x488b4568	            mov rax, qword [rbp + 0x68] 	      5765	channel.c	FUNCTION_132	IF_4	IF_5
0x4008371	          0x4885c0	                           test rax, rax	      5765	channel.c	FUNCTION_132	IF_4	IF_5
0x4008374	            0x7431	                            je 0x40083a7	      5765	channel.c	FUNCTION_132	IF_4	IF_5
0x4008376	          0x488b30	                    mov rsi, qword [rax]	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x4008379	          0x4885f6	                           test rsi, rsi	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400837c	            0x7429	                            je 0x40083a7	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400837e	      0xbb00000000	                              mov ebx, 0	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x4008383	    0x41bdffffffff	                    mov r13d, 0xffffffff	      5767	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x4008389	          0x4489ea	                           mov edx, r13d	      5767	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400838c	          0x4c89e7	                            mov rdi, r12	      5767	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400838f	      0xe800000000	                          call 0x4008394	      5767	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x4008394	          0x83c301	                              add ebx, 1	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x4008397	          0x4863d3	                         movsxd rdx, ebx	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400839a	        0x488b4568	            mov rax, qword [rbp + 0x68] 	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400839e	        0x488b34d0	            mov rsi, qword [rax + rdx*8]	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x40083a2	          0x4885f6	                           test rsi, rsi	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x40083a5	            0x75e2	                           jne 0x4008389	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x40083a7	        0x4883c408	                              add rsp, 8	      5769	channel.c	FUNCTION_132
0x40083ab	              0x5b	                                 pop rbx	      5769	channel.c	FUNCTION_132
0x40083ac	              0x5d	                                 pop rbp	      5769	channel.c	FUNCTION_132
0x40083ad	            0x415c	                                 pop r12	      5769	channel.c	FUNCTION_132
0x40083af	            0x415d	                                 pop r13	      5769	channel.c	FUNCTION_132
0x40083b1	              0xc3	                                     ret	      5769	channel.c	FUNCTION_132
channel_buffer_free	IF,1:ELSE,0:FOR,2:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,1	35
0x40018e6	            0x4156	                                push r14	      1488	channel.c	FUNCTION_39
0x40018e8	            0x4155	                                push r13	      1488	channel.c	FUNCTION_39
0x40018ea	            0x4154	                                push r12	      1488	channel.c	FUNCTION_39
0x40018ec	              0x55	                                push rbp	      1488	channel.c	FUNCTION_39
0x40018ed	              0x53	                                push rbx	      1488	channel.c	FUNCTION_39
0x40018ee	          0x4989fe	                            mov r14, rdi	      1488	channel.c	FUNCTION_39
0x40018f1	    0x4c8b25000000	            mov r12, qword [0x040018f8] 	      1492	channel.c	FUNCTION_39	FOR_1
0x40018f8	          0x4d85e4	                           test r12, r12	      1492	channel.c	FUNCTION_39	FOR_1
0x40018fb	            0x753d	                           jne 0x400193a	      1492	channel.c	FUNCTION_39	FOR_1
0x40018fd	            0xeb52	                           jmp 0x4001951	      1492	channel.c	FUNCTION_39	FOR_1
0x40018ff	          0x4c3933	                    cmp qword [rbx], r14	      1497	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4001902	            0x751d	                           jne 0x4001921	      1497	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4001904	        0x488b5500	                    mov rdx, qword [rbp]	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4001908	      0xbe00000000	                              mov esi, 0	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x400190d	          0x4c89e7	                            mov rdi, r12	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4001910	      0xb800000000	                              mov eax, 0	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4001915	      0xe800000000	                          call 0x400191a	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x400191a	    0x48c703000000	                      mov qword [rbx], 0	      1501	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4001921	    0x4881c3100100	                          add rbx, 0x110	      1501	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4001928	        0x4883c508	                              add rbp, 8	      1501	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x400192c	          0x4c39eb	                            cmp rbx, r13	      1493	channel.c	FUNCTION_39	FOR_1	FOR_2
0x400192f	            0x75ce	                           jne 0x40018ff	      1493	channel.c	FUNCTION_39	FOR_1	FOR_2
0x4001931	        0x4d8b2424	                    mov r12, qword [r12]	      1492	channel.c	FUNCTION_39	FOR_1
0x4001935	          0x4d85e4	                           test r12, r12	      1492	channel.c	FUNCTION_39	FOR_1
0x4001938	            0x7417	                            je 0x4001951	      1492	channel.c	FUNCTION_39	FOR_1
0x400193a	    0x498d9c24f800	                   lea rbx, [r12 + 0xf8]	      1492	channel.c	FUNCTION_39	FOR_1
0x4001942	      0xbd00000000	                              mov ebp, 0	      1492	channel.c	FUNCTION_39	FOR_1
0x4001947	    0x4d8dac243805	                  lea r13, [r12 + 0x538]	      1492	channel.c	FUNCTION_39	FOR_1
0x400194f	            0xebae	                           jmp 0x40018ff	      1492	channel.c	FUNCTION_39	FOR_1
0x4001951	              0x5b	                                 pop rbx	      1504	channel.c	FUNCTION_39
0x4001952	              0x5d	                                 pop rbp	      1504	channel.c	FUNCTION_39
0x4001953	            0x415c	                                 pop r12	      1504	channel.c	FUNCTION_39
0x4001955	            0x415d	                                 pop r13	      1504	channel.c	FUNCTION_39
0x4001957	            0x415e	                                 pop r14	      1504	channel.c	FUNCTION_39
0x4001959	              0xc3	                                     ret	      1504	channel.c	FUNCTION_39
channel_fill	IF,3:ELSE,0:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,8	57
0x4001e1f	            0x4156	                                push r14	      1866	channel.c	FUNCTION_51
0x4001e21	            0x4155	                                push r13	      1866	channel.c	FUNCTION_51
0x4001e23	            0x4154	                                push r12	      1866	channel.c	FUNCTION_51
0x4001e25	              0x55	                                push rbp	      1866	channel.c	FUNCTION_51
0x4001e26	              0x53	                                push rbx	      1866	channel.c	FUNCTION_51
0x4001e27	          0x4989fc	                            mov r12, rdi	      1866	channel.c	FUNCTION_51
0x4001e2a	          0x8b7728	            mov esi, dword [rdi + 0x28] 	      1869	channel.c	FUNCTION_51	CALL_1
0x4001e2d	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	      1869	channel.c	FUNCTION_51	CALL_1
0x4001e31	      0xe800000000	                          call 0x4001e36	      1869	channel.c	FUNCTION_51	CALL_1
0x4001e36	          0x4885c0	                           test rax, rax	      1874	channel.c	FUNCTION_51	IF_1
0x4001e39	     0xf848d000000	                            je 0x4001ecc	      1874	channel.c	FUNCTION_51	IF_1
0x4001e3f	          0x4989c5	                            mov r13, rax	      1874	channel.c	FUNCTION_51	IF_1
0x4001e42	      0x498b6c2408	                mov rbp, qword [r12 + 8]	      1877	channel.c	FUNCTION_51
0x4001e47	        0x492b2c24	                    sub rbp, qword [r12]	      1877	channel.c	FUNCTION_51
0x4001e4b	            0x85ed	                           test ebp, ebp	      1878	channel.c	FUNCTION_51	IF_2
0x4001e4d	            0x7e66	                           jle 0x4001eb5	      1878	channel.c	FUNCTION_51	IF_2
0x4001e4f	      0xb800000000	                              mov eax, 0	      1881	channel.c	FUNCTION_51	IF_2	CALL_2
0x4001e54	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1881	channel.c	FUNCTION_51	IF_2	CALL_2
0x4001e5b	          0x4c89ef	                            mov rdi, r13	      1881	channel.c	FUNCTION_51	IF_2	CALL_2
0x4001e5e	            0xf2ae	              repne scasb al, byte [rdi]	      1881	channel.c	FUNCTION_51	IF_2	CALL_2
0x4001e60	          0x48f7d1	                                 not rcx	      1881	channel.c	FUNCTION_51	IF_2	CALL_2
0x4001e63	        0x488d59ff	                      lea rbx, [rcx - 1]	      1881	channel.c	FUNCTION_51	IF_2	CALL_2
0x4001e67	        0x8d7c2b01	                lea edi, [rbx + rbp + 1]	      1882	channel.c	FUNCTION_51	IF_2	CALL_3
0x4001e6b	      0xe800000000	                          call 0x4001e70	      1882	channel.c	FUNCTION_51	IF_2	CALL_3
0x4001e70	          0x4989c6	                            mov r14, rax	      1882	channel.c	FUNCTION_51	IF_2	CALL_3
0x4001e73	          0x4885c0	                           test rax, rax	      1883	channel.c	FUNCTION_51	IF_2	IF_3
0x4001e76	            0x750f	                           jne 0x4001e87	      1883	channel.c	FUNCTION_51	IF_2	IF_3
0x4001e78	          0x4c89ef	                            mov rdi, r13	      1885	channel.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4001e7b	      0xe800000000	                          call 0x4001e80	      1885	channel.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4001e80	      0xb800000000	                              mov eax, 0	      1886	channel.c	FUNCTION_51	IF_2	IF_3
0x4001e85	            0xeb4a	                           jmp 0x4001ed1	      1886	channel.c	FUNCTION_51	IF_2	IF_3
0x4001e87	          0x4863ed	                         movsxd rbp, ebp	      1888	channel.c	FUNCTION_51	IF_2	CALL_5
0x4001e8a	          0x4889ea	                            mov rdx, rbp	        59	string3.h	FUNCTION_136	CALL_3
0x4001e8d	        0x498b3424	                    mov rsi, qword [r12]	        59	string3.h	FUNCTION_136	CALL_3
0x4001e91	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_136	CALL_3
0x4001e94	      0xe800000000	                          call 0x4001e99	        59	string3.h	FUNCTION_136	CALL_3
0x4001e99	          0x8d5301	                      lea edx, [rbx + 1]	        59	string3.h	FUNCTION_136	CALL_3
0x4001e9c	          0x4863d2	                         movsxd rdx, edx	        59	string3.h	FUNCTION_136	CALL_3
0x4001e9f	        0x498d3c2e	                    lea rdi, [r14 + rbp]	        59	string3.h	FUNCTION_136	CALL_3
0x4001ea3	          0x4c89ee	                            mov rsi, r13	        59	string3.h	FUNCTION_136	CALL_3
0x4001ea6	      0xe800000000	                          call 0x4001eab	        59	string3.h	FUNCTION_136	CALL_3
0x4001eab	          0x4c89ef	                            mov rdi, r13	      1890	channel.c	FUNCTION_51	IF_2	CALL_7
0x4001eae	      0xe800000000	                          call 0x4001eb3	      1890	channel.c	FUNCTION_51	IF_2	CALL_7
0x4001eb3	            0xeb03	                           jmp 0x4001eb8	      1890	channel.c	FUNCTION_51	IF_2	CALL_7
0x4001eb5	          0x4989c6	                            mov r14, rax	      1869	channel.c	FUNCTION_51	CALL_1
0x4001eb8	        0x498b3c24	                    mov rdi, qword [r12]	      1894	channel.c	FUNCTION_51	CALL_8
0x4001ebc	      0xe800000000	                          call 0x4001ec1	      1894	channel.c	FUNCTION_51	CALL_8
0x4001ec1	        0x4d893424	                    mov qword [r12], r14	      1895	channel.c	FUNCTION_51
0x4001ec5	      0xb801000000	                              mov eax, 1	      1896	channel.c	FUNCTION_51
0x4001eca	            0xeb05	                           jmp 0x4001ed1	      1896	channel.c	FUNCTION_51
0x4001ecc	      0xb800000000	                              mov eax, 0	      1875	channel.c	FUNCTION_51	IF_1
0x4001ed1	              0x5b	                                 pop rbx	      1897	channel.c	FUNCTION_51
0x4001ed2	              0x5d	                                 pop rbp	      1897	channel.c	FUNCTION_51
0x4001ed3	            0x415c	                                 pop r12	      1897	channel.c	FUNCTION_51
0x4001ed5	            0x415d	                                 pop r13	      1897	channel.c	FUNCTION_51
0x4001ed7	            0x415e	                                 pop r14	      1897	channel.c	FUNCTION_51
0x4001ed9	              0xc3	                                     ret	      1897	channel.c	FUNCTION_51
channel_write_any_lines	IF,0:ELSE,0:FOR,1:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,1	11
0x400316d	              0x53	                                push rbx	      1530	channel.c	FUNCTION_41
0x400316e	    0x488b1d000000	            mov rbx, qword [0x04003175] 	      1533	channel.c	FUNCTION_41	FOR_1
0x4003175	          0x4885db	                           test rbx, rbx	      1533	channel.c	FUNCTION_41	FOR_1
0x4003178	            0x7410	                            je 0x400318a	      1533	channel.c	FUNCTION_41	FOR_1
0x400317a	          0x4889df	                            mov rdi, rbx	      1534	channel.c	FUNCTION_41	CALL_1
0x400317d	      0xe898ffffff	            call sym.channel_write_input	      1534	channel.c	FUNCTION_41	CALL_1
0x4003182	          0x488b1b	                    mov rbx, qword [rbx]	      1533	channel.c	FUNCTION_41	FOR_1
0x4003185	          0x4885db	                           test rbx, rbx	      1533	channel.c	FUNCTION_41	FOR_1
0x4003188	            0x75f0	                           jne 0x400317a	      1533	channel.c	FUNCTION_41	FOR_1
0x400318a	              0x5b	                                 pop rbx	      1535	channel.c	FUNCTION_41
0x400318b	              0xc3	                                     ret	      1535	channel.c	FUNCTION_41
channel_free_channel	IF,2:ELSE,1:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,1	17
0x4000346	        0x4883ec08	                              sub rsp, 8	       369	channel.c	FUNCTION_12
0x400034a	          0x488b07	                    mov rax, qword [rdi]	       370	channel.c	FUNCTION_12	IF_1
0x400034d	          0x4885c0	                           test rax, rax	       370	channel.c	FUNCTION_12	IF_1
0x4000350	            0x7408	                            je 0x400035a	       370	channel.c	FUNCTION_12	IF_1
0x4000352	        0x488b5708	                mov rdx, qword [rdi + 8]	       371	channel.c	FUNCTION_12	IF_1
0x4000356	        0x48895008	                mov qword [rax + 8], rdx	       371	channel.c	FUNCTION_12	IF_1
0x400035a	        0x488b4708	                mov rax, qword [rdi + 8]	       372	channel.c	FUNCTION_12	IF_2
0x400035e	          0x4885c0	                           test rax, rax	       372	channel.c	FUNCTION_12	IF_2
0x4000361	            0x750c	                           jne 0x400036f	       372	channel.c	FUNCTION_12	IF_2
0x4000363	          0x488b07	                    mov rax, qword [rdi]	       373	channel.c	FUNCTION_12	IF_2
0x4000366	    0x488905000000	            mov qword [0x0400036d], rax 	       373	channel.c	FUNCTION_12	IF_2
0x400036d	            0xeb06	                           jmp 0x4000375	       373	channel.c	FUNCTION_12	IF_2
0x400036f	          0x488b17	                    mov rdx, qword [rdi]	       375	channel.c	FUNCTION_12	ELSE_1
0x4000372	          0x488910	                    mov qword [rax], rdx	       375	channel.c	FUNCTION_12	ELSE_1
0x4000375	      0xe800000000	                          call 0x400037a	       376	channel.c	FUNCTION_12	CALL_1
0x400037a	        0x4883c408	                              add rsp, 8	       377	channel.c	FUNCTION_12
0x400037e	              0xc3	                                     ret	       377	channel.c	FUNCTION_12
win32_build_cmd	IF,3:ELSE,0:FOR,1:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,5	194
0x4007604	            0x4157	                                push r15	      5236	channel.c	FUNCTION_119
0x4007606	            0x4156	                                push r14	      5236	channel.c	FUNCTION_119
0x4007608	            0x4155	                                push r13	      5236	channel.c	FUNCTION_119
0x400760a	            0x4154	                                push r12	      5236	channel.c	FUNCTION_119
0x400760c	              0x55	                                push rbp	      5236	channel.c	FUNCTION_119
0x400760d	              0x53	                                push rbx	      5236	channel.c	FUNCTION_119
0x400760e	        0x4883ec28	                           sub rsp, 0x28	      5236	channel.c	FUNCTION_119
0x4007612	          0x4989f6	                            mov r14, rsi	      5236	channel.c	FUNCTION_119
0x4007615	    0x64488b042528	                mov rax, qword fs:[0x28]	      5236	channel.c	FUNCTION_119
0x400761e	      0x4889442418	             mov qword [rsp + 0x18], rax	      5236	channel.c	FUNCTION_119
0x4007623	            0x31c0	                            xor eax, eax	      5236	channel.c	FUNCTION_119
0x4007625	          0x4c8b2f	                    mov r13, qword [rdi]	      5240	channel.c	FUNCTION_119	FOR_1
0x4007628	          0x4d85ed	                           test r13, r13	      5240	channel.c	FUNCTION_119	FOR_1
0x400762b	     0xf8448020000	                            je 0x4007879	      5240	channel.c	FUNCTION_119	FOR_1
0x4007631	        0x498d7d10	                   lea rdi, [r13 + 0x10]	      5242	channel.c	FUNCTION_119	FOR_1	CALL_1
0x4007635	      0xe800000000	                          call 0x400763a	      5242	channel.c	FUNCTION_119	FOR_1	CALL_1
0x400763a	          0x4989c4	                            mov r12, rax	      5242	channel.c	FUNCTION_119	FOR_1	CALL_1
0x400763d	          0x4885c0	                           test rax, rax	      5243	channel.c	FUNCTION_119	FOR_1	IF_1
0x4007640	     0xf843a020000	                            je 0x4007880	      5243	channel.c	FUNCTION_119	FOR_1	IF_1
0x4007646	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5168	channel.c	FUNCTION_118	CALL_1
0x400764d	          0x4889c7	                            mov rdi, rax	      5168	channel.c	FUNCTION_118	CALL_1
0x4007650	      0xb800000000	                              mov eax, 0	      5168	channel.c	FUNCTION_118	CALL_1
0x4007655	            0xf2ae	              repne scasb al, byte [rdi]	      5168	channel.c	FUNCTION_118	CALL_1
0x4007657	          0x48f7d1	                                 not rcx	      5168	channel.c	FUNCTION_118	CALL_1
0x400765a	        0x4c8d79ff	                      lea r15, [rcx - 1]	      5168	channel.c	FUNCTION_118	CALL_1
0x400765e	      0x4c89642408	                mov qword [rsp + 8], r12	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x4007663	      0x410fb61424	                   movzx edx, byte [r12]	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x4007668	            0x84d2	                             test dl, dl	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400766a	            0x7459	                            je 0x40076c5	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400766c	          0x4c89e7	                            mov rdi, r12	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400766f	          0x4489fb	                           mov ebx, r15d	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x4007672	      0xbd00000000	                              mov ebp, 0	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x4007677	          0x80fa22	                            cmp dl, 0x22	      5172	channel.c	FUNCTION_118	FOR_1	IF_1
0x400767a	            0x7405	                            je 0x4007681	      5172	channel.c	FUNCTION_118	FOR_1	IF_1
0x400767c	          0x80fa5c	                            cmp dl, 0x5c	      5172	channel.c	FUNCTION_118	FOR_1	IF_1
0x400767f	            0x7503	                           jne 0x4007684	      5172	channel.c	FUNCTION_118	FOR_1	IF_1
0x4007681	          0x83c301	                              add ebx, 1	      5173	channel.c	FUNCTION_118	FOR_1	IF_1
0x4007684	          0x80fa20	                            cmp dl, 0x20	      5174	channel.c	FUNCTION_118	FOR_1	IF_2
0x4007687	            0x7405	                            je 0x400768e	      5174	channel.c	FUNCTION_118	FOR_1	IF_2
0x4007689	          0x80fa09	                               cmp dl, 9	      5174	channel.c	FUNCTION_118	FOR_1	IF_2
0x400768c	            0x7505	                           jne 0x4007693	      5174	channel.c	FUNCTION_118	FOR_1	IF_2
0x400768e	      0xbd01000000	                              mov ebp, 1	      5175	channel.c	FUNCTION_118	FOR_1	IF_2
0x4007693	      0xb801000000	                              mov eax, 1	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x4007698	    0x833d00000000	               cmp dword [0x0400769f], 0	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400769f	            0x7406	                            je 0x40076a7	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x40076a1	    0xff1500000000	                 call qword [0x040076a7]	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x40076a7	            0x4898	                                    cdqe	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x40076a9	      0x4803442408	                add rax, qword [rsp + 8]	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x40076ae	          0x4889c7	                            mov rdi, rax	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x40076b1	      0x4889442408	                mov qword [rsp + 8], rax	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x40076b6	           0xfb610	                   movzx edx, byte [rax]	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x40076b9	            0x84d2	                             test dl, dl	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x40076bb	            0x75ba	                           jne 0x4007677	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x40076bd	          0x8d1c6b	                  lea ebx, [rbx + rbp*2]	      5179	channel.c	FUNCTION_118	IF_3
0x40076c0	          0x4139df	                           cmp r15d, ebx	      5181	channel.c	FUNCTION_118	IF_4
0x40076c3	            0x7519	                           jne 0x40076de	      5181	channel.c	FUNCTION_118	IF_4
0x40076c5	          0x4c89e7	                            mov rdi, r12	      5182	channel.c	FUNCTION_118	CALL_3
0x40076c8	      0xe800000000	                          call 0x40076cd	      5182	channel.c	FUNCTION_118	CALL_3
0x40076cd	          0x4989c7	                            mov r15, rax	      5182	channel.c	FUNCTION_118	CALL_3
0x40076d0	          0x4885c0	                           test rax, rax	      5246	channel.c	FUNCTION_119	FOR_1	IF_2
0x40076d3	     0xf8565010000	                           jne 0x400783e	      5246	channel.c	FUNCTION_119	FOR_1	IF_2
0x40076d9	      0xe9a9010000	                           jmp 0x4007887	      5246	channel.c	FUNCTION_119	FOR_1	IF_2
0x40076de	          0x83c301	                              add ebx, 1	      5185	channel.c	FUNCTION_118	CALL_4
0x40076e1	            0x89df	                            mov edi, ebx	      5185	channel.c	FUNCTION_118	CALL_4
0x40076e3	      0xe800000000	                          call 0x40076e8	      5185	channel.c	FUNCTION_118	CALL_4
0x40076e8	          0x4989c7	                            mov r15, rax	      5185	channel.c	FUNCTION_118	CALL_4
0x40076eb	          0x4885c0	                           test rax, rax	      5186	channel.c	FUNCTION_118	IF_5
0x40076ee	     0xf84b1010000	                            je 0x40078a5	      5186	channel.c	FUNCTION_118	IF_5
0x40076f4	          0x4863d3	                         movsxd rdx, ebx	        90	string3.h	FUNCTION_138	CALL_6
0x40076f7	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_138	CALL_6
0x40076fc	          0x4889c7	                            mov rdi, rax	        90	string3.h	FUNCTION_138	CALL_6
0x40076ff	      0xe800000000	                          call 0x4007704	        90	string3.h	FUNCTION_138	CALL_6
0x4007704	            0x85ed	                           test ebp, ebp	      5192	channel.c	FUNCTION_118	IF_6
0x4007706	            0x7507	                           jne 0x400770f	      5192	channel.c	FUNCTION_118	IF_6
0x4007708	      0x4c897c2410	             mov qword [rsp + 0x10], r15	      5190	channel.c	FUNCTION_118
0x400770d	            0xeb0d	                           jmp 0x400771c	      5190	channel.c	FUNCTION_118
0x400770f	        0x498d4701	                      lea rax, [r15 + 1]	      5193	channel.c	FUNCTION_118	IF_6
0x4007713	      0x4889442410	             mov qword [rsp + 0x10], rax	      5193	channel.c	FUNCTION_118	IF_6
0x4007718	        0x41c60722	                    mov byte [r15], 0x22	      5193	channel.c	FUNCTION_118	IF_6
0x400771c	      0x4c89642408	                mov qword [rsp + 8], r12	      5195	channel.c	FUNCTION_118	FOR_2
0x4007721	      0xbe00000000	                              mov esi, 0	      5161	channel.c	FUNCTION_118
0x4007726	      0xe9c5000000	                           jmp 0x40077f0	      5161	channel.c	FUNCTION_118
0x400772b	            0x3c22	                            cmp al, 0x22	      5197	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400772d	            0x7406	                            je 0x4007735	      5197	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400772f	            0x3c5c	                            cmp al, 0x5c	      5197	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x4007731	            0x745c	                            je 0x400778f	      5197	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x4007733	            0xeb7b	                           jmp 0x40077b0	      5197	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x4007735	            0x85f6	                           test esi, esi	      5200	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x4007737	            0x7e1d	                           jle 0x4007756	      5200	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x4007739	      0xb800000000	                              mov eax, 0	      5200	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x400773e	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      5201	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x4007743	        0x488d4a01	                      lea rcx, [rdx + 1]	      5201	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x4007747	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      5201	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x400774c	          0xc6025c	                    mov byte [rdx], 0x5c	      5201	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x400774f	          0x83c001	                              add eax, 1	      5200	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x4007752	            0x39f0	                            cmp eax, esi	      5200	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x4007754	            0x75e8	                           jne 0x400773e	      5200	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x4007756	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5203	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400775b	        0x488d5001	                      lea rdx, [rax + 1]	      5203	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400775f	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5203	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x4007764	          0xc6005c	                    mov byte [rax], 0x5c	      5203	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x4007767	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400776c	        0x488d5001	                      lea rdx, [rax + 1]	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x4007770	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x4007775	      0x488b542408	                mov rdx, qword [rsp + 8]	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400777a	        0x488d4a01	                      lea rcx, [rdx + 1]	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400777e	      0x48894c2408	                mov qword [rsp + 8], rcx	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x4007783	           0xfb612	                   movzx edx, byte [rdx]	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x4007786	            0x8810	                      mov byte [rax], dl	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x4007788	      0xbe00000000	                              mov esi, 0	      5202	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400778d	            0xeb61	                           jmp 0x40077f0	      5202	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400778f	          0x83c601	                              add esi, 1	      5207	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x4007792	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5208	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x4007797	        0x488d4801	                      lea rcx, [rax + 1]	      5208	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400779b	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      5208	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x40077a0	        0x488d4a01	                      lea rcx, [rdx + 1]	      5208	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x40077a4	      0x48894c2408	                mov qword [rsp + 8], rcx	      5208	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x40077a9	           0xfb612	                   movzx edx, byte [rdx]	      5208	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x40077ac	            0x8810	                      mov byte [rax], dl	      5208	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x40077ae	            0xeb40	                           jmp 0x40077f0	      5208	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x40077b0	    0x833d00000000	               cmp dword [0x040077b7], 0	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x40077b7	            0x7416	                            je 0x40077cf	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x40077b9	      0x488d742410	                   lea rsi, [rsp + 0x10]	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x40077be	      0x488d7c2408	                      lea rdi, [rsp + 8]	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x40077c3	      0xe800000000	                          call 0x40077c8	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x40077c8	      0xbe00000000	                              mov esi, 0	      5211	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x40077cd	            0xeb21	                           jmp 0x40077f0	      5211	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x40077cf	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x40077d4	        0x488d4801	                      lea rcx, [rax + 1]	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x40077d8	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x40077dd	        0x488d4a01	                      lea rcx, [rdx + 1]	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x40077e1	      0x48894c2408	                mov qword [rsp + 8], rcx	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x40077e6	           0xfb612	                   movzx edx, byte [rdx]	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x40077e9	            0x8810	                      mov byte [rax], dl	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x40077eb	      0xbe00000000	                              mov esi, 0	      5211	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x40077f0	      0x488b542408	                mov rdx, qword [rsp + 8]	      5195	channel.c	FUNCTION_118	FOR_2
0x40077f5	           0xfb602	                   movzx eax, byte [rdx]	      5195	channel.c	FUNCTION_118	FOR_2
0x40077f8	            0x84c0	                             test al, al	      5195	channel.c	FUNCTION_118	FOR_2
0x40077fa	     0xf852bffffff	                           jne 0x400772b	      5195	channel.c	FUNCTION_118	FOR_2
0x4007800	            0x85ed	                           test ebp, ebp	      5218	channel.c	FUNCTION_118	IF_7
0x4007802	            0x7432	                            je 0x4007836	      5218	channel.c	FUNCTION_118	IF_7
0x4007804	            0x85f6	                           test esi, esi	      5220	channel.c	FUNCTION_118	IF_7	FOR_4
0x4007806	            0x7e1d	                           jle 0x4007825	      5220	channel.c	FUNCTION_118	IF_7	FOR_4
0x4007808	      0xb800000000	                              mov eax, 0	      5220	channel.c	FUNCTION_118	IF_7	FOR_4
0x400780d	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      5221	channel.c	FUNCTION_118	IF_7	FOR_4
0x4007812	        0x488d4a01	                      lea rcx, [rdx + 1]	      5221	channel.c	FUNCTION_118	IF_7	FOR_4
0x4007816	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      5221	channel.c	FUNCTION_118	IF_7	FOR_4
0x400781b	          0xc6025c	                    mov byte [rdx], 0x5c	      5221	channel.c	FUNCTION_118	IF_7	FOR_4
0x400781e	          0x83c001	                              add eax, 1	      5220	channel.c	FUNCTION_118	IF_7	FOR_4
0x4007821	            0x39c6	                            cmp esi, eax	      5220	channel.c	FUNCTION_118	IF_7	FOR_4
0x4007823	            0x75e8	                           jne 0x400780d	      5220	channel.c	FUNCTION_118	IF_7	FOR_4
0x4007825	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5222	channel.c	FUNCTION_118	IF_7
0x400782a	        0x488d5001	                      lea rdx, [rax + 1]	      5222	channel.c	FUNCTION_118	IF_7
0x400782e	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5222	channel.c	FUNCTION_118	IF_7
0x4007833	          0xc60022	                    mov byte [rax], 0x22	      5222	channel.c	FUNCTION_118	IF_7
0x4007836	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5224	channel.c	FUNCTION_118
0x400783b	          0xc60000	                       mov byte [rax], 0	      5224	channel.c	FUNCTION_118
0x400783e	          0x4c89fe	                            mov rsi, r15	      5248	channel.c	FUNCTION_119	FOR_1	CALL_3
0x4007841	          0x4c89f7	                            mov rdi, r14	      5248	channel.c	FUNCTION_119	FOR_1	CALL_3
0x4007844	      0xe800000000	                          call 0x4007849	      5248	channel.c	FUNCTION_119	FOR_1	CALL_3
0x4007849	          0x4c89ff	                            mov rdi, r15	      5249	channel.c	FUNCTION_119	FOR_1	CALL_4
0x400784c	      0xe800000000	                          call 0x4007851	      5249	channel.c	FUNCTION_119	FOR_1	CALL_4
0x4007851	      0x49837d0000	                      cmp qword [r13], 0	      5250	channel.c	FUNCTION_119	FOR_1	IF_3
0x4007856	            0x7436	                            je 0x400788e	      5250	channel.c	FUNCTION_119	FOR_1	IF_3
0x4007858	      0xbe20000000	                           mov esi, 0x20	      5251	channel.c	FUNCTION_119	FOR_1	CALL_5
0x400785d	          0x4c89f7	                            mov rdi, r14	      5251	channel.c	FUNCTION_119	FOR_1	CALL_5
0x4007860	      0xe800000000	                          call 0x4007865	      5251	channel.c	FUNCTION_119	FOR_1	CALL_5
0x4007865	        0x4d8b6d00	                    mov r13, qword [r13]	      5240	channel.c	FUNCTION_119	FOR_1
0x4007869	          0x4d85ed	                           test r13, r13	      5240	channel.c	FUNCTION_119	FOR_1
0x400786c	     0xf85bffdffff	                           jne 0x4007631	      5240	channel.c	FUNCTION_119	FOR_1
0x4007872	      0xb801000000	                              mov eax, 1	      5253	channel.c	FUNCTION_119
0x4007877	            0xeb1a	                           jmp 0x4007893	      5253	channel.c	FUNCTION_119
0x4007879	      0xb801000000	                              mov eax, 1	      5253	channel.c	FUNCTION_119
0x400787e	            0xeb13	                           jmp 0x4007893	      5253	channel.c	FUNCTION_119
0x4007880	      0xb800000000	                              mov eax, 0	      5244	channel.c	FUNCTION_119	FOR_1	IF_1
0x4007885	            0xeb0c	                           jmp 0x4007893	      5244	channel.c	FUNCTION_119	FOR_1	IF_1
0x4007887	      0xb800000000	                              mov eax, 0	      5247	channel.c	FUNCTION_119	FOR_1	IF_2
0x400788c	            0xeb05	                           jmp 0x4007893	      5247	channel.c	FUNCTION_119	FOR_1	IF_2
0x400788e	      0xb801000000	                              mov eax, 1	      5253	channel.c	FUNCTION_119
0x4007893	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      5254	channel.c	FUNCTION_119
0x4007898	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      5254	channel.c	FUNCTION_119
0x40078a1	            0x740e	                            je 0x40078b1	      5254	channel.c	FUNCTION_119
0x40078a3	            0xeb07	                           jmp 0x40078ac	      5254	channel.c	FUNCTION_119
0x40078a5	      0xb800000000	                              mov eax, 0	      5247	channel.c	FUNCTION_119	FOR_1	IF_2
0x40078aa	            0xebe7	                           jmp 0x4007893	      5247	channel.c	FUNCTION_119	FOR_1	IF_2
0x40078ac	      0xe800000000	                          call 0x40078b1	      5254	channel.c	FUNCTION_119
0x40078b1	        0x4883c428	                           add rsp, 0x28	      5254	channel.c	FUNCTION_119
0x40078b5	              0x5b	                                 pop rbx	      5254	channel.c	FUNCTION_119
0x40078b6	              0x5d	                                 pop rbp	      5254	channel.c	FUNCTION_119
0x40078b7	            0x415c	                                 pop r12	      5254	channel.c	FUNCTION_119
0x40078b9	            0x415d	                                 pop r13	      5254	channel.c	FUNCTION_119
0x40078bb	            0x415e	                                 pop r14	      5254	channel.c	FUNCTION_119
0x40078bd	            0x415f	                                 pop r15	      5254	channel.c	FUNCTION_119
0x40078bf	              0xc3	                                     ret	      5254	channel.c	FUNCTION_119
ch_error	IF,1:ELSE,0:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,6	49
0x4000243	              0x53	                                push rbx	       189	channel.c	FUNCTION_5
0x4000244	    0x4881ecd00000	                           sub rsp, 0xd0	       189	channel.c	FUNCTION_5
0x400024b	          0x4889f3	                            mov rbx, rsi	       189	channel.c	FUNCTION_5
0x400024e	      0x4889542430	             mov qword [rsp + 0x30], rdx	       189	channel.c	FUNCTION_5
0x4000253	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       189	channel.c	FUNCTION_5
0x4000258	      0x4c89442440	              mov qword [rsp + 0x40], r8	       189	channel.c	FUNCTION_5
0x400025d	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       189	channel.c	FUNCTION_5
0x4000262	            0x84c0	                             test al, al	       189	channel.c	FUNCTION_5
0x4000264	            0x7437	                            je 0x400029d	       189	channel.c	FUNCTION_5
0x4000266	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       189	channel.c	FUNCTION_5
0x400026b	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       189	channel.c	FUNCTION_5
0x4000270	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       189	channel.c	FUNCTION_5
0x4000275	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       189	channel.c	FUNCTION_5
0x400027d	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       189	channel.c	FUNCTION_5
0x4000285	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       189	channel.c	FUNCTION_5
0x400028d	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       189	channel.c	FUNCTION_5
0x4000295	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       189	channel.c	FUNCTION_5
0x400029d	    0x64488b042528	                mov rax, qword fs:[0x28]	       189	channel.c	FUNCTION_5
0x40002a6	      0x4889442418	             mov qword [rsp + 0x18], rax	       189	channel.c	FUNCTION_5
0x40002ab	            0x31c0	                            xor eax, eax	       189	channel.c	FUNCTION_5
0x40002ad	    0x48833d000000	               cmp qword [0x040002b5], 0	       190	channel.c	FUNCTION_5	IF_1
0x40002b5	            0x7471	                            je 0x4000328	       190	channel.c	FUNCTION_5	IF_1
0x40002b7	          0x4889fe	                            mov rsi, rdi	       194	channel.c	FUNCTION_5	IF_1	CALL_1
0x40002ba	      0xbf00000000	                              mov edi, 0	       194	channel.c	FUNCTION_5	IF_1	CALL_1
0x40002bf	      0xe8b7feffff	                    call sym.ch_log_lead	       194	channel.c	FUNCTION_5	IF_1	CALL_1
0x40002c4	    0xc70424100000	                   mov dword [rsp], 0x10	       195	channel.c	FUNCTION_5	IF_1	CALL_2
0x40002cb	    0xc74424043000	               mov dword [rsp + 4], 0x30	       195	channel.c	FUNCTION_5	IF_1	CALL_2
0x40002d3	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       195	channel.c	FUNCTION_5	IF_1	CALL_2
0x40002db	      0x4889442408	                mov qword [rsp + 8], rax	       195	channel.c	FUNCTION_5	IF_1	CALL_2
0x40002e0	      0x488d442420	                   lea rax, [rsp + 0x20]	       195	channel.c	FUNCTION_5	IF_1	CALL_2
0x40002e5	      0x4889442410	             mov qword [rsp + 0x10], rax	       195	channel.c	FUNCTION_5	IF_1	CALL_2
0x40002ea	          0x4889e1	                            mov rcx, rsp	       127	stdio2.h	FUNCTION_152	CALL_1
0x40002ed	          0x4889da	                            mov rdx, rbx	       127	stdio2.h	FUNCTION_152	CALL_1
0x40002f0	      0xbe01000000	                              mov esi, 1	       127	stdio2.h	FUNCTION_152	CALL_1
0x40002f5	    0x488b3d000000	            mov rdi, qword [0x040002fc] 	       127	stdio2.h	FUNCTION_152	CALL_1
0x40002fc	      0xe800000000	                          call 0x4000301	       127	stdio2.h	FUNCTION_152	CALL_1
0x4000301	    0x488b35000000	            mov rsi, qword [0x04000308] 	       198	channel.c	FUNCTION_5	IF_1	CALL_5
0x4000308	      0xbf0a000000	                            mov edi, 0xa	       198	channel.c	FUNCTION_5	IF_1	CALL_5
0x400030d	      0xe800000000	                          call 0x4000312	       198	channel.c	FUNCTION_5	IF_1	CALL_5
0x4000312	    0x488b3d000000	            mov rdi, qword [0x04000319] 	       199	channel.c	FUNCTION_5	IF_1	CALL_6
0x4000319	      0xe800000000	                          call 0x400031e	       199	channel.c	FUNCTION_5	IF_1	CALL_6
0x400031e	    0xc70500000000	               mov dword [0x04000328], 1	       200	channel.c	FUNCTION_5	IF_1
0x4000328	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       202	channel.c	FUNCTION_5
0x400032d	    0x644833042528	                xor rax, qword fs:[0x28]	       202	channel.c	FUNCTION_5
0x4000336	            0x7405	                            je 0x400033d	       202	channel.c	FUNCTION_5
0x4000338	      0xe800000000	                          call 0x400033d	       202	channel.c	FUNCTION_5
0x400033d	    0x4881c4d00000	                           add rsp, 0xd0	       202	channel.c	FUNCTION_5
0x4000344	              0x5b	                                 pop rbx	       202	channel.c	FUNCTION_5
0x4000345	              0xc3	                                     ret	       202	channel.c	FUNCTION_5
channel_write_in	IF,7:ELSE,2:FOR,1:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,10	89
0x4002ea6	            0x4155	                                push r13	      1432	channel.c	FUNCTION_38
0x4002ea8	            0x4154	                                push r12	      1432	channel.c	FUNCTION_38
0x4002eaa	              0x55	                                push rbp	      1432	channel.c	FUNCTION_38
0x4002eab	              0x53	                                push rbx	      1432	channel.c	FUNCTION_38
0x4002eac	        0x4883ec08	                              sub rsp, 8	      1432	channel.c	FUNCTION_38
0x4002eb0	    0x4c8baf280400	           mov r13, qword [rdi + 0x428] 	      1435	channel.c	FUNCTION_38
0x4002eb7	          0x4d85ed	                           test r13, r13	      1438	channel.c	FUNCTION_38	IF_1
0x4002eba	     0xf843e010000	                            je 0x4002ffe	      1438	channel.c	FUNCTION_38	IF_1
0x4002ec0	    0x83bf40040000	              cmp dword [rdi + 0x440], 0	      1438	channel.c	FUNCTION_38	IF_1
0x4002ec7	     0xf8531010000	                           jne 0x4002ffe	      1438	channel.c	FUNCTION_38	IF_1
0x4002ecd	          0x4889fd	                            mov rbp, rdi	      1438	channel.c	FUNCTION_38	IF_1
0x4002ed0	    0x488dbf280400	                  lea rdi, [rdi + 0x428]	      1440	channel.c	FUNCTION_38	IF_2	CALL_1
0x4002ed7	      0xe800000000	                          call 0x4002edc	      1440	channel.c	FUNCTION_38	IF_2	CALL_1
0x4002edc	            0x85c0	                           test eax, eax	      1440	channel.c	FUNCTION_38	IF_2	CALL_1
0x4002ede	            0x7407	                            je 0x4002ee7	      1440	channel.c	FUNCTION_38	IF_2	CALL_1
0x4002ee0	      0x49837d0800	                  cmp qword [r13 + 8], 0	      1440	channel.c	FUNCTION_38	IF_2	CALL_1
0x4002ee5	            0x7522	                           jne 0x4002f09	      1440	channel.c	FUNCTION_38	IF_2	CALL_1
0x4002ee7	      0xbe00000000	                              mov esi, 0	      1443	channel.c	FUNCTION_38	IF_2	CALL_2
0x4002eec	          0x4889ef	                            mov rdi, rbp	      1443	channel.c	FUNCTION_38	IF_2	CALL_2
0x4002eef	      0xb800000000	                              mov eax, 0	      1443	channel.c	FUNCTION_38	IF_2	CALL_2
0x4002ef4	      0xe800000000	                          call 0x4002ef9	      1443	channel.c	FUNCTION_38	IF_2	CALL_2
0x4002ef9	    0x48c785280400	              mov qword [rbp + 0x428], 0	      1444	channel.c	FUNCTION_38	IF_2
0x4002f04	      0xe9f5000000	                           jmp 0x4002ffe	      1445	channel.c	FUNCTION_38	IF_2
0x4002f09	    0x488b9d480400	           mov rbx, qword [rbp + 0x448] 	      1448	channel.c	FUNCTION_38	FOR_1
0x4002f10	    0x483b9d500400	           cmp rbx, qword [rbp + 0x450] 	      1448	channel.c	FUNCTION_38	FOR_1
0x4002f17	            0x7f75	                            jg 0x4002f8e	      1448	channel.c	FUNCTION_38	FOR_1
0x4002f19	        0x493b5d00	                    cmp rbx, qword [r13]	      1449	channel.c	FUNCTION_38	FOR_1
0x4002f1d	            0x7f6f	                            jg 0x4002f8e	      1449	channel.c	FUNCTION_38	FOR_1
0x4002f1f	    0x41bc00000000	                             mov r12d, 0	      1449	channel.c	FUNCTION_38	FOR_1
0x4002f25	          0x4889ef	                            mov rdi, rbp	      1451	channel.c	FUNCTION_38	FOR_1	IF_3	CALL_3
0x4002f28	      0xe817dfffff	             call sym.can_write_buf_line	      1451	channel.c	FUNCTION_38	FOR_1	IF_3	CALL_3
0x4002f2d	            0x85c0	                           test eax, eax	      1451	channel.c	FUNCTION_38	FOR_1	IF_3	CALL_3
0x4002f2f	            0x7425	                            je 0x4002f56	      1451	channel.c	FUNCTION_38	FOR_1	IF_3	CALL_3
0x4002f31	          0x4889ea	                            mov rdx, rbp	      1453	channel.c	FUNCTION_38	FOR_1	CALL_4
0x4002f34	          0x4889de	                            mov rsi, rbx	      1453	channel.c	FUNCTION_38	FOR_1	CALL_4
0x4002f37	          0x4c89ef	                            mov rdi, r13	      1453	channel.c	FUNCTION_38	FOR_1	CALL_4
0x4002f3a	      0xe8adfeffff	                 call sym.write_buf_line	      1453	channel.c	FUNCTION_38	FOR_1	CALL_4
0x4002f3f	        0x4183c401	                             add r12d, 1	      1454	channel.c	FUNCTION_38	FOR_1
0x4002f43	        0x4883c301	                              add rbx, 1	      1449	channel.c	FUNCTION_38	FOR_1
0x4002f47	    0x48399d500400	           cmp qword [rbp + 0x450], rbx 	      1448	channel.c	FUNCTION_38	FOR_1
0x4002f4e	            0x7c06	                            jl 0x4002f56	      1448	channel.c	FUNCTION_38	FOR_1
0x4002f50	        0x49395d00	                    cmp qword [r13], rbx	      1449	channel.c	FUNCTION_38	FOR_1
0x4002f54	            0x7dcf	                           jge 0x4002f25	      1449	channel.c	FUNCTION_38	FOR_1
0x4002f56	        0x4183fc01	                             cmp r12d, 1	      1457	channel.c	FUNCTION_38	IF_4
0x4002f5a	            0x7517	                           jne 0x4002f73	      1457	channel.c	FUNCTION_38	IF_4
0x4002f5c	          0x8d53ff	                      lea edx, [rbx - 1]	      1458	channel.c	FUNCTION_38	CALL_5
0x4002f5f	      0xbe00000000	                              mov esi, 0	      1458	channel.c	FUNCTION_38	CALL_5
0x4002f64	          0x4889ef	                            mov rdi, rbp	      1458	channel.c	FUNCTION_38	CALL_5
0x4002f67	      0xb800000000	                              mov eax, 0	      1458	channel.c	FUNCTION_38	CALL_5
0x4002f6c	      0xe800000000	                          call 0x4002f71	      1458	channel.c	FUNCTION_38	CALL_5
0x4002f71	            0xeb1b	                           jmp 0x4002f8e	      1458	channel.c	FUNCTION_38	CALL_5
0x4002f73	        0x4183fc01	                             cmp r12d, 1	      1459	channel.c	FUNCTION_38	ELSE_1	IF_5
0x4002f77	            0x7e15	                           jle 0x4002f8e	      1459	channel.c	FUNCTION_38	ELSE_1	IF_5
0x4002f79	          0x4489e2	                           mov edx, r12d	      1460	channel.c	FUNCTION_38	ELSE_1	IF_5
0x4002f7c	      0xbe00000000	                              mov esi, 0	      1460	channel.c	FUNCTION_38	ELSE_1	IF_5
0x4002f81	          0x4889ef	                            mov rdi, rbp	      1460	channel.c	FUNCTION_38	ELSE_1	IF_5
0x4002f84	      0xb800000000	                              mov eax, 0	      1460	channel.c	FUNCTION_38	ELSE_1	IF_5
0x4002f89	      0xe800000000	                          call 0x4002f8e	      1460	channel.c	FUNCTION_38	ELSE_1	IF_5
0x4002f8e	    0x48899d480400	           mov qword [rbp + 0x448], rbx 	      1462	channel.c	FUNCTION_38
0x4002f95	        0x498b4500	                    mov rax, qword [r13]	      1463	channel.c	FUNCTION_38	IF_6
0x4002f99	          0x4839d8	                            cmp rax, rbx	      1463	channel.c	FUNCTION_38	IF_6
0x4002f9c	            0x7c09	                            jl 0x4002fa7	      1463	channel.c	FUNCTION_38	IF_6
0x4002f9e	    0x48399d500400	           cmp qword [rbp + 0x450], rbx 	      1463	channel.c	FUNCTION_38	IF_6
0x4002fa5	            0x7d3e	                           jge 0x4002fe5	      1463	channel.c	FUNCTION_38	IF_6
0x4002fa7	    0x4883bda80400	              cmp qword [rbp + 0x4a8], 0	      1467	channel.c	FUNCTION_38	IF_6	IF_7
0x4002faf	            0x7408	                            je 0x4002fb9	      1467	channel.c	FUNCTION_38	IF_6	IF_7
0x4002fb1	          0x4889ef	                            mov rdi, rbp	      1468	channel.c	FUNCTION_38	IF_6	CALL_7
0x4002fb4	      0xe800000000	                          call 0x4002fb9	      1468	channel.c	FUNCTION_38	IF_6	CALL_7
0x4002fb9	    0x48c785280400	              mov qword [rbp + 0x428], 0	      1472	channel.c	FUNCTION_38	IF_6
0x4002fc4	      0xbe00000000	                              mov esi, 0	      1473	channel.c	FUNCTION_38	IF_6	CALL_8
0x4002fc9	          0x4889ef	                            mov rdi, rbp	      1473	channel.c	FUNCTION_38	IF_6	CALL_8
0x4002fcc	      0xb800000000	                              mov eax, 0	      1473	channel.c	FUNCTION_38	IF_6	CALL_8
0x4002fd1	      0xe800000000	                          call 0x4002fd6	      1473	channel.c	FUNCTION_38	IF_6	CALL_8
0x4002fd6	      0xbe03000000	                              mov esi, 3	      1476	channel.c	FUNCTION_38	IF_6	CALL_9
0x4002fdb	          0x4889ef	                            mov rdi, rbp	      1476	channel.c	FUNCTION_38	IF_6	CALL_9
0x4002fde	      0xe85fd4ffff	                  call sym.ch_close_part	      1476	channel.c	FUNCTION_38	IF_6	CALL_9
0x4002fe3	            0xeb19	                           jmp 0x4002ffe	      1476	channel.c	FUNCTION_38	IF_6	CALL_9
0x4002fe5	          0x4829d8	                            sub rax, rbx	      1479	channel.c	FUNCTION_38	ELSE_2	CALL_10
0x4002fe8	        0x488d5001	                      lea rdx, [rax + 1]	      1479	channel.c	FUNCTION_38	ELSE_2	CALL_10
0x4002fec	      0xbe00000000	                              mov esi, 0	      1479	channel.c	FUNCTION_38	ELSE_2	CALL_10
0x4002ff1	          0x4889ef	                            mov rdi, rbp	      1479	channel.c	FUNCTION_38	ELSE_2	CALL_10
0x4002ff4	      0xb800000000	                              mov eax, 0	      1479	channel.c	FUNCTION_38	ELSE_2	CALL_10
0x4002ff9	      0xe800000000	                          call 0x4002ffe	      1479	channel.c	FUNCTION_38	ELSE_2	CALL_10
0x4002ffe	        0x4883c408	                              add rsp, 8	      1481	channel.c	FUNCTION_38
0x4003002	              0x5b	                                 pop rbx	      1481	channel.c	FUNCTION_38
0x4003003	              0x5d	                                 pop rbp	      1481	channel.c	FUNCTION_38
0x4003004	            0x415c	                                 pop r12	      1481	channel.c	FUNCTION_38
0x4003006	            0x415d	                                 pop r13	      1481	channel.c	FUNCTION_38
0x4003008	              0xc3	                                     ret	      1481	channel.c	FUNCTION_38
can_write_buf_line	IF,8:ELSE,2:FOR,1:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,8	72
0x4000e44	              0x53	                                push rbx	      1364	channel.c	FUNCTION_37
0x4000e45	    0x4881eca00000	                           sub rsp, 0xa0	      1364	channel.c	FUNCTION_37
0x4000e4c	    0x64488b042528	                mov rax, qword fs:[0x28]	      1364	channel.c	FUNCTION_37
0x4000e55	    0x488984249800	             mov qword [rsp + 0x98], rax	      1364	channel.c	FUNCTION_37
0x4000e5d	            0x31c0	                            xor eax, eax	      1364	channel.c	FUNCTION_37
0x4000e5f	    0x83bf48030000	cmp dword [rdi + 0x348], 0xffffffffffffffff	      1367	channel.c	FUNCTION_37	IF_1
0x4000e66	     0xf84eb000000	                            je 0x4000f57	      1367	channel.c	FUNCTION_37	IF_1
0x4000e6c	          0x4889fb	                            mov rbx, rdi	      1367	channel.c	FUNCTION_37	IF_1
0x4000e6f	    0x8b87c0030000	           mov eax, dword [rdi + 0x3c0] 	      1371	channel.c	FUNCTION_37	IF_2
0x4000e75	          0x83f801	                              cmp eax, 1	      1371	channel.c	FUNCTION_37	IF_2
0x4000e78	            0x750c	                           jne 0x4000e86	      1371	channel.c	FUNCTION_37	IF_2
0x4000e7a	    0xc787c0030000	    mov dword [rdi + 0x3c0], 0xffffffff 	      1372	channel.c	FUNCTION_37	IF_2
0x4000e84	            0xeb0f	                           jmp 0x4000e95	      1372	channel.c	FUNCTION_37	IF_2
0x4000e86	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1373	channel.c	FUNCTION_37	ELSE_1	IF_3
0x4000e89	            0x750a	                           jne 0x4000e95	      1373	channel.c	FUNCTION_37	ELSE_1	IF_3
0x4000e8b	    0xc787c0030000	              mov dword [rdi + 0x3c0], 1	      1374	channel.c	FUNCTION_37	ELSE_1	IF_3
0x4000e95	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1384	channel.c	FUNCTION_37	CALL_1
0x4000e9a	      0xb910000000	                           mov ecx, 0x10	      1384	channel.c	FUNCTION_37	CALL_1
0x4000e9f	      0xb800000000	                              mov eax, 0	      1384	channel.c	FUNCTION_37	CALL_1
0x4000ea4	              0xfc	                                     cld	      1384	channel.c	FUNCTION_37	CALL_1
0x4000ea5	          0xf348ab	              rep stosq qword [rdi], rax	      1384	channel.c	FUNCTION_37	CALL_1
0x4000ea8	    0x4863bb480300	        movsxd rdi, dword [rbx + 0x348] 	      1385	channel.c	FUNCTION_37	CALL_2
0x4000eaf	      0xe800000000	                          call 0x4000eb4	      1385	channel.c	FUNCTION_37	CALL_2
0x4000eb4	    0x8b8b48030000	           mov ecx, dword [rbx + 0x348] 	      1385	channel.c	FUNCTION_37	CALL_2
0x4000eba	            0x89ca	                            mov edx, ecx	      1385	channel.c	FUNCTION_37	CALL_2
0x4000ebc	          0xc1fa1f	                           sar edx, 0x1f	      1385	channel.c	FUNCTION_37	CALL_2
0x4000ebf	          0xc1ea1a	                           shr edx, 0x1a	      1385	channel.c	FUNCTION_37	CALL_2
0x4000ec2	             0x1d1	                            add ecx, edx	      1385	channel.c	FUNCTION_37	CALL_2
0x4000ec4	          0x83e13f	                           and ecx, 0x3f	      1385	channel.c	FUNCTION_37	CALL_2
0x4000ec7	            0x29d1	                            sub ecx, edx	      1385	channel.c	FUNCTION_37	CALL_2
0x4000ec9	      0xba01000000	                              mov edx, 1	      1385	channel.c	FUNCTION_37	CALL_2
0x4000ece	          0x48d3e2	                             shl rdx, cl	      1385	channel.c	FUNCTION_37	CALL_2
0x4000ed1	      0x480954c410	      or qword [rsp + rax*8 + 0x10], rdx	      1385	channel.c	FUNCTION_37	CALL_2
0x4000ed6	    0x48c704240000	                      mov qword [rsp], 0	      1386	channel.c	FUNCTION_37
0x4000ede	    0x48c744240800	                  mov qword [rsp + 8], 0	      1387	channel.c	FUNCTION_37
0x4000ee7	    0x8b8348030000	           mov eax, dword [rbx + 0x348] 	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x4000eed	          0x8d7801	                      lea edi, [rax + 1]	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x4000ef0	          0x4989e0	                             mov r8, rsp	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x4000ef3	      0xb900000000	                              mov ecx, 0	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x4000ef8	      0x488d542410	                   lea rdx, [rsp + 0x10]	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x4000efd	      0xbe00000000	                              mov esi, 0	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x4000f02	      0xe800000000	                          call 0x4000f07	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x4000f07	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1393	channel.c	FUNCTION_37	FOR_1	IF_4
0x4000f0a	            0x750c	                           jne 0x4000f18	      1393	channel.c	FUNCTION_37	FOR_1	IF_4
0x4000f0c	      0xe800000000	                          call 0x4000f11	      1393	channel.c	FUNCTION_37	FOR_1	IF_4
0x4000f11	          0x833804	                      cmp dword [rax], 4	      1393	channel.c	FUNCTION_37	FOR_1	IF_4
0x4000f14	            0x7528	                           jne 0x4000f3e	      1393	channel.c	FUNCTION_37	FOR_1	IF_4
0x4000f16	            0xebcf	                           jmp 0x4000ee7	      1393	channel.c	FUNCTION_37	FOR_1	IF_4
0x4000f18	            0x85c0	                           test eax, eax	      1396	channel.c	FUNCTION_37	FOR_1	IF_5
0x4000f1a	            0x7e22	                           jle 0x4000f3e	      1396	channel.c	FUNCTION_37	FOR_1	IF_5
0x4000f1c	      0xb801000000	                              mov eax, 1	      1424	channel.c	FUNCTION_37
0x4000f21	    0x83bbc0030000	              cmp dword [rbx + 0x3c0], 1	      1396	channel.c	FUNCTION_37	FOR_1	IF_5
0x4000f28	            0x7532	                           jne 0x4000f5c	      1396	channel.c	FUNCTION_37	FOR_1	IF_5
0x4000f2a	      0xbe00000000	                              mov esi, 0	      1399	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_4
0x4000f2f	          0x4889df	                            mov rdi, rbx	      1399	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_4
0x4000f32	      0xb800000000	                              mov eax, 0	      1399	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_4
0x4000f37	      0xe800000000	                          call 0x4000f3c	      1399	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_4
0x4000f3c	            0xeb12	                           jmp 0x4000f50	      1399	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_4
0x4000f3e	      0xbe00000000	                              mov esi, 0	      1401	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_5
0x4000f43	          0x4889df	                            mov rdi, rbx	      1401	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_5
0x4000f46	      0xb800000000	                              mov eax, 0	      1401	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_5
0x4000f4b	      0xe800000000	                          call 0x4000f50	      1401	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_5
0x4000f50	      0xb800000000	                              mov eax, 0	      1402	channel.c	FUNCTION_37	FOR_1	IF_5
0x4000f55	            0xeb05	                           jmp 0x4000f5c	      1402	channel.c	FUNCTION_37	FOR_1	IF_5
0x4000f57	      0xb800000000	                              mov eax, 0	      1368	channel.c	FUNCTION_37	IF_1
0x4000f5c	    0x488bb4249800	            mov rsi, qword [rsp + 0x98] 	      1425	channel.c	FUNCTION_37
0x4000f64	    0x644833342528	                xor rsi, qword fs:[0x28]	      1425	channel.c	FUNCTION_37
0x4000f6d	            0x7405	                            je 0x4000f74	      1425	channel.c	FUNCTION_37
0x4000f6f	      0xe800000000	                          call 0x4000f74	      1425	channel.c	FUNCTION_37
0x4000f74	    0x4881c4a00000	                           add rsp, 0xa0	      1425	channel.c	FUNCTION_37
0x4000f7b	              0x5b	                                 pop rbx	      1425	channel.c	FUNCTION_37
0x4000f7c	              0xc3	                                     ret	      1425	channel.c	FUNCTION_37
channel_wait	IF,14:ELSE,2:FOR,2:SWITCH,0:functions,0:DO,0:WHILE,1:CALL,19	96
0x400318c	            0x4157	                                push r15	      3117	channel.c	ELSE_1	FUNCTION_76
0x400318e	            0x4156	                                push r14	      3117	channel.c	ELSE_1	FUNCTION_76
0x4003190	            0x4155	                                push r13	      3117	channel.c	ELSE_1	FUNCTION_76
0x4003192	            0x4154	                                push r12	      3117	channel.c	ELSE_1	FUNCTION_76
0x4003194	              0x55	                                push rbp	      3117	channel.c	ELSE_1	FUNCTION_76
0x4003195	              0x53	                                push rbx	      3117	channel.c	ELSE_1	FUNCTION_76
0x4003196	    0x4881ec280100	                          sub rsp, 0x128	      3117	channel.c	ELSE_1	FUNCTION_76
0x400319d	          0x4189f6	                           mov r14d, esi	      3117	channel.c	ELSE_1	FUNCTION_76
0x40031a0	            0x89d3	                            mov ebx, edx	      3117	channel.c	ELSE_1	FUNCTION_76
0x40031a2	    0x64488b042528	                mov rax, qword fs:[0x28]	      3117	channel.c	ELSE_1	FUNCTION_76
0x40031ab	    0x488984241801	            mov qword [rsp + 0x118], rax	      3117	channel.c	ELSE_1	FUNCTION_76
0x40031b3	            0x31c0	                            xor eax, eax	      3117	channel.c	ELSE_1	FUNCTION_76
0x40031b5	            0x85d2	                           test edx, edx	      3118	channel.c	ELSE_1	FUNCTION_76	IF_1
0x40031b7	            0x7e0a	                           jle 0x40031c3	      3118	channel.c	ELSE_1	FUNCTION_76	IF_1
0x40031b9	      0xbe00000000	                              mov esi, 0	      3119	channel.c	ELSE_1	FUNCTION_76	CALL_1
0x40031be	      0xe800000000	                          call 0x40031c3	      3119	channel.c	ELSE_1	FUNCTION_76	CALL_1
0x40031c3	      0xbad34d6210	                     mov edx, 0x10624dd3	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x40031c8	            0x89d8	                            mov eax, ebx	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x40031ca	            0xf7ea	                                imul edx	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x40031cc	          0xc1fa06	                              sar edx, 6	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x40031cf	            0x89d8	                            mov eax, ebx	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x40031d1	          0xc1f81f	                           sar eax, 0x1f	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x40031d4	            0x29c2	                            sub edx, eax	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x40031d6	          0x4863c2	                         movsxd rax, edx	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x40031d9	        0x48890424	                    mov qword [rsp], rax	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x40031dd	    0x69d2e8030000	                    imul edx, edx, 0x3e8	      3179	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x40031e3	            0x29d3	                            sub ebx, edx	      3179	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x40031e5	    0x69dbe8030000	                    imul ebx, ebx, 0x3e8	      3179	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x40031eb	          0x4863db	                         movsxd rbx, ebx	      3179	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x40031ee	      0x48895c2408	                mov qword [rsp + 8], rbx	      3179	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x40031f3	          0x4489f0	                           mov eax, r14d	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x40031f6	          0xc1f81f	                           sar eax, 0x1f	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x40031f9	          0xc1e81a	                           shr eax, 0x1a	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x40031fc	        0x418d0c06	                    lea ecx, [r14 + rax]	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x4003200	          0x83e13f	                           and ecx, 0x3f	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x4003203	            0x29c1	                            sub ecx, eax	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x4003205	    0x41bc01000000	                             mov r12d, 1	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x400320b	          0x49d3e4	                             shl r12, cl	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x400320e	      0x4c8d6c2410	                   lea r13, [rsp + 0x10]	      3182	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_10
0x4003213	          0x4d63fe	                        movsxd r15, r14d	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x4003216	    0x488dac249000	                   lea rbp, [rsp + 0x90]	      3188	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_12
0x400321e	      0xbb10000000	                           mov ebx, 0x10	      3182	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_10
0x4003223	          0x4889d9	                            mov rcx, rbx	      3182	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_10
0x4003226	          0x4c89ef	                            mov rdi, r13	      3182	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_10
0x4003229	      0xb800000000	                              mov eax, 0	      3182	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_10
0x400322e	              0xfc	                                     cld	      3182	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_10
0x400322f	          0xf348ab	              rep stosq qword [rdi], rax	      3182	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_10
0x4003232	          0x4c89ff	                            mov rdi, r15	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x4003235	      0xe800000000	                          call 0x400323a	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x400323a	      0x4c0964c410	      or qword [rsp + rax*8 + 0x10], r12	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x400323f	        0x418d5601	                      lea edx, [r14 + 1]	      3187	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1
0x4003243	          0x4889d9	                            mov rcx, rbx	      3188	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_12
0x4003246	          0x4889ef	                            mov rdi, rbp	      3188	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_12
0x4003249	      0xb800000000	                              mov eax, 0	      3188	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_12
0x400324e	              0xfc	                                     cld	      3188	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_12
0x400324f	          0xf348ab	              rep stosq qword [rdi], rax	      3188	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_12
0x4003252	          0x4889ee	                            mov rsi, rbp	      3189	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_13
0x4003255	            0x89d7	                            mov edi, edx	      3189	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_13
0x4003257	      0xe85cd1ffff	              call sym.channel_fill_wfds	      3189	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_13
0x400325c	          0x4989e0	                             mov r8, rsp	      3191	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_14
0x400325f	      0xb900000000	                              mov ecx, 0	      3191	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_14
0x4003264	          0x4889ea	                            mov rdx, rbp	      3191	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_14
0x4003267	          0x4c89ee	                            mov rsi, r13	      3191	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_14
0x400326a	            0x89c7	                            mov edi, eax	      3191	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_14
0x400326c	      0xe800000000	                          call 0x4003271	      3191	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_14
0x4003271	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3194	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_10
0x4003274	            0x7546	                           jne 0x40032bc	      3194	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_10
0x4003276	      0xe800000000	                          call 0x400327b	      3194	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_10
0x400327b	          0x833804	                      cmp dword [rax], 4	      3194	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_10
0x400327e	            0x7522	                           jne 0x40032a2	      3194	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_10
0x4003280	            0xeb9c	                           jmp 0x400321e	      3194	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_10
0x4003282	          0x4c89ff	                            mov rdi, r15	      3199	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x4003285	      0xe800000000	                          call 0x400328a	      3199	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x400328a	      0x4c8564c410	   test qword [rsp + rax*8 + 0x10], r12 	      3199	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x400328f	            0x7407	                            je 0x4003298	      3199	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x4003291	      0xb800000000	                              mov eax, 0	      3200	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12
0x4003296	            0xeb0f	                           jmp 0x40032a7	      3200	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12
0x4003298	      0xe800000000	                          call 0x400329d	      3201	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	CALL_16
0x400329d	      0xe97cffffff	                           jmp 0x400321e	      3202	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11
0x40032a2	      0xb801000000	                              mov eax, 1	      3226	channel.c	FUNCTION_76	ELSE_1
0x40032a7	    0x488bb4241801	           mov rsi, qword [rsp + 0x118] 	      3227	channel.c	FUNCTION_76	ELSE_1
0x40032af	    0x644833342528	                xor rsi, qword fs:[0x28]	      3227	channel.c	FUNCTION_76	ELSE_1
0x40032b8	            0x740d	                            je 0x40032c7	      3227	channel.c	FUNCTION_76	ELSE_1
0x40032ba	            0xeb06	                           jmp 0x40032c2	      3227	channel.c	FUNCTION_76	ELSE_1
0x40032bc	            0x85c0	                           test eax, eax	      3197	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11
0x40032be	            0x7ee2	                           jle 0x40032a2	      3197	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11
0x40032c0	            0xebc0	                           jmp 0x4003282	      3197	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11
0x40032c2	      0xe800000000	                          call 0x40032c7	      3227	channel.c	FUNCTION_76	ELSE_1
0x40032c7	    0x4881c4280100	                          add rsp, 0x128	      3227	channel.c	FUNCTION_76	ELSE_1
0x40032ce	              0x5b	                                 pop rbx	      3227	channel.c	FUNCTION_76	ELSE_1
0x40032cf	              0x5d	                                 pop rbp	      3227	channel.c	FUNCTION_76	ELSE_1
0x40032d0	            0x415c	                                 pop r12	      3227	channel.c	FUNCTION_76	ELSE_1
0x40032d2	            0x415d	                                 pop r13	      3227	channel.c	FUNCTION_76	ELSE_1
0x40032d4	            0x415e	                                 pop r14	      3227	channel.c	FUNCTION_76	ELSE_1
0x40032d6	            0x415f	                                 pop r15	      3227	channel.c	FUNCTION_76	ELSE_1
0x40032d8	              0xc3	                                     ret	      3227	channel.c	FUNCTION_76	ELSE_1
handle_mode	IF,4:ELSE,4:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,7	66
0x4000684	            0x4155	                                push r13	      4394	channel.c	FUNCTION_102
0x4000686	            0x4154	                                push r12	      4394	channel.c	FUNCTION_102
0x4000688	              0x55	                                push rbp	      4394	channel.c	FUNCTION_102
0x4000689	              0x53	                                push rbx	      4394	channel.c	FUNCTION_102
0x400068a	        0x4883ec08	                              sub rsp, 8	      4394	channel.c	FUNCTION_102
0x400068e	          0x4889f5	                            mov rbp, rsi	      4394	channel.c	FUNCTION_102
0x4000691	          0x4989d5	                            mov r13, rdx	      4394	channel.c	FUNCTION_102
0x4000694	          0x4189cc	                           mov r12d, ecx	      4394	channel.c	FUNCTION_102
0x4000697	      0xe800000000	                          call 0x400069c	      4395	channel.c	FUNCTION_102	CALL_1
0x400069c	          0x4889c3	                            mov rbx, rax	      4395	channel.c	FUNCTION_102	CALL_1
0x400069f	        0x44096500	                    or dword [rbp], r12d	      4397	channel.c	FUNCTION_102
0x40006a3	           0xfb600	                   movzx eax, byte [rax]	      4398	channel.c	FUNCTION_102	IF_1	CALL_2
0x40006a6	          0x83f86e	                           cmp eax, 0x6e	      4398	channel.c	FUNCTION_102	IF_1	CALL_2
0x40006a9	            0x751e	                           jne 0x40006c9	      4398	channel.c	FUNCTION_102	IF_1	CALL_2
0x40006ab	        0x807b016c	                cmp byte [rbx + 1], 0x6c	      4398	channel.c	FUNCTION_102	IF_1	CALL_2
0x40006af	            0x755e	                           jne 0x400070f	      4398	channel.c	FUNCTION_102	IF_1	CALL_2
0x40006b1	        0x807b0200	                   cmp byte [rbx + 2], 0	      4398	channel.c	FUNCTION_102	IF_1	CALL_2
0x40006b5	            0x7558	                           jne 0x400070f	      4398	channel.c	FUNCTION_102	IF_1	CALL_2
0x40006b7	    0x41c745000000	                      mov dword [r13], 0	      4399	channel.c	FUNCTION_102	IF_1
0x40006bf	      0xb801000000	                              mov eax, 1	      4411	channel.c	FUNCTION_102
0x40006c4	      0xe992000000	                           jmp 0x400075b	      4411	channel.c	FUNCTION_102
0x40006c9	          0x83f872	                           cmp eax, 0x72	      4400	channel.c	FUNCTION_102	ELSE_1	IF_2	CALL_3
0x40006cc	            0x7521	                           jne 0x40006ef	      4400	channel.c	FUNCTION_102	ELSE_1	IF_2	CALL_3
0x40006ce	        0x807b0161	                cmp byte [rbx + 1], 0x61	      4400	channel.c	FUNCTION_102	ELSE_1	IF_2	CALL_3
0x40006d2	            0x753b	                           jne 0x400070f	      4400	channel.c	FUNCTION_102	ELSE_1	IF_2	CALL_3
0x40006d4	        0x807b0277	                cmp byte [rbx + 2], 0x77	      4400	channel.c	FUNCTION_102	ELSE_1	IF_2	CALL_3
0x40006d8	            0x7535	                           jne 0x400070f	      4400	channel.c	FUNCTION_102	ELSE_1	IF_2	CALL_3
0x40006da	        0x807b0300	                   cmp byte [rbx + 3], 0	      4400	channel.c	FUNCTION_102	ELSE_1	IF_2	CALL_3
0x40006de	            0x752f	                           jne 0x400070f	      4400	channel.c	FUNCTION_102	ELSE_1	IF_2	CALL_3
0x40006e0	    0x41c745000100	                      mov dword [r13], 1	      4401	channel.c	FUNCTION_102	ELSE_1	IF_2
0x40006e8	      0xb801000000	                              mov eax, 1	      4411	channel.c	FUNCTION_102
0x40006ed	            0xeb6c	                           jmp 0x400075b	      4411	channel.c	FUNCTION_102
0x40006ef	          0x83f86a	                           cmp eax, 0x6a	      4402	channel.c	FUNCTION_102	ELSE_2	IF_3	CALL_4
0x40006f2	            0x751b	                           jne 0x400070f	      4402	channel.c	FUNCTION_102	ELSE_2	IF_3	CALL_4
0x40006f4	        0x807b0173	                cmp byte [rbx + 1], 0x73	      4402	channel.c	FUNCTION_102	ELSE_2	IF_3	CALL_4
0x40006f8	            0x7515	                           jne 0x400070f	      4402	channel.c	FUNCTION_102	ELSE_2	IF_3	CALL_4
0x40006fa	        0x807b0200	                   cmp byte [rbx + 2], 0	      4402	channel.c	FUNCTION_102	ELSE_2	IF_3	CALL_4
0x40006fe	            0x750f	                           jne 0x400070f	      4402	channel.c	FUNCTION_102	ELSE_2	IF_3	CALL_4
0x4000700	    0x41c745000300	                      mov dword [r13], 3	      4403	channel.c	FUNCTION_102	ELSE_2	IF_3
0x4000708	      0xb801000000	                              mov eax, 1	      4411	channel.c	FUNCTION_102
0x400070d	            0xeb4c	                           jmp 0x400075b	      4411	channel.c	FUNCTION_102
0x400070f	      0xbf00000000	                              mov edi, 0	      4404	channel.c	FUNCTION_102	ELSE_3	IF_4	CALL_5
0x4000714	      0xb905000000	                              mov ecx, 5	      4404	channel.c	FUNCTION_102	ELSE_3	IF_4	CALL_5
0x4000719	          0x4889de	                            mov rsi, rbx	      4404	channel.c	FUNCTION_102	ELSE_3	IF_4	CALL_5
0x400071c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4404	channel.c	FUNCTION_102	ELSE_3	IF_4	CALL_5
0x400071e	           0xf97c2	                                 seta dl	      4404	channel.c	FUNCTION_102	ELSE_3	IF_4	CALL_5
0x4000721	           0xf92c0	                                 setb al	      4404	channel.c	FUNCTION_102	ELSE_3	IF_4	CALL_5
0x4000724	            0x38c2	                              cmp dl, al	      4404	channel.c	FUNCTION_102	ELSE_3	IF_4	CALL_5
0x4000726	            0x750f	                           jne 0x4000737	      4404	channel.c	FUNCTION_102	ELSE_3	IF_4	CALL_5
0x4000728	    0x41c745000200	                      mov dword [r13], 2	      4405	channel.c	FUNCTION_102	ELSE_3	IF_4
0x4000730	      0xb801000000	                              mov eax, 1	      4411	channel.c	FUNCTION_102
0x4000735	            0xeb24	                           jmp 0x400075b	      4411	channel.c	FUNCTION_102
0x4000737	      0xba05000000	                              mov edx, 5	      4408	channel.c	FUNCTION_102	ELSE_4	CALL_7
0x400073c	      0xbe00000000	                              mov esi, 0	      4408	channel.c	FUNCTION_102	ELSE_4	CALL_7
0x4000741	      0xbf00000000	                              mov edi, 0	      4408	channel.c	FUNCTION_102	ELSE_4	CALL_7
0x4000746	      0xe800000000	                          call 0x400074b	      4408	channel.c	FUNCTION_102	ELSE_4	CALL_7
0x400074b	          0x4889de	                            mov rsi, rbx	      4408	channel.c	FUNCTION_102	ELSE_4	CALL_7
0x400074e	          0x4889c7	                            mov rdi, rax	      4408	channel.c	FUNCTION_102	ELSE_4	CALL_7
0x4000751	      0xe800000000	                          call 0x4000756	      4408	channel.c	FUNCTION_102	ELSE_4	CALL_7
0x4000756	      0xb800000000	                              mov eax, 0	      4409	channel.c	FUNCTION_102	ELSE_4
0x400075b	        0x4883c408	                              add rsp, 8	      4412	channel.c	FUNCTION_102
0x400075f	              0x5b	                                 pop rbx	      4412	channel.c	FUNCTION_102
0x4000760	              0x5d	                                 pop rbp	      4412	channel.c	FUNCTION_102
0x4000761	            0x415c	                                 pop r12	      4412	channel.c	FUNCTION_102
0x4000763	            0x415d	                                 pop r13	      4412	channel.c	FUNCTION_102
0x4000765	              0xc3	                                     ret	      4412	channel.c	FUNCTION_102
free_unused_channels_contents	IF,1:ELSE,0:FOR,1:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,2	36
0x40050f1	            0x4155	                                push r13	       426	channel.c	FUNCTION_16
0x40050f3	            0x4154	                                push r12	       426	channel.c	FUNCTION_16
0x40050f5	              0x55	                                push rbp	       426	channel.c	FUNCTION_16
0x40050f6	              0x53	                                push rbx	       426	channel.c	FUNCTION_16
0x40050f7	        0x4883ec08	                              sub rsp, 8	       426	channel.c	FUNCTION_16
0x40050fb	    0x830500000000	               add dword [0x04005102], 1	       432	channel.c	FUNCTION_16
0x4005102	    0x488b1d000000	            mov rbx, qword [0x04005109] 	       434	channel.c	FUNCTION_16	FOR_1
0x4005109	          0x4885db	                           test rbx, rbx	       434	channel.c	FUNCTION_16	FOR_1
0x400510c	            0x743c	                            je 0x400514a	       434	channel.c	FUNCTION_16	FOR_1
0x400510e	          0x4189f4	                           mov r12d, esi	       434	channel.c	FUNCTION_16	FOR_1
0x4005111	            0x89fd	                            mov ebp, edi	       434	channel.c	FUNCTION_16	FOR_1
0x4005113	    0x41bd00000000	                             mov r13d, 0	       434	channel.c	FUNCTION_16	FOR_1
0x4005119	          0x4889df	                            mov rdi, rbx	       435	channel.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0x400511c	      0xe81fafffff	           call sym.channel_still_useful	       435	channel.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0x4005121	            0x85c0	                           test eax, eax	       435	channel.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0x4005123	            0x751b	                           jne 0x4005140	       435	channel.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0x4005125	            0x89e8	                            mov eax, ebp	       436	channel.c	FUNCTION_16	FOR_1	IF_1
0x4005127	    0x3383b8040000	            xor eax, dword [rbx + 0x4b8]	       436	channel.c	FUNCTION_16	FOR_1	IF_1
0x400512d	          0x4485e0	                          test eax, r12d	       436	channel.c	FUNCTION_16	FOR_1	IF_1
0x4005130	            0x740e	                            je 0x4005140	       436	channel.c	FUNCTION_16	FOR_1	IF_1
0x4005132	          0x4889df	                            mov rdi, rbx	       440	channel.c	FUNCTION_16	FOR_1	IF_1	CALL_2
0x4005135	      0xe81af8ffff	          call sym.channel_free_contents	       440	channel.c	FUNCTION_16	FOR_1	IF_1	CALL_2
0x400513a	    0x41bd01000000	                             mov r13d, 1	       441	channel.c	FUNCTION_16	FOR_1	IF_1
0x4005140	          0x488b1b	                    mov rbx, qword [rbx]	       434	channel.c	FUNCTION_16	FOR_1
0x4005143	          0x4885db	                           test rbx, rbx	       434	channel.c	FUNCTION_16	FOR_1
0x4005146	            0x75d1	                           jne 0x4005119	       434	channel.c	FUNCTION_16	FOR_1
0x4005148	            0xeb06	                           jmp 0x4005150	       434	channel.c	FUNCTION_16	FOR_1
0x400514a	    0x41bd00000000	                             mov r13d, 0	       427	channel.c	FUNCTION_16
0x4005150	    0x832d00000000	               sub dword [0x04005157], 1	       444	channel.c	FUNCTION_16
0x4005157	          0x4489e8	                           mov eax, r13d	       446	channel.c	FUNCTION_16
0x400515a	        0x4883c408	                              add rsp, 8	       446	channel.c	FUNCTION_16
0x400515e	              0x5b	                                 pop rbx	       446	channel.c	FUNCTION_16
0x400515f	              0x5d	                                 pop rbp	       446	channel.c	FUNCTION_16
0x4005160	            0x415c	                                 pop r12	       446	channel.c	FUNCTION_16
0x4005162	            0x415d	                                 pop r13	       446	channel.c	FUNCTION_16
0x4005164	              0xc3	                                     ret	       446	channel.c	FUNCTION_16
channel_unref	IF,1:ELSE,0:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,1	23
0x40049af	          0x4885ff	                           test rdi, rdi	       419	channel.c	FUNCTION_15	IF_1
0x40049b2	            0x743b	                            je 0x40049ef	       419	channel.c	FUNCTION_15	IF_1
0x40049b4	    0x8b87b4040000	           mov eax, dword [rdi + 0x4b4] 	       419	channel.c	FUNCTION_15	IF_1
0x40049ba	          0x8d50ff	                      lea edx, [rax - 1]	       419	channel.c	FUNCTION_15	IF_1
0x40049bd	    0x8997b4040000	            mov dword [rdi + 0x4b4], edx	       419	channel.c	FUNCTION_15	IF_1
0x40049c3	      0xb800000000	                              mov eax, 0	       421	channel.c	FUNCTION_15
0x40049c8	            0x85d2	                           test edx, edx	       419	channel.c	FUNCTION_15	IF_1
0x40049ca	            0x7f2a	                            jg 0x40049f6	       419	channel.c	FUNCTION_15	IF_1
0x40049cc	              0x53	                                push rbx	       418	channel.c	FUNCTION_15
0x40049cd	          0x4889fb	                            mov rbx, rdi	       418	channel.c	FUNCTION_15
0x40049d0	      0xe86bb6ffff	           call sym.channel_still_useful	       403	channel.c	FUNCTION_14	IF_1	CALL_1
0x40049d5	            0x89c2	                            mov edx, eax	       403	channel.c	FUNCTION_14	IF_1	CALL_1
0x40049d7	      0xb800000000	                              mov eax, 0	       408	channel.c	FUNCTION_14
0x40049dc	            0x85d2	                           test edx, edx	       403	channel.c	FUNCTION_14	IF_1	CALL_1
0x40049de	            0x7515	                           jne 0x40049f5	       403	channel.c	FUNCTION_14	IF_1	CALL_1
0x40049e0	          0x4889df	                            mov rdi, rbx	       405	channel.c	FUNCTION_14	IF_1	CALL_2
0x40049e3	      0xe896ffffff	                   call sym.channel_free	       405	channel.c	FUNCTION_14	IF_1	CALL_2
0x40049e8	      0xb801000000	                              mov eax, 1	       406	channel.c	FUNCTION_14	IF_1
0x40049ed	            0xeb06	                           jmp 0x40049f5	       406	channel.c	FUNCTION_14	IF_1
0x40049ef	      0xb800000000	                              mov eax, 0	       421	channel.c	FUNCTION_15
0x40049f4	              0xc3	                                     ret	       421	channel.c	FUNCTION_15
0x40049f5	              0x5b	                                 pop rbx	       422	channel.c	FUNCTION_15
0x40049f6	            0xf3c3	                                     ret	       422	channel.c	FUNCTION_15
channel_free_contents	IF,0:ELSE,0:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,3	12
0x4004954	              0x53	                                push rbx	       361	channel.c	FUNCTION_11
0x4004955	          0x4889fb	                            mov rbx, rdi	       361	channel.c	FUNCTION_11
0x4004958	      0xbe01000000	                              mov esi, 1	       362	channel.c	FUNCTION_11	CALL_1
0x400495d	      0xe800000000	                          call 0x4004962	       362	channel.c	FUNCTION_11	CALL_1
0x4004962	          0x4889df	                            mov rdi, rbx	       363	channel.c	FUNCTION_11	CALL_2
0x4004965	      0xe800000000	                          call 0x400496a	       363	channel.c	FUNCTION_11	CALL_2
0x400496a	      0xbe00000000	                              mov esi, 0	       364	channel.c	FUNCTION_11	CALL_3
0x400496f	          0x4889df	                            mov rdi, rbx	       364	channel.c	FUNCTION_11	CALL_3
0x4004972	      0xb800000000	                              mov eax, 0	       364	channel.c	FUNCTION_11	CALL_3
0x4004977	      0xe800000000	                          call 0x400497c	       364	channel.c	FUNCTION_11	CALL_3
0x400497c	              0x5b	                                 pop rbx	       365	channel.c	FUNCTION_11
0x400497d	              0xc3	                                     ret	       365	channel.c	FUNCTION_11
set_callback	IF,3:ELSE,2:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,4	41
0x40004dc	            0x4155	                                push r13	      1141	channel.c	FUNCTION_33
0x40004de	            0x4154	                                push r12	      1141	channel.c	FUNCTION_33
0x40004e0	              0x55	                                push rbp	      1141	channel.c	FUNCTION_33
0x40004e1	              0x53	                                push rbx	      1141	channel.c	FUNCTION_33
0x40004e2	        0x4883ec08	                              sub rsp, 8	      1141	channel.c	FUNCTION_33
0x40004e6	          0x4989fc	                            mov r12, rdi	      1141	channel.c	FUNCTION_33
0x40004e9	          0x4889f5	                            mov rbp, rsi	      1141	channel.c	FUNCTION_33
0x40004ec	          0x4989d5	                            mov r13, rdx	      1141	channel.c	FUNCTION_33
0x40004ef	          0x4889cb	                            mov rbx, rcx	      1141	channel.c	FUNCTION_33
0x40004f2	          0x488b36	                    mov rsi, qword [rsi]	      1142	channel.c	FUNCTION_33	CALL_1
0x40004f5	          0x488b3f	                    mov rdi, qword [rdi]	      1142	channel.c	FUNCTION_33	CALL_1
0x40004f8	      0xe800000000	                          call 0x40004fd	      1142	channel.c	FUNCTION_33	CALL_1
0x40004fd	          0x4d85ed	                           test r13, r13	      1143	channel.c	FUNCTION_33	IF_1
0x4000500	            0x743c	                            je 0x400053e	      1143	channel.c	FUNCTION_33	IF_1
0x4000502	      0x41807d0000	                       cmp byte [r13], 0	      1143	channel.c	FUNCTION_33	IF_1
0x4000507	            0x7435	                            je 0x400053e	      1143	channel.c	FUNCTION_33	IF_1
0x4000509	          0x4885db	                           test rbx, rbx	      1145	channel.c	FUNCTION_33	IF_1	IF_2
0x400050c	            0x7412	                            je 0x4000520	      1145	channel.c	FUNCTION_33	IF_1	IF_2
0x400050e	          0x4889df	                            mov rdi, rbx	      1146	channel.c	FUNCTION_33	IF_1	CALL_2
0x4000511	      0xe800000000	                          call 0x4000516	      1146	channel.c	FUNCTION_33	IF_1	CALL_2
0x4000516	        0x49890424	                    mov qword [r12], rax	      1146	channel.c	FUNCTION_33	IF_1	CALL_2
0x400051a	        0x48895d00	                    mov qword [rbp], rbx	      1155	channel.c	FUNCTION_33
0x400051e	            0xeb2f	                           jmp 0x400054f	      1155	channel.c	FUNCTION_33
0x4000520	          0x4c89ef	                            mov rdi, r13	      1149	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x4000523	      0xe800000000	                          call 0x4000528	      1149	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x4000528	        0x49890424	                    mov qword [r12], rax	      1149	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x400052c	          0x4889c7	                            mov rdi, rax	      1150	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_4
0x400052f	      0xe800000000	                          call 0x4000534	      1150	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_4
0x4000534	    0x48c745000000	                      mov qword [rbp], 0	      1155	channel.c	FUNCTION_33
0x400053c	            0xeb14	                           jmp 0x4000552	      1155	channel.c	FUNCTION_33
0x400053e	    0x49c704240000	                      mov qword [r12], 0	      1154	channel.c	FUNCTION_33	ELSE_2
0x4000546	        0x48895d00	                    mov qword [rbp], rbx	      1155	channel.c	FUNCTION_33
0x400054a	          0x4885db	                           test rbx, rbx	      1156	channel.c	FUNCTION_33	IF_3
0x400054d	            0x7403	                            je 0x4000552	      1156	channel.c	FUNCTION_33	IF_3
0x400054f	          0x830301	                      add dword [rbx], 1	      1157	channel.c	FUNCTION_33	IF_3
0x4000552	        0x4883c408	                              add rsp, 8	      1158	channel.c	FUNCTION_33
0x4000556	              0x5b	                                 pop rbx	      1158	channel.c	FUNCTION_33
0x4000557	              0x5d	                                 pop rbp	      1158	channel.c	FUNCTION_33
0x4000558	            0x415c	                                 pop r12	      1158	channel.c	FUNCTION_33
0x400055a	            0x415d	                                 pop r13	      1158	channel.c	FUNCTION_33
0x400055c	              0xc3	                                     ret	      1158	channel.c	FUNCTION_33
ch_close_part_on_error	IF,4:ELSE,1:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,7	81
0x4000cfb	              0x55	                                push rbp	      3232	channel.c	FUNCTION_77
0x4000cfc	              0x53	                                push rbx	      3232	channel.c	FUNCTION_77
0x4000cfd	        0x4883ec38	                           sub rsp, 0x38	      3232	channel.c	FUNCTION_77
0x4000d01	          0x4889fb	                            mov rbx, rdi	      3232	channel.c	FUNCTION_77
0x4000d04	            0x89f5	                            mov ebp, esi	      3232	channel.c	FUNCTION_77
0x4000d06	          0x4889c8	                            mov rax, rcx	      3232	channel.c	FUNCTION_77
0x4000d09	    0x64488b342528	                mov rsi, qword fs:[0x28]	      3232	channel.c	FUNCTION_77
0x4000d12	      0x4889742428	             mov qword [rsp + 0x28], rsi	      3232	channel.c	FUNCTION_77
0x4000d17	            0x31f6	                            xor esi, esi	      3232	channel.c	FUNCTION_77
0x4000d19	    0x48b925732829	          movabs rcx, 0x6552203a29287325	      3233	channel.c	FUNCTION_77
0x4000d23	        0x48890c24	                    mov qword [rsp], rcx	      3233	channel.c	FUNCTION_77
0x4000d27	    0x48bf61642025	          movabs rdi, 0x7266207325206461	      3233	channel.c	FUNCTION_77
0x4000d31	      0x48897c2408	                mov qword [rsp + 8], rdi	      3233	channel.c	FUNCTION_77
0x4000d36	    0x48b96f6d2063	          movabs rcx, 0x61705f6863206d6f	      3233	channel.c	FUNCTION_77
0x4000d40	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      3233	channel.c	FUNCTION_77
0x4000d45	    0x48be72745b25	          movabs rsi, 0x202c5d64255b7472	      3233	channel.c	FUNCTION_77
0x4000d4f	      0x4889742418	             mov qword [rsp + 0x18], rsi	      3233	channel.c	FUNCTION_77
0x4000d54	    0x48bf636c6f73	            movabs rdi, 0x676e69736f6c63	      3233	channel.c	FUNCTION_77
0x4000d5e	      0x48897c2420	             mov qword [rsp + 0x20], rdi	      3233	channel.c	FUNCTION_77
0x4000d63	            0x85d2	                           test edx, edx	      3235	channel.c	FUNCTION_77	IF_1
0x4000d65	            0x741d	                            je 0x4000d84	      3235	channel.c	FUNCTION_77	IF_1
0x4000d67	          0x4189e8	                            mov r8d, ebp	      3237	channel.c	FUNCTION_77	CALL_1
0x4000d6a	      0xb900000000	                              mov ecx, 0	      3237	channel.c	FUNCTION_77	CALL_1
0x4000d6f	          0x4889c2	                            mov rdx, rax	      3237	channel.c	FUNCTION_77	CALL_1
0x4000d72	          0x4889e6	                            mov rsi, rsp	      3237	channel.c	FUNCTION_77	CALL_1
0x4000d75	          0x4889df	                            mov rdi, rbx	      3237	channel.c	FUNCTION_77	CALL_1
0x4000d78	      0xb800000000	                              mov eax, 0	      3237	channel.c	FUNCTION_77	CALL_1
0x4000d7d	      0xe8c1f4ffff	                       call sym.ch_error	      3237	channel.c	FUNCTION_77	CALL_1
0x4000d82	            0xeb1b	                           jmp 0x4000d9f	      3237	channel.c	FUNCTION_77	CALL_1
0x4000d84	          0x4189e8	                            mov r8d, ebp	      3239	channel.c	FUNCTION_77	CALL_2
0x4000d87	      0xb900000000	                              mov ecx, 0	      3239	channel.c	FUNCTION_77	CALL_2
0x4000d8c	          0x4889c2	                            mov rdx, rax	      3239	channel.c	FUNCTION_77	CALL_2
0x4000d8f	          0x4889e6	                            mov rsi, rsp	      3239	channel.c	FUNCTION_77	CALL_2
0x4000d92	          0x4889df	                            mov rdi, rbx	      3239	channel.c	FUNCTION_77	CALL_2
0x4000d95	      0xb800000000	                              mov eax, 0	      3239	channel.c	FUNCTION_77	CALL_2
0x4000d9a	      0xe800000000	                          call 0x4000d9f	      3239	channel.c	FUNCTION_77	CALL_2
0x4000d9f	    0x4883bb780400	              cmp qword [rbx + 0x478], 0	      3252	channel.c	FUNCTION_77	IF_2
0x4000da7	            0x7423	                            je 0x4000dcc	      3252	channel.c	FUNCTION_77	IF_2
0x4000da9	    0x41b900000000	                              mov r9d, 0	      3253	channel.c	FUNCTION_77	IF_2	CALL_3
0x4000daf	    0x41b800000000	                              mov r8d, 0	      3253	channel.c	FUNCTION_77	IF_2	CALL_3
0x4000db5	      0xb907000000	                              mov ecx, 7	      3253	channel.c	FUNCTION_77	IF_2	CALL_3
0x4000dba	      0xba00000000	                              mov edx, 0	      3253	channel.c	FUNCTION_77	IF_2	CALL_3
0x4000dbf	      0xbe00000000	                              mov esi, 0	      3253	channel.c	FUNCTION_77	IF_2	CALL_3
0x4000dc4	          0x4889df	                            mov rdi, rbx	      3253	channel.c	FUNCTION_77	IF_2	CALL_3
0x4000dc7	      0xe858faffff	                   call sym.channel_save	      3253	channel.c	FUNCTION_77	IF_2	CALL_3
0x4000dcc	          0x8d45ff	                      lea eax, [rbp - 1]	      3260	channel.c	FUNCTION_77	IF_3
0x4000dcf	          0x83f801	                              cmp eax, 1	      3260	channel.c	FUNCTION_77	IF_3
0x4000dd2	            0x7740	                            ja 0x4000e14	      3260	channel.c	FUNCTION_77	IF_3
0x4000dd4	          0x83fd01	                              cmp ebp, 1	      3262	channel.c	FUNCTION_77	IF_3
0x4000dd7	        0x400f94c6	                                sete sil	      3262	channel.c	FUNCTION_77	IF_3
0x4000ddb	        0x400fb6f6	                          movzx esi, sil	      3262	channel.c	FUNCTION_77	IF_3
0x4000ddf	          0x83c601	                              add esi, 1	      3262	channel.c	FUNCTION_77	IF_3
0x4000de2	            0x89e8	                            mov eax, ebp	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4000de4	          0x4889c2	                            mov rdx, rax	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4000de7	        0x48c1e204	                              shl rdx, 4	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4000deb	        0x48c1e008	                              shl rax, 8	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4000def	          0x4801c2	                            add rdx, rax	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4000df2	            0x89f0	                            mov eax, esi	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4000df4	          0x4889c1	                            mov rcx, rax	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4000df7	        0x48c1e104	                              shl rcx, 4	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4000dfb	        0x48c1e008	                              shl rax, 8	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4000dff	          0x4801c8	                            add rax, rcx	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4000e02	        0x8b440318	      mov eax, dword [rbx + rax + 0x18] 	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4000e06	        0x39441318	      cmp dword [rbx + rdx + 0x18], eax 	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4000e0a	            0x7508	                           jne 0x4000e14	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4000e0c	          0x4889df	                            mov rdi, rbx	      3265	channel.c	FUNCTION_77	IF_3	CALL_5
0x4000e0f	      0xe82ef6ffff	                  call sym.ch_close_part	      3265	channel.c	FUNCTION_77	IF_3	CALL_5
0x4000e14	            0x89ee	                            mov esi, ebp	      3267	channel.c	FUNCTION_77	CALL_6
0x4000e16	          0x4889df	                            mov rdi, rbx	      3267	channel.c	FUNCTION_77	CALL_6
0x4000e19	      0xe824f6ffff	                  call sym.ch_close_part	      3267	channel.c	FUNCTION_77	CALL_6
0x4000e1e	            0x89ee	                            mov esi, ebp	      3271	channel.c	FUNCTION_77	CALL_7
0x4000e20	          0x4889df	                            mov rdi, rbx	      3271	channel.c	FUNCTION_77	CALL_7
0x4000e23	      0xe872feffff	     call sym.channel_gui_unregister_one	      3271	channel.c	FUNCTION_77	CALL_7
0x4000e28	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      3273	channel.c	FUNCTION_77
0x4000e2d	    0x644833042528	                xor rax, qword fs:[0x28]	      3273	channel.c	FUNCTION_77
0x4000e36	            0x7405	                            je 0x4000e3d	      3273	channel.c	FUNCTION_77
0x4000e38	      0xe800000000	                          call 0x4000e3d	      3273	channel.c	FUNCTION_77
0x4000e3d	        0x4883c438	                           add rsp, 0x38	      3273	channel.c	FUNCTION_77
0x4000e41	              0x5b	                                 pop rbx	      3273	channel.c	FUNCTION_77
0x4000e42	              0x5d	                                 pop rbp	      3273	channel.c	FUNCTION_77
0x4000e43	              0xc3	                                     ret	      3273	channel.c	FUNCTION_77
channel_read_json_block	IF,10:ELSE,2:FOR,1:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,9	134
0x40055ed	            0x4157	                                push r15	      3451	channel.c	FUNCTION_81
0x40055ef	            0x4156	                                push r14	      3451	channel.c	FUNCTION_81
0x40055f1	            0x4155	                                push r13	      3451	channel.c	FUNCTION_81
0x40055f3	            0x4154	                                push r12	      3451	channel.c	FUNCTION_81
0x40055f5	              0x55	                                push rbp	      3451	channel.c	FUNCTION_81
0x40055f6	              0x53	                                push rbx	      3451	channel.c	FUNCTION_81
0x40055f7	        0x4883ec38	                           sub rsp, 0x38	      3451	channel.c	FUNCTION_81
0x40055fb	          0x4889fd	                            mov rbp, rdi	      3451	channel.c	FUNCTION_81
0x40055fe	            0x89f3	                            mov ebx, esi	      3451	channel.c	FUNCTION_81
0x4005600	        0x89542408	                mov dword [rsp + 8], edx	      3451	channel.c	FUNCTION_81
0x4005604	          0x4189ce	                           mov r14d, ecx	      3451	channel.c	FUNCTION_81
0x4005607	          0x4d89c7	                             mov r15, r8	      3451	channel.c	FUNCTION_81
0x400560a	    0x64488b042528	                mov rax, qword fs:[0x28]	      3451	channel.c	FUNCTION_81
0x4005613	      0x4889442428	             mov qword [rsp + 0x28], rax	      3451	channel.c	FUNCTION_81
0x4005618	            0x31c0	                            xor eax, eax	      3451	channel.c	FUNCTION_81
0x400561a	      0xbe00000000	                              mov esi, 0	      3457	channel.c	FUNCTION_81	CALL_1
0x400561f	      0xe800000000	                          call 0x4005624	      3457	channel.c	FUNCTION_81	CALL_1
0x4005624	        0x4183feff	            cmp r14d, 0xffffffffffffffff	      3458	channel.c	FUNCTION_81	IF_1
0x4005628	            0x7415	                            je 0x400563f	      3458	channel.c	FUNCTION_81	IF_1
0x400562a	            0x89d8	                            mov eax, ebx	      3459	channel.c	FUNCTION_81	IF_1
0x400562c	          0x4889c2	                            mov rdx, rax	      3459	channel.c	FUNCTION_81	IF_1
0x400562f	        0x48c1e204	                              shl rdx, 4	      3459	channel.c	FUNCTION_81	IF_1
0x4005633	        0x48c1e008	                              shl rax, 8	      3459	channel.c	FUNCTION_81	IF_1
0x4005637	          0x4801d0	                            add rax, rdx	      3459	channel.c	FUNCTION_81	IF_1
0x400563a	      0x4489740570	     mov dword [rbp + rax + 0x70], r14d 	      3459	channel.c	FUNCTION_81	IF_1
0x400563f	            0x89d8	                            mov eax, ebx	      3481	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005641	          0x4889c2	                            mov rdx, rax	      3481	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005644	        0x48c1e204	                              shl rdx, 4	      3481	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005648	        0x48c1e008	                              shl rax, 8	      3481	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x400564c	          0x4801d0	                            add rax, rdx	      3481	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x400564f	        0x48890424	                    mov qword [rsp], rax	      3481	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005653	            0x89de	                            mov esi, ebx	      3462	channel.c	FUNCTION_81	FOR_1	CALL_2
0x4005655	          0x4889ef	                            mov rdi, rbp	      3462	channel.c	FUNCTION_81	FOR_1	CALL_2
0x4005658	      0xe8b4c3ffff	             call sym.channel_parse_json	      3462	channel.c	FUNCTION_81	FOR_1	CALL_2
0x400565d	          0x4189c5	                           mov r13d, eax	      3462	channel.c	FUNCTION_81	FOR_1	CALL_2
0x4005660	          0x4d89f8	                             mov r8, r15	      3465	channel.c	FUNCTION_81	FOR_1	IF_2	CALL_3
0x4005663	      0xb901000000	                              mov ecx, 1	      3465	channel.c	FUNCTION_81	FOR_1	IF_2	CALL_3
0x4005668	          0x4489f2	                           mov edx, r14d	      3465	channel.c	FUNCTION_81	FOR_1	IF_2	CALL_3
0x400566b	            0x89de	                            mov esi, ebx	      3465	channel.c	FUNCTION_81	FOR_1	IF_2	CALL_3
0x400566d	          0x4889ef	                            mov rdi, rbp	      3465	channel.c	FUNCTION_81	FOR_1	IF_2	CALL_3
0x4005670	      0xe808b9ffff	               call sym.channel_get_json	      3465	channel.c	FUNCTION_81	FOR_1	IF_2	CALL_3
0x4005675	          0x4189c4	                           mov r12d, eax	      3465	channel.c	FUNCTION_81	FOR_1	IF_2	CALL_3
0x4005678	          0x83f801	                              cmp eax, 1	      3465	channel.c	FUNCTION_81	FOR_1	IF_2	CALL_3
0x400567b	            0x751d	                           jne 0x400569a	      3465	channel.c	FUNCTION_81	FOR_1	IF_2	CALL_3
0x400567d	            0x89db	                            mov ebx, ebx	      3467	channel.c	FUNCTION_81	FOR_1	IF_2
0x400567f	          0x4889d8	                            mov rax, rbx	      3467	channel.c	FUNCTION_81	FOR_1	IF_2
0x4005682	        0x48c1e004	                              shl rax, 4	      3467	channel.c	FUNCTION_81	FOR_1	IF_2
0x4005686	        0x48c1e308	                              shl rbx, 8	      3467	channel.c	FUNCTION_81	FOR_1	IF_2
0x400568a	          0x4801c3	                            add rbx, rax	      3467	channel.c	FUNCTION_81	FOR_1	IF_2
0x400568d	    0xc7441d700000	        mov dword [rbp + rbx + 0x70], 0 	      3467	channel.c	FUNCTION_81	FOR_1	IF_2
0x4005695	      0xe916010000	                           jmp 0x40057b0	      3468	channel.c	FUNCTION_81	FOR_1	IF_2
0x400569a	          0x4585ed	                         test r13d, r13d	      3471	channel.c	FUNCTION_81	FOR_1	IF_3
0x400569d	            0x75b4	                           jne 0x4005653	      3471	channel.c	FUNCTION_81	FOR_1	IF_3
0x400569f	      0xe800000000	                          call 0x40056a4	      3475	channel.c	FUNCTION_81	FOR_1	IF_3	IF_4	CALL_4
0x40056a4	          0x4189c4	                           mov r12d, eax	      3475	channel.c	FUNCTION_81	FOR_1	IF_3	IF_4	CALL_4
0x40056a7	            0x85c0	                           test eax, eax	      3475	channel.c	FUNCTION_81	FOR_1	IF_3	IF_4	CALL_4
0x40056a9	            0x75a8	                           jne 0x4005653	      3475	channel.c	FUNCTION_81	FOR_1	IF_3	IF_4	CALL_4
0x40056ab	        0x8b442408	                mov eax, dword [rsp + 8]	      3480	channel.c	FUNCTION_81	FOR_1	IF_3
0x40056af	        0x8944240c	              mov dword [rsp + 0xc], eax	      3480	channel.c	FUNCTION_81	FOR_1	IF_3
0x40056b3	        0x488b0424	                    mov rax, qword [rsp]	      3481	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x40056b7	    0x48837c057800	         cmp qword [rbp + rax + 0x78], 0	      3481	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x40056bd	            0x747b	                            je 0x400573a	      3481	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x40056bf	      0xbe00000000	                              mov esi, 0	      3489	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	CALL_6
0x40056c4	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3489	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	CALL_6
0x40056c9	      0xe800000000	                          call 0x40056ce	      3489	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	CALL_6
0x40056ce	        0x488b0424	                    mov rax, qword [rsp]	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x40056d2	          0x4801e8	                            add rax, rbp	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x40056d5	    0x488bb0800000	            mov rsi, qword [rax + 0x80] 	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x40056dc	      0x482b742410	             sub rsi, qword [rsp + 0x10]	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x40056e1	    0x69f6e8030000	                    imul esi, esi, 0x3e8	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x40056e7	    0x488b88880000	            mov rcx, qword [rax + 0x88] 	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x40056ee	      0x482b4c2418	             sub rcx, qword [rsp + 0x18]	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x40056f3	    0x48bacff753e3	          movabs rdx, 0x20c49ba5e353f7cf	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x40056fd	          0x4889c8	                            mov rax, rcx	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005700	          0x48f7ea	                                imul rdx	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005703	        0x48c1fa07	                              sar rdx, 7	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005707	        0x48c1f93f	                           sar rcx, 0x3f	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x400570b	          0x4829ca	                            sub rdx, rcx	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x400570e	        0x8d441601	                lea eax, [rsi + rdx + 1]	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4005712	            0x85c0	                           test eax, eax	      3497	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x4005714	            0x7917	                           jns 0x400572d	      3497	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x4005716	        0x488b0424	                    mov rax, qword [rsp]	      3501	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x400571a	    0x48c744057800	        mov qword [rbp + rax + 0x78], 0 	      3501	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x4005723	        0x8b442408	                mov eax, dword [rsp + 8]	      3502	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x4005727	        0x8944240c	              mov dword [rsp + 0xc], eax	      3502	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x400572b	            0xeb0d	                           jmp 0x400573a	      3502	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x400572d	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      3502	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x4005731	            0x39c1	                            cmp ecx, eax	      3502	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x4005733	           0xf4ec1	                         cmovle eax, ecx	      3502	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x4005736	        0x8944240c	              mov dword [rsp + 0xc], eax	      3502	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x400573a	        0x488b0424	                    mov rax, qword [rsp]	      3507	channel.c	FUNCTION_81	FOR_1	IF_3
0x400573e	      0x448b6c0518	     mov r13d, dword [rbp + rax + 0x18] 	      3507	channel.c	FUNCTION_81	FOR_1	IF_3
0x4005743	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	      3508	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8
0x4005747	            0x7413	                            je 0x400575c	      3508	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8
0x4005749	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x400574d	          0x4489ee	                           mov esi, r13d	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x4005750	          0x4889ef	                            mov rdi, rbp	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x4005753	      0xe834daffff	                   call sym.channel_wait	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x4005758	            0x85c0	                           test eax, eax	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x400575a	            0x7428	                            je 0x4005784	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x400575c	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      3511	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9
0x4005760	        0x394c240c	              cmp dword [rsp + 0xc], ecx	      3511	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9
0x4005764	     0xf85e9feffff	                           jne 0x4005653	      3511	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9
0x400576a	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	      3513	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9	IF_10
0x400576e	            0x7428	                            je 0x4005798	      3513	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9	IF_10
0x4005770	      0xbe00000000	                              mov esi, 0	      3514	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9	CALL_8
0x4005775	          0x4889ef	                            mov rdi, rbp	      3514	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9	CALL_8
0x4005778	      0xb800000000	                              mov eax, 0	      3514	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9	CALL_8
0x400577d	      0xe800000000	                          call 0x4005782	      3514	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9	CALL_8
0x4005782	            0xeb14	                           jmp 0x4005798	      3514	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9	CALL_8
0x4005784	      0xba00000000	                              mov edx, 0	      3519	channel.c	FUNCTION_81	FOR_1	IF_3	CALL_9
0x4005789	            0x89de	                            mov esi, ebx	      3519	channel.c	FUNCTION_81	FOR_1	IF_3	CALL_9
0x400578b	          0x4889ef	                            mov rdi, rbp	      3519	channel.c	FUNCTION_81	FOR_1	IF_3	CALL_9
0x400578e	      0xe846dbffff	                   call sym.channel_read	      3519	channel.c	FUNCTION_81	FOR_1	IF_3	CALL_9
0x4005793	      0xe9bbfeffff	                           jmp 0x4005653	      3519	channel.c	FUNCTION_81	FOR_1	IF_3	CALL_9
0x4005798	            0x89db	                            mov ebx, ebx	      3522	channel.c	FUNCTION_81
0x400579a	          0x4889d8	                            mov rax, rbx	      3522	channel.c	FUNCTION_81
0x400579d	        0x48c1e004	                              shl rax, 4	      3522	channel.c	FUNCTION_81
0x40057a1	        0x48c1e308	                              shl rbx, 8	      3522	channel.c	FUNCTION_81
0x40057a5	          0x4801d8	                            add rax, rbx	      3522	channel.c	FUNCTION_81
0x40057a8	    0xc74405700000	        mov dword [rbp + rax + 0x70], 0 	      3522	channel.c	FUNCTION_81
0x40057b0	          0x4489e0	                           mov eax, r12d	      3524	channel.c	FUNCTION_81
0x40057b3	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      3524	channel.c	FUNCTION_81
0x40057b8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3524	channel.c	FUNCTION_81
0x40057c1	            0x7405	                            je 0x40057c8	      3524	channel.c	FUNCTION_81
0x40057c3	      0xe800000000	                          call 0x40057c8	      3524	channel.c	FUNCTION_81
0x40057c8	        0x4883c438	                           add rsp, 0x38	      3524	channel.c	FUNCTION_81
0x40057cc	              0x5b	                                 pop rbx	      3524	channel.c	FUNCTION_81
0x40057cd	              0x5d	                                 pop rbp	      3524	channel.c	FUNCTION_81
0x40057ce	            0x415c	                                 pop r12	      3524	channel.c	FUNCTION_81
0x40057d0	            0x415d	                                 pop r13	      3524	channel.c	FUNCTION_81
0x40057d2	            0x415e	                                 pop r14	      3524	channel.c	FUNCTION_81
0x40057d4	            0x415f	                                 pop r15	      3524	channel.c	FUNCTION_81
0x40057d6	              0xc3	                                     ret	      3524	channel.c	FUNCTION_81
channel_can_write_to	IF,0:ELSE,0:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,0	11
0x40023c5	          0x4885ff	                           test rdi, rdi	      2714	channel.c	FUNCTION_62
0x40023c8	            0x7419	                            je 0x40023e3	      2714	channel.c	FUNCTION_62
0x40023ca	      0xb801000000	                              mov eax, 1	      2714	channel.c	FUNCTION_62
0x40023cf	        0x837f18ff	cmp dword [rdi + 0x18], 0xffffffffffffffff	      2714	channel.c	FUNCTION_62
0x40023d3	            0x7513	                           jne 0x40023e8	      2714	channel.c	FUNCTION_62
0x40023d5	    0x83bf48030000	cmp dword [rdi + 0x348], 0xffffffffffffffff	      2714	channel.c	FUNCTION_62
0x40023dc	           0xf95c0	                                setne al	      2714	channel.c	FUNCTION_62
0x40023df	           0xfb6c0	                           movzx eax, al	      2714	channel.c	FUNCTION_62
0x40023e2	              0xc3	                                     ret	      2714	channel.c	FUNCTION_62
0x40023e3	      0xb800000000	                              mov eax, 0	      2714	channel.c	FUNCTION_62
0x40023e8	            0xf3c3	                                     ret	      2716	channel.c	FUNCTION_62
free_unused_channels	IF,1:ELSE,0:FOR,1:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,2	30
0x40011d3	            0x4155	                                push r13	       450	channel.c	FUNCTION_17
0x40011d5	            0x4154	                                push r12	       450	channel.c	FUNCTION_17
0x40011d7	              0x55	                                push rbp	       450	channel.c	FUNCTION_17
0x40011d8	              0x53	                                push rbx	       450	channel.c	FUNCTION_17
0x40011d9	        0x4883ec08	                              sub rsp, 8	       450	channel.c	FUNCTION_17
0x40011dd	          0x4189fd	                           mov r13d, edi	       450	channel.c	FUNCTION_17
0x40011e0	          0x4189f4	                           mov r12d, esi	       450	channel.c	FUNCTION_17
0x40011e3	    0x488b1d000000	            mov rbx, qword [0x040011ea] 	       454	channel.c	FUNCTION_17	FOR_1
0x40011ea	          0x4885db	                           test rbx, rbx	       454	channel.c	FUNCTION_17	FOR_1
0x40011ed	            0x742d	                            je 0x400121c	       454	channel.c	FUNCTION_17	FOR_1
0x40011ef	          0x488b2b	                    mov rbp, qword [rbx]	       456	channel.c	FUNCTION_17	FOR_1
0x40011f2	          0x4889df	                            mov rdi, rbx	       457	channel.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x40011f5	      0xe846eeffff	           call sym.channel_still_useful	       457	channel.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x40011fa	            0x85c0	                           test eax, eax	       457	channel.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x40011fc	            0x7516	                           jne 0x4001214	       457	channel.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x40011fe	          0x4489e8	                           mov eax, r13d	       458	channel.c	FUNCTION_17	FOR_1	IF_1
0x4001201	    0x3383b8040000	            xor eax, dword [rbx + 0x4b8]	       458	channel.c	FUNCTION_17	FOR_1	IF_1
0x4001207	          0x4485e0	                          test eax, r12d	       458	channel.c	FUNCTION_17	FOR_1	IF_1
0x400120a	            0x7408	                            je 0x4001214	       458	channel.c	FUNCTION_17	FOR_1	IF_1
0x400120c	          0x4889df	                            mov rdi, rbx	       461	channel.c	FUNCTION_17	FOR_1	IF_1	CALL_2
0x400120f	      0xe832f1ffff	           call sym.channel_free_channel	       461	channel.c	FUNCTION_17	FOR_1	IF_1	CALL_2
0x4001214	          0x4889eb	                            mov rbx, rbp	       461	channel.c	FUNCTION_17	FOR_1	IF_1	CALL_2
0x4001217	          0x4885ed	                           test rbp, rbp	       454	channel.c	FUNCTION_17	FOR_1
0x400121a	            0x75d3	                           jne 0x40011ef	       454	channel.c	FUNCTION_17	FOR_1
0x400121c	        0x4883c408	                              add rsp, 8	       464	channel.c	FUNCTION_17
0x4001220	              0x5b	                                 pop rbx	       464	channel.c	FUNCTION_17
0x4001221	              0x5d	                                 pop rbp	       464	channel.c	FUNCTION_17
0x4001222	            0x415c	                                 pop r12	       464	channel.c	FUNCTION_17
0x4001224	            0x415d	                                 pop r13	       464	channel.c	FUNCTION_17
0x4001226	              0xc3	                                     ret	       464	channel.c	FUNCTION_17
ch_raw_common	IF,2:ELSE,1:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,5	69
0x40072d3	            0x4154	                                push r12	      3984	channel.c	FUNCTION_90
0x40072d5	              0x55	                                push rbp	      3984	channel.c	FUNCTION_90
0x40072d6	              0x53	                                push rbx	      3984	channel.c	FUNCTION_90
0x40072d7	    0x4881ece00300	                          sub rsp, 0x3e0	      3984	channel.c	FUNCTION_90
0x40072de	          0x4889fd	                            mov rbp, rdi	      3984	channel.c	FUNCTION_90
0x40072e1	          0x4889f3	                            mov rbx, rsi	      3984	channel.c	FUNCTION_90
0x40072e4	          0x4189d4	                           mov r12d, edx	      3984	channel.c	FUNCTION_90
0x40072e7	    0x64488b042528	                mov rax, qword fs:[0x28]	      3984	channel.c	FUNCTION_90
0x40072f0	    0x48898424d803	            mov qword [rsp + 0x3d8], rax	      3984	channel.c	FUNCTION_90
0x40072f8	            0x31c0	                            xor eax, eax	      3984	channel.c	FUNCTION_90
0x40072fa	    0xc70602000000	                      mov dword [rsi], 2	      3993	channel.c	FUNCTION_90
0x4007300	    0x48c746080000	                  mov qword [rsi + 8], 0	      3994	channel.c	FUNCTION_90
0x4007308	        0x488d7f10	                   lea rdi, [rdi + 0x10]	      3996	channel.c	FUNCTION_90	CALL_1
0x400730c	    0x488db4249003	                  lea rsi, [rsp + 0x390]	      3996	channel.c	FUNCTION_90	CALL_1
0x4007314	      0xe800000000	                          call 0x4007319	      3996	channel.c	FUNCTION_90	CALL_1
0x4007319	          0x4585e4	                         test r12d, r12d	      3997	channel.c	FUNCTION_90	CALL_2
0x400731c	     0xf848b000000	                            je 0x40073ad	      3997	channel.c	FUNCTION_90	CALL_2
0x4007322	        0x4883ec08	                              sub rsp, 8	      3997	channel.c	FUNCTION_90	CALL_2
0x4007326	      0x488d542414	                   lea rdx, [rsp + 0x14]	      3997	channel.c	FUNCTION_90	CALL_2
0x400732b	              0x52	                                push rdx	      3997	channel.c	FUNCTION_90	CALL_2
0x400732c	    0x41b900000000	                              mov r9d, 0	      3997	channel.c	FUNCTION_90	CALL_2
0x4007332	      0x4c8d442420	                    lea r8, [rsp + 0x20]	      3997	channel.c	FUNCTION_90	CALL_2
0x4007337	          0x4489e1	                           mov ecx, r12d	      3997	channel.c	FUNCTION_90	CALL_2
0x400733a	      0xba00000000	                              mov edx, 0	      3997	channel.c	FUNCTION_90	CALL_2
0x400733f	          0x4889c6	                            mov rsi, rax	      3997	channel.c	FUNCTION_90	CALL_2
0x4007342	          0x4889ef	                            mov rdi, rbp	      3997	channel.c	FUNCTION_90	CALL_2
0x4007345	      0xe846feffff	                    call sym.send_common	      3997	channel.c	FUNCTION_90	CALL_2
0x400734a	          0x4889c7	                            mov rdi, rax	      3997	channel.c	FUNCTION_90	CALL_2
0x400734d	        0x4883c410	                           add rsp, 0x10	      3999	channel.c	FUNCTION_90	IF_1
0x4007351	          0x4885c0	                           test rax, rax	      3999	channel.c	FUNCTION_90	IF_1
0x4007354	            0x7438	                            je 0x400738e	      3999	channel.c	FUNCTION_90	IF_1
0x4007356	      0xf644241102	               test byte [rsp + 0x11], 2	      4001	channel.c	FUNCTION_90	IF_1	IF_2
0x400735b	            0x7409	                            je 0x4007366	      4001	channel.c	FUNCTION_90	IF_1	IF_2
0x400735d	    0x8b9424080200	           mov edx, dword [rsp + 0x208] 	      4002	channel.c	FUNCTION_90	IF_1	IF_2
0x4007364	            0xeb16	                           jmp 0x400737c	      4002	channel.c	FUNCTION_90	IF_1	IF_2
0x4007366	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      4389	channel.c	FUNCTION_101
0x400736a	          0x4889d0	                            mov rax, rdx	      4389	channel.c	FUNCTION_101
0x400736d	        0x48c1e004	                              shl rax, 4	      4389	channel.c	FUNCTION_101
0x4007371	        0x48c1e208	                              shl rdx, 8	      4389	channel.c	FUNCTION_101
0x4007375	          0x4801c2	                            add rdx, rax	      4389	channel.c	FUNCTION_101
0x4007378	        0x8b541728	      mov edx, dword [rdi + rdx + 0x28] 	      4389	channel.c	FUNCTION_101
0x400737c	      0xb901000000	                              mov ecx, 1	      4005	channel.c	FUNCTION_90	IF_1	CALL_4
0x4007381	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      4005	channel.c	FUNCTION_90	IF_1	CALL_4
0x4007385	      0xe802c1ffff	             call sym.channel_read_block	      4005	channel.c	FUNCTION_90	IF_1	CALL_4
0x400738a	        0x48894308	                mov qword [rbx + 8], rax	      4005	channel.c	FUNCTION_90	IF_1	CALL_4
0x400738e	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      4008	channel.c	FUNCTION_90	CALL_5
0x4007393	      0xe800000000	                          call 0x4007398	      4008	channel.c	FUNCTION_90	CALL_5
0x4007398	    0x488b8424d803	           mov rax, qword [rsp + 0x3d8] 	      4009	channel.c	FUNCTION_90
0x40073a0	    0x644833042528	                xor rax, qword fs:[0x28]	      4009	channel.c	FUNCTION_90
0x40073a9	            0x7437	                            je 0x40073e2	      4009	channel.c	FUNCTION_90
0x40073ab	            0xeb30	                           jmp 0x40073dd	      4009	channel.c	FUNCTION_90
0x40073ad	        0x4883ec08	                              sub rsp, 8	      3997	channel.c	FUNCTION_90	CALL_2
0x40073b1	      0x488d542414	                   lea rdx, [rsp + 0x14]	      3997	channel.c	FUNCTION_90	CALL_2
0x40073b6	              0x52	                                push rdx	      3997	channel.c	FUNCTION_90	CALL_2
0x40073b7	    0x41b900000000	                              mov r9d, 0	      3997	channel.c	FUNCTION_90	CALL_2
0x40073bd	      0x4c8d442420	                    lea r8, [rsp + 0x20]	      3997	channel.c	FUNCTION_90	CALL_2
0x40073c2	      0xb900000000	                              mov ecx, 0	      3997	channel.c	FUNCTION_90	CALL_2
0x40073c7	      0xba00000000	                              mov edx, 0	      3997	channel.c	FUNCTION_90	CALL_2
0x40073cc	          0x4889c6	                            mov rsi, rax	      3997	channel.c	FUNCTION_90	CALL_2
0x40073cf	          0x4889ef	                            mov rdi, rbp	      3997	channel.c	FUNCTION_90	CALL_2
0x40073d2	      0xe8b9fdffff	                    call sym.send_common	      3997	channel.c	FUNCTION_90	CALL_2
0x40073d7	        0x4883c410	                           add rsp, 0x10	      3997	channel.c	FUNCTION_90	CALL_2
0x40073db	            0xebb1	                           jmp 0x400738e	      3997	channel.c	FUNCTION_90	CALL_2
0x40073dd	      0xe800000000	                          call 0x40073e2	      4009	channel.c	FUNCTION_90
0x40073e2	    0x4881c4e00300	                          add rsp, 0x3e0	      4009	channel.c	FUNCTION_90
0x40073e9	              0x5b	                                 pop rbx	      4009	channel.c	FUNCTION_90
0x40073ea	              0x5d	                                 pop rbp	      4009	channel.c	FUNCTION_90
0x40073eb	            0x415c	                                 pop r12	      4009	channel.c	FUNCTION_90
0x40073ed	              0xc3	                                     ret	      4009	channel.c	FUNCTION_90
job_set_options	IF,5:ELSE,3:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,5	48
0x4007c15	              0x55	                                push rbp	      5420	channel.c	FUNCTION_126
0x4007c16	              0x53	                                push rbx	      5420	channel.c	FUNCTION_126
0x4007c17	        0x4883ec08	                              sub rsp, 8	      5420	channel.c	FUNCTION_126
0x4007c1b	          0x4889fd	                            mov rbp, rdi	      5420	channel.c	FUNCTION_126
0x4007c1e	          0x4889f3	                            mov rbx, rsi	      5420	channel.c	FUNCTION_126
0x4007c21	    0xf70600400000	                test dword [rsi], 0x4000	      5421	channel.c	FUNCTION_126	IF_1
0x4007c27	            0x742d	                            je 0x4007c56	      5421	channel.c	FUNCTION_126	IF_1
0x4007c29	        0x488b7f30	            mov rdi, qword [rdi + 0x30] 	      5423	channel.c	FUNCTION_126	IF_1	CALL_1
0x4007c2d	      0xe800000000	                          call 0x4007c32	      5423	channel.c	FUNCTION_126	IF_1	CALL_1
0x4007c32	    0x488bbb580200	           mov rdi, qword [rbx + 0x258] 	      5424	channel.c	FUNCTION_126	IF_1	IF_2
0x4007c39	          0x4885ff	                           test rdi, rdi	      5424	channel.c	FUNCTION_126	IF_1	IF_2
0x4007c3c	            0x7405	                            je 0x4007c43	      5424	channel.c	FUNCTION_126	IF_1	IF_2
0x4007c3e	          0x803f00	                       cmp byte [rdi], 0	      5424	channel.c	FUNCTION_126	IF_1	IF_2
0x4007c41	            0x750a	                           jne 0x4007c4d	      5424	channel.c	FUNCTION_126	IF_1	IF_2
0x4007c43	    0x48c745300000	               mov qword [rbp + 0x30], 0	      5425	channel.c	FUNCTION_126	IF_1	IF_2
0x4007c4b	            0xeb09	                           jmp 0x4007c56	      5425	channel.c	FUNCTION_126	IF_1	IF_2
0x4007c4d	      0xe800000000	                          call 0x4007c52	      5427	channel.c	FUNCTION_126	IF_1	CALL_2
0x4007c52	        0x48894530	            mov qword [rbp + 0x30], rax 	      5427	channel.c	FUNCTION_126	IF_1	CALL_2
0x4007c56	    0xf70300800000	                test dword [rbx], 0x8000	      5429	channel.c	FUNCTION_126	IF_3
0x4007c5c	            0x7468	                            je 0x4007cc6	      5429	channel.c	FUNCTION_126	IF_3
0x4007c5e	        0x488b7548	            mov rsi, qword [rbp + 0x48] 	      5431	channel.c	FUNCTION_126	IF_3	CALL_3
0x4007c62	        0x488b7d40	            mov rdi, qword [rbp + 0x40] 	      5431	channel.c	FUNCTION_126	IF_3	CALL_3
0x4007c66	      0xe800000000	                          call 0x4007c6b	      5431	channel.c	FUNCTION_126	IF_3	CALL_3
0x4007c6b	    0x488b83e00100	           mov rax, qword [rbx + 0x1e0] 	      5432	channel.c	FUNCTION_126	IF_3	IF_4
0x4007c72	          0x4885c0	                           test rax, rax	      5432	channel.c	FUNCTION_126	IF_3	IF_4
0x4007c75	            0x7405	                            je 0x4007c7c	      5432	channel.c	FUNCTION_126	IF_3	IF_4
0x4007c77	          0x803800	                       cmp byte [rax], 0	      5432	channel.c	FUNCTION_126	IF_3	IF_4
0x4007c7a	            0x7512	                           jne 0x4007c8e	      5432	channel.c	FUNCTION_126	IF_3	IF_4
0x4007c7c	    0x48c745400000	               mov qword [rbp + 0x40], 0	      5434	channel.c	FUNCTION_126	IF_3	IF_4
0x4007c84	    0x48c745480000	               mov qword [rbp + 0x48], 0	      5435	channel.c	FUNCTION_126	IF_3	IF_4
0x4007c8c	            0xeb38	                           jmp 0x4007cc6	      5435	channel.c	FUNCTION_126	IF_3	IF_4
0x4007c8e	    0x488b83e80100	           mov rax, qword [rbx + 0x1e8] 	      5439	channel.c	FUNCTION_126	IF_3	ELSE_2
0x4007c95	        0x48894548	            mov qword [rbp + 0x48], rax 	      5439	channel.c	FUNCTION_126	IF_3	ELSE_2
0x4007c99	          0x4885c0	                           test rax, rax	      5440	channel.c	FUNCTION_126	IF_3	ELSE_2	IF_5
0x4007c9c	            0x7410	                            je 0x4007cae	      5440	channel.c	FUNCTION_126	IF_3	ELSE_2	IF_5
0x4007c9e	    0x488b93e00100	           mov rdx, qword [rbx + 0x1e0] 	      5442	channel.c	FUNCTION_126	IF_3	ELSE_2	IF_5
0x4007ca5	        0x48895540	            mov qword [rbp + 0x40], rdx 	      5442	channel.c	FUNCTION_126	IF_3	ELSE_2	IF_5
0x4007ca9	          0x830001	                      add dword [rax], 1	      5443	channel.c	FUNCTION_126	IF_3	ELSE_2	IF_5
0x4007cac	            0xeb18	                           jmp 0x4007cc6	      5443	channel.c	FUNCTION_126	IF_3	ELSE_2	IF_5
0x4007cae	    0x488bbbe00100	           mov rdi, qword [rbx + 0x1e0] 	      5447	channel.c	FUNCTION_126	IF_3	ELSE_2	ELSE_3	CALL_4
0x4007cb5	      0xe800000000	                          call 0x4007cba	      5447	channel.c	FUNCTION_126	IF_3	ELSE_2	ELSE_3	CALL_4
0x4007cba	        0x48894540	            mov qword [rbp + 0x40], rax 	      5447	channel.c	FUNCTION_126	IF_3	ELSE_2	ELSE_3	CALL_4
0x4007cbe	          0x4889c7	                            mov rdi, rax	      5448	channel.c	FUNCTION_126	IF_3	ELSE_2	ELSE_3	CALL_5
0x4007cc1	      0xe800000000	                          call 0x4007cc6	      5448	channel.c	FUNCTION_126	IF_3	ELSE_2	ELSE_3	CALL_5
0x4007cc6	        0x4883c408	                              add rsp, 8	      5452	channel.c	FUNCTION_126
0x4007cca	              0x5b	                                 pop rbx	      5452	channel.c	FUNCTION_126
0x4007ccb	              0x5d	                                 pop rbp	      5452	channel.c	FUNCTION_126
0x4007ccc	              0xc3	                                     ret	      5452	channel.c	FUNCTION_126
job_free_contents	IF,2:ELSE,0:FOR,1:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,9	45
0x40049f8	              0x55	                                push rbp	      5038	channel.c	FUNCTION_109
0x40049f9	              0x53	                                push rbx	      5038	channel.c	FUNCTION_109
0x40049fa	        0x4883ec08	                              sub rsp, 8	      5038	channel.c	FUNCTION_109
0x40049fe	          0x4889fd	                            mov rbp, rdi	      5038	channel.c	FUNCTION_109
0x4004a01	        0x488b7f60	            mov rdi, qword [rdi + 0x60] 	      5041	channel.c	FUNCTION_109	CALL_1
0x4004a05	      0xbe00000000	                              mov esi, 0	      5041	channel.c	FUNCTION_109	CALL_1
0x4004a0a	      0xb800000000	                              mov eax, 0	      5041	channel.c	FUNCTION_109	CALL_1
0x4004a0f	      0xe800000000	                          call 0x4004a14	      5041	channel.c	FUNCTION_109	CALL_1
0x4004a14	        0x488b4560	            mov rax, qword [rbp + 0x60] 	      5042	channel.c	FUNCTION_109	IF_1
0x4004a18	          0x4885c0	                           test rax, rax	      5042	channel.c	FUNCTION_109	IF_1
0x4004a1b	            0x7414	                            je 0x4004a31	      5042	channel.c	FUNCTION_109	IF_1
0x4004a1d	    0x48c780a80400	              mov qword [rax + 0x4a8], 0	      5049	channel.c	FUNCTION_109	IF_1
0x4004a28	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	      5050	channel.c	FUNCTION_109	IF_1	CALL_2
0x4004a2c	      0xe800000000	                          call 0x4004a31	      5050	channel.c	FUNCTION_109	IF_1	CALL_2
0x4004a31	          0x4889ef	                            mov rdi, rbp	      5052	channel.c	FUNCTION_109	CALL_3
0x4004a34	      0xe800000000	                          call 0x4004a39	      5052	channel.c	FUNCTION_109	CALL_3
0x4004a39	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	      5054	channel.c	FUNCTION_109	CALL_4
0x4004a3d	      0xe800000000	                          call 0x4004a42	      5054	channel.c	FUNCTION_109	CALL_4
0x4004a42	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	      5055	channel.c	FUNCTION_109	CALL_5
0x4004a46	      0xe800000000	                          call 0x4004a4b	      5055	channel.c	FUNCTION_109	CALL_5
0x4004a4b	        0x488b7d30	            mov rdi, qword [rbp + 0x30] 	      5056	channel.c	FUNCTION_109	CALL_6
0x4004a4f	      0xe800000000	                          call 0x4004a54	      5056	channel.c	FUNCTION_109	CALL_6
0x4004a54	        0x488b7548	            mov rsi, qword [rbp + 0x48] 	      5057	channel.c	FUNCTION_109	CALL_7
0x4004a58	        0x488b7d40	            mov rdi, qword [rbp + 0x40] 	      5057	channel.c	FUNCTION_109	CALL_7
0x4004a5c	      0xe800000000	                          call 0x4004a61	      5057	channel.c	FUNCTION_109	CALL_7
0x4004a61	        0x488b4568	            mov rax, qword [rbp + 0x68] 	      5058	channel.c	FUNCTION_109	IF_2
0x4004a65	          0x4885c0	                           test rax, rax	      5058	channel.c	FUNCTION_109	IF_2
0x4004a68	            0x742d	                            je 0x4004a97	      5058	channel.c	FUNCTION_109	IF_2
0x4004a6a	          0x488b38	                    mov rdi, qword [rax]	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x4004a6d	          0x4885ff	                           test rdi, rdi	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x4004a70	            0x741d	                            je 0x4004a8f	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x4004a72	      0xbb00000000	                              mov ebx, 0	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x4004a77	      0xe800000000	                          call 0x4004a7c	      5061	channel.c	FUNCTION_109	IF_2	CALL_8
0x4004a7c	          0x83c301	                              add ebx, 1	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x4004a7f	        0x488b4568	            mov rax, qword [rbp + 0x68] 	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x4004a83	          0x4863d3	                         movsxd rdx, ebx	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x4004a86	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x4004a8a	          0x4885ff	                           test rdi, rdi	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x4004a8d	            0x75e8	                           jne 0x4004a77	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x4004a8f	          0x4889c7	                            mov rdi, rax	      5062	channel.c	FUNCTION_109	IF_2	CALL_9
0x4004a92	      0xe800000000	                          call 0x4004a97	      5062	channel.c	FUNCTION_109	IF_2	CALL_9
0x4004a97	        0x4883c408	                              add rsp, 8	      5064	channel.c	FUNCTION_109
0x4004a9b	              0x5b	                                 pop rbx	      5064	channel.c	FUNCTION_109
0x4004a9c	              0x5d	                                 pop rbp	      5064	channel.c	FUNCTION_109
0x4004a9d	              0xc3	                                     ret	      5064	channel.c	FUNCTION_109
ch_expr_common	IF,6:ELSE,1:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,12	125
0x40073ee	            0x4156	                                push r14	      3922	channel.c	FUNCTION_89
0x40073f0	            0x4155	                                push r13	      3922	channel.c	FUNCTION_89
0x40073f2	            0x4154	                                push r12	      3922	channel.c	FUNCTION_89
0x40073f4	              0x55	                                push rbp	      3922	channel.c	FUNCTION_89
0x40073f5	              0x53	                                push rbx	      3922	channel.c	FUNCTION_89
0x40073f6	    0x4881ec900300	                          sub rsp, 0x390	      3922	channel.c	FUNCTION_89
0x40073fd	          0x4889fb	                            mov rbx, rdi	      3922	channel.c	FUNCTION_89
0x4007400	          0x4889f5	                            mov rbp, rsi	      3922	channel.c	FUNCTION_89
0x4007403	          0x4189d4	                           mov r12d, edx	      3922	channel.c	FUNCTION_89
0x4007406	    0x64488b042528	                mov rax, qword fs:[0x28]	      3922	channel.c	FUNCTION_89
0x400740f	    0x488984248803	            mov qword [rsp + 0x388], rax	      3922	channel.c	FUNCTION_89
0x4007417	            0x31c0	                            xor eax, eax	      3922	channel.c	FUNCTION_89
0x4007419	    0xc70602000000	                      mov dword [rsi], 2	      3934	channel.c	FUNCTION_89
0x400741f	    0x48c746080000	                  mov qword [rsi + 8], 0	      3935	channel.c	FUNCTION_89
0x4007427	      0xb900000000	                              mov ecx, 0	      3937	channel.c	FUNCTION_89	CALL_1
0x400742c	      0xba00000000	                              mov edx, 0	      3937	channel.c	FUNCTION_89	CALL_1
0x4007431	      0xbe01000000	                              mov esi, 1	      3937	channel.c	FUNCTION_89	CALL_1
0x4007436	      0xe800000000	                          call 0x400743b	      3937	channel.c	FUNCTION_89	CALL_1
0x400743b	          0x4885c0	                           test rax, rax	      3938	channel.c	FUNCTION_89	IF_1
0x400743e	     0xf8467010000	                            je 0x40075ab	      3938	channel.c	FUNCTION_89	IF_1
0x4007444	        0x837818ff	cmp dword [rax + 0x18], 0xffffffffffffffff	      4357	channel.c	FUNCTION_98
0x4007448	           0xf94c2	                                 sete dl	      4357	channel.c	FUNCTION_98
0x400744b	           0xfb6d2	                           movzx edx, dl	      4357	channel.c	FUNCTION_98
0x400744e	          0x8d1452	                  lea edx, [rdx + rdx*2]	      4357	channel.c	FUNCTION_98
0x4007451	            0x89d2	                            mov edx, edx	      4380	channel.c	FUNCTION_100
0x4007453	          0x4889d1	                            mov rcx, rdx	      4380	channel.c	FUNCTION_100
0x4007456	        0x48c1e104	                              shl rcx, 4	      4380	channel.c	FUNCTION_100
0x400745a	        0x48c1e208	                              shl rdx, 8	      4380	channel.c	FUNCTION_100
0x400745e	          0x4801ca	                            add rdx, rcx	      4380	channel.c	FUNCTION_100
0x4007461	        0x8b541020	      mov edx, dword [rax + rdx + 0x20] 	      4380	channel.c	FUNCTION_100
0x4007465	          0x83fa01	                              cmp edx, 1	      3943	channel.c	FUNCTION_89	IF_2
0x4007468	            0x7721	                            ja 0x400748b	      3943	channel.c	FUNCTION_89	IF_2
0x400746a	      0xba05000000	                              mov edx, 5	      3945	channel.c	FUNCTION_89	IF_2	CALL_5
0x400746f	      0xbe00000000	                              mov esi, 0	      3945	channel.c	FUNCTION_89	IF_2	CALL_5
0x4007474	      0xbf00000000	                              mov edi, 0	      3945	channel.c	FUNCTION_89	IF_2	CALL_5
0x4007479	      0xe800000000	                          call 0x400747e	      3945	channel.c	FUNCTION_89	IF_2	CALL_5
0x400747e	          0x4889c7	                            mov rdi, rax	      3945	channel.c	FUNCTION_89	IF_2	CALL_5
0x4007481	      0xe800000000	                          call 0x4007486	      3945	channel.c	FUNCTION_89	IF_2	CALL_5
0x4007486	      0xe920010000	                           jmp 0x40075ab	      3946	channel.c	FUNCTION_89	IF_2
0x400748b	          0x8b7014	            mov esi, dword [rax + 0x14] 	      3949	channel.c	FUNCTION_89
0x400748e	        0x448d6e01	                     lea r13d, [rsi + 1]	      3949	channel.c	FUNCTION_89
0x4007492	        0x44896814	            mov dword [rax + 0x14], r13d	      3949	channel.c	FUNCTION_89
0x4007496	          0x83fa03	                              cmp edx, 3	      3950	channel.c	FUNCTION_89	CALL_6
0x4007499	           0xf94c2	                                 sete dl	      3950	channel.c	FUNCTION_89	CALL_6
0x400749c	           0xfb6d2	                           movzx edx, dl	      3950	channel.c	FUNCTION_89	CALL_6
0x400749f	          0x83c204	                              add edx, 4	      3950	channel.c	FUNCTION_89	CALL_6
0x40074a2	        0x488d7310	                   lea rsi, [rbx + 0x10]	      3950	channel.c	FUNCTION_89	CALL_6
0x40074a6	          0x4489ef	                           mov edi, r13d	      3950	channel.c	FUNCTION_89	CALL_6
0x40074a9	      0xe800000000	                          call 0x40074ae	      3950	channel.c	FUNCTION_89	CALL_6
0x40074ae	          0x4989c6	                            mov r14, rax	      3950	channel.c	FUNCTION_89	CALL_6
0x40074b1	          0x4885c0	                           test rax, rax	      3952	channel.c	FUNCTION_89	IF_3
0x40074b4	     0xf84f1000000	                            je 0x40075ab	      3952	channel.c	FUNCTION_89	IF_3
0x40074ba	          0x4585e4	                         test r12d, r12d	      3955	channel.c	FUNCTION_89	CALL_7
0x40074bd	     0xf84b2000000	                            je 0x4007575	      3955	channel.c	FUNCTION_89	CALL_7
0x40074c3	        0x4883ec08	                              sub rsp, 8	      3955	channel.c	FUNCTION_89	CALL_7
0x40074c7	      0x488d44240c	                    lea rax, [rsp + 0xc]	      3955	channel.c	FUNCTION_89	CALL_7
0x40074cc	              0x50	                                push rax	      3955	channel.c	FUNCTION_89	CALL_7
0x40074cd	    0x41b900000000	                              mov r9d, 0	      3955	channel.c	FUNCTION_89	CALL_7
0x40074d3	      0x4c8d442420	                    lea r8, [rsp + 0x20]	      3955	channel.c	FUNCTION_89	CALL_7
0x40074d8	          0x4489e1	                           mov ecx, r12d	      3955	channel.c	FUNCTION_89	CALL_7
0x40074db	          0x4489ea	                           mov edx, r13d	      3955	channel.c	FUNCTION_89	CALL_7
0x40074de	          0x4c89f6	                            mov rsi, r14	      3955	channel.c	FUNCTION_89	CALL_7
0x40074e1	          0x4889df	                            mov rdi, rbx	      3955	channel.c	FUNCTION_89	CALL_7
0x40074e4	      0xe8a7fcffff	                    call sym.send_common	      3955	channel.c	FUNCTION_89	CALL_7
0x40074e9	          0x4889c3	                            mov rbx, rax	      3955	channel.c	FUNCTION_89	CALL_7
0x40074ec	          0x4c89f7	                            mov rdi, r14	      3957	channel.c	FUNCTION_89	CALL_8
0x40074ef	      0xe800000000	                          call 0x40074f4	      3957	channel.c	FUNCTION_89	CALL_8
0x40074f4	        0x4883c410	                           add rsp, 0x10	      3958	channel.c	FUNCTION_89	IF_4
0x40074f8	          0x4885db	                           test rbx, rbx	      3958	channel.c	FUNCTION_89	IF_4
0x40074fb	            0x746c	                            je 0x4007569	      3958	channel.c	FUNCTION_89	IF_4
0x40074fd	      0xf644241102	               test byte [rsp + 0x11], 2	      3960	channel.c	FUNCTION_89	IF_4	IF_5
0x4007502	            0x7409	                            je 0x400750d	      3960	channel.c	FUNCTION_89	IF_4	IF_5
0x4007504	    0x8b9424080200	           mov edx, dword [rsp + 0x208] 	      3961	channel.c	FUNCTION_89	IF_4	IF_5
0x400750b	            0xeb16	                           jmp 0x4007523	      3961	channel.c	FUNCTION_89	IF_4	IF_5
0x400750d	        0x8b442404	                mov eax, dword [rsp + 4]	      4389	channel.c	FUNCTION_101
0x4007511	          0x4889c2	                            mov rdx, rax	      4389	channel.c	FUNCTION_101
0x4007514	        0x48c1e204	                              shl rdx, 4	      4389	channel.c	FUNCTION_101
0x4007518	        0x48c1e008	                              shl rax, 8	      4389	channel.c	FUNCTION_101
0x400751c	          0x4801d0	                            add rax, rdx	      4389	channel.c	FUNCTION_101
0x400751f	        0x8b540328	      mov edx, dword [rbx + rax + 0x28] 	      4389	channel.c	FUNCTION_101
0x4007523	      0x4c8d442408	                       lea r8, [rsp + 8]	      3964	channel.c	FUNCTION_89	IF_4	IF_6	CALL_10
0x4007528	          0x4489e9	                           mov ecx, r13d	      3964	channel.c	FUNCTION_89	IF_4	IF_6	CALL_10
0x400752b	        0x8b742404	                mov esi, dword [rsp + 4]	      3964	channel.c	FUNCTION_89	IF_4	IF_6	CALL_10
0x400752f	          0x4889df	                            mov rdi, rbx	      3964	channel.c	FUNCTION_89	IF_4	IF_6	CALL_10
0x4007532	      0xe8b6e0ffff	        call sym.channel_read_json_block	      3964	channel.c	FUNCTION_89	IF_4	IF_6	CALL_10
0x4007537	          0x83f801	                              cmp eax, 1	      3964	channel.c	FUNCTION_89	IF_4	IF_6	CALL_10
0x400753a	            0x752d	                           jne 0x4007569	      3964	channel.c	FUNCTION_89	IF_4	IF_6	CALL_10
0x400753c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3967	channel.c	FUNCTION_89	IF_4	IF_6
0x4007541	        0x488b4708	                mov rax, qword [rdi + 8]	      3967	channel.c	FUNCTION_89	IF_4	IF_6
0x4007545	        0x488b5008	                mov rdx, qword [rax + 8]	      3971	channel.c	FUNCTION_89	IF_4	IF_6
0x4007549	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      3971	channel.c	FUNCTION_89	IF_4	IF_6
0x400754d	        0x488b5a18	            mov rbx, qword [rdx + 0x18] 	      3971	channel.c	FUNCTION_89	IF_4	IF_6
0x4007551	        0x48894d00	                    mov qword [rbp], rcx	      3971	channel.c	FUNCTION_89	IF_4	IF_6
0x4007555	        0x48895d08	                mov qword [rbp + 8], rbx	      3971	channel.c	FUNCTION_89	IF_4	IF_6
0x4007559	        0x488b4008	                mov rax, qword [rax + 8]	      3972	channel.c	FUNCTION_89	IF_4	IF_6
0x400755d	    0xc74010010000	               mov dword [rax + 0x10], 1	      3972	channel.c	FUNCTION_89	IF_4	IF_6
0x4007564	      0xe800000000	                          call 0x4007569	      3973	channel.c	FUNCTION_89	IF_4	IF_6	CALL_11
0x4007569	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3976	channel.c	FUNCTION_89	CALL_12
0x400756e	      0xe800000000	                          call 0x4007573	      3976	channel.c	FUNCTION_89	CALL_12
0x4007573	            0xeb36	                           jmp 0x40075ab	      3976	channel.c	FUNCTION_89	CALL_12
0x4007575	        0x4883ec08	                              sub rsp, 8	      3955	channel.c	FUNCTION_89	CALL_7
0x4007579	      0x488d44240c	                    lea rax, [rsp + 0xc]	      3955	channel.c	FUNCTION_89	CALL_7
0x400757e	              0x50	                                push rax	      3955	channel.c	FUNCTION_89	CALL_7
0x400757f	    0x41b900000000	                              mov r9d, 0	      3955	channel.c	FUNCTION_89	CALL_7
0x4007585	      0x4c8d442420	                    lea r8, [rsp + 0x20]	      3955	channel.c	FUNCTION_89	CALL_7
0x400758a	      0xb900000000	                              mov ecx, 0	      3955	channel.c	FUNCTION_89	CALL_7
0x400758f	          0x4489ea	                           mov edx, r13d	      3955	channel.c	FUNCTION_89	CALL_7
0x4007592	          0x4c89f6	                            mov rsi, r14	      3955	channel.c	FUNCTION_89	CALL_7
0x4007595	          0x4889df	                            mov rdi, rbx	      3955	channel.c	FUNCTION_89	CALL_7
0x4007598	      0xe8f3fbffff	                    call sym.send_common	      3955	channel.c	FUNCTION_89	CALL_7
0x400759d	          0x4c89f7	                            mov rdi, r14	      3957	channel.c	FUNCTION_89	CALL_8
0x40075a0	      0xe800000000	                          call 0x40075a5	      3957	channel.c	FUNCTION_89	CALL_8
0x40075a5	        0x4883c410	                           add rsp, 0x10	      3957	channel.c	FUNCTION_89	CALL_8
0x40075a9	            0xebbe	                           jmp 0x4007569	      3957	channel.c	FUNCTION_89	CALL_8
0x40075ab	    0x488b84248803	           mov rax, qword [rsp + 0x388] 	      3977	channel.c	FUNCTION_89
0x40075b3	    0x644833042528	                xor rax, qword fs:[0x28]	      3977	channel.c	FUNCTION_89
0x40075bc	            0x7405	                            je 0x40075c3	      3977	channel.c	FUNCTION_89
0x40075be	      0xe800000000	                          call 0x40075c3	      3977	channel.c	FUNCTION_89
0x40075c3	    0x4881c4900300	                          add rsp, 0x390	      3977	channel.c	FUNCTION_89
0x40075ca	              0x5b	                                 pop rbx	      3977	channel.c	FUNCTION_89
0x40075cb	              0x5d	                                 pop rbp	      3977	channel.c	FUNCTION_89
0x40075cc	            0x415c	                                 pop r12	      3977	channel.c	FUNCTION_89
0x40075ce	            0x415d	                                 pop r13	      3977	channel.c	FUNCTION_89
0x40075d0	            0x415e	                                 pop r14	      3977	channel.c	FUNCTION_89
0x40075d2	              0xc3	                                     ret	      3977	channel.c	FUNCTION_89
invoke_callback	IF,1:ELSE,0:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,4	51
0x4000766	            0x4155	                                push r13	      1590	channel.c	FUNCTION_43
0x4000768	            0x4154	                                push r12	      1590	channel.c	FUNCTION_43
0x400076a	              0x55	                                push rbp	      1590	channel.c	FUNCTION_43
0x400076b	              0x53	                                push rbx	      1590	channel.c	FUNCTION_43
0x400076c	        0x4883ec38	                           sub rsp, 0x38	      1590	channel.c	FUNCTION_43
0x4000770	          0x4989fd	                            mov r13, rdi	      1590	channel.c	FUNCTION_43
0x4000773	          0x4889f5	                            mov rbp, rsi	      1590	channel.c	FUNCTION_43
0x4000776	          0x4989d4	                            mov r12, rdx	      1590	channel.c	FUNCTION_43
0x4000779	          0x4889cb	                            mov rbx, rcx	      1590	channel.c	FUNCTION_43
0x400077c	    0x64488b042528	                mov rax, qword fs:[0x28]	      1590	channel.c	FUNCTION_43
0x4000785	      0x4889442428	             mov qword [rsp + 0x28], rax	      1590	channel.c	FUNCTION_43
0x400078a	            0x31c0	                            xor eax, eax	      1590	channel.c	FUNCTION_43
0x400078c	    0x833d00000000	               cmp dword [0x04000793], 0	      1594	channel.c	FUNCTION_43	IF_1
0x4000793	            0x750a	                           jne 0x400079f	      1594	channel.c	FUNCTION_43	IF_1
0x4000795	      0xbf00000000	                              mov edi, 0	      1595	channel.c	FUNCTION_43	CALL_1
0x400079a	      0xe800000000	                          call 0x400079f	      1595	channel.c	FUNCTION_43	CALL_1
0x400079f	    0xc7030a000000	                    mov dword [rbx], 0xa	      1597	channel.c	FUNCTION_43
0x40007a5	        0x4c896b08	                mov qword [rbx + 8], r13	      1598	channel.c	FUNCTION_43
0x40007a9	      0xb800000000	                              mov eax, 0	      1600	channel.c	FUNCTION_43	CALL_3
0x40007ae	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1600	channel.c	FUNCTION_43	CALL_3
0x40007b5	          0x4889ef	                            mov rdi, rbp	      1600	channel.c	FUNCTION_43	CALL_3
0x40007b8	            0xf2ae	              repne scasb al, byte [rdi]	      1600	channel.c	FUNCTION_43	CALL_3
0x40007ba	          0x48f7d1	                                 not rcx	      1600	channel.c	FUNCTION_43	CALL_3
0x40007bd	        0x488d71ff	                      lea rsi, [rcx - 1]	      1600	channel.c	FUNCTION_43	CALL_3
0x40007c1	            0x6a00	                                  push 0	      1600	channel.c	FUNCTION_43	CALL_3
0x40007c3	            0x4154	                                push r12	      1600	channel.c	FUNCTION_43	CALL_3
0x40007c5	            0x6a01	                                  push 1	      1600	channel.c	FUNCTION_43	CALL_3
0x40007c7	      0x488d442424	                   lea rax, [rsp + 0x24]	      1600	channel.c	FUNCTION_43	CALL_3
0x40007cc	              0x50	                                push rax	      1600	channel.c	FUNCTION_43	CALL_3
0x40007cd	            0x6a00	                                  push 0	      1600	channel.c	FUNCTION_43	CALL_3
0x40007cf	            0x6a00	                                  push 0	      1600	channel.c	FUNCTION_43	CALL_3
0x40007d1	    0x41b900000000	                              mov r9d, 0	      1600	channel.c	FUNCTION_43	CALL_3
0x40007d7	          0x4989d8	                             mov r8, rbx	      1600	channel.c	FUNCTION_43	CALL_3
0x40007da	      0xb902000000	                              mov ecx, 2	      1600	channel.c	FUNCTION_43	CALL_3
0x40007df	      0x488d542440	                   lea rdx, [rsp + 0x40]	      1600	channel.c	FUNCTION_43	CALL_3
0x40007e4	          0x4889ef	                            mov rdi, rbp	      1600	channel.c	FUNCTION_43	CALL_3
0x40007e7	      0xe800000000	                          call 0x40007ec	      1600	channel.c	FUNCTION_43	CALL_3
0x40007ec	        0x4883c430	                           add rsp, 0x30	      1602	channel.c	FUNCTION_43	CALL_4
0x40007f0	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1602	channel.c	FUNCTION_43	CALL_4
0x40007f5	      0xe800000000	                          call 0x40007fa	      1602	channel.c	FUNCTION_43	CALL_4
0x40007fa	    0xc70500000000	               mov dword [0x04000804], 1	      1603	channel.c	FUNCTION_43
0x4000804	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1604	channel.c	FUNCTION_43
0x4000809	    0x644833042528	                xor rax, qword fs:[0x28]	      1604	channel.c	FUNCTION_43
0x4000812	            0x7405	                            je 0x4000819	      1604	channel.c	FUNCTION_43
0x4000814	      0xe800000000	                          call 0x4000819	      1604	channel.c	FUNCTION_43
0x4000819	        0x4883c438	                           add rsp, 0x38	      1604	channel.c	FUNCTION_43
0x400081d	              0x5b	                                 pop rbx	      1604	channel.c	FUNCTION_43
0x400081e	              0x5d	                                 pop rbp	      1604	channel.c	FUNCTION_43
0x400081f	            0x415c	                                 pop r12	      1604	channel.c	FUNCTION_43
0x4000821	            0x415d	                                 pop r13	      1604	channel.c	FUNCTION_43
0x4000823	              0xc3	                                     ret	      1604	channel.c	FUNCTION_43
channel_first_nl	IF,1:ELSE,0:FOR,1:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,0	19
0x4001970	          0x488b07	                    mov rax, qword [rdi]	      1626	channel.c	FUNCTION_45
0x4001973	        0x488b4f08	                mov rcx, qword [rdi + 8]	      1629	channel.c	FUNCTION_45	FOR_1
0x4001977	          0x4885c9	                           test rcx, rcx	      1629	channel.c	FUNCTION_45	FOR_1
0x400197a	            0x7426	                            je 0x40019a2	      1629	channel.c	FUNCTION_45	FOR_1
0x400197c	          0x80380a	                     cmp byte [rax], 0xa	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x400197f	            0x7426	                            je 0x40019a7	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4001981	        0x488d5001	                      lea rdx, [rax + 1]	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4001985	          0x4801c1	                            add rcx, rax	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4001988	            0xeb0d	                           jmp 0x4001997	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x400198a	          0x4889d0	                            mov rax, rdx	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x400198d	        0x4883c201	                              add rdx, 1	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4001991	        0x807aff0a	                 cmp byte [rdx - 1], 0xa	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4001995	            0x7410	                            je 0x40019a7	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4001997	          0x4839ca	                            cmp rdx, rcx	      1629	channel.c	FUNCTION_45	FOR_1
0x400199a	            0x75ee	                           jne 0x400198a	      1629	channel.c	FUNCTION_45	FOR_1
0x400199c	      0xb800000000	                              mov eax, 0	      1632	channel.c	FUNCTION_45
0x40019a1	              0xc3	                                     ret	      1632	channel.c	FUNCTION_45
0x40019a2	      0xb800000000	                              mov eax, 0	      1632	channel.c	FUNCTION_45
0x40019a7	            0xf3c3	                                     ret	      1633	channel.c	FUNCTION_45
get_channel_arg	IF,5:ELSE,2:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,8	77
0x4006ef7	            0x4155	                                push r13	      5003	channel.c	FUNCTION_108
0x4006ef9	            0x4154	                                push r12	      5003	channel.c	FUNCTION_108
0x4006efb	              0x55	                                push rbp	      5003	channel.c	FUNCTION_108
0x4006efc	              0x53	                                push rbx	      5003	channel.c	FUNCTION_108
0x4006efd	        0x4883ec08	                              sub rsp, 8	      5003	channel.c	FUNCTION_108
0x4006f01	          0x4189f4	                           mov r12d, esi	      5003	channel.c	FUNCTION_108
0x4006f04	            0x89d5	                            mov ebp, edx	      5003	channel.c	FUNCTION_108
0x4006f06	            0x8b07	                    mov eax, dword [rdi]	      5007	channel.c	FUNCTION_108	IF_1
0x4006f08	          0x83f809	                              cmp eax, 9	      5007	channel.c	FUNCTION_108	IF_1
0x4006f0b	            0x7513	                           jne 0x4006f20	      5007	channel.c	FUNCTION_108	IF_1
0x4006f0d	        0x488b4708	                mov rax, qword [rdi + 8]	      5009	channel.c	FUNCTION_108	IF_1	IF_2
0x4006f11	          0x4885c0	                           test rax, rax	      5009	channel.c	FUNCTION_108	IF_1	IF_2
0x4006f14	     0xf84bb000000	                            je 0x4006fd5	      5009	channel.c	FUNCTION_108	IF_1	IF_2
0x4006f1a	        0x488b5860	            mov rbx, qword [rax + 0x60] 	      5010	channel.c	FUNCTION_108	IF_1	IF_2
0x4006f1e	            0xeb3c	                           jmp 0x4006f5c	      5010	channel.c	FUNCTION_108	IF_1	IF_2
0x4006f20	          0x83f80a	                            cmp eax, 0xa	      5012	channel.c	FUNCTION_108	ELSE_1	IF_3
0x4006f23	            0x7506	                           jne 0x4006f2b	      5012	channel.c	FUNCTION_108	ELSE_1	IF_3
0x4006f25	        0x488b5f08	                mov rbx, qword [rdi + 8]	      5014	channel.c	FUNCTION_108	ELSE_1	IF_3
0x4006f29	            0xeb31	                           jmp 0x4006f5c	      5014	channel.c	FUNCTION_108	ELSE_1	IF_3
0x4006f2b	      0xe800000000	                          call 0x4006f30	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x4006f30	          0x4889c3	                            mov rbx, rax	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x4006f33	      0xba05000000	                              mov edx, 5	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x4006f38	      0xbe00000000	                              mov esi, 0	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x4006f3d	      0xbf00000000	                              mov edi, 0	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x4006f42	      0xe800000000	                          call 0x4006f47	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x4006f47	          0x4889de	                            mov rsi, rbx	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x4006f4a	          0x4889c7	                            mov rdi, rax	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x4006f4d	      0xe800000000	                          call 0x4006f52	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x4006f52	      0xb800000000	                              mov eax, 0	      5019	channel.c	FUNCTION_108	ELSE_2
0x4006f57	      0xe982000000	                           jmp 0x4006fde	      5019	channel.c	FUNCTION_108	ELSE_2
0x4006f5c	          0x4885db	                           test rbx, rbx	      5021	channel.c	FUNCTION_108	IF_4
0x4006f5f	            0x7424	                            je 0x4006f85	      5021	channel.c	FUNCTION_108	IF_4
0x4006f61	            0x85ed	                           test ebp, ebp	      5021	channel.c	FUNCTION_108	IF_4
0x4006f63	            0x7420	                            je 0x4006f85	      5021	channel.c	FUNCTION_108	IF_4
0x4006f65	            0x89ce	                            mov esi, ecx	      5022	channel.c	FUNCTION_108	IF_4	CALL_4
0x4006f67	          0x83f904	                              cmp ecx, 4	      5022	channel.c	FUNCTION_108	IF_4	CALL_4
0x4006f6a	            0x750c	                           jne 0x4006f78	      5022	channel.c	FUNCTION_108	IF_4	CALL_4
0x4006f6c	        0x837b18ff	cmp dword [rbx + 0x18], 0xffffffffffffffff	      4368	channel.c	FUNCTION_99
0x4006f70	        0x400f94c6	                                sete sil	      4368	channel.c	FUNCTION_99
0x4006f74	        0x400fb6f6	                          movzx esi, sil	      4368	channel.c	FUNCTION_99
0x4006f78	          0x4889df	                            mov rdi, rbx	      5022	channel.c	FUNCTION_108	IF_4	CALL_4
0x4006f7b	      0xe800000000	                          call 0x4006f80	      5022	channel.c	FUNCTION_108	IF_4	CALL_4
0x4006f80	          0x4189c5	                           mov r13d, eax	      5022	channel.c	FUNCTION_108	IF_4	CALL_4
0x4006f83	            0xeb06	                           jmp 0x4006f8b	      5022	channel.c	FUNCTION_108	IF_4	CALL_4
0x4006f85	    0x41bd00000000	                             mov r13d, 0	      5005	channel.c	FUNCTION_108
0x4006f8b	          0x4889d8	                            mov rax, rbx	      5005	channel.c	FUNCTION_108
0x4006f8e	          0x4585e4	                         test r12d, r12d	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x4006f91	            0x744b	                            je 0x4006fde	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x4006f93	          0x4885db	                           test rbx, rbx	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x4006f96	            0x741a	                            je 0x4006fb2	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x4006f98	          0x4889df	                            mov rdi, rbx	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x4006f9b	      0xe800000000	                          call 0x4006fa0	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x4006fa0	            0x89c2	                            mov edx, eax	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x4006fa2	          0x4889d8	                            mov rax, rbx	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x4006fa5	            0x85d2	                           test edx, edx	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x4006fa7	            0x7535	                           jne 0x4006fde	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x4006fa9	            0x85ed	                           test ebp, ebp	      5026	channel.c	FUNCTION_108	IF_5
0x4006fab	            0x7405	                            je 0x4006fb2	      5026	channel.c	FUNCTION_108	IF_5
0x4006fad	          0x4585ed	                         test r13d, r13d	      5026	channel.c	FUNCTION_108	IF_5
0x4006fb0	            0x752c	                           jne 0x4006fde	      5026	channel.c	FUNCTION_108	IF_5
0x4006fb2	      0xba05000000	                              mov edx, 5	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x4006fb7	      0xbe00000000	                              mov esi, 0	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x4006fbc	      0xbf00000000	                              mov edi, 0	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x4006fc1	      0xe800000000	                          call 0x4006fc6	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x4006fc6	          0x4889c7	                            mov rdi, rax	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x4006fc9	      0xe800000000	                          call 0x4006fce	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x4006fce	      0xb800000000	                              mov eax, 0	      5029	channel.c	FUNCTION_108	IF_5
0x4006fd3	            0xeb09	                           jmp 0x4006fde	      5029	channel.c	FUNCTION_108	IF_5
0x4006fd5	            0x85f6	                           test esi, esi	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x4006fd7	            0x75d9	                           jne 0x4006fb2	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x4006fd9	      0xb800000000	                              mov eax, 0	      5004	channel.c	FUNCTION_108
0x4006fde	        0x4883c408	                              add rsp, 8	      5032	channel.c	FUNCTION_108
0x4006fe2	              0x5b	                                 pop rbx	      5032	channel.c	FUNCTION_108
0x4006fe3	              0x5d	                                 pop rbp	      5032	channel.c	FUNCTION_108
0x4006fe4	            0x415c	                                 pop r12	      5032	channel.c	FUNCTION_108
0x4006fe6	            0x415d	                                 pop r13	      5032	channel.c	FUNCTION_108
0x4006fe8	              0xc3	                                     ret	      5032	channel.c	FUNCTION_108
channel_send	IF,22:ELSE,7:FOR,1:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,23	271
0x4002998	            0x4157	                                push r15	      3701	channel.c	FUNCTION_87
0x400299a	            0x4156	                                push r14	      3701	channel.c	FUNCTION_87
0x400299c	            0x4155	                                push r13	      3701	channel.c	FUNCTION_87
0x400299e	            0x4154	                                push r12	      3701	channel.c	FUNCTION_87
0x40029a0	              0x55	                                push rbp	      3701	channel.c	FUNCTION_87
0x40029a1	              0x53	                                push rbx	      3701	channel.c	FUNCTION_87
0x40029a2	        0x4883ec38	                           sub rsp, 0x38	      3701	channel.c	FUNCTION_87
0x40029a6	          0x4989fe	                            mov r14, rdi	      3701	channel.c	FUNCTION_87
0x40029a9	      0x4889542420	             mov qword [rsp + 0x20], rdx	      3701	channel.c	FUNCTION_87
0x40029ae	        0x894c241c	             mov dword [rsp + 0x1c], ecx	      3701	channel.c	FUNCTION_87
0x40029b2	      0x4c89442428	              mov qword [rsp + 0x28], r8	      3701	channel.c	FUNCTION_87
0x40029b7	            0x89f0	                            mov eax, esi	      3707	channel.c	FUNCTION_87
0x40029b9	          0x4889c2	                            mov rdx, rax	      3707	channel.c	FUNCTION_87
0x40029bc	        0x48c1e204	                              shl rdx, 4	      3707	channel.c	FUNCTION_87
0x40029c0	        0x48c1e008	                              shl rax, 8	      3707	channel.c	FUNCTION_87
0x40029c4	          0x4801d0	                            add rax, rdx	      3707	channel.c	FUNCTION_87
0x40029c7	        0x8b440718	      mov eax, dword [rdi + rax + 0x18] 	      3707	channel.c	FUNCTION_87
0x40029cb	        0x89442418	             mov dword [rsp + 0x18], eax	      3707	channel.c	FUNCTION_87
0x40029cf	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3708	channel.c	FUNCTION_87	IF_1
0x40029d2	            0x7557	                           jne 0x4002a2b	      3708	channel.c	FUNCTION_87	IF_1
0x40029d4	    0x83bf74040000	              cmp dword [rdi + 0x474], 0	      3710	channel.c	FUNCTION_87	IF_1	IF_2
0x40029db	            0x7539	                           jne 0x4002a16	      3710	channel.c	FUNCTION_87	IF_1	IF_2
0x40029dd	          0x4c89c3	                             mov rbx, r8	      3710	channel.c	FUNCTION_87	IF_1	IF_2
0x40029e0	          0x4d85c0	                             test r8, r8	      3710	channel.c	FUNCTION_87	IF_1	IF_2
0x40029e3	            0x7431	                            je 0x4002a16	      3710	channel.c	FUNCTION_87	IF_1	IF_2
0x40029e5	          0x4c89c2	                             mov rdx, r8	      3712	channel.c	FUNCTION_87	IF_1	IF_2	CALL_1
0x40029e8	      0xbe00000000	                              mov esi, 0	      3712	channel.c	FUNCTION_87	IF_1	IF_2	CALL_1
0x40029ed	      0xb800000000	                              mov eax, 0	      3712	channel.c	FUNCTION_87	IF_1	IF_2	CALL_1
0x40029f2	      0xe84cd8ffff	                       call sym.ch_error	      3712	channel.c	FUNCTION_87	IF_1	IF_2	CALL_1
0x40029f7	      0xba05000000	                              mov edx, 5	      3713	channel.c	FUNCTION_87	IF_1	IF_2	CALL_3
0x40029fc	      0xbe00000000	                              mov esi, 0	      3713	channel.c	FUNCTION_87	IF_1	IF_2	CALL_3
0x4002a01	      0xbf00000000	                              mov edi, 0	      3713	channel.c	FUNCTION_87	IF_1	IF_2	CALL_3
0x4002a06	      0xe800000000	                          call 0x4002a0b	      3713	channel.c	FUNCTION_87	IF_1	IF_2	CALL_3
0x4002a0b	          0x4889de	                            mov rsi, rbx	      3713	channel.c	FUNCTION_87	IF_1	IF_2	CALL_3
0x4002a0e	          0x4889c7	                            mov rdi, rax	      3713	channel.c	FUNCTION_87	IF_1	IF_2	CALL_3
0x4002a11	      0xe800000000	                          call 0x4002a16	      3713	channel.c	FUNCTION_87	IF_1	IF_2	CALL_3
0x4002a16	    0x41c786740400	              mov dword [r14 + 0x474], 1	      3715	channel.c	FUNCTION_87	IF_1
0x4002a21	      0xb800000000	                              mov eax, 0	      3716	channel.c	FUNCTION_87	IF_1
0x4002a26	      0xe9b2030000	                           jmp 0x4002ddd	      3716	channel.c	FUNCTION_87	IF_1
0x4002a2b	          0x4189f7	                           mov r15d, esi	      3716	channel.c	FUNCTION_87	IF_1
0x4002a2e	    0x48833d000000	               cmp qword [0x04002a36], 0	      3719	channel.c	FUNCTION_87	IF_3	CALL_4
0x4002a36	            0x7470	                            je 0x4002aa8	      3719	channel.c	FUNCTION_87	IF_3	CALL_4
0x4002a38	          0x4889fe	                            mov rsi, rdi	      3721	channel.c	FUNCTION_87	IF_3	CALL_5
0x4002a3b	      0xbf00000000	                              mov edi, 0	      3721	channel.c	FUNCTION_87	IF_3	CALL_5
0x4002a40	      0xe836d7ffff	                    call sym.ch_log_lead	      3721	channel.c	FUNCTION_87	IF_3	CALL_5
0x4002a45	    0x488b35000000	            mov rsi, qword [0x04002a4c] 	        97	stdio2.h	CALL_20
0x4002a4c	      0xbf27000000	                           mov edi, 0x27	        97	stdio2.h	CALL_20
0x4002a51	      0xe800000000	                          call 0x4002a56	        97	stdio2.h	CALL_20
0x4002a56	      0x486374241c	         movsxd rsi, dword [rsp + 0x1c] 	      3723	channel.c	FUNCTION_87	IF_3	CALL_6
0x4002a5b	    0x488b0d000000	            mov rcx, qword [0x04002a62] 	      3723	channel.c	FUNCTION_87	IF_3	CALL_6
0x4002a62	      0xba01000000	                              mov edx, 1	      3723	channel.c	FUNCTION_87	IF_3	CALL_6
0x4002a67	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      3723	channel.c	FUNCTION_87	IF_3	CALL_6
0x4002a6c	      0xe800000000	                          call 0x4002a71	      3723	channel.c	FUNCTION_87	IF_3	CALL_6
0x4002a71	    0x890500000000	            mov dword [0x04002a77], eax 	      3723	channel.c	FUNCTION_87	IF_3	CALL_6
0x4002a77	    0x488b0d000000	            mov rcx, qword [0x04002a7e] 	        97	stdio2.h	CALL_20
0x4002a7e	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_20
0x4002a83	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_20
0x4002a88	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_20
0x4002a8d	      0xe800000000	                          call 0x4002a92	        97	stdio2.h	CALL_20
0x4002a92	    0x488b3d000000	            mov rdi, qword [0x04002a99] 	      3725	channel.c	FUNCTION_87	IF_3	CALL_7
0x4002a99	      0xe800000000	                          call 0x4002a9e	      3725	channel.c	FUNCTION_87	IF_3	CALL_7
0x4002a9e	    0xc70500000000	               mov dword [0x04002aa8], 1	      3726	channel.c	FUNCTION_87	IF_3
0x4002aa8	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      3701	channel.c	FUNCTION_87
0x4002ab0	          0x4489fb	                           mov ebx, r15d	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002ab3	          0x4889d8	                            mov rax, rbx	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002ab6	        0x48c1e004	                              shl rax, 4	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002aba	        0x48c1e308	                              shl rbx, 8	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002abe	          0x4801c3	                            add rbx, rax	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002ac1	          0x4c01f3	                            add rbx, r14	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002ac4	      0x4c89742410	             mov qword [rsp + 0x10], r14	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002ac9	    0x488b83b00000	            mov rax, qword [rbx + 0xb0] 	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002ad0	          0x4885c0	                           test rax, rax	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002ad3	            0x7411	                            je 0x4002ae6	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002ad5	        0x4c8b7010	            mov r14, qword [rax + 0x10] 	      3738	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002ad9	          0x448b28	                   mov r13d, dword [rax]	      3739	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002adc	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      3740	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002ae4	            0xeb14	                           jmp 0x4002afa	      3740	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002ae6	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      3744	channel.c	FUNCTION_87	FOR_1	ELSE_1	IF_5
0x4002aea	            0x85c0	                           test eax, eax	      3744	channel.c	FUNCTION_87	FOR_1	ELSE_1	IF_5
0x4002aec	     0xf84c8020000	                            je 0x4002dba	      3744	channel.c	FUNCTION_87	FOR_1	ELSE_1	IF_5
0x4002af2	          0x4189c5	                           mov r13d, eax	      3748	channel.c	FUNCTION_87	FOR_1	ELSE_1
0x4002af5	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	      3747	channel.c	FUNCTION_87	FOR_1	ELSE_1
0x4002afa	          0x4585ff	                         test r15d, r15d	      3751	channel.c	FUNCTION_87	FOR_1	IF_6
0x4002afd	            0x7513	                           jne 0x4002b12	      3751	channel.c	FUNCTION_87	FOR_1	IF_6
0x4002aff	          0x4963d5	                        movsxd rdx, r13d	      3752	channel.c	FUNCTION_87	FOR_1	IF_6
0x4002b02	          0x4c89f6	                            mov rsi, r14	      3752	channel.c	FUNCTION_87	FOR_1	IF_6
0x4002b05	        0x8b7c2418	            mov edi, dword [rsp + 0x18] 	      3752	channel.c	FUNCTION_87	FOR_1	IF_6
0x4002b09	      0xe800000000	                          call 0x4002b0e	      3752	channel.c	FUNCTION_87	FOR_1	IF_6
0x4002b0e	            0x89c5	                            mov ebp, eax	      3752	channel.c	FUNCTION_87	FOR_1	IF_6
0x4002b10	            0xeb11	                           jmp 0x4002b23	      3752	channel.c	FUNCTION_87	FOR_1	IF_6
0x4002b12	          0x4963d5	                        movsxd rdx, r13d	      3755	channel.c	FUNCTION_87	FOR_1	ELSE_2
0x4002b15	          0x4c89f6	                            mov rsi, r14	      3755	channel.c	FUNCTION_87	FOR_1	ELSE_2
0x4002b18	        0x8b7c2418	            mov edi, dword [rsp + 0x18] 	      3755	channel.c	FUNCTION_87	FOR_1	ELSE_2
0x4002b1c	      0xe800000000	                          call 0x4002b21	      3755	channel.c	FUNCTION_87	FOR_1	ELSE_2
0x4002b21	            0x89c5	                            mov ebp, eax	      3755	channel.c	FUNCTION_87	FOR_1	ELSE_2
0x4002b23	            0x85ed	                           test ebp, ebp	      3765	channel.c	FUNCTION_87	FOR_1	IF_8
0x4002b25	     0xf899b020000	                           jns 0x4002dc6	      3765	channel.c	FUNCTION_87	FOR_1	IF_8
0x4002b2b	      0xe800000000	                          call 0x4002b30	      3765	channel.c	FUNCTION_87	FOR_1	IF_8
0x4002b30	          0x83380b	                    cmp dword [rax], 0xb	      3765	channel.c	FUNCTION_87	FOR_1	IF_8
0x4002b33	     0xf850b020000	                           jne 0x4002d44	      3765	channel.c	FUNCTION_87	FOR_1	IF_8
0x4002b39	      0xe983020000	                           jmp 0x4002dc1	      3765	channel.c	FUNCTION_87	FOR_1	IF_8
0x4002b3e	    0x4c8ba3b00000	            mov r12, qword [rbx + 0xb0] 	      3774	channel.c	FUNCTION_87	FOR_1	IF_9
0x4002b45	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      3776	channel.c	FUNCTION_87	FOR_1	IF_9	IF_10
0x4002b4a	            0x7416	                            je 0x4002b62	      3776	channel.c	FUNCTION_87	FOR_1	IF_9	IF_10
0x4002b4c	            0x89ea	                            mov edx, ebp	      3777	channel.c	FUNCTION_87	FOR_1	IF_9	CALL_10
0x4002b4e	      0xbe00000000	                              mov esi, 0	      3777	channel.c	FUNCTION_87	FOR_1	IF_9	CALL_10
0x4002b53	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3777	channel.c	FUNCTION_87	FOR_1	IF_9	CALL_10
0x4002b58	      0xb800000000	                              mov eax, 0	      3777	channel.c	FUNCTION_87	FOR_1	IF_9	CALL_10
0x4002b5d	      0xe800000000	                          call 0x4002b62	      3777	channel.c	FUNCTION_87	FOR_1	IF_9	CALL_10
0x4002b62	          0x4139ed	                           cmp r13d, ebp	      3778	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11
0x4002b65	            0x7567	                           jne 0x4002bce	      3778	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11
0x4002b67	          0x4d85e4	                           test r12, r12	      3781	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	IF_12
0x4002b6a	            0x743b	                            je 0x4002ba7	      3781	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	IF_12
0x4002b6c	          0x4c89e7	                            mov rdi, r12	      2963	channel.c	FUNCTION_70	CALL_1
0x4002b6f	      0xe800000000	                          call 0x4002b74	      2963	channel.c	FUNCTION_70	CALL_1
0x4002b74	      0x498b442418	            mov rax, qword [r12 + 0x18] 	      2964	channel.c	FUNCTION_70
0x4002b79	    0x488983b00000	             mov qword [rbx + 0xb0], rax	      2964	channel.c	FUNCTION_70
0x4002b80	          0x4885c0	                           test rax, rax	      2965	channel.c	FUNCTION_70	IF_1
0x4002b83	            0x750d	                           jne 0x4002b92	      2965	channel.c	FUNCTION_70	IF_1
0x4002b85	    0x48c783b80000	               mov qword [rbx + 0xb8], 0	      2966	channel.c	FUNCTION_70	IF_1
0x4002b90	            0xeb08	                           jmp 0x4002b9a	      2966	channel.c	FUNCTION_70	IF_1
0x4002b92	    0x48c740200000	               mov qword [rax + 0x20], 0	      2968	channel.c	FUNCTION_70	ELSE_1
0x4002b9a	          0x4c89e7	                            mov rdi, r12	      2969	channel.c	FUNCTION_70	CALL_2
0x4002b9d	      0xe800000000	                          call 0x4002ba2	      2969	channel.c	FUNCTION_70	CALL_2
0x4002ba2	      0xe922ffffff	                           jmp 0x4002ac9	      3865	channel.c	FUNCTION_87	FOR_1
0x4002ba7	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	      3865	channel.c	FUNCTION_87	FOR_1
0x4002bac	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      3787	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	IF_13
0x4002bb1	     0xf84f1010000	                            je 0x4002da8	      3787	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	IF_13
0x4002bb7	      0xbe00000000	                              mov esi, 0	      3788	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	CALL_12
0x4002bbc	          0x4c89f7	                            mov rdi, r14	      3788	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	CALL_12
0x4002bbf	      0xb800000000	                              mov eax, 0	      3788	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	CALL_12
0x4002bc4	      0xe800000000	                          call 0x4002bc9	      3788	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	CALL_12
0x4002bc9	      0xe9da010000	                           jmp 0x4002da8	      3788	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	CALL_12
0x4002bce	          0x4c89f1	                            mov rcx, r14	      3788	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	CALL_12
0x4002bd1	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	      3788	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	CALL_12
0x4002bd6	          0x4d85e4	                           test r12, r12	      3793	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14
0x4002bd9	            0x7420	                            je 0x4002bfb	      3793	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14
0x4002bdb	            0x85ed	                           test ebp, ebp	      3795	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15
0x4002bdd	            0x7e2f	                           jle 0x4002c0e	      3795	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15
0x4002bdf	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	      3798	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15	CALL_13
0x4002be4	          0x4129ed	                           sub r13d, ebp	        59	string3.h	FUNCTION_136	CALL_3
0x4002be7	          0x4963d5	                        movsxd rdx, r13d	        59	string3.h	FUNCTION_136	CALL_3
0x4002bea	          0x4863f5	                         movsxd rsi, ebp	        59	string3.h	FUNCTION_136	CALL_3
0x4002bed	          0x4801fe	                            add rsi, rdi	        59	string3.h	FUNCTION_136	CALL_3
0x4002bf0	      0xe800000000	                          call 0x4002bf5	        59	string3.h	FUNCTION_136	CALL_3
0x4002bf5	        0x41292c24	                    sub dword [r12], ebp	      3801	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15
0x4002bf9	            0xeb13	                           jmp 0x4002c0e	      3801	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15
0x4002bfb	          0x4863c5	                         movsxd rax, ebp	      3808	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_4
0x4002bfe	          0x4801c8	                            add rax, rcx	      3808	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_4
0x4002c01	      0x4889442420	             mov qword [rsp + 0x20], rax	      3808	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_4
0x4002c06	          0x4129ed	                           sub r13d, ebp	      3809	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_4
0x4002c09	      0x44896c241c	            mov dword [rsp + 0x1c], r13d	      3809	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_4
0x4002c0e	        0x8b6c241c	            mov ebp, dword [rsp + 0x1c] 	      3811	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	CALL_14
0x4002c12	            0x89ea	                            mov edx, ebp	      3811	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	CALL_14
0x4002c14	      0xbe00000000	                              mov esi, 0	      3811	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	CALL_14
0x4002c19	          0x4c89f7	                            mov rdi, r14	      3811	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	CALL_14
0x4002c1c	      0xb800000000	                              mov eax, 0	      3811	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	CALL_14
0x4002c21	      0xe800000000	                          call 0x4002c26	      3811	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	CALL_14
0x4002c26	          0x4489f8	                           mov eax, r15d	      3815	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x4002c29	          0x4889c2	                            mov rdx, rax	      3815	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x4002c2c	        0x48c1e204	                              shl rdx, 4	      3815	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x4002c30	        0x48c1e008	                              shl rax, 8	      3815	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x4002c34	          0x4801d0	                            add rax, rdx	      3815	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x4002c37	    0x498b9c06b800	      mov rbx, qword [r14 + rax + 0xb8] 	      3815	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x4002c3f	          0x4885db	                           test rbx, rbx	      3815	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x4002c42	            0x7441	                            je 0x4002c85	      3815	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x4002c44	            0x89e8	                            mov eax, ebp	      3816	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x4002c46	             0x303	                    add eax, dword [rbx]	      3816	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x4002c48	      0x3d9f0f0000	                          cmp eax, 0xf9f	      3816	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x4002c4d	            0x7f36	                            jg 0x4002c85	      3816	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x4002c4f	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      3821	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_15
0x4002c53	          0x4889df	                            mov rdi, rbx	      3821	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_15
0x4002c56	      0xe800000000	                          call 0x4002c5b	      3821	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_15
0x4002c5b	          0x83f801	                              cmp eax, 1	      3821	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_15
0x4002c5e	     0xf8544010000	                           jne 0x4002da8	      3821	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_15
0x4002c64	      0x448b7c241c	           mov r15d, dword [rsp + 0x1c] 	        59	string3.h	FUNCTION_136	CALL_3
0x4002c69	          0x4963d7	                        movsxd rdx, r15d	        59	string3.h	FUNCTION_136	CALL_3
0x4002c6c	          0x48633b	                 movsxd rdi, dword [rbx]	        59	string3.h	FUNCTION_136	CALL_3
0x4002c6f	        0x48037b10	             add rdi, qword [rbx + 0x10]	        59	string3.h	FUNCTION_136	CALL_3
0x4002c73	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	        59	string3.h	FUNCTION_136	CALL_3
0x4002c78	      0xe800000000	                          call 0x4002c7d	        59	string3.h	FUNCTION_136	CALL_3
0x4002c7d	          0x44013b	                   add dword [rbx], r15d	      3826	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17
0x4002c80	      0xe923010000	                           jmp 0x4002da8	      3826	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17
0x4002c85	      0xbf28000000	                           mov edi, 0x28	      3831	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	CALL_17
0x4002c8a	      0xe800000000	                          call 0x4002c8f	      3831	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	CALL_17
0x4002c8f	          0x4889c3	                            mov rbx, rax	      3831	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	CALL_17
0x4002c92	          0x4885c0	                           test rax, rax	      3833	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x4002c95	     0xf840d010000	                            je 0x4002da8	      3833	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x4002c9b	          0x4489f8	                           mov eax, r15d	      3835	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x4002c9e	          0x4889c2	                            mov rdx, rax	      3835	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x4002ca1	        0x48c1e204	                              shl rdx, 4	      3835	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x4002ca5	        0x48c1e008	                              shl rax, 8	      3835	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x4002ca9	          0x4801d0	                            add rax, rdx	      3835	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x4002cac	          0x4c01f0	                            add rax, r14	      3835	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x4002caf	    0x488b90b80000	            mov rdx, qword [rax + 0xb8] 	      3835	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x4002cb6	        0x48895320	             mov qword [rbx + 0x20], rdx	      3835	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x4002cba	    0x48c743180000	               mov qword [rbx + 0x18], 0	      3836	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x4002cc2	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	      3837	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x4002cc9	          0x4885c0	                           test rax, rax	      3837	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x4002ccc	            0x751b	                           jne 0x4002ce9	      3837	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x4002cce	          0x4489f8	                           mov eax, r15d	      3838	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x4002cd1	          0x4889c2	                            mov rdx, rax	      3838	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x4002cd4	        0x48c1e204	                              shl rdx, 4	      3838	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x4002cd8	        0x48c1e008	                              shl rax, 8	      3838	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x4002cdc	          0x4801d0	                            add rax, rdx	      3838	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x4002cdf	    0x49899c06b000	       mov qword [r14 + rax + 0xb0], rbx	      3838	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x4002ce7	            0xeb04	                           jmp 0x4002ced	      3838	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x4002ce9	        0x48895818	             mov qword [rax + 0x18], rbx	      3840	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	ELSE_6
0x4002ced	          0x4589ff	                          mov r15d, r15d	      3841	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x4002cf0	          0x4c89f8	                            mov rax, r15	      3841	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x4002cf3	        0x48c1e004	                              shl rax, 4	      3841	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x4002cf7	        0x49c1e708	                              shl r15, 8	      3841	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x4002cfb	          0x4c01f8	                            add rax, r15	      3841	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x4002cfe	    0x49899c06b800	       mov qword [r14 + rax + 0xb8], rbx	      3841	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x4002d06	      0xbae8030000	                          mov edx, 0x3e8	      3842	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	CALL_18
0x4002d0b	      0xbe01000000	                              mov esi, 1	      3842	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	CALL_18
0x4002d10	          0x4889df	                            mov rdi, rbx	      3842	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	CALL_18
0x4002d13	      0xe800000000	                          call 0x4002d18	      3842	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	CALL_18
0x4002d18	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      3843	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_19
0x4002d1c	          0x4889df	                            mov rdi, rbx	      3843	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_19
0x4002d1f	      0xe800000000	                          call 0x4002d24	      3843	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_19
0x4002d24	          0x83f801	                              cmp eax, 1	      3843	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_19
0x4002d27	            0x757f	                           jne 0x4002da8	      3843	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_19
0x4002d29	      0x448b7c241c	           mov r15d, dword [rsp + 0x1c] 	        59	string3.h	FUNCTION_136	CALL_3
0x4002d2e	          0x4963d7	                        movsxd rdx, r15d	        59	string3.h	FUNCTION_136	CALL_3
0x4002d31	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	        59	string3.h	FUNCTION_136	CALL_3
0x4002d35	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	        59	string3.h	FUNCTION_136	CALL_3
0x4002d3a	      0xe800000000	                          call 0x4002d3f	        59	string3.h	FUNCTION_136	CALL_3
0x4002d3f	          0x44893b	                   mov dword [rbx], r15d	      3846	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20
0x4002d42	            0xeb64	                           jmp 0x4002da8	      3846	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20
0x4002d44	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	      3846	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20
0x4002d49	          0x4139ed	                           cmp r13d, ebp	      3852	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21
0x4002d4c	            0x745a	                            je 0x4002da8	      3852	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21
0x4002d4e	    0x4183be740400	              cmp dword [r14 + 0x474], 0	      3854	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22
0x4002d56	            0x753e	                           jne 0x4002d96	      3854	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22
0x4002d58	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      3854	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22
0x4002d5d	          0x4885db	                           test rbx, rbx	      3854	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22
0x4002d60	            0x7434	                            je 0x4002d96	      3854	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22
0x4002d62	          0x4889da	                            mov rdx, rbx	      3856	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_21
0x4002d65	      0xbe00000000	                              mov esi, 0	      3856	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_21
0x4002d6a	          0x4c89f7	                            mov rdi, r14	      3856	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_21
0x4002d6d	      0xb800000000	                              mov eax, 0	      3856	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_21
0x4002d72	      0xe8ccd4ffff	                       call sym.ch_error	      3856	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_21
0x4002d77	      0xba05000000	                              mov edx, 5	      3857	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_23
0x4002d7c	      0xbe00000000	                              mov esi, 0	      3857	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_23
0x4002d81	      0xbf00000000	                              mov edi, 0	      3857	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_23
0x4002d86	      0xe800000000	                          call 0x4002d8b	      3857	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_23
0x4002d8b	          0x4889de	                            mov rsi, rbx	      3857	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_23
0x4002d8e	          0x4889c7	                            mov rdi, rax	      3857	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_23
0x4002d91	      0xe800000000	                          call 0x4002d96	      3857	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_23
0x4002d96	    0x41c786740400	              mov dword [r14 + 0x474], 1	      3859	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21
0x4002da1	      0xb800000000	                              mov eax, 0	      3860	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21
0x4002da6	            0xeb35	                           jmp 0x4002ddd	      3860	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21
0x4002da8	    0x41c786740400	              mov dword [r14 + 0x474], 0	      3863	channel.c	FUNCTION_87	FOR_1
0x4002db3	      0xb801000000	                              mov eax, 1	      3864	channel.c	FUNCTION_87	FOR_1
0x4002db8	            0xeb23	                           jmp 0x4002ddd	      3864	channel.c	FUNCTION_87	FOR_1
0x4002dba	      0xb801000000	                              mov eax, 1	      3746	channel.c	FUNCTION_87	FOR_1	ELSE_1	IF_5
0x4002dbf	            0xeb1c	                           jmp 0x4002ddd	      3746	channel.c	FUNCTION_87	FOR_1	ELSE_1	IF_5
0x4002dc1	      0xbd00000000	                              mov ebp, 0	      3770	channel.c	FUNCTION_87	FOR_1	IF_8
0x4002dc6	    0x83bb94000000	               cmp dword [rbx + 0x94], 0	      3772	channel.c	FUNCTION_87	FOR_1	IF_9
0x4002dcd	     0xf856bfdffff	                           jne 0x4002b3e	      3772	channel.c	FUNCTION_87	FOR_1	IF_9
0x4002dd3	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	      3772	channel.c	FUNCTION_87	FOR_1	IF_9
0x4002dd8	      0xe96cffffff	                           jmp 0x4002d49	      3772	channel.c	FUNCTION_87	FOR_1	IF_9
0x4002ddd	        0x4883c438	                           add rsp, 0x38	      3866	channel.c	FUNCTION_87
0x4002de1	              0x5b	                                 pop rbx	      3866	channel.c	FUNCTION_87
0x4002de2	              0x5d	                                 pop rbp	      3866	channel.c	FUNCTION_87
0x4002de3	            0x415c	                                 pop r12	      3866	channel.c	FUNCTION_87
0x4002de5	            0x415d	                                 pop r13	      3866	channel.c	FUNCTION_87
0x4002de7	            0x415e	                                 pop r14	      3866	channel.c	FUNCTION_87
0x4002de9	            0x415f	                                 pop r15	      3866	channel.c	FUNCTION_87
0x4002deb	              0xc3	                                     ret	      3866	channel.c	FUNCTION_87
job_alloc	IF,2:ELSE,0:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,2	19
0x4007bce	              0x53	                                push rbx	      5399	channel.c	FUNCTION_125
0x4007bcf	      0xbf70000000	                           mov edi, 0x70	      5402	channel.c	FUNCTION_125	CALL_1
0x4007bd4	      0xe800000000	                          call 0x4007bd9	      5402	channel.c	FUNCTION_125	CALL_1
0x4007bd9	          0x4889c3	                            mov rbx, rax	      5402	channel.c	FUNCTION_125	CALL_1
0x4007bdc	          0x4885c0	                           test rax, rax	      5403	channel.c	FUNCTION_125	IF_1
0x4007bdf	            0x742f	                            je 0x4007c10	      5403	channel.c	FUNCTION_125	IF_1
0x4007be1	    0xc74058010000	               mov dword [rax + 0x58], 1	      5405	channel.c	FUNCTION_125	IF_1
0x4007be8	      0xbf00000000	                              mov edi, 0	      5406	channel.c	FUNCTION_125	IF_1	CALL_2
0x4007bed	      0xe800000000	                          call 0x4007bf2	      5406	channel.c	FUNCTION_125	IF_1	CALL_2
0x4007bf2	        0x48894330	             mov qword [rbx + 0x30], rax	      5406	channel.c	FUNCTION_125	IF_1	CALL_2
0x4007bf6	    0x488b05000000	            mov rax, qword [0x04007bfd] 	      5408	channel.c	FUNCTION_125	IF_1	IF_2
0x4007bfd	          0x4885c0	                           test rax, rax	      5408	channel.c	FUNCTION_125	IF_1	IF_2
0x4007c00	            0x7407	                            je 0x4007c09	      5408	channel.c	FUNCTION_125	IF_1	IF_2
0x4007c02	        0x48895808	                mov qword [rax + 8], rbx	      5410	channel.c	FUNCTION_125	IF_1	IF_2
0x4007c06	          0x488903	                    mov qword [rbx], rax	      5411	channel.c	FUNCTION_125	IF_1	IF_2
0x4007c09	    0x48891d000000	            mov qword [0x04007c10], rbx 	      5413	channel.c	FUNCTION_125	IF_1
0x4007c10	          0x4889d8	                            mov rax, rbx	      5416	channel.c	FUNCTION_125
0x4007c13	              0x5b	                                 pop rbx	      5416	channel.c	FUNCTION_125
0x4007c14	              0xc3	                                     ret	      5416	channel.c	FUNCTION_125
job_unref	IF,4:ELSE,1:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,5	41
0x4007a87	          0x4885ff	                           test rdi, rdi	      5333	channel.c	FUNCTION_122	IF_1
0x4007a8a	     0xf8488000000	                            je 0x4007b18	      5333	channel.c	FUNCTION_122	IF_1
0x4007a90	          0x8b4758	            mov eax, dword [rdi + 0x58] 	      5333	channel.c	FUNCTION_122	IF_1
0x4007a93	          0x83e801	                              sub eax, 1	      5333	channel.c	FUNCTION_122	IF_1
0x4007a96	          0x894758	             mov dword [rdi + 0x58], eax	      5333	channel.c	FUNCTION_122	IF_1
0x4007a99	            0x85c0	                           test eax, eax	      5333	channel.c	FUNCTION_122	IF_1
0x4007a9b	            0x7f7b	                            jg 0x4007b18	      5333	channel.c	FUNCTION_122	IF_1
0x4007a9d	              0x53	                                push rbx	      5332	channel.c	FUNCTION_122
0x4007a9e	          0x4889fb	                            mov rbx, rdi	      5332	channel.c	FUNCTION_122
0x4007aa1	      0xe89086ffff	       call sym.job_channel_still_useful	      5337	channel.c	FUNCTION_122	IF_1	IF_2	CALL_1
0x4007aa6	            0x85c0	                           test eax, eax	      5337	channel.c	FUNCTION_122	IF_1	IF_2	CALL_1
0x4007aa8	            0x756d	                           jne 0x4007b17	      5337	channel.c	FUNCTION_122	IF_1	IF_2	CALL_1
0x4007aaa	        0x837b2801	               cmp dword [rbx + 0x28], 1	      5104	channel.c	FUNCTION_113
0x4007aae	            0x7553	                           jne 0x4007b03	      5104	channel.c	FUNCTION_113
0x4007ab0	      0x48837b3000	               cmp qword [rbx + 0x30], 0	      5104	channel.c	FUNCTION_113
0x4007ab5	            0x7557	                           jne 0x4007b0e	      5104	channel.c	FUNCTION_113
0x4007ab7	      0x48837b4000	               cmp qword [rbx + 0x40], 0	      5104	channel.c	FUNCTION_113
0x4007abc	            0x7550	                           jne 0x4007b0e	      5104	channel.c	FUNCTION_113
0x4007abe	            0xeb43	                           jmp 0x4007b03	      5104	channel.c	FUNCTION_113
0x4007ac0	          0x4889df	                            mov rdi, rbx	      5083	channel.c	FUNCTION_111	IF_1	CALL_1
0x4007ac3	      0xe830cfffff	              call sym.job_free_contents	      5083	channel.c	FUNCTION_111	IF_1	CALL_1
0x4007ac8	          0x4889df	                            mov rdi, rbx	      5084	channel.c	FUNCTION_111	IF_1	CALL_2
0x4007acb	      0xe8af88ffff	                   call sym.job_free_job	      5084	channel.c	FUNCTION_111	IF_1	CALL_2
0x4007ad0	            0xeb45	                           jmp 0x4007b17	      5084	channel.c	FUNCTION_111	IF_1	CALL_2
0x4007ad2	      0xbe00000000	                              mov esi, 0	      5349	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x4007ad7	      0xb800000000	                              mov eax, 0	      5349	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x4007adc	      0xe800000000	                          call 0x4007ae1	      5349	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x4007ae1	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      5350	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4
0x4007ae5	    0x48c780a80400	              mov qword [rax + 0x4a8], 0	      5350	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4
0x4007af0	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	      5351	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4	CALL_5
0x4007af4	      0xe800000000	                          call 0x4007af9	      5351	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4	CALL_5
0x4007af9	    0x48c743600000	               mov qword [rbx + 0x60], 0	      5352	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4
0x4007b01	            0xeb14	                           jmp 0x4007b17	      5356	channel.c	FUNCTION_122
0x4007b03	    0x833d00000000	               cmp dword [0x04007b0a], 0	      5081	channel.c	FUNCTION_111	IF_1
0x4007b0a	            0x750b	                           jne 0x4007b17	      5081	channel.c	FUNCTION_111	IF_1
0x4007b0c	            0xebb2	                           jmp 0x4007ac0	      5081	channel.c	FUNCTION_111	IF_1
0x4007b0e	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	      5345	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4
0x4007b12	          0x4885ff	                           test rdi, rdi	      5345	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4
0x4007b15	            0x75bb	                           jne 0x4007ad2	      5345	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4
0x4007b17	              0x5b	                                 pop rbx	      5356	channel.c	FUNCTION_122
0x4007b18	            0xf3c3	                                     ret	      5356	channel.c	FUNCTION_122
channel_gui_register_one	IF,4:ELSE,0:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,8	33
0x4000c20	    0x833d00000000	               cmp dword [0x04000c27], 0	       521	channel.c	FUNCTION_22	IF_1
0x4000c27	            0x7509	                           jne 0x4000c32	       521	channel.c	FUNCTION_22	IF_1
0x4000c29	    0x833d00000000	               cmp dword [0x04000c30], 0	       521	channel.c	FUNCTION_22	IF_1
0x4000c30	            0x7466	                            je 0x4000c98	       521	channel.c	FUNCTION_22	IF_1
0x4000c32	    0x83bfa4040000	              cmp dword [rdi + 0x4a4], 0	       525	channel.c	FUNCTION_22	IF_2
0x4000c39	            0x755d	                           jne 0x4000c98	       525	channel.c	FUNCTION_22	IF_2
0x4000c3b	            0x89f0	                            mov eax, esi	       547	channel.c	FUNCTION_22	IF_4
0x4000c3d	          0x4889c2	                            mov rdx, rax	       547	channel.c	FUNCTION_22	IF_4
0x4000c40	        0x48c1e204	                              shl rdx, 4	       547	channel.c	FUNCTION_22	IF_4
0x4000c44	        0x48c1e008	                              shl rax, 8	       547	channel.c	FUNCTION_22	IF_4
0x4000c48	          0x4801d0	                            add rax, rdx	       547	channel.c	FUNCTION_22	IF_4
0x4000c4b	      0x837c071c00	         cmp dword [rdi + rax + 0x1c], 0	       547	channel.c	FUNCTION_22	IF_4
0x4000c50	            0x7546	                           jne 0x4000c98	       547	channel.c	FUNCTION_22	IF_4
0x4000c52	              0x53	                                push rbx	       520	channel.c	FUNCTION_22
0x4000c53	            0x89f6	                            mov esi, esi	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4000c55	          0x4889d3	                            mov rbx, rdx	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4000c58	          0x4889f0	                            mov rax, rsi	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4000c5b	        0x48c1e008	                              shl rax, 8	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4000c5f	          0x4801c3	                            add rbx, rax	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4000c62	          0x4801fb	                            add rbx, rdi	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4000c65	    0x488b14f50000	                  mov rdx, qword [rsi*8]	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4000c6d	          0x8b4b18	            mov ecx, dword [rbx + 0x18] 	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4000c70	      0xbe00000000	                              mov esi, 0	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4000c75	      0xb800000000	                              mov eax, 0	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4000c7a	      0xe800000000	                          call 0x4000c7f	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4000c7f	          0x8b7b18	            mov edi, dword [rbx + 0x18] 	       568	channel.c	FUNCTION_22	IF_4
0x4000c82	          0x4863cf	                         movsxd rcx, edi	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4000c85	      0xba00000000	                              mov edx, 0	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4000c8a	      0xbe05000000	                              mov esi, 5	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4000c8f	      0xe800000000	                          call 0x4000c94	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4000c94	          0x89431c	             mov dword [rbx + 0x1c], eax	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4000c97	              0x5b	                                 pop rbx	       573	channel.c	FUNCTION_22
0x4000c98	            0xf3c3	                                     ret	       573	channel.c	FUNCTION_22
channel_open	IF,21:ELSE,0:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,1:CALL,52	393
0x4004a9e	            0x4157	                                push r15	       654	channel.c	FUNCTION_27
0x4004aa0	            0x4156	                                push r14	       654	channel.c	FUNCTION_27
0x4004aa2	            0x4155	                                push r13	       654	channel.c	FUNCTION_27
0x4004aa4	            0x4154	                                push r12	       654	channel.c	FUNCTION_27
0x4004aa6	              0x55	                                push rbp	       654	channel.c	FUNCTION_27
0x4004aa7	              0x53	                                push rbx	       654	channel.c	FUNCTION_27
0x4004aa8	    0x4881ec880100	                          sub rsp, 0x188	       654	channel.c	FUNCTION_27
0x4004aaf	        0x48893c24	                    mov qword [rsp], rdi	       654	channel.c	FUNCTION_27
0x4004ab3	        0x8974240c	              mov dword [rsp + 0xc], esi	       654	channel.c	FUNCTION_27
0x4004ab7	            0x89d3	                            mov ebx, edx	       654	channel.c	FUNCTION_27
0x4004ab9	      0x48894c2418	             mov qword [rsp + 0x18], rcx	       654	channel.c	FUNCTION_27
0x4004abe	    0x64488b042528	                mov rax, qword fs:[0x28]	       654	channel.c	FUNCTION_27
0x4004ac7	    0x488984247801	            mov qword [rsp + 0x178], rax	       654	channel.c	FUNCTION_27
0x4004acf	            0x31c0	                            xor eax, eax	       654	channel.c	FUNCTION_27
0x4004ad1	      0xe800000000	                          call 0x4004ad6	       671	channel.c	FUNCTION_27	CALL_2
0x4004ad6	          0x4885c0	                           test rax, rax	       672	channel.c	FUNCTION_27	IF_1
0x4004ad9	            0x751e	                           jne 0x4004af9	       672	channel.c	FUNCTION_27	IF_1
0x4004adb	      0xbe00000000	                              mov esi, 0	       674	channel.c	FUNCTION_27	IF_1	CALL_3
0x4004ae0	      0xbf00000000	                              mov edi, 0	       674	channel.c	FUNCTION_27	IF_1	CALL_3
0x4004ae5	      0xb800000000	                              mov eax, 0	       674	channel.c	FUNCTION_27	IF_1	CALL_3
0x4004aea	      0xe854b7ffff	                       call sym.ch_error	       674	channel.c	FUNCTION_27	IF_1	CALL_3
0x4004aef	      0xb800000000	                              mov eax, 0	       675	channel.c	FUNCTION_27	IF_1
0x4004af4	      0xe9b1050000	                           jmp 0x40050aa	       675	channel.c	FUNCTION_27	IF_1
0x4004af9	          0x4989c5	                            mov r13, rax	       675	channel.c	FUNCTION_27	IF_1
0x4004afc	    0x48c744246000	               mov qword [rsp + 0x60], 0	        90	string3.h	FUNCTION_138	CALL_6
0x4004b05	    0x48c744246800	               mov qword [rsp + 0x68], 0	        90	string3.h	FUNCTION_138	CALL_6
0x4004b0e	    0x66c744246002	                mov word [rsp + 0x60], 2	       681	channel.c	FUNCTION_27
0x4004b15	       0xfb744240c	            movzx eax, word [rsp + 0xc] 	       682	channel.c	FUNCTION_27	CALL_5
0x4004b1a	        0x66c1c808	                               ror ax, 8	       682	channel.c	FUNCTION_27	CALL_5
0x4004b1e	      0x6689442462	               mov word [rsp + 0x62], ax	       682	channel.c	FUNCTION_27	CALL_5
0x4004b23	        0x488b3c24	                    mov rdi, qword [rsp]	       683	channel.c	FUNCTION_27	IF_2	CALL_6
0x4004b27	      0xe800000000	                          call 0x4004b2c	       683	channel.c	FUNCTION_27	IF_2	CALL_6
0x4004b2c	          0x4885c0	                           test rax, rax	       683	channel.c	FUNCTION_27	IF_2	CALL_6
0x4004b2f	            0x7552	                           jne 0x4004b83	       683	channel.c	FUNCTION_27	IF_2	CALL_6
0x4004b31	      0xbe00000000	                              mov esi, 0	       685	channel.c	FUNCTION_27	IF_2	CALL_7
0x4004b36	          0x4c89ef	                            mov rdi, r13	       685	channel.c	FUNCTION_27	IF_2	CALL_7
0x4004b39	      0xe805b7ffff	                       call sym.ch_error	       685	channel.c	FUNCTION_27	IF_2	CALL_7
0x4004b3e	      0xe800000000	                          call 0x4004b43	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x4004b43	            0x8b38	                    mov edi, dword [rax]	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x4004b45	      0xe800000000	                          call 0x4004b4a	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x4004b4a	          0x4889c3	                            mov rbx, rax	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x4004b4d	      0xba05000000	                              mov edx, 5	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x4004b52	      0xbe00000000	                              mov esi, 0	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x4004b57	      0xbf00000000	                              mov edi, 0	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x4004b5c	      0xe800000000	                          call 0x4004b61	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x4004b61	          0x4889da	                            mov rdx, rbx	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x4004b64	          0x4889c6	                            mov rsi, rax	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x4004b67	      0xbf00000000	                              mov edi, 0	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x4004b6c	      0xe800000000	                          call 0x4004b71	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x4004b71	          0x4c89ef	                            mov rdi, r13	       687	channel.c	FUNCTION_27	IF_2	CALL_9
0x4004b74	      0xe805feffff	                   call sym.channel_free	       687	channel.c	FUNCTION_27	IF_2	CALL_9
0x4004b79	      0xb800000000	                              mov eax, 0	       688	channel.c	FUNCTION_27	IF_2
0x4004b7e	      0xe927050000	                           jmp 0x40050aa	       688	channel.c	FUNCTION_27	IF_2
0x4004b83	        0x48635014	         movsxd rdx, dword [rax + 0x14] 	        53	string3.h	FUNCTION_135	CALL_3
0x4004b87	        0x488b4018	            mov rax, qword [rax + 0x18] 	        53	string3.h	FUNCTION_135	CALL_3
0x4004b8b	      0xb90c000000	                            mov ecx, 0xc	        53	string3.h	FUNCTION_135	CALL_3
0x4004b90	          0x488b30	                    mov rsi, qword [rax]	        53	string3.h	FUNCTION_135	CALL_3
0x4004b93	      0x488d7c2464	                   lea rdi, [rsp + 0x64]	        53	string3.h	FUNCTION_135	CALL_3
0x4004b98	      0xe800000000	                          call 0x4004b9d	        53	string3.h	FUNCTION_135	CALL_3
0x4004b9d	            0x85db	                           test ebx, ebx	       703	channel.c	FUNCTION_27	IF_3
0x4004b9f	      0xb801000000	                              mov eax, 1	       703	channel.c	FUNCTION_27	IF_3
0x4004ba4	           0xf44d8	                          cmove ebx, eax	       703	channel.c	FUNCTION_27	IF_3
0x4004ba7	            0xeb08	                           jmp 0x4004bb1	       703	channel.c	FUNCTION_27	IF_3
0x4004ba9	          0x4489ff	                           mov edi, r15d	       715	channel.c	FUNCTION_27	WHILE_1	IF_4
0x4004bac	      0xe800000000	                          call 0x4004bb1	       715	channel.c	FUNCTION_27	WHILE_1	IF_4
0x4004bb1	      0xba00000000	                              mov edx, 0	       716	channel.c	FUNCTION_27	WHILE_1	CALL_12
0x4004bb6	      0xbe01000000	                              mov esi, 1	       716	channel.c	FUNCTION_27	WHILE_1	CALL_12
0x4004bbb	      0xbf02000000	                              mov edi, 2	       716	channel.c	FUNCTION_27	WHILE_1	CALL_12
0x4004bc0	      0xe800000000	                          call 0x4004bc5	       716	channel.c	FUNCTION_27	WHILE_1	CALL_12
0x4004bc5	          0x4189c7	                           mov r15d, eax	       716	channel.c	FUNCTION_27	WHILE_1	CALL_12
0x4004bc8	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       717	channel.c	FUNCTION_27	WHILE_1	IF_5
0x4004bcb	            0x7557	                           jne 0x4004c24	       717	channel.c	FUNCTION_27	WHILE_1	IF_5
0x4004bcd	      0xbe00000000	                              mov esi, 0	       719	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_13
0x4004bd2	          0x4c89ef	                            mov rdi, r13	       719	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_13
0x4004bd5	      0xb800000000	                              mov eax, 0	       719	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_13
0x4004bda	      0xe864b6ffff	                       call sym.ch_error	       719	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_13
0x4004bdf	      0xe800000000	                          call 0x4004be4	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x4004be4	            0x8b38	                    mov edi, dword [rax]	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x4004be6	      0xe800000000	                          call 0x4004beb	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x4004beb	          0x4889c3	                            mov rbx, rax	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x4004bee	      0xba05000000	                              mov edx, 5	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x4004bf3	      0xbe00000000	                              mov esi, 0	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x4004bf8	      0xbf00000000	                              mov edi, 0	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x4004bfd	      0xe800000000	                          call 0x4004c02	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x4004c02	          0x4889da	                            mov rdx, rbx	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x4004c05	          0x4889c6	                            mov rsi, rax	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x4004c08	      0xbf00000000	                              mov edi, 0	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x4004c0d	      0xe800000000	                          call 0x4004c12	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x4004c12	          0x4c89ef	                            mov rdi, r13	       721	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_15
0x4004c15	      0xe864fdffff	                   call sym.channel_free	       721	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_15
0x4004c1a	      0xb800000000	                              mov eax, 0	       722	channel.c	FUNCTION_27	WHILE_1	IF_5
0x4004c1f	      0xe986040000	                           jmp 0x40050aa	       722	channel.c	FUNCTION_27	WHILE_1	IF_5
0x4004c24	            0x85db	                           test ebx, ebx	       725	channel.c	FUNCTION_27	WHILE_1	IF_6
0x4004c26	            0x784d	                            js 0x4004c75	       725	channel.c	FUNCTION_27	WHILE_1	IF_6
0x4004c28	      0xba00080000	                          mov edx, 0x800	       732	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_17
0x4004c2d	      0xbe04000000	                              mov esi, 4	       732	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_17
0x4004c32	            0x89c7	                            mov edi, eax	       732	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_17
0x4004c34	      0xb800000000	                              mov eax, 0	       732	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_17
0x4004c39	      0xe800000000	                          call 0x4004c3e	       732	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_17
0x4004c3e	            0x85c0	                           test eax, eax	       728	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7
0x4004c40	            0x7933	                           jns 0x4004c75	       728	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7
0x4004c42	      0xe800000000	                          call 0x4004c47	       738	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7
0x4004c47	            0x8b10	                    mov edx, dword [rax]	       737	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_18
0x4004c49	      0xbe00000000	                              mov esi, 0	       737	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_18
0x4004c4e	          0x4c89ef	                            mov rdi, r13	       737	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_18
0x4004c51	      0xb800000000	                              mov eax, 0	       737	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_18
0x4004c56	      0xe8e8b5ffff	                       call sym.ch_error	       737	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_18
0x4004c5b	          0x4489ff	                           mov edi, r15d	       739	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7
0x4004c5e	      0xe800000000	                          call 0x4004c63	       739	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7
0x4004c63	          0x4c89ef	                            mov rdi, r13	       740	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_19
0x4004c66	      0xe813fdffff	                   call sym.channel_free	       740	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_19
0x4004c6b	      0xb800000000	                              mov eax, 0	       741	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7
0x4004c70	      0xe935040000	                           jmp 0x40050aa	       741	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7
0x4004c75	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	       746	channel.c	FUNCTION_27	WHILE_1	CALL_20
0x4004c79	        0x488b1424	                    mov rdx, qword [rsp]	       746	channel.c	FUNCTION_27	WHILE_1	CALL_20
0x4004c7d	      0xbe00000000	                              mov esi, 0	       746	channel.c	FUNCTION_27	WHILE_1	CALL_20
0x4004c82	          0x4c89ef	                            mov rdi, r13	       746	channel.c	FUNCTION_27	WHILE_1	CALL_20
0x4004c85	      0xb800000000	                              mov eax, 0	       746	channel.c	FUNCTION_27	WHILE_1	CALL_20
0x4004c8a	      0xe800000000	                          call 0x4004c8f	       746	channel.c	FUNCTION_27	WHILE_1	CALL_20
0x4004c8f	      0xba10000000	                           mov edx, 0x10	       747	channel.c	FUNCTION_27	WHILE_1	CALL_21
0x4004c94	      0x488d742460	                   lea rsi, [rsp + 0x60]	       747	channel.c	FUNCTION_27	WHILE_1	CALL_21
0x4004c99	          0x4489ff	                           mov edi, r15d	       747	channel.c	FUNCTION_27	WHILE_1	CALL_21
0x4004c9c	      0xe800000000	                          call 0x4004ca1	       747	channel.c	FUNCTION_27	WHILE_1	CALL_21
0x4004ca1	            0x85c0	                           test eax, eax	       749	channel.c	FUNCTION_27	WHILE_1	IF_8
0x4004ca3	     0xf8491030000	                            je 0x400503a	       749	channel.c	FUNCTION_27	WHILE_1	IF_8
0x4004ca9	            0x85db	                           test ebx, ebx	       754	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4004cab	            0x781c	                            js 0x4004cc9	       754	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4004cad	      0xe800000000	                          call 0x4004cb2	       754	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4004cb2	      0x4889442410	             mov qword [rsp + 0x10], rax	       754	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4004cb7	            0x8b00	                    mov eax, dword [rax]	       754	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4004cb9	          0x8d5091	                   lea edx, [rax - 0x6f]	       757	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4004cbc	    0xf7c2fbffffff	                    test edx, 0xfffffffb	       757	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4004cc2	            0x7469	                            je 0x4004d2d	       757	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4004cc4	          0x83f80b	                            cmp eax, 0xb	       757	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4004cc7	            0x7464	                            je 0x4004d2d	       757	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4004cc9	      0xe800000000	                          call 0x4004cce	       762	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4004cce	          0x4889c3	                            mov rbx, rax	       762	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4004cd1	            0x8b10	                    mov edx, dword [rax]	       761	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_22
0x4004cd3	      0xbe00000000	                              mov esi, 0	       761	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_22
0x4004cd8	          0x4c89ef	                            mov rdi, r13	       761	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_22
0x4004cdb	      0xb800000000	                              mov eax, 0	       761	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_22
0x4004ce0	      0xe85eb5ffff	                       call sym.ch_error	       761	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_22
0x4004ce5	            0x8b3b	                    mov edi, dword [rbx]	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x4004ce7	      0xe800000000	                          call 0x4004cec	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x4004cec	          0x4889c3	                            mov rbx, rax	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x4004cef	      0xba05000000	                              mov edx, 5	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x4004cf4	      0xbe00000000	                              mov esi, 0	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x4004cf9	      0xbf00000000	                              mov edi, 0	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x4004cfe	      0xe800000000	                          call 0x4004d03	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x4004d03	          0x4889da	                            mov rdx, rbx	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x4004d06	          0x4889c6	                            mov rsi, rax	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x4004d09	      0xbf00000000	                              mov edi, 0	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x4004d0e	      0xe800000000	                          call 0x4004d13	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x4004d13	          0x4489ff	                           mov edi, r15d	       764	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4004d16	      0xe800000000	                          call 0x4004d1b	       764	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4004d1b	          0x4c89ef	                            mov rdi, r13	       765	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_24
0x4004d1e	      0xe85bfcffff	                   call sym.channel_free	       765	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_24
0x4004d23	      0xb800000000	                              mov eax, 0	       766	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4004d28	      0xe97d030000	                           jmp 0x40050aa	       766	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4004d2d	          0x83fb32	                           cmp ebx, 0x32	       771	channel.c	FUNCTION_27	WHILE_1
0x4004d30	      0xbd32000000	                           mov ebp, 0x32	       771	channel.c	FUNCTION_27	WHILE_1
0x4004d35	           0xf4eeb	                         cmovle ebp, ebx	       771	channel.c	FUNCTION_27	WHILE_1
0x4004d38	          0x83f86f	                           cmp eax, 0x6f	       776	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4004d3b	     0xf8480020000	                            je 0x4004fc1	       776	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4004d41	    0xc74424280000	               mov dword [rsp + 0x28], 0	       783	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4004d49	    0xc744242c0400	               mov dword [rsp + 0x2c], 4	       784	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4004d51	      0xb910000000	                           mov ecx, 0x10	       788	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_25
0x4004d56	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       788	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_25
0x4004d5b	      0xb800000000	                              mov eax, 0	       788	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_25
0x4004d60	              0xfc	                                     cld	       788	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_25
0x4004d61	          0xf348ab	              rep stosq qword [rdi], rax	       788	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_25
0x4004d64	          0x4d63f7	                        movsxd r14, r15d	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x4004d67	          0x4c89f7	                            mov rdi, r14	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x4004d6a	      0xe800000000	                          call 0x4004d6f	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x4004d6f	          0x4489fa	                           mov edx, r15d	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x4004d72	          0xc1fa1f	                           sar edx, 0x1f	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x4004d75	          0xc1ea1a	                           shr edx, 0x1a	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x4004d78	        0x418d0c17	                    lea ecx, [r15 + rdx]	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x4004d7c	          0x83e13f	                           and ecx, 0x3f	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x4004d7f	            0x29d1	                            sub ecx, edx	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x4004d81	    0x41bc01000000	                             mov r12d, 1	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x4004d87	          0x49d3e4	                             shl r12, cl	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x4004d8a	      0x4c0964c470	      or qword [rsp + rax*8 + 0x70], r12	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x4004d8f	      0xb910000000	                           mov ecx, 0x10	       790	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_27
0x4004d94	    0x488dbc24f000	                   lea rdi, [rsp + 0xf0]	       790	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_27
0x4004d9c	      0xb800000000	                              mov eax, 0	       790	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_27
0x4004da1	              0xfc	                                     cld	       790	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_27
0x4004da2	          0xf348ab	              rep stosq qword [rdi], rax	       790	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_27
0x4004da5	          0x4c89f7	                            mov rdi, r14	       791	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_28
0x4004da8	      0xe800000000	                          call 0x4004dad	       791	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_28
0x4004dad	    0x4c09a4c4f000	      or qword [rsp + rax*8 + 0xf0], r12	       791	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_28
0x4004db5	      0xbad34d6210	                     mov edx, 0x10624dd3	       793	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4004dba	            0x89e8	                            mov eax, ebp	       793	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4004dbc	            0xf7ea	                                imul edx	       793	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4004dbe	          0xc1fa06	                              sar edx, 6	       793	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4004dc1	            0x89e8	                            mov eax, ebp	       793	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4004dc3	          0xc1f81f	                           sar eax, 0x1f	       793	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4004dc6	            0x29c2	                            sub edx, eax	       793	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4004dc8	          0x4863c2	                         movsxd rax, edx	       793	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4004dcb	      0x4889442430	             mov qword [rsp + 0x30], rax	       793	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4004dd0	    0x69d2e8030000	                    imul edx, edx, 0x3e8	       794	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4004dd6	            0x89e8	                            mov eax, ebp	       794	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4004dd8	            0x29d0	                            sub eax, edx	       794	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4004dda	    0x69c0e8030000	                    imul eax, eax, 0x3e8	       794	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4004de0	            0x4898	                                    cdqe	       794	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4004de2	      0x4889442438	             mov qword [rsp + 0x38], rax	       794	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4004de7	      0xbe00000000	                              mov esi, 0	       796	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_29
0x4004dec	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       796	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_29
0x4004df1	      0xe800000000	                          call 0x4004df6	       796	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_29
0x4004df6	            0x89ea	                            mov edx, ebp	       798	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_30
0x4004df8	      0xbe00000000	                              mov esi, 0	       798	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_30
0x4004dfd	          0x4c89ef	                            mov rdi, r13	       798	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_30
0x4004e00	      0xb800000000	                              mov eax, 0	       798	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_30
0x4004e05	      0xe800000000	                          call 0x4004e0a	       798	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_30
0x4004e0a	        0x418d7f01	                      lea edi, [r15 + 1]	       800	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_31
0x4004e0e	      0x4c8d442430	                    lea r8, [rsp + 0x30]	       800	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_31
0x4004e13	      0xb900000000	                              mov ecx, 0	       800	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_31
0x4004e18	    0x488d9424f000	                   lea rdx, [rsp + 0xf0]	       800	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_31
0x4004e20	      0x488d742470	                   lea rsi, [rsp + 0x70]	       800	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_31
0x4004e25	      0xe800000000	                          call 0x4004e2a	       800	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_31
0x4004e2a	            0x85c0	                           test eax, eax	       802	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11
0x4004e2c	            0x795c	                           jns 0x4004e8a	       802	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11
0x4004e2e	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	       805	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_32
0x4004e33	            0x8b13	                    mov edx, dword [rbx]	       805	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_32
0x4004e35	      0xbe00000000	                              mov esi, 0	       805	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_32
0x4004e3a	          0x4c89ef	                            mov rdi, r13	       805	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_32
0x4004e3d	      0xb800000000	                              mov eax, 0	       805	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_32
0x4004e42	      0xe8fcb3ffff	                       call sym.ch_error	       805	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_32
0x4004e47	            0x8b3b	                    mov edi, dword [rbx]	       807	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_33
0x4004e49	      0xe800000000	                          call 0x4004e4e	       807	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_33
0x4004e4e	          0x4889c3	                            mov rbx, rax	       807	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_33
0x4004e51	      0xba05000000	                              mov edx, 5	       807	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_33
0x4004e56	      0xbe00000000	                              mov esi, 0	       807	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_33
0x4004e5b	      0xbf00000000	                              mov edi, 0	       807	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_33
0x4004e60	      0xe800000000	                          call 0x4004e65	       807	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_33
0x4004e65	          0x4889da	                            mov rdx, rbx	       807	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_33
0x4004e68	          0x4889c6	                            mov rsi, rax	       807	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_33
0x4004e6b	      0xbf00000000	                              mov edi, 0	       807	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_33
0x4004e70	      0xe800000000	                          call 0x4004e75	       807	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_33
0x4004e75	          0x4489ff	                           mov edi, r15d	       808	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11
0x4004e78	      0xe800000000	                          call 0x4004e7d	       808	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11
0x4004e7d	          0x4c89ef	                            mov rdi, r13	       809	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_34
0x4004e80	      0xe8f9faffff	                   call sym.channel_free	       809	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_34
0x4004e85	      0xe916010000	                           jmp 0x4004fa0	       810	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11
0x4004e8a	          0x4c89f7	                            mov rdi, r14	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4004e8d	      0xe800000000	                          call 0x4004e92	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4004e92	      0x4c8564c470	   test qword [rsp + rax*8 + 0x70], r12 	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4004e97	            0x7516	                           jne 0x4004eaf	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4004e99	          0x4c89f7	                            mov rdi, r14	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4004e9c	      0xe800000000	                          call 0x4004ea1	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4004ea1	    0x4c85a4c4f000	   test qword [rsp + rax*8 + 0xf0], r12 	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4004ea9	     0xf8410020000	                            je 0x40050bf	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4004eaf	      0x4c8d44242c	                    lea r8, [rsp + 0x2c]	       834	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_38
0x4004eb4	      0x488d4c2428	                   lea rcx, [rsp + 0x28]	       834	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_38
0x4004eb9	      0xba04000000	                              mov edx, 4	       834	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_38
0x4004ebe	      0xbe01000000	                              mov esi, 1	       834	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_38
0x4004ec3	          0x4489ff	                           mov edi, r15d	       834	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_38
0x4004ec6	      0xe800000000	                          call 0x4004ecb	       834	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_38
0x4004ecb	            0x85c0	                           test eax, eax	       836	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x4004ecd	            0x7825	                            js 0x4004ef4	       836	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x4004ecf	        0x8b442428	            mov eax, dword [rsp + 0x28] 	       837	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x4004ed3	            0x85c0	                           test eax, eax	       840	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x4004ed5	           0xf95c1	                                setne cl	       840	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x4004ed8	          0x83f80b	                            cmp eax, 0xb	       840	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x4004edb	           0xf95c2	                                setne dl	       840	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x4004ede	            0x84d1	                             test cl, dl	       840	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x4004ee0	     0xf84d9010000	                            je 0x40050bf	       840	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x4004ee6	          0x83e86f	                           sub eax, 0x6f	       840	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x4004ee9	      0xa9fbffffff	                    test eax, 0xfffffffb	       840	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x4004eee	     0xf84cb010000	                            je 0x40050bf	       840	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x4004ef4	        0x8b542428	            mov edx, dword [rsp + 0x28] 	       844	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_39
0x4004ef8	      0xbe00000000	                              mov esi, 0	       844	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_39
0x4004efd	          0x4c89ef	                            mov rdi, r13	       844	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_39
0x4004f00	      0xb800000000	                              mov eax, 0	       844	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_39
0x4004f05	      0xe839b3ffff	                       call sym.ch_error	       844	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_39
0x4004f0a	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4004f0f	            0x8b38	                    mov edi, dword [rax]	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4004f11	      0xe800000000	                          call 0x4004f16	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4004f16	          0x4889c3	                            mov rbx, rax	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4004f19	      0xba05000000	                              mov edx, 5	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4004f1e	      0xbe00000000	                              mov esi, 0	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4004f23	      0xbf00000000	                              mov edi, 0	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4004f28	      0xe800000000	                          call 0x4004f2d	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4004f2d	          0x4889da	                            mov rdx, rbx	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4004f30	          0x4889c6	                            mov rsi, rax	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4004f33	      0xbf00000000	                              mov edi, 0	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4004f38	      0xe800000000	                          call 0x4004f3d	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4004f3d	          0x4489ff	                           mov edi, r15d	       848	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x4004f40	      0xe800000000	                          call 0x4004f45	       848	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x4004f45	          0x4c89ef	                            mov rdi, r13	       849	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_41
0x4004f48	      0xe831faffff	                   call sym.channel_free	       849	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_41
0x4004f4d	            0xeb51	                           jmp 0x4004fa0	       850	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x4004f4f	      0x837c242800	               cmp dword [rsp + 0x28], 0	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x4004f54	            0x7454	                            je 0x4004faa	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x4004f56	      0xbe00000000	                              mov esi, 0	       858	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_43
0x4004f5b	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       858	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_43
0x4004f60	      0xe800000000	                          call 0x4004f65	       858	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_43
0x4004f65	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4004f6a	      0x482b542440	             sub rdx, qword [rsp + 0x40]	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4004f6f	    0x4869f2e80300	                    imul rsi, rdx, 0x3e8	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4004f76	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4004f7b	      0x482b4c2448	             sub rcx, qword [rsp + 0x48]	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4004f80	    0x48bacff753e3	          movabs rdx, 0x20c49ba5e353f7cf	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4004f8a	          0x4889c8	                            mov rax, rcx	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4004f8d	          0x48f7ea	                                imul rdx	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4004f90	        0x48c1fa07	                              sar rdx, 7	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4004f94	        0x48c1f93f	                           sar rcx, 0x3f	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4004f98	          0x4829ca	                            sub rdx, rcx	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4004f9b	          0x4801f2	                            add rdx, rsi	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4004f9e	            0xeb26	                           jmp 0x4004fc6	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4004fa0	      0xb800000000	                              mov eax, 0	       810	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11
0x4004fa5	      0xe900010000	                           jmp 0x40050aa	       810	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11
0x4004faa	      0xbe00000000	                              mov esi, 0	       897	channel.c	FUNCTION_27	CALL_48
0x4004faf	          0x4c89ef	                            mov rdi, r13	       897	channel.c	FUNCTION_27	CALL_48
0x4004fb2	      0xb800000000	                              mov eax, 0	       897	channel.c	FUNCTION_27	CALL_48
0x4004fb7	      0xe800000000	                          call 0x4004fbc	       897	channel.c	FUNCTION_27	CALL_48
0x4004fbc	      0xe98f000000	                           jmp 0x4005050	       897	channel.c	FUNCTION_27	CALL_48
0x4004fc1	      0xba00000000	                              mov edx, 0	       711	channel.c	FUNCTION_27	WHILE_1
0x4004fc6	          0x83fb01	                              cmp ebx, 1	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x4004fc9	            0x7e46	                           jle 0x4005011	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x4004fcb	          0x4863c3	                         movsxd rax, ebx	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x4004fce	          0x4839c2	                            cmp rdx, rax	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x4004fd1	            0x7d3e	                           jge 0x4005011	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x4004fd3	            0x29d5	                            sub ebp, edx	       871	channel.c	FUNCTION_27	WHILE_1	IF_17
0x4004fd5	            0x29d3	                            sub ebx, edx	       872	channel.c	FUNCTION_27	WHILE_1	IF_17
0x4004fd7	            0x85ed	                           test ebp, ebp	       873	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_18
0x4004fd9	            0x7e14	                           jle 0x4004fef	       873	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_18
0x4004fdb	          0x4863fd	                         movsxd rdi, ebp	       875	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_18	CALL_44
0x4004fde	      0xbe01000000	                              mov esi, 1	       875	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_18	CALL_44
0x4004fe3	      0xe800000000	                          call 0x4004fe8	       875	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_18	CALL_44
0x4004fe8	      0xe800000000	                          call 0x4004fed	       876	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_18	CALL_45
0x4004fed	            0x29eb	                            sub ebx, ebp	       877	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_18
0x4004fef	    0x8b0500000000	            mov eax, dword [0x04004ff5] 	       879	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_19
0x4004ff5	            0x85c0	                           test eax, eax	       879	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_19
0x4004ff7	            0x7518	                           jne 0x4005011	       879	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_19
0x4004ff9	            0x85db	                           test ebx, ebx	       883	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_19	IF_20
0x4004ffb	      0xb801000000	                              mov eax, 1	       883	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_19	IF_20
0x4005000	           0xf4ed8	                         cmovle ebx, eax	       883	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_19	IF_20
0x4005003	          0x4585ff	                         test r15d, r15d	       714	channel.c	FUNCTION_27	WHILE_1	IF_4
0x4005006	     0xf899dfbffff	                           jns 0x4004ba9	       714	channel.c	FUNCTION_27	WHILE_1	IF_4
0x400500c	      0xe9a0fbffff	                           jmp 0x4004bb1	       714	channel.c	FUNCTION_27	WHILE_1	IF_4
0x4005011	      0xbe00000000	                              mov esi, 0	       891	channel.c	FUNCTION_27	WHILE_1	CALL_46
0x4005016	          0x4c89ef	                            mov rdi, r13	       891	channel.c	FUNCTION_27	WHILE_1	CALL_46
0x4005019	      0xb800000000	                              mov eax, 0	       891	channel.c	FUNCTION_27	WHILE_1	CALL_46
0x400501e	      0xe820b2ffff	                       call sym.ch_error	       891	channel.c	FUNCTION_27	WHILE_1	CALL_46
0x4005023	          0x4489ff	                           mov edi, r15d	       892	channel.c	FUNCTION_27	WHILE_1
0x4005026	      0xe800000000	                          call 0x400502b	       892	channel.c	FUNCTION_27	WHILE_1
0x400502b	          0x4c89ef	                            mov rdi, r13	       893	channel.c	FUNCTION_27	WHILE_1	CALL_47
0x400502e	      0xe84bf9ffff	                   call sym.channel_free	       893	channel.c	FUNCTION_27	WHILE_1	CALL_47
0x4005033	      0xb800000000	                              mov eax, 0	       894	channel.c	FUNCTION_27	WHILE_1
0x4005038	            0xeb70	                           jmp 0x40050aa	       894	channel.c	FUNCTION_27	WHILE_1
0x400503a	      0xbe00000000	                              mov esi, 0	       897	channel.c	FUNCTION_27	CALL_48
0x400503f	          0x4c89ef	                            mov rdi, r13	       897	channel.c	FUNCTION_27	CALL_48
0x4005042	      0xb800000000	                              mov eax, 0	       897	channel.c	FUNCTION_27	CALL_48
0x4005047	      0xe800000000	                          call 0x400504c	       897	channel.c	FUNCTION_27	CALL_48
0x400504c	            0x85db	                           test ebx, ebx	       899	channel.c	FUNCTION_27	IF_21
0x400504e	            0x7817	                            js 0x4005067	       899	channel.c	FUNCTION_27	IF_21
0x4005050	      0xba00000000	                              mov edx, 0	       905	channel.c	FUNCTION_27	IF_21	CALL_50
0x4005055	      0xbe04000000	                              mov esi, 4	       905	channel.c	FUNCTION_27	IF_21	CALL_50
0x400505a	          0x4489ff	                           mov edi, r15d	       905	channel.c	FUNCTION_27	IF_21	CALL_50
0x400505d	      0xb800000000	                              mov eax, 0	       905	channel.c	FUNCTION_27	IF_21	CALL_50
0x4005062	      0xe800000000	                          call 0x4005067	       905	channel.c	FUNCTION_27	IF_21	CALL_50
0x4005067	        0x45897d18	            mov dword [r13 + 0x18], r15d	       909	channel.c	FUNCTION_27
0x400506b	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       910	channel.c	FUNCTION_27
0x4005070	    0x498985780400	            mov qword [r13 + 0x478], rax	       910	channel.c	FUNCTION_27
0x4005077	        0x488b3c24	                    mov rdi, qword [rsp]	       911	channel.c	FUNCTION_27	CALL_51
0x400507b	      0xe800000000	                          call 0x4005080	       911	channel.c	FUNCTION_27	CALL_51
0x4005080	    0x498985600400	            mov qword [r13 + 0x460], rax	       911	channel.c	FUNCTION_27	CALL_51
0x4005087	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       912	channel.c	FUNCTION_27
0x400508b	    0x418985680400	            mov dword [r13 + 0x468], eax	       912	channel.c	FUNCTION_27
0x4005092	    0x41838d6c0400	               or dword [r13 + 0x46c], 1	       913	channel.c	FUNCTION_27
0x400509a	      0xbe00000000	                              mov esi, 0	       916	channel.c	FUNCTION_27	CALL_52
0x400509f	          0x4c89ef	                            mov rdi, r13	       916	channel.c	FUNCTION_27	CALL_52
0x40050a2	      0xe879bbffff	       call sym.channel_gui_register_one	       916	channel.c	FUNCTION_27	CALL_52
0x40050a7	          0x4c89e8	                            mov rax, r13	       919	channel.c	FUNCTION_27
0x40050aa	    0x488bb4247801	           mov rsi, qword [rsp + 0x178] 	       920	channel.c	FUNCTION_27
0x40050b2	    0x644833342528	                xor rsi, qword fs:[0x28]	       920	channel.c	FUNCTION_27
0x40050bb	            0x7422	                            je 0x40050df	       920	channel.c	FUNCTION_27
0x40050bd	            0xeb1b	                           jmp 0x40050da	       920	channel.c	FUNCTION_27
0x40050bf	          0x4c89f7	                            mov rdi, r14	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x40050c2	      0xe800000000	                          call 0x40050c7	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x40050c7	    0x4c85a4c4f000	   test qword [rsp + rax*8 + 0xf0], r12 	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x40050cf	     0xf857afeffff	                           jne 0x4004f4f	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x40050d5	      0xe97cfeffff	                           jmp 0x4004f56	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x40050da	      0xe800000000	                          call 0x40050df	       920	channel.c	FUNCTION_27
0x40050df	    0x4881c4880100	                          add rsp, 0x188	       920	channel.c	FUNCTION_27
0x40050e6	              0x5b	                                 pop rbx	       920	channel.c	FUNCTION_27
0x40050e7	              0x5d	                                 pop rbp	       920	channel.c	FUNCTION_27
0x40050e8	            0x415c	                                 pop r12	       920	channel.c	FUNCTION_27
0x40050ea	            0x415d	                                 pop r13	       920	channel.c	FUNCTION_27
0x40050ec	            0x415e	                                 pop r14	       920	channel.c	FUNCTION_27
0x40050ee	            0x415f	                                 pop r15	       920	channel.c	FUNCTION_27
0x40050f0	              0xc3	                                     ret	       920	channel.c	FUNCTION_27
channel_write_input	IF,3:ELSE,2:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,3	20
0x400311a	        0x4883ec08	                              sub rsp, 8	      1511	channel.c	FUNCTION_40
0x400311e	    0x4883bfe00300	              cmp qword [rdi + 0x3e0], 0	      1514	channel.c	FUNCTION_40	IF_1
0x4003126	            0x741c	                            je 0x4003144	      1514	channel.c	FUNCTION_40	IF_1
0x4003128	    0x41b800000000	                              mov r8d, 0	      1515	channel.c	FUNCTION_40	CALL_1
0x400312e	      0xb900000000	                              mov ecx, 0	      1515	channel.c	FUNCTION_40	CALL_1
0x4003133	      0xba00000000	                              mov edx, 0	      1515	channel.c	FUNCTION_40	CALL_1
0x4003138	      0xbe03000000	                              mov esi, 3	      1515	channel.c	FUNCTION_40	CALL_1
0x400313d	      0xe800000000	                          call 0x4003142	      1515	channel.c	FUNCTION_40	CALL_1
0x4003142	            0xeb24	                           jmp 0x4003168	      1515	channel.c	FUNCTION_40	CALL_1
0x4003144	    0x488b87280400	           mov rax, qword [rdi + 0x428] 	      1516	channel.c	FUNCTION_40	ELSE_1	IF_2
0x400314b	          0x4885c0	                           test rax, rax	      1516	channel.c	FUNCTION_40	ELSE_1	IF_2
0x400314e	            0x7418	                            je 0x4003168	      1516	channel.c	FUNCTION_40	ELSE_1	IF_2
0x4003150	    0x83bf40040000	              cmp dword [rdi + 0x440], 0	      1518	channel.c	FUNCTION_40	ELSE_1	IF_2	IF_3
0x4003157	            0x740a	                            je 0x4003163	      1518	channel.c	FUNCTION_40	ELSE_1	IF_2	IF_3
0x4003159	          0x4889c7	                            mov rdi, rax	      1519	channel.c	FUNCTION_40	ELSE_1	IF_2	CALL_2
0x400315c	      0xe800000000	                          call 0x4003161	      1519	channel.c	FUNCTION_40	ELSE_1	IF_2	CALL_2
0x4003161	            0xeb05	                           jmp 0x4003168	      1519	channel.c	FUNCTION_40	ELSE_1	IF_2	CALL_2
0x4003163	      0xe83efdffff	               call sym.channel_write_in	      1521	channel.c	FUNCTION_40	ELSE_1	IF_2	CALL_3
0x4003168	        0x4883c408	                              add rsp, 8	      1523	channel.c	FUNCTION_40
0x400316c	              0xc3	                                     ret	      1523	channel.c	FUNCTION_40
channel_gui_unregister_one	IF,2:ELSE,0:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,5	28
0x4000c9a	            0x89f0	                            mov eax, esi	       614	channel.c	FUNCTION_25	IF_2
0x4000c9c	          0x4889c2	                            mov rdx, rax	       614	channel.c	FUNCTION_25	IF_2
0x4000c9f	        0x48c1e204	                              shl rdx, 4	       614	channel.c	FUNCTION_25	IF_2
0x4000ca3	        0x48c1e008	                              shl rax, 8	       614	channel.c	FUNCTION_25	IF_2
0x4000ca7	          0x4801d0	                            add rax, rdx	       614	channel.c	FUNCTION_25	IF_2
0x4000caa	      0x837c071c00	         cmp dword [rdi + rax + 0x1c], 0	       614	channel.c	FUNCTION_25	IF_2
0x4000caf	            0x7448	                            je 0x4000cf9	       614	channel.c	FUNCTION_25	IF_2
0x4000cb1	              0x55	                                push rbp	       604	channel.c	FUNCTION_25
0x4000cb2	              0x53	                                push rbx	       604	channel.c	FUNCTION_25
0x4000cb3	        0x4883ec08	                              sub rsp, 8	       604	channel.c	FUNCTION_25
0x4000cb7	          0x4889fd	                            mov rbp, rdi	       604	channel.c	FUNCTION_25
0x4000cba	            0x89f3	                            mov ebx, esi	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4000cbc	    0x488b14dd0000	                  mov rdx, qword [rbx*8]	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4000cc4	      0xbe00000000	                              mov esi, 0	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4000cc9	      0xb800000000	                              mov eax, 0	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4000cce	      0xe800000000	                          call 0x4000cd3	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4000cd3	          0x4889de	                            mov rsi, rbx	       620	channel.c	FUNCTION_25	IF_2	CALL_5
0x4000cd6	        0x48c1e604	                              shl rsi, 4	       620	channel.c	FUNCTION_25	IF_2	CALL_5
0x4000cda	        0x48c1e308	                              shl rbx, 8	       620	channel.c	FUNCTION_25	IF_2	CALL_5
0x4000cde	          0x4801f3	                            add rbx, rsi	       620	channel.c	FUNCTION_25	IF_2	CALL_5
0x4000ce1	          0x4801eb	                            add rbx, rbp	       620	channel.c	FUNCTION_25	IF_2	CALL_5
0x4000ce4	          0x8b7b1c	            mov edi, dword [rbx + 0x1c] 	       620	channel.c	FUNCTION_25	IF_2	CALL_5
0x4000ce7	      0xe800000000	                          call 0x4000cec	       620	channel.c	FUNCTION_25	IF_2	CALL_5
0x4000cec	    0xc7431c000000	               mov dword [rbx + 0x1c], 0	       622	channel.c	FUNCTION_25	IF_2
0x4000cf3	        0x4883c408	                              add rsp, 8	       626	channel.c	FUNCTION_25
0x4000cf7	              0x5b	                                 pop rbx	       626	channel.c	FUNCTION_25
0x4000cf8	              0x5d	                                 pop rbp	       626	channel.c	FUNCTION_25
0x4000cf9	            0xf3c3	                                     ret	       626	channel.c	FUNCTION_25
job_any_running	IF,1:ELSE,0:FOR,1:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,1	17
0x40075d3	              0x53	                                push rbx	      5142	channel.c	FUNCTION_117
0x40075d4	    0x488b1d000000	            mov rbx, qword [0x040075db] 	      5145	channel.c	FUNCTION_117	FOR_1
0x40075db	          0x4885db	                           test rbx, rbx	      5145	channel.c	FUNCTION_117	FOR_1
0x40075de	            0x7416	                            je 0x40075f6	      5145	channel.c	FUNCTION_117	FOR_1
0x40075e0	          0x4889df	                            mov rdi, rbx	      5146	channel.c	FUNCTION_117	FOR_1	IF_1	CALL_1
0x40075e3	      0xe86b8bffff	               call sym.job_still_useful	      5146	channel.c	FUNCTION_117	FOR_1	IF_1	CALL_1
0x40075e8	            0x85c0	                           test eax, eax	      5146	channel.c	FUNCTION_117	FOR_1	IF_1	CALL_1
0x40075ea	            0x7511	                           jne 0x40075fd	      5146	channel.c	FUNCTION_117	FOR_1	IF_1	CALL_1
0x40075ec	          0x488b1b	                    mov rbx, qword [rbx]	      5145	channel.c	FUNCTION_117	FOR_1
0x40075ef	          0x4885db	                           test rbx, rbx	      5145	channel.c	FUNCTION_117	FOR_1
0x40075f2	            0x75ec	                           jne 0x40075e0	      5145	channel.c	FUNCTION_117	FOR_1
0x40075f4	            0xeb0c	                           jmp 0x4007602	      5145	channel.c	FUNCTION_117	FOR_1
0x40075f6	      0xb800000000	                              mov eax, 0	      5148	channel.c	FUNCTION_117
0x40075fb	            0xeb05	                           jmp 0x4007602	      5148	channel.c	FUNCTION_117
0x40075fd	      0xb801000000	                              mov eax, 1	      5147	channel.c	FUNCTION_117	FOR_1	IF_1
0x4007602	              0x5b	                                 pop rbx	      5149	channel.c	FUNCTION_117
0x4007603	              0xc3	                                     ret	      5149	channel.c	FUNCTION_117
channel_close	IF,7:ELSE,0:FOR,2:SWITCH,0:functions,0:DO,0:WHILE,1:CALL,17	139
0x40046d6	            0x4155	                                push r13	      2868	channel.c	FUNCTION_68
0x40046d8	            0x4154	                                push r12	      2868	channel.c	FUNCTION_68
0x40046da	              0x55	                                push rbp	      2868	channel.c	FUNCTION_68
0x40046db	              0x53	                                push rbx	      2868	channel.c	FUNCTION_68
0x40046dc	        0x4883ec48	                           sub rsp, 0x48	      2868	channel.c	FUNCTION_68
0x40046e0	          0x4889fb	                            mov rbx, rdi	      2868	channel.c	FUNCTION_68
0x40046e3	            0x89f5	                            mov ebp, esi	      2868	channel.c	FUNCTION_68
0x40046e5	    0x64488b042528	                mov rax, qword fs:[0x28]	      2868	channel.c	FUNCTION_68
0x40046ee	      0x4889442438	             mov qword [rsp + 0x38], rax	      2868	channel.c	FUNCTION_68
0x40046f3	            0x31c0	                            xor eax, eax	      2868	channel.c	FUNCTION_68
0x40046f5	      0xbe00000000	                              mov esi, 0	      2869	channel.c	FUNCTION_68	CALL_1
0x40046fa	      0xe800000000	                          call 0x40046ff	      2869	channel.c	FUNCTION_68	CALL_1
0x40046ff	      0xbe00000000	                              mov esi, 0	       634	channel.c	FUNCTION_26	CALL_1
0x4004704	          0x4889df	                            mov rdi, rbx	       634	channel.c	FUNCTION_26	CALL_1
0x4004707	      0xe88ec5ffff	     call sym.channel_gui_unregister_one	       634	channel.c	FUNCTION_26	CALL_1
0x400470c	      0xbe01000000	                              mov esi, 1	       634	channel.c	FUNCTION_26	CALL_1
0x4004711	          0x4889df	                            mov rdi, rbx	       634	channel.c	FUNCTION_26	CALL_1
0x4004714	      0xe881c5ffff	     call sym.channel_gui_unregister_one	       634	channel.c	FUNCTION_26	CALL_1
0x4004719	      0xbe02000000	                              mov esi, 2	       634	channel.c	FUNCTION_26	CALL_1
0x400471e	          0x4889df	                            mov rdi, rbx	       634	channel.c	FUNCTION_26	CALL_1
0x4004721	      0xe874c5ffff	     call sym.channel_gui_unregister_one	       634	channel.c	FUNCTION_26	CALL_1
0x4004726	      0xbe00000000	                              mov esi, 0	      2875	channel.c	FUNCTION_68	CALL_3
0x400472b	          0x4889df	                            mov rdi, rbx	      2875	channel.c	FUNCTION_68	CALL_3
0x400472e	      0xe80fbdffff	                  call sym.ch_close_part	      2875	channel.c	FUNCTION_68	CALL_3
0x4004733	      0xbe03000000	                              mov esi, 3	      2876	channel.c	FUNCTION_68	CALL_4
0x4004738	          0x4889df	                            mov rdi, rbx	      2876	channel.c	FUNCTION_68	CALL_4
0x400473b	      0xe802bdffff	                  call sym.ch_close_part	      2876	channel.c	FUNCTION_68	CALL_4
0x4004740	      0xbe01000000	                              mov esi, 1	      2877	channel.c	FUNCTION_68	CALL_5
0x4004745	          0x4889df	                            mov rdi, rbx	      2877	channel.c	FUNCTION_68	CALL_5
0x4004748	      0xe8f5bcffff	                  call sym.ch_close_part	      2877	channel.c	FUNCTION_68	CALL_5
0x400474d	      0xbe02000000	                              mov esi, 2	      2878	channel.c	FUNCTION_68	CALL_6
0x4004752	          0x4889df	                            mov rdi, rbx	      2878	channel.c	FUNCTION_68	CALL_6
0x4004755	      0xe8e8bcffff	                  call sym.ch_close_part	      2878	channel.c	FUNCTION_68	CALL_6
0x400475a	            0x85ed	                           test ebp, ebp	      2880	channel.c	FUNCTION_68	IF_1
0x400475c	     0xf848b010000	                            je 0x40048ed	      2880	channel.c	FUNCTION_68	IF_1
0x4004762	    0x4883bb900400	              cmp qword [rbx + 0x490], 0	      2885	channel.c	FUNCTION_68	IF_1	IF_2
0x400476a	            0x7412	                            je 0x400477e	      2885	channel.c	FUNCTION_68	IF_1	IF_2
0x400476c	      0xbe00000000	                              mov esi, 0	      2886	channel.c	FUNCTION_68	IF_1	IF_2	CALL_7
0x4004771	          0x4889df	                            mov rdi, rbx	      2886	channel.c	FUNCTION_68	IF_1	IF_2	CALL_7
0x4004774	      0xb800000000	                              mov eax, 0	      2886	channel.c	FUNCTION_68	IF_1	IF_2	CALL_7
0x4004779	      0xe800000000	                          call 0x400477e	      2886	channel.c	FUNCTION_68	IF_1	IF_2	CALL_7
0x400477e	    0x4c8dabf80000	                   lea r13, [rbx + 0xf8]	      2886	channel.c	FUNCTION_68	IF_1	IF_2	CALL_7
0x4004785	    0x41bc00000000	                             mov r12d, 0	      2868	channel.c	FUNCTION_68
0x400478b	          0x4489e5	                           mov ebp, r12d	      2868	channel.c	FUNCTION_68
0x400478e	    0x4883bb900400	              cmp qword [rbx + 0x490], 0	      2890	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4004796	     0xf859c010000	                           jne 0x4004938	      2890	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x400479c	      0x49837d0000	                      cmp qword [r13], 0	      2891	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x40047a1	     0xf856b010000	                           jne 0x4004912	      2891	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x40047a7	            0xeb15	                           jmp 0x40047be	      2891	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x40047a9	            0x89ee	                            mov esi, ebp	      2899	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	WHILE_1	CALL_9
0x40047ab	          0x4889df	                            mov rdi, rbx	      2899	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	WHILE_1	CALL_9
0x40047ae	      0xe8d8efffff	            call sym.may_invoke_callback	      2899	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	WHILE_1	CALL_9
0x40047b3	            0x85c0	                           test eax, eax	      2899	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	WHILE_1	CALL_9
0x40047b5	            0x75f2	                           jne 0x40047a9	      2899	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	WHILE_1	CALL_9
0x40047b7	    0x83abb4040000	              sub dword [rbx + 0x4b4], 1	      2901	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x40047be	        0x4983c401	                              add r12, 1	      2901	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x40047c2	    0x4981c5100100	                          add r13, 0x110	      2901	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x40047c9	        0x4983fc03	                              cmp r12, 3	      2888	channel.c	FUNCTION_68	IF_1	FOR_1
0x40047cd	            0x75bc	                           jne 0x400478b	      2888	channel.c	FUNCTION_68	IF_1	FOR_1
0x40047cf	    0x488b93900400	           mov rdx, qword [rbx + 0x490] 	      2905	channel.c	FUNCTION_68	IF_1	IF_5
0x40047d6	          0x4885d2	                           test rdx, rdx	      2905	channel.c	FUNCTION_68	IF_1	IF_5
0x40047d9	     0xf840e010000	                            je 0x40048ed	      2905	channel.c	FUNCTION_68	IF_1	IF_5
0x40047df	    0x8383b4040000	              add dword [rbx + 0x4b4], 1	      2913	channel.c	FUNCTION_68	IF_1	IF_5
0x40047e6	      0xbe00000000	                              mov esi, 0	      2914	channel.c	FUNCTION_68	IF_1	IF_5	CALL_10
0x40047eb	          0x4889df	                            mov rdi, rbx	      2914	channel.c	FUNCTION_68	IF_1	IF_5	CALL_10
0x40047ee	      0xb800000000	                              mov eax, 0	      2914	channel.c	FUNCTION_68	IF_1	IF_5	CALL_10
0x40047f3	      0xe800000000	                          call 0x40047f8	      2914	channel.c	FUNCTION_68	IF_1	IF_5	CALL_10
0x40047f8	    0xc74424200a00	             mov dword [rsp + 0x20], 0xa	      2916	channel.c	FUNCTION_68	IF_1	IF_5
0x4004800	      0x48895c2428	             mov qword [rsp + 0x28], rbx	      2917	channel.c	FUNCTION_68	IF_1	IF_5
0x4004805	    0x4c8b93900400	           mov r10, qword [rbx + 0x490] 	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x400480c	      0xb800000000	                              mov eax, 0	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4004811	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4004818	          0x4c89d7	                            mov rdi, r10	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x400481b	            0xf2ae	              repne scasb al, byte [rdi]	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x400481d	          0x4889c8	                            mov rax, rcx	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4004820	          0x48f7d0	                                 not rax	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4004823	        0x488d70ff	                      lea rsi, [rax - 1]	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4004827	            0x6a00	                                  push 0	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4004829	    0xffb398040000	                push qword [rbx + 0x498]	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x400482f	            0x6a01	                                  push 1	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4004831	      0x488d442424	                   lea rax, [rsp + 0x24]	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4004836	              0x50	                                push rax	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4004837	            0x6a00	                                  push 0	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4004839	            0x6a00	                                  push 0	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x400483b	    0x41b900000000	                              mov r9d, 0	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4004841	      0x4c8d442450	                    lea r8, [rsp + 0x50]	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4004846	      0xb901000000	                              mov ecx, 1	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x400484b	      0x488d542440	                   lea rdx, [rsp + 0x40]	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4004850	          0x4c89d7	                            mov rdi, r10	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4004853	      0xe800000000	                          call 0x4004858	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4004858	        0x4883c430	                           add rsp, 0x30	      2921	channel.c	FUNCTION_68	IF_1	IF_5	CALL_13
0x400485c	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2921	channel.c	FUNCTION_68	IF_1	IF_5	CALL_13
0x4004861	      0xe800000000	                          call 0x4004866	      2921	channel.c	FUNCTION_68	IF_1	IF_5	CALL_13
0x4004866	    0xc70500000000	               mov dword [0x04004870], 1	      2922	channel.c	FUNCTION_68	IF_1	IF_5
0x4004870	    0x488bb3980400	           mov rsi, qword [rbx + 0x498] 	      2925	channel.c	FUNCTION_68	IF_1	IF_5	CALL_14
0x4004877	    0x488bbb900400	           mov rdi, qword [rbx + 0x490] 	      2925	channel.c	FUNCTION_68	IF_1	IF_5	CALL_14
0x400487e	      0xe800000000	                          call 0x4004883	      2925	channel.c	FUNCTION_68	IF_1	IF_5	CALL_14
0x4004883	    0x48c783900400	              mov qword [rbx + 0x490], 0	      2926	channel.c	FUNCTION_68	IF_1	IF_5
0x400488e	    0x48c783980400	              mov qword [rbx + 0x498], 0	      2927	channel.c	FUNCTION_68	IF_1	IF_5
0x4004899	    0x833d00000000	               cmp dword [0x040048a0], 0	      2929	channel.c	FUNCTION_68	IF_1	IF_5	IF_6
0x40048a0	            0x7414	                            je 0x40048b6	      2929	channel.c	FUNCTION_68	IF_1	IF_5	IF_6
0x40048a2	    0xc70500000000	               mov dword [0x040048ac], 0	      2931	channel.c	FUNCTION_68	IF_1	IF_5	IF_6
0x40048ac	      0xbf01000000	                              mov edi, 1	      2932	channel.c	FUNCTION_68	IF_1	IF_5	IF_6	CALL_15
0x40048b1	      0xe800000000	                          call 0x40048b6	      2932	channel.c	FUNCTION_68	IF_1	IF_5	IF_6	CALL_15
0x40048b6	    0x83bba0040000	              cmp dword [rbx + 0x4a0], 0	      2935	channel.c	FUNCTION_68	IF_1	IF_5	IF_7
0x40048bd	            0x7527	                           jne 0x40048e6	      2935	channel.c	FUNCTION_68	IF_1	IF_5	IF_7
0x40048bf	      0xbe00000000	                              mov esi, 0	      2938	channel.c	FUNCTION_68	IF_1	IF_5	IF_7	FOR_2
0x40048c4	          0x4889df	                            mov rdi, rbx	      2938	channel.c	FUNCTION_68	IF_1	IF_5	IF_7	FOR_2
0x40048c7	      0xe81bd7ffff	                  call sym.drop_messages	      2938	channel.c	FUNCTION_68	IF_1	IF_5	IF_7	FOR_2
0x40048cc	      0xbe01000000	                              mov esi, 1	      2938	channel.c	FUNCTION_68	IF_1	IF_5	IF_7	FOR_2
0x40048d1	          0x4889df	                            mov rdi, rbx	      2938	channel.c	FUNCTION_68	IF_1	IF_5	IF_7	FOR_2
0x40048d4	      0xe80ed7ffff	                  call sym.drop_messages	      2938	channel.c	FUNCTION_68	IF_1	IF_5	IF_7	FOR_2
0x40048d9	      0xbe02000000	                              mov esi, 2	      2938	channel.c	FUNCTION_68	IF_1	IF_5	IF_7	FOR_2
0x40048de	          0x4889df	                            mov rdi, rbx	      2938	channel.c	FUNCTION_68	IF_1	IF_5	IF_7	FOR_2
0x40048e1	      0xe801d7ffff	                  call sym.drop_messages	      2938	channel.c	FUNCTION_68	IF_1	IF_5	IF_7	FOR_2
0x40048e6	    0x83abb4040000	              sub dword [rbx + 0x4b4], 1	      2940	channel.c	FUNCTION_68	IF_1	IF_5
0x40048ed	    0x48c783780400	              mov qword [rbx + 0x478], 0	      2944	channel.c	FUNCTION_68
0x40048f8	          0x4889df	                            mov rdi, rbx	      2947	channel.c	FUNCTION_68	CALL_17
0x40048fb	      0xe800000000	                          call 0x4004900	      2947	channel.c	FUNCTION_68	CALL_17
0x4004900	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2949	channel.c	FUNCTION_68
0x4004905	    0x644833042528	                xor rax, qword fs:[0x28]	      2949	channel.c	FUNCTION_68
0x400490e	            0x7439	                            je 0x4004949	      2949	channel.c	FUNCTION_68
0x4004910	            0xeb32	                           jmp 0x4004944	      2949	channel.c	FUNCTION_68
0x4004912	    0x8383b4040000	              add dword [rbx + 0x4b4], 1	      2895	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4004919	    0x4a8b14e50000	                  mov rdx, qword [r12*8]	      2897	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x4004921	      0xbe00000000	                              mov esi, 0	      2897	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x4004926	          0x4889df	                            mov rdi, rbx	      2897	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x4004929	      0xb800000000	                              mov eax, 0	      2897	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x400492e	      0xe800000000	                          call 0x4004933	      2897	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x4004933	      0xe971feffff	                           jmp 0x40047a9	      2897	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x4004938	    0x8383b4040000	              add dword [rbx + 0x4b4], 1	      2895	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x400493f	      0xe965feffff	                           jmp 0x40047a9	      2895	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4004944	      0xe800000000	                          call 0x4004949	      2949	channel.c	FUNCTION_68
0x4004949	        0x4883c448	                           add rsp, 0x48	      2949	channel.c	FUNCTION_68
0x400494d	              0x5b	                                 pop rbx	      2949	channel.c	FUNCTION_68
0x400494e	              0x5d	                                 pop rbp	      2949	channel.c	FUNCTION_68
0x400494f	            0x415c	                                 pop r12	      2949	channel.c	FUNCTION_68
0x4004951	            0x415d	                                 pop r13	      2949	channel.c	FUNCTION_68
0x4004953	              0xc3	                                     ret	      2949	channel.c	FUNCTION_68
invoke_one_time_callback	IF,0:ELSE,0:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,5	45
0x40010a3	            0x4155	                                push r13	      2333	channel.c	FUNCTION_58
0x40010a5	            0x4154	                                push r12	      2333	channel.c	FUNCTION_58
0x40010a7	              0x55	                                push rbp	      2333	channel.c	FUNCTION_58
0x40010a8	              0x53	                                push rbx	      2333	channel.c	FUNCTION_58
0x40010a9	        0x4883ec08	                              sub rsp, 8	      2333	channel.c	FUNCTION_58
0x40010ad	          0x4889fd	                            mov rbp, rdi	      2333	channel.c	FUNCTION_58
0x40010b0	          0x4989f5	                            mov r13, rsi	      2333	channel.c	FUNCTION_58
0x40010b3	          0x4889d3	                            mov rbx, rdx	      2333	channel.c	FUNCTION_58
0x40010b6	          0x4989cc	                            mov r12, rcx	      2333	channel.c	FUNCTION_58
0x40010b9	          0x488b12	                    mov rdx, qword [rdx]	      2334	channel.c	FUNCTION_58	CALL_1
0x40010bc	      0xbe00000000	                              mov esi, 0	      2334	channel.c	FUNCTION_58	CALL_1
0x40010c1	      0xb800000000	                              mov eax, 0	      2334	channel.c	FUNCTION_58	CALL_1
0x40010c6	      0xe800000000	                          call 0x40010cb	      2334	channel.c	FUNCTION_58	CALL_1
0x40010cb	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      2057	channel.c	FUNCTION_53	IF_1
0x40010cf	          0x4885c0	                           test rax, rax	      2057	channel.c	FUNCTION_53	IF_1
0x40010d2	            0x750a	                           jne 0x40010de	      2057	channel.c	FUNCTION_53	IF_1
0x40010d4	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2058	channel.c	FUNCTION_53	IF_1
0x40010d8	        0x49894518	             mov qword [r13 + 0x18], rax	      2058	channel.c	FUNCTION_53	IF_1
0x40010dc	            0xeb08	                           jmp 0x40010e6	      2058	channel.c	FUNCTION_53	IF_1
0x40010de	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      2060	channel.c	FUNCTION_53	ELSE_1
0x40010e2	        0x48895018	             mov qword [rax + 0x18], rdx	      2060	channel.c	FUNCTION_53	ELSE_1
0x40010e6	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2061	channel.c	FUNCTION_53	IF_2
0x40010ea	          0x4885c0	                           test rax, rax	      2061	channel.c	FUNCTION_53	IF_2
0x40010ed	            0x750a	                           jne 0x40010f9	      2061	channel.c	FUNCTION_53	IF_2
0x40010ef	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      2062	channel.c	FUNCTION_53	IF_2
0x40010f3	        0x49894520	             mov qword [r13 + 0x20], rax	      2062	channel.c	FUNCTION_53	IF_2
0x40010f7	            0xeb08	                           jmp 0x4001101	      2062	channel.c	FUNCTION_53	IF_2
0x40010f9	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      2064	channel.c	FUNCTION_53	ELSE_2
0x40010fd	        0x48895020	             mov qword [rax + 0x20], rdx	      2064	channel.c	FUNCTION_53	ELSE_2
0x4001101	        0x488b5308	                mov rdx, qword [rbx + 8]	      2339	channel.c	FUNCTION_58	CALL_3
0x4001105	          0x4c89e1	                            mov rcx, r12	      2339	channel.c	FUNCTION_58	CALL_3
0x4001108	          0x488b33	                    mov rsi, qword [rbx]	      2339	channel.c	FUNCTION_58	CALL_3
0x400110b	          0x4889ef	                            mov rdi, rbp	      2339	channel.c	FUNCTION_58	CALL_3
0x400110e	      0xe853f6ffff	                call sym.invoke_callback	      2339	channel.c	FUNCTION_58	CALL_3
0x4001113	        0x488b7308	                mov rsi, qword [rbx + 8]	      2340	channel.c	FUNCTION_58	CALL_4
0x4001117	          0x488b3b	                    mov rdi, qword [rbx]	      2340	channel.c	FUNCTION_58	CALL_4
0x400111a	      0xe800000000	                          call 0x400111f	      2340	channel.c	FUNCTION_58	CALL_4
0x400111f	          0x4889df	                            mov rdi, rbx	      2341	channel.c	FUNCTION_58	CALL_5
0x4001122	      0xe800000000	                          call 0x4001127	      2341	channel.c	FUNCTION_58	CALL_5
0x4001127	        0x4883c408	                              add rsp, 8	      2342	channel.c	FUNCTION_58
0x400112b	              0x5b	                                 pop rbx	      2342	channel.c	FUNCTION_58
0x400112c	              0x5d	                                 pop rbp	      2342	channel.c	FUNCTION_58
0x400112d	            0x415c	                                 pop r12	      2342	channel.c	FUNCTION_58
0x400112f	            0x415d	                                 pop r13	      2342	channel.c	FUNCTION_58
0x4001131	              0xc3	                                     ret	      2342	channel.c	FUNCTION_58
drop_messages	IF,0:ELSE,0:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,1:CALL,3	23
0x4001fe7	            0x4154	                                push r12	      2448	channel.c	FUNCTION_60
0x4001fe9	              0x55	                                push rbp	      2448	channel.c	FUNCTION_60
0x4001fea	              0x53	                                push rbx	      2448	channel.c	FUNCTION_60
0x4001feb	          0x4889fd	                            mov rbp, rdi	      2448	channel.c	FUNCTION_60
0x4001fee	          0x4189f4	                           mov r12d, esi	      2448	channel.c	FUNCTION_60
0x4001ff1	            0xeb1d	                           jmp 0x4002010	      2451	channel.c	FUNCTION_60	WHILE_1	CALL_1
0x4001ff3	          0x4889da	                            mov rdx, rbx	      2453	channel.c	FUNCTION_60	WHILE_1	CALL_2
0x4001ff6	      0xbe00000000	                              mov esi, 0	      2453	channel.c	FUNCTION_60	WHILE_1	CALL_2
0x4001ffb	          0x4889ef	                            mov rdi, rbp	      2453	channel.c	FUNCTION_60	WHILE_1	CALL_2
0x4001ffe	      0xb800000000	                              mov eax, 0	      2453	channel.c	FUNCTION_60	WHILE_1	CALL_2
0x4002003	      0xe800000000	                          call 0x4002008	      2453	channel.c	FUNCTION_60	WHILE_1	CALL_2
0x4002008	          0x4889df	                            mov rdi, rbx	      2454	channel.c	FUNCTION_60	WHILE_1	CALL_3
0x400200b	      0xe800000000	                          call 0x4002010	      2454	channel.c	FUNCTION_60	WHILE_1	CALL_3
0x4002010	          0x4489e6	                           mov esi, r12d	      2451	channel.c	FUNCTION_60	WHILE_1	CALL_1
0x4002013	          0x4889ef	                            mov rdi, rbp	      2451	channel.c	FUNCTION_60	WHILE_1	CALL_1
0x4002016	      0xe800000000	                          call 0x400201b	      2451	channel.c	FUNCTION_60	WHILE_1	CALL_1
0x400201b	          0x4889c3	                            mov rbx, rax	      2451	channel.c	FUNCTION_60	WHILE_1	CALL_1
0x400201e	          0x4885c0	                           test rax, rax	      2451	channel.c	FUNCTION_60	WHILE_1	CALL_1
0x4002021	            0x75d0	                           jne 0x4001ff3	      2451	channel.c	FUNCTION_60	WHILE_1	CALL_1
0x4002023	              0x5b	                                 pop rbx	      2456	channel.c	FUNCTION_60
0x4002024	              0x5d	                                 pop rbp	      2456	channel.c	FUNCTION_60
0x4002025	            0x415c	                                 pop r12	      2456	channel.c	FUNCTION_60
0x4002027	              0xc3	                                     ret	      2456	channel.c	FUNCTION_60
job_still_useful	IF,0:ELSE,0:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,2	12
0x4000153	        0x837f2801	               cmp dword [rdi + 0x28], 1	      5104	channel.c	FUNCTION_113
0x4000157	            0x7513	                           jne 0x400016c	      5104	channel.c	FUNCTION_113
0x4000159	      0xb801000000	                              mov eax, 1	      5133	channel.c	FUNCTION_116	CALL_2
0x400015e	      0x48837f3000	               cmp qword [rdi + 0x30], 0	      5104	channel.c	FUNCTION_113
0x4000163	            0x7514	                           jne 0x4000179	      5104	channel.c	FUNCTION_113
0x4000165	      0x48837f4000	               cmp qword [rdi + 0x40], 0	      5104	channel.c	FUNCTION_113
0x400016a	            0x750d	                           jne 0x4000179	      5104	channel.c	FUNCTION_113
0x400016c	      0xe8c5ffffff	       call sym.job_channel_still_useful	      5133	channel.c	FUNCTION_116	CALL_2
0x4000171	            0x85c0	                           test eax, eax	      5133	channel.c	FUNCTION_116	CALL_2
0x4000173	           0xf95c0	                                setne al	      5133	channel.c	FUNCTION_116	CALL_2
0x4000176	           0xfb6c0	                           movzx eax, al	      5133	channel.c	FUNCTION_116	CALL_2
0x4000179	            0xf3c3	                                     ret	      5134	channel.c	FUNCTION_116
channel_select_check	IF,3:ELSE,1:FOR,2:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,7	108
0x400525d	            0x4157	                                push r15	      4166	channel.c	FUNCTION_94
0x400525f	            0x4156	                                push r14	      4166	channel.c	FUNCTION_94
0x4005261	            0x4155	                                push r13	      4166	channel.c	FUNCTION_94
0x4005263	            0x4154	                                push r12	      4166	channel.c	FUNCTION_94
0x4005265	              0x55	                                push rbp	      4166	channel.c	FUNCTION_94
0x4005266	              0x53	                                push rbx	      4166	channel.c	FUNCTION_94
0x4005267	        0x4883ec28	                           sub rsp, 0x28	      4166	channel.c	FUNCTION_94
0x400526b	          0x4189fe	                           mov r14d, edi	      4166	channel.c	FUNCTION_94
0x400526e	      0x4889742408	                mov qword [rsp + 8], rsi	      4166	channel.c	FUNCTION_94
0x4005273	      0x4889542418	             mov qword [rsp + 0x18], rdx	      4166	channel.c	FUNCTION_94
0x4005278	    0x4c8b2d000000	            mov r13, qword [0x0400527f] 	      4174	channel.c	FUNCTION_94	FOR_1
0x400527f	          0x4d85ed	                           test r13, r13	      4174	channel.c	FUNCTION_94	FOR_1
0x4005282	     0xf85fd000000	                           jne 0x4005385	      4174	channel.c	FUNCTION_94	FOR_1
0x4005288	      0xe937010000	                           jmp 0x40053c4	      4174	channel.c	FUNCTION_94	FOR_1
0x400528d	        0x418b1c24	                    mov ebx, dword [r12]	      4178	channel.c	FUNCTION_94	FOR_1	FOR_2
0x4005291	          0x4585f6	                         test r14d, r14d	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4005294	            0x7e3c	                           jle 0x40052d2	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4005296	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4005299	            0x7437	                            je 0x40052d2	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x400529b	          0x4c63fb	                         movsxd r15, ebx	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x400529e	          0x4c89ff	                            mov rdi, r15	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x40052a1	      0xe800000000	                          call 0x40052a6	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x40052a6	            0x89da	                            mov edx, ebx	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x40052a8	          0xc1fa1f	                           sar edx, 0x1f	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x40052ab	          0xc1ea1a	                           shr edx, 0x1a	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x40052ae	          0x8d0c13	                    lea ecx, [rbx + rdx]	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x40052b1	          0x83e13f	                           and ecx, 0x3f	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x40052b4	            0x29d1	                            sub ecx, edx	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x40052b6	      0xbe01000000	                              mov esi, 1	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x40052bb	          0x48d3e6	                             shl rsi, cl	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x40052be	      0x4889742410	             mov qword [rsp + 0x10], rsi	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x40052c3	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x40052c8	        0x488534c7	          test qword [rdi + rax*8], rsi 	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x40052cc	     0xf85c1000000	                           jne 0x4005393	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x40052d2	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x40052d5	            0x7419	                            je 0x40052f0	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x40052d7	    0x4183bda40400	              cmp dword [r13 + 0x4a4], 0	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x40052df	            0x740f	                            je 0x40052f0	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x40052e1	      0xba00000000	                              mov edx, 0	      4189	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x40052e6	            0x89ee	                            mov esi, ebp	      4189	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x40052e8	          0x4c89ef	                            mov rdi, r13	      4189	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x40052eb	      0xe8e9dfffff	                   call sym.channel_read	      4189	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x40052f0	          0x83c501	                              add ebp, 1	      4176	channel.c	FUNCTION_94	FOR_1	FOR_2
0x40052f3	    0x4981c4100100	                          add r12, 0x110	      4176	channel.c	FUNCTION_94	FOR_1	FOR_2
0x40052fa	          0x83fd03	                              cmp ebp, 3	      4176	channel.c	FUNCTION_94	FOR_1	FOR_2
0x40052fd	            0x758e	                           jne 0x400528d	      4176	channel.c	FUNCTION_94	FOR_1	FOR_2
0x40052ff	          0x4585f6	                         test r14d, r14d	      4194	channel.c	FUNCTION_94	FOR_1	IF_3
0x4005302	            0x7e78	                           jle 0x400537c	      4194	channel.c	FUNCTION_94	FOR_1	IF_3
0x4005304	    0x418bbd480300	           mov edi, dword [r13 + 0x348] 	      4194	channel.c	FUNCTION_94	FOR_1	IF_3
0x400530b	          0x83ffff	             cmp edi, 0xffffffffffffffff	      4194	channel.c	FUNCTION_94	FOR_1	IF_3
0x400530e	            0x746c	                            je 0x400537c	      4194	channel.c	FUNCTION_94	FOR_1	IF_3
0x4005310	          0x4863ff	                         movsxd rdi, edi	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4005313	      0xe800000000	                          call 0x4005318	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4005318	    0x418bbd480300	           mov edi, dword [r13 + 0x348] 	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x400531f	            0x89fa	                            mov edx, edi	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4005321	          0xc1fa1f	                           sar edx, 0x1f	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4005324	          0xc1ea1a	                           shr edx, 0x1a	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4005327	          0x8d0c17	                    lea ecx, [rdi + rdx]	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x400532a	          0x83e13f	                           and ecx, 0x3f	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x400532d	            0x29d1	                            sub ecx, edx	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x400532f	      0xba01000000	                              mov edx, 1	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4005334	          0x48d3e2	                             shl rdx, cl	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4005337	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x400533c	        0x488514c3	          test qword [rbx + rax*8], rdx 	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4005340	            0x743a	                            je 0x400537c	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4005342	          0x4863ff	                         movsxd rdi, edi	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4005345	      0xe800000000	                          call 0x400534a	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x400534a	    0x418b95480300	           mov edx, dword [r13 + 0x348] 	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4005351	            0x89d6	                            mov esi, edx	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4005353	          0xc1fe1f	                           sar esi, 0x1f	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4005356	          0xc1ee1a	                           shr esi, 0x1a	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4005359	          0x8d0c32	                    lea ecx, [rdx + rsi]	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x400535c	          0x83e13f	                           and ecx, 0x3f	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x400535f	            0x29f1	                            sub ecx, esi	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4005361	      0xba01000000	                              mov edx, 1	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4005366	          0x48d3e2	                             shl rdx, cl	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4005369	          0x48f7d2	                                 not rdx	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x400536c	        0x482114c3	            and qword [rbx + rax*8], rdx	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4005370	          0x4c89ef	                            mov rdi, r13	      4199	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_7
0x4005373	      0xe8a2ddffff	            call sym.channel_write_input	      4199	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_7
0x4005378	        0x4183ee01	                             sub r14d, 1	      4200	channel.c	FUNCTION_94	FOR_1	IF_3
0x400537c	        0x4d8b6d00	                    mov r13, qword [r13]	      4174	channel.c	FUNCTION_94	FOR_1
0x4005380	          0x4d85ed	                           test r13, r13	      4174	channel.c	FUNCTION_94	FOR_1
0x4005383	            0x743f	                            je 0x40053c4	      4174	channel.c	FUNCTION_94	FOR_1
0x4005385	        0x4d8d6518	                   lea r12, [r13 + 0x18]	      4174	channel.c	FUNCTION_94	FOR_1
0x4005389	      0xbd00000000	                              mov ebp, 0	      4166	channel.c	FUNCTION_94
0x400538e	      0xe9fafeffff	                           jmp 0x400528d	      4166	channel.c	FUNCTION_94
0x4005393	      0xba00000000	                              mov edx, 0	      4182	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_2
0x4005398	            0x89ee	                            mov esi, ebp	      4182	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_2
0x400539a	          0x4c89ef	                            mov rdi, r13	      4182	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_2
0x400539d	      0xe837dfffff	                   call sym.channel_read	      4182	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_2
0x40053a2	          0x4c89ff	                            mov rdi, r15	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x40053a5	      0xe800000000	                          call 0x40053aa	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x40053aa	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x40053af	          0x48f7d2	                                 not rdx	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x40053b2	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x40053b7	        0x482114c7	            and qword [rdi + rax*8], rdx	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x40053bb	        0x4183ee01	                             sub r14d, 1	      4184	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1
0x40053bf	      0xe92cffffff	                           jmp 0x40052f0	      4184	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1
0x40053c4	          0x4489f0	                           mov eax, r14d	      4205	channel.c	FUNCTION_94
0x40053c7	        0x4883c428	                           add rsp, 0x28	      4205	channel.c	FUNCTION_94
0x40053cb	              0x5b	                                 pop rbx	      4205	channel.c	FUNCTION_94
0x40053cc	              0x5d	                                 pop rbp	      4205	channel.c	FUNCTION_94
0x40053cd	            0x415c	                                 pop r12	      4205	channel.c	FUNCTION_94
0x40053cf	            0x415d	                                 pop r13	      4205	channel.c	FUNCTION_94
0x40053d1	            0x415e	                                 pop r14	      4205	channel.c	FUNCTION_94
0x40053d3	            0x415f	                                 pop r15	      4205	channel.c	FUNCTION_94
0x40053d5	              0xc3	                                     ret	      4205	channel.c	FUNCTION_94
channel_collapse	IF,4:ELSE,1:FOR,2:SWITCH,0:functions,0:DO,0:WHILE,1:CALL,8	107
0x4002262	            0x4157	                                push r15	      1731	channel.c	FUNCTION_49
0x4002264	            0x4156	                                push r14	      1731	channel.c	FUNCTION_49
0x4002266	            0x4155	                                push r13	      1731	channel.c	FUNCTION_49
0x4002268	            0x4154	                                push r12	      1731	channel.c	FUNCTION_49
0x400226a	              0x55	                                push rbp	      1731	channel.c	FUNCTION_49
0x400226b	              0x53	                                push rbx	      1731	channel.c	FUNCTION_49
0x400226c	        0x4883ec18	                           sub rsp, 0x18	      1731	channel.c	FUNCTION_49
0x4002270	            0x89f0	                            mov eax, esi	      1733	channel.c	FUNCTION_49
0x4002272	          0x4889c1	                            mov rcx, rax	      1733	channel.c	FUNCTION_49
0x4002275	        0x48c1e104	                              shl rcx, 4	      1733	channel.c	FUNCTION_49
0x4002279	        0x48c1e008	                              shl rax, 8	      1733	channel.c	FUNCTION_49
0x400227d	          0x4801c8	                            add rax, rcx	      1733	channel.c	FUNCTION_49
0x4002280	      0x4c8b6c0740	      mov r13, qword [rdi + rax + 0x40] 	      1733	channel.c	FUNCTION_49
0x4002285	          0x4d85ed	                           test r13, r13	      1740	channel.c	FUNCTION_49	IF_1
0x4002288	     0xf841c010000	                            je 0x40023aa	      1740	channel.c	FUNCTION_49	IF_1
0x400228e	        0x498b6d10	            mov rbp, qword [r13 + 0x10] 	      1740	channel.c	FUNCTION_49	IF_1
0x4002292	          0x4885ed	                           test rbp, rbp	      1740	channel.c	FUNCTION_49	IF_1
0x4002295	     0xf8416010000	                            je 0x40023b1	      1740	channel.c	FUNCTION_49	IF_1
0x400229b	        0x8974240c	              mov dword [rsp + 0xc], esi	      1740	channel.c	FUNCTION_49	IF_1
0x400229f	          0x4989ff	                            mov r15, rdi	      1740	channel.c	FUNCTION_49	IF_1
0x40022a2	        0x4c8b6508	                mov r12, qword [rbp + 8]	      1744	channel.c	FUNCTION_49
0x40022a6	        0x4d036508	                add r12, qword [r13 + 8]	      1744	channel.c	FUNCTION_49
0x40022aa	        0x4983c401	                              add r12, 1	      1744	channel.c	FUNCTION_49
0x40022ae	            0x85d2	                           test edx, edx	      1745	channel.c	FUNCTION_49	IF_2
0x40022b0	            0x7430	                            je 0x40022e2	      1745	channel.c	FUNCTION_49	IF_2
0x40022b2	        0x488b5d10	            mov rbx, qword [rbp + 0x10] 	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x40022b6	          0x4885db	                           test rbx, rbx	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x40022b9	            0x7515	                           jne 0x40022d0	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x40022bb	            0xeb25	                           jmp 0x40022e2	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x40022bd	        0x4c036308	                add r12, qword [rbx + 8]	      1750	channel.c	FUNCTION_49	IF_2	WHILE_1
0x40022c1	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x40022c5	          0x4889dd	                            mov rbp, rbx	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x40022c8	          0x4885c0	                           test rax, rax	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x40022cb	            0x7412	                            je 0x40022df	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x40022cd	          0x4889c3	                            mov rbx, rax	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x40022d0	          0x4889ef	                            mov rdi, rbp	      1747	channel.c	FUNCTION_49	IF_2	WHILE_1	CALL_1
0x40022d3	      0xe800000000	                          call 0x40022d8	      1747	channel.c	FUNCTION_49	IF_2	WHILE_1	CALL_1
0x40022d8	          0x4885c0	                           test rax, rax	      1747	channel.c	FUNCTION_49	IF_2	WHILE_1	CALL_1
0x40022db	            0x74e0	                            je 0x40022bd	      1747	channel.c	FUNCTION_49	IF_2	WHILE_1	CALL_1
0x40022dd	            0xeb03	                           jmp 0x40022e2	      1747	channel.c	FUNCTION_49	IF_2	WHILE_1	CALL_1
0x40022df	          0x4889dd	                            mov rbp, rbx	      1747	channel.c	FUNCTION_49	IF_2	WHILE_1	CALL_1
0x40022e2	          0x4489e7	                           mov edi, r12d	      1753	channel.c	FUNCTION_49	CALL_2
0x40022e5	      0xe800000000	                          call 0x40022ea	      1753	channel.c	FUNCTION_49	CALL_2
0x40022ea	          0x4989c6	                            mov r14, rax	      1753	channel.c	FUNCTION_49	CALL_2
0x40022ed	      0xb800000000	                              mov eax, 0	      1755	channel.c	FUNCTION_49	IF_3
0x40022f2	          0x4d85f6	                           test r14, r14	      1754	channel.c	FUNCTION_49	IF_3
0x40022f5	     0xf84bb000000	                            je 0x40023b6	      1754	channel.c	FUNCTION_49	IF_3
0x40022fb	        0x498b5508	                mov rdx, qword [r13 + 8]	        59	string3.h	FUNCTION_136	CALL_3
0x40022ff	        0x498b7500	                    mov rsi, qword [r13]	        59	string3.h	FUNCTION_136	CALL_3
0x4002303	          0x4c89f7	                            mov rdi, r14	        59	string3.h	FUNCTION_136	CALL_3
0x4002306	      0xe800000000	                          call 0x400230b	        59	string3.h	FUNCTION_136	CALL_3
0x400230b	          0x4d89f4	                            mov r12, r14	      1757	channel.c	FUNCTION_49
0x400230e	        0x4d036508	                add r12, qword [r13 + 8]	      1757	channel.c	FUNCTION_49
0x4002312	        0x498b7d00	                    mov rdi, qword [r13]	      1758	channel.c	FUNCTION_49	CALL_4
0x4002316	      0xe800000000	                          call 0x400231b	      1758	channel.c	FUNCTION_49	CALL_4
0x400231b	        0x4d897500	                    mov qword [r13], r14	      1759	channel.c	FUNCTION_49
0x400231f	          0x4c39ed	                            cmp rbp, r13	      1760	channel.c	FUNCTION_49	FOR_1
0x4002322	            0x7427	                            je 0x400234b	      1760	channel.c	FUNCTION_49	FOR_1
0x4002324	          0x4c89eb	                            mov rbx, r13	      1760	channel.c	FUNCTION_49	FOR_1
0x4002327	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      1762	channel.c	FUNCTION_49	FOR_1
0x400232b	        0x488b5308	                mov rdx, qword [rbx + 8]	        59	string3.h	FUNCTION_136	CALL_3
0x400232f	          0x488b33	                    mov rsi, qword [rbx]	        59	string3.h	FUNCTION_136	CALL_3
0x4002332	          0x4c89e7	                            mov rdi, r12	        59	string3.h	FUNCTION_136	CALL_3
0x4002335	      0xe800000000	                          call 0x400233a	        59	string3.h	FUNCTION_136	CALL_3
0x400233a	        0x4c036308	                add r12, qword [rbx + 8]	      1764	channel.c	FUNCTION_49	FOR_1
0x400233e	          0x488b3b	                    mov rdi, qword [rbx]	      1765	channel.c	FUNCTION_49	FOR_1	CALL_6
0x4002341	      0xe800000000	                          call 0x4002346	      1765	channel.c	FUNCTION_49	FOR_1	CALL_6
0x4002346	          0x4839dd	                            cmp rbp, rbx	      1760	channel.c	FUNCTION_49	FOR_1
0x4002349	            0x75dc	                           jne 0x4002327	      1760	channel.c	FUNCTION_49	FOR_1
0x400234b	          0x4d29f4	                            sub r12, r14	      1767	channel.c	FUNCTION_49
0x400234e	        0x4d896508	                mov qword [r13 + 8], r12	      1767	channel.c	FUNCTION_49
0x4002352	        0x498b5d10	            mov rbx, qword [r13 + 0x10] 	      1770	channel.c	FUNCTION_49	FOR_2
0x4002356	          0x4839dd	                            cmp rbp, rbx	      1770	channel.c	FUNCTION_49	FOR_2
0x4002359	            0x7412	                            je 0x400236d	      1770	channel.c	FUNCTION_49	FOR_2
0x400235b	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      1772	channel.c	FUNCTION_49	FOR_2
0x400235f	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1773	channel.c	FUNCTION_49	FOR_2	CALL_7
0x4002363	      0xe800000000	                          call 0x4002368	      1773	channel.c	FUNCTION_49	FOR_2	CALL_7
0x4002368	          0x4839dd	                            cmp rbp, rbx	      1770	channel.c	FUNCTION_49	FOR_2
0x400236b	            0x75ee	                           jne 0x400235b	      1770	channel.c	FUNCTION_49	FOR_2
0x400236d	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1775	channel.c	FUNCTION_49
0x4002371	        0x49894510	             mov qword [r13 + 0x10], rax	      1775	channel.c	FUNCTION_49
0x4002375	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1776	channel.c	FUNCTION_49	IF_4
0x4002379	          0x4885c0	                           test rax, rax	      1776	channel.c	FUNCTION_49	IF_4
0x400237c	            0x7519	                           jne 0x4002397	      1776	channel.c	FUNCTION_49	IF_4
0x400237e	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      1777	channel.c	FUNCTION_49	IF_4
0x4002382	          0x4889c2	                            mov rdx, rax	      1777	channel.c	FUNCTION_49	IF_4
0x4002385	        0x48c1e204	                              shl rdx, 4	      1777	channel.c	FUNCTION_49	IF_4
0x4002389	        0x48c1e008	                              shl rax, 8	      1777	channel.c	FUNCTION_49	IF_4
0x400238d	          0x4801d0	                            add rax, rdx	      1777	channel.c	FUNCTION_49	IF_4
0x4002390	      0x4d896c0748	       mov qword [r15 + rax + 0x48], r13	      1777	channel.c	FUNCTION_49	IF_4
0x4002395	            0xeb04	                           jmp 0x400239b	      1777	channel.c	FUNCTION_49	IF_4
0x4002397	        0x4c896818	             mov qword [rax + 0x18], r13	      1779	channel.c	FUNCTION_49	ELSE_1
0x400239b	          0x4889ef	                            mov rdi, rbp	      1780	channel.c	FUNCTION_49	CALL_8
0x400239e	      0xe800000000	                          call 0x40023a3	      1780	channel.c	FUNCTION_49	CALL_8
0x40023a3	      0xb801000000	                              mov eax, 1	      1781	channel.c	FUNCTION_49
0x40023a8	            0xeb0c	                           jmp 0x40023b6	      1781	channel.c	FUNCTION_49
0x40023aa	      0xb800000000	                              mov eax, 0	      1741	channel.c	FUNCTION_49	IF_1
0x40023af	            0xeb05	                           jmp 0x40023b6	      1741	channel.c	FUNCTION_49	IF_1
0x40023b1	      0xb800000000	                              mov eax, 0	      1741	channel.c	FUNCTION_49	IF_1
0x40023b6	        0x4883c418	                           add rsp, 0x18	      1782	channel.c	FUNCTION_49
0x40023ba	              0x5b	                                 pop rbx	      1782	channel.c	FUNCTION_49
0x40023bb	              0x5d	                                 pop rbp	      1782	channel.c	FUNCTION_49
0x40023bc	            0x415c	                                 pop r12	      1782	channel.c	FUNCTION_49
0x40023be	            0x415d	                                 pop r13	      1782	channel.c	FUNCTION_49
0x40023c0	            0x415e	                                 pop r14	      1782	channel.c	FUNCTION_49
0x40023c2	            0x415f	                                 pop r15	      1782	channel.c	FUNCTION_49
0x40023c4	              0xc3	                                     ret	      1782	channel.c	FUNCTION_49
channel_any_readahead	IF,2:ELSE,1:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,1:CALL,1	26
0x40057d7	              0x55	                                push rbp	      4310	channel.c	FUNCTION_96
0x40057d8	              0x53	                                push rbx	      4310	channel.c	FUNCTION_96
0x40057d9	    0x488b1d000000	            mov rbx, qword [0x040057e0] 	      4311	channel.c	FUNCTION_96
0x40057e0	          0x4885db	                           test rbx, rbx	      4314	channel.c	FUNCTION_96	WHILE_1
0x40057e3	            0x742c	                            je 0x4005811	      4314	channel.c	FUNCTION_96	WHILE_1
0x40057e5	      0xbd00000000	                              mov ebp, 0	      4314	channel.c	FUNCTION_96	WHILE_1
0x40057ea	            0x89ee	                            mov esi, ebp	      4316	channel.c	FUNCTION_96	WHILE_1	IF_1	CALL_1
0x40057ec	          0x4889df	                            mov rdi, rbx	      4316	channel.c	FUNCTION_96	WHILE_1	IF_1	CALL_1
0x40057ef	      0xe800000000	                          call 0x40057f4	      4316	channel.c	FUNCTION_96	WHILE_1	IF_1	CALL_1
0x40057f4	            0x85c0	                           test eax, eax	      4316	channel.c	FUNCTION_96	WHILE_1	IF_1	CALL_1
0x40057f6	            0x7520	                           jne 0x4005818	      4316	channel.c	FUNCTION_96	WHILE_1	IF_1	CALL_1
0x40057f8	          0x83fd01	                              cmp ebp, 1	      4318	channel.c	FUNCTION_96	WHILE_1	IF_2
0x40057fb	            0x7705	                            ja 0x4005802	      4318	channel.c	FUNCTION_96	WHILE_1	IF_2
0x40057fd	          0x83c501	                              add ebp, 1	      4319	channel.c	FUNCTION_96	WHILE_1	IF_2
0x4005800	            0xeb08	                           jmp 0x400580a	      4319	channel.c	FUNCTION_96	WHILE_1	IF_2
0x4005802	          0x488b1b	                    mov rbx, qword [rbx]	      4322	channel.c	FUNCTION_96	WHILE_1	ELSE_1
0x4005805	      0xbd00000000	                              mov ebp, 0	      4323	channel.c	FUNCTION_96	WHILE_1	ELSE_1
0x400580a	          0x4885db	                           test rbx, rbx	      4314	channel.c	FUNCTION_96	WHILE_1
0x400580d	            0x75db	                           jne 0x40057ea	      4314	channel.c	FUNCTION_96	WHILE_1
0x400580f	            0xeb0c	                           jmp 0x400581d	      4314	channel.c	FUNCTION_96	WHILE_1
0x4005811	      0xb800000000	                              mov eax, 0	      4326	channel.c	FUNCTION_96
0x4005816	            0xeb05	                           jmp 0x400581d	      4326	channel.c	FUNCTION_96
0x4005818	      0xb801000000	                              mov eax, 1	      4317	channel.c	FUNCTION_96	WHILE_1	IF_1
0x400581d	              0x5b	                                 pop rbx	      4327	channel.c	FUNCTION_96
0x400581e	              0x5d	                                 pop rbp	      4327	channel.c	FUNCTION_96
0x400581f	              0xc3	                                     ret	      4327	channel.c	FUNCTION_96
job_check_ended	IF,3:ELSE,0:FOR,1:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,3	19
0x4007d59	    0x48833d000000	               cmp qword [0x04007d61], 0	      5496	channel.c	FUNCTION_129	IF_1
0x4007d61	            0x7442	                            je 0x4007da5	      5496	channel.c	FUNCTION_129	IF_1
0x4007d63	              0x53	                                push rbx	      5493	channel.c	FUNCTION_129
0x4007d64	      0xbb08000000	                              mov ebx, 8	      5493	channel.c	FUNCTION_129
0x4007d69	    0x488b3d000000	            mov rdi, qword [0x04007d70] 	      5503	channel.c	FUNCTION_129	FOR_1	CALL_1
0x4007d70	      0xe800000000	                          call 0x4007d75	      5503	channel.c	FUNCTION_129	FOR_1	CALL_1
0x4007d75	          0x4885c0	                           test rax, rax	      5505	channel.c	FUNCTION_129	FOR_1	IF_2
0x4007d78	            0x740d	                            je 0x4007d87	      5505	channel.c	FUNCTION_129	FOR_1	IF_2
0x4007d7a	          0x4889c7	                            mov rdi, rax	      5507	channel.c	FUNCTION_129	FOR_1	CALL_2
0x4007d7d	      0xe800000000	                          call 0x4007d82	      5507	channel.c	FUNCTION_129	FOR_1	CALL_2
0x4007d82	          0x83eb01	                              sub ebx, 1	      5499	channel.c	FUNCTION_129	FOR_1
0x4007d85	            0x75e2	                           jne 0x4007d69	      5499	channel.c	FUNCTION_129	FOR_1
0x4007d87	    0x833d00000000	               cmp dword [0x04007d8e], 0	      5510	channel.c	FUNCTION_129	IF_3
0x4007d8e	            0x7414	                            je 0x4007da4	      5510	channel.c	FUNCTION_129	IF_3
0x4007d90	    0xc70500000000	               mov dword [0x04007d9a], 0	      5512	channel.c	FUNCTION_129	IF_3
0x4007d9a	      0xbf01000000	                              mov edi, 1	      5513	channel.c	FUNCTION_129	IF_3	CALL_3
0x4007d9f	      0xe800000000	                          call 0x4007da4	      5513	channel.c	FUNCTION_129	IF_3	CALL_3
0x4007da4	              0x5b	                                 pop rbx	      5515	channel.c	FUNCTION_129
0x4007da5	            0xf3c3	                                     ret	      5515	channel.c	FUNCTION_129
channel_write_new_lines	IF,7:ELSE,1:FOR,2:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,5	69
0x4003009	            0x4155	                                push r13	      1542	channel.c	FUNCTION_42
0x400300b	            0x4154	                                push r12	      1542	channel.c	FUNCTION_42
0x400300d	              0x55	                                push rbp	      1542	channel.c	FUNCTION_42
0x400300e	              0x53	                                push rbx	      1542	channel.c	FUNCTION_42
0x400300f	        0x4883ec08	                              sub rsp, 8	      1542	channel.c	FUNCTION_42
0x4003013	          0x4989fc	                            mov r12, rdi	      1542	channel.c	FUNCTION_42
0x4003016	    0x488b1d000000	            mov rbx, qword [0x0400301d] 	      1548	channel.c	FUNCTION_42	FOR_1
0x400301d	          0x4885db	                           test rbx, rbx	      1548	channel.c	FUNCTION_42	FOR_1
0x4003020	     0xf84dd000000	                            je 0x4003103	      1548	channel.c	FUNCTION_42	FOR_1
0x4003026	      0xb800000000	                              mov eax, 0	      1548	channel.c	FUNCTION_42	FOR_1
0x400302b	    0x4c39a3280400	           cmp qword [rbx + 0x428], r12 	      1554	channel.c	FUNCTION_42	FOR_1	IF_1
0x4003032	     0xf85bb000000	                           jne 0x40030f3	      1554	channel.c	FUNCTION_42	FOR_1	IF_1
0x4003038	    0x83bb40040000	              cmp dword [rbx + 0x440], 0	      1554	channel.c	FUNCTION_42	FOR_1	IF_1
0x400303f	     0xf84ae000000	                            je 0x40030f3	      1554	channel.c	FUNCTION_42	FOR_1	IF_1
0x4003045	    0x83bb48030000	cmp dword [rbx + 0x348], 0xffffffffffffffff	      1556	channel.c	FUNCTION_42	FOR_1	IF_1	IF_2
0x400304c	     0xf84a1000000	                            je 0x40030f3	      1556	channel.c	FUNCTION_42	FOR_1	IF_1	IF_2
0x4003052	    0x488bab500400	           mov rbp, qword [rbx + 0x450] 	      1559	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x4003059	        0x493b2c24	                    cmp rbp, qword [r12]	      1559	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x400305d	     0xf8d84000000	                           jge 0x40030e7	      1559	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x4003063	    0x41bd00000000	                             mov r13d, 0	      1559	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x4003069	          0x4889df	                            mov rdi, rbx	      1562	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2	IF_3	CALL_1
0x400306c	      0xe8d3ddffff	             call sym.can_write_buf_line	      1562	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2	IF_3	CALL_1
0x4003071	            0x85c0	                           test eax, eax	      1562	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2	IF_3	CALL_1
0x4003073	            0x741c	                            je 0x4003091	      1562	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2	IF_3	CALL_1
0x4003075	          0x4889da	                            mov rdx, rbx	      1564	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2	CALL_2
0x4003078	          0x4889ee	                            mov rsi, rbp	      1564	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2	CALL_2
0x400307b	          0x4c89e7	                            mov rdi, r12	      1564	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2	CALL_2
0x400307e	      0xe869fdffff	                 call sym.write_buf_line	      1564	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2	CALL_2
0x4003083	        0x4183c501	                             add r13d, 1	      1565	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x4003087	        0x4883c501	                              add rbp, 1	      1560	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x400308b	        0x49392c24	                    cmp qword [r12], rbp	      1559	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x400308f	            0x7fd8	                            jg 0x4003069	      1559	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x4003091	        0x4183fd01	                             cmp r13d, 1	      1568	channel.c	FUNCTION_42	FOR_1	IF_1	IF_4
0x4003095	            0x7517	                           jne 0x40030ae	      1568	channel.c	FUNCTION_42	FOR_1	IF_1	IF_4
0x4003097	          0x8d55ff	                      lea edx, [rbp - 1]	      1569	channel.c	FUNCTION_42	FOR_1	IF_1	CALL_3
0x400309a	      0xbe00000000	                              mov esi, 0	      1569	channel.c	FUNCTION_42	FOR_1	IF_1	CALL_3
0x400309f	          0x4889df	                            mov rdi, rbx	      1569	channel.c	FUNCTION_42	FOR_1	IF_1	CALL_3
0x40030a2	      0xb800000000	                              mov eax, 0	      1569	channel.c	FUNCTION_42	FOR_1	IF_1	CALL_3
0x40030a7	      0xe800000000	                          call 0x40030ac	      1569	channel.c	FUNCTION_42	FOR_1	IF_1	CALL_3
0x40030ac	            0xeb1b	                           jmp 0x40030c9	      1569	channel.c	FUNCTION_42	FOR_1	IF_1	CALL_3
0x40030ae	        0x4183fd01	                             cmp r13d, 1	      1570	channel.c	FUNCTION_42	FOR_1	IF_1	ELSE_1	IF_5
0x40030b2	            0x7e15	                           jle 0x40030c9	      1570	channel.c	FUNCTION_42	FOR_1	IF_1	ELSE_1	IF_5
0x40030b4	          0x4489ea	                           mov edx, r13d	      1571	channel.c	FUNCTION_42	FOR_1	IF_1	ELSE_1	IF_5
0x40030b7	      0xbe00000000	                              mov esi, 0	      1571	channel.c	FUNCTION_42	FOR_1	IF_1	ELSE_1	IF_5
0x40030bc	          0x4889df	                            mov rdi, rbx	      1571	channel.c	FUNCTION_42	FOR_1	IF_1	ELSE_1	IF_5
0x40030bf	      0xb800000000	                              mov eax, 0	      1571	channel.c	FUNCTION_42	FOR_1	IF_1	ELSE_1	IF_5
0x40030c4	      0xe800000000	                          call 0x40030c9	      1571	channel.c	FUNCTION_42	FOR_1	IF_1	ELSE_1	IF_5
0x40030c9	        0x498b1424	                    mov rdx, qword [r12]	      1572	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6
0x40030cd	          0x4839ea	                            cmp rdx, rbp	      1572	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6
0x40030d0	            0x7e15	                           jle 0x40030e7	      1572	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6
0x40030d2	          0x4829ea	                            sub rdx, rbp	      1573	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6	CALL_5
0x40030d5	      0xbe00000000	                              mov esi, 0	      1573	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6	CALL_5
0x40030da	          0x4889df	                            mov rdi, rbx	      1573	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6	CALL_5
0x40030dd	      0xb800000000	                              mov eax, 0	      1573	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6	CALL_5
0x40030e2	      0xe800000000	                          call 0x40030e7	      1573	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6	CALL_5
0x40030e7	    0x4889ab500400	            mov qword [rbx + 0x450], rbp	      1576	channel.c	FUNCTION_42	FOR_1	IF_1
0x40030ee	      0xb801000000	                              mov eax, 1	      1558	channel.c	FUNCTION_42	FOR_1	IF_1
0x40030f3	          0x488b1b	                    mov rbx, qword [rbx]	      1548	channel.c	FUNCTION_42	FOR_1
0x40030f6	          0x4885db	                           test rbx, rbx	      1548	channel.c	FUNCTION_42	FOR_1
0x40030f9	     0xf852cffffff	                           jne 0x400302b	      1548	channel.c	FUNCTION_42	FOR_1
0x40030ff	            0x85c0	                           test eax, eax	      1579	channel.c	FUNCTION_42	IF_7
0x4003101	            0x750c	                           jne 0x400310f	      1579	channel.c	FUNCTION_42	IF_7
0x4003103	    0x41c78424341c	            mov dword [r12 + 0x1c34], 0 	      1580	channel.c	FUNCTION_42	IF_7
0x400310f	        0x4883c408	                              add rsp, 8	      1581	channel.c	FUNCTION_42
0x4003113	              0x5b	                                 pop rbx	      1581	channel.c	FUNCTION_42
0x4003114	              0x5d	                                 pop rbp	      1581	channel.c	FUNCTION_42
0x4003115	            0x415c	                                 pop r12	      1581	channel.c	FUNCTION_42
0x4003117	            0x415d	                                 pop r13	      1581	channel.c	FUNCTION_42
0x4003119	              0xc3	                                     ret	      1581	channel.c	FUNCTION_42
channel_consume	IF,0:ELSE,0:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,1	20
0x4002225	              0x55	                                push rbp	      1715	channel.c	FUNCTION_48
0x4002226	              0x53	                                push rbx	      1715	channel.c	FUNCTION_48
0x4002227	        0x4883ec08	                              sub rsp, 8	      1715	channel.c	FUNCTION_48
0x400222b	            0x89f6	                            mov esi, esi	      1717	channel.c	FUNCTION_48
0x400222d	          0x4889f0	                            mov rax, rsi	      1717	channel.c	FUNCTION_48
0x4002230	        0x48c1e004	                              shl rax, 4	      1717	channel.c	FUNCTION_48
0x4002234	        0x48c1e608	                              shl rsi, 8	      1717	channel.c	FUNCTION_48
0x4002238	          0x4801c6	                            add rsi, rax	      1717	channel.c	FUNCTION_48
0x400223b	      0x488b6c3740	      mov rbp, qword [rdi + rsi + 0x40] 	      1717	channel.c	FUNCTION_48
0x4002240	        0x488b7d00	                    mov rdi, qword [rbp]	      1718	channel.c	FUNCTION_48
0x4002244	          0x4863da	                         movsxd rbx, edx	      1720	channel.c	FUNCTION_48	CALL_1
0x4002247	        0x488b5508	                mov rdx, qword [rbp + 8]	        59	string3.h	FUNCTION_136	CALL_3
0x400224b	          0x4829da	                            sub rdx, rbx	        59	string3.h	FUNCTION_136	CALL_3
0x400224e	        0x488d341f	                    lea rsi, [rdi + rbx]	        59	string3.h	FUNCTION_136	CALL_3
0x4002252	      0xe800000000	                          call 0x4002257	        59	string3.h	FUNCTION_136	CALL_3
0x4002257	        0x48295d08	                sub qword [rbp + 8], rbx	      1721	channel.c	FUNCTION_48
0x400225b	        0x4883c408	                              add rsp, 8	      1722	channel.c	FUNCTION_48
0x400225f	              0x5b	                                 pop rbx	      1722	channel.c	FUNCTION_48
0x4002260	              0x5d	                                 pop rbp	      1722	channel.c	FUNCTION_48
0x4002261	              0xc3	                                     ret	      1722	channel.c	FUNCTION_48
channel_any_keep_open	IF,1:ELSE,0:FOR,1:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,0	19
0x40028fe	    0x488b15000000	            mov rdx, qword [0x04002905] 	      3659	channel.c	FUNCTION_85	FOR_1
0x4002905	          0x4885d2	                           test rdx, rdx	      3659	channel.c	FUNCTION_85	FOR_1
0x4002908	            0x741f	                            je 0x4002929	      3659	channel.c	FUNCTION_85	FOR_1
0x400290a	    0x8b82a4040000	           mov eax, dword [rdx + 0x4a4] 	      3660	channel.c	FUNCTION_85	FOR_1	IF_1
0x4002910	            0x85c0	                           test eax, eax	      3660	channel.c	FUNCTION_85	FOR_1	IF_1
0x4002912	            0x740b	                            je 0x400291f	      3660	channel.c	FUNCTION_85	FOR_1	IF_1
0x4002914	            0xeb19	                           jmp 0x400292f	      3660	channel.c	FUNCTION_85	FOR_1	IF_1
0x4002916	    0x83baa4040000	              cmp dword [rdx + 0x4a4], 0	      3660	channel.c	FUNCTION_85	FOR_1	IF_1
0x400291d	            0x7516	                           jne 0x4002935	      3660	channel.c	FUNCTION_85	FOR_1	IF_1
0x400291f	          0x488b12	                    mov rdx, qword [rdx]	      3659	channel.c	FUNCTION_85	FOR_1
0x4002922	          0x4885d2	                           test rdx, rdx	      3659	channel.c	FUNCTION_85	FOR_1
0x4002925	            0x75ef	                           jne 0x4002916	      3659	channel.c	FUNCTION_85	FOR_1
0x4002927	            0xf3c3	                                     ret	      3659	channel.c	FUNCTION_85	FOR_1
0x4002929	      0xb800000000	                              mov eax, 0	      3662	channel.c	FUNCTION_85
0x400292e	              0xc3	                                     ret	      3662	channel.c	FUNCTION_85
0x400292f	      0xb801000000	                              mov eax, 1	      3661	channel.c	FUNCTION_85	FOR_1	IF_1
0x4002934	              0xc3	                                     ret	      3661	channel.c	FUNCTION_85	FOR_1	IF_1
0x4002935	      0xb801000000	                              mov eax, 1	      3661	channel.c	FUNCTION_85	FOR_1	IF_1
0x400293a	              0xc3	                                     ret	      3663	channel.c	FUNCTION_85
channel_close_in	IF,0:ELSE,0:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,1	5
0x40027dd	        0x4883ec08	                              sub rsp, 8	      2956	channel.c	FUNCTION_69
0x40027e1	      0xbe03000000	                              mov esi, 3	      2957	channel.c	FUNCTION_69	CALL_1
0x40027e6	      0xe857dcffff	                  call sym.ch_close_part	      2957	channel.c	FUNCTION_69	CALL_1
0x40027eb	        0x4883c408	                              add rsp, 8	      2958	channel.c	FUNCTION_69
0x40027ef	              0xc3	                                     ret	      2958	channel.c	FUNCTION_69
channel_get_json	IF,2:ELSE,0:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,1:CALL,2	87
0x4000f7d	            0x4154	                                push r12	      2101	channel.c	FUNCTION_55
0x4000f7f	              0x55	                                push rbp	      2101	channel.c	FUNCTION_55
0x4000f80	              0x53	                                push rbx	      2101	channel.c	FUNCTION_55
0x4000f81	            0x89f0	                            mov eax, esi	      2103	channel.c	FUNCTION_55
0x4000f83	          0x4989c1	                             mov r9, rax	      2103	channel.c	FUNCTION_55
0x4000f86	        0x49c1e104	                               shl r9, 4	      2103	channel.c	FUNCTION_55
0x4000f8a	        0x48c1e008	                              shl rax, 8	      2103	channel.c	FUNCTION_55
0x4000f8e	          0x4c01c8	                             add rax, r9	      2103	channel.c	FUNCTION_55
0x4000f91	      0x488b5c0758	      mov rbx, qword [rdi + rax + 0x58] 	      2103	channel.c	FUNCTION_55
0x4000f96	          0x4885db	                           test rbx, rbx	      2105	channel.c	FUNCTION_55	WHILE_1
0x4000f99	     0xf84fa000000	                            je 0x4001099	      2105	channel.c	FUNCTION_55	WHILE_1
0x4000f9f	          0x4189f3	                           mov r11d, esi	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4000fa2	        0x49c1e308	                              shl r11, 8	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4000fa6	          0x4d01cb	                             add r11, r9	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4000fa9	          0x4901fb	                            add r11, rdi	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4000fac	          0x4c63e2	                         movsxd r12, edx	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4000faf	            0x85c9	                           test ecx, ecx	      2110	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4000fb1	            0x750a	                           jne 0x4000fbd	      2110	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4000fb3	        0x837b1800	               cmp dword [rbx + 0x18], 0	      2110	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4000fb7	     0xf85c8000000	                           jne 0x4001085	      2110	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4000fbd	          0x4c8b0b	                     mov r9, qword [rbx]	      2107	channel.c	FUNCTION_55	WHILE_1
0x4000fc0	        0x498b4108	                 mov rax, qword [r9 + 8]	      2108	channel.c	FUNCTION_55	WHILE_1
0x4000fc4	          0x488b00	                    mov rax, qword [rax]	      2108	channel.c	FUNCTION_55	WHILE_1
0x4000fc7	            0x85d2	                           test edx, edx	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4000fc9	            0x7e16	                           jle 0x4000fe1	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4000fcb	        0x83781001	               cmp dword [rax + 0x10], 1	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4000fcf	     0xf85b0000000	                           jne 0x4001085	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4000fd5	        0x4c396018	            cmp qword [rax + 0x18], r12 	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4000fd9	     0xf85a6000000	                           jne 0x4001085	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4000fdf	            0xeb1c	                           jmp 0x4000ffd	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4000fe1	        0x83781001	               cmp dword [rax + 0x10], 1	      2112	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4000fe5	            0x7516	                           jne 0x4000ffd	      2112	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4000fe7	        0x4c8b5018	            mov r10, qword [rax + 0x18] 	      2113	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4000feb	          0x4d85d2	                           test r10, r10	      2113	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4000fee	            0x740d	                            je 0x4000ffd	      2113	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4000ff0	        0x49636b70	         movsxd rbp, dword [r11 + 0x70] 	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4000ff4	          0x4939ea	                            cmp r10, rbp	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4000ff7	     0xf8488000000	                            je 0x4001085	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4000ffd	            0x89f5	                            mov ebp, esi	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4000fff	          0x4989fc	                            mov r12, rdi	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4001002	          0x4d8908	                      mov qword [r8], r9	      2116	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4001005	        0x83781001	               cmp dword [rax + 0x10], 1	      2117	channel.c	FUNCTION_55	WHILE_1	IF_1	IF_2
0x4001009	            0x7513	                           jne 0x400101e	      2117	channel.c	FUNCTION_55	WHILE_1	IF_1	IF_2
0x400100b	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2118	channel.c	FUNCTION_55	WHILE_1	IF_1	IF_2	CALL_1
0x400100f	      0xbe00000000	                              mov esi, 0	      2118	channel.c	FUNCTION_55	WHILE_1	IF_1	IF_2	CALL_1
0x4001014	      0xb800000000	                              mov eax, 0	      2118	channel.c	FUNCTION_55	WHILE_1	IF_1	IF_2	CALL_1
0x4001019	      0xe800000000	                          call 0x400101e	      2118	channel.c	FUNCTION_55	WHILE_1	IF_1	IF_2	CALL_1
0x400101e	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2074	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4001022	          0x4885c0	                           test rax, rax	      2074	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4001025	            0x751b	                           jne 0x4001042	      2074	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4001027	        0x488b5308	                mov rdx, qword [rbx + 8]	      2075	channel.c	ELSE_2	FUNCTION_54	IF_1
0x400102b	            0x89e8	                            mov eax, ebp	      2075	channel.c	ELSE_2	FUNCTION_54	IF_1
0x400102d	          0x4889c1	                            mov rcx, rax	      2075	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4001030	        0x48c1e104	                              shl rcx, 4	      2075	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4001034	        0x48c1e008	                              shl rax, 8	      2075	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4001038	          0x4801c8	                            add rax, rcx	      2075	channel.c	ELSE_2	FUNCTION_54	IF_1
0x400103b	      0x4989540458	       mov qword [r12 + rax + 0x58], rdx	      2075	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4001040	            0xeb08	                           jmp 0x400104a	      2075	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4001042	        0x488b5308	                mov rdx, qword [rbx + 8]	      2077	channel.c	ELSE_2	FUNCTION_54	ELSE_1
0x4001046	        0x48895008	                mov qword [rax + 8], rdx	      2077	channel.c	ELSE_2	FUNCTION_54	ELSE_1
0x400104a	        0x488b4308	                mov rax, qword [rbx + 8]	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x400104e	          0x4885c0	                           test rax, rax	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4001051	            0x751b	                           jne 0x400106e	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4001053	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      2079	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4001057	            0x89ee	                            mov esi, ebp	      2079	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4001059	          0x4889f0	                            mov rax, rsi	      2079	channel.c	ELSE_2	FUNCTION_54	IF_2
0x400105c	        0x48c1e004	                              shl rax, 4	      2079	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4001060	        0x48c1e608	                              shl rsi, 8	      2079	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4001064	          0x4801f0	                            add rax, rsi	      2079	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4001067	      0x4989540460	       mov qword [r12 + rax + 0x60], rdx	      2079	channel.c	ELSE_2	FUNCTION_54	IF_2
0x400106c	            0xeb08	                           jmp 0x4001076	      2079	channel.c	ELSE_2	FUNCTION_54	IF_2
0x400106e	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      2081	channel.c	FUNCTION_54	ELSE_2
0x4001072	        0x48895010	             mov qword [rax + 0x10], rdx	      2081	channel.c	FUNCTION_54	ELSE_2
0x4001076	          0x4889df	                            mov rdi, rbx	      2082	channel.c	FUNCTION_54	ELSE_2	CALL_1
0x4001079	      0xe800000000	                          call 0x400107e	      2082	channel.c	FUNCTION_54	ELSE_2	CALL_1
0x400107e	      0xb801000000	                              mov eax, 1	      2121	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4001083	            0xeb19	                           jmp 0x400109e	      2121	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4001085	        0x488b5b08	                mov rbx, qword [rbx + 8]	      2123	channel.c	FUNCTION_55	WHILE_1
0x4001089	          0x4885db	                           test rbx, rbx	      2105	channel.c	FUNCTION_55	WHILE_1
0x400108c	     0xf851dffffff	                           jne 0x4000faf	      2105	channel.c	FUNCTION_55	WHILE_1
0x4001092	      0xb800000000	                              mov eax, 0	      2125	channel.c	FUNCTION_55
0x4001097	            0xeb05	                           jmp 0x400109e	      2125	channel.c	FUNCTION_55
0x4001099	      0xb800000000	                              mov eax, 0	      2125	channel.c	FUNCTION_55
0x400109e	              0x5b	                                 pop rbx	      2126	channel.c	FUNCTION_55
0x400109f	              0x5d	                                 pop rbp	      2126	channel.c	FUNCTION_55
0x40010a0	            0x415c	                                 pop r12	      2126	channel.c	FUNCTION_55
0x40010a2	              0xc3	                                     ret	      2126	channel.c	FUNCTION_55
channel_part_info	IF,3:ELSE,3:FOR,0:SWITCH,2:functions,0:DO,0:WHILE,0:CALL,12	128
0x4002470	            0x4156	                                push r14	      2794	channel.c	FUNCTION_66
0x4002472	            0x4155	                                push r13	      2794	channel.c	FUNCTION_66
0x4002474	            0x4154	                                push r12	      2794	channel.c	FUNCTION_66
0x4002476	              0x55	                                push rbp	      2794	channel.c	FUNCTION_66
0x4002477	              0x53	                                push rbx	      2794	channel.c	FUNCTION_66
0x4002478	        0x4883ec20	                           sub rsp, 0x20	      2794	channel.c	FUNCTION_66
0x400247c	          0x4989fc	                            mov r12, rdi	      2794	channel.c	FUNCTION_66
0x400247f	          0x4889f5	                            mov rbp, rsi	      2794	channel.c	FUNCTION_66
0x4002482	          0x4889d6	                            mov rsi, rdx	      2794	channel.c	FUNCTION_66
0x4002485	            0x89cb	                            mov ebx, ecx	      2794	channel.c	FUNCTION_66
0x4002487	    0x64488b042528	                mov rax, qword fs:[0x28]	      2794	channel.c	FUNCTION_66
0x4002490	      0x4889442418	             mov qword [rsp + 0x18], rax	      2794	channel.c	FUNCTION_66
0x4002495	            0x31c0	                            xor eax, eax	      2794	channel.c	FUNCTION_66
0x4002497	      0xba04000000	                              mov edx, 4	      2801	channel.c	FUNCTION_66	CALL_1
0x400249c	          0x4889e7	                            mov rdi, rsp	      2801	channel.c	FUNCTION_66	CALL_1
0x400249f	      0xe800000000	                          call 0x40024a4	      2801	channel.c	FUNCTION_66	CALL_1
0x40024a4	      0xba14000000	                           mov edx, 0x14	       148	string3.h	FUNCTION_145	CALL_3
0x40024a9	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_145	CALL_3
0x40024ae	          0x4889e7	                            mov rdi, rsp	       148	string3.h	FUNCTION_145	CALL_3
0x40024b1	      0xe800000000	                          call 0x40024b6	       148	string3.h	FUNCTION_145	CALL_3
0x40024b6	      0xb800000000	                              mov eax, 0	      2803	channel.c	FUNCTION_66	CALL_3
0x40024bb	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2803	channel.c	FUNCTION_66	CALL_3
0x40024c2	          0x4889e7	                            mov rdi, rsp	      2803	channel.c	FUNCTION_66	CALL_3
0x40024c5	            0xf2ae	              repne scasb al, byte [rdi]	      2803	channel.c	FUNCTION_66	CALL_3
0x40024c7	          0x48f7d1	                                 not rcx	      2803	channel.c	FUNCTION_66	CALL_3
0x40024ca	      0x4c8d6c0cff	                lea r13, [rsp + rcx - 1]	      2805	channel.c	FUNCTION_66	CALL_4
0x40024cf	    0x41c745007374	            mov dword [r13], 0x74617473 	       110	string3.h	FUNCTION_141	CALL_3
0x40024d7	    0x6641c7450475	              mov word [r13 + 4], 0x7375	       110	string3.h	FUNCTION_141	CALL_3
0x40024de	      0x41c6450600	                   mov byte [r13 + 6], 0	       110	string3.h	FUNCTION_141	CALL_3
0x40024e3	            0x89d8	                            mov eax, ebx	      2806	channel.c	FUNCTION_66	IF_1
0x40024e5	          0x4889c2	                            mov rdx, rax	      2806	channel.c	FUNCTION_66	IF_1
0x40024e8	        0x48c1e204	                              shl rdx, 4	      2806	channel.c	FUNCTION_66	IF_1
0x40024ec	        0x48c1e008	                              shl rax, 8	      2806	channel.c	FUNCTION_66	IF_1
0x40024f0	          0x4801d0	                            add rax, rdx	      2806	channel.c	FUNCTION_66	IF_1
0x40024f3	      0xb900000000	                              mov ecx, 0	      2807	channel.c	FUNCTION_66	IF_1
0x40024f8	    0x41837c0418ff	cmp dword [r12 + rax + 0x18], 0xffffffffffffffff	      2806	channel.c	FUNCTION_66	IF_1
0x40024fe	            0x751a	                           jne 0x400251a	      2806	channel.c	FUNCTION_66	IF_1
0x4002500	            0x89de	                            mov esi, ebx	      2808	channel.c	FUNCTION_66	ELSE_1	IF_2	CALL_5
0x4002502	          0x4c89e7	                            mov rdi, r12	      2808	channel.c	FUNCTION_66	ELSE_1	IF_2	CALL_5
0x4002505	      0xe800000000	                          call 0x400250a	      2808	channel.c	FUNCTION_66	ELSE_1	IF_2	CALL_5
0x400250a	            0x85c0	                           test eax, eax	      2811	channel.c	FUNCTION_66	ELSE_2
0x400250c	      0xb900000000	                              mov ecx, 0	      2811	channel.c	FUNCTION_66	ELSE_2
0x4002511	      0xb800000000	                              mov eax, 0	      2811	channel.c	FUNCTION_66	ELSE_2
0x4002516	        0x480f45c8	                         cmovne rcx, rax	      2811	channel.c	FUNCTION_66	ELSE_2
0x400251a	      0xba00000000	                              mov edx, 0	      2812	channel.c	FUNCTION_66	CALL_6
0x400251f	          0x4889e6	                            mov rsi, rsp	      2812	channel.c	FUNCTION_66	CALL_6
0x4002522	          0x4889ef	                            mov rdi, rbp	      2812	channel.c	FUNCTION_66	CALL_6
0x4002525	      0xe800000000	                          call 0x400252a	      2812	channel.c	FUNCTION_66	CALL_6
0x400252a	    0x41c745006d6f	            mov dword [r13], 0x65646f6d 	       110	string3.h	FUNCTION_141	CALL_3
0x4002532	      0x41c6450400	                   mov byte [r13 + 4], 0	       110	string3.h	FUNCTION_141	CALL_3
0x4002537	            0x89d8	                            mov eax, ebx	      2815	channel.c	FUNCTION_66	SWITCH_1
0x4002539	          0x4889c2	                            mov rdx, rax	      2815	channel.c	FUNCTION_66	SWITCH_1
0x400253c	        0x48c1e204	                              shl rdx, 4	      2815	channel.c	FUNCTION_66	SWITCH_1
0x4002540	        0x48c1e008	                              shl rax, 8	      2815	channel.c	FUNCTION_66	SWITCH_1
0x4002544	          0x4801d0	                            add rax, rdx	      2815	channel.c	FUNCTION_66	SWITCH_1
0x4002547	      0x418b440420	      mov eax, dword [r12 + rax + 0x20] 	      2815	channel.c	FUNCTION_66	SWITCH_1
0x400254c	          0x83f801	                              cmp eax, 1	      2815	channel.c	FUNCTION_66	SWITCH_1
0x400254f	            0x742a	                            je 0x400257b	      2815	channel.c	FUNCTION_66	SWITCH_1
0x4002551	    0x41be00000000	                             mov r14d, 0	      2817	channel.c	FUNCTION_66	SWITCH_1
0x4002557	          0x83f801	                              cmp eax, 1	      2815	channel.c	FUNCTION_66	SWITCH_1
0x400255a	            0x7225	                            jb 0x4002581	      2815	channel.c	FUNCTION_66	SWITCH_1
0x400255c	    0x41be00000000	                             mov r14d, 0	      2819	channel.c	FUNCTION_66	SWITCH_1
0x4002562	          0x83f802	                              cmp eax, 2	      2815	channel.c	FUNCTION_66	SWITCH_1
0x4002565	            0x741a	                            je 0x4002581	      2815	channel.c	FUNCTION_66	SWITCH_1
0x4002567	          0x83f803	                              cmp eax, 3	      2799	channel.c	FUNCTION_66
0x400256a	      0xb800000000	                              mov eax, 0	      2799	channel.c	FUNCTION_66
0x400256f	    0x41be00000000	                             mov r14d, 0	      2799	channel.c	FUNCTION_66
0x4002575	        0x4c0f45f0	                         cmovne r14, rax	      2799	channel.c	FUNCTION_66
0x4002579	            0xeb06	                           jmp 0x4002581	      2799	channel.c	FUNCTION_66
0x400257b	    0x41be00000000	                             mov r14d, 0	      2818	channel.c	FUNCTION_66	SWITCH_1
0x4002581	          0x4c89f1	                            mov rcx, r14	      2822	channel.c	FUNCTION_66	CALL_8
0x4002584	      0xba00000000	                              mov edx, 0	      2822	channel.c	FUNCTION_66	CALL_8
0x4002589	          0x4889e6	                            mov rsi, rsp	      2822	channel.c	FUNCTION_66	CALL_8
0x400258c	          0x4889ef	                            mov rdi, rbp	      2822	channel.c	FUNCTION_66	CALL_8
0x400258f	      0xe800000000	                          call 0x4002594	      2822	channel.c	FUNCTION_66	CALL_8
0x4002594	    0x6641c7450069	                  mov word [r13], 0x6f69	       110	string3.h	FUNCTION_141	CALL_3
0x400259b	      0x41c6450200	                   mov byte [r13 + 2], 0	       110	string3.h	FUNCTION_141	CALL_3
0x40025a0	            0x85db	                           test ebx, ebx	      2825	channel.c	FUNCTION_66	IF_3
0x40025a2	            0x744b	                            je 0x40025ef	      2825	channel.c	FUNCTION_66	IF_3
0x40025a4	            0x89d8	                            mov eax, ebx	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40025a6	          0x4889c2	                            mov rdx, rax	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40025a9	        0x48c1e204	                              shl rdx, 4	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40025ad	        0x48c1e008	                              shl rax, 8	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40025b1	          0x4801d0	                            add rax, rdx	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40025b4	          0x4c01e0	                            add rax, r12	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40025b7	        0x83782404	               cmp dword [rax + 0x24], 4	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40025bb	            0x7738	                            ja 0x40025f5	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40025bd	          0x8b4024	            mov eax, dword [rax + 0x24] 	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40025c0	    0xff24c5000000	                       jmp qword [rax*8]	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40025c7	    0x41be00000000	                             mov r14d, 0	      2829	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40025cd	            0xeb26	                           jmp 0x40025f5	      2829	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40025cf	    0x41be00000000	                             mov r14d, 0	      2830	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40025d5	            0xeb1e	                           jmp 0x40025f5	      2830	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40025d7	    0x41be00000000	                             mov r14d, 0	      2831	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40025dd	            0xeb16	                           jmp 0x40025f5	      2831	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40025df	    0x41be00000000	                             mov r14d, 0	      2832	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40025e5	            0xeb0e	                           jmp 0x40025f5	      2832	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40025e7	    0x41be00000000	                             mov r14d, 0	      2833	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40025ed	            0xeb06	                           jmp 0x40025f5	      2833	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40025ef	    0x41be00000000	                             mov r14d, 0	      2826	channel.c	FUNCTION_66	IF_3
0x40025f5	          0x4c89f1	                            mov rcx, r14	      2835	channel.c	FUNCTION_66	CALL_10
0x40025f8	      0xba00000000	                              mov edx, 0	      2835	channel.c	FUNCTION_66	CALL_10
0x40025fd	          0x4889e6	                            mov rsi, rsp	      2835	channel.c	FUNCTION_66	CALL_10
0x4002600	          0x4889ef	                            mov rdi, rbp	      2835	channel.c	FUNCTION_66	CALL_10
0x4002603	      0xe800000000	                          call 0x4002608	      2835	channel.c	FUNCTION_66	CALL_10
0x4002608	    0x48b874696d65	            movabs rax, 0x74756f656d6974	       110	string3.h	FUNCTION_141	CALL_3
0x4002612	        0x49894500	                    mov qword [r13], rax	       110	string3.h	FUNCTION_141	CALL_3
0x4002616	            0x89db	                            mov ebx, ebx	      2838	channel.c	FUNCTION_66	CALL_12
0x4002618	          0x4889d8	                            mov rax, rbx	      2838	channel.c	FUNCTION_66	CALL_12
0x400261b	        0x48c1e004	                              shl rax, 4	      2838	channel.c	FUNCTION_66	CALL_12
0x400261f	        0x48c1e308	                              shl rbx, 8	      2838	channel.c	FUNCTION_66	CALL_12
0x4002623	          0x4801c3	                            add rbx, rax	      2838	channel.c	FUNCTION_66	CALL_12
0x4002626	      0x4963541c28	   movsxd rdx, dword [r12 + rbx + 0x28] 	      2838	channel.c	FUNCTION_66	CALL_12
0x400262b	      0xb900000000	                              mov ecx, 0	      2838	channel.c	FUNCTION_66	CALL_12
0x4002630	          0x4889e6	                            mov rsi, rsp	      2838	channel.c	FUNCTION_66	CALL_12
0x4002633	          0x4889ef	                            mov rdi, rbp	      2838	channel.c	FUNCTION_66	CALL_12
0x4002636	      0xe800000000	                          call 0x400263b	      2838	channel.c	FUNCTION_66	CALL_12
0x400263b	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2839	channel.c	FUNCTION_66
0x4002640	    0x644833042528	                xor rax, qword fs:[0x28]	      2839	channel.c	FUNCTION_66
0x4002649	            0x7405	                            je 0x4002650	      2839	channel.c	FUNCTION_66
0x400264b	      0xe800000000	                          call 0x4002650	      2839	channel.c	FUNCTION_66
0x4002650	        0x4883c420	                           add rsp, 0x20	      2839	channel.c	FUNCTION_66
0x4002654	              0x5b	                                 pop rbx	      2839	channel.c	FUNCTION_66
0x4002655	              0x5d	                                 pop rbp	      2839	channel.c	FUNCTION_66
0x4002656	            0x415c	                                 pop r12	      2839	channel.c	FUNCTION_66
0x4002658	            0x415d	                                 pop r13	      2839	channel.c	FUNCTION_66
0x400265a	            0x415e	                                 pop r14	      2839	channel.c	FUNCTION_66
0x400265c	              0xc3	                                     ret	      2839	channel.c	FUNCTION_66
job_stop	IF,7:ELSE,2:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,8	68
0x4008417	              0x55	                                push rbp	      5797	channel.c	FUNCTION_134
0x4008418	              0x53	                                push rbx	      5797	channel.c	FUNCTION_134
0x4008419	        0x4883ec08	                              sub rsp, 8	      5797	channel.c	FUNCTION_134
0x400841d	          0x4889fd	                            mov rbp, rdi	      5797	channel.c	FUNCTION_134
0x4008420	          0x4889d3	                            mov rbx, rdx	      5797	channel.c	FUNCTION_134
0x4008423	          0x4885d2	                           test rdx, rdx	      5800	channel.c	FUNCTION_134	IF_1
0x4008426	            0x7542	                           jne 0x400846a	      5800	channel.c	FUNCTION_134	IF_1
0x4008428	      0xbb00000000	                              mov ebx, 0	      5803	channel.c	FUNCTION_134	ELSE_1	IF_2
0x400842d	        0x837e1000	               cmp dword [rsi + 0x10], 0	      5802	channel.c	FUNCTION_134	ELSE_1	IF_2
0x4008431	            0x7437	                            je 0x400846a	      5802	channel.c	FUNCTION_134	ELSE_1	IF_2
0x4008433	        0x488d7e10	                   lea rdi, [rsi + 0x10]	      5806	channel.c	FUNCTION_134	ELSE_2	CALL_1
0x4008437	      0xe800000000	                          call 0x400843c	      5806	channel.c	FUNCTION_134	ELSE_2	CALL_1
0x400843c	          0x4889c3	                            mov rbx, rax	      5806	channel.c	FUNCTION_134	ELSE_2	CALL_1
0x400843f	          0x4885c0	                           test rax, rax	      5807	channel.c	FUNCTION_134	ELSE_2	IF_3
0x4008442	            0x7526	                           jne 0x400846a	      5807	channel.c	FUNCTION_134	ELSE_2	IF_3
0x4008444	      0xba05000000	                              mov edx, 5	      5809	channel.c	FUNCTION_134	ELSE_2	IF_3	CALL_3
0x4008449	      0xbe00000000	                              mov esi, 0	      5809	channel.c	FUNCTION_134	ELSE_2	IF_3	CALL_3
0x400844e	      0xbf00000000	                              mov edi, 0	      5809	channel.c	FUNCTION_134	ELSE_2	IF_3	CALL_3
0x4008453	      0xe800000000	                          call 0x4008458	      5809	channel.c	FUNCTION_134	ELSE_2	IF_3	CALL_3
0x4008458	          0x4889c7	                            mov rdi, rax	      5809	channel.c	FUNCTION_134	ELSE_2	IF_3	CALL_3
0x400845b	      0xe800000000	                          call 0x4008460	      5809	channel.c	FUNCTION_134	ELSE_2	IF_3	CALL_3
0x4008460	      0xb800000000	                              mov eax, 0	      5810	channel.c	FUNCTION_134	ELSE_2	IF_3
0x4008465	      0xe99a000000	                           jmp 0x4008504	      5810	channel.c	FUNCTION_134	ELSE_2	IF_3
0x400846a	          0x8b4528	            mov eax, dword [rbp + 0x28] 	      5813	channel.c	FUNCTION_134	IF_4
0x400846d	            0x85c0	                           test eax, eax	      5813	channel.c	FUNCTION_134	IF_4
0x400846f	            0x7515	                           jne 0x4008486	      5813	channel.c	FUNCTION_134	IF_4
0x4008471	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	      5815	channel.c	FUNCTION_134	IF_4	CALL_4
0x4008475	      0xbe00000000	                              mov esi, 0	      5815	channel.c	FUNCTION_134	IF_4	CALL_4
0x400847a	      0xe800000000	                          call 0x400847f	      5815	channel.c	FUNCTION_134	IF_4	CALL_4
0x400847f	      0xb800000000	                              mov eax, 0	      5816	channel.c	FUNCTION_134	IF_4
0x4008484	            0xeb7e	                           jmp 0x4008504	      5816	channel.c	FUNCTION_134	IF_4
0x4008486	          0x83f802	                              cmp eax, 2	      5818	channel.c	FUNCTION_134	IF_5
0x4008489	            0x751a	                           jne 0x40084a5	      5818	channel.c	FUNCTION_134	IF_5
0x400848b	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	      5820	channel.c	FUNCTION_134	IF_5	CALL_5
0x400848f	      0xbe00000000	                              mov esi, 0	      5820	channel.c	FUNCTION_134	IF_5	CALL_5
0x4008494	      0xb800000000	                              mov eax, 0	      5820	channel.c	FUNCTION_134	IF_5	CALL_5
0x4008499	      0xe800000000	                          call 0x400849e	      5820	channel.c	FUNCTION_134	IF_5	CALL_5
0x400849e	      0xb800000000	                              mov eax, 0	      5821	channel.c	FUNCTION_134	IF_5
0x40084a3	            0xeb5f	                           jmp 0x4008504	      5821	channel.c	FUNCTION_134	IF_5
0x40084a5	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	      5823	channel.c	FUNCTION_134	CALL_6
0x40084a9	          0x4889da	                            mov rdx, rbx	      5823	channel.c	FUNCTION_134	CALL_6
0x40084ac	      0xbe00000000	                              mov esi, 0	      5823	channel.c	FUNCTION_134	CALL_6
0x40084b1	      0xb800000000	                              mov eax, 0	      5823	channel.c	FUNCTION_134	CALL_6
0x40084b6	      0xe800000000	                          call 0x40084bb	      5823	channel.c	FUNCTION_134	CALL_6
0x40084bb	          0x4889de	                            mov rsi, rbx	      5824	channel.c	FUNCTION_134	IF_6	CALL_7
0x40084be	          0x4889ef	                            mov rdi, rbp	      5824	channel.c	FUNCTION_134	IF_6	CALL_7
0x40084c1	      0xe800000000	                          call 0x40084c6	      5824	channel.c	FUNCTION_134	IF_6	CALL_7
0x40084c6	            0x85c0	                           test eax, eax	      5824	channel.c	FUNCTION_134	IF_6	CALL_7
0x40084c8	            0x743a	                            je 0x4008504	      5824	channel.c	FUNCTION_134	IF_6	CALL_7
0x40084ca	        0x488b5560	            mov rdx, qword [rbp + 0x60] 	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x40084ce	          0x4885d2	                           test rdx, rdx	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x40084d1	            0x742c	                            je 0x40084ff	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x40084d3	      0xbf00000000	                              mov edi, 0	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x40084d8	      0xb905000000	                              mov ecx, 5	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x40084dd	          0x4889de	                            mov rsi, rbx	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x40084e0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x40084e2	        0x400f97c6	                                seta sil	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x40084e6	           0xf92c1	                                 setb cl	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x40084e9	      0xb801000000	                              mov eax, 1	      5833	channel.c	FUNCTION_134
0x40084ee	          0x4038ce	                             cmp sil, cl	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x40084f1	            0x7511	                           jne 0x4008504	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x40084f3	    0xc782b0040000	              mov dword [rdx + 0x4b0], 1	      5829	channel.c	FUNCTION_134	IF_7
0x40084fd	            0xeb05	                           jmp 0x4008504	      5829	channel.c	FUNCTION_134	IF_7
0x40084ff	      0xb801000000	                              mov eax, 1	      5833	channel.c	FUNCTION_134
0x4008504	        0x4883c408	                              add rsp, 8	      5834	channel.c	FUNCTION_134
0x4008508	              0x5b	                                 pop rbx	      5834	channel.c	FUNCTION_134
0x4008509	              0x5d	                                 pop rbp	      5834	channel.c	FUNCTION_134
0x400850a	              0xc3	                                     ret	      5834	channel.c	FUNCTION_134
ch_logfile	IF,4:ELSE,0:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,5	41
0x4000a70	              0x55	                                push rbp	       108	channel.c	FUNCTION_1
0x4000a71	              0x53	                                push rbx	       108	channel.c	FUNCTION_1
0x4000a72	        0x4883ec08	                              sub rsp, 8	       108	channel.c	FUNCTION_1
0x4000a76	          0x4889fb	                            mov rbx, rdi	       108	channel.c	FUNCTION_1
0x4000a79	          0x4889f5	                            mov rbp, rsi	       108	channel.c	FUNCTION_1
0x4000a7c	    0x488b3d000000	            mov rdi, qword [0x04000a83] 	       111	channel.c	FUNCTION_1	IF_1
0x4000a83	          0x4885ff	                           test rdi, rdi	       111	channel.c	FUNCTION_1	IF_1
0x4000a86	            0x7405	                            je 0x4000a8d	       111	channel.c	FUNCTION_1	IF_1
0x4000a88	      0xe800000000	                          call 0x4000a8d	       112	channel.c	FUNCTION_1	CALL_1
0x4000a8d	          0x803b00	                       cmp byte [rbx], 0	       114	channel.c	FUNCTION_1	IF_2
0x4000a90	            0x746a	                            je 0x4000afc	       114	channel.c	FUNCTION_1	IF_2
0x4000a92	        0x807d0077	                    cmp byte [rbp], 0x77	       116	channel.c	FUNCTION_1	IF_2	CALL_2
0x4000a96	      0xbe00000000	                              mov esi, 0	       116	channel.c	FUNCTION_1	IF_2	CALL_2
0x4000a9b	      0xb800000000	                              mov eax, 0	       116	channel.c	FUNCTION_1	IF_2	CALL_2
0x4000aa0	        0x480f44f0	                          cmove rsi, rax	       116	channel.c	FUNCTION_1	IF_2	CALL_2
0x4000aa4	          0x4889df	                            mov rdi, rbx	       116	channel.c	FUNCTION_1	IF_2	CALL_2
0x4000aa7	      0xe800000000	                          call 0x4000aac	       116	channel.c	FUNCTION_1	IF_2	CALL_2
0x4000aac	          0x4889c1	                            mov rcx, rax	       116	channel.c	FUNCTION_1	IF_2	CALL_2
0x4000aaf	          0x4885c0	                           test rax, rax	       117	channel.c	FUNCTION_1	IF_2	IF_3
0x4000ab2	            0x7521	                           jne 0x4000ad5	       117	channel.c	FUNCTION_1	IF_2	IF_3
0x4000ab4	      0xba05000000	                              mov edx, 5	       119	channel.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4000ab9	      0xbe00000000	                              mov esi, 0	       119	channel.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4000abe	      0xbf00000000	                              mov edi, 0	       119	channel.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4000ac3	      0xe800000000	                          call 0x4000ac8	       119	channel.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4000ac8	          0x4889de	                            mov rsi, rbx	       119	channel.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4000acb	          0x4889c7	                            mov rdi, rax	       119	channel.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4000ace	      0xe800000000	                          call 0x4000ad3	       119	channel.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4000ad3	            0xeb32	                           jmp 0x4000b07	       120	channel.c	FUNCTION_1	IF_2	IF_3
0x4000ad5	    0x488905000000	            mov qword [0x04000adc], rax 	       123	channel.c	FUNCTION_1
0x4000adc	      0xba1c000000	                           mov edx, 0x1c	        97	stdio2.h	CALL_20
0x4000ae1	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_20
0x4000ae6	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_20
0x4000aeb	      0xe800000000	                          call 0x4000af0	        97	stdio2.h	CALL_20
0x4000af0	      0xbf00000000	                              mov edi, 0	       129	channel.c	FUNCTION_1	IF_4	CALL_5
0x4000af5	      0xe800000000	                          call 0x4000afa	       129	channel.c	FUNCTION_1	IF_4	CALL_5
0x4000afa	            0xeb0b	                           jmp 0x4000b07	       129	channel.c	FUNCTION_1	IF_4	CALL_5
0x4000afc	    0x48c705000000	               mov qword [0x04000b07], 0	       123	channel.c	FUNCTION_1
0x4000b07	        0x4883c408	                              add rsp, 8	       132	channel.c	FUNCTION_1
0x4000b0b	              0x5b	                                 pop rbx	       132	channel.c	FUNCTION_1
0x4000b0c	              0x5d	                                 pop rbp	       132	channel.c	FUNCTION_1
0x4000b0d	              0xc3	                                     ret	       132	channel.c	FUNCTION_1
channel_has_readahead	IF,1:ELSE,0:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,1	25
0x4002421	            0x89f0	                            mov eax, esi	      2737	channel.c	FUNCTION_64
0x4002423	          0x4889c2	                            mov rdx, rax	      2737	channel.c	FUNCTION_64
0x4002426	        0x48c1e204	                              shl rdx, 4	      2737	channel.c	FUNCTION_64
0x400242a	        0x48c1e008	                              shl rax, 8	      2737	channel.c	FUNCTION_64
0x400242e	          0x4801d0	                            add rax, rdx	      2737	channel.c	FUNCTION_64
0x4002431	        0x8b440720	      mov eax, dword [rdi + rax + 0x20] 	      2739	channel.c	FUNCTION_64	IF_1
0x4002435	          0x83e802	                              sub eax, 2	      2739	channel.c	FUNCTION_64	IF_1
0x4002438	          0x83f801	                              cmp eax, 1	      2739	channel.c	FUNCTION_64	IF_1
0x400243b	            0x7716	                            ja 0x4002453	      2739	channel.c	FUNCTION_64	IF_1
0x400243d	            0x89f6	                            mov esi, esi	      2742	channel.c	FUNCTION_64	IF_1
0x400243f	        0x48c1e608	                              shl rsi, 8	      2742	channel.c	FUNCTION_64	IF_1
0x4002443	          0x4801d6	                            add rsi, rdx	      2742	channel.c	FUNCTION_64	IF_1
0x4002446	    0x48837c375800	         cmp qword [rdi + rsi + 0x58], 0	      2744	channel.c	FUNCTION_64	IF_1
0x400244c	           0xf95c0	                                setne al	      2744	channel.c	FUNCTION_64	IF_1
0x400244f	           0xfb6c0	                           movzx eax, al	      2744	channel.c	FUNCTION_64	IF_1
0x4002452	              0xc3	                                     ret	      2744	channel.c	FUNCTION_64	IF_1
0x4002453	            0x89f6	                            mov esi, esi	      1615	channel.c	FUNCTION_44
0x4002455	          0x4889f0	                            mov rax, rsi	      1615	channel.c	FUNCTION_44
0x4002458	        0x48c1e004	                              shl rax, 4	      1615	channel.c	FUNCTION_44
0x400245c	        0x48c1e608	                              shl rsi, 8	      1615	channel.c	FUNCTION_44
0x4002460	          0x4801c6	                            add rsi, rax	      1615	channel.c	FUNCTION_44
0x4002463	    0x48837c374000	         cmp qword [rdi + rsi + 0x40], 0	      2746	channel.c	FUNCTION_64	CALL_1
0x4002469	           0xf95c0	                                setne al	      2746	channel.c	FUNCTION_64	CALL_1
0x400246c	           0xfb6c0	                           movzx eax, al	      2746	channel.c	FUNCTION_64	CALL_1
0x400246f	              0xc3	                                     ret	      2747	channel.c	FUNCTION_64
channel_open_func	IF,6:ELSE,0:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,16	110
0x4006d2d	            0x4155	                                push r13	       927	channel.c	FUNCTION_28
0x4006d2f	            0x4154	                                push r12	       927	channel.c	FUNCTION_28
0x4006d31	              0x55	                                push rbp	       927	channel.c	FUNCTION_28
0x4006d32	              0x53	                                push rbx	       927	channel.c	FUNCTION_28
0x4006d33	    0x4881ec980300	                          sub rsp, 0x398	       927	channel.c	FUNCTION_28
0x4006d3a	          0x4889fb	                            mov rbx, rdi	       927	channel.c	FUNCTION_28
0x4006d3d	    0x64488b042528	                mov rax, qword fs:[0x28]	       927	channel.c	FUNCTION_28
0x4006d46	    0x488984248803	            mov qword [rsp + 0x388], rax	       927	channel.c	FUNCTION_28
0x4006d4e	            0x31c0	                            xor eax, eax	       927	channel.c	FUNCTION_28
0x4006d50	      0xe800000000	                          call 0x4006d55	       935	channel.c	FUNCTION_28	CALL_1
0x4006d55	          0x4989c4	                            mov r12, rax	       935	channel.c	FUNCTION_28	CALL_1
0x4006d58	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       936	channel.c	FUNCTION_28	IF_1
0x4006d5b	            0x85c0	                           test eax, eax	       936	channel.c	FUNCTION_28	IF_1
0x4006d5d	            0x7432	                            je 0x4006d91	       936	channel.c	FUNCTION_28	IF_1
0x4006d5f	          0x83f806	                              cmp eax, 6	       937	channel.c	FUNCTION_28	IF_1
0x4006d62	            0x7507	                           jne 0x4006d6b	       937	channel.c	FUNCTION_28	IF_1
0x4006d64	      0x48837b1800	               cmp qword [rbx + 0x18], 0	       937	channel.c	FUNCTION_28	IF_1
0x4006d69	            0x7526	                           jne 0x4006d91	       937	channel.c	FUNCTION_28	IF_1
0x4006d6b	      0xba05000000	                              mov edx, 5	       939	channel.c	FUNCTION_28	IF_1	CALL_3
0x4006d70	      0xbe00000000	                              mov esi, 0	       939	channel.c	FUNCTION_28	IF_1	CALL_3
0x4006d75	      0xbf00000000	                              mov edi, 0	       939	channel.c	FUNCTION_28	IF_1	CALL_3
0x4006d7a	      0xe800000000	                          call 0x4006d7f	       939	channel.c	FUNCTION_28	IF_1	CALL_3
0x4006d7f	          0x4889c7	                            mov rdi, rax	       939	channel.c	FUNCTION_28	IF_1	CALL_3
0x4006d82	      0xe800000000	                          call 0x4006d87	       939	channel.c	FUNCTION_28	IF_1	CALL_3
0x4006d87	      0xb800000000	                              mov eax, 0	       940	channel.c	FUNCTION_28	IF_1
0x4006d8c	      0xe940010000	                           jmp 0x4006ed1	       940	channel.c	FUNCTION_28	IF_1
0x4006d91	      0xbe3a000000	                           mov esi, 0x3a	       944	channel.c	FUNCTION_28	CALL_4
0x4006d96	          0x4c89e7	                            mov rdi, r12	       944	channel.c	FUNCTION_28	CALL_4
0x4006d99	      0xe800000000	                          call 0x4006d9e	       944	channel.c	FUNCTION_28	CALL_4
0x4006d9e	          0x4889c5	                            mov rbp, rax	       944	channel.c	FUNCTION_28	CALL_4
0x4006da1	          0x4885c0	                           test rax, rax	       945	channel.c	FUNCTION_28	IF_2
0x4006da4	            0x7529	                           jne 0x4006dcf	       945	channel.c	FUNCTION_28	IF_2
0x4006da6	      0xba05000000	                              mov edx, 5	       947	channel.c	FUNCTION_28	IF_2	CALL_6
0x4006dab	      0xbe00000000	                              mov esi, 0	       947	channel.c	FUNCTION_28	IF_2	CALL_6
0x4006db0	      0xbf00000000	                              mov edi, 0	       947	channel.c	FUNCTION_28	IF_2	CALL_6
0x4006db5	      0xe800000000	                          call 0x4006dba	       947	channel.c	FUNCTION_28	IF_2	CALL_6
0x4006dba	          0x4c89e6	                            mov rsi, r12	       947	channel.c	FUNCTION_28	IF_2	CALL_6
0x4006dbd	          0x4889c7	                            mov rdi, rax	       947	channel.c	FUNCTION_28	IF_2	CALL_6
0x4006dc0	      0xe800000000	                          call 0x4006dc5	       947	channel.c	FUNCTION_28	IF_2	CALL_6
0x4006dc5	      0xb800000000	                              mov eax, 0	       948	channel.c	FUNCTION_28	IF_2
0x4006dca	      0xe902010000	                           jmp 0x4006ed1	       948	channel.c	FUNCTION_28	IF_2
0x4006dcf	          0xc60000	                       mov byte [rax], 0	       950	channel.c	FUNCTION_28
0x4006dd2	        0x488d7801	                      lea rdi, [rax + 1]	       951	channel.c	FUNCTION_28	CALL_7
0x4006dd6	      0xba0a000000	                            mov edx, 0xa	       951	channel.c	FUNCTION_28	CALL_7
0x4006ddb	      0x488d742408	                      lea rsi, [rsp + 8]	       951	channel.c	FUNCTION_28	CALL_7
0x4006de0	      0xe800000000	                          call 0x4006de5	       951	channel.c	FUNCTION_28	CALL_7
0x4006de5	          0x4989c5	                            mov r13, rax	       951	channel.c	FUNCTION_28	CALL_7
0x4006de8	      0x41803c2400	                       cmp byte [r12], 0	       952	channel.c	FUNCTION_28	IF_3
0x4006ded	            0x740e	                            je 0x4006dfd	       952	channel.c	FUNCTION_28	IF_3
0x4006def	            0x85c0	                           test eax, eax	       952	channel.c	FUNCTION_28	IF_3
0x4006df1	            0x7e0a	                           jle 0x4006dfd	       952	channel.c	FUNCTION_28	IF_3
0x4006df3	      0x488b442408	                mov rax, qword [rsp + 8]	       952	channel.c	FUNCTION_28	IF_3
0x4006df8	          0x803800	                       cmp byte [rax], 0	       952	channel.c	FUNCTION_28	IF_3
0x4006dfb	            0x742d	                            je 0x4006e2a	       952	channel.c	FUNCTION_28	IF_3
0x4006dfd	        0xc645003a	                    mov byte [rbp], 0x3a	       954	channel.c	FUNCTION_28	IF_3
0x4006e01	      0xba05000000	                              mov edx, 5	       955	channel.c	FUNCTION_28	IF_3	CALL_9
0x4006e06	      0xbe00000000	                              mov esi, 0	       955	channel.c	FUNCTION_28	IF_3	CALL_9
0x4006e0b	      0xbf00000000	                              mov edi, 0	       955	channel.c	FUNCTION_28	IF_3	CALL_9
0x4006e10	      0xe800000000	                          call 0x4006e15	       955	channel.c	FUNCTION_28	IF_3	CALL_9
0x4006e15	          0x4c89e6	                            mov rsi, r12	       955	channel.c	FUNCTION_28	IF_3	CALL_9
0x4006e18	          0x4889c7	                            mov rdi, rax	       955	channel.c	FUNCTION_28	IF_3	CALL_9
0x4006e1b	      0xe800000000	                          call 0x4006e20	       955	channel.c	FUNCTION_28	IF_3	CALL_9
0x4006e20	      0xb800000000	                              mov eax, 0	       956	channel.c	FUNCTION_28	IF_3
0x4006e25	      0xe9a7000000	                           jmp 0x4006ed1	       956	channel.c	FUNCTION_28	IF_3
0x4006e2a	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       960	channel.c	FUNCTION_28	CALL_10
0x4006e2f	      0xe800000000	                          call 0x4006e34	       960	channel.c	FUNCTION_28	CALL_10
0x4006e34	    0xc74424180200	               mov dword [rsp + 0x18], 2	       961	channel.c	FUNCTION_28
0x4006e3c	    0xc78424080200	         mov dword [rsp + 0x208], 0x7d0 	       962	channel.c	FUNCTION_28
0x4006e47	        0x488d7b10	                   lea rdi, [rbx + 0x10]	       963	channel.c	FUNCTION_28	IF_4	CALL_11
0x4006e4b	      0xb900000000	                              mov ecx, 0	       963	channel.c	FUNCTION_28	IF_4	CALL_11
0x4006e50	      0xbaff0f0000	                          mov edx, 0xfff	       963	channel.c	FUNCTION_28	IF_4	CALL_11
0x4006e55	      0x488d742410	                   lea rsi, [rsp + 0x10]	       963	channel.c	FUNCTION_28	IF_4	CALL_11
0x4006e5a	      0xe800000000	                          call 0x4006e5f	       963	channel.c	FUNCTION_28	IF_4	CALL_11
0x4006e5f	      0xbb00000000	                              mov ebx, 0	       933	channel.c	FUNCTION_28
0x4006e64	            0x85c0	                           test eax, eax	       963	channel.c	FUNCTION_28	IF_4	CALL_11
0x4006e66	            0x745c	                            je 0x4006ec4	       963	channel.c	FUNCTION_28	IF_4	CALL_11
0x4006e68	    0x83bc24080200	              cmp dword [rsp + 0x208], 0	       966	channel.c	FUNCTION_28	IF_5
0x4006e70	            0x791e	                           jns 0x4006e90	       966	channel.c	FUNCTION_28	IF_5
0x4006e72	      0xba05000000	                              mov edx, 5	       968	channel.c	FUNCTION_28	IF_5	CALL_13
0x4006e77	      0xbe00000000	                              mov esi, 0	       968	channel.c	FUNCTION_28	IF_5	CALL_13
0x4006e7c	      0xbf00000000	                              mov edi, 0	       968	channel.c	FUNCTION_28	IF_5	CALL_13
0x4006e81	      0xe800000000	                          call 0x4006e86	       968	channel.c	FUNCTION_28	IF_5	CALL_13
0x4006e86	          0x4889c7	                            mov rdi, rax	       968	channel.c	FUNCTION_28	IF_5	CALL_13
0x4006e89	      0xe800000000	                          call 0x4006e8e	       968	channel.c	FUNCTION_28	IF_5	CALL_13
0x4006e8e	            0xeb34	                           jmp 0x4006ec4	       969	channel.c	FUNCTION_28	IF_5
0x4006e90	      0xb900000000	                              mov ecx, 0	       972	channel.c	FUNCTION_28	CALL_14
0x4006e95	    0x8b9424040200	           mov edx, dword [rsp + 0x204] 	       972	channel.c	FUNCTION_28	CALL_14
0x4006e9c	          0x4489ee	                           mov esi, r13d	       972	channel.c	FUNCTION_28	CALL_14
0x4006e9f	          0x4c89e7	                            mov rdi, r12	       972	channel.c	FUNCTION_28	CALL_14
0x4006ea2	      0xe800000000	                          call 0x4006ea7	       972	channel.c	FUNCTION_28	CALL_14
0x4006ea7	          0x4889c3	                            mov rbx, rax	       972	channel.c	FUNCTION_28	CALL_14
0x4006eaa	          0x4885c0	                           test rax, rax	       973	channel.c	FUNCTION_28	IF_6
0x4006ead	            0x7415	                            je 0x4006ec4	       973	channel.c	FUNCTION_28	IF_6
0x4006eaf	    0xc7442410ffff	     mov dword [rsp + 0x10], 0x7fffffff 	       975	channel.c	FUNCTION_28	IF_6
0x4006eb7	      0x488d742410	                   lea rsi, [rsp + 0x10]	       976	channel.c	FUNCTION_28	IF_6	CALL_15
0x4006ebc	          0x4889c7	                            mov rdi, rax	       976	channel.c	FUNCTION_28	IF_6	CALL_15
0x4006ebf	      0xe800000000	                          call 0x4006ec4	       976	channel.c	FUNCTION_28	IF_6	CALL_15
0x4006ec4	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       979	channel.c	FUNCTION_28	CALL_16
0x4006ec9	      0xe800000000	                          call 0x4006ece	       979	channel.c	FUNCTION_28	CALL_16
0x4006ece	          0x4889d8	                            mov rax, rbx	       980	channel.c	FUNCTION_28
0x4006ed1	    0x488b8c248803	           mov rcx, qword [rsp + 0x388] 	       981	channel.c	FUNCTION_28
0x4006ed9	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       981	channel.c	FUNCTION_28
0x4006ee2	            0x7405	                            je 0x4006ee9	       981	channel.c	FUNCTION_28
0x4006ee4	      0xe800000000	                          call 0x4006ee9	       981	channel.c	FUNCTION_28
0x4006ee9	    0x4881c4980300	                          add rsp, 0x398	       981	channel.c	FUNCTION_28
0x4006ef0	              0x5b	                                 pop rbx	       981	channel.c	FUNCTION_28
0x4006ef1	              0x5d	                                 pop rbp	       981	channel.c	FUNCTION_28
0x4006ef2	            0x415c	                                 pop r12	       981	channel.c	FUNCTION_28
0x4006ef4	            0x415d	                                 pop r13	       981	channel.c	FUNCTION_28
0x4006ef6	              0xc3	                                     ret	       981	channel.c	FUNCTION_28
channel_set_pipes	IF,4:ELSE,0:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,8	51
0x4001293	            0x4155	                                push r13	      1016	channel.c	FUNCTION_30
0x4001295	            0x4154	                                push r12	      1016	channel.c	FUNCTION_30
0x4001297	              0x55	                                push rbp	      1016	channel.c	FUNCTION_30
0x4001298	              0x53	                                push rbx	      1016	channel.c	FUNCTION_30
0x4001299	        0x4883ec08	                              sub rsp, 8	      1016	channel.c	FUNCTION_30
0x400129d	          0x4889fb	                            mov rbx, rdi	      1016	channel.c	FUNCTION_30
0x40012a0	          0x4189d5	                           mov r13d, edx	      1016	channel.c	FUNCTION_30
0x40012a3	          0x4189cc	                           mov r12d, ecx	      1016	channel.c	FUNCTION_30
0x40012a6	          0x83feff	             cmp esi, 0xffffffffffffffff	      1017	channel.c	FUNCTION_30	IF_1
0x40012a9	            0x7424	                            je 0x40012cf	      1017	channel.c	FUNCTION_30	IF_1
0x40012ab	            0x89f5	                            mov ebp, esi	      1017	channel.c	FUNCTION_30	IF_1
0x40012ad	      0xbe03000000	                              mov esi, 3	      1019	channel.c	FUNCTION_30	IF_1	CALL_1
0x40012b2	      0xe88bf1ffff	                  call sym.ch_close_part	      1019	channel.c	FUNCTION_30	IF_1	CALL_1
0x40012b7	    0x89ab48030000	            mov dword [rbx + 0x348], ebp	      1020	channel.c	FUNCTION_30	IF_1
0x40012bd	            0x89ef	                            mov edi, ebp	      1024	channel.c	FUNCTION_30	IF_1	IF_2	CALL_2
0x40012bf	      0xe800000000	                          call 0x40012c4	      1024	channel.c	FUNCTION_30	IF_1	IF_2	CALL_2
0x40012c4	            0x85c0	                           test eax, eax	      1024	channel.c	FUNCTION_30	IF_1	IF_2	CALL_2
0x40012c6	            0x7407	                            je 0x40012cf	      1024	channel.c	FUNCTION_30	IF_1	IF_2	CALL_2
0x40012c8	    0x838b6c040000	               or dword [rbx + 0x46c], 8	      1025	channel.c	FUNCTION_30	IF_1	IF_2
0x40012cf	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	      1028	channel.c	FUNCTION_30	IF_3
0x40012d3	            0x7435	                            je 0x400130a	      1028	channel.c	FUNCTION_30	IF_3
0x40012d5	      0xbe01000000	                              mov esi, 1	      1031	channel.c	FUNCTION_30	IF_3	CALL_3
0x40012da	          0x4889df	                            mov rdi, rbx	      1031	channel.c	FUNCTION_30	IF_3	CALL_3
0x40012dd	      0xe8b8f9ffff	     call sym.channel_gui_unregister_one	      1031	channel.c	FUNCTION_30	IF_3	CALL_3
0x40012e2	      0xbe01000000	                              mov esi, 1	      1033	channel.c	FUNCTION_30	IF_3	CALL_4
0x40012e7	          0x4889df	                            mov rdi, rbx	      1033	channel.c	FUNCTION_30	IF_3	CALL_4
0x40012ea	      0xe853f1ffff	                  call sym.ch_close_part	      1033	channel.c	FUNCTION_30	IF_3	CALL_4
0x40012ef	    0x4489ab280100	           mov dword [rbx + 0x128], r13d	      1034	channel.c	FUNCTION_30	IF_3
0x40012f6	    0x838b6c040000	               or dword [rbx + 0x46c], 2	      1035	channel.c	FUNCTION_30	IF_3
0x40012fd	      0xbe01000000	                              mov esi, 1	      1037	channel.c	FUNCTION_30	IF_3	CALL_5
0x4001302	          0x4889df	                            mov rdi, rbx	      1037	channel.c	FUNCTION_30	IF_3	CALL_5
0x4001305	      0xe816f9ffff	       call sym.channel_gui_register_one	      1037	channel.c	FUNCTION_30	IF_3	CALL_5
0x400130a	        0x4183fcff	            cmp r12d, 0xffffffffffffffff	      1040	channel.c	FUNCTION_30	IF_4
0x400130e	            0x7435	                            je 0x4001345	      1040	channel.c	FUNCTION_30	IF_4
0x4001310	      0xbe02000000	                              mov esi, 2	      1043	channel.c	FUNCTION_30	IF_4	CALL_6
0x4001315	          0x4889df	                            mov rdi, rbx	      1043	channel.c	FUNCTION_30	IF_4	CALL_6
0x4001318	      0xe87df9ffff	     call sym.channel_gui_unregister_one	      1043	channel.c	FUNCTION_30	IF_4	CALL_6
0x400131d	      0xbe02000000	                              mov esi, 2	      1045	channel.c	FUNCTION_30	IF_4	CALL_7
0x4001322	          0x4889df	                            mov rdi, rbx	      1045	channel.c	FUNCTION_30	IF_4	CALL_7
0x4001325	      0xe818f1ffff	                  call sym.ch_close_part	      1045	channel.c	FUNCTION_30	IF_4	CALL_7
0x400132a	    0x4489a3380200	           mov dword [rbx + 0x238], r12d	      1046	channel.c	FUNCTION_30	IF_4
0x4001331	    0x838b6c040000	               or dword [rbx + 0x46c], 4	      1047	channel.c	FUNCTION_30	IF_4
0x4001338	      0xbe02000000	                              mov esi, 2	      1049	channel.c	FUNCTION_30	IF_4	CALL_8
0x400133d	          0x4889df	                            mov rdi, rbx	      1049	channel.c	FUNCTION_30	IF_4	CALL_8
0x4001340	      0xe8dbf8ffff	       call sym.channel_gui_register_one	      1049	channel.c	FUNCTION_30	IF_4	CALL_8
0x4001345	        0x4883c408	                              add rsp, 8	      1052	channel.c	FUNCTION_30
0x4001349	              0x5b	                                 pop rbx	      1052	channel.c	FUNCTION_30
0x400134a	              0x5d	                                 pop rbp	      1052	channel.c	FUNCTION_30
0x400134b	            0x415c	                                 pop r12	      1052	channel.c	FUNCTION_30
0x400134d	            0x415d	                                 pop r13	      1052	channel.c	FUNCTION_30
0x400134f	              0xc3	                                     ret	      1052	channel.c	FUNCTION_30
channel_get	IF,2:ELSE,1:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,1	31
0x40019a9	            0x89f0	                            mov eax, esi	      1644	channel.c	FUNCTION_46
0x40019ab	          0x4889c2	                            mov rdx, rax	      1644	channel.c	FUNCTION_46
0x40019ae	        0x48c1e204	                              shl rdx, 4	      1644	channel.c	FUNCTION_46
0x40019b2	        0x48c1e008	                              shl rax, 8	      1644	channel.c	FUNCTION_46
0x40019b6	          0x4801d0	                            add rax, rdx	      1644	channel.c	FUNCTION_46
0x40019b9	      0x488b4c0740	      mov rcx, qword [rdi + rax + 0x40] 	      1644	channel.c	FUNCTION_46
0x40019be	          0x4885c9	                           test rcx, rcx	      1647	channel.c	FUNCTION_46	IF_1
0x40019c1	            0x7446	                            je 0x4001a09	      1647	channel.c	FUNCTION_46	IF_1
0x40019c3	              0x53	                                push rbx	      1642	channel.c	FUNCTION_46
0x40019c4	          0x488b19	                    mov rbx, qword [rcx]	      1650	channel.c	FUNCTION_46
0x40019c7	        0x488b4110	            mov rax, qword [rcx + 0x10] 	      1651	channel.c	FUNCTION_46
0x40019cb	            0x89f2	                            mov edx, esi	      1651	channel.c	FUNCTION_46
0x40019cd	          0x4989d0	                             mov r8, rdx	      1651	channel.c	FUNCTION_46
0x40019d0	        0x49c1e004	                               shl r8, 4	      1651	channel.c	FUNCTION_46
0x40019d4	        0x48c1e208	                              shl rdx, 8	      1651	channel.c	FUNCTION_46
0x40019d8	          0x4c01c2	                             add rdx, r8	      1651	channel.c	FUNCTION_46
0x40019db	      0x4889441740	       mov qword [rdi + rdx + 0x40], rax	      1651	channel.c	FUNCTION_46
0x40019e0	        0x488b4110	            mov rax, qword [rcx + 0x10] 	      1652	channel.c	FUNCTION_46	IF_2
0x40019e4	          0x4885c0	                           test rax, rax	      1652	channel.c	FUNCTION_46	IF_2
0x40019e7	            0x750b	                           jne 0x40019f4	      1652	channel.c	FUNCTION_46	IF_2
0x40019e9	    0x48c744174800	         mov qword [rdi + rdx + 0x48], 0	      1653	channel.c	FUNCTION_46	IF_2
0x40019f2	            0xeb08	                           jmp 0x40019fc	      1653	channel.c	FUNCTION_46	IF_2
0x40019f4	    0x48c740180000	               mov qword [rax + 0x18], 0	      1655	channel.c	FUNCTION_46	ELSE_1
0x40019fc	          0x4889cf	                            mov rdi, rcx	      1656	channel.c	FUNCTION_46	CALL_1
0x40019ff	      0xe800000000	                          call 0x4001a04	      1656	channel.c	FUNCTION_46	CALL_1
0x4001a04	          0x4889d8	                            mov rax, rbx	      1657	channel.c	FUNCTION_46
0x4001a07	            0xeb06	                           jmp 0x4001a0f	      1657	channel.c	FUNCTION_46
0x4001a09	      0xb800000000	                              mov eax, 0	      1648	channel.c	FUNCTION_46	IF_1
0x4001a0e	              0xc3	                                     ret	      1648	channel.c	FUNCTION_46	IF_1
0x4001a0f	              0x5b	                                 pop rbx	      1658	channel.c	FUNCTION_46
0x4001a10	              0xc3	                                     ret	      1658	channel.c	FUNCTION_46
channel_gui_register_all	IF,0:ELSE,0:FOR,1:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,1	32
0x4001227	              0x53	                                push rbx	       595	channel.c	FUNCTION_24
0x4001228	    0x488b1d000000	            mov rbx, qword [0x0400122f] 	       598	channel.c	FUNCTION_24	FOR_1
0x400122f	          0x4885db	                           test rbx, rbx	       598	channel.c	FUNCTION_24	FOR_1
0x4001232	            0x745d	                            je 0x4001291	       598	channel.c	FUNCTION_24	FOR_1
0x4001234	        0x837b18ff	cmp dword [rbx + 0x18], 0xffffffffffffffff	       578	channel.c	FUNCTION_23	IF_1
0x4001238	            0x740d	                            je 0x4001247	       578	channel.c	FUNCTION_23	IF_1
0x400123a	      0xbe00000000	                              mov esi, 0	       579	channel.c	FUNCTION_23	CALL_1
0x400123f	          0x4889df	                            mov rdi, rbx	       579	channel.c	FUNCTION_23	CALL_1
0x4001242	      0xe8d9f9ffff	       call sym.channel_gui_register_one	       579	channel.c	FUNCTION_23	CALL_1
0x4001247	    0x8b8328010000	           mov eax, dword [rbx + 0x128] 	       580	channel.c	FUNCTION_23	IF_2
0x400124d	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       580	channel.c	FUNCTION_23	IF_2
0x4001250	            0x7412	                            je 0x4001264	       580	channel.c	FUNCTION_23	IF_2
0x4001252	          0x3b4318	            cmp eax, dword [rbx + 0x18] 	       581	channel.c	FUNCTION_23	IF_2
0x4001255	            0x740d	                            je 0x4001264	       581	channel.c	FUNCTION_23	IF_2
0x4001257	      0xbe01000000	                              mov esi, 1	       582	channel.c	FUNCTION_23	CALL_2
0x400125c	          0x4889df	                            mov rdi, rbx	       582	channel.c	FUNCTION_23	CALL_2
0x400125f	      0xe8bcf9ffff	       call sym.channel_gui_register_one	       582	channel.c	FUNCTION_23	CALL_2
0x4001264	    0x8b8338020000	           mov eax, dword [rbx + 0x238] 	       583	channel.c	FUNCTION_23	IF_3
0x400126a	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       583	channel.c	FUNCTION_23	IF_3
0x400126d	            0x741a	                            je 0x4001289	       583	channel.c	FUNCTION_23	IF_3
0x400126f	          0x3b4318	            cmp eax, dword [rbx + 0x18] 	       584	channel.c	FUNCTION_23	IF_3
0x4001272	            0x7415	                            je 0x4001289	       584	channel.c	FUNCTION_23	IF_3
0x4001274	    0x3b8328010000	           cmp eax, dword [rbx + 0x128] 	       585	channel.c	FUNCTION_23	IF_3
0x400127a	            0x740d	                            je 0x4001289	       585	channel.c	FUNCTION_23	IF_3
0x400127c	      0xbe02000000	                              mov esi, 2	       586	channel.c	FUNCTION_23	CALL_3
0x4001281	          0x4889df	                            mov rdi, rbx	       586	channel.c	FUNCTION_23	CALL_3
0x4001284	      0xe897f9ffff	       call sym.channel_gui_register_one	       586	channel.c	FUNCTION_23	CALL_3
0x4001289	          0x488b1b	                    mov rbx, qword [rbx]	       598	channel.c	FUNCTION_24	FOR_1
0x400128c	          0x4885db	                           test rbx, rbx	       598	channel.c	FUNCTION_24	FOR_1
0x400128f	            0x75a3	                           jne 0x4001234	       598	channel.c	FUNCTION_24	FOR_1
0x4001291	              0x5b	                                 pop rbx	       600	channel.c	FUNCTION_24
0x4001292	              0xc3	                                     ret	       600	channel.c	FUNCTION_24
job_stop_on_exit	IF,1:ELSE,0:FOR,1:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,1	16
0x4007ccd	              0x53	                                push rbx	      5459	channel.c	FUNCTION_127
0x4007cce	    0x488b1d000000	            mov rbx, qword [0x04007cd5] 	      5462	channel.c	FUNCTION_127	FOR_1
0x4007cd5	          0x4885db	                           test rbx, rbx	      5462	channel.c	FUNCTION_127	FOR_1
0x4007cd8	            0x741f	                            je 0x4007cf9	      5462	channel.c	FUNCTION_127	FOR_1
0x4007cda	        0x837b2801	               cmp dword [rbx + 0x28], 1	      5463	channel.c	FUNCTION_127	FOR_1	IF_1
0x4007cde	            0x7511	                           jne 0x4007cf1	      5463	channel.c	FUNCTION_127	FOR_1	IF_1
0x4007ce0	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      5463	channel.c	FUNCTION_127	FOR_1	IF_1
0x4007ce4	          0x4885f6	                           test rsi, rsi	      5463	channel.c	FUNCTION_127	FOR_1	IF_1
0x4007ce7	            0x7408	                            je 0x4007cf1	      5463	channel.c	FUNCTION_127	FOR_1	IF_1
0x4007ce9	          0x4889df	                            mov rdi, rbx	      5464	channel.c	FUNCTION_127	FOR_1	IF_1
0x4007cec	      0xe800000000	                          call 0x4007cf1	      5464	channel.c	FUNCTION_127	FOR_1	IF_1
0x4007cf1	          0x488b1b	                    mov rbx, qword [rbx]	      5462	channel.c	FUNCTION_127	FOR_1
0x4007cf4	          0x4885db	                           test rbx, rbx	      5462	channel.c	FUNCTION_127	FOR_1
0x4007cf7	            0x75e1	                           jne 0x4007cda	      5462	channel.c	FUNCTION_127	FOR_1
0x4007cf9	              0x5b	                                 pop rbx	      5465	channel.c	FUNCTION_127
0x4007cfa	              0xc3	                                     ret	      5465	channel.c	FUNCTION_127
free_unused_jobs	IF,1:ELSE,0:FOR,1:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,2	30
0x4007b7d	            0x4155	                                push r13	      5378	channel.c	FUNCTION_124
0x4007b7f	            0x4154	                                push r12	      5378	channel.c	FUNCTION_124
0x4007b81	              0x55	                                push rbp	      5378	channel.c	FUNCTION_124
0x4007b82	              0x53	                                push rbx	      5378	channel.c	FUNCTION_124
0x4007b83	        0x4883ec08	                              sub rsp, 8	      5378	channel.c	FUNCTION_124
0x4007b87	          0x4189fd	                           mov r13d, edi	      5378	channel.c	FUNCTION_124
0x4007b8a	          0x4189f4	                           mov r12d, esi	      5378	channel.c	FUNCTION_124
0x4007b8d	    0x488b1d000000	            mov rbx, qword [0x04007b94] 	      5382	channel.c	FUNCTION_124	FOR_1
0x4007b94	          0x4885db	                           test rbx, rbx	      5382	channel.c	FUNCTION_124	FOR_1
0x4007b97	            0x742a	                            je 0x4007bc3	      5382	channel.c	FUNCTION_124	FOR_1
0x4007b99	          0x488b2b	                    mov rbp, qword [rbx]	      5384	channel.c	FUNCTION_124	FOR_1
0x4007b9c	          0x4489e8	                           mov eax, r13d	      5385	channel.c	FUNCTION_124	FOR_1	IF_1
0x4007b9f	          0x33435c	             xor eax, dword [rbx + 0x5c]	      5385	channel.c	FUNCTION_124	FOR_1	IF_1
0x4007ba2	          0x4485e0	                          test eax, r12d	      5385	channel.c	FUNCTION_124	FOR_1	IF_1
0x4007ba5	            0x7414	                            je 0x4007bbb	      5385	channel.c	FUNCTION_124	FOR_1	IF_1
0x4007ba7	          0x4889df	                            mov rdi, rbx	      5386	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_1
0x4007baa	      0xe8a485ffff	               call sym.job_still_useful	      5386	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_1
0x4007baf	            0x85c0	                           test eax, eax	      5386	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_1
0x4007bb1	            0x7508	                           jne 0x4007bbb	      5386	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_1
0x4007bb3	          0x4889df	                            mov rdi, rbx	      5389	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_2
0x4007bb6	      0xe8c487ffff	                   call sym.job_free_job	      5389	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_2
0x4007bbb	          0x4889eb	                            mov rbx, rbp	      5389	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_2
0x4007bbe	          0x4885ed	                           test rbp, rbp	      5382	channel.c	FUNCTION_124	FOR_1
0x4007bc1	            0x75d6	                           jne 0x4007b99	      5382	channel.c	FUNCTION_124	FOR_1
0x4007bc3	        0x4883c408	                              add rsp, 8	      5392	channel.c	FUNCTION_124
0x4007bc7	              0x5b	                                 pop rbx	      5392	channel.c	FUNCTION_124
0x4007bc8	              0x5d	                                 pop rbp	      5392	channel.c	FUNCTION_124
0x4007bc9	            0x415c	                                 pop r12	      5392	channel.c	FUNCTION_124
0x4007bcb	            0x415d	                                 pop r13	      5392	channel.c	FUNCTION_124
0x4007bcd	              0xc3	                                     ret	      5392	channel.c	FUNCTION_124
job_start	IF,23:ELSE,7:FOR,4:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,37	260
0x4007da7	            0x4155	                                push r13	      5526	channel.c	FUNCTION_130
0x4007da9	            0x4154	                                push r12	      5526	channel.c	FUNCTION_130
0x4007dab	              0x55	                                push rbp	      5526	channel.c	FUNCTION_130
0x4007dac	              0x53	                                push rbx	      5526	channel.c	FUNCTION_130
0x4007dad	    0x4881ec080400	                          sub rsp, 0x408	      5526	channel.c	FUNCTION_130
0x4007db4	          0x4889fb	                            mov rbx, rdi	      5526	channel.c	FUNCTION_130
0x4007db7	          0x4889f5	                            mov rbp, rsi	      5526	channel.c	FUNCTION_130
0x4007dba	          0x4989d5	                            mov r13, rdx	      5526	channel.c	FUNCTION_130
0x4007dbd	    0x64488b042528	                mov rax, qword fs:[0x28]	      5526	channel.c	FUNCTION_130
0x4007dc6	    0x48898424f803	            mov qword [rsp + 0x3f8], rax	      5526	channel.c	FUNCTION_130
0x4007dce	            0x31c0	                            xor eax, eax	      5526	channel.c	FUNCTION_130
0x4007dd0	    0x48c744240800	                  mov qword [rsp + 8], 0	      5529	channel.c	FUNCTION_130
0x4007dd9	    0xc74424040000	                  mov dword [rsp + 4], 0	      5530	channel.c	FUNCTION_130
0x4007de1	      0xe800000000	                          call 0x4007de6	      5540	channel.c	FUNCTION_130	CALL_1
0x4007de6	          0x4885c0	                           test rax, rax	      5541	channel.c	FUNCTION_130	IF_1
0x4007de9	     0xf84e1030000	                            je 0x40081d0	      5541	channel.c	FUNCTION_130	IF_1
0x4007def	          0x4989c4	                            mov r12, rax	      5541	channel.c	FUNCTION_130	IF_1
0x4007df2	    0xc74028000000	               mov dword [rax + 0x28], 0	      5544	channel.c	FUNCTION_130
0x4007df9	          0x4d85ed	                           test r13, r13	      5549	channel.c	FUNCTION_130	IF_2
0x4007dfc	            0x7412	                            je 0x4007e10	      5549	channel.c	FUNCTION_130	IF_2
0x4007dfe	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      5550	channel.c	FUNCTION_130	IF_2
0x4007e03	      0xb96f000000	                           mov ecx, 0x6f	      5550	channel.c	FUNCTION_130	IF_2
0x4007e08	          0x4c89ee	                            mov rsi, r13	      5550	channel.c	FUNCTION_130	IF_2
0x4007e0b	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	      5550	channel.c	FUNCTION_130	IF_2
0x4007e0e	            0xeb32	                           jmp 0x4007e42	      5550	channel.c	FUNCTION_130	IF_2
0x4007e10	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      5554	channel.c	FUNCTION_130	ELSE_1	CALL_3
0x4007e15	      0xe800000000	                          call 0x4007e1a	      5554	channel.c	FUNCTION_130	ELSE_1	CALL_3
0x4007e1a	    0xc74424380000	               mov dword [rsp + 0x38], 0	      5555	channel.c	FUNCTION_130	ELSE_1
0x4007e22	        0x488d7b10	                   lea rdi, [rbx + 0x10]	      5556	channel.c	FUNCTION_130	ELSE_1	IF_3	CALL_4
0x4007e26	      0xb930000000	                           mov ecx, 0x30	      5556	channel.c	FUNCTION_130	ELSE_1	IF_3	CALL_4
0x4007e2b	      0xbaffce0110	                     mov edx, 0x1001ceff	      5556	channel.c	FUNCTION_130	ELSE_1	IF_3	CALL_4
0x4007e30	      0x488d742430	                   lea rsi, [rsp + 0x30]	      5556	channel.c	FUNCTION_130	ELSE_1	IF_3	CALL_4
0x4007e35	      0xe800000000	                          call 0x4007e3a	      5556	channel.c	FUNCTION_130	ELSE_1	IF_3	CALL_4
0x4007e3a	            0x85c0	                           test eax, eax	      5556	channel.c	FUNCTION_130	ELSE_1	IF_3	CALL_4
0x4007e3c	     0xf846e030000	                            je 0x40081b0	      5556	channel.c	FUNCTION_130	ELSE_1	IF_3	CALL_4
0x4007e42	        0x8b742430	            mov esi, dword [rsp + 0x30] 	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x4007e46	      0xb800000000	                              mov eax, 0	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x4007e4b	      0xba01000000	                              mov edx, 1	      5564	channel.c	FUNCTION_130	FOR_1
0x4007e50	      0xbf00000100	                        mov edi, 0x10000	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x4007e55	    0x41b900000800	                        mov r9d, 0x80000	      5567	channel.c	FUNCTION_130	FOR_1	IF_4
0x4007e5b	          0x4189fa	                           mov r10d, edi	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x4007e5e	            0x89c1	                            mov ecx, eax	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x4007e60	          0x41d3e2	                            shl r10d, cl	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x4007e63	          0x4185f2	                          test r10d, esi	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x4007e66	            0x7442	                            je 0x4007eaa	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x4007e68	      0x837c844c02	      cmp dword [rsp + rax*4 + 0x4c], 2 	      5566	channel.c	FUNCTION_130	FOR_1	IF_4
0x4007e6d	            0x753b	                           jne 0x4007eaa	      5566	channel.c	FUNCTION_130	FOR_1	IF_4
0x4007e6f	          0x4589cb	                           mov r11d, r9d	      5567	channel.c	FUNCTION_130	FOR_1	IF_4
0x4007e72	            0x89c1	                            mov ecx, eax	      5567	channel.c	FUNCTION_130	FOR_1	IF_4
0x4007e74	          0x41d3e3	                            shl r11d, cl	      5567	channel.c	FUNCTION_130	FOR_1	IF_4
0x4007e77	          0x4185f3	                          test r11d, esi	      5567	channel.c	FUNCTION_130	FOR_1	IF_4
0x4007e7a	            0x740d	                            je 0x4007e89	      5567	channel.c	FUNCTION_130	FOR_1	IF_4
0x4007e7c	    0x488b8cc46801	   mov rcx, qword [rsp + rax*8 + 0x168] 	      5568	channel.c	FUNCTION_130	FOR_1	IF_4
0x4007e84	          0x803900	                       cmp byte [rcx], 0	      5568	channel.c	FUNCTION_130	FOR_1	IF_4
0x4007e87	            0x7521	                           jne 0x4007eaa	      5568	channel.c	FUNCTION_130	FOR_1	IF_4
0x4007e89	      0xba05000000	                              mov edx, 5	      5570	channel.c	FUNCTION_130	FOR_1	IF_4	CALL_6
0x4007e8e	      0xbe00000000	                              mov esi, 0	      5570	channel.c	FUNCTION_130	FOR_1	IF_4	CALL_6
0x4007e93	      0xbf00000000	                              mov edi, 0	      5570	channel.c	FUNCTION_130	FOR_1	IF_4	CALL_6
0x4007e98	      0xe800000000	                          call 0x4007e9d	      5570	channel.c	FUNCTION_130	FOR_1	IF_4	CALL_6
0x4007e9d	          0x4889c7	                            mov rdi, rax	      5570	channel.c	FUNCTION_130	FOR_1	IF_4	CALL_6
0x4007ea0	      0xe800000000	                          call 0x4007ea5	      5570	channel.c	FUNCTION_130	FOR_1	IF_4	CALL_6
0x4007ea5	      0xe906030000	                           jmp 0x40081b0	      5571	channel.c	FUNCTION_130	FOR_1	IF_4
0x4007eaa	          0x83c201	                              add edx, 1	      5564	channel.c	FUNCTION_130	FOR_1
0x4007ead	        0x4883c001	                              add rax, 1	      5564	channel.c	FUNCTION_130	FOR_1
0x4007eb1	          0x83fa03	                              cmp edx, 3	      5564	channel.c	FUNCTION_130	FOR_1
0x4007eb4	            0x76a5	                           jbe 0x4007e5b	      5564	channel.c	FUNCTION_130	FOR_1
0x4007eb6	    0xf7c600000400	                       test esi, 0x40000	      5574	channel.c	FUNCTION_130	IF_5
0x4007ebc	     0xf8404010000	                            je 0x4007fc6	      5574	channel.c	FUNCTION_130	IF_5
0x4007ec2	      0x837c245403	               cmp dword [rsp + 0x54], 3	      5574	channel.c	FUNCTION_130	IF_5
0x4007ec7	     0xf85f9000000	                           jne 0x4007fc6	      5574	channel.c	FUNCTION_130	IF_5
0x4007ecd	    0xf7c600000004	       test esi, loc.imp.list_append_tv 	      5579	channel.c	FUNCTION_130	IF_5	IF_6
0x4007ed3	            0x743d	                            je 0x4007f12	      5579	channel.c	FUNCTION_130	IF_5	IF_6
0x4007ed5	    0x8bbc248c0100	           mov edi, dword [rsp + 0x18c] 	      5581	channel.c	FUNCTION_130	IF_5	IF_6	CALL_7
0x4007edc	      0xe800000000	                          call 0x4007ee1	      5581	channel.c	FUNCTION_130	IF_5	IF_6	CALL_7
0x4007ee1	          0x4885c0	                           test rax, rax	      5582	channel.c	FUNCTION_130	IF_5	IF_6	IF_7
0x4007ee4	            0x7570	                           jne 0x4007f56	      5582	channel.c	FUNCTION_130	IF_5	IF_6	IF_7
0x4007ee6	    0x48639c248c01	        movsxd rbx, dword [rsp + 0x18c] 	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x4007eee	      0xba05000000	                              mov edx, 5	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x4007ef3	      0xbe00000000	                              mov esi, 0	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x4007ef8	      0xbf00000000	                              mov edi, 0	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x4007efd	      0xe800000000	                          call 0x4007f02	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x4007f02	          0x4889de	                            mov rsi, rbx	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x4007f05	          0x4889c7	                            mov rdi, rax	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x4007f08	      0xe800000000	                          call 0x4007f0d	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x4007f0d	      0xe99e020000	                           jmp 0x40081b0	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x4007f12	    0xf7c600002000	                      test esi, 0x200000	      5585	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8
0x4007f18	            0x7521	                           jne 0x4007f3b	      5585	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8
0x4007f1a	      0xba05000000	                              mov edx, 5	      5587	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8	CALL_11
0x4007f1f	      0xbe00000000	                              mov esi, 0	      5587	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8	CALL_11
0x4007f24	      0xbf00000000	                              mov edi, 0	      5587	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8	CALL_11
0x4007f29	      0xe800000000	                          call 0x4007f2e	      5587	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8	CALL_11
0x4007f2e	          0x4889c7	                            mov rdi, rax	      5587	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8	CALL_11
0x4007f31	      0xe800000000	                          call 0x4007f36	      5587	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8	CALL_11
0x4007f36	      0xe975020000	                           jmp 0x40081b0	      5587	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8	CALL_11
0x4007f3b	      0xbe00000000	                              mov esi, 0	      5590	channel.c	FUNCTION_130	IF_5	CALL_12
0x4007f40	    0x488bbc247801	           mov rdi, qword [rsp + 0x178] 	      5590	channel.c	FUNCTION_130	IF_5	CALL_12
0x4007f48	      0xe800000000	                          call 0x4007f4d	      5590	channel.c	FUNCTION_130	IF_5	CALL_12
0x4007f4d	          0x4885c0	                           test rax, rax	      5591	channel.c	FUNCTION_130	IF_5	IF_9
0x4007f50	     0xf845a020000	                            je 0x40081b0	      5591	channel.c	FUNCTION_130	IF_5	IF_9
0x4007f56	      0x4883780800	                  cmp qword [rax + 8], 0	      5593	channel.c	FUNCTION_130	IF_5	IF_10
0x4007f5b	            0x7564	                           jne 0x4007fc1	      5593	channel.c	FUNCTION_130	IF_5	IF_10
0x4007f5d	    0x488b9c247801	           mov rbx, qword [rsp + 0x178] 	      5604	channel.c	FUNCTION_130	IF_5	IF_10	ELSE_4
0x4007f65	      0xf644243304	               test byte [rsp + 0x33], 4	      5598	channel.c	FUNCTION_130	IF_5	IF_10	IF_11
0x4007f6a	            0x7431	                            je 0x4007f9d	      5598	channel.c	FUNCTION_130	IF_5	IF_10	IF_11
0x4007f6c	    0x448b84248c01	           mov r8d, dword [rsp + 0x18c] 	        33	stdio2.h	FUNCTION_147	CALL_1
0x4007f74	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_147	CALL_1
0x4007f79	      0xba41000000	                           mov edx, 0x41	        33	stdio2.h	FUNCTION_147	CALL_1
0x4007f7e	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_147	CALL_1
0x4007f83	    0x488dbc24b003	                  lea rdi, [rsp + 0x3b0]	        33	stdio2.h	FUNCTION_147	CALL_1
0x4007f8b	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_147	CALL_1
0x4007f90	      0xe800000000	                          call 0x4007f95	        33	stdio2.h	FUNCTION_147	CALL_1
0x4007f95	    0x488d9c24b003	                  lea rbx, [rsp + 0x3b0]	      5601	channel.c	FUNCTION_130	IF_5	IF_10	IF_11
0x4007f9d	      0xba05000000	                              mov edx, 5	      5605	channel.c	FUNCTION_130	IF_5	IF_10	CALL_14
0x4007fa2	      0xbe00000000	                              mov esi, 0	      5605	channel.c	FUNCTION_130	IF_5	IF_10	CALL_14
0x4007fa7	      0xbf00000000	                              mov edi, 0	      5605	channel.c	FUNCTION_130	IF_5	IF_10	CALL_14
0x4007fac	      0xe800000000	                          call 0x4007fb1	      5605	channel.c	FUNCTION_130	IF_5	IF_10	CALL_14
0x4007fb1	          0x4889de	                            mov rsi, rbx	      5605	channel.c	FUNCTION_130	IF_5	IF_10	CALL_14
0x4007fb4	          0x4889c7	                            mov rdi, rax	      5605	channel.c	FUNCTION_130	IF_5	IF_10	CALL_14
0x4007fb7	      0xe800000000	                          call 0x4007fbc	      5605	channel.c	FUNCTION_130	IF_5	IF_10	CALL_14
0x4007fbc	      0xe9ef010000	                           jmp 0x40081b0	      5605	channel.c	FUNCTION_130	IF_5	IF_10	CALL_14
0x4007fc1	      0x4989442450	             mov qword [r12 + 0x50], rax	      5608	channel.c	FUNCTION_130	IF_5
0x4007fc6	      0x488d742430	                   lea rsi, [rsp + 0x30]	      5611	channel.c	FUNCTION_130	CALL_15
0x4007fcb	          0x4c89e7	                            mov rdi, r12	      5611	channel.c	FUNCTION_130	CALL_15
0x4007fce	      0xe800000000	                          call 0x4007fd3	      5611	channel.c	FUNCTION_130	CALL_15
0x4007fd3	          0x4885ed	                           test rbp, rbp	      5614	channel.c	FUNCTION_130	IF_12
0x4007fd6	     0xf848d000000	                            je 0x4008069	      5614	channel.c	FUNCTION_130	IF_12
0x4007fdc	      0x48837d0000	                      cmp qword [rbp], 0	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x4007fe1	            0x7421	                            je 0x4008004	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x4007fe3	      0xba00000000	                              mov edx, 0	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x4007fe8	        0x8b442404	                mov eax, dword [rsp + 4]	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x4007fec	          0x8d4801	                      lea ecx, [rax + 1]	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x4007fef	          0x8d3411	                    lea esi, [rcx + rdx]	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x4007ff2	          0x83c201	                              add edx, 1	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x4007ff5	          0x4863c2	                         movsxd rax, edx	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x4007ff8	    0x48837cc50000	              cmp qword [rbp + rax*8], 0	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x4007ffe	            0x75ef	                           jne 0x4007fef	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x4008000	        0x89742404	                mov dword [rsp + 4], esi	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x4008004	        0x8b442404	                mov eax, dword [rsp + 4]	      5619	channel.c	FUNCTION_130	IF_12	CALL_16
0x4008008	    0x8d3cc5080000	                    lea edi, [rax*8 + 8]	      5619	channel.c	FUNCTION_130	IF_12	CALL_16
0x400800f	      0xe800000000	                          call 0x4008014	      5619	channel.c	FUNCTION_130	IF_12	CALL_16
0x4008014	      0x4889442408	                mov qword [rsp + 8], rax	      5619	channel.c	FUNCTION_130	IF_12	CALL_16
0x4008019	          0x4885c0	                           test rax, rax	      5620	channel.c	FUNCTION_130	IF_12	IF_13
0x400801c	     0xf848e010000	                            je 0x40081b0	      5620	channel.c	FUNCTION_130	IF_12	IF_13
0x4008022	        0x8b542404	                mov edx, dword [rsp + 4]	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x4008026	            0x85d2	                           test edx, edx	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x4008028	            0x7e2a	                           jle 0x4008054	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x400802a	      0xbb00000000	                              mov ebx, 0	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x400802f	          0x4863d3	                         movsxd rdx, ebx	      5623	channel.c	FUNCTION_130	IF_12	CALL_17
0x4008032	      0x488b442408	                mov rax, qword [rsp + 8]	      5623	channel.c	FUNCTION_130	IF_12	CALL_17
0x4008037	        0x4c8d2cd0	                  lea r13, [rax + rdx*8]	      5623	channel.c	FUNCTION_130	IF_12	CALL_17
0x400803b	      0x488b7cd500	            mov rdi, qword [rbp + rdx*8]	      5623	channel.c	FUNCTION_130	IF_12	CALL_17
0x4008040	      0xe800000000	                          call 0x4008045	      5623	channel.c	FUNCTION_130	IF_12	CALL_17
0x4008045	        0x49894500	                    mov qword [r13], rax	      5623	channel.c	FUNCTION_130	IF_12	CALL_17
0x4008049	          0x83c301	                              add ebx, 1	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x400804c	        0x8b542404	                mov edx, dword [rsp + 4]	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x4008050	            0x39da	                            cmp edx, ebx	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x4008052	            0x7fdb	                            jg 0x400802f	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x4008054	          0x4863d2	                         movsxd rdx, edx	      5624	channel.c	FUNCTION_130	IF_12
0x4008057	      0x488b442408	                mov rax, qword [rsp + 8]	      5624	channel.c	FUNCTION_130	IF_12
0x400805c	    0x48c704d00000	              mov qword [rax + rdx*8], 0	      5624	channel.c	FUNCTION_130	IF_12
0x4008064	      0xe99b000000	                           jmp 0x4008104	      5624	channel.c	FUNCTION_130	IF_12
0x4008069	            0x8b03	                    mov eax, dword [rbx]	      5628	channel.c	FUNCTION_130	ELSE_5	IF_14
0x400806b	          0x83f802	                              cmp eax, 2	      5628	channel.c	FUNCTION_130	ELSE_5	IF_14
0x400806e	            0x7548	                           jne 0x40080b8	      5628	channel.c	FUNCTION_130	ELSE_5	IF_14
0x4008070	        0x488b7b08	                mov rdi, qword [rbx + 8]	      5631	channel.c	FUNCTION_130	ELSE_5	IF_14
0x4008074	          0x4885ff	                           test rdi, rdi	      5632	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15
0x4008077	            0x7405	                            je 0x400807e	      5632	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15
0x4008079	          0x803f00	                       cmp byte [rdi], 0	      5632	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15
0x400807c	            0x7521	                           jne 0x400809f	      5632	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15
0x400807e	      0xba05000000	                              mov edx, 5	      5634	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15	CALL_19
0x4008083	      0xbe00000000	                              mov esi, 0	      5634	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15	CALL_19
0x4008088	      0xbf00000000	                              mov edi, 0	      5634	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15	CALL_19
0x400808d	      0xe800000000	                          call 0x4008092	      5634	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15	CALL_19
0x4008092	          0x4889c7	                            mov rdi, rax	      5634	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15	CALL_19
0x4008095	      0xe800000000	                          call 0x400809a	      5634	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15	CALL_19
0x400809a	      0xe911010000	                           jmp 0x40081b0	      5635	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15
0x400809f	      0x488d542404	                      lea rdx, [rsp + 4]	      5638	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_16	CALL_20
0x40080a4	      0x488d742408	                      lea rsi, [rsp + 8]	      5638	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_16	CALL_20
0x40080a9	      0xe800000000	                          call 0x40080ae	      5638	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_16	CALL_20
0x40080ae	            0x85c0	                           test eax, eax	      5638	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_16	CALL_20
0x40080b0	     0xf84fa000000	                            je 0x40081b0	      5638	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_16	CALL_20
0x40080b6	            0xeb4c	                           jmp 0x4008104	      5638	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_16	CALL_20
0x40080b8	          0x83f805	                              cmp eax, 5	      5641	channel.c	FUNCTION_130	ELSE_6	IF_17
0x40080bb	            0x750f	                           jne 0x40080cc	      5641	channel.c	FUNCTION_130	ELSE_6	IF_17
0x40080bd	        0x488b7b08	                mov rdi, qword [rbx + 8]	      5642	channel.c	FUNCTION_130	ELSE_6	IF_17
0x40080c1	          0x4885ff	                           test rdi, rdi	      5642	channel.c	FUNCTION_130	ELSE_6	IF_17
0x40080c4	            0x7406	                            je 0x40080cc	      5642	channel.c	FUNCTION_130	ELSE_6	IF_17
0x40080c6	        0x837f3c00	               cmp dword [rdi + 0x3c], 0	      5643	channel.c	FUNCTION_130	ELSE_6	IF_17
0x40080ca	            0x7f21	                            jg 0x40080ed	      5643	channel.c	FUNCTION_130	ELSE_6	IF_17
0x40080cc	      0xba05000000	                              mov edx, 5	      5645	channel.c	FUNCTION_130	ELSE_6	IF_17	CALL_22
0x40080d1	      0xbe00000000	                              mov esi, 0	      5645	channel.c	FUNCTION_130	ELSE_6	IF_17	CALL_22
0x40080d6	      0xbf00000000	                              mov edi, 0	      5645	channel.c	FUNCTION_130	ELSE_6	IF_17	CALL_22
0x40080db	      0xe800000000	                          call 0x40080e0	      5645	channel.c	FUNCTION_130	ELSE_6	IF_17	CALL_22
0x40080e0	          0x4889c7	                            mov rdi, rax	      5645	channel.c	FUNCTION_130	ELSE_6	IF_17	CALL_22
0x40080e3	      0xe800000000	                          call 0x40080e8	      5645	channel.c	FUNCTION_130	ELSE_6	IF_17	CALL_22
0x40080e8	      0xe9c3000000	                           jmp 0x40081b0	      5646	channel.c	FUNCTION_130	ELSE_6	IF_17
0x40080ed	      0x488d542404	                      lea rdx, [rsp + 4]	      5652	channel.c	FUNCTION_130	ELSE_7	IF_18	CALL_23
0x40080f2	      0x488d742408	                      lea rsi, [rsp + 8]	      5652	channel.c	FUNCTION_130	ELSE_7	IF_18	CALL_23
0x40080f7	      0xe800000000	                          call 0x40080fc	      5652	channel.c	FUNCTION_130	ELSE_7	IF_18	CALL_23
0x40080fc	            0x85c0	                           test eax, eax	      5652	channel.c	FUNCTION_130	ELSE_7	IF_18	CALL_23
0x40080fe	     0xf84ac000000	                            je 0x40081b0	      5652	channel.c	FUNCTION_130	ELSE_7	IF_18	CALL_23
0x4008104	      0x488b442408	                mov rax, qword [rsp + 8]	      5662	channel.c	FUNCTION_130
0x4008109	      0x4989442468	             mov qword [r12 + 0x68], rax	      5662	channel.c	FUNCTION_130
0x400810e	    0x48833d000000	               cmp qword [0x04008116], 0	      5665	channel.c	FUNCTION_130	IF_20	CALL_25
0x4008116	            0x7477	                            je 0x400818f	      5665	channel.c	FUNCTION_130	IF_20	CALL_25
0x4008118	      0xbac8000000	                           mov edx, 0xc8	      5669	channel.c	FUNCTION_130	IF_20	CALL_26
0x400811d	      0xbe01000000	                              mov esi, 1	      5669	channel.c	FUNCTION_130	IF_20	CALL_26
0x4008122	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5669	channel.c	FUNCTION_130	IF_20	CALL_26
0x4008127	      0xe800000000	                          call 0x400812c	      5669	channel.c	FUNCTION_130	IF_20	CALL_26
0x400812c	      0xbb00000000	                              mov ebx, 0	      5670	channel.c	FUNCTION_130	IF_20	FOR_4
0x4008131	      0x837c240400	                  cmp dword [rsp + 4], 0	      5670	channel.c	FUNCTION_130	IF_20	FOR_4
0x4008136	            0x7f15	                            jg 0x400814d	      5670	channel.c	FUNCTION_130	IF_20	FOR_4
0x4008138	            0xeb32	                           jmp 0x400816c	      5670	channel.c	FUNCTION_130	IF_20	FOR_4
0x400813a	            0x85db	                           test ebx, ebx	      5672	channel.c	FUNCTION_130	IF_20	FOR_4	IF_21
0x400813c	            0x7e0f	                           jle 0x400814d	      5672	channel.c	FUNCTION_130	IF_20	FOR_4	IF_21
0x400813e	      0xbe00000000	                              mov esi, 0	      5673	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_27
0x4008143	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5673	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_27
0x4008148	      0xe800000000	                          call 0x400814d	      5673	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_27
0x400814d	          0x4863d3	                         movsxd rdx, ebx	      5674	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_28
0x4008150	      0x488b442408	                mov rax, qword [rsp + 8]	      5674	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_28
0x4008155	        0x488b34d0	            mov rsi, qword [rax + rdx*8]	      5674	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_28
0x4008159	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5674	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_28
0x400815e	      0xe800000000	                          call 0x4008163	      5674	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_28
0x4008163	          0x83c301	                              add ebx, 1	      5670	channel.c	FUNCTION_130	IF_20	FOR_4
0x4008166	        0x395c2404	                cmp dword [rsp + 4], ebx	      5670	channel.c	FUNCTION_130	IF_20	FOR_4
0x400816a	            0x7fce	                            jg 0x400813a	      5670	channel.c	FUNCTION_130	IF_20	FOR_4
0x400816c	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      5676	channel.c	FUNCTION_130	IF_20	CALL_29
0x4008171	      0xbe00000000	                              mov esi, 0	      5676	channel.c	FUNCTION_130	IF_20	CALL_29
0x4008176	      0xbf00000000	                              mov edi, 0	      5676	channel.c	FUNCTION_130	IF_20	CALL_29
0x400817b	      0xb800000000	                              mov eax, 0	      5676	channel.c	FUNCTION_130	IF_20	CALL_29
0x4008180	      0xe800000000	                          call 0x4008185	      5676	channel.c	FUNCTION_130	IF_20	CALL_29
0x4008185	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5677	channel.c	FUNCTION_130	IF_20	CALL_30
0x400818a	      0xe800000000	                          call 0x400818f	      5677	channel.c	FUNCTION_130	IF_20	CALL_30
0x400818f	      0x488d542430	                   lea rdx, [rsp + 0x30]	      5679	channel.c	FUNCTION_130	CALL_31
0x4008194	          0x4c89e6	                            mov rsi, r12	      5679	channel.c	FUNCTION_130	CALL_31
0x4008197	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5679	channel.c	FUNCTION_130	CALL_31
0x400819c	      0xe800000000	                          call 0x40081a1	      5679	channel.c	FUNCTION_130	CALL_31
0x40081a1	      0x498b7c2460	            mov rdi, qword [r12 + 0x60] 	      5686	channel.c	FUNCTION_130	IF_22
0x40081a6	          0x4885ff	                           test rdi, rdi	      5686	channel.c	FUNCTION_130	IF_22
0x40081a9	            0x7405	                            je 0x40081b0	      5686	channel.c	FUNCTION_130	IF_22
0x40081ab	      0xe8f6acffff	               call sym.channel_write_in	      5687	channel.c	FUNCTION_130	CALL_34
0x40081b0	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5693	channel.c	FUNCTION_130	IF_23
0x40081b5	      0x49397c2468	            cmp qword [r12 + 0x68], rdi 	      5693	channel.c	FUNCTION_130	IF_23
0x40081ba	            0x7405	                            je 0x40081c1	      5693	channel.c	FUNCTION_130	IF_23
0x40081bc	      0xe800000000	                          call 0x40081c1	      5694	channel.c	FUNCTION_130	CALL_36
0x40081c1	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      5695	channel.c	FUNCTION_130	CALL_37
0x40081c6	      0xe800000000	                          call 0x40081cb	      5695	channel.c	FUNCTION_130	CALL_37
0x40081cb	          0x4c89e0	                            mov rax, r12	      5696	channel.c	FUNCTION_130
0x40081ce	            0xeb05	                           jmp 0x40081d5	      5696	channel.c	FUNCTION_130
0x40081d0	      0xb800000000	                              mov eax, 0	      5542	channel.c	FUNCTION_130	IF_1
0x40081d5	    0x488b8c24f803	           mov rcx, qword [rsp + 0x3f8] 	      5697	channel.c	FUNCTION_130
0x40081dd	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5697	channel.c	FUNCTION_130
0x40081e6	            0x7405	                            je 0x40081ed	      5697	channel.c	FUNCTION_130
0x40081e8	      0xe800000000	                          call 0x40081ed	      5697	channel.c	FUNCTION_130
0x40081ed	    0x4881c4080400	                          add rsp, 0x408	      5697	channel.c	FUNCTION_130
0x40081f4	              0x5b	                                 pop rbx	      5697	channel.c	FUNCTION_130
0x40081f5	              0x5d	                                 pop rbp	      5697	channel.c	FUNCTION_130
0x40081f6	            0x415c	                                 pop r12	      5697	channel.c	FUNCTION_130
0x40081f8	            0x415d	                                 pop r13	      5697	channel.c	FUNCTION_130
0x40081fa	              0xc3	                                     ret	      5697	channel.c	FUNCTION_130
job_info_all	IF,1:ELSE,0:FOR,1:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,1	28
0x40083b2	              0x55	                                push rbp	      5776	channel.c	FUNCTION_133
0x40083b3	              0x53	                                push rbx	      5776	channel.c	FUNCTION_133
0x40083b4	        0x4883ec28	                           sub rsp, 0x28	      5776	channel.c	FUNCTION_133
0x40083b8	          0x4889fd	                            mov rbp, rdi	      5776	channel.c	FUNCTION_133
0x40083bb	    0x64488b042528	                mov rax, qword fs:[0x28]	      5776	channel.c	FUNCTION_133
0x40083c4	      0x4889442418	             mov qword [rsp + 0x18], rax	      5776	channel.c	FUNCTION_133
0x40083c9	            0x31c0	                            xor eax, eax	      5776	channel.c	FUNCTION_133
0x40083cb	    0x488b1d000000	            mov rbx, qword [0x040083d2] 	      5780	channel.c	FUNCTION_133	FOR_1
0x40083d2	          0x4885db	                           test rbx, rbx	      5780	channel.c	FUNCTION_133	FOR_1
0x40083d5	            0x7424	                            je 0x40083fb	      5780	channel.c	FUNCTION_133	FOR_1
0x40083d7	    0xc70424090000	                      mov dword [rsp], 9	      5782	channel.c	FUNCTION_133	FOR_1
0x40083de	      0x48895c2408	                mov qword [rsp + 8], rbx	      5783	channel.c	FUNCTION_133	FOR_1
0x40083e3	          0x4889e6	                            mov rsi, rsp	      5785	channel.c	FUNCTION_133	FOR_1	IF_1	CALL_1
0x40083e6	          0x4889ef	                            mov rdi, rbp	      5785	channel.c	FUNCTION_133	FOR_1	IF_1	CALL_1
0x40083e9	      0xe800000000	                          call 0x40083ee	      5785	channel.c	FUNCTION_133	FOR_1	IF_1	CALL_1
0x40083ee	          0x83f801	                              cmp eax, 1	      5785	channel.c	FUNCTION_133	FOR_1	IF_1	CALL_1
0x40083f1	            0x7508	                           jne 0x40083fb	      5785	channel.c	FUNCTION_133	FOR_1	IF_1	CALL_1
0x40083f3	          0x488b1b	                    mov rbx, qword [rbx]	      5780	channel.c	FUNCTION_133	FOR_1
0x40083f6	          0x4885db	                           test rbx, rbx	      5780	channel.c	FUNCTION_133	FOR_1
0x40083f9	            0x75dc	                           jne 0x40083d7	      5780	channel.c	FUNCTION_133	FOR_1
0x40083fb	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5788	channel.c	FUNCTION_133
0x4008400	    0x644833042528	                xor rax, qword fs:[0x28]	      5788	channel.c	FUNCTION_133
0x4008409	            0x7405	                            je 0x4008410	      5788	channel.c	FUNCTION_133
0x400840b	      0xe800000000	                          call 0x4008410	      5788	channel.c	FUNCTION_133
0x4008410	        0x4883c428	                           add rsp, 0x28	      5788	channel.c	FUNCTION_133
0x4008414	              0x5b	                                 pop rbx	      5788	channel.c	FUNCTION_133
0x4008415	              0x5d	                                 pop rbp	      5788	channel.c	FUNCTION_133
0x4008416	              0xc3	                                     ret	      5788	channel.c	FUNCTION_133
channel_parse_json	IF,14:ELSE,10:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,22	250
0x4001a11	            0x4156	                                push r14	      1906	channel.c	FUNCTION_52
0x4001a13	            0x4155	                                push r13	      1906	channel.c	FUNCTION_52
0x4001a15	            0x4154	                                push r12	      1906	channel.c	FUNCTION_52
0x4001a17	              0x55	                                push rbp	      1906	channel.c	FUNCTION_52
0x4001a18	              0x53	                                push rbx	      1906	channel.c	FUNCTION_52
0x4001a19	        0x4883ec60	                           sub rsp, 0x60	      1906	channel.c	FUNCTION_52
0x4001a1d	    0x64488b042528	                mov rax, qword fs:[0x28]	      1906	channel.c	FUNCTION_52
0x4001a26	      0x4889442458	             mov qword [rsp + 0x58], rax	      1906	channel.c	FUNCTION_52
0x4001a2b	            0x31c0	                            xor eax, eax	      1906	channel.c	FUNCTION_52
0x4001a2d	            0x89f0	                            mov eax, esi	      1615	channel.c	FUNCTION_44
0x4001a2f	          0x4889c2	                            mov rdx, rax	      1615	channel.c	FUNCTION_44
0x4001a32	        0x48c1e204	                              shl rdx, 4	      1615	channel.c	FUNCTION_44
0x4001a36	        0x48c1e008	                              shl rax, 8	      1615	channel.c	FUNCTION_44
0x4001a3a	          0x4801c2	                            add rdx, rax	      1615	channel.c	FUNCTION_44
0x4001a3d	      0xb800000000	                              mov eax, 0	      1916	channel.c	FUNCTION_52	IF_1
0x4001a42	    0x48837c174000	         cmp qword [rdi + rdx + 0x40], 0	      1915	channel.c	FUNCTION_52	IF_1	CALL_1
0x4001a48	     0xf842e030000	                            je 0x4001d7c	      1915	channel.c	FUNCTION_52	IF_1	CALL_1
0x4001a4e	          0x4889fd	                            mov rbp, rdi	      1915	channel.c	FUNCTION_52	IF_1	CALL_1
0x4001a51	            0x89f3	                            mov ebx, esi	      1915	channel.c	FUNCTION_52	IF_1	CALL_1
0x4001a53	      0xe800000000	                          call 0x4001a58	      1918	channel.c	FUNCTION_52	CALL_2
0x4001a58	      0x4889442420	             mov qword [rsp + 0x20], rax	      1918	channel.c	FUNCTION_52	CALL_2
0x4001a5d	    0xc74424300000	               mov dword [rsp + 0x30], 0	      1919	channel.c	FUNCTION_52
0x4001a65	    0x48c744243800	               mov qword [rsp + 0x38], 0	      1920	channel.c	FUNCTION_52
0x4001a6e	      0x48896c2440	             mov qword [rsp + 0x40], rbp	      1921	channel.c	FUNCTION_52
0x4001a73	        0x895c2448	             mov dword [rsp + 0x48], ebx	      1922	channel.c	FUNCTION_52
0x4001a77	    0x830500000000	               add dword [0x04001a7e], 1	      1928	channel.c	FUNCTION_52
0x4001a7e	            0x89d8	                            mov eax, ebx	      1930	channel.c	FUNCTION_52
0x4001a80	          0x4889c2	                            mov rdx, rax	      1930	channel.c	FUNCTION_52
0x4001a83	        0x48c1e204	                              shl rdx, 4	      1930	channel.c	FUNCTION_52
0x4001a87	        0x48c1e008	                              shl rax, 8	      1930	channel.c	FUNCTION_52
0x4001a8b	          0x4801d0	                            add rax, rdx	      1930	channel.c	FUNCTION_52
0x4001a8e	      0x837c052003	        cmp dword [rbp + rax + 0x20], 3 	      1929	channel.c	FUNCTION_52	CALL_3
0x4001a93	           0xf94c2	                                 sete dl	      1929	channel.c	FUNCTION_52	CALL_3
0x4001a96	           0xfb6d2	                           movzx edx, dl	      1929	channel.c	FUNCTION_52	CALL_3
0x4001a99	          0x4889e6	                            mov rsi, rsp	      1929	channel.c	FUNCTION_52	CALL_3
0x4001a9c	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1929	channel.c	FUNCTION_52	CALL_3
0x4001aa1	      0xe800000000	                          call 0x4001aa6	      1929	channel.c	FUNCTION_52	CALL_3
0x4001aa6	          0x4189c5	                           mov r13d, eax	      1929	channel.c	FUNCTION_52	CALL_3
0x4001aa9	    0x832d00000000	               sub dword [0x04001ab0], 1	      1931	channel.c	FUNCTION_52
0x4001ab0	          0x83f801	                              cmp eax, 1	      1932	channel.c	FUNCTION_52	IF_2
0x4001ab3	     0xf85f7020000	                           jne 0x4001db0	      1932	channel.c	FUNCTION_52	IF_2
0x4001ab9	        0x833c2405	                      cmp dword [rsp], 5	      1936	channel.c	FUNCTION_52	IF_2	IF_3
0x4001abd	            0x750f	                           jne 0x4001ace	      1936	channel.c	FUNCTION_52	IF_2	IF_3
0x4001abf	      0x488b442408	                mov rax, qword [rsp + 8]	      1936	channel.c	FUNCTION_52	IF_2	IF_3
0x4001ac4	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      1936	channel.c	FUNCTION_52	IF_2	IF_3
0x4001ac7	          0x83fa01	                              cmp edx, 1	      1936	channel.c	FUNCTION_52	IF_2	IF_3
0x4001aca	            0x7f35	                            jg 0x4001b01	      1936	channel.c	FUNCTION_52	IF_2	IF_3
0x4001acc	            0xeb14	                           jmp 0x4001ae2	      1936	channel.c	FUNCTION_52	IF_2	IF_3
0x4001ace	      0xbe00000000	                              mov esi, 0	      1939	channel.c	FUNCTION_52	IF_2	IF_3	CALL_4
0x4001ad3	          0x4889ef	                            mov rdi, rbp	      1939	channel.c	FUNCTION_52	IF_2	IF_3	CALL_4
0x4001ad6	      0xb800000000	                              mov eax, 0	      1939	channel.c	FUNCTION_52	IF_2	IF_3	CALL_4
0x4001adb	      0xe863e7ffff	                       call sym.ch_error	      1939	channel.c	FUNCTION_52	IF_2	IF_3	CALL_4
0x4001ae0	            0xeb12	                           jmp 0x4001af4	      1939	channel.c	FUNCTION_52	IF_2	IF_3	CALL_4
0x4001ae2	      0xbe00000000	                              mov esi, 0	      1941	channel.c	FUNCTION_52	IF_2	IF_3	ELSE_1	CALL_5
0x4001ae7	          0x4889ef	                            mov rdi, rbp	      1941	channel.c	FUNCTION_52	IF_2	IF_3	ELSE_1	CALL_5
0x4001aea	      0xb800000000	                              mov eax, 0	      1941	channel.c	FUNCTION_52	IF_2	IF_3	ELSE_1	CALL_5
0x4001aef	      0xe84fe7ffff	                       call sym.ch_error	      1941	channel.c	FUNCTION_52	IF_2	IF_3	ELSE_1	CALL_5
0x4001af4	          0x4889e7	                            mov rdi, rsp	      1943	channel.c	FUNCTION_52	IF_2	IF_3	CALL_6
0x4001af7	      0xe800000000	                          call 0x4001afc	      1943	channel.c	FUNCTION_52	IF_2	IF_3	CALL_6
0x4001afc	      0xe991020000	                           jmp 0x4001d92	      1943	channel.c	FUNCTION_52	IF_2	IF_3	CALL_6
0x4001b01	      0xbf20000000	                           mov edi, 0x20	      1947	channel.c	FUNCTION_52	IF_2	ELSE_2	CALL_7
0x4001b06	      0xe800000000	                          call 0x4001b0b	      1947	channel.c	FUNCTION_52	IF_2	ELSE_2	CALL_7
0x4001b0b	          0x4989c4	                            mov r12, rax	      1947	channel.c	FUNCTION_52	IF_2	ELSE_2	CALL_7
0x4001b0e	          0x4885c0	                           test rax, rax	      1948	channel.c	FUNCTION_52	IF_2	ELSE_2	IF_5
0x4001b11	            0x750d	                           jne 0x4001b20	      1948	channel.c	FUNCTION_52	IF_2	ELSE_2	IF_5
0x4001b13	          0x4889e7	                            mov rdi, rsp	      1949	channel.c	FUNCTION_52	IF_2	ELSE_2	CALL_8
0x4001b16	      0xe800000000	                          call 0x4001b1b	      1949	channel.c	FUNCTION_52	IF_2	ELSE_2	CALL_8
0x4001b1b	      0xe972020000	                           jmp 0x4001d92	      1949	channel.c	FUNCTION_52	IF_2	ELSE_2	CALL_8
0x4001b20	    0xc74018000000	               mov dword [rax + 0x18], 0	      1952	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3
0x4001b27	      0xe800000000	                          call 0x4001b2c	      1953	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	CALL_9
0x4001b2c	        0x49890424	                    mov qword [r12], rax	      1953	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	CALL_9
0x4001b30	          0x4885c0	                           test rax, rax	      1954	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	IF_6
0x4001b33	            0x7515	                           jne 0x4001b4a	      1954	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	IF_6
0x4001b35	          0x4c89e7	                            mov rdi, r12	      1956	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	IF_6	CALL_10
0x4001b38	      0xe800000000	                          call 0x4001b3d	      1956	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	IF_6	CALL_10
0x4001b3d	          0x4889e7	                            mov rdi, rsp	      1957	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	IF_6	CALL_11
0x4001b40	      0xe800000000	                          call 0x4001b45	      1957	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	IF_6	CALL_11
0x4001b45	      0xe948020000	                           jmp 0x4001d92	      1957	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	IF_6	CALL_11
0x4001b4a	        0x488b3424	                    mov rsi, qword [rsp]	      1961	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x4001b4e	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1961	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x4001b53	          0x488930	                    mov qword [rax], rsi	      1961	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x4001b56	        0x48897808	                mov qword [rax + 8], rdi	      1961	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x4001b5a	            0x89d8	                            mov eax, ebx	      1962	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x4001b5c	          0x4889c2	                            mov rdx, rax	      1962	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x4001b5f	        0x48c1e204	                              shl rdx, 4	      1962	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x4001b63	        0x48c1e008	                              shl rax, 8	      1962	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x4001b67	          0x4801d0	                            add rax, rdx	      1962	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x4001b6a	          0x4801e8	                            add rax, rbp	      1962	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x4001b6d	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      1962	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x4001b71	      0x4989542410	             mov qword [r12 + 0x10], rdx	      1962	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x4001b76	        0x4c896060	             mov qword [rax + 0x60], r12	      1963	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x4001b7a	    0x49c744240800	                  mov qword [r12 + 8], 0	      1964	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x4001b83	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      1965	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4001b88	          0x4885c0	                           test rax, rax	      1965	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4001b8b	            0x751a	                           jne 0x4001ba7	      1965	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4001b8d	            0x89d8	                            mov eax, ebx	      1966	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4001b8f	          0x4889c2	                            mov rdx, rax	      1966	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4001b92	        0x48c1e204	                              shl rdx, 4	      1966	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4001b96	        0x48c1e008	                              shl rax, 8	      1966	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4001b9a	          0x4801d0	                            add rax, rdx	      1966	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4001b9d	      0x4c89640558	      mov qword [rbp + rax + 0x58], r12 	      1966	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4001ba2	      0xe9eb010000	                           jmp 0x4001d92	      1966	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4001ba7	        0x4c896008	                mov qword [rax + 8], r12	      1968	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x4001bab	      0xe9e2010000	                           jmp 0x4001d92	      1968	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x4001bb0	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1978	channel.c	FUNCTION_52	ELSE_6	IF_9	CALL_12
0x4001bb5	      0xb800000000	                              mov eax, 0	      1978	channel.c	FUNCTION_52	ELSE_6	IF_9	CALL_12
0x4001bba	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1978	channel.c	FUNCTION_52	ELSE_6	IF_9	CALL_12
0x4001bc1	            0xf2ae	              repne scasb al, byte [rdi]	      1978	channel.c	FUNCTION_52	ELSE_6	IF_9	CALL_12
0x4001bc3	          0x48f7d1	                                 not rcx	      1978	channel.c	FUNCTION_52	ELSE_6	IF_9	CALL_12
0x4001bc6	        0x4c8d61ff	                      lea r12, [rcx - 1]	      1978	channel.c	FUNCTION_52	ELSE_6	IF_9	CALL_12
0x4001bca	            0x89d8	                            mov eax, ebx	      1980	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4001bcc	          0x4889c2	                            mov rdx, rax	      1980	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4001bcf	        0x48c1e204	                              shl rdx, 4	      1980	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4001bd3	        0x48c1e008	                              shl rax, 8	      1980	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4001bd7	          0x4801d0	                            add rax, rdx	      1980	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4001bda	      0x4c3b640578	      cmp r12, qword [rbp + rax + 0x78] 	      1980	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4001bdf	     0xf86aa000000	                           jbe 0x4001c8f	      1980	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4001be5	          0x4489e2	                           mov edx, r12d	      1984	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_13
0x4001be8	      0xbe00000000	                              mov esi, 0	      1984	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_13
0x4001bed	          0x4889ef	                            mov rdi, rbp	      1984	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_13
0x4001bf0	      0xb800000000	                              mov eax, 0	      1984	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_13
0x4001bf5	      0xe800000000	                          call 0x4001bfa	      1984	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_13
0x4001bfa	    0xc74424300000	               mov dword [rsp + 0x30], 0	      1987	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4001c02	            0x89d8	                            mov eax, ebx	      1988	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4001c04	          0x4889c2	                            mov rdx, rax	      1988	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4001c07	        0x48c1e204	                              shl rdx, 4	      1988	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4001c0b	        0x48c1e008	                              shl rax, 8	      1988	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4001c0f	          0x4801d0	                            add rax, rdx	      1988	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4001c12	      0x4c8d740500	                    lea r14, [rbp + rax]	      1988	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4001c17	        0x4d896678	             mov qword [r14 + 0x78], r12	      1988	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4001c1b	    0x488dbc058000	            lea rdi, [rbp + rax + 0x80] 	      1992	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_15
0x4001c23	      0xbe00000000	                              mov esi, 0	      1992	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_15
0x4001c28	      0xe800000000	                          call 0x4001c2d	      1992	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_15
0x4001c2d	    0x498b96880000	            mov rdx, qword [r14 + 0x88] 	      1993	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4001c34	    0x488d8aa08601	                lea rcx, [rdx + 0x186a0]	      1993	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4001c3b	    0x4881f940420f	                        cmp rcx, 0xf4240	      1994	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x4001c42	            0x7f1d	                            jg 0x4001c61	      1994	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x4001c44	            0x89d8	                            mov eax, ebx	      1993	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4001c46	          0x4889c2	                            mov rdx, rax	      1993	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4001c49	        0x48c1e204	                              shl rdx, 4	      1993	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4001c4d	        0x48c1e008	                              shl rax, 8	      1993	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4001c51	          0x4801d0	                            add rax, rdx	      1993	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4001c54	    0x48898c058800	      mov qword [rbp + rax + 0x88], rcx 	      1993	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4001c5c	      0xe9c5000000	                           jmp 0x4001d26	      1993	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4001c61	            0x89d8	                            mov eax, ebx	      1996	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x4001c63	          0x4889c1	                            mov rcx, rax	      1996	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x4001c66	        0x48c1e104	                              shl rcx, 4	      1996	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x4001c6a	        0x48c1e008	                              shl rax, 8	      1996	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x4001c6e	          0x4801c8	                            add rax, rcx	      1996	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x4001c71	          0x4801e8	                            add rax, rbp	      1996	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x4001c74	    0x4881eaa0bb0d	                        sub rdx, 0xdbba0	      1996	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x4001c7b	    0x488990880000	             mov qword [rax + 0x88], rdx	      1996	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x4001c82	    0x488380800000	               add qword [rax + 0x80], 1	      1997	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x4001c8a	      0xe997000000	                           jmp 0x4001d26	      1997	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x4001c8f	      0xbe00000000	                              mov esi, 0	      2010	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	CALL_17
0x4001c94	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2010	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	CALL_17
0x4001c99	      0xe800000000	                          call 0x4001c9e	      2010	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	CALL_17
0x4001c9e	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      2011	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4001ca3	            0x89d8	                            mov eax, ebx	      2011	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4001ca5	          0x4889c1	                            mov rcx, rax	      2011	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4001ca8	        0x48c1e104	                              shl rcx, 4	      2011	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4001cac	        0x48c1e008	                              shl rax, 8	      2011	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4001cb0	          0x4801c8	                            add rax, rcx	      2011	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4001cb3	    0x488b84058000	      mov rax, qword [rbp + rax + 0x80] 	      2011	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4001cbb	          0x4839c2	                            cmp rdx, rax	      2012	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4001cbe	     0xf8ffa000000	                            jg 0x4001dbe	      2012	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4001cc4	          0x4839c2	                            cmp rdx, rax	      2012	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4001cc7	     0xf8521010000	                           jne 0x4001dee	      2012	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4001ccd	            0x89d8	                            mov eax, ebx	      2013	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4001ccf	        0x48c1e008	                              shl rax, 8	      2013	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4001cd3	          0x4801c8	                            add rax, rcx	      2013	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4001cd6	    0x488b84058800	      mov rax, qword [rbp + rax + 0x88] 	      2013	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4001cde	      0x4839442418	            cmp qword [rsp + 0x18], rax 	      2013	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4001ce3	     0xf8fd5000000	                            jg 0x4001dbe	      2013	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4001ce9	      0xe900010000	                           jmp 0x4001dee	      2013	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4001cee	          0x4585ed	                         test r13d, r13d	      2030	channel.c	FUNCTION_52	IF_13
0x4001cf1	            0x7533	                           jne 0x4001d26	      2030	channel.c	FUNCTION_52	IF_13
0x4001cf3	      0xbe00000000	                              mov esi, 0	      2032	channel.c	FUNCTION_52	IF_13	CALL_20
0x4001cf8	          0x4889ef	                            mov rdi, rbp	      2032	channel.c	FUNCTION_52	IF_13	CALL_20
0x4001cfb	      0xb800000000	                              mov eax, 0	      2032	channel.c	FUNCTION_52	IF_13	CALL_20
0x4001d00	      0xe83ee5ffff	                       call sym.ch_error	      2032	channel.c	FUNCTION_52	IF_13	CALL_20
0x4001d05	            0x89db	                            mov ebx, ebx	      2034	channel.c	FUNCTION_52	IF_13
0x4001d07	          0x4889d8	                            mov rax, rbx	      2034	channel.c	FUNCTION_52	IF_13
0x4001d0a	        0x48c1e004	                              shl rax, 4	      2034	channel.c	FUNCTION_52	IF_13
0x4001d0e	        0x48c1e308	                              shl rbx, 8	      2034	channel.c	FUNCTION_52	IF_13
0x4001d12	          0x4801c3	                            add rbx, rax	      2034	channel.c	FUNCTION_52	IF_13
0x4001d15	    0x48c7441d7800	        mov qword [rbp + rbx + 0x78], 0 	      2034	channel.c	FUNCTION_52	IF_13
0x4001d1e	    0x41bc00000000	                             mov r12d, 0	      2033	channel.c	FUNCTION_52	IF_13
0x4001d24	            0xeb49	                           jmp 0x4001d6f	      2033	channel.c	FUNCTION_52	IF_13
0x4001d26	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      2036	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4001d2b	        0x8b442430	            mov eax, dword [rsp + 0x30] 	      2036	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4001d2f	          0x4863d0	                         movsxd rdx, eax	      2036	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4001d32	          0x4801ca	                            add rdx, rcx	      2036	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4001d35	    0x41bc00000000	                             mov r12d, 0	      2045	channel.c	FUNCTION_52	ELSE_10
0x4001d3b	          0x803a00	                       cmp byte [rdx], 0	      2036	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4001d3e	            0x742f	                            je 0x4001d6f	      2036	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4001d40	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      2039	channel.c	FUNCTION_52	ELSE_9	IF_14	CALL_21
0x4001d45	          0x4829ce	                            sub rsi, rcx	      2039	channel.c	FUNCTION_52	ELSE_9	IF_14	CALL_21
0x4001d48	          0x4889f1	                            mov rcx, rsi	      2039	channel.c	FUNCTION_52	ELSE_9	IF_14	CALL_21
0x4001d4b	            0x29c1	                            sub ecx, eax	      2039	channel.c	FUNCTION_52	ELSE_9	IF_14	CALL_21
0x4001d4d	    0x41b900000000	                              mov r9d, 0	      2039	channel.c	FUNCTION_52	ELSE_9	IF_14	CALL_21
0x4001d53	    0x41b801000000	                              mov r8d, 1	      2039	channel.c	FUNCTION_52	ELSE_9	IF_14	CALL_21
0x4001d59	            0x89de	                            mov esi, ebx	      2039	channel.c	FUNCTION_52	ELSE_9	IF_14	CALL_21
0x4001d5b	          0x4889ef	                            mov rdi, rbp	      2039	channel.c	FUNCTION_52	ELSE_9	IF_14	CALL_21
0x4001d5e	      0xe8c1eaffff	                   call sym.channel_save	      2039	channel.c	FUNCTION_52	ELSE_9	IF_14	CALL_21
0x4001d63	        0x4183fd02	                             cmp r13d, 2	      2042	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4001d67	        0x410f95c4	                              setne r12b	      2042	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4001d6b	        0x450fb6e4	                        movzx r12d, r12b	      2042	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4001d6f	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2047	channel.c	FUNCTION_52	CALL_22
0x4001d74	      0xe800000000	                          call 0x4001d79	      2047	channel.c	FUNCTION_52	CALL_22
0x4001d79	          0x4489e0	                           mov eax, r12d	      2048	channel.c	FUNCTION_52
0x4001d7c	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	      2049	channel.c	FUNCTION_52
0x4001d81	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2049	channel.c	FUNCTION_52
0x4001d8a	     0xf8482000000	                            je 0x4001e12	      2049	channel.c	FUNCTION_52
0x4001d90	            0xeb7b	                           jmp 0x4001e0d	      2049	channel.c	FUNCTION_52
0x4001d92	            0x89d8	                            mov eax, ebx	      1975	channel.c	FUNCTION_52	IF_8
0x4001d94	          0x4889c2	                            mov rdx, rax	      1975	channel.c	FUNCTION_52	IF_8
0x4001d97	        0x48c1e204	                              shl rdx, 4	      1975	channel.c	FUNCTION_52	IF_8
0x4001d9b	        0x48c1e008	                              shl rax, 8	      1975	channel.c	FUNCTION_52	IF_8
0x4001d9f	          0x4801d0	                            add rax, rdx	      1975	channel.c	FUNCTION_52	IF_8
0x4001da2	    0x48c744057800	        mov qword [rbp + rax + 0x78], 0 	      1975	channel.c	FUNCTION_52	IF_8
0x4001dab	      0xe976ffffff	                           jmp 0x4001d26	      1975	channel.c	FUNCTION_52	IF_8
0x4001db0	          0x83f802	                              cmp eax, 2	      1976	channel.c	FUNCTION_52	ELSE_6	IF_9
0x4001db3	     0xf8535ffffff	                           jne 0x4001cee	      1976	channel.c	FUNCTION_52	ELSE_6	IF_9
0x4001db9	      0xe9f2fdffff	                           jmp 0x4001bb0	      1976	channel.c	FUNCTION_52	ELSE_6	IF_9
0x4001dbe	            0x89d8	                            mov eax, ebx	      2019	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12
0x4001dc0	          0x4889c2	                            mov rdx, rax	      2019	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12
0x4001dc3	        0x48c1e204	                              shl rdx, 4	      2019	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12
0x4001dc7	        0x48c1e008	                              shl rax, 8	      2019	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12
0x4001dcb	          0x4801d0	                            add rax, rdx	      2019	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12
0x4001dce	    0x48c744057800	        mov qword [rbp + rax + 0x78], 0 	      2019	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12
0x4001dd7	      0xbe00000000	                              mov esi, 0	      2020	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12	CALL_18
0x4001ddc	          0x4889ef	                            mov rdi, rbp	      2020	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12	CALL_18
0x4001ddf	      0xb800000000	                              mov eax, 0	      2020	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12	CALL_18
0x4001de4	      0xe800000000	                          call 0x4001de9	      2020	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12	CALL_18
0x4001de9	      0xe905ffffff	                           jmp 0x4001cf3	      2020	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12	CALL_18
0x4001dee	    0xc74424300000	               mov dword [rsp + 0x30], 0	      2024	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	ELSE_8
0x4001df6	      0xbe00000000	                              mov esi, 0	      2025	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	ELSE_8	CALL_19
0x4001dfb	          0x4889ef	                            mov rdi, rbp	      2025	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	ELSE_8	CALL_19
0x4001dfe	      0xb800000000	                              mov eax, 0	      2025	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	ELSE_8	CALL_19
0x4001e03	      0xe800000000	                          call 0x4001e08	      2025	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	ELSE_8	CALL_19
0x4001e08	      0xe919ffffff	                           jmp 0x4001d26	      2025	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	ELSE_8	CALL_19
0x4001e0d	      0xe800000000	                          call 0x4001e12	      2049	channel.c	FUNCTION_52
0x4001e12	        0x4883c460	                           add rsp, 0x60	      2049	channel.c	FUNCTION_52
0x4001e16	              0x5b	                                 pop rbx	      2049	channel.c	FUNCTION_52
0x4001e17	              0x5d	                                 pop rbp	      2049	channel.c	FUNCTION_52
0x4001e18	            0x415c	                                 pop r12	      2049	channel.c	FUNCTION_52
0x4001e1a	            0x415d	                                 pop r13	      2049	channel.c	FUNCTION_52
0x4001e1c	            0x415e	                                 pop r14	      2049	channel.c	FUNCTION_52
0x4001e1e	              0xc3	                                     ret	      2049	channel.c	FUNCTION_52
ch_log	IF,1:ELSE,0:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,6	49
0x4000b1d	              0x53	                                push rbx	       164	channel.c	FUNCTION_4
0x4000b1e	    0x4881ecd00000	                           sub rsp, 0xd0	       164	channel.c	FUNCTION_4
0x4000b25	          0x4889f3	                            mov rbx, rsi	       164	channel.c	FUNCTION_4
0x4000b28	      0x4889542430	             mov qword [rsp + 0x30], rdx	       164	channel.c	FUNCTION_4
0x4000b2d	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       164	channel.c	FUNCTION_4
0x4000b32	      0x4c89442440	              mov qword [rsp + 0x40], r8	       164	channel.c	FUNCTION_4
0x4000b37	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       164	channel.c	FUNCTION_4
0x4000b3c	            0x84c0	                             test al, al	       164	channel.c	FUNCTION_4
0x4000b3e	            0x7437	                            je 0x4000b77	       164	channel.c	FUNCTION_4
0x4000b40	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       164	channel.c	FUNCTION_4
0x4000b45	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       164	channel.c	FUNCTION_4
0x4000b4a	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       164	channel.c	FUNCTION_4
0x4000b4f	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       164	channel.c	FUNCTION_4
0x4000b57	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       164	channel.c	FUNCTION_4
0x4000b5f	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       164	channel.c	FUNCTION_4
0x4000b67	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       164	channel.c	FUNCTION_4
0x4000b6f	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       164	channel.c	FUNCTION_4
0x4000b77	    0x64488b042528	                mov rax, qword fs:[0x28]	       164	channel.c	FUNCTION_4
0x4000b80	      0x4889442418	             mov qword [rsp + 0x18], rax	       164	channel.c	FUNCTION_4
0x4000b85	            0x31c0	                            xor eax, eax	       164	channel.c	FUNCTION_4
0x4000b87	    0x48833d000000	               cmp qword [0x04000b8f], 0	       165	channel.c	FUNCTION_4	IF_1
0x4000b8f	            0x7471	                            je 0x4000c02	       165	channel.c	FUNCTION_4	IF_1
0x4000b91	          0x4889fe	                            mov rsi, rdi	       169	channel.c	FUNCTION_4	IF_1	CALL_1
0x4000b94	      0xbf00000000	                              mov edi, 0	       169	channel.c	FUNCTION_4	IF_1	CALL_1
0x4000b99	      0xe8ddf5ffff	                    call sym.ch_log_lead	       169	channel.c	FUNCTION_4	IF_1	CALL_1
0x4000b9e	    0xc70424100000	                   mov dword [rsp], 0x10	       170	channel.c	FUNCTION_4	IF_1	CALL_2
0x4000ba5	    0xc74424043000	               mov dword [rsp + 4], 0x30	       170	channel.c	FUNCTION_4	IF_1	CALL_2
0x4000bad	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       170	channel.c	FUNCTION_4	IF_1	CALL_2
0x4000bb5	      0x4889442408	                mov qword [rsp + 8], rax	       170	channel.c	FUNCTION_4	IF_1	CALL_2
0x4000bba	      0x488d442420	                   lea rax, [rsp + 0x20]	       170	channel.c	FUNCTION_4	IF_1	CALL_2
0x4000bbf	      0x4889442410	             mov qword [rsp + 0x10], rax	       170	channel.c	FUNCTION_4	IF_1	CALL_2
0x4000bc4	          0x4889e1	                            mov rcx, rsp	       127	stdio2.h	FUNCTION_152	CALL_1
0x4000bc7	          0x4889da	                            mov rdx, rbx	       127	stdio2.h	FUNCTION_152	CALL_1
0x4000bca	      0xbe01000000	                              mov esi, 1	       127	stdio2.h	FUNCTION_152	CALL_1
0x4000bcf	    0x488b3d000000	            mov rdi, qword [0x04000bd6] 	       127	stdio2.h	FUNCTION_152	CALL_1
0x4000bd6	      0xe800000000	                          call 0x4000bdb	       127	stdio2.h	FUNCTION_152	CALL_1
0x4000bdb	    0x488b35000000	            mov rsi, qword [0x04000be2] 	       173	channel.c	FUNCTION_4	IF_1	CALL_5
0x4000be2	      0xbf0a000000	                            mov edi, 0xa	       173	channel.c	FUNCTION_4	IF_1	CALL_5
0x4000be7	      0xe800000000	                          call 0x4000bec	       173	channel.c	FUNCTION_4	IF_1	CALL_5
0x4000bec	    0x488b3d000000	            mov rdi, qword [0x04000bf3] 	       174	channel.c	FUNCTION_4	IF_1	CALL_6
0x4000bf3	      0xe800000000	                          call 0x4000bf8	       174	channel.c	FUNCTION_4	IF_1	CALL_6
0x4000bf8	    0xc70500000000	               mov dword [0x04000c02], 1	       175	channel.c	FUNCTION_4	IF_1
0x4000c02	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       177	channel.c	FUNCTION_4
0x4000c07	    0x644833042528	                xor rax, qword fs:[0x28]	       177	channel.c	FUNCTION_4
0x4000c10	            0x7405	                            je 0x4000c17	       177	channel.c	FUNCTION_4
0x4000c12	      0xe800000000	                          call 0x4000c17	       177	channel.c	FUNCTION_4
0x4000c17	    0x4881c4d00000	                           add rsp, 0xd0	       177	channel.c	FUNCTION_4
0x4000c1e	              0x5b	                                 pop rbx	       177	channel.c	FUNCTION_4
0x4000c1f	              0xc3	                                     ret	       177	channel.c	FUNCTION_4
job_cleanup	IF,4:ELSE,0:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,7	71
0x40078c0	              0x53	                                push rbx	      5264	channel.c	FUNCTION_120
0x40078c1	        0x4883ec60	                           sub rsp, 0x60	      5264	channel.c	FUNCTION_120
0x40078c5	    0x64488b042528	                mov rax, qword fs:[0x28]	      5264	channel.c	FUNCTION_120
0x40078ce	      0x4889442458	             mov qword [rsp + 0x58], rax	      5264	channel.c	FUNCTION_120
0x40078d3	            0x31c0	                            xor eax, eax	      5264	channel.c	FUNCTION_120
0x40078d5	        0x837f2802	               cmp dword [rdi + 0x28], 2	      5265	channel.c	FUNCTION_120	IF_1
0x40078d9	     0xf85f0000000	                           jne 0x40079cf	      5265	channel.c	FUNCTION_120	IF_1
0x40078df	          0x4889fb	                            mov rbx, rdi	      5265	channel.c	FUNCTION_120	IF_1
0x40078e2	    0xc74728030000	               mov dword [rdi + 0x28], 3	      5269	channel.c	FUNCTION_120
0x40078e9	        0x488b7f60	            mov rdi, qword [rdi + 0x60] 	      5272	channel.c	FUNCTION_120	IF_2
0x40078ed	          0x4885ff	                           test rdi, rdi	      5272	channel.c	FUNCTION_120	IF_2
0x40078f0	            0x740a	                            je 0x40078fc	      5272	channel.c	FUNCTION_120	IF_2
0x40078f2	      0xbe03000000	                              mov esi, 3	      5273	channel.c	FUNCTION_120	CALL_1
0x40078f7	      0xe8468bffff	                  call sym.ch_close_part	      5273	channel.c	FUNCTION_120	CALL_1
0x40078fc	        0x488b5340	            mov rdx, qword [rbx + 0x40] 	      5275	channel.c	FUNCTION_120	IF_3
0x4007900	          0x4885d2	                           test rdx, rdx	      5275	channel.c	FUNCTION_120	IF_3
0x4007903	     0xf849b000000	                            je 0x40079a4	      5275	channel.c	FUNCTION_120	IF_3
0x4007909	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	      5282	channel.c	FUNCTION_120	IF_3	CALL_2
0x400790d	      0xbe00000000	                              mov esi, 0	      5282	channel.c	FUNCTION_120	IF_3	CALL_2
0x4007912	      0xb800000000	                              mov eax, 0	      5282	channel.c	FUNCTION_120	IF_3	CALL_2
0x4007917	      0xe800000000	                          call 0x400791c	      5282	channel.c	FUNCTION_120	IF_3	CALL_2
0x400791c	        0x83435801	               add dword [rbx + 0x58], 1	      5283	channel.c	FUNCTION_120	IF_3
0x4007920	    0xc74424200900	               mov dword [rsp + 0x20], 9	      5284	channel.c	FUNCTION_120	IF_3
0x4007928	      0x48895c2428	             mov qword [rsp + 0x28], rbx	      5285	channel.c	FUNCTION_120	IF_3
0x400792d	    0xc74424300100	               mov dword [rsp + 0x30], 1	      5286	channel.c	FUNCTION_120	IF_3
0x4007935	        0x48634338	         movsxd rax, dword [rbx + 0x38] 	      5287	channel.c	FUNCTION_120	IF_3
0x4007939	      0x4889442438	             mov qword [rsp + 0x38], rax	      5287	channel.c	FUNCTION_120	IF_3
0x400793e	        0x4c8b5340	            mov r10, qword [rbx + 0x40] 	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x4007942	      0xb800000000	                              mov eax, 0	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x4007947	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x400794e	          0x4c89d7	                            mov rdi, r10	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x4007951	            0xf2ae	              repne scasb al, byte [rdi]	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x4007953	          0x48f7d1	                                 not rcx	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x4007956	        0x488d71ff	                      lea rsi, [rcx - 1]	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x400795a	            0x6a00	                                  push 0	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x400795c	          0xff7348	                 push qword [rbx + 0x48]	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x400795f	            0x6a01	                                  push 1	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x4007961	      0x488d442424	                   lea rax, [rsp + 0x24]	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x4007966	              0x50	                                push rax	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x4007967	            0x6a00	                                  push 0	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x4007969	            0x6a00	                                  push 0	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x400796b	    0x41b900000000	                              mov r9d, 0	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x4007971	      0x4c8d442450	                    lea r8, [rsp + 0x50]	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x4007976	      0xb902000000	                              mov ecx, 2	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x400797b	      0x488d542440	                   lea rdx, [rsp + 0x40]	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x4007980	          0x4c89d7	                            mov rdi, r10	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x4007983	      0xe800000000	                          call 0x4007988	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x4007988	        0x4883c430	                           add rsp, 0x30	      5291	channel.c	FUNCTION_120	IF_3	CALL_5
0x400798c	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5291	channel.c	FUNCTION_120	IF_3	CALL_5
0x4007991	      0xe800000000	                          call 0x4007996	      5291	channel.c	FUNCTION_120	IF_3	CALL_5
0x4007996	        0x836b5801	               sub dword [rbx + 0x58], 1	      5292	channel.c	FUNCTION_120	IF_3
0x400799a	    0xc70500000000	               mov dword [0x040079a4], 1	      5293	channel.c	FUNCTION_120	IF_3
0x40079a4	        0x837b5800	               cmp dword [rbx + 0x58], 0	      5298	channel.c	FUNCTION_120	IF_4	CALL_6
0x40079a8	            0x7525	                           jne 0x40079cf	      5298	channel.c	FUNCTION_120	IF_4	CALL_6
0x40079aa	          0x4889df	                            mov rdi, rbx	      5298	channel.c	FUNCTION_120	IF_4	CALL_6
0x40079ad	      0xe88487ffff	       call sym.job_channel_still_useful	      5298	channel.c	FUNCTION_120	IF_4	CALL_6
0x40079b2	            0x85c0	                           test eax, eax	      5298	channel.c	FUNCTION_120	IF_4	CALL_6
0x40079b4	            0x7519	                           jne 0x40079cf	      5298	channel.c	FUNCTION_120	IF_4	CALL_6
0x40079b6	    0x833d00000000	               cmp dword [0x040079bd], 0	      5081	channel.c	FUNCTION_111	IF_1
0x40079bd	            0x7510	                           jne 0x40079cf	      5081	channel.c	FUNCTION_111	IF_1
0x40079bf	          0x4889df	                            mov rdi, rbx	      5083	channel.c	FUNCTION_111	IF_1	CALL_1
0x40079c2	      0xe831d0ffff	              call sym.job_free_contents	      5083	channel.c	FUNCTION_111	IF_1	CALL_1
0x40079c7	          0x4889df	                            mov rdi, rbx	      5084	channel.c	FUNCTION_111	IF_1	CALL_2
0x40079ca	      0xe8b089ffff	                   call sym.job_free_job	      5084	channel.c	FUNCTION_111	IF_1	CALL_2
0x40079cf	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      5305	channel.c	FUNCTION_120
0x40079d4	    0x644833042528	                xor rax, qword fs:[0x28]	      5305	channel.c	FUNCTION_120
0x40079dd	            0x7405	                            je 0x40079e4	      5305	channel.c	FUNCTION_120
0x40079df	      0xe800000000	                          call 0x40079e4	      5305	channel.c	FUNCTION_120
0x40079e4	        0x4883c460	                           add rsp, 0x60	      5305	channel.c	FUNCTION_120
0x40079e8	              0x5b	                                 pop rbx	      5305	channel.c	FUNCTION_120
0x40079e9	              0xc3	                                     ret	      5305	channel.c	FUNCTION_120
channel_read_block	IF,11:ELSE,3:FOR,1:SWITCH,0:functions,0:DO,0:WHILE,1:CALL,16	174
0x400348c	            0x4157	                                push r15	      3358	channel.c	FUNCTION_80
0x400348e	            0x4156	                                push r14	      3358	channel.c	FUNCTION_80
0x4003490	            0x4155	                                push r13	      3358	channel.c	FUNCTION_80
0x4003492	            0x4154	                                push r12	      3358	channel.c	FUNCTION_80
0x4003494	              0x55	                                push rbp	      3358	channel.c	FUNCTION_80
0x4003495	              0x53	                                push rbx	      3358	channel.c	FUNCTION_80
0x4003496	        0x4883ec18	                           sub rsp, 0x18	      3358	channel.c	FUNCTION_80
0x400349a	          0x4989fc	                            mov r12, rdi	      3358	channel.c	FUNCTION_80
0x400349d	          0x4189f6	                           mov r14d, esi	      3358	channel.c	FUNCTION_80
0x40034a0	            0x89d7	                            mov edi, edx	      3358	channel.c	FUNCTION_80
0x40034a2	        0x89542408	                mov dword [rsp + 8], edx	      3358	channel.c	FUNCTION_80
0x40034a6	        0x894c240c	              mov dword [rsp + 0xc], ecx	      3358	channel.c	FUNCTION_80
0x40034aa	            0x89f0	                            mov eax, esi	      3361	channel.c	FUNCTION_80
0x40034ac	          0x4889c6	                            mov rsi, rax	      3361	channel.c	FUNCTION_80
0x40034af	        0x48c1e604	                              shl rsi, 4	      3361	channel.c	FUNCTION_80
0x40034b3	        0x48c1e008	                              shl rax, 8	      3361	channel.c	FUNCTION_80
0x40034b7	          0x4801f0	                            add rax, rsi	      3361	channel.c	FUNCTION_80
0x40034ba	          0x4c01e0	                            add rax, r12	      3361	channel.c	FUNCTION_80
0x40034bd	          0x8b6820	            mov ebp, dword [rax + 0x20] 	      3361	channel.c	FUNCTION_80
0x40034c0	        0x448b6818	           mov r13d, dword [rax + 0x18] 	      3362	channel.c	FUNCTION_80
0x40034c4	          0x83fd01	                              cmp ebp, 1	      3366	channel.c	FUNCTION_80	CALL_1
0x40034c7	      0xba00000000	                              mov edx, 0	      3366	channel.c	FUNCTION_80	CALL_1
0x40034cc	      0xb800000000	                              mov eax, 0	      3366	channel.c	FUNCTION_80	CALL_1
0x40034d1	        0x480f44d0	                          cmove rdx, rax	      3366	channel.c	FUNCTION_80	CALL_1
0x40034d5	            0x89f9	                            mov ecx, edi	      3366	channel.c	FUNCTION_80	CALL_1
0x40034d7	      0xbe00000000	                              mov esi, 0	      3366	channel.c	FUNCTION_80	CALL_1
0x40034dc	          0x4c89e7	                            mov rdi, r12	      3366	channel.c	FUNCTION_80	CALL_1
0x40034df	      0xb800000000	                              mov eax, 0	      3366	channel.c	FUNCTION_80	CALL_1
0x40034e4	      0xe800000000	                          call 0x40034e9	      3366	channel.c	FUNCTION_80	CALL_1
0x40034e9	          0x4589f7	                          mov r15d, r14d	      1615	channel.c	FUNCTION_44
0x40034ec	          0x4c89f8	                            mov rax, r15	      1615	channel.c	FUNCTION_44
0x40034ef	        0x48c1e004	                              shl rax, 4	      1615	channel.c	FUNCTION_44
0x40034f3	        0x49c1e708	                              shl r15, 8	      1615	channel.c	FUNCTION_44
0x40034f7	          0x4901c7	                            add r15, rax	      1615	channel.c	FUNCTION_44
0x40034fa	          0x4d01e7	                            add r15, r12	      1615	channel.c	FUNCTION_44
0x40034fd	        0x498b5f40	            mov rbx, qword [r15 + 0x40] 	      1615	channel.c	FUNCTION_44
0x4003501	          0x4885db	                           test rbx, rbx	      3372	channel.c	FUNCTION_80	WHILE_1	IF_1
0x4003504	            0x744b	                            je 0x4003551	      3372	channel.c	FUNCTION_80	WHILE_1	IF_1
0x4003506	          0x83fd01	                              cmp ebp, 1	      3374	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_2
0x4003509	     0xf8460010000	                            je 0x400366f	      3374	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_2
0x400350f	            0x85ed	                           test ebp, ebp	      3374	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_2
0x4003511	            0x7511	                           jne 0x4003524	      3374	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_2
0x4003513	          0x4889df	                            mov rdi, rbx	      3375	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_2	CALL_3
0x4003516	      0xe800000000	                          call 0x400351b	      3375	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_2	CALL_3
0x400351b	          0x4885c0	                           test rax, rax	      3375	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_2	CALL_3
0x400351e	     0xf8585010000	                           jne 0x40036a9	      3375	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_2	CALL_3
0x4003524	            0x85ed	                           test ebp, ebp	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x4003526	           0xf94c2	                                 sete dl	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x4003529	           0xfb6d2	                           movzx edx, dl	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x400352c	          0x4489f6	                           mov esi, r14d	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x400352f	          0x4c89e7	                            mov rdi, r12	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x4003532	      0xe800000000	                          call 0x4003537	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x4003537	          0x83f801	                              cmp eax, 1	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x400353a	            0x74c1	                            je 0x40034fd	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x400353c	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      3382	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_4
0x4003541	     0xf8538010000	                           jne 0x400367f	      3382	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_4
0x4003547	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	      3382	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_4
0x400354b	     0xf842e010000	                            je 0x400367f	      3382	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_4
0x4003551	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	      3387	channel.c	FUNCTION_80	WHILE_1	IF_5
0x4003555	     0xf840d010000	                            je 0x4003668	      3387	channel.c	FUNCTION_80	WHILE_1	IF_5
0x400355b	        0x8b542408	                mov edx, dword [rsp + 8]	      3389	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_5
0x400355f	          0x4489ee	                           mov esi, r13d	      3389	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_5
0x4003562	          0x4c89e7	                            mov rdi, r12	      3389	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_5
0x4003565	      0xe822fcffff	                   call sym.channel_wait	      3389	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_5
0x400356a	            0x85c0	                           test eax, eax	      3389	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_5
0x400356c	            0x741c	                            je 0x400358a	      3389	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_5
0x400356e	      0xbe00000000	                              mov esi, 0	      3391	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_6
0x4003573	          0x4c89e7	                            mov rdi, r12	      3391	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_6
0x4003576	      0xb800000000	                              mov eax, 0	      3391	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_6
0x400357b	      0xe800000000	                          call 0x4003580	      3391	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_6
0x4003580	      0xb800000000	                              mov eax, 0	      3392	channel.c	FUNCTION_80	WHILE_1	IF_6
0x4003585	      0xe949010000	                           jmp 0x40036d3	      3392	channel.c	FUNCTION_80	WHILE_1	IF_6
0x400358a	      0xba00000000	                              mov edx, 0	      3394	channel.c	FUNCTION_80	WHILE_1	CALL_7
0x400358f	          0x4489f6	                           mov esi, r14d	      3394	channel.c	FUNCTION_80	WHILE_1	CALL_7
0x4003592	          0x4c89e7	                            mov rdi, r12	      3394	channel.c	FUNCTION_80	WHILE_1	CALL_7
0x4003595	      0xe83ffdffff	                   call sym.channel_read	      3394	channel.c	FUNCTION_80	WHILE_1	CALL_7
0x400359a	      0xe95effffff	                           jmp 0x40034fd	      3394	channel.c	FUNCTION_80	WHILE_1	CALL_7
0x400359f	          0x4c89e8	                            mov rax, r13	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x40035a2	        0x48034308	                add rax, qword [rbx + 8]	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x40035a6	          0x4939c5	                            cmp r13, rax	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x40035a9	            0x7324	                           jae 0x40035cf	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x40035ab	          0x4c89e8	                            mov rax, r13	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x40035ae	          0x803800	                       cmp byte [rax], 0	      3411	channel.c	FUNCTION_80	ELSE_1	FOR_1	IF_8
0x40035b1	            0x7503	                           jne 0x40035b6	      3411	channel.c	FUNCTION_80	ELSE_1	FOR_1	IF_8
0x40035b3	          0xc6000a	                     mov byte [rax], 0xa	      3412	channel.c	FUNCTION_80	ELSE_1	FOR_1	IF_8
0x40035b6	        0x4883c001	                              add rax, 1	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x40035ba	          0x4839e8	                            cmp rax, rbp	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x40035bd	            0x7204	                            jb 0x40035c3	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x40035bf	            0x84c9	                             test cl, cl	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x40035c1	            0x740c	                            je 0x40035cf	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x40035c3	          0x4c89ea	                            mov rdx, r13	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x40035c6	        0x48035308	                add rdx, qword [rbx + 8]	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x40035ca	          0x4839d0	                            cmp rax, rdx	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x40035cd	            0x72df	                            jb 0x40035ae	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x40035cf	            0x84c9	                             test cl, cl	      3414	channel.c	FUNCTION_80	ELSE_1	IF_9
0x40035d1	            0x7410	                            je 0x40035e3	      3414	channel.c	FUNCTION_80	ELSE_1	IF_9
0x40035d3	          0x4489f6	                           mov esi, r14d	      3417	channel.c	FUNCTION_80	ELSE_1	IF_9	CALL_10
0x40035d6	          0x4c89e7	                            mov rdi, r12	      3417	channel.c	FUNCTION_80	ELSE_1	IF_9	CALL_10
0x40035d9	      0xe800000000	                          call 0x40035de	      3417	channel.c	FUNCTION_80	ELSE_1	IF_9	CALL_10
0x40035de	          0x4889c3	                            mov rbx, rax	      3417	channel.c	FUNCTION_80	ELSE_1	IF_9	CALL_10
0x40035e1	            0xeb42	                           jmp 0x4003625	      3417	channel.c	FUNCTION_80	ELSE_1	IF_9	CALL_10
0x40035e3	        0x488d5501	                      lea rdx, [rbp + 1]	      3419	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10
0x40035e7	          0x4c89e8	                            mov rax, r13	      3419	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10
0x40035ea	        0x48034308	                add rax, qword [rbx + 8]	      3419	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10
0x40035ee	          0x4839c2	                            cmp rdx, rax	      3419	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10
0x40035f1	            0x7514	                           jne 0x4003607	      3419	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10
0x40035f3	          0x4489f6	                           mov esi, r14d	      3422	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10	CALL_11
0x40035f6	          0x4c89e7	                            mov rdi, r12	      3422	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10	CALL_11
0x40035f9	      0xe800000000	                          call 0x40035fe	      3422	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10	CALL_11
0x40035fe	          0x4889c3	                            mov rbx, rax	      3422	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10	CALL_11
0x4003601	        0xc6450000	                       mov byte [rbp], 0	      3423	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10
0x4003605	            0xeb1e	                           jmp 0x4003625	      3423	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10
0x4003607	          0x4c29ed	                            sub rbp, r13	      3429	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_12
0x400360a	            0x89ee	                            mov esi, ebp	      3429	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_12
0x400360c	          0x4c89ef	                            mov rdi, r13	      3429	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_12
0x400360f	      0xe800000000	                          call 0x4003614	      3429	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_12
0x4003614	          0x4889c3	                            mov rbx, rax	      3429	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_12
0x4003617	          0x8d5501	                      lea edx, [rbp + 1]	      3430	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_13
0x400361a	          0x4489f6	                           mov esi, r14d	      3430	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_13
0x400361d	          0x4c89e7	                            mov rdi, r12	      3430	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_13
0x4003620	      0xe800000000	                          call 0x4003625	      3430	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_13
0x4003625	          0x4889d8	                            mov rax, rbx	      3435	channel.c	FUNCTION_80
0x4003628	    0x48833d000000	               cmp qword [0x04003630], 0	      3433	channel.c	FUNCTION_80	IF_11	CALL_14
0x4003630	     0xf849d000000	                            je 0x40036d3	      3433	channel.c	FUNCTION_80	IF_11	CALL_14
0x4003636	      0xb800000000	                              mov eax, 0	      3434	channel.c	FUNCTION_80	CALL_16
0x400363b	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3434	channel.c	FUNCTION_80	CALL_16
0x4003642	          0x4889df	                            mov rdi, rbx	      3434	channel.c	FUNCTION_80	CALL_16
0x4003645	            0xf2ae	              repne scasb al, byte [rdi]	      3434	channel.c	FUNCTION_80	CALL_16
0x4003647	          0x4889c8	                            mov rax, rcx	      3434	channel.c	FUNCTION_80	CALL_16
0x400364a	          0x48f7d0	                                 not rax	      3434	channel.c	FUNCTION_80	CALL_16
0x400364d	        0x488d50ff	                      lea rdx, [rax - 1]	      3434	channel.c	FUNCTION_80	CALL_16
0x4003651	      0xbe00000000	                              mov esi, 0	      3434	channel.c	FUNCTION_80	CALL_16
0x4003656	          0x4c89e7	                            mov rdi, r12	      3434	channel.c	FUNCTION_80	CALL_16
0x4003659	      0xb800000000	                              mov eax, 0	      3434	channel.c	FUNCTION_80	CALL_16
0x400365e	      0xe800000000	                          call 0x4003663	      3434	channel.c	FUNCTION_80	CALL_16
0x4003663	          0x4889d8	                            mov rax, rbx	      3435	channel.c	FUNCTION_80
0x4003666	            0xeb6b	                           jmp 0x40036d3	      3435	channel.c	FUNCTION_80
0x4003668	      0xb800000000	                              mov eax, 0	      3388	channel.c	FUNCTION_80	WHILE_1	IF_5
0x400366d	            0xeb64	                           jmp 0x40036d3	      3388	channel.c	FUNCTION_80	WHILE_1	IF_5
0x400366f	          0x4489f6	                           mov esi, r14d	      3400	channel.c	FUNCTION_80	IF_7	CALL_8
0x4003672	          0x4c89e7	                            mov rdi, r12	      3400	channel.c	FUNCTION_80	IF_7	CALL_8
0x4003675	      0xe860e8ffff	                call sym.channel_get_all	      3400	channel.c	FUNCTION_80	IF_7	CALL_8
0x400367a	          0x4889c3	                            mov rbx, rax	      3400	channel.c	FUNCTION_80	IF_7	CALL_8
0x400367d	            0xeba6	                           jmp 0x4003625	      3400	channel.c	FUNCTION_80	IF_7	CALL_8
0x400367f	          0x4c8b2b	                    mov r13, qword [rbx]	      3406	channel.c	FUNCTION_80	ELSE_1
0x4003682	          0x4889df	                            mov rdi, rbx	      3407	channel.c	FUNCTION_80	ELSE_1	CALL_9
0x4003685	      0xe800000000	                          call 0x400368a	      3407	channel.c	FUNCTION_80	ELSE_1	CALL_9
0x400368a	          0x4889c5	                            mov rbp, rax	      3407	channel.c	FUNCTION_80	ELSE_1	CALL_9
0x400368d	          0x4885c0	                           test rax, rax	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4003690	           0xf94c1	                                 sete cl	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4003693	          0x4939c5	                            cmp r13, rax	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4003696	     0xf8203ffffff	                            jb 0x400359f	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x400369c	            0x84c9	                             test cl, cl	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x400369e	     0xf85fbfeffff	                           jne 0x400359f	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x40036a4	      0xe926ffffff	                           jmp 0x40035cf	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x40036a9	          0x4c8b2b	                    mov r13, qword [rbx]	      3406	channel.c	FUNCTION_80	ELSE_1
0x40036ac	          0x4889df	                            mov rdi, rbx	      3407	channel.c	FUNCTION_80	ELSE_1	CALL_9
0x40036af	      0xe800000000	                          call 0x40036b4	      3407	channel.c	FUNCTION_80	ELSE_1	CALL_9
0x40036b4	          0x4889c5	                            mov rbp, rax	      3407	channel.c	FUNCTION_80	ELSE_1	CALL_9
0x40036b7	          0x4885c0	                           test rax, rax	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x40036ba	           0xf94c1	                                 sete cl	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x40036bd	          0x4939c5	                            cmp r13, rax	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x40036c0	     0xf82d9feffff	                            jb 0x400359f	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x40036c6	            0x84c9	                             test cl, cl	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x40036c8	     0xf85d1feffff	                           jne 0x400359f	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x40036ce	      0xe910ffffff	                           jmp 0x40035e3	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x40036d3	        0x4883c418	                           add rsp, 0x18	      3436	channel.c	FUNCTION_80
0x40036d7	              0x5b	                                 pop rbx	      3436	channel.c	FUNCTION_80
0x40036d8	              0x5d	                                 pop rbp	      3436	channel.c	FUNCTION_80
0x40036d9	            0x415c	                                 pop r12	      3436	channel.c	FUNCTION_80
0x40036db	            0x415d	                                 pop r13	      3436	channel.c	FUNCTION_80
0x40036dd	            0x415e	                                 pop r14	      3436	channel.c	FUNCTION_80
0x40036df	            0x415f	                                 pop r15	      3436	channel.c	FUNCTION_80
0x40036e1	              0xc3	                                     ret	      3436	channel.c	FUNCTION_80
channel_select_setup	IF,4:ELSE,1:FOR,2:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,2	67
0x4005165	            0x4157	                                push r15	      4118	channel.c	FUNCTION_93
0x4005167	            0x4156	                                push r14	      4118	channel.c	FUNCTION_93
0x4005169	            0x4155	                                push r13	      4118	channel.c	FUNCTION_93
0x400516b	            0x4154	                                push r12	      4118	channel.c	FUNCTION_93
0x400516d	              0x55	                                push rbp	      4118	channel.c	FUNCTION_93
0x400516e	              0x53	                                push rbx	      4118	channel.c	FUNCTION_93
0x400516f	        0x4883ec28	                           sub rsp, 0x28	      4118	channel.c	FUNCTION_93
0x4005173	          0x4189ff	                           mov r15d, edi	      4118	channel.c	FUNCTION_93
0x4005176	      0x4889742410	             mov qword [rsp + 0x10], rsi	      4118	channel.c	FUNCTION_93
0x400517b	      0x4889542418	             mov qword [rsp + 0x18], rdx	      4118	channel.c	FUNCTION_93
0x4005180	          0x4989cd	                            mov r13, rcx	      4118	channel.c	FUNCTION_93
0x4005183	      0x4c89442408	                 mov qword [rsp + 8], r8	      4118	channel.c	FUNCTION_93
0x4005188	    0x4c8b25000000	            mov r12, qword [0x0400518f] 	      4125	channel.c	FUNCTION_93	FOR_1
0x400518f	          0x4d85e4	                           test r12, r12	      4125	channel.c	FUNCTION_93	FOR_1
0x4005192	     0xf8597000000	                           jne 0x400522f	      4125	channel.c	FUNCTION_93	FOR_1
0x4005198	      0xe9a4000000	                           jmp 0x4005241	      4125	channel.c	FUNCTION_93	FOR_1
0x400519d	            0x8b2b	                    mov ebp, dword [rbx]	      4129	channel.c	FUNCTION_93	FOR_1	FOR_2
0x400519f	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      4131	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1
0x40051a2	            0x7472	                            je 0x4005216	      4131	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1
0x40051a4	    0x4183bc24a404	              cmp dword [r12 + 0x4a4], 0	      4133	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2
0x40051ad	            0x7436	                            je 0x40051e5	      4133	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2
0x40051af	      0x488b442408	                mov rax, qword [rsp + 8]	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x40051b4	        0x48833800	                      cmp qword [rax], 0	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x40051b8	            0x7411	                            je 0x40051cb	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x40051ba	      0x49837d0000	                      cmp qword [r13], 0	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x40051bf	            0x7f0a	                            jg 0x40051cb	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x40051c1	    0x49817d08204e	            cmp qword [r13 + 8], 0x4e20 	      4139	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x40051c9	            0x7e4b	                           jle 0x4005216	      4139	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x40051cb	      0x488b442408	                mov rax, qword [rsp + 8]	      4141	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x40051d0	          0x4c8928	                    mov qword [rax], r13	      4141	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x40051d3	    0x49c745000000	                      mov qword [r13], 0	      4142	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x40051db	    0x49c74508204e	            mov qword [r13 + 8], 0x4e20 	      4143	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x40051e3	            0xeb31	                           jmp 0x4005216	      4143	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x40051e5	          0x4863fd	                         movsxd rdi, ebp	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x40051e8	      0xe800000000	                          call 0x40051ed	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x40051ed	            0x89ea	                            mov edx, ebp	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x40051ef	          0xc1fa1f	                           sar edx, 0x1f	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x40051f2	          0xc1ea1a	                           shr edx, 0x1a	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x40051f5	        0x8d4c1500	                    lea ecx, [rbp + rdx]	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x40051f9	          0x83e13f	                           and ecx, 0x3f	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x40051fc	            0x29d1	                            sub ecx, edx	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x40051fe	      0xba01000000	                              mov edx, 1	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4005203	          0x48d3e2	                             shl rdx, cl	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4005206	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x400520b	        0x480914c6	             or qword [rsi + rax*8], rdx	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x400520f	          0x4139ef	                           cmp r15d, ebp	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4005212	        0x440f4cfd	                         cmovl r15d, ebp	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4005216	    0x4881c3100100	                          add rbx, 0x110	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x400521d	          0x4939de	                            cmp r14, rbx	      4127	channel.c	FUNCTION_93	FOR_1	FOR_2
0x4005220	     0xf8577ffffff	                           jne 0x400519d	      4127	channel.c	FUNCTION_93	FOR_1	FOR_2
0x4005226	        0x4d8b2424	                    mov r12, qword [r12]	      4125	channel.c	FUNCTION_93	FOR_1
0x400522a	          0x4d85e4	                           test r12, r12	      4125	channel.c	FUNCTION_93	FOR_1
0x400522d	            0x7412	                            je 0x4005241	      4125	channel.c	FUNCTION_93	FOR_1
0x400522f	      0x498d5c2418	                   lea rbx, [r12 + 0x18]	      4125	channel.c	FUNCTION_93	FOR_1
0x4005234	    0x4d8db4244803	                  lea r14, [r12 + 0x348]	      4125	channel.c	FUNCTION_93	FOR_1
0x400523c	      0xe95cffffff	                           jmp 0x400519d	      4125	channel.c	FUNCTION_93	FOR_1
0x4005241	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      4156	channel.c	FUNCTION_93	CALL_2
0x4005246	          0x4489ff	                           mov edi, r15d	      4156	channel.c	FUNCTION_93	CALL_2
0x4005249	      0xe86ab1ffff	              call sym.channel_fill_wfds	      4156	channel.c	FUNCTION_93	CALL_2
0x400524e	        0x4883c428	                           add rsp, 0x28	      4159	channel.c	FUNCTION_93
0x4005252	              0x5b	                                 pop rbx	      4159	channel.c	FUNCTION_93
0x4005253	              0x5d	                                 pop rbp	      4159	channel.c	FUNCTION_93
0x4005254	            0x415c	                                 pop r12	      4159	channel.c	FUNCTION_93
0x4005256	            0x415d	                                 pop r13	      4159	channel.c	FUNCTION_93
0x4005258	            0x415e	                                 pop r14	      4159	channel.c	FUNCTION_93
0x400525a	            0x415f	                                 pop r15	      4159	channel.c	FUNCTION_93
0x400525c	              0xc3	                                     ret	      4159	channel.c	FUNCTION_93
channel_status	IF,10:ELSE,2:FOR,1:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,4	52
0x400265d	          0x4885ff	                           test rdi, rdi	      2759	channel.c	FUNCTION_65	IF_1
0x4002660	     0xf8491000000	                            je 0x40026f7	      2759	channel.c	FUNCTION_65	IF_1
0x4002666	              0x55	                                push rbp	      2755	channel.c	FUNCTION_65
0x4002667	              0x53	                                push rbx	      2755	channel.c	FUNCTION_65
0x4002668	          0x4889fd	                            mov rbp, rdi	      2755	channel.c	FUNCTION_65
0x400266b	          0x83fe01	                              cmp esi, 1	      2761	channel.c	FUNCTION_65	IF_2
0x400266e	            0x7521	                           jne 0x4002691	      2761	channel.c	FUNCTION_65	IF_2
0x4002670	      0xb800000000	                              mov eax, 0	      2764	channel.c	FUNCTION_65	IF_2	IF_3
0x4002675	    0x83bf28010000	cmp dword [rdi + 0x128], 0xffffffffffffffff	      2763	channel.c	FUNCTION_65	IF_2	IF_3
0x400267c	     0xf8580000000	                           jne 0x4002702	      2763	channel.c	FUNCTION_65	IF_2	IF_3
0x4002682	      0xe800000000	                          call 0x4002687	      2765	channel.c	FUNCTION_65	IF_2	IF_4	CALL_1
0x4002687	            0x85c0	                           test eax, eax	      2766	channel.c	FUNCTION_65	IF_2	IF_4
0x4002689	           0xf95c0	                                setne al	      2766	channel.c	FUNCTION_65	IF_2	IF_4
0x400268c	           0xfb6c0	                           movzx eax, al	      2766	channel.c	FUNCTION_65	IF_2	IF_4
0x400268f	            0xeb54	                           jmp 0x40026e5	      2766	channel.c	FUNCTION_65	IF_2	IF_4
0x4002691	          0x83fe02	                              cmp esi, 2	      2768	channel.c	FUNCTION_65	ELSE_1	IF_5
0x4002694	            0x751d	                           jne 0x40026b3	      2768	channel.c	FUNCTION_65	ELSE_1	IF_5
0x4002696	      0xb800000000	                              mov eax, 0	      2771	channel.c	FUNCTION_65	ELSE_1	IF_5	IF_6
0x400269b	    0x83bf38020000	cmp dword [rdi + 0x238], 0xffffffffffffffff	      2770	channel.c	FUNCTION_65	ELSE_1	IF_5	IF_6
0x40026a2	            0x755e	                           jne 0x4002702	      2770	channel.c	FUNCTION_65	ELSE_1	IF_5	IF_6
0x40026a4	      0xe800000000	                          call 0x40026a9	      2772	channel.c	FUNCTION_65	ELSE_1	IF_5	IF_7	CALL_2
0x40026a9	            0x85c0	                           test eax, eax	      2766	channel.c	FUNCTION_65	IF_2	IF_4
0x40026ab	           0xf95c0	                                setne al	      2766	channel.c	FUNCTION_65	IF_2	IF_4
0x40026ae	           0xfb6c0	                           movzx eax, al	      2766	channel.c	FUNCTION_65	IF_2	IF_4
0x40026b1	            0xeb32	                           jmp 0x40026e5	      2766	channel.c	FUNCTION_65	IF_2	IF_4
0x40026b3	      0xe800000000	                          call 0x40026b8	      2777	channel.c	FUNCTION_65	ELSE_2	IF_8	CALL_3
0x40026b8	            0x89c2	                            mov edx, eax	      2777	channel.c	FUNCTION_65	ELSE_2	IF_8	CALL_3
0x40026ba	      0xb800000000	                              mov eax, 0	      2778	channel.c	FUNCTION_65	ELSE_2	IF_8
0x40026bf	            0x85d2	                           test edx, edx	      2777	channel.c	FUNCTION_65	ELSE_2	IF_8	CALL_3
0x40026c1	            0x753f	                           jne 0x4002702	      2777	channel.c	FUNCTION_65	ELSE_2	IF_8	CALL_3
0x40026c3	      0xbb00000000	                              mov ebx, 0	      2777	channel.c	FUNCTION_65	ELSE_2	IF_8	CALL_3
0x40026c8	            0x89de	                            mov esi, ebx	      2780	channel.c	FUNCTION_65	ELSE_2	FOR_1	IF_9	CALL_4
0x40026ca	          0x4889ef	                            mov rdi, rbp	      2780	channel.c	FUNCTION_65	ELSE_2	FOR_1	IF_9	CALL_4
0x40026cd	      0xe800000000	                          call 0x40026d2	      2780	channel.c	FUNCTION_65	ELSE_2	FOR_1	IF_9	CALL_4
0x40026d2	            0x85c0	                           test eax, eax	      2780	channel.c	FUNCTION_65	ELSE_2	FOR_1	IF_9	CALL_4
0x40026d4	            0x7527	                           jne 0x40026fd	      2780	channel.c	FUNCTION_65	ELSE_2	FOR_1	IF_9	CALL_4
0x40026d6	          0x83c301	                              add ebx, 1	      2779	channel.c	FUNCTION_65	ELSE_2	FOR_1
0x40026d9	          0x83fb02	                              cmp ebx, 2	      2779	channel.c	FUNCTION_65	ELSE_2	FOR_1
0x40026dc	            0x76ea	                           jbe 0x40026c8	      2779	channel.c	FUNCTION_65	ELSE_2	FOR_1
0x40026de	      0xb800000000	                              mov eax, 0	      2789	channel.c	FUNCTION_65
0x40026e3	            0xeb1d	                           jmp 0x4002702	      2789	channel.c	FUNCTION_65
0x40026e5	            0x85c0	                           test eax, eax	      2789	channel.c	FUNCTION_65
0x40026e7	      0xba00000000	                              mov edx, 0	      2789	channel.c	FUNCTION_65
0x40026ec	      0xb800000000	                              mov eax, 0	      2789	channel.c	FUNCTION_65
0x40026f1	        0x480f44c2	                          cmove rax, rdx	      2789	channel.c	FUNCTION_65
0x40026f5	            0xeb0b	                           jmp 0x4002702	      2789	channel.c	FUNCTION_65
0x40026f7	      0xb800000000	                              mov eax, 0	      2760	channel.c	FUNCTION_65	IF_1
0x40026fc	              0xc3	                                     ret	      2790	channel.c	FUNCTION_65
0x40026fd	      0xb800000000	                              mov eax, 0	      2788	channel.c	FUNCTION_65	IF_10
0x4002702	              0x5b	                                 pop rbx	      2790	channel.c	FUNCTION_65
0x4002703	              0x5d	                                 pop rbp	      2790	channel.c	FUNCTION_65
0x4002704	              0xc3	                                     ret	      2790	channel.c	FUNCTION_65
channel_get_all	IF,3:ELSE,0:FOR,2:SWITCH,0:functions,0:DO,1:WHILE,1:CALL,5	85
0x4001eda	            0x4157	                                push r15	      1666	channel.c	FUNCTION_47
0x4001edc	            0x4156	                                push r14	      1666	channel.c	FUNCTION_47
0x4001ede	            0x4155	                                push r13	      1666	channel.c	FUNCTION_47
0x4001ee0	            0x4154	                                push r12	      1666	channel.c	FUNCTION_47
0x4001ee2	              0x55	                                push rbp	      1666	channel.c	FUNCTION_47
0x4001ee3	              0x53	                                push rbx	      1666	channel.c	FUNCTION_47
0x4001ee4	        0x4883ec08	                              sub rsp, 8	      1666	channel.c	FUNCTION_47
0x4001ee8	          0x4989fc	                            mov r12, rdi	      1666	channel.c	FUNCTION_47
0x4001eeb	          0x4189f5	                           mov r13d, esi	      1666	channel.c	FUNCTION_47
0x4001eee	            0x89f0	                            mov eax, esi	      1674	channel.c	FUNCTION_47	IF_1
0x4001ef0	          0x4889c2	                            mov rdx, rax	      1674	channel.c	FUNCTION_47	IF_1
0x4001ef3	        0x48c1e204	                              shl rdx, 4	      1674	channel.c	FUNCTION_47	IF_1
0x4001ef7	        0x48c1e008	                              shl rax, 8	      1674	channel.c	FUNCTION_47	IF_1
0x4001efb	          0x4801d0	                            add rax, rdx	      1674	channel.c	FUNCTION_47	IF_1
0x4001efe	      0x488b440740	      mov rax, qword [rdi + rax + 0x40] 	      1674	channel.c	FUNCTION_47	IF_1
0x4001f03	          0x4885c0	                           test rax, rax	      1674	channel.c	FUNCTION_47	IF_1
0x4001f06	            0x740c	                            je 0x4001f14	      1674	channel.c	FUNCTION_47	IF_1
0x4001f08	      0xbb00000000	                              mov ebx, 0	      1674	channel.c	FUNCTION_47	IF_1
0x4001f0d	      0x4883781000	               cmp qword [rax + 0x10], 0	      1674	channel.c	FUNCTION_47	IF_1
0x4001f12	            0x7510	                           jne 0x4001f24	      1674	channel.c	FUNCTION_47	IF_1
0x4001f14	          0x4489ee	                           mov esi, r13d	      1675	channel.c	FUNCTION_47	CALL_1
0x4001f17	          0x4c89e7	                            mov rdi, r12	      1675	channel.c	FUNCTION_47	CALL_1
0x4001f1a	      0xe800000000	                          call 0x4001f1f	      1675	channel.c	FUNCTION_47	CALL_1
0x4001f1f	      0xe9b4000000	                           jmp 0x4001fd8	      1675	channel.c	FUNCTION_47	CALL_1
0x4001f24	        0x48035808	                add rbx, qword [rax + 8]	      1679	channel.c	FUNCTION_47	FOR_1
0x4001f28	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1678	channel.c	FUNCTION_47	FOR_1
0x4001f2c	          0x4885c0	                           test rax, rax	      1678	channel.c	FUNCTION_47	FOR_1
0x4001f2f	            0x75f3	                           jne 0x4001f24	      1678	channel.c	FUNCTION_47	FOR_1
0x4001f31	        0x488d7b01	                      lea rdi, [rbx + 1]	      1680	channel.c	FUNCTION_47	CALL_2
0x4001f35	      0xbe01000000	                              mov esi, 1	      1680	channel.c	FUNCTION_47	CALL_2
0x4001f3a	      0xe800000000	                          call 0x4001f3f	      1680	channel.c	FUNCTION_47	CALL_2
0x4001f3f	          0x4989c6	                            mov r14, rax	      1680	channel.c	FUNCTION_47	CALL_2
0x4001f42	          0x4885c0	                           test rax, rax	      1681	channel.c	FUNCTION_47	IF_2
0x4001f45	     0xf8483000000	                            je 0x4001fce	      1681	channel.c	FUNCTION_47	IF_2
0x4001f4b	          0x4489e8	                           mov eax, r13d	      1684	channel.c	FUNCTION_47	FOR_2
0x4001f4e	          0x4889c2	                            mov rdx, rax	      1684	channel.c	FUNCTION_47	FOR_2
0x4001f51	        0x48c1e204	                              shl rdx, 4	      1684	channel.c	FUNCTION_47	FOR_2
0x4001f55	        0x48c1e008	                              shl rax, 8	      1684	channel.c	FUNCTION_47	FOR_2
0x4001f59	          0x4801d0	                            add rax, rdx	      1684	channel.c	FUNCTION_47	FOR_2
0x4001f5c	      0x498b6c0440	      mov rbp, qword [r12 + rax + 0x40] 	      1684	channel.c	FUNCTION_47	FOR_2
0x4001f61	          0x4885ed	                           test rbp, rbp	      1684	channel.c	FUNCTION_47	FOR_2
0x4001f64	            0x7422	                            je 0x4001f88	      1684	channel.c	FUNCTION_47	FOR_2
0x4001f66	          0x4d89f7	                            mov r15, r14	      1684	channel.c	FUNCTION_47	FOR_2
0x4001f69	        0x488b5508	                mov rdx, qword [rbp + 8]	        59	string3.h	FUNCTION_136	CALL_3
0x4001f6d	        0x488b7500	                    mov rsi, qword [rbp]	        59	string3.h	FUNCTION_136	CALL_3
0x4001f71	          0x4c89ff	                            mov rdi, r15	        59	string3.h	FUNCTION_136	CALL_3
0x4001f74	      0xe800000000	                          call 0x4001f79	        59	string3.h	FUNCTION_136	CALL_3
0x4001f79	        0x4c037d08	                add r15, qword [rbp + 8]	      1687	channel.c	FUNCTION_47	FOR_2
0x4001f7d	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      1684	channel.c	FUNCTION_47	FOR_2
0x4001f81	          0x4885ed	                           test rbp, rbp	      1684	channel.c	FUNCTION_47	FOR_2
0x4001f84	            0x75e3	                           jne 0x4001f69	      1684	channel.c	FUNCTION_47	FOR_2
0x4001f86	            0xeb03	                           jmp 0x4001f8b	      1684	channel.c	FUNCTION_47	FOR_2
0x4001f88	          0x4d89f7	                            mov r15, r14	      1683	channel.c	FUNCTION_47
0x4001f8b	        0x41c60700	                       mov byte [r15], 0	      1689	channel.c	FUNCTION_47
0x4001f8f	          0x4489ee	                           mov esi, r13d	      1694	channel.c	FUNCTION_47	DO_1	CALL_4
0x4001f92	          0x4c89e7	                            mov rdi, r12	      1694	channel.c	FUNCTION_47	DO_1	CALL_4
0x4001f95	      0xe800000000	                          call 0x4001f9a	      1694	channel.c	FUNCTION_47	DO_1	CALL_4
0x4001f9a	          0x4889c5	                            mov rbp, rax	      1694	channel.c	FUNCTION_47	DO_1	CALL_4
0x4001f9d	          0x4889c7	                            mov rdi, rax	      1695	channel.c	FUNCTION_47	DO_1	CALL_5
0x4001fa0	      0xe800000000	                          call 0x4001fa5	      1695	channel.c	FUNCTION_47	DO_1	CALL_5
0x4001fa5	          0x4885ed	                           test rbp, rbp	      1696	channel.c	FUNCTION_47	DO_1
0x4001fa8	            0x75e5	                           jne 0x4001f8f	      1696	channel.c	FUNCTION_47	DO_1
0x4001faa	          0x4885db	                           test rbx, rbx	      1699	channel.c	FUNCTION_47	WHILE_1
0x4001fad	            0x7426	                            je 0x4001fd5	      1699	channel.c	FUNCTION_47	WHILE_1
0x4001faf	        0x498d141e	                    lea rdx, [r14 + rbx]	      1699	channel.c	FUNCTION_47	WHILE_1
0x4001fb3	          0x4c89f0	                            mov rax, r14	      1699	channel.c	FUNCTION_47	WHILE_1
0x4001fb6	        0x807aff00	                   cmp byte [rdx - 1], 0	      1702	channel.c	FUNCTION_47	WHILE_1	IF_3
0x4001fba	            0x7504	                           jne 0x4001fc0	      1702	channel.c	FUNCTION_47	WHILE_1	IF_3
0x4001fbc	        0xc642ff0a	                 mov byte [rdx - 1], 0xa	      1703	channel.c	FUNCTION_47	WHILE_1	IF_3
0x4001fc0	        0x4883ea01	                              sub rdx, 1	      1703	channel.c	FUNCTION_47	WHILE_1	IF_3
0x4001fc4	          0x4839c2	                            cmp rdx, rax	      1699	channel.c	FUNCTION_47	WHILE_1
0x4001fc7	            0x75ed	                           jne 0x4001fb6	      1699	channel.c	FUNCTION_47	WHILE_1
0x4001fc9	          0x4c89f0	                            mov rax, r14	      1706	channel.c	FUNCTION_47
0x4001fcc	            0xeb0a	                           jmp 0x4001fd8	      1706	channel.c	FUNCTION_47
0x4001fce	      0xb800000000	                              mov eax, 0	      1682	channel.c	FUNCTION_47	IF_2
0x4001fd3	            0xeb03	                           jmp 0x4001fd8	      1682	channel.c	FUNCTION_47	IF_2
0x4001fd5	          0x4c89f0	                            mov rax, r14	      1706	channel.c	FUNCTION_47
0x4001fd8	        0x4883c408	                              add rsp, 8	      1707	channel.c	FUNCTION_47
0x4001fdc	              0x5b	                                 pop rbx	      1707	channel.c	FUNCTION_47
0x4001fdd	              0x5d	                                 pop rbp	      1707	channel.c	FUNCTION_47
0x4001fde	            0x415c	                                 pop r12	      1707	channel.c	FUNCTION_47
0x4001fe0	            0x415d	                                 pop r13	      1707	channel.c	FUNCTION_47
0x4001fe2	            0x415e	                                 pop r14	      1707	channel.c	FUNCTION_47
0x4001fe4	            0x415f	                                 pop r15	      1707	channel.c	FUNCTION_47
0x4001fe6	              0xc3	                                     ret	      1707	channel.c	FUNCTION_47
has_pending_job	IF,1:ELSE,0:FOR,1:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,2	31
0x4007cfb	              0x53	                                push rbx	      5473	channel.c	FUNCTION_128
0x4007cfc	    0x488b1d000000	            mov rbx, qword [0x04007d03] 	      5476	channel.c	FUNCTION_128	FOR_1
0x4007d03	          0x4885db	                           test rbx, rbx	      5476	channel.c	FUNCTION_128	FOR_1
0x4007d06	            0x743c	                            je 0x4007d44	      5476	channel.c	FUNCTION_128	FOR_1
0x4007d08	          0x8b4328	            mov eax, dword [rbx + 0x28] 	      5479	channel.c	FUNCTION_128	FOR_1	IF_1	CALL_1
0x4007d0b	          0x83f801	                              cmp eax, 1	      5479	channel.c	FUNCTION_128	FOR_1	IF_1	CALL_1
0x4007d0e	            0x750e	                           jne 0x4007d1e	      5479	channel.c	FUNCTION_128	FOR_1	IF_1	CALL_1
0x4007d10	          0x4889df	                            mov rdi, rbx	      5479	channel.c	FUNCTION_128	FOR_1	IF_1	CALL_1
0x4007d13	      0xe81e84ffff	       call sym.job_channel_still_useful	      5479	channel.c	FUNCTION_128	FOR_1	IF_1	CALL_1
0x4007d18	            0x85c0	                           test eax, eax	      5479	channel.c	FUNCTION_128	FOR_1	IF_1	CALL_1
0x4007d1a	            0x7519	                           jne 0x4007d35	      5479	channel.c	FUNCTION_128	FOR_1	IF_1	CALL_1
0x4007d1c	            0xeb2d	                           jmp 0x4007d4b	      5479	channel.c	FUNCTION_128	FOR_1	IF_1	CALL_1
0x4007d1e	          0x83f803	                              cmp eax, 3	      5480	channel.c	FUNCTION_128	FOR_1	IF_1
0x4007d21	            0x7512	                           jne 0x4007d35	      5480	channel.c	FUNCTION_128	FOR_1	IF_1
0x4007d23	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      5122	channel.c	FUNCTION_115	CALL_1
0x4007d27	          0x4885c0	                           test rax, rax	      5122	channel.c	FUNCTION_115	CALL_1
0x4007d2a	            0x7409	                            je 0x4007d35	      5122	channel.c	FUNCTION_115	CALL_1
0x4007d2c	    0x83b86c040000	              cmp dword [rax + 0x46c], 0	      5481	channel.c	FUNCTION_128	FOR_1	IF_1	CALL_2
0x4007d33	            0x741d	                            je 0x4007d52	      5481	channel.c	FUNCTION_128	FOR_1	IF_1	CALL_2
0x4007d35	          0x488b1b	                    mov rbx, qword [rbx]	      5476	channel.c	FUNCTION_128	FOR_1
0x4007d38	          0x4885db	                           test rbx, rbx	      5476	channel.c	FUNCTION_128	FOR_1
0x4007d3b	            0x75cb	                           jne 0x4007d08	      5476	channel.c	FUNCTION_128	FOR_1
0x4007d3d	      0xb800000000	                              mov eax, 0	      5483	channel.c	FUNCTION_128
0x4007d42	            0xeb13	                           jmp 0x4007d57	      5483	channel.c	FUNCTION_128
0x4007d44	      0xb800000000	                              mov eax, 0	      5483	channel.c	FUNCTION_128
0x4007d49	            0xeb0c	                           jmp 0x4007d57	      5483	channel.c	FUNCTION_128
0x4007d4b	      0xb801000000	                              mov eax, 1	      5482	channel.c	FUNCTION_128	FOR_1	IF_1
0x4007d50	            0xeb05	                           jmp 0x4007d57	      5482	channel.c	FUNCTION_128	FOR_1	IF_1
0x4007d52	      0xb801000000	                              mov eax, 1	      5482	channel.c	FUNCTION_128	FOR_1	IF_1
0x4007d57	              0x5b	                                 pop rbx	      5484	channel.c	FUNCTION_128
0x4007d58	              0xc3	                                     ret	      5484	channel.c	FUNCTION_128
free_job_options	IF,11:ELSE,5:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,11	53
0x400593f	              0x53	                                push rbx	      4452	channel.c	FUNCTION_105
0x4005940	          0x4889fb	                            mov rbx, rdi	      4452	channel.c	FUNCTION_105
0x4005943	    0x488bbfa80100	           mov rdi, qword [rdi + 0x1a8] 	      4453	channel.c	FUNCTION_105	IF_1
0x400594a	          0x4885ff	                           test rdi, rdi	      4453	channel.c	FUNCTION_105	IF_1
0x400594d	            0x7407	                            je 0x4005956	      4453	channel.c	FUNCTION_105	IF_1
0x400594f	      0xe800000000	                          call 0x4005954	      4454	channel.c	FUNCTION_105	CALL_1
0x4005954	            0xeb11	                           jmp 0x4005967	      4454	channel.c	FUNCTION_105	CALL_1
0x4005956	    0x488bbba00100	           mov rdi, qword [rbx + 0x1a0] 	      4455	channel.c	FUNCTION_105	ELSE_1	IF_2
0x400595d	          0x4885ff	                           test rdi, rdi	      4455	channel.c	FUNCTION_105	ELSE_1	IF_2
0x4005960	            0x7405	                            je 0x4005967	      4455	channel.c	FUNCTION_105	ELSE_1	IF_2
0x4005962	      0xe800000000	                          call 0x4005967	      4456	channel.c	FUNCTION_105	ELSE_1	IF_2
0x4005967	    0x488bbbb80100	           mov rdi, qword [rbx + 0x1b8] 	      4457	channel.c	FUNCTION_105	IF_3
0x400596e	          0x4885ff	                           test rdi, rdi	      4457	channel.c	FUNCTION_105	IF_3
0x4005971	            0x7407	                            je 0x400597a	      4457	channel.c	FUNCTION_105	IF_3
0x4005973	      0xe800000000	                          call 0x4005978	      4458	channel.c	FUNCTION_105	CALL_3
0x4005978	            0xeb11	                           jmp 0x400598b	      4458	channel.c	FUNCTION_105	CALL_3
0x400597a	    0x488bbbb00100	           mov rdi, qword [rbx + 0x1b0] 	      4459	channel.c	FUNCTION_105	ELSE_2	IF_4
0x4005981	          0x4885ff	                           test rdi, rdi	      4459	channel.c	FUNCTION_105	ELSE_2	IF_4
0x4005984	            0x7405	                            je 0x400598b	      4459	channel.c	FUNCTION_105	ELSE_2	IF_4
0x4005986	      0xe800000000	                          call 0x400598b	      4460	channel.c	FUNCTION_105	ELSE_2	IF_4
0x400598b	    0x488bbbc80100	           mov rdi, qword [rbx + 0x1c8] 	      4461	channel.c	FUNCTION_105	IF_5
0x4005992	          0x4885ff	                           test rdi, rdi	      4461	channel.c	FUNCTION_105	IF_5
0x4005995	            0x7407	                            je 0x400599e	      4461	channel.c	FUNCTION_105	IF_5
0x4005997	      0xe800000000	                          call 0x400599c	      4462	channel.c	FUNCTION_105	CALL_5
0x400599c	            0xeb11	                           jmp 0x40059af	      4462	channel.c	FUNCTION_105	CALL_5
0x400599e	    0x488bbbc00100	           mov rdi, qword [rbx + 0x1c0] 	      4463	channel.c	FUNCTION_105	ELSE_3	IF_6
0x40059a5	          0x4885ff	                           test rdi, rdi	      4463	channel.c	FUNCTION_105	ELSE_3	IF_6
0x40059a8	            0x7405	                            je 0x40059af	      4463	channel.c	FUNCTION_105	ELSE_3	IF_6
0x40059aa	      0xe800000000	                          call 0x40059af	      4464	channel.c	FUNCTION_105	ELSE_3	IF_6
0x40059af	    0x488bbbd80100	           mov rdi, qword [rbx + 0x1d8] 	      4465	channel.c	FUNCTION_105	IF_7
0x40059b6	          0x4885ff	                           test rdi, rdi	      4465	channel.c	FUNCTION_105	IF_7
0x40059b9	            0x7407	                            je 0x40059c2	      4465	channel.c	FUNCTION_105	IF_7
0x40059bb	      0xe800000000	                          call 0x40059c0	      4466	channel.c	FUNCTION_105	CALL_7
0x40059c0	            0xeb11	                           jmp 0x40059d3	      4466	channel.c	FUNCTION_105	CALL_7
0x40059c2	    0x488bbbd00100	           mov rdi, qword [rbx + 0x1d0] 	      4467	channel.c	FUNCTION_105	ELSE_4	IF_8
0x40059c9	          0x4885ff	                           test rdi, rdi	      4467	channel.c	FUNCTION_105	ELSE_4	IF_8
0x40059cc	            0x7405	                            je 0x40059d3	      4467	channel.c	FUNCTION_105	ELSE_4	IF_8
0x40059ce	      0xe800000000	                          call 0x40059d3	      4468	channel.c	FUNCTION_105	ELSE_4	IF_8
0x40059d3	    0x488bbbe80100	           mov rdi, qword [rbx + 0x1e8] 	      4469	channel.c	FUNCTION_105	IF_9
0x40059da	          0x4885ff	                           test rdi, rdi	      4469	channel.c	FUNCTION_105	IF_9
0x40059dd	            0x7407	                            je 0x40059e6	      4469	channel.c	FUNCTION_105	IF_9
0x40059df	      0xe800000000	                          call 0x40059e4	      4470	channel.c	FUNCTION_105	CALL_9
0x40059e4	            0xeb11	                           jmp 0x40059f7	      4470	channel.c	FUNCTION_105	CALL_9
0x40059e6	    0x488bbbe00100	           mov rdi, qword [rbx + 0x1e0] 	      4471	channel.c	FUNCTION_105	ELSE_5	IF_10
0x40059ed	          0x4885ff	                           test rdi, rdi	      4471	channel.c	FUNCTION_105	ELSE_5	IF_10
0x40059f0	            0x7405	                            je 0x40059f7	      4471	channel.c	FUNCTION_105	ELSE_5	IF_10
0x40059f2	      0xe800000000	                          call 0x40059f7	      4472	channel.c	FUNCTION_105	ELSE_5	IF_10
0x40059f7	    0x488bbb600200	           mov rdi, qword [rbx + 0x260] 	      4473	channel.c	FUNCTION_105	IF_11
0x40059fe	          0x4885ff	                           test rdi, rdi	      4473	channel.c	FUNCTION_105	IF_11
0x4005a01	            0x7405	                            je 0x4005a08	      4473	channel.c	FUNCTION_105	IF_11
0x4005a03	      0xe800000000	                          call 0x4005a08	      4474	channel.c	FUNCTION_105	CALL_11
0x4005a08	              0x5b	                                 pop rbx	      4475	channel.c	FUNCTION_105
0x4005a09	              0xc3	                                     ret	      4475	channel.c	FUNCTION_105
has_any_channel	IF,0:ELSE,0:FOR,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,0	4
0x40011c4	    0x48833d000000	               cmp qword [0x040011cc], 0	       299	channel.c	FUNCTION_8
0x40011cc	           0xf95c0	                                setne al	       299	channel.c	FUNCTION_8
0x40011cf	           0xfb6c0	                           movzx eax, al	       299	channel.c	FUNCTION_8
0x40011d2	              0xc3	                                     ret	       300	channel.c	FUNCTION_8
set_ref_in_job	IF,1:ELSE,0:FOR,1:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,2	45
0x40079ea	            0x4154	                                push r12	      5312	channel.c	FUNCTION_121
0x40079ec	              0x55	                                push rbp	      5312	channel.c	FUNCTION_121
0x40079ed	              0x53	                                push rbx	      5312	channel.c	FUNCTION_121
0x40079ee	        0x4883ec20	                           sub rsp, 0x20	      5312	channel.c	FUNCTION_121
0x40079f2	    0x64488b042528	                mov rax, qword fs:[0x28]	      5312	channel.c	FUNCTION_121
0x40079fb	      0x4889442418	             mov qword [rsp + 0x18], rax	      5312	channel.c	FUNCTION_121
0x4007a00	            0x31c0	                            xor eax, eax	      5312	channel.c	FUNCTION_121
0x4007a02	    0x488b1d000000	            mov rbx, qword [0x04007a09] 	      5317	channel.c	FUNCTION_121	FOR_1
0x4007a09	          0x4885db	                           test rbx, rbx	      5317	channel.c	FUNCTION_121	FOR_1
0x4007a0c	            0x7454	                            je 0x4007a62	      5317	channel.c	FUNCTION_121	FOR_1
0x4007a0e	          0x4189fc	                           mov r12d, edi	      5317	channel.c	FUNCTION_121	FOR_1
0x4007a11	      0xbd00000000	                              mov ebp, 0	      5317	channel.c	FUNCTION_121	FOR_1
0x4007a16	          0x4889df	                            mov rdi, rbx	      5318	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_1
0x4007a19	      0xe83587ffff	               call sym.job_still_useful	      5318	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_1
0x4007a1e	            0x85c0	                           test eax, eax	      5318	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_1
0x4007a20	            0x7436	                            je 0x4007a58	      5318	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_1
0x4007a22	    0xc70424090000	                      mov dword [rsp], 9	      5320	channel.c	FUNCTION_121	FOR_1	IF_1
0x4007a29	      0x48895c2408	                mov qword [rsp + 8], rbx	      5321	channel.c	FUNCTION_121	FOR_1	IF_1
0x4007a2e	            0x85ed	                           test ebp, ebp	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x4007a30	            0x7521	                           jne 0x4007a53	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x4007a32	      0xb900000000	                              mov ecx, 0	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x4007a37	      0xba00000000	                              mov edx, 0	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x4007a3c	          0x4489e6	                           mov esi, r12d	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x4007a3f	          0x4889e7	                            mov rdi, rsp	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x4007a42	      0xe800000000	                          call 0x4007a47	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x4007a47	            0x85c0	                           test eax, eax	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x4007a49	        0x400f95c5	                               setne bpl	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x4007a4d	        0x400fb6ed	                          movzx ebp, bpl	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x4007a51	            0xeb05	                           jmp 0x4007a58	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x4007a53	      0xbd01000000	                              mov ebp, 1	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x4007a58	          0x488b1b	                    mov rbx, qword [rbx]	      5317	channel.c	FUNCTION_121	FOR_1
0x4007a5b	          0x4885db	                           test rbx, rbx	      5317	channel.c	FUNCTION_121	FOR_1
0x4007a5e	            0x75b6	                           jne 0x4007a16	      5317	channel.c	FUNCTION_121	FOR_1
0x4007a60	            0xeb05	                           jmp 0x4007a67	      5317	channel.c	FUNCTION_121	FOR_1
0x4007a62	      0xbd00000000	                              mov ebp, 0	      5313	channel.c	FUNCTION_121
0x4007a67	            0x89e8	                            mov eax, ebp	      5325	channel.c	FUNCTION_121
0x4007a69	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      5325	channel.c	FUNCTION_121
0x4007a6e	    0x644833142528	                xor rdx, qword fs:[0x28]	      5325	channel.c	FUNCTION_121
0x4007a77	            0x7405	                            je 0x4007a7e	      5325	channel.c	FUNCTION_121
0x4007a79	      0xe800000000	                          call 0x4007a7e	      5325	channel.c	FUNCTION_121
0x4007a7e	        0x4883c420	                           add rsp, 0x20	      5325	channel.c	FUNCTION_121
0x4007a82	              0x5b	                                 pop rbx	      5325	channel.c	FUNCTION_121
0x4007a83	              0x5d	                                 pop rbp	      5325	channel.c	FUNCTION_121
0x4007a84	            0x415c	                                 pop r12	      5325	channel.c	FUNCTION_121
0x4007a86	              0xc3	                                     ret	      5325	channel.c	FUNCTION_121
channel_set_options	IF,29:ELSE,5:FOR,2:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,20	223
0x4001350	            0x4154	                                push r12	      1165	channel.c	FUNCTION_34
0x4001352	              0x55	                                push rbp	      1165	channel.c	FUNCTION_34
0x4001353	              0x53	                                push rbx	      1165	channel.c	FUNCTION_34
0x4001354	          0x4889fd	                            mov rbp, rdi	      1165	channel.c	FUNCTION_34
0x4001357	          0x4889f3	                            mov rbx, rsi	      1165	channel.c	FUNCTION_34
0x400135a	          0xf60601	                      test byte [rsi], 1	      1168	channel.c	FUNCTION_34	IF_1
0x400135d	            0x7421	                            je 0x4001380	      1168	channel.c	FUNCTION_34	IF_1
0x400135f	          0x8b4608	                mov eax, dword [rsi + 8]	      1170	channel.c	FUNCTION_34	IF_1	FOR_1
0x4001362	          0x894720	             mov dword [rdi + 0x20], eax	      1170	channel.c	FUNCTION_34	IF_1	FOR_1
0x4001365	          0x8b4608	                mov eax, dword [rsi + 8]	      1170	channel.c	FUNCTION_34	IF_1	FOR_1
0x4001368	    0x898730010000	            mov dword [rdi + 0x130], eax	      1170	channel.c	FUNCTION_34	IF_1	FOR_1
0x400136e	          0x8b4608	                mov eax, dword [rsi + 8]	      1170	channel.c	FUNCTION_34	IF_1	FOR_1
0x4001371	    0x898740020000	            mov dword [rdi + 0x240], eax	      1170	channel.c	FUNCTION_34	IF_1	FOR_1
0x4001377	          0x8b4608	                mov eax, dword [rsi + 8]	      1170	channel.c	FUNCTION_34	IF_1	FOR_1
0x400137a	    0x898750030000	            mov dword [rdi + 0x350], eax	      1170	channel.c	FUNCTION_34	IF_1	FOR_1
0x4001380	          0xf60302	                      test byte [rbx], 2	      1171	channel.c	FUNCTION_34	IF_2
0x4001383	            0x7409	                            je 0x400138e	      1171	channel.c	FUNCTION_34	IF_2
0x4001385	          0x8b430c	              mov eax, dword [rbx + 0xc]	      1172	channel.c	FUNCTION_34	IF_2
0x4001388	    0x898550030000	           mov dword [rbp + 0x350], eax 	      1172	channel.c	FUNCTION_34	IF_2
0x400138e	          0xf60304	                      test byte [rbx], 4	      1173	channel.c	FUNCTION_34	IF_3
0x4001391	            0x7409	                            je 0x400139c	      1173	channel.c	FUNCTION_34	IF_3
0x4001393	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      1174	channel.c	FUNCTION_34	IF_3
0x4001396	    0x898530010000	           mov dword [rbp + 0x130], eax 	      1174	channel.c	FUNCTION_34	IF_3
0x400139c	          0xf60308	                      test byte [rbx], 8	      1175	channel.c	FUNCTION_34	IF_4
0x400139f	            0x7409	                            je 0x40013aa	      1175	channel.c	FUNCTION_34	IF_4
0x40013a1	          0x8b4314	            mov eax, dword [rbx + 0x14] 	      1176	channel.c	FUNCTION_34	IF_4
0x40013a4	    0x898540020000	           mov dword [rbp + 0x240], eax 	      1176	channel.c	FUNCTION_34	IF_4
0x40013aa	    0xf70300020000	                 test dword [rbx], 0x200	      1178	channel.c	FUNCTION_34	IF_5
0x40013b0	            0x742d	                            je 0x40013df	      1178	channel.c	FUNCTION_34	IF_5
0x40013b2	    0x8b83f8010000	           mov eax, dword [rbx + 0x1f8] 	      1180	channel.c	FUNCTION_34	IF_5	FOR_2
0x40013b8	          0x894528	            mov dword [rbp + 0x28], eax 	      1180	channel.c	FUNCTION_34	IF_5	FOR_2
0x40013bb	    0x8b83f8010000	           mov eax, dword [rbx + 0x1f8] 	      1180	channel.c	FUNCTION_34	IF_5	FOR_2
0x40013c1	    0x898538010000	           mov dword [rbp + 0x138], eax 	      1180	channel.c	FUNCTION_34	IF_5	FOR_2
0x40013c7	    0x8b83f8010000	           mov eax, dword [rbx + 0x1f8] 	      1180	channel.c	FUNCTION_34	IF_5	FOR_2
0x40013cd	    0x898548020000	           mov dword [rbp + 0x248], eax 	      1180	channel.c	FUNCTION_34	IF_5	FOR_2
0x40013d3	    0x8b83f8010000	           mov eax, dword [rbx + 0x1f8] 	      1180	channel.c	FUNCTION_34	IF_5	FOR_2
0x40013d9	    0x898558030000	           mov dword [rbp + 0x358], eax 	      1180	channel.c	FUNCTION_34	IF_5	FOR_2
0x40013df	    0xf70300040000	                 test dword [rbx], 0x400	      1181	channel.c	FUNCTION_34	IF_6
0x40013e5	            0x740c	                            je 0x40013f3	      1181	channel.c	FUNCTION_34	IF_6
0x40013e7	    0x8b83fc010000	           mov eax, dword [rbx + 0x1fc] 	      1182	channel.c	FUNCTION_34	IF_6
0x40013ed	    0x898538010000	           mov dword [rbp + 0x138], eax 	      1182	channel.c	FUNCTION_34	IF_6
0x40013f3	    0xf70300080000	                 test dword [rbx], 0x800	      1183	channel.c	FUNCTION_34	IF_7
0x40013f9	            0x740c	                            je 0x4001407	      1183	channel.c	FUNCTION_34	IF_7
0x40013fb	    0x8b8300020000	           mov eax, dword [rbx + 0x200] 	      1184	channel.c	FUNCTION_34	IF_7
0x4001401	    0x898548020000	           mov dword [rbp + 0x248], eax 	      1184	channel.c	FUNCTION_34	IF_7
0x4001407	    0xf70300000010	           test dword [rbx], 0x10000000 	      1185	channel.c	FUNCTION_34	IF_8
0x400140d	            0x740a	                            je 0x4001419	      1185	channel.c	FUNCTION_34	IF_8
0x400140f	    0xc785c0030000	              mov dword [rbp + 0x3c0], 1	      1186	channel.c	FUNCTION_34	IF_8
0x4001419	          0xf60310	                   test byte [rbx], 0x10	      1188	channel.c	FUNCTION_34	IF_9
0x400141c	            0x7421	                            je 0x400143f	      1188	channel.c	FUNCTION_34	IF_9
0x400141e	    0x488b8ba80100	           mov rcx, qword [rbx + 0x1a8] 	      1189	channel.c	FUNCTION_34	IF_9	CALL_1
0x4001425	    0x488b93a00100	           mov rdx, qword [rbx + 0x1a0] 	      1189	channel.c	FUNCTION_34	IF_9	CALL_1
0x400142c	    0x488db5880400	                  lea rsi, [rbp + 0x488]	      1189	channel.c	FUNCTION_34	IF_9	CALL_1
0x4001433	    0x488dbd800400	                  lea rdi, [rbp + 0x480]	      1189	channel.c	FUNCTION_34	IF_9	CALL_1
0x400143a	      0xe89df0ffff	                   call sym.set_callback	      1189	channel.c	FUNCTION_34	IF_9	CALL_1
0x400143f	          0xf60320	                   test byte [rbx], 0x20	      1191	channel.c	FUNCTION_34	IF_10
0x4001442	            0x7421	                            je 0x4001465	      1191	channel.c	FUNCTION_34	IF_10
0x4001444	    0x488b8bb80100	           mov rcx, qword [rbx + 0x1b8] 	      1192	channel.c	FUNCTION_34	IF_10	CALL_2
0x400144b	    0x488b93b00100	           mov rdx, qword [rbx + 0x1b0] 	      1192	channel.c	FUNCTION_34	IF_10	CALL_2
0x4001452	    0x488db5000200	                  lea rsi, [rbp + 0x200]	      1192	channel.c	FUNCTION_34	IF_10	CALL_2
0x4001459	    0x488dbdf80100	                  lea rdi, [rbp + 0x1f8]	      1192	channel.c	FUNCTION_34	IF_10	CALL_2
0x4001460	      0xe877f0ffff	                   call sym.set_callback	      1192	channel.c	FUNCTION_34	IF_10	CALL_2
0x4001465	          0xf60340	                   test byte [rbx], 0x40	      1195	channel.c	FUNCTION_34	IF_11
0x4001468	            0x7421	                            je 0x400148b	      1195	channel.c	FUNCTION_34	IF_11
0x400146a	    0x488b8bc80100	           mov rcx, qword [rbx + 0x1c8] 	      1196	channel.c	FUNCTION_34	IF_11	CALL_3
0x4001471	    0x488b93c00100	           mov rdx, qword [rbx + 0x1c0] 	      1196	channel.c	FUNCTION_34	IF_11	CALL_3
0x4001478	    0x488db5100300	                  lea rsi, [rbp + 0x310]	      1196	channel.c	FUNCTION_34	IF_11	CALL_3
0x400147f	    0x488dbd080300	                  lea rdi, [rbp + 0x308]	      1196	channel.c	FUNCTION_34	IF_11	CALL_3
0x4001486	      0xe851f0ffff	                   call sym.set_callback	      1196	channel.c	FUNCTION_34	IF_11	CALL_3
0x400148b	          0xf60380	                   test byte [rbx], 0x80	      1199	channel.c	FUNCTION_34	IF_12
0x400148e	            0x7421	                            je 0x40014b1	      1199	channel.c	FUNCTION_34	IF_12
0x4001490	    0x488b8bd80100	           mov rcx, qword [rbx + 0x1d8] 	      1200	channel.c	FUNCTION_34	IF_12	CALL_4
0x4001497	    0x488b93d00100	           mov rdx, qword [rbx + 0x1d0] 	      1200	channel.c	FUNCTION_34	IF_12	CALL_4
0x400149e	    0x488db5980400	                  lea rsi, [rbp + 0x498]	      1200	channel.c	FUNCTION_34	IF_12	CALL_4
0x40014a5	    0x488dbd900400	                  lea rdi, [rbp + 0x490]	      1200	channel.c	FUNCTION_34	IF_12	CALL_4
0x40014ac	      0xe82bf0ffff	                   call sym.set_callback	      1200	channel.c	FUNCTION_34	IF_12	CALL_4
0x40014b1	    0x8b83f0010000	           mov eax, dword [rbx + 0x1f0] 	      1202	channel.c	FUNCTION_34
0x40014b7	    0x8985a0040000	           mov dword [rbp + 0x4a0], eax 	      1202	channel.c	FUNCTION_34
0x40014bd	            0x8b03	                    mov eax, dword [rbx]	      1204	channel.c	FUNCTION_34	IF_13
0x40014bf	      0xa900000100	                       test eax, 0x10000	      1204	channel.c	FUNCTION_34	IF_13
0x40014c4	     0xf84fe000000	                            je 0x40015c8	      1204	channel.c	FUNCTION_34	IF_13
0x40014ca	        0x837b1c03	               cmp dword [rbx + 0x1c], 3	      1204	channel.c	FUNCTION_34	IF_13
0x40014ce	     0xf85f4000000	                           jne 0x40015c8	      1204	channel.c	FUNCTION_34	IF_13
0x40014d4	            0xa804	                              test al, 4	      1209	channel.c	FUNCTION_34	IF_13	IF_14
0x40014d6	            0x750a	                           jne 0x40014e2	      1209	channel.c	FUNCTION_34	IF_13	IF_14
0x40014d8	    0xc78530010000	              mov dword [rbp + 0x130], 0	      1210	channel.c	FUNCTION_34	IF_13	IF_14
0x40014e2	    0xf70300000001	            test dword [rbx], 0x1000000 	      1211	channel.c	FUNCTION_34	IF_13	IF_15
0x40014e8	            0x743e	                            je 0x4001528	      1211	channel.c	FUNCTION_34	IF_13	IF_15
0x40014ea	    0x8bbb54010000	           mov edi, dword [rbx + 0x154] 	      1213	channel.c	FUNCTION_34	IF_13	IF_15	CALL_5
0x40014f0	      0xe800000000	                          call 0x40014f5	      1213	channel.c	FUNCTION_34	IF_13	IF_15	CALL_5
0x40014f5	          0x4989c4	                            mov r12, rax	      1213	channel.c	FUNCTION_34	IF_13	IF_15	CALL_5
0x40014f8	          0x4885c0	                           test rax, rax	      1214	channel.c	FUNCTION_34	IF_13	IF_15	IF_16
0x40014fb	            0x7555	                           jne 0x4001552	      1214	channel.c	FUNCTION_34	IF_13	IF_15	IF_16
0x40014fd	    0x4c63a3540100	        movsxd r12, dword [rbx + 0x154] 	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x4001504	      0xba05000000	                              mov edx, 5	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x4001509	      0xbe00000000	                              mov esi, 0	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x400150e	      0xbf00000000	                              mov edi, 0	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x4001513	      0xe800000000	                          call 0x4001518	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x4001518	          0x4c89e6	                            mov rsi, r12	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x400151b	          0x4889c7	                            mov rdi, rax	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x400151e	      0xe800000000	                          call 0x4001523	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x4001523	      0xe9a0000000	                           jmp 0x40015c8	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x4001528	      0xba01000000	                              mov edx, 1	      1219	channel.c	FUNCTION_34	IF_13	ELSE_1
0x400152d	        0xf6430401	                  test byte [rbx + 4], 1	      1221	channel.c	FUNCTION_34	IF_13	ELSE_1	IF_17
0x4001531	            0x7406	                            je 0x4001539	      1221	channel.c	FUNCTION_34	IF_13	ELSE_1	IF_17
0x4001533	    0x8b9378010000	           mov edx, dword [rbx + 0x178] 	      1222	channel.c	FUNCTION_34	IF_13	ELSE_1	IF_17
0x4001539	    0x488bbb380100	           mov rdi, qword [rbx + 0x138] 	      1223	channel.c	FUNCTION_34	IF_13	ELSE_1	CALL_8
0x4001540	      0xbe00000000	                              mov esi, 0	      1223	channel.c	FUNCTION_34	IF_13	ELSE_1	CALL_8
0x4001545	      0xe813f0ffff	                    call sym.find_buffer	      1223	channel.c	FUNCTION_34	IF_13	ELSE_1	CALL_8
0x400154a	          0x4989c4	                            mov r12, rax	      1223	channel.c	FUNCTION_34	IF_13	ELSE_1	CALL_8
0x400154d	          0x4885c0	                           test rax, rax	      1225	channel.c	FUNCTION_34	IF_13	IF_18
0x4001550	            0x7476	                            je 0x40015c8	      1225	channel.c	FUNCTION_34	IF_13	IF_18
0x4001552	    0xf70300000020	           test dword [rbx], 0x20000000 	      1227	channel.c	FUNCTION_34	IF_13	IF_18	IF_19
0x4001558	            0x7413	                            je 0x400156d	      1227	channel.c	FUNCTION_34	IF_13	IF_18	IF_19
0x400155a	    0x83bb68010000	              cmp dword [rbx + 0x168], 0	      1228	channel.c	FUNCTION_34	IF_13	IF_18	IF_19
0x4001561	           0xf94c0	                                 sete al	      1228	channel.c	FUNCTION_34	IF_13	IF_18	IF_19
0x4001564	           0xfb6c0	                           movzx eax, al	      1228	channel.c	FUNCTION_34	IF_13	IF_18	IF_19
0x4001567	    0x898518020000	           mov dword [rbp + 0x218], eax 	      1228	channel.c	FUNCTION_34	IF_13	IF_18	IF_19
0x400156d	    0x4183bc244015	             cmp dword [r12 + 0x1540], 0	      1231	channel.c	FUNCTION_34	IF_13	IF_18	IF_20
0x4001576	            0x7527	                           jne 0x400159f	      1231	channel.c	FUNCTION_34	IF_13	IF_18	IF_20
0x4001578	    0x83bd18020000	              cmp dword [rbp + 0x218], 0	      1231	channel.c	FUNCTION_34	IF_13	IF_18	IF_20
0x400157f	            0x751e	                           jne 0x400159f	      1231	channel.c	FUNCTION_34	IF_13	IF_18	IF_20
0x4001581	      0xba05000000	                              mov edx, 5	      1233	channel.c	FUNCTION_34	IF_13	IF_18	IF_20	CALL_10
0x4001586	      0xbe00000000	                              mov esi, 0	      1233	channel.c	FUNCTION_34	IF_13	IF_18	IF_20	CALL_10
0x400158b	      0xbf00000000	                              mov edi, 0	      1233	channel.c	FUNCTION_34	IF_13	IF_18	IF_20	CALL_10
0x4001590	      0xe800000000	                          call 0x4001595	      1233	channel.c	FUNCTION_34	IF_13	IF_18	IF_20	CALL_10
0x4001595	          0x4889c7	                            mov rdi, rax	      1233	channel.c	FUNCTION_34	IF_13	IF_18	IF_20	CALL_10
0x4001598	      0xe800000000	                          call 0x400159d	      1233	channel.c	FUNCTION_34	IF_13	IF_18	IF_20	CALL_10
0x400159d	            0xeb29	                           jmp 0x40015c8	      1233	channel.c	FUNCTION_34	IF_13	IF_18	IF_20	CALL_10
0x400159f	    0x498b94248800	            mov rdx, qword [r12 + 0x88] 	      1237	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_11
0x40015a7	      0xbe00000000	                              mov esi, 0	      1237	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_11
0x40015ac	          0x4889ef	                            mov rdi, rbp	      1237	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_11
0x40015af	      0xb800000000	                              mov eax, 0	      1237	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_11
0x40015b4	      0xe800000000	                          call 0x40015b9	      1237	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_11
0x40015b9	    0x488dbd080200	                  lea rdi, [rbp + 0x208]	      1239	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_12
0x40015c0	          0x4c89e6	                            mov rsi, r12	      1239	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_12
0x40015c3	      0xe800000000	                          call 0x40015c8	      1239	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_12
0x40015c8	            0x8b03	                    mov eax, dword [rbx]	      1244	channel.c	FUNCTION_34	IF_21
0x40015ca	      0xa900000200	                       test eax, 0x20000	      1244	channel.c	FUNCTION_34	IF_21
0x40015cf	     0xf842e010000	                            je 0x4001703	      1244	channel.c	FUNCTION_34	IF_21
0x40015d5	          0x8b5320	            mov edx, dword [rbx + 0x20] 	      1244	channel.c	FUNCTION_34	IF_21
0x40015d8	          0x83fa03	                              cmp edx, 3	      1244	channel.c	FUNCTION_34	IF_21
0x40015db	     0xf844c010000	                            je 0x400172d	      1244	channel.c	FUNCTION_34	IF_21
0x40015e1	          0x83fa04	                              cmp edx, 4	      1245	channel.c	FUNCTION_34	IF_21
0x40015e4	     0xf8519010000	                           jne 0x4001703	      1245	channel.c	FUNCTION_34	IF_21
0x40015ea	      0xa900000100	                       test eax, 0x10000	      1245	channel.c	FUNCTION_34	IF_21
0x40015ef	     0xf840e010000	                            je 0x4001703	      1245	channel.c	FUNCTION_34	IF_21
0x40015f5	        0x837b1c03	               cmp dword [rbx + 0x1c], 3	      1246	channel.c	FUNCTION_34	IF_21
0x40015f9	     0xf8504010000	                           jne 0x4001703	      1246	channel.c	FUNCTION_34	IF_21
0x40015ff	      0xe91c010000	                           jmp 0x4001720	      1246	channel.c	FUNCTION_34	IF_21
0x4001604	    0xc78540020000	              mov dword [rbp + 0x240], 0	      1252	channel.c	FUNCTION_34	IF_21	IF_22
0x400160e	        0x837b2004	               cmp dword [rbx + 0x20], 4	      1253	channel.c	FUNCTION_34	IF_21	IF_23
0x4001612	            0x7509	                           jne 0x400161d	      1253	channel.c	FUNCTION_34	IF_21	IF_23
0x4001614	    0x4c8ba5080200	           mov r12, qword [rbp + 0x208] 	      1254	channel.c	FUNCTION_34	IF_21	IF_23
0x400161b	            0xeb6b	                           jmp 0x4001688	      1254	channel.c	FUNCTION_34	IF_21	IF_23
0x400161d	    0xf70300000002	            test dword [rbx], 0x2000000 	      1255	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24
0x4001623	            0x743e	                            je 0x4001663	      1255	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24
0x4001625	    0x8bbb58010000	           mov edi, dword [rbx + 0x158] 	      1257	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_13
0x400162b	      0xe800000000	                          call 0x4001630	      1257	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_13
0x4001630	          0x4989c4	                            mov r12, rax	      1257	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_13
0x4001633	          0x4885c0	                           test rax, rax	      1258	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	IF_25
0x4001636	            0x7555	                           jne 0x400168d	      1258	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	IF_25
0x4001638	    0x4c63a3580100	        movsxd r12, dword [rbx + 0x158] 	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x400163f	      0xba05000000	                              mov edx, 5	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x4001644	      0xbe00000000	                              mov esi, 0	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x4001649	      0xbf00000000	                              mov edi, 0	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x400164e	      0xe800000000	                          call 0x4001653	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x4001653	          0x4c89e6	                            mov rsi, r12	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x4001656	          0x4889c7	                            mov rdi, rax	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x4001659	      0xe800000000	                          call 0x400165e	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x400165e	      0xe9a0000000	                           jmp 0x4001703	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x4001663	      0xba01000000	                              mov edx, 1	      1263	channel.c	FUNCTION_34	IF_21	ELSE_4
0x4001668	        0xf6430402	                  test byte [rbx + 4], 2	      1265	channel.c	FUNCTION_34	IF_21	ELSE_4	IF_26
0x400166c	            0x7406	                            je 0x4001674	      1265	channel.c	FUNCTION_34	IF_21	ELSE_4	IF_26
0x400166e	    0x8b937c010000	           mov edx, dword [rbx + 0x17c] 	      1266	channel.c	FUNCTION_34	IF_21	ELSE_4	IF_26
0x4001674	    0x488bbb400100	           mov rdi, qword [rbx + 0x140] 	      1267	channel.c	FUNCTION_34	IF_21	ELSE_4	CALL_16
0x400167b	      0xbe01000000	                              mov esi, 1	      1267	channel.c	FUNCTION_34	IF_21	ELSE_4	CALL_16
0x4001680	      0xe8d8eeffff	                    call sym.find_buffer	      1267	channel.c	FUNCTION_34	IF_21	ELSE_4	CALL_16
0x4001685	          0x4989c4	                            mov r12, rax	      1267	channel.c	FUNCTION_34	IF_21	ELSE_4	CALL_16
0x4001688	          0x4d85e4	                           test r12, r12	      1269	channel.c	FUNCTION_34	IF_21	IF_27
0x400168b	            0x7476	                            je 0x4001703	      1269	channel.c	FUNCTION_34	IF_21	IF_27
0x400168d	    0xf70300000040	           test dword [rbx], 0x40000000 	      1271	channel.c	FUNCTION_34	IF_21	IF_27	IF_28
0x4001693	            0x7413	                            je 0x40016a8	      1271	channel.c	FUNCTION_34	IF_21	IF_27	IF_28
0x4001695	    0x83bb6c010000	              cmp dword [rbx + 0x16c], 0	      1272	channel.c	FUNCTION_34	IF_21	IF_27	IF_28
0x400169c	           0xf94c0	                                 sete al	      1272	channel.c	FUNCTION_34	IF_21	IF_27	IF_28
0x400169f	           0xfb6c0	                           movzx eax, al	      1272	channel.c	FUNCTION_34	IF_21	IF_27	IF_28
0x40016a2	    0x898528030000	           mov dword [rbp + 0x328], eax 	      1272	channel.c	FUNCTION_34	IF_21	IF_27	IF_28
0x40016a8	    0x4183bc244015	             cmp dword [r12 + 0x1540], 0	      1274	channel.c	FUNCTION_34	IF_21	IF_27	IF_29
0x40016b1	            0x7527	                           jne 0x40016da	      1274	channel.c	FUNCTION_34	IF_21	IF_27	IF_29
0x40016b3	    0x83bd28030000	              cmp dword [rbp + 0x328], 0	      1274	channel.c	FUNCTION_34	IF_21	IF_27	IF_29
0x40016ba	            0x751e	                           jne 0x40016da	      1274	channel.c	FUNCTION_34	IF_21	IF_27	IF_29
0x40016bc	      0xba05000000	                              mov edx, 5	      1276	channel.c	FUNCTION_34	IF_21	IF_27	IF_29	CALL_18
0x40016c1	      0xbe00000000	                              mov esi, 0	      1276	channel.c	FUNCTION_34	IF_21	IF_27	IF_29	CALL_18
0x40016c6	      0xbf00000000	                              mov edi, 0	      1276	channel.c	FUNCTION_34	IF_21	IF_27	IF_29	CALL_18
0x40016cb	      0xe800000000	                          call 0x40016d0	      1276	channel.c	FUNCTION_34	IF_21	IF_27	IF_29	CALL_18
0x40016d0	          0x4889c7	                            mov rdi, rax	      1276	channel.c	FUNCTION_34	IF_21	IF_27	IF_29	CALL_18
0x40016d3	      0xe800000000	                          call 0x40016d8	      1276	channel.c	FUNCTION_34	IF_21	IF_27	IF_29	CALL_18
0x40016d8	            0xeb29	                           jmp 0x4001703	      1276	channel.c	FUNCTION_34	IF_21	IF_27	IF_29	CALL_18
0x40016da	    0x498b94248800	            mov rdx, qword [r12 + 0x88] 	      1280	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_19
0x40016e2	      0xbe00000000	                              mov esi, 0	      1280	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_19
0x40016e7	          0x4889ef	                            mov rdi, rbp	      1280	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_19
0x40016ea	      0xb800000000	                              mov eax, 0	      1280	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_19
0x40016ef	      0xe800000000	                          call 0x40016f4	      1280	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_19
0x40016f4	    0x488dbd180300	                  lea rdi, [rbp + 0x318]	      1282	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_20
0x40016fb	          0x4c89e6	                            mov rsi, r12	      1282	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_20
0x40016fe	      0xe800000000	                          call 0x4001703	      1282	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_20
0x4001703	          0x8b431c	            mov eax, dword [rbx + 0x1c] 	      1287	channel.c	FUNCTION_34
0x4001706	    0x898534010000	           mov dword [rbp + 0x134], eax 	      1287	channel.c	FUNCTION_34
0x400170c	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      1288	channel.c	FUNCTION_34
0x400170f	    0x898544020000	           mov dword [rbp + 0x244], eax 	      1288	channel.c	FUNCTION_34
0x4001715	          0x8b4324	            mov eax, dword [rbx + 0x24] 	      1289	channel.c	FUNCTION_34
0x4001718	    0x898554030000	           mov dword [rbp + 0x354], eax 	      1289	channel.c	FUNCTION_34
0x400171e	            0xeb1a	                           jmp 0x400173a	      1290	channel.c	FUNCTION_34
0x4001720	            0xa808	                              test al, 8	      1251	channel.c	FUNCTION_34	IF_21	IF_22
0x4001722	     0xf84dcfeffff	                            je 0x4001604	      1251	channel.c	FUNCTION_34	IF_21	IF_22
0x4001728	      0xe9e7feffff	                           jmp 0x4001614	      1251	channel.c	FUNCTION_34	IF_21	IF_22
0x400172d	            0xa808	                              test al, 8	      1251	channel.c	FUNCTION_34	IF_21	IF_22
0x400172f	     0xf85e8feffff	                           jne 0x400161d	      1251	channel.c	FUNCTION_34	IF_21	IF_22
0x4001735	      0xe9cafeffff	                           jmp 0x4001604	      1251	channel.c	FUNCTION_34	IF_21	IF_22
0x400173a	              0x5b	                                 pop rbx	      1290	channel.c	FUNCTION_34
0x400173b	              0x5d	                                 pop rbp	      1290	channel.c	FUNCTION_34
0x400173c	            0x415c	                                 pop r12	      1290	channel.c	FUNCTION_34
0x400173e	              0xc3	                                     ret	      1290	channel.c	FUNCTION_34
add_channel	IF,2:ELSE,0:FOR,1:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,2	34
0x4001132	              0x53	                                push rbx	       263	channel.c	ELSE_1	FUNCTION_7
0x4001133	      0xbfc0040000	                          mov edi, 0x4c0	       265	channel.c	ELSE_1	FUNCTION_7	CALL_1
0x4001138	      0xe800000000	                          call 0x400113d	       265	channel.c	ELSE_1	FUNCTION_7	CALL_1
0x400113d	          0x4885c0	                           test rax, rax	       267	channel.c	ELSE_1	FUNCTION_7	IF_1
0x4001140	            0x747b	                            je 0x40011bd	       267	channel.c	ELSE_1	FUNCTION_7	IF_1
0x4001142	          0x4889c3	                            mov rbx, rax	       267	channel.c	ELSE_1	FUNCTION_7	IF_1
0x4001145	    0x8b0500000000	            mov eax, dword [0x0400114b] 	       270	channel.c	ELSE_1	FUNCTION_7
0x400114b	          0x8d5001	                      lea edx, [rax + 1]	       270	channel.c	ELSE_1	FUNCTION_7
0x400114e	    0x891500000000	            mov dword [0x04001154], edx 	       270	channel.c	ELSE_1	FUNCTION_7
0x4001154	          0x894310	             mov dword [rbx + 0x10], eax	       270	channel.c	ELSE_1	FUNCTION_7
0x4001157	      0xbe00000000	                              mov esi, 0	       271	channel.c	ELSE_1	FUNCTION_7	CALL_2
0x400115c	          0x4889df	                            mov rdi, rbx	       271	channel.c	ELSE_1	FUNCTION_7	CALL_2
0x400115f	      0xb800000000	                              mov eax, 0	       271	channel.c	ELSE_1	FUNCTION_7	CALL_2
0x4001164	      0xe800000000	                          call 0x4001169	       271	channel.c	ELSE_1	FUNCTION_7	CALL_2
0x4001169	        0x488d5318	                   lea rdx, [rbx + 0x18]	       271	channel.c	ELSE_1	FUNCTION_7	CALL_2
0x400116d	    0x488d83580400	                  lea rax, [rbx + 0x458]	       271	channel.c	ELSE_1	FUNCTION_7	CALL_2
0x4001174	    0xc702ffffffff	            mov dword [rdx], 0xffffffff 	       275	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x400117a	    0xc74204000000	                  mov dword [rdx + 4], 0	       280	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x4001181	    0xc74210d00700	          mov dword [rdx + 0x10], 0x7d0 	       282	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x4001188	    0x4881c2100100	                          add rdx, 0x110	       282	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x400118f	          0x4839c2	                            cmp rdx, rax	       273	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x4001192	            0x75e0	                           jne 0x4001174	       273	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x4001194	    0x488b05000000	            mov rax, qword [0x0400119b] 	       285	channel.c	ELSE_1	FUNCTION_7	IF_2
0x400119b	          0x4885c0	                           test rax, rax	       285	channel.c	ELSE_1	FUNCTION_7	IF_2
0x400119e	            0x7407	                            je 0x40011a7	       285	channel.c	ELSE_1	FUNCTION_7	IF_2
0x40011a0	        0x48895808	                mov qword [rax + 8], rbx	       287	channel.c	ELSE_1	FUNCTION_7	IF_2
0x40011a4	          0x488903	                    mov qword [rbx], rax	       288	channel.c	ELSE_1	FUNCTION_7	IF_2
0x40011a7	    0x48891d000000	            mov qword [0x040011ae], rbx 	       290	channel.c	ELSE_1	FUNCTION_7
0x40011ae	    0xc783b4040000	              mov dword [rbx + 0x4b4], 1	       292	channel.c	ELSE_1	FUNCTION_7
0x40011b8	          0x4889d8	                            mov rax, rbx	       293	channel.c	ELSE_1	FUNCTION_7
0x40011bb	            0xeb05	                           jmp 0x40011c2	       293	channel.c	ELSE_1	FUNCTION_7
0x40011bd	      0xb800000000	                              mov eax, 0	       268	channel.c	ELSE_1	FUNCTION_7	IF_1
0x40011c2	              0x5b	                                 pop rbx	       294	channel.c	ELSE_1	FUNCTION_7
0x40011c3	              0xc3	                                     ret	       294	channel.c	ELSE_1	FUNCTION_7
