undo_read	ELSE,1:functions,0:SWITCH,0:FOR,0:CALL,5:WHILE,1:IF,6:DO,0	74
0x400063c	            0x4157	                                push r15	      1066	undo.c	FUNCTION_24
0x400063e	            0x4156	                                push r14	      1066	undo.c	FUNCTION_24
0x4000640	            0x4155	                                push r13	      1066	undo.c	FUNCTION_24
0x4000642	            0x4154	                                push r12	      1066	undo.c	FUNCTION_24
0x4000644	              0x55	                                push rbp	      1066	undo.c	FUNCTION_24
0x4000645	              0x53	                                push rbx	      1066	undo.c	FUNCTION_24
0x4000646	        0x4883ec08	                              sub rsp, 8	      1066	undo.c	FUNCTION_24
0x400064a	          0x4889fb	                            mov rbx, rdi	      1066	undo.c	FUNCTION_24
0x400064d	          0x4989f7	                            mov r15, rsi	      1066	undo.c	FUNCTION_24
0x4000650	          0x4989d6	                            mov r14, rdx	      1066	undo.c	FUNCTION_24
0x4000653	      0x48837f1800	               cmp qword [rdi + 0x18], 0	      1070	undo.c	FUNCTION_24	IF_1
0x4000658	     0xf8485000000	                            je 0x40006e3	      1070	undo.c	FUNCTION_24	IF_1
0x400065e	          0x4189d4	                           mov r12d, edx	      1072	undo.c	FUNCTION_24	IF_1
0x4000661	            0x85d2	                           test edx, edx	      1075	undo.c	FUNCTION_24	IF_1	WHILE_1
0x4000663	     0xf8eb3000000	                           jle 0x400071c	      1075	undo.c	FUNCTION_24	IF_1	WHILE_1
0x4000669	          0x4989f5	                            mov r13, rsi	      1075	undo.c	FUNCTION_24	IF_1	WHILE_1
0x400066c	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1079	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2
0x4000670	        0x48394320	            cmp qword [rbx + 0x20], rax 	      1079	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2
0x4000674	            0x7238	                            jb 0x40006ae	      1079	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2
0x4000676	        0x488b4b08	                mov rcx, qword [rbx + 8]	       295	stdio2.h	FUNCTION_81	CALL_9
0x400067a	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       295	stdio2.h	FUNCTION_81	CALL_9
0x400067e	      0xba00200000	                         mov edx, 0x2000	       295	stdio2.h	FUNCTION_81	CALL_9
0x4000683	      0xbe01000000	                              mov esi, 1	       295	stdio2.h	FUNCTION_81	CALL_9
0x4000688	      0xe800000000	                          call 0x400068d	       295	stdio2.h	FUNCTION_81	CALL_9
0x400068d	          0x4885c0	                           test rax, rax	      1082	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	IF_3
0x4000690	            0x7473	                            je 0x4000705	      1082	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	IF_3
0x4000692	        0x48894328	             mov qword [rbx + 0x28], rax	      1087	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2
0x4000696	    0x48c743200000	               mov qword [rbx + 0x20], 0	      1088	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2
0x400069e	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1089	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_2
0x40006a2	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1089	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_2
0x40006a6	          0x4889c2	                            mov rdx, rax	      1089	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_2
0x40006a9	      0xe800000000	                          call 0x40006ae	      1089	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_2
0x40006ae	          0x4963ec	                        movsxd rbp, r12d	      1091	undo.c	FUNCTION_24	IF_1	WHILE_1
0x40006b1	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      1092	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x40006b5	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1092	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x40006b9	          0x4829f0	                            sub rax, rsi	      1092	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x40006bc	          0x4839c5	                            cmp rbp, rax	      1092	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x40006bf	        0x480f47e8	                          cmova rbp, rax	      1092	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x40006c3	        0x48037318	             add rsi, qword [rbx + 0x18]	        59	string3.h	FUNCTION_85	CALL_3
0x40006c7	          0x4889ea	                            mov rdx, rbp	        59	string3.h	FUNCTION_85	CALL_3
0x40006ca	          0x4c89ef	                            mov rdi, r13	        59	string3.h	FUNCTION_85	CALL_3
0x40006cd	      0xe800000000	                          call 0x40006d2	        59	string3.h	FUNCTION_85	CALL_3
0x40006d2	        0x48016b20	            add qword [rbx + 0x20], rbp 	      1095	undo.c	FUNCTION_24	IF_1	WHILE_1
0x40006d6	          0x4129ec	                           sub r12d, ebp	      1096	undo.c	FUNCTION_24	IF_1	WHILE_1
0x40006d9	          0x4901ed	                            add r13, rbp	      1097	undo.c	FUNCTION_24	IF_1	WHILE_1
0x40006dc	          0x4585e4	                         test r12d, r12d	      1075	undo.c	FUNCTION_24	IF_1	WHILE_1
0x40006df	            0x7f8b	                            jg 0x400066c	      1075	undo.c	FUNCTION_24	IF_1	WHILE_1
0x40006e1	            0xeb39	                           jmp 0x400071c	      1075	undo.c	FUNCTION_24	IF_1	WHILE_1
0x40006e3	        0x488b4f08	                mov rcx, qword [rdi + 8]	       295	stdio2.h	FUNCTION_81	CALL_9
0x40006e7	      0xba01000000	                              mov edx, 1	       295	stdio2.h	FUNCTION_81	CALL_9
0x40006ec	          0x4c89f6	                            mov rsi, r14	       295	stdio2.h	FUNCTION_81	CALL_9
0x40006ef	          0x4c89ff	                            mov rdi, r15	       295	stdio2.h	FUNCTION_81	CALL_9
0x40006f2	      0xe800000000	                          call 0x40006f7	       295	stdio2.h	FUNCTION_81	CALL_9
0x40006f7	        0x4883f801	                              cmp rax, 1	      1067	undo.c	FUNCTION_24
0x40006fb	           0xf94c3	                                 sete bl	      1067	undo.c	FUNCTION_24
0x40006fe	           0xfb6db	                           movzx ebx, bl	      1067	undo.c	FUNCTION_24
0x4000701	            0x7507	                           jne 0x400070a	      1105	undo.c	FUNCTION_24	IF_6
0x4000703	            0xeb1c	                           jmp 0x4000721	      1105	undo.c	FUNCTION_24	IF_6
0x4000705	      0xbb00000000	                              mov ebx, 0	      1084	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	IF_3
0x400070a	          0x4c89f2	                            mov rdx, r14	        90	string3.h	FUNCTION_87	CALL_6
0x400070d	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_87	CALL_6
0x4000712	          0x4c89ff	                            mov rdi, r15	        90	string3.h	FUNCTION_87	CALL_6
0x4000715	      0xe800000000	                          call 0x400071a	        90	string3.h	FUNCTION_87	CALL_6
0x400071a	            0xeb05	                           jmp 0x4000721	        90	string3.h	FUNCTION_87	CALL_6
0x400071c	      0xbb01000000	                              mov ebx, 1	      1084	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	IF_3
0x4000721	            0x89d8	                            mov eax, ebx	      1110	undo.c	FUNCTION_24
0x4000723	        0x4883c408	                              add rsp, 8	      1110	undo.c	FUNCTION_24
0x4000727	              0x5b	                                 pop rbx	      1110	undo.c	FUNCTION_24
0x4000728	              0x5d	                                 pop rbp	      1110	undo.c	FUNCTION_24
0x4000729	            0x415c	                                 pop r12	      1110	undo.c	FUNCTION_24
0x400072b	            0x415d	                                 pop r13	      1110	undo.c	FUNCTION_24
0x400072d	            0x415e	                                 pop r14	      1110	undo.c	FUNCTION_24
0x400072f	            0x415f	                                 pop r15	      1110	undo.c	FUNCTION_24
0x4000731	              0xc3	                                     ret	      1110	undo.c	FUNCTION_24
u_clearall	ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,0:WHILE,0:IF,0:DO,0	8
0x40039b8	    0x48c787281200	            mov qword [rdi + 0x1228], 0 	      3412	undo.c	FUNCTION_57
0x40039c3	    0x48c787181200	            mov qword [rdi + 0x1218], 0 	      3412	undo.c	FUNCTION_57
0x40039ce	    0x48c787201200	            mov qword [rdi + 0x1220], 0 	      3412	undo.c	FUNCTION_57
0x40039d9	    0xc78734120000	            mov dword [rdi + 0x1234], 1 	      3413	undo.c	FUNCTION_57
0x40039e3	    0xc78730120000	            mov dword [rdi + 0x1230], 0 	      3414	undo.c	FUNCTION_57
0x40039ed	    0x48c787601200	            mov qword [rdi + 0x1260], 0 	      3415	undo.c	FUNCTION_57
0x40039f8	    0x48c787681200	            mov qword [rdi + 0x1268], 0 	      3416	undo.c	FUNCTION_57
0x4003a03	              0xc3	                                     ret	      3416	undo.c	FUNCTION_57
get_undolevel	ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,0:WHILE,0:IF,1:DO,0	5
0x4000040	    0x488b05000000	            mov rax, qword [0x04000047] 	       367	undo.c	FUNCTION_9	IF_1
0x4000047	    0x488b80481600	          mov rax, qword [rax + 0x1648] 	       367	undo.c	FUNCTION_9	IF_1
0x400004e	    0x483dc01dfeff	             cmp rax, 0xfffffffffffe1dc0	       367	undo.c	FUNCTION_9	IF_1
0x4000054	    0x480f44050000	           cmove rax, qword [0x0400005c]	       368	undo.c	FUNCTION_9	IF_1
0x400005c	              0xc3	                                     ret	       370	undo.c	FUNCTION_9
ex_undojoin	ELSE,1:functions,0:SWITCH,0:FOR,0:CALL,3:WHILE,0:IF,4:DO,0	21
0x400381e	              0x53	                                push rbx	      3138	undo.c	FUNCTION_46
0x400381f	    0x488b1d000000	            mov rbx, qword [0x04003826] 	      3139	undo.c	FUNCTION_46	IF_1
0x4003826	    0x4883bb201200	             cmp qword [rbx + 0x1220], 0	      3139	undo.c	FUNCTION_46	IF_1
0x400382e	            0x7445	                            je 0x4003875	      3139	undo.c	FUNCTION_46	IF_1
0x4003830	    0x4883bb281200	             cmp qword [rbx + 0x1228], 0	      3141	undo.c	FUNCTION_46	IF_2
0x4003838	            0x741e	                            je 0x4003858	      3141	undo.c	FUNCTION_46	IF_2
0x400383a	      0xba05000000	                              mov edx, 5	      3143	undo.c	FUNCTION_46	IF_2	CALL_2
0x400383f	      0xbe00000000	                              mov esi, 0	      3143	undo.c	FUNCTION_46	IF_2	CALL_2
0x4003844	      0xbf00000000	                              mov edi, 0	      3143	undo.c	FUNCTION_46	IF_2	CALL_2
0x4003849	      0xe800000000	                          call 0x400384e	      3143	undo.c	FUNCTION_46	IF_2	CALL_2
0x400384e	          0x4889c7	                            mov rdi, rax	      3143	undo.c	FUNCTION_46	IF_2	CALL_2
0x4003851	      0xe800000000	                          call 0x4003856	      3143	undo.c	FUNCTION_46	IF_2	CALL_2
0x4003856	            0xeb1d	                           jmp 0x4003875	      3144	undo.c	FUNCTION_46	IF_2
0x4003858	    0x83bb34120000	             cmp dword [rbx + 0x1234], 0	      3146	undo.c	FUNCTION_46	IF_3
0x400385f	            0x7414	                            je 0x4003875	      3146	undo.c	FUNCTION_46	IF_3
0x4003861	      0xe8dac7ffff	                  call sym.get_undolevel	      3148	undo.c	FUNCTION_46	IF_4	CALL_3
0x4003866	          0x4885c0	                           test rax, rax	      3148	undo.c	FUNCTION_46	IF_4	CALL_3
0x4003869	            0x780a	                            js 0x4003875	      3148	undo.c	FUNCTION_46	IF_4	CALL_3
0x400386b	    0xc78334120000	            mov dword [rbx + 0x1234], 0 	      3152	undo.c	FUNCTION_46	ELSE_1
0x4003875	              0x5b	                                 pop rbx	      3153	undo.c	FUNCTION_46	ELSE_1
0x4003876	              0xc3	                                     ret	      3153	undo.c	FUNCTION_46	ELSE_1
fwrite_crypt	ELSE,1:functions,0:SWITCH,0:FOR,0:CALL,5:WHILE,0:IF,4:DO,0	69
0x4000495	            0x4155	                                push r13	       938	undo.c	FUNCTION_17
0x4000497	            0x4154	                                push r12	       938	undo.c	FUNCTION_17
0x4000499	              0x55	                                push rbp	       938	undo.c	FUNCTION_17
0x400049a	              0x53	                                push rbx	       938	undo.c	FUNCTION_17
0x400049b	        0x4883ec78	                           sub rsp, 0x78	       938	undo.c	FUNCTION_17
0x400049f	          0x4889fb	                            mov rbx, rdi	       938	undo.c	FUNCTION_17
0x40004a2	          0x4989f4	                            mov r12, rsi	       938	undo.c	FUNCTION_17
0x40004a5	          0x4889d5	                            mov rbp, rdx	       938	undo.c	FUNCTION_17
0x40004a8	    0x64488b042528	                mov rax, qword fs:[0x28]	       938	undo.c	FUNCTION_17
0x40004b1	      0x4889442468	             mov qword [rsp + 0x68], rax	       938	undo.c	FUNCTION_17
0x40004b6	            0x31c0	                            xor eax, eax	       938	undo.c	FUNCTION_17
0x40004b8	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	       944	undo.c	FUNCTION_17	IF_1
0x40004bc	          0x4885ff	                           test rdi, rdi	       944	undo.c	FUNCTION_17	IF_1
0x40004bf	            0x7464	                            je 0x4000525	       944	undo.c	FUNCTION_17	IF_1
0x40004c1	      0x48837b1800	               cmp qword [rbx + 0x18], 0	       944	undo.c	FUNCTION_17	IF_1
0x40004c6	            0x755d	                           jne 0x4000525	       944	undo.c	FUNCTION_17	IF_1
0x40004c8	        0x4883fa63	                           cmp rdx, 0x63	       947	undo.c	FUNCTION_17	IF_1	IF_2
0x40004cc	            0x767e	                           jbe 0x400054c	       947	undo.c	FUNCTION_17	IF_1	IF_2
0x40004ce	      0xbe00000000	                              mov esi, 0	       951	undo.c	FUNCTION_17	IF_1	ELSE_1	CALL_1
0x40004d3	          0x4889d7	                            mov rdi, rdx	       951	undo.c	FUNCTION_17	IF_1	ELSE_1	CALL_1
0x40004d6	      0xe800000000	                          call 0x40004db	       951	undo.c	FUNCTION_17	IF_1	ELSE_1	CALL_1
0x40004db	          0x4989c5	                            mov r13, rax	       951	undo.c	FUNCTION_17	IF_1	ELSE_1	CALL_1
0x40004de	          0x4885c0	                           test rax, rax	       952	undo.c	FUNCTION_17	IF_1	ELSE_1	IF_3
0x40004e1	            0x7452	                            je 0x4000535	       952	undo.c	FUNCTION_17	IF_1	ELSE_1	IF_3
0x40004e3	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       955	undo.c	FUNCTION_17	IF_1	CALL_2
0x40004e7	          0x4889c1	                            mov rcx, rax	       955	undo.c	FUNCTION_17	IF_1	CALL_2
0x40004ea	          0x4889ea	                            mov rdx, rbp	       955	undo.c	FUNCTION_17	IF_1	CALL_2
0x40004ed	          0x4c89e6	                            mov rsi, r12	       955	undo.c	FUNCTION_17	IF_1	CALL_2
0x40004f0	      0xe800000000	                          call 0x40004f5	       955	undo.c	FUNCTION_17	IF_1	CALL_2
0x40004f5	        0x488b4b08	                mov rcx, qword [rbx + 8]	       956	undo.c	FUNCTION_17	IF_1	CALL_3
0x40004f9	      0xba01000000	                              mov edx, 1	       956	undo.c	FUNCTION_17	IF_1	CALL_3
0x40004fe	          0x4889ee	                            mov rsi, rbp	       956	undo.c	FUNCTION_17	IF_1	CALL_3
0x4000501	          0x4c89ef	                            mov rdi, r13	       956	undo.c	FUNCTION_17	IF_1	CALL_3
0x4000504	      0xe800000000	                          call 0x4000509	       956	undo.c	FUNCTION_17	IF_1	CALL_3
0x4000509	          0x4889c3	                            mov rbx, rax	       956	undo.c	FUNCTION_17	IF_1	CALL_3
0x400050c	          0x4939e5	                            cmp r13, rsp	       957	undo.c	FUNCTION_17	IF_1	IF_4
0x400050f	            0x7408	                            je 0x4000519	       957	undo.c	FUNCTION_17	IF_1	IF_4
0x4000511	          0x4c89ef	                            mov rdi, r13	       958	undo.c	FUNCTION_17	IF_1	CALL_4
0x4000514	      0xe800000000	                          call 0x4000519	       958	undo.c	FUNCTION_17	IF_1	CALL_4
0x4000519	        0x4883fb01	                              cmp rbx, 1	       959	undo.c	FUNCTION_17	IF_1
0x400051d	           0xf94c0	                                 sete al	       959	undo.c	FUNCTION_17	IF_1
0x4000520	           0xfb6c0	                           movzx eax, al	       959	undo.c	FUNCTION_17	IF_1
0x4000523	            0xeb15	                           jmp 0x400053a	       959	undo.c	FUNCTION_17	IF_1
0x4000525	          0x4889ea	                            mov rdx, rbp	       962	undo.c	FUNCTION_17	CALL_5
0x4000528	          0x4c89e6	                            mov rsi, r12	       962	undo.c	FUNCTION_17	CALL_5
0x400052b	          0x4889df	                            mov rdi, rbx	       962	undo.c	FUNCTION_17	CALL_5
0x400052e	      0xe8b8feffff	                     call sym.undo_write	       962	undo.c	FUNCTION_17	CALL_5
0x4000533	            0xeb05	                           jmp 0x400053a	       962	undo.c	FUNCTION_17	CALL_5
0x4000535	      0xb800000000	                              mov eax, 0	       953	undo.c	FUNCTION_17	IF_1	ELSE_1	IF_3
0x400053a	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	       963	undo.c	FUNCTION_17
0x400053f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       963	undo.c	FUNCTION_17
0x4000548	            0x7428	                            je 0x4000572	       963	undo.c	FUNCTION_17
0x400054a	            0xeb21	                           jmp 0x400056d	       963	undo.c	FUNCTION_17
0x400054c	          0x4889e1	                            mov rcx, rsp	       955	undo.c	FUNCTION_17	IF_1	CALL_2
0x400054f	      0xe800000000	                          call 0x4000554	       955	undo.c	FUNCTION_17	IF_1	CALL_2
0x4000554	        0x488b4b08	                mov rcx, qword [rbx + 8]	       956	undo.c	FUNCTION_17	IF_1	CALL_3
0x4000558	      0xba01000000	                              mov edx, 1	       956	undo.c	FUNCTION_17	IF_1	CALL_3
0x400055d	          0x4889ee	                            mov rsi, rbp	       956	undo.c	FUNCTION_17	IF_1	CALL_3
0x4000560	          0x4889e7	                            mov rdi, rsp	       956	undo.c	FUNCTION_17	IF_1	CALL_3
0x4000563	      0xe800000000	                          call 0x4000568	       956	undo.c	FUNCTION_17	IF_1	CALL_3
0x4000568	          0x4889c3	                            mov rbx, rax	       956	undo.c	FUNCTION_17	IF_1	CALL_3
0x400056b	            0xebac	                           jmp 0x4000519	       956	undo.c	FUNCTION_17	IF_1	CALL_3
0x400056d	      0xe800000000	                          call 0x4000572	       963	undo.c	FUNCTION_17
0x4000572	        0x4883c478	                           add rsp, 0x78	       963	undo.c	FUNCTION_17
0x4000576	              0x5b	                                 pop rbx	       963	undo.c	FUNCTION_17
0x4000577	              0x5d	                                 pop rbp	       963	undo.c	FUNCTION_17
0x4000578	            0x415c	                                 pop r12	       963	undo.c	FUNCTION_17
0x400057a	            0x415d	                                 pop r13	       963	undo.c	FUNCTION_17
0x400057c	              0xc3	                                     ret	       963	undo.c	FUNCTION_17
u_free_uhp	ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,2:WHILE,1:IF,0:DO,0	19
0x4000253	              0x55	                                push rbp	       865	undo.c	FUNCTION_14
0x4000254	              0x53	                                push rbx	       865	undo.c	FUNCTION_14
0x4000255	        0x4883ec08	                              sub rsp, 8	       865	undo.c	FUNCTION_14
0x4000259	          0x4889fd	                            mov rbp, rdi	       865	undo.c	FUNCTION_14
0x400025c	        0x488b7f30	            mov rdi, qword [rdi + 0x30] 	       869	undo.c	FUNCTION_14
0x4000260	          0x4885ff	                           test rdi, rdi	       870	undo.c	FUNCTION_14	WHILE_1
0x4000263	            0x7414	                            je 0x4000279	       870	undo.c	FUNCTION_14	WHILE_1
0x4000265	          0x488b1f	                    mov rbx, qword [rdi]	       872	undo.c	FUNCTION_14	WHILE_1
0x4000268	        0x488b7728	            mov rsi, qword [rdi + 0x28] 	       873	undo.c	FUNCTION_14	WHILE_1	CALL_1
0x400026c	      0xe812feffff	                    call sym.u_freeentry	       873	undo.c	FUNCTION_14	WHILE_1	CALL_1
0x4000271	          0x4889df	                            mov rdi, rbx	       874	undo.c	FUNCTION_14	WHILE_1
0x4000274	          0x4885db	                           test rbx, rbx	       870	undo.c	FUNCTION_14	WHILE_1
0x4000277	            0x75ec	                           jne 0x4000265	       870	undo.c	FUNCTION_14	WHILE_1
0x4000279	          0x4889ef	                            mov rdi, rbp	       876	undo.c	FUNCTION_14	CALL_2
0x400027c	      0xe800000000	                          call 0x4000281	       876	undo.c	FUNCTION_14	CALL_2
0x4000281	        0x4883c408	                              add rsp, 8	       877	undo.c	FUNCTION_14
0x4000285	              0x5b	                                 pop rbx	       877	undo.c	FUNCTION_14
0x4000286	              0x5d	                                 pop rbp	       877	undo.c	FUNCTION_14
0x4000287	              0xc3	                                     ret	       877	undo.c	FUNCTION_14
undo_time	ELSE,18:functions,0:SWITCH,0:FOR,1:CALL,14:WHILE,6:IF,47:DO,0	433
0x4002e5d	            0x4157	                                push r15	      2266	undo.c	FUNCTION_40
0x4002e5f	            0x4156	                                push r14	      2266	undo.c	FUNCTION_40
0x4002e61	            0x4155	                                push r13	      2266	undo.c	FUNCTION_40
0x4002e63	            0x4154	                                push r12	      2266	undo.c	FUNCTION_40
0x4002e65	              0x55	                                push rbp	      2266	undo.c	FUNCTION_40
0x4002e66	              0x53	                                push rbx	      2266	undo.c	FUNCTION_40
0x4002e67	        0x4883ec28	                           sub rsp, 0x28	      2266	undo.c	FUNCTION_40
0x4002e6b	      0x48897c2410	             mov qword [rsp + 0x10], rdi	      2266	undo.c	FUNCTION_40
0x4002e70	          0x4189f5	                           mov r13d, esi	      2266	undo.c	FUNCTION_40
0x4002e73	          0x4189d7	                           mov r15d, edx	      2266	undo.c	FUNCTION_40
0x4002e76	        0x894c240c	              mov dword [rsp + 0xc], ecx	      2266	undo.c	FUNCTION_40
0x4002e7a	    0x488b05000000	            mov rax, qword [0x04002e81] 	      2283	undo.c	FUNCTION_40	IF_1
0x4002e81	    0x83b834120000	             cmp dword [rax + 0x1234], 0	      2283	undo.c	FUNCTION_40	IF_1
0x4002e88	            0x750a	                           jne 0x4002e94	      2283	undo.c	FUNCTION_40	IF_1
0x4002e8a	      0xbf01000000	                              mov edi, 1	      2284	undo.c	FUNCTION_40	CALL_1
0x4002e8f	      0xe800000000	                          call 0x4002e94	      2284	undo.c	FUNCTION_40	CALL_1
0x4002e94	    0x48c705000000	               mov qword [0x04002e9f], 0	      2286	undo.c	FUNCTION_40
0x4002e9f	    0x48c705000000	               mov qword [0x04002eaa], 0	      2287	undo.c	FUNCTION_40
0x4002eaa	    0x488b05000000	            mov rax, qword [0x04002eb1] 	      2288	undo.c	FUNCTION_40	IF_2
0x4002eb1	        0xf6401001	               test byte [rax + 0x10], 1	      2288	undo.c	FUNCTION_40	IF_2
0x4002eb5	            0x740b	                            je 0x4002ec2	      2288	undo.c	FUNCTION_40	IF_2
0x4002eb7	    0x48c705000000	mov qword [0x04002ec2], 0xffffffffffffffff 	      2289	undo.c	FUNCTION_40	IF_2
0x4002ec2	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      2295	undo.c	FUNCTION_40	IF_3
0x4002ec7	          0x4989f6	                            mov r14, rsi	      2295	undo.c	FUNCTION_40	IF_3
0x4002eca	    0x49c7c0ffffff	              mov r8, 0xffffffffffffffff	      2296	undo.c	FUNCTION_40	IF_3
0x4002ed1	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      2293	undo.c	FUNCTION_40	IF_3
0x4002ed6	     0xf85f7000000	                           jne 0x4002fd3	      2293	undo.c	FUNCTION_40	IF_3
0x4002edc	          0x4585ed	                         test r13d, r13d	      2300	undo.c	FUNCTION_40	ELSE_1	IF_4
0x4002edf	            0x7415	                            je 0x4002ef6	      2300	undo.c	FUNCTION_40	ELSE_1	IF_4
0x4002ee1	    0x4c03b0501200	           add r14, qword [rax + 0x1250]	      2301	undo.c	FUNCTION_40	ELSE_1	IF_4
0x4002ee8	          0x4885f6	                           test rsi, rsi	      2341	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x4002eeb	     0xf88a6000000	                            js 0x4002f97	      2341	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x4002ef1	      0xe9b6000000	                           jmp 0x4002fac	      2341	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x4002ef6	          0x4585ff	                         test r15d, r15d	      2302	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5
0x4002ef9	     0xf8484000000	                            je 0x4002f83	      2302	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5
0x4002eff	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2304	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6
0x4002f05	            0x7953	                           jns 0x4002f5a	      2304	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6
0x4002f07	    0x488b90281200	          mov rdx, qword [rax + 0x1228] 	      2309	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6
0x4002f0e	          0x4885d2	                           test rdx, rdx	      2310	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_7
0x4002f11	            0x7405	                            je 0x4002f18	      2310	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_7
0x4002f13	          0x488b12	                    mov rdx, qword [rdx]	      2311	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_7
0x4002f16	            0xeb07	                           jmp 0x4002f1f	      2311	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_7
0x4002f18	    0x488b90201200	          mov rdx, qword [rax + 0x1220] 	      2313	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	ELSE_3
0x4002f1f	          0x4885d2	                           test rdx, rdx	      2314	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x4002f22	            0x7418	                            je 0x4002f3c	      2314	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x4002f24	    0x4883ba300200	              cmp qword [rdx + 0x230], 0	      2314	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x4002f2c	            0x740e	                            je 0x4002f3c	      2314	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x4002f2e	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	      2317	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x4002f33	    0x4c03b0581200	           add r14, qword [rax + 0x1258]	      2317	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x4002f3a	            0xeb10	                           jmp 0x4002f4c	      2317	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x4002f3c	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	      2320	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	ELSE_4
0x4002f41	    0x4c03b0581200	           add r14, qword [rax + 0x1258]	      2320	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	ELSE_4
0x4002f48	        0x4983c601	                              add r14, 1	      2320	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	ELSE_4
0x4002f4c	          0x4d85f6	                           test r14, r14	      2324	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_9
0x4002f4f	      0xb800000000	                              mov eax, 0	      2324	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_9
0x4002f54	        0x440f4ef8	                        cmovle r15d, eax	      2324	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_9
0x4002f58	            0xeb3d	                           jmp 0x4002f97	      2324	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_9
0x4002f5a	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	      2329	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5
0x4002f5f	    0x4c03b0581200	           add r14, qword [rax + 0x1258]	      2329	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5
0x4002f66	    0x488b90401200	          mov rdx, qword [rax + 0x1240] 	      2330	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x4002f6d	        0x4c8d4202	                       lea r8, [rdx + 2]	      2352	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_8	IF_14
0x4002f71	          0x4939d6	                            cmp r14, rdx	      2330	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x4002f74	            0x7e52	                           jle 0x4002fc8	      2330	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x4002f76	    0x488bb8381200	          mov rdi, qword [rax + 0x1238] 	      2334	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x4002f7d	        0x4c8d7701	                      lea r14, [rdi + 1]	      2334	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x4002f81	            0xeb34	                           jmp 0x4002fb7	      2334	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x4002f83	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2340	undo.c	FUNCTION_40	ELSE_1	ELSE_6
0x4002f88	          0x4989fe	                            mov r14, rdi	      2340	undo.c	FUNCTION_40	ELSE_1	ELSE_6
0x4002f8b	    0x4c03b0481200	           add r14, qword [rax + 0x1248]	      2340	undo.c	FUNCTION_40	ELSE_1	ELSE_6
0x4002f92	          0x4885ff	                           test rdi, rdi	      2341	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x4002f95	            0x7920	                           jns 0x4002fb7	      2341	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x4002f97	          0x4d85f6	                           test r14, r14	      2341	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x4002f9a	      0xb800000000	                              mov eax, 0	      2341	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x4002f9f	        0x4c0f48f0	                          cmovs r14, rax	      2341	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x4002fa3	    0x49c7c0ffffff	              mov r8, 0xffffffffffffffff	      2345	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x4002faa	            0xeb27	                           jmp 0x4002fd3	      2345	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x4002fac	      0xe800000000	                          call 0x4002fb1	      2350	undo.c	FUNCTION_40	ELSE_1	ELSE_7	CALL_2
0x4002fb1	        0x4c8d4001	                       lea r8, [rax + 1]	      2350	undo.c	FUNCTION_40	ELSE_1	ELSE_7	CALL_2
0x4002fb5	            0xeb11	                           jmp 0x4002fc8	      2350	undo.c	FUNCTION_40	ELSE_1	ELSE_7	CALL_2
0x4002fb7	    0x4c8b80381200	           mov r8, qword [rax + 0x1238] 	      2354	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_9
0x4002fbe	        0x4983c002	                               add r8, 2	      2354	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_9
0x4002fc2	    0x41bf00000000	                             mov r15d, 0	      2354	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_9
0x4002fc8	        0x498d40ff	                       lea rax, [r8 - 1]	      2356	undo.c	FUNCTION_40	ELSE_1	ELSE_7	IF_15
0x4002fcc	          0x4d39f0	                             cmp r8, r14	      2356	undo.c	FUNCTION_40	ELSE_1	ELSE_7	IF_15
0x4002fcf	        0x4c0f4ef0	                         cmovle r14, rax	      2356	undo.c	FUNCTION_40	ELSE_1	ELSE_7	IF_15
0x4002fd3	    0x4c8b0d000000	              mov r9, qword [0x04002fda]	      2360	undo.c	FUNCTION_40
0x4002fda	    0x498ba9481200	           mov rbp, qword [r9 + 0x1248] 	      2360	undo.c	FUNCTION_40
0x4002fe1	          0x4d85f6	                           test r14, r14	      2363	undo.c	FUNCTION_40	IF_16
0x4002fe4	            0x7514	                           jne 0x4002ffa	      2363	undo.c	FUNCTION_40	IF_16
0x4002fe6	    0x8b1d00000000	            mov ebx, dword [0x04002fec] 	      2365	undo.c	FUNCTION_40	IF_16
0x4002fec	          0x4c89f5	                            mov rbp, r14	      2366	undo.c	FUNCTION_40	IF_16
0x4002fef	    0x41bf00000000	                             mov r15d, 0	      2279	undo.c	FUNCTION_40
0x4002ff5	      0xe961030000	                           jmp 0x400335b	      2366	undo.c	FUNCTION_40	IF_16
0x4002ffa	    0x8b0500000000	            mov eax, dword [0x04003000] 	      2366	undo.c	FUNCTION_40	IF_16
0x4003000	          0x8d7801	                      lea edi, [rax + 1]	      2366	undo.c	FUNCTION_40	IF_16
0x4003003	          0x4d89c2	                             mov r10, r8	      2363	undo.c	FUNCTION_40	IF_16
0x4003006	    0x41bb00000000	                             mov r11d, 0	      2363	undo.c	FUNCTION_40	IF_16
0x400300c	      0xbe01000000	                              mov esi, 1	      2363	undo.c	FUNCTION_40	IF_16
0x4003011	            0xeb03	                           jmp 0x4003016	      2363	undo.c	FUNCTION_40	IF_16
0x4003013	          0x4989ee	                            mov r14, rbp	      2363	undo.c	FUNCTION_40	IF_16
0x4003016	            0x89fb	                            mov ebx, edi	      2383	undo.c	FUNCTION_40	FOR_1
0x4003018	        0x448d6701	                     lea r12d, [rdi + 1]	      2383	undo.c	FUNCTION_40	FOR_1
0x400301c	    0x498b91281200	           mov rdx, qword [r9 + 0x1228] 	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x4003023	          0x4885d2	                           test rdx, rdx	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x4003026	            0x7510	                           jne 0x4003038	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x4003028	    0x498b91201200	           mov rdx, qword [r9 + 0x1220] 	      2387	undo.c	FUNCTION_40	FOR_1	IF_17
0x400302f	          0x4885d2	                           test rdx, rdx	      2391	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1
0x4003032	     0xf84f2010000	                            je 0x400322a	      2391	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1
0x4003038	          0x895a28	             mov dword [rdx + 0x28], ebx	      2393	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1
0x400303b	          0x4585ed	                         test r13d, r13d	      2394	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_18
0x400303e	            0x7415	                            je 0x4003055	      2394	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_18
0x4003040	    0x488b82280200	           mov rax, qword [rdx + 0x228] 	      2395	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_18
0x4003047	          0x83fe01	                              cmp esi, 1	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x400304a	     0xf8558010000	                           jne 0x40031a8	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x4003050	      0xe9ad040000	                           jmp 0x4003502	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x4003055	          0x4585ff	                         test r15d, r15d	      2396	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_11	IF_19
0x4003058	            0x7412	                            je 0x400306c	      2396	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_11	IF_19
0x400305a	    0x488b82300200	           mov rax, qword [rdx + 0x230] 	      2397	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_11	IF_19
0x4003061	          0x83fe01	                              cmp esi, 1	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x4003064	     0xf8518010000	                           jne 0x4003182	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x400306a	            0xeb0f	                           jmp 0x400307b	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x400306c	        0x488b4220	            mov rax, qword [rdx + 0x20] 	      2399	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12
0x4003070	          0x83fe01	                              cmp esi, 1	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x4003073	     0xf8509010000	                           jne 0x4003182	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x4003079	            0xeb0e	                           jmp 0x4003089	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x400307b	          0x4585ff	                         test r15d, r15d	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x400307e	            0x7409	                            je 0x4003089	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x4003080	          0x4885c0	                           test rax, rax	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x4003083	     0xf84f9000000	                            je 0x4003182	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x4003089	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400308f	            0x7910	                           jns 0x40030a1	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003091	    0x498b89481200	           mov rcx, qword [r9 + 0x1248] 	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003098	        0x48394a20	            cmp qword [rdx + 0x20], rcx 	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400309c	           0xf9ec1	                                setle cl	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400309f	            0xeb0e	                           jmp 0x40030af	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40030a1	    0x498b89481200	           mov rcx, qword [r9 + 0x1248] 	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40030a8	        0x48394a20	            cmp qword [rdx + 0x20], rcx 	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40030ac	           0xf9fc1	                                 setg cl	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40030af	            0x84c9	                             test cl, cl	      2407	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40030b1	     0xf84cb000000	                            je 0x4003182	      2407	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40030b7	          0x4585ed	                         test r13d, r13d	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40030ba	            0x7425	                            je 0x40030e1	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40030bc	          0x4939c2	                            cmp r10, rax	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40030bf	            0x7520	                           jne 0x40030e1	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40030c1	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40030c7	            0x790c	                           jns 0x40030d5	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40030c9	        0x48396a20	            cmp qword [rdx + 0x20], rbp 	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40030cd	           0xf9cc1	                                 setl cl	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40030d0	      0xe9a2000000	                           jmp 0x4003177	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40030d5	        0x48396a20	            cmp qword [rdx + 0x20], rbp 	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40030d9	           0xf9fc1	                                 setg cl	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40030dc	      0xe996000000	                           jmp 0x4003177	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40030e1	      0xb901000000	                              mov ecx, 1	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40030e6	          0x4d39d0	                             cmp r8, r10	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40030e9	     0xf8485000000	                            je 0x4003174	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40030ef	          0x4939c6	                            cmp r14, rax	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40030f2	            0x7d41	                           jge 0x4003135	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40030f4	          0x4d39d6	                            cmp r14, r10	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40030f7	            0x7d1e	                           jge 0x4003117	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40030f9	          0x4889c1	                            mov rcx, rax	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40030fc	          0x4c29f1	                            sub rcx, r14	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40030ff	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003104	          0x4c89d1	                            mov rcx, r10	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003107	          0x4c29f1	                            sub rcx, r14	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400310a	      0x48394c2418	            cmp qword [rsp + 0x18], rcx 	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400310f	           0xf9ec1	                                setle cl	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003112	           0xfb6c9	                           movzx ecx, cl	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003115	            0xeb5d	                           jmp 0x4003174	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003117	          0x4889c1	                            mov rcx, rax	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400311a	          0x4c29f1	                            sub rcx, r14	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400311d	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003122	          0x4c89f1	                            mov rcx, r14	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003125	          0x4c29d1	                            sub rcx, r10	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003128	      0x48394c2418	            cmp qword [rsp + 0x18], rcx 	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400312d	           0xf9ec1	                                setle cl	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003130	           0xfb6c9	                           movzx ecx, cl	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003133	            0xeb3f	                           jmp 0x4003174	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003135	          0x4d39d6	                            cmp r14, r10	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003138	            0x7d1e	                           jge 0x4003158	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400313a	          0x4c89f1	                            mov rcx, r14	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400313d	          0x4829c1	                            sub rcx, rax	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003140	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003145	          0x4c89d1	                            mov rcx, r10	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003148	          0x4c29f1	                            sub rcx, r14	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400314b	      0x48394c2418	            cmp qword [rsp + 0x18], rcx 	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003150	           0xf9ec1	                                setle cl	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003153	           0xfb6c9	                           movzx ecx, cl	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003156	            0xeb1c	                           jmp 0x4003174	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003158	          0x4c89f1	                            mov rcx, r14	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400315b	          0x4829c1	                            sub rcx, rax	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400315e	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003163	          0x4c89f1	                            mov rcx, r14	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003166	          0x4c29d1	                            sub rcx, r10	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003169	      0x48394c2418	            cmp qword [rsp + 0x18], rcx 	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400316e	           0xf9ec1	                                setle cl	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003171	           0xfb6c9	                           movzx ecx, cl	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003174	          0x83e101	                              and ecx, 1	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003177	            0x84c9	                             test cl, cl	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003179	            0x7407	                            je 0x4003182	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400317b	        0x488b6a20	            mov rbp, qword [rdx + 0x20] 	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400317f	          0x4989c2	                            mov r10, rax	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4003182	          0x4939c6	                            cmp r14, rax	      2429	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x4003185	            0x7521	                           jne 0x40031a8	      2429	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x4003187	          0x4585ed	                         test r13d, r13d	      2429	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x400318a	            0x751c	                           jne 0x40031a8	      2429	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x400318c	          0x4885d2	                           test rdx, rdx	      2469	undo.c	FUNCTION_40	FOR_1	IF_28
0x400318f	     0xf8495000000	                            je 0x400322a	      2469	undo.c	FUNCTION_40	FOR_1	IF_28
0x4003195	          0x4589df	                          mov r15d, r11d	      2469	undo.c	FUNCTION_40	FOR_1	IF_28
0x4003198	    0x448925000000	           mov dword [0x0400319f], r12d 	      2469	undo.c	FUNCTION_40	FOR_1	IF_28
0x400319f	        0x488b6a20	            mov rbp, qword [rdx + 0x20] 	      2431	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x40031a3	      0xe9b3010000	                           jmp 0x400335b	      2431	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x40031a8	        0x488b4208	                mov rax, qword [rdx + 8]	      2436	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x40031ac	          0x4885c0	                           test rax, rax	      2436	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x40031af	            0x7410	                            je 0x40031c1	      2436	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x40031b1	          0x8b4828	            mov ecx, dword [rax + 0x28] 	      2436	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x40031b4	            0x39cb	                            cmp ebx, ecx	      2437	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x40031b6	            0x7409	                            je 0x40031c1	      2437	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x40031b8	          0x4439e1	                           cmp ecx, r12d	      2437	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x40031bb	     0xf8539030000	                           jne 0x40034fa	      2437	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x40031c1	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      2441	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x40031c5	          0x4885c0	                           test rax, rax	      2441	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x40031c8	            0x7410	                            je 0x40031da	      2441	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x40031ca	          0x8b4828	            mov ecx, dword [rax + 0x28] 	      2442	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x40031cd	            0x39cb	                            cmp ebx, ecx	      2443	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x40031cf	            0x7409	                            je 0x40031da	      2443	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x40031d1	          0x4439e1	                           cmp ecx, r12d	      2443	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x40031d4	     0xf8520030000	                           jne 0x40034fa	      2443	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x40031da	          0x488b02	                    mov rax, qword [rdx]	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x40031dd	          0x4885c0	                           test rax, rax	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x40031e0	            0x7437	                            je 0x4003219	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x40031e2	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x40031e6	          0x4885c9	                           test rcx, rcx	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x40031e9	     0xf85f3020000	                           jne 0x40034e2	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x40031ef	          0x8b4828	            mov ecx, dword [rax + 0x28] 	      2449	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x40031f2	          0x4439e1	                           cmp ecx, r12d	      2450	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x40031f5	     0xf84f3020000	                            je 0x40034ee	      2450	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x40031fb	            0x39cb	                            cmp ebx, ecx	      2450	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x40031fd	     0xf84eb020000	                            je 0x40034ee	      2450	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x4003203	    0x493991281200	           cmp qword [r9 + 0x1228], rdx 	      2453	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25	IF_26
0x400320a	     0xf85ea020000	                           jne 0x40034fa	      2453	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25	IF_26
0x4003210	        0x44896228	            mov dword [rdx + 0x28], r12d	      2454	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25	IF_26
0x4003214	      0xe9e1020000	                           jmp 0x40034fa	      2454	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25	IF_26
0x4003219	        0x44896228	            mov dword [rdx + 0x28], r12d	      2461	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15
0x400321d	        0x488b4218	            mov rax, qword [rdx + 0x18] 	      2462	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	IF_27
0x4003221	          0x4885c0	                           test rax, rax	      2462	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	IF_27
0x4003224	     0xf85d0020000	                           jne 0x40034fa	      2462	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	IF_27
0x400322a	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      2472	undo.c	FUNCTION_40	FOR_1	IF_29
0x400322f	            0x742d	                            je 0x400325e	      2472	undo.c	FUNCTION_40	FOR_1	IF_29
0x4003231	    0x448925000000	           mov dword [0x04003238], r12d 	      2472	undo.c	FUNCTION_40	FOR_1	IF_29
0x4003238	      0xba05000000	                              mov edx, 5	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x400323d	      0xbe00000000	                              mov esi, 0	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x4003242	      0xbf00000000	                              mov edi, 0	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x4003247	      0xe800000000	                          call 0x400324c	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x400324c	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x4003251	          0x4889c7	                            mov rdi, rax	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x4003254	      0xe800000000	                          call 0x4003259	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x4003259	      0xe9bb020000	                           jmp 0x4003519	      2475	undo.c	FUNCTION_40	FOR_1	IF_29
0x400325e	          0x4d39d0	                             cmp r8, r10	      2478	undo.c	FUNCTION_40	FOR_1	IF_30
0x4003261	            0x7551	                           jne 0x40032b4	      2478	undo.c	FUNCTION_40	FOR_1	IF_30
0x4003263	    0x448925000000	           mov dword [0x0400326a], r12d 	      2478	undo.c	FUNCTION_40	FOR_1	IF_30
0x400326a	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2480	undo.c	FUNCTION_40	FOR_1	IF_30	IF_31
0x4003270	            0x7921	                           jns 0x4003293	      2480	undo.c	FUNCTION_40	FOR_1	IF_30	IF_31
0x4003272	      0xba05000000	                              mov edx, 5	      2481	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_6
0x4003277	      0xbe00000000	                              mov esi, 0	      2481	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_6
0x400327c	      0xbf00000000	                              mov edi, 0	      2481	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_6
0x4003281	      0xe800000000	                          call 0x4003286	      2481	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_6
0x4003286	          0x4889c7	                            mov rdi, rax	      2481	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_6
0x4003289	      0xe800000000	                          call 0x400328e	      2481	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_6
0x400328e	      0xe986020000	                           jmp 0x4003519	      2481	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_6
0x4003293	      0xba05000000	                              mov edx, 5	      2483	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_8
0x4003298	      0xbe00000000	                              mov esi, 0	      2483	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_8
0x400329d	      0xbf00000000	                              mov edi, 0	      2483	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_8
0x40032a2	      0xe800000000	                          call 0x40032a7	      2483	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_8
0x40032a7	          0x4889c7	                            mov rdi, rax	      2483	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_8
0x40032aa	      0xe800000000	                          call 0x40032af	      2483	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_8
0x40032af	      0xe965020000	                           jmp 0x4003519	      2483	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_8
0x40032b4	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2491	undo.c	FUNCTION_40	FOR_1	IF_32
0x40032ba	      0xb801000000	                              mov eax, 1	      2491	undo.c	FUNCTION_40	FOR_1	IF_32
0x40032bf	        0x440f48d8	                         cmovs r11d, eax	      2491	undo.c	FUNCTION_40	FOR_1	IF_32
0x40032c3	          0x83c601	                              add esi, 1	      2377	undo.c	FUNCTION_40	FOR_1
0x40032c6	          0x83c702	                              add edi, 2	      2377	undo.c	FUNCTION_40	FOR_1
0x40032c9	    0x41bd00000000	                             mov r13d, 0	      2488	undo.c	FUNCTION_40	FOR_1
0x40032cf	    0x41bf00000000	                             mov r15d, 0	      2489	undo.c	FUNCTION_40	FOR_1
0x40032d5	          0x83fe03	                              cmp esi, 3	      2377	undo.c	FUNCTION_40	FOR_1
0x40032d8	     0xf8535fdffff	                           jne 0x4003013	      2377	undo.c	FUNCTION_40	FOR_1
0x40032de	          0x4589df	                          mov r15d, r11d	      2377	undo.c	FUNCTION_40	FOR_1
0x40032e1	    0x448925000000	           mov dword [0x040032e8], r12d 	      2377	undo.c	FUNCTION_40	FOR_1
0x40032e8	    0x41bd01000000	                             mov r13d, 1	      2280	undo.c	FUNCTION_40
0x40032ee	          0x4885ed	                           test rbp, rbp	      2496	undo.c	FUNCTION_40	IF_33
0x40032f1	     0xf85dd010000	                           jne 0x40034d4	      2496	undo.c	FUNCTION_40	IF_33
0x40032f7	            0xeb62	                           jmp 0x400335b	      2496	undo.c	FUNCTION_40	IF_33
0x40032f9	      0xbf00000000	                              mov edi, 0	      2504	undo.c	FUNCTION_40	IF_33	WHILE_2	CALL_9
0x40032fe	      0xe800000000	                          call 0x4003303	      2504	undo.c	FUNCTION_40	IF_33	WHILE_2	CALL_9
0x4003303	    0x488b05000000	            mov rax, qword [0x0400330a] 	      2506	undo.c	FUNCTION_40	IF_33	WHILE_2
0x400330a	    0x488b90281200	          mov rdx, qword [rax + 0x1228] 	      2506	undo.c	FUNCTION_40	IF_33	WHILE_2
0x4003311	          0x4885d2	                           test rdx, rdx	      2507	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_34
0x4003314	            0x7509	                           jne 0x400331f	      2507	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_34
0x4003316	    0x4c8ba8201200	          mov r13, qword [rax + 0x1220] 	      2508	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_34
0x400331d	            0xeb03	                           jmp 0x4003322	      2508	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_34
0x400331f	          0x4c8b2a	                    mov r13, qword [rdx]	      2510	undo.c	FUNCTION_40	IF_33	WHILE_2	ELSE_18
0x4003322	          0x4d85ed	                           test r13, r13	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x4003325	            0x743e	                            je 0x4003365	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x4003327	          0x4885ed	                           test rbp, rbp	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x400332a	            0x7e0a	                           jle 0x4003336	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x400332c	        0x41395d28	            cmp dword [r13 + 0x28], ebx 	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x4003330	     0xf857f010000	                           jne 0x40034b5	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x4003336	        0x49396d20	            cmp qword [r13 + 0x20], rbp 	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x400333a	            0x7505	                           jne 0x4003341	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x400333c	          0x4585ff	                         test r15d, r15d	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x400333f	            0x7424	                            je 0x4003365	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x4003341	    0x4c89a8281200	          mov qword [rax + 0x1228], r13 	      2514	undo.c	FUNCTION_40	IF_33	WHILE_2
0x4003348	      0xbf01000000	                              mov edi, 1	      2515	undo.c	FUNCTION_40	IF_33	WHILE_2	CALL_10
0x400334d	      0xe847d9ffff	                     call sym.u_undoredo	      2515	undo.c	FUNCTION_40	IF_33	WHILE_2	CALL_10
0x4003352	          0x4885ed	                           test rbp, rbp	      2516	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_36
0x4003355	            0x7e04	                           jle 0x400335b	      2516	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_36
0x4003357	        0x45896528	            mov dword [r13 + 0x28], r12d	      2517	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_36
0x400335b	    0x8b0500000000	            mov eax, dword [0x04003361] 	      2501	undo.c	FUNCTION_40	IF_33	WHILE_2
0x4003361	            0x85c0	                           test eax, eax	      2501	undo.c	FUNCTION_40	IF_33	WHILE_2
0x4003363	            0x7494	                            je 0x40032f9	      2501	undo.c	FUNCTION_40	IF_33	WHILE_2
0x4003365	    0x41bd01000000	                             mov r13d, 1	      2280	undo.c	FUNCTION_40
0x400336b	          0x4885ed	                           test rbp, rbp	      2521	undo.c	FUNCTION_40	IF_33	IF_37
0x400336e	     0xf8e60010000	                           jle 0x40034d4	      2521	undo.c	FUNCTION_40	IF_33	IF_37
0x4003374	      0xe93c010000	                           jmp 0x40034b5	      2521	undo.c	FUNCTION_40	IF_33	IF_37
0x4003379	      0xbf00000000	                              mov edi, 0	      2529	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	CALL_11
0x400337e	      0xe800000000	                          call 0x4003383	      2529	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	CALL_11
0x4003383	    0x488b35000000	            mov rsi, qword [0x0400338a] 	      2531	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x400338a	    0x488b86281200	          mov rax, qword [rsi + 0x1228] 	      2531	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4003391	          0x4885c0	                           test rax, rax	      2532	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_38
0x4003394	            0x7508	                           jne 0x400339e	      2532	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_38
0x4003396	      0xe939010000	                           jmp 0x40034d4	      2532	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_38
0x400339b	          0x4889d0	                            mov rax, rdx	      2538	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x400339e	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2536	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x40033a2	          0x4885d2	                           test rdx, rdx	      2536	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x40033a5	            0x740a	                            je 0x40033b1	      2536	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x40033a7	          0x395a28	            cmp dword [rdx + 0x28], ebx 	      2537	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x40033aa	            0x74ef	                            je 0x400339b	      2537	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x40033ac	          0x4989c4	                            mov r12, rax	      2537	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x40033af	            0xeb08	                           jmp 0x40033b9	      2537	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x40033b1	          0x4989c4	                            mov r12, rax	      2537	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x40033b4	            0xeb03	                           jmp 0x40033b9	      2537	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x40033b6	          0x4989d4	                            mov r12, rdx	      2542	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x40033b9	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      2542	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x40033be	          0x4885d2	                           test rdx, rdx	      2542	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x40033c1	            0x7405	                            je 0x40033c8	      2542	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x40033c3	          0x395a28	            cmp dword [rdx + 0x28], ebx 	      2543	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x40033c6	            0x74ee	                            je 0x40033b6	      2543	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x40033c8	          0x4c39e0	                            cmp rax, r12	      2545	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x40033cb	            0x7505	                           jne 0x40033d2	      2545	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x40033cd	            0xeb57	                           jmp 0x4003426	      2545	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x40033cf	          0x4889c8	                            mov rax, rcx	      2550	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	WHILE_6
0x40033d2	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      2549	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	WHILE_6
0x40033d6	          0x4885c9	                           test rcx, rcx	      2549	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	WHILE_6
0x40033d9	            0x75f4	                           jne 0x40033cf	      2549	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	WHILE_6
0x40033db	          0x4885d2	                           test rdx, rdx	      2551	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_40
0x40033de	            0x7409	                            je 0x40033e9	      2551	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_40
0x40033e0	      0x498b4c2418	            mov rcx, qword [r12 + 0x18] 	      2553	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_40
0x40033e5	        0x48894a18	             mov qword [rdx + 0x18], rcx	      2552	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_40
0x40033e9	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      2554	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x40033ee	      0x498b4c2410	            mov rcx, qword [r12 + 0x10] 	      2555	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x40033f3	        0x48894a10	             mov qword [rdx + 0x10], rcx	      2554	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x40033f7	    0x49c744241800	               mov qword [r12 + 0x18], 0	      2556	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x4003400	      0x4989442410	             mov qword [r12 + 0x10], rax	      2557	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x4003405	        0x4c896018	             mov qword [rax + 0x18], r12	      2558	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x4003409	    0x483b86181200	          cmp rax, qword [rsi + 0x1218] 	      2560	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_41
0x4003410	            0x7507	                           jne 0x4003419	      2560	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_41
0x4003412	    0x4c89a6181200	          mov qword [rsi + 0x1218], r12 	      2561	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_41
0x4003419	        0x498b0424	                    mov rax, qword [r12]	      2563	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_42
0x400341d	          0x4885c0	                           test rax, rax	      2563	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_42
0x4003420	            0x7404	                            je 0x4003426	      2563	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_42
0x4003422	        0x4c896008	                mov qword [rax + 8], r12	      2564	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_42
0x4003426	    0x4c89a6281200	          mov qword [rsi + 0x1228], r12 	      2566	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x400342d	      0x41395c2428	            cmp dword [r12 + 0x28], ebx 	      2568	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_43
0x4003432	     0xf859c000000	                           jne 0x40034d4	      2568	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_43
0x4003438	      0x49396c2420	            cmp qword [r12 + 0x20], rbp 	      2573	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x400343d	            0x7515	                           jne 0x4003454	      2573	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x400343f	          0x4585f6	                         test r14d, r14d	      2573	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x4003442	            0x7410	                            je 0x4003454	      2573	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x4003444	        0x4883ed01	                              sub rbp, 1	      2575	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x4003448	    0x4889ae481200	          mov qword [rsi + 0x1248], rbp 	      2575	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x400344f	      0xe980000000	                           jmp 0x40034d4	      2576	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x4003454	      0xbf00000000	                              mov edi, 0	      2579	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	CALL_12
0x4003459	      0xe83bd8ffff	                     call sym.u_undoredo	      2579	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	CALL_12
0x400345e	    0x49837c240800	                  cmp qword [r12 + 8], 0	      2583	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_45
0x4003464	            0x750e	                           jne 0x4003474	      2583	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_45
0x4003466	    0x488b05000000	            mov rax, qword [0x0400346d] 	      2584	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_45
0x400346d	    0x4c89a0201200	          mov qword [rax + 0x1220], r12 	      2584	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_45
0x4003474	      0x498b542408	                mov rdx, qword [r12 + 8]	      2585	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4003479	    0x488b05000000	            mov rax, qword [0x04003480] 	      2585	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4003480	    0x488990281200	          mov qword [rax + 0x1228], rdx 	      2585	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4003487	      0x49396c2420	            cmp qword [r12 + 0x20], rbp 	      2588	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_46
0x400348c	            0x7440	                            je 0x40034ce	      2588	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_46
0x400348e	      0x498b442408	                mov rax, qword [r12 + 8]	      2591	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4003493	          0x4885c0	                           test rax, rax	      2592	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47
0x4003496	            0x740b	                            je 0x40034a3	      2592	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47
0x4003498	    0x41bd00000000	                             mov r13d, 0	      2586	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x400349e	          0x395828	            cmp dword [rax + 0x28], ebx 	      2592	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47
0x40034a1	            0x741b	                            je 0x40034be	      2592	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47
0x40034a3	      0xbf00000000	                              mov edi, 0	      2595	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47	CALL_13
0x40034a8	      0xe800000000	                          call 0x40034ad	      2595	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47	CALL_13
0x40034ad	    0x41bd00000000	                             mov r13d, 0	      2586	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x40034b3	            0xeb1f	                           jmp 0x40034d4	      2596	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47
0x40034b5	    0x41bd01000000	                             mov r13d, 1	      2550	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	WHILE_6
0x40034bb	          0x4589fe	                          mov r14d, r15d	      2550	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	WHILE_6
0x40034be	    0x8b0500000000	            mov eax, dword [0x040034c4] 	      2526	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x40034c4	            0x85c0	                           test eax, eax	      2526	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x40034c6	     0xf84adfeffff	                            je 0x4003379	      2526	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x40034cc	            0xeb06	                           jmp 0x40034d4	      2526	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x40034ce	    0x41bd00000000	                             mov r13d, 0	      2586	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x40034d4	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      2601	undo.c	FUNCTION_40	CALL_14
0x40034d8	          0x4489ef	                           mov edi, r13d	      2601	undo.c	FUNCTION_40	CALL_14
0x40034db	      0xe888d5ffff	                     call sym.u_undo_end	      2601	undo.c	FUNCTION_40	CALL_14
0x40034e0	            0xeb37	                           jmp 0x4003519	      2601	undo.c	FUNCTION_40	CALL_14
0x40034e2	        0x44896228	            mov dword [rdx + 0x28], r12d	      2461	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15
0x40034e6	          0x4889ca	                            mov rdx, rcx	      2462	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	IF_27
0x40034e9	      0xe94afbffff	                           jmp 0x4003038	      2462	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	IF_27
0x40034ee	        0x44896228	            mov dword [rdx + 0x28], r12d	      2461	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15
0x40034f2	          0x4889c2	                            mov rdx, rax	      2465	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	ELSE_16
0x40034f5	      0xe93efbffff	                           jmp 0x4003038	      2465	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	ELSE_16
0x40034fa	          0x4889c2	                            mov rdx, rax	      2363	undo.c	FUNCTION_40	IF_16
0x40034fd	      0xe936fbffff	                           jmp 0x4003038	      2363	undo.c	FUNCTION_40	IF_16
0x4003502	          0x4885c0	                           test rax, rax	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x4003505	     0xf857efbffff	                           jne 0x4003089	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x400350b	          0x4585ff	                         test r15d, r15d	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x400350e	     0xf8594fcffff	                           jne 0x40031a8	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x4003514	      0xe970fbffff	                           jmp 0x4003089	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x4003519	        0x4883c428	                           add rsp, 0x28	      2602	undo.c	FUNCTION_40
0x400351d	              0x5b	                                 pop rbx	      2602	undo.c	FUNCTION_40
0x400351e	              0x5d	                                 pop rbp	      2602	undo.c	FUNCTION_40
0x400351f	            0x415c	                                 pop r12	      2602	undo.c	FUNCTION_40
0x4003521	            0x415d	                                 pop r13	      2602	undo.c	FUNCTION_40
0x4003523	            0x415e	                                 pop r14	      2602	undo.c	FUNCTION_40
0x4003525	            0x415f	                                 pop r15	      2602	undo.c	FUNCTION_40
0x4003527	              0xc3	                                     ret	      2602	undo.c	FUNCTION_40
u_redo	ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,2:WHILE,0:IF,1:DO,0	12
0x40021a6	              0x53	                                push rbx	      2174	undo.c	FUNCTION_38
0x40021a7	            0x89fb	                            mov ebx, edi	      2174	undo.c	FUNCTION_38
0x40021a9	      0xbe75000000	                           mov esi, 0x75	      2175	undo.c	FUNCTION_38	IF_1	CALL_1
0x40021ae	    0x488b3d000000	            mov rdi, qword [0x040021b5] 	      2175	undo.c	FUNCTION_38	IF_1	CALL_1
0x40021b5	      0xe800000000	                          call 0x40021ba	      2175	undo.c	FUNCTION_38	IF_1	CALL_1
0x40021ba	          0x4885c0	                           test rax, rax	      2175	undo.c	FUNCTION_38	IF_1	CALL_1
0x40021bd	            0x750a	                           jne 0x40021c9	      2175	undo.c	FUNCTION_38	IF_1	CALL_1
0x40021bf	    0xc70500000000	               mov dword [0x040021c9], 0	      2176	undo.c	FUNCTION_38	IF_1
0x40021c9	            0x89df	                            mov edi, ebx	      2177	undo.c	FUNCTION_38	CALL_2
0x40021cb	      0xe880f3ffff	                         call sym.u_doit	      2177	undo.c	FUNCTION_38	CALL_2
0x40021d0	              0x5b	                                 pop rbx	      2178	undo.c	FUNCTION_38
0x40021d1	              0xc3	                                     ret	      2178	undo.c	FUNCTION_38
u_save_line	ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,2:WHILE,0:IF,0:DO,0	6
0x4000367	        0x4883ec08	                              sub rsp, 8	      3515	undo.c	FUNCTION_62
0x400036b	      0xe800000000	                          call 0x4000370	      3516	undo.c	FUNCTION_62	CALL_2
0x4000370	          0x4889c7	                            mov rdi, rax	      3516	undo.c	FUNCTION_62	CALL_2
0x4000373	      0xe800000000	                          call 0x4000378	      3516	undo.c	FUNCTION_62	CALL_2
0x4000378	        0x4883c408	                              add rsp, 8	      3517	undo.c	FUNCTION_62
0x400037c	              0xc3	                                     ret	      3517	undo.c	FUNCTION_62
u_get_headentry	ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,2:WHILE,0:IF,1:DO,0	17
0x4000288	        0x4883ec08	                              sub rsp, 8	      3241	undo.c	FUNCTION_51
0x400028c	    0x488b05000000	            mov rax, qword [0x04000293] 	      3242	undo.c	FUNCTION_51	IF_1
0x4000293	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	      3242	undo.c	FUNCTION_51	IF_1
0x400029a	          0x4885c0	                           test rax, rax	      3242	undo.c	FUNCTION_51	IF_1
0x400029d	            0x7409	                            je 0x40002a8	      3242	undo.c	FUNCTION_51	IF_1
0x400029f	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3242	undo.c	FUNCTION_51	IF_1
0x40002a3	          0x4885c0	                           test rax, rax	      3242	undo.c	FUNCTION_51	IF_1
0x40002a6	            0x7521	                           jne 0x40002c9	      3242	undo.c	FUNCTION_51	IF_1
0x40002a8	      0xba05000000	                              mov edx, 5	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
0x40002ad	      0xbe00000000	                              mov esi, 0	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
0x40002b2	      0xbf00000000	                              mov edi, 0	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
0x40002b7	      0xe800000000	                          call 0x40002bc	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
0x40002bc	          0x4889c7	                            mov rdi, rax	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
0x40002bf	      0xe800000000	                          call 0x40002c4	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
0x40002c4	      0xb800000000	                              mov eax, 0	      3245	undo.c	FUNCTION_51	IF_1
0x40002c9	        0x4883c408	                              add rsp, 8	      3248	undo.c	FUNCTION_51
0x40002cd	              0xc3	                                     ret	      3248	undo.c	FUNCTION_51
serialize_pos	ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,4:WHILE,0:IF,0:DO,0	20
0x40005fb	              0x55	                                push rbp	      1447	undo.c	FUNCTION_31
0x40005fc	              0x53	                                push rbx	      1447	undo.c	FUNCTION_31
0x40005fd	        0x4883ec08	                              sub rsp, 8	      1447	undo.c	FUNCTION_31
0x4000601	          0x4889fd	                            mov rbp, rdi	      1447	undo.c	FUNCTION_31
0x4000604	          0x4889d3	                            mov rbx, rdx	      1447	undo.c	FUNCTION_31
0x4000607	      0xba04000000	                              mov edx, 4	      1448	undo.c	FUNCTION_31	CALL_1
0x400060c	      0xe86cffffff	               call sym.undo_write_bytes	      1448	undo.c	FUNCTION_31	CALL_1
0x4000611	          0x4863f3	                         movsxd rsi, ebx	      1449	undo.c	FUNCTION_31	CALL_2
0x4000614	      0xba04000000	                              mov edx, 4	      1449	undo.c	FUNCTION_31	CALL_2
0x4000619	          0x4889ef	                            mov rdi, rbp	      1449	undo.c	FUNCTION_31	CALL_2
0x400061c	      0xe85cffffff	               call sym.undo_write_bytes	      1449	undo.c	FUNCTION_31	CALL_2
0x4000621	        0x48c1fb20	                           sar rbx, 0x20	      1451	undo.c	FUNCTION_31	CALL_3
0x4000625	          0x4889de	                            mov rsi, rbx	      1451	undo.c	FUNCTION_31	CALL_3
0x4000628	      0xba04000000	                              mov edx, 4	      1451	undo.c	FUNCTION_31	CALL_3
0x400062d	          0x4889ef	                            mov rdi, rbp	      1451	undo.c	FUNCTION_31	CALL_3
0x4000630	      0xe848ffffff	               call sym.undo_write_bytes	      1451	undo.c	FUNCTION_31	CALL_3
0x4000635	        0x4883c408	                              add rsp, 8	      1455	undo.c	FUNCTION_31
0x4000639	              0x5b	                                 pop rbx	      1455	undo.c	FUNCTION_31
0x400063a	              0x5d	                                 pop rbp	      1455	undo.c	FUNCTION_31
0x400063b	              0xc3	                                     ret	      1455	undo.c	FUNCTION_31
u_freeentry	ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,3:WHILE,1:IF,0:DO,0	23
0x4000083	            0x4154	                                push r12	      3396	undo.c	FUNCTION_56
0x4000085	              0x55	                                push rbp	      3396	undo.c	FUNCTION_56
0x4000086	              0x53	                                push rbx	      3396	undo.c	FUNCTION_56
0x4000087	          0x4989fc	                            mov r12, rdi	      3396	undo.c	FUNCTION_56
0x400008a	          0x4885f6	                           test rsi, rsi	      3397	undo.c	FUNCTION_56	WHILE_1
0x400008d	            0x7e26	                           jle 0x40000b5	      3397	undo.c	FUNCTION_56	WHILE_1
0x400008f	          0x4889f3	                            mov rbx, rsi	      3397	undo.c	FUNCTION_56	WHILE_1
0x4000092	    0x488d2cf5f8ff	                    lea rbp, [rsi*8 - 8]	      3397	undo.c	FUNCTION_56	WHILE_1
0x400009a	        0x4883eb01	                              sub rbx, 1	      3398	undo.c	FUNCTION_56	CALL_1
0x400009e	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      3398	undo.c	FUNCTION_56	CALL_1
0x40000a3	        0x488b3c28	              mov rdi, qword [rax + rbp]	      3398	undo.c	FUNCTION_56	CALL_1
0x40000a7	      0xe800000000	                          call 0x40000ac	      3398	undo.c	FUNCTION_56	CALL_1
0x40000ac	        0x4883ed08	                              sub rbp, 8	      3398	undo.c	FUNCTION_56	CALL_1
0x40000b0	          0x4885db	                           test rbx, rbx	      3397	undo.c	FUNCTION_56	WHILE_1
0x40000b3	            0x75e5	                           jne 0x400009a	      3397	undo.c	FUNCTION_56	WHILE_1
0x40000b5	      0x498b7c2420	            mov rdi, qword [r12 + 0x20] 	      3399	undo.c	FUNCTION_56	CALL_2
0x40000ba	      0xe800000000	                          call 0x40000bf	      3399	undo.c	FUNCTION_56	CALL_2
0x40000bf	          0x4c89e7	                            mov rdi, r12	      3403	undo.c	FUNCTION_56	CALL_3
0x40000c2	      0xe800000000	                          call 0x40000c7	      3403	undo.c	FUNCTION_56	CALL_3
0x40000c7	              0x5b	                                 pop rbx	      3404	undo.c	FUNCTION_56
0x40000c8	              0x5d	                                 pop rbp	      3404	undo.c	FUNCTION_56
0x40000c9	            0x415c	                                 pop r12	      3404	undo.c	FUNCTION_56
0x40000cb	              0xc3	                                     ret	      3404	undo.c	FUNCTION_56
undo_read_4c	ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,2:WHILE,0:IF,1:DO,0	28
0x4000871	        0x4883ec18	                           sub rsp, 0x18	       994	undo.c	FUNCTION_20
0x4000875	    0x64488b042528	                mov rax, qword fs:[0x28]	       994	undo.c	FUNCTION_20
0x400087e	      0x4889442408	                mov qword [rsp + 8], rax	       994	undo.c	FUNCTION_20
0x4000883	            0x31c0	                            xor eax, eax	       994	undo.c	FUNCTION_20
0x4000885	      0x48837f1800	               cmp qword [rdi + 0x18], 0	       996	undo.c	FUNCTION_20	IF_1
0x400088a	            0x7431	                            je 0x40008bd	       996	undo.c	FUNCTION_20	IF_1
0x400088c	      0xba04000000	                              mov edx, 4	      1001	undo.c	FUNCTION_20	IF_1	CALL_1
0x4000891	          0x4889e6	                            mov rsi, rsp	      1001	undo.c	FUNCTION_20	IF_1	CALL_1
0x4000894	      0xe8a3fdffff	                      call sym.undo_read	      1001	undo.c	FUNCTION_20	IF_1	CALL_1
0x4000899	         0xfb61424	                   movzx edx, byte [rsp]	      1002	undo.c	FUNCTION_20	IF_1
0x400089d	          0xc1e218	                           shl edx, 0x18	      1002	undo.c	FUNCTION_20	IF_1
0x40008a0	       0xfb64c2403	               movzx ecx, byte [rsp + 3]	      1002	undo.c	FUNCTION_20	IF_1
0x40008a5	             0x1ca	                            add edx, ecx	      1002	undo.c	FUNCTION_20	IF_1
0x40008a7	       0xfb6442401	               movzx eax, byte [rsp + 1]	      1002	undo.c	FUNCTION_20	IF_1
0x40008ac	          0xc1e010	                           shl eax, 0x10	      1002	undo.c	FUNCTION_20	IF_1
0x40008af	             0x1c2	                            add edx, eax	      1002	undo.c	FUNCTION_20	IF_1
0x40008b1	       0xfb6442402	               movzx eax, byte [rsp + 2]	      1002	undo.c	FUNCTION_20	IF_1
0x40008b6	          0xc1e008	                              shl eax, 8	      1002	undo.c	FUNCTION_20	IF_1
0x40008b9	             0x1d0	                            add eax, edx	      1003	undo.c	FUNCTION_20	IF_1
0x40008bb	            0xeb09	                           jmp 0x40008c6	      1003	undo.c	FUNCTION_20	IF_1
0x40008bd	        0x488b7f08	                mov rdi, qword [rdi + 8]	      1006	undo.c	FUNCTION_20	CALL_2
0x40008c1	      0xe800000000	                          call 0x40008c6	      1006	undo.c	FUNCTION_20	CALL_2
0x40008c6	      0x488b742408	                mov rsi, qword [rsp + 8]	      1007	undo.c	FUNCTION_20
0x40008cb	    0x644833342528	                xor rsi, qword fs:[0x28]	      1007	undo.c	FUNCTION_20
0x40008d4	            0x7405	                            je 0x40008db	      1007	undo.c	FUNCTION_20
0x40008d6	      0xe800000000	                          call 0x40008db	      1007	undo.c	FUNCTION_20
0x40008db	        0x4883c418	                           add rsp, 0x18	      1007	undo.c	FUNCTION_20
0x40008df	              0xc3	                                     ret	      1007	undo.c	FUNCTION_20
u_freeentries	ELSE,0:functions,0:SWITCH,0:FOR,1:CALL,2:WHILE,0:IF,3:DO,0	32
0x40000cc	            0x4154	                                push r12	      3367	undo.c	FUNCTION_55
0x40000ce	              0x55	                                push rbp	      3367	undo.c	FUNCTION_55
0x40000cf	              0x53	                                push rbx	      3367	undo.c	FUNCTION_55
0x40000d0	          0x4989fc	                            mov r12, rdi	      3367	undo.c	FUNCTION_55
0x40000d3	          0x4889f5	                            mov rbp, rsi	      3367	undo.c	FUNCTION_55
0x40000d6	    0x4839b7281200	          cmp qword [rdi + 0x1228], rsi 	      3371	undo.c	FUNCTION_55	IF_1
0x40000dd	            0x750b	                           jne 0x40000ea	      3371	undo.c	FUNCTION_55	IF_1
0x40000df	    0x48c787281200	            mov qword [rdi + 0x1228], 0 	      3372	undo.c	FUNCTION_55	IF_1
0x40000ea	    0x493bac242012	          cmp rbp, qword [r12 + 0x1220] 	      3373	undo.c	FUNCTION_55	IF_2
0x40000f2	            0x750c	                           jne 0x4000100	      3373	undo.c	FUNCTION_55	IF_2
0x40000f4	    0x49c784242012	            mov qword [r12 + 0x1220], 0 	      3374	undo.c	FUNCTION_55	IF_2
0x4000100	          0x4885d2	                           test rdx, rdx	      3375	undo.c	FUNCTION_55	IF_3
0x4000103	            0x740c	                            je 0x4000111	      3375	undo.c	FUNCTION_55	IF_3
0x4000105	          0x483b2a	                    cmp rbp, qword [rdx]	      3375	undo.c	FUNCTION_55	IF_3
0x4000108	            0x7507	                           jne 0x4000111	      3375	undo.c	FUNCTION_55	IF_3
0x400010a	    0x48c702000000	                      mov qword [rdx], 0	      3376	undo.c	FUNCTION_55	IF_3
0x4000111	        0x488b7d30	            mov rdi, qword [rbp + 0x30] 	      3378	undo.c	FUNCTION_55	FOR_1
0x4000115	          0x4885ff	                           test rdi, rdi	      3378	undo.c	FUNCTION_55	FOR_1
0x4000118	            0x7414	                            je 0x400012e	      3378	undo.c	FUNCTION_55	FOR_1
0x400011a	          0x488b1f	                    mov rbx, qword [rdi]	      3380	undo.c	FUNCTION_55	FOR_1
0x400011d	        0x488b7728	            mov rsi, qword [rdi + 0x28] 	      3381	undo.c	FUNCTION_55	FOR_1	CALL_1
0x4000121	      0xe85dffffff	                    call sym.u_freeentry	      3381	undo.c	FUNCTION_55	FOR_1	CALL_1
0x4000126	          0x4889df	                            mov rdi, rbx	      3378	undo.c	FUNCTION_55	FOR_1
0x4000129	          0x4885db	                           test rbx, rbx	      3378	undo.c	FUNCTION_55	FOR_1
0x400012c	            0x75ec	                           jne 0x400011a	      3378	undo.c	FUNCTION_55	FOR_1
0x400012e	          0x4889ef	                            mov rdi, rbp	      3387	undo.c	FUNCTION_55	CALL_2
0x4000131	      0xe800000000	                          call 0x4000136	      3387	undo.c	FUNCTION_55	CALL_2
0x4000136	    0x4183ac243012	             sub dword [r12 + 0x1230], 1	      3388	undo.c	FUNCTION_55
0x400013f	              0x5b	                                 pop rbx	      3389	undo.c	FUNCTION_55
0x4000140	              0x5d	                                 pop rbp	      3389	undo.c	FUNCTION_55
0x4000141	            0x415c	                                 pop r12	      3389	undo.c	FUNCTION_55
0x4000143	              0xc3	                                     ret	      3389	undo.c	FUNCTION_55
u_saveline	ELSE,1:functions,0:SWITCH,0:FOR,0:CALL,3:WHILE,0:IF,4:DO,0	32
0x4003a43	    0x488b05000000	            mov rax, qword [0x04003a4a] 	      3425	undo.c	FUNCTION_58	IF_1
0x4003a4a	    0x4839b8681200	          cmp qword [rax + 0x1268], rdi 	      3427	undo.c	FUNCTION_58	IF_2
0x4003a51	            0x746c	                            je 0x4003abf	      3427	undo.c	FUNCTION_58	IF_2
0x4003a53	          0x4885ff	                           test rdi, rdi	      3427	undo.c	FUNCTION_58	IF_2
0x4003a56	            0x7e67	                           jle 0x4003abf	      3427	undo.c	FUNCTION_58	IF_2
0x4003a58	          0x483b38	                    cmp rdi, qword [rax]	      3427	undo.c	FUNCTION_58	IF_2
0x4003a5b	            0x7f62	                            jg 0x4003abf	      3427	undo.c	FUNCTION_58	IF_2
0x4003a5d	              0x55	                                push rbp	      3424	undo.c	FUNCTION_58
0x4003a5e	              0x53	                                push rbx	      3424	undo.c	FUNCTION_58
0x4003a5f	        0x4883ec08	                              sub rsp, 8	      3424	undo.c	FUNCTION_58
0x4003a63	          0x4889fb	                            mov rbx, rdi	      3424	undo.c	FUNCTION_58
0x4003a66	      0xe800000000	                          call 0x4003a6b	      3429	undo.c	FUNCTION_58	CALL_1
0x4003a6b	    0x488b2d000000	            mov rbp, qword [0x04003a72] 	      3430	undo.c	FUNCTION_58
0x4003a72	    0x48899d681200	          mov qword [rbp + 0x1268], rbx 	      3430	undo.c	FUNCTION_58
0x4003a79	    0x488b05000000	            mov rax, qword [0x04003a80] 	      3431	undo.c	FUNCTION_58	IF_3
0x4003a80	        0x483b5838	            cmp rbx, qword [rax + 0x38] 	      3431	undo.c	FUNCTION_58	IF_3
0x4003a84	            0x750b	                           jne 0x4003a91	      3431	undo.c	FUNCTION_58	IF_3
0x4003a86	          0x8b4040	            mov eax, dword [rax + 0x40] 	      3432	undo.c	FUNCTION_58	IF_3
0x4003a89	    0x898570120000	          mov dword [rbp + 0x1270], eax 	      3432	undo.c	FUNCTION_58	IF_3
0x4003a8f	            0xeb0a	                           jmp 0x4003a9b	      3432	undo.c	FUNCTION_58	IF_3
0x4003a91	    0xc78570120000	            mov dword [rbp + 0x1270], 0 	      3434	undo.c	FUNCTION_58	ELSE_1
0x4003a9b	          0x4889df	                            mov rdi, rbx	      3435	undo.c	FUNCTION_58	IF_4	CALL_2
0x4003a9e	      0xe8c4c8ffff	                    call sym.u_save_line	      3435	undo.c	FUNCTION_58	IF_4	CALL_2
0x4003aa3	    0x488985601200	          mov qword [rbp + 0x1260], rax 	      3435	undo.c	FUNCTION_58	IF_4	CALL_2
0x4003aaa	          0x4885c0	                           test rax, rax	      3435	undo.c	FUNCTION_58	IF_4	CALL_2
0x4003aad	            0x750a	                           jne 0x4003ab9	      3435	undo.c	FUNCTION_58	IF_4	CALL_2
0x4003aaf	      0xbf00000000	                              mov edi, 0	      3436	undo.c	FUNCTION_58	CALL_3
0x4003ab4	      0xe800000000	                          call 0x4003ab9	      3436	undo.c	FUNCTION_58	CALL_3
0x4003ab9	        0x4883c408	                              add rsp, 8	      3437	undo.c	FUNCTION_58
0x4003abd	              0x5b	                                 pop rbx	      3437	undo.c	FUNCTION_58
0x4003abe	              0x5d	                                 pop rbp	      3437	undo.c	FUNCTION_58
0x4003abf	            0xf3c3	                                     ret	      3437	undo.c	FUNCTION_58
undo_allowed	ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,6:WHILE,0:IF,3:DO,0	36
0x40014c3	              0x53	                                push rbx	       333	undo.c	FUNCTION_8
0x40014c4	    0x488b05000000	            mov rax, qword [0x040014cb] 	       335	undo.c	FUNCTION_8	IF_1
0x40014cb	    0x8b9840150000	          mov ebx, dword [rax + 0x1540] 	       335	undo.c	FUNCTION_8	IF_1
0x40014d1	            0x85db	                           test ebx, ebx	       335	undo.c	FUNCTION_8	IF_1
0x40014d3	            0x751e	                           jne 0x40014f3	       335	undo.c	FUNCTION_8	IF_1
0x40014d5	      0xba05000000	                              mov edx, 5	       337	undo.c	FUNCTION_8	IF_1	CALL_2
0x40014da	      0xbe00000000	                              mov esi, 0	       337	undo.c	FUNCTION_8	IF_1	CALL_2
0x40014df	      0xbf00000000	                              mov edi, 0	       337	undo.c	FUNCTION_8	IF_1	CALL_2
0x40014e4	      0xe800000000	                          call 0x40014e9	       337	undo.c	FUNCTION_8	IF_1	CALL_2
0x40014e9	          0x4889c7	                            mov rdi, rax	       337	undo.c	FUNCTION_8	IF_1	CALL_2
0x40014ec	      0xe800000000	                          call 0x40014f1	       337	undo.c	FUNCTION_8	IF_1	CALL_2
0x40014f1	            0xeb59	                           jmp 0x400154c	       338	undo.c	FUNCTION_8	IF_1
0x40014f3	    0x8b1d00000000	            mov ebx, dword [0x040014f9] 	       343	undo.c	FUNCTION_8	IF_2
0x40014f9	            0x85db	                           test ebx, ebx	       343	undo.c	FUNCTION_8	IF_2
0x40014fb	            0x7423	                            je 0x4001520	       343	undo.c	FUNCTION_8	IF_2
0x40014fd	      0xba05000000	                              mov edx, 5	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x4001502	      0xbe00000000	                              mov esi, 0	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x4001507	      0xbf00000000	                              mov edi, 0	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x400150c	      0xe800000000	                          call 0x4001511	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x4001511	          0x4889c7	                            mov rdi, rax	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x4001514	      0xe800000000	                          call 0x4001519	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x4001519	      0xbb00000000	                              mov ebx, 0	       346	undo.c	FUNCTION_8	IF_2
0x400151e	            0xeb2c	                           jmp 0x400154c	       346	undo.c	FUNCTION_8	IF_2
0x4001520	    0x833d00000000	               cmp dword [0x04001527], 0	       352	undo.c	FUNCTION_8	IF_3
0x4001527	            0x741e	                            je 0x4001547	       352	undo.c	FUNCTION_8	IF_3
0x4001529	      0xba05000000	                              mov edx, 5	       354	undo.c	FUNCTION_8	IF_3	CALL_6
0x400152e	      0xbe00000000	                              mov esi, 0	       354	undo.c	FUNCTION_8	IF_3	CALL_6
0x4001533	      0xbf00000000	                              mov edi, 0	       354	undo.c	FUNCTION_8	IF_3	CALL_6
0x4001538	      0xe800000000	                          call 0x400153d	       354	undo.c	FUNCTION_8	IF_3	CALL_6
0x400153d	          0x4889c7	                            mov rdi, rax	       354	undo.c	FUNCTION_8	IF_3	CALL_6
0x4001540	      0xe800000000	                          call 0x4001545	       354	undo.c	FUNCTION_8	IF_3	CALL_6
0x4001545	            0xeb05	                           jmp 0x400154c	       355	undo.c	FUNCTION_8	IF_3
0x4001547	      0xbb01000000	                              mov ebx, 1	       358	undo.c	FUNCTION_8
0x400154c	            0x89d8	                            mov eax, ebx	       359	undo.c	FUNCTION_8
0x400154e	              0x5b	                                 pop rbx	       359	undo.c	FUNCTION_8
0x400154f	              0xc3	                                     ret	       359	undo.c	FUNCTION_8
u_eval_tree	ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,10:WHILE,1:IF,6:DO,0	71
0x4004b56	            0x4155	                                push r13	      3559	undo.c	FUNCTION_66
0x4004b58	            0x4154	                                push r12	      3559	undo.c	FUNCTION_66
0x4004b5a	              0x55	                                push rbp	      3559	undo.c	FUNCTION_66
0x4004b5b	              0x53	                                push rbx	      3559	undo.c	FUNCTION_66
0x4004b5c	        0x4883ec08	                              sub rsp, 8	      3559	undo.c	FUNCTION_66
0x4004b60	          0x4889fb	                            mov rbx, rdi	      3559	undo.c	FUNCTION_66
0x4004b63	          0x4989f5	                            mov r13, rsi	      3559	undo.c	FUNCTION_66
0x4004b66	          0x4885ff	                           test rdi, rdi	      3563	undo.c	FUNCTION_66	WHILE_1
0x4004b69	     0xf84f4000000	                            je 0x4004c63	      3563	undo.c	FUNCTION_66	WHILE_1
0x4004b6f	      0xe800000000	                          call 0x4004b74	      3565	undo.c	FUNCTION_66	WHILE_1	CALL_1
0x4004b74	          0x4889c5	                            mov rbp, rax	      3565	undo.c	FUNCTION_66	WHILE_1	CALL_1
0x4004b77	          0x4885c0	                           test rax, rax	      3566	undo.c	FUNCTION_66	WHILE_1	IF_1
0x4004b7a	     0xf84e3000000	                            je 0x4004c63	      3566	undo.c	FUNCTION_66	WHILE_1	IF_1
0x4004b80	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      3568	undo.c	FUNCTION_66	WHILE_1	CALL_2
0x4004b84	      0xb900000000	                              mov ecx, 0	      3568	undo.c	FUNCTION_66	WHILE_1	CALL_2
0x4004b89	      0xbe00000000	                              mov esi, 0	      3568	undo.c	FUNCTION_66	WHILE_1	CALL_2
0x4004b8e	          0x4889c7	                            mov rdi, rax	      3568	undo.c	FUNCTION_66	WHILE_1	CALL_2
0x4004b91	      0xe800000000	                          call 0x4004b96	      3568	undo.c	FUNCTION_66	WHILE_1	CALL_2
0x4004b96	    0x488b93280200	           mov rdx, qword [rbx + 0x228] 	      3569	undo.c	FUNCTION_66	WHILE_1	CALL_3
0x4004b9d	      0xb900000000	                              mov ecx, 0	      3569	undo.c	FUNCTION_66	WHILE_1	CALL_3
0x4004ba2	      0xbe00000000	                              mov esi, 0	      3569	undo.c	FUNCTION_66	WHILE_1	CALL_3
0x4004ba7	          0x4889ef	                            mov rdi, rbp	      3569	undo.c	FUNCTION_66	WHILE_1	CALL_3
0x4004baa	      0xe800000000	                          call 0x4004baf	      3569	undo.c	FUNCTION_66	WHILE_1	CALL_3
0x4004baf	    0x488b05000000	            mov rax, qword [0x04004bb6] 	      3570	undo.c	FUNCTION_66	WHILE_1	IF_2
0x4004bb6	    0x483998201200	          cmp qword [rax + 0x1220], rbx 	      3570	undo.c	FUNCTION_66	WHILE_1	IF_2
0x4004bbd	            0x7517	                           jne 0x4004bd6	      3570	undo.c	FUNCTION_66	WHILE_1	IF_2
0x4004bbf	      0xb900000000	                              mov ecx, 0	      3571	undo.c	FUNCTION_66	WHILE_1	CALL_4
0x4004bc4	      0xba01000000	                              mov edx, 1	      3571	undo.c	FUNCTION_66	WHILE_1	CALL_4
0x4004bc9	      0xbe00000000	                              mov esi, 0	      3571	undo.c	FUNCTION_66	WHILE_1	CALL_4
0x4004bce	          0x4889ef	                            mov rdi, rbp	      3571	undo.c	FUNCTION_66	WHILE_1	CALL_4
0x4004bd1	      0xe800000000	                          call 0x4004bd6	      3571	undo.c	FUNCTION_66	WHILE_1	CALL_4
0x4004bd6	    0x488b05000000	            mov rax, qword [0x04004bdd] 	      3572	undo.c	FUNCTION_66	WHILE_1	IF_3
0x4004bdd	    0x483998281200	          cmp qword [rax + 0x1228], rbx 	      3572	undo.c	FUNCTION_66	WHILE_1	IF_3
0x4004be4	            0x7517	                           jne 0x4004bfd	      3572	undo.c	FUNCTION_66	WHILE_1	IF_3
0x4004be6	      0xb900000000	                              mov ecx, 0	      3573	undo.c	FUNCTION_66	WHILE_1	CALL_5
0x4004beb	      0xba01000000	                              mov edx, 1	      3573	undo.c	FUNCTION_66	WHILE_1	CALL_5
0x4004bf0	      0xbe00000000	                              mov esi, 0	      3573	undo.c	FUNCTION_66	WHILE_1	CALL_5
0x4004bf5	          0x4889ef	                            mov rdi, rbp	      3573	undo.c	FUNCTION_66	WHILE_1	CALL_5
0x4004bf8	      0xe800000000	                          call 0x4004bfd	      3573	undo.c	FUNCTION_66	WHILE_1	CALL_5
0x4004bfd	    0x488b93300200	           mov rdx, qword [rbx + 0x230] 	      3574	undo.c	FUNCTION_66	WHILE_1	IF_4
0x4004c04	          0x4885d2	                           test rdx, rdx	      3574	undo.c	FUNCTION_66	WHILE_1	IF_4
0x4004c07	            0x7e12	                           jle 0x4004c1b	      3574	undo.c	FUNCTION_66	WHILE_1	IF_4
0x4004c09	      0xb900000000	                              mov ecx, 0	      3575	undo.c	FUNCTION_66	WHILE_1	CALL_6
0x4004c0e	      0xbe00000000	                              mov esi, 0	      3575	undo.c	FUNCTION_66	WHILE_1	CALL_6
0x4004c13	          0x4889ef	                            mov rdi, rbp	      3575	undo.c	FUNCTION_66	WHILE_1	CALL_6
0x4004c16	      0xe800000000	                          call 0x4004c1b	      3575	undo.c	FUNCTION_66	WHILE_1	CALL_6
0x4004c1b	      0x48837b1000	               cmp qword [rbx + 0x10], 0	      3577	undo.c	FUNCTION_66	WHILE_1	IF_5
0x4004c20	            0x7429	                            je 0x4004c4b	      3577	undo.c	FUNCTION_66	WHILE_1	IF_5
0x4004c22	      0xe800000000	                          call 0x4004c27	      3579	undo.c	FUNCTION_66	WHILE_1	IF_5	CALL_7
0x4004c27	          0x4989c4	                            mov r12, rax	      3579	undo.c	FUNCTION_66	WHILE_1	IF_5	CALL_7
0x4004c2a	          0x4885c0	                           test rax, rax	      3581	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6
0x4004c2d	            0x741c	                            je 0x4004c4b	      3581	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6
0x4004c2f	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3584	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_8
0x4004c33	          0x4889c6	                            mov rsi, rax	      3584	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_8
0x4004c36	      0xe800000000	                          call 0x4004c3b	      3584	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_8
0x4004c3b	          0x4c89e2	                            mov rdx, r12	      3585	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_9
0x4004c3e	      0xbe00000000	                              mov esi, 0	      3585	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_9
0x4004c43	          0x4889ef	                            mov rdi, rbp	      3585	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_9
0x4004c46	      0xe800000000	                          call 0x4004c4b	      3585	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_9
0x4004c4b	          0x4889ee	                            mov rsi, rbp	      3589	undo.c	FUNCTION_66	WHILE_1	CALL_10
0x4004c4e	          0x4c89ef	                            mov rdi, r13	      3589	undo.c	FUNCTION_66	WHILE_1	CALL_10
0x4004c51	      0xe800000000	                          call 0x4004c56	      3589	undo.c	FUNCTION_66	WHILE_1	CALL_10
0x4004c56	        0x488b5b08	                mov rbx, qword [rbx + 8]	      3590	undo.c	FUNCTION_66	WHILE_1
0x4004c5a	          0x4885db	                           test rbx, rbx	      3563	undo.c	FUNCTION_66	WHILE_1
0x4004c5d	     0xf850cffffff	                           jne 0x4004b6f	      3563	undo.c	FUNCTION_66	WHILE_1
0x4004c63	        0x4883c408	                              add rsp, 8	      3592	undo.c	FUNCTION_66
0x4004c67	              0x5b	                                 pop rbx	      3592	undo.c	FUNCTION_66
0x4004c68	              0x5d	                                 pop rbp	      3592	undo.c	FUNCTION_66
0x4004c69	            0x415c	                                 pop r12	      3592	undo.c	FUNCTION_66
0x4004c6b	            0x415d	                                 pop r13	      3592	undo.c	FUNCTION_66
0x4004c6d	              0xc3	                                     ret	      3592	undo.c	FUNCTION_66
u_undoredo	ELSE,12:functions,0:SWITCH,0:FOR,5:CALL,31:WHILE,1:IF,33:DO,0	489
0x4000c99	            0x4157	                                push r15	      2615	undo.c	FUNCTION_41
0x4000c9b	            0x4156	                                push r14	      2615	undo.c	FUNCTION_41
0x4000c9d	            0x4155	                                push r13	      2615	undo.c	FUNCTION_41
0x4000c9f	            0x4154	                                push r12	      2615	undo.c	FUNCTION_41
0x4000ca1	              0x55	                                push rbp	      2615	undo.c	FUNCTION_41
0x4000ca2	              0x53	                                push rbx	      2615	undo.c	FUNCTION_41
0x4000ca3	    0x4881ec280200	                          sub rsp, 0x228	      2615	undo.c	FUNCTION_41
0x4000caa	        0x897c2444	             mov dword [rsp + 0x44], edi	      2615	undo.c	FUNCTION_41
0x4000cae	    0x64488b042528	                mov rax, qword fs:[0x28]	      2615	undo.c	FUNCTION_41
0x4000cb7	    0x488984241802	            mov qword [rsp + 0x218], rax	      2615	undo.c	FUNCTION_41
0x4000cbf	            0x31c0	                            xor eax, eax	      2615	undo.c	FUNCTION_41
0x4000cc1	    0x488b05000000	            mov rax, qword [0x04000cc8] 	      2630	undo.c	FUNCTION_41
0x4000cc8	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2630	undo.c	FUNCTION_41
0x4000ccf	          0x4889c3	                            mov rbx, rax	      2630	undo.c	FUNCTION_41
0x4000cd2	      0x4889442430	             mov qword [rsp + 0x30], rax	      2630	undo.c	FUNCTION_41
0x4000cd7	      0xe800000000	                          call 0x4000cdc	      2634	undo.c	FUNCTION_41	CALL_1
0x4000cdc	          0x8b4358	            mov eax, dword [rbx + 0x58] 	      2639	undo.c	FUNCTION_41
0x4000cdf	        0x89442438	             mov dword [rsp + 0x38], eax	      2639	undo.c	FUNCTION_41
0x4000ce3	    0x488b05000000	            mov rax, qword [0x04000cea] 	      2640	undo.c	FUNCTION_41
0x4000cea	    0x8b88c8000000	            mov ecx, dword [rax + 0xc8] 	      2640	undo.c	FUNCTION_41
0x4000cf0	        0x894c2440	             mov dword [rsp + 0x40], ecx	      2640	undo.c	FUNCTION_41
0x4000cf4	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2641	undo.c	FUNCTION_41
0x4000cf7	          0x83e001	                              and eax, 1	      2641	undo.c	FUNCTION_41
0x4000cfa	            0x89c1	                            mov ecx, eax	      2641	undo.c	FUNCTION_41
0x4000cfc	      0xb802000000	                              mov eax, 2	      2641	undo.c	FUNCTION_41
0x4000d01	           0xf44c1	                          cmove eax, ecx	      2641	undo.c	FUNCTION_41
0x4000d04	        0x8944243c	             mov dword [rsp + 0x3c], eax	      2641	undo.c	FUNCTION_41
0x4000d08	      0xe800000000	                          call 0x4000d0d	      2642	undo.c	FUNCTION_41	CALL_3
0x4000d0d	    0x488b05000000	            mov rax, qword [0x04000d14] 	      2647	undo.c	FUNCTION_41	CALL_4
0x4000d14	      0x488d542470	                   lea rdx, [rsp + 0x70]	        59	string3.h	FUNCTION_85	CALL_3
0x4000d19	    0x488db0580100	                  lea rsi, [rax + 0x158]	        59	string3.h	FUNCTION_85	CALL_3
0x4000d20	      0xb934000000	                           mov ecx, 0x34	        59	string3.h	FUNCTION_85	CALL_3
0x4000d25	          0x4889d7	                            mov rdi, rdx	        59	string3.h	FUNCTION_85	CALL_3
0x4000d28	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	        59	string3.h	FUNCTION_85	CALL_3
0x4000d2b	    0x488b88f80200	           mov rcx, qword [rax + 0x2f8] 	      2648	undo.c	FUNCTION_41
0x4000d32	      0x48894c2468	             mov qword [rsp + 0x68], rcx	      2648	undo.c	FUNCTION_41
0x4000d37	    0x8b8800030000	           mov ecx, dword [rax + 0x300] 	      2648	undo.c	FUNCTION_41
0x4000d3d	        0x894c2464	             mov dword [rsp + 0x64], ecx	      2648	undo.c	FUNCTION_41
0x4000d41	    0x8b9004030000	           mov edx, dword [rax + 0x304] 	      2648	undo.c	FUNCTION_41
0x4000d47	        0x89542460	             mov dword [rsp + 0x60], edx	      2648	undo.c	FUNCTION_41
0x4000d4b	    0x488b88080300	           mov rcx, qword [rax + 0x308] 	      2648	undo.c	FUNCTION_41
0x4000d52	      0x48894c2448	             mov qword [rsp + 0x48], rcx	      2648	undo.c	FUNCTION_41
0x4000d57	    0x8bb010030000	           mov esi, dword [rax + 0x310] 	      2648	undo.c	FUNCTION_41
0x4000d5d	        0x89742450	             mov dword [rsp + 0x50], esi	      2648	undo.c	FUNCTION_41
0x4000d61	    0x8b9014030000	           mov edx, dword [rax + 0x314] 	      2648	undo.c	FUNCTION_41
0x4000d67	        0x89542454	             mov dword [rsp + 0x54], edx	      2648	undo.c	FUNCTION_41
0x4000d6b	    0x8b8818030000	           mov ecx, dword [rax + 0x318] 	      2648	undo.c	FUNCTION_41
0x4000d71	        0x894c2458	             mov dword [rsp + 0x58], ecx	      2648	undo.c	FUNCTION_41
0x4000d75	    0x8bb01c030000	           mov esi, dword [rax + 0x31c] 	      2648	undo.c	FUNCTION_41
0x4000d7b	        0x8974245c	             mov dword [rsp + 0x5c], esi	      2648	undo.c	FUNCTION_41
0x4000d7f	          0x488b10	                    mov rdx, qword [rax]	      2649	undo.c	FUNCTION_41
0x4000d82	    0x488990e01100	          mov qword [rax + 0x11e0], rdx 	      2649	undo.c	FUNCTION_41
0x4000d89	    0xc780e8110000	            mov dword [rax + 0x11e8], 0 	      2650	undo.c	FUNCTION_41
0x4000d93	    0x48c780001200	            mov qword [rax + 0x1200], 0 	      2651	undo.c	FUNCTION_41
0x4000d9e	    0xc78008120000	            mov dword [rax + 0x1208], 0 	      2652	undo.c	FUNCTION_41
0x4000da8	        0x4c8b7b30	            mov r15, qword [rbx + 0x30] 	      2654	undo.c	FUNCTION_41	FOR_1
0x4000dac	          0x4d85ff	                           test r15, r15	      2654	undo.c	FUNCTION_41	FOR_1
0x4000daf	     0xf841e040000	                            je 0x40011d3	      2654	undo.c	FUNCTION_41	FOR_1
0x4000db5	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2654	undo.c	FUNCTION_41	FOR_1
0x4000dbe	    0x48c7442420ff	     mov qword [rsp + 0x20], 0x7fffffff 	      2654	undo.c	FUNCTION_41	FOR_1
0x4000dc7	            0xeb03	                           jmp 0x4000dcc	      2654	undo.c	FUNCTION_41	FOR_1
0x4000dc9	          0x4989c7	                            mov r15, rax	      2654	undo.c	FUNCTION_41	FOR_1
0x4000dcc	        0x498b4708	                mov rax, qword [r15 + 8]	      2656	undo.c	FUNCTION_41	FOR_1
0x4000dd0	          0x4889c1	                            mov rcx, rax	      2656	undo.c	FUNCTION_41	FOR_1
0x4000dd3	        0x48890424	                    mov qword [rsp], rax	      2656	undo.c	FUNCTION_41	FOR_1
0x4000dd7	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      2657	undo.c	FUNCTION_41	FOR_1
0x4000ddb	      0x4889442408	                mov qword [rsp + 8], rax	      2657	undo.c	FUNCTION_41	FOR_1
0x4000de0	          0x4885c0	                           test rax, rax	      2658	undo.c	FUNCTION_41	FOR_1	IF_1
0x4000de3	            0x751f	                           jne 0x4000e04	      2658	undo.c	FUNCTION_41	FOR_1	IF_1
0x4000de5	    0x488b05000000	            mov rax, qword [0x04000dec] 	      2659	undo.c	FUNCTION_41	FOR_1	IF_1
0x4000dec	          0x488b00	                    mov rax, qword [rax]	      2659	undo.c	FUNCTION_41	FOR_1	IF_1
0x4000def	        0x488d5001	                      lea rdx, [rax + 1]	      2659	undo.c	FUNCTION_41	FOR_1	IF_1
0x4000df3	      0x4889542408	                mov qword [rsp + 8], rdx	      2659	undo.c	FUNCTION_41	FOR_1	IF_1
0x4000df8	          0x4839c1	                            cmp rcx, rax	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000dfb	            0x7f2d	                            jg 0x4000e2a	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000dfd	          0x4839d1	                            cmp rcx, rdx	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000e00	            0x7c53	                            jl 0x4000e55	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000e02	            0xeb26	                           jmp 0x4000e2a	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000e04	    0x488b05000000	            mov rax, qword [0x04000e0b] 	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000e0b	          0x488b00	                    mov rax, qword [rax]	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000e0e	        0x488b0c24	                    mov rcx, qword [rsp]	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000e12	      0x488b542408	                mov rdx, qword [rsp + 8]	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000e17	          0x4839d1	                            cmp rcx, rdx	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000e1a	            0x7d0e	                           jge 0x4000e2a	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000e1c	          0x4839c1	                            cmp rcx, rax	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000e1f	            0x7f09	                            jg 0x4000e2a	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000e21	        0x4883c001	                              add rax, 1	      2661	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000e25	          0x4839c2	                            cmp rdx, rax	      2661	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000e28	            0x7e2b	                           jle 0x4000e55	      2661	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000e2a	      0xe800000000	                          call 0x4000e2f	      2663	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_5
0x4000e2f	      0xba05000000	                              mov edx, 5	      2664	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_7
0x4000e34	      0xbe00000000	                              mov esi, 0	      2664	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_7
0x4000e39	      0xbf00000000	                              mov edi, 0	      2664	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_7
0x4000e3e	      0xe800000000	                          call 0x4000e43	      2664	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_7
0x4000e43	          0x4889c7	                            mov rdi, rax	      2664	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_7
0x4000e46	      0xe800000000	                          call 0x4000e4b	      2664	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_7
0x4000e4b	      0xe800000000	                          call 0x4000e50	      2665	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_8
0x4000e50	      0xe944060000	                           jmp 0x4001499	      2665	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_8
0x4000e55	      0x4c8b642408	                mov r12, qword [rsp + 8]	      2669	undo.c	FUNCTION_41	FOR_1
0x4000e5a	        0x488b0c24	                    mov rcx, qword [rsp]	      2669	undo.c	FUNCTION_41	FOR_1
0x4000e5e	          0x4929cc	                            sub r12, rcx	      2669	undo.c	FUNCTION_41	FOR_1
0x4000e61	      0x4d8d7424ff	                      lea r14, [r12 - 1]	      2669	undo.c	FUNCTION_41	FOR_1
0x4000e66	        0x4d8b6f28	            mov r13, qword [r15 + 0x28] 	      2670	undo.c	FUNCTION_41	FOR_1
0x4000e6a	      0x483b4c2420	            cmp rcx, qword [rsp + 0x20] 	      2672	undo.c	FUNCTION_41	FOR_1	IF_3
0x4000e6f	     0xf8dda000000	                           jge 0x4000f4f	      2672	undo.c	FUNCTION_41	FOR_1	IF_3
0x4000e75	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      2677	undo.c	FUNCTION_41	FOR_1	IF_3
0x4000e7a	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2677	undo.c	FUNCTION_41	FOR_1	IF_3
0x4000e7e	          0x4839c1	                            cmp rcx, rax	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000e81	            0x7e1e	                           jle 0x4000ea1	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000e83	          0x4d85ed	                           test r13, r13	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000e86	            0x7e12	                           jle 0x4000e9a	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000e88	      0xbb00000000	                              mov ebx, 0	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000e8d	        0x488b0424	                    mov rax, qword [rsp]	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4000e91	        0x488d6801	                      lea rbp, [rax + 1]	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4000e95	          0x4d85f6	                           test r14, r14	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000e98	            0x7f3c	                            jg 0x4000ed6	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000e9a	      0xbb00000000	                              mov ebx, 0	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000e9f	            0xeb61	                           jmp 0x4000f02	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000ea1	        0x488b0c24	                    mov rcx, qword [rsp]	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000ea5	      0x4a8d542901	                lea rdx, [rcx + r13 + 1]	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000eaa	          0x4839d0	                            cmp rax, rdx	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000ead	            0x7fd4	                            jg 0x4000e83	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000eaf	    0x488b05000000	            mov rax, qword [0x04000eb6] 	      2680	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000eb6	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      2680	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000ebb	        0x488b5140	            mov rdx, qword [rcx + 0x40] 	      2680	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000ebf	        0x488b7148	            mov rsi, qword [rcx + 0x48] 	      2680	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000ec3	        0x48895038	             mov qword [rax + 0x38], rdx	      2680	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000ec7	        0x48897040	             mov qword [rax + 0x40], rsi	      2680	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000ecb	        0x488d42ff	                      lea rax, [rdx - 1]	      2681	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000ecf	      0x4889442420	             mov qword [rsp + 0x20], rax	      2681	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000ed4	            0xeb79	                           jmp 0x4000f4f	      2681	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000ed6	      0x488d7c1d00	                    lea rdi, [rbp + rbx]	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4000edb	      0xe800000000	                          call 0x4000ee0	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4000ee0	        0x498b5720	            mov rdx, qword [r15 + 0x20] 	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4000ee4	        0x488b3cda	            mov rdi, qword [rdx + rbx*8]	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4000ee8	          0x4889c6	                            mov rsi, rax	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4000eeb	      0xe800000000	                          call 0x4000ef0	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4000ef0	            0x85c0	                           test eax, eax	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4000ef2	            0x750e	                           jne 0x4000f02	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4000ef4	        0x4883c301	                              add rbx, 1	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000ef8	          0x4939dd	                            cmp r13, rbx	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000efb	            0x7e05	                           jle 0x4000f02	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000efd	          0x4939de	                            cmp r14, rbx	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000f00	            0x7fd4	                            jg 0x4000ed6	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000f02	          0x4939dd	                            cmp r13, rbx	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000f05	            0x752b	                           jne 0x4000f32	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000f07	    0x48817c2420ff	     cmp qword [rsp + 0x20], 0x7fffffff 	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000f10	            0x7520	                           jne 0x4000f32	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000f12	        0x49833f00	                      cmp qword [r15], 0	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000f16	            0x751a	                           jne 0x4000f32	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000f18	        0x488b0c24	                    mov rcx, qword [rsp]	      2694	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000f1c	        0x488d5101	                      lea rdx, [rcx + 1]	      2694	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000f20	    0x488b05000000	            mov rax, qword [0x04000f27] 	      2694	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000f27	        0x48895038	             mov qword [rax + 0x38], rdx	      2694	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000f2b	      0x48894c2420	             mov qword [rsp + 0x20], rcx	      2693	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000f30	            0xeb1d	                           jmp 0x4000f4f	      2694	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000f32	          0x4939dd	                            cmp r13, rbx	      2696	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4000f35	            0x7e18	                           jle 0x4000f4f	      2696	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4000f37	        0x48031c24	                    add rbx, qword [rsp]	      2698	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4000f3b	      0x48895c2420	             mov qword [rsp + 0x20], rbx	      2698	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4000f40	        0x488d5301	                      lea rdx, [rbx + 1]	      2699	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4000f44	    0x488b05000000	            mov rax, qword [0x04000f4b] 	      2699	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4000f4b	        0x48895038	             mov qword [rax + 0x38], rdx	      2699	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4000f4f	          0x4d85f6	                           test r14, r14	      2707	undo.c	FUNCTION_41	FOR_1	IF_8
0x4000f52	     0xf8ed0000000	                           jle 0x4001028	      2707	undo.c	FUNCTION_41	FOR_1	IF_8
0x4000f58	    0x4a8d1cf50000	                        lea rbx, [r14*8]	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9
0x4000f60	      0xbe00000000	                              mov esi, 0	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9
0x4000f65	          0x4889df	                            mov rdi, rbx	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9
0x4000f68	      0xe800000000	                          call 0x4000f6d	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9
0x4000f6d	      0x4889442410	             mov qword [rsp + 0x10], rax	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9
0x4000f72	          0x4885c0	                           test rax, rax	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9
0x4000f75	            0x7532	                           jne 0x4000fa9	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9
0x4000f77	          0x4889df	                            mov rdi, rbx	      2712	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	CALL_11
0x4000f7a	      0xe800000000	                          call 0x4000f7f	      2712	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	CALL_11
0x4000f7f	          0x4d85ff	                           test r15, r15	      2717	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4000f82	     0xf8446020000	                            je 0x40011ce	      2717	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4000f88	          0x4c89ff	                            mov rdi, r15	      2717	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4000f8b	          0x488b1f	                    mov rbx, qword [rdi]	      2719	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4000f8e	        0x488b7728	            mov rsi, qword [rdi + 0x28] 	      2720	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1	CALL_12
0x4000f92	      0xe8ecf0ffff	                    call sym.u_freeentry	      2720	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1	CALL_12
0x4000f97	          0x4889df	                            mov rdi, rbx	      2721	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4000f9a	          0x4885db	                           test rbx, rbx	      2717	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4000f9d	            0x75ec	                           jne 0x4000f8b	      2717	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4000f9f	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      2717	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4000fa4	      0xe92a020000	                           jmp 0x40011d3	      2717	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4000fa9	      0x488b442408	                mov rax, qword [rsp + 8]	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000fae	        0x488d58ff	                      lea rbx, [rax - 1]	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000fb2	          0x4c89e6	                            mov rsi, r12	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000fb5	        0x4883ee02	                              sub rsi, 2	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000fb9	            0x787e	                            js 0x4001039	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000fbb	          0x4889c1	                            mov rcx, rax	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000fbe	          0x4c29e1	                            sub rcx, r12	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000fc1	          0x4929c4	                            sub r12, rax	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000fc4	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000fc9	        0x4a8d2ce0	                  lea rbp, [rax + r12*8]	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000fcd	    0x41bc00000000	                             mov r12d, 0	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000fd3	      0x4c897c2428	             mov qword [rsp + 0x28], r15	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000fd8	          0x4989cf	                            mov r15, rcx	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000fdb	          0x4889df	                            mov rdi, rbx	      2729	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_10	CALL_13
0x4000fde	      0xe884f3ffff	                    call sym.u_save_line	      2729	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_10	CALL_13
0x4000fe3	      0x488944ddf8	        mov qword [rbp + rbx*8 - 8], rax	      2729	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_10	CALL_13
0x4000fe8	          0x4885c0	                           test rax, rax	      2729	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_10	CALL_13
0x4000feb	            0x750a	                           jne 0x4000ff7	      2729	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_10	CALL_13
0x4000fed	      0xbf00000000	                              mov edi, 0	      2730	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	CALL_14
0x4000ff2	      0xe800000000	                          call 0x4000ff7	      2730	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	CALL_14
0x4000ff7	    0x488b05000000	            mov rax, qword [0x04000ffe] 	      2733	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_11
0x4000ffe	        0x48833801	                      cmp qword [rax], 1	      2734	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_11
0x4001002	      0xb801000000	                              mov eax, 1	      2734	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_11
0x4001007	        0x440f44e0	                         cmove r12d, eax	      2734	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_11
0x400100b	      0xbe00000000	                              mov esi, 0	      2735	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	CALL_15
0x4001010	          0x4889df	                            mov rdi, rbx	      2735	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	CALL_15
0x4001013	      0xe800000000	                          call 0x4001018	      2735	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	CALL_15
0x4001018	        0x4883eb01	                              sub rbx, 1	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x400101c	          0x4c39fb	                            cmp rbx, r15	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x400101f	            0x75ba	                           jne 0x4000fdb	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4001021	      0x4c8b7c2428	            mov r15, qword [rsp + 0x28] 	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4001026	            0xeb17	                           jmp 0x400103f	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4001028	    0x41bc00000000	                             mov r12d, 0	      2704	undo.c	FUNCTION_41	FOR_1
0x400102e	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2739	undo.c	FUNCTION_41	FOR_1	ELSE_3
0x4001037	            0xeb06	                           jmp 0x400103f	      2739	undo.c	FUNCTION_41	FOR_1	ELSE_3
0x4001039	    0x41bc00000000	                             mov r12d, 0	      2704	undo.c	FUNCTION_41	FOR_1
0x400103f	          0x4d85ed	                           test r13, r13	      2742	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12
0x4001042	     0xf8483000000	                            je 0x40010cb	      2742	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12
0x4001048	          0x4d85ed	                           test r13, r13	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x400104b	            0x7e75	                           jle 0x40010c2	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x400104d	        0x488b0424	                    mov rax, qword [rsp]	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x4001051	      0x498d740500	                    lea rsi, [r13 + rax]	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x4001056	          0x4889c3	                            mov rbx, rax	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x4001059	      0xbd00000000	                              mov ebp, 0	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x400105e	      0x4c89742428	             mov qword [rsp + 0x28], r14	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x4001063	          0x4989f6	                            mov r14, rsi	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x4001066	          0x4585e4	                         test r12d, r12d	      2750	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	IF_13
0x4001069	            0x741e	                            je 0x4001089	      2750	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	IF_13
0x400106b	          0x4885db	                           test rbx, rbx	      2750	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	IF_13
0x400106e	            0x7519	                           jne 0x4001089	      2750	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	IF_13
0x4001070	        0x498b4720	            mov rax, qword [r15 + 0x20] 	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_16
0x4001074	        0x488b3428	              mov rsi, qword [rax + rbp]	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_16
0x4001078	      0xba01000000	                              mov edx, 1	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_16
0x400107d	      0xbf01000000	                              mov edi, 1	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_16
0x4001082	      0xe800000000	                          call 0x4001087	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_16
0x4001087	            0xeb1a	                           jmp 0x40010a3	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_16
0x4001089	        0x498b4720	            mov rax, qword [r15 + 0x20] 	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x400108d	        0x488b3428	              mov rsi, qword [rax + rbp]	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x4001091	      0xb900000000	                              mov ecx, 0	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x4001096	      0xba00000000	                              mov edx, 0	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x400109b	          0x4889df	                            mov rdi, rbx	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x400109e	      0xe800000000	                          call 0x40010a3	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x40010a3	        0x498b4720	            mov rax, qword [r15 + 0x20] 	      2754	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_18
0x40010a7	        0x488b3c28	              mov rdi, qword [rax + rbp]	      2754	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_18
0x40010ab	      0xe800000000	                          call 0x40010b0	      2754	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_18
0x40010b0	        0x4883c301	                              add rbx, 1	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x40010b4	        0x4883c508	                              add rbp, 8	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x40010b8	          0x4c39f3	                            cmp rbx, r14	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x40010bb	            0x75a9	                           jne 0x4001066	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x40010bd	      0x4c8b742428	            mov r14, qword [rsp + 0x28] 	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x40010c2	        0x498b7f20	            mov rdi, qword [r15 + 0x20] 	      2756	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	CALL_19
0x40010c6	      0xe800000000	                          call 0x40010cb	      2756	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	CALL_19
0x40010cb	          0x4d39ee	                            cmp r14, r13	      2760	undo.c	FUNCTION_41	FOR_1	IF_14
0x40010ce	            0x7455	                            je 0x4001125	      2760	undo.c	FUNCTION_41	FOR_1	IF_14
0x40010d0	          0x4c89ed	                            mov rbp, r13	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x40010d3	          0x4c29f5	                            sub rbp, r14	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x40010d6	        0x488b0424	                    mov rax, qword [rsp]	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x40010da	        0x4a8d1c30	                    lea rbx, [rax + r14]	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x40010de	        0x488d7801	                      lea rdi, [rax + 1]	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x40010e2	          0x4889e9	                            mov rcx, rbp	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x40010e5	      0xbaffffff7f	                     mov edx, 0x7fffffff	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x40010ea	          0x4889de	                            mov rsi, rbx	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x40010ed	      0xe800000000	                          call 0x40010f2	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x40010f2	    0x488b05000000	            mov rax, qword [0x040010f9] 	      2764	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x40010f9	    0x488b90e01100	          mov rdx, qword [rax + 0x11e0] 	      2764	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x4001100	          0x4839d3	                            cmp rbx, rdx	      2764	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x4001103	            0x7d0a	                           jge 0x400110f	      2764	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x4001105	          0x4801ea	                            add rdx, rbp	      2765	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x4001108	    0x488990e01100	          mov qword [rax + 0x11e0], rdx 	      2765	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x400110f	    0x488b90001200	          mov rdx, qword [rax + 0x1200] 	      2766	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x4001116	          0x4839d3	                            cmp rbx, rdx	      2766	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x4001119	            0x7d0a	                           jge 0x4001125	      2766	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x400111b	          0x4801d5	                            add rbp, rdx	      2767	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x400111e	    0x4889a8001200	          mov qword [rax + 0x1200], rbp 	      2767	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x4001125	        0x488b0424	                    mov rax, qword [rsp]	      2770	undo.c	FUNCTION_41	FOR_1	CALL_21
0x4001129	        0x488d5801	                      lea rbx, [rax + 1]	      2770	undo.c	FUNCTION_41	FOR_1	CALL_21
0x400112d	          0x4c89e9	                            mov rcx, r13	      2770	undo.c	FUNCTION_41	FOR_1	CALL_21
0x4001130	          0x4c29f1	                            sub rcx, r14	      2770	undo.c	FUNCTION_41	FOR_1	CALL_21
0x4001133	      0x488b542408	                mov rdx, qword [rsp + 8]	      2770	undo.c	FUNCTION_41	FOR_1	CALL_21
0x4001138	      0xbe00000000	                              mov esi, 0	      2770	undo.c	FUNCTION_41	FOR_1	CALL_21
0x400113d	          0x4889df	                            mov rdi, rbx	      2770	undo.c	FUNCTION_41	FOR_1	CALL_21
0x4001140	      0xe800000000	                          call 0x4001145	      2770	undo.c	FUNCTION_41	FOR_1	CALL_21
0x4001145	    0x488b05000000	            mov rax, qword [0x0400114c] 	      2773	undo.c	FUNCTION_41	FOR_1	IF_17
0x400114c	    0x483b98e01100	          cmp rbx, qword [rax + 0x11e0] 	      2773	undo.c	FUNCTION_41	FOR_1	IF_17
0x4001153	            0x7d07	                           jge 0x400115c	      2773	undo.c	FUNCTION_41	FOR_1	IF_17
0x4001155	    0x488998e01100	          mov qword [rax + 0x11e0], rbx 	      2774	undo.c	FUNCTION_41	FOR_1	IF_17
0x400115c	          0x4d85ed	                           test r13, r13	      2775	undo.c	FUNCTION_41	FOR_1	IF_18
0x400115f	            0x7512	                           jne 0x4001173	      2775	undo.c	FUNCTION_41	FOR_1	IF_18
0x4001161	    0x483b98001200	          cmp rbx, qword [rax + 0x1200] 	      2775	undo.c	FUNCTION_41	FOR_1	IF_18
0x4001168	            0x7e09	                           jle 0x4001173	      2775	undo.c	FUNCTION_41	FOR_1	IF_18
0x400116a	    0x488998001200	          mov qword [rax + 0x1200], rbx 	      2776	undo.c	FUNCTION_41	FOR_1	IF_18
0x4001171	            0xeb18	                           jmp 0x400118b	      2776	undo.c	FUNCTION_41	FOR_1	IF_18
0x4001173	        0x488b0c24	                    mov rcx, qword [rsp]	      2777	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x4001177	        0x4a8d1429	                    lea rdx, [rcx + r13]	      2777	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x400117b	    0x483b90001200	          cmp rdx, qword [rax + 0x1200] 	      2777	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x4001182	            0x7e07	                           jle 0x400118b	      2777	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x4001184	    0x488990001200	          mov qword [rax + 0x1200], rdx 	      2778	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x400118b	    0x4c012d000000	            add qword [0x04001192], r13 	      2780	undo.c	FUNCTION_41	FOR_1
0x4001192	    0x4c0135000000	            add qword [0x04001199], r14 	      2781	undo.c	FUNCTION_41	FOR_1
0x4001199	        0x4d897728	             mov qword [r15 + 0x28], r14	      2782	undo.c	FUNCTION_41	FOR_1
0x400119d	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2783	undo.c	FUNCTION_41	FOR_1
0x40011a2	        0x49894720	             mov qword [r15 + 0x20], rax	      2783	undo.c	FUNCTION_41	FOR_1
0x40011a6	        0x488b0424	                    mov rax, qword [rsp]	      2784	undo.c	FUNCTION_41	FOR_1
0x40011aa	      0x4a8d442801	                lea rax, [rax + r13 + 1]	      2784	undo.c	FUNCTION_41	FOR_1
0x40011af	        0x49894710	             mov qword [r15 + 0x10], rax	      2784	undo.c	FUNCTION_41	FOR_1
0x40011b3	          0x498b07	                    mov rax, qword [r15]	      2789	undo.c	FUNCTION_41	FOR_1
0x40011b6	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2790	undo.c	FUNCTION_41	FOR_1
0x40011bb	          0x49890f	                    mov qword [r15], rcx	      2790	undo.c	FUNCTION_41	FOR_1
0x40011be	      0x4c897c2418	             mov qword [rsp + 0x18], r15	      2790	undo.c	FUNCTION_41	FOR_1
0x40011c3	          0x4885c0	                           test rax, rax	      2654	undo.c	FUNCTION_41	FOR_1
0x40011c6	     0xf85fdfbffff	                           jne 0x4000dc9	      2654	undo.c	FUNCTION_41	FOR_1
0x40011cc	            0xeb05	                           jmp 0x40011d3	      2654	undo.c	FUNCTION_41	FOR_1
0x40011ce	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      2717	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x40011d3	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      2794	undo.c	FUNCTION_41
0x40011d8	        0x4c897a30	             mov qword [rdx + 0x30], r15	      2794	undo.c	FUNCTION_41
0x40011dc	      0x837c244000	               cmp dword [rsp + 0x40], 0	      2795	undo.c	FUNCTION_41
0x40011e1	           0xf95c0	                                setne al	      2795	undo.c	FUNCTION_41
0x40011e4	           0xfb6c0	                           movzx eax, al	      2795	undo.c	FUNCTION_41
0x40011e7	         0x344243c	             add eax, dword [rsp + 0x3c]	      2795	undo.c	FUNCTION_41
0x40011eb	          0x894258	             mov dword [rdx + 0x58], eax	      2795	undo.c	FUNCTION_41
0x40011ee	      0xf644243802	               test byte [rsp + 0x38], 2	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x40011f3	            0x7427	                            je 0x400121c	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x40011f5	    0x488b05000000	            mov rax, qword [0x040011fc] 	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x40011fc	        0x48833801	                      cmp qword [rax], 1	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x4001200	            0x751a	                           jne 0x400121c	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x4001202	      0xbf01000000	                              mov edi, 1	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x4001207	      0xe800000000	                          call 0x400120c	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x400120c	          0x803800	                       cmp byte [rax], 0	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x400120f	            0x750b	                           jne 0x400121c	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x4001211	    0x488b05000000	            mov rax, qword [0x04001218] 	      2797	undo.c	FUNCTION_41	IF_20
0x4001218	        0x83481001	                or dword [rax + 0x10], 1	      2797	undo.c	FUNCTION_41	IF_20
0x400121c	      0xf644243801	               test byte [rsp + 0x38], 1	      2798	undo.c	FUNCTION_41	IF_21
0x4001221	            0x741a	                            je 0x400123d	      2798	undo.c	FUNCTION_41	IF_21
0x4001223	      0xe800000000	                          call 0x4001228	      2799	undo.c	FUNCTION_41	CALL_23
0x4001228	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      2799	undo.c	FUNCTION_41	CALL_23
0x400122d	        0x4883c060	                           add rax, 0x60	      2799	undo.c	FUNCTION_41	CALL_23
0x4001231	      0x488d4c2470	                   lea rcx, [rsp + 0x70]	      2799	undo.c	FUNCTION_41	CALL_23
0x4001236	      0xba00000000	                              mov edx, 0	      2717	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x400123b	            0xeb23	                           jmp 0x4001260	      2717	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x400123d	    0x488b3d000000	            mov rdi, qword [0x04001244] 	      2803	undo.c	FUNCTION_41	ELSE_6	IF_22	CALL_24
0x4001244	      0xe800000000	                          call 0x4001249	      2803	undo.c	FUNCTION_41	ELSE_6	IF_22	CALL_24
0x4001249	            0x85c0	                           test eax, eax	      2803	undo.c	FUNCTION_41	ELSE_6	IF_22	CALL_24
0x400124b	            0x75db	                           jne 0x4001228	      2803	undo.c	FUNCTION_41	ELSE_6	IF_22	CALL_24
0x400124d	      0xbe00000000	                              mov esi, 0	      2805	undo.c	FUNCTION_41	ELSE_6	IF_22
0x4001252	    0x488b3d000000	            mov rdi, qword [0x04001259] 	      2805	undo.c	FUNCTION_41	ELSE_6	IF_22
0x4001259	      0xe800000000	                          call 0x400125e	      2805	undo.c	FUNCTION_41	ELSE_6	IF_22
0x400125e	            0xebc8	                           jmp 0x4001228	      2805	undo.c	FUNCTION_41	ELSE_6	IF_22
0x4001260	          0x4889c7	                            mov rdi, rax	      2805	undo.c	FUNCTION_41	ELSE_6	IF_22
0x4001263	        0x48833800	                      cmp qword [rax], 0	      2812	undo.c	FUNCTION_41	FOR_5	IF_23
0x4001267	            0x741e	                            je 0x4001287	      2812	undo.c	FUNCTION_41	FOR_5	IF_23
0x4001269	        0x488d7215	                   lea rsi, [rdx + 0x15]	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x400126d	        0x48c1e604	                              shl rsi, 4	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x4001271	    0x480335000000	             add rsi, qword [0x04001278]	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x4001278	          0x4c8b08	                     mov r9, qword [rax]	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x400127b	        0x4c8b5008	                mov r10, qword [rax + 8]	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x400127f	        0x4c894e08	                 mov qword [rsi + 8], r9	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x4001283	        0x4c895610	             mov qword [rsi + 0x10], r10	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x4001287	        0x48833900	                      cmp qword [rcx], 0	      2814	undo.c	FUNCTION_41	FOR_5	IF_24
0x400128b	            0x7410	                            je 0x400129d	      2814	undo.c	FUNCTION_41	FOR_5	IF_24
0x400128d	          0x4c8b09	                     mov r9, qword [rcx]	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x4001290	        0x4c8b5108	                mov r10, qword [rcx + 8]	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x4001294	          0x4c890f	                     mov qword [rdi], r9	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x4001297	        0x4c895708	                mov qword [rdi + 8], r10	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x400129b	            0xeb07	                           jmp 0x40012a4	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x400129d	    0x48c707000000	                      mov qword [rdi], 0	      2817	undo.c	FUNCTION_41	FOR_5	ELSE_7
0x40012a4	        0x4883c201	                              add rdx, 1	      2810	undo.c	FUNCTION_41	FOR_5
0x40012a8	        0x4883c010	                           add rax, 0x10	      2810	undo.c	FUNCTION_41	FOR_5
0x40012ac	        0x4883c110	                           add rcx, 0x10	      2810	undo.c	FUNCTION_41	FOR_5
0x40012b0	        0x4883fa1a	                           cmp rdx, 0x1a	      2810	undo.c	FUNCTION_41	FOR_5
0x40012b4	            0x75aa	                           jne 0x4001260	      2810	undo.c	FUNCTION_41	FOR_5
0x40012b6	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      2819	undo.c	FUNCTION_41	ELSE_7	IF_25
0x40012bb	    0x4883be000200	              cmp qword [rsi + 0x200], 0	      2819	undo.c	FUNCTION_41	ELSE_7	IF_25
0x40012c3	     0xf84a1000000	                            je 0x400136a	      2819	undo.c	FUNCTION_41	ELSE_7	IF_25
0x40012c9	    0x488b05000000	            mov rax, qword [0x040012d0] 	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x40012d0	    0x488b96000200	           mov rdx, qword [rsi + 0x200] 	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x40012d7	    0x488990f80200	            mov qword [rax + 0x2f8], rdx	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x40012de	    0x488b96080200	           mov rdx, qword [rsi + 0x208] 	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x40012e5	    0x488990000300	            mov qword [rax + 0x300], rdx	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x40012ec	    0x488b96100200	           mov rdx, qword [rsi + 0x210] 	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x40012f3	    0x488990080300	            mov qword [rax + 0x308], rdx	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x40012fa	    0x488b96180200	           mov rdx, qword [rsi + 0x218] 	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001301	    0x488990100300	            mov qword [rax + 0x310], rdx	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001308	    0x488b96200200	           mov rdx, qword [rsi + 0x220] 	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400130f	    0x488990180300	            mov qword [rax + 0x318], rdx	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001316	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400131b	    0x488986000200	            mov qword [rsi + 0x200], rax	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001322	        0x8b442464	            mov eax, dword [rsp + 0x64] 	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001326	    0x898608020000	            mov dword [rsi + 0x208], eax	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400132c	        0x8b442460	            mov eax, dword [rsp + 0x60] 	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001330	    0x89860c020000	            mov dword [rsi + 0x20c], eax	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001336	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400133b	    0x488986100200	            mov qword [rsi + 0x210], rax	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001342	        0x8b442450	            mov eax, dword [rsp + 0x50] 	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001346	    0x898618020000	            mov dword [rsi + 0x218], eax	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400134c	        0x8b442454	            mov eax, dword [rsp + 0x54] 	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001350	    0x89861c020000	            mov dword [rsi + 0x21c], eax	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001356	        0x8b442458	            mov eax, dword [rsp + 0x58] 	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400135a	    0x898620020000	            mov dword [rsi + 0x220], eax	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001360	        0x8b44245c	            mov eax, dword [rsp + 0x5c] 	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001364	    0x898624020000	            mov dword [rsi + 0x224], eax	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400136a	    0x488b05000000	            mov rax, qword [0x04001371] 	      2830	undo.c	FUNCTION_41	IF_26
0x4001371	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      2830	undo.c	FUNCTION_41	IF_26
0x4001375	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      2831	undo.c	FUNCTION_41	IF_26
0x400137a	        0x488b5240	            mov rdx, qword [rdx + 0x40] 	      2831	undo.c	FUNCTION_41	IF_26
0x400137e	        0x48891424	                    mov qword [rsp], rdx	      2831	undo.c	FUNCTION_41	IF_26
0x4001382	        0x4883c201	                              add rdx, 1	      2831	undo.c	FUNCTION_41	IF_26
0x4001386	          0x4839ca	                            cmp rdx, rcx	      2831	undo.c	FUNCTION_41	IF_26
0x4001389	            0x750e	                           jne 0x4001399	      2831	undo.c	FUNCTION_41	IF_26
0x400138b	        0x4883f901	                              cmp rcx, 1	      2831	undo.c	FUNCTION_41	IF_26
0x400138f	            0x7e08	                           jle 0x4001399	      2831	undo.c	FUNCTION_41	IF_26
0x4001391	        0x4883e901	                              sub rcx, 1	      2832	undo.c	FUNCTION_41	IF_26
0x4001395	        0x48894838	             mov qword [rax + 0x38], rcx	      2832	undo.c	FUNCTION_41	IF_26
0x4001399	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2833	undo.c	FUNCTION_41	IF_27
0x400139d	    0x488b0d000000	            mov rcx, qword [0x040013a4] 	      2833	undo.c	FUNCTION_41	IF_27
0x40013a4	          0x483b11	                    cmp rdx, qword [rcx]	      2833	undo.c	FUNCTION_41	IF_27
0x40013a7	            0x7f49	                            jg 0x40013f2	      2833	undo.c	FUNCTION_41	IF_27
0x40013a9	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      2835	undo.c	FUNCTION_41	IF_27	IF_28
0x40013ae	        0x483b5140	            cmp rdx, qword [rcx + 0x40] 	      2835	undo.c	FUNCTION_41	IF_27	IF_28
0x40013b2	            0x7532	                           jne 0x40013e6	      2835	undo.c	FUNCTION_41	IF_27	IF_28
0x40013b4	          0x4889cb	                            mov rbx, rcx	      2837	undo.c	FUNCTION_41	IF_27	IF_28
0x40013b7	          0x8b5148	            mov edx, dword [rcx + 0x48] 	      2837	undo.c	FUNCTION_41	IF_27	IF_28
0x40013ba	          0x895040	             mov dword [rax + 0x40], edx	      2837	undo.c	FUNCTION_41	IF_27	IF_28
0x40013bd	      0xe800000000	                          call 0x40013c2	      2839	undo.c	FUNCTION_41	IF_27	IF_28	IF_29	CALL_26
0x40013c2	            0x85c0	                           test eax, eax	      2839	undo.c	FUNCTION_41	IF_27	IF_28	IF_29	CALL_26
0x40013c4	            0x7410	                            je 0x40013d6	      2839	undo.c	FUNCTION_41	IF_27	IF_28	IF_29	CALL_26
0x40013c6	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      2839	undo.c	FUNCTION_41	IF_27	IF_28	IF_29	CALL_26
0x40013ca	          0x4885ff	                           test rdi, rdi	      2839	undo.c	FUNCTION_41	IF_27	IF_28	IF_29	CALL_26
0x40013cd	            0x7807	                            js 0x40013d6	      2839	undo.c	FUNCTION_41	IF_27	IF_28	IF_29	CALL_26
0x40013cf	      0xe800000000	                          call 0x40013d4	      2840	undo.c	FUNCTION_41	IF_27	IF_28	CALL_27
0x40013d4	            0xeb2a	                           jmp 0x4001400	      2840	undo.c	FUNCTION_41	IF_27	IF_28	CALL_27
0x40013d6	    0x488b05000000	            mov rax, qword [0x040013dd] 	      2842	undo.c	FUNCTION_41	IF_27	IF_28	ELSE_8
0x40013dd	    0xc74044000000	               mov dword [rax + 0x44], 0	      2842	undo.c	FUNCTION_41	IF_27	IF_28	ELSE_8
0x40013e4	            0xeb1a	                           jmp 0x4001400	      2842	undo.c	FUNCTION_41	IF_27	IF_28	ELSE_8
0x40013e6	      0xbf06000000	                              mov edi, 6	      2846	undo.c	FUNCTION_41	IF_27	CALL_28
0x40013eb	      0xe800000000	                          call 0x40013f0	      2846	undo.c	FUNCTION_41	IF_27	CALL_28
0x40013f0	            0xeb0e	                           jmp 0x4001400	      2846	undo.c	FUNCTION_41	IF_27	CALL_28
0x40013f2	    0xc74040000000	               mov dword [rax + 0x40], 0	      2854	undo.c	FUNCTION_41	ELSE_10
0x40013f9	    0xc74044000000	               mov dword [rax + 0x44], 0	      2856	undo.c	FUNCTION_41	ELSE_10
0x4001400	      0xe800000000	                          call 0x4001405	      2861	undo.c	FUNCTION_41	CALL_29
0x4001405	    0x488b05000000	            mov rax, qword [0x0400140c] 	      2864	undo.c	FUNCTION_41
0x400140c	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      2864	undo.c	FUNCTION_41
0x4001411	        0x488b5620	            mov rdx, qword [rsi + 0x20] 	      2864	undo.c	FUNCTION_41
0x4001415	    0x488990481200	          mov qword [rax + 0x1248], rdx 	      2864	undo.c	FUNCTION_41
0x400141c	      0x837c244400	               cmp dword [rsp + 0x44], 0	      2865	undo.c	FUNCTION_41	IF_30
0x4001421	            0x7463	                            je 0x4001486	      2865	undo.c	FUNCTION_41	IF_30
0x4001423	          0x488b16	                    mov rdx, qword [rsi]	      2869	undo.c	FUNCTION_41	IF_30	IF_31
0x4001426	          0x4885d2	                           test rdx, rdx	      2869	undo.c	FUNCTION_41	IF_30	IF_31
0x4001429	            0x740d	                            je 0x4001438	      2869	undo.c	FUNCTION_41	IF_30	IF_31
0x400142b	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      2870	undo.c	FUNCTION_41	IF_30	IF_31
0x400142f	    0x488990481200	          mov qword [rax + 0x1248], rdx 	      2870	undo.c	FUNCTION_41	IF_30	IF_31
0x4001436	            0xeb3b	                           jmp 0x4001473	      2870	undo.c	FUNCTION_41	IF_30	IF_31
0x4001438	    0x48c780481200	            mov qword [rax + 0x1248], 0 	      2872	undo.c	FUNCTION_41	IF_30	ELSE_11
0x4001443	            0xeb2e	                           jmp 0x4001473	      2872	undo.c	FUNCTION_41	IF_30	ELSE_11
0x4001445	        0x4883ea01	                              sub rdx, 1	      2879	undo.c	FUNCTION_41	ELSE_11	IF_32	IF_33
0x4001449	    0x488990581200	          mov qword [rax + 0x1258], rdx 	      2879	undo.c	FUNCTION_41	ELSE_11	IF_32	IF_33
0x4001450	            0xeb07	                           jmp 0x4001459	      2879	undo.c	FUNCTION_41	ELSE_11	IF_32	IF_33
0x4001452	    0x488990581200	          mov qword [rax + 0x1258], rdx 	      2881	undo.c	FUNCTION_41	ELSE_11	IF_32	ELSE_12
0x4001459	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      2886	undo.c	FUNCTION_41
0x400145e	    0x488b96280200	           mov rdx, qword [rsi + 0x228] 	      2886	undo.c	FUNCTION_41
0x4001465	    0x488990501200	          mov qword [rax + 0x1250], rdx 	      2886	undo.c	FUNCTION_41
0x400146c	      0xe800000000	                          call 0x4001471	      2888	undo.c	FUNCTION_41	CALL_30
0x4001471	            0xeb26	                           jmp 0x4001499	      2888	undo.c	FUNCTION_41	CALL_30
0x4001473	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      2876	undo.c	FUNCTION_41	ELSE_11	IF_32
0x4001478	    0x488b92300200	           mov rdx, qword [rdx + 0x230] 	      2876	undo.c	FUNCTION_41	ELSE_11	IF_32
0x400147f	          0x4885d2	                           test rdx, rdx	      2876	undo.c	FUNCTION_41	ELSE_11	IF_32
0x4001482	            0x75c1	                           jne 0x4001445	      2876	undo.c	FUNCTION_41	ELSE_11	IF_32
0x4001484	            0xebd3	                           jmp 0x4001459	      2876	undo.c	FUNCTION_41	ELSE_11	IF_32
0x4001486	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      2876	undo.c	FUNCTION_41	ELSE_11	IF_32
0x400148b	    0x488b91300200	           mov rdx, qword [rcx + 0x230] 	      2876	undo.c	FUNCTION_41	ELSE_11	IF_32
0x4001492	          0x4885d2	                           test rdx, rdx	      2876	undo.c	FUNCTION_41	ELSE_11	IF_32
0x4001495	            0x75bb	                           jne 0x4001452	      2876	undo.c	FUNCTION_41	ELSE_11	IF_32
0x4001497	            0xebc0	                           jmp 0x4001459	      2876	undo.c	FUNCTION_41	ELSE_11	IF_32
0x4001499	    0x488b84241802	           mov rax, qword [rsp + 0x218] 	      2892	undo.c	FUNCTION_41
0x40014a1	    0x644833042528	                xor rax, qword fs:[0x28]	      2892	undo.c	FUNCTION_41
0x40014aa	            0x7405	                            je 0x40014b1	      2892	undo.c	FUNCTION_41
0x40014ac	      0xe800000000	                          call 0x40014b1	      2892	undo.c	FUNCTION_41
0x40014b1	    0x4881c4280200	                          add rsp, 0x228	      2892	undo.c	FUNCTION_41
0x40014b8	              0x5b	                                 pop rbx	      2892	undo.c	FUNCTION_41
0x40014b9	              0x5d	                                 pop rbp	      2892	undo.c	FUNCTION_41
0x40014ba	            0x415c	                                 pop r12	      2892	undo.c	FUNCTION_41
0x40014bc	            0x415d	                                 pop r13	      2892	undo.c	FUNCTION_41
0x40014be	            0x415e	                                 pop r14	      2892	undo.c	FUNCTION_41
0x40014c0	            0x415f	                                 pop r15	      2892	undo.c	FUNCTION_41
0x40014c2	              0xc3	                                     ret	      2892	undo.c	FUNCTION_41
put_header_ptr	ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,1:WHILE,0:IF,0:DO,0	10
0x40005d8	        0x4883ec08	                              sub rsp, 8	       988	undo.c	FUNCTION_19
0x40005dc	          0x4885f6	                           test rsi, rsi	       989	undo.c	FUNCTION_19	CALL_1
0x40005df	            0x7406	                            je 0x40005e7	       989	undo.c	FUNCTION_19	CALL_1
0x40005e1	        0x488b7620	            mov rsi, qword [rsi + 0x20] 	       989	undo.c	FUNCTION_19	CALL_1
0x40005e5	            0xeb05	                           jmp 0x40005ec	       989	undo.c	FUNCTION_19	CALL_1
0x40005e7	      0xbe00000000	                              mov esi, 0	       989	undo.c	FUNCTION_19	CALL_1
0x40005ec	      0xba04000000	                              mov edx, 4	       989	undo.c	FUNCTION_19	CALL_1
0x40005f1	      0xe887ffffff	               call sym.undo_write_bytes	       989	undo.c	FUNCTION_19	CALL_1
0x40005f6	        0x4883c408	                              add rsp, 8	       990	undo.c	FUNCTION_19
0x40005fa	              0xc3	                                     ret	       990	undo.c	FUNCTION_19
u_find_first_changed	ELSE,0:functions,0:SWITCH,0:FOR,1:CALL,4:WHILE,0:IF,4:DO,0	60
0x4003893	            0x4156	                                push r14	      3172	undo.c	FUNCTION_48
0x4003895	            0x4155	                                push r13	      3172	undo.c	FUNCTION_48
0x4003897	            0x4154	                                push r12	      3172	undo.c	FUNCTION_48
0x4003899	              0x55	                                push rbp	      3172	undo.c	FUNCTION_48
0x400389a	              0x53	                                push rbx	      3172	undo.c	FUNCTION_48
0x400389b	    0x488b3d000000	            mov rdi, qword [0x040038a2] 	      3173	undo.c	FUNCTION_48
0x40038a2	    0x488baf201200	          mov rbp, qword [rdi + 0x1220] 	      3173	undo.c	FUNCTION_48
0x40038a9	    0x4883bf281200	             cmp qword [rdi + 0x1228], 0	      3177	undo.c	FUNCTION_48	IF_1
0x40038b1	     0xf85b9000000	                           jne 0x4003970	      3177	undo.c	FUNCTION_48	IF_1
0x40038b7	          0x4885ed	                           test rbp, rbp	      3177	undo.c	FUNCTION_48	IF_1
0x40038ba	     0xf84b0000000	                            je 0x4003970	      3177	undo.c	FUNCTION_48	IF_1
0x40038c0	        0x4c8b6d30	            mov r13, qword [rbp + 0x30] 	      3181	undo.c	FUNCTION_48
0x40038c4	      0x49837d0800	                  cmp qword [r13 + 8], 0	      3182	undo.c	FUNCTION_48	IF_2
0x40038c9	     0xf85a1000000	                           jne 0x4003970	      3182	undo.c	FUNCTION_48	IF_2
0x40038cf	      0x49837d1000	               cmp qword [r13 + 0x10], 0	      3182	undo.c	FUNCTION_48	IF_2
0x40038d4	     0xf8596000000	                           jne 0x4003970	      3182	undo.c	FUNCTION_48	IF_2
0x40038da	          0x488b07	                    mov rax, qword [rdi]	      3185	undo.c	FUNCTION_48	FOR_1
0x40038dd	        0x4883f801	                              cmp rax, 1	      3185	undo.c	FUNCTION_48	FOR_1
0x40038e1	            0x7e69	                           jle 0x400394c	      3185	undo.c	FUNCTION_48	FOR_1
0x40038e3	      0x49837d2800	               cmp qword [r13 + 0x28], 0	      3186	undo.c	FUNCTION_48	FOR_1
0x40038e8	            0x7e69	                           jle 0x4003953	      3186	undo.c	FUNCTION_48	FOR_1
0x40038ea	    0x41bc00000000	                             mov r12d, 0	      3186	undo.c	FUNCTION_48	FOR_1
0x40038f0	      0xbb01000000	                              mov ebx, 1	      3186	undo.c	FUNCTION_48	FOR_1
0x40038f5	        0x498b4520	            mov rax, qword [r13 + 0x20] 	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x40038f9	        0x4e8b3420	              mov r14, qword [rax + r12]	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x40038fd	      0xba00000000	                              mov edx, 0	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4003902	          0x4889de	                            mov rsi, rbx	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4003905	      0xe800000000	                          call 0x400390a	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x400390a	          0x4c89f6	                            mov rsi, r14	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x400390d	          0x4889c7	                            mov rdi, rax	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4003910	      0xe800000000	                          call 0x4003915	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4003915	            0x85c0	                           test eax, eax	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4003917	            0x7414	                            je 0x400392d	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4003919	    0xc74548000000	               mov dword [rbp + 0x48], 0	      3190	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_3
0x4003920	    0xc7454c000000	               mov dword [rbp + 0x4c], 0	      3190	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_3
0x4003927	        0x48895d40	            mov qword [rbp + 0x40], rbx 	      3191	undo.c	FUNCTION_48	FOR_1	IF_3
0x400392b	            0xeb43	                           jmp 0x4003970	      3192	undo.c	FUNCTION_48	FOR_1	IF_3
0x400392d	        0x4883c301	                              add rbx, 1	      3186	undo.c	FUNCTION_48	FOR_1
0x4003931	    0x488b3d000000	            mov rdi, qword [0x04003938] 	      3185	undo.c	FUNCTION_48	FOR_1
0x4003938	          0x488b07	                    mov rax, qword [rdi]	      3185	undo.c	FUNCTION_48	FOR_1
0x400393b	          0x4839d8	                            cmp rax, rbx	      3185	undo.c	FUNCTION_48	FOR_1
0x400393e	            0x7e18	                           jle 0x4003958	      3185	undo.c	FUNCTION_48	FOR_1
0x4003940	        0x4983c408	                              add r12, 8	      3185	undo.c	FUNCTION_48	FOR_1
0x4003944	        0x49395d28	            cmp qword [r13 + 0x28], rbx 	      3186	undo.c	FUNCTION_48	FOR_1
0x4003948	            0x7dab	                           jge 0x40038f5	      3186	undo.c	FUNCTION_48	FOR_1
0x400394a	            0xeb0c	                           jmp 0x4003958	      3186	undo.c	FUNCTION_48	FOR_1
0x400394c	      0xbb01000000	                              mov ebx, 1	      3185	undo.c	FUNCTION_48	FOR_1
0x4003951	            0xeb05	                           jmp 0x4003958	      3185	undo.c	FUNCTION_48	FOR_1
0x4003953	      0xbb01000000	                              mov ebx, 1	      3186	undo.c	FUNCTION_48	FOR_1
0x4003958	        0x49394528	            cmp qword [r13 + 0x28], rax 	      3194	undo.c	FUNCTION_48	IF_4
0x400395c	            0x7412	                            je 0x4003970	      3194	undo.c	FUNCTION_48	IF_4
0x400395e	    0xc74548000000	               mov dword [rbp + 0x48], 0	      3197	undo.c	FUNCTION_48	IF_4	CALL_4
0x4003965	    0xc7454c000000	               mov dword [rbp + 0x4c], 0	      3197	undo.c	FUNCTION_48	IF_4	CALL_4
0x400396c	        0x48895d40	            mov qword [rbp + 0x40], rbx 	      3198	undo.c	FUNCTION_48	IF_4
0x4003970	              0x5b	                                 pop rbx	      3200	undo.c	FUNCTION_48
0x4003971	              0x5d	                                 pop rbp	      3200	undo.c	FUNCTION_48
0x4003972	            0x415c	                                 pop r12	      3200	undo.c	FUNCTION_48
0x4003974	            0x415d	                                 pop r13	      3200	undo.c	FUNCTION_48
0x4003976	            0x415e	                                 pop r14	      3200	undo.c	FUNCTION_48
0x4003978	              0xc3	                                     ret	      3200	undo.c	FUNCTION_48
undo_read_byte	ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,2:WHILE,0:IF,1:DO,0	19
0x4000933	        0x4883ec18	                           sub rsp, 0x18	      1028	undo.c	FUNCTION_22
0x4000937	    0x64488b042528	                mov rax, qword fs:[0x28]	      1028	undo.c	FUNCTION_22
0x4000940	      0x4889442408	                mov qword [rsp + 8], rax	      1028	undo.c	FUNCTION_22
0x4000945	            0x31c0	                            xor eax, eax	      1028	undo.c	FUNCTION_22
0x4000947	      0x48837f1800	               cmp qword [rdi + 0x18], 0	      1030	undo.c	FUNCTION_22	IF_1
0x400094c	            0x7416	                            je 0x4000964	      1030	undo.c	FUNCTION_22	IF_1
0x400094e	      0xba01000000	                              mov edx, 1	      1034	undo.c	FUNCTION_22	IF_1	CALL_1
0x4000953	      0x488d742407	                      lea rsi, [rsp + 7]	      1034	undo.c	FUNCTION_22	IF_1	CALL_1
0x4000958	      0xe8dffcffff	                      call sym.undo_read	      1034	undo.c	FUNCTION_22	IF_1	CALL_1
0x400095d	       0xfb6442407	               movzx eax, byte [rsp + 7]	      1035	undo.c	FUNCTION_22	IF_1
0x4000962	            0xeb09	                           jmp 0x400096d	      1035	undo.c	FUNCTION_22	IF_1
0x4000964	        0x488b7f08	                mov rdi, qword [rdi + 8]	      1038	undo.c	FUNCTION_22	CALL_2
0x4000968	      0xe800000000	                          call 0x400096d	      1038	undo.c	FUNCTION_22	CALL_2
0x400096d	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1039	undo.c	FUNCTION_22
0x4000972	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1039	undo.c	FUNCTION_22
0x400097b	            0x7405	                            je 0x4000982	      1039	undo.c	FUNCTION_22
0x400097d	      0xe800000000	                          call 0x4000982	      1039	undo.c	FUNCTION_22
0x4000982	        0x4883c418	                           add rsp, 0x18	      1039	undo.c	FUNCTION_22
0x4000986	              0xc3	                                     ret	      1039	undo.c	FUNCTION_22
read_string_decrypt	ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,4:WHILE,0:IF,3:DO,0	41
0x400078d	            0x4154	                                push r12	      1121	undo.c	FUNCTION_25
0x400078f	              0x55	                                push rbp	      1121	undo.c	FUNCTION_25
0x4000790	              0x53	                                push rbx	      1121	undo.c	FUNCTION_25
0x4000791	          0x4989fc	                            mov r12, rdi	      1121	undo.c	FUNCTION_25
0x4000794	            0x89f3	                            mov ebx, esi	      1121	undo.c	FUNCTION_25
0x4000796	          0x8d7e01	                      lea edi, [rsi + 1]	      1122	undo.c	FUNCTION_25	CALL_1
0x4000799	      0xe800000000	                          call 0x400079e	      1122	undo.c	FUNCTION_25	CALL_1
0x400079e	          0x4885c0	                           test rax, rax	      1124	undo.c	FUNCTION_25	IF_1
0x40007a1	            0x7452	                            je 0x40007f5	      1124	undo.c	FUNCTION_25	IF_1
0x40007a3	          0x4889c5	                            mov rbp, rax	      1124	undo.c	FUNCTION_25	IF_1
0x40007a6	            0x85db	                           test ebx, ebx	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x40007a8	            0x7e21	                           jle 0x40007cb	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x40007aa	          0x4863d3	                         movsxd rdx, ebx	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x40007ad	          0x4889c6	                            mov rsi, rax	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x40007b0	          0x4c89e7	                            mov rdi, r12	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x40007b3	      0xe884feffff	                      call sym.undo_read	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x40007b8	            0x85c0	                           test eax, eax	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x40007ba	            0x750f	                           jne 0x40007cb	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x40007bc	          0x4889ef	                            mov rdi, rbp	      1128	undo.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x40007bf	      0xe800000000	                          call 0x40007c4	      1128	undo.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x40007c4	      0xb800000000	                              mov eax, 0	      1129	undo.c	FUNCTION_25	IF_1	IF_2
0x40007c9	            0xeb34	                           jmp 0x40007ff	      1129	undo.c	FUNCTION_25	IF_1	IF_2
0x40007cb	          0x4863d3	                         movsxd rdx, ebx	      1131	undo.c	FUNCTION_25	IF_1
0x40007ce	      0xc644150000	                 mov byte [rbp + rdx], 0	      1131	undo.c	FUNCTION_25	IF_1
0x40007d3	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	      1133	undo.c	FUNCTION_25	IF_1	IF_3
0x40007d8	          0x4885ff	                           test rdi, rdi	      1133	undo.c	FUNCTION_25	IF_1	IF_3
0x40007db	            0x741f	                            je 0x40007fc	      1133	undo.c	FUNCTION_25	IF_1	IF_3
0x40007dd	          0x4889e8	                            mov rax, rbp	      1137	undo.c	FUNCTION_25
0x40007e0	    0x49837c241800	               cmp qword [r12 + 0x18], 0	      1133	undo.c	FUNCTION_25	IF_1	IF_3
0x40007e6	            0x7517	                           jne 0x40007ff	      1133	undo.c	FUNCTION_25	IF_1	IF_3
0x40007e8	          0x4889ee	                            mov rsi, rbp	      1134	undo.c	FUNCTION_25	IF_1	CALL_4
0x40007eb	      0xe800000000	                          call 0x40007f0	      1134	undo.c	FUNCTION_25	IF_1	CALL_4
0x40007f0	          0x4889e8	                            mov rax, rbp	      1137	undo.c	FUNCTION_25
0x40007f3	            0xeb0a	                           jmp 0x40007ff	      1137	undo.c	FUNCTION_25
0x40007f5	      0xb800000000	                              mov eax, 0	      1137	undo.c	FUNCTION_25
0x40007fa	            0xeb03	                           jmp 0x40007ff	      1137	undo.c	FUNCTION_25
0x40007fc	          0x4889e8	                            mov rax, rbp	      1137	undo.c	FUNCTION_25
0x40007ff	              0x5b	                                 pop rbx	      1138	undo.c	FUNCTION_25
0x4000800	              0x5d	                                 pop rbp	      1138	undo.c	FUNCTION_25
0x4000801	            0x415c	                                 pop r12	      1138	undo.c	FUNCTION_25
0x4000803	              0xc3	                                     ret	      1138	undo.c	FUNCTION_25
u_undo_end	ELSE,9:functions,1:SWITCH,0:FOR,0:CALL,14:WHILE,0:IF,12:DO,0	138
0x4000a68	            0x4155	                                push r13	      2903	undo.c	FUNCTION_42
0x4000a6a	            0x4154	                                push r12	      2903	undo.c	FUNCTION_42
0x4000a6c	              0x55	                                push rbp	      2903	undo.c	FUNCTION_42
0x4000a6d	              0x53	                                push rbx	      2903	undo.c	FUNCTION_42
0x4000a6e	        0x4883ec68	                           sub rsp, 0x68	      2903	undo.c	FUNCTION_42
0x4000a72	            0x89fd	                            mov ebp, edi	      2903	undo.c	FUNCTION_42
0x4000a74	            0x89f3	                            mov ebx, esi	      2903	undo.c	FUNCTION_42
0x4000a76	    0x64488b042528	                mov rax, qword fs:[0x28]	      2903	undo.c	FUNCTION_42
0x4000a7f	      0x4889442458	             mov qword [rsp + 0x58], rax	      2903	undo.c	FUNCTION_42
0x4000a84	            0x31c0	                            xor eax, eax	      2903	undo.c	FUNCTION_42
0x4000a86	    0xf60500000000	               test byte [0x04000a8d], 2	      2909	undo.c	FUNCTION_42	IF_1
0x4000a8d	            0x740e	                            je 0x4000a9d	      2909	undo.c	FUNCTION_42	IF_1
0x4000a8f	    0x833d00000000	               cmp dword [0x04000a96], 0	      2909	undo.c	FUNCTION_42	IF_1
0x4000a96	            0x7405	                            je 0x4000a9d	      2909	undo.c	FUNCTION_42	IF_1
0x4000a98	      0xe800000000	                          call 0x4000a9d	      2910	undo.c	FUNCTION_42	CALL_1
0x4000a9d	    0x833d00000000	               cmp dword [0x04000aa4], 0	      2913	undo.c	FUNCTION_42	IF_2
0x4000aa4	     0xf85cf010000	                           jne 0x4000c79	      2913	undo.c	FUNCTION_42	IF_2
0x4000aaa	      0xe800000000	                          call 0x4000aaf	      2914	undo.c	FUNCTION_42	IF_2	CALL_2
0x4000aaf	            0x85c0	                           test eax, eax	      2914	undo.c	FUNCTION_42	IF_2	CALL_2
0x4000ab1	     0xf84c2010000	                            je 0x4000c79	      2914	undo.c	FUNCTION_42	IF_2	CALL_2
0x4000ab7	    0x488b15000000	            mov rdx, qword [0x04000abe] 	      2917	undo.c	FUNCTION_42	IF_3
0x4000abe	        0xf6421001	               test byte [rdx + 0x10], 1	      2917	undo.c	FUNCTION_42	IF_3
0x4000ac2	            0x7408	                            je 0x4000acc	      2917	undo.c	FUNCTION_42	IF_3
0x4000ac4	    0x48832d000000	               sub qword [0x04000acc], 1	      2918	undo.c	FUNCTION_42	IF_3
0x4000acc	    0x488b0d000000	            mov rcx, qword [0x04000ad3] 	      2920	undo.c	FUNCTION_42
0x4000ad3	    0x488b05000000	            mov rax, qword [0x04000ada] 	      2920	undo.c	FUNCTION_42
0x4000ada	          0x4829c8	                            sub rax, rcx	      2920	undo.c	FUNCTION_42
0x4000add	    0x488905000000	            mov qword [0x04000ae4], rax 	      2920	undo.c	FUNCTION_42
0x4000ae4	    0x41bd00000000	                             mov r13d, 0	      2922	undo.c	FUNCTION_42	CALL_3
0x4000aea	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      2921	undo.c	FUNCTION_42	IF_4
0x4000aee	            0x743d	                            je 0x4000b2d	      2921	undo.c	FUNCTION_42	IF_4
0x4000af0	    0x41bd00000000	                             mov r13d, 0	      2924	undo.c	FUNCTION_42	ELSE_1	IF_5
0x4000af6	          0x4885c0	                           test rax, rax	      2923	undo.c	FUNCTION_42	ELSE_1	IF_5
0x4000af9	            0x7832	                            js 0x4000b2d	      2923	undo.c	FUNCTION_42	ELSE_1	IF_5
0x4000afb	    0x41bd00000000	                             mov r13d, 0	      2926	undo.c	FUNCTION_42	ELSE_2	IF_6
0x4000b01	        0x4883f801	                              cmp rax, 1	      2925	undo.c	FUNCTION_42	ELSE_2	IF_6
0x4000b05	            0x7426	                            je 0x4000b2d	      2925	undo.c	FUNCTION_42	ELSE_2	IF_6
0x4000b07	    0x41bd00000000	                             mov r13d, 0	      2928	undo.c	FUNCTION_42	ELSE_3	IF_7
0x4000b0d	        0x4883f801	                              cmp rax, 1	      2927	undo.c	FUNCTION_42	ELSE_3	IF_7
0x4000b11	            0x7f1a	                            jg 0x4000b2d	      2927	undo.c	FUNCTION_42	ELSE_3	IF_7
0x4000b13	    0x48890d000000	            mov qword [0x04000b1a], rcx 	      2931	undo.c	FUNCTION_42	ELSE_4
0x4000b1a	        0x4883f901	                              cmp rcx, 1	      2935	undo.c	FUNCTION_42	ELSE_4	CALL_8
0x4000b1e	      0xb800000000	                              mov eax, 0	      2935	undo.c	FUNCTION_42	ELSE_4	CALL_8
0x4000b23	    0x41bd00000000	                             mov r13d, 0	      2935	undo.c	FUNCTION_42	ELSE_4	CALL_8
0x4000b29	        0x4c0f45e8	                         cmovne r13, rax	      2935	undo.c	FUNCTION_42	ELSE_4	CALL_8
0x4000b2d	    0x488b82281200	          mov rax, qword [rdx + 0x1228] 	      2938	undo.c	FUNCTION_42	IF_9
0x4000b34	          0x4885c0	                           test rax, rax	      2938	undo.c	FUNCTION_42	IF_9
0x4000b37	            0x741d	                            je 0x4000b56	      2938	undo.c	FUNCTION_42	IF_9
0x4000b39	            0x85db	                           test ebx, ebx	      2941	undo.c	FUNCTION_42	IF_9	IF_10
0x4000b3b	            0x740c	                            je 0x4000b49	      2941	undo.c	FUNCTION_42	IF_9	IF_10
0x4000b3d	          0x4c8b20	                    mov r12, qword [rax]	      2941	undo.c	FUNCTION_42	IF_9	IF_10
0x4000b40	          0x4d85e4	                           test r12, r12	      2941	undo.c	FUNCTION_42	IF_9	IF_10
0x4000b43	     0xf851e010000	                           jne 0x4000c67	      2941	undo.c	FUNCTION_42	IF_9	IF_10
0x4000b49	            0x85ed	                           test ebp, ebp	      2946	undo.c	FUNCTION_42	IF_9	ELSE_6	IF_11
0x4000b4b	     0xf8520010000	                           jne 0x4000c71	      2946	undo.c	FUNCTION_42	IF_9	ELSE_6	IF_11
0x4000b51	          0x4c8b20	                    mov r12, qword [rax]	      2949	undo.c	FUNCTION_42	IF_9	ELSE_7
0x4000b54	            0xeb07	                           jmp 0x4000b5d	      2949	undo.c	FUNCTION_42	IF_9	ELSE_7
0x4000b56	    0x4c8ba2201200	          mov r12, qword [rdx + 0x1220] 	      2952	undo.c	FUNCTION_42	ELSE_8
0x4000b5d	          0x4d85e4	                           test r12, r12	      2954	undo.c	FUNCTION_42	IF_12
0x4000b60	            0x7512	                           jne 0x4000b74	      2954	undo.c	FUNCTION_42	IF_12
0x4000b62	        0xc6042400	                       mov byte [rsp], 0	      2955	undo.c	FUNCTION_42	IF_12
0x4000b66	    0x488b1d000000	            mov rbx, qword [0x04000b6d] 	      2963	undo.c	FUNCTION_42
0x4000b6d	          0x4885db	                           test rbx, rbx	      2963	undo.c	FUNCTION_42
0x4000b70	            0x7523	                           jne 0x4000b95	      2963	undo.c	FUNCTION_42
0x4000b72	            0xeb60	                           jmp 0x4000bd4	      2963	undo.c	FUNCTION_42
0x4000b74	    0x498b94242802	           mov rdx, qword [r12 + 0x228] 	      2957	undo.c	FUNCTION_42	CALL_9
0x4000b7c	      0xbe50000000	                           mov esi, 0x50	      2957	undo.c	FUNCTION_42	CALL_9
0x4000b81	          0x4889e7	                            mov rdi, rsp	      2957	undo.c	FUNCTION_42	CALL_9
0x4000b84	      0xe833feffff	                     call sym.u_add_time	      2957	undo.c	FUNCTION_42	CALL_9
0x4000b89	    0x488b1d000000	            mov rbx, qword [0x04000b90] 	      2963	undo.c	FUNCTION_42
0x4000b90	          0x4885db	                           test rbx, rbx	      2963	undo.c	FUNCTION_42
0x4000b93	            0x7432	                            je 0x4000bc7	      2963	undo.c	FUNCTION_42
0x4000b95	    0x488b05000000	            mov rax, qword [0x04000b9c] 	      2965	undo.c	FUNCTION_42	FUNCTION_1	IF_1
0x4000b9c	        0x48394308	                cmp qword [rbx + 8], rax	      2965	undo.c	FUNCTION_42	FUNCTION_1	IF_1
0x4000ba0	            0x7517	                           jne 0x4000bb9	      2965	undo.c	FUNCTION_42	FUNCTION_1	IF_1
0x4000ba2	    0x4883bba80200	              cmp qword [rbx + 0x2a8], 0	      2965	undo.c	FUNCTION_42	FUNCTION_1	IF_1
0x4000baa	            0x7e0d	                           jle 0x4000bb9	      2965	undo.c	FUNCTION_42	FUNCTION_1	IF_1
0x4000bac	      0xbe28000000	                           mov esi, 0x28	      2966	undo.c	FUNCTION_42	FUNCTION_1	CALL_1
0x4000bb1	          0x4889df	                            mov rdi, rbx	      2966	undo.c	FUNCTION_42	FUNCTION_1	CALL_1
0x4000bb4	      0xe800000000	                          call 0x4000bb9	      2966	undo.c	FUNCTION_42	FUNCTION_1	CALL_1
0x4000bb9	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      2963	undo.c	FUNCTION_42
0x4000bbd	          0x4885db	                           test rbx, rbx	      2963	undo.c	FUNCTION_42
0x4000bc0	            0x75d3	                           jne 0x4000b95	      2963	undo.c	FUNCTION_42
0x4000bc2	          0x4d85e4	                           test r12, r12	      2971	undo.c	FUNCTION_42	CALL_11
0x4000bc5	            0x7407	                            je 0x4000bce	      2971	undo.c	FUNCTION_42	CALL_11
0x4000bc7	      0x4d8b642420	            mov r12, qword [r12 + 0x20] 	      2971	undo.c	FUNCTION_42	CALL_11
0x4000bcc	            0xeb06	                           jmp 0x4000bd4	      2971	undo.c	FUNCTION_42	CALL_11
0x4000bce	    0x41bc00000000	                             mov r12d, 0	      2971	undo.c	FUNCTION_42	CALL_11
0x4000bd4	            0x85ed	                           test ebp, ebp	      2971	undo.c	FUNCTION_42	CALL_11
0x4000bd6	            0x7419	                            je 0x4000bf1	      2971	undo.c	FUNCTION_42	CALL_11
0x4000bd8	      0xba05000000	                              mov edx, 5	      2971	undo.c	FUNCTION_42	CALL_11
0x4000bdd	      0xbe00000000	                              mov esi, 0	      2971	undo.c	FUNCTION_42	CALL_11
0x4000be2	      0xbf00000000	                              mov edi, 0	      2971	undo.c	FUNCTION_42	CALL_11
0x4000be7	      0xe800000000	                          call 0x4000bec	      2971	undo.c	FUNCTION_42	CALL_11
0x4000bec	          0x4889c5	                            mov rbp, rax	      2971	undo.c	FUNCTION_42	CALL_11
0x4000bef	            0xeb17	                           jmp 0x4000c08	      2971	undo.c	FUNCTION_42	CALL_11
0x4000bf1	      0xba05000000	                              mov edx, 5	      2971	undo.c	FUNCTION_42	CALL_11
0x4000bf6	      0xbe00000000	                              mov esi, 0	      2971	undo.c	FUNCTION_42	CALL_11
0x4000bfb	      0xbf00000000	                              mov edi, 0	      2971	undo.c	FUNCTION_42	CALL_11
0x4000c00	      0xe800000000	                          call 0x4000c05	      2971	undo.c	FUNCTION_42	CALL_11
0x4000c05	          0x4889c5	                            mov rbp, rax	      2971	undo.c	FUNCTION_42	CALL_11
0x4000c08	      0xba05000000	                              mov edx, 5	      2971	undo.c	FUNCTION_42	CALL_11
0x4000c0d	          0x4c89ee	                            mov rsi, r13	      2971	undo.c	FUNCTION_42	CALL_11
0x4000c10	      0xbf00000000	                              mov edi, 0	      2971	undo.c	FUNCTION_42	CALL_11
0x4000c15	      0xe800000000	                          call 0x4000c1a	      2971	undo.c	FUNCTION_42	CALL_11
0x4000c1a	          0x4989c5	                            mov r13, rax	      2971	undo.c	FUNCTION_42	CALL_11
0x4000c1d	    0x488b05000000	            mov rax, qword [0x04000c24] 	      2971	undo.c	FUNCTION_42	CALL_11
0x4000c24	        0x48c1f83f	                           sar rax, 0x3f	      2971	undo.c	FUNCTION_42	CALL_11
0x4000c28	          0x4889c3	                            mov rbx, rax	      2971	undo.c	FUNCTION_42	CALL_11
0x4000c2b	    0x48331d000000	             xor rbx, qword [0x04000c32]	      2971	undo.c	FUNCTION_42	CALL_11
0x4000c32	          0x4829c3	                            sub rbx, rax	      2971	undo.c	FUNCTION_42	CALL_11
0x4000c35	      0xba05000000	                              mov edx, 5	      2971	undo.c	FUNCTION_42	CALL_11
0x4000c3a	      0xbe00000000	                              mov esi, 0	      2971	undo.c	FUNCTION_42	CALL_11
0x4000c3f	      0xbf00000000	                              mov edi, 0	      2971	undo.c	FUNCTION_42	CALL_11
0x4000c44	      0xe800000000	                          call 0x4000c49	      2971	undo.c	FUNCTION_42	CALL_11
0x4000c49	          0x4989e1	                             mov r9, rsp	      2971	undo.c	FUNCTION_42	CALL_11
0x4000c4c	          0x4d89e0	                             mov r8, r12	      2971	undo.c	FUNCTION_42	CALL_11
0x4000c4f	          0x4889e9	                            mov rcx, rbp	      2971	undo.c	FUNCTION_42	CALL_11
0x4000c52	          0x4c89ea	                            mov rdx, r13	      2971	undo.c	FUNCTION_42	CALL_11
0x4000c55	          0x4889de	                            mov rsi, rbx	      2971	undo.c	FUNCTION_42	CALL_11
0x4000c58	          0x4889c7	                            mov rdi, rax	      2971	undo.c	FUNCTION_42	CALL_11
0x4000c5b	      0xb800000000	                              mov eax, 0	      2971	undo.c	FUNCTION_42	CALL_11
0x4000c60	      0xe800000000	                          call 0x4000c65	      2971	undo.c	FUNCTION_42	CALL_11
0x4000c65	            0xeb12	                           jmp 0x4000c79	      2971	undo.c	FUNCTION_42	CALL_11
0x4000c67	      0xbd00000000	                              mov ebp, 0	      2944	undo.c	FUNCTION_42	IF_9	IF_10
0x4000c6c	      0xe903ffffff	                           jmp 0x4000b74	      2944	undo.c	FUNCTION_42	IF_9	IF_10
0x4000c71	          0x4989c4	                            mov r12, rax	      2947	undo.c	FUNCTION_42	IF_9	ELSE_6	IF_11
0x4000c74	      0xe9fbfeffff	                           jmp 0x4000b74	      2947	undo.c	FUNCTION_42	IF_9	ELSE_6	IF_11
0x4000c79	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      2977	undo.c	FUNCTION_42
0x4000c7e	    0x644833042528	                xor rax, qword fs:[0x28]	      2977	undo.c	FUNCTION_42
0x4000c87	            0x7405	                            je 0x4000c8e	      2977	undo.c	FUNCTION_42
0x4000c89	      0xe800000000	                          call 0x4000c8e	      2977	undo.c	FUNCTION_42
0x4000c8e	        0x4883c468	                           add rsp, 0x68	      2977	undo.c	FUNCTION_42
0x4000c92	              0x5b	                                 pop rbx	      2977	undo.c	FUNCTION_42
0x4000c93	              0x5d	                                 pop rbp	      2977	undo.c	FUNCTION_42
0x4000c94	            0x415c	                                 pop r12	      2977	undo.c	FUNCTION_42
0x4000c96	            0x415d	                                 pop r13	      2977	undo.c	FUNCTION_42
0x4000c98	              0xc3	                                     ret	      2977	undo.c	FUNCTION_42
u_update_save_nr	ELSE,1:functions,0:SWITCH,0:FOR,0:CALL,0:WHILE,0:IF,2:DO,0	14
0x4003979	    0x488b87401200	          mov rax, qword [rdi + 0x1240] 	      3211	undo.c	FUNCTION_49
0x4003980	        0x4883c001	                              add rax, 1	      3211	undo.c	FUNCTION_49
0x4003984	    0x488987401200	          mov qword [rdi + 0x1240], rax 	      3211	undo.c	FUNCTION_49
0x400398b	    0x488987581200	          mov qword [rdi + 0x1258], rax 	      3212	undo.c	FUNCTION_49
0x4003992	    0x488b97281200	          mov rdx, qword [rdi + 0x1228] 	      3213	undo.c	FUNCTION_49
0x4003999	          0x4885d2	                           test rdx, rdx	      3214	undo.c	FUNCTION_49	IF_1
0x400399c	            0x7405	                            je 0x40039a3	      3214	undo.c	FUNCTION_49	IF_1
0x400399e	          0x488b12	                    mov rdx, qword [rdx]	      3215	undo.c	FUNCTION_49	IF_1
0x40039a1	            0xeb07	                           jmp 0x40039aa	      3215	undo.c	FUNCTION_49	IF_1
0x40039a3	    0x488b97201200	          mov rdx, qword [rdi + 0x1220] 	      3217	undo.c	FUNCTION_49	ELSE_1
0x40039aa	          0x4885d2	                           test rdx, rdx	      3218	undo.c	FUNCTION_49	IF_2
0x40039ad	            0x7407	                            je 0x40039b6	      3218	undo.c	FUNCTION_49	IF_2
0x40039af	    0x488982300200	            mov qword [rdx + 0x230], rax	      3219	undo.c	FUNCTION_49	IF_2
0x40039b6	            0xf3c3	                                     ret	      3219	undo.c	FUNCTION_49	IF_2
u_save_cursor	ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,1:WHILE,0:IF,0:DO,0	8
0x4003b2b	        0x4883ec08	                              sub rsp, 8	       252	undo.c	FUNCTION_3
0x4003b2f	    0x488b05000000	            mov rax, qword [0x04003b36] 	       254	undo.c	FUNCTION_3
0x4003b36	        0x488b7838	            mov rdi, qword [rax + 0x38] 	       254	undo.c	FUNCTION_3
0x4003b3a	        0x488d7701	                      lea rsi, [rdi + 1]	       253	undo.c	FUNCTION_3	CALL_1
0x4003b3e	        0x4883ef01	                              sub rdi, 1	       253	undo.c	FUNCTION_3	CALL_1
0x4003b42	      0xe800000000	                          call 0x4003b47	       253	undo.c	FUNCTION_3	CALL_1
0x4003b47	        0x4883c408	                              add rsp, 8	       255	undo.c	FUNCTION_3
0x4003b4b	              0xc3	                                     ret	       255	undo.c	FUNCTION_3
u_compute_hash	ELSE,0:functions,0:SWITCH,0:FOR,1:CALL,5:WHILE,0:IF,0:DO,0	45
0x4001edd	            0x4155	                                push r13	       753	undo.c	FUNCTION_11
0x4001edf	            0x4154	                                push r12	       753	undo.c	FUNCTION_11
0x4001ee1	              0x55	                                push rbp	       753	undo.c	FUNCTION_11
0x4001ee2	              0x53	                                push rbx	       753	undo.c	FUNCTION_11
0x4001ee3	        0x4883ec78	                           sub rsp, 0x78	       753	undo.c	FUNCTION_11
0x4001ee7	          0x4989fd	                            mov r13, rdi	       753	undo.c	FUNCTION_11
0x4001eea	    0x64488b042528	                mov rax, qword fs:[0x28]	       753	undo.c	FUNCTION_11
0x4001ef3	      0x4889442468	             mov qword [rsp + 0x68], rax	       753	undo.c	FUNCTION_11
0x4001ef8	            0x31c0	                            xor eax, eax	       753	undo.c	FUNCTION_11
0x4001efa	          0x4889e7	                            mov rdi, rsp	       758	undo.c	FUNCTION_11	CALL_1
0x4001efd	      0xe800000000	                          call 0x4001f02	       758	undo.c	FUNCTION_11	CALL_1
0x4001f02	    0x488b05000000	            mov rax, qword [0x04001f09] 	       759	undo.c	FUNCTION_11	FOR_1
0x4001f09	        0x48833800	                      cmp qword [rax], 0	       759	undo.c	FUNCTION_11	FOR_1
0x4001f0d	            0x7e42	                           jle 0x4001f51	       759	undo.c	FUNCTION_11	FOR_1
0x4001f0f	      0xbb01000000	                              mov ebx, 1	       759	undo.c	FUNCTION_11	FOR_1
0x4001f14	    0x49c7c4ffffff	             mov r12, 0xffffffffffffffff	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0x4001f1b	      0xbd00000000	                              mov ebp, 0	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0x4001f20	          0x4889df	                            mov rdi, rbx	       761	undo.c	FUNCTION_11	FOR_1	CALL_2
0x4001f23	      0xe800000000	                          call 0x4001f28	       761	undo.c	FUNCTION_11	FOR_1	CALL_2
0x4001f28	          0x4889c6	                            mov rsi, rax	       761	undo.c	FUNCTION_11	FOR_1	CALL_2
0x4001f2b	          0x4c89e1	                            mov rcx, r12	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0x4001f2e	          0x4889c7	                            mov rdi, rax	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0x4001f31	            0x89e8	                            mov eax, ebp	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0x4001f33	            0xf2ae	              repne scasb al, byte [rdi]	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0x4001f35	            0x89ca	                            mov edx, ecx	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0x4001f37	            0xf7d2	                                 not edx	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0x4001f39	          0x4889e7	                            mov rdi, rsp	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0x4001f3c	      0xe800000000	                          call 0x4001f41	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0x4001f41	        0x4883c301	                              add rbx, 1	       759	undo.c	FUNCTION_11	FOR_1
0x4001f45	    0x488b05000000	            mov rax, qword [0x04001f4c] 	       759	undo.c	FUNCTION_11	FOR_1
0x4001f4c	          0x483918	                    cmp qword [rax], rbx	       759	undo.c	FUNCTION_11	FOR_1
0x4001f4f	            0x7dcf	                           jge 0x4001f20	       759	undo.c	FUNCTION_11	FOR_1
0x4001f51	          0x4c89ee	                            mov rsi, r13	       764	undo.c	FUNCTION_11	CALL_5
0x4001f54	          0x4889e7	                            mov rdi, rsp	       764	undo.c	FUNCTION_11	CALL_5
0x4001f57	      0xe800000000	                          call 0x4001f5c	       764	undo.c	FUNCTION_11	CALL_5
0x4001f5c	      0x488b442468	            mov rax, qword [rsp + 0x68] 	       765	undo.c	FUNCTION_11
0x4001f61	    0x644833042528	                xor rax, qword fs:[0x28]	       765	undo.c	FUNCTION_11
0x4001f6a	            0x7405	                            je 0x4001f71	       765	undo.c	FUNCTION_11
0x4001f6c	      0xe800000000	                          call 0x4001f71	       765	undo.c	FUNCTION_11
0x4001f71	        0x4883c478	                           add rsp, 0x78	       765	undo.c	FUNCTION_11
0x4001f75	              0x5b	                                 pop rbx	       765	undo.c	FUNCTION_11
0x4001f76	              0x5d	                                 pop rbp	       765	undo.c	FUNCTION_11
0x4001f77	            0x415c	                                 pop r12	       765	undo.c	FUNCTION_11
0x4001f79	            0x415d	                                 pop r13	       765	undo.c	FUNCTION_11
0x4001f7b	              0xc3	                                     ret	       765	undo.c	FUNCTION_11
u_unchanged	ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,1:WHILE,0:IF,0:DO,0	7
0x4003877	              0x53	                                push rbx	      3161	undo.c	ELSE_1	FUNCTION_47
0x4003878	          0x4889fb	                            mov rbx, rdi	      3161	undo.c	ELSE_1	FUNCTION_47
0x400387b	    0x488bbf181200	          mov rdi, qword [rdi + 0x1218] 	      3162	undo.c	ELSE_1	FUNCTION_47	CALL_1
0x4003882	      0xe8d6c7ffff	                  call sym.u_unch_branch	      3162	undo.c	ELSE_1	FUNCTION_47	CALL_1
0x4003887	    0xc78354170000	            mov dword [rbx + 0x1754], 0 	      3163	undo.c	ELSE_1	FUNCTION_47
0x4003891	              0x5b	                                 pop rbx	      3164	undo.c	ELSE_1	FUNCTION_47
0x4003892	              0xc3	                                     ret	      3164	undo.c	ELSE_1	FUNCTION_47
u_blockfree	ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,2:WHILE,1:IF,0:DO,0	15
0x4003c5b	              0x53	                                push rbx	      3503	undo.c	FUNCTION_61
0x4003c5c	          0x4889fb	                            mov rbx, rdi	      3503	undo.c	FUNCTION_61
0x4003c5f	    0x488bb7181200	          mov rsi, qword [rdi + 0x1218] 	      3504	undo.c	FUNCTION_61	WHILE_1
0x4003c66	          0x4885f6	                           test rsi, rsi	      3504	undo.c	FUNCTION_61	WHILE_1
0x4003c69	            0x7419	                            je 0x4003c84	      3504	undo.c	FUNCTION_61	WHILE_1
0x4003c6b	      0xba00000000	                              mov edx, 0	      3505	undo.c	FUNCTION_61	CALL_1
0x4003c70	          0x4889df	                            mov rdi, rbx	      3505	undo.c	FUNCTION_61	CALL_1
0x4003c73	      0xe8ccc4ffff	                   call sym.u_freeheader	      3505	undo.c	FUNCTION_61	CALL_1
0x4003c78	    0x488bb3181200	          mov rsi, qword [rbx + 0x1218] 	      3504	undo.c	FUNCTION_61	WHILE_1
0x4003c7f	          0x4885f6	                           test rsi, rsi	      3504	undo.c	FUNCTION_61	WHILE_1
0x4003c82	            0x75e7	                           jne 0x4003c6b	      3504	undo.c	FUNCTION_61	WHILE_1
0x4003c84	    0x488bbb601200	          mov rdi, qword [rbx + 0x1260] 	      3506	undo.c	FUNCTION_61	CALL_2
0x4003c8b	      0xe800000000	                          call 0x4003c90	      3506	undo.c	FUNCTION_61	CALL_2
0x4003c90	              0x5b	                                 pop rbx	      3507	undo.c	FUNCTION_61
0x4003c91	              0xc3	                                     ret	      3507	undo.c	FUNCTION_61
u_savecommon	ELSE,11:functions,0:SWITCH,0:FOR,2:CALL,37:WHILE,2:IF,37:DO,0	415
0x4001701	            0x4157	                                push r15	       387	undo.c	FUNCTION_10
0x4001703	            0x4156	                                push r14	       387	undo.c	FUNCTION_10
0x4001705	            0x4155	                                push r13	       387	undo.c	FUNCTION_10
0x4001707	            0x4154	                                push r12	       387	undo.c	FUNCTION_10
0x4001709	              0x55	                                push rbp	       387	undo.c	FUNCTION_10
0x400170a	              0x53	                                push rbx	       387	undo.c	FUNCTION_10
0x400170b	        0x4883ec28	                           sub rsp, 0x28	       387	undo.c	FUNCTION_10
0x400170f	          0x4889fd	                            mov rbp, rdi	       387	undo.c	FUNCTION_10
0x4001712	          0x4989f7	                            mov r15, rsi	       387	undo.c	FUNCTION_10
0x4001715	      0x4889542408	                mov qword [rsp + 8], rdx	       387	undo.c	FUNCTION_10
0x400171a	    0x64488b042528	                mov rax, qword fs:[0x28]	       387	undo.c	FUNCTION_10
0x4001723	      0x4889442418	             mov qword [rsp + 0x18], rax	       387	undo.c	FUNCTION_10
0x4001728	            0x31c0	                            xor eax, eax	       387	undo.c	FUNCTION_10
0x400172a	            0x85c9	                           test ecx, ecx	       396	undo.c	FUNCTION_10	IF_1
0x400172c	     0xf85c8000000	                           jne 0x40017fa	       396	undo.c	FUNCTION_10	IF_1
0x4001732	      0xe800000000	                          call 0x4001737	       400	undo.c	FUNCTION_10	IF_1	IF_2	CALL_1
0x4001737	            0x89c3	                            mov ebx, eax	       400	undo.c	FUNCTION_10	IF_1	IF_2	CALL_1
0x4001739	            0x85c0	                           test eax, eax	       400	undo.c	FUNCTION_10	IF_1	IF_2	CALL_1
0x400173b	     0xf84e0060000	                            je 0x4001e21	       400	undo.c	FUNCTION_10	IF_1	IF_2	CALL_1
0x4001741	      0xe800000000	                          call 0x4001746	       408	undo.c	FUNCTION_10	IF_1	IF_3	CALL_2
0x4001746	            0x85c0	                           test eax, eax	       408	undo.c	FUNCTION_10	IF_1	IF_3	CALL_2
0x4001748	            0x7468	                            je 0x40017b2	       408	undo.c	FUNCTION_10	IF_1	IF_3	CALL_2
0x400174a	          0x4c89fe	                            mov rsi, r15	       410	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_3
0x400174d	          0x4889ef	                            mov rdi, rbp	       410	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_3
0x4001750	      0xe800000000	                          call 0x4001755	       410	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_3
0x4001755	            0x89c3	                            mov ebx, eax	       410	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_3
0x4001757	            0x85c0	                           test eax, eax	       410	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_3
0x4001759	            0x7426	                            je 0x4001781	       410	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_3
0x400175b	      0xba05000000	                              mov edx, 5	       412	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_5
0x4001760	      0xbe00000000	                              mov esi, 0	       412	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_5
0x4001765	      0xbf00000000	                              mov edi, 0	       412	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_5
0x400176a	      0xe800000000	                          call 0x400176f	       412	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_5
0x400176f	          0x4889c7	                            mov rdi, rax	       412	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_5
0x4001772	      0xe800000000	                          call 0x4001777	       412	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_5
0x4001777	      0xbb00000000	                              mov ebx, 0	       413	undo.c	FUNCTION_10	IF_1	IF_3	IF_4
0x400177c	      0xe9a0060000	                           jmp 0x4001e21	       413	undo.c	FUNCTION_10	IF_1	IF_3	IF_4
0x4001781	    0x488b05000000	            mov rax, qword [0x04001788] 	       415	undo.c	FUNCTION_10	IF_1	IF_3	IF_5
0x4001788	    0x83b860150000	             cmp dword [rax + 0x1560], 0	       415	undo.c	FUNCTION_10	IF_1	IF_3	IF_5
0x400178f	            0x7421	                            je 0x40017b2	       415	undo.c	FUNCTION_10	IF_1	IF_3	IF_5
0x4001791	      0xba05000000	                              mov edx, 5	       417	undo.c	FUNCTION_10	IF_1	IF_3	IF_5	CALL_7
0x4001796	      0xbe00000000	                              mov esi, 0	       417	undo.c	FUNCTION_10	IF_1	IF_3	IF_5	CALL_7
0x400179b	      0xbf00000000	                              mov edi, 0	       417	undo.c	FUNCTION_10	IF_1	IF_3	IF_5	CALL_7
0x40017a0	      0xe800000000	                          call 0x40017a5	       417	undo.c	FUNCTION_10	IF_1	IF_3	IF_5	CALL_7
0x40017a5	          0x4889c7	                            mov rdi, rax	       417	undo.c	FUNCTION_10	IF_1	IF_3	IF_5	CALL_7
0x40017a8	      0xe800000000	                          call 0x40017ad	       417	undo.c	FUNCTION_10	IF_1	IF_3	IF_5	CALL_7
0x40017ad	      0xe96f060000	                           jmp 0x4001e21	       418	undo.c	FUNCTION_10	IF_1	IF_3	IF_5
0x40017b2	      0xe800000000	                          call 0x40017b7	       424	undo.c	FUNCTION_10	IF_1	CALL_8
0x40017b7	      0xbf00000000	                              mov edi, 0	       433	undo.c	FUNCTION_10	IF_1	CALL_9
0x40017bc	      0xe800000000	                          call 0x40017c1	       433	undo.c	FUNCTION_10	IF_1	CALL_9
0x40017c1	    0x488b05000000	            mov rax, qword [0x040017c8] 	       434	undo.c	FUNCTION_10	IF_1	IF_6
0x40017c8	          0x488b00	                    mov rax, qword [rax]	       434	undo.c	FUNCTION_10	IF_1	IF_6
0x40017cb	        0x4883c001	                              add rax, 1	       434	undo.c	FUNCTION_10	IF_1	IF_6
0x40017cf	          0x4939c7	                            cmp r15, rax	       434	undo.c	FUNCTION_10	IF_1	IF_6
0x40017d2	            0x7e26	                           jle 0x40017fa	       434	undo.c	FUNCTION_10	IF_1	IF_6
0x40017d4	      0xba05000000	                              mov edx, 5	       438	undo.c	FUNCTION_10	IF_1	IF_6	CALL_11
0x40017d9	      0xbe00000000	                              mov esi, 0	       438	undo.c	FUNCTION_10	IF_1	IF_6	CALL_11
0x40017de	      0xbf00000000	                              mov edi, 0	       438	undo.c	FUNCTION_10	IF_1	IF_6	CALL_11
0x40017e3	      0xe800000000	                          call 0x40017e8	       438	undo.c	FUNCTION_10	IF_1	IF_6	CALL_11
0x40017e8	          0x4889c7	                            mov rdi, rax	       438	undo.c	FUNCTION_10	IF_1	IF_6	CALL_11
0x40017eb	      0xe800000000	                          call 0x40017f0	       438	undo.c	FUNCTION_10	IF_1	IF_6	CALL_11
0x40017f0	      0xbb00000000	                              mov ebx, 0	       439	undo.c	FUNCTION_10	IF_1	IF_6
0x40017f5	      0xe927060000	                           jmp 0x4001e21	       439	undo.c	FUNCTION_10	IF_1	IF_6
0x40017fa	          0x4d89fd	                            mov r13, r15	       447	undo.c	FUNCTION_10
0x40017fd	          0x4929ed	                            sub r13, rbp	       447	undo.c	FUNCTION_10
0x4001800	        0x4d8d75ff	                      lea r14, [r13 - 1]	       447	undo.c	FUNCTION_10
0x4001804	    0x488b05000000	            mov rax, qword [0x0400180b] 	       452	undo.c	FUNCTION_10	IF_7
0x400180b	    0x83b834120000	             cmp dword [rax + 0x1234], 0	       452	undo.c	FUNCTION_10	IF_7
0x4001812	     0xf84cf020000	                            je 0x4001ae7	       452	undo.c	FUNCTION_10	IF_7
0x4001818	    0xc7809c090000	              mov dword [rax + 0x99c], 1	       456	undo.c	FUNCTION_10	IF_7
0x4001822	      0xe819e8ffff	                  call sym.get_undolevel	       459	undo.c	FUNCTION_10	IF_7	IF_8	CALL_13
0x4001827	          0x4885c0	                           test rax, rax	       459	undo.c	FUNCTION_10	IF_7	IF_8	CALL_13
0x400182a	            0x781c	                            js 0x4001848	       459	undo.c	FUNCTION_10	IF_7	IF_8	CALL_13
0x400182c	      0xbe00000000	                              mov esi, 0	       465	undo.c	FUNCTION_10	IF_7	IF_8
0x4001831	      0xbf38020000	                          mov edi, 0x238	       465	undo.c	FUNCTION_10	IF_7	IF_8
0x4001836	      0xe800000000	                          call 0x400183b	       465	undo.c	FUNCTION_10	IF_7	IF_8
0x400183b	          0x4989c4	                            mov r12, rax	       465	undo.c	FUNCTION_10	IF_7	IF_8
0x400183e	          0x4885c0	                           test rax, rax	       466	undo.c	FUNCTION_10	IF_7	IF_8	IF_9
0x4001841	            0x750b	                           jne 0x400184e	       466	undo.c	FUNCTION_10	IF_7	IF_8	IF_9
0x4001843	      0xe982050000	                           jmp 0x4001dca	       466	undo.c	FUNCTION_10	IF_7	IF_8	IF_9
0x4001848	    0x41bc00000000	                             mov r12d, 0	       473	undo.c	FUNCTION_10	IF_7	ELSE_1
0x400184e	    0x488b15000000	            mov rdx, qword [0x04001855] 	       479	undo.c	FUNCTION_10	IF_7	ELSE_1
0x4001855	    0x488b82281200	          mov rax, qword [rdx + 0x1228] 	       479	undo.c	FUNCTION_10	IF_7	ELSE_1
0x400185c	      0x4889442410	             mov qword [rsp + 0x10], rax	       479	undo.c	FUNCTION_10	IF_7	ELSE_1
0x4001861	          0x4885c0	                           test rax, rax	       480	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x4001864	            0x745c	                            je 0x40018c2	       480	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x4001866	          0x488b00	                    mov rax, qword [rax]	       482	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x4001869	    0x488982201200	          mov qword [rdx + 0x1220], rax 	       482	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x4001870	    0x48c782281200	            mov qword [rdx + 0x1228], 0 	       483	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x400187b	            0xeb45	                           jmp 0x40018c2	       483	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x400187d	      0x483b742410	            cmp rsi, qword [rsp + 0x10] 	       494	undo.c	FUNCTION_10	IF_7	WHILE_1	IF_11
0x4001882	            0x750f	                           jne 0x4001893	       494	undo.c	FUNCTION_10	IF_7	WHILE_1	IF_11
0x4001884	      0x488d542410	                   lea rdx, [rsp + 0x10]	       496	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_15
0x4001889	          0x4889df	                            mov rdi, rbx	       496	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_15
0x400188c	      0xe833e9ffff	                   call sym.u_freebranch	       496	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_15
0x4001891	            0xeb2f	                           jmp 0x40018c2	       496	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_15
0x4001893	      0x48837e1000	               cmp qword [rsi + 0x10], 0	       497	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x4001898	            0x7512	                           jne 0x40018ac	       497	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x400189a	      0x488d542410	                   lea rdx, [rsp + 0x10]	       499	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x400189f	          0x4889df	                            mov rdi, rbx	       499	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x40018a2	      0xe89de8ffff	                   call sym.u_freeheader	       499	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x40018a7	            0xeb19	                           jmp 0x40018c2	       499	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x40018a9	          0x4889c6	                            mov rsi, rax	       504	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	WHILE_2
0x40018ac	        0x488b4610	            mov rax, qword [rsi + 0x10] 	       503	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	WHILE_2
0x40018b0	          0x4885c0	                           test rax, rax	       503	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	WHILE_2
0x40018b3	            0x75f4	                           jne 0x40018a9	       503	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	WHILE_2
0x40018b5	      0x488d542410	                   lea rdx, [rsp + 0x10]	       505	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	CALL_17
0x40018ba	          0x4889df	                            mov rdi, rbx	       505	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	CALL_17
0x40018bd	      0xe802e9ffff	                   call sym.u_freebranch	       505	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	CALL_17
0x40018c2	    0x488b1d000000	            mov rbx, qword [0x040018c9] 	       489	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_14
0x40018c9	      0xe872e7ffff	                  call sym.get_undolevel	       489	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_14
0x40018ce	    0x486393301200	       movsxd rdx, dword [rbx + 0x1230] 	       489	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_14
0x40018d5	          0x4839c2	                            cmp rdx, rax	       489	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_14
0x40018d8	            0x7e0c	                           jle 0x40018e6	       489	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_14
0x40018da	    0x488bb3181200	          mov rsi, qword [rbx + 0x1218] 	       490	undo.c	FUNCTION_10	IF_7	WHILE_1
0x40018e1	          0x4885f6	                           test rsi, rsi	       490	undo.c	FUNCTION_10	IF_7	WHILE_1
0x40018e4	            0x7597	                           jne 0x400187d	       490	undo.c	FUNCTION_10	IF_7	WHILE_1
0x40018e6	          0x4d85e4	                           test r12, r12	       512	undo.c	FUNCTION_10	IF_7	IF_13
0x40018e9	            0x7532	                           jne 0x400191d	       512	undo.c	FUNCTION_10	IF_7	IF_13
0x40018eb	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       514	undo.c	FUNCTION_10	IF_7	IF_13	IF_14
0x40018f0	          0x4885f6	                           test rsi, rsi	       514	undo.c	FUNCTION_10	IF_7	IF_13	IF_14
0x40018f3	            0x740d	                            je 0x4001902	       514	undo.c	FUNCTION_10	IF_7	IF_13	IF_14
0x40018f5	      0xba00000000	                              mov edx, 0	       515	undo.c	FUNCTION_10	IF_7	IF_13	CALL_19
0x40018fa	          0x4889df	                            mov rdi, rbx	       515	undo.c	FUNCTION_10	IF_7	IF_13	CALL_19
0x40018fd	      0xe8c2e8ffff	                   call sym.u_freebranch	       515	undo.c	FUNCTION_10	IF_7	IF_13	CALL_19
0x4001902	    0x488b05000000	            mov rax, qword [0x04001909] 	       516	undo.c	FUNCTION_10	IF_7	IF_13
0x4001909	    0xc78034120000	            mov dword [rax + 0x1234], 0 	       516	undo.c	FUNCTION_10	IF_7	IF_13
0x4001913	      0xbb01000000	                              mov ebx, 1	       517	undo.c	FUNCTION_10	IF_7	IF_13
0x4001918	      0xe904050000	                           jmp 0x4001e21	       517	undo.c	FUNCTION_10	IF_7	IF_13
0x400191d	    0x49c744240800	                  mov qword [r12 + 8], 0	       520	undo.c	FUNCTION_10	IF_7
0x4001926	    0x488b83201200	          mov rax, qword [rbx + 0x1220] 	       521	undo.c	FUNCTION_10	IF_7
0x400192d	        0x49890424	                    mov qword [r12], rax	       521	undo.c	FUNCTION_10	IF_7
0x4001931	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       522	undo.c	FUNCTION_10	IF_7
0x4001936	      0x4989442410	             mov qword [r12 + 0x10], rax	       522	undo.c	FUNCTION_10	IF_7
0x400193b	          0x4885c0	                           test rax, rax	       523	undo.c	FUNCTION_10	IF_7	IF_15
0x400193e	            0x742f	                            je 0x400196f	       523	undo.c	FUNCTION_10	IF_7	IF_15
0x4001940	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       525	undo.c	FUNCTION_10	IF_7	IF_15
0x4001944	      0x4989542418	             mov qword [r12 + 0x18], rdx	       525	undo.c	FUNCTION_10	IF_7	IF_15
0x4001949	          0x4885d2	                           test rdx, rdx	       526	undo.c	FUNCTION_10	IF_7	IF_15	IF_16
0x400194c	            0x7404	                            je 0x4001952	       526	undo.c	FUNCTION_10	IF_7	IF_15	IF_16
0x400194e	        0x4c896210	             mov qword [rdx + 0x10], r12	       527	undo.c	FUNCTION_10	IF_7	IF_15	IF_16
0x4001952	        0x4c896018	             mov qword [rax + 0x18], r12	       528	undo.c	FUNCTION_10	IF_7	IF_15
0x4001956	    0x488b15000000	            mov rdx, qword [0x0400195d] 	       529	undo.c	FUNCTION_10	IF_7	IF_15	IF_17
0x400195d	    0x483b82181200	          cmp rax, qword [rdx + 0x1218] 	       529	undo.c	FUNCTION_10	IF_7	IF_15	IF_17
0x4001964	            0x7512	                           jne 0x4001978	       529	undo.c	FUNCTION_10	IF_7	IF_15	IF_17
0x4001966	    0x4c89a2181200	          mov qword [rdx + 0x1218], r12 	       530	undo.c	FUNCTION_10	IF_7	IF_15	IF_17
0x400196d	            0xeb09	                           jmp 0x4001978	       530	undo.c	FUNCTION_10	IF_7	IF_15	IF_17
0x400196f	    0x49c744241800	               mov qword [r12 + 0x18], 0	       533	undo.c	FUNCTION_10	IF_7	ELSE_4
0x4001978	    0x488b15000000	            mov rdx, qword [0x0400197f] 	       534	undo.c	FUNCTION_10	IF_7	IF_18
0x400197f	    0x488b82201200	          mov rax, qword [rdx + 0x1220] 	       534	undo.c	FUNCTION_10	IF_7	IF_18
0x4001986	          0x4885c0	                           test rax, rax	       534	undo.c	FUNCTION_10	IF_7	IF_18
0x4001989	            0x7404	                            je 0x400198f	       534	undo.c	FUNCTION_10	IF_7	IF_18
0x400198b	        0x4c896008	                mov qword [rax + 8], r12	       535	undo.c	FUNCTION_10	IF_7	IF_18
0x400198f	    0x488b82381200	          mov rax, qword [rdx + 0x1238] 	       537	undo.c	FUNCTION_10	IF_7
0x4001996	        0x4883c001	                              add rax, 1	       537	undo.c	FUNCTION_10	IF_7
0x400199a	    0x488982381200	          mov qword [rdx + 0x1238], rax 	       537	undo.c	FUNCTION_10	IF_7
0x40019a1	      0x4989442420	             mov qword [r12 + 0x20], rax	       537	undo.c	FUNCTION_10	IF_7
0x40019a6	    0x488982481200	          mov qword [rdx + 0x1248], rax 	       538	undo.c	FUNCTION_10	IF_7
0x40019ad	      0xe800000000	                          call 0x40019b2	       539	undo.c	FUNCTION_10	IF_7	CALL_20
0x40019b2	    0x498984242802	            mov qword [r12 + 0x228], rax	       539	undo.c	FUNCTION_10	IF_7	CALL_20
0x40019ba	    0x49c784243002	              mov qword [r12 + 0x230], 0	       540	undo.c	FUNCTION_10	IF_7
0x40019c6	        0x4883c001	                              add rax, 1	       541	undo.c	FUNCTION_10	IF_7
0x40019ca	    0x488b15000000	            mov rdx, qword [0x040019d1] 	       541	undo.c	FUNCTION_10	IF_7
0x40019d1	    0x488982501200	          mov qword [rdx + 0x1250], rax 	       541	undo.c	FUNCTION_10	IF_7
0x40019d8	    0x41c744242800	               mov dword [r12 + 0x28], 0	       543	undo.c	FUNCTION_10	IF_7
0x40019e1	    0x49c744243000	               mov qword [r12 + 0x30], 0	       544	undo.c	FUNCTION_10	IF_7
0x40019ea	    0x49c744243800	               mov qword [r12 + 0x38], 0	       545	undo.c	FUNCTION_10	IF_7
0x40019f3	    0x488b05000000	            mov rax, qword [0x040019fa] 	       546	undo.c	FUNCTION_10	IF_7
0x40019fa	        0x488b5040	            mov rdx, qword [rax + 0x40] 	       546	undo.c	FUNCTION_10	IF_7
0x40019fe	        0x488b4038	            mov rax, qword [rax + 0x38] 	       546	undo.c	FUNCTION_10	IF_7
0x4001a02	      0x4989442440	             mov qword [r12 + 0x40], rax	       546	undo.c	FUNCTION_10	IF_7
0x4001a07	      0x4989542448	             mov qword [r12 + 0x48], rdx	       546	undo.c	FUNCTION_10	IF_7
0x4001a0c	      0xe800000000	                          call 0x4001a11	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_21
0x4001a11	            0x85c0	                           test eax, eax	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_21
0x4001a13	            0x741b	                            je 0x4001a30	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_21
0x4001a15	    0x488b05000000	            mov rax, qword [0x04001a1c] 	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_21
0x4001a1c	        0x83784400	               cmp dword [rax + 0x44], 0	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_21
0x4001a20	            0x7e0e	                           jle 0x4001a30	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_21
0x4001a22	      0xe800000000	                          call 0x4001a27	       549	undo.c	FUNCTION_10	IF_7	CALL_22
0x4001a27	            0x4898	                                    cdqe	       549	undo.c	FUNCTION_10	IF_7	CALL_22
0x4001a29	      0x4989442450	             mov qword [r12 + 0x50], rax	       549	undo.c	FUNCTION_10	IF_7	CALL_22
0x4001a2e	            0xeb09	                           jmp 0x4001a39	       549	undo.c	FUNCTION_10	IF_7	CALL_22
0x4001a30	    0x49c7442450ff	mov qword [r12 + 0x50], 0xffffffffffffffff	       551	undo.c	FUNCTION_10	IF_7	ELSE_5
0x4001a39	    0x488b1d000000	            mov rbx, qword [0x04001a40] 	       555	undo.c	FUNCTION_10	IF_7
0x4001a40	    0x83bbc8000000	               cmp dword [rbx + 0xc8], 0	       555	undo.c	FUNCTION_10	IF_7
0x4001a47	           0xf95c2	                                setne dl	       555	undo.c	FUNCTION_10	IF_7
0x4001a4a	           0xfb6d2	                           movzx edx, dl	       555	undo.c	FUNCTION_10	IF_7
0x4001a4d	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       556	undo.c	FUNCTION_10	IF_7
0x4001a50	          0x83e001	                              and eax, 1	       556	undo.c	FUNCTION_10	IF_7
0x4001a53	      0xb902000000	                              mov ecx, 2	       556	undo.c	FUNCTION_10	IF_7
0x4001a58	           0xf45c1	                         cmovne eax, ecx	       556	undo.c	FUNCTION_10	IF_7
0x4001a5b	             0x1d0	                            add eax, edx	       555	undo.c	FUNCTION_10	IF_7
0x4001a5d	      0x4189442458	             mov dword [r12 + 0x58], eax	       555	undo.c	FUNCTION_10	IF_7
0x4001a62	    0x488db3580100	                  lea rsi, [rbx + 0x158]	        59	string3.h	FUNCTION_85	CALL_3
0x4001a69	      0x498d7c2460	                   lea rdi, [r12 + 0x60]	        59	string3.h	FUNCTION_85	CALL_3
0x4001a6e	      0xbaa0010000	                          mov edx, 0x1a0	        59	string3.h	FUNCTION_85	CALL_3
0x4001a73	      0xe800000000	                          call 0x4001a78	        59	string3.h	FUNCTION_85	CALL_3
0x4001a78	    0x488b83f80200	           mov rax, qword [rbx + 0x2f8] 	       560	undo.c	FUNCTION_10	IF_7
0x4001a7f	    0x498984240002	            mov qword [r12 + 0x200], rax	       560	undo.c	FUNCTION_10	IF_7
0x4001a87	    0x488b83000300	           mov rax, qword [rbx + 0x300] 	       560	undo.c	FUNCTION_10	IF_7
0x4001a8e	    0x498984240802	            mov qword [r12 + 0x208], rax	       560	undo.c	FUNCTION_10	IF_7
0x4001a96	    0x488b83080300	           mov rax, qword [rbx + 0x308] 	       560	undo.c	FUNCTION_10	IF_7
0x4001a9d	    0x498984241002	            mov qword [r12 + 0x210], rax	       560	undo.c	FUNCTION_10	IF_7
0x4001aa5	    0x488b83100300	           mov rax, qword [rbx + 0x310] 	       560	undo.c	FUNCTION_10	IF_7
0x4001aac	    0x498984241802	            mov qword [r12 + 0x218], rax	       560	undo.c	FUNCTION_10	IF_7
0x4001ab4	    0x488b83180300	           mov rax, qword [rbx + 0x318] 	       560	undo.c	FUNCTION_10	IF_7
0x4001abb	    0x498984242002	            mov qword [r12 + 0x220], rax	       560	undo.c	FUNCTION_10	IF_7
0x4001ac3	    0x4c89a3201200	          mov qword [rbx + 0x1220], r12 	       562	undo.c	FUNCTION_10	IF_7
0x4001aca	    0x4883bb181200	             cmp qword [rbx + 0x1218], 0	       563	undo.c	FUNCTION_10	IF_7	IF_20
0x4001ad2	            0x7507	                           jne 0x4001adb	       563	undo.c	FUNCTION_10	IF_7	IF_20
0x4001ad4	    0x4c89a3181200	          mov qword [rbx + 0x1218], r12 	       564	undo.c	FUNCTION_10	IF_7	IF_20
0x4001adb	    0x838330120000	             add dword [rbx + 0x1230], 1	       565	undo.c	FUNCTION_10	IF_7
0x4001ae2	      0xe978010000	                           jmp 0x4001c5f	       565	undo.c	FUNCTION_10	IF_7
0x4001ae7	      0xe854e5ffff	                  call sym.get_undolevel	       569	undo.c	FUNCTION_10	ELSE_6	IF_21	CALL_24
0x4001aec	          0x4885c0	                           test rax, rax	       569	undo.c	FUNCTION_10	ELSE_6	IF_21	CALL_24
0x4001aef	     0xf8827030000	                            js 0x4001e1c	       569	undo.c	FUNCTION_10	ELSE_6	IF_21	CALL_24
0x4001af5	        0x4983fe01	                              cmp r14, 1	       581	undo.c	FUNCTION_10	ELSE_6	IF_22
0x4001af9	     0xf855b010000	                           jne 0x4001c5a	       581	undo.c	FUNCTION_10	ELSE_6	IF_22
0x4001aff	      0xe884e7ffff	                call sym.u_get_headentry	       583	undo.c	FUNCTION_10	ELSE_6	IF_22	CALL_25
0x4001b04	          0x4889c3	                            mov rbx, rax	       583	undo.c	FUNCTION_10	ELSE_6	IF_22	CALL_25
0x4001b07	          0x4885c0	                           test rax, rax	       587	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_23
0x4001b0a	     0xf844a010000	                            je 0x4001c5a	       587	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_23
0x4001b10	    0x488b3d000000	            mov rdi, qword [0x04001b17] 	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001b17	    0x488b87201200	          mov rax, qword [rdi + 0x1220] 	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001b1e	        0x488b7038	            mov rsi, qword [rax + 0x38] 	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001b22	    0x41bc00000000	                             mov r12d, 0	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001b28	      0xb900000000	                              mov ecx, 0	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001b2d	        0x4c8d4502	                       lea r8, [rbp + 2]	       600	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001b31	            0xeb03	                           jmp 0x4001b36	       600	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001b33	          0x4889c3	                            mov rbx, rax	       638	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x4001b36	          0x4839de	                            cmp rsi, rbx	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001b39	            0x7426	                            je 0x4001b61	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001b3b	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       593	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001b3f	        0x48034308	                add rax, qword [rbx + 8]	       593	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001b43	        0x4883c001	                              add rax, 1	       593	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001b47	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       594	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001b4b	          0x4885d2	                           test rdx, rdx	       596	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001b4e	            0x7507	                           jne 0x4001b57	       596	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001b50	          0x488b17	                    mov rdx, qword [rdi]	       596	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001b53	        0x4883c201	                              add rdx, 1	       596	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001b57	          0x4839c2	                            cmp rdx, rax	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001b5a	            0x7412	                            je 0x4001b6e	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001b5c	      0xe9f9000000	                           jmp 0x4001c5a	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001b61	          0x488b07	                    mov rax, qword [rdi]	       598	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001b64	        0x48394318	            cmp qword [rbx + 0x18], rax 	       598	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001b68	     0xf85ec000000	                           jne 0x4001c5a	       598	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001b6e	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       598	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001b72	        0x4883f801	                              cmp rax, 1	       598	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001b76	            0x7e17	                           jle 0x4001b8f	       598	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001b78	        0x488b5308	                mov rdx, qword [rbx + 8]	       599	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001b7c	          0x4839d5	                            cmp rbp, rdx	       599	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001b7f	            0x7c0e	                            jl 0x4001b8f	       599	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001b81	      0x488d541001	                lea rdx, [rax + rdx + 1]	       600	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001b86	          0x4939d0	                             cmp r8, rdx	       600	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001b89	     0xf8ecb000000	                           jle 0x4001c5a	       600	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001b8f	        0x4883f801	                              cmp rax, 1	       604	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x4001b93	     0xf85a8000000	                           jne 0x4001c41	       604	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x4001b99	        0x483b6b08	                cmp rbp, qword [rbx + 8]	       604	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x4001b9d	     0xf859e000000	                           jne 0x4001c41	       604	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x4001ba3	          0x4885c9	                           test rcx, rcx	       606	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4001ba6	            0x7e44	                           jle 0x4001bec	       606	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4001ba8	      0xe821e7ffff	                       call sym.u_getbot	       611	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26	CALL_26
0x4001bad	    0x488b05000000	            mov rax, qword [0x04001bb4] 	       612	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4001bb4	    0xc78034120000	            mov dword [rax + 0x1234], 0 	       612	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4001bbe	          0x488b03	                    mov rax, qword [rbx]	       620	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4001bc1	        0x49890424	                    mov qword [r12], rax	       620	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4001bc5	    0x488b05000000	            mov rax, qword [0x04001bcc] 	       621	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4001bcc	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	       621	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4001bd3	        0x488b4030	            mov rax, qword [rax + 0x30] 	       621	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4001bd7	          0x488903	                    mov qword [rbx], rax	       621	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4001bda	    0x488b05000000	            mov rax, qword [0x04001be1] 	       622	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4001be1	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	       622	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4001be8	        0x48895830	             mov qword [rax + 0x30], rbx	       622	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4001bec	    0x48837c240800	                  cmp qword [rsp + 8], 0	       626	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_27
0x4001bf2	            0x7413	                            je 0x4001c07	       626	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_27
0x4001bf4	      0x488b442408	                mov rax, qword [rsp + 8]	       627	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_27
0x4001bf9	        0x48894310	             mov qword [rbx + 0x10], rax	       627	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_27
0x4001bfd	      0xbb01000000	                              mov ebx, 1	       635	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x4001c02	      0xe91a020000	                           jmp 0x4001e21	       635	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x4001c07	    0x488b05000000	            mov rax, qword [0x04001c0e] 	       628	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_7	IF_28
0x4001c0e	          0x488b10	                    mov rdx, qword [rax]	       628	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_7	IF_28
0x4001c11	          0x4939d7	                            cmp r15, rdx	       628	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_7	IF_28
0x4001c14	            0x7e12	                           jle 0x4001c28	       628	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_7	IF_28
0x4001c16	    0x48c743100000	               mov qword [rbx + 0x10], 0	       629	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_7	IF_28
0x4001c1e	      0xbb01000000	                              mov ebx, 1	       635	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x4001c23	      0xe9f9010000	                           jmp 0x4001e21	       635	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x4001c28	        0x48895318	             mov qword [rbx + 0x18], rdx	       632	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_8
0x4001c2c	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	       633	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_8
0x4001c33	        0x48895838	             mov qword [rax + 0x38], rbx	       633	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_8
0x4001c37	      0xbb01000000	                              mov ebx, 1	       635	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x4001c3c	      0xe9e0010000	                           jmp 0x4001e21	       635	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x4001c41	          0x488b03	                    mov rax, qword [rbx]	       638	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x4001c44	        0x4883c101	                              add rcx, 1	       585	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x4001c48	          0x4989dc	                            mov r12, rbx	       585	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x4001c4b	        0x4883f909	                              cmp rcx, 9	       587	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_23
0x4001c4f	            0x7f09	                            jg 0x4001c5a	       587	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_23
0x4001c51	          0x4885c0	                           test rax, rax	       587	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_23
0x4001c54	     0xf85d9feffff	                           jne 0x4001b33	       587	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_23
0x4001c5a	      0xe86fe6ffff	                       call sym.u_getbot	       643	undo.c	FUNCTION_10	ELSE_6	CALL_27
0x4001c5f	      0xbe00000000	                              mov esi, 0	       658	undo.c	FUNCTION_10
0x4001c64	      0xbf30000000	                           mov edi, 0x30	       658	undo.c	FUNCTION_10
0x4001c69	      0xe800000000	                          call 0x4001c6e	       658	undo.c	FUNCTION_10
0x4001c6e	          0x4889c3	                            mov rbx, rax	       658	undo.c	FUNCTION_10
0x4001c71	          0x4885c0	                           test rax, rax	       659	undo.c	FUNCTION_10	IF_30
0x4001c74	     0xf8450010000	                            je 0x4001dca	       659	undo.c	FUNCTION_10	IF_30
0x4001c7a	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_87	CALL_6
0x4001c81	        0x488d7808	                      lea rdi, [rax + 8]	        90	string3.h	FUNCTION_87	CALL_6
0x4001c85	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_87	CALL_6
0x4001c89	          0x4889c1	                            mov rcx, rax	        90	string3.h	FUNCTION_87	CALL_6
0x4001c8c	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_87	CALL_6
0x4001c8f	          0x83c130	                           add ecx, 0x30	        90	string3.h	FUNCTION_87	CALL_6
0x4001c92	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_87	CALL_6
0x4001c95	            0x89c9	                            mov ecx, ecx	        90	string3.h	FUNCTION_87	CALL_6
0x4001c97	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_87	CALL_6
0x4001c9c	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_87	CALL_6
0x4001c9f	        0x4c897328	             mov qword [rbx + 0x28], r14	       666	undo.c	FUNCTION_10
0x4001ca3	        0x48896b08	                mov qword [rbx + 8], rbp	       667	undo.c	FUNCTION_10
0x4001ca7	      0x488b442408	                mov rax, qword [rsp + 8]	       668	undo.c	FUNCTION_10	IF_31
0x4001cac	          0x4885c0	                           test rax, rax	       668	undo.c	FUNCTION_10	IF_31
0x4001caf	            0x7406	                            je 0x4001cb7	       668	undo.c	FUNCTION_10	IF_31
0x4001cb1	        0x48894310	             mov qword [rbx + 0x10], rax	       669	undo.c	FUNCTION_10	IF_31
0x4001cb5	            0xeb28	                           jmp 0x4001cdf	       669	undo.c	FUNCTION_10	IF_31
0x4001cb7	    0x488b05000000	            mov rax, qword [0x04001cbe] 	       674	undo.c	FUNCTION_10	ELSE_9	IF_32
0x4001cbe	          0x488b10	                    mov rdx, qword [rax]	       674	undo.c	FUNCTION_10	ELSE_9	IF_32
0x4001cc1	          0x4939d7	                            cmp r15, rdx	       674	undo.c	FUNCTION_10	ELSE_9	IF_32
0x4001cc4	            0x7e0a	                           jle 0x4001cd0	       674	undo.c	FUNCTION_10	ELSE_9	IF_32
0x4001cc6	    0x48c743100000	               mov qword [rbx + 0x10], 0	       675	undo.c	FUNCTION_10	ELSE_9	IF_32
0x4001cce	            0xeb0f	                           jmp 0x4001cdf	       675	undo.c	FUNCTION_10	ELSE_9	IF_32
0x4001cd0	        0x48895318	             mov qword [rbx + 0x18], rdx	       678	undo.c	FUNCTION_10	ELSE_10
0x4001cd4	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	       679	undo.c	FUNCTION_10	ELSE_10
0x4001cdb	        0x48895838	             mov qword [rax + 0x38], rbx	       679	undo.c	FUNCTION_10	ELSE_10
0x4001cdf	          0x4d85f6	                           test r14, r14	       682	undo.c	FUNCTION_10	IF_33
0x4001ce2	     0xf8e98000000	                           jle 0x4001d80	       682	undo.c	FUNCTION_10	IF_33
0x4001ce8	    0x4a8d3cf50000	                        lea rdi, [r14*8]	       684	undo.c	FUNCTION_10	IF_33	IF_34
0x4001cf0	      0xbe00000000	                              mov esi, 0	       684	undo.c	FUNCTION_10	IF_33	IF_34
0x4001cf5	      0xe800000000	                          call 0x4001cfa	       684	undo.c	FUNCTION_10	IF_33	IF_34
0x4001cfa	        0x48894320	             mov qword [rbx + 0x20], rax	       684	undo.c	FUNCTION_10	IF_33	IF_34
0x4001cfe	          0x4885c0	                           test rax, rax	       684	undo.c	FUNCTION_10	IF_33	IF_34
0x4001d01	            0x7512	                           jne 0x4001d15	       684	undo.c	FUNCTION_10	IF_33	IF_34
0x4001d03	      0xbe00000000	                              mov esi, 0	       687	undo.c	FUNCTION_10	IF_33	IF_34	CALL_29
0x4001d08	          0x4889df	                            mov rdi, rbx	       687	undo.c	FUNCTION_10	IF_33	IF_34	CALL_29
0x4001d0b	      0xe873e3ffff	                    call sym.u_freeentry	       687	undo.c	FUNCTION_10	IF_33	IF_34	CALL_29
0x4001d10	      0xe9b5000000	                           jmp 0x4001dca	       688	undo.c	FUNCTION_10	IF_33	IF_34
0x4001d15	        0x4883c501	                              add rbp, 1	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0x4001d19	        0x4983ed01	                              sub r13, 1	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0x4001d1d	    0x41bc00000000	                             mov r12d, 0	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0x4001d23	            0xeb03	                           jmp 0x4001d28	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0x4001d25	          0x4c89fd	                            mov rbp, r15	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4001d28	      0xe800000000	                          call 0x4001d2d	       692	undo.c	FUNCTION_10	IF_33	FOR_2	CALL_30
0x4001d2d	    0x8b0500000000	            mov eax, dword [0x04001d33] 	       693	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35
0x4001d33	            0x85c0	                           test eax, eax	       693	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35
0x4001d35	            0x7415	                            je 0x4001d4c	       693	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35
0x4001d37	          0x4c89e6	                            mov rsi, r12	       695	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35	CALL_31
0x4001d3a	          0x4889df	                            mov rdi, rbx	       695	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35	CALL_31
0x4001d3d	      0xe841e3ffff	                    call sym.u_freeentry	       695	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35	CALL_31
0x4001d42	      0xbb00000000	                              mov ebx, 0	       696	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35
0x4001d47	      0xe9d5000000	                           jmp 0x4001e21	       696	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35
0x4001d4c	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4001d50	        0x4e8d34e0	                  lea r14, [rax + r12*8]	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4001d54	        0x4c8d7d01	                      lea r15, [rbp + 1]	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4001d58	          0x4889ef	                            mov rdi, rbp	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4001d5b	      0xe807e6ffff	                    call sym.u_save_line	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4001d60	          0x498906	                    mov qword [r14], rax	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4001d63	          0x4885c0	                           test rax, rax	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4001d66	            0x750d	                           jne 0x4001d75	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4001d68	          0x4c89e6	                            mov rsi, r12	       700	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_33
0x4001d6b	          0x4889df	                            mov rdi, rbx	       700	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_33
0x4001d6e	      0xe810e3ffff	                    call sym.u_freeentry	       700	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_33
0x4001d73	            0xeb55	                           jmp 0x4001dca	       701	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36
0x4001d75	        0x4983c401	                              add r12, 1	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0x4001d79	          0x4d39e5	                            cmp r13, r12	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0x4001d7c	            0x75a7	                           jne 0x4001d25	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0x4001d7e	            0xeb08	                           jmp 0x4001d88	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0x4001d80	    0x48c743200000	               mov qword [rbx + 0x20], 0	       706	undo.c	FUNCTION_10	ELSE_11
0x4001d88	    0x488b05000000	            mov rax, qword [0x04001d8f] 	       707	undo.c	FUNCTION_10
0x4001d8f	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	       707	undo.c	FUNCTION_10
0x4001d96	        0x488b4030	            mov rax, qword [rax + 0x30] 	       707	undo.c	FUNCTION_10
0x4001d9a	          0x488903	                    mov qword [rbx], rax	       707	undo.c	FUNCTION_10
0x4001d9d	    0x488b05000000	            mov rax, qword [0x04001da4] 	       708	undo.c	FUNCTION_10
0x4001da4	    0x488b90201200	          mov rdx, qword [rax + 0x1220] 	       708	undo.c	FUNCTION_10
0x4001dab	        0x48895a30	             mov qword [rdx + 0x30], rbx	       708	undo.c	FUNCTION_10
0x4001daf	    0xc78034120000	            mov dword [rax + 0x1234], 0 	       709	undo.c	FUNCTION_10
0x4001db9	    0xc70500000000	               mov dword [0x04001dc3], 0	       710	undo.c	FUNCTION_10
0x4001dc3	      0xbb01000000	                              mov ebx, 1	       715	undo.c	FUNCTION_10
0x4001dc8	            0xeb57	                           jmp 0x4001e21	       715	undo.c	FUNCTION_10
0x4001dca	    0xc70500000000	               mov dword [0x04001dd4], 0	       718	undo.c	FUNCTION_10
0x4001dd4	      0xba05000000	                              mov edx, 5	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4001dd9	      0xbe00000000	                              mov esi, 0	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4001dde	      0xbf00000000	                              mov edi, 0	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4001de3	      0xe800000000	                          call 0x4001de8	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4001de8	      0xbe01000000	                              mov esi, 1	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4001ded	          0x4889c7	                            mov rdi, rax	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4001df0	      0xe800000000	                          call 0x4001df5	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4001df5	          0x83f879	                           cmp eax, 0x79	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4001df8	            0x7511	                           jne 0x4001e0b	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4001dfa	    0xc70500000000	               mov dword [0x04001e04], 1	       722	undo.c	FUNCTION_10	IF_37
0x4001e04	      0xbb01000000	                              mov ebx, 1	       723	undo.c	FUNCTION_10	IF_37
0x4001e09	            0xeb16	                           jmp 0x4001e21	       723	undo.c	FUNCTION_10	IF_37
0x4001e0b	      0xbf00000000	                              mov edi, 0	       725	undo.c	FUNCTION_10	CALL_37
0x4001e10	      0xe800000000	                          call 0x4001e15	       725	undo.c	FUNCTION_10	CALL_37
0x4001e15	      0xbb00000000	                              mov ebx, 0	       726	undo.c	FUNCTION_10
0x4001e1a	            0xeb05	                           jmp 0x4001e21	       726	undo.c	FUNCTION_10
0x4001e1c	      0xbb01000000	                              mov ebx, 1	       570	undo.c	FUNCTION_10	ELSE_6	IF_21
0x4001e21	            0x89d8	                            mov eax, ebx	       727	undo.c	FUNCTION_10
0x4001e23	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       727	undo.c	FUNCTION_10
0x4001e28	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       727	undo.c	FUNCTION_10
0x4001e31	            0x7405	                            je 0x4001e38	       727	undo.c	FUNCTION_10
0x4001e33	      0xe800000000	                          call 0x4001e38	       727	undo.c	FUNCTION_10
0x4001e38	        0x4883c428	                           add rsp, 0x28	       727	undo.c	FUNCTION_10
0x4001e3c	              0x5b	                                 pop rbx	       727	undo.c	FUNCTION_10
0x4001e3d	              0x5d	                                 pop rbp	       727	undo.c	FUNCTION_10
0x4001e3e	            0x415c	                                 pop r12	       727	undo.c	FUNCTION_10
0x4001e40	            0x415d	                                 pop r13	       727	undo.c	FUNCTION_10
0x4001e42	            0x415e	                                 pop r14	       727	undo.c	FUNCTION_10
0x4001e44	            0x415f	                                 pop r15	       727	undo.c	FUNCTION_10
0x4001e46	              0xc3	                                     ret	       727	undo.c	FUNCTION_10
ex_undolist	ELSE,5:functions,0:SWITCH,0:FOR,1:CALL,21:WHILE,2:IF,9:DO,0	192
0x4003528	            0x4157	                                push r15	      3007	undo.c	FUNCTION_44
0x400352a	            0x4156	                                push r14	      3007	undo.c	FUNCTION_44
0x400352c	            0x4155	                                push r13	      3007	undo.c	FUNCTION_44
0x400352e	            0x4154	                                push r12	      3007	undo.c	FUNCTION_44
0x4003530	              0x55	                                push rbp	      3007	undo.c	FUNCTION_44
0x4003531	              0x53	                                push rbx	      3007	undo.c	FUNCTION_44
0x4003532	        0x4883ec28	                           sub rsp, 0x28	      3007	undo.c	FUNCTION_44
0x4003536	    0x64488b042528	                mov rax, qword fs:[0x28]	      3007	undo.c	FUNCTION_44
0x400353f	      0x4889442418	             mov qword [rsp + 0x18], rax	      3007	undo.c	FUNCTION_44
0x4003544	            0x31c0	                            xor eax, eax	      3007	undo.c	FUNCTION_44
0x4003546	    0x448b25000000	           mov r12d, dword [0x0400354d] 	      3020	undo.c	FUNCTION_44
0x400354d	      0x418d6c2401	                      lea ebp, [r12 + 1]	      3020	undo.c	FUNCTION_44
0x4003552	        0x4183c402	                             add r12d, 2	      3021	undo.c	FUNCTION_44
0x4003556	    0x448925000000	           mov dword [0x0400355d], r12d 	      3021	undo.c	FUNCTION_44
0x400355d	      0xba14000000	                           mov edx, 0x14	      3022	undo.c	FUNCTION_44	CALL_1
0x4003562	      0xbe08000000	                              mov esi, 8	      3022	undo.c	FUNCTION_44	CALL_1
0x4003567	          0x4889e7	                            mov rdi, rsp	      3022	undo.c	FUNCTION_44	CALL_1
0x400356a	      0xe800000000	                          call 0x400356f	      3022	undo.c	FUNCTION_44	CALL_1
0x400356f	    0x488b05000000	            mov rax, qword [0x04003576] 	      3024	undo.c	FUNCTION_44
0x4003576	    0x488b98181200	          mov rbx, qword [rax + 0x1218] 	      3024	undo.c	FUNCTION_44
0x400357d	    0x41bd01000000	                             mov r13d, 1	      3025	undo.c	FUNCTION_44	WHILE_1
0x4003583	    0x49c7c6ffffff	             mov r14, 0xffffffffffffffff	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x400358a	          0x4885db	                           test rbx, rbx	      3025	undo.c	FUNCTION_44	WHILE_1
0x400358d	            0x7508	                           jne 0x4003597	      3025	undo.c	FUNCTION_44	WHILE_1
0x400358f	      0xe993010000	                           jmp 0x4003727	      3025	undo.c	FUNCTION_44	WHILE_1
0x4003594	          0x4889d3	                            mov rbx, rdx	      3080	undo.c	FUNCTION_44	WHILE_1	ELSE_3	ELSE_4
0x4003597	      0x48837b0800	                  cmp qword [rbx + 8], 0	      3027	undo.c	FUNCTION_44	WHILE_1	IF_1
0x400359c	     0xf85f5000000	                           jne 0x4003697	      3027	undo.c	FUNCTION_44	WHILE_1	IF_1
0x40035a2	          0x8b4328	            mov eax, dword [rbx + 0x28] 	      3027	undo.c	FUNCTION_44	WHILE_1	IF_1
0x40035a5	            0x39c5	                            cmp ebp, eax	      3028	undo.c	FUNCTION_44	WHILE_1	IF_1
0x40035a7	     0xf84ea000000	                            je 0x4003697	      3028	undo.c	FUNCTION_44	WHILE_1	IF_1
0x40035ad	          0x4139c4	                           cmp r12d, eax	      3028	undo.c	FUNCTION_44	WHILE_1	IF_1
0x40035b0	     0xf84e1000000	                            je 0x4003697	      3028	undo.c	FUNCTION_44	WHILE_1	IF_1
0x40035b6	      0xbe01000000	                              mov esi, 1	      3030	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_2	CALL_2
0x40035bb	          0x4889e7	                            mov rdi, rsp	      3030	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_2	CALL_2
0x40035be	      0xe800000000	                          call 0x40035c3	      3030	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_2	CALL_2
0x40035c3	            0x85c0	                           test eax, eax	      3030	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_2	CALL_2
0x40035c5	     0xf845c010000	                            je 0x4003727	      3030	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_2	CALL_2
0x40035cb	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x40035cf	          0x4589e8	                           mov r8d, r13d	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x40035d2	      0xba00000000	                              mov edx, 0	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x40035d7	      0xbe01040000	                          mov esi, 0x401	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x40035dc	    0x488b3d000000	            mov rdi, qword [0x040035e3] 	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x40035e3	      0xb800000000	                              mov eax, 0	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x40035e8	      0xe800000000	                          call 0x40035ed	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x40035ed	    0x4c8b05000000	              mov r8, qword [0x040035f4]	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x40035f4	      0xb800000000	                              mov eax, 0	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x40035f9	          0x4c89f1	                            mov rcx, r14	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x40035fc	          0x4c89c7	                             mov rdi, r8	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x40035ff	            0xf2ae	              repne scasb al, byte [rdi]	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x4003601	          0x4889c8	                            mov rax, rcx	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x4003604	          0x48f7d0	                                 not rax	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x4003607	        0x488d78ff	                      lea rdi, [rax - 1]	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x400360b	    0x488b93280200	           mov rdx, qword [rbx + 0x228] 	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x4003612	      0xbe01040000	                          mov esi, 0x401	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x4003617	          0x4829fe	                            sub rsi, rdi	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x400361a	          0x4c01c7	                             add rdi, r8	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x400361d	      0xe89ad3ffff	                     call sym.u_add_time	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x4003622	      0xb800000000	                              mov eax, 0	      3038	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	WHILE_2	CALL_7
0x4003627	    0x4883bb300200	              cmp qword [rbx + 0x230], 0	      3036	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3
0x400362f	            0x7f09	                            jg 0x400363a	      3036	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3
0x4003631	            0xeb41	                           jmp 0x4003674	      3036	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3
0x4003633	    0x6641c7040820	               mov word [r8 + rcx], 0x20	       148	string3.h	FUNCTION_94	CALL_3
0x400363a	    0x4c8b05000000	              mov r8, qword [0x04003641]	      3038	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	WHILE_2	CALL_7
0x4003641	          0x4c89f1	                            mov rcx, r14	      3038	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	WHILE_2	CALL_7
0x4003644	          0x4c89c7	                             mov rdi, r8	      3038	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	WHILE_2	CALL_7
0x4003647	            0xf2ae	              repne scasb al, byte [rdi]	      3038	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	WHILE_2	CALL_7
0x4003649	          0x48f7d1	                                 not rcx	      3038	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	WHILE_2	CALL_7
0x400364c	        0x4883e901	                              sub rcx, 1	      3038	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	WHILE_2	CALL_7
0x4003650	        0x4883f920	                           cmp rcx, 0x20	      3038	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	WHILE_2	CALL_7
0x4003654	            0x76dd	                           jbe 0x4003633	      3038	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	WHILE_2	CALL_7
0x4003656	    0x488b8b300200	           mov rcx, qword [rbx + 0x230] 	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x400365d	      0xba00000000	                              mov edx, 0	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x4003662	      0xbe01040000	                          mov esi, 0x401	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x4003667	          0x4c89c7	                             mov rdi, r8	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x400366a	      0xb800000000	                              mov eax, 0	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x400366f	      0xe800000000	                          call 0x4003674	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x4003674	          0x8b0424	                    mov eax, dword [rsp]	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4003677	          0x8d5001	                      lea edx, [rax + 1]	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x400367a	          0x891424	                    mov dword [rsp], edx	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x400367d	            0x4898	                                    cdqe	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x400367f	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4003684	        0x4c8d3cc2	                  lea r15, [rdx + rax*8]	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4003688	    0x488b3d000000	            mov rdi, qword [0x0400368f] 	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x400368f	      0xe800000000	                          call 0x4003694	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4003694	          0x498907	                    mov qword [r15], rax	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4003697	          0x896b28	             mov dword [rbx + 0x28], ebp	      3046	undo.c	FUNCTION_44	WHILE_1
0x400369a	        0x488b4308	                mov rax, qword [rbx + 8]	      3049	undo.c	FUNCTION_44	WHILE_1	IF_4
0x400369e	          0x4885c0	                           test rax, rax	      3049	undo.c	FUNCTION_44	WHILE_1	IF_4
0x40036a1	            0x7418	                            je 0x40036bb	      3049	undo.c	FUNCTION_44	WHILE_1	IF_4
0x40036a3	          0x8b5028	            mov edx, dword [rax + 0x28] 	      3049	undo.c	FUNCTION_44	WHILE_1	IF_4
0x40036a6	            0x39d5	                            cmp ebp, edx	      3050	undo.c	FUNCTION_44	WHILE_1	IF_4
0x40036a8	            0x7411	                            je 0x40036bb	      3050	undo.c	FUNCTION_44	WHILE_1	IF_4
0x40036aa	          0x4139d4	                           cmp r12d, edx	      3050	undo.c	FUNCTION_44	WHILE_1	IF_4
0x40036ad	            0x740c	                            je 0x40036bb	      3050	undo.c	FUNCTION_44	WHILE_1	IF_4
0x40036af	        0x4183c501	                             add r13d, 1	      3053	undo.c	FUNCTION_44	WHILE_1	IF_4
0x40036b3	          0x4889c3	                            mov rbx, rax	      3052	undo.c	FUNCTION_44	WHILE_1	IF_4
0x40036b6	      0xe9dcfeffff	                           jmp 0x4003597	      3053	undo.c	FUNCTION_44	WHILE_1	IF_4
0x40036bb	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      3057	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x40036bf	          0x4885c0	                           test rax, rax	      3057	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x40036c2	            0x7410	                            je 0x40036d4	      3057	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x40036c4	          0x8b5028	            mov edx, dword [rax + 0x28] 	      3058	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x40036c7	            0x39d5	                            cmp ebp, edx	      3059	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x40036c9	            0x7409	                            je 0x40036d4	      3059	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x40036cb	          0x4139d4	                           cmp r12d, edx	      3059	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x40036ce	     0xf851e010000	                           jne 0x40037f2	      3059	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x40036d4	          0x488b13	                    mov rdx, qword [rbx]	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x40036d7	          0x4885d2	                           test rdx, rdx	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x40036da	            0x742d	                            je 0x4003709	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x40036dc	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x40036e0	          0x4885c0	                           test rax, rax	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x40036e3	     0xf85fd000000	                           jne 0x40037e6	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x40036e9	          0x8b4228	            mov eax, dword [rdx + 0x28] 	      3065	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x40036ec	            0x39c5	                            cmp ebp, eax	      3066	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x40036ee	     0xf84e9000000	                            je 0x40037dd	      3066	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x40036f4	          0x4139c4	                           cmp r12d, eax	      3066	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x40036f7	     0xf84e0000000	                            je 0x40037dd	      3066	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x40036fd	        0x4183ed01	                             sub r13d, 1	      3069	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4003701	          0x4889d3	                            mov rbx, rdx	      3068	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4003704	      0xe98efeffff	                           jmp 0x4003597	      3069	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4003709	        0x44896328	            mov dword [rbx + 0x28], r12d	      3075	undo.c	FUNCTION_44	WHILE_1	ELSE_3
0x400370d	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      3076	undo.c	FUNCTION_44	WHILE_1	ELSE_3	IF_7
0x4003711	          0x4885db	                           test rbx, rbx	      3076	undo.c	FUNCTION_44	WHILE_1	ELSE_3	IF_7
0x4003714	     0xf857dfeffff	                           jne 0x4003597	      3076	undo.c	FUNCTION_44	WHILE_1	ELSE_3	IF_7
0x400371a	        0x4183ed01	                             sub r13d, 1	      3081	undo.c	FUNCTION_44	WHILE_1	ELSE_3	ELSE_4
0x400371e	          0x4885d2	                           test rdx, rdx	      3025	undo.c	FUNCTION_44	WHILE_1
0x4003721	     0xf856dfeffff	                           jne 0x4003594	      3025	undo.c	FUNCTION_44	WHILE_1
0x4003727	          0x8b3424	                    mov esi, dword [rsp]	      3086	undo.c	FUNCTION_44	IF_8
0x400372a	            0x85f6	                           test esi, esi	      3086	undo.c	FUNCTION_44	IF_8
0x400372c	            0x7521	                           jne 0x400374f	      3086	undo.c	FUNCTION_44	IF_8
0x400372e	      0xba05000000	                              mov edx, 5	      3087	undo.c	FUNCTION_44	CALL_12
0x4003733	      0xbe00000000	                              mov esi, 0	      3087	undo.c	FUNCTION_44	CALL_12
0x4003738	      0xbf00000000	                              mov edi, 0	      3087	undo.c	FUNCTION_44	CALL_12
0x400373d	      0xe800000000	                          call 0x4003742	      3087	undo.c	FUNCTION_44	CALL_12
0x4003742	          0x4889c7	                            mov rdi, rax	      3087	undo.c	FUNCTION_44	CALL_12
0x4003745	      0xe800000000	                          call 0x400374a	      3087	undo.c	FUNCTION_44	CALL_12
0x400374a	      0xe9ab000000	                           jmp 0x40037fa	      3087	undo.c	FUNCTION_44	CALL_12
0x400374f	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3090	undo.c	FUNCTION_44	ELSE_5	CALL_13
0x4003754	      0xe800000000	                          call 0x4003759	      3090	undo.c	FUNCTION_44	ELSE_5	CALL_13
0x4003759	      0xe800000000	                          call 0x400375e	      3092	undo.c	FUNCTION_44	ELSE_5	CALL_14
0x400375e	    0x8b1d00000000	            mov ebx, dword [0x04003764] 	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x4003764	      0xba05000000	                              mov edx, 5	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x4003769	      0xbe00000000	                              mov esi, 0	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x400376e	      0xbf00000000	                              mov edi, 0	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x4003773	      0xe800000000	                          call 0x4003778	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x4003778	            0x89de	                            mov esi, ebx	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x400377a	          0x4889c7	                            mov rdi, rax	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x400377d	      0xe800000000	                          call 0x4003782	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x4003782	        0x833c2400	                      cmp dword [rsp], 0	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4003786	            0x7e46	                           jle 0x40037ce	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4003788	    0x8b0500000000	            mov eax, dword [0x0400378e] 	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x400378e	            0x85c0	                           test eax, eax	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4003790	            0x753c	                           jne 0x40037ce	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4003792	      0xbb00000000	                              mov ebx, 0	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4003797	      0xbf0a000000	                            mov edi, 0xa	      3097	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_18
0x400379c	      0xe800000000	                          call 0x40037a1	      3097	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_18
0x40037a1	    0x8b0500000000	            mov eax, dword [0x040037a7] 	      3098	undo.c	FUNCTION_44	ELSE_5	FOR_1	IF_9
0x40037a7	            0x85c0	                           test eax, eax	      3098	undo.c	FUNCTION_44	ELSE_5	FOR_1	IF_9
0x40037a9	            0x7523	                           jne 0x40037ce	      3098	undo.c	FUNCTION_44	ELSE_5	FOR_1	IF_9
0x40037ab	          0x4863d3	                         movsxd rdx, ebx	      3100	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_19
0x40037ae	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3100	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_19
0x40037b3	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	      3100	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_19
0x40037b7	      0xe800000000	                          call 0x40037bc	      3100	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_19
0x40037bc	          0x83c301	                              add ebx, 1	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x40037bf	          0x391c24	                    cmp dword [rsp], ebx	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x40037c2	            0x7e0a	                           jle 0x40037ce	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x40037c4	    0x8b0500000000	            mov eax, dword [0x040037ca] 	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x40037ca	            0x85c0	                           test eax, eax	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x40037cc	            0x74c9	                            je 0x4003797	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x40037ce	      0xe800000000	                          call 0x40037d3	      3102	undo.c	FUNCTION_44	ELSE_5	CALL_20
0x40037d3	          0x4889e7	                            mov rdi, rsp	      3104	undo.c	FUNCTION_44	ELSE_5	CALL_21
0x40037d6	      0xe800000000	                          call 0x40037db	      3104	undo.c	FUNCTION_44	ELSE_5	CALL_21
0x40037db	            0xeb1d	                           jmp 0x40037fa	      3106	undo.c	FUNCTION_44
0x40037dd	        0x44896328	            mov dword [rbx + 0x28], r12d	      3075	undo.c	FUNCTION_44	WHILE_1	ELSE_3
0x40037e1	      0xe934ffffff	                           jmp 0x400371a	      3075	undo.c	FUNCTION_44	WHILE_1	ELSE_3
0x40037e6	        0x44896328	            mov dword [rbx + 0x28], r12d	      3075	undo.c	FUNCTION_44	WHILE_1	ELSE_3
0x40037ea	          0x4889c3	                            mov rbx, rax	      3076	undo.c	FUNCTION_44	WHILE_1	ELSE_3	IF_7
0x40037ed	      0xe9a5fdffff	                           jmp 0x4003597	      3076	undo.c	FUNCTION_44	WHILE_1	ELSE_3	IF_7
0x40037f2	          0x4889c3	                            mov rbx, rax	      3060	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x40037f5	      0xe99dfdffff	                           jmp 0x4003597	      3060	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x40037fa	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3106	undo.c	FUNCTION_44
0x40037ff	    0x644833042528	                xor rax, qword fs:[0x28]	      3106	undo.c	FUNCTION_44
0x4003808	            0x7405	                            je 0x400380f	      3106	undo.c	FUNCTION_44
0x400380a	      0xe800000000	                          call 0x400380f	      3106	undo.c	FUNCTION_44
0x400380f	        0x4883c428	                           add rsp, 0x28	      3106	undo.c	FUNCTION_44
0x4003813	              0x5b	                                 pop rbx	      3106	undo.c	FUNCTION_44
0x4003814	              0x5d	                                 pop rbp	      3106	undo.c	FUNCTION_44
0x4003815	            0x415c	                                 pop r12	      3106	undo.c	FUNCTION_44
0x4003817	            0x415d	                                 pop r13	      3106	undo.c	FUNCTION_44
0x4003819	            0x415e	                                 pop r14	      3106	undo.c	FUNCTION_44
0x400381b	            0x415f	                                 pop r15	      3106	undo.c	FUNCTION_44
0x400381d	              0xc3	                                     ret	      3106	undo.c	FUNCTION_44
u_doit	ELSE,2:functions,0:SWITCH,0:FOR,0:CALL,13:WHILE,1:IF,10:DO,0	95
0x4001550	            0x4156	                                push r14	      2185	undo.c	FUNCTION_39
0x4001552	            0x4155	                                push r13	      2185	undo.c	FUNCTION_39
0x4001554	            0x4154	                                push r12	      2185	undo.c	FUNCTION_39
0x4001556	              0x55	                                push rbp	      2185	undo.c	FUNCTION_39
0x4001557	              0x53	                                push rbx	      2185	undo.c	FUNCTION_39
0x4001558	          0x4189fd	                           mov r13d, edi	      2185	undo.c	FUNCTION_39
0x400155b	      0xe800000000	                          call 0x4001560	      2188	undo.c	FUNCTION_39	IF_1	CALL_1
0x4001560	            0x85c0	                           test eax, eax	      2188	undo.c	FUNCTION_39	IF_1	CALL_1
0x4001562	     0xf8490010000	                            je 0x40016f8	      2188	undo.c	FUNCTION_39	IF_1	CALL_1
0x4001568	    0x48c705000000	               mov qword [0x04001573], 0	      2191	undo.c	FUNCTION_39
0x4001573	    0x48c705000000	               mov qword [0x0400157e], 0	      2192	undo.c	FUNCTION_39
0x400157e	    0x488b05000000	            mov rax, qword [0x04001585] 	      2193	undo.c	FUNCTION_39	IF_2
0x4001585	        0xf6401001	               test byte [rax + 0x10], 1	      2193	undo.c	FUNCTION_39	IF_2
0x4001589	            0x740b	                            je 0x4001596	      2193	undo.c	FUNCTION_39	IF_2
0x400158b	    0x48c705000000	mov qword [0x04001596], 0xffffffffffffffff 	      2194	undo.c	FUNCTION_39	IF_2
0x4001596	        0x4183ed01	                             sub r13d, 1	      2194	undo.c	FUNCTION_39	IF_2
0x400159a	          0x4489eb	                           mov ebx, r13d	      2194	undo.c	FUNCTION_39	IF_2
0x400159d	      0xe926010000	                           jmp 0x40016c8	      2194	undo.c	FUNCTION_39	IF_2
0x40015a2	      0xbf00000000	                              mov edi, 0	      2201	undo.c	FUNCTION_39	WHILE_1	CALL_2
0x40015a7	      0xe800000000	                          call 0x40015ac	      2201	undo.c	FUNCTION_39	WHILE_1	CALL_2
0x40015ac	    0x833d00000000	               cmp dword [0x040015b3], 0	      2203	undo.c	FUNCTION_39	WHILE_1	IF_3
0x40015b3	     0xf8498000000	                            je 0x4001651	      2203	undo.c	FUNCTION_39	WHILE_1	IF_3
0x40015b9	    0x488b2d000000	            mov rbp, qword [0x040015c0] 	      2205	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_4
0x40015c0	    0x4c8ba5281200	          mov r12, qword [rbp + 0x1228] 	      2205	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_4
0x40015c7	          0x4d85e4	                           test r12, r12	      2205	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_4
0x40015ca	            0x7510	                           jne 0x40015dc	      2205	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_4
0x40015cc	    0x488b85201200	          mov rax, qword [rbp + 0x1220] 	      2206	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_4
0x40015d3	    0x488985281200	          mov qword [rbp + 0x1228], rax 	      2206	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_4
0x40015da	            0xeb19	                           jmp 0x40015f5	      2206	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_4
0x40015dc	      0xe85feaffff	                  call sym.get_undolevel	      2207	undo.c	FUNCTION_39	WHILE_1	IF_3	ELSE_1	IF_5	CALL_3
0x40015e1	          0x4885c0	                           test rax, rax	      2207	undo.c	FUNCTION_39	WHILE_1	IF_3	ELSE_1	IF_5	CALL_3
0x40015e4	     0xf8efc000000	                           jle 0x40016e6	      2207	undo.c	FUNCTION_39	WHILE_1	IF_3	ELSE_1	IF_5	CALL_3
0x40015ea	        0x498b0424	                    mov rax, qword [r12]	      2209	undo.c	FUNCTION_39	WHILE_1	IF_3	ELSE_1	IF_5
0x40015ee	    0x488985281200	          mov qword [rbp + 0x1228], rax 	      2209	undo.c	FUNCTION_39	WHILE_1	IF_3	ELSE_1	IF_5
0x40015f5	    0x83bd30120000	             cmp dword [rbp + 0x1230], 0	      2211	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x40015fc	            0x740a	                            je 0x4001608	      2211	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x40015fe	    0x4883bd281200	             cmp qword [rbp + 0x1228], 0	      2211	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x4001606	            0x753d	                           jne 0x4001645	      2211	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x4001608	    0x488b85181200	          mov rax, qword [rbp + 0x1218] 	      2214	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x400160f	    0x488985281200	          mov qword [rbp + 0x1228], rax 	      2214	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x4001616	      0xe800000000	                          call 0x400161b	      2215	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6	CALL_4
0x400161b	          0x4539ee	                          cmp r14d, r13d	      2216	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6	IF_7
0x400161e	     0xf85b0000000	                           jne 0x40016d4	      2216	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6	IF_7
0x4001624	      0xba05000000	                              mov edx, 5	      2218	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6	IF_7	CALL_6
0x4001629	      0xbe00000000	                              mov esi, 0	      2218	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6	IF_7	CALL_6
0x400162e	      0xbf00000000	                              mov edi, 0	      2218	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6	IF_7	CALL_6
0x4001633	      0xe800000000	                          call 0x4001638	      2218	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6	IF_7	CALL_6
0x4001638	          0x4889c7	                            mov rdi, rax	      2218	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6	IF_7	CALL_6
0x400163b	      0xe800000000	                          call 0x4001640	      2218	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6	IF_7	CALL_6
0x4001640	      0xe9b3000000	                           jmp 0x40016f8	      2219	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6	IF_7
0x4001645	      0xbf01000000	                              mov edi, 1	      2224	undo.c	FUNCTION_39	WHILE_1	IF_3	CALL_7
0x400164a	      0xe84af6ffff	                     call sym.u_undoredo	      2224	undo.c	FUNCTION_39	WHILE_1	IF_3	CALL_7
0x400164f	            0xeb74	                           jmp 0x40016c5	      2224	undo.c	FUNCTION_39	WHILE_1	IF_3	CALL_7
0x4001651	    0x488b05000000	            mov rax, qword [0x04001658] 	      2228	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	CALL_8
0x4001658	    0x4883b8281200	             cmp qword [rax + 0x1228], 0	      2228	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	CALL_8
0x4001660	            0x740a	                            je 0x400166c	      2228	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	CALL_8
0x4001662	      0xe8d9e9ffff	                  call sym.get_undolevel	      2228	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	CALL_8
0x4001667	          0x4885c0	                           test rax, rax	      2228	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	CALL_8
0x400166a	            0x7f28	                            jg 0x4001694	      2228	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	CALL_8
0x400166c	      0xe800000000	                          call 0x4001671	      2230	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	CALL_9
0x4001671	          0x4539ee	                          cmp r14d, r13d	      2231	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	IF_9
0x4001674	            0x755e	                           jne 0x40016d4	      2231	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	IF_9
0x4001676	      0xba05000000	                              mov edx, 5	      2233	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	IF_9	CALL_11
0x400167b	      0xbe00000000	                              mov esi, 0	      2233	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	IF_9	CALL_11
0x4001680	      0xbf00000000	                              mov edi, 0	      2233	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	IF_9	CALL_11
0x4001685	      0xe800000000	                          call 0x400168a	      2233	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	IF_9	CALL_11
0x400168a	          0x4889c7	                            mov rdi, rax	      2233	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	IF_9	CALL_11
0x400168d	      0xe800000000	                          call 0x4001692	      2233	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	IF_9	CALL_11
0x4001692	            0xeb64	                           jmp 0x40016f8	      2234	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	IF_9
0x4001694	      0xbf00000000	                              mov edi, 0	      2239	undo.c	FUNCTION_39	WHILE_1	ELSE_2	CALL_12
0x4001699	      0xe8fbf5ffff	                     call sym.u_undoredo	      2239	undo.c	FUNCTION_39	WHILE_1	ELSE_2	CALL_12
0x400169e	    0x488b05000000	            mov rax, qword [0x040016a5] 	      2243	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_10
0x40016a5	    0x488b90281200	          mov rdx, qword [rax + 0x1228] 	      2243	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_10
0x40016ac	      0x48837a0800	                  cmp qword [rdx + 8], 0	      2243	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_10
0x40016b1	            0x7507	                           jne 0x40016ba	      2243	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_10
0x40016b3	    0x488990201200	          mov qword [rax + 0x1220], rdx 	      2244	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_10
0x40016ba	        0x488b5208	                mov rdx, qword [rdx + 8]	      2245	undo.c	FUNCTION_39	WHILE_1	ELSE_2
0x40016be	    0x488990281200	          mov qword [rax + 0x1228], rdx 	      2245	undo.c	FUNCTION_39	WHILE_1	ELSE_2
0x40016c5	          0x83eb01	                              sub ebx, 1	      2245	undo.c	FUNCTION_39	WHILE_1	ELSE_2
0x40016c8	          0x4189de	                           mov r14d, ebx	      2195	undo.c	FUNCTION_39	WHILE_1
0x40016cb	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      2195	undo.c	FUNCTION_39	WHILE_1
0x40016ce	     0xf85cefeffff	                           jne 0x40015a2	      2195	undo.c	FUNCTION_39	WHILE_1
0x40016d4	      0xbe00000000	                              mov esi, 0	      2248	undo.c	FUNCTION_39	CALL_13
0x40016d9	    0x8b3d00000000	            mov edi, dword [0x040016df] 	      2248	undo.c	FUNCTION_39	CALL_13
0x40016df	      0xe884f3ffff	                     call sym.u_undo_end	      2248	undo.c	FUNCTION_39	CALL_13
0x40016e4	            0xeb12	                           jmp 0x40016f8	      2248	undo.c	FUNCTION_39	CALL_13
0x40016e6	    0x83bd30120000	             cmp dword [rbp + 0x1230], 0	      2211	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x40016ed	     0xf8552ffffff	                           jne 0x4001645	      2211	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x40016f3	      0xe910ffffff	                           jmp 0x4001608	      2211	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x40016f8	              0x5b	                                 pop rbx	      2249	undo.c	FUNCTION_39
0x40016f9	              0x5d	                                 pop rbp	      2249	undo.c	FUNCTION_39
0x40016fa	            0x415c	                                 pop r12	      2249	undo.c	FUNCTION_39
0x40016fc	            0x415d	                                 pop r13	      2249	undo.c	FUNCTION_39
0x40016fe	            0x415e	                                 pop r14	      2249	undo.c	FUNCTION_39
0x4001700	              0xc3	                                     ret	      2249	undo.c	FUNCTION_39
u_sync	ELSE,1:functions,0:SWITCH,0:FOR,0:CALL,3:WHILE,0:IF,3:DO,0	24
0x40021d2	        0x4883ec08	                              sub rsp, 8	      2985	undo.c	FUNCTION_43
0x40021d6	    0x488b05000000	            mov rax, qword [0x040021dd] 	      2987	undo.c	FUNCTION_43	IF_1
0x40021dd	    0x83b834120000	             cmp dword [rax + 0x1234], 0	      2987	undo.c	FUNCTION_43	IF_1
0x40021e4	            0x7554	                           jne 0x400223a	      2987	undo.c	FUNCTION_43	IF_1
0x40021e6	            0x85ff	                           test edi, edi	      2987	undo.c	FUNCTION_43	IF_1
0x40021e8	            0x7509	                           jne 0x40021f3	      2987	undo.c	FUNCTION_43	IF_1
0x40021ea	    0x833d00000000	               cmp dword [0x040021f1], 0	      2987	undo.c	FUNCTION_43	IF_1
0x40021f1	            0x7f47	                            jg 0x400223a	      2987	undo.c	FUNCTION_43	IF_1
0x40021f3	    0x48833d000000	               cmp qword [0x040021fb], 0	      2990	undo.c	FUNCTION_43	IF_2	CALL_1
0x40021fb	            0x7509	                           jne 0x4002206	      2990	undo.c	FUNCTION_43	IF_2	CALL_1
0x40021fd	      0xe800000000	                          call 0x4002202	      2990	undo.c	FUNCTION_43	IF_2	CALL_1
0x4002202	            0x85c0	                           test eax, eax	      2990	undo.c	FUNCTION_43	IF_2	CALL_1
0x4002204	            0x7534	                           jne 0x400223a	      2990	undo.c	FUNCTION_43	IF_2	CALL_1
0x4002206	      0xe835deffff	                  call sym.get_undolevel	      2993	undo.c	FUNCTION_43	IF_3	CALL_2
0x400220b	          0x4885c0	                           test rax, rax	      2993	undo.c	FUNCTION_43	IF_3	CALL_2
0x400220e	            0x7913	                           jns 0x4002223	      2993	undo.c	FUNCTION_43	IF_3	CALL_2
0x4002210	    0x488b05000000	            mov rax, qword [0x04002217] 	      2994	undo.c	FUNCTION_43	IF_3
0x4002217	    0xc78034120000	            mov dword [rax + 0x1234], 1 	      2994	undo.c	FUNCTION_43	IF_3
0x4002221	            0xeb17	                           jmp 0x400223a	      2994	undo.c	FUNCTION_43	IF_3
0x4002223	      0xe8a6e0ffff	                       call sym.u_getbot	      2997	undo.c	FUNCTION_43	ELSE_1	CALL_3
0x4002228	    0x488b05000000	            mov rax, qword [0x0400222f] 	      2998	undo.c	FUNCTION_43	ELSE_1
0x400222f	    0x48c780281200	            mov qword [rax + 0x1228], 0 	      2998	undo.c	FUNCTION_43	ELSE_1
0x400223a	        0x4883c408	                              add rsp, 8	      3000	undo.c	FUNCTION_43
0x400223e	              0xc3	                                     ret	      3000	undo.c	FUNCTION_43
u_savesub	ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,1:WHILE,0:IF,1:DO,0	11
0x4001e47	      0xb801000000	                              mov eax, 1	       290	undo.c	FUNCTION_5	IF_1
0x4001e4c	    0x833d00000000	               cmp dword [0x04001e53], 0	       289	undo.c	FUNCTION_5	IF_1
0x4001e53	            0x751d	                           jne 0x4001e72	       289	undo.c	FUNCTION_5	IF_1
0x4001e55	        0x4883ec08	                              sub rsp, 8	       288	undo.c	FUNCTION_5
0x4001e59	        0x488d7701	                      lea rsi, [rdi + 1]	       292	undo.c	FUNCTION_5	CALL_1
0x4001e5d	        0x4883ef01	                              sub rdi, 1	       292	undo.c	FUNCTION_5	CALL_1
0x4001e61	      0xb900000000	                              mov ecx, 0	       292	undo.c	FUNCTION_5	CALL_1
0x4001e66	          0x4889f2	                            mov rdx, rsi	       292	undo.c	FUNCTION_5	CALL_1
0x4001e69	      0xe800000000	                          call 0x4001e6e	       292	undo.c	FUNCTION_5	CALL_1
0x4001e6e	        0x4883c408	                              add rsp, 8	       293	undo.c	FUNCTION_5
0x4001e72	            0xf3c3	                                     ret	       293	undo.c	FUNCTION_5
undo_write	ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,4:WHILE,1:IF,4:DO,0	53
0x40003eb	            0x4156	                                push r14	       886	undo.c	FUNCTION_15
0x40003ed	            0x4155	                                push r13	       886	undo.c	FUNCTION_15
0x40003ef	            0x4154	                                push r12	       886	undo.c	FUNCTION_15
0x40003f1	              0x55	                                push rbp	       886	undo.c	FUNCTION_15
0x40003f2	              0x53	                                push rbx	       886	undo.c	FUNCTION_15
0x40003f3	          0x4889fb	                            mov rbx, rdi	       886	undo.c	FUNCTION_15
0x40003f6	          0x4989f5	                            mov r13, rsi	       886	undo.c	FUNCTION_15
0x40003f9	          0x4989d4	                            mov r12, rdx	       886	undo.c	FUNCTION_15
0x40003fc	    0x41be00200000	                        mov r14d, 0x2000	       895	undo.c	FUNCTION_15	IF_1	WHILE_1
0x4000402	      0x48837f1800	               cmp qword [rdi + 0x18], 0	       888	undo.c	FUNCTION_15	IF_1
0x4000407	            0x7531	                           jne 0x400043a	       888	undo.c	FUNCTION_15	IF_1
0x4000409	            0xeb63	                           jmp 0x400046e	       888	undo.c	FUNCTION_15	IF_1
0x400040b	          0x4c89f5	                            mov rbp, r14	       895	undo.c	FUNCTION_15	IF_1	WHILE_1
0x400040e	          0x4829fd	                            sub rbp, rdi	       895	undo.c	FUNCTION_15	IF_1	WHILE_1
0x4000411	        0x48037b18	             add rdi, qword [rbx + 0x18]	        59	string3.h	FUNCTION_85	CALL_3
0x4000415	          0x4889ea	                            mov rdx, rbp	        59	string3.h	FUNCTION_85	CALL_3
0x4000418	          0x4c89ee	                            mov rsi, r13	        59	string3.h	FUNCTION_85	CALL_3
0x400041b	      0xe800000000	                          call 0x4000420	        59	string3.h	FUNCTION_85	CALL_3
0x4000420	          0x4929ec	                            sub r12, rbp	       898	undo.c	FUNCTION_15	IF_1	WHILE_1
0x4000423	          0x4901ed	                            add r13, rbp	       899	undo.c	FUNCTION_15	IF_1	WHILE_1
0x4000426	    0x48c743200020	         mov qword [rbx + 0x20], 0x2000 	       900	undo.c	FUNCTION_15	IF_1	WHILE_1
0x400042e	          0x4889df	                            mov rdi, rbx	       901	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2	CALL_2
0x4000431	      0xe847ffffff	                     call sym.undo_flush	       901	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2	CALL_2
0x4000436	            0x85c0	                           test eax, eax	       901	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2	CALL_2
0x4000438	            0x7452	                            je 0x400048c	       901	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2	CALL_2
0x400043a	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       893	undo.c	FUNCTION_15	IF_1	WHILE_1
0x400043e	        0x498d043c	                    lea rax, [r12 + rdi]	       893	undo.c	FUNCTION_15	IF_1	WHILE_1
0x4000442	    0x483dff1f0000	                         cmp rax, 0x1fff	       893	undo.c	FUNCTION_15	IF_1	WHILE_1
0x4000448	            0x77c1	                            ja 0x400040b	       893	undo.c	FUNCTION_15	IF_1	WHILE_1
0x400044a	      0xb801000000	                              mov eax, 1	       909	undo.c	FUNCTION_15	IF_1
0x400044f	          0x4d85e4	                           test r12, r12	       904	undo.c	FUNCTION_15	IF_1	IF_3
0x4000452	            0x7438	                            je 0x400048c	       904	undo.c	FUNCTION_15	IF_1	IF_3
0x4000454	        0x48037b18	             add rdi, qword [rbx + 0x18]	        59	string3.h	FUNCTION_85	CALL_3
0x4000458	          0x4c89e2	                            mov rdx, r12	        59	string3.h	FUNCTION_85	CALL_3
0x400045b	          0x4c89ee	                            mov rsi, r13	        59	string3.h	FUNCTION_85	CALL_3
0x400045e	      0xe800000000	                          call 0x4000463	        59	string3.h	FUNCTION_85	CALL_3
0x4000463	        0x4c016320	            add qword [rbx + 0x20], r12 	       907	undo.c	FUNCTION_15	IF_1	IF_3
0x4000467	      0xb801000000	                              mov eax, 1	       909	undo.c	FUNCTION_15	IF_1
0x400046c	            0xeb1e	                           jmp 0x400048c	       909	undo.c	FUNCTION_15	IF_1
0x400046e	        0x488b4f08	                mov rcx, qword [rdi + 8]	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x4000472	      0xba01000000	                              mov edx, 1	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x4000477	          0x4c89e6	                            mov rsi, r12	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x400047a	          0x4c89ef	                            mov rdi, r13	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x400047d	      0xe800000000	                          call 0x4000482	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x4000482	        0x4883f801	                              cmp rax, 1	       902	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2
0x4000486	           0xf94c0	                                 sete al	       902	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2
0x4000489	           0xfb6c0	                           movzx eax, al	       902	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2
0x400048c	              0x5b	                                 pop rbx	       915	undo.c	FUNCTION_15
0x400048d	              0x5d	                                 pop rbp	       915	undo.c	FUNCTION_15
0x400048e	            0x415c	                                 pop r12	       915	undo.c	FUNCTION_15
0x4000490	            0x415d	                                 pop r13	       915	undo.c	FUNCTION_15
0x4000492	            0x415e	                                 pop r14	       915	undo.c	FUNCTION_15
0x4000494	              0xc3	                                     ret	       915	undo.c	FUNCTION_15
u_undoline	ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,8:WHILE,0:IF,5:DO,0	54
0x4003b4c	    0x833d00000000	               cmp dword [0x04003b53], 0	      3465	undo.c	FUNCTION_60	IF_1
0x4003b53	     0xf8500010000	                           jne 0x4003c59	      3465	undo.c	FUNCTION_60	IF_1
0x4003b59	              0x53	                                push rbx	      3461	undo.c	FUNCTION_60
0x4003b5a	    0x488b05000000	            mov rax, qword [0x04003b61] 	      3468	undo.c	FUNCTION_60	IF_2
0x4003b61	    0x4883b8601200	             cmp qword [rax + 0x1260], 0	      3468	undo.c	FUNCTION_60	IF_2
0x4003b69	            0x740c	                            je 0x4003b77	      3468	undo.c	FUNCTION_60	IF_2
0x4003b6b	    0x488bb8681200	          mov rdi, qword [rax + 0x1268] 	      3469	undo.c	FUNCTION_60	IF_2
0x4003b72	          0x483b38	                    cmp rdi, qword [rax]	      3469	undo.c	FUNCTION_60	IF_2
0x4003b75	            0x7e0a	                           jle 0x4003b81	      3469	undo.c	FUNCTION_60	IF_2
0x4003b77	      0xe800000000	                          call 0x4003b7c	      3471	undo.c	FUNCTION_60	IF_2	CALL_1
0x4003b7c	      0xe9d7000000	                           jmp 0x4003c58	      3472	undo.c	FUNCTION_60	IF_2
0x4003b81	        0x488d7701	                      lea rsi, [rdi + 1]	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x4003b85	        0x4883ef01	                              sub rdi, 1	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x4003b89	      0xb900000000	                              mov ecx, 0	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x4003b8e	      0xba00000000	                              mov edx, 0	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x4003b93	      0xe800000000	                          call 0x4003b98	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x4003b98	            0x85c0	                           test eax, eax	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x4003b9a	     0xf84b8000000	                            je 0x4003c58	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x4003ba0	    0x488b05000000	            mov rax, qword [0x04003ba7] 	      3479	undo.c	FUNCTION_60	CALL_3
0x4003ba7	    0x488bb8681200	          mov rdi, qword [rax + 0x1268] 	      3479	undo.c	FUNCTION_60	CALL_3
0x4003bae	      0xe8b4c7ffff	                    call sym.u_save_line	      3479	undo.c	FUNCTION_60	CALL_3
0x4003bb3	          0x4889c3	                            mov rbx, rax	      3479	undo.c	FUNCTION_60	CALL_3
0x4003bb6	          0x4885c0	                           test rax, rax	      3480	undo.c	FUNCTION_60	IF_4
0x4003bb9	            0x750f	                           jne 0x4003bca	      3480	undo.c	FUNCTION_60	IF_4
0x4003bbb	      0xbf00000000	                              mov edi, 0	      3482	undo.c	FUNCTION_60	IF_4	CALL_4
0x4003bc0	      0xe800000000	                          call 0x4003bc5	      3482	undo.c	FUNCTION_60	IF_4	CALL_4
0x4003bc5	      0xe98e000000	                           jmp 0x4003c58	      3483	undo.c	FUNCTION_60	IF_4
0x4003bca	    0x488b05000000	            mov rax, qword [0x04003bd1] 	      3485	undo.c	FUNCTION_60	CALL_5
0x4003bd1	    0x488bb0601200	          mov rsi, qword [rax + 0x1260] 	      3485	undo.c	FUNCTION_60	CALL_5
0x4003bd8	    0x488bb8681200	          mov rdi, qword [rax + 0x1268] 	      3485	undo.c	FUNCTION_60	CALL_5
0x4003bdf	      0xba01000000	                              mov edx, 1	      3485	undo.c	FUNCTION_60	CALL_5
0x4003be4	      0xe800000000	                          call 0x4003be9	      3485	undo.c	FUNCTION_60	CALL_5
0x4003be9	    0x488b05000000	            mov rax, qword [0x04003bf0] 	      3486	undo.c	FUNCTION_60	CALL_6
0x4003bf0	    0x488bb8681200	          mov rdi, qword [rax + 0x1268] 	      3486	undo.c	FUNCTION_60	CALL_6
0x4003bf7	      0xbe00000000	                              mov esi, 0	      3486	undo.c	FUNCTION_60	CALL_6
0x4003bfc	      0xe800000000	                          call 0x4003c01	      3486	undo.c	FUNCTION_60	CALL_6
0x4003c01	    0x488b05000000	            mov rax, qword [0x04003c08] 	      3487	undo.c	FUNCTION_60	CALL_7
0x4003c08	    0x488bb8601200	          mov rdi, qword [rax + 0x1260] 	      3487	undo.c	FUNCTION_60	CALL_7
0x4003c0f	      0xe800000000	                          call 0x4003c14	      3487	undo.c	FUNCTION_60	CALL_7
0x4003c14	    0x488b05000000	            mov rax, qword [0x04003c1b] 	      3488	undo.c	FUNCTION_60
0x4003c1b	    0x488998601200	          mov qword [rax + 0x1260], rbx 	      3488	undo.c	FUNCTION_60
0x4003c22	    0x8b8870120000	          mov ecx, dword [rax + 0x1270] 	      3490	undo.c	FUNCTION_60
0x4003c28	    0x488b15000000	            mov rdx, qword [0x04003c2f] 	      3491	undo.c	FUNCTION_60	IF_5
0x4003c2f	    0x488b98681200	          mov rbx, qword [rax + 0x1268] 	      3491	undo.c	FUNCTION_60	IF_5
0x4003c36	        0x48395a38	            cmp qword [rdx + 0x38], rbx 	      3491	undo.c	FUNCTION_60	IF_5
0x4003c3a	            0x7509	                           jne 0x4003c45	      3491	undo.c	FUNCTION_60	IF_5
0x4003c3c	          0x8b7240	            mov esi, dword [rdx + 0x40] 	      3492	undo.c	FUNCTION_60	IF_5
0x4003c3f	    0x89b070120000	          mov dword [rax + 0x1270], esi 	      3492	undo.c	FUNCTION_60	IF_5
0x4003c45	          0x894a40	             mov dword [rdx + 0x40], ecx	      3493	undo.c	FUNCTION_60
0x4003c48	    0x488b80681200	          mov rax, qword [rax + 0x1268] 	      3494	undo.c	FUNCTION_60
0x4003c4f	        0x48894238	             mov qword [rdx + 0x38], rax	      3494	undo.c	FUNCTION_60
0x4003c53	      0xe800000000	                          call 0x4003c58	      3495	undo.c	FUNCTION_60	CALL_8
0x4003c58	              0x5b	                                 pop rbx	      3496	undo.c	FUNCTION_60
0x4003c59	            0xf3c3	                                     ret	      3496	undo.c	FUNCTION_60
undo_flush	ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,2:WHILE,0:IF,2:DO,0	32
0x400037d	        0x488b7718	            mov rsi, qword [rdi + 0x18] 	       921	undo.c	FUNCTION_16	IF_1
0x4000381	          0x4885f6	                           test rsi, rsi	       921	undo.c	FUNCTION_16	IF_1
0x4000384	            0x7456	                            je 0x40003dc	       921	undo.c	FUNCTION_16	IF_1
0x4000386	        0x488b4f10	            mov rcx, qword [rdi + 0x10] 	       921	undo.c	FUNCTION_16	IF_1
0x400038a	          0x4885c9	                           test rcx, rcx	       921	undo.c	FUNCTION_16	IF_1
0x400038d	            0x7453	                            je 0x40003e2	       921	undo.c	FUNCTION_16	IF_1
0x400038f	        0x488b5720	            mov rdx, qword [rdi + 0x20] 	       921	undo.c	FUNCTION_16	IF_1
0x4000393	      0xb801000000	                              mov eax, 1	       928	undo.c	FUNCTION_16
0x4000398	          0x4885d2	                           test rdx, rdx	       921	undo.c	FUNCTION_16	IF_1
0x400039b	            0x744c	                            je 0x40003e9	       921	undo.c	FUNCTION_16	IF_1
0x400039d	              0x53	                                push rbx	       920	undo.c	FUNCTION_16
0x400039e	          0x4889fb	                            mov rbx, rdi	       920	undo.c	FUNCTION_16
0x40003a1	          0x4889cf	                            mov rdi, rcx	       923	undo.c	FUNCTION_16	IF_1	CALL_1
0x40003a4	      0xe800000000	                          call 0x40003a9	       923	undo.c	FUNCTION_16	IF_1	CALL_1
0x40003a9	        0x488b4b08	                mov rcx, qword [rbx + 8]	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x40003ad	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x40003b1	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x40003b5	      0xba01000000	                              mov edx, 1	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x40003ba	      0xe800000000	                          call 0x40003bf	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x40003bf	          0x4889c2	                            mov rdx, rax	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x40003c2	      0xb800000000	                              mov eax, 0	       925	undo.c	FUNCTION_16	IF_1	IF_2
0x40003c7	        0x4883fa01	                              cmp rdx, 1	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x40003cb	            0x751b	                           jne 0x40003e8	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x40003cd	    0x48c743200000	               mov qword [rbx + 0x20], 0	       926	undo.c	FUNCTION_16	IF_1
0x40003d5	      0xb801000000	                              mov eax, 1	       928	undo.c	FUNCTION_16
0x40003da	            0xeb0c	                           jmp 0x40003e8	       928	undo.c	FUNCTION_16
0x40003dc	      0xb801000000	                              mov eax, 1	       928	undo.c	FUNCTION_16
0x40003e1	              0xc3	                                     ret	       928	undo.c	FUNCTION_16
0x40003e2	      0xb801000000	                              mov eax, 1	       928	undo.c	FUNCTION_16
0x40003e7	              0xc3	                                     ret	       928	undo.c	FUNCTION_16
0x40003e8	              0x5b	                                 pop rbx	       929	undo.c	FUNCTION_16
0x40003e9	            0xf3c3	                                     ret	       929	undo.c	FUNCTION_16
corruption_error	ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,2:WHILE,0:IF,0:DO,0	17
0x4000987	              0x55	                                push rbp	       859	undo.c	FUNCTION_13
0x4000988	              0x53	                                push rbx	       859	undo.c	FUNCTION_13
0x4000989	        0x4883ec08	                              sub rsp, 8	       859	undo.c	FUNCTION_13
0x400098d	          0x4889fb	                            mov rbx, rdi	       859	undo.c	FUNCTION_13
0x4000990	          0x4889f5	                            mov rbp, rsi	       859	undo.c	FUNCTION_13
0x4000993	      0xba05000000	                              mov edx, 5	       860	undo.c	FUNCTION_13	CALL_2
0x4000998	      0xbe00000000	                              mov esi, 0	       860	undo.c	FUNCTION_13	CALL_2
0x400099d	      0xbf00000000	                              mov edi, 0	       860	undo.c	FUNCTION_13	CALL_2
0x40009a2	      0xe800000000	                          call 0x40009a7	       860	undo.c	FUNCTION_13	CALL_2
0x40009a7	          0x4889ea	                            mov rdx, rbp	       860	undo.c	FUNCTION_13	CALL_2
0x40009aa	          0x4889de	                            mov rsi, rbx	       860	undo.c	FUNCTION_13	CALL_2
0x40009ad	          0x4889c7	                            mov rdi, rax	       860	undo.c	FUNCTION_13	CALL_2
0x40009b0	      0xe800000000	                          call 0x40009b5	       860	undo.c	FUNCTION_13	CALL_2
0x40009b5	        0x4883c408	                              add rsp, 8	       861	undo.c	FUNCTION_13
0x40009b9	              0x5b	                                 pop rbx	       861	undo.c	FUNCTION_13
0x40009ba	              0x5d	                                 pop rbp	       861	undo.c	FUNCTION_13
0x40009bb	              0xc3	                                     ret	       861	undo.c	FUNCTION_13
curbufIsChanged	ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,1:WHILE,0:IF,0:DO,0	5
0x4004b41	        0x4883ec08	                              sub rsp, 8	      3548	undo.c	FUNCTION_65
0x4004b45	    0x488b3d000000	            mov rdi, qword [0x04004b4c] 	      3549	undo.c	FUNCTION_65	CALL_1
0x4004b4c	      0xe800000000	                          call 0x4004b51	      3549	undo.c	FUNCTION_65	CALL_1
0x4004b51	        0x4883c408	                              add rsp, 8	      3550	undo.c	FUNCTION_65
0x4004b55	              0xc3	                                     ret	      3550	undo.c	FUNCTION_65
undo_write_bytes	ELSE,0:functions,0:SWITCH,0:FOR,1:CALL,1:WHILE,0:IF,0:DO,0	25
0x400057d	        0x4883ec18	                           sub rsp, 0x18	       972	undo.c	FUNCTION_18
0x4000581	    0x64488b042528	                mov rax, qword fs:[0x28]	       972	undo.c	FUNCTION_18
0x400058a	      0x4889442408	                mov qword [rsp + 8], rax	       972	undo.c	FUNCTION_18
0x400058f	            0x31c0	                            xor eax, eax	       972	undo.c	FUNCTION_18
0x4000591	            0x89d1	                            mov ecx, edx	       977	undo.c	FUNCTION_18	FOR_1
0x4000593	          0x83e901	                              sub ecx, 1	       977	undo.c	FUNCTION_18	FOR_1
0x4000596	            0x781b	                            js 0x40005b3	       977	undo.c	FUNCTION_18	FOR_1
0x4000598	          0xc1e103	                              shl ecx, 3	       977	undo.c	FUNCTION_18	FOR_1
0x400059b	          0x4889e0	                            mov rax, rsp	       977	undo.c	FUNCTION_18	FOR_1
0x400059e	          0x4989f0	                             mov r8, rsi	       978	undo.c	FUNCTION_18	FOR_1
0x40005a1	          0x49d3e8	                              shr r8, cl	       978	undo.c	FUNCTION_18	FOR_1
0x40005a4	          0x448800	                     mov byte [rax], r8b	       978	undo.c	FUNCTION_18	FOR_1
0x40005a7	          0x83e908	                              sub ecx, 8	       978	undo.c	FUNCTION_18	FOR_1
0x40005aa	        0x4883c001	                              add rax, 1	       978	undo.c	FUNCTION_18	FOR_1
0x40005ae	          0x83f9f8	             cmp ecx, 0xfffffffffffffff8	       977	undo.c	FUNCTION_18	FOR_1
0x40005b1	            0x75eb	                           jne 0x400059e	       977	undo.c	FUNCTION_18	FOR_1
0x40005b3	          0x4863d2	                         movsxd rdx, edx	       979	undo.c	FUNCTION_18	CALL_1
0x40005b6	          0x4889e6	                            mov rsi, rsp	       979	undo.c	FUNCTION_18	CALL_1
0x40005b9	      0xe82dfeffff	                     call sym.undo_write	       979	undo.c	FUNCTION_18	CALL_1
0x40005be	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       980	undo.c	FUNCTION_18
0x40005c3	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       980	undo.c	FUNCTION_18
0x40005cc	            0x7405	                            je 0x40005d3	       980	undo.c	FUNCTION_18
0x40005ce	      0xe800000000	                          call 0x40005d3	       980	undo.c	FUNCTION_18
0x40005d3	        0x4883c418	                           add rsp, 0x18	       980	undo.c	FUNCTION_18
0x40005d7	              0xc3	                                     ret	       980	undo.c	FUNCTION_18
u_unch_branch	ELSE,0:functions,0:SWITCH,0:FOR,1:CALL,1:WHILE,0:IF,1:DO,0	14
0x400005d	              0x53	                                push rbx	      3224	undo.c	FUNCTION_50
0x400005e	          0x4889fb	                            mov rbx, rdi	      3224	undo.c	FUNCTION_50
0x4000061	          0x4885ff	                           test rdi, rdi	      3227	undo.c	FUNCTION_50	FOR_1
0x4000064	            0x741b	                            je 0x4000081	      3227	undo.c	FUNCTION_50	FOR_1
0x4000066	        0x834b5801	                or dword [rbx + 0x58], 1	      3229	undo.c	FUNCTION_50	FOR_1
0x400006a	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3230	undo.c	FUNCTION_50	FOR_1	IF_1
0x400006e	          0x4885ff	                           test rdi, rdi	      3230	undo.c	FUNCTION_50	FOR_1	IF_1
0x4000071	            0x7405	                            je 0x4000078	      3230	undo.c	FUNCTION_50	FOR_1	IF_1
0x4000073	      0xe8e5ffffff	                  call sym.u_unch_branch	      3231	undo.c	FUNCTION_50	FOR_1	CALL_1
0x4000078	        0x488b5b08	                mov rbx, qword [rbx + 8]	      3227	undo.c	FUNCTION_50	FOR_1
0x400007c	          0x4885db	                           test rbx, rbx	      3227	undo.c	FUNCTION_50	FOR_1
0x400007f	            0x75e5	                           jne 0x4000066	      3227	undo.c	FUNCTION_50	FOR_1
0x4000081	              0x5b	                                 pop rbx	      3233	undo.c	FUNCTION_50
0x4000082	              0xc3	                                     ret	      3233	undo.c	FUNCTION_50
u_freebranch	ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,3:WHILE,2:IF,3:DO,0	47
0x40001c4	            0x4155	                                push r13	      3332	undo.c	FUNCTION_54
0x40001c6	            0x4154	                                push r12	      3332	undo.c	FUNCTION_54
0x40001c8	              0x55	                                push rbp	      3332	undo.c	FUNCTION_54
0x40001c9	              0x53	                                push rbx	      3332	undo.c	FUNCTION_54
0x40001ca	        0x4883ec08	                              sub rsp, 8	      3332	undo.c	FUNCTION_54
0x40001ce	          0x4989fc	                            mov r12, rdi	      3332	undo.c	FUNCTION_54
0x40001d1	          0x4889f3	                            mov rbx, rsi	      3332	undo.c	FUNCTION_54
0x40001d4	          0x4989d5	                            mov r13, rdx	      3332	undo.c	FUNCTION_54
0x40001d7	    0x488bb7181200	          mov rsi, qword [rdi + 0x1218] 	      3337	undo.c	FUNCTION_54	IF_1
0x40001de	          0x4839de	                            cmp rsi, rbx	      3337	undo.c	FUNCTION_54	IF_1
0x40001e1	            0x751f	                           jne 0x4000202	      3337	undo.c	FUNCTION_54	IF_1
0x40001e3	          0x4885f6	                           test rsi, rsi	      3339	undo.c	FUNCTION_54	IF_1	WHILE_1
0x40001e6	            0x7460	                            je 0x4000248	      3339	undo.c	FUNCTION_54	IF_1	WHILE_1
0x40001e8	          0x4c89ea	                            mov rdx, r13	      3340	undo.c	FUNCTION_54	IF_1	CALL_1
0x40001eb	          0x4c89e7	                            mov rdi, r12	      3340	undo.c	FUNCTION_54	IF_1	CALL_1
0x40001ee	      0xe851ffffff	                   call sym.u_freeheader	      3340	undo.c	FUNCTION_54	IF_1	CALL_1
0x40001f3	    0x498bb4241812	          mov rsi, qword [r12 + 0x1218] 	      3339	undo.c	FUNCTION_54	IF_1	WHILE_1
0x40001fb	          0x4885f6	                           test rsi, rsi	      3339	undo.c	FUNCTION_54	IF_1	WHILE_1
0x40001fe	            0x75e8	                           jne 0x40001e8	      3339	undo.c	FUNCTION_54	IF_1	WHILE_1
0x4000200	            0xeb46	                           jmp 0x4000248	      3339	undo.c	FUNCTION_54	IF_1	WHILE_1
0x4000202	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3344	undo.c	FUNCTION_54	IF_2
0x4000206	          0x4885c0	                           test rax, rax	      3344	undo.c	FUNCTION_54	IF_2
0x4000209	            0x7408	                            je 0x4000213	      3344	undo.c	FUNCTION_54	IF_2
0x400020b	    0x48c740100000	               mov qword [rax + 0x10], 0	      3345	undo.c	FUNCTION_54	IF_2
0x4000213	          0x4885db	                           test rbx, rbx	      3348	undo.c	FUNCTION_54	WHILE_2
0x4000216	            0x7505	                           jne 0x400021d	      3348	undo.c	FUNCTION_54	WHILE_2
0x4000218	            0xeb2e	                           jmp 0x4000248	      3348	undo.c	FUNCTION_54	WHILE_2
0x400021a	          0x4889eb	                            mov rbx, rbp	      3353	undo.c	FUNCTION_54	WHILE_2
0x400021d	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      3351	undo.c	FUNCTION_54	WHILE_2	IF_3
0x4000221	          0x4885f6	                           test rsi, rsi	      3351	undo.c	FUNCTION_54	WHILE_2	IF_3
0x4000224	            0x740b	                            je 0x4000231	      3351	undo.c	FUNCTION_54	WHILE_2	IF_3
0x4000226	          0x4c89ea	                            mov rdx, r13	      3352	undo.c	FUNCTION_54	WHILE_2	CALL_2
0x4000229	          0x4c89e7	                            mov rdi, r12	      3352	undo.c	FUNCTION_54	WHILE_2	CALL_2
0x400022c	      0xe893ffffff	                   call sym.u_freebranch	      3352	undo.c	FUNCTION_54	WHILE_2	CALL_2
0x4000231	        0x488b6b08	                mov rbp, qword [rbx + 8]	      3353	undo.c	FUNCTION_54	WHILE_2
0x4000235	          0x4c89ea	                            mov rdx, r13	      3354	undo.c	FUNCTION_54	WHILE_2	CALL_3
0x4000238	          0x4889de	                            mov rsi, rbx	      3354	undo.c	FUNCTION_54	WHILE_2	CALL_3
0x400023b	          0x4c89e7	                            mov rdi, r12	      3354	undo.c	FUNCTION_54	WHILE_2	CALL_3
0x400023e	      0xe889feffff	                  call sym.u_freeentries	      3354	undo.c	FUNCTION_54	WHILE_2	CALL_3
0x4000243	          0x4885ed	                           test rbp, rbp	      3348	undo.c	FUNCTION_54	WHILE_2
0x4000246	            0x75d2	                           jne 0x400021a	      3348	undo.c	FUNCTION_54	WHILE_2
0x4000248	        0x4883c408	                              add rsp, 8	      3356	undo.c	FUNCTION_54
0x400024c	              0x5b	                                 pop rbx	      3356	undo.c	FUNCTION_54
0x400024d	              0x5d	                                 pop rbp	      3356	undo.c	FUNCTION_54
0x400024e	            0x415c	                                 pop r12	      3356	undo.c	FUNCTION_54
0x4000250	            0x415d	                                 pop r13	      3356	undo.c	FUNCTION_54
0x4000252	              0xc3	                                     ret	      3356	undo.c	FUNCTION_54
undo_read_time	ELSE,0:functions,0:SWITCH,0:FOR,1:CALL,2:WHILE,0:IF,1:DO,0	27
0x4000804	        0x4883ec18	                           sub rsp, 0x18	      1043	undo.c	FUNCTION_23
0x4000808	    0x64488b042528	                mov rax, qword fs:[0x28]	      1043	undo.c	FUNCTION_23
0x4000811	      0x4889442408	                mov qword [rsp + 8], rax	      1043	undo.c	FUNCTION_23
0x4000816	            0x31c0	                            xor eax, eax	      1043	undo.c	FUNCTION_23
0x4000818	      0x48837f1800	               cmp qword [rdi + 0x18], 0	      1045	undo.c	FUNCTION_23	IF_1
0x400081d	            0x742f	                            je 0x400084e	      1045	undo.c	FUNCTION_23	IF_1
0x400081f	      0xba08000000	                              mov edx, 8	      1051	undo.c	FUNCTION_23	IF_1	CALL_1
0x4000824	          0x4889e6	                            mov rsi, rsp	      1051	undo.c	FUNCTION_23	IF_1	CALL_1
0x4000827	      0xe810feffff	                      call sym.undo_read	      1051	undo.c	FUNCTION_23	IF_1	CALL_1
0x400082c	          0x4889e2	                            mov rdx, rsp	      1051	undo.c	FUNCTION_23	IF_1	CALL_1
0x400082f	      0x488d742408	                      lea rsi, [rsp + 8]	      1051	undo.c	FUNCTION_23	IF_1	CALL_1
0x4000834	      0xb800000000	                              mov eax, 0	      1048	undo.c	FUNCTION_23	IF_1
0x4000839	        0x48c1e008	                              shl rax, 8	      1053	undo.c	FUNCTION_23	IF_1	FOR_1
0x400083d	           0xfb60a	                   movzx ecx, byte [rdx]	      1053	undo.c	FUNCTION_23	IF_1	FOR_1
0x4000840	          0x4801c8	                            add rax, rcx	      1053	undo.c	FUNCTION_23	IF_1	FOR_1
0x4000843	        0x4883c201	                              add rdx, 1	      1053	undo.c	FUNCTION_23	IF_1	FOR_1
0x4000847	          0x4839f2	                            cmp rdx, rsi	      1052	undo.c	FUNCTION_23	IF_1	FOR_1
0x400084a	            0x75ed	                           jne 0x4000839	      1052	undo.c	FUNCTION_23	IF_1	FOR_1
0x400084c	            0xeb09	                           jmp 0x4000857	      1052	undo.c	FUNCTION_23	IF_1	FOR_1
0x400084e	        0x488b7f08	                mov rdi, qword [rdi + 8]	      1057	undo.c	FUNCTION_23	CALL_2
0x4000852	      0xe800000000	                          call 0x4000857	      1057	undo.c	FUNCTION_23	CALL_2
0x4000857	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1058	undo.c	FUNCTION_23
0x400085c	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1058	undo.c	FUNCTION_23
0x4000865	            0x7405	                            je 0x400086c	      1058	undo.c	FUNCTION_23
0x4000867	      0xe800000000	                          call 0x400086c	      1058	undo.c	FUNCTION_23
0x400086c	        0x4883c418	                           add rsp, 0x18	      1058	undo.c	FUNCTION_23
0x4000870	              0xc3	                                     ret	      1058	undo.c	FUNCTION_23
bufIsChangedNotTerm	ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,2:WHILE,0:IF,0:DO,0	18
0x4004ae1	              0x53	                                push rbx	      3541	undo.c	FUNCTION_64
0x4004ae2	          0x4889fb	                            mov rbx, rdi	      3541	undo.c	FUNCTION_64
0x4004ae5	      0xe800000000	                          call 0x4004aea	      3542	undo.c	FUNCTION_64	CALL_1
0x4004aea	      0xba00000000	                              mov edx, 0	      3543	undo.c	FUNCTION_64	CALL_2
0x4004aef	            0x85c0	                           test eax, eax	      3543	undo.c	FUNCTION_64	CALL_2
0x4004af1	            0x7523	                           jne 0x4004b16	      3543	undo.c	FUNCTION_64	CALL_2
0x4004af3	      0xba01000000	                              mov edx, 1	      3543	undo.c	FUNCTION_64	CALL_2
0x4004af8	    0x83bbc8000000	               cmp dword [rbx + 0xc8], 0	      3543	undo.c	FUNCTION_64	CALL_2
0x4004aff	            0x7515	                           jne 0x4004b16	      3543	undo.c	FUNCTION_64	CALL_2
0x4004b01	      0xbe01000000	                              mov esi, 1	      3543	undo.c	FUNCTION_64	CALL_2
0x4004b06	          0x4889df	                            mov rdi, rbx	      3543	undo.c	FUNCTION_64	CALL_2
0x4004b09	      0xe800000000	                          call 0x4004b0e	      3543	undo.c	FUNCTION_64	CALL_2
0x4004b0e	            0x85c0	                           test eax, eax	      3543	undo.c	FUNCTION_64	CALL_2
0x4004b10	           0xf95c2	                                setne dl	      3543	undo.c	FUNCTION_64	CALL_2
0x4004b13	           0xfb6d2	                           movzx edx, dl	      3543	undo.c	FUNCTION_64	CALL_2
0x4004b16	            0x89d0	                            mov eax, edx	      3544	undo.c	FUNCTION_64
0x4004b18	              0x5b	                                 pop rbx	      3544	undo.c	FUNCTION_64
0x4004b19	              0xc3	                                     ret	      3544	undo.c	FUNCTION_64
u_clearline	ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,1:WHILE,0:IF,1:DO,0	11
0x4003a04	    0x488b05000000	            mov rax, qword [0x04003a0b] 	      3446	undo.c	FUNCTION_59	IF_1
0x4003a0b	    0x488bb8601200	          mov rdi, qword [rax + 0x1260] 	      3446	undo.c	FUNCTION_59	IF_1
0x4003a12	          0x4885ff	                           test rdi, rdi	      3446	undo.c	FUNCTION_59	IF_1
0x4003a15	            0x742a	                            je 0x4003a41	      3446	undo.c	FUNCTION_59	IF_1
0x4003a17	        0x4883ec08	                              sub rsp, 8	      3445	undo.c	FUNCTION_59
0x4003a1b	      0xe800000000	                          call 0x4003a20	      3448	undo.c	FUNCTION_59	IF_1	CALL_1
0x4003a20	    0x488b05000000	            mov rax, qword [0x04003a27] 	      3448	undo.c	FUNCTION_59	IF_1	CALL_1
0x4003a27	    0x48c780601200	            mov qword [rax + 0x1260], 0 	      3448	undo.c	FUNCTION_59	IF_1	CALL_1
0x4003a32	    0x48c780681200	            mov qword [rax + 0x1268], 0 	      3449	undo.c	FUNCTION_59	IF_1
0x4003a3d	        0x4883c408	                              add rsp, 8	      3451	undo.c	FUNCTION_59
0x4003a41	            0xf3c3	                                     ret	      3451	undo.c	FUNCTION_59
u_add_time	ELSE,2:functions,0:SWITCH,0:FOR,0:CALL,8:WHILE,0:IF,2:DO,0	48
0x40009bc	            0x4154	                                push r12	      3113	undo.c	FUNCTION_45
0x40009be	              0x55	                                push rbp	      3113	undo.c	FUNCTION_45
0x40009bf	              0x53	                                push rbx	      3113	undo.c	FUNCTION_45
0x40009c0	        0x4883ec10	                           sub rsp, 0x10	      3113	undo.c	FUNCTION_45
0x40009c4	          0x4889fb	                            mov rbx, rdi	      3113	undo.c	FUNCTION_45
0x40009c7	          0x4889f5	                            mov rbp, rsi	      3113	undo.c	FUNCTION_45
0x40009ca	      0x4889542408	                mov qword [rsp + 8], rdx	      3113	undo.c	FUNCTION_45
0x40009cf	      0xe800000000	                          call 0x40009d4	      3117	undo.c	FUNCTION_45	IF_1	CALL_1
0x40009d4	      0x482b442408	                sub rax, qword [rsp + 8]	      3117	undo.c	FUNCTION_45	IF_1	CALL_1
0x40009d9	        0x4883f863	                           cmp rax, 0x63	      3117	undo.c	FUNCTION_45	IF_1	CALL_1
0x40009dd	            0x7e49	                           jle 0x4000a28	      3117	undo.c	FUNCTION_45	IF_1	CALL_1
0x40009df	      0x488d7c2408	                      lea rdi, [rsp + 8]	      3119	undo.c	FUNCTION_45	IF_1	CALL_2
0x40009e4	      0xe800000000	                          call 0x40009e9	      3119	undo.c	FUNCTION_45	IF_1	CALL_2
0x40009e9	          0x4989c4	                            mov r12, rax	      3119	undo.c	FUNCTION_45	IF_1	CALL_2
0x40009ec	      0xe800000000	                          call 0x40009f1	      3120	undo.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x40009f1	      0x482b442408	                sub rax, qword [rsp + 8]	      3120	undo.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x40009f6	    0x483dbfa80000	                         cmp rax, 0xa8bf	      3120	undo.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x40009fc	            0x7f15	                            jg 0x4000a13	      3120	undo.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x40009fe	          0x4c89e1	                            mov rcx, r12	      3122	undo.c	FUNCTION_45	IF_1	CALL_4
0x4000a01	      0xba00000000	                              mov edx, 0	      3122	undo.c	FUNCTION_45	IF_1	CALL_4
0x4000a06	          0x4889ee	                            mov rsi, rbp	      3122	undo.c	FUNCTION_45	IF_1	CALL_4
0x4000a09	          0x4889df	                            mov rdi, rbx	      3122	undo.c	FUNCTION_45	IF_1	CALL_4
0x4000a0c	      0xe800000000	                          call 0x4000a11	      3122	undo.c	FUNCTION_45	IF_1	CALL_4
0x4000a11	            0xeb4c	                           jmp 0x4000a5f	      3122	undo.c	FUNCTION_45	IF_1	CALL_4
0x4000a13	          0x4c89e1	                            mov rcx, r12	      3125	undo.c	FUNCTION_45	IF_1	CALL_5
0x4000a16	      0xba00000000	                              mov edx, 0	      3125	undo.c	FUNCTION_45	IF_1	CALL_5
0x4000a1b	          0x4889ee	                            mov rsi, rbp	      3125	undo.c	FUNCTION_45	IF_1	CALL_5
0x4000a1e	          0x4889df	                            mov rdi, rbx	      3125	undo.c	FUNCTION_45	IF_1	CALL_5
0x4000a21	      0xe800000000	                          call 0x4000a26	      3125	undo.c	FUNCTION_45	IF_1	CALL_5
0x4000a26	            0xeb37	                           jmp 0x4000a5f	      3125	undo.c	FUNCTION_45	IF_1	CALL_5
0x4000a28	      0xe800000000	                          call 0x4000a2d	      3130	undo.c	FUNCTION_45	CALL_8
0x4000a2d	      0x482b442408	                sub rax, qword [rsp + 8]	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x4000a32	          0x4989c4	                            mov r12, rax	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x4000a35	      0xba05000000	                              mov edx, 5	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x4000a3a	      0xbe00000000	                              mov esi, 0	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x4000a3f	      0xbf00000000	                              mov edi, 0	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x4000a44	      0xe800000000	                          call 0x4000a49	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x4000a49	          0x4c89e1	                            mov rcx, r12	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x4000a4c	          0x4889c2	                            mov rdx, rax	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x4000a4f	          0x4889ee	                            mov rsi, rbp	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x4000a52	          0x4889df	                            mov rdi, rbx	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x4000a55	      0xb800000000	                              mov eax, 0	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x4000a5a	      0xe800000000	                          call 0x4000a5f	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x4000a5f	        0x4883c410	                           add rsp, 0x10	      3131	undo.c	FUNCTION_45
0x4000a63	              0x5b	                                 pop rbx	      3131	undo.c	FUNCTION_45
0x4000a64	              0x5d	                                 pop rbp	      3131	undo.c	FUNCTION_45
0x4000a65	            0x415c	                                 pop r12	      3131	undo.c	FUNCTION_45
0x4000a67	              0xc3	                                     ret	      3131	undo.c	FUNCTION_45
u_undo	ELSE,1:functions,0:SWITCH,0:FOR,0:CALL,3:WHILE,0:IF,2:DO,0	23
0x4002dfd	              0x53	                                push rbx	      2149	undo.c	FUNCTION_37
0x4002dfe	            0x89fb	                            mov ebx, edi	      2149	undo.c	FUNCTION_37
0x4002e00	    0x488b05000000	            mov rax, qword [0x04002e07] 	      2155	undo.c	FUNCTION_37	IF_1
0x4002e07	    0x83b834120000	             cmp dword [rax + 0x1234], 0	      2155	undo.c	FUNCTION_37	IF_1
0x4002e0e	            0x750f	                           jne 0x4002e1f	      2155	undo.c	FUNCTION_37	IF_1
0x4002e10	      0xbf01000000	                              mov edi, 1	      2157	undo.c	FUNCTION_37	IF_1	CALL_1
0x4002e15	      0xe800000000	                          call 0x4002e1a	      2157	undo.c	FUNCTION_37	IF_1	CALL_1
0x4002e1a	      0xbb01000000	                              mov ebx, 1	      2158	undo.c	FUNCTION_37	IF_1
0x4002e1f	      0xbe75000000	                           mov esi, 0x75	      2161	undo.c	FUNCTION_37	IF_2	CALL_2
0x4002e24	    0x488b3d000000	            mov rdi, qword [0x04002e2b] 	      2161	undo.c	FUNCTION_37	IF_2	CALL_2
0x4002e2b	      0xe800000000	                          call 0x4002e30	      2161	undo.c	FUNCTION_37	IF_2	CALL_2
0x4002e30	          0x4885c0	                           test rax, rax	      2161	undo.c	FUNCTION_37	IF_2	CALL_2
0x4002e33	            0x750c	                           jne 0x4002e41	      2161	undo.c	FUNCTION_37	IF_2	CALL_2
0x4002e35	    0xc70500000000	               mov dword [0x04002e3f], 1	      2162	undo.c	FUNCTION_37	IF_2
0x4002e3f	            0xeb13	                           jmp 0x4002e54	      2162	undo.c	FUNCTION_37	IF_2
0x4002e41	    0x833d00000000	               cmp dword [0x04002e48], 0	      2164	undo.c	FUNCTION_37	ELSE_1
0x4002e48	           0xf94c0	                                 sete al	      2164	undo.c	FUNCTION_37	ELSE_1
0x4002e4b	           0xfb6c0	                           movzx eax, al	      2164	undo.c	FUNCTION_37	ELSE_1
0x4002e4e	    0x890500000000	            mov dword [0x04002e54], eax 	      2164	undo.c	FUNCTION_37	ELSE_1
0x4002e54	            0x89df	                            mov edi, ebx	      2165	undo.c	FUNCTION_37	CALL_3
0x4002e56	      0xe8f5e6ffff	                         call sym.u_doit	      2165	undo.c	FUNCTION_37	CALL_3
0x4002e5b	              0x5b	                                 pop rbx	      2166	undo.c	FUNCTION_37
0x4002e5c	              0xc3	                                     ret	      2166	undo.c	FUNCTION_37
u_save	ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,2:WHILE,0:IF,3:DO,0	34
0x4003ac1	    0x8b0500000000	            mov eax, dword [0x04003ac7] 	       266	undo.c	FUNCTION_4	IF_1
0x4003ac7	            0x85c0	                           test eax, eax	       266	undo.c	FUNCTION_4	IF_1
0x4003ac9	            0x7552	                           jne 0x4003b1d	       266	undo.c	FUNCTION_4	IF_1
0x4003acb	    0x488b15000000	            mov rdx, qword [0x04003ad2] 	       269	undo.c	FUNCTION_4	IF_2
0x4003ad2	          0x488b12	                    mov rdx, qword [rdx]	       269	undo.c	FUNCTION_4	IF_2
0x4003ad5	          0x4839f7	                            cmp rdi, rsi	       270	undo.c	FUNCTION_4	IF_2
0x4003ad8	            0x7d4f	                           jge 0x4003b29	       270	undo.c	FUNCTION_4	IF_2
0x4003ada	          0x4839fa	                            cmp rdx, rdi	       270	undo.c	FUNCTION_4	IF_2
0x4003add	            0x7c4a	                            jl 0x4003b29	       270	undo.c	FUNCTION_4	IF_2
0x4003adf	        0x4883c201	                              add rdx, 1	       271	undo.c	FUNCTION_4	IF_2
0x4003ae3	          0x4839d6	                            cmp rsi, rdx	       271	undo.c	FUNCTION_4	IF_2
0x4003ae6	            0x7f41	                            jg 0x4003b29	       271	undo.c	FUNCTION_4	IF_2
0x4003ae8	              0x55	                                push rbp	       265	undo.c	FUNCTION_4
0x4003ae9	              0x53	                                push rbx	       265	undo.c	FUNCTION_4
0x4003aea	        0x4883ec08	                              sub rsp, 8	       265	undo.c	FUNCTION_4
0x4003aee	          0x4889f5	                            mov rbp, rsi	       265	undo.c	FUNCTION_4
0x4003af1	          0x4889fb	                            mov rbx, rdi	       265	undo.c	FUNCTION_4
0x4003af4	        0x488d4702	                      lea rax, [rdi + 2]	       274	undo.c	FUNCTION_4	IF_3
0x4003af8	          0x4839c6	                            cmp rsi, rax	       274	undo.c	FUNCTION_4	IF_3
0x4003afb	            0x7509	                           jne 0x4003b06	       274	undo.c	FUNCTION_4	IF_3
0x4003afd	        0x488d7f01	                      lea rdi, [rdi + 1]	       275	undo.c	FUNCTION_4	CALL_1
0x4003b01	      0xe800000000	                          call 0x4003b06	       275	undo.c	FUNCTION_4	CALL_1
0x4003b06	      0xb900000000	                              mov ecx, 0	       277	undo.c	FUNCTION_4	CALL_2
0x4003b0b	      0xba00000000	                              mov edx, 0	       277	undo.c	FUNCTION_4	CALL_2
0x4003b10	          0x4889ee	                            mov rsi, rbp	       277	undo.c	FUNCTION_4	CALL_2
0x4003b13	          0x4889df	                            mov rdi, rbx	       277	undo.c	FUNCTION_4	CALL_2
0x4003b16	      0xe800000000	                          call 0x4003b1b	       277	undo.c	FUNCTION_4	CALL_2
0x4003b1b	            0xeb06	                           jmp 0x4003b23	       277	undo.c	FUNCTION_4	CALL_2
0x4003b1d	      0xb801000000	                              mov eax, 1	       267	undo.c	FUNCTION_4	IF_1
0x4003b22	              0xc3	                                     ret	       267	undo.c	FUNCTION_4	IF_1
0x4003b23	        0x4883c408	                              add rsp, 8	       278	undo.c	FUNCTION_4
0x4003b27	              0x5b	                                 pop rbx	       278	undo.c	FUNCTION_4
0x4003b28	              0x5d	                                 pop rbp	       278	undo.c	FUNCTION_4
0x4003b29	            0xf3c3	                                     ret	       278	undo.c	FUNCTION_4
u_getbot	ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,3:WHILE,0:IF,3:DO,0	35
0x40002ce	              0x53	                                push rbx	      3256	undo.c	FUNCTION_52
0x40002cf	      0xe8b4ffffff	                call sym.u_get_headentry	      3260	undo.c	FUNCTION_52	CALL_1
0x40002d4	          0x4885c0	                           test rax, rax	      3261	undo.c	FUNCTION_52	IF_1
0x40002d7	     0xf8488000000	                            je 0x4000365	      3261	undo.c	FUNCTION_52	IF_1
0x40002dd	    0x488b05000000	            mov rax, qword [0x040002e4] 	      3264	undo.c	FUNCTION_52
0x40002e4	    0x488b90201200	          mov rdx, qword [rax + 0x1220] 	      3264	undo.c	FUNCTION_52
0x40002eb	        0x488b5a38	            mov rbx, qword [rdx + 0x38] 	      3264	undo.c	FUNCTION_52
0x40002ef	          0x4885db	                           test rbx, rbx	      3265	undo.c	FUNCTION_52	IF_2
0x40002f2	            0x7460	                            je 0x4000354	      3265	undo.c	FUNCTION_52	IF_2
0x40002f4	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      3273	undo.c	FUNCTION_52	IF_2
0x40002f8	        0x48034b08	                add rcx, qword [rbx + 8]	      3273	undo.c	FUNCTION_52	IF_2
0x40002fc	          0x488b10	                    mov rdx, qword [rax]	      3273	undo.c	FUNCTION_52	IF_2
0x40002ff	        0x482b5318	             sub rdx, qword [rbx + 0x18]	      3273	undo.c	FUNCTION_52	IF_2
0x4000303	      0x488d541101	                lea rdx, [rcx + rdx + 1]	      3273	undo.c	FUNCTION_52	IF_2
0x4000308	        0x48895310	             mov qword [rbx + 0x10], rdx	      3273	undo.c	FUNCTION_52	IF_2
0x400030c	          0x4885d2	                           test rdx, rdx	      3274	undo.c	FUNCTION_52	IF_2	IF_3
0x400030f	            0x7e05	                           jle 0x4000316	      3274	undo.c	FUNCTION_52	IF_2	IF_3
0x4000311	          0x483b10	                    cmp rdx, qword [rax]	      3274	undo.c	FUNCTION_52	IF_2	IF_3
0x4000314	            0x7e28	                           jle 0x400033e	      3274	undo.c	FUNCTION_52	IF_2	IF_3
0x4000316	      0xba05000000	                              mov edx, 5	      3276	undo.c	FUNCTION_52	IF_2	IF_3	CALL_3
0x400031b	      0xbe00000000	                              mov esi, 0	      3276	undo.c	FUNCTION_52	IF_2	IF_3	CALL_3
0x4000320	      0xbf00000000	                              mov edi, 0	      3276	undo.c	FUNCTION_52	IF_2	IF_3	CALL_3
0x4000325	      0xe800000000	                          call 0x400032a	      3276	undo.c	FUNCTION_52	IF_2	IF_3	CALL_3
0x400032a	          0x4889c7	                            mov rdi, rax	      3276	undo.c	FUNCTION_52	IF_2	IF_3	CALL_3
0x400032d	      0xe800000000	                          call 0x4000332	      3276	undo.c	FUNCTION_52	IF_2	IF_3	CALL_3
0x4000332	        0x488b4308	                mov rax, qword [rbx + 8]	      3277	undo.c	FUNCTION_52	IF_2	IF_3
0x4000336	        0x4883c001	                              add rax, 1	      3277	undo.c	FUNCTION_52	IF_2	IF_3
0x400033a	        0x48894310	             mov qword [rbx + 0x10], rax	      3277	undo.c	FUNCTION_52	IF_2	IF_3
0x400033e	    0x488b05000000	            mov rax, qword [0x04000345] 	      3283	undo.c	FUNCTION_52	IF_2
0x4000345	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	      3283	undo.c	FUNCTION_52	IF_2
0x400034c	    0x48c740380000	               mov qword [rax + 0x38], 0	      3283	undo.c	FUNCTION_52	IF_2
0x4000354	    0x488b05000000	            mov rax, qword [0x0400035b] 	      3286	undo.c	FUNCTION_52
0x400035b	    0xc78034120000	            mov dword [rax + 0x1234], 1 	      3286	undo.c	FUNCTION_52
0x4000365	              0x5b	                                 pop rbx	      3287	undo.c	FUNCTION_52
0x4000366	              0xc3	                                     ret	      3287	undo.c	FUNCTION_52
unserialize_pos	ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,4:WHILE,0:IF,3:DO,0	27
0x40008e0	              0x55	                                push rbp	      1462	undo.c	FUNCTION_32
0x40008e1	              0x53	                                push rbx	      1462	undo.c	FUNCTION_32
0x40008e2	        0x4883ec08	                              sub rsp, 8	      1462	undo.c	FUNCTION_32
0x40008e6	          0x4889fd	                            mov rbp, rdi	      1462	undo.c	FUNCTION_32
0x40008e9	          0x4889f3	                            mov rbx, rsi	      1462	undo.c	FUNCTION_32
0x40008ec	      0xe880ffffff	                   call sym.undo_read_4c	      1463	undo.c	FUNCTION_32	CALL_1
0x40008f1	            0x4898	                                    cdqe	      1463	undo.c	FUNCTION_32	CALL_1
0x40008f3	          0x4885c0	                           test rax, rax	      1464	undo.c	FUNCTION_32	IF_1
0x40008f6	      0xba00000000	                              mov edx, 0	      1463	undo.c	FUNCTION_32	CALL_1
0x40008fb	        0x480f48c2	                          cmovs rax, rdx	      1463	undo.c	FUNCTION_32	CALL_1
0x40008ff	          0x488903	                    mov qword [rbx], rax	      1463	undo.c	FUNCTION_32	CALL_1
0x4000902	          0x4889ef	                            mov rdi, rbp	      1466	undo.c	FUNCTION_32	CALL_2
0x4000905	      0xe867ffffff	                   call sym.undo_read_4c	      1466	undo.c	FUNCTION_32	CALL_2
0x400090a	            0x85c0	                           test eax, eax	      1467	undo.c	FUNCTION_32	IF_2
0x400090c	      0xba00000000	                              mov edx, 0	      1466	undo.c	FUNCTION_32	CALL_2
0x4000911	           0xf48c2	                          cmovs eax, edx	      1466	undo.c	FUNCTION_32	CALL_2
0x4000914	          0x894308	                mov dword [rbx + 8], eax	      1466	undo.c	FUNCTION_32	CALL_2
0x4000917	          0x4889ef	                            mov rdi, rbp	      1470	undo.c	FUNCTION_32	CALL_3
0x400091a	      0xe852ffffff	                   call sym.undo_read_4c	      1470	undo.c	FUNCTION_32	CALL_3
0x400091f	            0x85c0	                           test eax, eax	      1471	undo.c	FUNCTION_32	IF_3
0x4000921	      0xba00000000	                              mov edx, 0	      1470	undo.c	FUNCTION_32	CALL_3
0x4000926	           0xf48c2	                          cmovs eax, edx	      1470	undo.c	FUNCTION_32	CALL_3
0x4000929	          0x89430c	              mov dword [rbx + 0xc], eax	      1470	undo.c	FUNCTION_32	CALL_3
0x400092c	        0x4883c408	                              add rsp, 8	      1476	undo.c	FUNCTION_32
0x4000930	              0x5b	                                 pop rbx	      1476	undo.c	FUNCTION_32
0x4000931	              0x5d	                                 pop rbp	      1476	undo.c	FUNCTION_32
0x4000932	              0xc3	                                     ret	      1476	undo.c	FUNCTION_32
u_savedel	ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,1:WHILE,0:IF,1:DO,0	14
0x4001ea1	      0xb801000000	                              mov eax, 1	       321	undo.c	FUNCTION_7	IF_1
0x4001ea6	    0x833d00000000	               cmp dword [0x04001ead], 0	       320	undo.c	FUNCTION_7	IF_1
0x4001ead	            0x752c	                           jne 0x4001edb	       320	undo.c	FUNCTION_7	IF_1
0x4001eaf	        0x4883ec08	                              sub rsp, 8	       319	undo.c	FUNCTION_7
0x4001eb3	    0x488b05000000	            mov rax, qword [0x04001eba] 	       324	undo.c	FUNCTION_7
0x4001eba	          0x483930	                    cmp qword [rax], rsi	       323	undo.c	FUNCTION_7	CALL_1
0x4001ebd	      0xba02000000	                              mov edx, 2	       323	undo.c	FUNCTION_7	CALL_1
0x4001ec2	        0x480f45d7	                         cmovne rdx, rdi	       323	undo.c	FUNCTION_7	CALL_1
0x4001ec6	          0x4801fe	                            add rsi, rdi	       323	undo.c	FUNCTION_7	CALL_1
0x4001ec9	        0x4883ef01	                              sub rdi, 1	       323	undo.c	FUNCTION_7	CALL_1
0x4001ecd	      0xb900000000	                              mov ecx, 0	       323	undo.c	FUNCTION_7	CALL_1
0x4001ed2	      0xe800000000	                          call 0x4001ed7	       323	undo.c	FUNCTION_7	CALL_1
0x4001ed7	        0x4883c408	                              add rsp, 8	       325	undo.c	FUNCTION_7
0x4001edb	            0xf3c3	                                     ret	       325	undo.c	FUNCTION_7
u_freeheader	ELSE,2:functions,0:SWITCH,0:FOR,1:CALL,2:WHILE,0:IF,4:DO,0	41
0x4000144	            0x4154	                                push r12	      3297	undo.c	FUNCTION_53
0x4000146	              0x55	                                push rbp	      3297	undo.c	FUNCTION_53
0x4000147	              0x53	                                push rbx	      3297	undo.c	FUNCTION_53
0x4000148	          0x4889fd	                            mov rbp, rdi	      3297	undo.c	FUNCTION_53
0x400014b	          0x4889f3	                            mov rbx, rsi	      3297	undo.c	FUNCTION_53
0x400014e	          0x4989d4	                            mov r12, rdx	      3297	undo.c	FUNCTION_53
0x4000151	        0x488b7610	            mov rsi, qword [rsi + 0x10] 	      3302	undo.c	FUNCTION_53	IF_1
0x4000155	          0x4885f6	                           test rsi, rsi	      3302	undo.c	FUNCTION_53	IF_1
0x4000158	            0x7405	                            je 0x400015f	      3302	undo.c	FUNCTION_53	IF_1
0x400015a	      0xe865000000	                   call sym.u_freebranch	      3303	undo.c	FUNCTION_53	CALL_1
0x400015f	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3305	undo.c	FUNCTION_53	IF_2
0x4000163	          0x4885c0	                           test rax, rax	      3305	undo.c	FUNCTION_53	IF_2
0x4000166	            0x7408	                            je 0x4000170	      3305	undo.c	FUNCTION_53	IF_2
0x4000168	    0x48c740100000	               mov qword [rax + 0x10], 0	      3306	undo.c	FUNCTION_53	IF_2
0x4000170	          0x488b03	                    mov rax, qword [rbx]	      3309	undo.c	FUNCTION_53	IF_3
0x4000173	          0x4885c0	                           test rax, rax	      3309	undo.c	FUNCTION_53	IF_3
0x4000176	            0x750d	                           jne 0x4000185	      3309	undo.c	FUNCTION_53	IF_3
0x4000178	        0x488b4308	                mov rax, qword [rbx + 8]	      3310	undo.c	FUNCTION_53	IF_3
0x400017c	    0x488985181200	          mov qword [rbp + 0x1218], rax 	      3310	undo.c	FUNCTION_53	IF_3
0x4000183	            0xeb08	                           jmp 0x400018d	      3310	undo.c	FUNCTION_53	IF_3
0x4000185	        0x488b5308	                mov rdx, qword [rbx + 8]	      3312	undo.c	FUNCTION_53	ELSE_1
0x4000189	        0x48895008	                mov qword [rax + 8], rdx	      3312	undo.c	FUNCTION_53	ELSE_1
0x400018d	        0x488b4308	                mov rax, qword [rbx + 8]	      3314	undo.c	FUNCTION_53	IF_4
0x4000191	          0x4885c0	                           test rax, rax	      3314	undo.c	FUNCTION_53	IF_4
0x4000194	            0x750c	                           jne 0x40001a2	      3314	undo.c	FUNCTION_53	IF_4
0x4000196	          0x488b03	                    mov rax, qword [rbx]	      3315	undo.c	FUNCTION_53	IF_4
0x4000199	    0x488985201200	          mov qword [rbp + 0x1220], rax 	      3315	undo.c	FUNCTION_53	IF_4
0x40001a0	            0xeb0f	                           jmp 0x40001b1	      3315	undo.c	FUNCTION_53	IF_4
0x40001a2	          0x488b13	                    mov rdx, qword [rbx]	      3319	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x40001a5	          0x488910	                    mov qword [rax], rdx	      3319	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x40001a8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3318	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x40001ac	          0x4885c0	                           test rax, rax	      3317	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x40001af	            0x75f1	                           jne 0x40001a2	      3317	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x40001b1	          0x4c89e2	                            mov rdx, r12	      3321	undo.c	FUNCTION_53	CALL_2
0x40001b4	          0x4889de	                            mov rsi, rbx	      3321	undo.c	FUNCTION_53	CALL_2
0x40001b7	          0x4889ef	                            mov rdi, rbp	      3321	undo.c	FUNCTION_53	CALL_2
0x40001ba	      0xe80dffffff	                  call sym.u_freeentries	      3321	undo.c	FUNCTION_53	CALL_2
0x40001bf	              0x5b	                                 pop rbx	      3322	undo.c	FUNCTION_53
0x40001c0	              0x5d	                                 pop rbp	      3322	undo.c	FUNCTION_53
0x40001c1	            0x415c	                                 pop r12	      3322	undo.c	FUNCTION_53
0x40001c3	              0xc3	                                     ret	      3322	undo.c	FUNCTION_53
bufIsChanged	ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,2:WHILE,0:IF,1:DO,0	13
0x4004b1a	              0x53	                                push rbx	      3528	undo.c	FUNCTION_63
0x4004b1b	          0x4889fb	                            mov rbx, rdi	      3528	undo.c	FUNCTION_63
0x4004b1e	    0x488bbf481c00	          mov rdi, qword [rdi + 0x1c48] 	      3530	undo.c	FUNCTION_63	IF_1	CALL_1
0x4004b25	      0xe800000000	                          call 0x4004b2a	      3530	undo.c	FUNCTION_63	IF_1	CALL_1
0x4004b2a	      0xba01000000	                              mov edx, 1	      3531	undo.c	FUNCTION_63	IF_1
0x4004b2f	            0x85c0	                           test eax, eax	      3530	undo.c	FUNCTION_63	IF_1	CALL_1
0x4004b31	            0x750a	                           jne 0x4004b3d	      3530	undo.c	FUNCTION_63	IF_1	CALL_1
0x4004b33	          0x4889df	                            mov rdi, rbx	      3533	undo.c	FUNCTION_63	CALL_2
0x4004b36	      0xe800000000	                          call 0x4004b3b	      3533	undo.c	FUNCTION_63	CALL_2
0x4004b3b	            0x89c2	                            mov edx, eax	      3533	undo.c	FUNCTION_63	CALL_2
0x4004b3d	            0x89d0	                            mov eax, edx	      3534	undo.c	FUNCTION_63
0x4004b3f	              0x5b	                                 pop rbx	      3534	undo.c	FUNCTION_63
0x4004b40	              0xc3	                                     ret	      3534	undo.c	FUNCTION_63
u_inssub	ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,1:WHILE,0:IF,1:DO,0	11
0x4001e74	      0xb801000000	                              mov eax, 1	       305	undo.c	FUNCTION_6	IF_1
0x4001e79	    0x833d00000000	               cmp dword [0x04001e80], 0	       304	undo.c	FUNCTION_6	IF_1
0x4001e80	            0x751d	                           jne 0x4001e9f	       304	undo.c	FUNCTION_6	IF_1
0x4001e82	        0x4883ec08	                              sub rsp, 8	       303	undo.c	FUNCTION_6
0x4001e86	          0x4889fe	                            mov rsi, rdi	       303	undo.c	FUNCTION_6
0x4001e89	        0x488d5701	                      lea rdx, [rdi + 1]	       307	undo.c	FUNCTION_6	CALL_1
0x4001e8d	        0x488d7fff	                      lea rdi, [rdi - 1]	       307	undo.c	FUNCTION_6	CALL_1
0x4001e91	      0xb900000000	                              mov ecx, 0	       307	undo.c	FUNCTION_6	CALL_1
0x4001e96	      0xe800000000	                          call 0x4001e9b	       307	undo.c	FUNCTION_6	CALL_1
0x4001e9b	        0x4883c408	                              add rsp, 8	       308	undo.c	FUNCTION_6
0x4001e9f	            0xf3c3	                                     ret	       308	undo.c	FUNCTION_6
undo_read_2c	ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,2:WHILE,0:IF,1:DO,0	22
0x4000732	        0x4883ec18	                           sub rsp, 0x18	      1011	undo.c	FUNCTION_21
0x4000736	    0x64488b042528	                mov rax, qword fs:[0x28]	      1011	undo.c	FUNCTION_21
0x400073f	      0x4889442408	                mov qword [rsp + 8], rax	      1011	undo.c	FUNCTION_21
0x4000744	            0x31c0	                            xor eax, eax	      1011	undo.c	FUNCTION_21
0x4000746	      0x48837f1800	               cmp qword [rdi + 0x18], 0	      1013	undo.c	FUNCTION_21	IF_1
0x400074b	            0x741d	                            je 0x400076a	      1013	undo.c	FUNCTION_21	IF_1
0x400074d	      0xba02000000	                              mov edx, 2	      1018	undo.c	FUNCTION_21	IF_1	CALL_1
0x4000752	          0x4889e6	                            mov rsi, rsp	      1018	undo.c	FUNCTION_21	IF_1	CALL_1
0x4000755	      0xe8e2feffff	                      call sym.undo_read	      1018	undo.c	FUNCTION_21	IF_1	CALL_1
0x400075a	         0xfb60424	                   movzx eax, byte [rsp]	      1019	undo.c	FUNCTION_21	IF_1
0x400075e	          0xc1e008	                              shl eax, 8	      1019	undo.c	FUNCTION_21	IF_1
0x4000761	       0xfb6542401	               movzx edx, byte [rsp + 1]	      1019	undo.c	FUNCTION_21	IF_1
0x4000766	             0x1d0	                            add eax, edx	      1020	undo.c	FUNCTION_21	IF_1
0x4000768	            0xeb09	                           jmp 0x4000773	      1020	undo.c	FUNCTION_21	IF_1
0x400076a	        0x488b7f08	                mov rdi, qword [rdi + 8]	      1023	undo.c	FUNCTION_21	CALL_2
0x400076e	      0xe800000000	                          call 0x4000773	      1023	undo.c	FUNCTION_21	CALL_2
0x4000773	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1024	undo.c	FUNCTION_21
0x4000778	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1024	undo.c	FUNCTION_21
0x4000781	            0x7405	                            je 0x4000788	      1024	undo.c	FUNCTION_21
0x4000783	      0xe800000000	                          call 0x4000788	      1024	undo.c	FUNCTION_21
0x4000788	        0x4883c418	                           add rsp, 0x18	      1024	undo.c	FUNCTION_21
0x400078c	              0xc3	                                     ret	      1024	undo.c	FUNCTION_21
