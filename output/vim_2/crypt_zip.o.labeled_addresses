crypt_zip_encode	CALL,2:functions,0:FOR,1:ELSE,0:IF,0:SWITCH,0:WHILE,0:DO,0	41
0x4000130	          0x4885d2	                           test rdx, rdx	       127	crypt_zip.c	FUNCTION_3	FOR_1
0x4000133	        0x4c8b4f08	                 mov r9, qword [rdi + 8]	       123	crypt_zip.c	FUNCTION_3
0x4000137	            0x747d	                            je 0x40001b6	       127	crypt_zip.c	FUNCTION_3	FOR_1
0x4000139	              0x53	                                push rbx	       122	crypt_zip.c	FUNCTION_3
0x400013a	          0x4531d2	                          xor r10d, r10d	       122	crypt_zip.c	FUNCTION_3
0x400013d	           0xf1f00	                         nop dword [rax]	       122	crypt_zip.c	FUNCTION_3
0x4000140	      0x460fb61c16	            movzx r11d, byte [rsi + r10]	       129	crypt_zip.c	FUNCTION_3	FOR_1
0x4000145	          0x418b01	                     mov eax, dword [r9]	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x4000148	        0x458b4108	                 mov r8d, dword [r9 + 8]	       130	crypt_zip.c	FUNCTION_3	FOR_1	CALL_1
0x400014c	          0x4489db	                           mov ebx, r11d	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x400014f	          0x4489c7	                            mov edi, r8d	       130	crypt_zip.c	FUNCTION_3	FOR_1	CALL_1
0x4000152	            0x31c3	                            xor ebx, eax	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x4000154	          0xc1e808	                              shr eax, 8	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x4000157	          0x83cf02	                               or edi, 2	       130	crypt_zip.c	FUNCTION_3	FOR_1	CALL_1
0x400015a	           0xfb6db	                           movzx ebx, bl	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x400015d	    0x33049d000000	                  xor eax, dword [rbx*4]	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x4000164	          0x418901	                     mov dword [r9], eax	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x4000167	           0xfb6c0	                           movzx eax, al	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x400016a	        0x41034104	                 add eax, dword [r9 + 4]	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x400016e	    0x69c005840808	                imul eax, eax, 0x8088405	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x4000174	          0x83c001	                              add eax, 1	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x4000177	        0x41894104	                 mov dword [r9 + 4], eax	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x400017b	          0xc1e818	                           shr eax, 0x18	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x400017e	          0x4431c0	                            xor eax, r8d	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x4000181	        0x41c1e808	                              shr r8d, 8	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x4000185	           0xfb6c0	                           movzx eax, al	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x4000188	    0x443304850000	                  xor r8d, dword [rax*4]	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x4000190	            0x89f8	                            mov eax, edi	       132	crypt_zip.c	FUNCTION_3	FOR_1
0x4000192	           0xfb7ff	                           movzx edi, di	       132	crypt_zip.c	FUNCTION_3	FOR_1
0x4000195	          0x83f001	                              xor eax, 1	       132	crypt_zip.c	FUNCTION_3	FOR_1
0x4000198	           0xfb7c0	                           movzx eax, ax	       132	crypt_zip.c	FUNCTION_3	FOR_1
0x400019b	           0xfaff8	                           imul edi, eax	       132	crypt_zip.c	FUNCTION_3	FOR_1
0x400019e	        0x45894108	                 mov dword [r9 + 8], r8d	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x40001a2	          0xc1ef08	                              shr edi, 8	       132	crypt_zip.c	FUNCTION_3	FOR_1
0x40001a5	          0x4131fb	                           xor r11d, edi	       132	crypt_zip.c	FUNCTION_3	FOR_1
0x40001a8	        0x46881c11	              mov byte [rcx + r10], r11b	       132	crypt_zip.c	FUNCTION_3	FOR_1
0x40001ac	        0x4983c201	                              add r10, 1	       127	crypt_zip.c	FUNCTION_3	FOR_1
0x40001b0	          0x4c39d2	                            cmp rdx, r10	       127	crypt_zip.c	FUNCTION_3	FOR_1
0x40001b3	            0x758b	                           jne 0x4000140	       127	crypt_zip.c	FUNCTION_3	FOR_1
0x40001b5	              0x5b	                                 pop rbx	       134	crypt_zip.c	FUNCTION_3
0x40001b6	            0xf3c3	                                     ret	       134	crypt_zip.c	FUNCTION_3
crypt_zip_decode	CALL,1:functions,0:FOR,1:ELSE,0:IF,0:SWITCH,0:WHILE,0:DO,0	40
0x40001c0	          0x4885d2	                           test rdx, rdx	       150	crypt_zip.c	FUNCTION_4	FOR_1
0x40001c3	        0x4c8b5708	                mov r10, qword [rdi + 8]	       146	crypt_zip.c	FUNCTION_4
0x40001c7	     0xf848d000000	                            je 0x400025a	       150	crypt_zip.c	FUNCTION_4	FOR_1
0x40001cd	        0x418b4208	                mov eax, dword [r10 + 8]	       150	crypt_zip.c	FUNCTION_4	FOR_1
0x40001d1	          0x418b3a	                    mov edi, dword [r10]	       150	crypt_zip.c	FUNCTION_4	FOR_1
0x40001d4	          0x4531db	                          xor r11d, r11d	       150	crypt_zip.c	FUNCTION_4	FOR_1
0x40001d7	    0x660f1f840000	                    nop word [rax + rax]	       150	crypt_zip.c	FUNCTION_4	FOR_1
0x40001e0	          0x83c802	                               or eax, 2	       152	crypt_zip.c	FUNCTION_4	FOR_1
0x40001e3	          0x4189c0	                            mov r8d, eax	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x40001e6	        0x440fb7c8	                           movzx r9d, ax	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x40001ea	        0x4183f001	                              xor r8d, 1	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x40001ee	        0x450fb7c0	                          movzx r8d, r8w	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x40001f2	        0x450fafc1	                           imul r8d, r9d	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x40001f6	        0x41c1e808	                              shr r8d, 8	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x40001fa	          0x4489c0	                            mov eax, r8d	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x40001fd	        0x4232041e	                xor al, byte [rsi + r11]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x4000201	        0x42880419	                mov byte [rcx + r11], al	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x4000205	            0x31f8	                            xor eax, edi	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x4000207	        0x4983c301	                              add r11, 1	       150	crypt_zip.c	FUNCTION_4	FOR_1
0x400020b	           0xfb6f8	                           movzx edi, al	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x400020e	          0x418b02	                    mov eax, dword [r10]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x4000211	          0xc1e808	                              shr eax, 8	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x4000214	    0x3304bd000000	                  xor eax, dword [rdi*4]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x400021b	        0x440fb6c0	                           movzx r8d, al	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x400021f	        0x45034204	                add r8d, dword [r10 + 4]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x4000223	          0x418902	                    mov dword [r10], eax	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x4000226	            0x89c7	                            mov edi, eax	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x4000228	        0x418b4208	                mov eax, dword [r10 + 8]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x400022c	    0x4569c0058408	                imul r8d, r8d, 0x8088405	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x4000233	        0x4183c001	                              add r8d, 1	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x4000237	        0x45894204	                mov dword [r10 + 4], r8d	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x400023b	        0x41c1e818	                           shr r8d, 0x18	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x400023f	          0x4131c0	                            xor r8d, eax	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x4000242	          0xc1e808	                              shr eax, 8	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x4000245	        0x450fb6c0	                          movzx r8d, r8b	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x4000249	    0x423304850000	                   xor eax, dword [r8*4]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x4000251	          0x4c39da	                            cmp rdx, r11	       150	crypt_zip.c	FUNCTION_4	FOR_1
0x4000254	        0x41894208	                mov dword [r10 + 8], eax	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x4000258	            0x7586	                           jne 0x40001e0	       150	crypt_zip.c	FUNCTION_4	FOR_1
0x400025a	            0xf3c3	                                     ret	       150	crypt_zip.c	FUNCTION_4	FOR_1
crypt_zip_init	CALL,3:functions,0:FOR,1:ELSE,0:IF,0:SWITCH,0:WHILE,0:DO,0	65
0x4000040	              0x55	                                push rbp	        95	crypt_zip.c	FUNCTION_2
0x4000041	              0x53	                                push rbx	        95	crypt_zip.c	FUNCTION_2
0x4000042	          0x4889fd	                            mov rbp, rdi	        95	crypt_zip.c	FUNCTION_2
0x4000045	      0xbf0c000000	                            mov edi, 0xc	        99	crypt_zip.c	FUNCTION_2	CALL_1
0x400004a	          0x4889f3	                            mov rbx, rsi	        95	crypt_zip.c	FUNCTION_2
0x400004d	        0x4883ec08	                              sub rsp, 8	        95	crypt_zip.c	FUNCTION_2
0x4000051	      0xe800000000	                          call 0x4000056	        99	crypt_zip.c	FUNCTION_2	CALL_1
0x4000056	    0x8b1500000000	            mov edx, dword [0x0400005c] 	        52	crypt_zip.c	FUNCTION_1	IF_1
0x400005c	          0x4531c0	                            xor r8d, r8d	        52	crypt_zip.c	FUNCTION_1	IF_1
0x400005f	        0x48894508	                mov qword [rbp + 8], rax	       100	crypt_zip.c	FUNCTION_2
0x4000063	            0x85d2	                           test edx, edx	        52	crypt_zip.c	FUNCTION_1	IF_1
0x4000065	     0xf8492000000	                            je 0x40000fd	        52	crypt_zip.c	FUNCTION_1	IF_1
0x400006b	    0xc70078563412	            mov dword [rax], 0x12345678 	       103	crypt_zip.c	FUNCTION_2
0x4000071	    0xc74004896745	        mov dword [rax + 4], 0x23456789 	       104	crypt_zip.c	FUNCTION_2
0x4000078	      0xbf90785634	                     mov edi, 0x34567890	       106	crypt_zip.c	FUNCTION_2	FOR_1
0x400007d	    0xc74008907856	        mov dword [rax + 8], 0x34567890 	       105	crypt_zip.c	FUNCTION_2
0x4000084	           0xfb60b	                   movzx ecx, byte [rbx]	       106	crypt_zip.c	FUNCTION_2	FOR_1
0x4000087	      0xba89674523	                     mov edx, 0x23456789	       106	crypt_zip.c	FUNCTION_2	FOR_1
0x400008c	      0xbe78563412	                     mov esi, 0x12345678	       106	crypt_zip.c	FUNCTION_2	FOR_1
0x4000091	            0x84c9	                             test cl, cl	       106	crypt_zip.c	FUNCTION_2	FOR_1
0x4000093	            0x7448	                            je 0x40000dd	       106	crypt_zip.c	FUNCTION_2	FOR_1
0x4000095	           0xf1f00	                         nop dword [rax]	       106	crypt_zip.c	FUNCTION_2	FOR_1
0x4000098	            0x31f1	                            xor ecx, esi	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x400009a	          0xc1ee08	                              shr esi, 8	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x400009d	        0x4883c301	                              add rbx, 1	       106	crypt_zip.c	FUNCTION_2	FOR_1
0x40000a1	           0xfb6c9	                           movzx ecx, cl	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x40000a4	    0x33348d000000	                  xor esi, dword [rcx*4]	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x40000ab	        0x400fb6ce	                          movzx ecx, sil	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x40000af	            0x8930	                    mov dword [rax], esi	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x40000b1	             0x1ca	                            add edx, ecx	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x40000b3	    0x69d205840808	                imul edx, edx, 0x8088405	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x40000b9	          0x83c201	                              add edx, 1	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x40000bc	            0x89d1	                            mov ecx, edx	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x40000be	          0x895004	                mov dword [rax + 4], edx	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x40000c1	          0xc1e918	                           shr ecx, 0x18	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x40000c4	            0x31f9	                            xor ecx, edi	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x40000c6	          0xc1ef08	                              shr edi, 8	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x40000c9	           0xfb6c9	                           movzx ecx, cl	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x40000cc	    0x333c8d000000	                  xor edi, dword [rcx*4]	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x40000d3	          0x897808	                mov dword [rax + 8], edi	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x40000d6	           0xfb60b	                   movzx ecx, byte [rbx]	       106	crypt_zip.c	FUNCTION_2	FOR_1
0x40000d9	            0x84c9	                             test cl, cl	       106	crypt_zip.c	FUNCTION_2	FOR_1
0x40000db	            0x75bb	                           jne 0x4000098	       106	crypt_zip.c	FUNCTION_2	FOR_1
0x40000dd	        0x4883c408	                              add rsp, 8	       110	crypt_zip.c	FUNCTION_2
0x40000e1	              0x5b	                                 pop rbx	       110	crypt_zip.c	FUNCTION_2
0x40000e2	              0x5d	                                 pop rbp	       110	crypt_zip.c	FUNCTION_2
0x40000e3	              0xc3	                                     ret	       110	crypt_zip.c	FUNCTION_2
0x40000e4	         0xf1f4000	                         nop dword [rax]	       110	crypt_zip.c	FUNCTION_2
0x40000e8	    0x428914850000	                   mov dword [r8*4], edx	        59	crypt_zip.c	FUNCTION_1	FOR_1
0x40000f0	        0x4983c001	                               add r8, 1	        59	crypt_zip.c	FUNCTION_1	FOR_1
0x40000f4	    0x4981f8000100	                           cmp r8, 0x100	        54	crypt_zip.c	FUNCTION_1	FOR_1
0x40000fb	            0x7421	                            je 0x400011e	        54	crypt_zip.c	FUNCTION_1	FOR_1
0x40000fd	          0x4489c2	                            mov edx, r8d	        54	crypt_zip.c	FUNCTION_1	FOR_1
0x4000100	      0xb908000000	                              mov ecx, 8	        95	crypt_zip.c	FUNCTION_2
0x4000105	           0xf1f00	                         nop dword [rax]	        95	crypt_zip.c	FUNCTION_2
0x4000108	            0x89d7	                            mov edi, edx	        58	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x400010a	          0x83e201	                              and edx, 1	        58	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x400010d	    0x69d22083b8ed	               imul edx, edx, 0xedb88320	        58	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x4000113	            0xd1ef	                              shr edi, 1	        58	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x4000115	            0x31fa	                            xor edx, edi	        58	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x4000117	          0x83e901	                              sub ecx, 1	        57	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x400011a	            0x75ec	                           jne 0x4000108	        57	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x400011c	            0xebca	                           jmp 0x40000e8	        57	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x400011e	    0xc70500000000	               mov dword [0x04000128], 1	        61	crypt_zip.c	FUNCTION_1
0x4000128	      0xe93effffff	                           jmp 0x400006b	        61	crypt_zip.c	FUNCTION_1
