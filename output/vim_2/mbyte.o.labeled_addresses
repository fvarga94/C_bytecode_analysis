utf_fold	SWITCH,0:CALL,1:IF,1:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	11
0x40018e5	          0x83ff7f	                           cmp edi, 0x7f	      3161	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x40018e8	            0x7f0d	                            jg 0x40018f7	      3161	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x40018ea	          0x8d57bf	                   lea edx, [rdi - 0x41]	      3163	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x40018ed	          0x8d4720	                   lea eax, [rdi + 0x20]	      3163	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x40018f0	          0x83fa19	                           cmp edx, 0x19	      3163	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x40018f3	           0xf47c7	                          cmova eax, edi	      3163	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x40018f6	              0xc3	                                     ret	      3163	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x40018f7	      0xba900b0000	                          mov edx, 0xb90	      3164	mbyte.c	ELSE_2	FUNCTION_59	CALL_1
0x40018fc	      0xbe00000000	                              mov esi, 0	      3164	mbyte.c	ELSE_2	FUNCTION_59	CALL_1
0x4001901	      0xe8e9ecffff	                    call sym.utf_convert	      3164	mbyte.c	ELSE_2	FUNCTION_59	CALL_1
0x4001906	            0xf3c3	                                     ret	      3165	mbyte.c	ELSE_2	FUNCTION_59
latin_char2len	SWITCH,0:CALL,0:IF,0:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	2
0x4000040	      0xb801000000	                              mov eax, 1	      1082	mbyte.c	ELSE_8	FUNCTION_10
0x4000045	              0xc3	                                     ret	      1082	mbyte.c	ELSE_8	FUNCTION_10
utf_islower	SWITCH,0:CALL,1:IF,0:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	11
0x4001977	              0x53	                                push rbx	      3546	mbyte.c	FUNCTION_61
0x4001978	            0x89fb	                            mov ebx, edi	      3546	mbyte.c	FUNCTION_61
0x400197a	      0xe800000000	                          call 0x400197f	      3548	mbyte.c	FUNCTION_61	CALL_1
0x400197f	    0x81fbdf000000	                           cmp ebx, 0xdf	      3548	mbyte.c	FUNCTION_61	CALL_1
0x4001985	           0xf94c2	                                 sete dl	      3548	mbyte.c	FUNCTION_61	CALL_1
0x4001988	            0x39c3	                            cmp ebx, eax	      3548	mbyte.c	FUNCTION_61	CALL_1
0x400198a	           0xf95c0	                                setne al	      3548	mbyte.c	FUNCTION_61	CALL_1
0x400198d	             0x9d0	                             or eax, edx	      3548	mbyte.c	FUNCTION_61	CALL_1
0x400198f	           0xfb6c0	                           movzx eax, al	      3548	mbyte.c	FUNCTION_61	CALL_1
0x4001992	              0x5b	                                 pop rbx	      3549	mbyte.c	FUNCTION_61
0x4001993	              0xc3	                                     ret	      3549	mbyte.c	FUNCTION_61
latin_char2bytes	SWITCH,0:CALL,0:IF,0:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	3
0x4000056	          0x40883e	                     mov byte [rsi], dil	      1101	mbyte.c	FUNCTION_12
0x4000059	      0xb801000000	                              mov eax, 1	      1103	mbyte.c	FUNCTION_12
0x400005e	              0xc3	                                     ret	      1103	mbyte.c	FUNCTION_12
utf_class	SWITCH,0:CALL,1:IF,0:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	5
0x400188b	        0x4883ec08	                              sub rsp, 8	      2781	mbyte.c	FUNCTION_55
0x400188f	    0x488b35000000	            mov rsi, qword [0x04001896] 	      2782	mbyte.c	FUNCTION_55	CALL_1
0x4001896	      0xe800000000	                          call 0x400189b	      2782	mbyte.c	FUNCTION_55	CALL_1
0x400189b	        0x4883c408	                              add rsp, 8	      2783	mbyte.c	FUNCTION_55
0x400189f	              0xc3	                                     ret	      2783	mbyte.c	FUNCTION_55
arabic_combine	SWITCH,0:CALL,1:IF,1:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	6
0x4000e9d	      0xb800000000	                              mov eax, 0	      1930	mbyte.c	FUNCTION_39
0x4000ea2	    0x81ff44060000	                          cmp edi, 0x644	      1928	mbyte.c	FUNCTION_39	IF_1
0x4000ea8	            0x7507	                           jne 0x4000eb1	      1928	mbyte.c	FUNCTION_39	IF_1
0x4000eaa	            0x89f7	                            mov edi, esi	      1928	mbyte.c	FUNCTION_39	IF_1
0x4000eac	      0xe800000000	                          call 0x4000eb1	      1929	mbyte.c	FUNCTION_39	CALL_1
0x4000eb1	            0xf3c3	                                     ret	      1931	mbyte.c	FUNCTION_39
bomb_size	SWITCH,0:CALL,4:IF,7:WHILE,0:FOR,0:DO,0:ELSE,4:functions,0	54
0x4000b31	    0x488b15000000	            mov rdx, qword [0x04000b38] 	       826	mbyte.c	FUNCTION_5	IF_1
0x4000b38	      0xb800000000	                              mov eax, 0	       824	mbyte.c	FUNCTION_5
0x4000b3d	    0x83ba0c140000	             cmp dword [rdx + 0x140c], 0	       826	mbyte.c	FUNCTION_5	IF_1
0x4000b44	     0xf84b4000000	                            je 0x4000bfe	       826	mbyte.c	FUNCTION_5	IF_1
0x4000b4a	    0x83ba08140000	             cmp dword [rdx + 0x1408], 0	       826	mbyte.c	FUNCTION_5	IF_1
0x4000b51	     0xf85a7000000	                           jne 0x4000bfe	       826	mbyte.c	FUNCTION_5	IF_1
0x4000b57	    0x488b92881400	          mov rdx, qword [rdx + 0x1488] 	       828	mbyte.c	FUNCTION_5	IF_1	IF_2
0x4000b5e	          0x803a00	                       cmp byte [rdx], 0	       828	mbyte.c	FUNCTION_5	IF_1	IF_2
0x4000b61	            0x751e	                           jne 0x4000b81	       828	mbyte.c	FUNCTION_5	IF_1	IF_2
0x4000b63	    0x833d00000000	               cmp dword [0x04000b6a], 0	       830	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3
0x4000b6a	     0xf848e000000	                            je 0x4000bfe	       830	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3
0x4000b70	    0x8b0500000000	            mov eax, dword [0x04000b76] 	       832	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3	IF_4
0x4000b76	            0x85c0	                           test eax, eax	       835	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3	ELSE_1
0x4000b78	      0xba03000000	                              mov edx, 3	       835	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3	ELSE_1
0x4000b7d	           0xf44c2	                          cmove eax, edx	       835	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3	ELSE_1
0x4000b80	              0xc3	                                     ret	       835	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3	ELSE_1
0x4000b81	      0xbf00000000	                              mov edi, 0	       838	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5	CALL_1
0x4000b86	      0xb906000000	                              mov ecx, 6	       838	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5	CALL_1
0x4000b8b	          0x4889d6	                            mov rsi, rdx	       838	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5	CALL_1
0x4000b8e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       838	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5	CALL_1
0x4000b90	        0x400f97c6	                                seta sil	       838	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5	CALL_1
0x4000b94	           0xf92c1	                                 setb cl	       838	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5	CALL_1
0x4000b97	      0xb803000000	                              mov eax, 3	       839	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5
0x4000b9c	          0x4038ce	                             cmp sil, cl	       838	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5	CALL_1
0x4000b9f	            0x745d	                            je 0x4000bfe	       838	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5	CALL_1
0x4000ba1	      0xbf00000000	                              mov edi, 0	       840	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_2
0x4000ba6	      0xb905000000	                              mov ecx, 5	       840	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_2
0x4000bab	          0x4889d6	                            mov rsi, rdx	       840	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_2
0x4000bae	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       840	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_2
0x4000bb0	        0x400f97c6	                                seta sil	       840	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_2
0x4000bb4	           0xf92c1	                                 setb cl	       840	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_2
0x4000bb7	      0xb802000000	                              mov eax, 2	       842	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6
0x4000bbc	          0x4038ce	                             cmp sil, cl	       840	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_2
0x4000bbf	            0x743d	                            je 0x4000bfe	       840	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_2
0x4000bc1	      0xbf00000000	                              mov edi, 0	       841	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_3
0x4000bc6	      0xb906000000	                              mov ecx, 6	       841	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_3
0x4000bcb	          0x4889d6	                            mov rsi, rdx	       841	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_3
0x4000bce	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       841	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_3
0x4000bd0	        0x400f97c6	                                seta sil	       841	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_3
0x4000bd4	           0xf92c1	                                 setb cl	       841	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_3
0x4000bd7	          0x4038ce	                             cmp sil, cl	       841	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_3
0x4000bda	            0x7422	                            je 0x4000bfe	       841	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_3
0x4000bdc	      0xbf00000000	                              mov edi, 0	       843	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7	CALL_4
0x4000be1	      0xb905000000	                              mov ecx, 5	       843	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7	CALL_4
0x4000be6	          0x4889d6	                            mov rsi, rdx	       843	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7	CALL_4
0x4000be9	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       843	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7	CALL_4
0x4000beb	           0xf97c0	                                 seta al	       843	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7	CALL_4
0x4000bee	           0xf92c2	                                 setb dl	       843	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7	CALL_4
0x4000bf1	            0x29d0	                            sub eax, edx	       843	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7	CALL_4
0x4000bf3	           0xfbec0	                           movsx eax, al	       843	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7	CALL_4
0x4000bf6	          0x83f801	                              cmp eax, 1	       844	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7
0x4000bf9	            0x19c0	                            sbb eax, eax	       844	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7
0x4000bfb	          0x83e004	                              and eax, 4	       844	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7
0x4000bfe	            0xf3c3	                                     ret	       847	mbyte.c	FUNCTION_5
latin_ptr2cells_len	SWITCH,0:CALL,0:IF,0:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	2
0x4000190	      0xb801000000	                              mov eax, 1	      1661	mbyte.c	FUNCTION_24
0x4000195	              0xc3	                                     ret	      1661	mbyte.c	FUNCTION_24
utf_head_off	SWITCH,0:CALL,5:IF,6:WHILE,2:FOR,2:DO,0:ELSE,0:functions,0	107
0x400143b	      0xb800000000	                              mov eax, 0	      3832	mbyte.c	FUNCTION_70	IF_1
0x4001440	          0x803e00	                       cmp byte [rsi], 0	      3831	mbyte.c	FUNCTION_70	IF_1
0x4001443	     0xf893b010000	                           jns 0x4001584	      3831	mbyte.c	FUNCTION_70	IF_1
0x4001449	            0x4156	                                push r14	      3822	mbyte.c	FUNCTION_70
0x400144b	            0x4155	                                push r13	      3822	mbyte.c	FUNCTION_70
0x400144d	            0x4154	                                push r12	      3822	mbyte.c	FUNCTION_70
0x400144f	              0x55	                                push rbp	      3822	mbyte.c	FUNCTION_70
0x4001450	              0x53	                                push rbx	      3822	mbyte.c	FUNCTION_70
0x4001451	          0x4989f4	                            mov r12, rsi	      3822	mbyte.c	FUNCTION_70
0x4001454	          0x4889fd	                            mov rbp, rdi	      3822	mbyte.c	FUNCTION_70
0x4001457	          0x4889f3	                            mov rbx, rsi	      3822	mbyte.c	FUNCTION_70
0x400145a	         0xfb64301	               movzx eax, byte [rbx + 1]	      3839	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x400145e	          0x83e0c0	                     and eax, 0xffffffc0	      3839	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x4001461	            0x3c80	                            cmp al, 0x80	      3839	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x4001463	            0x7515	                           jne 0x400147a	      3839	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x4001465	          0x4889d9	                            mov rcx, rbx	      3839	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x4001468	        0x4883c101	                              add rcx, 1	      3839	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x400146c	         0xfb65101	               movzx edx, byte [rcx + 1]	      3839	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x4001470	          0x83e2c0	                     and edx, 0xffffffc0	      3839	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x4001473	          0x80fa80	                            cmp dl, 0x80	      3839	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x4001476	            0x74f0	                            je 0x4001468	      3839	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x4001478	            0xeb03	                           jmp 0x400147d	      3839	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x400147a	          0x4889d9	                            mov rcx, rbx	      3839	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x400147d	          0x4839eb	                            cmp rbx, rbp	      3842	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x4001480	     0xf86b9000000	                           jbe 0x400153f	      3842	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x4001486	           0xfb603	                   movzx eax, byte [rbx]	      3842	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x4001489	          0x83e0c0	                     and eax, 0xffffffc0	      3842	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x400148c	            0x3c80	                            cmp al, 0x80	      3842	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x400148e	     0xf85c8000000	                           jne 0x400155c	      3842	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x4001494	        0x4883eb01	                              sub rbx, 1	      3843	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x4001498	          0x4839dd	                            cmp rbp, rbx	      3842	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x400149b	     0xf849b000000	                            je 0x400153c	      3842	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x40014a1	           0xfb613	                   movzx edx, byte [rbx]	      3842	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x40014a4	          0x83e2c0	                     and edx, 0xffffffc0	      3842	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x40014a7	          0x80fa80	                            cmp dl, 0x80	      3842	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x40014aa	            0x74e8	                            je 0x4001494	      3842	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x40014ac	      0xe9ab000000	                           jmp 0x400155c	      3842	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x40014b1	          0x4c89e0	                            mov rax, r12	      3847	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x40014b4	          0x4c29e8	                            sub rax, r13	      3847	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x40014b7	          0x83c001	                              add eax, 1	      3847	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x40014ba	            0x39d0	                            cmp eax, edx	      3847	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x40014bc	            0x7577	                           jne 0x4001535	      3847	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x40014be	          0x4839dd	                            cmp rbp, rbx	      3850	mbyte.c	FUNCTION_70	FOR_1	IF_3
0x40014c1	            0x736a	                           jae 0x400152d	      3850	mbyte.c	FUNCTION_70	FOR_1	IF_3
0x40014c3	          0x4889df	                            mov rdi, rbx	      3853	mbyte.c	FUNCTION_70	FOR_1	CALL_1
0x40014c6	      0xe800000000	                          call 0x40014cb	      3853	mbyte.c	FUNCTION_70	FOR_1	CALL_1
0x40014cb	          0x4189c6	                           mov r14d, eax	      3853	mbyte.c	FUNCTION_70	FOR_1	CALL_1
0x40014ce	            0x89c7	                            mov edi, eax	      3854	mbyte.c	FUNCTION_70	FOR_1	IF_4	CALL_2
0x40014d0	      0xe800000000	                          call 0x40014d5	      3854	mbyte.c	FUNCTION_70	FOR_1	IF_4	CALL_2
0x40014d5	            0x85c0	                           test eax, eax	      3854	mbyte.c	FUNCTION_70	FOR_1	IF_4	CALL_2
0x40014d7	            0x754b	                           jne 0x4001524	      3854	mbyte.c	FUNCTION_70	FOR_1	IF_4	CALL_2
0x40014d9	          0x4489f7	                           mov edi, r14d	      3858	mbyte.c	FUNCTION_70	FOR_1	IF_5	CALL_3
0x40014dc	      0xe800000000	                          call 0x40014e1	      3858	mbyte.c	FUNCTION_70	FOR_1	IF_5	CALL_3
0x40014e1	            0x85c0	                           test eax, eax	      3858	mbyte.c	FUNCTION_70	FOR_1	IF_5	CALL_3
0x40014e3	            0x7448	                            je 0x400152d	      3858	mbyte.c	FUNCTION_70	FOR_1	IF_5	CALL_3
0x40014e5	        0x488d7bff	                      lea rdi, [rbx - 1]	      3862	mbyte.c	FUNCTION_70	FOR_1	IF_5
0x40014e9	          0x4839fd	                            cmp rbp, rdi	      3864	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x40014ec	            0x7323	                           jae 0x4001511	      3864	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x40014ee	         0xfb643ff	               movzx eax, byte [rbx - 1]	      3864	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x40014f2	          0x83e0c0	                     and eax, 0xffffffc0	      3864	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x40014f5	            0x3c80	                            cmp al, 0x80	      3864	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x40014f7	            0x7518	                           jne 0x4001511	      3864	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x40014f9	        0x4883ef01	                              sub rdi, 1	      3865	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x40014fd	          0x4839fd	                            cmp rbp, rdi	      3864	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x4001500	            0x740c	                            je 0x400150e	      3864	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x4001502	           0xfb607	                   movzx eax, byte [rdi]	      3864	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x4001505	          0x83e0c0	                     and eax, 0xffffffc0	      3864	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x4001508	            0x3c80	                            cmp al, 0x80	      3864	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x400150a	            0x74ed	                            je 0x40014f9	      3864	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x400150c	            0xeb03	                           jmp 0x4001511	      3864	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x400150e	          0x4889ef	                            mov rdi, rbp	      3865	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x4001511	      0xe800000000	                          call 0x4001516	      3866	mbyte.c	FUNCTION_70	FOR_1	IF_5	IF_6	CALL_5
0x4001516	          0x4489f6	                           mov esi, r14d	      3866	mbyte.c	FUNCTION_70	FOR_1	IF_5	IF_6	CALL_5
0x4001519	            0x89c7	                            mov edi, eax	      3866	mbyte.c	FUNCTION_70	FOR_1	IF_5	IF_6	CALL_5
0x400151b	      0xe800000000	                          call 0x4001520	      3866	mbyte.c	FUNCTION_70	FOR_1	IF_5	IF_6	CALL_5
0x4001520	            0x85c0	                           test eax, eax	      3866	mbyte.c	FUNCTION_70	FOR_1	IF_5	IF_6	CALL_5
0x4001522	            0x7409	                            je 0x400152d	      3866	mbyte.c	FUNCTION_70	FOR_1	IF_5	IF_6	CALL_5
0x4001524	        0x4883eb01	                              sub rbx, 1	      3836	mbyte.c	FUNCTION_70	FOR_1
0x4001528	      0xe92dffffff	                           jmp 0x400145a	      3871	mbyte.c	FUNCTION_70	FOR_1
0x400152d	          0x4489e0	                           mov eax, r12d	      3873	mbyte.c	FUNCTION_70
0x4001530	          0x4429e8	                           sub eax, r13d	      3873	mbyte.c	FUNCTION_70
0x4001533	            0xeb47	                           jmp 0x400157c	      3873	mbyte.c	FUNCTION_70
0x4001535	      0xb800000000	                              mov eax, 0	      3848	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x400153a	            0xeb40	                           jmp 0x400157c	      3848	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x400153c	          0x4889eb	                            mov rbx, rbp	      3843	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x400153f	           0xfb603	                   movzx eax, byte [rbx]	      3846	mbyte.c	FUNCTION_70	FOR_1
0x4001542	     0xfbe90000000	                   movsx edx, byte [rax]	      3846	mbyte.c	FUNCTION_70	FOR_1
0x4001549	          0x4989dd	                            mov r13, rbx	      3847	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x400154c	          0x4829d9	                            sub rcx, rbx	      3847	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x400154f	          0x83c101	                              add ecx, 1	      3847	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x4001552	            0x39ca	                            cmp edx, ecx	      3847	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x4001554	     0xf8557ffffff	                           jne 0x40014b1	      3847	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x400155a	            0xebd1	                           jmp 0x400152d	      3847	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x400155c	           0xfb603	                   movzx eax, byte [rbx]	      3846	mbyte.c	FUNCTION_70	FOR_1
0x400155f	     0xfbe90000000	                   movsx edx, byte [rax]	      3846	mbyte.c	FUNCTION_70	FOR_1
0x4001566	          0x4989dd	                            mov r13, rbx	      3847	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x4001569	          0x4829d9	                            sub rcx, rbx	      3847	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x400156c	          0x83c101	                              add ecx, 1	      3847	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x400156f	            0x39ca	                            cmp edx, ecx	      3847	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x4001571	     0xf844cffffff	                            je 0x40014c3	      3847	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x4001577	      0xe935ffffff	                           jmp 0x40014b1	      3847	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x400157c	              0x5b	                                 pop rbx	      3874	mbyte.c	FUNCTION_70
0x400157d	              0x5d	                                 pop rbp	      3874	mbyte.c	FUNCTION_70
0x400157e	            0x415c	                                 pop r12	      3874	mbyte.c	FUNCTION_70
0x4001580	            0x415d	                                 pop r13	      3874	mbyte.c	FUNCTION_70
0x4001582	            0x415e	                                 pop r14	      3874	mbyte.c	FUNCTION_70
0x4001584	            0xf3c3	                                     ret	      3874	mbyte.c	FUNCTION_70
latin_ptr2cells	SWITCH,0:CALL,0:IF,0:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	2
0x4000168	      0xb801000000	                              mov eax, 1	      1619	mbyte.c	FUNCTION_21
0x400016d	              0xc3	                                     ret	      1619	mbyte.c	FUNCTION_21
utfc_ptr2len	SWITCH,0:CALL,3:IF,4:WHILE,0:FOR,1:DO,0:ELSE,0:functions,0	52
0x4001088	           0xfb617	                   movzx edx, byte [rdi]	      2141	mbyte.c	FUNCTION_48
0x400108b	      0xb800000000	                              mov eax, 0	      2147	mbyte.c	FUNCTION_48	IF_1
0x4001090	            0x85d2	                           test edx, edx	      2146	mbyte.c	FUNCTION_48	IF_1
0x4001092	     0xf8488000000	                            je 0x4001120	      2146	mbyte.c	FUNCTION_48	IF_1
0x4001098	            0x4154	                                push r12	      2139	mbyte.c	FUNCTION_48
0x400109a	              0x55	                                push rbp	      2139	mbyte.c	FUNCTION_48
0x400109b	              0x53	                                push rbx	      2139	mbyte.c	FUNCTION_48
0x400109c	          0x4889fd	                            mov rbp, rdi	      2139	mbyte.c	FUNCTION_48
0x400109f	          0x83fa7f	                           cmp edx, 0x7f	      2148	mbyte.c	FUNCTION_48	IF_2
0x40010a2	            0x7f0d	                            jg 0x40010b1	      2148	mbyte.c	FUNCTION_48	IF_2
0x40010a4	      0xb801000000	                              mov eax, 1	      2149	mbyte.c	FUNCTION_48	IF_2
0x40010a9	        0x807f0100	                   cmp byte [rdi + 1], 0	      2148	mbyte.c	FUNCTION_48	IF_2
0x40010ad	            0x796d	                           jns 0x400111c	      2148	mbyte.c	FUNCTION_48	IF_2
0x40010af	            0xeb61	                           jmp 0x4001112	      2148	mbyte.c	FUNCTION_48	IF_2
0x40010b1	      0xe800000000	                          call 0x40010b6	      2152	mbyte.c	FUNCTION_48	CALL_1
0x40010b6	          0x4189c4	                           mov r12d, eax	      2152	mbyte.c	FUNCTION_48	CALL_1
0x40010b9	      0xb801000000	                              mov eax, 1	      2156	mbyte.c	FUNCTION_48	IF_3
0x40010be	        0x4183fc01	                             cmp r12d, 1	      2155	mbyte.c	FUNCTION_48	IF_3
0x40010c2	            0x7458	                            je 0x400111c	      2155	mbyte.c	FUNCTION_48	IF_3
0x40010c4	          0x4963dc	                        movsxd rbx, r12d	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x40010c7	          0x4801eb	                            add rbx, rbp	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x40010ca	          0x803b00	                       cmp byte [rbx], 0	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x40010cd	            0x7939	                           jns 0x4001108	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x40010cf	      0xba00000000	                              mov edx, 0	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x40010d4	            0xeb03	                           jmp 0x40010d9	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x40010d6	          0x4189c4	                           mov r12d, eax	      2174	mbyte.c	FUNCTION_48	FOR_1	CALL_3
0x40010d9	          0x4863d2	                         movsxd rdx, edx	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x40010dc	      0x488d7c1500	                    lea rdi, [rbp + rdx]	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x40010e1	          0x4889de	                            mov rsi, rbx	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x40010e4	      0xe800000000	                          call 0x40010e9	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x40010e9	            0x85c0	                           test eax, eax	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x40010eb	            0x7420	                            je 0x400110d	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x40010ed	          0x4889df	                            mov rdi, rbx	      2174	mbyte.c	FUNCTION_48	FOR_1	CALL_3
0x40010f0	      0xe800000000	                          call 0x40010f5	      2174	mbyte.c	FUNCTION_48	FOR_1	CALL_3
0x40010f5	          0x4401e0	                           add eax, r12d	      2174	mbyte.c	FUNCTION_48	FOR_1	CALL_3
0x40010f8	          0x4863d8	                         movsxd rbx, eax	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x40010fb	          0x4801eb	                            add rbx, rbp	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x40010fe	          0x4489e2	                           mov edx, r12d	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x4001101	          0x803b00	                       cmp byte [rbx], 0	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x4001104	            0x78d0	                            js 0x40010d6	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x4001106	            0xeb14	                           jmp 0x400111c	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x4001108	          0x4489e0	                           mov eax, r12d	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x400110b	            0xeb0f	                           jmp 0x400111c	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x400110d	          0x4489e0	                           mov eax, r12d	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x4001110	            0xeb0a	                           jmp 0x400111c	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x4001112	      0xe800000000	                          call 0x4001117	      2152	mbyte.c	FUNCTION_48	CALL_1
0x4001117	          0x4189c4	                           mov r12d, eax	      2152	mbyte.c	FUNCTION_48	CALL_1
0x400111a	            0xeba8	                           jmp 0x40010c4	      2152	mbyte.c	FUNCTION_48	CALL_1
0x400111c	              0x5b	                                 pop rbx	      2176	mbyte.c	FUNCTION_48
0x400111d	              0x5d	                                 pop rbp	      2176	mbyte.c	FUNCTION_48
0x400111e	            0x415c	                                 pop r12	      2176	mbyte.c	FUNCTION_48
0x4001120	            0xf3c3	                                     ret	      2176	mbyte.c	FUNCTION_48
enc_canon_props	SWITCH,0:CALL,7:IF,7:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	38
0x4000abb	              0x53	                                push rbx	       471	mbyte.c	FUNCTION_3
0x4000abc	          0x4889fb	                            mov rbx, rdi	       471	mbyte.c	FUNCTION_3
0x4000abf	      0xe817fcffff	               call sym.enc_canon_search	       474	mbyte.c	FUNCTION_3	CALL_1
0x4000ac4	            0x85c0	                           test eax, eax	       475	mbyte.c	FUNCTION_3	IF_1
0x4000ac6	            0x780e	                            js 0x4000ad6	       475	mbyte.c	FUNCTION_3	IF_1
0x4000ac8	            0x4898	                                    cdqe	       476	mbyte.c	FUNCTION_3	IF_1
0x4000aca	        0x48c1e004	                              shl rax, 4	       476	mbyte.c	FUNCTION_3	IF_1
0x4000ace	    0x8b8000000000	                    mov eax, dword [rax]	       476	mbyte.c	FUNCTION_3	IF_1
0x4000ad4	            0xeb59	                           jmp 0x4000b2f	       476	mbyte.c	FUNCTION_3	IF_1
0x4000ad6	      0xbf00000000	                              mov edi, 0	       495	mbyte.c	FUNCTION_3	IF_6	CALL_5
0x4000adb	      0xb906000000	                              mov ecx, 6	       495	mbyte.c	FUNCTION_3	IF_6	CALL_5
0x4000ae0	          0x4889de	                            mov rsi, rbx	       495	mbyte.c	FUNCTION_3	IF_6	CALL_5
0x4000ae3	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       495	mbyte.c	FUNCTION_3	IF_6	CALL_5
0x4000ae5	           0xf97c1	                                 seta cl	       495	mbyte.c	FUNCTION_3	IF_6	CALL_5
0x4000ae8	           0xf92c2	                                 setb dl	       495	mbyte.c	FUNCTION_3	IF_6	CALL_5
0x4000aeb	      0xb802000000	                              mov eax, 2	       496	mbyte.c	FUNCTION_3	IF_6
0x4000af0	            0x38d1	                              cmp cl, dl	       495	mbyte.c	FUNCTION_3	IF_6	CALL_5
0x4000af2	            0x743b	                            je 0x4000b2f	       495	mbyte.c	FUNCTION_3	IF_6	CALL_5
0x4000af4	      0xbf00000000	                              mov edi, 0	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0x4000af9	      0xb905000000	                              mov ecx, 5	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0x4000afe	          0x4889de	                            mov rsi, rbx	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0x4000b01	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0x4000b03	           0xf97c1	                                 seta cl	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0x4000b06	           0xf92c2	                                 setb dl	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0x4000b09	      0xb801000000	                              mov eax, 1	       498	mbyte.c	FUNCTION_3	IF_7
0x4000b0e	            0x38d1	                              cmp cl, dl	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0x4000b10	            0x741d	                            je 0x4000b2f	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0x4000b12	      0xbf00000000	                              mov edi, 0	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0x4000b17	      0xb909000000	                              mov ecx, 9	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0x4000b1c	          0x4889de	                            mov rsi, rbx	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0x4000b1f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0x4000b21	           0xf97c2	                                 seta dl	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0x4000b24	           0xf92c0	                                 setb al	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0x4000b27	            0x38c2	                              cmp dl, al	       476	mbyte.c	FUNCTION_3	IF_1
0x4000b29	           0xf94c0	                                 sete al	       476	mbyte.c	FUNCTION_3	IF_1
0x4000b2c	           0xfb6c0	                           movzx eax, al	       476	mbyte.c	FUNCTION_3	IF_1
0x4000b2f	              0x5b	                                 pop rbx	       500	mbyte.c	FUNCTION_3
0x4000b30	              0xc3	                                     ret	       500	mbyte.c	FUNCTION_3
dbcs_char2cells	SWITCH,0:CALL,1:IF,1:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	12
0x40001c9	    0x813d00000000	         cmp dword [0x040001d3], 0x26cc 	      1711	mbyte.c	FUNCTION_28	IF_1
0x40001d3	            0x750c	                           jne 0x40001e1	      1711	mbyte.c	FUNCTION_28	IF_1
0x40001d5	            0x89f8	                            mov eax, edi	      1711	mbyte.c	FUNCTION_28	IF_1
0x40001d7	          0xc1e808	                              shr eax, 8	      1711	mbyte.c	FUNCTION_28	IF_1
0x40001da	      0x3d8e000000	                           cmp eax, 0x8e	      1711	mbyte.c	FUNCTION_28	IF_1
0x40001df	            0x740d	                            je 0x40001ee	      1711	mbyte.c	FUNCTION_28	IF_1
0x40001e1	          0xc1ef08	                              shr edi, 8	      1714	mbyte.c	FUNCTION_28	CALL_1
0x40001e4	            0x89ff	                            mov edi, edi	      1714	mbyte.c	FUNCTION_28	CALL_1
0x40001e6	     0xfbe87000000	                   movsx eax, byte [rdi]	      1714	mbyte.c	FUNCTION_28	CALL_1
0x40001ed	              0xc3	                                     ret	      1714	mbyte.c	FUNCTION_28	CALL_1
0x40001ee	      0xb801000000	                              mov eax, 1	      1712	mbyte.c	FUNCTION_28	IF_1
0x40001f3	              0xc3	                                     ret	      1715	mbyte.c	FUNCTION_28
dbcs_char2len	SWITCH,0:CALL,0:IF,1:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	5
0x4000046	    0x81ffff000000	                           cmp edi, 0xff	      1090	mbyte.c	FUNCTION_11
0x400004c	           0xf9fc0	                                 setg al	      1090	mbyte.c	FUNCTION_11
0x400004f	           0xfb6c0	                           movzx eax, al	      1090	mbyte.c	FUNCTION_11
0x4000052	          0x83c001	                              add eax, 1	      1090	mbyte.c	FUNCTION_11
0x4000055	              0xc3	                                     ret	      1091	mbyte.c	FUNCTION_11
mb_cptr2char_adv	SWITCH,0:CALL,1:IF,1:WHILE,0:FOR,0:DO,0:ELSE,1:functions,0	25
0x4000f8a	            0x4154	                                push r12	      1907	mbyte.c	FUNCTION_38
0x4000f8c	              0x55	                                push rbp	      1907	mbyte.c	FUNCTION_38
0x4000f8d	              0x53	                                push rbx	      1907	mbyte.c	FUNCTION_38
0x4000f8e	          0x4889fb	                            mov rbx, rdi	      1907	mbyte.c	FUNCTION_38
0x4000f91	          0x488b3f	                    mov rdi, qword [rdi]	      1910	mbyte.c	FUNCTION_38
0x4000f94	    0xff1500000000	                 call qword [0x04000f9a]	      1910	mbyte.c	FUNCTION_38
0x4000f9a	            0x89c5	                            mov ebp, eax	      1910	mbyte.c	FUNCTION_38
0x4000f9c	    0x833d00000000	               cmp dword [0x04000fa3], 0	      1911	mbyte.c	FUNCTION_38	IF_1
0x4000fa3	            0x7416	                            je 0x4000fbb	      1911	mbyte.c	FUNCTION_38	IF_1
0x4000fa5	          0x4c8b23	                    mov r12, qword [rbx]	      1912	mbyte.c	FUNCTION_38	CALL_1
0x4000fa8	          0x4c89e7	                            mov rdi, r12	      1912	mbyte.c	FUNCTION_38	CALL_1
0x4000fab	      0xe800000000	                          call 0x4000fb0	      1912	mbyte.c	FUNCTION_38	CALL_1
0x4000fb0	          0x4863f8	                         movsxd rdi, eax	      1912	mbyte.c	FUNCTION_38	CALL_1
0x4000fb3	          0x4c01e7	                            add rdi, r12	      1912	mbyte.c	FUNCTION_38	CALL_1
0x4000fb6	          0x48893b	                    mov qword [rbx], rdi	      1912	mbyte.c	FUNCTION_38	CALL_1
0x4000fb9	            0xeb0e	                           jmp 0x4000fc9	      1912	mbyte.c	FUNCTION_38	CALL_1
0x4000fbb	          0x488b3b	                    mov rdi, qword [rbx]	      1914	mbyte.c	FUNCTION_38	ELSE_1
0x4000fbe	    0xff1500000000	                 call qword [0x04000fc4]	      1914	mbyte.c	FUNCTION_38	ELSE_1
0x4000fc4	            0x4898	                                    cdqe	      1914	mbyte.c	FUNCTION_38	ELSE_1
0x4000fc6	          0x480103	                    add qword [rbx], rax	      1914	mbyte.c	FUNCTION_38	ELSE_1
0x4000fc9	            0x89e8	                            mov eax, ebp	      1916	mbyte.c	FUNCTION_38
0x4000fcb	              0x5b	                                 pop rbx	      1916	mbyte.c	FUNCTION_38
0x4000fcc	              0x5d	                                 pop rbp	      1916	mbyte.c	FUNCTION_38
0x4000fcd	            0x415c	                                 pop r12	      1916	mbyte.c	FUNCTION_38
0x4000fcf	              0xc3	                                     ret	      1916	mbyte.c	FUNCTION_38
im_delete_preedit	SWITCH,0:CALL,4:IF,2:WHILE,0:FOR,2:DO,0:ELSE,0:functions,0	51
0x400082c	        0x4883ec28	                           sub rsp, 0x28	      5091	mbyte.c	FUNCTION_107
0x4000830	    0x64488b042528	                mov rax, qword fs:[0x28]	      5091	mbyte.c	FUNCTION_107
0x4000839	      0x4889442418	             mov qword [rsp + 0x18], rax	      5091	mbyte.c	FUNCTION_107
0x400083e	            0x31c0	                            xor eax, eax	      5091	mbyte.c	FUNCTION_107
0x4000840	        0xc604249b	                    mov byte [rsp], 0x9b	      5092	mbyte.c	FUNCTION_107
0x4000844	      0xc64424016b	                mov byte [rsp + 1], 0x6b	      5092	mbyte.c	FUNCTION_107
0x4000849	      0xc644240262	                mov byte [rsp + 2], 0x62	      5092	mbyte.c	FUNCTION_107
0x400084e	      0xc64424109b	            mov byte [rsp + 0x10], 0x9b 	      5093	mbyte.c	FUNCTION_107
0x4000853	      0xc64424116b	            mov byte [rsp + 0x11], 0x6b 	      5093	mbyte.c	FUNCTION_107
0x4000858	      0xc644241244	            mov byte [rsp + 0x12], 0x44 	      5093	mbyte.c	FUNCTION_107
0x400085d	    0x48833d000000	               cmp qword [0x04000865], 1	      5095	mbyte.c	FUNCTION_107	IF_1
0x4000865	            0x7513	                           jne 0x400087a	      5095	mbyte.c	FUNCTION_107	IF_1
0x4000867	    0x488b3d000000	            mov rdi, qword [0x0400086e] 	      5076	mbyte.c	FUNCTION_105	IF_1
0x400086e	          0x4885ff	                           test rdi, rdi	      5076	mbyte.c	FUNCTION_105	IF_1
0x4000871	            0x747b	                            je 0x40008ee	      5076	mbyte.c	FUNCTION_105	IF_1
0x4000873	      0xe800000000	                          call 0x4000878	      5077	mbyte.c	FUNCTION_105	CALL_1
0x4000878	            0xeb74	                           jmp 0x40008ee	      5077	mbyte.c	FUNCTION_105	CALL_1
0x400087a	    0xf60500000000	               test byte [0x04000881], 1	      5101	mbyte.c	FUNCTION_107	IF_2
0x4000881	            0x750b	                           jne 0x400088e	      5101	mbyte.c	FUNCTION_107	IF_2
0x4000883	    0x833d00000000	               cmp dword [0x0400088a], 0	      5110	mbyte.c	FUNCTION_107	FOR_1
0x400088a	            0x7f17	                            jg 0x40008a3	      5110	mbyte.c	FUNCTION_107	FOR_1
0x400088c	            0xeb35	                           jmp 0x40008c3	      5110	mbyte.c	FUNCTION_107	FOR_1
0x400088e	      0xe800000000	                          call 0x4000893	      5103	mbyte.c	FUNCTION_107	IF_2	CALL_2
0x4000893	            0x85c0	                           test eax, eax	      5103	mbyte.c	FUNCTION_107	IF_2	CALL_2
0x4000895	            0x75ec	                           jne 0x4000883	      5103	mbyte.c	FUNCTION_107	IF_2	CALL_2
0x4000897	    0xc70500000000	               mov dword [0x040008a1], 0	      5107	mbyte.c	FUNCTION_107	IF_2
0x40008a1	            0xeb4b	                           jmp 0x40008ee	      5108	mbyte.c	FUNCTION_107	IF_2
0x40008a3	      0xbe03000000	                              mov esi, 3	      5111	mbyte.c	FUNCTION_107	CALL_3
0x40008a8	          0x4889e7	                            mov rdi, rsp	      5111	mbyte.c	FUNCTION_107	CALL_3
0x40008ab	      0xe800000000	                          call 0x40008b0	      5111	mbyte.c	FUNCTION_107	CALL_3
0x40008b0	    0x8b0500000000	            mov eax, dword [0x040008b6] 	      5110	mbyte.c	FUNCTION_107	FOR_1
0x40008b6	          0x83e801	                              sub eax, 1	      5110	mbyte.c	FUNCTION_107	FOR_1
0x40008b9	    0x890500000000	            mov dword [0x040008bf], eax 	      5110	mbyte.c	FUNCTION_107	FOR_1
0x40008bf	            0x85c0	                           test eax, eax	      5110	mbyte.c	FUNCTION_107	FOR_1
0x40008c1	            0x7fe0	                            jg 0x40008a3	      5110	mbyte.c	FUNCTION_107	FOR_1
0x40008c3	    0x833d00000000	               cmp dword [0x040008ca], 0	      5113	mbyte.c	FUNCTION_107	FOR_2
0x40008ca	            0x7e22	                           jle 0x40008ee	      5113	mbyte.c	FUNCTION_107	FOR_2
0x40008cc	      0xbe03000000	                              mov esi, 3	      5114	mbyte.c	FUNCTION_107	CALL_4
0x40008d1	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5114	mbyte.c	FUNCTION_107	CALL_4
0x40008d6	      0xe800000000	                          call 0x40008db	      5114	mbyte.c	FUNCTION_107	CALL_4
0x40008db	    0x8b0500000000	            mov eax, dword [0x040008e1] 	      5113	mbyte.c	FUNCTION_107	FOR_2
0x40008e1	          0x83e801	                              sub eax, 1	      5113	mbyte.c	FUNCTION_107	FOR_2
0x40008e4	    0x890500000000	            mov dword [0x040008ea], eax 	      5113	mbyte.c	FUNCTION_107	FOR_2
0x40008ea	            0x85c0	                           test eax, eax	      5113	mbyte.c	FUNCTION_107	FOR_2
0x40008ec	            0x7fde	                            jg 0x40008cc	      5113	mbyte.c	FUNCTION_107	FOR_2
0x40008ee	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5115	mbyte.c	FUNCTION_107
0x40008f3	    0x644833042528	                xor rax, qword fs:[0x28]	      5115	mbyte.c	FUNCTION_107
0x40008fc	            0x7405	                            je 0x4000903	      5115	mbyte.c	FUNCTION_107
0x40008fe	      0xe800000000	                          call 0x4000903	      5115	mbyte.c	FUNCTION_107
0x4000903	        0x4883c428	                           add rsp, 0x28	      5115	mbyte.c	FUNCTION_107
0x4000907	              0xc3	                                     ret	      5115	mbyte.c	FUNCTION_107
latin_off2cells	SWITCH,0:CALL,0:IF,0:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	2
0x40001f4	      0xb801000000	                              mov eax, 1	      1741	mbyte.c	FUNCTION_30
0x40001f9	              0xc3	                                     ret	      1741	mbyte.c	FUNCTION_30
mb_strnicmp	SWITCH,0:CALL,4:IF,7:WHILE,0:FOR,1:DO,0:ELSE,2:functions,0	216
0x4001a15	            0x4157	                                push r15	      3668	mbyte.c	FUNCTION_65
0x4001a17	            0x4156	                                push r14	      3668	mbyte.c	FUNCTION_65
0x4001a19	            0x4155	                                push r13	      3668	mbyte.c	FUNCTION_65
0x4001a1b	            0x4154	                                push r12	      3668	mbyte.c	FUNCTION_65
0x4001a1d	              0x55	                                push rbp	      3668	mbyte.c	FUNCTION_65
0x4001a1e	              0x53	                                push rbx	      3668	mbyte.c	FUNCTION_65
0x4001a1f	        0x4883ec48	                           sub rsp, 0x48	      3668	mbyte.c	FUNCTION_65
0x4001a23	        0x48893c24	                    mov qword [rsp], rdi	      3668	mbyte.c	FUNCTION_65
0x4001a27	          0x4989f6	                            mov r14, rsi	      3668	mbyte.c	FUNCTION_65
0x4001a2a	    0x64488b042528	                mov rax, qword fs:[0x28]	      3668	mbyte.c	FUNCTION_65
0x4001a33	      0x4889442438	             mov qword [rsp + 0x38], rax	      3668	mbyte.c	FUNCTION_65
0x4001a38	            0x31c0	                            xor eax, eax	      3668	mbyte.c	FUNCTION_65
0x4001a3a	    0x8b0500000000	            mov eax, dword [0x04001a40] 	      3673	mbyte.c	FUNCTION_65	IF_1
0x4001a40	        0x8944240c	              mov dword [rsp + 0xc], eax	      3673	mbyte.c	FUNCTION_65	IF_1
0x4001a44	            0x85c0	                           test eax, eax	      3673	mbyte.c	FUNCTION_65	IF_1
0x4001a46	            0x7516	                           jne 0x4001a5e	      3673	mbyte.c	FUNCTION_65	IF_1
0x4001a48	          0x4189d7	                           mov r15d, edx	      3673	mbyte.c	FUNCTION_65	IF_1
0x4001a4b	    0x41bc00000000	                             mov r12d, 0	      3679	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x4001a51	            0x85d2	                           test edx, edx	      3679	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x4001a53	     0xf8fed010000	                            jg 0x4001c46	      3679	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x4001a59	      0xe96e020000	                           jmp 0x4001ccc	      3679	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x4001a5e	        0x488b0424	                    mov rax, qword [rsp]	      3679	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x4001a62	      0x4889442410	             mov qword [rsp + 0x10], rax	      3679	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x4001a67	      0x4889742418	             mov qword [rsp + 0x18], rsi	      3679	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x4001a6c	      0x4889542420	             mov qword [rsp + 0x20], rdx	      3679	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x4001a71	      0x4889542428	             mov qword [rsp + 0x28], rdx	      3679	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x4001a76	      0x488d742420	                   lea rsi, [rsp + 0x20]	      3594	mbyte.c	FUNCTION_64	FOR_1	CALL_1
0x4001a7b	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3594	mbyte.c	FUNCTION_64	FOR_1	CALL_1
0x4001a80	      0xe857e9ffff	         call sym.utf_safe_read_char_adv	      3594	mbyte.c	FUNCTION_64	FOR_1	CALL_1
0x4001a85	            0x89c3	                            mov ebx, eax	      3594	mbyte.c	FUNCTION_64	FOR_1	CALL_1
0x4001a87	      0x488d742428	                   lea rsi, [rsp + 0x28]	      3595	mbyte.c	FUNCTION_64	FOR_1	CALL_2
0x4001a8c	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      3595	mbyte.c	FUNCTION_64	FOR_1	CALL_2
0x4001a91	      0xe846e9ffff	         call sym.utf_safe_read_char_adv	      3595	mbyte.c	FUNCTION_64	FOR_1	CALL_2
0x4001a96	            0x89c5	                            mov ebp, eax	      3595	mbyte.c	FUNCTION_64	FOR_1	CALL_2
0x4001a98	            0x85db	                           test ebx, ebx	      3597	mbyte.c	FUNCTION_64	FOR_1	IF_1
0x4001a9a	            0x7e21	                           jle 0x4001abd	      3597	mbyte.c	FUNCTION_64	FOR_1	IF_1
0x4001a9c	            0x85c0	                           test eax, eax	      3597	mbyte.c	FUNCTION_64	FOR_1	IF_1
0x4001a9e	            0x7e1d	                           jle 0x4001abd	      3597	mbyte.c	FUNCTION_64	FOR_1	IF_1
0x4001aa0	            0x39c3	                            cmp ebx, eax	      3600	mbyte.c	FUNCTION_64	FOR_1	IF_2
0x4001aa2	            0x74d2	                            je 0x4001a76	      3600	mbyte.c	FUNCTION_64	FOR_1	IF_2
0x4001aa4	            0x89df	                            mov edi, ebx	      3603	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x4001aa6	      0xe800000000	                          call 0x4001aab	      3603	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x4001aab	            0x89c3	                            mov ebx, eax	      3603	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x4001aad	            0x89ef	                            mov edi, ebp	      3603	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x4001aaf	      0xe800000000	                          call 0x4001ab4	      3603	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x4001ab4	            0x29c3	                            sub ebx, eax	      3604	mbyte.c	FUNCTION_64	FOR_1	IF_3
0x4001ab6	            0x74be	                            je 0x4001a76	      3604	mbyte.c	FUNCTION_64	FOR_1	IF_3
0x4001ab8	      0xe96e010000	                           jmp 0x4001c2b	      3604	mbyte.c	FUNCTION_64	FOR_1	IF_3
0x4001abd	            0x85db	                           test ebx, ebx	      3610	mbyte.c	FUNCTION_64	IF_4
0x4001abf	            0x7404	                            je 0x4001ac5	      3610	mbyte.c	FUNCTION_64	IF_4
0x4001ac1	            0x85ed	                           test ebp, ebp	      3610	mbyte.c	FUNCTION_64	IF_4
0x4001ac3	            0x751d	                           jne 0x4001ae2	      3610	mbyte.c	FUNCTION_64	IF_4
0x4001ac5	             0x9dd	                             or ebp, ebx	      3613	mbyte.c	FUNCTION_64	IF_4	IF_5
0x4001ac7	        0x896c240c	              mov dword [rsp + 0xc], ebp	      3613	mbyte.c	FUNCTION_64	IF_4	IF_5
0x4001acb	     0xf84fb010000	                            je 0x4001ccc	      3613	mbyte.c	FUNCTION_64	IF_4	IF_5
0x4001ad1	          0x83fb01	                              cmp ebx, 1	      3615	mbyte.c	FUNCTION_64	IF_4
0x4001ad4	            0x19c0	                            sbb eax, eax	      3615	mbyte.c	FUNCTION_64	IF_4
0x4001ad6	          0x83c801	                               or eax, 1	      3615	mbyte.c	FUNCTION_64	IF_4
0x4001ad9	        0x8944240c	              mov dword [rsp + 0xc], eax	      3615	mbyte.c	FUNCTION_64	IF_4
0x4001add	      0xe9ea010000	                           jmp 0x4001ccc	      3615	mbyte.c	FUNCTION_64	IF_4
0x4001ae2	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      3625	mbyte.c	FUNCTION_64	IF_6
0x4001ae5	            0x7429	                            je 0x4001b10	      3625	mbyte.c	FUNCTION_64	IF_6
0x4001ae7	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      3625	mbyte.c	FUNCTION_64	IF_6
0x4001aea	            0x7524	                           jne 0x4001b10	      3625	mbyte.c	FUNCTION_64	IF_6
0x4001aec	            0x89df	                            mov edi, ebx	      3627	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x4001aee	      0xe800000000	                          call 0x4001af3	      3627	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x4001af3	      0x488d5c2430	                   lea rbx, [rsp + 0x30]	      3627	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x4001af8	          0x4889de	                            mov rsi, rbx	      3627	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x4001afb	            0x89c7	                            mov edi, eax	      3627	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x4001afd	      0xe800000000	                          call 0x4001b02	      3627	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x4001b02	            0x4898	                                    cdqe	      3627	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x4001b04	      0x4889442420	             mov qword [rsp + 0x20], rax	      3627	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x4001b09	      0x48895c2410	             mov qword [rsp + 0x10], rbx	      3628	mbyte.c	FUNCTION_64	IF_6
0x4001b0e	            0xeb2c	                           jmp 0x4001b3c	      3628	mbyte.c	FUNCTION_64	IF_6
0x4001b10	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      3630	mbyte.c	FUNCTION_64	ELSE_1	IF_7
0x4001b13	            0x7427	                            je 0x4001b3c	      3630	mbyte.c	FUNCTION_64	ELSE_1	IF_7
0x4001b15	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      3630	mbyte.c	FUNCTION_64	ELSE_1	IF_7
0x4001b18	            0x7522	                           jne 0x4001b3c	      3630	mbyte.c	FUNCTION_64	ELSE_1	IF_7
0x4001b1a	            0x89ef	                            mov edi, ebp	      3632	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x4001b1c	      0xe800000000	                          call 0x4001b21	      3632	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x4001b21	      0x488d5c2430	                   lea rbx, [rsp + 0x30]	      3632	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x4001b26	          0x4889de	                            mov rsi, rbx	      3632	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x4001b29	            0x89c7	                            mov edi, eax	      3632	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x4001b2b	      0xe800000000	                          call 0x4001b30	      3632	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x4001b30	            0x4898	                                    cdqe	      3632	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x4001b32	      0x4889442428	             mov qword [rsp + 0x28], rax	      3632	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x4001b37	      0x48895c2418	             mov qword [rsp + 0x18], rbx	      3633	mbyte.c	FUNCTION_64	ELSE_1	IF_7
0x4001b3c	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4001b41	          0x4885c9	                           test rcx, rcx	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4001b44	     0xf84b3000000	                            je 0x4001bfd	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4001b4a	      0x4c8b4c2428	              mov r9, qword [rsp + 0x28]	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4001b4f	          0x4d85c9	                             test r9, r9	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4001b52	     0xf848a010000	                            je 0x4001ce2	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4001b58	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4001b5d	           0xfb607	                   movzx eax, byte [rdi]	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4001b60	            0x84c0	                             test al, al	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4001b62	     0xf848c000000	                            je 0x4001bf4	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4001b68	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4001b6d	           0xfb616	                   movzx edx, byte [rsi]	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4001b70	            0x84d2	                             test dl, dl	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4001b72	     0xf8485000000	                            je 0x4001bfd	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4001b78	           0xfb6c0	                           movzx eax, al	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x4001b7b	           0xfb6d2	                           movzx edx, dl	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x4001b7e	            0x29d0	                            sub eax, edx	      3639	mbyte.c	FUNCTION_64	WHILE_1	IF_8
0x4001b80	     0xf85ae000000	                           jne 0x4001c34	      3639	mbyte.c	FUNCTION_64	WHILE_1	IF_8
0x4001b86	        0x4883c701	                              add rdi, 1	      3639	mbyte.c	FUNCTION_64	WHILE_1	IF_8
0x4001b8a	        0x4883c601	                              add rsi, 1	      3639	mbyte.c	FUNCTION_64	WHILE_1	IF_8
0x4001b8e	        0x488d51ff	                      lea rdx, [rcx - 1]	      3639	mbyte.c	FUNCTION_64	WHILE_1	IF_8
0x4001b92	          0x4989ca	                            mov r10, rcx	      3639	mbyte.c	FUNCTION_64	WHILE_1	IF_8
0x4001b95	          0x4d29ca	                             sub r10, r9	      3639	mbyte.c	FUNCTION_64	WHILE_1	IF_8
0x4001b98	          0x4929c9	                             sub r9, rcx	      3645	mbyte.c	FUNCTION_64	WHILE_1
0x4001b9b	            0xeb1a	                           jmp 0x4001bb7	      3645	mbyte.c	FUNCTION_64	WHILE_1
0x4001b9d	           0xfb6c0	                           movzx eax, al	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x4001ba0	           0xfb6c9	                           movzx ecx, cl	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x4001ba3	        0x4883c701	                              add rdi, 1	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x4001ba7	        0x4883c601	                              add rsi, 1	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x4001bab	        0x4883ea01	                              sub rdx, 1	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x4001baf	            0x29c8	                            sub eax, ecx	      3639	mbyte.c	FUNCTION_64	WHILE_1	IF_8
0x4001bb1	     0xf8586000000	                           jne 0x4001c3d	      3639	mbyte.c	FUNCTION_64	WHILE_1	IF_8
0x4001bb7	      0x48897c2410	             mov qword [rsp + 0x10], rdi	      3642	mbyte.c	FUNCTION_64	WHILE_1
0x4001bbc	      0x4889742418	             mov qword [rsp + 0x18], rsi	      3643	mbyte.c	FUNCTION_64	WHILE_1
0x4001bc1	      0x4889542420	             mov qword [rsp + 0x20], rdx	      3644	mbyte.c	FUNCTION_64	WHILE_1
0x4001bc6	        0x498d0411	                     lea rax, [r9 + rdx]	      3645	mbyte.c	FUNCTION_64	WHILE_1
0x4001bca	      0x4889442428	             mov qword [rsp + 0x28], rax	      3645	mbyte.c	FUNCTION_64	WHILE_1
0x4001bcf	          0x4885d2	                           test rdx, rdx	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4001bd2	            0x7429	                            je 0x4001bfd	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4001bd4	          0x4c39d2	                            cmp rdx, r10	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4001bd7	     0xf8405010000	                            je 0x4001ce2	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4001bdd	           0xfb607	                   movzx eax, byte [rdi]	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4001be0	            0x84c0	                             test al, al	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4001be2	     0xf84fa000000	                            je 0x4001ce2	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4001be8	           0xfb60e	                   movzx ecx, byte [rsi]	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4001beb	            0x84c9	                             test cl, cl	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4001bed	            0x75ae	                           jne 0x4001b9d	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4001bef	      0xe9ee000000	                           jmp 0x4001ce2	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4001bf4	    0x48c744242000	               mov qword [rsp + 0x20], 0	      3649	mbyte.c	FUNCTION_64	IF_9
0x4001bfd	    0x48837c242800	               cmp qword [rsp + 0x28], 0	      3650	mbyte.c	FUNCTION_64	IF_10
0x4001c03	     0xf84ec000000	                            je 0x4001cf5	      3650	mbyte.c	FUNCTION_64	IF_10
0x4001c09	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3650	mbyte.c	FUNCTION_64	IF_10
0x4001c0e	          0x803800	                       cmp byte [rax], 0	      3650	mbyte.c	FUNCTION_64	IF_10
0x4001c11	     0xf84de000000	                            je 0x4001cf5	      3650	mbyte.c	FUNCTION_64	IF_10
0x4001c17	    0x48837c242001	               cmp qword [rsp + 0x20], 1	      3655	mbyte.c	FUNCTION_64
0x4001c1d	            0x19c0	                            sbb eax, eax	      3655	mbyte.c	FUNCTION_64
0x4001c1f	          0x83c801	                               or eax, 1	      3655	mbyte.c	FUNCTION_64
0x4001c22	        0x8944240c	              mov dword [rsp + 0xc], eax	      3655	mbyte.c	FUNCTION_64
0x4001c26	      0xe9a1000000	                           jmp 0x4001ccc	      3655	mbyte.c	FUNCTION_64
0x4001c2b	        0x895c240c	              mov dword [rsp + 0xc], ebx	      3603	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x4001c2f	      0xe998000000	                           jmp 0x4001ccc	      3603	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x4001c34	        0x8944240c	              mov dword [rsp + 0xc], eax	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x4001c38	      0xe98f000000	                           jmp 0x4001ccc	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x4001c3d	        0x8944240c	              mov dword [rsp + 0xc], eax	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x4001c41	      0xe986000000	                           jmp 0x4001ccc	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x4001c46	          0x4963ec	                        movsxd rbp, r12d	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x4001c49	        0x488b0424	                    mov rax, qword [rsp]	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x4001c4d	        0x4c8d2c28	                    lea r13, [rax + rbp]	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x4001c51	      0x41807d0000	                       cmp byte [r13], 0	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x4001c56	            0x7507	                           jne 0x4001c5f	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x4001c58	      0x41803c2e00	                 cmp byte [r14 + rbp], 0	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x4001c5d	            0x746d	                            je 0x4001ccc	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x4001c5f	          0x4c89ef	                            mov rdi, r13	      3684	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x4001c62	    0xff1500000000	                 call qword [0x04001c68]	      3684	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x4001c68	            0x89c3	                            mov ebx, eax	      3684	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x4001c6a	          0x83f801	                              cmp eax, 1	      3685	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3
0x4001c6d	            0x7f2a	                            jg 0x4001c99	      3685	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3
0x4001c6f	      0x410fb67d00	                   movzx edi, byte [r13]	      3688	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4
0x4001c74	          0x4c01f5	                            add rbp, r14	      3688	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4
0x4001c77	        0x403a7d00	                     cmp dil, byte [rbp]	      3688	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4
0x4001c7b	            0x743a	                            je 0x4001cb7	      3688	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4
0x4001c7d	        0x400fb6ff	                          movzx edi, dil	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x4001c81	      0xe800000000	                          call 0x4001c86	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x4001c86	          0x4189c5	                           mov r13d, eax	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x4001c89	         0xfb67d00	                   movzx edi, byte [rbp]	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x4001c8d	      0xe800000000	                          call 0x4001c92	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x4001c92	          0x4129c5	                           sub r13d, eax	      3691	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	IF_5
0x4001c95	            0x7420	                            je 0x4001cb7	      3691	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	IF_5
0x4001c97	            0xeb28	                           jmp 0x4001cc1	      3691	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	IF_5
0x4001c99	          0x4489f8	                           mov eax, r15d	      3698	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_6
0x4001c9c	          0x4429e0	                           sub eax, r12d	      3698	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_6
0x4001c9f	            0x39c3	                            cmp ebx, eax	      3698	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_6
0x4001ca1	           0xf4fd8	                          cmovg ebx, eax	      3698	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_6
0x4001ca4	          0x4863d3	                         movsxd rdx, ebx	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x4001ca7	        0x498d342e	                    lea rsi, [r14 + rbp]	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x4001cab	          0x4c89ef	                            mov rdi, r13	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x4001cae	      0xe800000000	                          call 0x4001cb3	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x4001cb3	            0x85c0	                           test eax, eax	      3701	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_7
0x4001cb5	            0x7511	                           jne 0x4001cc8	      3701	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_7
0x4001cb7	          0x4101dc	                           add r12d, ebx	      3679	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x4001cba	          0x4539e7	                          cmp r15d, r12d	      3679	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x4001cbd	            0x7f87	                            jg 0x4001c46	      3679	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x4001cbf	            0xeb0b	                           jmp 0x4001ccc	      3679	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x4001cc1	      0x44896c240c	             mov dword [rsp + 0xc], r13d	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x4001cc6	            0xeb04	                           jmp 0x4001ccc	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x4001cc8	        0x8944240c	              mov dword [rsp + 0xc], eax	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x4001ccc	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      3707	mbyte.c	FUNCTION_65
0x4001cd0	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      3707	mbyte.c	FUNCTION_65
0x4001cd5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3707	mbyte.c	FUNCTION_65
0x4001cde	            0x742c	                            je 0x4001d0c	      3707	mbyte.c	FUNCTION_65
0x4001ce0	            0xeb25	                           jmp 0x4001d07	      3707	mbyte.c	FUNCTION_65
0x4001ce2	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3648	mbyte.c	FUNCTION_64	IF_9
0x4001ce7	          0x803800	                       cmp byte [rax], 0	      3648	mbyte.c	FUNCTION_64	IF_9
0x4001cea	     0xf850dffffff	                           jne 0x4001bfd	      3648	mbyte.c	FUNCTION_64	IF_9
0x4001cf0	      0xe9fffeffff	                           jmp 0x4001bf4	      3648	mbyte.c	FUNCTION_64	IF_9
0x4001cf5	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      3603	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x4001cfb	           0xf95c0	                                setne al	      3603	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x4001cfe	           0xfb6c0	                           movzx eax, al	      3603	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x4001d01	        0x8944240c	              mov dword [rsp + 0xc], eax	      3603	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x4001d05	            0xebc5	                           jmp 0x4001ccc	      3603	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x4001d07	      0xe800000000	                          call 0x4001d0c	      3707	mbyte.c	FUNCTION_65
0x4001d0c	        0x4883c448	                           add rsp, 0x48	      3707	mbyte.c	FUNCTION_65
0x4001d10	              0x5b	                                 pop rbx	      3707	mbyte.c	FUNCTION_65
0x4001d11	              0x5d	                                 pop rbp	      3707	mbyte.c	FUNCTION_65
0x4001d12	            0x415c	                                 pop r12	      3707	mbyte.c	FUNCTION_65
0x4001d14	            0x415d	                                 pop r13	      3707	mbyte.c	FUNCTION_65
0x4001d16	            0x415e	                                 pop r14	      3707	mbyte.c	FUNCTION_65
0x4001d18	            0x415f	                                 pop r15	      3707	mbyte.c	FUNCTION_65
0x4001d1a	              0xc3	                                     ret	      3707	mbyte.c	FUNCTION_65
mb_lefthalve	SWITCH,0:CALL,0:IF,1:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	14
0x40023a5	        0x4883ec08	                              sub rsp, 8	      4248	mbyte.c	FUNCTION_83
0x40023a9	          0x4863d7	                         movsxd rdx, edi	      4254	mbyte.c	FUNCTION_83
0x40023ac	    0x488b05000000	            mov rax, qword [0x040023b3] 	      4254	mbyte.c	FUNCTION_83
0x40023b3	          0x8b0490	            mov eax, dword [rax + rdx*4]	      4254	mbyte.c	FUNCTION_83
0x40023b6	            0x89c2	                            mov edx, eax	      4253	mbyte.c	FUNCTION_83
0x40023b8	     0x31500000000	             add edx, dword [0x040023be]	      4253	mbyte.c	FUNCTION_83
0x40023be	          0x8d3c06	                    lea edi, [rsi + rax]	      4253	mbyte.c	FUNCTION_83
0x40023c1	            0x89d6	                            mov esi, edx	      4253	mbyte.c	FUNCTION_83
0x40023c3	    0xff1500000000	                 call qword [0x040023c9]	      4253	mbyte.c	FUNCTION_83
0x40023c9	          0x83f801	                              cmp eax, 1	      4253	mbyte.c	FUNCTION_83
0x40023cc	           0xf9fc0	                                 setg al	      4253	mbyte.c	FUNCTION_83
0x40023cf	           0xfb6c0	                           movzx eax, al	      4253	mbyte.c	FUNCTION_83
0x40023d2	        0x4883c408	                              add rsp, 8	      4255	mbyte.c	FUNCTION_83
0x40023d6	              0xc3	                                     ret	      4255	mbyte.c	FUNCTION_83
xim_set_focus	SWITCH,0:CALL,2:IF,4:WHILE,0:FOR,0:DO,0:ELSE,1:functions,0	12
0x4002a1c	            0x89f8	                            mov eax, edi	      4871	mbyte.c	FUNCTION_99
0x4002a1e	    0x488b3d000000	            mov rdi, qword [0x04002a25] 	      4872	mbyte.c	FUNCTION_99	IF_1
0x4002a25	          0x4885ff	                           test rdi, rdi	      4872	mbyte.c	FUNCTION_99	IF_1
0x4002a28	            0x7418	                            je 0x4002a42	      4872	mbyte.c	FUNCTION_99	IF_1
0x4002a2a	        0x4883ec08	                              sub rsp, 8	      4871	mbyte.c	FUNCTION_99
0x4002a2e	            0x85c0	                           test eax, eax	      4874	mbyte.c	FUNCTION_99	IF_1	IF_2
0x4002a30	            0x7407	                            je 0x4002a39	      4874	mbyte.c	FUNCTION_99	IF_1	IF_2
0x4002a32	      0xe800000000	                          call 0x4002a37	      4875	mbyte.c	FUNCTION_99	IF_1	CALL_1
0x4002a37	            0xeb05	                           jmp 0x4002a3e	      4875	mbyte.c	FUNCTION_99	IF_1	CALL_1
0x4002a39	      0xe800000000	                          call 0x4002a3e	      4877	mbyte.c	FUNCTION_99	IF_1	CALL_2
0x4002a3e	        0x4883c408	                              add rsp, 8	      4879	mbyte.c	FUNCTION_99
0x4002a42	            0xf3c3	                                     ret	      4879	mbyte.c	FUNCTION_99
xim_queue_key_press_event	SWITCH,1:CALL,5:IF,11:WHILE,0:FOR,0:DO,0:ELSE,1:functions,0	176
0x400313e	            0x85f6	                           test esi, esi	      5738	mbyte.c	FUNCTION_122	IF_1
0x4003140	     0xf84b5010000	                            je 0x40032fb	      5738	mbyte.c	FUNCTION_122	IF_1
0x4003146	          0x8b471c	            mov eax, dword [rdi + 0x1c] 	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003149	      0x3db2ff0000	                         cmp eax, 0xffb2	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400314e	     0xf843f010000	                            je 0x4003293	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003154	      0x3db2ff0000	                         cmp eax, 0xffb2	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003159	            0x7767	                            ja 0x40031c2	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400315b	      0x3dadff0000	                         cmp eax, 0xffad	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003160	     0xf84cd000000	                            je 0x4003233	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003166	      0x3dadff0000	                         cmp eax, 0xffad	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400316b	            0x7724	                            ja 0x4003191	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400316d	      0x3daaff0000	                         cmp eax, 0xffaa	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003172	     0xf84d9000000	                            je 0x4003251	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003178	      0x3dabff0000	                         cmp eax, 0xffab	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400317d	     0xf84a1000000	                            je 0x4003224	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003183	          0x83f820	                           cmp eax, 0x20	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003186	     0xf855b010000	                           jne 0x40032e7	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400318c	      0xe94a010000	                           jmp 0x40032db	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003191	      0x3dafff0000	                         cmp eax, 0xffaf	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003196	     0xf84a6000000	                            je 0x4003242	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400319c	      0x3dafff0000	                         cmp eax, 0xffaf	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40031a1	     0xf82b9000000	                            jb 0x4003260	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40031a7	      0x3db0ff0000	                         cmp eax, 0xffb0	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40031ac	     0xf84c9000000	                            je 0x400327b	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40031b2	      0x3db1ff0000	                         cmp eax, 0xffb1	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40031b7	     0xf84ca000000	                            je 0x4003287	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40031bd	      0xe925010000	                           jmp 0x40032e7	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40031c2	      0x3db6ff0000	                         cmp eax, 0xffb6	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40031c7	     0xf84de000000	                            je 0x40032ab	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40031cd	      0x3db6ff0000	                         cmp eax, 0xffb6	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40031d2	            0x7723	                            ja 0x40031f7	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40031d4	      0x3db4ff0000	                         cmp eax, 0xffb4	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40031d9	     0xf84c0000000	                            je 0x400329f	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40031df	      0x3db5ff0000	                         cmp eax, 0xffb5	      5762	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40031e4	            0x19c0	                            sbb eax, eax	      5762	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40031e6	          0x83e0fe	                     and eax, 0xfffffffe	      5762	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40031e9	          0x83c035	                           add eax, 0x35	      5762	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40031ec	    0x890500000000	            mov dword [0x040031f2], eax 	      5762	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40031f2	      0xe9fa000000	                           jmp 0x40032f1	      5762	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40031f7	      0x3db8ff0000	                         cmp eax, 0xffb8	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40031fc	     0xf84c1000000	                            je 0x40032c3	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003202	      0x3db8ff0000	                         cmp eax, 0xffb8	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003207	     0xf82aa000000	                            jb 0x40032b7	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400320d	      0x3db9ff0000	                         cmp eax, 0xffb9	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003212	     0xf84b7000000	                            je 0x40032cf	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003218	      0x3dbdff0000	                         cmp eax, 0xffbd	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400321d	            0x7450	                            je 0x400326f	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400321f	      0xe9c3000000	                           jmp 0x40032e7	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003224	    0xc70500000000	           mov dword [0x0400322e], 0x2b 	      5753	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400322e	      0xe9be000000	                           jmp 0x40032f1	      5753	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003233	    0xc70500000000	           mov dword [0x0400323d], 0x2d 	      5754	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400323d	      0xe9af000000	                           jmp 0x40032f1	      5754	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003242	    0xc70500000000	           mov dword [0x0400324c], 0x2f 	      5755	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400324c	      0xe9a0000000	                           jmp 0x40032f1	      5755	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003251	    0xc70500000000	           mov dword [0x0400325b], 0x2a 	      5756	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400325b	      0xe991000000	                           jmp 0x40032f1	      5756	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003260	    0xc70500000000	           mov dword [0x0400326a], 0x2e 	      5757	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400326a	      0xe982000000	                           jmp 0x40032f1	      5757	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400326f	    0xc70500000000	           mov dword [0x04003279], 0x3d 	      5758	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003279	            0xeb76	                           jmp 0x40032f1	      5758	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400327b	    0xc70500000000	           mov dword [0x04003285], 0x30 	      5759	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003285	            0xeb6a	                           jmp 0x40032f1	      5759	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003287	    0xc70500000000	           mov dword [0x04003291], 0x31 	      5760	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003291	            0xeb5e	                           jmp 0x40032f1	      5760	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4003293	    0xc70500000000	           mov dword [0x0400329d], 0x32 	      5761	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400329d	            0xeb52	                           jmp 0x40032f1	      5761	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400329f	    0xc70500000000	           mov dword [0x040032a9], 0x34 	      5763	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40032a9	            0xeb46	                           jmp 0x40032f1	      5763	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40032ab	    0xc70500000000	           mov dword [0x040032b5], 0x36 	      5765	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40032b5	            0xeb3a	                           jmp 0x40032f1	      5765	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40032b7	    0xc70500000000	           mov dword [0x040032c1], 0x37 	      5766	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40032c1	            0xeb2e	                           jmp 0x40032f1	      5766	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40032c3	    0xc70500000000	           mov dword [0x040032cd], 0x38 	      5767	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40032cd	            0xeb22	                           jmp 0x40032f1	      5767	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40032cf	    0xc70500000000	           mov dword [0x040032d9], 0x39 	      5768	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40032d9	            0xeb16	                           jmp 0x40032f1	      5768	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40032db	    0xc70500000000	           mov dword [0x040032e5], 0x20 	      5769	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40032e5	            0xeb0a	                           jmp 0x40032f1	      5769	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40032e7	    0xc70500000000	               mov dword [0x040032f1], 0	      5770	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40032f1	    0xc70500000000	               mov dword [0x040032fb], 0	      5772	mbyte.c	FUNCTION_122	IF_1
0x40032fb	    0x488b15000000	            mov rdx, qword [0x04003302] 	      5780	mbyte.c	FUNCTION_122	IF_2
0x4003302	          0x4885d2	                           test rdx, rdx	      5780	mbyte.c	FUNCTION_122	IF_2
0x4003305	     0xf8470010000	                            je 0x400347b	      5780	mbyte.c	FUNCTION_122	IF_2
0x400330b	              0x55	                                push rbp	      5737	mbyte.c	FUNCTION_122
0x400330c	              0x53	                                push rbx	      5737	mbyte.c	FUNCTION_122
0x400330d	        0x4883ec08	                              sub rsp, 8	      5737	mbyte.c	FUNCTION_122
0x4003311	    0x8b2d00000000	            mov ebp, dword [0x04003317] 	      5780	mbyte.c	FUNCTION_122	IF_2
0x4003317	      0xb800000000	                              mov eax, 0	      5869	mbyte.c	FUNCTION_122
0x400331c	            0x85ed	                           test ebp, ebp	      5780	mbyte.c	FUNCTION_122	IF_2
0x400331e	     0xf855d010000	                           jne 0x4003481	      5780	mbyte.c	FUNCTION_122	IF_2
0x4003324	    0x8b0500000000	            mov eax, dword [0x0400332a] 	      5781	mbyte.c	FUNCTION_122	IF_2
0x400332a	      0x2519060000	                          and eax, 0x619	      5781	mbyte.c	FUNCTION_122	IF_2
0x400332f	     0xf844c010000	                            je 0x4003481	      5781	mbyte.c	FUNCTION_122	IF_2
0x4003335	          0x4889fb	                            mov rbx, rdi	      5781	mbyte.c	FUNCTION_122	IF_2
0x4003338	    0x8b0500000000	            mov eax, dword [0x0400333e] 	      5788	mbyte.c	FUNCTION_122	IF_2	IF_3
0x400333e	          0x39471c	            cmp dword [rdi + 0x1c], eax 	      5788	mbyte.c	FUNCTION_122	IF_2	IF_3
0x4003341	     0xf85be000000	                           jne 0x4003405	      5788	mbyte.c	FUNCTION_122	IF_2	IF_3
0x4003347	          0x8b7718	            mov esi, dword [rdi + 0x18] 	      5789	mbyte.c	FUNCTION_122	IF_2	IF_3
0x400334a	    0x8b0d00000000	            mov ecx, dword [0x04003350] 	      5789	mbyte.c	FUNCTION_122	IF_2	IF_3
0x4003350	            0x89f7	                            mov edi, esi	      5789	mbyte.c	FUNCTION_122	IF_2	IF_3
0x4003352	            0x21cf	                            and edi, ecx	      5789	mbyte.c	FUNCTION_122	IF_2	IF_3
0x4003354	            0x39f9	                            cmp ecx, edi	      5789	mbyte.c	FUNCTION_122	IF_2	IF_3
0x4003356	     0xf85a9000000	                           jne 0x4003405	      5789	mbyte.c	FUNCTION_122	IF_2	IF_3
0x400335c	            0x89c8	                            mov eax, ecx	      5800	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_4
0x400335e	          0x83c80d	                             or eax, 0xd	      5800	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_4
0x4003361	            0x21c6	                            and esi, eax	      5800	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_4
0x4003363	            0x89e8	                            mov eax, ebp	      5801	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_4
0x4003365	            0x39f1	                            cmp ecx, esi	      5800	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_4
0x4003367	     0xf8514010000	                           jne 0x4003481	      5800	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_4
0x400336d	      0xb801000000	                              mov eax, 1	      5805	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_5
0x4003372	          0x833b08	                      cmp dword [rbx], 8	      5804	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_5
0x4003375	     0xf8506010000	                           jne 0x4003481	      5804	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_5
0x400337b	      0xba00000000	                              mov edx, 0	      5807	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	CALL_1
0x4003380	      0xbe20000000	                           mov esi, 0x20	      5807	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	CALL_1
0x4003385	      0xbf00000000	                              mov edi, 0	      5807	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	CALL_1
0x400338a	      0xe800000000	                          call 0x400338f	      5807	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	CALL_1
0x400338f	            0x85c0	                           test eax, eax	      5807	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	CALL_1
0x4003391	            0x7461	                            je 0x40033f4	      5807	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	CALL_1
0x4003393	      0xbf00000000	                              mov edi, 0	      5809	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	CALL_2
0x4003398	      0xe800000000	                          call 0x400339d	      5809	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	CALL_2
0x400339d	    0x8b0500000000	            mov eax, dword [0x040033a3] 	      5812	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6
0x40033a3	          0x83f020	                           xor eax, 0x20	      5812	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6
0x40033a6	            0xa820	                           test al, 0x20	      5813	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	IF_7
0x40033a8	            0x7425	                            je 0x40033cf	      5813	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	IF_7
0x40033aa	    0x488b15000000	            mov rdx, qword [0x040033b1] 	      5815	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	IF_7
0x40033b1	    0x48c782781200	            mov qword [rdx + 0x1278], 0 	      5815	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	IF_7
0x40033bc	          0x83e0df	                     and eax, 0xffffffdf	      5816	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	IF_7
0x40033bf	    0x890500000000	            mov dword [0x040033c5], eax 	      5816	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	IF_7
0x40033c5	      0xb801000000	                              mov eax, 1	      5823	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6
0x40033ca	      0xe9b2000000	                           jmp 0x4003481	      5823	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6
0x40033cf	    0x488b15000000	            mov rdx, qword [0x040033d6] 	      5820	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	ELSE_1
0x40033d6	    0x48c782781200	            mov qword [rdx + 0x1278], 1 	      5820	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	ELSE_1
0x40033e1	          0x83c820	                            or eax, 0x20	      5821	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	ELSE_1
0x40033e4	    0x890500000000	            mov dword [0x040033ea], eax 	      5821	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	ELSE_1
0x40033ea	      0xb801000000	                              mov eax, 1	      5823	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6
0x40033ef	      0xe98d000000	                           jmp 0x4003481	      5823	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6
0x40033f4	          0x4889de	                            mov rsi, rbx	      5826	mbyte.c	FUNCTION_122	IF_2	IF_3	CALL_3
0x40033f7	    0x488b3d000000	            mov rdi, qword [0x040033fe] 	      5826	mbyte.c	FUNCTION_122	IF_2	IF_3	CALL_3
0x40033fe	      0xe800000000	                          call 0x4003403	      5826	mbyte.c	FUNCTION_122	IF_2	IF_3	CALL_3
0x4003403	            0xeb7c	                           jmp 0x4003481	      5826	mbyte.c	FUNCTION_122	IF_2	IF_3	CALL_3
0x4003405	      0x3dffffff00	                       cmp eax, 0xffffff	      5832	mbyte.c	FUNCTION_122	IF_2	IF_8
0x400340a	            0x740a	                            je 0x4003416	      5832	mbyte.c	FUNCTION_122	IF_2	IF_8
0x400340c	    0x8b0500000000	            mov eax, dword [0x04003412] 	      5832	mbyte.c	FUNCTION_122	IF_2	IF_8
0x4003412	            0x85c0	                           test eax, eax	      5832	mbyte.c	FUNCTION_122	IF_2	IF_8
0x4003414	            0x746b	                            je 0x4003481	      5832	mbyte.c	FUNCTION_122	IF_2	IF_8
0x4003416	          0x4889de	                            mov rsi, rbx	      5834	mbyte.c	FUNCTION_122	IF_2	IF_8	CALL_4
0x4003419	          0x4889d7	                            mov rdi, rdx	      5834	mbyte.c	FUNCTION_122	IF_2	IF_8	CALL_4
0x400341c	      0xe800000000	                          call 0x4003421	      5834	mbyte.c	FUNCTION_122	IF_2	IF_8	CALL_4
0x4003421	            0x89c2	                            mov edx, eax	      5834	mbyte.c	FUNCTION_122	IF_2	IF_8	CALL_4
0x4003423	    0x48833d000000	               cmp qword [0x0400342b], 0	      5846	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10
0x400342b	            0x752c	                           jne 0x4003459	      5846	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10
0x400342d	            0x85c0	                           test eax, eax	      5846	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10
0x400342f	            0x7528	                           jne 0x4003459	      5846	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10
0x4003431	    0x813d00000000	     cmp dword [0x0400343b], 0x7fffffff 	      5846	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10
0x400343b	            0x741c	                            je 0x4003459	      5846	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10
0x400343d	    0x817b1c0dff00	         cmp dword [rbx + 0x1c], 0xff0d 	      5847	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10
0x4003444	            0x7513	                           jne 0x4003459	      5847	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10
0x4003446	      0xbe00000000	                              mov esi, 0	      5849	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10	CALL_5
0x400344b	      0xbf0dff0000	                         mov edi, 0xff0d	      5849	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10	CALL_5
0x4003450	      0xe8bdd5ffff	         call sym.im_synthesize_keypress	      5849	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10	CALL_5
0x4003455	            0x89e8	                            mov eax, ebp	      5850	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10
0x4003457	            0xeb28	                           jmp 0x4003481	      5850	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10
0x4003459	    0x833d00000000	               cmp dword [0x04003460], 0	      5856	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_11
0x4003460	            0x740b	                            je 0x400346d	      5856	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_11
0x4003462	            0x89e8	                            mov eax, ebp	      5858	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_11
0x4003464	    0x833d00000000	               cmp dword [0x0400346b], 0	      5856	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_11
0x400346b	            0x7514	                           jne 0x4003481	      5856	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_11
0x400346d	    0xc70500000000	               mov dword [0x04003477], 0	      5862	mbyte.c	FUNCTION_122	IF_2	IF_8
0x4003477	            0x89d0	                            mov eax, edx	      5865	mbyte.c	FUNCTION_122	IF_2	IF_8
0x4003479	            0xeb06	                           jmp 0x4003481	      5865	mbyte.c	FUNCTION_122	IF_2	IF_8
0x400347b	      0xb800000000	                              mov eax, 0	      5869	mbyte.c	FUNCTION_122
0x4003480	              0xc3	                                     ret	      5869	mbyte.c	FUNCTION_122
0x4003481	        0x4883c408	                              add rsp, 8	      5870	mbyte.c	FUNCTION_122
0x4003485	              0x5b	                                 pop rbx	      5870	mbyte.c	FUNCTION_122
0x4003486	              0x5d	                                 pop rbp	      5870	mbyte.c	FUNCTION_122
0x4003487	              0xc3	                                     ret	      5870	mbyte.c	FUNCTION_122
im_show_info	SWITCH,0:CALL,3:IF,1:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	11
0x4000908	              0x53	                                push rbx	      5145	mbyte.c	FUNCTION_109
0x4000909	    0x8b1d00000000	            mov ebx, dword [0x0400090f] 	      5148	mbyte.c	FUNCTION_109
0x400090f	    0xc70500000000	               mov dword [0x04000919], 1	      5149	mbyte.c	FUNCTION_109
0x4000919	      0xe800000000	                          call 0x400091e	      5150	mbyte.c	FUNCTION_109	CALL_1
0x400091e	    0x891d00000000	            mov dword [0x04000924], ebx 	      5151	mbyte.c	FUNCTION_109
0x4000924	    0xf60500000000	           test byte [0x0400092b], 0x11 	      5152	mbyte.c	FUNCTION_109	IF_1
0x400092b	            0x7405	                            je 0x4000932	      5152	mbyte.c	FUNCTION_109	IF_1
0x400092d	      0xe800000000	                          call 0x4000932	      5153	mbyte.c	FUNCTION_109	CALL_2
0x4000932	      0xe800000000	                          call 0x4000937	      5154	mbyte.c	FUNCTION_109	CALL_3
0x4000937	              0x5b	                                 pop rbx	      5155	mbyte.c	FUNCTION_109
0x4000938	              0xc3	                                     ret	      5155	mbyte.c	FUNCTION_109
xim_init	SWITCH,0:CALL,5:IF,1:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	67
0x4002ce8	        0x4883ec08	                              sub rsp, 8	      5536	mbyte.c	FUNCTION_116
0x4002cec	    0x488b05000000	            mov rax, qword [0x04002cf3] 	      5541	mbyte.c	FUNCTION_116	CALL_2
0x4002cf3	          0x4885c0	                           test rax, rax	      5541	mbyte.c	FUNCTION_116	CALL_2
0x4002cf6	            0x7519	                           jne 0x4002d11	      5541	mbyte.c	FUNCTION_116	CALL_2
0x4002cf8	      0xba00000000	                              mov edx, 0	      5541	mbyte.c	FUNCTION_116	CALL_2
0x4002cfd	      0xbe00000000	                              mov esi, 0	      5541	mbyte.c	FUNCTION_116	CALL_2
0x4002d02	      0xbf00000000	                              mov edi, 0	      5541	mbyte.c	FUNCTION_116	CALL_2
0x4002d07	      0xe800000000	                          call 0x4002d0c	      5541	mbyte.c	FUNCTION_116	CALL_2
0x4002d0c	      0xe922010000	                           jmp 0x4002e33	      5541	mbyte.c	FUNCTION_116	CALL_2
0x4002d11	      0x4883785000	               cmp qword [rax + 0x50], 0	      5545	mbyte.c	FUNCTION_116	CALL_5
0x4002d16	            0x7519	                           jne 0x4002d31	      5545	mbyte.c	FUNCTION_116	CALL_5
0x4002d18	      0xba00000000	                              mov edx, 0	      5545	mbyte.c	FUNCTION_116	CALL_5
0x4002d1d	      0xbe00000000	                              mov esi, 0	      5545	mbyte.c	FUNCTION_116	CALL_5
0x4002d22	      0xbf00000000	                              mov edi, 0	      5545	mbyte.c	FUNCTION_116	CALL_5
0x4002d27	      0xe800000000	                          call 0x4002d2c	      5545	mbyte.c	FUNCTION_116	CALL_5
0x4002d2c	      0xe902010000	                           jmp 0x4002e33	      5545	mbyte.c	FUNCTION_116	CALL_5
0x4002d31	      0xe800000000	                          call 0x4002d36	      5548	mbyte.c	FUNCTION_116	CALL_6
0x4002d36	    0x488905000000	            mov qword [0x04002d3d], rax 	      5548	mbyte.c	FUNCTION_116	CALL_6
0x4002d3d	          0x4889c7	                            mov rdi, rax	      5549	mbyte.c	FUNCTION_116	CALL_7
0x4002d40	      0xe800000000	                          call 0x4002d45	      5549	mbyte.c	FUNCTION_116	CALL_7
0x4002d45	      0xbe50000000	                           mov esi, 0x50	      5551	mbyte.c	FUNCTION_116	CALL_9
0x4002d4a	    0x488b3d000000	            mov rdi, qword [0x04002d51] 	      5551	mbyte.c	FUNCTION_116	CALL_9
0x4002d51	      0xe800000000	                          call 0x4002d56	      5551	mbyte.c	FUNCTION_116	CALL_9
0x4002d56	    0x41b900000000	                              mov r9d, 0	      5551	mbyte.c	FUNCTION_116	CALL_9
0x4002d5c	    0x41b800000000	                              mov r8d, 0	      5551	mbyte.c	FUNCTION_116	CALL_9
0x4002d62	      0xb900000000	                              mov ecx, 0	      5551	mbyte.c	FUNCTION_116	CALL_9
0x4002d67	      0xba00000000	                              mov edx, 0	      5551	mbyte.c	FUNCTION_116	CALL_9
0x4002d6c	      0xbe00000000	                              mov esi, 0	      5551	mbyte.c	FUNCTION_116	CALL_9
0x4002d71	          0x4889c7	                            mov rdi, rax	      5551	mbyte.c	FUNCTION_116	CALL_9
0x4002d74	      0xe800000000	                          call 0x4002d79	      5551	mbyte.c	FUNCTION_116	CALL_9
0x4002d79	    0x488905000000	            mov qword [0x04002d80], rax 	      5551	mbyte.c	FUNCTION_116	CALL_9
0x4002d80	      0xbe50000000	                           mov esi, 0x50	      5553	mbyte.c	FUNCTION_116	CALL_12
0x4002d85	    0x488b3d000000	            mov rdi, qword [0x04002d8c] 	      5553	mbyte.c	FUNCTION_116	CALL_12
0x4002d8c	      0xe800000000	                          call 0x4002d91	      5553	mbyte.c	FUNCTION_116	CALL_12
0x4002d91	    0x41b900000000	                              mov r9d, 0	      5553	mbyte.c	FUNCTION_116	CALL_12
0x4002d97	    0x41b800000000	                              mov r8d, 0	      5553	mbyte.c	FUNCTION_116	CALL_12
0x4002d9d	      0xb900000000	                              mov ecx, 0	      5553	mbyte.c	FUNCTION_116	CALL_12
0x4002da2	      0xba00000000	                              mov edx, 0	      5553	mbyte.c	FUNCTION_116	CALL_12
0x4002da7	      0xbe00000000	                              mov esi, 0	      5553	mbyte.c	FUNCTION_116	CALL_12
0x4002dac	          0x4889c7	                            mov rdi, rax	      5553	mbyte.c	FUNCTION_116	CALL_12
0x4002daf	      0xe800000000	                          call 0x4002db4	      5553	mbyte.c	FUNCTION_116	CALL_12
0x4002db4	      0xbe50000000	                           mov esi, 0x50	      5555	mbyte.c	FUNCTION_116	CALL_15
0x4002db9	    0x488b3d000000	            mov rdi, qword [0x04002dc0] 	      5555	mbyte.c	FUNCTION_116	CALL_15
0x4002dc0	      0xe800000000	                          call 0x4002dc5	      5555	mbyte.c	FUNCTION_116	CALL_15
0x4002dc5	    0x41b900000000	                              mov r9d, 0	      5555	mbyte.c	FUNCTION_116	CALL_15
0x4002dcb	    0x41b800000000	                              mov r8d, 0	      5555	mbyte.c	FUNCTION_116	CALL_15
0x4002dd1	      0xb900000000	                              mov ecx, 0	      5555	mbyte.c	FUNCTION_116	CALL_15
0x4002dd6	      0xba00000000	                              mov edx, 0	      5555	mbyte.c	FUNCTION_116	CALL_15
0x4002ddb	      0xbe00000000	                              mov esi, 0	      5555	mbyte.c	FUNCTION_116	CALL_15
0x4002de0	          0x4889c7	                            mov rdi, rax	      5555	mbyte.c	FUNCTION_116	CALL_15
0x4002de3	      0xe800000000	                          call 0x4002de8	      5555	mbyte.c	FUNCTION_116	CALL_15
0x4002de8	      0xbe50000000	                           mov esi, 0x50	      5557	mbyte.c	FUNCTION_116	CALL_18
0x4002ded	    0x488b3d000000	            mov rdi, qword [0x04002df4] 	      5557	mbyte.c	FUNCTION_116	CALL_18
0x4002df4	      0xe800000000	                          call 0x4002df9	      5557	mbyte.c	FUNCTION_116	CALL_18
0x4002df9	    0x41b900000000	                              mov r9d, 0	      5557	mbyte.c	FUNCTION_116	CALL_18
0x4002dff	    0x41b800000000	                              mov r8d, 0	      5557	mbyte.c	FUNCTION_116	CALL_18
0x4002e05	      0xb900000000	                              mov ecx, 0	      5557	mbyte.c	FUNCTION_116	CALL_18
0x4002e0a	      0xba00000000	                              mov edx, 0	      5557	mbyte.c	FUNCTION_116	CALL_18
0x4002e0f	      0xbe00000000	                              mov esi, 0	      5557	mbyte.c	FUNCTION_116	CALL_18
0x4002e14	          0x4889c7	                            mov rdi, rax	      5557	mbyte.c	FUNCTION_116	CALL_18
0x4002e17	      0xe800000000	                          call 0x4002e1c	      5557	mbyte.c	FUNCTION_116	CALL_18
0x4002e1c	    0x488b05000000	            mov rax, qword [0x04002e23] 	      5563	mbyte.c	FUNCTION_116	CALL_22
0x4002e23	        0x488b7050	            mov rsi, qword [rax + 0x50] 	      5563	mbyte.c	FUNCTION_116	CALL_22
0x4002e27	    0x488b3d000000	            mov rdi, qword [0x04002e2e] 	      5563	mbyte.c	FUNCTION_116	CALL_22
0x4002e2e	      0xe800000000	                          call 0x4002e33	      5563	mbyte.c	FUNCTION_116	CALL_22
0x4002e33	        0x4883c408	                              add rsp, 8	      5565	mbyte.c	FUNCTION_116
0x4002e37	              0xc3	                                     ret	      5565	mbyte.c	FUNCTION_116
dbcs_screen_head_off	SWITCH,0:CALL,2:IF,2:WHILE,1:FOR,0:DO,0:ELSE,1:functions,0	42
0x4001e22	      0xb800000000	                              mov eax, 0	      3803	mbyte.c	FUNCTION_69	IF_1
0x4001e27	          0x4839fe	                            cmp rsi, rdi	      3799	mbyte.c	FUNCTION_69	IF_1
0x4001e2a	            0x7679	                           jbe 0x4001ea5	      3799	mbyte.c	FUNCTION_69	IF_1
0x4001e2c	            0x4154	                                push r12	      3792	mbyte.c	FUNCTION_69
0x4001e2e	              0x55	                                push rbp	      3792	mbyte.c	FUNCTION_69
0x4001e2f	              0x53	                                push rbx	      3792	mbyte.c	FUNCTION_69
0x4001e30	          0x4889fb	                            mov rbx, rdi	      3792	mbyte.c	FUNCTION_69
0x4001e33	          0x4889f5	                            mov rbp, rsi	      3792	mbyte.c	FUNCTION_69
0x4001e36	    0x448b25000000	           mov r12d, dword [0x04001e3d] 	      3800	mbyte.c	FUNCTION_69	IF_1
0x4001e3d	    0x4181fccc2600	                        cmp r12d, 0x26cc	      3800	mbyte.c	FUNCTION_69	IF_1
0x4001e44	            0x7506	                           jne 0x4001e4c	      3800	mbyte.c	FUNCTION_69	IF_1
0x4001e46	        0x807eff8e	                cmp byte [rsi - 1], 0x8e	      3800	mbyte.c	FUNCTION_69	IF_1
0x4001e4a	            0x7449	                            je 0x4001e95	      3800	mbyte.c	FUNCTION_69	IF_1
0x4001e4c	         0xfb645ff	               movzx eax, byte [rbp - 1]	      3801	mbyte.c	FUNCTION_69	IF_1	CALL_1
0x4001e50	    0x80b800000000	                       cmp byte [rax], 1	      3801	mbyte.c	FUNCTION_69	IF_1	CALL_1
0x4001e57	            0x7443	                            je 0x4001e9c	      3801	mbyte.c	FUNCTION_69	IF_1	CALL_1
0x4001e59	      0xb800000000	                              mov eax, 0	      3803	mbyte.c	FUNCTION_69	IF_1
0x4001e5e	        0x807d0000	                       cmp byte [rbp], 0	      3802	mbyte.c	FUNCTION_69	IF_1
0x4001e62	            0x743d	                            je 0x4001ea1	      3802	mbyte.c	FUNCTION_69	IF_1
0x4001e64	    0x4181fccc2600	                        cmp r12d, 0x26cc	      3812	mbyte.c	FUNCTION_69	WHILE_1	IF_2
0x4001e6b	            0x750b	                           jne 0x4001e78	      3812	mbyte.c	FUNCTION_69	WHILE_1	IF_2
0x4001e6d	          0x803b8e	                    cmp byte [rbx], 0x8e	      3812	mbyte.c	FUNCTION_69	WHILE_1	IF_2
0x4001e70	            0x7506	                           jne 0x4001e78	      3812	mbyte.c	FUNCTION_69	WHILE_1	IF_2
0x4001e72	        0x4883c301	                              add rbx, 1	      3813	mbyte.c	FUNCTION_69	WHILE_1	IF_2
0x4001e76	            0xeb0d	                           jmp 0x4001e85	      3813	mbyte.c	FUNCTION_69	WHILE_1	IF_2
0x4001e78	          0x4889df	                            mov rdi, rbx	      3815	mbyte.c	FUNCTION_69	WHILE_1	CALL_2
0x4001e7b	      0xe81be2ffff	                   call sym.dbcs_ptr2len	      3815	mbyte.c	FUNCTION_69	WHILE_1	CALL_2
0x4001e80	            0x4898	                                    cdqe	      3815	mbyte.c	FUNCTION_69	WHILE_1	CALL_2
0x4001e82	          0x4801c3	                            add rbx, rax	      3815	mbyte.c	FUNCTION_69	WHILE_1	CALL_2
0x4001e85	          0x4839dd	                            cmp rbp, rbx	      3810	mbyte.c	FUNCTION_69	WHILE_1
0x4001e88	            0x77da	                            ja 0x4001e64	      3810	mbyte.c	FUNCTION_69	WHILE_1
0x4001e8a	          0x4839dd	                            cmp rbp, rbx	      3817	mbyte.c	FUNCTION_69
0x4001e8d	           0xf95c0	                                setne al	      3817	mbyte.c	FUNCTION_69
0x4001e90	           0xfb6c0	                           movzx eax, al	      3817	mbyte.c	FUNCTION_69
0x4001e93	            0xeb0c	                           jmp 0x4001ea1	      3817	mbyte.c	FUNCTION_69
0x4001e95	      0xb800000000	                              mov eax, 0	      3803	mbyte.c	FUNCTION_69	IF_1
0x4001e9a	            0xeb05	                           jmp 0x4001ea1	      3803	mbyte.c	FUNCTION_69	IF_1
0x4001e9c	      0xb800000000	                              mov eax, 0	      3803	mbyte.c	FUNCTION_69	IF_1
0x4001ea1	              0x5b	                                 pop rbx	      3818	mbyte.c	FUNCTION_69
0x4001ea2	              0x5d	                                 pop rbp	      3818	mbyte.c	FUNCTION_69
0x4001ea3	            0x415c	                                 pop r12	      3818	mbyte.c	FUNCTION_69
0x4001ea5	            0xf3c3	                                     ret	      3818	mbyte.c	FUNCTION_69
mb_get_class_buf	SWITCH,0:CALL,6:IF,5:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	38
0x4001801	              0x53	                                push rbx	       884	mbyte.c	FUNCTION_8
0x4001802	          0x4889f3	                            mov rbx, rsi	       884	mbyte.c	FUNCTION_8
0x4001805	           0xfb617	                   movzx edx, byte [rdi]	       885	mbyte.c	FUNCTION_8	IF_1	CALL_1
0x4001808	           0xfb6ca	                           movzx ecx, dl	       885	mbyte.c	FUNCTION_8	IF_1	CALL_1
0x400180b	          0x4863c1	                         movsxd rax, ecx	       885	mbyte.c	FUNCTION_8	IF_1	CALL_1
0x400180e	    0x80b800000000	                       cmp byte [rax], 1	       885	mbyte.c	FUNCTION_8	IF_1	CALL_1
0x4001815	            0x7520	                           jne 0x4001837	       885	mbyte.c	FUNCTION_8	IF_1	CALL_1
0x4001817	      0xb800000000	                              mov eax, 0	       888	mbyte.c	FUNCTION_8	IF_1	IF_2
0x400181c	          0xf6c2df	                           test dl, 0xdf	       887	mbyte.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x400181f	            0x7453	                            je 0x4001874	       887	mbyte.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x4001821	          0x80fa09	                               cmp dl, 9	       887	mbyte.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x4001824	            0x744e	                            je 0x4001874	       887	mbyte.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x4001826	            0x89cf	                            mov edi, ecx	       889	mbyte.c	FUNCTION_8	IF_1	IF_3	CALL_3
0x4001828	      0xe800000000	                          call 0x400182d	       889	mbyte.c	FUNCTION_8	IF_1	IF_3	CALL_3
0x400182d	          0x83f801	                              cmp eax, 1	       891	mbyte.c	FUNCTION_8	IF_1
0x4001830	            0x19c0	                            sbb eax, eax	       891	mbyte.c	FUNCTION_8	IF_1
0x4001832	          0x83c002	                              add eax, 2	       891	mbyte.c	FUNCTION_8	IF_1
0x4001835	            0xeb3d	                           jmp 0x4001874	       891	mbyte.c	FUNCTION_8	IF_1
0x4001837	    0x833d00000000	               cmp dword [0x0400183e], 0	       893	mbyte.c	FUNCTION_8	IF_4
0x400183e	            0x741b	                            je 0x400185b	       893	mbyte.c	FUNCTION_8	IF_4
0x4001840	            0x84d2	                             test dl, dl	       893	mbyte.c	FUNCTION_8	IF_4
0x4001842	            0x7417	                            je 0x400185b	       893	mbyte.c	FUNCTION_8	IF_4
0x4001844	         0xfb67701	               movzx esi, byte [rdi + 1]	       893	mbyte.c	FUNCTION_8	IF_4
0x4001848	          0x4084f6	                           test sil, sil	       893	mbyte.c	FUNCTION_8	IF_4
0x400184b	            0x740e	                            je 0x400185b	       893	mbyte.c	FUNCTION_8	IF_4
0x400184d	        0x400fb6f6	                          movzx esi, sil	       894	mbyte.c	FUNCTION_8	CALL_4
0x4001851	           0xfb6fa	                           movzx edi, dl	       894	mbyte.c	FUNCTION_8	CALL_4
0x4001854	      0xe800000000	                          call 0x4001859	       894	mbyte.c	FUNCTION_8	CALL_4
0x4001859	            0xeb19	                           jmp 0x4001874	       894	mbyte.c	FUNCTION_8	CALL_4
0x400185b	    0x8b0500000000	            mov eax, dword [0x04001861] 	       895	mbyte.c	FUNCTION_8	IF_5
0x4001861	            0x85c0	                           test eax, eax	       895	mbyte.c	FUNCTION_8	IF_5
0x4001863	            0x740f	                            je 0x4001874	       895	mbyte.c	FUNCTION_8	IF_5
0x4001865	      0xe800000000	                          call 0x400186a	       896	mbyte.c	FUNCTION_8	CALL_6
0x400186a	          0x4889de	                            mov rsi, rbx	       896	mbyte.c	FUNCTION_8	CALL_6
0x400186d	            0x89c7	                            mov edi, eax	       896	mbyte.c	FUNCTION_8	CALL_6
0x400186f	      0xe800000000	                          call 0x4001874	       896	mbyte.c	FUNCTION_8	CALL_6
0x4001874	              0x5b	                                 pop rbx	       898	mbyte.c	FUNCTION_8
0x4001875	              0xc3	                                     ret	       898	mbyte.c	FUNCTION_8
im_xim_isvalid_imactivate	SWITCH,0:CALL,1:IF,1:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	64
0x4002e9c	              0x55	                                push rbp	      5644	mbyte.c	FUNCTION_119
0x4002e9d	              0x53	                                push rbx	      5644	mbyte.c	FUNCTION_119
0x4002e9e	        0x4883ec08	                              sub rsp, 8	      5644	mbyte.c	FUNCTION_119
0x4002ea2	    0x488b1d000000	            mov rbx, qword [0x04002ea9] 	      5645	mbyte.c	FUNCTION_119	IF_1
0x4002ea9	          0x803b00	                       cmp byte [rbx], 0	      5645	mbyte.c	FUNCTION_119	IF_1
0x4002eac	            0x751e	                           jne 0x4002ecc	      5645	mbyte.c	FUNCTION_119	IF_1
0x4002eae	    0xc70500000000	       mov dword [0x04002eb8], 0xffffff 	      5647	mbyte.c	FUNCTION_119	IF_1
0x4002eb8	    0xc70500000000	               mov dword [0x04002ec2], 0	      5648	mbyte.c	FUNCTION_119	IF_1
0x4002ec2	      0xb801000000	                              mov eax, 1	      5649	mbyte.c	FUNCTION_119	IF_1
0x4002ec7	      0xe9a6000000	                           jmp 0x4002f72	      5649	mbyte.c	FUNCTION_119	IF_1
0x4002ecc	      0xbe2d000000	                           mov esi, 0x2d	      5600	mbyte.c	FUNCTION_118	CALL_1
0x4002ed1	          0x4889df	                            mov rdi, rbx	      5600	mbyte.c	FUNCTION_118	CALL_1
0x4002ed4	      0xe800000000	                          call 0x4002ed9	      5600	mbyte.c	FUNCTION_118	CALL_1
0x4002ed9	          0x4885c0	                           test rax, rax	      5601	mbyte.c	FUNCTION_118
0x4002edc	            0x7456	                            je 0x4002f34	      5601	mbyte.c	FUNCTION_118
0x4002ede	        0x4883c001	                              add rax, 1	      5601	mbyte.c	FUNCTION_118
0x4002ee2	          0x4839c3	                            cmp rbx, rax	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4002ee5	            0x7354	                           jae 0x4002f3b	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4002ee7	      0xbd00000000	                              mov ebp, 0	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4002eec	        0x4883c301	                              add rbx, 1	      5605	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4002ef0	         0xfb64bff	               movzx ecx, byte [rbx - 1]	      5605	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4002ef4	          0x8d51d3	                   lea edx, [rcx - 0x2d]	      5605	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4002ef7	          0x80fa46	                            cmp dl, 0x46	      5605	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4002efa	            0x776a	                            ja 0x4002f66	      5605	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4002efc	           0xfb6d2	                           movzx edx, dl	      5605	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4002eff	    0xff24d5000000	                       jmp qword [rdx*8]	      5605	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4002f06	          0x83cd01	                               or ebp, 1	      5608	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4002f09	            0xeb22	                           jmp 0x4002f2d	      5608	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4002f0b	          0x83cd02	                               or ebp, 2	      5609	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4002f0e	            0xeb1d	                           jmp 0x4002f2d	      5609	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4002f10	          0x83cd04	                               or ebp, 4	      5610	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4002f13	            0xeb18	                           jmp 0x4002f2d	      5610	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4002f15	          0x83cd08	                               or ebp, 8	      5611	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4002f18	            0xeb13	                           jmp 0x4002f2d	      5611	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4002f1a	          0x83cd10	                            or ebp, 0x10	      5612	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4002f1d	            0xeb0e	                           jmp 0x4002f2d	      5612	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4002f1f	          0x83cd20	                            or ebp, 0x20	      5613	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4002f22	            0xeb09	                           jmp 0x4002f2d	      5613	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4002f24	          0x83cd40	                            or ebp, 0x40	      5614	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4002f27	            0xeb04	                           jmp 0x4002f2d	      5614	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4002f29	        0x4080cd80	                            or bpl, 0x80	      5615	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4002f2d	          0x4839d8	                            cmp rax, rbx	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4002f30	            0x75ba	                           jne 0x4002eec	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4002f32	            0xeb0c	                           jmp 0x4002f40	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x4002f34	      0xbd00000000	                              mov ebp, 0	      5598	mbyte.c	FUNCTION_118
0x4002f39	            0xeb05	                           jmp 0x4002f40	      5598	mbyte.c	FUNCTION_118
0x4002f3b	      0xbd00000000	                              mov ebp, 0	      5598	mbyte.c	FUNCTION_118
0x4002f40	          0x4889df	                            mov rdi, rbx	      5620	mbyte.c	FUNCTION_118	CALL_2
0x4002f43	      0xe800000000	                          call 0x4002f48	      5620	mbyte.c	FUNCTION_118	CALL_2
0x4002f48	            0x85c0	                           test eax, eax	      5622	mbyte.c	FUNCTION_118	IF_1
0x4002f4a	            0x7421	                            je 0x4002f6d	      5622	mbyte.c	FUNCTION_118	IF_1
0x4002f4c	      0x3dffffff00	                       cmp eax, 0xffffff	      5622	mbyte.c	FUNCTION_118	IF_1
0x4002f51	            0x741a	                            je 0x4002f6d	      5622	mbyte.c	FUNCTION_118	IF_1
0x4002f53	    0x890500000000	            mov dword [0x04002f59], eax 	      5626	mbyte.c	FUNCTION_118	IF_2
0x4002f59	    0x892d00000000	            mov dword [0x04002f5f], ebp 	      5628	mbyte.c	FUNCTION_118	IF_3
0x4002f5f	      0xb801000000	                              mov eax, 1	      5630	mbyte.c	FUNCTION_118
0x4002f64	            0xeb0c	                           jmp 0x4002f72	      5630	mbyte.c	FUNCTION_118
0x4002f66	      0xb800000000	                              mov eax, 0	      5617	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4002f6b	            0xeb05	                           jmp 0x4002f72	      5617	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4002f6d	      0xb800000000	                              mov eax, 0	      5623	mbyte.c	FUNCTION_118	IF_1
0x4002f72	        0x4883c408	                              add rsp, 8	      5655	mbyte.c	FUNCTION_119
0x4002f76	              0x5b	                                 pop rbx	      5655	mbyte.c	FUNCTION_119
0x4002f77	              0x5d	                                 pop rbp	      5655	mbyte.c	FUNCTION_119
0x4002f78	              0xc3	                                     ret	      5655	mbyte.c	FUNCTION_119
im_add_to_input	SWITCH,0:CALL,5:IF,3:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	32
0x40044cb	              0x53	                                push rbx	      4910	mbyte.c	FUNCTION_102
0x40044cc	        0x4883ec10	                           sub rsp, 0x10	      4910	mbyte.c	FUNCTION_102
0x40044d0	          0x4889fb	                            mov rbx, rdi	      4910	mbyte.c	FUNCTION_102
0x40044d3	        0x8974240c	              mov dword [rsp + 0xc], esi	      4910	mbyte.c	FUNCTION_102
0x40044d7	    0x833d00000000	               cmp dword [0x040044de], 0	      4912	mbyte.c	FUNCTION_102	IF_1
0x40044de	            0x7430	                            je 0x4004510	      4912	mbyte.c	FUNCTION_102	IF_1
0x40044e0	      0x488d54240c	                    lea rdx, [rsp + 0xc]	      4914	mbyte.c	FUNCTION_102	IF_1	CALL_1
0x40044e5	          0x4889fe	                            mov rsi, rdi	      4914	mbyte.c	FUNCTION_102	IF_1	CALL_1
0x40044e8	      0xbf00000000	                              mov edi, 0	      4914	mbyte.c	FUNCTION_102	IF_1	CALL_1
0x40044ed	      0xe800000000	                          call 0x40044f2	      4914	mbyte.c	FUNCTION_102	IF_1	CALL_1
0x40044f2	          0x4889c3	                            mov rbx, rax	      4914	mbyte.c	FUNCTION_102	IF_1	CALL_1
0x40044f5	          0x4885c0	                           test rax, rax	      4915	mbyte.c	FUNCTION_102	IF_1	CALL_2
0x40044f8	            0x7516	                           jne 0x4004510	      4915	mbyte.c	FUNCTION_102	IF_1	CALL_2
0x40044fa	      0xba00000000	                              mov edx, 0	      4915	mbyte.c	FUNCTION_102	IF_1	CALL_2
0x40044ff	      0xbe00000000	                              mov esi, 0	      4915	mbyte.c	FUNCTION_102	IF_1	CALL_2
0x4004504	      0xbf00000000	                              mov edi, 0	      4915	mbyte.c	FUNCTION_102	IF_1	CALL_2
0x4004509	      0xe800000000	                          call 0x400450e	      4915	mbyte.c	FUNCTION_102	IF_1	CALL_2
0x400450e	            0xeb30	                           jmp 0x4004540	      4915	mbyte.c	FUNCTION_102	IF_1	CALL_2
0x4004510	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      4918	mbyte.c	FUNCTION_102	CALL_3
0x4004514	          0x4889df	                            mov rdi, rbx	      4918	mbyte.c	FUNCTION_102	CALL_3
0x4004517	      0xe800000000	                          call 0x400451c	      4918	mbyte.c	FUNCTION_102	CALL_3
0x400451c	    0x833d00000000	               cmp dword [0x04004523], 0	      4920	mbyte.c	FUNCTION_102	IF_2
0x4004523	            0x7408	                            je 0x400452d	      4920	mbyte.c	FUNCTION_102	IF_2
0x4004525	          0x4889df	                            mov rdi, rbx	      4921	mbyte.c	FUNCTION_102	CALL_4
0x4004528	      0xe800000000	                          call 0x400452d	      4921	mbyte.c	FUNCTION_102	CALL_4
0x400452d	    0x833d00000000	               cmp dword [0x04004534], 0	      4923	mbyte.c	FUNCTION_102	IF_3
0x4004534	            0x740a	                            je 0x4004540	      4923	mbyte.c	FUNCTION_102	IF_3
0x4004536	      0xbf01000000	                              mov edi, 1	      4924	mbyte.c	FUNCTION_102	CALL_5
0x400453b	      0xe800000000	                          call 0x4004540	      4924	mbyte.c	FUNCTION_102	CALL_5
0x4004540	        0x4883c410	                           add rsp, 0x10	      4925	mbyte.c	FUNCTION_102
0x4004544	              0x5b	                                 pop rbx	      4925	mbyte.c	FUNCTION_102
0x4004545	              0xc3	                                     ret	      4925	mbyte.c	FUNCTION_102
dbcs_class	SWITCH,4:CALL,0:IF,8:WHILE,0:FOR,0:DO,0:ELSE,8:functions,0	93
0x4000c68	    0x8b0500000000	            mov eax, dword [0x04000c6e] 	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x4000c6e	      0x3db5030000	                          cmp eax, 0x3b5	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x4000c73	     0xf84b4000000	                            je 0x4000d2d	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x4000c79	      0x3db5030000	                          cmp eax, 0x3b5	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x4000c7e	            0x7f0c	                            jg 0x4000c8c	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x4000c80	      0x3da4030000	                          cmp eax, 0x3a4	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x4000c85	            0x741c	                            je 0x4000ca3	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x4000c87	      0xe91b010000	                           jmp 0x4000da7	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x4000c8c	      0x3dcc260000	                         cmp eax, 0x26cc	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x4000c91	            0x7410	                            je 0x4000ca3	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x4000c93	      0x3ddd260000	                         cmp eax, 0x26dd	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x4000c98	     0xf848f000000	                            je 0x4000d2d	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x4000c9e	      0xe904010000	                           jmp 0x4000da7	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x4000ca3	          0x83e77f	                           and edi, 0x7f	       945	mbyte.c	FUNCTION_9	SWITCH_1
0x4000ca6	        0x400fb6c7	                          movzx eax, dil	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000caa	          0xc1e008	                              shl eax, 8	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000cad	          0x83e67f	                           and esi, 0x7f	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000cb0	             0x9c6	                             or esi, eax	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000cb2	    0x81fe25210000	                         cmp esi, 0x2125	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000cb8	            0x7f24	                            jg 0x4000cde	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000cba	      0xb801000000	                              mov eax, 1	       957	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000cbf	    0x81fe22210000	                         cmp esi, 0x2122	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000cc5	     0xf8ded000000	                           jge 0x4000db8	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000ccb	      0xb800000000	                              mov eax, 0	       952	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000cd0	    0x81fe21210000	                         cmp esi, 0x2121	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000cd6	     0xf84dc000000	                            je 0x4000db8	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000cdc	            0xeb11	                           jmp 0x4000cef	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000cde	      0xb80d000000	                            mov eax, 0xd	       959	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000ce3	    0x81fe3c210000	                         cmp esi, 0x213c	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000ce9	     0xf84c9000000	                            je 0x4000db8	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000cef	          0x83ef21	                           sub edi, 0x21	       962	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000cf2	        0x4080ff07	                              cmp dil, 7	       962	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000cf6	            0x772f	                            ja 0x4000d27	       962	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000cf8	        0x400fb6ff	                          movzx edi, dil	       962	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000cfc	    0xff24fd000000	                       jmp qword [rdi*8]	       962	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000d03	      0xb80b000000	                            mov eax, 0xb	       970	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000d08	              0xc3	                                     ret	       970	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000d09	      0xb80c000000	                            mov eax, 0xc	       973	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000d0e	              0xc3	                                     ret	       973	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000d0f	      0xb80d000000	                            mov eax, 0xd	       976	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000d14	              0xc3	                                     ret	       976	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000d15	      0xb80e000000	                            mov eax, 0xe	       979	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000d1a	              0xc3	                                     ret	       979	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000d1b	      0xb80f000000	                            mov eax, 0xf	       982	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000d20	              0xc3	                                     ret	       982	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000d21	      0xb810000000	                           mov eax, 0x10	       985	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000d26	              0xc3	                                     ret	       985	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000d27	      0xb811000000	                           mov eax, 0x11	       988	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000d2c	              0xc3	                                     ret	       988	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000d2d	          0x8d5750	                   lea edx, [rdi + 0x50]	      1013	mbyte.c	FUNCTION_9	SWITCH_1	IF_4
0x4000d30	      0xb814000000	                           mov eax, 0x14	      1015	mbyte.c	FUNCTION_9	SWITCH_1	IF_4
0x4000d35	          0x80fa18	                            cmp dl, 0x18	      1013	mbyte.c	FUNCTION_9	SWITCH_1	IF_4
0x4000d38	            0x767e	                           jbe 0x4000db8	      1013	mbyte.c	FUNCTION_9	SWITCH_1	IF_4
0x4000d3a	          0x8d5736	                   lea edx, [rdi + 0x36]	      1025	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_5	IF_6
0x4000d3d	      0xb815000000	                           mov eax, 0x15	      1027	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_5	IF_6
0x4000d42	          0x80fa33	                            cmp dl, 0x33	      1025	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_5	IF_6
0x4000d45	            0x7671	                           jbe 0x4000db8	      1025	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_5	IF_6
0x4000d47	        0x400fb6ff	                          movzx edi, dil	      1028	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000d4b	    0x81efa1000000	                           sub edi, 0xa1	      1028	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000d51	          0x83ff0b	                            cmp edi, 0xb	      1028	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000d54	            0x770f	                            ja 0x4000d65	      1028	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000d56	            0x89ff	                            mov edi, edi	      1028	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000d58	    0xff24fd000000	                       jmp qword [rdi*8]	      1028	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000d5f	      0xb817000000	                           mov eax, 0x17	      1036	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000d64	              0xc3	                                     ret	      1036	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000d65	      0xb803000000	                              mov eax, 3	      1070	mbyte.c	FUNCTION_9	ELSE_8
0x4000d6a	              0xc3	                                     ret	      1070	mbyte.c	FUNCTION_9	ELSE_8
0x4000d6b	      0xb818000000	                           mov eax, 0x18	      1039	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000d70	              0xc3	                                     ret	      1039	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000d71	      0xb819000000	                           mov eax, 0x19	      1042	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000d76	              0xc3	                                     ret	      1042	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000d77	      0xb81a000000	                           mov eax, 0x1a	      1045	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000d7c	              0xc3	                                     ret	      1045	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000d7d	      0xb81b000000	                           mov eax, 0x1b	      1048	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000d82	              0xc3	                                     ret	      1048	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000d83	      0xb819000000	                           mov eax, 0x19	      1052	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	IF_7
0x4000d88	        0x4080feaf	                           cmp sil, 0xaf	      1051	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	IF_7
0x4000d8c	            0x762a	                           jbe 0x4000db8	      1051	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	IF_7
0x4000d8e	        0x4080fef6	                           cmp sil, 0xf6	      1057	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_8
0x4000d92	            0x19c0	                            sbb eax, eax	      1057	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_8
0x4000d94	          0x83e006	                              and eax, 6	      1057	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_8
0x4000d97	          0x83c016	                           add eax, 0x16	      1057	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_8
0x4000d9a	              0xc3	                                     ret	      1057	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_8
0x4000d9b	      0xb81d000000	                           mov eax, 0x1d	      1061	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_8
0x4000da0	              0xc3	                                     ret	      1061	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_8
0x4000da1	      0xb81e000000	                           mov eax, 0x1e	      1064	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_8
0x4000da6	              0xc3	                                     ret	      1064	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_8
0x4000da7	      0xb803000000	                              mov eax, 3	      1070	mbyte.c	FUNCTION_9	ELSE_8
0x4000dac	              0xc3	                                     ret	      1070	mbyte.c	FUNCTION_9	ELSE_8
0x4000dad	      0xb80a000000	                            mov eax, 0xa	       967	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000db2	              0xc3	                                     ret	       967	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000db3	      0xb816000000	                           mov eax, 0x16	      1033	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000db8	            0xf3c3	                                     ret	      1071	mbyte.c	FUNCTION_9	ELSE_8
preedit_get_status	SWITCH,0:CALL,0:IF,0:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	2
0x4003488	    0x8b0500000000	            mov eax, dword [0x0400348e] 	      5886	mbyte.c	FUNCTION_124
0x400348e	              0xc3	                                     ret	      5886	mbyte.c	FUNCTION_124
utf_valid_string	SWITCH,0:CALL,0:IF,3:WHILE,2:FOR,0:DO,0:ELSE,0:functions,0	38
0x4002055	            0xeb3e	                           jmp 0x4002095	      4049	mbyte.c	FUNCTION_75	WHILE_1
0x4002057	           0xfb607	                   movzx eax, byte [rdi]	      4051	mbyte.c	FUNCTION_75	WHILE_1
0x400205a	     0xfb680000000	                   movzx eax, byte [rax]	      4051	mbyte.c	FUNCTION_75	WHILE_1
0x4002061	           0xfbed0	                           movsx edx, al	      4051	mbyte.c	FUNCTION_75	WHILE_1
0x4002064	            0x85d2	                           test edx, edx	      4052	mbyte.c	FUNCTION_75	WHILE_1	IF_1
0x4002066	            0x7448	                            je 0x40020b0	      4052	mbyte.c	FUNCTION_75	WHILE_1	IF_1
0x4002068	          0x4885f6	                           test rsi, rsi	      4054	mbyte.c	FUNCTION_75	WHILE_1	IF_2
0x400206b	            0x740c	                            je 0x4002079	      4054	mbyte.c	FUNCTION_75	WHILE_1	IF_2
0x400206d	        0x480fbec0	                           movsx rax, al	      4054	mbyte.c	FUNCTION_75	WHILE_1	IF_2
0x4002071	          0x4801f8	                            add rax, rdi	      4054	mbyte.c	FUNCTION_75	WHILE_1	IF_2
0x4002074	          0x4839c6	                            cmp rsi, rax	      4054	mbyte.c	FUNCTION_75	WHILE_1	IF_2
0x4002077	            0x723d	                            jb 0x40020b6	      4054	mbyte.c	FUNCTION_75	WHILE_1	IF_2
0x4002079	        0x4883c701	                              add rdi, 1	      4056	mbyte.c	FUNCTION_75	WHILE_1
0x400207d	            0xeb0f	                           jmp 0x400208e	      4057	mbyte.c	FUNCTION_75	WHILE_1	WHILE_2
0x400207f	        0x4883c701	                              add rdi, 1	      4058	mbyte.c	FUNCTION_75	WHILE_1	WHILE_2	IF_3
0x4002083	         0xfb647ff	               movzx eax, byte [rdi - 1]	      4058	mbyte.c	FUNCTION_75	WHILE_1	WHILE_2	IF_3
0x4002087	          0x83e0c0	                     and eax, 0xffffffc0	      4058	mbyte.c	FUNCTION_75	WHILE_1	WHILE_2	IF_3
0x400208a	            0x3c80	                            cmp al, 0x80	      4058	mbyte.c	FUNCTION_75	WHILE_1	WHILE_2	IF_3
0x400208c	            0x752e	                           jne 0x40020bc	      4058	mbyte.c	FUNCTION_75	WHILE_1	WHILE_2	IF_3
0x400208e	          0x83ea01	                              sub edx, 1	      4057	mbyte.c	FUNCTION_75	WHILE_1	WHILE_2
0x4002091	            0x85d2	                           test edx, edx	      4057	mbyte.c	FUNCTION_75	WHILE_1	WHILE_2
0x4002093	            0x7fea	                            jg 0x400207f	      4057	mbyte.c	FUNCTION_75	WHILE_1	WHILE_2
0x4002095	          0x4839f7	                            cmp rdi, rsi	      4049	mbyte.c	FUNCTION_75	WHILE_1
0x4002098	           0xf92c0	                                 setb al	      4049	mbyte.c	FUNCTION_75	WHILE_1
0x400209b	          0x4885f6	                           test rsi, rsi	      4049	mbyte.c	FUNCTION_75	WHILE_1
0x400209e	            0x7506	                           jne 0x40020a6	      4049	mbyte.c	FUNCTION_75	WHILE_1
0x40020a0	          0x803f00	                       cmp byte [rdi], 0	      4049	mbyte.c	FUNCTION_75	WHILE_1
0x40020a3	           0xf95c0	                                setne al	      4049	mbyte.c	FUNCTION_75	WHILE_1
0x40020a6	            0x84c0	                             test al, al	      4049	mbyte.c	FUNCTION_75	WHILE_1
0x40020a8	            0x75ad	                           jne 0x4002057	      4049	mbyte.c	FUNCTION_75	WHILE_1
0x40020aa	      0xb801000000	                              mov eax, 1	      4061	mbyte.c	FUNCTION_75
0x40020af	              0xc3	                                     ret	      4061	mbyte.c	FUNCTION_75
0x40020b0	      0xb800000000	                              mov eax, 0	      4053	mbyte.c	FUNCTION_75	WHILE_1	IF_1
0x40020b5	              0xc3	                                     ret	      4053	mbyte.c	FUNCTION_75	WHILE_1	IF_1
0x40020b6	      0xb800000000	                              mov eax, 0	      4055	mbyte.c	FUNCTION_75	WHILE_1	IF_2
0x40020bb	              0xc3	                                     ret	      4055	mbyte.c	FUNCTION_75	WHILE_1	IF_2
0x40020bc	      0xb800000000	                              mov eax, 0	      4059	mbyte.c	FUNCTION_75	WHILE_1	WHILE_2	IF_3
0x40020c1	              0xc3	                                     ret	      4062	mbyte.c	FUNCTION_75
utf_uint2cells	SWITCH,0:CALL,2:IF,1:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	13
0x40016d0	              0x53	                                push rbx	      1402	mbyte.c	ELSE_2	FUNCTION_19
0x40016d1	            0x89fb	                            mov ebx, edi	      1402	mbyte.c	ELSE_2	FUNCTION_19
0x40016d3	    0x81ffff000000	                           cmp edi, 0xff	      1403	mbyte.c	ELSE_2	FUNCTION_19	IF_1	CALL_1
0x40016d9	            0x7610	                           jbe 0x40016eb	      1403	mbyte.c	ELSE_2	FUNCTION_19	IF_1	CALL_1
0x40016db	      0xe800000000	                          call 0x40016e0	      1403	mbyte.c	ELSE_2	FUNCTION_19	IF_1	CALL_1
0x40016e0	            0x89c2	                            mov edx, eax	      1403	mbyte.c	ELSE_2	FUNCTION_19	IF_1	CALL_1
0x40016e2	      0xb800000000	                              mov eax, 0	      1404	mbyte.c	ELSE_2	FUNCTION_19	IF_1
0x40016e7	            0x85d2	                           test edx, edx	      1403	mbyte.c	ELSE_2	FUNCTION_19	IF_1	CALL_1
0x40016e9	            0x7507	                           jne 0x40016f2	      1403	mbyte.c	ELSE_2	FUNCTION_19	IF_1	CALL_1
0x40016eb	            0x89df	                            mov edi, ebx	      1405	mbyte.c	ELSE_2	FUNCTION_19	CALL_2
0x40016ed	      0xe800000000	                          call 0x40016f2	      1405	mbyte.c	ELSE_2	FUNCTION_19	CALL_2
0x40016f2	              0x5b	                                 pop rbx	      1406	mbyte.c	ELSE_2	FUNCTION_19
0x40016f3	              0xc3	                                     ret	      1406	mbyte.c	ELSE_2	FUNCTION_19
utf_isupper	SWITCH,0:CALL,1:IF,0:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	8
0x4001a03	              0x53	                                push rbx	      3578	mbyte.c	FUNCTION_63
0x4001a04	            0x89fb	                            mov ebx, edi	      3578	mbyte.c	FUNCTION_63
0x4001a06	      0xe800000000	                          call 0x4001a0b	      3579	mbyte.c	FUNCTION_63	CALL_1
0x4001a0b	            0x39c3	                            cmp ebx, eax	      3579	mbyte.c	FUNCTION_63	CALL_1
0x4001a0d	           0xf95c0	                                setne al	      3579	mbyte.c	FUNCTION_63	CALL_1
0x4001a10	           0xfb6c0	                           movzx eax, al	      3579	mbyte.c	FUNCTION_63	CALL_1
0x4001a13	              0x5b	                                 pop rbx	      3580	mbyte.c	FUNCTION_63
0x4001a14	              0xc3	                                     ret	      3580	mbyte.c	FUNCTION_63
mb_fix_col	SWITCH,0:CALL,3:IF,1:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	56
0x40023d7	              0x55	                                push rbp	      4263	mbyte.c	FUNCTION_84
0x40023d8	              0x53	                                push rbx	      4263	mbyte.c	FUNCTION_84
0x40023d9	        0x4883ec08	                              sub rsp, 8	      4263	mbyte.c	FUNCTION_84
0x40023dd	            0x89f5	                            mov ebp, esi	      4263	mbyte.c	FUNCTION_84
0x40023df	      0xe800000000	                          call 0x40023e4	      4264	mbyte.c	FUNCTION_84	CALL_1
0x40023e4	            0x89c3	                            mov ebx, eax	      4264	mbyte.c	FUNCTION_84	CALL_1
0x40023e6	            0x89ef	                            mov edi, ebp	      4265	mbyte.c	FUNCTION_84	CALL_2
0x40023e8	      0xe800000000	                          call 0x40023ed	      4265	mbyte.c	FUNCTION_84	CALL_2
0x40023ed	            0x89da	                            mov edx, ebx	      4273	mbyte.c	FUNCTION_84
0x40023ef	    0x833d00000000	               cmp dword [0x040023f6], 0	      4266	mbyte.c	FUNCTION_84	IF_1
0x40023f6	            0x747e	                            je 0x4002476	      4266	mbyte.c	FUNCTION_84	IF_1
0x40023f8	    0x488b0d000000	            mov rcx, qword [0x040023ff] 	      4266	mbyte.c	FUNCTION_84	IF_1
0x40023ff	            0x85db	                           test ebx, ebx	      4266	mbyte.c	FUNCTION_84	IF_1
0x4002401	            0x7e64	                           jle 0x4002467	      4266	mbyte.c	FUNCTION_84	IF_1
0x4002403	          0x4885c9	                           test rcx, rcx	      4266	mbyte.c	FUNCTION_84	IF_1
0x4002406	            0x745f	                            je 0x4002467	      4266	mbyte.c	FUNCTION_84	IF_1
0x4002408	    0x833d00000000	               cmp dword [0x0400240f], 0	      4267	mbyte.c	FUNCTION_84	IF_1
0x400240f	            0x7430	                            je 0x4002441	      4267	mbyte.c	FUNCTION_84	IF_1
0x4002411	            0x4898	                                    cdqe	      4268	mbyte.c	FUNCTION_84	IF_1
0x4002413	    0x488b15000000	            mov rdx, qword [0x0400241a] 	      4268	mbyte.c	FUNCTION_84	IF_1
0x400241a	          0x8b3c82	            mov edi, dword [rdx + rax*4]	      4268	mbyte.c	FUNCTION_84	IF_1
0x400241d	          0x8d043b	                    lea eax, [rbx + rdi]	      4268	mbyte.c	FUNCTION_84	IF_1
0x4002420	        0x803c0100	                 cmp byte [rcx + rax], 0	      4268	mbyte.c	FUNCTION_84	IF_1
0x4002424	            0x7445	                            je 0x400246b	      4268	mbyte.c	FUNCTION_84	IF_1
0x4002426	            0x89ff	                            mov edi, edi	      4270	mbyte.c	FUNCTION_84	IF_1
0x4002428	          0x4863f3	                         movsxd rsi, ebx	      4269	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x400242b	          0x4801fe	                            add rsi, rdi	      4269	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x400242e	          0x4801ce	                            add rsi, rcx	      4269	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x4002431	          0x4801cf	                            add rdi, rcx	      4269	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x4002434	      0xe800000000	                          call 0x4002439	      4269	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x4002439	            0x89da	                            mov edx, ebx	      4273	mbyte.c	FUNCTION_84
0x400243b	            0x85c0	                           test eax, eax	      4269	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x400243d	            0x7437	                            je 0x4002476	      4269	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x400243f	            0xeb21	                           jmp 0x4002462	      4269	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x4002441	            0x89da	                            mov edx, ebx	      4273	mbyte.c	FUNCTION_84
0x4002443	    0x833d00000000	               cmp dword [0x0400244a], 0	      4271	mbyte.c	FUNCTION_84	IF_1
0x400244a	            0x742a	                            je 0x4002476	      4271	mbyte.c	FUNCTION_84	IF_1
0x400244c	            0x4898	                                    cdqe	      4271	mbyte.c	FUNCTION_84	IF_1
0x400244e	    0x488b15000000	            mov rdx, qword [0x04002455] 	      4271	mbyte.c	FUNCTION_84	IF_1
0x4002455	            0x89de	                            mov esi, ebx	      4271	mbyte.c	FUNCTION_84	IF_1
0x4002457	           0x33482	            add esi, dword [rdx + rax*4]	      4271	mbyte.c	FUNCTION_84	IF_1
0x400245a	            0x89da	                            mov edx, ebx	      4273	mbyte.c	FUNCTION_84
0x400245c	        0x803c3100	                 cmp byte [rcx + rsi], 0	      4271	mbyte.c	FUNCTION_84	IF_1
0x4002460	            0x7514	                           jne 0x4002476	      4271	mbyte.c	FUNCTION_84	IF_1
0x4002462	          0x8d53ff	                      lea edx, [rbx - 1]	      4272	mbyte.c	FUNCTION_84	IF_1
0x4002465	            0xeb0f	                           jmp 0x4002476	      4272	mbyte.c	FUNCTION_84	IF_1
0x4002467	            0x89da	                            mov edx, ebx	      4273	mbyte.c	FUNCTION_84
0x4002469	            0xeb0b	                           jmp 0x4002476	      4273	mbyte.c	FUNCTION_84
0x400246b	    0x833d00000000	               cmp dword [0x04002472], 0	      4271	mbyte.c	FUNCTION_84	IF_1
0x4002472	            0x75ee	                           jne 0x4002462	      4271	mbyte.c	FUNCTION_84	IF_1
0x4002474	            0x89da	                            mov edx, ebx	      4273	mbyte.c	FUNCTION_84
0x4002476	            0x89d0	                            mov eax, edx	      4274	mbyte.c	FUNCTION_84
0x4002478	        0x4883c408	                              add rsp, 8	      4274	mbyte.c	FUNCTION_84
0x400247c	              0x5b	                                 pop rbx	      4274	mbyte.c	FUNCTION_84
0x400247d	              0x5d	                                 pop rbp	      4274	mbyte.c	FUNCTION_84
0x400247e	              0xc3	                                     ret	      4274	mbyte.c	FUNCTION_84
utf_char2len	SWITCH,0:CALL,0:IF,5:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	17
0x4000473	      0xb801000000	                              mov eax, 1	      2246	mbyte.c	FUNCTION_50	IF_1
0x4000478	          0x83ff7f	                           cmp edi, 0x7f	      2245	mbyte.c	FUNCTION_50	IF_1
0x400047b	            0x7e36	                           jle 0x40004b3	      2245	mbyte.c	FUNCTION_50	IF_1
0x400047d	      0xb802000000	                              mov eax, 2	      2248	mbyte.c	FUNCTION_50	IF_2
0x4000482	    0x81ffff070000	                          cmp edi, 0x7ff	      2247	mbyte.c	FUNCTION_50	IF_2
0x4000488	            0x7e29	                           jle 0x40004b3	      2247	mbyte.c	FUNCTION_50	IF_2
0x400048a	      0xb803000000	                              mov eax, 3	      2250	mbyte.c	FUNCTION_50	IF_3
0x400048f	    0x81ffffff0000	                         cmp edi, 0xffff	      2249	mbyte.c	FUNCTION_50	IF_3
0x4000495	            0x7e1c	                           jle 0x40004b3	      2249	mbyte.c	FUNCTION_50	IF_3
0x4000497	      0xb804000000	                              mov eax, 4	      2252	mbyte.c	FUNCTION_50	IF_4
0x400049c	    0x81ffffff1f00	                       cmp edi, 0x1fffff	      2251	mbyte.c	FUNCTION_50	IF_4
0x40004a2	            0x7e0f	                           jle 0x40004b3	      2251	mbyte.c	FUNCTION_50	IF_4
0x40004a4	    0x81ff00000004	         cmp edi, loc.imp.gtk_main_quit 	      2255	mbyte.c	FUNCTION_50
0x40004aa	           0xf9dc0	                                setge al	      2255	mbyte.c	FUNCTION_50
0x40004ad	           0xfb6c0	                           movzx eax, al	      2255	mbyte.c	FUNCTION_50
0x40004b0	          0x83c005	                              add eax, 5	      2255	mbyte.c	FUNCTION_50
0x40004b3	            0xf3c3	                                     ret	      2256	mbyte.c	FUNCTION_50
im_synthesize_keypress	SWITCH,0:CALL,10:IF,0:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	42
0x4000a12	            0x4154	                                push r12	      5659	mbyte.c	FUNCTION_120
0x4000a14	              0x55	                                push rbp	      5659	mbyte.c	FUNCTION_120
0x4000a15	              0x53	                                push rbx	      5659	mbyte.c	FUNCTION_120
0x4000a16	            0x89fd	                            mov ebp, edi	      5659	mbyte.c	FUNCTION_120
0x4000a18	          0x4189f4	                           mov r12d, esi	      5659	mbyte.c	FUNCTION_120
0x4000a1b	      0xbf08000000	                              mov edi, 8	      5662	mbyte.c	FUNCTION_120	CALL_1
0x4000a20	      0xe800000000	                          call 0x4000a25	      5662	mbyte.c	FUNCTION_120	CALL_1
0x4000a25	          0x4889c3	                            mov rbx, rax	      5662	mbyte.c	FUNCTION_120	CALL_1
0x4000a28	    0x488b05000000	            mov rax, qword [0x04000a2f] 	      5667	mbyte.c	FUNCTION_120	CALL_4
0x4000a2f	        0x488b7850	            mov rdi, qword [rax + 0x50] 	      5667	mbyte.c	FUNCTION_120	CALL_4
0x4000a33	      0xe800000000	                          call 0x4000a38	      5667	mbyte.c	FUNCTION_120	CALL_4
0x4000a38	    0x488b05000000	            mov rax, qword [0x04000a3f] 	      5672	mbyte.c	FUNCTION_120
0x4000a3f	        0x488b7850	            mov rdi, qword [rax + 0x50] 	      5672	mbyte.c	FUNCTION_120
0x4000a43	        0x48897b08	                mov qword [rbx + 8], rdi	      5672	mbyte.c	FUNCTION_120
0x4000a47	        0xc6431001	                mov byte [rbx + 0x10], 1	      5674	mbyte.c	FUNCTION_120
0x4000a4b	    0xc74314000000	               mov dword [rbx + 0x14], 0	      5675	mbyte.c	FUNCTION_120
0x4000a52	        0x44896318	            mov dword [rbx + 0x18], r12d	      5676	mbyte.c	FUNCTION_120
0x4000a56	          0x896b1c	             mov dword [rbx + 0x1c], ebp	      5677	mbyte.c	FUNCTION_120
0x4000a59	      0xe800000000	                          call 0x4000a5e	      5679	mbyte.c	FUNCTION_120	CALL_7
0x4000a5e	          0x4889c7	                            mov rdi, rax	      5679	mbyte.c	FUNCTION_120	CALL_7
0x4000a61	      0xe800000000	                          call 0x4000a66	      5679	mbyte.c	FUNCTION_120	CALL_7
0x4000a66	            0x89ee	                            mov esi, ebp	      5679	mbyte.c	FUNCTION_120	CALL_7
0x4000a68	          0x4889c7	                            mov rdi, rax	      5679	mbyte.c	FUNCTION_120	CALL_7
0x4000a6b	      0xe800000000	                          call 0x4000a70	      5679	mbyte.c	FUNCTION_120	CALL_7
0x4000a70	           0xfb6c0	                           movzx eax, al	      5678	mbyte.c	FUNCTION_120
0x4000a73	        0x66894330	               mov word [rbx + 0x30], ax	      5678	mbyte.c	FUNCTION_120
0x4000a77	    0xc74320000000	               mov dword [rbx + 0x20], 0	      5680	mbyte.c	FUNCTION_120
0x4000a7e	    0x48c743280000	               mov qword [rbx + 0x28], 0	      5681	mbyte.c	FUNCTION_120
0x4000a86	          0x4889de	                            mov rsi, rbx	      5683	mbyte.c	FUNCTION_120	CALL_8
0x4000a89	    0x488b3d000000	            mov rdi, qword [0x04000a90] 	      5683	mbyte.c	FUNCTION_120	CALL_8
0x4000a90	      0xe800000000	                          call 0x4000a95	      5683	mbyte.c	FUNCTION_120	CALL_8
0x4000a95	    0xc70309000000	                      mov dword [rbx], 9	      5686	mbyte.c	FUNCTION_120
0x4000a9b	        0xc6431000	                mov byte [rbx + 0x10], 0	      5687	mbyte.c	FUNCTION_120
0x4000a9f	          0x4889de	                            mov rsi, rbx	      5688	mbyte.c	FUNCTION_120	CALL_9
0x4000aa2	    0x488b3d000000	            mov rdi, qword [0x04000aa9] 	      5688	mbyte.c	FUNCTION_120	CALL_9
0x4000aa9	      0xe800000000	                          call 0x4000aae	      5688	mbyte.c	FUNCTION_120	CALL_9
0x4000aae	          0x4889df	                            mov rdi, rbx	      5690	mbyte.c	FUNCTION_120	CALL_10
0x4000ab1	      0xe800000000	                          call 0x4000ab6	      5690	mbyte.c	FUNCTION_120	CALL_10
0x4000ab6	              0x5b	                                 pop rbx	      5691	mbyte.c	FUNCTION_120
0x4000ab7	              0x5d	                                 pop rbp	      5691	mbyte.c	FUNCTION_120
0x4000ab8	            0x415c	                                 pop r12	      5691	mbyte.c	FUNCTION_120
0x4000aba	              0xc3	                                     ret	      5691	mbyte.c	FUNCTION_120
utf_convert	SWITCH,0:CALL,0:IF,2:WHILE,1:FOR,0:DO,0:ELSE,2:functions,0	54
0x40005ef	          0x4863d2	                         movsxd rdx, edx	      3132	mbyte.c	FUNCTION_58
0x40005f2	        0x48c1ea04	                              shr rdx, 4	      3132	mbyte.c	FUNCTION_58
0x40005f6	            0x89d1	                            mov ecx, edx	      3135	mbyte.c	FUNCTION_58
0x40005f8	    0x41b900000000	                              mov r9d, 0	      3134	mbyte.c	FUNCTION_58
0x40005fe	            0xeb31	                           jmp 0x4000631	      3136	mbyte.c	FUNCTION_58	WHILE_1
0x4000600	        0x438d0401	                      lea eax, [r9 + r8]	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x4000604	            0x89c1	                            mov ecx, eax	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x4000606	          0xc1e91f	                           shr ecx, 0x1f	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x4000609	             0x1c8	                            add eax, ecx	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x400060b	            0xd1f8	                              sar eax, 1	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x400060d	          0x4189c2	                           mov r10d, eax	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x4000610	          0x4863c8	                         movsxd rcx, eax	      3140	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x4000613	        0x48c1e104	                              shl rcx, 4	      3140	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x4000617	        0x397c0e04	         cmp dword [rsi + rcx + 4], edi 	      3140	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x400061b	            0x7c0d	                            jl 0x400062a	      3140	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x400061d	          0x4189c0	                            mov r8d, eax	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x4000620	          0x4539c1	                            cmp r9d, r8d	      3136	mbyte.c	FUNCTION_58	WHILE_1
0x4000623	            0x7cdb	                            jl 0x4000600	      3136	mbyte.c	FUNCTION_58	WHILE_1
0x4000625	            0xeb32	                           jmp 0x4000659	      3136	mbyte.c	FUNCTION_58	WHILE_1
0x4000627	          0x4189c8	                            mov r8d, ecx	      3140	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x400062a	        0x458d4a01	                      lea r9d, [r10 + 1]	      3141	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x400062e	          0x4489c1	                            mov ecx, r8d	      3141	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x4000631	          0x4139c9	                            cmp r9d, ecx	      3136	mbyte.c	FUNCTION_58	WHILE_1
0x4000634	            0x7d23	                           jge 0x4000659	      3136	mbyte.c	FUNCTION_58	WHILE_1
0x4000636	        0x418d0409	                     lea eax, [r9 + rcx]	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x400063a	          0x4189c2	                           mov r10d, eax	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x400063d	        0x41c1ea1f	                          shr r10d, 0x1f	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x4000641	          0x4101c2	                           add r10d, eax	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x4000644	          0x41d1fa	                             sar r10d, 1	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x4000647	          0x4589d0	                           mov r8d, r10d	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x400064a	          0x4963c2	                        movsxd rax, r10d	      3140	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x400064d	        0x48c1e004	                              shl rax, 4	      3140	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x4000651	        0x3b7c0604	         cmp edi, dword [rsi + rax + 4] 	      3140	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x4000655	            0x7ec9	                           jle 0x4000620	      3140	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x4000657	            0xebce	                           jmp 0x4000627	      3140	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x4000659	            0x89f8	                            mov eax, edi	      3151	mbyte.c	FUNCTION_58	ELSE_2
0x400065b	          0x4439ca	                            cmp edx, r9d	      3145	mbyte.c	FUNCTION_58	IF_2
0x400065e	            0x7e24	                           jle 0x4000684	      3145	mbyte.c	FUNCTION_58	IF_2
0x4000660	          0x4d63c9	                          movsxd r9, r9d	      3146	mbyte.c	FUNCTION_58	IF_2
0x4000663	        0x49c1e104	                               shl r9, 4	      3146	mbyte.c	FUNCTION_58	IF_2
0x4000667	          0x4c01ce	                             add rsi, r9	      3146	mbyte.c	FUNCTION_58	IF_2
0x400066a	            0x8b16	                    mov edx, dword [rsi]	      3146	mbyte.c	FUNCTION_58	IF_2
0x400066c	            0x39d7	                            cmp edi, edx	      3146	mbyte.c	FUNCTION_58	IF_2
0x400066e	            0x7c14	                            jl 0x4000684	      3146	mbyte.c	FUNCTION_58	IF_2
0x4000670	          0x3b7e04	                cmp edi, dword [rsi + 4]	      3147	mbyte.c	FUNCTION_58	IF_2
0x4000673	            0x7f0f	                            jg 0x4000684	      3147	mbyte.c	FUNCTION_58	IF_2
0x4000675	            0x29d0	                            sub eax, edx	      3148	mbyte.c	FUNCTION_58	IF_2
0x4000677	              0x99	                                     cdq	      3148	mbyte.c	FUNCTION_58	IF_2
0x4000678	          0xf77e08	                    idiv dword [rsi + 8]	      3148	mbyte.c	FUNCTION_58	IF_2
0x400067b	            0x89f8	                            mov eax, edi	      3151	mbyte.c	FUNCTION_58	ELSE_2
0x400067d	            0x85d2	                           test edx, edx	      3148	mbyte.c	FUNCTION_58	IF_2
0x400067f	            0x7503	                           jne 0x4000684	      3148	mbyte.c	FUNCTION_58	IF_2
0x4000681	           0x3460c	              add eax, dword [rsi + 0xc]	      3149	mbyte.c	FUNCTION_58	IF_2
0x4000684	            0xf3c3	                                     ret	      3152	mbyte.c	FUNCTION_58	ELSE_2
latin_head_off	SWITCH,0:CALL,0:IF,0:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	2
0x4000686	      0xb800000000	                              mov eax, 0	      3766	mbyte.c	FUNCTION_67
0x400068b	              0xc3	                                     ret	      3766	mbyte.c	FUNCTION_67
dbcs_ptr2cells	SWITCH,0:CALL,1:IF,1:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	9
0x400016e	    0x813d00000000	         cmp dword [0x04000178], 0x26cc 	      1647	mbyte.c	FUNCTION_23	IF_1
0x4000178	            0x7505	                           jne 0x400017f	      1647	mbyte.c	FUNCTION_23	IF_1
0x400017a	          0x803f8e	                    cmp byte [rdi], 0x8e	      1647	mbyte.c	FUNCTION_23	IF_1
0x400017d	            0x740b	                            je 0x400018a	      1647	mbyte.c	FUNCTION_23	IF_1
0x400017f	           0xfb607	                   movzx eax, byte [rdi]	      1649	mbyte.c	FUNCTION_23	CALL_1
0x4000182	     0xfbe80000000	                   movsx eax, byte [rax]	      1649	mbyte.c	FUNCTION_23	CALL_1
0x4000189	              0xc3	                                     ret	      1649	mbyte.c	FUNCTION_23	CALL_1
0x400018a	      0xb801000000	                              mov eax, 1	      1648	mbyte.c	FUNCTION_23	IF_1
0x400018f	              0xc3	                                     ret	      1650	mbyte.c	FUNCTION_23
mb_copy_char	SWITCH,0:CALL,1:IF,0:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	18
0x4001ea7	            0x4154	                                push r12	      3881	mbyte.c	FUNCTION_71
0x4001ea9	              0x55	                                push rbp	      3881	mbyte.c	FUNCTION_71
0x4001eaa	              0x53	                                push rbx	      3881	mbyte.c	FUNCTION_71
0x4001eab	          0x4889fd	                            mov rbp, rdi	      3881	mbyte.c	FUNCTION_71
0x4001eae	          0x4989f4	                            mov r12, rsi	      3881	mbyte.c	FUNCTION_71
0x4001eb1	          0x488b3f	                    mov rdi, qword [rdi]	      3882	mbyte.c	FUNCTION_71
0x4001eb4	    0xff1500000000	                 call qword [0x04001eba]	      3882	mbyte.c	FUNCTION_71
0x4001eba	          0x4863d8	                         movsxd rbx, eax	      3884	mbyte.c	FUNCTION_71	CALL_1
0x4001ebd	          0x4889da	                            mov rdx, rbx	        59	string3.h	FUNCTION_147	CALL_3
0x4001ec0	        0x488b7500	                    mov rsi, qword [rbp]	        59	string3.h	FUNCTION_147	CALL_3
0x4001ec4	        0x498b3c24	                    mov rdi, qword [r12]	        59	string3.h	FUNCTION_147	CALL_3
0x4001ec8	      0xe800000000	                          call 0x4001ecd	        59	string3.h	FUNCTION_147	CALL_3
0x4001ecd	        0x49011c24	                    add qword [r12], rbx	      3885	mbyte.c	FUNCTION_71
0x4001ed1	        0x48015d00	                    add qword [rbp], rbx	      3886	mbyte.c	FUNCTION_71
0x4001ed5	              0x5b	                                 pop rbx	      3887	mbyte.c	FUNCTION_71
0x4001ed6	              0x5d	                                 pop rbp	      3887	mbyte.c	FUNCTION_71
0x4001ed7	            0x415c	                                 pop r12	      3887	mbyte.c	FUNCTION_71
0x4001ed9	              0xc3	                                     ret	      3887	mbyte.c	FUNCTION_71
im_set_active	SWITCH,0:CALL,2:IF,1:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	18
0x4003107	              0x53	                                push rbx	      4859	mbyte.c	FUNCTION_98
0x4003108	            0x89fb	                            mov ebx, edi	      4859	mbyte.c	FUNCTION_98
0x400310a	      0xe800000000	                          call 0x400310f	      4862	mbyte.c	FUNCTION_98	CALL_1
0x400310f	            0x85c0	                           test eax, eax	      4862	mbyte.c	FUNCTION_98	CALL_1
0x4003111	           0xf95c2	                                setne dl	      4862	mbyte.c	FUNCTION_98	CALL_1
0x4003114	           0xfb6d2	                           movzx edx, dl	      4862	mbyte.c	FUNCTION_98	CALL_1
0x4003117	      0xb800000000	                              mov eax, 0	      4863	mbyte.c	FUNCTION_98
0x400311c	            0x85db	                           test ebx, ebx	      4863	mbyte.c	FUNCTION_98
0x400311e	            0x740d	                            je 0x400312d	      4863	mbyte.c	FUNCTION_98
0x4003120	    0x833d00000000	               cmp dword [0x04003127], 0	      4863	mbyte.c	FUNCTION_98
0x4003127	           0xf94c0	                                 sete al	      4863	mbyte.c	FUNCTION_98
0x400312a	           0xfb6c0	                           movzx eax, al	      4863	mbyte.c	FUNCTION_98
0x400312d	    0x890500000000	            mov dword [0x04003133], eax 	      4863	mbyte.c	FUNCTION_98
0x4003133	            0x39d0	                            cmp eax, edx	      4865	mbyte.c	FUNCTION_98	IF_1
0x4003135	            0x7405	                            je 0x400313c	      4865	mbyte.c	FUNCTION_98	IF_1
0x4003137	      0xe800000000	                          call 0x400313c	      4866	mbyte.c	FUNCTION_98	CALL_2
0x400313c	              0x5b	                                 pop rbx	      4867	mbyte.c	FUNCTION_98
0x400313d	              0xc3	                                     ret	      4867	mbyte.c	FUNCTION_98
dbcs_ptr2len	SWITCH,0:CALL,1:IF,1:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	8
0x400009b	           0xfb607	                   movzx eax, byte [rdi]	      1141	mbyte.c	FUNCTION_15	CALL_1
0x400009e	     0xfbe80000000	                   movsx eax, byte [rax]	      1141	mbyte.c	FUNCTION_15	CALL_1
0x40000a5	          0x83f802	                              cmp eax, 2	      1142	mbyte.c	FUNCTION_15	IF_1
0x40000a8	            0x750c	                           jne 0x40000b6	      1142	mbyte.c	FUNCTION_15	IF_1
0x40000aa	        0x807f0100	                   cmp byte [rdi + 1], 0	      1143	mbyte.c	FUNCTION_15	IF_1
0x40000ae	      0xba01000000	                              mov edx, 1	      1143	mbyte.c	FUNCTION_15	IF_1
0x40000b3	           0xf44c2	                          cmove eax, edx	      1143	mbyte.c	FUNCTION_15	IF_1
0x40000b6	            0xf3c3	                                     ret	      1145	mbyte.c	FUNCTION_15
show_utf8	SWITCH,0:CALL,7:IF,4:WHILE,0:FOR,1:DO,0:ELSE,0:functions,0	71
0x4001d1b	            0x4157	                                push r15	      3715	mbyte.c	FUNCTION_66
0x4001d1d	            0x4156	                                push r14	      3715	mbyte.c	FUNCTION_66
0x4001d1f	            0x4155	                                push r13	      3715	mbyte.c	FUNCTION_66
0x4001d21	            0x4154	                                push r12	      3715	mbyte.c	FUNCTION_66
0x4001d23	              0x55	                                push rbp	      3715	mbyte.c	FUNCTION_66
0x4001d24	              0x53	                                push rbx	      3715	mbyte.c	FUNCTION_66
0x4001d25	        0x4883ec08	                              sub rsp, 8	      3715	mbyte.c	FUNCTION_66
0x4001d29	      0xe800000000	                          call 0x4001d2e	      3724	mbyte.c	FUNCTION_66	CALL_1
0x4001d2e	          0x4989c4	                            mov r12, rax	      3724	mbyte.c	FUNCTION_66	CALL_1
0x4001d31	          0x4889c7	                            mov rdi, rax	      3725	mbyte.c	FUNCTION_66	CALL_2
0x4001d34	      0xe800000000	                          call 0x4001d39	      3725	mbyte.c	FUNCTION_66	CALL_2
0x4001d39	            0x85c0	                           test eax, eax	      3726	mbyte.c	FUNCTION_66	IF_1
0x4001d3b	            0x741d	                            je 0x4001d5a	      3726	mbyte.c	FUNCTION_66	IF_1
0x4001d3d	          0x4189c7	                           mov r15d, eax	      3726	mbyte.c	FUNCTION_66	IF_1
0x4001d40	    0x41be00000000	                             mov r14d, 0	      3733	mbyte.c	FUNCTION_66	FOR_1
0x4001d46	    0x41bd00000000	                             mov r13d, 0	      3733	mbyte.c	FUNCTION_66	FOR_1
0x4001d4c	      0xbd00000000	                              mov ebp, 0	      3733	mbyte.c	FUNCTION_66	FOR_1
0x4001d51	            0x85c0	                           test eax, eax	      3733	mbyte.c	FUNCTION_66	FOR_1
0x4001d53	            0x7f14	                            jg 0x4001d69	      3733	mbyte.c	FUNCTION_66	FOR_1
0x4001d55	      0xe9ad000000	                           jmp 0x4001e07	      3733	mbyte.c	FUNCTION_66	FOR_1
0x4001d5a	      0xbf00000000	                              mov edi, 0	      3728	mbyte.c	FUNCTION_66	IF_1	CALL_3
0x4001d5f	      0xe800000000	                          call 0x4001d64	      3728	mbyte.c	FUNCTION_66	IF_1	CALL_3
0x4001d64	      0xe9aa000000	                           jmp 0x4001e13	      3729	mbyte.c	FUNCTION_66	IF_1
0x4001d69	          0x4585ed	                         test r13d, r13d	      3735	mbyte.c	FUNCTION_66	FOR_1	IF_2
0x4001d6c	            0x7526	                           jne 0x4001d94	      3735	mbyte.c	FUNCTION_66	FOR_1	IF_2
0x4001d6e	          0x4585f6	                         test r14d, r14d	      3738	mbyte.c	FUNCTION_66	FOR_1	IF_2	IF_3
0x4001d71	            0x7e16	                           jle 0x4001d89	      3738	mbyte.c	FUNCTION_66	FOR_1	IF_2	IF_3
0x4001d73	          0x4863c5	                         movsxd rax, ebp	       110	string3.h	FUNCTION_152	CALL_3
0x4001d76	    0x480305000000	             add rax, qword [0x04001d7d]	       110	string3.h	FUNCTION_152	CALL_3
0x4001d7d	      0x66c7002b20	                  mov word [rax], 0x202b	       110	string3.h	FUNCTION_152	CALL_3
0x4001d82	        0xc6400200	                   mov byte [rax + 2], 0	       110	string3.h	FUNCTION_152	CALL_3
0x4001d86	          0x83c502	                              add ebp, 2	      3741	mbyte.c	FUNCTION_66	FOR_1	IF_2	IF_3
0x4001d89	          0x4c89e7	                            mov rdi, r12	      3743	mbyte.c	FUNCTION_66	FOR_1	IF_2	CALL_5
0x4001d8c	      0xe800000000	                          call 0x4001d91	      3743	mbyte.c	FUNCTION_66	FOR_1	IF_2	CALL_5
0x4001d91	          0x4189c5	                           mov r13d, eax	      3743	mbyte.c	FUNCTION_66	FOR_1	IF_2	CALL_5
0x4001d94	      0x410fb60424	                   movzx eax, byte [r12]	      3746	mbyte.c	FUNCTION_66	FOR_1
0x4001d99	        0x440fb6c0	                           movzx r8d, al	      3745	mbyte.c	FUNCTION_66	FOR_1
0x4001d9d	            0x3c0a	                             cmp al, 0xa	      3745	mbyte.c	FUNCTION_66	FOR_1
0x4001d9f	      0xb800000000	                              mov eax, 0	      3745	mbyte.c	FUNCTION_66	FOR_1
0x4001da4	        0x440f44c0	                          cmove r8d, eax	      3745	mbyte.c	FUNCTION_66	FOR_1
0x4001da8	          0x4863dd	                         movsxd rbx, ebp	      3745	mbyte.c	FUNCTION_66	FOR_1
0x4001dab	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_158	CALL_1
0x4001dae	    0x48033d000000	             add rdi, qword [0x04001db5]	        33	stdio2.h	FUNCTION_158	CALL_1
0x4001db5	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_158	CALL_1
0x4001dba	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_158	CALL_1
0x4001dc1	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_158	CALL_1
0x4001dc6	      0xe800000000	                          call 0x4001dcb	        33	stdio2.h	FUNCTION_158	CALL_1
0x4001dcb	        0x4183ed01	                             sub r13d, 1	      3747	mbyte.c	FUNCTION_66	FOR_1
0x4001dcf	    0x48031d000000	             add rbx, qword [0x04001dd6]	      3748	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x4001dd6	          0x4889df	                            mov rdi, rbx	      3748	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x4001dd9	      0xb800000000	                              mov eax, 0	      3748	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x4001dde	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3748	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x4001de5	            0xf2ae	              repne scasb al, byte [rdi]	      3748	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x4001de7	          0x48f7d1	                                 not rcx	      3748	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x4001dea	        0x8d6c0dff	                lea ebp, [rbp + rcx - 1]	      3748	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x4001dee	    0x81fded030000	                          cmp ebp, 0x3ed	      3749	mbyte.c	FUNCTION_66	FOR_1	IF_4
0x4001df4	            0x7f11	                            jg 0x4001e07	      3749	mbyte.c	FUNCTION_66	FOR_1	IF_4
0x4001df6	        0x4183c601	                             add r14d, 1	      3733	mbyte.c	FUNCTION_66	FOR_1
0x4001dfa	        0x4983c401	                              add r12, 1	      3733	mbyte.c	FUNCTION_66	FOR_1
0x4001dfe	          0x4539f7	                          cmp r15d, r14d	      3733	mbyte.c	FUNCTION_66	FOR_1
0x4001e01	     0xf8562ffffff	                           jne 0x4001d69	      3733	mbyte.c	FUNCTION_66	FOR_1
0x4001e07	    0x488b3d000000	            mov rdi, qword [0x04001e0e] 	      3753	mbyte.c	FUNCTION_66	CALL_7
0x4001e0e	      0xe800000000	                          call 0x4001e13	      3753	mbyte.c	FUNCTION_66	CALL_7
0x4001e13	        0x4883c408	                              add rsp, 8	      3754	mbyte.c	FUNCTION_66
0x4001e17	              0x5b	                                 pop rbx	      3754	mbyte.c	FUNCTION_66
0x4001e18	              0x5d	                                 pop rbp	      3754	mbyte.c	FUNCTION_66
0x4001e19	            0x415c	                                 pop r12	      3754	mbyte.c	FUNCTION_66
0x4001e1b	            0x415d	                                 pop r13	      3754	mbyte.c	FUNCTION_66
0x4001e1d	            0x415e	                                 pop r14	      3754	mbyte.c	FUNCTION_66
0x4001e1f	            0x415f	                                 pop r15	      3754	mbyte.c	FUNCTION_66
0x4001e21	              0xc3	                                     ret	      3754	mbyte.c	FUNCTION_66
utf_iscomposing	SWITCH,0:CALL,1:IF,0:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	5
0x4001035	            0x89fa	                            mov edx, edi	      2328	mbyte.c	FUNCTION_53
0x4001037	      0xbe70100000	                         mov esi, 0x1070	      2598	mbyte.c	FUNCTION_53	CALL_1
0x400103c	      0xbf00000000	                              mov edi, 0	      2598	mbyte.c	FUNCTION_53	CALL_1
0x4001041	      0xe8c3f0ffff	                        call sym.intable	      2598	mbyte.c	FUNCTION_53	CALL_1
0x4001046	            0xf3c3	                                     ret	      2599	mbyte.c	FUNCTION_53
dbcs_ptr2cells_len	SWITCH,0:CALL,1:IF,1:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	13
0x4000196	          0x83fe01	                              cmp esi, 1	      1690	mbyte.c	FUNCTION_26	IF_1
0x4000199	            0x7e1c	                           jle 0x40001b7	      1690	mbyte.c	FUNCTION_26	IF_1
0x400019b	    0x813d00000000	         cmp dword [0x040001a5], 0x26cc 	      1690	mbyte.c	FUNCTION_26	IF_1
0x40001a5	            0x7505	                           jne 0x40001ac	      1690	mbyte.c	FUNCTION_26	IF_1
0x40001a7	          0x803f8e	                    cmp byte [rdi], 0x8e	      1690	mbyte.c	FUNCTION_26	IF_1
0x40001aa	            0x7411	                            je 0x40001bd	      1690	mbyte.c	FUNCTION_26	IF_1
0x40001ac	           0xfb607	                   movzx eax, byte [rdi]	      1692	mbyte.c	FUNCTION_26	CALL_1
0x40001af	     0xfbe80000000	                   movsx eax, byte [rax]	      1692	mbyte.c	FUNCTION_26	CALL_1
0x40001b6	              0xc3	                                     ret	      1692	mbyte.c	FUNCTION_26	CALL_1
0x40001b7	      0xb801000000	                              mov eax, 1	      1691	mbyte.c	FUNCTION_26	IF_1
0x40001bc	              0xc3	                                     ret	      1691	mbyte.c	FUNCTION_26	IF_1
0x40001bd	      0xb801000000	                              mov eax, 1	      1691	mbyte.c	FUNCTION_26	IF_1
0x40001c2	              0xc3	                                     ret	      1693	mbyte.c	FUNCTION_26
dbcs_ptr2char	SWITCH,0:CALL,1:IF,1:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	11
0x4000260	           0xfb607	                   movzx eax, byte [rdi]	      1776	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x4000263	          0x4863d0	                         movsxd rdx, eax	      1776	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x4000266	    0x80ba00000000	                       cmp byte [rdx], 1	      1776	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x400026d	            0x7e10	                           jle 0x400027f	      1776	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x400026f	         0xfb65701	               movzx edx, byte [rdi + 1]	      1776	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x4000273	            0x84d2	                             test dl, dl	      1776	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x4000275	            0x7408	                            je 0x400027f	      1776	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x4000277	          0xc1e008	                              shl eax, 8	      1777	mbyte.c	FUNCTION_34	IF_1
0x400027a	           0xfb6d2	                           movzx edx, dl	      1777	mbyte.c	FUNCTION_34	IF_1
0x400027d	             0x1d0	                            add eax, edx	      1777	mbyte.c	FUNCTION_34	IF_1
0x400027f	            0xf3c3	                                     ret	      1779	mbyte.c	FUNCTION_34
utf_ptr2len	SWITCH,0:CALL,0:IF,2:WHILE,0:FOR,1:DO,0:ELSE,0:functions,0	29
0x4000f31	           0xfb617	                   movzx edx, byte [rdi]	      2085	mbyte.c	FUNCTION_45	IF_1
0x4000f34	      0xb800000000	                              mov eax, 0	      2086	mbyte.c	FUNCTION_45	IF_1
0x4000f39	            0x84d2	                             test dl, dl	      2085	mbyte.c	FUNCTION_45	IF_1
0x4000f3b	            0x744b	                            je 0x4000f88	      2085	mbyte.c	FUNCTION_45	IF_1
0x4000f3d	           0xfb6d2	                           movzx edx, dl	      2087	mbyte.c	FUNCTION_45
0x4000f40	     0xfb68a000000	                   movzx ecx, byte [rdx]	      2087	mbyte.c	FUNCTION_45
0x4000f47	           0xfbec1	                           movsx eax, cl	      2087	mbyte.c	FUNCTION_45
0x4000f4a	          0x83f801	                              cmp eax, 1	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4000f4d	            0x7e39	                           jle 0x4000f88	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4000f4f	         0xfb65701	               movzx edx, byte [rdi + 1]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4000f53	          0x83e2c0	                     and edx, 0xffffffc0	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4000f56	          0x80fa80	                            cmp dl, 0x80	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4000f59	            0x7522	                           jne 0x4000f7d	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4000f5b	          0x4889fa	                            mov rdx, rdi	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4000f5e	          0x8d48fe	                      lea ecx, [rax - 2]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4000f61	          0x4801cf	                            add rdi, rcx	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4000f64	            0xeb10	                           jmp 0x4000f76	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4000f66	         0xfb64a02	               movzx ecx, byte [rdx + 2]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4000f6a	          0x83e1c0	                     and ecx, 0xffffffc0	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4000f6d	        0x4883c201	                              add rdx, 1	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4000f71	          0x80f980	                            cmp cl, 0x80	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4000f74	            0x750d	                           jne 0x4000f83	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4000f76	          0x4839fa	                            cmp rdx, rdi	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4000f79	            0x75eb	                           jne 0x4000f66	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4000f7b	            0xf3c3	                                     ret	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4000f7d	      0xb801000000	                              mov eax, 1	      2090	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4000f82	              0xc3	                                     ret	      2090	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4000f83	      0xb801000000	                              mov eax, 1	      2090	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4000f88	            0xf3c3	                                     ret	      2092	mbyte.c	FUNCTION_45
im_preedit_window_set_position	SWITCH,0:CALL,10:IF,3:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	70
0x4000719	            0x4154	                                push r12	      4929	mbyte.c	FUNCTION_103
0x400071b	              0x55	                                push rbp	      4929	mbyte.c	FUNCTION_103
0x400071c	              0x53	                                push rbx	      4929	mbyte.c	FUNCTION_103
0x400071d	        0x4883ec20	                           sub rsp, 0x20	      4929	mbyte.c	FUNCTION_103
0x4000721	    0x64488b042528	                mov rax, qword fs:[0x28]	      4929	mbyte.c	FUNCTION_103
0x400072a	      0x4889442418	             mov qword [rsp + 0x18], rax	      4929	mbyte.c	FUNCTION_103
0x400072f	            0x31c0	                            xor eax, eax	      4929	mbyte.c	FUNCTION_103
0x4000731	    0x488b3d000000	            mov rdi, qword [0x04000738] 	      4932	mbyte.c	FUNCTION_103	IF_1
0x4000738	          0x4885ff	                           test rdi, rdi	      4932	mbyte.c	FUNCTION_103	IF_1
0x400073b	     0xf84cd000000	                            je 0x400080e	      4932	mbyte.c	FUNCTION_103	IF_1
0x4000741	      0x488d542414	                   lea rdx, [rsp + 0x14]	      4935	mbyte.c	FUNCTION_103	CALL_1
0x4000746	      0x488d742410	                   lea rsi, [rsp + 0x10]	      4935	mbyte.c	FUNCTION_103	CALL_1
0x400074b	      0xe800000000	                          call 0x4000750	      4935	mbyte.c	FUNCTION_103	CALL_1
0x4000750	    0x488b05000000	            mov rax, qword [0x04000757] 	      4939	mbyte.c	FUNCTION_103	CALL_4
0x4000757	        0x488b7850	            mov rdi, qword [rax + 0x50] 	      4939	mbyte.c	FUNCTION_103	CALL_4
0x400075b	      0x488d542404	                      lea rdx, [rsp + 4]	      4939	mbyte.c	FUNCTION_103	CALL_4
0x4000760	          0x4889e6	                            mov rsi, rsp	      4939	mbyte.c	FUNCTION_103	CALL_4
0x4000763	      0xe800000000	                          call 0x4000768	      4939	mbyte.c	FUNCTION_103	CALL_4
0x4000768	      0xe800000000	                          call 0x400076d	      4941	mbyte.c	FUNCTION_103	CALL_6
0x400076d	          0x4889c3	                            mov rbx, rax	      4941	mbyte.c	FUNCTION_103	CALL_6
0x4000770	          0x4889c6	                            mov rsi, rax	      4941	mbyte.c	FUNCTION_103	CALL_6
0x4000773	    0x488b3d000000	            mov rdi, qword [0x0400077a] 	      4941	mbyte.c	FUNCTION_103	CALL_6
0x400077a	      0xe800000000	                          call 0x400077f	      4941	mbyte.c	FUNCTION_103	CALL_6
0x400077f	      0x488d54240c	                    lea rdx, [rsp + 0xc]	      4941	mbyte.c	FUNCTION_103	CALL_6
0x4000784	      0x488d742408	                      lea rsi, [rsp + 8]	      4941	mbyte.c	FUNCTION_103	CALL_6
0x4000789	          0x4889c7	                            mov rdi, rax	      4941	mbyte.c	FUNCTION_103	CALL_6
0x400078c	      0xe800000000	                          call 0x4000791	      4941	mbyte.c	FUNCTION_103	CALL_6
0x4000791	    0x8b0d00000000	            mov ecx, dword [0x04000797] 	      4942	mbyte.c	FUNCTION_103	CALL_7
0x4000797	    0x8b0500000000	            mov eax, dword [0x0400079d] 	      4942	mbyte.c	FUNCTION_103	CALL_7
0x400079d	     0xfaf05000000	            imul eax, dword [0x040007a4]	      4942	mbyte.c	FUNCTION_103	CALL_7
0x40007a4	             0x1c8	                            add eax, ecx	      4942	mbyte.c	FUNCTION_103	CALL_7
0x40007a6	           0x30424	                    add eax, dword [rsp]	      4942	mbyte.c	FUNCTION_103	CALL_7
0x40007a9	          0x890424	                    mov dword [rsp], eax	      4942	mbyte.c	FUNCTION_103	CALL_7
0x40007ac	    0x8b1500000000	            mov edx, dword [0x040007b2] 	      4943	mbyte.c	FUNCTION_103	CALL_8
0x40007b2	     0xfaf15000000	            imul edx, dword [0x040007b9]	      4943	mbyte.c	FUNCTION_103	CALL_8
0x40007b9	             0x1ca	                            add edx, ecx	      4943	mbyte.c	FUNCTION_103	CALL_8
0x40007bb	         0x3542404	                add edx, dword [rsp + 4]	      4943	mbyte.c	FUNCTION_103	CALL_8
0x40007bf	        0x89542404	                mov dword [rsp + 4], edx	      4943	mbyte.c	FUNCTION_103	CALL_8
0x40007c3	        0x8b742408	                mov esi, dword [rsp + 8]	      4944	mbyte.c	FUNCTION_103	IF_2
0x40007c7	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	      4944	mbyte.c	FUNCTION_103	IF_2
0x40007cb	             0x1f0	                            add eax, esi	      4944	mbyte.c	FUNCTION_103	IF_2
0x40007cd	            0x39c8	                            cmp eax, ecx	      4944	mbyte.c	FUNCTION_103	IF_2
0x40007cf	            0x7e05	                           jle 0x40007d6	      4944	mbyte.c	FUNCTION_103	IF_2
0x40007d1	            0x29f1	                            sub ecx, esi	      4945	mbyte.c	FUNCTION_103	IF_2
0x40007d3	          0x890c24	                    mov dword [rsp], ecx	      4945	mbyte.c	FUNCTION_103	IF_2
0x40007d6	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      4946	mbyte.c	FUNCTION_103	IF_3
0x40007da	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      4946	mbyte.c	FUNCTION_103	IF_3
0x40007de	             0x1ca	                            add edx, ecx	      4946	mbyte.c	FUNCTION_103	IF_3
0x40007e0	            0x39c2	                            cmp edx, eax	      4946	mbyte.c	FUNCTION_103	IF_3
0x40007e2	            0x7e06	                           jle 0x40007ea	      4946	mbyte.c	FUNCTION_103	IF_3
0x40007e4	            0x29c8	                            sub eax, ecx	      4947	mbyte.c	FUNCTION_103	IF_3
0x40007e6	        0x89442404	                mov dword [rsp + 4], eax	      4947	mbyte.c	FUNCTION_103	IF_3
0x40007ea	      0x448b642404	               mov r12d, dword [rsp + 4]	      4948	mbyte.c	FUNCTION_103	CALL_10
0x40007ef	          0x8b2c24	                    mov ebp, dword [rsp]	      4948	mbyte.c	FUNCTION_103	CALL_10
0x40007f2	          0x4889de	                            mov rsi, rbx	      4948	mbyte.c	FUNCTION_103	CALL_10
0x40007f5	    0x488b3d000000	            mov rdi, qword [0x040007fc] 	      4948	mbyte.c	FUNCTION_103	CALL_10
0x40007fc	      0xe800000000	                          call 0x4000801	      4948	mbyte.c	FUNCTION_103	CALL_10
0x4000801	          0x4489e2	                           mov edx, r12d	      4948	mbyte.c	FUNCTION_103	CALL_10
0x4000804	            0x89ee	                            mov esi, ebp	      4948	mbyte.c	FUNCTION_103	CALL_10
0x4000806	          0x4889c7	                            mov rdi, rax	      4948	mbyte.c	FUNCTION_103	CALL_10
0x4000809	      0xe800000000	                          call 0x400080e	      4948	mbyte.c	FUNCTION_103	CALL_10
0x400080e	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4949	mbyte.c	FUNCTION_103
0x4000813	    0x644833042528	                xor rax, qword fs:[0x28]	      4949	mbyte.c	FUNCTION_103
0x400081c	            0x7405	                            je 0x4000823	      4949	mbyte.c	FUNCTION_103
0x400081e	      0xe800000000	                          call 0x4000823	      4949	mbyte.c	FUNCTION_103
0x4000823	        0x4883c420	                           add rsp, 0x20	      4949	mbyte.c	FUNCTION_103
0x4000827	              0x5b	                                 pop rbx	      4949	mbyte.c	FUNCTION_103
0x4000828	              0x5d	                                 pop rbp	      4949	mbyte.c	FUNCTION_103
0x4000829	            0x415c	                                 pop r12	      4949	mbyte.c	FUNCTION_103
0x400082b	              0xc3	                                     ret	      4949	mbyte.c	FUNCTION_103
latin_ptr2char	SWITCH,0:CALL,0:IF,0:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	2
0x400025c	           0xfb607	                   movzx eax, byte [rdi]	      1770	mbyte.c	FUNCTION_33
0x400025f	              0xc3	                                     ret	      1771	mbyte.c	FUNCTION_33
mb_unescape	SWITCH,0:CALL,0:IF,5:WHILE,0:FOR,1:DO,0:ELSE,3:functions,0	79
0x400228f	            0x4157	                                push r15	      4187	mbyte.c	FUNCTION_82
0x4002291	            0x4156	                                push r14	      4187	mbyte.c	FUNCTION_82
0x4002293	            0x4155	                                push r13	      4187	mbyte.c	FUNCTION_82
0x4002295	            0x4154	                                push r12	      4187	mbyte.c	FUNCTION_82
0x4002297	              0x55	                                push rbp	      4187	mbyte.c	FUNCTION_82
0x4002298	              0x53	                                push rbx	      4187	mbyte.c	FUNCTION_82
0x4002299	        0x4883ec08	                              sub rsp, 8	      4187	mbyte.c	FUNCTION_82
0x400229d	          0x4c8b37	                    mov r14, qword [rdi]	      4191	mbyte.c	FUNCTION_82
0x40022a0	        0x410fb606	                   movzx eax, byte [r14]	      4196	mbyte.c	FUNCTION_82	FOR_1
0x40022a4	            0x84c0	                             test al, al	      4196	mbyte.c	FUNCTION_82	FOR_1
0x40022a6	     0xf84c9000000	                            je 0x4002375	      4196	mbyte.c	FUNCTION_82	FOR_1
0x40022ac	          0x4989ff	                            mov r15, rdi	      4196	mbyte.c	FUNCTION_82	FOR_1
0x40022af	    0x41bc00000000	                             mov r12d, 0	      4196	mbyte.c	FUNCTION_82	FOR_1
0x40022b5	      0xbd01000000	                              mov ebp, 1	      4196	mbyte.c	FUNCTION_82	FOR_1
0x40022ba	      0xba00000000	                              mov edx, 0	      4196	mbyte.c	FUNCTION_82	FOR_1
0x40022bf	      0xbb00000000	                              mov ebx, 0	      4196	mbyte.c	FUNCTION_82	FOR_1
0x40022c4	            0x3c80	                            cmp al, 0x80	      4198	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x40022c6	            0x7521	                           jne 0x40022e9	      4198	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x40022c8	    0x41807c1601fe	         cmp byte [r14 + rdx + 1], 0xfe 	      4199	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x40022ce	            0x751d	                           jne 0x40022ed	      4199	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x40022d0	    0x41807c160258	         cmp byte [r14 + rdx + 2], 0x58 	      4200	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x40022d6	     0xf85a0000000	                           jne 0x400237c	      4200	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x40022dc	          0x4189ed	                           mov r13d, ebp	      4202	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x40022df	      0x41c6042480	                    mov byte [r12], 0x80	      4202	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x40022e4	          0x83c302	                              add ebx, 2	      4203	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x40022e7	            0xeb30	                           jmp 0x4002319	      4203	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x40022e9	            0x3c9b	                            cmp al, 0x9b	      4205	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x40022eb	            0x7525	                           jne 0x4002312	      4205	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x40022ed	    0x41807c1601fd	         cmp byte [r14 + rdx + 1], 0xfd 	      4210	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x40022f3	     0xf858a000000	                           jne 0x4002383	      4210	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x40022f9	    0x41807c160251	         cmp byte [r14 + rdx + 2], 0x51 	      4211	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x40022ff	     0xf8585000000	                           jne 0x400238a	      4211	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4002305	          0x4189ed	                           mov r13d, ebp	      4213	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4002308	      0x41c604249b	                    mov byte [r12], 0x9b	      4213	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x400230d	          0x83c302	                              add ebx, 2	      4214	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4002310	            0xeb07	                           jmp 0x4002319	      4214	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4002312	          0x4189ed	                           mov r13d, ebp	      4223	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x4002315	        0x41880424	                      mov byte [r12], al	      4223	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x4002319	          0x4963c5	                        movsxd rax, r13d	      4224	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x400231c	    0xc68000000000	                       mov byte [rax], 0	      4224	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x4002323	      0xbf00000000	                              mov edi, 0	      4228	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x4002328	    0xff1500000000	                 call qword [0x0400232e]	      4228	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x400232e	          0x83f801	                              cmp eax, 1	      4228	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x4002331	            0x7e12	                           jle 0x4002345	      4228	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x4002333	          0x4863db	                         movsxd rbx, ebx	      4230	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x4002336	      0x498d441e01	                lea rax, [r14 + rbx + 1]	      4230	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x400233b	          0x498907	                    mov qword [r15], rax	      4230	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x400233e	      0xb800000000	                              mov eax, 0	      4231	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x4002343	            0xeb51	                           jmp 0x4002396	      4231	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x4002345	    0x803d00000000	                cmp byte [0x0400234c], 0	      4235	mbyte.c	FUNCTION_82	FOR_1	IF_5
0x400234c	            0x7943	                           jns 0x4002391	      4235	mbyte.c	FUNCTION_82	FOR_1	IF_5
0x400234e	          0x83c301	                              add ebx, 1	      4196	mbyte.c	FUNCTION_82	FOR_1
0x4002351	          0x4863d3	                         movsxd rdx, ebx	      4196	mbyte.c	FUNCTION_82	FOR_1
0x4002354	      0x410fb60416	             movzx eax, byte [r14 + rdx]	      4196	mbyte.c	FUNCTION_82	FOR_1
0x4002359	          0x83c501	                              add ebp, 1	      4196	mbyte.c	FUNCTION_82	FOR_1
0x400235c	        0x4983c401	                              add r12, 1	      4196	mbyte.c	FUNCTION_82	FOR_1
0x4002360	        0x4183fd03	                             cmp r13d, 3	      4196	mbyte.c	FUNCTION_82	FOR_1
0x4002364	            0x7f08	                            jg 0x400236e	      4196	mbyte.c	FUNCTION_82	FOR_1
0x4002366	            0x84c0	                             test al, al	      4196	mbyte.c	FUNCTION_82	FOR_1
0x4002368	     0xf8556ffffff	                           jne 0x40022c4	      4196	mbyte.c	FUNCTION_82	FOR_1
0x400236e	      0xb800000000	                              mov eax, 0	      4238	mbyte.c	FUNCTION_82
0x4002373	            0xeb21	                           jmp 0x4002396	      4238	mbyte.c	FUNCTION_82
0x4002375	      0xb800000000	                              mov eax, 0	      4238	mbyte.c	FUNCTION_82
0x400237a	            0xeb1a	                           jmp 0x4002396	      4238	mbyte.c	FUNCTION_82
0x400237c	      0xb800000000	                              mov eax, 0	      4238	mbyte.c	FUNCTION_82
0x4002381	            0xeb13	                           jmp 0x4002396	      4238	mbyte.c	FUNCTION_82
0x4002383	      0xb800000000	                              mov eax, 0	      4238	mbyte.c	FUNCTION_82
0x4002388	            0xeb0c	                           jmp 0x4002396	      4238	mbyte.c	FUNCTION_82
0x400238a	      0xb800000000	                              mov eax, 0	      4238	mbyte.c	FUNCTION_82
0x400238f	            0xeb05	                           jmp 0x4002396	      4238	mbyte.c	FUNCTION_82
0x4002391	      0xb800000000	                              mov eax, 0	      4238	mbyte.c	FUNCTION_82
0x4002396	        0x4883c408	                              add rsp, 8	      4239	mbyte.c	FUNCTION_82
0x400239a	              0x5b	                                 pop rbx	      4239	mbyte.c	FUNCTION_82
0x400239b	              0x5d	                                 pop rbp	      4239	mbyte.c	FUNCTION_82
0x400239c	            0x415c	                                 pop r12	      4239	mbyte.c	FUNCTION_82
0x400239e	            0x415d	                                 pop r13	      4239	mbyte.c	FUNCTION_82
0x40023a0	            0x415e	                                 pop r14	      4239	mbyte.c	FUNCTION_82
0x40023a2	            0x415f	                                 pop r15	      4239	mbyte.c	FUNCTION_82
0x40023a4	              0xc3	                                     ret	      4239	mbyte.c	FUNCTION_82
utf_char2bytes	SWITCH,0:CALL,0:IF,5:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	108
0x40004b5	          0x83ff7f	                           cmp edi, 0x7f	      2265	mbyte.c	FUNCTION_51	IF_1
0x40004b8	            0x7f09	                            jg 0x40004c3	      2265	mbyte.c	FUNCTION_51	IF_1
0x40004ba	          0x40883e	                     mov byte [rsi], dil	      2267	mbyte.c	FUNCTION_51	IF_1
0x40004bd	      0xb801000000	                              mov eax, 1	      2268	mbyte.c	FUNCTION_51	IF_1
0x40004c2	              0xc3	                                     ret	      2268	mbyte.c	FUNCTION_51	IF_1
0x40004c3	    0x81ffff070000	                          cmp edi, 0x7ff	      2270	mbyte.c	FUNCTION_51	IF_2
0x40004c9	            0x7f1a	                            jg 0x40004e5	      2270	mbyte.c	FUNCTION_51	IF_2
0x40004cb	            0x89f8	                            mov eax, edi	      2272	mbyte.c	FUNCTION_51	IF_2
0x40004cd	          0xc1e806	                              shr eax, 6	      2272	mbyte.c	FUNCTION_51	IF_2
0x40004d0	          0x83e840	                           sub eax, 0x40	      2272	mbyte.c	FUNCTION_51	IF_2
0x40004d3	            0x8806	                      mov byte [rsi], al	      2272	mbyte.c	FUNCTION_51	IF_2
0x40004d5	          0x83e73f	                           and edi, 0x3f	      2273	mbyte.c	FUNCTION_51	IF_2
0x40004d8	          0x83c780	             add edi, 0xffffffffffffff80	      2273	mbyte.c	FUNCTION_51	IF_2
0x40004db	        0x40887e01	                 mov byte [rsi + 1], dil	      2273	mbyte.c	FUNCTION_51	IF_2
0x40004df	      0xb802000000	                              mov eax, 2	      2274	mbyte.c	FUNCTION_51	IF_2
0x40004e4	              0xc3	                                     ret	      2274	mbyte.c	FUNCTION_51	IF_2
0x40004e5	    0x81ffffff0000	                         cmp edi, 0xffff	      2276	mbyte.c	FUNCTION_51	IF_3
0x40004eb	            0x7f28	                            jg 0x4000515	      2276	mbyte.c	FUNCTION_51	IF_3
0x40004ed	            0x89f8	                            mov eax, edi	      2278	mbyte.c	FUNCTION_51	IF_3
0x40004ef	          0xc1e80c	                            shr eax, 0xc	      2278	mbyte.c	FUNCTION_51	IF_3
0x40004f2	          0x83e820	                           sub eax, 0x20	      2278	mbyte.c	FUNCTION_51	IF_3
0x40004f5	            0x8806	                      mov byte [rsi], al	      2278	mbyte.c	FUNCTION_51	IF_3
0x40004f7	            0x89f8	                            mov eax, edi	      2279	mbyte.c	FUNCTION_51	IF_3
0x40004f9	          0xc1e806	                              shr eax, 6	      2279	mbyte.c	FUNCTION_51	IF_3
0x40004fc	          0x83e03f	                           and eax, 0x3f	      2279	mbyte.c	FUNCTION_51	IF_3
0x40004ff	          0x83c080	             add eax, 0xffffffffffffff80	      2279	mbyte.c	FUNCTION_51	IF_3
0x4000502	          0x884601	                  mov byte [rsi + 1], al	      2279	mbyte.c	FUNCTION_51	IF_3
0x4000505	          0x83e73f	                           and edi, 0x3f	      2280	mbyte.c	FUNCTION_51	IF_3
0x4000508	          0x83c780	             add edi, 0xffffffffffffff80	      2280	mbyte.c	FUNCTION_51	IF_3
0x400050b	        0x40887e02	                 mov byte [rsi + 2], dil	      2280	mbyte.c	FUNCTION_51	IF_3
0x400050f	      0xb803000000	                              mov eax, 3	      2281	mbyte.c	FUNCTION_51	IF_3
0x4000514	              0xc3	                                     ret	      2281	mbyte.c	FUNCTION_51	IF_3
0x4000515	    0x81ffffff1f00	                       cmp edi, 0x1fffff	      2283	mbyte.c	FUNCTION_51	IF_4
0x400051b	            0x7f36	                            jg 0x4000553	      2283	mbyte.c	FUNCTION_51	IF_4
0x400051d	            0x89f8	                            mov eax, edi	      2285	mbyte.c	FUNCTION_51	IF_4
0x400051f	          0xc1e812	                           shr eax, 0x12	      2285	mbyte.c	FUNCTION_51	IF_4
0x4000522	          0x83e810	                           sub eax, 0x10	      2285	mbyte.c	FUNCTION_51	IF_4
0x4000525	            0x8806	                      mov byte [rsi], al	      2285	mbyte.c	FUNCTION_51	IF_4
0x4000527	            0x89f8	                            mov eax, edi	      2286	mbyte.c	FUNCTION_51	IF_4
0x4000529	          0xc1e80c	                            shr eax, 0xc	      2286	mbyte.c	FUNCTION_51	IF_4
0x400052c	          0x83e03f	                           and eax, 0x3f	      2286	mbyte.c	FUNCTION_51	IF_4
0x400052f	          0x83c080	             add eax, 0xffffffffffffff80	      2286	mbyte.c	FUNCTION_51	IF_4
0x4000532	          0x884601	                  mov byte [rsi + 1], al	      2286	mbyte.c	FUNCTION_51	IF_4
0x4000535	            0x89f8	                            mov eax, edi	      2287	mbyte.c	FUNCTION_51	IF_4
0x4000537	          0xc1e806	                              shr eax, 6	      2287	mbyte.c	FUNCTION_51	IF_4
0x400053a	          0x83e03f	                           and eax, 0x3f	      2287	mbyte.c	FUNCTION_51	IF_4
0x400053d	          0x83c080	             add eax, 0xffffffffffffff80	      2287	mbyte.c	FUNCTION_51	IF_4
0x4000540	          0x884602	                  mov byte [rsi + 2], al	      2287	mbyte.c	FUNCTION_51	IF_4
0x4000543	          0x83e73f	                           and edi, 0x3f	      2288	mbyte.c	FUNCTION_51	IF_4
0x4000546	          0x83c780	             add edi, 0xffffffffffffff80	      2288	mbyte.c	FUNCTION_51	IF_4
0x4000549	        0x40887e03	                 mov byte [rsi + 3], dil	      2288	mbyte.c	FUNCTION_51	IF_4
0x400054d	      0xb804000000	                              mov eax, 4	      2289	mbyte.c	FUNCTION_51	IF_4
0x4000552	              0xc3	                                     ret	      2289	mbyte.c	FUNCTION_51	IF_4
0x4000553	    0x81ffffffff03	                      cmp edi, 0x3ffffff	      2291	mbyte.c	FUNCTION_51	IF_5
0x4000559	            0x7f43	                            jg 0x400059e	      2291	mbyte.c	FUNCTION_51	IF_5
0x400055b	            0x89f8	                            mov eax, edi	      2293	mbyte.c	FUNCTION_51	IF_5
0x400055d	          0xc1e818	                           shr eax, 0x18	      2293	mbyte.c	FUNCTION_51	IF_5
0x4000560	          0x83e808	                              sub eax, 8	      2293	mbyte.c	FUNCTION_51	IF_5
0x4000563	            0x8806	                      mov byte [rsi], al	      2293	mbyte.c	FUNCTION_51	IF_5
0x4000565	            0x89f8	                            mov eax, edi	      2294	mbyte.c	FUNCTION_51	IF_5
0x4000567	          0xc1e812	                           shr eax, 0x12	      2294	mbyte.c	FUNCTION_51	IF_5
0x400056a	          0x83e03f	                           and eax, 0x3f	      2294	mbyte.c	FUNCTION_51	IF_5
0x400056d	          0x83c080	             add eax, 0xffffffffffffff80	      2294	mbyte.c	FUNCTION_51	IF_5
0x4000570	          0x884601	                  mov byte [rsi + 1], al	      2294	mbyte.c	FUNCTION_51	IF_5
0x4000573	            0x89f8	                            mov eax, edi	      2295	mbyte.c	FUNCTION_51	IF_5
0x4000575	          0xc1e80c	                            shr eax, 0xc	      2295	mbyte.c	FUNCTION_51	IF_5
0x4000578	          0x83e03f	                           and eax, 0x3f	      2295	mbyte.c	FUNCTION_51	IF_5
0x400057b	          0x83c080	             add eax, 0xffffffffffffff80	      2295	mbyte.c	FUNCTION_51	IF_5
0x400057e	          0x884602	                  mov byte [rsi + 2], al	      2295	mbyte.c	FUNCTION_51	IF_5
0x4000581	            0x89f8	                            mov eax, edi	      2296	mbyte.c	FUNCTION_51	IF_5
0x4000583	          0xc1e806	                              shr eax, 6	      2296	mbyte.c	FUNCTION_51	IF_5
0x4000586	          0x83e03f	                           and eax, 0x3f	      2296	mbyte.c	FUNCTION_51	IF_5
0x4000589	          0x83c080	             add eax, 0xffffffffffffff80	      2296	mbyte.c	FUNCTION_51	IF_5
0x400058c	          0x884603	                  mov byte [rsi + 3], al	      2296	mbyte.c	FUNCTION_51	IF_5
0x400058f	          0x83e73f	                           and edi, 0x3f	      2297	mbyte.c	FUNCTION_51	IF_5
0x4000592	          0x8d4780	                   lea eax, [rdi - 0x80]	      2297	mbyte.c	FUNCTION_51	IF_5
0x4000595	          0x884604	                  mov byte [rsi + 4], al	      2297	mbyte.c	FUNCTION_51	IF_5
0x4000598	      0xb805000000	                              mov eax, 5	      2298	mbyte.c	FUNCTION_51	IF_5
0x400059d	              0xc3	                                     ret	      2298	mbyte.c	FUNCTION_51	IF_5
0x400059e	            0x89f8	                            mov eax, edi	      2301	mbyte.c	FUNCTION_51
0x40005a0	          0xc1e81e	                           shr eax, 0x1e	      2301	mbyte.c	FUNCTION_51
0x40005a3	          0x83e804	                              sub eax, 4	      2301	mbyte.c	FUNCTION_51
0x40005a6	            0x8806	                      mov byte [rsi], al	      2301	mbyte.c	FUNCTION_51
0x40005a8	            0x89f8	                            mov eax, edi	      2302	mbyte.c	FUNCTION_51
0x40005aa	          0xc1e818	                           shr eax, 0x18	      2302	mbyte.c	FUNCTION_51
0x40005ad	          0x83e03f	                           and eax, 0x3f	      2302	mbyte.c	FUNCTION_51
0x40005b0	          0x83c080	             add eax, 0xffffffffffffff80	      2302	mbyte.c	FUNCTION_51
0x40005b3	          0x884601	                  mov byte [rsi + 1], al	      2302	mbyte.c	FUNCTION_51
0x40005b6	            0x89f8	                            mov eax, edi	      2303	mbyte.c	FUNCTION_51
0x40005b8	          0xc1e812	                           shr eax, 0x12	      2303	mbyte.c	FUNCTION_51
0x40005bb	          0x83e03f	                           and eax, 0x3f	      2303	mbyte.c	FUNCTION_51
0x40005be	          0x83c080	             add eax, 0xffffffffffffff80	      2303	mbyte.c	FUNCTION_51
0x40005c1	          0x884602	                  mov byte [rsi + 2], al	      2303	mbyte.c	FUNCTION_51
0x40005c4	            0x89f8	                            mov eax, edi	      2304	mbyte.c	FUNCTION_51
0x40005c6	          0xc1e80c	                            shr eax, 0xc	      2304	mbyte.c	FUNCTION_51
0x40005c9	          0x83e03f	                           and eax, 0x3f	      2304	mbyte.c	FUNCTION_51
0x40005cc	          0x83c080	             add eax, 0xffffffffffffff80	      2304	mbyte.c	FUNCTION_51
0x40005cf	          0x884603	                  mov byte [rsi + 3], al	      2304	mbyte.c	FUNCTION_51
0x40005d2	            0x89f8	                            mov eax, edi	      2305	mbyte.c	FUNCTION_51
0x40005d4	          0xc1e806	                              shr eax, 6	      2305	mbyte.c	FUNCTION_51
0x40005d7	          0x83e03f	                           and eax, 0x3f	      2305	mbyte.c	FUNCTION_51
0x40005da	          0x83c080	             add eax, 0xffffffffffffff80	      2305	mbyte.c	FUNCTION_51
0x40005dd	          0x884604	                  mov byte [rsi + 4], al	      2305	mbyte.c	FUNCTION_51
0x40005e0	          0x83e73f	                           and edi, 0x3f	      2306	mbyte.c	FUNCTION_51
0x40005e3	          0x8d4780	                   lea eax, [rdi - 0x80]	      2306	mbyte.c	FUNCTION_51
0x40005e6	          0x884605	                  mov byte [rsi + 5], al	      2306	mbyte.c	FUNCTION_51
0x40005e9	      0xb806000000	                              mov eax, 6	      2307	mbyte.c	FUNCTION_51
0x40005ee	              0xc3	                                     ret	      2308	mbyte.c	FUNCTION_51
mb_ptr2char_adv	SWITCH,0:CALL,0:IF,0:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	16
0x4000e3b	              0x55	                                push rbp	      1893	mbyte.c	FUNCTION_37
0x4000e3c	              0x53	                                push rbx	      1893	mbyte.c	FUNCTION_37
0x4000e3d	        0x4883ec08	                              sub rsp, 8	      1893	mbyte.c	FUNCTION_37
0x4000e41	          0x4889fb	                            mov rbx, rdi	      1893	mbyte.c	FUNCTION_37
0x4000e44	          0x488b3f	                    mov rdi, qword [rdi]	      1896	mbyte.c	FUNCTION_37
0x4000e47	    0xff1500000000	                 call qword [0x04000e4d]	      1896	mbyte.c	FUNCTION_37
0x4000e4d	            0x89c5	                            mov ebp, eax	      1896	mbyte.c	FUNCTION_37
0x4000e4f	          0x488b3b	                    mov rdi, qword [rbx]	      1897	mbyte.c	FUNCTION_37
0x4000e52	    0xff1500000000	                 call qword [0x04000e58]	      1897	mbyte.c	FUNCTION_37
0x4000e58	            0x4898	                                    cdqe	      1897	mbyte.c	FUNCTION_37
0x4000e5a	          0x480103	                    add qword [rbx], rax	      1897	mbyte.c	FUNCTION_37
0x4000e5d	            0x89e8	                            mov eax, ebp	      1899	mbyte.c	FUNCTION_37
0x4000e5f	        0x4883c408	                              add rsp, 8	      1899	mbyte.c	FUNCTION_37
0x4000e63	              0x5b	                                 pop rbx	      1899	mbyte.c	FUNCTION_37
0x4000e64	              0x5d	                                 pop rbp	      1899	mbyte.c	FUNCTION_37
0x4000e65	              0xc3	                                     ret	      1899	mbyte.c	FUNCTION_37
utfc_ptr2char	SWITCH,0:CALL,7:IF,4:WHILE,0:FOR,1:DO,0:ELSE,0:functions,0	71
0x400123a	            0x4157	                                push r15	      1975	mbyte.c	FUNCTION_42
0x400123c	            0x4156	                                push r14	      1975	mbyte.c	FUNCTION_42
0x400123e	            0x4155	                                push r13	      1975	mbyte.c	FUNCTION_42
0x4001240	            0x4154	                                push r12	      1975	mbyte.c	FUNCTION_42
0x4001242	              0x55	                                push rbp	      1975	mbyte.c	FUNCTION_42
0x4001243	              0x53	                                push rbx	      1975	mbyte.c	FUNCTION_42
0x4001244	        0x4883ec08	                              sub rsp, 8	      1975	mbyte.c	FUNCTION_42
0x4001248	          0x4889fb	                            mov rbx, rdi	      1975	mbyte.c	FUNCTION_42
0x400124b	          0x4989f6	                            mov r14, rsi	      1975	mbyte.c	FUNCTION_42
0x400124e	      0xe800000000	                          call 0x4001253	      1981	mbyte.c	FUNCTION_42	CALL_1
0x4001253	          0x4189c5	                           mov r13d, eax	      1981	mbyte.c	FUNCTION_42	CALL_1
0x4001256	          0x4889df	                            mov rdi, rbx	      1982	mbyte.c	FUNCTION_42	CALL_2
0x4001259	      0xe800000000	                          call 0x400125e	      1982	mbyte.c	FUNCTION_42	CALL_2
0x400125e	            0x89c5	                            mov ebp, eax	      1982	mbyte.c	FUNCTION_42	CALL_2
0x4001260	          0x83f801	                              cmp eax, 1	      1985	mbyte.c	FUNCTION_42	IF_1
0x4001263	            0x7f09	                            jg 0x400126e	      1985	mbyte.c	FUNCTION_42	IF_1
0x4001265	          0x803b00	                       cmp byte [rbx], 0	      1985	mbyte.c	FUNCTION_42	IF_1
0x4001268	     0xf8881000000	                            js 0x40012ef	      1985	mbyte.c	FUNCTION_42	IF_1
0x400126e	          0x4c63fd	                         movsxd r15, ebp	      1986	mbyte.c	FUNCTION_42	IF_1
0x4001271	          0x4901df	                            add r15, rbx	      1986	mbyte.c	FUNCTION_42	IF_1
0x4001274	    0x41bc00000000	                             mov r12d, 0	      1986	mbyte.c	FUNCTION_42	IF_1
0x400127a	        0x41803f00	                       cmp byte [r15], 0	      1986	mbyte.c	FUNCTION_42	IF_1
0x400127e	            0x797d	                           jns 0x40012fd	      1986	mbyte.c	FUNCTION_42	IF_1
0x4001280	          0x4c89fe	                            mov rsi, r15	      1987	mbyte.c	FUNCTION_42	IF_1	CALL_3
0x4001283	          0x4889df	                            mov rdi, rbx	      1987	mbyte.c	FUNCTION_42	IF_1	CALL_3
0x4001286	      0xe800000000	                          call 0x400128b	      1987	mbyte.c	FUNCTION_42	IF_1	CALL_3
0x400128b	            0x85c0	                           test eax, eax	      1987	mbyte.c	FUNCTION_42	IF_1	CALL_3
0x400128d	            0x7468	                            je 0x40012f7	      1987	mbyte.c	FUNCTION_42	IF_1	CALL_3
0x400128f	          0x4c89ff	                            mov rdi, r15	      1989	mbyte.c	FUNCTION_42	IF_1	CALL_4
0x4001292	      0xe800000000	                          call 0x4001297	      1989	mbyte.c	FUNCTION_42	IF_1	CALL_4
0x4001297	          0x418906	                    mov dword [r14], eax	      1992	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x400129a	        0x4d8d7e04	                      lea r15, [r14 + 4]	      1992	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x400129e	    0x41bc01000000	                             mov r12d, 1	      1992	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x40012a4	            0xeb15	                           jmp 0x40012bb	      1992	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x40012a6	        0x4183c401	                             add r12d, 1	      1992	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x40012aa	        0x8b442404	                mov eax, dword [rsp + 4]	      1992	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x40012ae	          0x418907	                    mov dword [r15], eax	      1992	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x40012b1	        0x4983c704	                              add r15, 4	      1992	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x40012b5	        0x4183fc06	                             cmp r12d, 6	      1993	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_2
0x40012b9	            0x744d	                            je 0x4001308	      1993	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_2
0x40012bb	          0x4863fd	                         movsxd rdi, ebp	      1995	mbyte.c	FUNCTION_42	IF_1	FOR_1	CALL_5
0x40012be	          0x4801df	                            add rdi, rbx	      1995	mbyte.c	FUNCTION_42	IF_1	FOR_1	CALL_5
0x40012c1	      0xe800000000	                          call 0x40012c6	      1995	mbyte.c	FUNCTION_42	IF_1	FOR_1	CALL_5
0x40012c6	             0x1c5	                            add ebp, eax	      1995	mbyte.c	FUNCTION_42	IF_1	FOR_1	CALL_5
0x40012c8	          0x4863fd	                         movsxd rdi, ebp	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x40012cb	          0x4801df	                            add rdi, rbx	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x40012ce	          0x803f00	                       cmp byte [rdi], 0	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x40012d1	            0x7914	                           jns 0x40012e7	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x40012d3	      0xe800000000	                          call 0x40012d8	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x40012d8	        0x89442404	                mov dword [rsp + 4], eax	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x40012dc	            0x89c7	                            mov edi, eax	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x40012de	      0xe800000000	                          call 0x40012e3	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x40012e3	            0x85c0	                           test eax, eax	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x40012e5	            0x75bf	                           jne 0x40012a6	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x40012e7	        0x4183fc05	                             cmp r12d, 5	      2001	mbyte.c	FUNCTION_42	IF_4
0x40012eb	            0x7f1b	                            jg 0x4001308	      2001	mbyte.c	FUNCTION_42	IF_4
0x40012ed	            0xeb0e	                           jmp 0x40012fd	      2001	mbyte.c	FUNCTION_42	IF_4
0x40012ef	    0x41bc00000000	                             mov r12d, 0	      2001	mbyte.c	FUNCTION_42	IF_4
0x40012f5	            0xeb06	                           jmp 0x40012fd	      2001	mbyte.c	FUNCTION_42	IF_4
0x40012f7	    0x41bc00000000	                             mov r12d, 0	      2001	mbyte.c	FUNCTION_42	IF_4
0x40012fd	          0x4d63e4	                        movsxd r12, r12d	      2002	mbyte.c	FUNCTION_42	IF_4
0x4001300	    0x43c704a60000	              mov dword [r14 + r12*4], 0	      2002	mbyte.c	FUNCTION_42	IF_4
0x4001308	          0x4489e8	                           mov eax, r13d	      2005	mbyte.c	FUNCTION_42
0x400130b	        0x4883c408	                              add rsp, 8	      2005	mbyte.c	FUNCTION_42
0x400130f	              0x5b	                                 pop rbx	      2005	mbyte.c	FUNCTION_42
0x4001310	              0x5d	                                 pop rbp	      2005	mbyte.c	FUNCTION_42
0x4001311	            0x415c	                                 pop r12	      2005	mbyte.c	FUNCTION_42
0x4001313	            0x415d	                                 pop r13	      2005	mbyte.c	FUNCTION_42
0x4001315	            0x415e	                                 pop r14	      2005	mbyte.c	FUNCTION_42
0x4001317	            0x415f	                                 pop r15	      2005	mbyte.c	FUNCTION_42
0x4001319	              0xc3	                                     ret	      2005	mbyte.c	FUNCTION_42
mb_get_class	SWITCH,0:CALL,1:IF,0:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	5
0x4001876	        0x4883ec08	                              sub rsp, 8	       878	mbyte.c	ELSE_1	FUNCTION_7
0x400187a	    0x488b35000000	            mov rsi, qword [0x04001881] 	       879	mbyte.c	ELSE_1	FUNCTION_7	CALL_1
0x4001881	      0xe800000000	                          call 0x4001886	       879	mbyte.c	ELSE_1	FUNCTION_7	CALL_1
0x4001886	        0x4883c408	                              add rsp, 8	       880	mbyte.c	ELSE_1	FUNCTION_7
0x400188a	              0xc3	                                     ret	       880	mbyte.c	ELSE_1	FUNCTION_7
convert_setup_ext	SWITCH,0:CALL,9:IF,15:WHILE,0:FOR,0:DO,0:ELSE,11:functions,0	111
0x4003496	            0x4157	                                push r15	      6545	mbyte.c	FUNCTION_141
0x4003498	            0x4156	                                push r14	      6545	mbyte.c	FUNCTION_141
0x400349a	            0x4155	                                push r13	      6545	mbyte.c	FUNCTION_141
0x400349c	            0x4154	                                push r12	      6545	mbyte.c	FUNCTION_141
0x400349e	              0x55	                                push rbp	      6545	mbyte.c	FUNCTION_141
0x400349f	              0x53	                                push rbx	      6545	mbyte.c	FUNCTION_141
0x40034a0	        0x4883ec08	                              sub rsp, 8	      6545	mbyte.c	FUNCTION_141
0x40034a4	          0x4889fb	                            mov rbx, rdi	      6545	mbyte.c	FUNCTION_141
0x40034a7	          0x4889f5	                            mov rbp, rsi	      6545	mbyte.c	FUNCTION_141
0x40034aa	          0x4189d6	                           mov r14d, edx	      6545	mbyte.c	FUNCTION_141
0x40034ad	          0x4989cc	                            mov r12, rcx	      6545	mbyte.c	FUNCTION_141
0x40034b0	          0x4589c5	                           mov r13d, r8d	      6545	mbyte.c	FUNCTION_141
0x40034b3	          0x833f05	                      cmp dword [rdi], 5	      6553	mbyte.c	FUNCTION_141	IF_1
0x40034b6	            0x750f	                           jne 0x40034c7	      6553	mbyte.c	FUNCTION_141	IF_1
0x40034b8	        0x488b7f08	                mov rdi, qword [rdi + 8]	      6553	mbyte.c	FUNCTION_141	IF_1
0x40034bc	        0x4883ffff	             cmp rdi, 0xffffffffffffffff	      6553	mbyte.c	FUNCTION_141	IF_1
0x40034c0	            0x7405	                            je 0x40034c7	      6553	mbyte.c	FUNCTION_141	IF_1
0x40034c2	      0xe800000000	                          call 0x40034c7	      6554	mbyte.c	FUNCTION_141	CALL_1
0x40034c7	    0xc70300000000	                      mov dword [rbx], 0	      6556	mbyte.c	FUNCTION_141
0x40034cd	    0xc74304010000	                  mov dword [rbx + 4], 1	      6557	mbyte.c	FUNCTION_141
0x40034d4	    0xc74310000000	               mov dword [rbx + 0x10], 0	      6558	mbyte.c	FUNCTION_141
0x40034db	          0x4885ed	                           test rbp, rbp	      6561	mbyte.c	FUNCTION_141	IF_2
0x40034de	     0xf8415010000	                            je 0x40035f9	      6561	mbyte.c	FUNCTION_141	IF_2
0x40034e4	        0x807d0000	                       cmp byte [rbp], 0	      6561	mbyte.c	FUNCTION_141	IF_2
0x40034e8	     0xf8412010000	                            je 0x4003600	      6561	mbyte.c	FUNCTION_141	IF_2
0x40034ee	          0x4d85e4	                           test r12, r12	      6561	mbyte.c	FUNCTION_141	IF_2
0x40034f1	     0xf8409010000	                            je 0x4003600	      6561	mbyte.c	FUNCTION_141	IF_2
0x40034f7	      0xb801000000	                              mov eax, 1	      6563	mbyte.c	FUNCTION_141	IF_2
0x40034fc	      0x41803c2400	                       cmp byte [r12], 0	      6561	mbyte.c	FUNCTION_141	IF_2
0x4003501	     0xf84fe000000	                            je 0x4003605	      6561	mbyte.c	FUNCTION_141	IF_2
0x4003507	          0x4c89e6	                            mov rsi, r12	      6562	mbyte.c	FUNCTION_141	IF_2	CALL_2
0x400350a	          0x4889ef	                            mov rdi, rbp	      6562	mbyte.c	FUNCTION_141	IF_2	CALL_2
0x400350d	      0xe800000000	                          call 0x4003512	      6562	mbyte.c	FUNCTION_141	IF_2	CALL_2
0x4003512	            0x89c2	                            mov edx, eax	      6562	mbyte.c	FUNCTION_141	IF_2	CALL_2
0x4003514	      0xb801000000	                              mov eax, 1	      6563	mbyte.c	FUNCTION_141	IF_2
0x4003519	            0x85d2	                           test edx, edx	      6562	mbyte.c	FUNCTION_141	IF_2	CALL_2
0x400351b	     0xf84e4000000	                            je 0x4003605	      6562	mbyte.c	FUNCTION_141	IF_2	CALL_2
0x4003521	          0x4889ef	                            mov rdi, rbp	      6565	mbyte.c	FUNCTION_141	CALL_3
0x4003524	      0xe800000000	                          call 0x4003529	      6565	mbyte.c	FUNCTION_141	CALL_3
0x4003529	          0x4189c7	                           mov r15d, eax	      6565	mbyte.c	FUNCTION_141	CALL_3
0x400352c	          0x4c89e7	                            mov rdi, r12	      6566	mbyte.c	FUNCTION_141	CALL_4
0x400352f	      0xe800000000	                          call 0x4003534	      6566	mbyte.c	FUNCTION_141	CALL_4
0x4003534	          0x4585f6	                         test r14d, r14d	      6567	mbyte.c	FUNCTION_141	IF_3
0x4003537	            0x7408	                            je 0x4003541	      6567	mbyte.c	FUNCTION_141	IF_3
0x4003539	          0x4489fe	                           mov esi, r15d	      6568	mbyte.c	FUNCTION_141	IF_3
0x400353c	          0x83e604	                              and esi, 4	      6568	mbyte.c	FUNCTION_141	IF_3
0x400353f	            0xeb0c	                           jmp 0x400354d	      6568	mbyte.c	FUNCTION_141	IF_3
0x4003541	        0x4183ff04	                             cmp r15d, 4	      6570	mbyte.c	FUNCTION_141	ELSE_1
0x4003545	        0x400f94c6	                                sete sil	      6570	mbyte.c	FUNCTION_141	ELSE_1
0x4003549	        0x400fb6f6	                          movzx esi, sil	      6570	mbyte.c	FUNCTION_141	ELSE_1
0x400354d	          0x4585ed	                         test r13d, r13d	      6571	mbyte.c	FUNCTION_141	IF_4
0x4003550	            0x7407	                            je 0x4003559	      6571	mbyte.c	FUNCTION_141	IF_4
0x4003552	            0x89c2	                            mov edx, eax	      6572	mbyte.c	FUNCTION_141	IF_4
0x4003554	          0x83e204	                              and edx, 4	      6572	mbyte.c	FUNCTION_141	IF_4
0x4003557	            0xeb09	                           jmp 0x4003562	      6572	mbyte.c	FUNCTION_141	IF_4
0x4003559	          0x83f804	                              cmp eax, 4	      6574	mbyte.c	FUNCTION_141	ELSE_2
0x400355c	           0xf94c2	                                 sete dl	      6574	mbyte.c	FUNCTION_141	ELSE_2
0x400355f	           0xfb6d2	                           movzx edx, dl	      6574	mbyte.c	FUNCTION_141	ELSE_2
0x4003562	            0x85d2	                           test edx, edx	      6576	mbyte.c	FUNCTION_141	ELSE_2	IF_5
0x4003564	           0xf95c1	                                setne cl	      6576	mbyte.c	FUNCTION_141	ELSE_2	IF_5
0x4003567	    0x41f7c7000200	                        test r15d, 0x200	      6576	mbyte.c	FUNCTION_141	ELSE_2	IF_5
0x400356e	            0x7413	                            je 0x4003583	      6576	mbyte.c	FUNCTION_141	ELSE_2	IF_5
0x4003570	            0x84c9	                             test cl, cl	      6576	mbyte.c	FUNCTION_141	ELSE_2	IF_5
0x4003572	            0x740f	                            je 0x4003583	      6576	mbyte.c	FUNCTION_141	ELSE_2	IF_5
0x4003574	    0xc70301000000	                      mov dword [rbx], 1	      6579	mbyte.c	FUNCTION_141	ELSE_2	IF_5
0x400357a	    0xc74304020000	                  mov dword [rbx + 4], 2	      6580	mbyte.c	FUNCTION_141	ELSE_2	IF_5
0x4003581	            0xeb6b	                           jmp 0x40035ee	      6580	mbyte.c	FUNCTION_141	ELSE_2	IF_5
0x4003583	    0x41f7c7000400	                        test r15d, 0x400	      6582	mbyte.c	FUNCTION_141	ELSE_3	IF_6
0x400358a	            0x7413	                            je 0x400359f	      6582	mbyte.c	FUNCTION_141	ELSE_3	IF_6
0x400358c	            0x84c9	                             test cl, cl	      6582	mbyte.c	FUNCTION_141	ELSE_3	IF_6
0x400358e	            0x740f	                            je 0x400359f	      6582	mbyte.c	FUNCTION_141	ELSE_3	IF_6
0x4003590	    0xc70302000000	                      mov dword [rbx], 2	      6585	mbyte.c	FUNCTION_141	ELSE_3	IF_6
0x4003596	    0xc74304030000	                  mov dword [rbx + 4], 3	      6586	mbyte.c	FUNCTION_141	ELSE_3	IF_6
0x400359d	            0xeb4f	                           jmp 0x40035ee	      6586	mbyte.c	FUNCTION_141	ELSE_3	IF_6
0x400359f	            0x85f6	                           test esi, esi	      6588	mbyte.c	FUNCTION_141	ELSE_4	IF_7
0x40035a1	            0x741a	                            je 0x40035bd	      6588	mbyte.c	FUNCTION_141	ELSE_4	IF_7
0x40035a3	          0xf6c402	                              test ah, 2	      6588	mbyte.c	FUNCTION_141	ELSE_4	IF_7
0x40035a6	            0x7408	                            je 0x40035b0	      6588	mbyte.c	FUNCTION_141	ELSE_4	IF_7
0x40035a8	    0xc70303000000	                      mov dword [rbx], 3	      6591	mbyte.c	FUNCTION_141	ELSE_4	IF_7
0x40035ae	            0xeb3e	                           jmp 0x40035ee	      6591	mbyte.c	FUNCTION_141	ELSE_4	IF_7
0x40035b0	          0xf6c404	                              test ah, 4	      6593	mbyte.c	FUNCTION_141	ELSE_5	IF_8
0x40035b3	            0x740d	                            je 0x40035c2	      6593	mbyte.c	FUNCTION_141	ELSE_5	IF_8
0x40035b5	    0xc70304000000	                      mov dword [rbx], 4	      6596	mbyte.c	FUNCTION_141	ELSE_5	IF_8
0x40035bb	            0xeb31	                           jmp 0x40035ee	      6596	mbyte.c	FUNCTION_141	ELSE_5	IF_8
0x40035bd	          0x4889ee	                            mov rsi, rbp	      6632	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x40035c0	            0xeb05	                           jmp 0x40035c7	      6632	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x40035c2	      0xbe00000000	                              mov esi, 0	      6632	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x40035c7	            0x85d2	                           test edx, edx	      6632	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x40035c9	      0xbf00000000	                              mov edi, 0	      6632	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x40035ce	        0x490f44fc	                          cmove rdi, r12	      6632	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x40035d2	      0xe800000000	                          call 0x40035d7	      6632	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x40035d7	        0x48894308	                mov qword [rbx + 8], rax	      6632	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x40035db	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      6635	mbyte.c	FUNCTION_141	ELSE_11	IF_14
0x40035df	            0x740d	                            je 0x40035ee	      6635	mbyte.c	FUNCTION_141	ELSE_11	IF_14
0x40035e1	    0xc70305000000	                      mov dword [rbx], 5	      6637	mbyte.c	FUNCTION_141	ELSE_11	IF_14
0x40035e7	    0xc74304040000	                  mov dword [rbx + 4], 4	      6638	mbyte.c	FUNCTION_141	ELSE_11	IF_14
0x40035ee	          0x833b00	                      cmp dword [rbx], 0	      6563	mbyte.c	FUNCTION_141	IF_2
0x40035f1	           0xf95c0	                                setne al	      6563	mbyte.c	FUNCTION_141	IF_2
0x40035f4	           0xfb6c0	                           movzx eax, al	      6563	mbyte.c	FUNCTION_141	IF_2
0x40035f7	            0xeb0c	                           jmp 0x4003605	      6563	mbyte.c	FUNCTION_141	IF_2
0x40035f9	      0xb801000000	                              mov eax, 1	      6563	mbyte.c	FUNCTION_141	IF_2
0x40035fe	            0xeb05	                           jmp 0x4003605	      6563	mbyte.c	FUNCTION_141	IF_2
0x4003600	      0xb801000000	                              mov eax, 1	      6563	mbyte.c	FUNCTION_141	IF_2
0x4003605	        0x4883c408	                              add rsp, 8	      6646	mbyte.c	FUNCTION_141
0x4003609	              0x5b	                                 pop rbx	      6646	mbyte.c	FUNCTION_141
0x400360a	              0x5d	                                 pop rbp	      6646	mbyte.c	FUNCTION_141
0x400360b	            0x415c	                                 pop r12	      6646	mbyte.c	FUNCTION_141
0x400360d	            0x415d	                                 pop r13	      6646	mbyte.c	FUNCTION_141
0x400360f	            0x415e	                                 pop r14	      6646	mbyte.c	FUNCTION_141
0x4003611	            0x415f	                                 pop r15	      6646	mbyte.c	FUNCTION_141
0x4003613	              0xc3	                                     ret	      6646	mbyte.c	FUNCTION_141
enc_canon_search	SWITCH,0:CALL,1:IF,1:WHILE,0:FOR,1:DO,0:ELSE,0:functions,0	22
0x40006db	            0x4154	                                push r12	       452	mbyte.c	FUNCTION_2
0x40006dd	              0x55	                                push rbp	       452	mbyte.c	FUNCTION_2
0x40006de	              0x53	                                push rbx	       452	mbyte.c	FUNCTION_2
0x40006df	          0x4989fc	                            mov r12, rdi	       452	mbyte.c	FUNCTION_2
0x40006e2	      0xbb00000000	                              mov ebx, 0	       452	mbyte.c	FUNCTION_2
0x40006e7	          0x4889da	                            mov rdx, rbx	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x40006ea	        0x48c1e204	                              shl rdx, 4	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x40006ee	    0x488bb2000000	                    mov rsi, qword [rdx]	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x40006f5	          0x4c89e7	                            mov rdi, r12	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x40006f8	      0xe800000000	                          call 0x40006fd	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x40006fd	            0x85c0	                           test eax, eax	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x40006ff	            0x7411	                            je 0x4000712	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x4000701	        0x4883c301	                              add rbx, 1	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x4000705	        0x4883fb3c	                           cmp rbx, 0x3c	       455	mbyte.c	FUNCTION_2	FOR_1
0x4000709	            0x75dc	                           jne 0x40006e7	       455	mbyte.c	FUNCTION_2	FOR_1
0x400070b	      0xb8ffffffff	                     mov eax, 0xffffffff	       458	mbyte.c	FUNCTION_2
0x4000710	            0xeb02	                           jmp 0x4000714	       458	mbyte.c	FUNCTION_2
0x4000712	            0x89d8	                            mov eax, ebx	       458	mbyte.c	FUNCTION_2
0x4000714	              0x5b	                                 pop rbx	       459	mbyte.c	FUNCTION_2
0x4000715	              0x5d	                                 pop rbp	       459	mbyte.c	FUNCTION_2
0x4000716	            0x415c	                                 pop r12	       459	mbyte.c	FUNCTION_2
0x4000718	              0xc3	                                     ret	       459	mbyte.c	FUNCTION_2
dbcs_off2cells	SWITCH,0:CALL,1:IF,2:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	16
0x40001fa	      0xb801000000	                              mov eax, 1	      1748	mbyte.c	FUNCTION_31	IF_1
0x40001ff	            0x39f7	                            cmp edi, esi	      1747	mbyte.c	FUNCTION_31	IF_1
0x4000201	            0x7335	                           jae 0x4000238	      1747	mbyte.c	FUNCTION_31	IF_1
0x4000203	    0x813d00000000	         cmp dword [0x0400020d], 0x26cc 	      1752	mbyte.c	FUNCTION_31	IF_2
0x400020d	            0x750f	                           jne 0x400021e	      1752	mbyte.c	FUNCTION_31	IF_2
0x400020f	            0x89f8	                            mov eax, edi	      1752	mbyte.c	FUNCTION_31	IF_2
0x4000211	    0x488b15000000	            mov rdx, qword [0x04000218] 	      1752	mbyte.c	FUNCTION_31	IF_2
0x4000218	        0x803c028e	              cmp byte [rdx + rax], 0x8e	      1752	mbyte.c	FUNCTION_31	IF_2
0x400021c	            0x7415	                            je 0x4000233	      1752	mbyte.c	FUNCTION_31	IF_2
0x400021e	            0x89ff	                            mov edi, edi	      1754	mbyte.c	FUNCTION_31	CALL_1
0x4000220	    0x488b05000000	            mov rax, qword [0x04000227] 	      1754	mbyte.c	FUNCTION_31	CALL_1
0x4000227	         0xfb60438	             movzx eax, byte [rax + rdi]	      1754	mbyte.c	FUNCTION_31	CALL_1
0x400022b	     0xfbe80000000	                   movsx eax, byte [rax]	      1754	mbyte.c	FUNCTION_31	CALL_1
0x4000232	              0xc3	                                     ret	      1754	mbyte.c	FUNCTION_31	CALL_1
0x4000233	      0xb801000000	                              mov eax, 1	      1753	mbyte.c	FUNCTION_31	IF_2
0x4000238	            0xf3c3	                                     ret	      1755	mbyte.c	FUNCTION_31
utf_printable	SWITCH,0:CALL,2:IF,0:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	8
0x4001586	            0x89fa	                            mov edx, edi	      2607	mbyte.c	FUNCTION_54
0x4001588	      0xbe90000000	                           mov esi, 0x90	      2623	mbyte.c	FUNCTION_54	CALL_2
0x400158d	      0xbf00000000	                              mov edi, 0	      2623	mbyte.c	FUNCTION_54	CALL_2
0x4001592	      0xe872ebffff	                        call sym.intable	      2623	mbyte.c	FUNCTION_54	CALL_2
0x4001597	            0x85c0	                           test eax, eax	      2623	mbyte.c	FUNCTION_54	CALL_2
0x4001599	           0xf94c0	                                 sete al	      2623	mbyte.c	FUNCTION_54	CALL_2
0x400159c	           0xfb6c0	                           movzx eax, al	      2623	mbyte.c	FUNCTION_54	CALL_2
0x400159f	              0xc3	                                     ret	      2625	mbyte.c	FUNCTION_54
im_commit_cb	SWITCH,0:CALL,11:IF,10:WHILE,0:FOR,0:DO,0:ELSE,2:functions,0	86
0x40049f6	            0x4156	                                push r14	      5165	mbyte.c	FUNCTION_110
0x40049f8	            0x4155	                                push r13	      5165	mbyte.c	FUNCTION_110
0x40049fa	            0x4154	                                push r12	      5165	mbyte.c	FUNCTION_110
0x40049fc	              0x55	                                push rbp	      5165	mbyte.c	FUNCTION_110
0x40049fd	              0x53	                                push rbx	      5165	mbyte.c	FUNCTION_110
0x40049fe	        0x4883ec10	                           sub rsp, 0x10	      5165	mbyte.c	FUNCTION_110
0x4004a02	          0x4889f5	                            mov rbp, rsi	      5165	mbyte.c	FUNCTION_110
0x4004a05	    0x64488b042528	                mov rax, qword fs:[0x28]	      5165	mbyte.c	FUNCTION_110
0x4004a0e	      0x4889442408	                mov qword [rsp + 8], rax	      5165	mbyte.c	FUNCTION_110
0x4004a13	            0x31c0	                            xor eax, eax	      5165	mbyte.c	FUNCTION_110
0x4004a15	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5166	mbyte.c	FUNCTION_110	CALL_1
0x4004a1c	          0x4889f7	                            mov rdi, rsi	      5166	mbyte.c	FUNCTION_110	CALL_1
0x4004a1f	            0xf2ae	              repne scasb al, byte [rdi]	      5166	mbyte.c	FUNCTION_110	CALL_1
0x4004a21	          0x48f7d1	                                 not rcx	      5166	mbyte.c	FUNCTION_110	CALL_1
0x4004a24	        0x488d59ff	                      lea rbx, [rcx - 1]	      5166	mbyte.c	FUNCTION_110	CALL_1
0x4004a28	        0x895c2404	                mov dword [rsp + 4], ebx	      5169	mbyte.c	FUNCTION_110
0x4004a2c	    0x41bc01000000	                             mov r12d, 1	      5170	mbyte.c	FUNCTION_110
0x4004a32	    0x48833d000000	               cmp qword [0x04004a3a], 0	      5177	mbyte.c	FUNCTION_110	IF_1
0x4004a3a	     0xf8582000000	                           jne 0x4004ac2	      5177	mbyte.c	FUNCTION_110	IF_1
0x4004a40	      0xe8e7bdffff	              call sym.im_delete_preedit	      5181	mbyte.c	FUNCTION_110	IF_1	CALL_3
0x4004a45	    0x813d00000000	     cmp dword [0x04004a4f], 0x7fffffff 	      5184	mbyte.c	FUNCTION_110	IF_1	IF_2
0x4004a4f	            0x750b	                           jne 0x4004a5c	      5184	mbyte.c	FUNCTION_110	IF_1	IF_2
0x4004a51	      0xe85ebfffff	         call sym.init_preedit_start_col	      5186	mbyte.c	FUNCTION_110	IF_1	IF_2	CALL_4
0x4004a56	    0x41bc00000000	                             mov r12d, 0	      5187	mbyte.c	FUNCTION_110	IF_1	IF_2
0x4004a5c	    0x833d00000000	               cmp dword [0x04004a63], 0	      5199	mbyte.c	FUNCTION_110	IF_1	IF_3
0x4004a63	            0x7433	                            je 0x4004a98	      5199	mbyte.c	FUNCTION_110	IF_1	IF_3
0x4004a65	      0x488d542404	                      lea rdx, [rsp + 4]	      5201	mbyte.c	FUNCTION_110	IF_1	IF_3	CALL_5
0x4004a6a	          0x4889ee	                            mov rsi, rbp	      5201	mbyte.c	FUNCTION_110	IF_1	IF_3	CALL_5
0x4004a6d	      0xbf00000000	                              mov edi, 0	      5201	mbyte.c	FUNCTION_110	IF_1	IF_3	CALL_5
0x4004a72	      0xe800000000	                          call 0x4004a77	      5201	mbyte.c	FUNCTION_110	IF_1	IF_3	CALL_5
0x4004a77	          0x4989c5	                            mov r13, rax	      5201	mbyte.c	FUNCTION_110	IF_1	IF_3	CALL_5
0x4004a7a	          0x4885c0	                           test rax, rax	      5202	mbyte.c	FUNCTION_110	IF_1	IF_3	CALL_6
0x4004a7d	            0x751c	                           jne 0x4004a9b	      5202	mbyte.c	FUNCTION_110	IF_1	IF_3	CALL_6
0x4004a7f	      0xba00000000	                              mov edx, 0	      5202	mbyte.c	FUNCTION_110	IF_1	IF_3	CALL_6
0x4004a84	      0xbe00000000	                              mov esi, 0	      5202	mbyte.c	FUNCTION_110	IF_1	IF_3	CALL_6
0x4004a89	      0xbf00000000	                              mov edi, 0	      5202	mbyte.c	FUNCTION_110	IF_1	IF_3	CALL_6
0x4004a8e	      0xe800000000	                          call 0x4004a93	      5202	mbyte.c	FUNCTION_110	IF_1	IF_3	CALL_6
0x4004a93	      0xe998000000	                           jmp 0x4004b30	      5202	mbyte.c	FUNCTION_110	IF_1	IF_3	CALL_6
0x4004a98	          0x4989ed	                            mov r13, rbp	      5205	mbyte.c	FUNCTION_110	IF_1	ELSE_1
0x4004a9b	        0x8b742404	                mov esi, dword [rsp + 4]	      5207	mbyte.c	FUNCTION_110	IF_1	CALL_7
0x4004a9f	          0x4c89ef	                            mov rdi, r13	      5207	mbyte.c	FUNCTION_110	IF_1	CALL_7
0x4004aa2	      0xe800000000	                          call 0x4004aa7	      5207	mbyte.c	FUNCTION_110	IF_1	CALL_7
0x4004aa7	          0x4189c6	                           mov r14d, eax	      5207	mbyte.c	FUNCTION_110	IF_1	CALL_7
0x4004aaa	    0x833d00000000	               cmp dword [0x04004ab1], 0	      5209	mbyte.c	FUNCTION_110	IF_1	IF_4
0x4004ab1	            0x7408	                            je 0x4004abb	      5209	mbyte.c	FUNCTION_110	IF_1	IF_4
0x4004ab3	          0x4c89ef	                            mov rdi, r13	      5210	mbyte.c	FUNCTION_110	IF_1	CALL_8
0x4004ab6	      0xe800000000	                          call 0x4004abb	      5210	mbyte.c	FUNCTION_110	IF_1	CALL_8
0x4004abb	    0x440135000000	            add dword [0x04004ac2], r14d	      5211	mbyte.c	FUNCTION_110	IF_1
0x4004ac2	    0x8b0500000000	            mov eax, dword [0x04004ac8] 	      5218	mbyte.c	FUNCTION_110	IF_5
0x4004ac8	            0x85c0	                           test eax, eax	      5218	mbyte.c	FUNCTION_110	IF_5
0x4004aca	            0x7458	                            je 0x4004b24	      5218	mbyte.c	FUNCTION_110	IF_5
0x4004acc	          0x83fb01	                              cmp ebx, 1	      5221	mbyte.c	FUNCTION_110	IF_5	IF_6
0x4004acf	            0x7514	                           jne 0x4004ae5	      5221	mbyte.c	FUNCTION_110	IF_5	IF_6
0x4004ad1	         0xfbe5500	                   movsx edx, byte [rbp]	      5221	mbyte.c	FUNCTION_110	IF_5	IF_6
0x4004ad5	            0x39d0	                            cmp eax, edx	      5221	mbyte.c	FUNCTION_110	IF_5	IF_6
0x4004ad7	            0x750c	                           jne 0x4004ae5	      5221	mbyte.c	FUNCTION_110	IF_5	IF_6
0x4004ad9	    0xc70500000000	               mov dword [0x04004ae3], 1	      5224	mbyte.c	FUNCTION_110	IF_5	IF_6
0x4004ae3	            0xeb0c	                           jmp 0x4004af1	      5224	mbyte.c	FUNCTION_110	IF_5	IF_6
0x4004ae5	    0xc70500000000	               mov dword [0x04004aef], 0	      5230	mbyte.c	FUNCTION_110	IF_5	ELSE_2
0x4004aef	            0xeb33	                           jmp 0x4004b24	      5230	mbyte.c	FUNCTION_110	IF_5	ELSE_2
0x4004af1	    0x48833d000000	               cmp qword [0x04004af9], 0	      5237	mbyte.c	FUNCTION_110	IF_8
0x4004af9	            0x7519	                           jne 0x4004b14	      5237	mbyte.c	FUNCTION_110	IF_8
0x4004afb	          0x4585e4	                         test r12d, r12d	      5242	mbyte.c	FUNCTION_110	IF_8	IF_9
0x4004afe	            0x750a	                           jne 0x4004b0a	      5242	mbyte.c	FUNCTION_110	IF_8	IF_9
0x4004b00	    0xc70500000000	     mov dword [0x04004b0a], 0x7fffffff 	      5243	mbyte.c	FUNCTION_110	IF_8	IF_9
0x4004b0a	    0xc70500000000	               mov dword [0x04004b14], 1	      5246	mbyte.c	FUNCTION_110	IF_8
0x4004b14	      0xe800000000	                          call 0x4004b19	      5249	mbyte.c	FUNCTION_110	IF_10	CALL_10
0x4004b19	            0x85c0	                           test eax, eax	      5249	mbyte.c	FUNCTION_110	IF_10	CALL_10
0x4004b1b	            0x7413	                            je 0x4004b30	      5249	mbyte.c	FUNCTION_110	IF_10	CALL_10
0x4004b1d	      0xe800000000	                          call 0x4004b22	      5250	mbyte.c	FUNCTION_110	CALL_11
0x4004b22	            0xeb0c	                           jmp 0x4004b30	      5250	mbyte.c	FUNCTION_110	CALL_11
0x4004b24	            0x89de	                            mov esi, ebx	      5235	mbyte.c	FUNCTION_110	CALL_9
0x4004b26	          0x4889ef	                            mov rdi, rbp	      5235	mbyte.c	FUNCTION_110	CALL_9
0x4004b29	      0xe89df9ffff	                call sym.im_add_to_input	      5235	mbyte.c	FUNCTION_110	CALL_9
0x4004b2e	            0xebc1	                           jmp 0x4004af1	      5235	mbyte.c	FUNCTION_110	CALL_9
0x4004b30	      0x488b442408	                mov rax, qword [rsp + 8]	      5251	mbyte.c	FUNCTION_110
0x4004b35	    0x644833042528	                xor rax, qword fs:[0x28]	      5251	mbyte.c	FUNCTION_110
0x4004b3e	            0x7405	                            je 0x4004b45	      5251	mbyte.c	FUNCTION_110
0x4004b40	      0xe800000000	                          call 0x4004b45	      5251	mbyte.c	FUNCTION_110
0x4004b45	        0x4883c410	                           add rsp, 0x10	      5251	mbyte.c	FUNCTION_110
0x4004b49	              0x5b	                                 pop rbx	      5251	mbyte.c	FUNCTION_110
0x4004b4a	              0x5d	                                 pop rbp	      5251	mbyte.c	FUNCTION_110
0x4004b4b	            0x415c	                                 pop r12	      5251	mbyte.c	FUNCTION_110
0x4004b4d	            0x415d	                                 pop r13	      5251	mbyte.c	FUNCTION_110
0x4004b4f	            0x415e	                                 pop r14	      5251	mbyte.c	FUNCTION_110
0x4004b51	              0xc3	                                     ret	      5251	mbyte.c	FUNCTION_110
convert_setup	SWITCH,0:CALL,1:IF,0:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	7
0x4003614	        0x4883ec08	                              sub rsp, 8	      6530	mbyte.c	FUNCTION_140
0x4003618	    0x41b801000000	                              mov r8d, 1	      6531	mbyte.c	FUNCTION_140	CALL_1
0x400361e	          0x4889d1	                            mov rcx, rdx	      6531	mbyte.c	FUNCTION_140	CALL_1
0x4003621	      0xba01000000	                              mov edx, 1	      6531	mbyte.c	FUNCTION_140	CALL_1
0x4003626	      0xe800000000	                          call 0x400362b	      6531	mbyte.c	FUNCTION_140	CALL_1
0x400362b	        0x4883c408	                              add rsp, 8	      6532	mbyte.c	FUNCTION_140
0x400362f	              0xc3	                                     ret	      6532	mbyte.c	FUNCTION_140
utf_ptr2cells_len	SWITCH,0:CALL,5:IF,4:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	41
0x4001657	            0x85f6	                           test esi, esi	      1669	mbyte.c	FUNCTION_25	IF_1
0x4001659	            0x7e63	                           jle 0x40016be	      1669	mbyte.c	FUNCTION_25	IF_1
0x400165b	              0x55	                                push rbp	      1665	mbyte.c	FUNCTION_25
0x400165c	              0x53	                                push rbx	      1665	mbyte.c	FUNCTION_25
0x400165d	        0x4883ec08	                              sub rsp, 8	      1665	mbyte.c	FUNCTION_25
0x4001661	           0xfb62f	                   movzx ebp, byte [rdi]	      1669	mbyte.c	FUNCTION_25	IF_1
0x4001664	      0xb801000000	                              mov eax, 1	      1682	mbyte.c	FUNCTION_25
0x4001669	          0x4084ed	                           test bpl, bpl	      1669	mbyte.c	FUNCTION_25	IF_1
0x400166c	            0x795b	                           jns 0x40016c9	      1669	mbyte.c	FUNCTION_25	IF_1
0x400166e	          0x4889fb	                            mov rbx, rdi	      1669	mbyte.c	FUNCTION_25	IF_1
0x4001671	      0xe800000000	                          call 0x4001676	      1671	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0x4001676	            0x89c1	                            mov ecx, eax	      1671	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0x4001678	        0x400fb6d5	                          movzx edx, bpl	      1671	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0x400167c	     0xfbe92000000	                   movsx edx, byte [rdx]	      1671	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0x4001683	      0xb801000000	                              mov eax, 1	      1672	mbyte.c	FUNCTION_25	IF_1	IF_2
0x4001688	            0x39d1	                            cmp ecx, edx	      1671	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0x400168a	            0x7c3d	                            jl 0x40016c9	      1671	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0x400168c	          0x4889df	                            mov rdi, rbx	      1673	mbyte.c	FUNCTION_25	IF_1	CALL_2
0x400168f	      0xe800000000	                          call 0x4001694	      1673	mbyte.c	FUNCTION_25	IF_1	CALL_2
0x4001694	            0x89c5	                            mov ebp, eax	      1673	mbyte.c	FUNCTION_25	IF_1	CALL_2
0x4001696	          0x4889df	                            mov rdi, rbx	      1675	mbyte.c	FUNCTION_25	IF_1	IF_3	CALL_3
0x4001699	      0xe800000000	                          call 0x400169e	      1675	mbyte.c	FUNCTION_25	IF_1	IF_3	CALL_3
0x400169e	            0x85ed	                           test ebp, ebp	      1675	mbyte.c	FUNCTION_25	IF_1	IF_3	CALL_3
0x40016a0	            0x7422	                            je 0x40016c4	      1675	mbyte.c	FUNCTION_25	IF_1	IF_3	CALL_3
0x40016a2	          0x83f801	                              cmp eax, 1	      1675	mbyte.c	FUNCTION_25	IF_1	IF_3	CALL_3
0x40016a5	            0x741d	                            je 0x40016c4	      1675	mbyte.c	FUNCTION_25	IF_1	IF_3	CALL_3
0x40016a7	          0x83fd7f	                           cmp ebp, 0x7f	      1678	mbyte.c	FUNCTION_25	IF_1	IF_4
0x40016aa	            0x7f09	                            jg 0x40016b5	      1678	mbyte.c	FUNCTION_25	IF_1	IF_4
0x40016ac	            0x89ef	                            mov edi, ebp	      1679	mbyte.c	FUNCTION_25	IF_1	CALL_4
0x40016ae	      0xe800000000	                          call 0x40016b3	      1679	mbyte.c	FUNCTION_25	IF_1	CALL_4
0x40016b3	            0xeb14	                           jmp 0x40016c9	      1679	mbyte.c	FUNCTION_25	IF_1	CALL_4
0x40016b5	            0x89ef	                            mov edi, ebp	      1680	mbyte.c	FUNCTION_25	IF_1	CALL_5
0x40016b7	      0xe800000000	                          call 0x40016bc	      1680	mbyte.c	FUNCTION_25	IF_1	CALL_5
0x40016bc	            0xeb0b	                           jmp 0x40016c9	      1680	mbyte.c	FUNCTION_25	IF_1	CALL_5
0x40016be	      0xb801000000	                              mov eax, 1	      1682	mbyte.c	FUNCTION_25
0x40016c3	              0xc3	                                     ret	      1683	mbyte.c	FUNCTION_25
0x40016c4	      0xb804000000	                              mov eax, 4	      1676	mbyte.c	FUNCTION_25	IF_1	IF_3
0x40016c9	        0x4883c408	                              add rsp, 8	      1683	mbyte.c	FUNCTION_25
0x40016cd	              0x5b	                                 pop rbx	      1683	mbyte.c	FUNCTION_25
0x40016ce	              0x5d	                                 pop rbp	      1683	mbyte.c	FUNCTION_25
0x40016cf	              0xc3	                                     ret	      1683	mbyte.c	FUNCTION_25
my_iconv_open	SWITCH,0:CALL,6:IF,4:WHILE,0:FOR,0:DO,0:ELSE,1:functions,0	51
0x4002933	              0x55	                                push rbp	      4530	mbyte.c	FUNCTION_91
0x4002934	              0x53	                                push rbx	      4530	mbyte.c	FUNCTION_91
0x4002935	    0x4881ecb80100	                          sub rsp, 0x1b8	      4530	mbyte.c	FUNCTION_91
0x400293c	    0x64488b042528	                mov rax, qword fs:[0x28]	      4530	mbyte.c	FUNCTION_91
0x4002945	    0x48898424a801	            mov qword [rsp + 0x1a8], rax	      4530	mbyte.c	FUNCTION_91
0x400294d	            0x31c0	                            xor eax, eax	      4530	mbyte.c	FUNCTION_91
0x400294f	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      4539	mbyte.c	FUNCTION_91	IF_1
0x4002956	    0x833d00000000	               cmp dword [0x0400295d], 0	      4538	mbyte.c	FUNCTION_91	IF_1
0x400295d	     0xf8497000000	                            je 0x40029fa	      4538	mbyte.c	FUNCTION_91	IF_1
0x4002963	          0x4889fb	                            mov rbx, rdi	      4538	mbyte.c	FUNCTION_91	IF_1
0x4002966	          0x4889f7	                            mov rdi, rsi	      4547	mbyte.c	FUNCTION_91	CALL_4
0x4002969	      0xe800000000	                          call 0x400296e	      4547	mbyte.c	FUNCTION_91	CALL_4
0x400296e	          0x4889c5	                            mov rbp, rax	      4547	mbyte.c	FUNCTION_91	CALL_4
0x4002971	          0x4889df	                            mov rdi, rbx	      4547	mbyte.c	FUNCTION_91	CALL_4
0x4002974	      0xe800000000	                          call 0x4002979	      4547	mbyte.c	FUNCTION_91	CALL_4
0x4002979	          0x4889ee	                            mov rsi, rbp	      4547	mbyte.c	FUNCTION_91	CALL_4
0x400297c	          0x4889c7	                            mov rdi, rax	      4547	mbyte.c	FUNCTION_91	CALL_4
0x400297f	      0xe800000000	                          call 0x4002984	      4547	mbyte.c	FUNCTION_91	CALL_4
0x4002984	          0x4889c3	                            mov rbx, rax	      4547	mbyte.c	FUNCTION_91	CALL_4
0x4002987	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      4547	mbyte.c	FUNCTION_91	CALL_4
0x400298e	          0x4839c3	                            cmp rbx, rax	      4549	mbyte.c	FUNCTION_91	IF_3
0x4002991	            0x7467	                            je 0x40029fa	      4549	mbyte.c	FUNCTION_91	IF_3
0x4002993	          0x4889d8	                            mov rax, rbx	      4547	mbyte.c	FUNCTION_91	CALL_4
0x4002996	    0x833d00000000	cmp dword [0x0400299d], 0xffffffffffffffff	      4549	mbyte.c	FUNCTION_91	IF_3
0x400299d	            0x755b	                           jne 0x40029fa	      4549	mbyte.c	FUNCTION_91	IF_3
0x400299f	      0x488d442410	                   lea rax, [rsp + 0x10]	      4558	mbyte.c	FUNCTION_91	IF_3
0x40029a4	        0x48890424	                    mov qword [rsp], rax	      4558	mbyte.c	FUNCTION_91	IF_3
0x40029a8	    0x48c744240890	              mov qword [rsp + 8], 0x190	      4559	mbyte.c	FUNCTION_91	IF_3
0x40029b1	      0x4c8d442408	                       lea r8, [rsp + 8]	      4560	mbyte.c	FUNCTION_91	IF_3	CALL_5
0x40029b6	          0x4889e1	                            mov rcx, rsp	      4560	mbyte.c	FUNCTION_91	IF_3	CALL_5
0x40029b9	      0xba00000000	                              mov edx, 0	      4560	mbyte.c	FUNCTION_91	IF_3	CALL_5
0x40029be	      0xbe00000000	                              mov esi, 0	      4560	mbyte.c	FUNCTION_91	IF_3	CALL_5
0x40029c3	          0x4889df	                            mov rdi, rbx	      4560	mbyte.c	FUNCTION_91	IF_3	CALL_5
0x40029c6	      0xe800000000	                          call 0x40029cb	      4560	mbyte.c	FUNCTION_91	IF_3	CALL_5
0x40029cb	      0x48833c2400	                      cmp qword [rsp], 0	      4561	mbyte.c	FUNCTION_91	IF_3	IF_4
0x40029d0	            0x751b	                           jne 0x40029ed	      4561	mbyte.c	FUNCTION_91	IF_3	IF_4
0x40029d2	    0xc70500000000	               mov dword [0x040029dc], 0	      4563	mbyte.c	FUNCTION_91	IF_3	IF_4
0x40029dc	          0x4889df	                            mov rdi, rbx	      4564	mbyte.c	FUNCTION_91	IF_3	IF_4	CALL_6
0x40029df	      0xe800000000	                          call 0x40029e4	      4564	mbyte.c	FUNCTION_91	IF_3	IF_4	CALL_6
0x40029e4	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      4565	mbyte.c	FUNCTION_91	IF_3	IF_4
0x40029eb	            0xeb0d	                           jmp 0x40029fa	      4565	mbyte.c	FUNCTION_91	IF_3	IF_4
0x40029ed	    0xc70500000000	               mov dword [0x040029f7], 1	      4568	mbyte.c	FUNCTION_91	IF_3	ELSE_1
0x40029f7	          0x4889d8	                            mov rax, rbx	      4547	mbyte.c	FUNCTION_91	CALL_4
0x40029fa	    0x488b9424a801	           mov rdx, qword [rsp + 0x1a8] 	      4572	mbyte.c	FUNCTION_91
0x4002a02	    0x644833142528	                xor rdx, qword fs:[0x28]	      4572	mbyte.c	FUNCTION_91
0x4002a0b	            0x7405	                            je 0x4002a12	      4572	mbyte.c	FUNCTION_91
0x4002a0d	      0xe800000000	                          call 0x4002a12	      4572	mbyte.c	FUNCTION_91
0x4002a12	    0x4881c4b80100	                          add rsp, 0x1b8	      4572	mbyte.c	FUNCTION_91
0x4002a19	              0x5b	                                 pop rbx	      4572	mbyte.c	FUNCTION_91
0x4002a1a	              0x5d	                                 pop rbp	      4572	mbyte.c	FUNCTION_91
0x4002a1b	              0xc3	                                     ret	      4572	mbyte.c	FUNCTION_91
mb_tail_off	SWITCH,0:CALL,2:IF,5:WHILE,0:FOR,2:DO,0:ELSE,0:functions,0	68
0x4001f78	           0xfb60e	                   movzx ecx, byte [rsi]	      3935	mbyte.c	FUNCTION_73	IF_1
0x4001f7b	      0xb800000000	                              mov eax, 0	      3936	mbyte.c	FUNCTION_73	IF_1
0x4001f80	            0x84c9	                             test cl, cl	      3935	mbyte.c	FUNCTION_73	IF_1
0x4001f82	     0xf84cb000000	                            je 0x4002053	      3935	mbyte.c	FUNCTION_73	IF_1
0x4001f88	    0x8b1500000000	            mov edx, dword [0x04001f8e] 	      3938	mbyte.c	FUNCTION_73	IF_2
0x4001f8e	            0x85d2	                           test edx, edx	      3938	mbyte.c	FUNCTION_73	IF_2
0x4001f90	     0xf8491000000	                            je 0x4002027	      3938	mbyte.c	FUNCTION_73	IF_2
0x4001f96	         0xfb64601	               movzx eax, byte [rsi + 1]	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4001f9a	          0x83e0c0	                     and eax, 0xffffffc0	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4001f9d	            0x3c80	                            cmp al, 0x80	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4001f9f	            0x751a	                           jne 0x4001fbb	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4001fa1	      0xb800000000	                              mov eax, 0	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4001fa6	          0x83c001	                              add eax, 1	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4001fa9	          0x4863d0	                         movsxd rdx, eax	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4001fac	       0xfb6541601	        movzx edx, byte [rsi + rdx + 1] 	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4001fb1	          0x83e2c0	                     and edx, 0xffffffc0	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4001fb4	          0x80fa80	                            cmp dl, 0x80	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4001fb7	            0x74ed	                            je 0x4001fa6	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4001fb9	            0xeb05	                           jmp 0x4001fc0	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4001fbb	      0xb800000000	                              mov eax, 0	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4001fc0	          0x4839fe	                            cmp rsi, rdi	      3944	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x4001fc3	            0x7635	                           jbe 0x4001ffa	      3944	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x4001fc5	          0x83e1c0	                     and ecx, 0xffffffc0	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4001fc8	          0x80f980	                            cmp cl, 0x80	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4001fcb	            0x7534	                           jne 0x4002001	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4001fcd	      0xba00000000	                              mov edx, 0	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4001fd2	            0xeb13	                           jmp 0x4001fe7	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4001fd4	            0x89d1	                            mov ecx, edx	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4001fd6	            0xf7d9	                                 neg ecx	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4001fd8	          0x4863c9	                         movsxd rcx, ecx	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4001fdb	         0xfb60c0e	             movzx ecx, byte [rsi + rcx]	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4001fdf	          0x83e1c0	                     and ecx, 0xffffffc0	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4001fe2	          0x80f980	                            cmp cl, 0x80	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4001fe5	            0x751f	                           jne 0x4002006	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4001fe7	          0x83c201	                              add edx, 1	      3944	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x4001fea	          0x4863ca	                         movsxd rcx, edx	      3944	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x4001fed	          0x4989f0	                             mov r8, rsi	      3944	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x4001ff0	          0x4929c8	                             sub r8, rcx	      3944	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x4001ff3	          0x4c39c7	                             cmp rdi, r8	      3944	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x4001ff6	            0x72dc	                            jb 0x4001fd4	      3944	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x4001ff8	            0xeb0c	                           jmp 0x4002006	      3944	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x4001ffa	      0xba00000000	                              mov edx, 0	      3944	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x4001fff	            0xeb05	                           jmp 0x4002006	      3944	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x4002001	      0xba00000000	                              mov edx, 0	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4002006	            0x89d1	                            mov ecx, edx	      3947	mbyte.c	FUNCTION_73	IF_2	IF_4
0x4002008	            0xf7d9	                                 neg ecx	      3947	mbyte.c	FUNCTION_73	IF_2	IF_4
0x400200a	          0x4863c9	                         movsxd rcx, ecx	      3947	mbyte.c	FUNCTION_73	IF_2	IF_4
0x400200d	         0xfb60c0e	             movzx ecx, byte [rsi + rcx]	      3947	mbyte.c	FUNCTION_73	IF_2	IF_4
0x4002011	     0xfbe89000000	                   movsx ecx, byte [rcx]	      3947	mbyte.c	FUNCTION_73	IF_2	IF_4
0x4002018	        0x8d541001	                lea edx, [rax + rdx + 1]	      3947	mbyte.c	FUNCTION_73	IF_2	IF_4
0x400201c	            0x39d1	                            cmp ecx, edx	      3947	mbyte.c	FUNCTION_73	IF_2	IF_4
0x400201e	      0xba00000000	                              mov edx, 0	      3947	mbyte.c	FUNCTION_73	IF_2	IF_4
0x4002023	           0xf45c2	                         cmovne eax, edx	      3947	mbyte.c	FUNCTION_73	IF_2	IF_4
0x4002026	              0xc3	                                     ret	      3947	mbyte.c	FUNCTION_73	IF_2	IF_4
0x4002027	    0x8b0500000000	            mov eax, dword [0x0400202d] 	      3954	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x400202d	            0x85c0	                           test eax, eax	      3954	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x400202f	            0x7422	                            je 0x4002053	      3954	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x4002031	            0x89d0	                            mov eax, edx	      3955	mbyte.c	FUNCTION_73	IF_5
0x4002033	        0x807e0100	                   cmp byte [rsi + 1], 0	      3954	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x4002037	            0x741a	                            je 0x4002053	      3954	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x4002039	           0xfb6c9	                           movzx ecx, cl	      3954	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x400203c	    0x80b900000000	                       cmp byte [rcx], 1	      3954	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x4002043	            0x740e	                            je 0x4002053	      3954	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x4002045	      0xe800000000	                          call 0x400204a	      3958	mbyte.c	FUNCTION_73	CALL_2
0x400204a	            0x89c2	                            mov edx, eax	      3958	mbyte.c	FUNCTION_73	CALL_2
0x400204c	      0xb801000000	                              mov eax, 1	      3958	mbyte.c	FUNCTION_73	CALL_2
0x4002051	            0x29d0	                            sub eax, edx	      3958	mbyte.c	FUNCTION_73	CALL_2
0x4002053	            0xf3c3	                                     ret	      3959	mbyte.c	FUNCTION_73
intable	SWITCH,0:CALL,0:IF,3:WHILE,1:FOR,0:DO,0:ELSE,2:functions,0	31
0x4000109	          0x4863d2	                         movsxd rdx, edx	      1192	mbyte.c	FUNCTION_18	IF_1
0x400010c	      0xb800000000	                              mov eax, 0	      1193	mbyte.c	FUNCTION_18	IF_1
0x4000111	          0x483b17	                    cmp rdx, qword [rdi]	      1192	mbyte.c	FUNCTION_18	IF_1
0x4000114	            0x7c50	                            jl 0x4000166	      1192	mbyte.c	FUNCTION_18	IF_1
0x4000116	        0x48c1ee04	                              shr rsi, 4	      1197	mbyte.c	FUNCTION_18
0x400011a	          0x83ee01	                              sub esi, 1	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x400011d	            0x783c	                            js 0x400015b	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x400011f	    0x41b800000000	                              mov r8d, 0	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4000125	        0x418d0430	                     lea eax, [r8 + rsi]	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x4000129	            0x89c1	                            mov ecx, eax	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x400012b	          0xc1e91f	                           shr ecx, 0x1f	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x400012e	             0x1c8	                            add eax, ecx	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x4000130	            0xd1f8	                              sar eax, 1	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x4000132	          0x4863c8	                         movsxd rcx, eax	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4000135	        0x48c1e104	                              shl rcx, 4	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4000139	          0x4801f9	                            add rcx, rdi	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x400013c	        0x483b5108	                cmp rdx, qword [rcx + 8]	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4000140	            0x7e06	                           jle 0x4000148	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4000142	        0x448d4001	                      lea r8d, [rax + 1]	      1202	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4000146	            0xeb08	                           jmp 0x4000150	      1202	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4000148	          0x483b11	                    cmp rdx, qword [rcx]	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x400014b	            0x7d14	                           jge 0x4000161	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x400014d	          0x8d70ff	                      lea esi, [rax - 1]	      1204	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4000150	          0x4439c6	                            cmp esi, r8d	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4000153	            0x7dd0	                           jge 0x4000125	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4000155	      0xb800000000	                              mov eax, 0	      1208	mbyte.c	FUNCTION_18	ELSE_2
0x400015a	              0xc3	                                     ret	      1208	mbyte.c	FUNCTION_18	ELSE_2
0x400015b	      0xb800000000	                              mov eax, 0	      1208	mbyte.c	FUNCTION_18	ELSE_2
0x4000160	              0xc3	                                     ret	      1208	mbyte.c	FUNCTION_18	ELSE_2
0x4000161	      0xb801000000	                              mov eax, 1	      1206	mbyte.c	FUNCTION_18	WHILE_1	ELSE_2
0x4000166	            0xf3c3	                                     ret	      1209	mbyte.c	FUNCTION_18	ELSE_2
enc_canonize	SWITCH,0:CALL,20:IF,11:WHILE,0:FOR,1:DO,0:ELSE,2:functions,0	188
0x40024c5	            0x4155	                                push r13	      4301	mbyte.c	FUNCTION_86
0x40024c7	            0x4154	                                push r12	      4301	mbyte.c	FUNCTION_86
0x40024c9	              0x55	                                push rbp	      4301	mbyte.c	FUNCTION_86
0x40024ca	              0x53	                                push rbx	      4301	mbyte.c	FUNCTION_86
0x40024cb	        0x4883ec08	                              sub rsp, 8	      4301	mbyte.c	FUNCTION_86
0x40024cf	          0x4889fb	                            mov rbx, rdi	      4301	mbyte.c	FUNCTION_86
0x40024d2	      0xbf00000000	                              mov edi, 0	      4307	mbyte.c	FUNCTION_86	IF_1	CALL_1
0x40024d7	      0xb908000000	                              mov ecx, 8	      4307	mbyte.c	FUNCTION_86	IF_1	CALL_1
0x40024dc	          0x4889de	                            mov rsi, rbx	      4307	mbyte.c	FUNCTION_86	IF_1	CALL_1
0x40024df	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4307	mbyte.c	FUNCTION_86	IF_1	CALL_1
0x40024e1	           0xf97c2	                                 seta dl	      4307	mbyte.c	FUNCTION_86	IF_1	CALL_1
0x40024e4	           0xf92c0	                                 setb al	      4307	mbyte.c	FUNCTION_86	IF_1	CALL_1
0x40024e7	            0x38c2	                              cmp dl, al	      4307	mbyte.c	FUNCTION_86	IF_1	CALL_1
0x40024e9	            0x751e	                           jne 0x4002509	      4307	mbyte.c	FUNCTION_86	IF_1	CALL_1
0x40024eb	      0xe800000000	                          call 0x40024f0	      4310	mbyte.c	FUNCTION_86	IF_1	CALL_2
0x40024f0	          0x4885c0	                           test rax, rax	      4312	mbyte.c	FUNCTION_86	IF_1	IF_2
0x40024f3	      0xba00000000	                              mov edx, 0	      4312	mbyte.c	FUNCTION_86	IF_1	IF_2
0x40024f8	        0x480f44c2	                          cmove rax, rdx	      4312	mbyte.c	FUNCTION_86	IF_1	IF_2
0x40024fc	          0x4889c7	                            mov rdi, rax	      4313	mbyte.c	FUNCTION_86	IF_1	CALL_3
0x40024ff	      0xe800000000	                          call 0x4002504	      4313	mbyte.c	FUNCTION_86	IF_1	CALL_3
0x4002504	      0xe940020000	                           jmp 0x4002749	      4313	mbyte.c	FUNCTION_86	IF_1	CALL_3
0x4002509	      0xb800000000	                              mov eax, 0	      4318	mbyte.c	FUNCTION_86	CALL_5
0x400250e	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4318	mbyte.c	FUNCTION_86	CALL_5
0x4002515	          0x4889df	                            mov rdi, rbx	      4318	mbyte.c	FUNCTION_86	CALL_5
0x4002518	            0xf2ae	              repne scasb al, byte [rdi]	      4318	mbyte.c	FUNCTION_86	CALL_5
0x400251a	          0x48f7d1	                                 not rcx	      4318	mbyte.c	FUNCTION_86	CALL_5
0x400251d	          0x8d7902	                      lea edi, [rcx + 2]	      4318	mbyte.c	FUNCTION_86	CALL_5
0x4002520	      0xe800000000	                          call 0x4002525	      4318	mbyte.c	FUNCTION_86	CALL_5
0x4002525	          0x4889c5	                            mov rbp, rax	      4318	mbyte.c	FUNCTION_86	CALL_5
0x4002528	          0x4885c0	                           test rax, rax	      4319	mbyte.c	FUNCTION_86	IF_3
0x400252b	     0xf84fc010000	                            je 0x400272d	      4319	mbyte.c	FUNCTION_86	IF_3
0x4002531	           0xfb603	                   movzx eax, byte [rbx]	      4323	mbyte.c	FUNCTION_86	IF_3	FOR_1
0x4002534	            0x84c0	                             test al, al	      4323	mbyte.c	FUNCTION_86	IF_3	FOR_1
0x4002536	            0x7435	                            je 0x400256d	      4323	mbyte.c	FUNCTION_86	IF_3	FOR_1
0x4002538	        0x488d5501	                      lea rdx, [rbp + 1]	      4323	mbyte.c	FUNCTION_86	IF_3	FOR_1
0x400253c	            0x3c5f	                            cmp al, 0x5f	      4325	mbyte.c	FUNCTION_86	IF_3	FOR_1	IF_4
0x400253e	            0x7509	                           jne 0x4002549	      4325	mbyte.c	FUNCTION_86	IF_3	FOR_1	IF_4
0x4002540	          0x4889d7	                            mov rdi, rdx	      4326	mbyte.c	FUNCTION_86	IF_3	FOR_1	IF_4
0x4002543	        0xc642ff2d	                mov byte [rdx - 1], 0x2d	      4326	mbyte.c	FUNCTION_86	IF_3	FOR_1	IF_4
0x4002547	            0xeb13	                           jmp 0x400255c	      4326	mbyte.c	FUNCTION_86	IF_3	FOR_1	IF_4
0x4002549	          0x4889d7	                            mov rdi, rdx	      4328	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x400254c	          0x8d70bf	                   lea esi, [rax - 0x41]	      4328	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x400254f	          0x8d4820	                   lea ecx, [rax + 0x20]	      4328	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x4002552	        0x4080fe19	                           cmp sil, 0x19	      4328	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x4002556	           0xf46c1	                         cmovbe eax, ecx	      4328	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x4002559	          0x8842ff	                  mov byte [rdx - 1], al	      4328	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x400255c	        0x4883c301	                              add rbx, 1	      4323	mbyte.c	FUNCTION_86	IF_3	FOR_1
0x4002560	           0xfb603	                   movzx eax, byte [rbx]	      4323	mbyte.c	FUNCTION_86	IF_3	FOR_1
0x4002563	        0x4883c201	                              add rdx, 1	      4323	mbyte.c	FUNCTION_86	IF_3	FOR_1
0x4002567	            0x84c0	                             test al, al	      4323	mbyte.c	FUNCTION_86	IF_3	FOR_1
0x4002569	            0x75d1	                           jne 0x400253c	      4323	mbyte.c	FUNCTION_86	IF_3	FOR_1
0x400256b	            0xeb03	                           jmp 0x4002570	      4323	mbyte.c	FUNCTION_86	IF_3	FOR_1
0x400256d	          0x4889ef	                            mov rdi, rbp	      4323	mbyte.c	FUNCTION_86	IF_3	FOR_1
0x4002570	          0xc60700	                       mov byte [rdi], 0	      4330	mbyte.c	FUNCTION_86	IF_3
0x4002573	          0x4889ef	                            mov rdi, rbp	      4333	mbyte.c	FUNCTION_86	IF_3	CALL_7
0x4002576	      0xe800000000	                          call 0x400257b	      4333	mbyte.c	FUNCTION_86	IF_3	CALL_7
0x400257b	          0x4889c3	                            mov rbx, rax	      4333	mbyte.c	FUNCTION_86	IF_3	CALL_7
0x400257e	      0xbf00000000	                              mov edi, 0	      4336	mbyte.c	FUNCTION_86	IF_3	IF_5	CALL_8
0x4002583	      0xb90c000000	                            mov ecx, 0xc	      4336	mbyte.c	FUNCTION_86	IF_3	IF_5	CALL_8
0x4002588	          0x4889c6	                            mov rsi, rax	      4336	mbyte.c	FUNCTION_86	IF_3	IF_5	CALL_8
0x400258b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4336	mbyte.c	FUNCTION_86	IF_3	IF_5	CALL_8
0x400258d	           0xf97c2	                                 seta dl	      4336	mbyte.c	FUNCTION_86	IF_3	IF_5	CALL_8
0x4002590	           0xf92c0	                                 setb al	      4336	mbyte.c	FUNCTION_86	IF_3	IF_5	CALL_8
0x4002593	            0x38c2	                              cmp dl, al	      4336	mbyte.c	FUNCTION_86	IF_3	IF_5	CALL_8
0x4002595	            0x7523	                           jne 0x40025ba	      4336	mbyte.c	FUNCTION_86	IF_3	IF_5	CALL_8
0x4002597	        0x488d730a	                    lea rsi, [rbx + 0xa]	      4337	mbyte.c	FUNCTION_86	IF_3	CALL_9
0x400259b	      0xb800000000	                              mov eax, 0	      4337	mbyte.c	FUNCTION_86	IF_3	CALL_9
0x40025a0	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4337	mbyte.c	FUNCTION_86	IF_3	CALL_9
0x40025a7	          0x4889f7	                            mov rdi, rsi	      4337	mbyte.c	FUNCTION_86	IF_3	CALL_9
0x40025aa	            0xf2ae	              repne scasb al, byte [rdi]	      4337	mbyte.c	FUNCTION_86	IF_3	CALL_9
0x40025ac	          0x48f7d1	                                 not rcx	      4337	mbyte.c	FUNCTION_86	IF_3	CALL_9
0x40025af	          0x4889ca	                            mov rdx, rcx	      4337	mbyte.c	FUNCTION_86	IF_3	CALL_9
0x40025b2	          0x4889df	                            mov rdi, rbx	        59	string3.h	FUNCTION_147	CALL_3
0x40025b5	      0xe800000000	                          call 0x40025ba	        59	string3.h	FUNCTION_147	CALL_3
0x40025ba	      0xbf00000000	                              mov edi, 0	      4340	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_10
0x40025bf	      0xb907000000	                              mov ecx, 7	      4340	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_10
0x40025c4	          0x4889de	                            mov rsi, rbx	      4340	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_10
0x40025c7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4340	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_10
0x40025c9	           0xf97c2	                                 seta dl	      4340	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_10
0x40025cc	           0xf92c0	                                 setb al	      4340	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_10
0x40025cf	            0x38c2	                              cmp dl, al	      4340	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_10
0x40025d1	            0x7528	                           jne 0x40025fb	      4340	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_10
0x40025d3	        0x488d7303	                      lea rsi, [rbx + 3]	      4342	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_11
0x40025d7	      0xb800000000	                              mov eax, 0	      4342	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_11
0x40025dc	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4342	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_11
0x40025e3	          0x4889f7	                            mov rdi, rsi	      4342	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_11
0x40025e6	            0xf2ae	              repne scasb al, byte [rdi]	      4342	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_11
0x40025e8	          0x48f7d1	                                 not rcx	      4342	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_11
0x40025eb	          0x4889ca	                            mov rdx, rcx	      4342	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_11
0x40025ee	        0x488d7b04	                      lea rdi, [rbx + 4]	        59	string3.h	FUNCTION_147	CALL_3
0x40025f2	      0xe800000000	                          call 0x40025f7	        59	string3.h	FUNCTION_147	CALL_3
0x40025f7	        0xc643032d	                mov byte [rbx + 3], 0x2d	      4343	mbyte.c	FUNCTION_86	IF_3	IF_6
0x40025fb	      0xbf00000000	                              mov edi, 0	      4347	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x4002600	      0xb908000000	                              mov ecx, 8	      4347	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x4002605	          0x4889de	                            mov rsi, rbx	      4347	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x4002608	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4347	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x400260a	           0xf97c2	                                 seta dl	      4347	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x400260d	           0xf92c0	                                 setb al	      4347	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x4002610	            0x38c2	                              cmp dl, al	      4347	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x4002612	            0x752e	                           jne 0x4002642	      4347	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x4002614	        0x807b082d	                cmp byte [rbx + 8], 0x2d	      4347	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x4002618	            0x7428	                            je 0x4002642	      4347	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x400261a	        0x488d7308	                      lea rsi, [rbx + 8]	      4349	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_13
0x400261e	      0xb800000000	                              mov eax, 0	      4349	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_13
0x4002623	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4349	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_13
0x400262a	          0x4889f7	                            mov rdi, rsi	      4349	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_13
0x400262d	            0xf2ae	              repne scasb al, byte [rdi]	      4349	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_13
0x400262f	          0x48f7d1	                                 not rcx	      4349	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_13
0x4002632	          0x4889ca	                            mov rdx, rcx	      4349	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_13
0x4002635	        0x488d7b09	                      lea rdi, [rbx + 9]	        59	string3.h	FUNCTION_147	CALL_3
0x4002639	      0xe800000000	                          call 0x400263e	        59	string3.h	FUNCTION_147	CALL_3
0x400263e	        0xc643082d	                mov byte [rbx + 8], 0x2d	      4350	mbyte.c	FUNCTION_86	IF_3	IF_7
0x4002642	      0xbf00000000	                              mov edi, 0	      4354	mbyte.c	FUNCTION_86	IF_3	IF_8	CALL_14
0x4002647	      0xb906000000	                              mov ecx, 6	      4354	mbyte.c	FUNCTION_86	IF_3	IF_8	CALL_14
0x400264c	          0x4889de	                            mov rsi, rbx	      4354	mbyte.c	FUNCTION_86	IF_3	IF_8	CALL_14
0x400264f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4354	mbyte.c	FUNCTION_86	IF_3	IF_8	CALL_14
0x4002651	           0xf97c2	                                 seta dl	      4354	mbyte.c	FUNCTION_86	IF_3	IF_8	CALL_14
0x4002654	           0xf92c0	                                 setb al	      4354	mbyte.c	FUNCTION_86	IF_3	IF_8	CALL_14
0x4002657	            0x38c2	                              cmp dl, al	      4354	mbyte.c	FUNCTION_86	IF_3	IF_8	CALL_14
0x4002659	     0xf85d5000000	                           jne 0x4002734	      4354	mbyte.c	FUNCTION_86	IF_3	IF_8	CALL_14
0x400265f	        0x488d7306	                      lea rsi, [rbx + 6]	      4355	mbyte.c	FUNCTION_86	IF_3	CALL_15
0x4002663	      0xb800000000	                              mov eax, 0	      4355	mbyte.c	FUNCTION_86	IF_3	CALL_15
0x4002668	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4355	mbyte.c	FUNCTION_86	IF_3	CALL_15
0x400266f	          0x4889f7	                            mov rdi, rsi	      4355	mbyte.c	FUNCTION_86	IF_3	CALL_15
0x4002672	            0xf2ae	              repne scasb al, byte [rdi]	      4355	mbyte.c	FUNCTION_86	IF_3	CALL_15
0x4002674	          0x48f7d1	                                 not rcx	      4355	mbyte.c	FUNCTION_86	IF_3	CALL_15
0x4002677	          0x4889ca	                            mov rdx, rcx	      4355	mbyte.c	FUNCTION_86	IF_3	CALL_15
0x400267a	        0x488d7b05	                      lea rdi, [rbx + 5]	        59	string3.h	FUNCTION_147	CALL_3
0x400267e	      0xe800000000	                          call 0x4002683	        59	string3.h	FUNCTION_147	CALL_3
0x4002683	          0x4889df	                            mov rdi, rbx	      4357	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_16
0x4002686	      0xe850e0ffff	               call sym.enc_canon_search	      4357	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_16
0x400268b	            0x85c0	                           test eax, eax	      4357	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_16
0x400268d	            0x7836	                            js 0x40026c5	      4357	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_16
0x400268f	          0x4889e8	                            mov rax, rbp	      4318	mbyte.c	FUNCTION_86	CALL_5
0x4002692	          0x4839dd	                            cmp rbp, rbx	      4360	mbyte.c	FUNCTION_86	IF_3	IF_9	IF_10
0x4002695	     0xf84ae000000	                            je 0x4002749	      4360	mbyte.c	FUNCTION_86	IF_3	IF_9	IF_10
0x400269b	      0xb800000000	                              mov eax, 0	      4361	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_17
0x40026a0	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4361	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_17
0x40026a7	          0x4889df	                            mov rdi, rbx	      4361	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_17
0x40026aa	            0xf2ae	              repne scasb al, byte [rdi]	      4361	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_17
0x40026ac	          0x48f7d1	                                 not rcx	      4361	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_17
0x40026af	          0x4889ca	                            mov rdx, rcx	      4361	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_17
0x40026b2	          0x4889de	                            mov rsi, rbx	        59	string3.h	FUNCTION_147	CALL_3
0x40026b5	          0x4889ef	                            mov rdi, rbp	        59	string3.h	FUNCTION_147	CALL_3
0x40026b8	      0xe800000000	                          call 0x40026bd	        59	string3.h	FUNCTION_147	CALL_3
0x40026bd	          0x4889e8	                            mov rax, rbp	      4318	mbyte.c	FUNCTION_86	CALL_5
0x40026c0	      0xe984000000	                           jmp 0x4002749	      4318	mbyte.c	FUNCTION_86	CALL_5
0x40026c5	    0x41bc00000000	                             mov r12d, 0	      4318	mbyte.c	FUNCTION_86	CALL_5
0x40026cb	    0x41bd00000000	                             mov r13d, 0	      4323	mbyte.c	FUNCTION_86	IF_3	FOR_1
0x40026d1	      0xbe00000000	                              mov esi, 0	      4323	mbyte.c	FUNCTION_86	IF_3	FOR_1
0x40026d6	          0x4889df	                            mov rdi, rbx	      4383	mbyte.c	FUNCTION_87	FOR_1	IF_1	CALL_1
0x40026d9	      0xe800000000	                          call 0x40026de	      4383	mbyte.c	FUNCTION_87	FOR_1	IF_1	CALL_1
0x40026de	            0x85c0	                           test eax, eax	      4383	mbyte.c	FUNCTION_87	FOR_1	IF_1	CALL_1
0x40026e0	            0x7517	                           jne 0x40026f9	      4383	mbyte.c	FUNCTION_87	FOR_1	IF_1	CALL_1
0x40026e2	          0x4d63ed	                        movsxd r13, r13d	      4384	mbyte.c	FUNCTION_87	FOR_1	IF_1
0x40026e5	        0x49c1e504	                              shl r13, 4	      4384	mbyte.c	FUNCTION_87	FOR_1	IF_1
0x40026e9	    0x418b9d000000	                    mov ebx, dword [r13]	      4384	mbyte.c	FUNCTION_87	FOR_1	IF_1
0x40026f0	            0x85db	                           test ebx, ebx	      4363	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_18
0x40026f2	            0x791c	                           jns 0x4002710	      4363	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_18
0x40026f4	          0x4889e8	                            mov rax, rbp	      4318	mbyte.c	FUNCTION_86	CALL_5
0x40026f7	            0xeb50	                           jmp 0x4002749	      4318	mbyte.c	FUNCTION_86	CALL_5
0x40026f9	        0x4183c501	                             add r13d, 1	      4382	mbyte.c	FUNCTION_87	FOR_1
0x40026fd	        0x4983c410	                           add r12, 0x10	      4382	mbyte.c	FUNCTION_87	FOR_1
0x4002701	      0x498b7424f0	             mov rsi, qword [r12 - 0x10]	      4382	mbyte.c	FUNCTION_87	FOR_1
0x4002706	          0x4885f6	                           test rsi, rsi	      4382	mbyte.c	FUNCTION_87	FOR_1
0x4002709	            0x75cb	                           jne 0x40026d6	      4382	mbyte.c	FUNCTION_87	FOR_1
0x400270b	          0x4889e8	                            mov rax, rbp	      4318	mbyte.c	FUNCTION_86	CALL_5
0x400270e	            0xeb39	                           jmp 0x4002749	      4318	mbyte.c	FUNCTION_86	CALL_5
0x4002710	          0x4889ef	                            mov rdi, rbp	      4366	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_19
0x4002713	      0xe800000000	                          call 0x4002718	      4366	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_19
0x4002718	          0x4863db	                         movsxd rbx, ebx	      4367	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_20
0x400271b	        0x48c1e304	                              shl rbx, 4	      4367	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_20
0x400271f	    0x488bbb000000	                    mov rdi, qword [rbx]	      4367	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_20
0x4002726	      0xe800000000	                          call 0x400272b	      4367	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_20
0x400272b	            0xeb1c	                           jmp 0x4002749	      4367	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_20
0x400272d	      0xb800000000	                              mov eax, 0	      4318	mbyte.c	FUNCTION_86	CALL_5
0x4002732	            0xeb15	                           jmp 0x4002749	      4318	mbyte.c	FUNCTION_86	CALL_5
0x4002734	          0x4889df	                            mov rdi, rbx	      4357	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_16
0x4002737	      0xe89fdfffff	               call sym.enc_canon_search	      4357	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_16
0x400273c	            0x85c0	                           test eax, eax	      4357	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_16
0x400273e	     0xf894bffffff	                           jns 0x400268f	      4357	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_16
0x4002744	      0xe97cffffff	                           jmp 0x40026c5	      4357	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_16
0x4002749	        0x4883c408	                              add rsp, 8	      4371	mbyte.c	FUNCTION_86
0x400274d	              0x5b	                                 pop rbx	      4371	mbyte.c	FUNCTION_86
0x400274e	              0x5d	                                 pop rbp	      4371	mbyte.c	FUNCTION_86
0x400274f	            0x415c	                                 pop r12	      4371	mbyte.c	FUNCTION_86
0x4002751	            0x415d	                                 pop r13	      4371	mbyte.c	FUNCTION_86
0x4002753	              0xc3	                                     ret	      4371	mbyte.c	FUNCTION_86
string_convert	SWITCH,0:CALL,1:IF,0:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	5
0x4003d7d	        0x4883ec08	                              sub rsp, 8	      6716	mbyte.c	FUNCTION_144
0x4003d81	      0xb900000000	                              mov ecx, 0	      6717	mbyte.c	FUNCTION_144	CALL_1
0x4003d86	      0xe800000000	                          call 0x4003d8b	      6717	mbyte.c	FUNCTION_144	CALL_1
0x4003d8b	        0x4883c408	                              add rsp, 8	      6718	mbyte.c	FUNCTION_144
0x4003d8f	              0xc3	                                     ret	      6718	mbyte.c	FUNCTION_144
mb_charlen_len	SWITCH,0:CALL,0:IF,0:WHILE,0:FOR,1:DO,0:ELSE,0:functions,0	29
0x4002242	            0x4154	                                push r12	      4167	mbyte.c	FUNCTION_81
0x4002244	              0x55	                                push rbp	      4167	mbyte.c	FUNCTION_81
0x4002245	              0x53	                                push rbx	      4167	mbyte.c	FUNCTION_81
0x4002246	          0x803f00	                       cmp byte [rdi], 0	      4171	mbyte.c	FUNCTION_81	FOR_1
0x4002249	            0x7431	                            je 0x400227c	      4171	mbyte.c	FUNCTION_81	FOR_1
0x400224b	          0x4889fb	                            mov rbx, rdi	      4171	mbyte.c	FUNCTION_81	FOR_1
0x400224e	          0x4863f6	                         movsxd rsi, esi	      4171	mbyte.c	FUNCTION_81	FOR_1
0x4002251	        0x4c8d2437	                    lea r12, [rdi + rsi]	      4171	mbyte.c	FUNCTION_81	FOR_1
0x4002255	          0x4c39e7	                            cmp rdi, r12	      4171	mbyte.c	FUNCTION_81	FOR_1
0x4002258	            0x7329	                           jae 0x4002283	      4171	mbyte.c	FUNCTION_81	FOR_1
0x400225a	      0xbd00000000	                              mov ebp, 0	      4171	mbyte.c	FUNCTION_81	FOR_1
0x400225f	          0x4889df	                            mov rdi, rbx	      4172	mbyte.c	FUNCTION_81	FOR_1
0x4002262	    0xff1500000000	                 call qword [0x04002268]	      4172	mbyte.c	FUNCTION_81	FOR_1
0x4002268	            0x4898	                                    cdqe	      4172	mbyte.c	FUNCTION_81	FOR_1
0x400226a	          0x4801c3	                            add rbx, rax	      4172	mbyte.c	FUNCTION_81	FOR_1
0x400226d	          0x83c501	                              add ebp, 1	      4171	mbyte.c	FUNCTION_81	FOR_1
0x4002270	          0x803b00	                       cmp byte [rbx], 0	      4171	mbyte.c	FUNCTION_81	FOR_1
0x4002273	            0x7413	                            je 0x4002288	      4171	mbyte.c	FUNCTION_81	FOR_1
0x4002275	          0x4c39e3	                            cmp rbx, r12	      4171	mbyte.c	FUNCTION_81	FOR_1
0x4002278	            0x72e5	                            jb 0x400225f	      4171	mbyte.c	FUNCTION_81	FOR_1
0x400227a	            0xeb0c	                           jmp 0x4002288	      4171	mbyte.c	FUNCTION_81	FOR_1
0x400227c	      0xbd00000000	                              mov ebp, 0	      4171	mbyte.c	FUNCTION_81	FOR_1
0x4002281	            0xeb05	                           jmp 0x4002288	      4171	mbyte.c	FUNCTION_81	FOR_1
0x4002283	      0xbd00000000	                              mov ebp, 0	      4171	mbyte.c	FUNCTION_81	FOR_1
0x4002288	            0x89e8	                            mov eax, ebp	      4175	mbyte.c	FUNCTION_81
0x400228a	              0x5b	                                 pop rbx	      4175	mbyte.c	FUNCTION_81
0x400228b	              0x5d	                                 pop rbp	      4175	mbyte.c	FUNCTION_81
0x400228c	            0x415c	                                 pop r12	      4175	mbyte.c	FUNCTION_81
0x400228e	              0xc3	                                     ret	      4175	mbyte.c	FUNCTION_81
im_shutdown	SWITCH,0:CALL,3:IF,2:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	16
0x4002e38	        0x4883ec08	                              sub rsp, 8	      5569	mbyte.c	FUNCTION_117
0x4002e3c	    0x488b3d000000	            mov rdi, qword [0x04002e43] 	      5574	mbyte.c	FUNCTION_117	IF_1
0x4002e43	          0x4885ff	                           test rdi, rdi	      5574	mbyte.c	FUNCTION_117	IF_1
0x4002e46	            0x741c	                            je 0x4002e64	      5574	mbyte.c	FUNCTION_117	IF_1
0x4002e48	      0xe800000000	                          call 0x4002e4d	      5576	mbyte.c	FUNCTION_117	IF_1	CALL_2
0x4002e4d	    0x488b3d000000	            mov rdi, qword [0x04002e54] 	      5577	mbyte.c	FUNCTION_117	IF_1	CALL_3
0x4002e54	      0xe800000000	                          call 0x4002e59	      5577	mbyte.c	FUNCTION_117	IF_1	CALL_3
0x4002e59	    0x48c705000000	               mov qword [0x04002e64], 0	      5578	mbyte.c	FUNCTION_117	IF_1
0x4002e64	    0xc70500000000	               mov dword [0x04002e6e], 0	      5580	mbyte.c	FUNCTION_117
0x4002e6e	    0x48c705000000	               mov qword [0x04002e79], 0	      5581	mbyte.c	FUNCTION_117
0x4002e79	    0x48833d000000	               cmp qword [0x04002e81], 0	      5582	mbyte.c	FUNCTION_117	IF_2
0x4002e81	            0x750a	                           jne 0x4002e8d	      5582	mbyte.c	FUNCTION_117	IF_2
0x4002e83	    0xc70500000000	     mov dword [0x04002e8d], 0x7fffffff 	      5583	mbyte.c	FUNCTION_117	IF_2
0x4002e8d	    0xc70500000000	               mov dword [0x04002e97], 0	      5584	mbyte.c	FUNCTION_117
0x4002e97	        0x4883c408	                              add rsp, 8	      5585	mbyte.c	FUNCTION_117
0x4002e9b	              0xc3	                                     ret	      5585	mbyte.c	FUNCTION_117
im_preedit_changed_cb	SWITCH,0:CALL,17:IF,12:WHILE,0:FOR,1:DO,0:ELSE,5:functions,0	262
0x4004546	            0x4155	                                push r13	      5335	mbyte.c	FUNCTION_113
0x4004548	            0x4154	                                push r12	      5335	mbyte.c	FUNCTION_113
0x400454a	              0x55	                                push rbp	      5335	mbyte.c	FUNCTION_113
0x400454b	              0x53	                                push rbx	      5335	mbyte.c	FUNCTION_113
0x400454c	        0x4883ec58	                           sub rsp, 0x58	      5335	mbyte.c	FUNCTION_113
0x4004550	    0x64488b042528	                mov rax, qword fs:[0x28]	      5335	mbyte.c	FUNCTION_113
0x4004559	      0x4889442448	             mov qword [rsp + 0x48], rax	      5335	mbyte.c	FUNCTION_113
0x400455e	            0x31c0	                            xor eax, eax	      5335	mbyte.c	FUNCTION_113
0x4004560	    0x48c744241800	               mov qword [rsp + 0x18], 0	      5336	mbyte.c	FUNCTION_113
0x4004569	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      5337	mbyte.c	FUNCTION_113
0x4004571	    0x48833d000000	               cmp qword [0x04004579], 0	      5343	mbyte.c	FUNCTION_113	IF_1
0x4004579	            0x7516	                           jne 0x4004591	      5343	mbyte.c	FUNCTION_113	IF_1
0x400457b	      0x488d4c240c	                    lea rcx, [rsp + 0xc]	      5344	mbyte.c	FUNCTION_113	IF_1	CALL_1
0x4004580	      0xba00000000	                              mov edx, 0	      5344	mbyte.c	FUNCTION_113	IF_1	CALL_1
0x4004585	      0x488d742418	                   lea rsi, [rsp + 0x18]	      5344	mbyte.c	FUNCTION_113	IF_1	CALL_1
0x400458a	      0xe800000000	                          call 0x400458f	      5344	mbyte.c	FUNCTION_113	IF_1	CALL_1
0x400458f	            0xeb14	                           jmp 0x40045a5	      5344	mbyte.c	FUNCTION_113	IF_1	CALL_1
0x4004591	      0xb900000000	                              mov ecx, 0	      5348	mbyte.c	FUNCTION_113	ELSE_1	CALL_2
0x4004596	      0xba00000000	                              mov edx, 0	      5348	mbyte.c	FUNCTION_113	ELSE_1	CALL_2
0x400459b	      0x488d742418	                   lea rsi, [rsp + 0x18]	      5348	mbyte.c	FUNCTION_113	ELSE_1	CALL_2
0x40045a0	      0xe800000000	                          call 0x40045a5	      5348	mbyte.c	FUNCTION_113	ELSE_1	CALL_2
0x40045a5	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5356	mbyte.c	FUNCTION_113	CALL_4
0x40045aa	          0x4885c0	                           test rax, rax	      5356	mbyte.c	FUNCTION_113	CALL_4
0x40045ad	            0x7519	                           jne 0x40045c8	      5356	mbyte.c	FUNCTION_113	CALL_4
0x40045af	      0xba00000000	                              mov edx, 0	      5356	mbyte.c	FUNCTION_113	CALL_4
0x40045b4	      0xbe00000000	                              mov esi, 0	      5356	mbyte.c	FUNCTION_113	CALL_4
0x40045b9	      0xbf00000000	                              mov edi, 0	      5356	mbyte.c	FUNCTION_113	CALL_4
0x40045be	      0xe800000000	                          call 0x40045c3	      5356	mbyte.c	FUNCTION_113	CALL_4
0x40045c3	      0xe90e040000	                           jmp 0x40049d6	      5356	mbyte.c	FUNCTION_113	CALL_4
0x40045c8	    0x48833d000000	               cmp qword [0x040045d0], 1	      5358	mbyte.c	FUNCTION_113	IF_2
0x40045d0	     0xf8562020000	                           jne 0x4004838	      5358	mbyte.c	FUNCTION_113	IF_2
0x40045d6	          0x803800	                       cmp byte [rax], 0	      5360	mbyte.c	FUNCTION_113	IF_2	IF_3
0x40045d9	            0x7514	                           jne 0x40045ef	      5360	mbyte.c	FUNCTION_113	IF_2	IF_3
0x40045db	    0xc70500000000	               mov dword [0x040045e5], 0	      5362	mbyte.c	FUNCTION_113	IF_2	IF_3
0x40045e5	      0xe842c2ffff	              call sym.im_delete_preedit	      5363	mbyte.c	FUNCTION_113	IF_2	IF_3	CALL_5
0x40045ea	      0xe99f030000	                           jmp 0x400498e	      5363	mbyte.c	FUNCTION_113	IF_2	IF_3	CALL_5
0x40045ef	    0xc70500000000	               mov dword [0x040045f9], 1	      5367	mbyte.c	FUNCTION_113	IF_2	ELSE_2
0x40045f9	    0x48833d000000	               cmp qword [0x04004601], 0	      4969	mbyte.c	FUNCTION_104	IF_1
0x4004601	     0xf8589000000	                           jne 0x4004690	      4969	mbyte.c	FUNCTION_104	IF_1
0x4004607	      0xbf01000000	                              mov edi, 1	      4971	mbyte.c	FUNCTION_104	IF_1	CALL_1
0x400460c	      0xe800000000	                          call 0x4004611	      4971	mbyte.c	FUNCTION_104	IF_1	CALL_1
0x4004611	    0x488905000000	            mov qword [0x04004618], rax 	      4971	mbyte.c	FUNCTION_104	IF_1	CALL_1
0x4004618	      0xe800000000	                          call 0x400461d	      4973	mbyte.c	FUNCTION_104	IF_1	CALL_4
0x400461d	          0x4889c3	                            mov rbx, rax	      4973	mbyte.c	FUNCTION_104	IF_1	CALL_4
0x4004620	          0x4889c6	                            mov rsi, rax	      4973	mbyte.c	FUNCTION_104	IF_1	CALL_4
0x4004623	    0x488b3d000000	            mov rdi, qword [0x0400462a] 	      4973	mbyte.c	FUNCTION_104	IF_1	CALL_4
0x400462a	      0xe800000000	                          call 0x400462f	      4973	mbyte.c	FUNCTION_104	IF_1	CALL_4
0x400462f	          0x4889c5	                            mov rbp, rax	      4973	mbyte.c	FUNCTION_104	IF_1	CALL_4
0x4004632	          0x4889de	                            mov rsi, rbx	      4972	mbyte.c	FUNCTION_104	IF_1	CALL_3
0x4004635	    0x488b3d000000	            mov rdi, qword [0x0400463c] 	      4972	mbyte.c	FUNCTION_104	IF_1	CALL_3
0x400463c	      0xe800000000	                          call 0x4004641	      4972	mbyte.c	FUNCTION_104	IF_1	CALL_3
0x4004641	          0x4889ee	                            mov rsi, rbp	      4972	mbyte.c	FUNCTION_104	IF_1	CALL_3
0x4004644	          0x4889c7	                            mov rdi, rax	      4972	mbyte.c	FUNCTION_104	IF_1	CALL_3
0x4004647	      0xe800000000	                          call 0x400464c	      4972	mbyte.c	FUNCTION_104	IF_1	CALL_3
0x400464c	      0xbf00000000	                              mov edi, 0	      4974	mbyte.c	FUNCTION_104	IF_1	CALL_5
0x4004651	      0xe800000000	                          call 0x4004656	      4974	mbyte.c	FUNCTION_104	IF_1	CALL_5
0x4004656	    0x488905000000	            mov qword [0x0400465d], rax 	      4974	mbyte.c	FUNCTION_104	IF_1	CALL_5
0x400465d	      0xbe00000000	                              mov esi, 0	      4975	mbyte.c	FUNCTION_104	IF_1	CALL_6
0x4004662	          0x4889c7	                            mov rdi, rax	      4975	mbyte.c	FUNCTION_104	IF_1	CALL_6
0x4004665	      0xe800000000	                          call 0x400466a	      4975	mbyte.c	FUNCTION_104	IF_1	CALL_6
0x400466a	    0x488b1d000000	            mov rbx, qword [0x04004671] 	      4976	mbyte.c	FUNCTION_104	IF_1	CALL_8
0x4004671	      0xe800000000	                          call 0x4004676	      4976	mbyte.c	FUNCTION_104	IF_1	CALL_8
0x4004676	          0x4889c6	                            mov rsi, rax	      4976	mbyte.c	FUNCTION_104	IF_1	CALL_8
0x4004679	    0x488b3d000000	            mov rdi, qword [0x04004680] 	      4976	mbyte.c	FUNCTION_104	IF_1	CALL_8
0x4004680	      0xe800000000	                          call 0x4004685	      4976	mbyte.c	FUNCTION_104	IF_1	CALL_8
0x4004685	          0x4889de	                            mov rsi, rbx	      4976	mbyte.c	FUNCTION_104	IF_1	CALL_8
0x4004688	          0x4889c7	                            mov rdi, rax	      4976	mbyte.c	FUNCTION_104	IF_1	CALL_8
0x400468b	      0xe800000000	                          call 0x4004690	      4976	mbyte.c	FUNCTION_104	IF_1	CALL_8
0x4004690	    0x488b35000000	            mov rsi, qword [0x04004697] 	      5041	mbyte.c	FUNCTION_104	CALL_33
0x4004697	    0x488b3d000000	            mov rdi, qword [0x0400469e] 	      5041	mbyte.c	FUNCTION_104	CALL_33
0x400469e	      0xe800000000	                          call 0x40046a3	      5041	mbyte.c	FUNCTION_104	CALL_33
0x40046a3	    0x8b0d00000000	            mov ecx, dword [0x040046a9] 	      5043	mbyte.c	FUNCTION_104	CALL_34
0x40046a9	      0xba00000000	                              mov edx, 0	      5043	mbyte.c	FUNCTION_104	CALL_34
0x40046ae	      0xbe08000000	                              mov esi, 8	      5043	mbyte.c	FUNCTION_104	CALL_34
0x40046b3	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      5043	mbyte.c	FUNCTION_104	CALL_34
0x40046b8	      0xb800000000	                              mov eax, 0	      5043	mbyte.c	FUNCTION_104	CALL_34
0x40046bd	      0xe800000000	                          call 0x40046c2	      5043	mbyte.c	FUNCTION_104	CALL_34
0x40046c2	      0x488d742430	                   lea rsi, [rsp + 0x30]	      5044	mbyte.c	FUNCTION_104	CALL_35
0x40046c7	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      5044	mbyte.c	FUNCTION_104	CALL_35
0x40046cc	      0xe800000000	                          call 0x40046d1	      5044	mbyte.c	FUNCTION_104	CALL_35
0x40046d1	      0x488d542430	                   lea rdx, [rsp + 0x30]	      5045	mbyte.c	FUNCTION_104	CALL_36
0x40046d6	      0xbe00000000	                              mov esi, 0	      5045	mbyte.c	FUNCTION_104	CALL_36
0x40046db	    0x488b3d000000	            mov rdi, qword [0x040046e2] 	      5045	mbyte.c	FUNCTION_104	CALL_36
0x40046e2	      0xe800000000	                          call 0x40046e7	      5045	mbyte.c	FUNCTION_104	CALL_36
0x40046e7	    0x8b0d00000000	            mov ecx, dword [0x040046ed] 	      5047	mbyte.c	FUNCTION_104	CALL_37
0x40046ed	      0xba00000000	                              mov edx, 0	      5047	mbyte.c	FUNCTION_104	CALL_37
0x40046f2	      0xbe08000000	                              mov esi, 8	      5047	mbyte.c	FUNCTION_104	CALL_37
0x40046f7	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      5047	mbyte.c	FUNCTION_104	CALL_37
0x40046fc	      0xb800000000	                              mov eax, 0	      5047	mbyte.c	FUNCTION_104	CALL_37
0x4004701	      0xe800000000	                          call 0x4004706	      5047	mbyte.c	FUNCTION_104	CALL_37
0x4004706	      0x488d742430	                   lea rsi, [rsp + 0x30]	      5048	mbyte.c	FUNCTION_104	CALL_38
0x400470b	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      5048	mbyte.c	FUNCTION_104	CALL_38
0x4004710	      0xe800000000	                          call 0x4004715	      5048	mbyte.c	FUNCTION_104	CALL_38
0x4004715	      0x488d542430	                   lea rdx, [rsp + 0x30]	      5049	mbyte.c	FUNCTION_104	CALL_39
0x400471a	      0xbe00000000	                              mov esi, 0	      5049	mbyte.c	FUNCTION_104	CALL_39
0x400471f	    0x488b3d000000	            mov rdi, qword [0x04004726] 	      5049	mbyte.c	FUNCTION_104	CALL_39
0x4004726	      0xe800000000	                          call 0x400472b	      5049	mbyte.c	FUNCTION_104	CALL_39
0x400472b	      0xb900000000	                              mov ecx, 0	      5052	mbyte.c	FUNCTION_104	CALL_40
0x4004730	      0x488d542428	                   lea rdx, [rsp + 0x28]	      5052	mbyte.c	FUNCTION_104	CALL_40
0x4004735	      0x488d742420	                   lea rsi, [rsp + 0x20]	      5052	mbyte.c	FUNCTION_104	CALL_40
0x400473a	    0x488b3d000000	            mov rdi, qword [0x04004741] 	      5052	mbyte.c	FUNCTION_104	CALL_40
0x4004741	      0xe800000000	                          call 0x4004746	      5052	mbyte.c	FUNCTION_104	CALL_40
0x4004746	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      5054	mbyte.c	FUNCTION_104	IF_4
0x400474b	          0x803b00	                       cmp byte [rbx], 0	      5054	mbyte.c	FUNCTION_104	IF_4
0x400474e	     0xf84b4000000	                            je 0x4004808	      5054	mbyte.c	FUNCTION_104	IF_4
0x4004754	      0xe800000000	                          call 0x4004759	      5056	mbyte.c	FUNCTION_104	IF_4	CALL_42
0x4004759	          0x4889c5	                            mov rbp, rax	      5056	mbyte.c	FUNCTION_104	IF_4	CALL_42
0x400475c	          0x4889c6	                            mov rsi, rax	      5056	mbyte.c	FUNCTION_104	IF_4	CALL_42
0x400475f	    0x488b3d000000	            mov rdi, qword [0x04004766] 	      5056	mbyte.c	FUNCTION_104	IF_4	CALL_42
0x4004766	      0xe800000000	                          call 0x400476b	      5056	mbyte.c	FUNCTION_104	IF_4	CALL_42
0x400476b	          0x4889de	                            mov rsi, rbx	      5056	mbyte.c	FUNCTION_104	IF_4	CALL_42
0x400476e	          0x4889c7	                            mov rdi, rax	      5056	mbyte.c	FUNCTION_104	IF_4	CALL_42
0x4004771	      0xe800000000	                          call 0x4004776	      5056	mbyte.c	FUNCTION_104	IF_4	CALL_42
0x4004776	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      5057	mbyte.c	FUNCTION_104	IF_4	CALL_44
0x400477b	          0x4889ee	                            mov rsi, rbp	      5057	mbyte.c	FUNCTION_104	IF_4	CALL_44
0x400477e	    0x488b3d000000	            mov rdi, qword [0x04004785] 	      5057	mbyte.c	FUNCTION_104	IF_4	CALL_44
0x4004785	      0xe800000000	                          call 0x400478a	      5057	mbyte.c	FUNCTION_104	IF_4	CALL_44
0x400478a	          0x4889de	                            mov rsi, rbx	      5057	mbyte.c	FUNCTION_104	IF_4	CALL_44
0x400478d	          0x4889c7	                            mov rdi, rax	      5057	mbyte.c	FUNCTION_104	IF_4	CALL_44
0x4004790	      0xe800000000	                          call 0x4004795	      5057	mbyte.c	FUNCTION_104	IF_4	CALL_44
0x4004795	          0x4889ee	                            mov rsi, rbp	      5059	mbyte.c	FUNCTION_104	IF_4	CALL_46
0x4004798	    0x488b3d000000	            mov rdi, qword [0x0400479f] 	      5059	mbyte.c	FUNCTION_104	IF_4	CALL_46
0x400479f	      0xe800000000	                          call 0x40047a4	      5059	mbyte.c	FUNCTION_104	IF_4	CALL_46
0x40047a4	          0x4889c7	                            mov rdi, rax	      5059	mbyte.c	FUNCTION_104	IF_4	CALL_46
0x40047a7	      0xe800000000	                          call 0x40047ac	      5059	mbyte.c	FUNCTION_104	IF_4	CALL_46
0x40047ac	      0x488d542414	                   lea rdx, [rsp + 0x14]	      5060	mbyte.c	FUNCTION_104	IF_4	CALL_47
0x40047b1	      0x488d742410	                   lea rsi, [rsp + 0x10]	      5060	mbyte.c	FUNCTION_104	IF_4	CALL_47
0x40047b6	          0x4889c7	                            mov rdi, rax	      5060	mbyte.c	FUNCTION_104	IF_4	CALL_47
0x40047b9	      0xe800000000	                          call 0x40047be	      5060	mbyte.c	FUNCTION_104	IF_4	CALL_47
0x40047be	        0x8b5c2414	            mov ebx, dword [rsp + 0x14] 	      5061	mbyte.c	FUNCTION_104	IF_4	CALL_48
0x40047c2	    0x391d00000000	            cmp dword [0x040047c8], ebx 	      5061	mbyte.c	FUNCTION_104	IF_4	CALL_48
0x40047c8	     0xf4d1d000000	          cmovge ebx, dword [0x040047cf]	      5061	mbyte.c	FUNCTION_104	IF_4	CALL_48
0x40047cf	        0x895c2414	             mov dword [rsp + 0x14], ebx	      5061	mbyte.c	FUNCTION_104	IF_4	CALL_48
0x40047d3	        0x8b6c2410	            mov ebp, dword [rsp + 0x10] 	      5062	mbyte.c	FUNCTION_104	IF_4	CALL_50
0x40047d7	      0xe800000000	                          call 0x40047dc	      5062	mbyte.c	FUNCTION_104	IF_4	CALL_50
0x40047dc	          0x4889c6	                            mov rsi, rax	      5062	mbyte.c	FUNCTION_104	IF_4	CALL_50
0x40047df	    0x488b3d000000	            mov rdi, qword [0x040047e6] 	      5062	mbyte.c	FUNCTION_104	IF_4	CALL_50
0x40047e6	      0xe800000000	                          call 0x40047eb	      5062	mbyte.c	FUNCTION_104	IF_4	CALL_50
0x40047eb	            0x89da	                            mov edx, ebx	      5062	mbyte.c	FUNCTION_104	IF_4	CALL_50
0x40047ed	            0x89ee	                            mov esi, ebp	      5062	mbyte.c	FUNCTION_104	IF_4	CALL_50
0x40047ef	          0x4889c7	                            mov rdi, rax	      5062	mbyte.c	FUNCTION_104	IF_4	CALL_50
0x40047f2	      0xe800000000	                          call 0x40047f7	      5062	mbyte.c	FUNCTION_104	IF_4	CALL_50
0x40047f7	    0x488b3d000000	            mov rdi, qword [0x040047fe] 	      5064	mbyte.c	FUNCTION_104	IF_4	CALL_51
0x40047fe	      0xe800000000	                          call 0x4004803	      5064	mbyte.c	FUNCTION_104	IF_4	CALL_51
0x4004803	      0xe811bfffff	 call sym.im_preedit_window_set_position	      5066	mbyte.c	FUNCTION_104	IF_4	CALL_52
0x4004808	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      5069	mbyte.c	FUNCTION_104	CALL_53
0x400480d	      0xe800000000	                          call 0x4004812	      5069	mbyte.c	FUNCTION_104	CALL_53
0x4004812	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      5070	mbyte.c	FUNCTION_104	CALL_54
0x4004817	      0xe800000000	                          call 0x400481c	      5070	mbyte.c	FUNCTION_104	CALL_54
0x400481c	    0x833d00000000	               cmp dword [0x04004823], 0	      5085	mbyte.c	FUNCTION_106	IF_1
0x4004823	     0xf8465010000	                            je 0x400498e	      5085	mbyte.c	FUNCTION_106	IF_1
0x4004829	      0xbf01000000	                              mov edi, 1	      5086	mbyte.c	FUNCTION_106	CALL_2
0x400482e	      0xe800000000	                          call 0x4004833	      5086	mbyte.c	FUNCTION_106	CALL_2
0x4004833	      0xe956010000	                           jmp 0x400498e	      5086	mbyte.c	FUNCTION_106	CALL_2
0x4004838	    0x813d00000000	     cmp dword [0x04004842], 0x7fffffff 	      5374	mbyte.c	FUNCTION_113	ELSE_3	IF_4
0x4004842	            0x751a	                           jne 0x400485e	      5374	mbyte.c	FUNCTION_113	ELSE_3	IF_4
0x4004844	          0x803800	                       cmp byte [rax], 0	      5374	mbyte.c	FUNCTION_113	ELSE_3	IF_4
0x4004847	     0xf845b010000	                            je 0x40049a8	      5374	mbyte.c	FUNCTION_113	ELSE_3	IF_4
0x400484d	    0xc70500000000	               mov dword [0x04004857], 1	      5376	mbyte.c	FUNCTION_113	ELSE_3	IF_4
0x4004857	      0xe858c1ffff	         call sym.init_preedit_start_col	      5379	mbyte.c	FUNCTION_113	ELSE_3	IF_4	CALL_7
0x400485c	            0xeb20	                           jmp 0x400487e	      5379	mbyte.c	FUNCTION_113	ELSE_3	IF_4	CALL_7
0x400485e	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      5381	mbyte.c	FUNCTION_113	ELSE_3	ELSE_4	IF_5
0x4004863	            0x7519	                           jne 0x400487e	      5381	mbyte.c	FUNCTION_113	ELSE_3	ELSE_4	IF_5
0x4004865	          0x803800	                       cmp byte [rax], 0	      5381	mbyte.c	FUNCTION_113	ELSE_3	ELSE_4	IF_5
0x4004868	            0x7514	                           jne 0x400487e	      5381	mbyte.c	FUNCTION_113	ELSE_3	ELSE_4	IF_5
0x400486a	    0xc70500000000	               mov dword [0x04004874], 0	      5383	mbyte.c	FUNCTION_113	ELSE_3	ELSE_4	IF_5
0x4004874	    0xc70500000000	     mov dword [0x0400487e], 0x7fffffff 	      5387	mbyte.c	FUNCTION_113	ELSE_3	ELSE_4	IF_5
0x400487e	      0xe8a9bfffff	              call sym.im_delete_preedit	      5390	mbyte.c	FUNCTION_113	ELSE_3	CALL_8
0x4004883	    0x8b0500000000	            mov eax, dword [0x04004889] 	      5399	mbyte.c	FUNCTION_113	ELSE_3	IF_6
0x4004889	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      5399	mbyte.c	FUNCTION_113	ELSE_3	IF_6
0x400488e	            0x7406	                            je 0x4004896	      5399	mbyte.c	FUNCTION_113	ELSE_3	IF_6
0x4004890	    0x890500000000	            mov dword [0x04004896], eax 	      5400	mbyte.c	FUNCTION_113	ELSE_3	IF_6
0x4004896	      0x4c8b6c2418	            mov r13, qword [rsp + 0x18] 	      5401	mbyte.c	FUNCTION_113	ELSE_3
0x400489b	      0x410fb64500	                   movzx eax, byte [r13]	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x40048a0	            0x84c0	                             test al, al	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x40048a2	     0xf84e6000000	                            je 0x400498e	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x40048a8	          0x4c89eb	                            mov rbx, r13	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x40048ab	      0xbd00000000	                              mov ebp, 0	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x40048b0	    0x41bc00000000	                             mov r12d, 0	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x40048b6	            0x84c0	                             test al, al	      5406	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_11
0x40048b8	     0xf890c010000	                           jns 0x40049ca	      5406	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_11
0x40048be	          0x4889df	                            mov rdi, rbx	      5406	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_11
0x40048c1	      0xe800000000	                          call 0x40048c6	      5406	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_11
0x40048c6	            0x89c7	                            mov edi, eax	      5406	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_11
0x40048c8	      0xe800000000	                          call 0x40048cd	      5406	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_11
0x40048cd	            0x85c0	                           test eax, eax	      5412	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7
0x40048cf	            0x7409	                            je 0x40048da	      5412	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7
0x40048d1	    0x833d00000000	               cmp dword [0x040048d8], 0	      5412	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7
0x40048d8	            0x741e	                            je 0x40048f8	      5412	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7
0x40048da	        0x396c240c	              cmp dword [rsp + 0xc], ebp	      5414	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7	IF_8
0x40048de	            0x7e09	                           jle 0x40048e9	      5414	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7	IF_8
0x40048e0	    0x830500000000	               add dword [0x040048e7], 1	      5415	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7	IF_8
0x40048e7	            0xeb0f	                           jmp 0x40048f8	      5415	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7	IF_8
0x40048e9	    0x830500000000	               add dword [0x040048f0], 1	      5417	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7	ELSE_5
0x40048f0	            0x85c0	                           test eax, eax	      5419	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	ELSE_5	IF_9
0x40048f2	     0xf84c0000000	                            je 0x40049b8	      5419	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	ELSE_5	IF_9
0x40048f8	    0x813d00000000	     cmp dword [0x04004902], 0x7fffffff 	      5425	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_10
0x4004902	            0x740e	                            je 0x4004912	      5425	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_10
0x4004904	          0x4889df	                            mov rdi, rbx	      5426	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_12
0x4004907	      0xe800000000	                          call 0x400490c	      5426	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_12
0x400490c	     0x10500000000	             add dword [0x04004912], eax	      5426	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_12
0x4004912	           0xfb603	                   movzx eax, byte [rbx]	      2102	mbyte.c	FUNCTION_46
0x4004915	    0x480fbe800000	                   movsx rax, byte [rax]	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x400491d	          0x4801c3	                            add rbx, rax	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x4004920	          0x83c501	                              add ebp, 1	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x4004923	           0xfb603	                   movzx eax, byte [rbx]	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x4004926	            0x84c0	                             test al, al	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x4004928	            0x758c	                           jne 0x40048b6	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x400492a	          0x4939dd	                            cmp r13, rbx	      5429	mbyte.c	FUNCTION_113	ELSE_3	IF_11
0x400492d	            0x735f	                           jae 0x400498e	      5429	mbyte.c	FUNCTION_113	ELSE_3	IF_11
0x400492f	          0x4889de	                            mov rsi, rbx	      5431	mbyte.c	FUNCTION_113	ELSE_3	IF_11	CALL_13
0x4004932	          0x4c29ee	                            sub rsi, r13	      5431	mbyte.c	FUNCTION_113	ELSE_3	IF_11	CALL_13
0x4004935	          0x4c89ef	                            mov rdi, r13	      5431	mbyte.c	FUNCTION_113	ELSE_3	IF_11	CALL_13
0x4004938	      0xe88efbffff	                call sym.im_add_to_input	      5431	mbyte.c	FUNCTION_113	ELSE_3	IF_11	CALL_13
0x400493d	      0xc64424409b	            mov byte [rsp + 0x40], 0x9b 	      5125	mbyte.c	FUNCTION_108
0x4004942	      0xc64424416b	            mov byte [rsp + 0x41], 0x6b 	      5125	mbyte.c	FUNCTION_108
0x4004947	      0xc64424426c	            mov byte [rsp + 0x42], 0x6c 	      5125	mbyte.c	FUNCTION_108
0x400494c	    0x8b0500000000	            mov eax, dword [0x04004952] 	      5127	mbyte.c	FUNCTION_108	IF_1
0x4004952	            0xa801	                              test al, 1	      5127	mbyte.c	FUNCTION_108	IF_1
0x4004954	            0x7538	                           jne 0x400498e	      5127	mbyte.c	FUNCTION_108	IF_1
0x4004956	            0xa808	                              test al, 8	      5130	mbyte.c	FUNCTION_108	IF_2
0x4004958	            0x751a	                           jne 0x4004974	      5130	mbyte.c	FUNCTION_108	IF_2
0x400495a	    0x488b05000000	            mov rax, qword [0x04004961] 	      5130	mbyte.c	FUNCTION_108	IF_2
0x4004961	          0x4885c0	                           test rax, rax	      5130	mbyte.c	FUNCTION_108	IF_2
0x4004964	            0x740e	                            je 0x4004974	      5130	mbyte.c	FUNCTION_108	IF_2
0x4004966	    0x83b854020000	              cmp dword [rax + 0x254], 0	      5130	mbyte.c	FUNCTION_108	IF_2
0x400496d	            0x7405	                            je 0x4004974	      5130	mbyte.c	FUNCTION_108	IF_2
0x400496f	      0xc644244272	            mov byte [rsp + 0x42], 0x72 	      5131	mbyte.c	FUNCTION_108	IF_2
0x4004974	          0x4585e4	                         test r12d, r12d	      5133	mbyte.c	FUNCTION_108	FOR_1
0x4004977	            0x7e15	                           jle 0x400498e	      5133	mbyte.c	FUNCTION_108	FOR_1
0x4004979	      0xbe03000000	                              mov esi, 3	      5134	mbyte.c	FUNCTION_108	CALL_1
0x400497e	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      5134	mbyte.c	FUNCTION_108	CALL_1
0x4004983	      0xe800000000	                          call 0x4004988	      5134	mbyte.c	FUNCTION_108	CALL_1
0x4004988	        0x4183ec01	                             sub r12d, 1	      5133	mbyte.c	FUNCTION_108	FOR_1
0x400498c	            0x75eb	                           jne 0x4004979	      5133	mbyte.c	FUNCTION_108	FOR_1
0x400498e	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      5436	mbyte.c	FUNCTION_113	CALL_15
0x4004993	      0xe800000000	                          call 0x4004998	      5436	mbyte.c	FUNCTION_113	CALL_15
0x4004998	      0xe800000000	                          call 0x400499d	      5438	mbyte.c	FUNCTION_113	IF_12	CALL_16
0x400499d	            0x85c0	                           test eax, eax	      5438	mbyte.c	FUNCTION_113	IF_12	CALL_16
0x400499f	            0x7435	                            je 0x40049d6	      5438	mbyte.c	FUNCTION_113	IF_12	CALL_16
0x40049a1	      0xe800000000	                          call 0x40049a6	      5439	mbyte.c	FUNCTION_113	CALL_17
0x40049a6	            0xeb2e	                           jmp 0x40049d6	      5439	mbyte.c	FUNCTION_113	CALL_17
0x40049a8	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      5381	mbyte.c	FUNCTION_113	ELSE_3	ELSE_4	IF_5
0x40049ad	     0xf85cbfeffff	                           jne 0x400487e	      5381	mbyte.c	FUNCTION_113	ELSE_3	ELSE_4	IF_5
0x40049b3	      0xe9b2feffff	                           jmp 0x400486a	      5381	mbyte.c	FUNCTION_113	ELSE_3	ELSE_4	IF_5
0x40049b8	        0x4183c401	                             add r12d, 1	      5423	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	ELSE_5	IF_9
0x40049bc	      0xe937ffffff	                           jmp 0x40048f8	      5423	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	ELSE_5	IF_9
0x40049c1	    0x830500000000	               add dword [0x040049c8], 1	      5417	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7	ELSE_5
0x40049c8	            0xebee	                           jmp 0x40049b8	      5417	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7	ELSE_5
0x40049ca	        0x396c240c	              cmp dword [rsp + 0xc], ebp	      5414	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7	IF_8
0x40049ce	     0xf8f0cffffff	                            jg 0x40048e0	      5414	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7	IF_8
0x40049d4	            0xebeb	                           jmp 0x40049c1	      5414	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7	IF_8
0x40049d6	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      5440	mbyte.c	FUNCTION_113
0x40049db	    0x644833042528	                xor rax, qword fs:[0x28]	      5440	mbyte.c	FUNCTION_113
0x40049e4	            0x7405	                            je 0x40049eb	      5440	mbyte.c	FUNCTION_113
0x40049e6	      0xe800000000	                          call 0x40049eb	      5440	mbyte.c	FUNCTION_113
0x40049eb	        0x4883c458	                           add rsp, 0x58	      5440	mbyte.c	FUNCTION_113
0x40049ef	              0x5b	                                 pop rbx	      5440	mbyte.c	FUNCTION_113
0x40049f0	              0x5d	                                 pop rbp	      5440	mbyte.c	FUNCTION_113
0x40049f1	            0x415c	                                 pop r12	      5440	mbyte.c	FUNCTION_113
0x40049f3	            0x415d	                                 pop r13	      5440	mbyte.c	FUNCTION_113
0x40049f5	              0xc3	                                     ret	      5440	mbyte.c	FUNCTION_113
utf_ptr2cells	SWITCH,0:CALL,4:IF,3:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	28
0x40016f4	      0xb801000000	                              mov eax, 1	      1639	mbyte.c	FUNCTION_22
0x40016f9	          0x803f00	                       cmp byte [rdi], 0	      1628	mbyte.c	FUNCTION_22	IF_1
0x40016fc	            0x7943	                           jns 0x4001741	      1628	mbyte.c	FUNCTION_22	IF_1
0x40016fe	              0x55	                                push rbp	      1624	mbyte.c	FUNCTION_22
0x40016ff	              0x53	                                push rbx	      1624	mbyte.c	FUNCTION_22
0x4001700	        0x4883ec08	                              sub rsp, 8	      1624	mbyte.c	FUNCTION_22
0x4001704	          0x4889fb	                            mov rbx, rdi	      1624	mbyte.c	FUNCTION_22
0x4001707	      0xe800000000	                          call 0x400170c	      1630	mbyte.c	FUNCTION_22	IF_1	CALL_1
0x400170c	            0x89c5	                            mov ebp, eax	      1630	mbyte.c	FUNCTION_22	IF_1	CALL_1
0x400170e	          0x4889df	                            mov rdi, rbx	      1632	mbyte.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4001711	      0xe800000000	                          call 0x4001716	      1632	mbyte.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4001716	            0x85ed	                           test ebp, ebp	      1632	mbyte.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4001718	            0x741c	                            je 0x4001736	      1632	mbyte.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x400171a	          0x83f801	                              cmp eax, 1	      1632	mbyte.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x400171d	            0x7417	                            je 0x4001736	      1632	mbyte.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x400171f	          0x83fd7f	                           cmp ebp, 0x7f	      1635	mbyte.c	FUNCTION_22	IF_1	IF_3
0x4001722	            0x7f09	                            jg 0x400172d	      1635	mbyte.c	FUNCTION_22	IF_1	IF_3
0x4001724	            0x89ef	                            mov edi, ebp	      1636	mbyte.c	FUNCTION_22	IF_1	CALL_3
0x4001726	      0xe800000000	                          call 0x400172b	      1636	mbyte.c	FUNCTION_22	IF_1	CALL_3
0x400172b	            0xeb0e	                           jmp 0x400173b	      1636	mbyte.c	FUNCTION_22	IF_1	CALL_3
0x400172d	            0x89ef	                            mov edi, ebp	      1637	mbyte.c	FUNCTION_22	IF_1	CALL_4
0x400172f	      0xe800000000	                          call 0x4001734	      1637	mbyte.c	FUNCTION_22	IF_1	CALL_4
0x4001734	            0xeb05	                           jmp 0x400173b	      1637	mbyte.c	FUNCTION_22	IF_1	CALL_4
0x4001736	      0xb804000000	                              mov eax, 4	      1633	mbyte.c	FUNCTION_22	IF_1	IF_2
0x400173b	        0x4883c408	                              add rsp, 8	      1640	mbyte.c	FUNCTION_22
0x400173f	              0x5b	                                 pop rbx	      1640	mbyte.c	FUNCTION_22
0x4001740	              0x5d	                                 pop rbp	      1640	mbyte.c	FUNCTION_22
0x4001741	            0xf3c3	                                     ret	      1640	mbyte.c	FUNCTION_22
dbcs_head_off	SWITCH,0:CALL,2:IF,1:WHILE,1:FOR,0:DO,0:ELSE,0:functions,0	27
0x400068c	      0xb800000000	                              mov eax, 0	      3776	mbyte.c	FUNCTION_68	IF_1
0x4000691	          0x4839fe	                            cmp rsi, rdi	      3775	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x4000694	            0x7643	                           jbe 0x40006d9	      3775	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x4000696	              0x55	                                push rbp	      3770	mbyte.c	FUNCTION_68
0x4000697	              0x53	                                push rbx	      3770	mbyte.c	FUNCTION_68
0x4000698	          0x4889fb	                            mov rbx, rdi	      3770	mbyte.c	FUNCTION_68
0x400069b	          0x4889f5	                            mov rbp, rsi	      3770	mbyte.c	FUNCTION_68
0x400069e	         0xfb646ff	               movzx eax, byte [rsi - 1]	      3775	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x40006a2	    0x80b800000000	                       cmp byte [rax], 1	      3775	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x40006a9	            0x7427	                            je 0x40006d2	      3775	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x40006ab	      0xb800000000	                              mov eax, 0	      3776	mbyte.c	FUNCTION_68	IF_1
0x40006b0	          0x803e00	                       cmp byte [rsi], 0	      3775	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x40006b3	            0x7422	                            je 0x40006d7	      3775	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x40006b5	          0x4889df	                            mov rdi, rbx	      3782	mbyte.c	FUNCTION_68	CALL_2
0x40006b8	      0xe8def9ffff	                   call sym.dbcs_ptr2len	      3782	mbyte.c	FUNCTION_68	CALL_2
0x40006bd	            0x4898	                                    cdqe	      3782	mbyte.c	FUNCTION_68	CALL_2
0x40006bf	          0x4801c3	                            add rbx, rax	      3782	mbyte.c	FUNCTION_68	CALL_2
0x40006c2	          0x4839dd	                            cmp rbp, rbx	      3781	mbyte.c	FUNCTION_68	WHILE_1
0x40006c5	            0x77ee	                            ja 0x40006b5	      3781	mbyte.c	FUNCTION_68	WHILE_1
0x40006c7	          0x4839dd	                            cmp rbp, rbx	      3783	mbyte.c	FUNCTION_68
0x40006ca	           0xf95c0	                                setne al	      3783	mbyte.c	FUNCTION_68
0x40006cd	           0xfb6c0	                           movzx eax, al	      3783	mbyte.c	FUNCTION_68
0x40006d0	            0xeb05	                           jmp 0x40006d7	      3783	mbyte.c	FUNCTION_68
0x40006d2	      0xb800000000	                              mov eax, 0	      3776	mbyte.c	FUNCTION_68	IF_1
0x40006d7	              0x5b	                                 pop rbx	      3784	mbyte.c	FUNCTION_68
0x40006d8	              0x5d	                                 pop rbp	      3784	mbyte.c	FUNCTION_68
0x40006d9	            0xf3c3	                                     ret	      3784	mbyte.c	FUNCTION_68
im_preedit_start_cb	SWITCH,0:CALL,3:IF,0:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	9
0x4000983	        0x4883ec08	                              sub rsp, 8	      5258	mbyte.c	FUNCTION_111
0x4000987	    0xc70500000000	               mov dword [0x04000991], 1	      5263	mbyte.c	FUNCTION_111
0x4000991	    0xc70500000000	               mov dword [0x0400099b], 1	      5264	mbyte.c	FUNCTION_111
0x400099b	      0xbe00000000	                              mov esi, 0	      5265	mbyte.c	FUNCTION_111	CALL_2
0x40009a0	      0xbf01000000	                              mov edi, 1	      5265	mbyte.c	FUNCTION_111	CALL_2
0x40009a5	      0xe800000000	                          call 0x40009aa	      5265	mbyte.c	FUNCTION_111	CALL_2
0x40009aa	      0xe859ffffff	                   call sym.im_show_info	      5266	mbyte.c	FUNCTION_111	CALL_3
0x40009af	        0x4883c408	                              add rsp, 8	      5267	mbyte.c	FUNCTION_111
0x40009b3	              0xc3	                                     ret	      5267	mbyte.c	FUNCTION_111
enc_locale	SWITCH,0:CALL,7:IF,4:WHILE,0:FOR,0:DO,0:ELSE,2:functions,0	19
0x40028ee	        0x4883ec08	                              sub rsp, 8	      4461	mbyte.c	FUNCTION_89
0x40028f2	      0xbf0e000000	                            mov edi, 0xe	      4478	mbyte.c	FUNCTION_89	IF_3	CALL_5
0x40028f7	      0xe800000000	                          call 0x40028fc	      4478	mbyte.c	FUNCTION_89	IF_3	CALL_5
0x40028fc	          0x4885c0	                           test rax, rax	      4478	mbyte.c	FUNCTION_89	IF_3	CALL_5
0x40028ff	            0x7405	                            je 0x4002906	      4478	mbyte.c	FUNCTION_89	IF_3	CALL_5
0x4002901	          0x803800	                       cmp byte [rax], 0	      4478	mbyte.c	FUNCTION_89	IF_3	CALL_5
0x4002904	            0x7520	                           jne 0x4002926	      4478	mbyte.c	FUNCTION_89	IF_3	CALL_5
0x4002906	      0xbe00000000	                              mov esi, 0	      4481	mbyte.c	FUNCTION_89	IF_3	IF_4	CALL_6
0x400290b	      0xbf00000000	                              mov edi, 0	      4481	mbyte.c	FUNCTION_89	IF_3	IF_4	CALL_6
0x4002910	      0xe800000000	                          call 0x4002915	      4481	mbyte.c	FUNCTION_89	IF_3	IF_4	CALL_6
0x4002915	          0x4885c0	                           test rax, rax	      4481	mbyte.c	FUNCTION_89	IF_3	IF_4	CALL_6
0x4002918	            0x740c	                            je 0x4002926	      4481	mbyte.c	FUNCTION_89	IF_3	IF_4	CALL_6
0x400291a	          0x803800	                       cmp byte [rax], 0	      4481	mbyte.c	FUNCTION_89	IF_3	IF_4	CALL_6
0x400291d	      0xba00000000	                              mov edx, 0	      4483	mbyte.c	FUNCTION_89	IF_3	IF_4
0x4002922	        0x480f44c2	                          cmove rax, rdx	      4483	mbyte.c	FUNCTION_89	IF_3	IF_4
0x4002926	          0x4889c7	                            mov rdi, rax	      4485	mbyte.c	FUNCTION_89	CALL_7
0x4002929	      0xe800000000	                          call 0x400292e	      4485	mbyte.c	FUNCTION_89	CALL_7
0x400292e	        0x4883c408	                              add rsp, 8	      4487	mbyte.c	FUNCTION_89
0x4002932	              0xc3	                                     ret	      4487	mbyte.c	FUNCTION_89
utfc_ptr2len_len	SWITCH,0:CALL,3:IF,6:WHILE,1:FOR,0:DO,0:ELSE,0:functions,0	88
0x4001122	            0x85f6	                           test esi, esi	      2192	mbyte.c	FUNCTION_49	IF_1
0x4001124	     0xf8ece000000	                           jle 0x40011f8	      2192	mbyte.c	FUNCTION_49	IF_1
0x400112a	           0xfb617	                   movzx edx, byte [rdi]	      2192	mbyte.c	FUNCTION_49	IF_1
0x400112d	      0xb800000000	                              mov eax, 0	      2193	mbyte.c	FUNCTION_49	IF_1
0x4001132	            0x84d2	                             test dl, dl	      2192	mbyte.c	FUNCTION_49	IF_1
0x4001134	     0xf84fe000000	                            je 0x4001238	      2192	mbyte.c	FUNCTION_49	IF_1
0x400113a	            0x4157	                                push r15	      2186	mbyte.c	FUNCTION_49
0x400113c	            0x4156	                                push r14	      2186	mbyte.c	FUNCTION_49
0x400113e	            0x4155	                                push r13	      2186	mbyte.c	FUNCTION_49
0x4001140	            0x4154	                                push r12	      2186	mbyte.c	FUNCTION_49
0x4001142	              0x55	                                push rbp	      2186	mbyte.c	FUNCTION_49
0x4001143	              0x53	                                push rbx	      2186	mbyte.c	FUNCTION_49
0x4001144	        0x4883ec08	                              sub rsp, 8	      2186	mbyte.c	FUNCTION_49
0x4001148	          0x4189f4	                           mov r12d, esi	      2186	mbyte.c	FUNCTION_49
0x400114b	          0x4989fe	                            mov r14, rdi	      2186	mbyte.c	FUNCTION_49
0x400114e	            0x84d2	                             test dl, dl	      2194	mbyte.c	FUNCTION_49	IF_2
0x4001150	            0x781d	                            js 0x400116f	      2194	mbyte.c	FUNCTION_49	IF_2
0x4001152	          0x83fe01	                              cmp esi, 1	      2194	mbyte.c	FUNCTION_49	IF_2
0x4001155	     0xf84a3000000	                            je 0x40011fe	      2194	mbyte.c	FUNCTION_49	IF_2
0x400115b	      0xb801000000	                              mov eax, 1	      2195	mbyte.c	FUNCTION_49	IF_2
0x4001160	        0x807f0100	                   cmp byte [rdi + 1], 0	      2194	mbyte.c	FUNCTION_49	IF_2
0x4001164	     0xf89c0000000	                           jns 0x400122a	      2194	mbyte.c	FUNCTION_49	IF_2
0x400116a	      0xe9ae000000	                           jmp 0x400121d	      2194	mbyte.c	FUNCTION_49	IF_2
0x400116f	      0xe800000000	                          call 0x4001174	      2198	mbyte.c	FUNCTION_49	CALL_1
0x4001174	          0x4189c5	                           mov r13d, eax	      2198	mbyte.c	FUNCTION_49	CALL_1
0x4001177	      0xb801000000	                              mov eax, 1	      2202	mbyte.c	FUNCTION_49	IF_3
0x400117c	        0x4183fd01	                             cmp r13d, 1	      2201	mbyte.c	FUNCTION_49	IF_3
0x4001180	     0xf84a4000000	                            je 0x400122a	      2201	mbyte.c	FUNCTION_49	IF_3
0x4001186	      0xb801000000	                              mov eax, 1	      2202	mbyte.c	FUNCTION_49	IF_3
0x400118b	          0x4539ec	                          cmp r12d, r13d	      2201	mbyte.c	FUNCTION_49	IF_3
0x400118e	     0xf8c96000000	                            jl 0x400122a	      2201	mbyte.c	FUNCTION_49	IF_3
0x4001194	            0x7e6f	                           jle 0x4001205	      2211	mbyte.c	FUNCTION_49	WHILE_1
0x4001196	          0x4963ed	                        movsxd rbp, r13d	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x4001199	          0x4c01f5	                            add rbp, r14	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x400119c	        0x807d0000	                       cmp byte [rbp], 0	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x40011a0	            0x7968	                           jns 0x400120a	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x40011a2	    0xc74424040000	                  mov dword [rsp + 4], 0	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x40011aa	            0xeb14	                           jmp 0x40011c0	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x40011ac	          0x4863eb	                         movsxd rbp, ebx	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x40011af	          0x4c01f5	                            add rbp, r14	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x40011b2	      0x44896c2404	               mov dword [rsp + 4], r13d	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x40011b7	        0x807d0000	                       cmp byte [rbp], 0	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x40011bb	            0x7952	                           jns 0x400120f	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x40011bd	          0x4189dd	                           mov r13d, ebx	      2233	mbyte.c	FUNCTION_49	WHILE_1
0x40011c0	          0x4589e7	                          mov r15d, r12d	      2222	mbyte.c	FUNCTION_49	WHILE_1	CALL_2
0x40011c3	          0x4529ef	                          sub r15d, r13d	      2222	mbyte.c	FUNCTION_49	WHILE_1	CALL_2
0x40011c6	          0x4489fe	                           mov esi, r15d	      2222	mbyte.c	FUNCTION_49	WHILE_1	CALL_2
0x40011c9	          0x4889ef	                            mov rdi, rbp	      2222	mbyte.c	FUNCTION_49	WHILE_1	CALL_2
0x40011cc	      0xe800000000	                          call 0x40011d1	      2222	mbyte.c	FUNCTION_49	WHILE_1	CALL_2
0x40011d1	            0x89c3	                            mov ebx, eax	      2222	mbyte.c	FUNCTION_49	WHILE_1	CALL_2
0x40011d3	          0x4139c7	                           cmp r15d, eax	      2223	mbyte.c	FUNCTION_49	WHILE_1	IF_5
0x40011d6	            0x7c3b	                            jl 0x4001213	      2223	mbyte.c	FUNCTION_49	WHILE_1	IF_5
0x40011d8	      0x48637c2404	            movsxd rdi, dword [rsp + 4] 	      2226	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x40011dd	          0x4c01f7	                            add rdi, r14	      2226	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x40011e0	          0x4889ee	                            mov rsi, rbp	      2226	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x40011e3	      0xe800000000	                          call 0x40011e8	      2226	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x40011e8	            0x85c0	                           test eax, eax	      2226	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x40011ea	            0x742c	                            je 0x4001218	      2226	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x40011ec	          0x4401eb	                           add ebx, r13d	      2233	mbyte.c	FUNCTION_49	WHILE_1
0x40011ef	          0x4139dc	                           cmp r12d, ebx	      2211	mbyte.c	FUNCTION_49	WHILE_1
0x40011f2	            0x7fb8	                            jg 0x40011ac	      2211	mbyte.c	FUNCTION_49	WHILE_1
0x40011f4	            0x89d8	                            mov eax, ebx	      2233	mbyte.c	FUNCTION_49	WHILE_1
0x40011f6	            0xeb32	                           jmp 0x400122a	      2233	mbyte.c	FUNCTION_49	WHILE_1
0x40011f8	      0xb800000000	                              mov eax, 0	      2193	mbyte.c	FUNCTION_49	IF_1
0x40011fd	              0xc3	                                     ret	      2236	mbyte.c	FUNCTION_49
0x40011fe	      0xb801000000	                              mov eax, 1	      2195	mbyte.c	FUNCTION_49	IF_2
0x4001203	            0xeb25	                           jmp 0x400122a	      2195	mbyte.c	FUNCTION_49	IF_2
0x4001205	          0x4489e8	                           mov eax, r13d	      2211	mbyte.c	FUNCTION_49	WHILE_1
0x4001208	            0xeb20	                           jmp 0x400122a	      2211	mbyte.c	FUNCTION_49	WHILE_1
0x400120a	          0x4489e8	                           mov eax, r13d	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x400120d	            0xeb1b	                           jmp 0x400122a	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x400120f	            0x89d8	                            mov eax, ebx	      2233	mbyte.c	FUNCTION_49	WHILE_1
0x4001211	            0xeb17	                           jmp 0x400122a	      2233	mbyte.c	FUNCTION_49	WHILE_1
0x4001213	          0x4489e8	                           mov eax, r13d	      2233	mbyte.c	FUNCTION_49	WHILE_1
0x4001216	            0xeb12	                           jmp 0x400122a	      2233	mbyte.c	FUNCTION_49	WHILE_1
0x4001218	          0x4489e8	                           mov eax, r13d	      2233	mbyte.c	FUNCTION_49	WHILE_1
0x400121b	            0xeb0d	                           jmp 0x400122a	      2233	mbyte.c	FUNCTION_49	WHILE_1
0x400121d	      0xe800000000	                          call 0x4001222	      2198	mbyte.c	FUNCTION_49	CALL_1
0x4001222	          0x4189c5	                           mov r13d, eax	      2198	mbyte.c	FUNCTION_49	CALL_1
0x4001225	      0xe95cffffff	                           jmp 0x4001186	      2198	mbyte.c	FUNCTION_49	CALL_1
0x400122a	        0x4883c408	                              add rsp, 8	      2236	mbyte.c	FUNCTION_49
0x400122e	              0x5b	                                 pop rbx	      2236	mbyte.c	FUNCTION_49
0x400122f	              0x5d	                                 pop rbp	      2236	mbyte.c	FUNCTION_49
0x4001230	            0x415c	                                 pop r12	      2236	mbyte.c	FUNCTION_49
0x4001232	            0x415d	                                 pop r13	      2236	mbyte.c	FUNCTION_49
0x4001234	            0x415e	                                 pop r14	      2236	mbyte.c	FUNCTION_49
0x4001236	            0x415f	                                 pop r15	      2236	mbyte.c	FUNCTION_49
0x4001238	            0xf3c3	                                     ret	      2236	mbyte.c	FUNCTION_49
dbcs_screen_tail_off	SWITCH,0:CALL,2:IF,1:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	19
0x40020c2	           0xfb616	                   movzx edx, byte [rsi]	      4076	mbyte.c	FUNCTION_76	IF_1
0x40020c5	      0xb800000000	                              mov eax, 0	      4079	mbyte.c	FUNCTION_76	IF_1
0x40020ca	            0x84d2	                             test dl, dl	      4076	mbyte.c	FUNCTION_76	IF_1
0x40020cc	            0x7436	                            je 0x4002104	      4076	mbyte.c	FUNCTION_76	IF_1
0x40020ce	        0x807e0100	                   cmp byte [rsi + 1], 0	      4076	mbyte.c	FUNCTION_76	IF_1
0x40020d2	            0x7430	                            je 0x4002104	      4076	mbyte.c	FUNCTION_76	IF_1
0x40020d4	    0x813d00000000	         cmp dword [0x040020de], 0x26cc 	      4077	mbyte.c	FUNCTION_76	IF_1
0x40020de	            0x7505	                           jne 0x40020e5	      4077	mbyte.c	FUNCTION_76	IF_1
0x40020e0	          0x80fa8e	                            cmp dl, 0x8e	      4077	mbyte.c	FUNCTION_76	IF_1
0x40020e3	            0x741f	                            je 0x4002104	      4077	mbyte.c	FUNCTION_76	IF_1
0x40020e5	           0xfb6d2	                           movzx edx, dl	      4078	mbyte.c	FUNCTION_76	IF_1	CALL_1
0x40020e8	      0xb800000000	                              mov eax, 0	      4079	mbyte.c	FUNCTION_76	IF_1
0x40020ed	    0x80ba00000000	                       cmp byte [rdx], 1	      4078	mbyte.c	FUNCTION_76	IF_1	CALL_1
0x40020f4	            0x740e	                            je 0x4002104	      4078	mbyte.c	FUNCTION_76	IF_1	CALL_1
0x40020f6	      0xe800000000	                          call 0x40020fb	      4082	mbyte.c	FUNCTION_76	CALL_2
0x40020fb	      0xba01000000	                              mov edx, 1	      4082	mbyte.c	FUNCTION_76	CALL_2
0x4002100	            0x29c2	                            sub edx, eax	      4082	mbyte.c	FUNCTION_76	CALL_2
0x4002102	            0x89d0	                            mov eax, edx	      4082	mbyte.c	FUNCTION_76	CALL_2
0x4002104	            0xf3c3	                                     ret	      4083	mbyte.c	FUNCTION_76
convert_input_safe	SWITCH,0:CALL,5:IF,4:WHILE,0:FOR,0:DO,0:ELSE,1:functions,0	66
0x4003c86	            0x4157	                                push r15	      6674	mbyte.c	FUNCTION_143
0x4003c88	            0x4156	                                push r14	      6674	mbyte.c	FUNCTION_143
0x4003c8a	            0x4155	                                push r13	      6674	mbyte.c	FUNCTION_143
0x4003c8c	            0x4154	                                push r12	      6674	mbyte.c	FUNCTION_143
0x4003c8e	              0x55	                                push rbp	      6674	mbyte.c	FUNCTION_143
0x4003c8f	              0x53	                                push rbx	      6674	mbyte.c	FUNCTION_143
0x4003c90	        0x4883ec18	                           sub rsp, 0x18	      6674	mbyte.c	FUNCTION_143
0x4003c94	          0x4889fd	                            mov rbp, rdi	      6674	mbyte.c	FUNCTION_143
0x4003c97	            0x89f3	                            mov ebx, esi	      6674	mbyte.c	FUNCTION_143
0x4003c99	          0x4189d5	                           mov r13d, edx	      6674	mbyte.c	FUNCTION_143
0x4003c9c	          0x4989cc	                            mov r12, rcx	      6674	mbyte.c	FUNCTION_143
0x4003c9f	          0x4d89c6	                             mov r14, r8	      6674	mbyte.c	FUNCTION_143
0x4003ca2	    0x64488b042528	                mov rax, qword fs:[0x28]	      6674	mbyte.c	FUNCTION_143
0x4003cab	      0x4889442408	                mov qword [rsp + 8], rax	      6674	mbyte.c	FUNCTION_143
0x4003cb0	            0x31c0	                            xor eax, eax	      6674	mbyte.c	FUNCTION_143
0x4003cb2	          0x893424	                    mov dword [rsp], esi	      6676	mbyte.c	FUNCTION_143
0x4003cb5	    0xc74424040000	                  mov dword [rsp + 4], 0	      6677	mbyte.c	FUNCTION_143
0x4003cbd	      0x488d442404	                      lea rax, [rsp + 4]	      6679	mbyte.c	FUNCTION_143	CALL_1
0x4003cc2	          0x4885c9	                           test rcx, rcx	      6679	mbyte.c	FUNCTION_143	CALL_1
0x4003cc5	      0xb900000000	                              mov ecx, 0	      6679	mbyte.c	FUNCTION_143	CALL_1
0x4003cca	        0x480f45c8	                         cmovne rcx, rax	      6679	mbyte.c	FUNCTION_143	CALL_1
0x4003cce	          0x4889e2	                            mov rdx, rsp	      6679	mbyte.c	FUNCTION_143	CALL_1
0x4003cd1	          0x4889fe	                            mov rsi, rdi	      6679	mbyte.c	FUNCTION_143	CALL_1
0x4003cd4	      0xbf00000000	                              mov edi, 0	      6679	mbyte.c	FUNCTION_143	CALL_1
0x4003cd9	      0xe800000000	                          call 0x4003cde	      6679	mbyte.c	FUNCTION_143	CALL_1
0x4003cde	          0x4885c0	                           test rax, rax	      6681	mbyte.c	FUNCTION_143	IF_1
0x4003ce1	            0x745a	                            je 0x4003d3d	      6681	mbyte.c	FUNCTION_143	IF_1
0x4003ce3	          0x4989c7	                            mov r15, rax	      6681	mbyte.c	FUNCTION_143	IF_1
0x4003ce6	        0x44392c24	                   cmp dword [rsp], r13d	      6683	mbyte.c	FUNCTION_143	IF_1	IF_2
0x4003cea	            0x7f46	                            jg 0x4003d32	      6683	mbyte.c	FUNCTION_143	IF_1	IF_2
0x4003cec	        0x8b7c2404	                mov edi, dword [rsp + 4]	      6685	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3
0x4003cf0	            0x85ff	                           test edi, edi	      6685	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3
0x4003cf2	            0x7e2d	                           jle 0x4003d21	      6685	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3
0x4003cf4	      0xe800000000	                          call 0x4003cf9	      6688	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_2
0x4003cf9	        0x49890424	                    mov qword [r12], rax	      6688	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_2
0x4003cfd	          0x4885c0	                           test rax, rax	      6689	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	IF_4
0x4003d00	            0x7418	                            je 0x4003d1a	      6689	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	IF_4
0x4003d02	      0x4863542404	            movsxd rdx, dword [rsp + 4] 	      6690	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_3
0x4003d07	          0x4863f3	                         movsxd rsi, ebx	        59	string3.h	FUNCTION_147	CALL_3
0x4003d0a	          0x4829d6	                            sub rsi, rdx	        59	string3.h	FUNCTION_147	CALL_3
0x4003d0d	      0x488d743500	                    lea rsi, [rbp + rsi]	        59	string3.h	FUNCTION_147	CALL_3
0x4003d12	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_147	CALL_3
0x4003d15	      0xe800000000	                          call 0x4003d1a	        59	string3.h	FUNCTION_147	CALL_3
0x4003d1a	        0x8b442404	                mov eax, dword [rsp + 4]	      6691	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3
0x4003d1e	          0x418906	                    mov dword [r14], eax	      6691	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3
0x4003d21	        0x48631424	                 movsxd rdx, dword [rsp]	        59	string3.h	FUNCTION_147	CALL_3
0x4003d25	          0x4c89fe	                            mov rsi, r15	        59	string3.h	FUNCTION_147	CALL_3
0x4003d28	          0x4889ef	                            mov rdi, rbp	        59	string3.h	FUNCTION_147	CALL_3
0x4003d2b	      0xe800000000	                          call 0x4003d30	        59	string3.h	FUNCTION_147	CALL_3
0x4003d30	            0xeb03	                           jmp 0x4003d35	        59	string3.h	FUNCTION_147	CALL_3
0x4003d32	          0x891c24	                    mov dword [rsp], ebx	      6698	mbyte.c	FUNCTION_143	IF_1	ELSE_1
0x4003d35	          0x4c89ff	                            mov rdi, r15	      6699	mbyte.c	FUNCTION_143	IF_1	CALL_5
0x4003d38	      0xe800000000	                          call 0x4003d3d	      6699	mbyte.c	FUNCTION_143	IF_1	CALL_5
0x4003d3d	          0x8b0424	                    mov eax, dword [rsp]	      6702	mbyte.c	FUNCTION_143
0x4003d40	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      6702	mbyte.c	FUNCTION_143
0x4003d45	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      6702	mbyte.c	FUNCTION_143
0x4003d4e	            0x7405	                            je 0x4003d55	      6702	mbyte.c	FUNCTION_143
0x4003d50	      0xe800000000	                          call 0x4003d55	      6702	mbyte.c	FUNCTION_143
0x4003d55	        0x4883c418	                           add rsp, 0x18	      6702	mbyte.c	FUNCTION_143
0x4003d59	              0x5b	                                 pop rbx	      6702	mbyte.c	FUNCTION_143
0x4003d5a	              0x5d	                                 pop rbp	      6702	mbyte.c	FUNCTION_143
0x4003d5b	            0x415c	                                 pop r12	      6702	mbyte.c	FUNCTION_143
0x4003d5d	            0x415d	                                 pop r13	      6702	mbyte.c	FUNCTION_143
0x4003d5f	            0x415e	                                 pop r14	      6702	mbyte.c	FUNCTION_143
0x4003d61	            0x415f	                                 pop r15	      6702	mbyte.c	FUNCTION_143
0x4003d63	              0xc3	                                     ret	      6702	mbyte.c	FUNCTION_143
dbcs_ptr2len_len	SWITCH,0:CALL,1:IF,3:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	21
0x40000cc	            0x85f6	                           test esi, esi	      1166	mbyte.c	FUNCTION_17	IF_1
0x40000ce	            0x7e2c	                           jle 0x40000fc	      1166	mbyte.c	FUNCTION_17	IF_1
0x40000d0	           0xfb617	                   movzx edx, byte [rdi]	      1166	mbyte.c	FUNCTION_17	IF_1
0x40000d3	      0xb800000000	                              mov eax, 0	      1167	mbyte.c	FUNCTION_17	IF_1
0x40000d8	            0x84d2	                             test dl, dl	      1166	mbyte.c	FUNCTION_17	IF_1
0x40000da	            0x742b	                            je 0x4000107	      1166	mbyte.c	FUNCTION_17	IF_1
0x40000dc	          0x83fe01	                              cmp esi, 1	      1168	mbyte.c	FUNCTION_17	IF_2
0x40000df	            0x7421	                            je 0x4000102	      1168	mbyte.c	FUNCTION_17	IF_2
0x40000e1	           0xfb6d2	                           movzx edx, dl	      1171	mbyte.c	FUNCTION_17	CALL_1
0x40000e4	     0xfbe92000000	                   movsx edx, byte [rdx]	      1171	mbyte.c	FUNCTION_17	CALL_1
0x40000eb	            0x89d0	                            mov eax, edx	      1171	mbyte.c	FUNCTION_17	CALL_1
0x40000ed	          0x83fa02	                              cmp edx, 2	      1172	mbyte.c	FUNCTION_17	IF_3
0x40000f0	            0x7515	                           jne 0x4000107	      1172	mbyte.c	FUNCTION_17	IF_3
0x40000f2	        0x807f0101	                   cmp byte [rdi + 1], 1	      1173	mbyte.c	FUNCTION_17	IF_3
0x40000f6	            0x19c0	                            sbb eax, eax	      1173	mbyte.c	FUNCTION_17	IF_3
0x40000f8	          0x83c002	                              add eax, 2	      1173	mbyte.c	FUNCTION_17	IF_3
0x40000fb	              0xc3	                                     ret	      1173	mbyte.c	FUNCTION_17	IF_3
0x40000fc	      0xb800000000	                              mov eax, 0	      1167	mbyte.c	FUNCTION_17	IF_1
0x4000101	              0xc3	                                     ret	      1167	mbyte.c	FUNCTION_17	IF_1
0x4000102	      0xb801000000	                              mov eax, 1	      1169	mbyte.c	FUNCTION_17	IF_2
0x4000107	            0xf3c3	                                     ret	      1175	mbyte.c	FUNCTION_17
mb_charlen	SWITCH,0:CALL,0:IF,1:WHILE,0:FOR,1:DO,0:ELSE,0:functions,0	25
0x40021fe	          0x4885ff	                           test rdi, rdi	      4152	mbyte.c	FUNCTION_80	IF_1
0x4002201	            0x742d	                            je 0x4002230	      4152	mbyte.c	FUNCTION_80	IF_1
0x4002203	              0x55	                                push rbp	      4148	mbyte.c	FUNCTION_80
0x4002204	              0x53	                                push rbx	      4148	mbyte.c	FUNCTION_80
0x4002205	        0x4883ec08	                              sub rsp, 8	      4148	mbyte.c	FUNCTION_80
0x4002209	          0x4889fb	                            mov rbx, rdi	      4148	mbyte.c	FUNCTION_80
0x400220c	          0x803f00	                       cmp byte [rdi], 0	      4155	mbyte.c	FUNCTION_80	FOR_1
0x400220f	            0x7425	                            je 0x4002236	      4155	mbyte.c	FUNCTION_80	FOR_1
0x4002211	      0xbd00000000	                              mov ebp, 0	      4155	mbyte.c	FUNCTION_80	FOR_1
0x4002216	          0x4889df	                            mov rdi, rbx	      4156	mbyte.c	FUNCTION_80	FOR_1
0x4002219	    0xff1500000000	                 call qword [0x0400221f]	      4156	mbyte.c	FUNCTION_80	FOR_1
0x400221f	            0x4898	                                    cdqe	      4156	mbyte.c	FUNCTION_80	FOR_1
0x4002221	          0x4801c3	                            add rbx, rax	      4156	mbyte.c	FUNCTION_80	FOR_1
0x4002224	          0x83c501	                              add ebp, 1	      4155	mbyte.c	FUNCTION_80	FOR_1
0x4002227	          0x803b00	                       cmp byte [rbx], 0	      4155	mbyte.c	FUNCTION_80	FOR_1
0x400222a	            0x75ea	                           jne 0x4002216	      4155	mbyte.c	FUNCTION_80	FOR_1
0x400222c	            0x89e8	                            mov eax, ebp	      4155	mbyte.c	FUNCTION_80	FOR_1
0x400222e	            0xeb0b	                           jmp 0x400223b	      4155	mbyte.c	FUNCTION_80	FOR_1
0x4002230	      0xb800000000	                              mov eax, 0	      4153	mbyte.c	FUNCTION_80	IF_1
0x4002235	              0xc3	                                     ret	      4159	mbyte.c	FUNCTION_80
0x4002236	      0xb800000000	                              mov eax, 0	      4155	mbyte.c	FUNCTION_80	FOR_1
0x400223b	        0x4883c408	                              add rsp, 8	      4159	mbyte.c	FUNCTION_80
0x400223f	              0x5b	                                 pop rbx	      4159	mbyte.c	FUNCTION_80
0x4002240	              0x5d	                                 pop rbp	      4159	mbyte.c	FUNCTION_80
0x4002241	              0xc3	                                     ret	      4159	mbyte.c	FUNCTION_80
remove_bom	SWITCH,0:CALL,2:IF,2:WHILE,1:FOR,0:DO,0:ELSE,1:functions,0	33
0x4000c00	              0x55	                                push rbp	       854	mbyte.c	FUNCTION_6
0x4000c01	              0x53	                                push rbx	       854	mbyte.c	FUNCTION_6
0x4000c02	        0x4883ec08	                              sub rsp, 8	       854	mbyte.c	FUNCTION_6
0x4000c06	          0x4889fb	                            mov rbx, rdi	       854	mbyte.c	FUNCTION_6
0x4000c09	    0x48c7c5ffffff	             mov rbp, 0xffffffffffffffff	       862	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x4000c10	    0x833d00000000	               cmp dword [0x04000c17], 0	       855	mbyte.c	FUNCTION_6	IF_1
0x4000c17	            0x7533	                           jne 0x4000c4c	       855	mbyte.c	FUNCTION_6	IF_1
0x4000c19	            0xeb46	                           jmp 0x4000c61	       855	mbyte.c	FUNCTION_6	IF_1
0x4000c1b	        0x807b01bb	                cmp byte [rbx + 1], 0xbb	       861	mbyte.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4000c1f	            0x7527	                           jne 0x4000c48	       861	mbyte.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4000c21	        0x807b02bf	                cmp byte [rbx + 2], 0xbf	       861	mbyte.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4000c25	            0x7521	                           jne 0x4000c48	       861	mbyte.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4000c27	        0x488d7303	                      lea rsi, [rbx + 3]	       862	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x4000c2b	      0xb800000000	                              mov eax, 0	       862	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x4000c30	          0x4889e9	                            mov rcx, rbp	       862	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x4000c33	          0x4889f7	                            mov rdi, rsi	       862	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x4000c36	            0xf2ae	              repne scasb al, byte [rdi]	       862	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x4000c38	          0x4889ca	                            mov rdx, rcx	       862	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x4000c3b	          0x48f7d2	                                 not rdx	       862	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x4000c3e	          0x4889df	                            mov rdi, rbx	        59	string3.h	FUNCTION_147	CALL_3
0x4000c41	      0xe800000000	                          call 0x4000c46	        59	string3.h	FUNCTION_147	CALL_3
0x4000c46	            0xeb04	                           jmp 0x4000c4c	        59	string3.h	FUNCTION_147	CALL_3
0x4000c48	        0x4883c301	                              add rbx, 1	       864	mbyte.c	FUNCTION_6	IF_1	WHILE_1	ELSE_1
0x4000c4c	      0xbeef000000	                           mov esi, 0xef	       859	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_1
0x4000c51	          0x4889df	                            mov rdi, rbx	       859	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_1
0x4000c54	      0xe800000000	                          call 0x4000c59	       859	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_1
0x4000c59	          0x4889c3	                            mov rbx, rax	       859	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_1
0x4000c5c	          0x4885c0	                           test rax, rax	       859	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_1
0x4000c5f	            0x75ba	                           jne 0x4000c1b	       859	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_1
0x4000c61	        0x4883c408	                              add rsp, 8	       867	mbyte.c	FUNCTION_6	ELSE_1
0x4000c65	              0x5b	                                 pop rbx	       867	mbyte.c	FUNCTION_6	ELSE_1
0x4000c66	              0x5d	                                 pop rbp	       867	mbyte.c	FUNCTION_6	ELSE_1
0x4000c67	              0xc3	                                     ret	       867	mbyte.c	FUNCTION_6	ELSE_1
utf_class_buf	SWITCH,0:CALL,2:IF,6:WHILE,1:FOR,0:DO,0:ELSE,2:functions,0	51
0x4001743	        0x4883ec08	                              sub rsp, 8	      2787	mbyte.c	FUNCTION_56
0x4001747	    0x81ffff000000	                           cmp edi, 0xff	      2870	mbyte.c	FUNCTION_56	IF_1
0x400174d	            0x7f35	                            jg 0x4001784	      2870	mbyte.c	FUNCTION_56	IF_1
0x400174f	      0xb800000000	                              mov eax, 0	      2873	mbyte.c	FUNCTION_56	IF_1	IF_2
0x4001754	          0x83ff09	                              cmp edi, 9	      2872	mbyte.c	FUNCTION_56	IF_1	IF_2
0x4001757	     0xf849f000000	                            je 0x40017fc	      2872	mbyte.c	FUNCTION_56	IF_1	IF_2
0x400175d	    0xf7c7dfffffff	                    test edi, 0xffffffdf	      2872	mbyte.c	FUNCTION_56	IF_1	IF_2
0x4001763	     0xf848e000000	                            je 0x40017f7	      2872	mbyte.c	FUNCTION_56	IF_1	IF_2
0x4001769	    0x81ffa0000000	                           cmp edi, 0xa0	      2872	mbyte.c	FUNCTION_56	IF_1	IF_2
0x400176f	     0xf8482000000	                            je 0x40017f7	      2872	mbyte.c	FUNCTION_56	IF_1	IF_2
0x4001775	      0xe800000000	                          call 0x400177a	      2874	mbyte.c	FUNCTION_56	IF_1	IF_3	CALL_1
0x400177a	          0x83f801	                              cmp eax, 1	      2876	mbyte.c	FUNCTION_56	IF_1
0x400177d	            0x19c0	                            sbb eax, eax	      2876	mbyte.c	FUNCTION_56	IF_1
0x400177f	          0x83c002	                              add eax, 2	      2876	mbyte.c	FUNCTION_56	IF_1
0x4001782	            0xeb78	                           jmp 0x40017fc	      2876	mbyte.c	FUNCTION_56	IF_1
0x4001784	    0x41b842000000	                           mov r8d, 0x42	      2876	mbyte.c	FUNCTION_56	IF_1
0x400178a	      0xbe00000000	                              mov esi, 0	      2876	mbyte.c	FUNCTION_56	IF_1
0x400178f	        0x428d0406	                     lea eax, [rsi + r8]	      2882	mbyte.c	FUNCTION_56	WHILE_1
0x4001793	            0x89c1	                            mov ecx, eax	      2882	mbyte.c	FUNCTION_56	WHILE_1
0x4001795	          0xc1e91f	                           shr ecx, 0x1f	      2882	mbyte.c	FUNCTION_56	WHILE_1
0x4001798	             0x1c8	                            add eax, ecx	      2882	mbyte.c	FUNCTION_56	WHILE_1
0x400179a	            0xd1f8	                              sar eax, 1	      2882	mbyte.c	FUNCTION_56	WHILE_1
0x400179c	          0x4863c8	                         movsxd rcx, eax	      2883	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x400179f	        0x488d0c49	                  lea rcx, [rcx + rcx*2]	      2883	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x40017a3	    0x393c8d000000	                  cmp dword [rcx*4], edi	      2883	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x40017aa	            0x7305	                           jae 0x40017b1	      2883	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x40017ac	          0x8d7001	                      lea esi, [rax + 1]	      2884	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x40017af	            0xeb26	                           jmp 0x40017d7	      2884	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x40017b1	          0x4863d0	                         movsxd rdx, eax	      2885	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x40017b4	        0x488d1452	                  lea rdx, [rdx + rdx*2]	      2885	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x40017b8	    0x3b3c95000000	                  cmp edi, dword [rdx*4]	      2885	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x40017bf	            0x7306	                           jae 0x40017c7	      2885	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x40017c1	        0x448d40ff	                      lea r8d, [rax - 1]	      2886	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x40017c5	            0xeb10	                           jmp 0x40017d7	      2886	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x40017c7	          0x4c63c8	                          movsxd r9, eax	      2888	mbyte.c	FUNCTION_56	WHILE_1	ELSE_2
0x40017ca	        0x4b8d0449	                    lea rax, [r9 + r9*2]	      2888	mbyte.c	FUNCTION_56	WHILE_1	ELSE_2
0x40017ce	    0x8b0485000000	                  mov eax, dword [rax*4]	      2888	mbyte.c	FUNCTION_56	WHILE_1	ELSE_2
0x40017d5	            0xeb25	                           jmp 0x40017fc	      2888	mbyte.c	FUNCTION_56	WHILE_1	ELSE_2
0x40017d7	          0x4439c6	                            cmp esi, r8d	      2880	mbyte.c	FUNCTION_56	WHILE_1
0x40017da	            0x7eb3	                           jle 0x400178f	      2880	mbyte.c	FUNCTION_56	WHILE_1
0x40017dc	            0x89fa	                            mov edx, edi	      2892	mbyte.c	FUNCTION_56	IF_6	CALL_2
0x40017de	      0xbec0080000	                          mov esi, 0x8c0	      2892	mbyte.c	FUNCTION_56	IF_6	CALL_2
0x40017e3	      0xbf00000000	                              mov edi, 0	      2892	mbyte.c	FUNCTION_56	IF_6	CALL_2
0x40017e8	      0xe81ce9ffff	                        call sym.intable	      2892	mbyte.c	FUNCTION_56	IF_6	CALL_2
0x40017ed	          0x83f801	                              cmp eax, 1	      2896	mbyte.c	FUNCTION_56
0x40017f0	            0x19c0	                            sbb eax, eax	      2896	mbyte.c	FUNCTION_56
0x40017f2	          0x83c003	                              add eax, 3	      2896	mbyte.c	FUNCTION_56
0x40017f5	            0xeb05	                           jmp 0x40017fc	      2896	mbyte.c	FUNCTION_56
0x40017f7	      0xb800000000	                              mov eax, 0	      2873	mbyte.c	FUNCTION_56	IF_1	IF_2
0x40017fc	        0x4883c408	                              add rsp, 8	      2897	mbyte.c	FUNCTION_56
0x4001800	              0xc3	                                     ret	      2897	mbyte.c	FUNCTION_56
latin_ptr2len_len	SWITCH,0:CALL,0:IF,1:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	8
0x40000b8	            0x85f6	                           test esi, esi	      1156	mbyte.c	FUNCTION_16	IF_1
0x40000ba	            0x7e0a	                           jle 0x40000c6	      1156	mbyte.c	FUNCTION_16	IF_1
0x40000bc	          0x803f00	                       cmp byte [rdi], 0	      1157	mbyte.c	FUNCTION_16	IF_1
0x40000bf	           0xf95c0	                                setne al	      1157	mbyte.c	FUNCTION_16	IF_1
0x40000c2	           0xfb6c0	                           movzx eax, al	      1157	mbyte.c	FUNCTION_16	IF_1
0x40000c5	              0xc3	                                     ret	      1157	mbyte.c	FUNCTION_16	IF_1
0x40000c6	      0xb800000000	                              mov eax, 0	      1157	mbyte.c	FUNCTION_16	IF_1
0x40000cb	              0xc3	                                     ret	      1159	mbyte.c	FUNCTION_16
enc_skip	SWITCH,0:CALL,2:IF,2:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	23
0x400247f	          0x4889f8	                            mov rax, rdi	      4285	mbyte.c	FUNCTION_85
0x4002482	      0xbf00000000	                              mov edi, 0	      4286	mbyte.c	FUNCTION_85	IF_1	CALL_1
0x4002487	      0xb906000000	                              mov ecx, 6	      4286	mbyte.c	FUNCTION_85	IF_1	CALL_1
0x400248c	          0x4889c6	                            mov rsi, rax	      4286	mbyte.c	FUNCTION_85	IF_1	CALL_1
0x400248f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4286	mbyte.c	FUNCTION_85	IF_1	CALL_1
0x4002491	           0xf97c1	                                 seta cl	      4286	mbyte.c	FUNCTION_85	IF_1	CALL_1
0x4002494	           0xf92c2	                                 setb dl	      4286	mbyte.c	FUNCTION_85	IF_1	CALL_1
0x4002497	            0x38d1	                              cmp cl, dl	      4286	mbyte.c	FUNCTION_85	IF_1	CALL_1
0x4002499	            0x7505	                           jne 0x40024a0	      4286	mbyte.c	FUNCTION_85	IF_1	CALL_1
0x400249b	        0x4883c006	                              add rax, 6	      4287	mbyte.c	FUNCTION_85	IF_1
0x400249f	              0xc3	                                     ret	      4287	mbyte.c	FUNCTION_85	IF_1
0x40024a0	      0xbf00000000	                              mov edi, 0	      4288	mbyte.c	FUNCTION_85	IF_2	CALL_2
0x40024a5	      0xb905000000	                              mov ecx, 5	      4288	mbyte.c	FUNCTION_85	IF_2	CALL_2
0x40024aa	          0x4889c6	                            mov rsi, rax	      4288	mbyte.c	FUNCTION_85	IF_2	CALL_2
0x40024ad	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4288	mbyte.c	FUNCTION_85	IF_2	CALL_2
0x40024af	           0xf97c2	                                 seta dl	      4288	mbyte.c	FUNCTION_85	IF_2	CALL_2
0x40024b2	           0xf92c1	                                 setb cl	      4288	mbyte.c	FUNCTION_85	IF_2	CALL_2
0x40024b5	            0x29ca	                            sub edx, ecx	      4288	mbyte.c	FUNCTION_85	IF_2	CALL_2
0x40024b7	           0xfbed2	                           movsx edx, dl	      4288	mbyte.c	FUNCTION_85	IF_2	CALL_2
0x40024ba	        0x488d4805	                      lea rcx, [rax + 5]	      4289	mbyte.c	FUNCTION_85	IF_2
0x40024be	            0x85d2	                           test edx, edx	      4289	mbyte.c	FUNCTION_85	IF_2
0x40024c0	        0x480f44c1	                          cmove rax, rcx	      4289	mbyte.c	FUNCTION_85	IF_2
0x40024c4	              0xc3	                                     ret	      4291	mbyte.c	FUNCTION_85
utf_find_illegal	SWITCH,0:CALL,14:IF,6:WHILE,1:FOR,2:DO,0:ELSE,1:functions,0	126
0x40042d7	            0x4157	                                push r15	      3966	mbyte.c	FUNCTION_74
0x40042d9	            0x4156	                                push r14	      3966	mbyte.c	FUNCTION_74
0x40042db	            0x4155	                                push r13	      3966	mbyte.c	FUNCTION_74
0x40042dd	            0x4154	                                push r12	      3966	mbyte.c	FUNCTION_74
0x40042df	              0x55	                                push rbp	      3966	mbyte.c	FUNCTION_74
0x40042e0	              0x53	                                push rbx	      3966	mbyte.c	FUNCTION_74
0x40042e1	        0x4883ec38	                           sub rsp, 0x38	      3966	mbyte.c	FUNCTION_74
0x40042e5	    0x64488b042528	                mov rax, qword fs:[0x28]	      3966	mbyte.c	FUNCTION_74
0x40042ee	      0x4889442428	             mov qword [rsp + 0x28], rax	      3966	mbyte.c	FUNCTION_74
0x40042f3	            0x31c0	                            xor eax, eax	      3966	mbyte.c	FUNCTION_74
0x40042f5	    0x488b05000000	            mov rax, qword [0x040042fc] 	      3967	mbyte.c	FUNCTION_74
0x40042fc	        0x4c8b7838	            mov r15, qword [rax + 0x38] 	      3967	mbyte.c	FUNCTION_74
0x4004300	        0x448b7040	           mov r14d, dword [rax + 0x40] 	      3967	mbyte.c	FUNCTION_74
0x4004304	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3967	mbyte.c	FUNCTION_74
0x4004307	        0x8944240c	              mov dword [rsp + 0xc], eax	      3967	mbyte.c	FUNCTION_74
0x400430b	    0xc74424100000	               mov dword [rsp + 0x10], 0	      3973	mbyte.c	FUNCTION_74
0x4004313	    0x833d00000000	               cmp dword [0x0400431a], 0	      3974	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x400431a	            0x742e	                            je 0x400434a	      3974	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x400431c	    0x488b05000000	            mov rax, qword [0x04004323] 	      3974	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x4004323	    0x488b98881400	          mov rbx, qword [rax + 0x1488] 	      3974	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x400432a	          0x4889df	                            mov rdi, rbx	      3974	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x400432d	      0xe800000000	                          call 0x4004332	      3974	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x4004332	            0xa801	                              test al, 1	      3974	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x4004334	            0x7414	                            je 0x400434a	      3974	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x4004336	          0x4889da	                            mov rdx, rbx	      3979	mbyte.c	FUNCTION_74	IF_1	CALL_2
0x4004339	    0x488b35000000	            mov rsi, qword [0x04004340] 	      3979	mbyte.c	FUNCTION_74	IF_1	CALL_2
0x4004340	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3979	mbyte.c	FUNCTION_74	IF_1	CALL_2
0x4004345	      0xe800000000	                          call 0x400434a	      3979	mbyte.c	FUNCTION_74	IF_1	CALL_2
0x400434a	    0x488b05000000	            mov rax, qword [0x04004351] 	      3983	mbyte.c	FUNCTION_74
0x4004351	    0xc74044000000	               mov dword [rax + 0x44], 0	      3983	mbyte.c	FUNCTION_74
0x4004358	    0x41bd00000000	                             mov r13d, 0	      3971	mbyte.c	FUNCTION_74
0x400435e	      0xe800000000	                          call 0x4004363	      3987	mbyte.c	FUNCTION_74	FOR_1	CALL_3
0x4004363	          0x4889c5	                            mov rbp, rax	      3987	mbyte.c	FUNCTION_74	FOR_1	CALL_3
0x4004366	      0x837c241000	               cmp dword [rsp + 0x10], 0	      3988	mbyte.c	FUNCTION_74	FOR_1	IF_2
0x400436b	            0x7429	                            je 0x4004396	      3988	mbyte.c	FUNCTION_74	FOR_1	IF_2
0x400436d	          0x4c89ef	                            mov rdi, r13	      3990	mbyte.c	FUNCTION_74	FOR_1	IF_2	CALL_4
0x4004370	      0xe800000000	                          call 0x4004375	      3990	mbyte.c	FUNCTION_74	FOR_1	IF_2	CALL_4
0x4004375	      0xba00000000	                              mov edx, 0	      3991	mbyte.c	FUNCTION_74	FOR_1	IF_2	CALL_5
0x400437a	          0x4889ee	                            mov rsi, rbp	      3991	mbyte.c	FUNCTION_74	FOR_1	IF_2	CALL_5
0x400437d	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3991	mbyte.c	FUNCTION_74	FOR_1	IF_2	CALL_5
0x4004382	      0xe800000000	                          call 0x4004387	      3991	mbyte.c	FUNCTION_74	FOR_1	IF_2	CALL_5
0x4004387	          0x4989c5	                            mov r13, rax	      3991	mbyte.c	FUNCTION_74	FOR_1	IF_2	CALL_5
0x400438a	          0x4885c0	                           test rax, rax	      3992	mbyte.c	FUNCTION_74	FOR_1	IF_2	IF_3
0x400438d	     0xf84dd000000	                            je 0x4004470	      3992	mbyte.c	FUNCTION_74	FOR_1	IF_2	IF_3
0x4004393	          0x4889c5	                            mov rbp, rax	      3994	mbyte.c	FUNCTION_74	FOR_1	IF_2
0x4004396	      0x440fb66500	                  movzx r12d, byte [rbp]	      3997	mbyte.c	FUNCTION_74	FOR_1	WHILE_1
0x400439b	          0x4584e4	                         test r12b, r12b	      3997	mbyte.c	FUNCTION_74	FOR_1	WHILE_1
0x400439e	     0xf84a1000000	                            je 0x4004445	      3997	mbyte.c	FUNCTION_74	FOR_1	WHILE_1
0x40043a4	          0x4889ef	                            mov rdi, rbp	      4001	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	CALL_6
0x40043a7	      0xe800000000	                          call 0x40043ac	      4001	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	CALL_6
0x40043ac	            0x89c3	                            mov ebx, eax	      4001	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	CALL_6
0x40043ae	          0x4584e4	                         test r12b, r12b	      4002	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4
0x40043b1	            0x797e	                           jns 0x4004431	      4002	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4
0x40043b3	          0x83f801	                              cmp eax, 1	      4002	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4
0x40043b6	            0x7413	                            je 0x40043cb	      4002	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4
0x40043b8	          0x4889ef	                            mov rdi, rbp	      4003	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_8
0x40043bb	      0xe800000000	                          call 0x40043c0	      4003	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_8
0x40043c0	            0x89c7	                            mov edi, eax	      4003	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_8
0x40043c2	      0xe800000000	                          call 0x40043c7	      4003	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_8
0x40043c7	            0x39c3	                            cmp ebx, eax	      4003	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_8
0x40043c9	            0x7466	                            je 0x4004431	      4003	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_8
0x40043cb	      0x837c241000	               cmp dword [rsp + 0x10], 0	      4005	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	IF_5
0x40043d0	            0x7517	                           jne 0x40043e9	      4005	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	IF_5
0x40043d2	      0xe800000000	                          call 0x40043d7	      4006	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_9
0x40043d7	    0x488b15000000	            mov rdx, qword [0x040043de] 	      4006	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_9
0x40043de	          0x4829c5	                            sub rbp, rax	      4006	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_9
0x40043e1	           0x16a40	             add dword [rdx + 0x40], ebp	      4006	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_9
0x40043e4	      0xe9a2000000	                           jmp 0x400448b	      4006	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_9
0x40043e9	          0x4c29ed	                            sub rbp, r13	      4011	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1
0x40043ec	      0xe800000000	                          call 0x40043f1	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x40043f1	          0x4889c3	                            mov rbx, rax	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x40043f4	          0x803800	                       cmp byte [rax], 0	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x40043f7	     0xf848e000000	                            je 0x400448b	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x40043fd	        0x448d65ff	                     lea r12d, [rbp - 1]	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x4004401	            0x85ed	                           test ebp, ebp	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x4004403	     0xf8e82000000	                           jle 0x400448b	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x4004409	    0x488b2d000000	            mov rbp, qword [0x04004410] 	      4015	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2
0x4004410	          0x4889df	                            mov rdi, rbx	      4014	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_11
0x4004413	      0xe800000000	                          call 0x4004418	      4014	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_11
0x4004418	           0x14540	             add dword [rbp + 0x40], eax	      4015	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2
0x400441b	            0x4898	                                    cdqe	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x400441d	          0x4801c3	                            add rbx, rax	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x4004420	          0x803b00	                       cmp byte [rbx], 0	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x4004423	            0x7466	                            je 0x400448b	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x4004425	        0x4183ec01	                             sub r12d, 1	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x4004429	        0x4183fcff	            cmp r12d, 0xffffffffffffffff	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x400442d	            0x75e1	                           jne 0x4004410	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x400442f	            0xeb5a	                           jmp 0x400448b	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x4004431	          0x4863db	                         movsxd rbx, ebx	      4020	mbyte.c	FUNCTION_74	FOR_1	WHILE_1
0x4004434	          0x4801dd	                            add rbp, rbx	      4020	mbyte.c	FUNCTION_74	FOR_1	WHILE_1
0x4004437	      0x440fb66500	                  movzx r12d, byte [rbp]	      3997	mbyte.c	FUNCTION_74	FOR_1	WHILE_1
0x400443c	          0x4584e4	                         test r12b, r12b	      3997	mbyte.c	FUNCTION_74	FOR_1	WHILE_1
0x400443f	     0xf855fffffff	                           jne 0x40043a4	      3997	mbyte.c	FUNCTION_74	FOR_1	WHILE_1
0x4004445	    0x488b15000000	            mov rdx, qword [0x0400444c] 	      4022	mbyte.c	FUNCTION_74	FOR_1	IF_6
0x400444c	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      4022	mbyte.c	FUNCTION_74	FOR_1	IF_6
0x4004450	    0x488b0d000000	            mov rcx, qword [0x04004457] 	      4022	mbyte.c	FUNCTION_74	FOR_1	IF_6
0x4004457	          0x483b01	                    cmp rax, qword [rcx]	      4022	mbyte.c	FUNCTION_74	FOR_1	IF_6
0x400445a	            0x7414	                            je 0x4004470	      4022	mbyte.c	FUNCTION_74	FOR_1	IF_6
0x400445c	        0x4883c001	                              add rax, 1	      4024	mbyte.c	FUNCTION_74	FOR_1
0x4004460	        0x48894238	             mov qword [rdx + 0x38], rax	      4024	mbyte.c	FUNCTION_74	FOR_1
0x4004464	    0xc74240000000	               mov dword [rdx + 0x40], 0	      4025	mbyte.c	FUNCTION_74	FOR_1
0x400446b	      0xe9eefeffff	                           jmp 0x400435e	      4026	mbyte.c	FUNCTION_74	FOR_1
0x4004470	    0x488b05000000	            mov rax, qword [0x04004477] 	      4029	mbyte.c	FUNCTION_74
0x4004477	        0x4c897838	             mov qword [rax + 0x38], r15	      4029	mbyte.c	FUNCTION_74
0x400447b	        0x44897040	            mov dword [rax + 0x40], r14d	      4029	mbyte.c	FUNCTION_74
0x400447f	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      4029	mbyte.c	FUNCTION_74
0x4004483	          0x897044	             mov dword [rax + 0x44], esi	      4029	mbyte.c	FUNCTION_74
0x4004486	      0xe800000000	                          call 0x400448b	      4030	mbyte.c	FUNCTION_74	CALL_12
0x400448b	          0x4c89ef	                            mov rdi, r13	      4033	mbyte.c	FUNCTION_74	CALL_13
0x400448e	      0xe800000000	                          call 0x4004493	      4033	mbyte.c	FUNCTION_74	CALL_13
0x4004493	      0xba00000000	                              mov edx, 0	      4034	mbyte.c	FUNCTION_74	CALL_14
0x4004498	      0xbe00000000	                              mov esi, 0	      4034	mbyte.c	FUNCTION_74	CALL_14
0x400449d	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      4034	mbyte.c	FUNCTION_74	CALL_14
0x40044a2	      0xe800000000	                          call 0x40044a7	      4034	mbyte.c	FUNCTION_74	CALL_14
0x40044a7	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      4035	mbyte.c	FUNCTION_74
0x40044ac	    0x644833042528	                xor rax, qword fs:[0x28]	      4035	mbyte.c	FUNCTION_74
0x40044b5	            0x7405	                            je 0x40044bc	      4035	mbyte.c	FUNCTION_74
0x40044b7	      0xe800000000	                          call 0x40044bc	      4035	mbyte.c	FUNCTION_74
0x40044bc	        0x4883c438	                           add rsp, 0x38	      4035	mbyte.c	FUNCTION_74
0x40044c0	              0x5b	                                 pop rbx	      4035	mbyte.c	FUNCTION_74
0x40044c1	              0x5d	                                 pop rbp	      4035	mbyte.c	FUNCTION_74
0x40044c2	            0x415c	                                 pop r12	      4035	mbyte.c	FUNCTION_74
0x40044c4	            0x415d	                                 pop r13	      4035	mbyte.c	FUNCTION_74
0x40044c6	            0x415e	                                 pop r14	      4035	mbyte.c	FUNCTION_74
0x40044c8	            0x415f	                                 pop r15	      4035	mbyte.c	FUNCTION_74
0x40044ca	              0xc3	                                     ret	      4035	mbyte.c	FUNCTION_74
mb_off_next	SWITCH,0:CALL,0:IF,5:WHILE,0:FOR,2:DO,0:ELSE,0:functions,0	51
0x4001eda	    0x833d00000000	               cmp dword [0x04001ee1], 0	      3900	mbyte.c	FUNCTION_72	IF_1
0x4001ee1	            0x747d	                            je 0x4001f60	      3900	mbyte.c	FUNCTION_72	IF_1
0x4001ee3	           0xfb616	                   movzx edx, byte [rsi]	      3902	mbyte.c	FUNCTION_72	IF_1	IF_2
0x4001ee6	      0xb800000000	                              mov eax, 0	      3903	mbyte.c	FUNCTION_72	IF_1	IF_2
0x4001eeb	            0x84d2	                             test dl, dl	      3902	mbyte.c	FUNCTION_72	IF_1	IF_2
0x4001eed	     0xf8983000000	                           jns 0x4001f76	      3902	mbyte.c	FUNCTION_72	IF_1	IF_2
0x4001ef3	          0x83e2c0	                     and edx, 0xffffffc0	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4001ef6	          0x80fa80	                            cmp dl, 0x80	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4001ef9	            0x7571	                           jne 0x4001f6c	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4001efb	          0x83c001	                              add eax, 1	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4001efe	          0x4863d0	                         movsxd rdx, eax	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4001f01	         0xfb61416	             movzx edx, byte [rsi + rdx]	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4001f05	          0x83e2c0	                     and edx, 0xffffffc0	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4001f08	          0x80fa80	                            cmp dl, 0x80	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4001f0b	            0x74ee	                            je 0x4001efb	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4001f0d	            0x85c0	                           test eax, eax	      3908	mbyte.c	FUNCTION_72	IF_1	IF_3
0x4001f0f	            0x7e65	                           jle 0x4001f76	      3908	mbyte.c	FUNCTION_72	IF_1	IF_3
0x4001f11	      0xba00000000	                              mov edx, 0	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4001f16	          0x4839fe	                            cmp rsi, rdi	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4001f19	            0x7715	                            ja 0x4001f30	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4001f1b	            0xeb24	                           jmp 0x4001f41	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4001f1d	            0x89d1	                            mov ecx, edx	      3912	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x4001f1f	            0xf7d9	                                 neg ecx	      3912	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x4001f21	          0x4863c9	                         movsxd rcx, ecx	      3912	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x4001f24	         0xfb60c0e	             movzx ecx, byte [rsi + rcx]	      3912	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x4001f28	          0x83e1c0	                     and ecx, 0xffffffc0	      3912	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x4001f2b	          0x80f980	                            cmp cl, 0x80	      3912	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x4001f2e	            0x7511	                           jne 0x4001f41	      3912	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x4001f30	          0x83c201	                              add edx, 1	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4001f33	          0x4863ca	                         movsxd rcx, edx	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4001f36	          0x4989f0	                             mov r8, rsi	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4001f39	          0x4929c8	                             sub r8, rcx	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4001f3c	          0x4c39c7	                             cmp rdi, r8	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4001f3f	            0x72dc	                            jb 0x4001f1d	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4001f41	            0x89d1	                            mov ecx, edx	      3914	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x4001f43	            0xf7d9	                                 neg ecx	      3914	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x4001f45	          0x4863c9	                         movsxd rcx, ecx	      3914	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x4001f48	         0xfb60c0e	             movzx ecx, byte [rsi + rcx]	      3914	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x4001f4c	     0xfbe89000000	                   movsx ecx, byte [rcx]	      3914	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x4001f53	             0x1c2	                            add edx, eax	      3914	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x4001f55	            0x39d1	                            cmp ecx, edx	      3915	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x4001f57	      0xba00000000	                              mov edx, 0	      3915	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x4001f5c	           0xf45c2	                         cmovne eax, edx	      3915	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x4001f5f	              0xc3	                                     ret	      3923	mbyte.c	FUNCTION_72
0x4001f60	        0x4883ec08	                              sub rsp, 8	      3896	mbyte.c	FUNCTION_72
0x4001f64	    0xff1500000000	                 call qword [0x04001f6a]	      3922	mbyte.c	FUNCTION_72
0x4001f6a	            0xeb06	                           jmp 0x4001f72	      3922	mbyte.c	FUNCTION_72
0x4001f6c	      0xb800000000	                              mov eax, 0	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4001f71	              0xc3	                                     ret	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4001f72	        0x4883c408	                              add rsp, 8	      3923	mbyte.c	FUNCTION_72
0x4001f76	            0xf3c3	                                     ret	      3923	mbyte.c	FUNCTION_72
utf_safe_read_char_adv	SWITCH,0:CALL,1:IF,4:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	49
0x40003dc	          0x488b16	                    mov rdx, qword [rsi]	      1850	mbyte.c	FUNCTION_36	IF_1
0x40003df	      0xb800000000	                              mov eax, 0	      1851	mbyte.c	FUNCTION_36	IF_1
0x40003e4	          0x4885d2	                           test rdx, rdx	      1850	mbyte.c	FUNCTION_36	IF_1
0x40003e7	     0xf8484000000	                            je 0x4000471	      1850	mbyte.c	FUNCTION_36	IF_1
0x40003ed	            0x4156	                                push r14	      1847	mbyte.c	FUNCTION_36
0x40003ef	            0x4155	                                push r13	      1847	mbyte.c	FUNCTION_36
0x40003f1	            0x4154	                                push r12	      1847	mbyte.c	FUNCTION_36
0x40003f3	              0x55	                                push rbp	      1847	mbyte.c	FUNCTION_36
0x40003f4	              0x53	                                push rbx	      1847	mbyte.c	FUNCTION_36
0x40003f5	          0x4c8b2f	                    mov r13, qword [rdi]	      1853	mbyte.c	FUNCTION_36
0x40003f8	      0x450fb67500	                  movzx r14d, byte [r13]	      1853	mbyte.c	FUNCTION_36
0x40003fd	          0x4963c6	                        movsxd rax, r14d	      1853	mbyte.c	FUNCTION_36
0x4000400	     0xfb6a8000000	                   movzx ebp, byte [rax]	      1853	mbyte.c	FUNCTION_36
0x4000407	        0x4080fd01	                              cmp bpl, 1	      1855	mbyte.c	FUNCTION_36	IF_2
0x400040b	            0x7516	                           jne 0x4000423	      1855	mbyte.c	FUNCTION_36	IF_2
0x400040d	        0x4883ea01	                              sub rdx, 1	      1858	mbyte.c	FUNCTION_36	IF_2
0x4000411	          0x488916	                    mov qword [rsi], rdx	      1858	mbyte.c	FUNCTION_36	IF_2
0x4000414	          0x488b07	                    mov rax, qword [rdi]	      1859	mbyte.c	FUNCTION_36	IF_2
0x4000417	        0x488d5001	                      lea rdx, [rax + 1]	      1859	mbyte.c	FUNCTION_36	IF_2
0x400041b	          0x488917	                    mov qword [rdi], rdx	      1859	mbyte.c	FUNCTION_36	IF_2
0x400041e	           0xfb600	                   movzx eax, byte [rax]	      1859	mbyte.c	FUNCTION_36	IF_2
0x4000421	            0xeb46	                           jmp 0x4000469	      1859	mbyte.c	FUNCTION_36	IF_2
0x4000423	        0x480fbeed	                          movsx rbp, bpl	      1862	mbyte.c	FUNCTION_36	IF_3
0x4000427	          0x4839ea	                            cmp rdx, rbp	      1862	mbyte.c	FUNCTION_36	IF_3
0x400042a	            0x7238	                            jb 0x4000464	      1862	mbyte.c	FUNCTION_36	IF_3
0x400042c	          0x4889f3	                            mov rbx, rsi	      1862	mbyte.c	FUNCTION_36	IF_3
0x400042f	          0x4989fc	                            mov r12, rdi	      1862	mbyte.c	FUNCTION_36	IF_3
0x4000432	          0x4c89ef	                            mov rdi, r13	      1867	mbyte.c	FUNCTION_36	IF_3	CALL_1
0x4000435	      0xe800000000	                          call 0x400043a	      1867	mbyte.c	FUNCTION_36	IF_3	CALL_1
0x400043a	            0x89c2	                            mov edx, eax	      1867	mbyte.c	FUNCTION_36	IF_3	CALL_1
0x400043c	          0x4139c6	                           cmp r14d, eax	      1874	mbyte.c	FUNCTION_36	IF_3	IF_4
0x400043f	            0x7515	                           jne 0x4000456	      1874	mbyte.c	FUNCTION_36	IF_3	IF_4
0x4000441	      0xb8ffffffff	                     mov eax, 0xffffffff	      1884	mbyte.c	FUNCTION_36
0x4000446	    0x4181fec30000	                          cmp r14d, 0xc3	      1874	mbyte.c	FUNCTION_36	IF_3	IF_4
0x400044d	            0x751a	                           jne 0x4000469	      1874	mbyte.c	FUNCTION_36	IF_3	IF_4
0x400044f	      0x41807d0183	                cmp byte [r13 + 1], 0x83	      1874	mbyte.c	FUNCTION_36	IF_3	IF_4
0x4000454	            0x7513	                           jne 0x4000469	      1874	mbyte.c	FUNCTION_36	IF_3	IF_4
0x4000456	          0x4901ed	                            add r13, rbp	      1877	mbyte.c	FUNCTION_36	IF_3	IF_4
0x4000459	        0x4d892c24	                    mov qword [r12], r13	      1877	mbyte.c	FUNCTION_36	IF_3	IF_4
0x400045d	          0x48292b	                    sub qword [rbx], rbp	      1878	mbyte.c	FUNCTION_36	IF_3	IF_4
0x4000460	            0x89d0	                            mov eax, edx	      1879	mbyte.c	FUNCTION_36	IF_3	IF_4
0x4000462	            0xeb05	                           jmp 0x4000469	      1879	mbyte.c	FUNCTION_36	IF_3	IF_4
0x4000464	      0xb8ffffffff	                     mov eax, 0xffffffff	      1884	mbyte.c	FUNCTION_36
0x4000469	              0x5b	                                 pop rbx	      1885	mbyte.c	FUNCTION_36
0x400046a	              0x5d	                                 pop rbp	      1885	mbyte.c	FUNCTION_36
0x400046b	            0x415c	                                 pop r12	      1885	mbyte.c	FUNCTION_36
0x400046d	            0x415d	                                 pop r13	      1885	mbyte.c	FUNCTION_36
0x400046f	            0x415e	                                 pop r14	      1885	mbyte.c	FUNCTION_36
0x4000471	            0xf3c3	                                     ret	      1885	mbyte.c	FUNCTION_36
utf_iscomposing_uint	SWITCH,0:CALL,1:IF,0:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	2
0x4001434	      0xe800000000	                          call 0x4001439	      2317	mbyte.c	FUNCTION_52	CALL_1
0x4001439	            0xf3c3	                                     ret	      2318	mbyte.c	FUNCTION_52
im_set_position	SWITCH,0:CALL,0:IF,0:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	38
0x4002a44	              0x53	                                push rbx	      4883	mbyte.c	FUNCTION_100
0x4002a45	        0x4883ec20	                           sub rsp, 0x20	      4883	mbyte.c	FUNCTION_100
0x4002a49	    0x64488b042528	                mov rax, qword fs:[0x28]	      4883	mbyte.c	FUNCTION_100
0x4002a52	      0x4889442418	             mov qword [rsp + 0x18], rax	      4883	mbyte.c	FUNCTION_100
0x4002a57	            0x31c0	                            xor eax, eax	      4883	mbyte.c	FUNCTION_100
0x4002a59	    0x48833d000000	               cmp qword [0x04002a61], 0	      4884	mbyte.c	FUNCTION_100	IF_1
0x4002a61	            0x7461	                            je 0x4002ac4	      4884	mbyte.c	FUNCTION_100	IF_1
0x4002a63	    0x8b1d00000000	            mov ebx, dword [0x04002a69] 	      4888	mbyte.c	FUNCTION_100	IF_1	CALL_1
0x4002a69	    0x8b0500000000	            mov eax, dword [0x04002a6f] 	      4888	mbyte.c	FUNCTION_100	IF_1	CALL_1
0x4002a6f	            0x89da	                            mov edx, ebx	      4888	mbyte.c	FUNCTION_100	IF_1	CALL_1
0x4002a71	           0xfafd6	                           imul edx, esi	      4888	mbyte.c	FUNCTION_100	IF_1	CALL_1
0x4002a74	             0x1c2	                            add edx, eax	      4888	mbyte.c	FUNCTION_100	IF_1	CALL_1
0x4002a76	          0x891424	                    mov dword [rsp], edx	      4888	mbyte.c	FUNCTION_100	IF_1	CALL_1
0x4002a79	            0x89fa	                            mov edx, edi	      4889	mbyte.c	FUNCTION_100	IF_1	CALL_2
0x4002a7b	     0xfaf15000000	            imul edx, dword [0x04002a82]	      4889	mbyte.c	FUNCTION_100	IF_1	CALL_2
0x4002a82	             0x1d0	                            add eax, edx	      4889	mbyte.c	FUNCTION_100	IF_1	CALL_2
0x4002a84	        0x89442404	                mov dword [rsp + 4], eax	      4889	mbyte.c	FUNCTION_100	IF_1	CALL_2
0x4002a88	      0xe800000000	                          call 0x4002a8d	      4890	mbyte.c	FUNCTION_100	IF_1	CALL_3
0x4002a8d	          0x83f801	                              cmp eax, 1	      4890	mbyte.c	FUNCTION_100	IF_1	CALL_3
0x4002a90	            0x19c0	                            sbb eax, eax	      4890	mbyte.c	FUNCTION_100	IF_1	CALL_3
0x4002a92	          0x83c002	                              add eax, 2	      4890	mbyte.c	FUNCTION_100	IF_1	CALL_3
0x4002a95	           0xfafd8	                           imul ebx, eax	      4890	mbyte.c	FUNCTION_100	IF_1	CALL_3
0x4002a98	        0x895c2408	                mov dword [rsp + 8], ebx	      4890	mbyte.c	FUNCTION_100	IF_1	CALL_3
0x4002a9c	    0x8b0500000000	            mov eax, dword [0x04002aa2] 	      4891	mbyte.c	FUNCTION_100	IF_1
0x4002aa2	        0x8944240c	              mov dword [rsp + 0xc], eax	      4891	mbyte.c	FUNCTION_100	IF_1
0x4002aa6	          0x4889e6	                            mov rsi, rsp	      4893	mbyte.c	FUNCTION_100	IF_1	CALL_4
0x4002aa9	    0x488b3d000000	            mov rdi, qword [0x04002ab0] 	      4893	mbyte.c	FUNCTION_100	IF_1	CALL_4
0x4002ab0	      0xe800000000	                          call 0x4002ab5	      4893	mbyte.c	FUNCTION_100	IF_1	CALL_4
0x4002ab5	    0x48833d000000	               cmp qword [0x04002abd], 1	      4895	mbyte.c	FUNCTION_100	IF_1	IF_2
0x4002abd	            0x7505	                           jne 0x4002ac4	      4895	mbyte.c	FUNCTION_100	IF_1	IF_2
0x4002abf	      0xe855dcffff	 call sym.im_preedit_window_set_position	      4896	mbyte.c	FUNCTION_100	IF_1	CALL_5
0x4002ac4	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4898	mbyte.c	FUNCTION_100
0x4002ac9	    0x644833042528	                xor rax, qword fs:[0x28]	      4898	mbyte.c	FUNCTION_100
0x4002ad2	            0x7405	                            je 0x4002ad9	      4898	mbyte.c	FUNCTION_100
0x4002ad4	      0xe800000000	                          call 0x4002ad9	      4898	mbyte.c	FUNCTION_100
0x4002ad9	        0x4883c420	                           add rsp, 0x20	      4898	mbyte.c	FUNCTION_100
0x4002add	              0x5b	                                 pop rbx	      4898	mbyte.c	FUNCTION_100
0x4002ade	              0xc3	                                     ret	      4898	mbyte.c	FUNCTION_100
convert_input	SWITCH,0:CALL,1:IF,0:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	6
0x4003d64	        0x4883ec08	                              sub rsp, 8	      6657	mbyte.c	FUNCTION_142
0x4003d68	    0x41b800000000	                              mov r8d, 0	      6658	mbyte.c	FUNCTION_142	CALL_1
0x4003d6e	      0xb900000000	                              mov ecx, 0	      6658	mbyte.c	FUNCTION_142	CALL_1
0x4003d73	      0xe800000000	                          call 0x4003d78	      6658	mbyte.c	FUNCTION_142	CALL_1
0x4003d78	        0x4883c408	                              add rsp, 8	      6659	mbyte.c	FUNCTION_142
0x4003d7c	              0xc3	                                     ret	      6659	mbyte.c	FUNCTION_142
enc_locale_env	SWITCH,0:CALL,10:IF,8:WHILE,0:FOR,1:DO,0:ELSE,3:functions,0	117
0x4002754	            0x4155	                                push r13	      4403	mbyte.c	FUNCTION_88
0x4002756	            0x4154	                                push r12	      4403	mbyte.c	FUNCTION_88
0x4002758	              0x55	                                push rbp	      4403	mbyte.c	FUNCTION_88
0x4002759	              0x53	                                push rbx	      4403	mbyte.c	FUNCTION_88
0x400275a	        0x4883ec48	                           sub rsp, 0x48	      4403	mbyte.c	FUNCTION_88
0x400275e	    0x64488b042528	                mov rax, qword fs:[0x28]	      4403	mbyte.c	FUNCTION_88
0x4002767	      0x4889442438	             mov qword [rsp + 0x38], rax	      4403	mbyte.c	FUNCTION_88
0x400276c	            0x31c0	                            xor eax, eax	      4403	mbyte.c	FUNCTION_88
0x400276e	          0x4885ff	                           test rdi, rdi	      4409	mbyte.c	FUNCTION_88	IF_1
0x4002771	            0x7408	                            je 0x400277b	      4409	mbyte.c	FUNCTION_88	IF_1
0x4002773	          0x4989fd	                            mov r13, rdi	      4409	mbyte.c	FUNCTION_88	IF_1
0x4002776	          0x803f00	                       cmp byte [rdi], 0	      4409	mbyte.c	FUNCTION_88	IF_1
0x4002779	            0x754d	                           jne 0x40027c8	      4409	mbyte.c	FUNCTION_88	IF_1
0x400277b	      0xbf00000000	                              mov edi, 0	      4410	mbyte.c	FUNCTION_88	IF_1	IF_2	CALL_1
0x4002780	      0xe800000000	                          call 0x4002785	      4410	mbyte.c	FUNCTION_88	IF_1	IF_2	CALL_1
0x4002785	          0x4989c5	                            mov r13, rax	      4410	mbyte.c	FUNCTION_88	IF_1	IF_2	CALL_1
0x4002788	          0x4885c0	                           test rax, rax	      4410	mbyte.c	FUNCTION_88	IF_1	IF_2	CALL_1
0x400278b	            0x7405	                            je 0x4002792	      4410	mbyte.c	FUNCTION_88	IF_1	IF_2	CALL_1
0x400278d	          0x803800	                       cmp byte [rax], 0	      4410	mbyte.c	FUNCTION_88	IF_1	IF_2	CALL_1
0x4002790	            0x7536	                           jne 0x40027c8	      4410	mbyte.c	FUNCTION_88	IF_1	IF_2	CALL_1
0x4002792	      0xbf00000000	                              mov edi, 0	      4411	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3	CALL_2
0x4002797	      0xe800000000	                          call 0x400279c	      4411	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3	CALL_2
0x400279c	          0x4989c5	                            mov r13, rax	      4411	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3	CALL_2
0x400279f	          0x4885c0	                           test rax, rax	      4411	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3	CALL_2
0x40027a2	            0x7405	                            je 0x40027a9	      4411	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3	CALL_2
0x40027a4	          0x803800	                       cmp byte [rax], 0	      4411	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3	CALL_2
0x40027a7	            0x751f	                           jne 0x40027c8	      4411	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3	CALL_2
0x40027a9	      0xbf00000000	                              mov edi, 0	      4412	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3
0x40027ae	      0xe800000000	                          call 0x40027b3	      4412	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3
0x40027b3	          0x4989c5	                            mov r13, rax	      4412	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3
0x40027b6	          0x4885c0	                           test rax, rax	      4414	mbyte.c	FUNCTION_88	IF_4
0x40027b9	     0xf8403010000	                            je 0x40028c2	      4414	mbyte.c	FUNCTION_88	IF_4
0x40027bf	          0x803800	                       cmp byte [rax], 0	      4414	mbyte.c	FUNCTION_88	IF_4
0x40027c2	     0xf8401010000	                            je 0x40028c9	      4414	mbyte.c	FUNCTION_88	IF_4
0x40027c8	      0xbe2e000000	                           mov esi, 0x2e	      4425	mbyte.c	FUNCTION_88	IF_5	CALL_4
0x40027cd	          0x4c89ef	                            mov rdi, r13	      4425	mbyte.c	FUNCTION_88	IF_5	CALL_4
0x40027d0	      0xe800000000	                          call 0x40027d5	      4425	mbyte.c	FUNCTION_88	IF_5	CALL_4
0x40027d5	          0x4889c3	                            mov rbx, rax	      4425	mbyte.c	FUNCTION_88	IF_5	CALL_4
0x40027d8	          0x4885c0	                           test rax, rax	      4425	mbyte.c	FUNCTION_88	IF_5	CALL_4
0x40027db	            0x746e	                            je 0x400284b	      4425	mbyte.c	FUNCTION_88	IF_5	CALL_4
0x40027dd	        0x4983c502	                              add r13, 2	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x40027e1	          0x4c39e8	                            cmp rax, r13	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x40027e4	            0x7661	                           jbe 0x4002847	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x40027e6	        0x488d7801	                      lea rdi, [rax + 1]	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x40027ea	      0xba03000000	                              mov edx, 3	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x40027ef	      0xbe00000000	                              mov esi, 0	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x40027f4	      0xe800000000	                          call 0x40027f9	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x40027f9	            0x85c0	                           test eax, eax	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x40027fb	            0x754a	                           jne 0x4002847	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x40027fd	      0xe800000000	                          call 0x4002802	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4002802	         0xfb65304	               movzx edx, byte [rbx + 4]	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4002806	        0x480fbeca	                           movsx rcx, dl	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x400280a	          0x488b00	                    mov rax, qword [rax]	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x400280d	        0xf6044808	              test byte [rax + rcx*2], 8	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4002811	            0x7534	                           jne 0x4002847	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4002813	          0x80fa2d	                            cmp dl, 0x2d	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4002816	            0x742f	                            je 0x4002847	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4002818	        0x807bfd5f	                cmp byte [rbx - 3], 0x5f	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x400281c	            0x7529	                           jne 0x4002847	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x400281e	    0xc744240a6575	      mov dword [rsp + 0xa], 0x2d637565 	       110	string3.h	FUNCTION_152	CALL_3
0x4002826	      0xc644240e00	                 mov byte [rsp + 0xe], 0	       110	string3.h	FUNCTION_152	CALL_3
0x400282b	         0xfb643fe	               movzx eax, byte [rbx - 2]	      4432	mbyte.c	FUNCTION_88	IF_5	IF_6
0x400282f	        0x8844240e	                mov byte [rsp + 0xe], al	      4432	mbyte.c	FUNCTION_88	IF_5	IF_6
0x4002833	         0xfb643ff	               movzx eax, byte [rbx - 1]	      4433	mbyte.c	FUNCTION_88	IF_5	IF_6
0x4002837	        0x8844240f	                mov byte [rsp + 0xf], al	      4433	mbyte.c	FUNCTION_88	IF_5	IF_6
0x400283b	      0xc644241000	                mov byte [rsp + 0x10], 0	      4434	mbyte.c	FUNCTION_88	IF_5	IF_6
0x4002840	      0x4c8d6c240a	                    lea r13, [rsp + 0xa]	      4435	mbyte.c	FUNCTION_88	IF_5	IF_6
0x4002845	            0xeb04	                           jmp 0x400284b	      4435	mbyte.c	FUNCTION_88	IF_5	IF_6
0x4002847	        0x4c8d6b01	                      lea r13, [rbx + 1]	      4438	mbyte.c	FUNCTION_88	IF_5	ELSE_1
0x400284b	      0x410fb65d00	                   movzx ebx, byte [r13]	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x4002850	            0x84db	                             test bl, bl	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x4002852	            0x7456	                            je 0x40028aa	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x4002854	      0xbd00000000	                              mov ebp, 0	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x4002859	    0x41bc00000000	                             mov r12d, 0	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x400285f	          0x80fb5f	                            cmp bl, 0x5f	      4442	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x4002862	            0x7405	                            je 0x4002869	      4442	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x4002864	          0x80fb2d	                            cmp bl, 0x2d	      4442	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x4002867	            0x7506	                           jne 0x400286f	      4442	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x4002869	        0xc6042c2d	              mov byte [rsp + rbp], 0x2d	      4443	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x400286d	            0xeb21	                           jmp 0x4002890	      4443	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x400286f	      0xe800000000	                          call 0x4002874	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x4002874	        0x480fbed3	                           movsx rdx, bl	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x4002878	          0x488b08	                    mov rcx, qword [rax]	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x400287b	        0xf6045108	              test byte [rcx + rdx*2], 8	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x400287f	            0x742f	                            je 0x40028b0	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x4002881	          0x8d53bf	                   lea edx, [rbx - 0x41]	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4002884	          0x8d4320	                   lea eax, [rbx + 0x20]	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4002887	          0x80fa19	                            cmp dl, 0x19	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x400288a	           0xf46d8	                         cmovbe ebx, eax	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x400288d	          0x881c2c	                mov byte [rsp + rbp], bl	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4002890	        0x4183c401	                             add r12d, 1	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x4002894	        0x4183fc31	                          cmp r12d, 0x31	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x4002898	            0x7416	                            je 0x40028b0	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x400289a	        0x4883c501	                              add rbp, 1	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x400289e	    0x410fb65c2d00	             movzx ebx, byte [r13 + rbp]	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x40028a4	            0x84db	                             test bl, bl	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x40028a6	            0x75b7	                           jne 0x400285f	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x40028a8	            0xeb06	                           jmp 0x40028b0	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x40028aa	    0x41bc00000000	                             mov r12d, 0	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x40028b0	          0x4d63e4	                        movsxd r12, r12d	      4449	mbyte.c	FUNCTION_88
0x40028b3	      0x42c6042400	                 mov byte [rsp + r12], 0	      4449	mbyte.c	FUNCTION_88
0x40028b8	          0x4889e7	                            mov rdi, rsp	      4451	mbyte.c	FUNCTION_88	CALL_10
0x40028bb	      0xe800000000	                          call 0x40028c0	      4451	mbyte.c	FUNCTION_88	CALL_10
0x40028c0	            0xeb0c	                           jmp 0x40028ce	      4451	mbyte.c	FUNCTION_88	CALL_10
0x40028c2	      0xb800000000	                              mov eax, 0	      4415	mbyte.c	FUNCTION_88	IF_4
0x40028c7	            0xeb05	                           jmp 0x40028ce	      4415	mbyte.c	FUNCTION_88	IF_4
0x40028c9	      0xb800000000	                              mov eax, 0	      4415	mbyte.c	FUNCTION_88	IF_4
0x40028ce	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      4452	mbyte.c	FUNCTION_88
0x40028d3	    0x644833342528	                xor rsi, qword fs:[0x28]	      4452	mbyte.c	FUNCTION_88
0x40028dc	            0x7405	                            je 0x40028e3	      4452	mbyte.c	FUNCTION_88
0x40028de	      0xe800000000	                          call 0x40028e3	      4452	mbyte.c	FUNCTION_88
0x40028e3	        0x4883c448	                           add rsp, 0x48	      4452	mbyte.c	FUNCTION_88
0x40028e7	              0x5b	                                 pop rbx	      4452	mbyte.c	FUNCTION_88
0x40028e8	              0x5d	                                 pop rbp	      4452	mbyte.c	FUNCTION_88
0x40028e9	            0x415c	                                 pop r12	      4452	mbyte.c	FUNCTION_88
0x40028eb	            0x415d	                                 pop r13	      4452	mbyte.c	FUNCTION_88
0x40028ed	              0xc3	                                     ret	      4452	mbyte.c	FUNCTION_88
mb_prevptr	SWITCH,0:CALL,1:IF,1:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	15
0x40021d0	              0x53	                                push rbx	      4136	mbyte.c	FUNCTION_79
0x40021d1	          0x4889f3	                            mov rbx, rsi	      4136	mbyte.c	FUNCTION_79
0x40021d4	          0x4839fe	                            cmp rsi, rdi	      4137	mbyte.c	FUNCTION_79	IF_1
0x40021d7	            0x7620	                           jbe 0x40021f9	      4137	mbyte.c	FUNCTION_79	IF_1
0x40021d9	      0xb801000000	                              mov eax, 1	      4138	mbyte.c	FUNCTION_79	CALL_1
0x40021de	    0x833d00000000	               cmp dword [0x040021e5], 0	      4138	mbyte.c	FUNCTION_79	CALL_1
0x40021e5	            0x740d	                            je 0x40021f4	      4138	mbyte.c	FUNCTION_79	CALL_1
0x40021e7	        0x488d76ff	                      lea rsi, [rsi - 1]	      4138	mbyte.c	FUNCTION_79	CALL_1
0x40021eb	    0xff1500000000	                 call qword [0x040021f1]	      4138	mbyte.c	FUNCTION_79	CALL_1
0x40021f1	          0x83c001	                              add eax, 1	      4138	mbyte.c	FUNCTION_79	CALL_1
0x40021f4	            0x4898	                                    cdqe	      4138	mbyte.c	FUNCTION_79	CALL_1
0x40021f6	          0x4829c3	                            sub rbx, rax	      4138	mbyte.c	FUNCTION_79	CALL_1
0x40021f9	          0x4889d8	                            mov rax, rbx	      4140	mbyte.c	FUNCTION_79
0x40021fc	              0x5b	                                 pop rbx	      4140	mbyte.c	FUNCTION_79
0x40021fd	              0xc3	                                     ret	      4140	mbyte.c	FUNCTION_79
mb_adjust_cursor	SWITCH,0:CALL,1:IF,0:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	7
0x40021b0	        0x4883ec08	                              sub rsp, 8	      4093	mbyte.c	FUNCTION_77
0x40021b4	    0x488b05000000	            mov rax, qword [0x040021bb] 	      4094	mbyte.c	FUNCTION_77	CALL_1
0x40021bb	        0x488d7038	                   lea rsi, [rax + 0x38]	      4094	mbyte.c	FUNCTION_77	CALL_1
0x40021bf	    0x488b3d000000	            mov rdi, qword [0x040021c6] 	      4094	mbyte.c	FUNCTION_77	CALL_1
0x40021c6	      0xe800000000	                          call 0x40021cb	      4094	mbyte.c	FUNCTION_77	CALL_1
0x40021cb	        0x4883c408	                              add rsp, 8	      4095	mbyte.c	FUNCTION_77
0x40021cf	              0xc3	                                     ret	      4095	mbyte.c	FUNCTION_77
utf_ptr2len_len	SWITCH,0:CALL,0:IF,3:WHILE,0:FOR,1:DO,0:ELSE,1:functions,0	30
0x4000fdb	           0xfb607	                   movzx eax, byte [rdi]	      2120	mbyte.c	FUNCTION_47
0x4000fde	     0xfbe80000000	                   movsx eax, byte [rax]	      2120	mbyte.c	FUNCTION_47
0x4000fe5	          0x83f801	                              cmp eax, 1	      2121	mbyte.c	FUNCTION_47	IF_1
0x4000fe8	            0x7438	                            je 0x4001022	      2121	mbyte.c	FUNCTION_47	IF_1
0x4000fea	            0x39f0	                            cmp eax, esi	      2121	mbyte.c	FUNCTION_47	IF_1
0x4000fec	           0xf4ef0	                         cmovle esi, eax	      2121	mbyte.c	FUNCTION_47	IF_1
0x4000fef	          0x83fe01	                              cmp esi, 1	      2127	mbyte.c	FUNCTION_47	FOR_1
0x4000ff2	            0x7e3f	                           jle 0x4001033	      2127	mbyte.c	FUNCTION_47	FOR_1
0x4000ff4	         0xfb65701	               movzx edx, byte [rdi + 1]	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4000ff8	          0x83e2c0	                     and edx, 0xffffffc0	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4000ffb	          0x80fa80	                            cmp dl, 0x80	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4000ffe	            0x7528	                           jne 0x4001028	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001000	          0x4889fa	                            mov rdx, rdi	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001003	          0x8d4efe	                      lea ecx, [rsi - 2]	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001006	          0x4801cf	                            add rdi, rcx	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001009	            0xeb10	                           jmp 0x400101b	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x400100b	         0xfb64a02	               movzx ecx, byte [rdx + 2]	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x400100f	          0x83e1c0	                     and ecx, 0xffffffc0	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001012	        0x4883c201	                              add rdx, 1	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001016	          0x80f980	                            cmp cl, 0x80	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001019	            0x7513	                           jne 0x400102e	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x400101b	          0x4839fa	                            cmp rdx, rdi	      2127	mbyte.c	FUNCTION_47	FOR_1
0x400101e	            0x75eb	                           jne 0x400100b	      2127	mbyte.c	FUNCTION_47	FOR_1
0x4001020	            0xf3c3	                                     ret	      2127	mbyte.c	FUNCTION_47	FOR_1
0x4001022	      0xb801000000	                              mov eax, 1	      2122	mbyte.c	FUNCTION_47	IF_1
0x4001027	              0xc3	                                     ret	      2122	mbyte.c	FUNCTION_47	IF_1
0x4001028	      0xb801000000	                              mov eax, 1	      2129	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x400102d	              0xc3	                                     ret	      2129	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x400102e	      0xb801000000	                              mov eax, 1	      2129	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001033	            0xf3c3	                                     ret	      2131	mbyte.c	FUNCTION_47
string_convert_ext	SWITCH,3:CALL,30:IF,29:WHILE,0:FOR,3:DO,0:ELSE,10:functions,0	426
0x4003630	            0x4157	                                push r15	      6731	mbyte.c	FUNCTION_145
0x4003632	            0x4156	                                push r14	      6731	mbyte.c	FUNCTION_145
0x4003634	            0x4155	                                push r13	      6731	mbyte.c	FUNCTION_145
0x4003636	            0x4154	                                push r12	      6731	mbyte.c	FUNCTION_145
0x4003638	              0x55	                                push rbp	      6731	mbyte.c	FUNCTION_145
0x4003639	              0x53	                                push rbx	      6731	mbyte.c	FUNCTION_145
0x400363a	        0x4883ec68	                           sub rsp, 0x68	      6731	mbyte.c	FUNCTION_145
0x400363e	          0x4989ff	                            mov r15, rdi	      6731	mbyte.c	FUNCTION_145
0x4003641	      0x4889742408	                mov qword [rsp + 8], rsi	      6731	mbyte.c	FUNCTION_145
0x4003646	      0x4889542420	             mov qword [rsp + 0x20], rdx	      6731	mbyte.c	FUNCTION_145
0x400364b	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      6731	mbyte.c	FUNCTION_145
0x4003650	    0x64488b342528	                mov rsi, qword fs:[0x28]	      6731	mbyte.c	FUNCTION_145
0x4003659	      0x4889742458	             mov qword [rsp + 0x58], rsi	      6731	mbyte.c	FUNCTION_145
0x400365e	            0x31f6	                            xor esi, esi	      6731	mbyte.c	FUNCTION_145
0x4003660	          0x4885d2	                           test rdx, rdx	      6739	mbyte.c	FUNCTION_145	IF_1
0x4003663	            0x751a	                           jne 0x400367f	      6739	mbyte.c	FUNCTION_145	IF_1
0x4003665	          0x4889d0	                            mov rax, rdx	      6739	mbyte.c	FUNCTION_145	IF_1
0x4003668	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      6740	mbyte.c	FUNCTION_145	CALL_1
0x400366f	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      6740	mbyte.c	FUNCTION_145	CALL_1
0x4003674	            0xf2ae	              repne scasb al, byte [rdi]	      6740	mbyte.c	FUNCTION_145	CALL_1
0x4003676	          0x48f7d1	                                 not rcx	      6740	mbyte.c	FUNCTION_145	CALL_1
0x4003679	        0x448d69ff	                     lea r13d, [rcx - 1]	      6740	mbyte.c	FUNCTION_145	CALL_1
0x400367d	            0xeb08	                           jmp 0x4003687	      6740	mbyte.c	FUNCTION_145	CALL_1
0x400367f	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      6742	mbyte.c	FUNCTION_145	ELSE_1
0x4003684	          0x448b28	                   mov r13d, dword [rax]	      6742	mbyte.c	FUNCTION_145	ELSE_1
0x4003687	          0x4585ed	                         test r13d, r13d	      6743	mbyte.c	FUNCTION_145	IF_2
0x400368a	            0x750f	                           jne 0x400369b	      6743	mbyte.c	FUNCTION_145	IF_2
0x400368c	      0xbf00000000	                              mov edi, 0	      6744	mbyte.c	FUNCTION_145	CALL_2
0x4003691	      0xe800000000	                          call 0x4003696	      6744	mbyte.c	FUNCTION_145	CALL_2
0x4003696	      0xe987050000	                           jmp 0x4003c22	      6744	mbyte.c	FUNCTION_145	CALL_2
0x400369b	        0x41833f05	                      cmp dword [r15], 5	      6746	mbyte.c	FUNCTION_145	SWITCH_1
0x400369f	     0xf8752050000	                            ja 0x4003bf7	      6746	mbyte.c	FUNCTION_145	SWITCH_1
0x40036a5	          0x418b07	                    mov eax, dword [r15]	      6746	mbyte.c	FUNCTION_145	SWITCH_1
0x40036a8	    0xff24c5000000	                       jmp qword [rax*8]	      6746	mbyte.c	FUNCTION_145	SWITCH_1
0x40036af	      0x438d7c2d01	                lea edi, [r13 + r13 + 1]	      6749	mbyte.c	FUNCTION_145	SWITCH_1	CALL_3
0x40036b4	      0xe800000000	                          call 0x40036b9	      6749	mbyte.c	FUNCTION_145	SWITCH_1	CALL_3
0x40036b9	          0x4889c5	                            mov rbp, rax	      6749	mbyte.c	FUNCTION_145	SWITCH_1	CALL_3
0x40036bc	          0x4885c0	                           test rax, rax	      6750	mbyte.c	FUNCTION_145	SWITCH_1	IF_3
0x40036bf	     0xf8439050000	                            je 0x4003bfe	      6750	mbyte.c	FUNCTION_145	SWITCH_1	IF_3
0x40036c5	          0x4585ed	                         test r13d, r13d	      6753	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x40036c8	            0x7e4b	                           jle 0x4003715	      6753	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x40036ca	      0x488b742408	                mov rsi, qword [rsp + 8]	      6753	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x40036cf	          0x4889f1	                            mov rcx, rsi	      6753	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x40036d2	        0x418d45ff	                      lea eax, [r13 - 1]	      6753	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x40036d6	      0x4c8d440601	                 lea r8, [rsi + rax + 1]	      6753	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x40036db	          0x4889ee	                            mov rsi, rbp	      6753	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x40036de	           0xfb611	                   movzx edx, byte [rcx]	      6755	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x40036e1	           0xfb6c2	                           movzx eax, dl	      6756	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	IF_4
0x40036e4	          0x83f87f	                           cmp eax, 0x7f	      6756	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	IF_4
0x40036e7	            0x7f08	                            jg 0x40036f1	      6756	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	IF_4
0x40036e9	            0x8816	                      mov byte [rsi], dl	      6757	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	IF_4
0x40036eb	        0x488d7601	                      lea rsi, [rsi + 1]	      6757	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	IF_4
0x40036ef	            0xeb19	                           jmp 0x400370a	      6757	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	IF_4
0x40036f1	           0xfb6fa	                           movzx edi, dl	      6760	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x40036f4	          0xc1ef06	                              shr edi, 6	      6760	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x40036f7	          0x83ef40	                           sub edi, 0x40	      6760	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x40036fa	          0x40883e	                     mov byte [rsi], dil	      6760	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x40036fd	          0x83e23f	                           and edx, 0x3f	      6761	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x4003700	          0x83c280	             add edx, 0xffffffffffffff80	      6761	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x4003703	          0x885601	                  mov byte [rsi + 1], dl	      6761	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x4003706	        0x488d7602	                      lea rsi, [rsi + 2]	      6761	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x400370a	        0x4883c101	                              add rcx, 1	      6761	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x400370e	          0x4939c8	                             cmp r8, rcx	      6753	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x4003711	            0x75cb	                           jne 0x40036de	      6753	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x4003713	            0xeb03	                           jmp 0x4003718	      6753	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x4003715	          0x4889c6	                            mov rsi, rax	      6753	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x4003718	          0xc60600	                       mov byte [rsi], 0	      6764	mbyte.c	FUNCTION_145	SWITCH_1
0x400371b	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      6765	mbyte.c	FUNCTION_145	SWITCH_1	IF_5
0x4003720	          0x4885c0	                           test rax, rax	      6765	mbyte.c	FUNCTION_145	SWITCH_1	IF_5
0x4003723	     0xf84dc040000	                            je 0x4003c05	      6765	mbyte.c	FUNCTION_145	SWITCH_1	IF_5
0x4003729	          0x4829ee	                            sub rsi, rbp	      6766	mbyte.c	FUNCTION_145	SWITCH_1	IF_5
0x400372c	            0x8930	                    mov dword [rax], esi	      6766	mbyte.c	FUNCTION_145	SWITCH_1	IF_5
0x400372e	          0x4889e8	                            mov rax, rbp	      6749	mbyte.c	FUNCTION_145	SWITCH_1	CALL_3
0x4003731	      0xe9ec040000	                           jmp 0x4003c22	      6749	mbyte.c	FUNCTION_145	SWITCH_1	CALL_3
0x4003736	      0x438d7c6d01	              lea edi, [r13 + r13*2 + 1]	      6770	mbyte.c	FUNCTION_145	SWITCH_1	CALL_4
0x400373b	      0xe800000000	                          call 0x4003740	      6770	mbyte.c	FUNCTION_145	SWITCH_1	CALL_4
0x4003740	          0x4889c5	                            mov rbp, rax	      6770	mbyte.c	FUNCTION_145	SWITCH_1	CALL_4
0x4003743	          0x4885c0	                           test rax, rax	      6771	mbyte.c	FUNCTION_145	SWITCH_1	IF_6
0x4003746	     0xf84be040000	                            je 0x4003c0a	      6771	mbyte.c	FUNCTION_145	SWITCH_1	IF_6
0x400374c	          0x4585ed	                         test r13d, r13d	      6774	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x400374f	            0x7e7d	                           jle 0x40037ce	      6774	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x4003751	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      6774	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x4003756	          0x4889cb	                            mov rbx, rcx	      6774	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x4003759	        0x418d45ff	                      lea eax, [r13 - 1]	      6774	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x400375d	      0x4c8d6c0101	                lea r13, [rcx + rax + 1]	      6774	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x4003762	          0x4989ec	                            mov r12, rbp	      6774	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x4003765	           0xfb63b	                   movzx edi, byte [rbx]	      6776	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x4003768	          0x8d575c	                   lea edx, [rdi + 0x5c]	      6777	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x400376b	          0x80fa1a	                            cmp dl, 0x1a	      6777	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x400376e	            0x7711	                            ja 0x4003781	      6777	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x4003770	           0xfb6d2	                           movzx edx, dl	      6777	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x4003773	    0xff24d5000000	                       jmp qword [rdx*8]	      6777	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x400377a	      0xbfac200000	                         mov edi, 0x20ac	      6779	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x400377f	            0xeb35	                           jmp 0x40037b6	      6779	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x4003781	        0x400fb6ff	                          movzx edi, dil	      6776	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x4003785	            0xeb2f	                           jmp 0x40037b6	      6776	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x4003787	      0xbf61010000	                          mov edi, 0x161	      6781	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x400378c	            0xeb28	                           jmp 0x40037b6	      6781	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x400378e	      0xbf7d010000	                          mov edi, 0x17d	      6782	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x4003793	            0xeb21	                           jmp 0x40037b6	      6782	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x4003795	      0xbf7e010000	                          mov edi, 0x17e	      6783	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x400379a	            0xeb1a	                           jmp 0x40037b6	      6783	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x400379c	      0xbf52010000	                          mov edi, 0x152	      6784	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40037a1	            0xeb13	                           jmp 0x40037b6	      6784	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40037a3	      0xbf53010000	                          mov edi, 0x153	      6785	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40037a8	            0xeb0c	                           jmp 0x40037b6	      6785	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40037aa	      0xbf78010000	                          mov edi, 0x178	      6786	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40037af	            0xeb05	                           jmp 0x40037b6	      6786	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40037b1	      0xbf60010000	                          mov edi, 0x160	      6780	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40037b6	          0x4c89e6	                            mov rsi, r12	      6788	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	CALL_5
0x40037b9	      0xe800000000	                          call 0x40037be	      6788	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	CALL_5
0x40037be	            0x4898	                                    cdqe	      6788	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	CALL_5
0x40037c0	          0x4901c4	                            add r12, rax	      6788	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	CALL_5
0x40037c3	        0x4883c301	                              add rbx, 1	      6788	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	CALL_5
0x40037c7	          0x4c39eb	                            cmp rbx, r13	      6774	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x40037ca	            0x7599	                           jne 0x4003765	      6774	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x40037cc	            0xeb03	                           jmp 0x40037d1	      6774	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x40037ce	          0x4989c4	                            mov r12, rax	      6774	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x40037d1	      0x41c6042400	                       mov byte [r12], 0	      6790	mbyte.c	FUNCTION_145	SWITCH_1
0x40037d6	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      6791	mbyte.c	FUNCTION_145	SWITCH_1	IF_7
0x40037db	          0x4885c0	                           test rax, rax	      6791	mbyte.c	FUNCTION_145	SWITCH_1	IF_7
0x40037de	     0xf842d040000	                            je 0x4003c11	      6791	mbyte.c	FUNCTION_145	SWITCH_1	IF_7
0x40037e4	          0x4929ec	                            sub r12, rbp	      6792	mbyte.c	FUNCTION_145	SWITCH_1	IF_7
0x40037e7	          0x448920	                   mov dword [rax], r12d	      6792	mbyte.c	FUNCTION_145	SWITCH_1	IF_7
0x40037ea	          0x4889e8	                            mov rax, rbp	      6770	mbyte.c	FUNCTION_145	SWITCH_1	CALL_4
0x40037ed	      0xe930040000	                           jmp 0x4003c22	      6770	mbyte.c	FUNCTION_145	SWITCH_1	CALL_4
0x40037f2	        0x418d7d01	                      lea edi, [r13 + 1]	      6797	mbyte.c	FUNCTION_145	SWITCH_1	CALL_6
0x40037f6	      0xe800000000	                          call 0x40037fb	      6797	mbyte.c	FUNCTION_145	SWITCH_1	CALL_6
0x40037fb	      0x4889442428	             mov qword [rsp + 0x28], rax	      6797	mbyte.c	FUNCTION_145	SWITCH_1	CALL_6
0x4003800	          0x4885c0	                           test rax, rax	      6798	mbyte.c	FUNCTION_145	SWITCH_1	IF_8
0x4003803	     0xf840d040000	                            je 0x4003c16	      6798	mbyte.c	FUNCTION_145	SWITCH_1	IF_8
0x4003809	          0x4585ed	                         test r13d, r13d	      6801	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3
0x400380c	     0xf8e02020000	                           jle 0x4003a14	      6801	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3
0x4003812	          0x4989c6	                            mov r14, rax	      6801	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3
0x4003815	      0xbb00000000	                              mov ebx, 0	      6801	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3
0x400381a	          0x4489e8	                           mov eax, r13d	      6803	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	CALL_7
0x400381d	            0x29d8	                            sub eax, ebx	      6803	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	CALL_7
0x400381f	        0x89442414	             mov dword [rsp + 0x14], eax	      6803	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	CALL_7
0x4003823	          0x4863eb	                         movsxd rbp, ebx	      6803	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	CALL_7
0x4003826	      0x48036c2408	                add rbp, qword [rsp + 8]	      6803	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	CALL_7
0x400382b	            0x89c6	                            mov esi, eax	      6803	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	CALL_7
0x400382d	          0x4889ef	                            mov rdi, rbp	      6803	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	CALL_7
0x4003830	      0xe800000000	                          call 0x4003835	      6803	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	CALL_7
0x4003835	          0x4189c4	                           mov r12d, eax	      6803	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	CALL_7
0x4003838	            0x85c0	                           test eax, eax	      6804	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	IF_9
0x400383a	            0x750d	                           jne 0x4003849	      6804	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	IF_9
0x400383c	        0x41c60600	                       mov byte [r14], 0	      6805	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	IF_9
0x4003840	        0x4d8d7601	                      lea r14, [r14 + 1]	      6805	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	IF_9
0x4003844	      0xe9bd010000	                           jmp 0x4003a06	      6805	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	IF_9
0x4003849	          0x83f801	                              cmp eax, 1	      6806	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x400384c	            0x7550	                           jne 0x400389e	      6806	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x400384e	         0xfb64500	                   movzx eax, byte [rbp]	      6808	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x4003852	           0xfb6d0	                           movzx edx, al	      6808	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x4003855	     0xfbe92000000	                   movsx edx, byte [rdx]	      6808	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x400385c	            0x85d2	                           test edx, edx	      6810	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_11
0x400385e	            0x7514	                           jne 0x4003874	      6810	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_11
0x4003860	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      6813	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_11	CALL_8
0x4003865	      0xe800000000	                          call 0x400386a	      6813	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_11	CALL_8
0x400386a	      0xb800000000	                              mov eax, 0	      6814	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_11
0x400386f	      0xe9ae030000	                           jmp 0x4003c22	      6814	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_11
0x4003874	        0x39542414	            cmp dword [rsp + 0x14], edx 	      6816	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x4003878	            0x7d18	                           jge 0x4003892	      6816	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x400387a	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      6816	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x4003880	            0x7410	                            je 0x4003892	      6816	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x4003882	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      6819	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x4003887	        0x8b742414	            mov esi, dword [rsp + 0x14] 	      6819	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x400388b	            0x8930	                    mov dword [rax], esi	      6819	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x400388d	      0xe987010000	                           jmp 0x4003a19	      6820	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x4003892	          0x418806	                      mov byte [r14], al	      6822	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x4003895	        0x4d8d7601	                      lea r14, [r14 + 1]	      6822	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x4003899	      0xe968010000	                           jmp 0x4003a06	      6822	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x400389e	          0x4889ef	                            mov rdi, rbp	      6826	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	CALL_9
0x40038a1	      0xe800000000	                          call 0x40038a6	      6826	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	CALL_9
0x40038a6	            0x89c5	                            mov ebp, eax	      6826	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	CALL_9
0x40038a8	        0x41833f04	                      cmp dword [r15], 4	      6827	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13
0x40038ac	     0xf85f4000000	                           jne 0x40039a6	      6827	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13
0x40038b2	      0x3d52010000	                          cmp eax, 0x152	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40038b7	     0xf84cb000000	                            je 0x4003988	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40038bd	      0x3d52010000	                          cmp eax, 0x152	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40038c2	            0x7f62	                            jg 0x4003926	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40038c4	      0x3db4000000	                           cmp eax, 0xb4	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40038c9	     0xf8485030000	                            je 0x4003c54	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40038cf	      0x3db4000000	                           cmp eax, 0xb4	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40038d4	            0x7f26	                            jg 0x40038fc	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40038d6	      0x3da6000000	                           cmp eax, 0xa6	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40038db	     0xf8473030000	                            je 0x4003c54	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40038e1	      0x3da8000000	                           cmp eax, 0xa8	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40038e6	     0xf8468030000	                            je 0x4003c54	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40038ec	      0x3da4000000	                           cmp eax, 0xa4	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40038f1	     0xf85af000000	                           jne 0x40039a6	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40038f7	      0xe958030000	                           jmp 0x4003c54	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40038fc	      0x3db8000000	                           cmp eax, 0xb8	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4003901	     0xf844d030000	                            je 0x4003c54	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4003907	      0x3db8000000	                           cmp eax, 0xb8	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x400390c	     0xf8c94000000	                            jl 0x40039a6	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4003912	    0x8d8044ffffff	                   lea eax, [rax - 0xbc]	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4003918	          0x83f802	                              cmp eax, 2	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x400391b	     0xf8633030000	                           jbe 0x4003c54	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4003921	      0xe980000000	                           jmp 0x40039a6	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4003926	      0x3d78010000	                          cmp eax, 0x178	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x400392b	            0x746f	                            je 0x400399c	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x400392d	      0x3d78010000	                          cmp eax, 0x178	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4003932	            0x7f1b	                            jg 0x400394f	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4003934	      0x3d60010000	                          cmp eax, 0x160	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4003939	            0x742f	                            je 0x400396a	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x400393b	      0x3d61010000	                          cmp eax, 0x161	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4003940	     0xf84f5020000	                            je 0x4003c3b	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4003946	      0x3d53010000	                          cmp eax, 0x153	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x400394b	            0x7559	                           jne 0x40039a6	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x400394d	            0xeb43	                           jmp 0x4003992	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x400394f	      0x3d7e010000	                          cmp eax, 0x17e	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4003954	            0x7428	                            je 0x400397e	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4003956	      0x3dac200000	                         cmp eax, 0x20ac	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x400395b	     0xf84d3020000	                            je 0x4003c34	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4003961	      0x3d7d010000	                          cmp eax, 0x17d	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4003966	            0x753e	                           jne 0x40039a6	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4003968	            0xeb0a	                           jmp 0x4003974	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x400396a	      0xbda6000000	                           mov ebp, 0xa6	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x400396f	      0xe9cc020000	                           jmp 0x4003c40	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4003974	      0xbdb4000000	                           mov ebp, 0xb4	      6833	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4003979	      0xe9c2020000	                           jmp 0x4003c40	      6833	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x400397e	      0xbdb8000000	                           mov ebp, 0xb8	      6834	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4003983	      0xe9b8020000	                           jmp 0x4003c40	      6834	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4003988	      0xbdbc000000	                           mov ebp, 0xbc	      6835	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x400398d	      0xe9ae020000	                           jmp 0x4003c40	      6835	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4003992	      0xbdbd000000	                           mov ebp, 0xbd	      6836	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4003997	      0xe9a4020000	                           jmp 0x4003c40	      6836	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x400399c	      0xbdbe000000	                           mov ebp, 0xbe	      6837	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40039a1	      0xe99a020000	                           jmp 0x4003c40	      6837	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40039a6	            0x89ef	                            mov edi, ebp	      6847	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	CALL_10
0x40039a8	      0xe800000000	                          call 0x40039ad	      6847	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	CALL_10
0x40039ad	            0x85c0	                           test eax, eax	      6847	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	CALL_10
0x40039af	            0x7550	                           jne 0x4003a01	      6847	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	CALL_10
0x40039b1	    0x81fdff000000	                           cmp ebp, 0xff	      6849	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	IF_15
0x40039b7	            0x7f0e	                            jg 0x40039c7	      6849	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	IF_15
0x40039b9	          0x41882e	                     mov byte [r14], bpl	      6850	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	IF_15
0x40039bc	        0x4d8d7601	                      lea r14, [r14 + 1]	      6850	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	IF_15
0x40039c0	            0xeb3f	                           jmp 0x4003a01	      6850	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	IF_15
0x40039c2	      0xbd00010000	                          mov ebp, 0x100	      6845	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40039c7	      0x41837f1000	               cmp dword [r15 + 0x10], 0	      6851	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_5	IF_16
0x40039cc	            0x7414	                            je 0x40039e2	      6851	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_5	IF_16
0x40039ce	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      6853	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_5	IF_16	CALL_11
0x40039d3	      0xe800000000	                          call 0x40039d8	      6853	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_5	IF_16	CALL_11
0x40039d8	      0xb800000000	                              mov eax, 0	      6854	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_5	IF_16
0x40039dd	      0xe940020000	                           jmp 0x4003c22	      6854	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_5	IF_16
0x40039e2	        0x41c606bf	                    mov byte [r14], 0xbf	      6858	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6
0x40039e6	            0x89ef	                            mov edi, ebp	      6859	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6	IF_17	CALL_12
0x40039e8	      0xe800000000	                          call 0x40039ed	      6859	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6	IF_17	CALL_12
0x40039ed	          0x83f801	                              cmp eax, 1	      6859	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6	IF_17	CALL_12
0x40039f0	            0x7f06	                            jg 0x40039f8	      6859	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6	IF_17	CALL_12
0x40039f2	        0x4983c601	                              add r14, 1	      6858	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6
0x40039f6	            0xeb09	                           jmp 0x4003a01	      6858	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6
0x40039f8	      0x41c646013f	                mov byte [r14 + 1], 0x3f	      6860	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6	IF_17
0x40039fd	        0x4d8d7602	                      lea r14, [r14 + 2]	      6860	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6	IF_17
0x4003a01	      0x418d5c1cff	                lea ebx, [r12 + rbx - 1]	      6863	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4
0x4003a06	          0x83c301	                              add ebx, 1	      6801	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3
0x4003a09	          0x4139dd	                           cmp r13d, ebx	      6801	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3
0x4003a0c	     0xf8f08feffff	                            jg 0x400381a	      6801	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3
0x4003a12	            0xeb05	                           jmp 0x4003a19	      6801	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3
0x4003a14	      0x4c8b742428	            mov r14, qword [rsp + 0x28] 	      6801	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3
0x4003a19	        0x41c60600	                       mov byte [r14], 0	      6866	mbyte.c	FUNCTION_145	SWITCH_1
0x4003a1d	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      6867	mbyte.c	FUNCTION_145	SWITCH_1	IF_18
0x4003a22	          0x4885c9	                           test rcx, rcx	      6867	mbyte.c	FUNCTION_145	SWITCH_1	IF_18
0x4003a25	     0xf84f2010000	                            je 0x4003c1d	      6867	mbyte.c	FUNCTION_145	SWITCH_1	IF_18
0x4003a2b	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      6868	mbyte.c	FUNCTION_145	SWITCH_1	IF_18
0x4003a30	          0x4929c6	                            sub r14, rax	      6868	mbyte.c	FUNCTION_145	SWITCH_1	IF_18
0x4003a33	          0x448931	                   mov dword [rcx], r14d	      6868	mbyte.c	FUNCTION_145	SWITCH_1	IF_18
0x4003a36	      0xe9e7010000	                           jmp 0x4003c22	      6868	mbyte.c	FUNCTION_145	SWITCH_1	IF_18
0x4003a3b	      0x488b442408	                mov rax, qword [rsp + 8]	      4599	mbyte.c	FUNCTION_92
0x4003a40	      0x4889442438	             mov qword [rsp + 0x38], rax	      4599	mbyte.c	FUNCTION_92
0x4003a45	          0x4d63ed	                        movsxd r13, r13d	      4600	mbyte.c	FUNCTION_92
0x4003a48	      0x4c896c2440	             mov qword [rsp + 0x40], r13	      4600	mbyte.c	FUNCTION_92
0x4003a4d	      0xbd00000000	                              mov ebp, 0	      4595	mbyte.c	FUNCTION_92
0x4003a52	      0xbb00000000	                              mov ebx, 0	      4594	mbyte.c	FUNCTION_92
0x4003a57	    0x41bc00000000	                             mov r12d, 0	      4593	mbyte.c	FUNCTION_92
0x4003a5d	          0x4d85e4	                           test r12, r12	      4603	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x4003a60	            0x740a	                            je 0x4003a6c	      4603	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x4003a62	      0xe800000000	                          call 0x4003a67	      4603	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x4003a67	          0x833807	                      cmp dword [rax], 7	      4603	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x4003a6a	            0x7541	                           jne 0x4003aad	      4603	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x4003a6c	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      4607	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x4003a71	      0x4d8d644428	          lea r12, [r12 + rax*2 + 0x28] 	      4607	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x4003a76	          0x4489e7	                           mov edi, r12d	      4608	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_1
0x4003a79	      0xe800000000	                          call 0x4003a7e	      4608	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_1
0x4003a7e	          0x4989c5	                            mov r13, rax	      4608	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_1
0x4003a81	          0x4885c0	                           test rax, rax	      4609	mbyte.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x4003a84	            0x7413	                            je 0x4003a99	      4609	mbyte.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x4003a86	          0x4885db	                           test rbx, rbx	      4609	mbyte.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x4003a89	            0x740e	                            je 0x4003a99	      4609	mbyte.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x4003a8b	          0x4889da	                            mov rdx, rbx	        59	string3.h	FUNCTION_147	CALL_3
0x4003a8e	          0x4889ee	                            mov rsi, rbp	        59	string3.h	FUNCTION_147	CALL_3
0x4003a91	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_147	CALL_3
0x4003a94	      0xe800000000	                          call 0x4003a99	        59	string3.h	FUNCTION_147	CALL_3
0x4003a99	          0x4889ef	                            mov rdi, rbp	      4611	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x4003a9c	      0xe800000000	                          call 0x4003aa1	      4611	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x4003aa1	          0x4d85ed	                           test r13, r13	      4613	mbyte.c	FUNCTION_92	FOR_1	IF_1	IF_3
0x4003aa4	     0xf84c1010000	                            je 0x4003c6b	      4613	mbyte.c	FUNCTION_92	FOR_1	IF_1	IF_3
0x4003aaa	          0x4c89ed	                            mov rbp, r13	      4612	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x4003aad	      0x488d441d00	                    lea rax, [rbp + rbx]	      4617	mbyte.c	FUNCTION_92	FOR_1
0x4003ab2	      0x4889442448	             mov qword [rsp + 0x48], rax	      4617	mbyte.c	FUNCTION_92	FOR_1
0x4003ab7	          0x4c89e0	                            mov rax, r12	      4618	mbyte.c	FUNCTION_92	FOR_1
0x4003aba	          0x4829d8	                            sub rax, rbx	      4618	mbyte.c	FUNCTION_92	FOR_1
0x4003abd	        0x488d40fe	                      lea rax, [rax - 2]	      4618	mbyte.c	FUNCTION_92	FOR_1
0x4003ac1	      0x4889442450	             mov qword [rsp + 0x50], rax	      4618	mbyte.c	FUNCTION_92	FOR_1
0x4003ac6	        0x498b7f08	                mov rdi, qword [r15 + 8]	      4621	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x4003aca	      0x4c8d442450	                    lea r8, [rsp + 0x50]	      4621	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x4003acf	      0x488d4c2448	                   lea rcx, [rsp + 0x48]	      4621	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x4003ad4	      0x488d542440	                   lea rdx, [rsp + 0x40]	      4621	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x4003ad9	      0x488d742438	                   lea rsi, [rsp + 0x38]	      4621	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x4003ade	      0xe800000000	                          call 0x4003ae3	      4621	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x4003ae3	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      4621	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x4003ae7	            0x740d	                            je 0x4003af6	      4621	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x4003ae9	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      4625	mbyte.c	FUNCTION_92	FOR_1	IF_4
0x4003aee	          0xc60000	                       mov byte [rax], 0	      4625	mbyte.c	FUNCTION_92	FOR_1	IF_4
0x4003af1	      0xe9e3000000	                           jmp 0x4003bd9	      4625	mbyte.c	FUNCTION_92	FOR_1	IF_4
0x4003af6	        0x418b5f10	            mov ebx, dword [r15 + 0x10] 	      4631	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4003afa	            0x85db	                           test ebx, ebx	      4631	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4003afc	            0x752b	                           jne 0x4003b29	      4631	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4003afe	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      4631	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4003b04	            0x7423	                            je 0x4003b29	      4631	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4003b06	      0xe800000000	                          call 0x4003b0b	      4632	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4003b0b	          0x833816	                   cmp dword [rax], 0x16	      4632	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4003b0e	            0x7519	                           jne 0x4003b29	      4632	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4003b10	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      4635	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4003b15	          0xc60000	                       mov byte [rax], 0	      4635	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4003b18	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      4636	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4003b1d	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      4636	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4003b22	            0x8906	                    mov dword [rsi], eax	      4636	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4003b24	      0xe9b0000000	                           jmp 0x4003bd9	      4636	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4003b29	            0x85db	                           test ebx, ebx	      4642	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4003b2b	            0x757f	                           jne 0x4003bac	      4642	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4003b2d	      0xe800000000	                          call 0x4003b32	      4643	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4003b32	            0x8b00	                    mov eax, dword [rax]	      4643	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4003b34	          0x83f854	                           cmp eax, 0x54	      4644	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4003b37	            0x7405	                            je 0x4003b3e	      4644	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4003b39	          0x83f816	                           cmp eax, 0x16	      4644	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4003b3c	            0x756e	                           jne 0x4003bac	      4644	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4003b3e	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      4649	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4003b43	        0x488d5001	                      lea rdx, [rax + 1]	      4649	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4003b47	      0x4889542448	             mov qword [rsp + 0x48], rdx	      4649	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4003b4c	          0xc6003f	                    mov byte [rax], 0x3f	      4649	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4003b4f	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      4650	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x4003b54	    0xff1500000000	                 call qword [0x04003b5a]	      4650	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x4003b5a	          0x83f801	                              cmp eax, 1	      4650	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x4003b5d	            0x7e11	                           jle 0x4003b70	      4650	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x4003b5f	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      4651	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x4003b64	        0x488d5001	                      lea rdx, [rax + 1]	      4651	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x4003b68	      0x4889542448	             mov qword [rsp + 0x48], rdx	      4651	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x4003b6d	          0xc6003f	                    mov byte [rax], 0x3f	      4651	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x4003b70	    0x833d00000000	               cmp dword [0x04003b77], 0	      4652	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_8
0x4003b77	            0x7410	                            je 0x4003b89	      4652	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_8
0x4003b79	        0x8b742440	            mov esi, dword [rsp + 0x40] 	      4653	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	CALL_5
0x4003b7d	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      4653	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	CALL_5
0x4003b82	      0xe800000000	                          call 0x4003b87	      4653	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	CALL_5
0x4003b87	            0xeb15	                           jmp 0x4003b9e	      4653	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	CALL_5
0x4003b89	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      4656	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	ELSE_2
0x4003b8e	    0xff1500000000	                 call qword [0x04003b94]	      4656	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	ELSE_2
0x4003b94	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	      4657	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9
0x4003b99	            0x39d0	                            cmp eax, edx	      4657	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9
0x4003b9b	           0xf4fc2	                          cmovg eax, edx	      4657	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9
0x4003b9e	            0x4898	                                    cdqe	      4660	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4003ba0	      0x4801442438	            add qword [rsp + 0x38], rax 	      4660	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4003ba5	      0x4829442440	             sub qword [rsp + 0x40], rax	      4661	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4003baa	            0xeb20	                           jmp 0x4003bcc	      4661	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4003bac	      0xe800000000	                          call 0x4003bb1	      4663	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10
0x4003bb1	          0x833807	                      cmp dword [rax], 7	      4663	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10
0x4003bb4	            0x7416	                            je 0x4003bcc	      4663	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10
0x4003bb6	          0x4885ed	                           test rbp, rbp	      4666	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10	CALL_6
0x4003bb9	     0xf84ac000000	                            je 0x4003c6b	      4666	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10	CALL_6
0x4003bbf	          0x4889ef	                            mov rdi, rbp	      4666	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10	CALL_6
0x4003bc2	      0xe800000000	                          call 0x4003bc7	      4666	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10	CALL_6
0x4003bc7	      0xe99f000000	                           jmp 0x4003c6b	      4666	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10	CALL_6
0x4003bcc	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	      4670	mbyte.c	FUNCTION_92	FOR_1
0x4003bd1	          0x4829eb	                            sub rbx, rbp	      4670	mbyte.c	FUNCTION_92	FOR_1
0x4003bd4	      0xe984feffff	                           jmp 0x4003a5d	      4670	mbyte.c	FUNCTION_92	FOR_1
0x4003bd9	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      4673	mbyte.c	FUNCTION_92	IF_11
0x4003bde	          0x4885f6	                           test rsi, rsi	      4673	mbyte.c	FUNCTION_92	IF_11
0x4003be1	            0x740f	                            je 0x4003bf2	      4673	mbyte.c	FUNCTION_92	IF_11
0x4003be3	          0x4885ed	                           test rbp, rbp	      4673	mbyte.c	FUNCTION_92	IF_11
0x4003be6	            0x740a	                            je 0x4003bf2	      4673	mbyte.c	FUNCTION_92	IF_11
0x4003be8	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      4674	mbyte.c	FUNCTION_92	IF_11
0x4003bed	          0x4829e8	                            sub rax, rbp	      4674	mbyte.c	FUNCTION_92	IF_11
0x4003bf0	            0x8906	                    mov dword [rsi], eax	      4674	mbyte.c	FUNCTION_92	IF_11
0x4003bf2	          0x4889e8	                            mov rax, rbp	      6896	mbyte.c	FUNCTION_145	SWITCH_1
0x4003bf5	            0xeb2b	                           jmp 0x4003c22	      6896	mbyte.c	FUNCTION_145	SWITCH_1
0x4003bf7	      0xb800000000	                              mov eax, 0	      6732	mbyte.c	FUNCTION_145
0x4003bfc	            0xeb24	                           jmp 0x4003c22	      6732	mbyte.c	FUNCTION_145
0x4003bfe	      0xb800000000	                              mov eax, 0	      6749	mbyte.c	FUNCTION_145	SWITCH_1	CALL_3
0x4003c03	            0xeb1d	                           jmp 0x4003c22	      6749	mbyte.c	FUNCTION_145	SWITCH_1	CALL_3
0x4003c05	          0x4889e8	                            mov rax, rbp	      6749	mbyte.c	FUNCTION_145	SWITCH_1	CALL_3
0x4003c08	            0xeb18	                           jmp 0x4003c22	      6749	mbyte.c	FUNCTION_145	SWITCH_1	CALL_3
0x4003c0a	      0xb800000000	                              mov eax, 0	      6770	mbyte.c	FUNCTION_145	SWITCH_1	CALL_4
0x4003c0f	            0xeb11	                           jmp 0x4003c22	      6770	mbyte.c	FUNCTION_145	SWITCH_1	CALL_4
0x4003c11	          0x4889e8	                            mov rax, rbp	      6770	mbyte.c	FUNCTION_145	SWITCH_1	CALL_4
0x4003c14	            0xeb0c	                           jmp 0x4003c22	      6770	mbyte.c	FUNCTION_145	SWITCH_1	CALL_4
0x4003c16	      0xb800000000	                              mov eax, 0	      6797	mbyte.c	FUNCTION_145	SWITCH_1	CALL_6
0x4003c1b	            0xeb05	                           jmp 0x4003c22	      6797	mbyte.c	FUNCTION_145	SWITCH_1	CALL_6
0x4003c1d	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      6797	mbyte.c	FUNCTION_145	SWITCH_1	CALL_6
0x4003c22	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	      6961	mbyte.c	FUNCTION_145
0x4003c27	    0x644833342528	                xor rsi, qword fs:[0x28]	      6961	mbyte.c	FUNCTION_145
0x4003c30	            0x7445	                            je 0x4003c77	      6961	mbyte.c	FUNCTION_145
0x4003c32	            0xeb3e	                           jmp 0x4003c72	      6961	mbyte.c	FUNCTION_145
0x4003c34	      0xbda4000000	                           mov ebp, 0xa4	      6830	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4003c39	            0xeb05	                           jmp 0x4003c40	      6830	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4003c3b	      0xbda8000000	                           mov ebp, 0xa8	      6832	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4003c40	            0x89ef	                            mov edi, ebp	      6847	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	CALL_10
0x4003c42	      0xe800000000	                          call 0x4003c47	      6847	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	CALL_10
0x4003c47	            0x85c0	                           test eax, eax	      6847	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	CALL_10
0x4003c49	     0xf846afdffff	                            je 0x40039b9	      6847	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	CALL_10
0x4003c4f	      0xe9adfdffff	                           jmp 0x4003a01	      6847	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	CALL_10
0x4003c54	      0xbf00010000	                          mov edi, 0x100	      6847	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	CALL_10
0x4003c59	      0xe800000000	                          call 0x4003c5e	      6847	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	CALL_10
0x4003c5e	            0x85c0	                           test eax, eax	      6847	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	CALL_10
0x4003c60	     0xf859bfdffff	                           jne 0x4003a01	      6847	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	CALL_10
0x4003c66	      0xe957fdffff	                           jmp 0x40039c2	      6847	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	CALL_10
0x4003c6b	      0xbd00000000	                              mov ebp, 0	      4612	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x4003c70	            0xeb80	                           jmp 0x4003bf2	      4612	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x4003c72	      0xe800000000	                          call 0x4003c77	      6961	mbyte.c	FUNCTION_145
0x4003c77	        0x4883c468	                           add rsp, 0x68	      6961	mbyte.c	FUNCTION_145
0x4003c7b	              0x5b	                                 pop rbx	      6961	mbyte.c	FUNCTION_145
0x4003c7c	              0x5d	                                 pop rbp	      6961	mbyte.c	FUNCTION_145
0x4003c7d	            0x415c	                                 pop r12	      6961	mbyte.c	FUNCTION_145
0x4003c7f	            0x415d	                                 pop r13	      6961	mbyte.c	FUNCTION_145
0x4003c81	            0x415e	                                 pop r14	      6961	mbyte.c	FUNCTION_145
0x4003c83	            0x415f	                                 pop r15	      6961	mbyte.c	FUNCTION_145
0x4003c85	              0xc3	                                     ret	      6961	mbyte.c	FUNCTION_145
im_preedit_end_cb	SWITCH,0:CALL,4:IF,1:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	13
0x4000939	        0x4883ec08	                              sub rsp, 8	      5274	mbyte.c	FUNCTION_112
0x400093d	      0xe8eafeffff	              call sym.im_delete_preedit	      5278	mbyte.c	FUNCTION_112	CALL_2
0x4000942	    0x48833d000000	               cmp qword [0x0400094a], 0	      5281	mbyte.c	FUNCTION_112	IF_1
0x400094a	            0x750a	                           jne 0x4000956	      5281	mbyte.c	FUNCTION_112	IF_1
0x400094c	    0xc70500000000	     mov dword [0x04000956], 0x7fffffff 	      5282	mbyte.c	FUNCTION_112	IF_1
0x4000956	    0xc70500000000	               mov dword [0x04000960], 0	      5283	mbyte.c	FUNCTION_112
0x4000960	    0xc70500000000	               mov dword [0x0400096a], 0	      5291	mbyte.c	FUNCTION_112
0x400096a	      0xbe00000000	                              mov esi, 0	      5292	mbyte.c	FUNCTION_112	CALL_3
0x400096f	      0xbf01000000	                              mov edi, 1	      5292	mbyte.c	FUNCTION_112	CALL_3
0x4000974	      0xe800000000	                          call 0x4000979	      5292	mbyte.c	FUNCTION_112	CALL_3
0x4000979	      0xe88affffff	                   call sym.im_show_info	      5293	mbyte.c	FUNCTION_112	CALL_4
0x400097e	        0x4883c408	                              add rsp, 8	      5294	mbyte.c	FUNCTION_112
0x4000982	              0xc3	                                     ret	      5294	mbyte.c	FUNCTION_112
utfc_char2bytes	SWITCH,0:CALL,2:IF,1:WHILE,0:FOR,1:DO,0:ELSE,0:functions,0	40
0x4000eb3	            0x4156	                                push r14	      2059	mbyte.c	FUNCTION_44
0x4000eb5	            0x4155	                                push r13	      2059	mbyte.c	FUNCTION_44
0x4000eb7	            0x4154	                                push r12	      2059	mbyte.c	FUNCTION_44
0x4000eb9	              0x55	                                push rbp	      2059	mbyte.c	FUNCTION_44
0x4000eba	              0x53	                                push rbx	      2059	mbyte.c	FUNCTION_44
0x4000ebb	          0x4989f5	                            mov r13, rsi	      2059	mbyte.c	FUNCTION_44
0x4000ebe	          0x4863ef	                         movsxd rbp, edi	      2063	mbyte.c	FUNCTION_44	CALL_1
0x4000ec1	    0x488b05000000	            mov rax, qword [0x04000ec8] 	      2063	mbyte.c	FUNCTION_44	CALL_1
0x4000ec8	          0x8b3ca8	            mov edi, dword [rax + rbp*4]	      2063	mbyte.c	FUNCTION_44	CALL_1
0x4000ecb	      0xe800000000	                          call 0x4000ed0	      2063	mbyte.c	FUNCTION_44	CALL_1
0x4000ed0	            0x89c3	                            mov ebx, eax	      2063	mbyte.c	FUNCTION_44	CALL_1
0x4000ed2	    0x833d00000000	               cmp dword [0x04000ed9], 0	      2064	mbyte.c	FUNCTION_44	FOR_1
0x4000ed9	            0x7e4b	                           jle 0x4000f26	      2064	mbyte.c	FUNCTION_44	FOR_1
0x4000edb	    0x4c8d34ad0000	                        lea r14, [rbp*4]	      2064	mbyte.c	FUNCTION_44	FOR_1
0x4000ee3	    0x488b05000000	            mov rax, qword [0x04000eea] 	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4000eea	          0x8b3ca8	            mov edi, dword [rax + rbp*4]	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4000eed	            0x85ff	                           test edi, edi	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4000eef	            0x7435	                            je 0x4000f26	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4000ef1	    0x41bc00000000	                             mov r12d, 0	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4000ef7	      0xbd00000000	                              mov ebp, 0	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4000efc	            0xeb10	                           jmp 0x4000f0e	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4000efe	        0x498b0424	                    mov rax, qword [r12]	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4000f02	        0x428b3c30	              mov edi, dword [rax + r14]	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4000f06	        0x4983c408	                              add r12, 8	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4000f0a	            0x85ff	                           test edi, edi	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4000f0c	            0x7418	                            je 0x4000f26	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4000f0e	          0x4863f3	                         movsxd rsi, ebx	      2068	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x4000f11	          0x4c01ee	                            add rsi, r13	      2068	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x4000f14	      0xe800000000	                          call 0x4000f19	      2068	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x4000f19	             0x1c3	                            add ebx, eax	      2068	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x4000f1b	          0x83c501	                              add ebp, 1	      2064	mbyte.c	FUNCTION_44	FOR_1
0x4000f1e	    0x392d00000000	            cmp dword [0x04000f24], ebp 	      2064	mbyte.c	FUNCTION_44	FOR_1
0x4000f24	            0x7fd8	                            jg 0x4000efe	      2064	mbyte.c	FUNCTION_44	FOR_1
0x4000f26	            0x89d8	                            mov eax, ebx	      2071	mbyte.c	FUNCTION_44
0x4000f28	              0x5b	                                 pop rbx	      2071	mbyte.c	FUNCTION_44
0x4000f29	              0x5d	                                 pop rbp	      2071	mbyte.c	FUNCTION_44
0x4000f2a	            0x415c	                                 pop r12	      2071	mbyte.c	FUNCTION_44
0x4000f2c	            0x415d	                                 pop r13	      2071	mbyte.c	FUNCTION_44
0x4000f2e	            0x415e	                                 pop r14	      2071	mbyte.c	FUNCTION_44
0x4000f30	              0xc3	                                     ret	      2071	mbyte.c	FUNCTION_44
mb_init	SWITCH,0:CALL,32:IF,28:WHILE,0:FOR,2:DO,0:ELSE,19:functions,0	256
0x4003d90	              0x53	                                push rbx	       516	mbyte.c	FUNCTION_4
0x4003d91	        0x4883ec40	                           sub rsp, 0x40	       516	mbyte.c	FUNCTION_4
0x4003d95	    0x64488b042528	                mov rax, qword fs:[0x28]	       516	mbyte.c	FUNCTION_4
0x4003d9e	      0x4889442438	             mov qword [rsp + 0x38], rax	       516	mbyte.c	FUNCTION_4
0x4003da3	            0x31c0	                            xor eax, eax	       516	mbyte.c	FUNCTION_4
0x4003da5	    0x488b1d000000	            mov rbx, qword [0x04003dac] 	       528	mbyte.c	FUNCTION_4	IF_1
0x4003dac	          0x4885db	                           test rbx, rbx	       528	mbyte.c	FUNCTION_4	IF_1
0x4003daf	            0x7539	                           jne 0x4003dea	       528	mbyte.c	FUNCTION_4	IF_1
0x4003db1	      0xb800000000	                              mov eax, 0	       528	mbyte.c	FUNCTION_4	IF_1
0x4003db6	      0xba00000000	                              mov edx, 0	       528	mbyte.c	FUNCTION_4	IF_1
0x4003dbb	          0xc60001	                       mov byte [rax], 1	       532	mbyte.c	FUNCTION_4	IF_1	FOR_1
0x4003dbe	        0x4883c001	                              add rax, 1	       532	mbyte.c	FUNCTION_4	IF_1	FOR_1
0x4003dc2	          0x4839d0	                            cmp rax, rdx	       531	mbyte.c	FUNCTION_4	IF_1	FOR_1
0x4003dc5	            0x75f4	                           jne 0x4003dbb	       531	mbyte.c	FUNCTION_4	IF_1	FOR_1
0x4003dc7	    0xc70500000000	               mov dword [0x04003dd1], 0	       533	mbyte.c	FUNCTION_4	IF_1
0x4003dd1	    0xc70500000000	               mov dword [0x04003ddb], 1	       534	mbyte.c	FUNCTION_4	IF_1
0x4003ddb	    0xc70500000000	               mov dword [0x04003de5], 0	       535	mbyte.c	FUNCTION_4	IF_1
0x4003de5	      0xe918040000	                           jmp 0x4004202	       536	mbyte.c	FUNCTION_4	IF_1
0x4003dea	      0xbf00000000	                              mov edi, 0	       569	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_7
0x4003def	      0xb905000000	                              mov ecx, 5	       569	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_7
0x4003df4	          0x4889de	                            mov rsi, rbx	       569	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_7
0x4003df7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       569	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_7
0x4003df9	           0xf97c2	                                 seta dl	       569	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_7
0x4003dfc	           0xf92c0	                                 setb al	       569	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_7
0x4003dff	            0x38c2	                              cmp dl, al	       569	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_7
0x4003e01	            0x7419	                            je 0x4003e1c	       569	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_7
0x4003e03	      0xbf00000000	                              mov edi, 0	       570	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_8
0x4003e08	      0xb909000000	                              mov ecx, 9	       570	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_8
0x4003e0d	          0x4889de	                            mov rsi, rbx	       570	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_8
0x4003e10	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       570	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_8
0x4003e12	           0xf97c2	                                 seta dl	       570	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_8
0x4003e15	           0xf92c0	                                 setb al	       570	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_8
0x4003e18	            0x38c2	                              cmp dl, al	       570	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_8
0x4003e1a	            0x7519	                           jne 0x4003e35	       570	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_8
0x4003e1c	    0xc70500000000	               mov dword [0x04003e26], 0	       573	mbyte.c	FUNCTION_4	ELSE_4	IF_7
0x4003e26	    0xc70500000000	               mov dword [0x04003e30], 0	       574	mbyte.c	FUNCTION_4	ELSE_4	IF_7
0x4003e30	      0xe9e9030000	                           jmp 0x400421e	       574	mbyte.c	FUNCTION_4	ELSE_4	IF_7
0x4003e35	      0xbf00000000	                              mov edi, 0	       576	mbyte.c	FUNCTION_4	ELSE_5	IF_8	CALL_9
0x4003e3a	      0xb906000000	                              mov ecx, 6	       576	mbyte.c	FUNCTION_4	ELSE_5	IF_8	CALL_9
0x4003e3f	          0x4889de	                            mov rsi, rbx	       576	mbyte.c	FUNCTION_4	ELSE_5	IF_8	CALL_9
0x4003e42	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       576	mbyte.c	FUNCTION_4	ELSE_5	IF_8	CALL_9
0x4003e44	           0xf97c2	                                 seta dl	       576	mbyte.c	FUNCTION_4	ELSE_5	IF_8	CALL_9
0x4003e47	           0xf92c0	                                 setb al	       576	mbyte.c	FUNCTION_4	ELSE_5	IF_8	CALL_9
0x4003e4a	            0x38c2	                              cmp dl, al	       576	mbyte.c	FUNCTION_4	ELSE_5	IF_8	CALL_9
0x4003e4c	     0xf8491000000	                            je 0x4003ee3	       576	mbyte.c	FUNCTION_4	ELSE_5	IF_8	CALL_9
0x4003e52	          0x4889df	                            mov rdi, rbx	       588	mbyte.c	FUNCTION_4	ELSE_6	IF_10	CALL_11
0x4003e55	      0xe881c8ffff	               call sym.enc_canon_search	       588	mbyte.c	FUNCTION_4	ELSE_6	IF_10	CALL_11
0x4003e5a	            0x85c0	                           test eax, eax	       588	mbyte.c	FUNCTION_4	ELSE_6	IF_10	CALL_11
0x4003e5c	     0xf889b030000	                            js 0x40041fd	       588	mbyte.c	FUNCTION_4	ELSE_6	IF_10	CALL_11
0x4003e62	          0x4863d0	                         movsxd rdx, eax	       590	mbyte.c	FUNCTION_4	ELSE_6	IF_10
0x4003e65	        0x48c1e204	                              shl rdx, 4	       590	mbyte.c	FUNCTION_4	ELSE_6	IF_10
0x4003e69	    0x8b9200000000	                    mov edx, dword [rdx]	       590	mbyte.c	FUNCTION_4	ELSE_6	IF_10
0x4003e6f	          0xf6c204	                              test dl, 4	       591	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11
0x4003e72	            0x743c	                            je 0x4003eb0	       591	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11
0x4003e74	    0xc70500000000	               mov dword [0x04003e7e], 1	       594	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11
0x4003e7e	    0xf7c240010000	                         test edx, 0x140	       595	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	IF_12
0x4003e84	            0x740f	                            je 0x4003e95	       595	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	IF_12
0x4003e86	    0xc70500000000	               mov dword [0x04003e90], 2	       596	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	IF_12
0x4003e90	      0xe989030000	                           jmp 0x400421e	       596	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	IF_12
0x4003e95	    0x81e280000000	                           and edx, 0x80	       597	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_7	IF_13
0x4003e9b	          0x83fa01	                              cmp edx, 1	       598	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_7	IF_13
0x4003e9e	            0x19c0	                            sbb eax, eax	       598	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_7	IF_13
0x4003ea0	            0xf7d0	                                 not eax	       598	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_7	IF_13
0x4003ea2	          0x83e004	                              and eax, 4	       598	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_7	IF_13
0x4003ea5	    0x890500000000	            mov dword [0x04003eab], eax 	       598	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_7	IF_13
0x4003eab	      0xe96e030000	                           jmp 0x400421e	       598	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_7	IF_13
0x4003eb0	          0xf6c202	                              test dl, 2	       602	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_8	ELSE_9	IF_14
0x4003eb3	            0x7415	                            je 0x4003eca	       602	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_8	ELSE_9	IF_14
0x4003eb5	            0x4898	                                    cdqe	       605	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_8	ELSE_9	IF_14
0x4003eb7	        0x48c1e004	                              shl rax, 4	       605	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_8	ELSE_9	IF_14
0x4003ebb	    0x8b9000000000	                    mov edx, dword [rax]	       605	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_8	ELSE_9	IF_14
0x4003ec1	            0x85d2	                           test edx, edx	       617	mbyte.c	FUNCTION_4	ELSE_11	IF_15
0x4003ec3	            0x7523	                           jne 0x4003ee8	       617	mbyte.c	FUNCTION_4	ELSE_11	IF_15
0x4003ec5	      0xe963030000	                           jmp 0x400422d	       617	mbyte.c	FUNCTION_4	ELSE_11	IF_15
0x4003eca	    0xc70500000000	               mov dword [0x04003ed4], 0	       610	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_10
0x4003ed4	    0xc70500000000	               mov dword [0x04003ede], 0	       611	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_10
0x4003ede	      0xe93b030000	                           jmp 0x400421e	       611	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_10
0x4003ee3	      0xba01000000	                              mov edx, 1	       585	mbyte.c	FUNCTION_4	ELSE_5	IF_8
0x4003ee8	    0xc70500000000	               mov dword [0x04003ef2], 0	       624	mbyte.c	FUNCTION_4	ELSE_11	IF_15
0x4003ef2	    0xc70500000000	               mov dword [0x04003efc], 0	       625	mbyte.c	FUNCTION_4	ELSE_11	IF_15
0x4003efc	    0x891500000000	            mov dword [0x04003f02], edx 	       627	mbyte.c	FUNCTION_4
0x4003f02	      0xb801000000	                              mov eax, 1	       628	mbyte.c	FUNCTION_4
0x4003f07	            0xeb12	                           jmp 0x4003f1b	       628	mbyte.c	FUNCTION_4
0x4003f09	    0x833d00000000	               cmp dword [0x04003f10], 0	       628	mbyte.c	FUNCTION_4
0x4003f10	           0xf95c0	                                setne al	       628	mbyte.c	FUNCTION_4
0x4003f13	           0xfb6c0	                           movzx eax, al	       628	mbyte.c	FUNCTION_4
0x4003f16	      0xba00000000	                              mov edx, 0	       628	mbyte.c	FUNCTION_4
0x4003f1b	    0x890500000000	            mov dword [0x04003f21], eax 	       628	mbyte.c	FUNCTION_4
0x4003f21	    0x833d00000000	               cmp dword [0x04003f28], 0	       637	mbyte.c	FUNCTION_4	CALL_16
0x4003f28	     0xf850e030000	                           jne 0x400423c	       637	mbyte.c	FUNCTION_4	CALL_16
0x4003f2e	      0xbf00000000	                              mov edi, 0	       636	mbyte.c	FUNCTION_4	CALL_15
0x4003f33	      0xb907000000	                              mov ecx, 7	       636	mbyte.c	FUNCTION_4	CALL_15
0x4003f38	          0x4889de	                            mov rsi, rbx	       636	mbyte.c	FUNCTION_4	CALL_15
0x4003f3b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       636	mbyte.c	FUNCTION_4	CALL_15
0x4003f3d	        0x400f97c6	                                seta sil	       636	mbyte.c	FUNCTION_4	CALL_15
0x4003f41	           0xf92c1	                                 setb cl	       636	mbyte.c	FUNCTION_4	CALL_15
0x4003f44	      0xb801000000	                              mov eax, 1	       637	mbyte.c	FUNCTION_4	CALL_16
0x4003f49	          0x4038ce	                             cmp sil, cl	       636	mbyte.c	FUNCTION_4	CALL_15
0x4003f4c	     0xf8467030000	                            je 0x40042b9	       636	mbyte.c	FUNCTION_4	CALL_15
0x4003f52	      0xbf00000000	                              mov edi, 0	       637	mbyte.c	FUNCTION_4	CALL_16
0x4003f57	      0xb90c000000	                            mov ecx, 0xc	       637	mbyte.c	FUNCTION_4	CALL_16
0x4003f5c	          0x4889de	                            mov rsi, rbx	       637	mbyte.c	FUNCTION_4	CALL_16
0x4003f5f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       637	mbyte.c	FUNCTION_4	CALL_16
0x4003f61	           0xf97c1	                                 seta cl	       637	mbyte.c	FUNCTION_4	CALL_16
0x4003f64	           0xf92c0	                                 setb al	       637	mbyte.c	FUNCTION_4	CALL_16
0x4003f67	            0x38c1	                              cmp cl, al	       637	mbyte.c	FUNCTION_4	CALL_16
0x4003f69	           0xf94c0	                                 sete al	       637	mbyte.c	FUNCTION_4	CALL_16
0x4003f6c	           0xfb6c0	                           movzx eax, al	       637	mbyte.c	FUNCTION_4	CALL_16
0x4003f6f	      0xe945030000	                           jmp 0x40042b9	       637	mbyte.c	FUNCTION_4	CALL_16
0x4003f74	    0x48c705000000	               mov qword [0x04003f7f], 0	       657	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x4003f7f	    0x48c705000000	               mov qword [0x04003f8a], 0	       658	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x4003f8a	    0x48c705000000	               mov qword [0x04003f95], 0	       659	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x4003f95	    0x48c705000000	               mov qword [0x04003fa0], 0	       660	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x4003fa0	    0x48c705000000	               mov qword [0x04003fab], 0	       661	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x4003fab	    0x48c705000000	               mov qword [0x04003fb6], 0	       662	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x4003fb6	    0x48c705000000	               mov qword [0x04003fc1], 0	       663	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x4003fc1	    0x48c705000000	               mov qword [0x04003fcc], 0	       664	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x4003fcc	    0x48c705000000	               mov qword [0x04003fd7], 0	       665	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x4003fd7	    0x48c705000000	               mov qword [0x04003fe2], 0	       666	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x4003fe2	            0xeb6e	                           jmp 0x4004052	       666	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x4003fe4	    0x48c705000000	               mov qword [0x04003fef], 0	       670	mbyte.c	FUNCTION_4	ELSE_13
0x4003fef	    0x48c705000000	               mov qword [0x04003ffa], 0	       671	mbyte.c	FUNCTION_4	ELSE_13
0x4003ffa	    0x48c705000000	               mov qword [0x04004005], 0	       672	mbyte.c	FUNCTION_4	ELSE_13
0x4004005	    0x48c705000000	               mov qword [0x04004010], 0	       673	mbyte.c	FUNCTION_4	ELSE_13
0x4004010	    0x48c705000000	               mov qword [0x0400401b], 0	       674	mbyte.c	FUNCTION_4	ELSE_13
0x400401b	    0x48c705000000	               mov qword [0x04004026], 0	       675	mbyte.c	FUNCTION_4	ELSE_13
0x4004026	    0x48c705000000	               mov qword [0x04004031], 0	       676	mbyte.c	FUNCTION_4	ELSE_13
0x4004031	    0x48c705000000	               mov qword [0x0400403c], 0	       677	mbyte.c	FUNCTION_4	ELSE_13
0x400403c	    0x48c705000000	               mov qword [0x04004047], 0	       678	mbyte.c	FUNCTION_4	ELSE_13
0x4004047	    0x48c705000000	               mov qword [0x04004052], 0	       679	mbyte.c	FUNCTION_4	ELSE_13
0x4004052	    0xc70424000000	                      mov dword [rsp], 0	       688	mbyte.c	FUNCTION_4
0x4004059	    0x833d00000000	               cmp dword [0x04004060], 0	       689	mbyte.c	FUNCTION_4	IF_19
0x4004060	            0x7444	                            je 0x40040a6	       689	mbyte.c	FUNCTION_4	IF_19
0x4004062	      0xe800000000	                          call 0x4004067	       691	mbyte.c	FUNCTION_4	IF_19	CALL_17
0x4004067	          0x4889c3	                            mov rbx, rax	       691	mbyte.c	FUNCTION_4	IF_19	CALL_17
0x400406a	          0x4885c0	                           test rax, rax	       692	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_18
0x400406d	            0x7413	                            je 0x4004082	       692	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_18
0x400406f	    0x488b35000000	            mov rsi, qword [0x04004076] 	       692	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_18
0x4004076	          0x4889c7	                            mov rdi, rax	       692	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_18
0x4004079	      0xe800000000	                          call 0x400407e	       692	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_18
0x400407e	            0x85c0	                           test eax, eax	       692	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_18
0x4004080	            0x741c	                            je 0x400409e	       692	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_18
0x4004082	      0xba00000000	                              mov edx, 0	       694	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_19
0x4004087	    0x488b35000000	            mov rsi, qword [0x0400408e] 	       694	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_19
0x400408e	          0x4889e7	                            mov rdi, rsp	       694	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_19
0x4004091	      0xe800000000	                          call 0x4004096	       694	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_19
0x4004096	    0xc74424100100	               mov dword [rsp + 0x10], 1	       695	mbyte.c	FUNCTION_4	IF_19	IF_20
0x400409e	          0x4889df	                            mov rdi, rbx	       697	mbyte.c	FUNCTION_4	IF_19	CALL_20
0x40040a1	      0xe800000000	                          call 0x40040a6	       697	mbyte.c	FUNCTION_4	IF_19	CALL_20
0x40040a6	      0xbb00000000	                              mov ebx, 0	       628	mbyte.c	FUNCTION_4
0x40040ab	    0x833d00000000	               cmp dword [0x040040b2], 0	       705	mbyte.c	FUNCTION_4	FOR_2	IF_21
0x40040b2	            0x740c	                            je 0x40040c0	       705	mbyte.c	FUNCTION_4	FOR_2	IF_21
0x40040b4	     0xfbe93000000	                   movsx edx, byte [rbx]	       706	mbyte.c	FUNCTION_4	FOR_2	IF_21
0x40040bb	      0xe982000000	                           jmp 0x4004142	       706	mbyte.c	FUNCTION_4	FOR_2	IF_21
0x40040c0	      0xba01000000	                              mov edx, 1	       708	mbyte.c	FUNCTION_4	FOR_2	ELSE_14	IF_22
0x40040c5	    0x833d00000000	               cmp dword [0x040040cc], 0	       707	mbyte.c	FUNCTION_4	FOR_2	ELSE_14	IF_22
0x40040cc	            0x7474	                            je 0x4004142	       707	mbyte.c	FUNCTION_4	FOR_2	ELSE_14	IF_22
0x40040ce	            0x85db	                           test ebx, ebx	       728	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	IF_23
0x40040d0	            0x746b	                            je 0x400413d	       728	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	IF_23
0x40040d2	        0x885c2420	               mov byte [rsp + 0x20], bl	       732	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16
0x40040d6	      0xc644242100	                mov byte [rsp + 0x21], 0	       733	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16
0x40040db	        0x833c2400	                      cmp dword [rsp], 0	       735	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24
0x40040df	            0x742b	                            je 0x400410c	       735	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24
0x40040e1	      0xba00000000	                              mov edx, 0	       741	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	CALL_22
0x40040e6	      0x488d742420	                   lea rsi, [rsp + 0x20]	       741	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	CALL_22
0x40040eb	          0x4889e7	                            mov rdi, rsp	       741	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	CALL_22
0x40040ee	      0xe800000000	                          call 0x40040f3	       741	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	CALL_22
0x40040f3	      0xba02000000	                              mov edx, 2	       748	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	ELSE_17
0x40040f8	          0x4885c0	                           test rax, rax	       742	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	IF_25
0x40040fb	            0x7445	                            je 0x4004142	       742	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	IF_25
0x40040fd	          0x4889c7	                            mov rdi, rax	       744	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	IF_25	CALL_23
0x4004100	      0xe800000000	                          call 0x4004105	       744	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	IF_25	CALL_23
0x4004105	      0xba01000000	                              mov edx, 1	       745	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	IF_25
0x400410a	            0xeb36	                           jmp 0x4004142	       745	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	IF_25
0x400410c	      0xbe00000000	                              mov esi, 0	       759	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18
0x4004111	      0xbf00000000	                              mov edi, 0	       759	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18
0x4004116	      0xe800000000	                          call 0x400411b	       759	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18
0x400411b	    0x890500000000	            mov dword [0x04004121], eax 	       759	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18
0x4004121	      0xbe01000000	                              mov esi, 1	       760	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	IF_26
0x4004126	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       760	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	IF_26
0x400412b	      0xe800000000	                          call 0x4004130	       760	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	IF_26
0x4004130	            0x85c0	                           test eax, eax	       763	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	ELSE_19
0x4004132	           0xf9ec2	                                setle dl	       763	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	ELSE_19
0x4004135	           0xfb6d2	                           movzx edx, dl	       763	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	ELSE_19
0x4004138	          0x83c201	                              add edx, 1	       763	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	ELSE_19
0x400413b	            0xeb05	                           jmp 0x4004142	       763	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	ELSE_19
0x400413d	      0xba01000000	                              mov edx, 1	       729	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	IF_23
0x4004142	    0x889300000000	                      mov byte [rbx], dl	       770	mbyte.c	FUNCTION_4	FOR_2
0x4004148	        0x4883c301	                              add rbx, 1	       770	mbyte.c	FUNCTION_4	FOR_2
0x400414c	    0x4881fb000100	                          cmp rbx, 0x100	       701	mbyte.c	FUNCTION_4	FOR_2
0x4004153	     0xf8552ffffff	                           jne 0x40040ab	       701	mbyte.c	FUNCTION_4	FOR_2
0x4004159	      0xba00000000	                              mov edx, 0	       774	mbyte.c	FUNCTION_4	CALL_24
0x400415e	      0xbe00000000	                              mov esi, 0	       774	mbyte.c	FUNCTION_4	CALL_24
0x4004163	          0x4889e7	                            mov rdi, rsp	       774	mbyte.c	FUNCTION_4	CALL_24
0x4004166	      0xe800000000	                          call 0x400416b	       774	mbyte.c	FUNCTION_4	CALL_24
0x400416b	      0xe800000000	                          call 0x4004170	       778	mbyte.c	FUNCTION_4	CALL_25
0x4004170	      0xbf00000000	                              mov edi, 0	       781	mbyte.c	FUNCTION_4	CALL_26
0x4004175	      0xe800000000	                          call 0x400417a	       781	mbyte.c	FUNCTION_4	CALL_26
0x400417a	    0x833d00000000	               cmp dword [0x04004181], 0	       784	mbyte.c	FUNCTION_4	IF_27	CALL_27
0x4004181	            0x7436	                            je 0x40041b9	       784	mbyte.c	FUNCTION_4	IF_27	CALL_27
0x4004183	      0xbf00000000	                              mov edi, 0	       784	mbyte.c	FUNCTION_4	IF_27	CALL_27
0x4004188	      0xe800000000	                          call 0x400418d	       784	mbyte.c	FUNCTION_4	IF_27	CALL_27
0x400418d	            0x85c0	                           test eax, eax	       784	mbyte.c	FUNCTION_4	IF_27	CALL_27
0x400418f	            0x751f	                           jne 0x40041b0	       784	mbyte.c	FUNCTION_4	IF_27	CALL_27
0x4004191	    0x41b800000000	                              mov r8d, 0	       785	mbyte.c	FUNCTION_4	IF_27	CALL_28
0x4004197	      0xb901000000	                              mov ecx, 1	       785	mbyte.c	FUNCTION_4	IF_27	CALL_28
0x400419c	      0xba00000000	                              mov edx, 0	       785	mbyte.c	FUNCTION_4	IF_27	CALL_28
0x40041a1	      0xbeffffffff	                     mov esi, 0xffffffff	       785	mbyte.c	FUNCTION_4	IF_27	CALL_28
0x40041a6	      0xbf00000000	                              mov edi, 0	       785	mbyte.c	FUNCTION_4	IF_27	CALL_28
0x40041ab	      0xe800000000	                          call 0x40041b0	       785	mbyte.c	FUNCTION_4	IF_27	CALL_28
0x40041b0	    0x833d00000000	               cmp dword [0x040041b7], 0	       791	mbyte.c	FUNCTION_4	CALL_29
0x40041b7	            0x7509	                           jne 0x40041c2	       791	mbyte.c	FUNCTION_4	CALL_29
0x40041b9	    0x488b35000000	            mov rsi, qword [0x040041c0] 	       791	mbyte.c	FUNCTION_4	CALL_29
0x40041c0	            0xeb05	                           jmp 0x40041c7	       791	mbyte.c	FUNCTION_4	CALL_29
0x40041c2	      0xbe00000000	                              mov esi, 0	       791	mbyte.c	FUNCTION_4	CALL_29
0x40041c7	      0xbf00000000	                              mov edi, 0	       791	mbyte.c	FUNCTION_4	CALL_29
0x40041cc	      0xe800000000	                          call 0x40041d1	       791	mbyte.c	FUNCTION_4	CALL_29
0x40041d1	    0x4c8b05000000	              mov r8, qword [0x040041d8]	       804	mbyte.c	FUNCTION_4	CALL_31
0x40041d8	      0xb900000000	                              mov ecx, 0	       804	mbyte.c	FUNCTION_4	CALL_31
0x40041dd	      0xba00000000	                              mov edx, 0	       804	mbyte.c	FUNCTION_4	CALL_31
0x40041e2	      0xbe00000000	                              mov esi, 0	       804	mbyte.c	FUNCTION_4	CALL_31
0x40041e7	      0xbf21000000	                           mov edi, 0x21	       804	mbyte.c	FUNCTION_4	CALL_31
0x40041ec	      0xe800000000	                          call 0x40041f1	       804	mbyte.c	FUNCTION_4	CALL_31
0x40041f1	      0xe800000000	                          call 0x40041f6	       808	mbyte.c	FUNCTION_4	CALL_32
0x40041f6	      0xbb00000000	                              mov ebx, 0	       811	mbyte.c	FUNCTION_4
0x40041fb	            0xeb05	                           jmp 0x4004202	       811	mbyte.c	FUNCTION_4
0x40041fd	      0xbb00000000	                              mov ebx, 0	       615	mbyte.c	FUNCTION_4	ELSE_11
0x4004202	          0x4889d8	                            mov rax, rbx	       812	mbyte.c	FUNCTION_4
0x4004205	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       812	mbyte.c	FUNCTION_4
0x400420a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       812	mbyte.c	FUNCTION_4
0x4004213	     0xf84b8000000	                            je 0x40042d1	       812	mbyte.c	FUNCTION_4
0x4004219	      0xe9ae000000	                           jmp 0x40042cc	       812	mbyte.c	FUNCTION_4
0x400421e	    0xc70500000000	               mov dword [0x04004228], 0	       627	mbyte.c	FUNCTION_4
0x4004228	      0xe9dcfcffff	                           jmp 0x4003f09	       627	mbyte.c	FUNCTION_4
0x400422d	    0xc70500000000	               mov dword [0x04004237], 0	       627	mbyte.c	FUNCTION_4
0x4004237	      0xe9cdfcffff	                           jmp 0x4003f09	       627	mbyte.c	FUNCTION_4
0x400423c	    0xc70500000000	               mov dword [0x04004246], 1	       636	mbyte.c	FUNCTION_4	CALL_15
0x4004246	    0x48c705000000	               mov qword [0x04004251], 0	       644	mbyte.c	FUNCTION_4	IF_17
0x4004251	    0x48c705000000	               mov qword [0x0400425c], 0	       645	mbyte.c	FUNCTION_4	IF_17
0x400425c	    0x48c705000000	               mov qword [0x04004267], 0	       646	mbyte.c	FUNCTION_4	IF_17
0x4004267	    0x48c705000000	               mov qword [0x04004272], 0	       647	mbyte.c	FUNCTION_4	IF_17
0x4004272	    0x48c705000000	               mov qword [0x0400427d], 0	       648	mbyte.c	FUNCTION_4	IF_17
0x400427d	    0x48c705000000	               mov qword [0x04004288], 0	       649	mbyte.c	FUNCTION_4	IF_17
0x4004288	    0x48c705000000	               mov qword [0x04004293], 0	       650	mbyte.c	FUNCTION_4	IF_17
0x4004293	    0x48c705000000	               mov qword [0x0400429e], 0	       651	mbyte.c	FUNCTION_4	IF_17
0x400429e	    0x48c705000000	               mov qword [0x040042a9], 0	       652	mbyte.c	FUNCTION_4	IF_17
0x40042a9	    0x48c705000000	               mov qword [0x040042b4], 0	       653	mbyte.c	FUNCTION_4	IF_17
0x40042b4	      0xe999fdffff	                           jmp 0x4004052	       653	mbyte.c	FUNCTION_4	IF_17
0x40042b9	    0x890500000000	            mov dword [0x040042bf], eax 	       636	mbyte.c	FUNCTION_4	CALL_15
0x40042bf	            0x85d2	                           test edx, edx	       655	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x40042c1	     0xf85adfcffff	                           jne 0x4003f74	       655	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x40042c7	      0xe918fdffff	                           jmp 0x4003fe4	       655	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x40042cc	      0xe800000000	                          call 0x40042d1	       812	mbyte.c	FUNCTION_4
0x40042d1	        0x4883c440	                           add rsp, 0x40	       812	mbyte.c	FUNCTION_4
0x40042d5	              0x5b	                                 pop rbx	       812	mbyte.c	FUNCTION_4
0x40042d6	              0xc3	                                     ret	       812	mbyte.c	FUNCTION_4
im_get_status	SWITCH,0:CALL,1:IF,1:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	30
0x400309d	    0x8b0500000000	            mov eax, dword [0x040030a3] 	      5876	mbyte.c	FUNCTION_123	IF_1
0x40030a3	            0x85c0	                           test eax, eax	      5876	mbyte.c	FUNCTION_123	IF_1
0x40030a5	            0x7557	                           jne 0x40030fe	      5876	mbyte.c	FUNCTION_123	IF_1
0x40030a7	    0x488b15000000	            mov rdx, qword [0x040030ae] 	      5876	mbyte.c	FUNCTION_123	IF_1
0x40030ae	          0x803a00	                       cmp byte [rdx], 0	      5876	mbyte.c	FUNCTION_123	IF_1
0x40030b1	            0x744b	                            je 0x40030fe	      5876	mbyte.c	FUNCTION_123	IF_1
0x40030b3	              0x53	                                push rbx	      5874	mbyte.c	FUNCTION_123
0x40030b4	    0x8b1d00000000	            mov ebx, dword [0x040030ba] 	      4813	mbyte.c	FUNCTION_96	IF_1	CALL_1
0x40030ba	            0x85db	                           test ebx, ebx	      4813	mbyte.c	FUNCTION_96	IF_1	CALL_1
0x40030bc	            0x7547	                           jne 0x4003105	      4813	mbyte.c	FUNCTION_96	IF_1	CALL_1
0x40030be	      0xe800000000	                          call 0x40030c3	      4813	mbyte.c	FUNCTION_96	IF_1	CALL_1
0x40030c3	            0x89c2	                            mov edx, eax	      4813	mbyte.c	FUNCTION_96	IF_1	CALL_1
0x40030c5	            0x89d8	                            mov eax, ebx	      4814	mbyte.c	FUNCTION_96	IF_1
0x40030c7	            0x85d2	                           test edx, edx	      4813	mbyte.c	FUNCTION_96	IF_1	CALL_1
0x40030c9	            0x753a	                           jne 0x4003105	      4813	mbyte.c	FUNCTION_96	IF_1	CALL_1
0x40030cb	    0x830500000000	               add dword [0x040030d2], 1	      4817	mbyte.c	FUNCTION_96
0x40030d2	      0xb900000000	                              mov ecx, 0	      4818	mbyte.c	FUNCTION_96	CALL_2
0x40030d7	      0xba00000000	                              mov edx, 0	      4818	mbyte.c	FUNCTION_96	CALL_2
0x40030dc	      0xbe00000000	                              mov esi, 0	      4818	mbyte.c	FUNCTION_96	CALL_2
0x40030e1	    0x488b3d000000	            mov rdi, qword [0x040030e8] 	      4818	mbyte.c	FUNCTION_96	CALL_2
0x40030e8	      0xe800000000	                          call 0x40030ed	      4818	mbyte.c	FUNCTION_96	CALL_2
0x40030ed	    0x832d00000000	               sub dword [0x040030f4], 1	      4819	mbyte.c	FUNCTION_96
0x40030f4	            0x85c0	                           test eax, eax	      4820	mbyte.c	FUNCTION_96
0x40030f6	           0xf9fc0	                                 setg al	      4820	mbyte.c	FUNCTION_96
0x40030f9	           0xfb6c0	                           movzx eax, al	      4820	mbyte.c	FUNCTION_96
0x40030fc	            0xeb07	                           jmp 0x4003105	      4820	mbyte.c	FUNCTION_96
0x40030fe	    0x8b0500000000	            mov eax, dword [0x04003104] 	      5879	mbyte.c	FUNCTION_123
0x4003104	              0xc3	                                     ret	      5879	mbyte.c	FUNCTION_123
0x4003105	              0x5b	                                 pop rbx	      5880	mbyte.c	FUNCTION_123
0x4003106	              0xc3	                                     ret	      5880	mbyte.c	FUNCTION_123
utf_ambiguous_width	SWITCH,0:CALL,2:IF,0:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	22
0x40018a0	      0xb800000000	                              mov eax, 0	      2902	mbyte.c	FUNCTION_57	CALL_1
0x40018a5	          0x83ff7f	                           cmp edi, 0x7f	      2902	mbyte.c	FUNCTION_57	CALL_1
0x40018a8	            0x7e39	                           jle 0x40018e3	      2902	mbyte.c	FUNCTION_57	CALL_1
0x40018aa	              0x53	                                push rbx	      2901	mbyte.c	FUNCTION_57
0x40018ab	            0x89fb	                            mov ebx, edi	      2901	mbyte.c	FUNCTION_57
0x40018ad	            0x89fa	                            mov edx, edi	      2902	mbyte.c	FUNCTION_57	CALL_1
0x40018af	      0xbe300b0000	                          mov esi, 0xb30	      2902	mbyte.c	FUNCTION_57	CALL_1
0x40018b4	      0xbf00000000	                              mov edi, 0	      2902	mbyte.c	FUNCTION_57	CALL_1
0x40018b9	      0xe84be8ffff	                        call sym.intable	      2902	mbyte.c	FUNCTION_57	CALL_1
0x40018be	            0x89c2	                            mov edx, eax	      2902	mbyte.c	FUNCTION_57	CALL_1
0x40018c0	      0xb801000000	                              mov eax, 1	      2902	mbyte.c	FUNCTION_57	CALL_1
0x40018c5	            0x85d2	                           test edx, edx	      2902	mbyte.c	FUNCTION_57	CALL_1
0x40018c7	            0x7519	                           jne 0x40018e2	      2902	mbyte.c	FUNCTION_57	CALL_1
0x40018c9	            0x89da	                            mov edx, ebx	      2903	mbyte.c	FUNCTION_57	CALL_2
0x40018cb	      0xbec0080000	                          mov esi, 0x8c0	      2903	mbyte.c	FUNCTION_57	CALL_2
0x40018d0	      0xbf00000000	                              mov edi, 0	      2903	mbyte.c	FUNCTION_57	CALL_2
0x40018d5	      0xe82fe8ffff	                        call sym.intable	      2903	mbyte.c	FUNCTION_57	CALL_2
0x40018da	            0x85c0	                           test eax, eax	      2902	mbyte.c	FUNCTION_57	CALL_1
0x40018dc	           0xf95c0	                                setne al	      2902	mbyte.c	FUNCTION_57	CALL_1
0x40018df	           0xfb6c0	                           movzx eax, al	      2902	mbyte.c	FUNCTION_57	CALL_1
0x40018e2	              0x5b	                                 pop rbx	      2904	mbyte.c	FUNCTION_57
0x40018e3	            0xf3c3	                                     ret	      2904	mbyte.c	FUNCTION_57
mb_adjustpos	SWITCH,0:CALL,4:IF,3:WHILE,0:FOR,0:DO,0:ELSE,1:functions,0	51
0x4002106	              0x55	                                push rbp	      4103	mbyte.c	FUNCTION_78
0x4002107	              0x53	                                push rbx	      4103	mbyte.c	FUNCTION_78
0x4002108	        0x4883ec08	                              sub rsp, 8	      4103	mbyte.c	FUNCTION_78
0x400210c	        0x837e0800	                  cmp dword [rsi + 8], 0	      4106	mbyte.c	FUNCTION_78	IF_1
0x4002110	            0x7f0a	                            jg 0x400211c	      4106	mbyte.c	FUNCTION_78	IF_1
0x4002112	        0x837e0c01	                cmp dword [rsi + 0xc], 1	      4108	mbyte.c	FUNCTION_78	IF_1
0x4002116	     0xf8e8d000000	                           jle 0x40021a9	      4108	mbyte.c	FUNCTION_78	IF_1
0x400211c	          0x4889f3	                            mov rbx, rsi	      4108	mbyte.c	FUNCTION_78	IF_1
0x400211f	      0xba00000000	                              mov edx, 0	      4112	mbyte.c	FUNCTION_78	IF_1	CALL_1
0x4002124	          0x488b36	                    mov rsi, qword [rsi]	      4112	mbyte.c	FUNCTION_78	IF_1	CALL_1
0x4002127	      0xe800000000	                          call 0x400212c	      4112	mbyte.c	FUNCTION_78	IF_1	CALL_1
0x400212c	          0x4889c5	                            mov rbp, rax	      4112	mbyte.c	FUNCTION_78	IF_1	CALL_1
0x400212f	          0x803800	                       cmp byte [rax], 0	      4113	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x4002132	            0x741f	                            je 0x4002153	      4113	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x4002134	      0xb800000000	                              mov eax, 0	      4113	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x4002139	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4113	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x4002140	          0x4889ef	                            mov rdi, rbp	      4113	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x4002143	            0xf2ae	              repne scasb al, byte [rdi]	      4113	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x4002145	          0x48f7d1	                                 not rcx	      4113	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x4002148	        0x4883e901	                              sub rcx, 1	      4113	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x400214c	          0x8b7308	                mov esi, dword [rbx + 8]	      4113	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x400214f	            0x39ce	                            cmp esi, ecx	      4113	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x4002151	            0x7e09	                           jle 0x400215c	      4113	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x4002153	    0xc74308000000	                  mov dword [rbx + 8], 0	      4114	mbyte.c	FUNCTION_78	IF_1	IF_2
0x400215a	            0xeb12	                           jmp 0x400216e	      4114	mbyte.c	FUNCTION_78	IF_1	IF_2
0x400215c	          0x4863f6	                         movsxd rsi, esi	      4116	mbyte.c	FUNCTION_78	IF_1	ELSE_1
0x400215f	          0x4801ee	                            add rsi, rbp	      4116	mbyte.c	FUNCTION_78	IF_1	ELSE_1
0x4002162	          0x4889ef	                            mov rdi, rbp	      4116	mbyte.c	FUNCTION_78	IF_1	ELSE_1
0x4002165	    0xff1500000000	                 call qword [0x0400216b]	      4116	mbyte.c	FUNCTION_78	IF_1	ELSE_1
0x400216b	          0x294308	                sub dword [rbx + 8], eax	      4116	mbyte.c	FUNCTION_78	IF_1	ELSE_1
0x400216e	        0x837b0c01	                cmp dword [rbx + 0xc], 1	      4120	mbyte.c	FUNCTION_78	IF_1	IF_3
0x4002172	            0x7535	                           jne 0x40021a9	      4120	mbyte.c	FUNCTION_78	IF_1	IF_3
0x4002174	        0x48637b08	            movsxd rdi, dword [rbx + 8] 	      4121	mbyte.c	FUNCTION_78	IF_1	IF_3
0x4002178	          0x4801ef	                            add rdi, rbp	      4121	mbyte.c	FUNCTION_78	IF_1	IF_3
0x400217b	          0x803f09	                       cmp byte [rdi], 9	      4121	mbyte.c	FUNCTION_78	IF_1	IF_3
0x400217e	            0x7429	                            je 0x40021a9	      4121	mbyte.c	FUNCTION_78	IF_1	IF_3
0x4002180	    0xff1500000000	                 call qword [0x04002186]	      4122	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_3
0x4002186	            0x89c7	                            mov edi, eax	      4122	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_3
0x4002188	      0xe800000000	                          call 0x400218d	      4122	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_3
0x400218d	            0x85c0	                           test eax, eax	      4122	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_3
0x400218f	            0x7418	                            je 0x40021a9	      4122	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_3
0x4002191	        0x48637b08	            movsxd rdi, dword [rbx + 8] 	      4123	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_4
0x4002195	          0x4801ef	                            add rdi, rbp	      4123	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_4
0x4002198	      0xe800000000	                          call 0x400219d	      4123	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_4
0x400219d	          0x83f801	                              cmp eax, 1	      4123	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_4
0x40021a0	            0x7e07	                           jle 0x40021a9	      4123	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_4
0x40021a2	    0xc7430c000000	                mov dword [rbx + 0xc], 0	      4124	mbyte.c	FUNCTION_78	IF_1	IF_3
0x40021a9	        0x4883c408	                              add rsp, 8	      4127	mbyte.c	FUNCTION_78
0x40021ad	              0x5b	                                 pop rbx	      4127	mbyte.c	FUNCTION_78
0x40021ae	              0x5d	                                 pop rbp	      4127	mbyte.c	FUNCTION_78
0x40021af	              0xc3	                                     ret	      4127	mbyte.c	FUNCTION_78
init_preedit_start_col	SWITCH,0:CALL,2:IF,2:WHILE,0:FOR,0:DO,0:ELSE,1:functions,0	21
0x40009b4	        0x4883ec08	                              sub rsp, 8	      4834	mbyte.c	FUNCTION_97
0x40009b8	    0xf60500000000	               test byte [0x040009bf], 8	      4835	mbyte.c	FUNCTION_97	IF_1
0x40009bf	            0x740d	                            je 0x40009ce	      4835	mbyte.c	FUNCTION_97	IF_1
0x40009c1	      0xe800000000	                          call 0x40009c6	      4836	mbyte.c	FUNCTION_97	CALL_1
0x40009c6	    0x890500000000	            mov dword [0x040009cc], eax 	      4836	mbyte.c	FUNCTION_97	CALL_1
0x40009cc	            0xeb2c	                           jmp 0x40009fa	      4836	mbyte.c	FUNCTION_97	CALL_1
0x40009ce	    0x488b3d000000	            mov rdi, qword [0x040009d5] 	      4837	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x40009d5	          0x4885ff	                           test rdi, rdi	      4837	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x40009d8	            0x7420	                            je 0x40009fa	      4837	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x40009da	      0x48837f0800	                  cmp qword [rdi + 8], 0	      4837	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x40009df	            0x7419	                            je 0x40009fa	      4837	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x40009e1	        0x488d7738	                   lea rsi, [rdi + 0x38]	      4838	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x40009e5	    0x41b800000000	                              mov r8d, 0	      4838	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x40009eb	      0xb900000000	                              mov ecx, 0	      4838	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x40009f0	      0xba00000000	                              mov edx, 0	      4838	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x40009f5	      0xe800000000	                          call 0x40009fa	      4838	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x40009fa	    0x488b05000000	            mov rax, qword [0x04000a01] 	      4840	mbyte.c	FUNCTION_97
0x4000a01	    0x8b80c8000000	            mov eax, dword [rax + 0xc8] 	      4840	mbyte.c	FUNCTION_97
0x4000a07	    0x890500000000	            mov dword [0x04000a0d], eax 	      4840	mbyte.c	FUNCTION_97
0x4000a0d	        0x4883c408	                              add rsp, 8	      4841	mbyte.c	FUNCTION_97
0x4000a11	              0xc3	                                     ret	      4841	mbyte.c	FUNCTION_97
latin_ptr2len	SWITCH,0:CALL,1:IF,0:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	3
0x4000090	           0xfb607	                   movzx eax, byte [rdi]	      1131	mbyte.c	FUNCTION_14	CALL_1
0x4000093	     0xfbe80000000	                   movsx eax, byte [rax]	      1131	mbyte.c	FUNCTION_14	CALL_1
0x400009a	              0xc3	                                     ret	      1132	mbyte.c	FUNCTION_14
arabic_maycombine	SWITCH,0:CALL,0:IF,1:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	15
0x4000e66	    0x8b0500000000	            mov eax, dword [0x04000e6c] 	      1940	mbyte.c	FUNCTION_40	IF_1
0x4000e6c	            0x85c0	                           test eax, eax	      1940	mbyte.c	FUNCTION_40	IF_1
0x4000e6e	            0x742b	                            je 0x4000e9b	      1940	mbyte.c	FUNCTION_40	IF_1
0x4000e70	      0xb800000000	                              mov eax, 0	      1945	mbyte.c	FUNCTION_40
0x4000e75	    0x833d00000000	               cmp dword [0x04000e7c], 0	      1940	mbyte.c	FUNCTION_40	IF_1
0x4000e7c	            0x751d	                           jne 0x4000e9b	      1940	mbyte.c	FUNCTION_40	IF_1
0x4000e7e	    0x8d87def9ffff	                  lea eax, [rdi - 0x622]	      1944	mbyte.c	FUNCTION_40	IF_1
0x4000e84	          0x83f801	                              cmp eax, 1	      1944	mbyte.c	FUNCTION_40	IF_1
0x4000e87	           0xf96c2	                                setbe dl	      1944	mbyte.c	FUNCTION_40	IF_1
0x4000e8a	          0x83e7fd	                     and edi, 0xfffffffd	      1944	mbyte.c	FUNCTION_40	IF_1
0x4000e8d	    0x81ff25060000	                          cmp edi, 0x625	      1944	mbyte.c	FUNCTION_40	IF_1
0x4000e93	           0xf94c0	                                 sete al	      1944	mbyte.c	FUNCTION_40	IF_1
0x4000e96	             0x9d0	                             or eax, edx	      1944	mbyte.c	FUNCTION_40	IF_1
0x4000e98	           0xfb6c0	                           movzx eax, al	      1944	mbyte.c	FUNCTION_40	IF_1
0x4000e9b	            0xf3c3	                                     ret	      1946	mbyte.c	FUNCTION_40
utf_ptr2char	SWITCH,0:CALL,0:IF,10:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	117
0x4000281	           0xfb617	                   movzx edx, byte [rdi]	      1793	mbyte.c	FUNCTION_35	IF_1
0x4000284	            0x84d2	                             test dl, dl	      1793	mbyte.c	FUNCTION_35	IF_1
0x4000286	            0x7804	                            js 0x400028c	      1793	mbyte.c	FUNCTION_35	IF_1
0x4000288	           0xfb6c2	                           movzx eax, dl	      1794	mbyte.c	FUNCTION_35	IF_1
0x400028b	              0xc3	                                     ret	      1794	mbyte.c	FUNCTION_35	IF_1
0x400028c	           0xfb6c2	                           movzx eax, dl	      1796	mbyte.c	FUNCTION_35
0x400028f	          0x4863c8	                         movsxd rcx, eax	      1796	mbyte.c	FUNCTION_35
0x4000292	     0xfbe89000000	                   movsx ecx, byte [rcx]	      1796	mbyte.c	FUNCTION_35
0x4000299	          0x83f901	                              cmp ecx, 1	      1797	mbyte.c	FUNCTION_35	IF_2
0x400029c	     0xf8e38010000	                           jle 0x40003da	      1797	mbyte.c	FUNCTION_35	IF_2
0x40002a2	         0xfb67701	               movzx esi, byte [rdi + 1]	      1797	mbyte.c	FUNCTION_35	IF_2
0x40002a6	          0x4189f0	                            mov r8d, esi	      1797	mbyte.c	FUNCTION_35	IF_2
0x40002a9	        0x4183e0c0	                     and r8d, 0xffffffc0	      1797	mbyte.c	FUNCTION_35	IF_2
0x40002ad	        0x4180f880	                           cmp r8b, 0x80	      1797	mbyte.c	FUNCTION_35	IF_2
0x40002b1	     0xf8523010000	                           jne 0x40003da	      1797	mbyte.c	FUNCTION_35	IF_2
0x40002b7	          0x83f902	                              cmp ecx, 2	      1799	mbyte.c	FUNCTION_35	IF_2	IF_3
0x40002ba	            0x750e	                           jne 0x40002ca	      1799	mbyte.c	FUNCTION_35	IF_2	IF_3
0x40002bc	          0x83e21f	                           and edx, 0x1f	      1800	mbyte.c	FUNCTION_35	IF_2	IF_3
0x40002bf	          0xc1e206	                              shl edx, 6	      1800	mbyte.c	FUNCTION_35	IF_2	IF_3
0x40002c2	            0x89f0	                            mov eax, esi	      1800	mbyte.c	FUNCTION_35	IF_2	IF_3
0x40002c4	          0x83e03f	                           and eax, 0x3f	      1800	mbyte.c	FUNCTION_35	IF_2	IF_3
0x40002c7	             0x1d0	                            add eax, edx	      1800	mbyte.c	FUNCTION_35	IF_2	IF_3
0x40002c9	              0xc3	                                     ret	      1800	mbyte.c	FUNCTION_35	IF_2	IF_3
0x40002ca	      0x440fb64702	               movzx r8d, byte [rdi + 2]	      1801	mbyte.c	FUNCTION_35	IF_2	IF_4
0x40002cf	          0x4589c1	                            mov r9d, r8d	      1801	mbyte.c	FUNCTION_35	IF_2	IF_4
0x40002d2	        0x4183e1c0	                     and r9d, 0xffffffc0	      1801	mbyte.c	FUNCTION_35	IF_2	IF_4
0x40002d6	        0x4180f980	                           cmp r9b, 0x80	      1801	mbyte.c	FUNCTION_35	IF_2	IF_4
0x40002da	     0xf85fa000000	                           jne 0x40003da	      1801	mbyte.c	FUNCTION_35	IF_2	IF_4
0x40002e0	          0x83f903	                              cmp ecx, 3	      1803	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x40002e3	            0x751a	                           jne 0x40002ff	      1803	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x40002e5	          0xc1e00c	                            shl eax, 0xc	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x40002e8	           0xfb7c8	                           movzx ecx, ax	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x40002eb	            0x89f0	                            mov eax, esi	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x40002ed	          0x83e03f	                           and eax, 0x3f	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x40002f0	          0xc1e006	                              shl eax, 6	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x40002f3	          0x8d1401	                    lea edx, [rcx + rax]	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x40002f6	          0x4489c0	                            mov eax, r8d	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x40002f9	          0x83e03f	                           and eax, 0x3f	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x40002fc	             0x1d0	                            add eax, edx	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x40002fe	              0xc3	                                     ret	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x40002ff	      0x440fb64f03	               movzx r9d, byte [rdi + 3]	      1806	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6
0x4000304	          0x4589ca	                           mov r10d, r9d	      1806	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6
0x4000307	        0x4183e2c0	                    and r10d, 0xffffffc0	      1806	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6
0x400030b	        0x4180fa80	                          cmp r10b, 0x80	      1806	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6
0x400030f	     0xf85c5000000	                           jne 0x40003da	      1806	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6
0x4000315	          0x83f904	                              cmp ecx, 4	      1808	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x4000318	            0x7526	                           jne 0x4000340	      1808	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x400031a	            0x89d1	                            mov ecx, edx	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x400031c	          0x83e107	                              and ecx, 7	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x400031f	          0xc1e112	                           shl ecx, 0x12	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x4000322	            0x89f2	                            mov edx, esi	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x4000324	          0x83e23f	                           and edx, 0x3f	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x4000327	          0xc1e20c	                            shl edx, 0xc	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x400032a	             0x1ca	                            add edx, ecx	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x400032c	          0x4489c0	                            mov eax, r8d	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x400032f	          0x83e03f	                           and eax, 0x3f	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x4000332	          0xc1e006	                              shl eax, 6	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x4000335	             0x1c2	                            add edx, eax	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x4000337	          0x4489c8	                            mov eax, r9d	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x400033a	          0x83e03f	                           and eax, 0x3f	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x400033d	             0x1d0	                            add eax, edx	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x400033f	              0xc3	                                     ret	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x4000340	      0x440fb65704	              movzx r10d, byte [rdi + 4]	      1811	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8
0x4000345	          0x4589d3	                          mov r11d, r10d	      1811	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8
0x4000348	        0x4183e3c0	                    and r11d, 0xffffffc0	      1811	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8
0x400034c	        0x4180fb80	                          cmp r11b, 0x80	      1811	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8
0x4000350	     0xf8584000000	                           jne 0x40003da	      1811	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8
0x4000356	          0x83f905	                              cmp ecx, 5	      1813	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4000359	            0x7531	                           jne 0x400038c	      1813	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x400035b	            0x89d1	                            mov ecx, edx	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x400035d	          0x83e103	                              and ecx, 3	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4000360	          0xc1e118	                           shl ecx, 0x18	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4000363	            0x89f2	                            mov edx, esi	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4000365	          0x83e23f	                           and edx, 0x3f	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4000368	          0xc1e212	                           shl edx, 0x12	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x400036b	             0x1ca	                            add edx, ecx	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x400036d	          0x4489c0	                            mov eax, r8d	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4000370	          0x83e03f	                           and eax, 0x3f	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4000373	          0xc1e00c	                            shl eax, 0xc	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4000376	             0x1c2	                            add edx, eax	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4000378	          0x4489c8	                            mov eax, r9d	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x400037b	          0x83e03f	                           and eax, 0x3f	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x400037e	          0xc1e006	                              shl eax, 6	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4000381	             0x1c2	                            add edx, eax	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4000383	          0x4489d0	                           mov eax, r10d	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4000386	          0x83e03f	                           and eax, 0x3f	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4000389	             0x1d0	                            add eax, edx	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x400038b	              0xc3	                                     ret	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x400038c	         0xfb67f05	               movzx edi, byte [rdi + 5]	      1817	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x4000390	          0x4189fb	                           mov r11d, edi	      1817	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x4000393	        0x4183e3c0	                    and r11d, 0xffffffc0	      1817	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x4000397	        0x4180fb80	                          cmp r11b, 0x80	      1817	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x400039b	            0x753d	                           jne 0x40003da	      1817	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x400039d	          0x83f906	                              cmp ecx, 6	      1817	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40003a0	            0x7538	                           jne 0x40003da	      1817	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40003a2	            0x89d1	                            mov ecx, edx	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40003a4	          0x83e101	                              and ecx, 1	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40003a7	          0xc1e11e	                           shl ecx, 0x1e	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40003aa	          0x83e63f	                           and esi, 0x3f	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40003ad	          0xc1e618	                           shl esi, 0x18	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40003b0	             0x1f1	                            add ecx, esi	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40003b2	          0x4489c0	                            mov eax, r8d	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40003b5	          0x83e03f	                           and eax, 0x3f	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40003b8	          0xc1e012	                           shl eax, 0x12	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40003bb	             0x1c1	                            add ecx, eax	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40003bd	          0x4489c8	                            mov eax, r9d	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40003c0	          0x83e03f	                           and eax, 0x3f	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40003c3	          0xc1e00c	                            shl eax, 0xc	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40003c6	             0x1c1	                            add ecx, eax	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40003c8	          0x4489d0	                           mov eax, r10d	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40003cb	          0x83e03f	                           and eax, 0x3f	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40003ce	          0xc1e006	                              shl eax, 6	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40003d1	             0x1c1	                            add ecx, eax	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40003d3	            0x89f8	                            mov eax, edi	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40003d5	          0x83e03f	                           and eax, 0x3f	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40003d8	             0x1c8	                            add eax, ecx	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40003da	            0xf3c3	                                     ret	      1827	mbyte.c	FUNCTION_35
dbcs_char2bytes	SWITCH,0:CALL,0:IF,2:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	16
0x400005f	    0x81ffff000000	                           cmp edi, 0xff	      1108	mbyte.c	FUNCTION_13	IF_1
0x4000065	            0x7e20	                           jle 0x4000087	      1108	mbyte.c	FUNCTION_13	IF_1
0x4000067	            0x89f8	                            mov eax, edi	      1110	mbyte.c	FUNCTION_13	IF_1
0x4000069	          0xc1e808	                              shr eax, 8	      1110	mbyte.c	FUNCTION_13	IF_1
0x400006c	            0x8806	                      mov byte [rsi], al	      1110	mbyte.c	FUNCTION_13	IF_1
0x400006e	          0x4084ff	                           test dil, dil	      1114	mbyte.c	FUNCTION_13	IF_1	IF_2
0x4000071	            0x740a	                            je 0x400007d	      1114	mbyte.c	FUNCTION_13	IF_1	IF_2
0x4000073	        0x40887e01	                 mov byte [rsi + 1], dil	      1111	mbyte.c	FUNCTION_13	IF_1
0x4000077	      0xb802000000	                              mov eax, 2	      1116	mbyte.c	FUNCTION_13	IF_1
0x400007c	              0xc3	                                     ret	      1116	mbyte.c	FUNCTION_13	IF_1
0x400007d	        0xc646010a	                 mov byte [rsi + 1], 0xa	      1115	mbyte.c	FUNCTION_13	IF_1	IF_2
0x4000081	      0xb802000000	                              mov eax, 2	      1116	mbyte.c	FUNCTION_13	IF_1
0x4000086	              0xc3	                                     ret	      1116	mbyte.c	FUNCTION_13	IF_1
0x4000087	          0x40883e	                     mov byte [rsi], dil	      1118	mbyte.c	FUNCTION_13
0x400008a	      0xb801000000	                              mov eax, 1	      1119	mbyte.c	FUNCTION_13
0x400008f	              0xc3	                                     ret	      1120	mbyte.c	FUNCTION_13
utf_off2cells	SWITCH,0:CALL,0:IF,0:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	11
0x400023a	          0x83c701	                              add edi, 1	      1760	mbyte.c	FUNCTION_32
0x400023d	      0xb801000000	                              mov eax, 1	      1760	mbyte.c	FUNCTION_32
0x4000242	            0x39f7	                            cmp edi, esi	      1760	mbyte.c	FUNCTION_32
0x4000244	            0x7314	                           jae 0x400025a	      1760	mbyte.c	FUNCTION_32
0x4000246	            0x89ff	                            mov edi, edi	      1760	mbyte.c	FUNCTION_32
0x4000248	    0x488b05000000	            mov rax, qword [0x0400024f] 	      1760	mbyte.c	FUNCTION_32
0x400024f	        0x803c3801	                 cmp byte [rax + rdi], 1	      1760	mbyte.c	FUNCTION_32
0x4000253	            0x19c0	                            sbb eax, eax	      1760	mbyte.c	FUNCTION_32
0x4000255	            0xf7d0	                                 not eax	      1760	mbyte.c	FUNCTION_32
0x4000257	          0x83c002	                              add eax, 2	      1760	mbyte.c	FUNCTION_32
0x400025a	            0xf3c3	                                     ret	      1761	mbyte.c	FUNCTION_32
mb_string2cells	SWITCH,0:CALL,0:IF,0:WHILE,0:FOR,1:DO,0:ELSE,0:functions,0	46
0x4000dba	            0x4157	                                push r15	      1723	mbyte.c	FUNCTION_29
0x4000dbc	            0x4156	                                push r14	      1723	mbyte.c	FUNCTION_29
0x4000dbe	            0x4155	                                push r13	      1723	mbyte.c	FUNCTION_29
0x4000dc0	            0x4154	                                push r12	      1723	mbyte.c	FUNCTION_29
0x4000dc2	              0x55	                                push rbp	      1723	mbyte.c	FUNCTION_29
0x4000dc3	              0x53	                                push rbx	      1723	mbyte.c	FUNCTION_29
0x4000dc4	        0x4883ec08	                              sub rsp, 8	      1723	mbyte.c	FUNCTION_29
0x4000dc8	            0x89f0	                            mov eax, esi	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4000dca	          0xc1e81f	                           shr eax, 0x1f	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4000dcd	            0x85f6	                           test esi, esi	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4000dcf	            0x744a	                            je 0x4000e1b	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4000dd1	          0x4189c7	                           mov r15d, eax	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4000dd4	          0x803f00	                       cmp byte [rdi], 0	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4000dd7	            0x744a	                            je 0x4000e23	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4000dd9	          0x4189f5	                           mov r13d, esi	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4000ddc	          0x4989fe	                            mov r14, rdi	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4000ddf	          0x4889fb	                            mov rbx, rdi	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4000de2	    0x41bc00000000	                             mov r12d, 0	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4000de8	      0xbd00000000	                              mov ebp, 0	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4000ded	          0x4889df	                            mov rdi, rbx	      1728	mbyte.c	FUNCTION_29	FOR_1
0x4000df0	    0xff1500000000	                 call qword [0x04000df6]	      1728	mbyte.c	FUNCTION_29	FOR_1
0x4000df6	          0x4101c4	                           add r12d, eax	      1728	mbyte.c	FUNCTION_29	FOR_1
0x4000df9	          0x4889df	                            mov rdi, rbx	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4000dfc	    0xff1500000000	                 call qword [0x04000e02]	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4000e02	             0x1c5	                            add ebp, eax	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4000e04	          0x4139ed	                           cmp r13d, ebp	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4000e07	            0x7f05	                            jg 0x4000e0e	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4000e09	          0x4584ff	                         test r15b, r15b	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4000e0c	            0x741b	                            je 0x4000e29	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4000e0e	          0x4863dd	                         movsxd rbx, ebp	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4000e11	          0x4c01f3	                            add rbx, r14	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4000e14	          0x803b00	                       cmp byte [rbx], 0	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4000e17	            0x75d4	                           jne 0x4000ded	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4000e19	            0xeb0e	                           jmp 0x4000e29	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4000e1b	    0x41bc00000000	                             mov r12d, 0	      1725	mbyte.c	FUNCTION_29
0x4000e21	            0xeb06	                           jmp 0x4000e29	      1725	mbyte.c	FUNCTION_29
0x4000e23	    0x41bc00000000	                             mov r12d, 0	      1725	mbyte.c	FUNCTION_29
0x4000e29	          0x4489e0	                           mov eax, r12d	      1730	mbyte.c	FUNCTION_29
0x4000e2c	        0x4883c408	                              add rsp, 8	      1730	mbyte.c	FUNCTION_29
0x4000e30	              0x5b	                                 pop rbx	      1730	mbyte.c	FUNCTION_29
0x4000e31	              0x5d	                                 pop rbp	      1730	mbyte.c	FUNCTION_29
0x4000e32	            0x415c	                                 pop r12	      1730	mbyte.c	FUNCTION_29
0x4000e34	            0x415d	                                 pop r13	      1730	mbyte.c	FUNCTION_29
0x4000e36	            0x415e	                                 pop r14	      1730	mbyte.c	FUNCTION_29
0x4000e38	            0x415f	                                 pop r15	      1730	mbyte.c	FUNCTION_29
0x4000e3a	              0xc3	                                     ret	      1730	mbyte.c	FUNCTION_29
utfc_ptr2char_len	SWITCH,0:CALL,7:IF,4:WHILE,0:FOR,1:DO,0:ELSE,0:functions,0	86
0x400131a	            0x4157	                                push r15	      2016	mbyte.c	FUNCTION_43
0x400131c	            0x4156	                                push r14	      2016	mbyte.c	FUNCTION_43
0x400131e	            0x4155	                                push r13	      2016	mbyte.c	FUNCTION_43
0x4001320	            0x4154	                                push r12	      2016	mbyte.c	FUNCTION_43
0x4001322	              0x55	                                push rbp	      2016	mbyte.c	FUNCTION_43
0x4001323	              0x53	                                push rbx	      2016	mbyte.c	FUNCTION_43
0x4001324	        0x4883ec10	                           sub rsp, 0x10	      2016	mbyte.c	FUNCTION_43
0x4001328	          0x4889fd	                            mov rbp, rdi	      2016	mbyte.c	FUNCTION_43
0x400132b	          0x4989f7	                            mov r15, rsi	      2016	mbyte.c	FUNCTION_43
0x400132e	          0x4189d5	                           mov r13d, edx	      2016	mbyte.c	FUNCTION_43
0x4001331	      0xe800000000	                          call 0x4001336	      2022	mbyte.c	FUNCTION_43	CALL_1
0x4001336	          0x4189c6	                           mov r14d, eax	      2022	mbyte.c	FUNCTION_43	CALL_1
0x4001339	          0x4489ee	                           mov esi, r13d	      2023	mbyte.c	FUNCTION_43	CALL_2
0x400133c	          0x4889ef	                            mov rdi, rbp	      2023	mbyte.c	FUNCTION_43	CALL_2
0x400133f	      0xe800000000	                          call 0x4001344	      2023	mbyte.c	FUNCTION_43	CALL_2
0x4001344	            0x89c3	                            mov ebx, eax	      2023	mbyte.c	FUNCTION_43	CALL_2
0x4001346	          0x83f801	                              cmp eax, 1	      2025	mbyte.c	FUNCTION_43	IF_1
0x4001349	            0x7f0a	                            jg 0x4001355	      2025	mbyte.c	FUNCTION_43	IF_1
0x400134b	        0x807d0000	                       cmp byte [rbp], 0	      2025	mbyte.c	FUNCTION_43	IF_1
0x400134f	     0xf88ac000000	                            js 0x4001401	      2025	mbyte.c	FUNCTION_43	IF_1
0x4001355	          0x4139dd	                           cmp r13d, ebx	      2026	mbyte.c	FUNCTION_43	IF_1
0x4001358	     0xf8eab000000	                           jle 0x4001409	      2026	mbyte.c	FUNCTION_43	IF_1
0x400135e	          0x4863c3	                         movsxd rax, ebx	      2027	mbyte.c	FUNCTION_43	IF_1
0x4001361	          0x4801e8	                            add rax, rbp	      2027	mbyte.c	FUNCTION_43	IF_1
0x4001364	          0x4889c7	                            mov rdi, rax	      2027	mbyte.c	FUNCTION_43	IF_1
0x4001367	    0x41bc00000000	                             mov r12d, 0	      2027	mbyte.c	FUNCTION_43	IF_1
0x400136d	          0x803800	                       cmp byte [rax], 0	      2027	mbyte.c	FUNCTION_43	IF_1
0x4001370	     0xf89a1000000	                           jns 0x4001417	      2027	mbyte.c	FUNCTION_43	IF_1
0x4001376	          0x4989c4	                            mov r12, rax	      2028	mbyte.c	FUNCTION_43	IF_1	CALL_3
0x4001379	          0x4889fe	                            mov rsi, rdi	      2028	mbyte.c	FUNCTION_43	IF_1	CALL_3
0x400137c	          0x4889ef	                            mov rdi, rbp	      2028	mbyte.c	FUNCTION_43	IF_1	CALL_3
0x400137f	      0xe800000000	                          call 0x4001384	      2028	mbyte.c	FUNCTION_43	IF_1	CALL_3
0x4001384	            0x85c0	                           test eax, eax	      2028	mbyte.c	FUNCTION_43	IF_1	CALL_3
0x4001386	     0xf8485000000	                            je 0x4001411	      2028	mbyte.c	FUNCTION_43	IF_1	CALL_3
0x400138c	          0x4c89e7	                            mov rdi, r12	      2030	mbyte.c	FUNCTION_43	IF_1	CALL_4
0x400138f	      0xe800000000	                          call 0x4001394	      2030	mbyte.c	FUNCTION_43	IF_1	CALL_4
0x4001394	          0x418907	                    mov dword [r15], eax	      2033	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x4001397	        0x498d4704	                      lea rax, [r15 + 4]	      2033	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x400139b	        0x48890424	                    mov qword [rsp], rax	      2033	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x400139f	    0x41bc01000000	                             mov r12d, 1	      2033	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x40013a5	            0xeb1c	                           jmp 0x40013c3	      2033	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x40013a7	        0x4183c401	                             add r12d, 1	      2033	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x40013ab	        0x488b0424	                    mov rax, qword [rsp]	      2033	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x40013af	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      2033	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x40013b3	            0x8908	                    mov dword [rax], ecx	      2033	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x40013b5	        0x4883c004	                              add rax, 4	      2033	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x40013b9	        0x48890424	                    mov qword [rsp], rax	      2033	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x40013bd	        0x4183fc06	                             cmp r12d, 6	      2034	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_2
0x40013c1	            0x745f	                            je 0x4001422	      2034	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_2
0x40013c3	          0x4489ee	                           mov esi, r13d	      2036	mbyte.c	FUNCTION_43	IF_1	FOR_1	CALL_5
0x40013c6	            0x29de	                            sub esi, ebx	      2036	mbyte.c	FUNCTION_43	IF_1	FOR_1	CALL_5
0x40013c8	          0x4863fb	                         movsxd rdi, ebx	      2036	mbyte.c	FUNCTION_43	IF_1	FOR_1	CALL_5
0x40013cb	          0x4801ef	                            add rdi, rbp	      2036	mbyte.c	FUNCTION_43	IF_1	FOR_1	CALL_5
0x40013ce	      0xe800000000	                          call 0x40013d3	      2036	mbyte.c	FUNCTION_43	IF_1	FOR_1	CALL_5
0x40013d3	             0x1c3	                            add ebx, eax	      2036	mbyte.c	FUNCTION_43	IF_1	FOR_1	CALL_5
0x40013d5	          0x4139dd	                           cmp r13d, ebx	      2037	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x40013d8	            0x7e1f	                           jle 0x40013f9	      2037	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x40013da	          0x4863fb	                         movsxd rdi, ebx	      2038	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x40013dd	          0x4801ef	                            add rdi, rbp	      2038	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x40013e0	          0x803f00	                       cmp byte [rdi], 0	      2038	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x40013e3	            0x7914	                           jns 0x40013f9	      2038	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x40013e5	      0xe800000000	                          call 0x40013ea	      2039	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3	CALL_7
0x40013ea	        0x8944240c	              mov dword [rsp + 0xc], eax	      2039	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3	CALL_7
0x40013ee	            0x89c7	                            mov edi, eax	      2039	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3	CALL_7
0x40013f0	      0xe800000000	                          call 0x40013f5	      2039	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3	CALL_7
0x40013f5	            0x85c0	                           test eax, eax	      2039	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3	CALL_7
0x40013f7	            0x75ae	                           jne 0x40013a7	      2039	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3	CALL_7
0x40013f9	        0x4183fc05	                             cmp r12d, 5	      2044	mbyte.c	FUNCTION_43	IF_4
0x40013fd	            0x7f23	                            jg 0x4001422	      2044	mbyte.c	FUNCTION_43	IF_4
0x40013ff	            0xeb16	                           jmp 0x4001417	      2044	mbyte.c	FUNCTION_43	IF_4
0x4001401	    0x41bc00000000	                             mov r12d, 0	      2044	mbyte.c	FUNCTION_43	IF_4
0x4001407	            0xeb0e	                           jmp 0x4001417	      2044	mbyte.c	FUNCTION_43	IF_4
0x4001409	    0x41bc00000000	                             mov r12d, 0	      2044	mbyte.c	FUNCTION_43	IF_4
0x400140f	            0xeb06	                           jmp 0x4001417	      2044	mbyte.c	FUNCTION_43	IF_4
0x4001411	    0x41bc00000000	                             mov r12d, 0	      2044	mbyte.c	FUNCTION_43	IF_4
0x4001417	          0x4d63e4	                        movsxd r12, r12d	      2045	mbyte.c	FUNCTION_43	IF_4
0x400141a	    0x43c704a70000	              mov dword [r15 + r12*4], 0	      2045	mbyte.c	FUNCTION_43	IF_4
0x4001422	          0x4489f0	                           mov eax, r14d	      2048	mbyte.c	FUNCTION_43
0x4001425	        0x4883c410	                           add rsp, 0x10	      2048	mbyte.c	FUNCTION_43
0x4001429	              0x5b	                                 pop rbx	      2048	mbyte.c	FUNCTION_43
0x400142a	              0x5d	                                 pop rbp	      2048	mbyte.c	FUNCTION_43
0x400142b	            0x415c	                                 pop r12	      2048	mbyte.c	FUNCTION_43
0x400142d	            0x415d	                                 pop r13	      2048	mbyte.c	FUNCTION_43
0x400142f	            0x415e	                                 pop r14	      2048	mbyte.c	FUNCTION_43
0x4001431	            0x415f	                                 pop r15	      2048	mbyte.c	FUNCTION_43
0x4001433	              0xc3	                                     ret	      2048	mbyte.c	FUNCTION_43
im_get_feedback_attr	SWITCH,0:CALL,9:IF,5:WHILE,0:FOR,1:DO,1:ELSE,0:functions,0	134
0x4002adf	            0x4156	                                push r14	      5487	mbyte.c	FUNCTION_115
0x4002ae1	            0x4155	                                push r13	      5487	mbyte.c	FUNCTION_115
0x4002ae3	            0x4154	                                push r12	      5487	mbyte.c	FUNCTION_115
0x4002ae5	              0x55	                                push rbp	      5487	mbyte.c	FUNCTION_115
0x4002ae6	              0x53	                                push rbx	      5487	mbyte.c	FUNCTION_115
0x4002ae7	        0x4883ec20	                           sub rsp, 0x20	      5487	mbyte.c	FUNCTION_115
0x4002aeb	            0x89fd	                            mov ebp, edi	      5487	mbyte.c	FUNCTION_115
0x4002aed	    0x64488b042528	                mov rax, qword fs:[0x28]	      5487	mbyte.c	FUNCTION_115
0x4002af6	      0x4889442418	             mov qword [rsp + 0x18], rax	      5487	mbyte.c	FUNCTION_115
0x4002afb	            0x31c0	                            xor eax, eax	      5487	mbyte.c	FUNCTION_115
0x4002afd	    0x48c744240800	                  mov qword [rsp + 8], 0	      5488	mbyte.c	FUNCTION_115
0x4002b06	    0x48c744241000	               mov qword [rsp + 0x10], 0	      5489	mbyte.c	FUNCTION_115
0x4002b0f	    0x488b3d000000	            mov rdi, qword [0x04002b16] 	      5492	mbyte.c	FUNCTION_115	IF_1
0x4002b16	          0x4885ff	                           test rdi, rdi	      5492	mbyte.c	FUNCTION_115	IF_1
0x4002b19	     0xf848f010000	                            je 0x4002cae	      5492	mbyte.c	FUNCTION_115	IF_1
0x4002b1f	      0xb900000000	                              mov ecx, 0	      5495	mbyte.c	FUNCTION_115	CALL_1
0x4002b24	      0x488d542410	                   lea rdx, [rsp + 0x10]	      5495	mbyte.c	FUNCTION_115	CALL_1
0x4002b29	      0x488d742408	                      lea rsi, [rsp + 8]	      5495	mbyte.c	FUNCTION_115	CALL_1
0x4002b2e	      0xe800000000	                          call 0x4002b33	      5495	mbyte.c	FUNCTION_115	CALL_1
0x4002b33	      0x4c8b642408	                mov r12, qword [rsp + 8]	      5497	mbyte.c	FUNCTION_115	IF_2
0x4002b38	          0x4d85e4	                           test r12, r12	      5497	mbyte.c	FUNCTION_115	IF_2
0x4002b3b	     0xf8441010000	                            je 0x4002c82	      5497	mbyte.c	FUNCTION_115	IF_2
0x4002b41	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	      5497	mbyte.c	FUNCTION_115	IF_2
0x4002b46	    0x41beffffffff	                    mov r14d, 0xffffffff	      5490	mbyte.c	FUNCTION_115
0x4002b4c	          0x4d85ed	                           test r13, r13	      5497	mbyte.c	FUNCTION_115	IF_2
0x4002b4f	     0xf844d010000	                            je 0x4002ca2	      5497	mbyte.c	FUNCTION_115	IF_2
0x4002b55	            0x85ed	                           test ebp, ebp	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x4002b57	            0x7e2f	                           jle 0x4002b88	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x4002b59	      0x41803c2400	                       cmp byte [r12], 0	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x4002b5e	     0xf8465010000	                            je 0x4002cc9	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x4002b64	          0x4c89e7	                            mov rdi, r12	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x4002b67	      0xbb00000000	                              mov ebx, 0	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x4002b6c	      0xe800000000	                          call 0x4002b71	      5503	mbyte.c	FUNCTION_115	IF_2	CALL_2
0x4002b71	             0x1c3	                            add ebx, eax	      5503	mbyte.c	FUNCTION_115	IF_2	CALL_2
0x4002b73	          0x83ed01	                              sub ebp, 1	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x4002b76	            0x7415	                            je 0x4002b8d	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x4002b78	          0x4863fb	                         movsxd rdi, ebx	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x4002b7b	          0x4c01e7	                            add rdi, r12	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x4002b7e	          0x803f00	                       cmp byte [rdi], 0	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x4002b81	            0x75e9	                           jne 0x4002b6c	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x4002b83	      0xe941010000	                           jmp 0x4002cc9	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x4002b88	      0xbb00000000	                              mov ebx, 0	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x4002b8d	          0x4863c3	                         movsxd rax, ebx	      5505	mbyte.c	FUNCTION_115	IF_2	IF_3
0x4002b90	      0x41803c0400	                 cmp byte [r12 + rax], 0	      5505	mbyte.c	FUNCTION_115	IF_2	IF_3
0x4002b95	     0xf84f9000000	                            je 0x4002c94	      5505	mbyte.c	FUNCTION_115	IF_2	IF_3
0x4002b9b	          0x4c89ef	                            mov rdi, r13	      5511	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_3
0x4002b9e	      0xe800000000	                          call 0x4002ba3	      5511	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_3
0x4002ba3	          0x4889c5	                            mov rbp, rax	      5511	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_3
0x4002ba6	    0x41be00000000	                             mov r14d, 0	      5510	mbyte.c	FUNCTION_115	IF_2	IF_3
0x4002bac	      0x488d542404	                      lea rdx, [rsp + 4]	      5516	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	CALL_4
0x4002bb1	          0x4889e6	                            mov rsi, rsp	      5516	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	CALL_4
0x4002bb4	          0x4889ef	                            mov rdi, rbp	      5516	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	CALL_4
0x4002bb7	      0xe800000000	                          call 0x4002bbc	      5516	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	CALL_4
0x4002bbc	          0x391c24	                    cmp dword [rsp], ebx	      5518	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	IF_4
0x4002bbf	     0xf8fa3000000	                            jg 0x4002c68	      5518	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	IF_4
0x4002bc5	        0x395c2404	                cmp dword [rsp + 4], ebx	      5518	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	IF_4
0x4002bc9	     0xf8e99000000	                           jle 0x4002c68	      5518	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	IF_4
0x4002bcf	      0xbe0b000000	                            mov esi, 0xb	      5454	mbyte.c	FUNCTION_114	CALL_1
0x4002bd4	          0x4889ef	                            mov rdi, rbp	      5454	mbyte.c	FUNCTION_114	CALL_1
0x4002bd7	      0xe800000000	                          call 0x4002bdc	      5454	mbyte.c	FUNCTION_114	CALL_1
0x4002bdc	          0x4885c0	                           test rax, rax	      5455	mbyte.c	FUNCTION_114	IF_1
0x4002bdf	            0x7410	                            je 0x4002bf1	      5455	mbyte.c	FUNCTION_114	IF_1
0x4002be1	        0x83781001	               cmp dword [rax + 0x10], 1	      5457	mbyte.c	FUNCTION_114	IF_1
0x4002be5	          0x4519e4	                          sbb r12d, r12d	      5457	mbyte.c	FUNCTION_114	IF_1
0x4002be8	          0x41f7d4	                                not r12d	      5457	mbyte.c	FUNCTION_114	IF_1
0x4002beb	        0x4183e408	                             and r12d, 8	      5457	mbyte.c	FUNCTION_114	IF_1
0x4002bef	            0xeb06	                           jmp 0x4002bf7	      5457	mbyte.c	FUNCTION_114	IF_1
0x4002bf1	    0x41bc00000000	                             mov r12d, 0	      5452	mbyte.c	FUNCTION_114
0x4002bf7	      0xbe04000000	                              mov esi, 4	      5459	mbyte.c	FUNCTION_114	CALL_2
0x4002bfc	          0x4889ef	                            mov rdi, rbp	      5459	mbyte.c	FUNCTION_114	CALL_2
0x4002bff	      0xe800000000	                          call 0x4002c04	      5459	mbyte.c	FUNCTION_114	CALL_2
0x4002c04	          0x4885c0	                           test rax, rax	      5460	mbyte.c	FUNCTION_114	IF_2
0x4002c07	            0x7411	                            je 0x4002c1a	      5460	mbyte.c	FUNCTION_114	IF_2
0x4002c09	          0x4489e2	                           mov edx, r12d	      5461	mbyte.c	FUNCTION_114	IF_2
0x4002c0c	          0x83ca02	                               or edx, 2	      5461	mbyte.c	FUNCTION_114	IF_2
0x4002c0f	    0x817810bc0200	          cmp dword [rax + 0x10], 0x2bc 	      5461	mbyte.c	FUNCTION_114	IF_2
0x4002c16	        0x440f4de2	                        cmovge r12d, edx	      5461	mbyte.c	FUNCTION_114	IF_2
0x4002c1a	      0xbe03000000	                              mov esi, 3	      5463	mbyte.c	FUNCTION_114	CALL_3
0x4002c1f	          0x4889ef	                            mov rdi, rbp	      5463	mbyte.c	FUNCTION_114	CALL_3
0x4002c22	      0xe800000000	                          call 0x4002c27	      5463	mbyte.c	FUNCTION_114	CALL_3
0x4002c27	          0x4885c0	                           test rax, rax	      5464	mbyte.c	FUNCTION_114	IF_3
0x4002c2a	            0x740e	                            je 0x4002c3a	      5464	mbyte.c	FUNCTION_114	IF_3
0x4002c2c	          0x4489e2	                           mov edx, r12d	      5466	mbyte.c	FUNCTION_114	IF_3
0x4002c2f	          0x83ca04	                               or edx, 4	      5466	mbyte.c	FUNCTION_114	IF_3
0x4002c32	        0x83781000	               cmp dword [rax + 0x10], 0	      5466	mbyte.c	FUNCTION_114	IF_3
0x4002c36	        0x440f45e2	                        cmovne r12d, edx	      5466	mbyte.c	FUNCTION_114	IF_3
0x4002c3a	      0xbe0a000000	                            mov esi, 0xa	      5468	mbyte.c	FUNCTION_114	CALL_4
0x4002c3f	          0x4889ef	                            mov rdi, rbp	      5468	mbyte.c	FUNCTION_114	CALL_4
0x4002c42	      0xe800000000	                          call 0x4002c47	      5468	mbyte.c	FUNCTION_114	CALL_4
0x4002c47	          0x4885c0	                           test rax, rax	      5469	mbyte.c	FUNCTION_114	IF_4
0x4002c4a	            0x7419	                            je 0x4002c65	      5469	mbyte.c	FUNCTION_114	IF_4
0x4002c4c	         0xfb75010	           movzx edx, word [rax + 0x10] 	      5474	mbyte.c	FUNCTION_114	IF_4	IF_5
0x4002c50	        0x660b5012	                or dx, word [rax + 0x12]	      5474	mbyte.c	FUNCTION_114	IF_4	IF_5
0x4002c54	        0x660b5014	                or dx, word [rax + 0x14]	      5474	mbyte.c	FUNCTION_114	IF_4	IF_5
0x4002c58	          0x4489e0	                           mov eax, r12d	      5475	mbyte.c	FUNCTION_114	IF_4	IF_5
0x4002c5b	          0x83c801	                               or eax, 1	      5475	mbyte.c	FUNCTION_114	IF_4	IF_5
0x4002c5e	          0x6685d2	                             test dx, dx	      5475	mbyte.c	FUNCTION_114	IF_4	IF_5
0x4002c61	        0x440f44e0	                         cmove r12d, eax	      5475	mbyte.c	FUNCTION_114	IF_4	IF_5
0x4002c65	          0x4509e6	                           or r14d, r12d	      5519	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	CALL_5
0x4002c68	          0x4889ef	                            mov rdi, rbp	      5521	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_6
0x4002c6b	      0xe800000000	                          call 0x4002c70	      5521	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_6
0x4002c70	            0x85c0	                           test eax, eax	      5521	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_6
0x4002c72	     0xf8534ffffff	                           jne 0x4002bac	      5521	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_6
0x4002c78	          0x4889ef	                            mov rdi, rbp	      5523	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_7
0x4002c7b	      0xe800000000	                          call 0x4002c80	      5523	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_7
0x4002c80	            0xeb06	                           jmp 0x4002c88	      5523	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_7
0x4002c82	    0x41beffffffff	                    mov r14d, 0xffffffff	      5490	mbyte.c	FUNCTION_115
0x4002c88	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	      5527	mbyte.c	FUNCTION_115	IF_5
0x4002c8d	          0x4d85ed	                           test r13, r13	      5527	mbyte.c	FUNCTION_115	IF_5
0x4002c90	            0x7508	                           jne 0x4002c9a	      5527	mbyte.c	FUNCTION_115	IF_5
0x4002c92	            0xeb0e	                           jmp 0x4002ca2	      5527	mbyte.c	FUNCTION_115	IF_5
0x4002c94	    0x41beffffffff	                    mov r14d, 0xffffffff	      5490	mbyte.c	FUNCTION_115
0x4002c9a	          0x4c89ef	                            mov rdi, r13	      5528	mbyte.c	FUNCTION_115	CALL_8
0x4002c9d	      0xe800000000	                          call 0x4002ca2	      5528	mbyte.c	FUNCTION_115	CALL_8
0x4002ca2	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5529	mbyte.c	FUNCTION_115	CALL_9
0x4002ca7	      0xe800000000	                          call 0x4002cac	      5529	mbyte.c	FUNCTION_115	CALL_9
0x4002cac	            0xeb06	                           jmp 0x4002cb4	      5531	mbyte.c	FUNCTION_115
0x4002cae	    0x41beffffffff	                    mov r14d, 0xffffffff	      5493	mbyte.c	FUNCTION_115	IF_1
0x4002cb4	          0x4489f0	                           mov eax, r14d	      5532	mbyte.c	FUNCTION_115
0x4002cb7	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      5532	mbyte.c	FUNCTION_115
0x4002cbc	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5532	mbyte.c	FUNCTION_115
0x4002cc5	            0x7414	                            je 0x4002cdb	      5532	mbyte.c	FUNCTION_115
0x4002cc7	            0xeb0d	                           jmp 0x4002cd6	      5532	mbyte.c	FUNCTION_115
0x4002cc9	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	      5527	mbyte.c	FUNCTION_115	IF_5
0x4002cce	    0x41beffffffff	                    mov r14d, 0xffffffff	      5527	mbyte.c	FUNCTION_115	IF_5
0x4002cd4	            0xebc4	                           jmp 0x4002c9a	      5527	mbyte.c	FUNCTION_115	IF_5
0x4002cd6	      0xe800000000	                          call 0x4002cdb	      5532	mbyte.c	FUNCTION_115
0x4002cdb	        0x4883c420	                           add rsp, 0x20	      5532	mbyte.c	FUNCTION_115
0x4002cdf	              0x5b	                                 pop rbx	      5532	mbyte.c	FUNCTION_115
0x4002ce0	              0x5d	                                 pop rbp	      5532	mbyte.c	FUNCTION_115
0x4002ce1	            0x415c	                                 pop r12	      5532	mbyte.c	FUNCTION_115
0x4002ce3	            0x415d	                                 pop r13	      5532	mbyte.c	FUNCTION_115
0x4002ce5	            0x415e	                                 pop r14	      5532	mbyte.c	FUNCTION_115
0x4002ce7	              0xc3	                                     ret	      5532	mbyte.c	FUNCTION_115
utf_composinglike	SWITCH,0:CALL,5:IF,2:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	24
0x4001048	              0x55	                                push rbp	      1955	mbyte.c	FUNCTION_41
0x4001049	              0x53	                                push rbx	      1955	mbyte.c	FUNCTION_41
0x400104a	          0x4889fd	                            mov rbp, rdi	      1955	mbyte.c	FUNCTION_41
0x400104d	          0x4889f7	                            mov rdi, rsi	      1958	mbyte.c	FUNCTION_41	CALL_1
0x4001050	      0xe800000000	                          call 0x4001055	      1958	mbyte.c	FUNCTION_41	CALL_1
0x4001055	            0x89c3	                            mov ebx, eax	      1958	mbyte.c	FUNCTION_41	CALL_1
0x4001057	            0x89c7	                            mov edi, eax	      1959	mbyte.c	FUNCTION_41	IF_1	CALL_2
0x4001059	      0xe800000000	                          call 0x400105e	      1959	mbyte.c	FUNCTION_41	IF_1	CALL_2
0x400105e	            0x89c2	                            mov edx, eax	      1959	mbyte.c	FUNCTION_41	IF_1	CALL_2
0x4001060	      0xb801000000	                              mov eax, 1	      1960	mbyte.c	FUNCTION_41	IF_1
0x4001065	            0x85d2	                           test edx, edx	      1959	mbyte.c	FUNCTION_41	IF_1	CALL_2
0x4001067	            0x751c	                           jne 0x4001085	      1959	mbyte.c	FUNCTION_41	IF_1	CALL_2
0x4001069	            0x89df	                            mov edi, ebx	      1961	mbyte.c	FUNCTION_41	IF_2	CALL_3
0x400106b	      0xe800000000	                          call 0x4001070	      1961	mbyte.c	FUNCTION_41	IF_2	CALL_3
0x4001070	            0x85c0	                           test eax, eax	      1961	mbyte.c	FUNCTION_41	IF_2	CALL_3
0x4001072	            0x7411	                            je 0x4001085	      1961	mbyte.c	FUNCTION_41	IF_2	CALL_3
0x4001074	          0x4889ef	                            mov rdi, rbp	      1963	mbyte.c	FUNCTION_41	CALL_5
0x4001077	      0xe800000000	                          call 0x400107c	      1963	mbyte.c	FUNCTION_41	CALL_5
0x400107c	            0x89de	                            mov esi, ebx	      1963	mbyte.c	FUNCTION_41	CALL_5
0x400107e	            0x89c7	                            mov edi, eax	      1963	mbyte.c	FUNCTION_41	CALL_5
0x4001080	      0xe800000000	                          call 0x4001085	      1963	mbyte.c	FUNCTION_41	CALL_5
0x4001085	              0x5b	                                 pop rbx	      1964	mbyte.c	FUNCTION_41
0x4001086	              0x5d	                                 pop rbp	      1964	mbyte.c	FUNCTION_41
0x4001087	              0xc3	                                     ret	      1964	mbyte.c	FUNCTION_41
latin_char2cells	SWITCH,0:CALL,0:IF,0:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	2
0x40001c3	      0xb801000000	                              mov eax, 1	      1704	mbyte.c	FUNCTION_27
0x40001c8	              0xc3	                                     ret	      1704	mbyte.c	FUNCTION_27
im_is_preediting	SWITCH,0:CALL,0:IF,0:WHILE,0:FOR,0:DO,0:ELSE,0:functions,0	2
0x400348f	    0x8b0500000000	            mov eax, dword [0x04003495] 	      5892	mbyte.c	FUNCTION_125
0x4003495	              0xc3	                                     ret	      5892	mbyte.c	FUNCTION_125
utf_char2cells	SWITCH,0:CALL,6:IF,8:WHILE,0:FOR,0:DO,0:ELSE,1:functions,0	54
0x40015a0	              0x53	                                push rbx	      1418	mbyte.c	FUNCTION_20
0x40015a1	            0x89fb	                            mov ebx, edi	      1418	mbyte.c	FUNCTION_20
0x40015a3	    0x81ffff000000	                           cmp edi, 0xff	      1577	mbyte.c	FUNCTION_20	IF_1
0x40015a9	            0x7e58	                           jle 0x4001603	      1577	mbyte.c	FUNCTION_20	IF_1
0x40015ab	      0xe800000000	                          call 0x40015b0	      1591	mbyte.c	FUNCTION_20	IF_1	IF_4	CALL_2
0x40015b0	            0x89c2	                            mov edx, eax	      1591	mbyte.c	FUNCTION_20	IF_1	IF_4	CALL_2
0x40015b2	      0xb806000000	                              mov eax, 6	      1592	mbyte.c	FUNCTION_20	IF_1	IF_4
0x40015b7	            0x85d2	                           test edx, edx	      1591	mbyte.c	FUNCTION_20	IF_1	IF_4	CALL_2
0x40015b9	     0xf8496000000	                            je 0x4001655	      1591	mbyte.c	FUNCTION_20	IF_1	IF_4	CALL_2
0x40015bf	            0x89da	                            mov edx, ebx	      1593	mbyte.c	FUNCTION_20	IF_1	IF_5	CALL_3
0x40015c1	      0xbea0060000	                          mov esi, 0x6a0	      1593	mbyte.c	FUNCTION_20	IF_1	IF_5	CALL_3
0x40015c6	      0xbf00000000	                              mov edi, 0	      1593	mbyte.c	FUNCTION_20	IF_1	IF_5	CALL_3
0x40015cb	      0xe839ebffff	                        call sym.intable	      1593	mbyte.c	FUNCTION_20	IF_1	IF_5	CALL_3
0x40015d0	            0x89c2	                            mov edx, eax	      1593	mbyte.c	FUNCTION_20	IF_1	IF_5	CALL_3
0x40015d2	      0xb802000000	                              mov eax, 2	      1594	mbyte.c	FUNCTION_20	IF_1	IF_5
0x40015d7	            0x85d2	                           test edx, edx	      1593	mbyte.c	FUNCTION_20	IF_1	IF_5	CALL_3
0x40015d9	            0x757a	                           jne 0x4001655	      1593	mbyte.c	FUNCTION_20	IF_1	IF_5	CALL_3
0x40015db	    0x48833d000000	               cmp qword [0x040015e3], 0	      1596	mbyte.c	FUNCTION_20	IF_1	IF_6	CALL_4
0x40015e3	            0x743a	                            je 0x400161f	      1596	mbyte.c	FUNCTION_20	IF_1	IF_6	CALL_4
0x40015e5	            0x89da	                            mov edx, ebx	      1596	mbyte.c	FUNCTION_20	IF_1	IF_6	CALL_4
0x40015e7	      0xbe70020000	                          mov esi, 0x270	      1596	mbyte.c	FUNCTION_20	IF_1	IF_6	CALL_4
0x40015ec	      0xbf00000000	                              mov edi, 0	      1596	mbyte.c	FUNCTION_20	IF_1	IF_6	CALL_4
0x40015f1	      0xe813ebffff	                        call sym.intable	      1596	mbyte.c	FUNCTION_20	IF_1	IF_6	CALL_4
0x40015f6	            0x89c2	                            mov edx, eax	      1596	mbyte.c	FUNCTION_20	IF_1	IF_6	CALL_4
0x40015f8	      0xb802000000	                              mov eax, 2	      1597	mbyte.c	FUNCTION_20	IF_1	IF_6
0x40015fd	            0x85d2	                           test edx, edx	      1596	mbyte.c	FUNCTION_20	IF_1	IF_6	CALL_4
0x40015ff	            0x7554	                           jne 0x4001655	      1596	mbyte.c	FUNCTION_20	IF_1	IF_6	CALL_4
0x4001601	            0xeb1c	                           jmp 0x400161f	      1596	mbyte.c	FUNCTION_20	IF_1	IF_6	CALL_4
0x4001603	      0xb801000000	                              mov eax, 1	      1607	mbyte.c	FUNCTION_20
0x4001608	          0x83ff7f	                           cmp edi, 0x7f	      1601	mbyte.c	FUNCTION_20	ELSE_1	IF_7	CALL_5
0x400160b	            0x7e48	                           jle 0x4001655	      1601	mbyte.c	FUNCTION_20	ELSE_1	IF_7	CALL_5
0x400160d	      0xe800000000	                          call 0x4001612	      1601	mbyte.c	FUNCTION_20	ELSE_1	IF_7	CALL_5
0x4001612	            0x89c2	                            mov edx, eax	      1601	mbyte.c	FUNCTION_20	ELSE_1	IF_7	CALL_5
0x4001614	      0xb804000000	                              mov eax, 4	      1602	mbyte.c	FUNCTION_20	ELSE_1	IF_7
0x4001619	            0x85d2	                           test edx, edx	      1601	mbyte.c	FUNCTION_20	ELSE_1	IF_7	CALL_5
0x400161b	            0x7438	                            je 0x4001655	      1601	mbyte.c	FUNCTION_20	ELSE_1	IF_7	CALL_5
0x400161d	            0xeb05	                           jmp 0x4001624	      1601	mbyte.c	FUNCTION_20	ELSE_1	IF_7	CALL_5
0x400161f	          0x83fb7f	                           cmp ebx, 0x7f	      1604	mbyte.c	FUNCTION_20	IF_8	CALL_6
0x4001622	            0x7e2c	                           jle 0x4001650	      1604	mbyte.c	FUNCTION_20	IF_8	CALL_6
0x4001624	      0xb801000000	                              mov eax, 1	      1607	mbyte.c	FUNCTION_20
0x4001629	    0x488b15000000	            mov rdx, qword [0x04001630] 	      1604	mbyte.c	FUNCTION_20	IF_8	CALL_6
0x4001630	          0x803a64	                    cmp byte [rdx], 0x64	      1604	mbyte.c	FUNCTION_20	IF_8	CALL_6
0x4001633	            0x7520	                           jne 0x4001655	      1604	mbyte.c	FUNCTION_20	IF_8	CALL_6
0x4001635	            0x89da	                            mov edx, ebx	      1604	mbyte.c	FUNCTION_20	IF_8	CALL_6
0x4001637	      0xbe300b0000	                          mov esi, 0xb30	      1604	mbyte.c	FUNCTION_20	IF_8	CALL_6
0x400163c	      0xbf00000000	                              mov edi, 0	      1604	mbyte.c	FUNCTION_20	IF_8	CALL_6
0x4001641	      0xe8c3eaffff	                        call sym.intable	      1604	mbyte.c	FUNCTION_20	IF_8	CALL_6
0x4001646	          0x83f801	                              cmp eax, 1	      1607	mbyte.c	FUNCTION_20
0x4001649	            0x19c0	                            sbb eax, eax	      1607	mbyte.c	FUNCTION_20
0x400164b	          0x83c002	                              add eax, 2	      1607	mbyte.c	FUNCTION_20
0x400164e	            0xeb05	                           jmp 0x4001655	      1607	mbyte.c	FUNCTION_20
0x4001650	      0xb801000000	                              mov eax, 1	      1607	mbyte.c	FUNCTION_20
0x4001655	              0x5b	                                 pop rbx	      1608	mbyte.c	FUNCTION_20
0x4001656	              0xc3	                                     ret	      1608	mbyte.c	FUNCTION_20
xim_reset	SWITCH,0:CALL,10:IF,6:WHILE,0:FOR,0:DO,0:ELSE,3:functions,0	57
0x4002f79	        0x4883ec18	                           sub rsp, 0x18	      5695	mbyte.c	FUNCTION_121
0x4002f7d	    0x64488b042528	                mov rax, qword fs:[0x28]	      5695	mbyte.c	FUNCTION_121
0x4002f86	      0x4889442408	                mov qword [rsp + 8], rax	      5695	mbyte.c	FUNCTION_121
0x4002f8b	            0x31c0	                            xor eax, eax	      5695	mbyte.c	FUNCTION_121
0x4002f8d	    0x833d00000000	               cmp dword [0x04002f94], 0	      5697	mbyte.c	FUNCTION_121	IF_1
0x4002f94	            0x753c	                           jne 0x4002fd2	      5697	mbyte.c	FUNCTION_121	IF_1
0x4002f96	    0x488b3d000000	            mov rdi, qword [0x04002f9d] 	      5697	mbyte.c	FUNCTION_121	IF_1
0x4002f9d	          0x803f00	                       cmp byte [rdi], 0	      5697	mbyte.c	FUNCTION_121	IF_1
0x4002fa0	            0x7430	                            je 0x4002fd2	      5697	mbyte.c	FUNCTION_121	IF_1
0x4002fa2	    0x833d00000000	               cmp dword [0x04002fa9], 0	      4800	mbyte.c	FUNCTION_95	IF_1
0x4002fa9	      0xba00000000	                              mov edx, 0	      4801	mbyte.c	FUNCTION_95	IF_1
0x4002fae	      0xb800000000	                              mov eax, 0	      4801	mbyte.c	FUNCTION_95	IF_1
0x4002fb3	        0x480f45c2	                         cmovne rax, rdx	      4801	mbyte.c	FUNCTION_95	IF_1
0x4002fb7	        0x48890424	                    mov qword [rsp], rax	      4801	mbyte.c	FUNCTION_95	IF_1
0x4002fbb	      0xb900000000	                              mov ecx, 0	      4804	mbyte.c	FUNCTION_95	CALL_1
0x4002fc0	          0x4889e2	                            mov rdx, rsp	      4804	mbyte.c	FUNCTION_95	CALL_1
0x4002fc3	      0xbe01000000	                              mov esi, 1	      4804	mbyte.c	FUNCTION_95	CALL_1
0x4002fc8	      0xe800000000	                          call 0x4002fcd	      4804	mbyte.c	FUNCTION_95	CALL_1
0x4002fcd	      0xe993000000	                           jmp 0x4003065	      4804	mbyte.c	FUNCTION_95	CALL_1
0x4002fd2	    0x488b3d000000	            mov rdi, qword [0x04002fd9] 	      5701	mbyte.c	FUNCTION_121	ELSE_1	IF_2
0x4002fd9	          0x4885ff	                           test rdi, rdi	      5701	mbyte.c	FUNCTION_121	ELSE_1	IF_2
0x4002fdc	     0xf8483000000	                            je 0x4003065	      5701	mbyte.c	FUNCTION_121	ELSE_1	IF_2
0x4002fe2	      0xe800000000	                          call 0x4002fe7	      5703	mbyte.c	FUNCTION_121	ELSE_1	IF_2	CALL_2
0x4002fe7	    0x833d00000000	               cmp dword [0x04002fee], 0	      5705	mbyte.c	FUNCTION_121	ELSE_1	IF_2	IF_3
0x4002fee	            0x7407	                            je 0x4002ff7	      5705	mbyte.c	FUNCTION_121	ELSE_1	IF_2	IF_3
0x4002ff0	      0xe800000000	                          call 0x4002ff5	      5706	mbyte.c	FUNCTION_121	ELSE_1	IF_2	CALL_3
0x4002ff5	            0xeb6e	                           jmp 0x4003065	      5706	mbyte.c	FUNCTION_121	ELSE_1	IF_2	CALL_3
0x4002ff7	    0x8b3d00000000	            mov edi, dword [0x04002ffd] 	      5709	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	CALL_4
0x4002ffd	      0xe800000000	                          call 0x4003002	      5709	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	CALL_4
0x4003002	    0x813d00000000	       cmp dword [0x0400300c], 0xffffff 	      5711	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4
0x400300c	            0x7442	                            je 0x4003050	      5711	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4
0x400300e	    0x833d00000000	               cmp dword [0x04003015], 0	      5713	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5
0x4003015	            0x744e	                            je 0x4003065	      5713	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5
0x4003017	    0x488b35000000	            mov rsi, qword [0x0400301e] 	      5715	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_5
0x400301e	    0x488b3d000000	            mov rdi, qword [0x04003025] 	      5715	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_5
0x4003025	      0xe800000000	                          call 0x400302a	      5715	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_5
0x400302a	    0x8b3500000000	            mov esi, dword [0x04003030] 	      5716	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_6
0x4003030	    0x8b3d00000000	            mov edi, dword [0x04003036] 	      5716	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_6
0x4003036	      0xe8d7d9ffff	         call sym.im_synthesize_keypress	      5716	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_6
0x400303b	    0x488b35000000	            mov rsi, qword [0x04003042] 	      5718	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_7
0x4003042	    0x488b3d000000	            mov rdi, qword [0x04003049] 	      5718	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_7
0x4003049	      0xe800000000	                          call 0x400304e	      5718	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_7
0x400304e	            0xeb15	                           jmp 0x4003065	      5718	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_7
0x4003050	      0xe800000000	                          call 0x4003055	      5723	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	ELSE_3	CALL_8
0x4003055	      0xe800000000	                          call 0x400305a	      5724	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	ELSE_3	CALL_9
0x400305a	    0x8b3d00000000	            mov edi, dword [0x04003060] 	      5725	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	ELSE_3	CALL_10
0x4003060	      0xe800000000	                          call 0x4003065	      5725	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	ELSE_3	CALL_10
0x4003065	    0x48833d000000	               cmp qword [0x0400306d], 0	      5730	mbyte.c	FUNCTION_121	IF_6
0x400306d	            0x750a	                           jne 0x4003079	      5730	mbyte.c	FUNCTION_121	IF_6
0x400306f	    0xc70500000000	     mov dword [0x04003079], 0x7fffffff 	      5731	mbyte.c	FUNCTION_121	IF_6
0x4003079	    0xc70500000000	               mov dword [0x04003083], 0	      5732	mbyte.c	FUNCTION_121
0x4003083	      0x488b442408	                mov rax, qword [rsp + 8]	      5733	mbyte.c	FUNCTION_121
0x4003088	    0x644833042528	                xor rax, qword fs:[0x28]	      5733	mbyte.c	FUNCTION_121
0x4003091	            0x7405	                            je 0x4003098	      5733	mbyte.c	FUNCTION_121
0x4003093	      0xe800000000	                          call 0x4003098	      5733	mbyte.c	FUNCTION_121
0x4003098	        0x4883c418	                           add rsp, 0x18	      5733	mbyte.c	FUNCTION_121
0x400309c	              0xc3	                                     ret	      5733	mbyte.c	FUNCTION_121
